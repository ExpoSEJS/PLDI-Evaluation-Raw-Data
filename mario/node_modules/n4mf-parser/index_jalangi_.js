J$.iids = {"8":[1,5,1,17],"9":[1,6,1,12],"10":[1,5,1,17],"16":[11,13,11,25],"17":[1,6,1,17],"24":[22,17,22,20],"25":[2,5,2,11],"33":[2,19,2,26],"41":[2,27,2,31],"49":[2,19,2,32],"57":[2,5,2,32],"65":[2,5,2,33],"73":[4,1,4,13],"81":[4,1,4,14],"89":[5,16,5,23],"97":[5,24,5,30],"105":[5,16,5,31],"113":[5,42,5,49],"121":[5,50,5,54],"129":[5,42,5,55],"137":[5,16,5,31],"145":[5,16,5,31],"153":[5,42,5,55],"161":[5,42,5,55],"169":[6,18,6,25],"177":[6,26,6,45],"185":[6,18,6,46],"193":[6,18,6,46],"201":[6,18,6,46],"209":[9,16,9,26],"217":[9,33,9,40],"225":[9,16,9,41],"227":[9,16,9,32],"233":[9,16,9,41],"241":[9,9,9,42],"249":[11,13,11,16],"257":[11,13,11,25],"265":[12,23,12,26],"273":[12,23,12,35],"281":[12,23,12,41],"289":[12,23,12,41],"297":[12,23,12,41],"305":[13,13,13,20],"313":[13,27,13,34],"321":[13,36,13,40],"329":[13,42,13,49],"337":[13,51,13,54],"345":[13,51,13,59],"353":[13,61,13,70],"361":[13,72,13,75],"369":[13,72,13,82],"377":[13,84,13,90],"385":[13,92,13,95],"393":[13,92,13,103],"401":[13,13,13,104],"403":[13,13,13,26],"409":[13,13,13,105],"417":[15,15,15,18],"425":[15,15,15,18],"433":[15,9,15,19],"441":[10,7,16,6],"449":[7,1,17,2],"457":[7,1,17,2],"465":[7,1,17,2],"473":[7,1,17,2],"481":[7,1,17,2],"489":[19,16,19,23],"497":[20,16,20,24],"505":[20,33,20,40],"513":[20,33,20,46],"515":[20,33,20,44],"521":[20,48,20,52],"529":[20,16,20,53],"531":[20,16,20,32],"537":[20,16,20,53],"545":[20,9,20,54],"553":[21,9,21,15],"561":[21,25,21,29],"569":[21,31,21,38],"577":[22,17,22,20],"585":[23,24,23,30],"593":[23,31,23,34],"601":[23,24,23,35],"609":[23,24,23,35],"617":[23,17,23,36],"625":[26,17,26,24],"633":[26,25,26,38],"641":[26,39,26,46],"649":[26,25,26,47],"657":[26,17,26,48],"665":[26,17,26,49],"673":[28,17,28,23],"681":[28,24,28,27],"689":[28,17,28,28],"697":[28,17,28,29],"705":[27,15,29,14],"713":[21,40,30,10],"721":[21,40,30,10],"729":[21,40,30,10],"737":[21,40,30,10],"745":[21,40,30,10],"753":[21,9,30,11],"755":[21,9,21,24],"761":[21,9,30,12],"769":[19,24,31,6],"777":[19,24,31,6],"785":[19,24,31,6],"793":[19,24,31,6],"801":[19,24,31,6],"809":[19,12,31,7],"817":[19,12,31,7],"825":[19,5,31,8],"833":[18,1,32,2],"841":[18,1,32,2],"849":[18,1,32,2],"857":[34,12,34,20],"865":[34,29,34,36],"873":[34,29,34,42],"875":[34,29,34,40],"881":[34,44,34,48],"889":[34,12,34,49],"891":[34,12,34,28],"897":[34,12,34,49],"905":[34,5,34,50],"913":[35,12,35,25],"921":[35,26,35,32],"929":[35,46,35,50],"937":[35,52,35,59],"945":[35,26,35,60],"947":[35,26,35,45],"953":[35,12,35,61],"961":[35,12,35,61],"969":[35,5,35,62],"977":[33,1,36,2],"985":[33,1,36,2],"993":[33,1,36,2],"1001":[37,1,37,7],"1009":[38,20,38,33],"1017":[39,19,39,31],"1025":[40,23,40,39],"1033":[37,18,41,2],"1041":[37,1,41,2],"1049":[37,1,41,3],"1057":[1,1,41,3],"1065":[1,1,41,3],"1073":[1,1,41,3],"1081":[1,1,41,3],"1089":[7,1,17,2],"1097":[1,1,41,3],"1105":[18,1,32,2],"1113":[1,1,41,3],"1121":[33,1,36,2],"1129":[1,1,41,3],"1137":[1,1,3,2],"1145":[11,9,14,10],"1153":[7,1,17,2],"1161":[7,1,17,2],"1169":[22,13,24,14],"1177":[21,40,30,10],"1185":[21,40,30,10],"1193":[19,24,31,6],"1201":[19,24,31,6],"1209":[18,1,32,2],"1217":[18,1,32,2],"1225":[33,1,36,2],"1233":[33,1,36,2],"1241":[1,1,41,3],"1249":[1,1,41,3],"nBranches":6,"originalCodeFileName":"/home/blake/ExpoSE/Targets/mario/node_modules/n4mf-parser/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/mario/node_modules/n4mf-parser/index_jalangi_.js","code":"/*\n * Copyright (c) 2016 NumberFour AG.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html\n *\n * Contributors:\n *   NumberFour AG - Initial API and implementation\n */\n/*eslint-disable no-console */\n\"use strict\";\n\nvar lib_path = require(\"path\"),\n    lib_fs = require(\"fs\");\nvar n4mfParser = require(\"./lib/n4mf-parser\");\n\n/**\n * Parses the given manifest content.\n */\nfunction parseManifest(content, path) {\n    try {\n        return n4mfParser.parse(content);\n    } catch (exc) {\n        if (exc.location) {\n            var loc = exc.location.start;\n            console.error(\"File:\", path, \"line:\", loc.line, \"column:\", loc.column, \"\\n\\n\", exc.message);\n        }\n        throw exc;\n    }\n}\n\n/**\n * Reads the given manifest path and parses its content.\n */\nfunction readManifest(path) {\n    return new Promise(function(resolve, reject) {\n        path = lib_path.resolve(process.cwd(), path);\n        lib_fs.readFile(path, \"UTF-8\", function(err, content) {\n            if (err) {\n                return reject(err);\n            }\n            try {\n                resolve(parseManifest(content));\n            } catch (exc) {\n                reject(exc);\n            }\n        });\n    });\n}\n\n/**\n * Synchronously reads the given manifest path and parses its content.\n */\nfunction readManifestSync(path) {\n    path = lib_path.resolve(process.cwd(), path);\n    return parseManifest(lib_fs.readFileSync(path, \"UTF-8\"));\n}\n\nmodule.exports = {\n    parseManifest: parseManifest,\n    readManifest: readManifest,\n    readManifestSync: readManifestSync\n};\n"};
jalangiLabel26:
    while (true) {
        try {
            J$.Se(1057, '/home/blake/ExpoSE/Targets/mario/node_modules/n4mf-parser/index_jalangi_.js', '/home/blake/ExpoSE/Targets/mario/node_modules/n4mf-parser/index.js');
            function parseManifest(content, path) {
                jalangiLabel21:
                    while (true) {
                        try {
                            J$.Fe(449, arguments.callee, this, arguments);
                            arguments = J$.N(457, 'arguments', arguments, 4);
                            content = J$.N(465, 'content', content, 4);
                            path = J$.N(473, 'path', path, 4);
                            J$.N(481, 'loc', loc, 0);
                            try {
                                return J$.X1(241, J$.Rt(233, J$.M(225, J$.R(209, 'n4mfParser', n4mfParser, 1), 'parse', 0)(J$.R(217, 'content', content, 0))));
                            } catch (exc) {
                                exc = J$.N(441, 'exc', exc, 1);
                                if (J$.X1(1145, J$.C(16, J$.G(257, J$.R(249, 'exc', exc, 0), 'location', 0)))) {
                                    var loc = J$.X1(297, J$.W(289, 'loc', J$.G(281, J$.G(273, J$.R(265, 'exc', exc, 0), 'location', 0), 'start', 0), loc, 1));
                                    J$.X1(409, J$.M(401, J$.R(305, 'console', console, 2), 'error', 0)(J$.T(313, 'File:', 21, false), J$.R(321, 'path', path, 0), J$.T(329, 'line:', 21, false), J$.G(345, J$.R(337, 'loc', loc, 0), 'line', 0), J$.T(353, 'column:', 21, false), J$.G(369, J$.R(361, 'loc', loc, 0), 'column', 0), J$.T(377, '\n\n', 21, false), J$.G(393, J$.R(385, 'exc', exc, 0), 'message', 0)));
                                }
                                throw J$.X1(433, J$.Th(425, J$.R(417, 'exc', exc, 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(1153, J$e);
                        } finally {
                            if (J$.Fr(1161))
                                continue jalangiLabel21;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readManifest(path) {
                jalangiLabel24:
                    while (true) {
                        try {
                            J$.Fe(833, arguments.callee, this, arguments);
                            arguments = J$.N(841, 'arguments', arguments, 4);
                            path = J$.N(849, 'path', path, 4);
                            return J$.X1(825, J$.Rt(817, J$.F(809, J$.R(489, 'Promise', Promise, 2), 1)(J$.T(801, function (resolve, reject) {
                                jalangiLabel23:
                                    while (true) {
                                        try {
                                            J$.Fe(769, arguments.callee, this, arguments);
                                            arguments = J$.N(777, 'arguments', arguments, 4);
                                            resolve = J$.N(785, 'resolve', resolve, 4);
                                            reject = J$.N(793, 'reject', reject, 4);
                                            J$.X1(545, path = J$.W(537, 'path', J$.M(529, J$.R(497, 'lib_path', lib_path, 1), 'resolve', 0)(J$.M(513, J$.R(505, 'process', process, 2), 'cwd', 0)(), J$.R(521, 'path', path, 0)), path, 0));
                                            J$.X1(761, J$.M(753, J$.R(553, 'lib_fs', lib_fs, 1), 'readFile', 0)(J$.R(561, 'path', path, 0), J$.T(569, 'UTF-8', 21, false), J$.T(745, function (err, content) {
                                                jalangiLabel22:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(713, arguments.callee, this, arguments);
                                                            arguments = J$.N(721, 'arguments', arguments, 4);
                                                            err = J$.N(729, 'err', err, 4);
                                                            content = J$.N(737, 'content', content, 4);
                                                            if (J$.X1(1169, J$.C(24, J$.R(577, 'err', err, 0)))) {
                                                                return J$.X1(617, J$.Rt(609, J$.F(601, J$.R(585, 'reject', reject, 0), 0)(J$.R(593, 'err', err, 0))));
                                                            }
                                                            try {
                                                                J$.X1(665, J$.F(657, J$.R(625, 'resolve', resolve, 0), 0)(J$.F(649, J$.R(633, 'parseManifest', parseManifest, 1), 0)(J$.R(641, 'content', content, 0))));
                                                            } catch (exc) {
                                                                exc = J$.N(705, 'exc', exc, 1);
                                                                J$.X1(697, J$.F(689, J$.R(673, 'reject', reject, 0), 0)(J$.R(681, 'exc', exc, 0)));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(1177, J$e);
                                                        } finally {
                                                            if (J$.Fr(1185))
                                                                continue jalangiLabel22;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 713)));
                                        } catch (J$e) {
                                            J$.Ex(1193, J$e);
                                        } finally {
                                            if (J$.Fr(1201))
                                                continue jalangiLabel23;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 769))));
                        } catch (J$e) {
                            J$.Ex(1209, J$e);
                        } finally {
                            if (J$.Fr(1217))
                                continue jalangiLabel24;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function readManifestSync(path) {
                jalangiLabel25:
                    while (true) {
                        try {
                            J$.Fe(977, arguments.callee, this, arguments);
                            arguments = J$.N(985, 'arguments', arguments, 4);
                            path = J$.N(993, 'path', path, 4);
                            J$.X1(905, path = J$.W(897, 'path', J$.M(889, J$.R(857, 'lib_path', lib_path, 1), 'resolve', 0)(J$.M(873, J$.R(865, 'process', process, 2), 'cwd', 0)(), J$.R(881, 'path', path, 0)), path, 0));
                            return J$.X1(969, J$.Rt(961, J$.F(953, J$.R(913, 'parseManifest', parseManifest, 1), 0)(J$.M(945, J$.R(921, 'lib_fs', lib_fs, 1), 'readFileSync', 0)(J$.R(929, 'path', path, 0), J$.T(937, 'UTF-8', 21, false)))));
                        } catch (J$e) {
                            J$.Ex(1225, J$e);
                        } finally {
                            if (J$.Fr(1233))
                                continue jalangiLabel25;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1065, 'lib_path', lib_path, 0);
            J$.N(1073, 'lib_fs', lib_fs, 0);
            J$.N(1081, 'n4mfParser', n4mfParser, 0);
            parseManifest = J$.N(1097, 'parseManifest', J$.T(1089, parseManifest, 12, false, 449), 0);
            readManifest = J$.N(1113, 'readManifest', J$.T(1105, readManifest, 12, false, 833), 0);
            readManifestSync = J$.N(1129, 'readManifestSync', J$.T(1121, readManifestSync, 12, false, 977), 0);
            if (J$.X1(1137, J$.C(8, J$.U(10, '!', J$.G(17, J$.R(9, 'Object', Object, 2), '_s$_', 0))))) {
                J$.X1(65, J$.P(57, J$.R(25, 'Object', Object, 2), '_s$_', J$.F(49, J$.R(33, 'require', require, 2), 0)(J$.T(41, 'S$', 21, false)), 0));
            }
            J$.X1(81, J$.T(73, 'use strict', 21, false));
            var lib_path = J$.X1(145, J$.W(137, 'lib_path', J$.F(105, J$.R(89, 'require', require, 2), 0)(J$.T(97, 'path', 21, false)), lib_path, 3)), lib_fs = J$.X1(161, J$.W(153, 'lib_fs', J$.F(129, J$.R(113, 'require', require, 2), 0)(J$.T(121, 'fs', 21, false)), lib_fs, 3));
            var n4mfParser = J$.X1(201, J$.W(193, 'n4mfParser', J$.F(185, J$.R(169, 'require', require, 2), 0)(J$.T(177, './lib/n4mf-parser', 21, false)), n4mfParser, 3));
            J$.X1(1049, J$.P(1041, J$.R(1001, 'module', module, 2), 'exports', J$.T(1033, {
                parseManifest: J$.R(1009, 'parseManifest', parseManifest, 1),
                readManifest: J$.R(1017, 'readManifest', readManifest, 1),
                readManifestSync: J$.R(1025, 'readManifestSync', readManifestSync, 1)
            }, 11, false), 0));
        } catch (J$e) {
            J$.Ex(1241, J$e);
        } finally {
            if (J$.Sr(1249)) {
                J$.L();
                continue jalangiLabel26;
            } else {
                J$.L();
                break jalangiLabel26;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
