J$.iids = {"8":[1,5,1,17],"9":[1,6,1,12],"10":[1,5,1,17],"16":[10,12,10,33],"17":[1,6,1,17],"18":[14,19,14,39],"24":[10,12,10,33],"25":[2,5,2,11],"26":[14,43,14,69],"32":[14,19,14,69],"33":[2,19,2,26],"34":[19,9,19,28],"40":[14,19,14,69],"41":[2,27,2,31],"42":[29,68,29,130],"48":[17,16,17,38],"49":[2,19,2,32],"50":[31,30,31,57],"56":[18,16,18,38],"57":[2,5,2,32],"58":[31,65,31,71],"64":[19,9,19,28],"65":[2,5,2,33],"66":[32,25,32,46],"72":[31,30,31,57],"73":[4,1,4,13],"74":[32,25,32,46],"80":[29,68,29,130],"81":[4,1,4,14],"82":[33,13,33,23],"88":[40,17,40,63],"89":[5,1,5,7],"96":[40,17,40,63],"97":[5,23,5,30],"98":[40,17,40,43],"104":[44,17,44,34],"105":[5,32,5,44],"106":[49,12,49,25],"113":[5,55,5,59],"114":[49,12,49,31],"121":[5,46,5,61],"129":[5,1,5,62],"131":[5,1,5,22],"137":[5,1,5,63],"145":[6,1,6,8],"153":[6,19,6,25],"161":[6,1,6,25],"169":[6,1,6,26],"177":[7,21,7,28],"185":[7,29,7,50],"193":[7,21,7,51],"201":[7,21,7,51],"209":[7,21,7,51],"217":[8,22,8,44],"225":[8,45,8,58],"233":[8,22,8,59],"241":[8,22,8,59],"249":[8,22,8,59],"257":[10,12,10,15],"265":[10,19,10,22],"273":[10,19,10,33],"281":[10,36,10,39],"289":[10,53,10,56],"297":[10,42,10,58],"305":[10,12,10,58],"313":[10,5,10,59],"321":[9,1,11,2],"329":[9,1,11,2],"337":[9,1,11,2],"345":[12,12,12,36],"353":[12,12,12,36],"361":[12,12,12,36],"369":[14,19,14,28],"377":[14,19,14,35],"385":[14,38,14,39],"393":[14,43,14,52],"401":[14,53,14,54],"409":[14,43,14,55],"417":[14,60,14,69],"425":[14,72,14,81],"433":[14,82,14,83],"441":[14,72,14,84],"449":[14,87,14,89],"457":[14,19,14,89],"465":[14,19,14,89],"473":[15,6,15,7],"481":[15,9,15,23],"489":[15,9,15,31],"497":[15,6,15,7],"505":[15,33,15,36],"513":[15,5,15,37],"521":[15,5,15,38],"529":[16,20,16,24],"537":[16,20,16,24],"545":[16,20,16,24],"553":[17,16,17,23],"561":[17,16,17,38],"569":[17,41,17,49],"577":[17,58,17,61],"585":[17,63,17,65],"593":[17,41,17,66],"595":[17,41,17,57],"601":[17,69,17,77],"609":[17,16,17,77],"617":[17,5,17,78],"625":[18,16,18,23],"633":[18,16,18,38],"641":[18,45,18,51],"649":[18,52,18,60],"657":[18,41,18,61],"665":[18,68,18,74],"673":[18,75,18,83],"681":[18,85,18,88],"689":[18,64,18,89],"697":[18,16,18,89],"705":[18,5,18,90],"713":[19,10,19,18],"721":[19,24,19,27],"729":[19,10,19,28],"731":[19,10,19,23],"737":[20,16,20,21],"745":[20,16,20,21],"753":[20,9,20,22],"761":[22,22,22,25],"769":[22,34,22,37],"777":[22,39,22,41],"785":[22,22,22,42],"787":[22,22,22,33],"793":[22,22,22,42],"801":[22,22,22,42],"809":[23,20,23,21],"817":[23,20,23,21],"825":[23,20,23,21],"833":[24,20,24,21],"841":[24,20,24,21],"849":[24,20,24,21],"857":[25,37,25,41],"865":[25,37,25,41],"873":[25,37,25,41],"881":[26,29,26,34],"889":[26,29,26,34],"897":[26,29,26,34],"905":[27,26,27,35],"913":[27,26,27,35],"921":[27,26,27,35],"929":[29,30,29,40],"937":[29,41,29,47],"945":[29,41,29,56],"953":[29,30,29,59],"955":[29,30,29,57],"961":[29,30,29,59],"969":[29,30,29,59],"977":[29,107,29,116],"985":[29,107,29,123],"987":[29,107,29,121],"993":[29,107,29,123],"1001":[29,98,29,129],"1009":[29,98,29,129],"1017":[29,160,29,164],"1025":[29,160,29,164],"1033":[30,25,30,30],"1041":[30,25,30,36],"1049":[30,25,30,36],"1057":[30,25,30,36],"1065":[31,30,31,35],"1073":[31,30,31,49],"1075":[31,30,31,47],"1081":[31,54,31,57],"1089":[31,60,31,62],"1097":[31,66,31,71],"1105":[31,30,31,71],"1113":[31,30,31,71],"1121":[32,25,32,35],"1129":[32,38,32,46],"1137":[32,13,32,21],"1145":[32,13,32,46],"1153":[32,13,32,47],"1169":[33,15,33,23],"1177":[33,13,33,23],"1185":[33,13,33,24],"1193":[36,29,36,33],"1201":[36,29,36,33],"1209":[36,9,36,34],"1217":[37,26,37,29],"1225":[37,26,37,29],"1233":[37,9,37,30],"1241":[35,7,38,6],"1249":[40,18,40,43],"1257":[40,47,40,56],"1265":[40,47,40,63],"1273":[41,17,41,26],"1281":[41,17,41,35],"1283":[41,17,41,33],"1289":[41,17,41,36],"1297":[44,17,44,34],"1305":[45,23,45,37],"1313":[45,23,45,37],"1321":[45,17,45,38],"1329":[49,12,49,20],"1337":[49,23,49,25],"1345":[49,30,49,31],"1353":[49,12,49,31],"1361":[49,5,49,32],"1369":[13,1,50,2],"1377":[13,1,50,2],"1385":[13,1,50,2],"1393":[13,1,50,2],"1401":[13,1,50,2],"1409":[13,1,50,2],"1417":[13,1,50,2],"1425":[13,1,50,2],"1433":[13,1,50,2],"1441":[13,1,50,2],"1449":[13,1,50,2],"1457":[13,1,50,2],"1465":[13,1,50,2],"1473":[13,1,50,2],"1481":[13,1,50,2],"1489":[51,1,51,7],"1497":[51,18,51,25],"1505":[51,26,51,35],"1513":[51,18,51,36],"1521":[51,1,51,36],"1529":[51,1,51,37],"1537":[1,1,51,37],"1545":[1,1,51,37],"1553":[1,1,51,37],"1561":[9,1,11,2],"1569":[1,1,51,37],"1577":[1,1,51,37],"1585":[13,1,50,2],"1593":[1,1,51,37],"1601":[1,1,3,2],"1609":[10,12,10,58],"1617":[9,1,11,2],"1625":[9,1,11,2],"1633":[14,19,14,89],"1641":[17,16,17,77],"1649":[18,16,18,89],"1657":[19,5,21,6],"1665":[31,30,31,71],"1673":[29,9,34,10],"1681":[29,9,34,10],"1689":[40,13,42,14],"1697":[44,13,46,14],"1705":[13,1,50,2],"1713":[13,1,50,2],"1721":[1,1,51,37],"1729":[1,1,51,37],"nBranches":26,"originalCodeFileName":"/home/blake/ExpoSE/Targets/mario/node_modules/validator/lib/isISSN.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/mario/node_modules/validator/lib/isISSN_jalangi_.js","code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISSN;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar issn = '^\\\\d{4}-?\\\\d{3}[\\\\dX]$';\n\nfunction isISSN(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  (0, _assertString2.default)(str);\n  var testIssn = issn;\n  testIssn = options.require_hyphen ? testIssn.replace('?', '') : testIssn;\n  testIssn = options.case_sensitive ? new RegExp(testIssn) : new RegExp(testIssn, 'i');\n  if (!testIssn.test(str)) {\n    return false;\n  }\n  var issnDigits = str.replace('-', '');\n  var position = 8;\n  var checksum = 0;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = issnDigits[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var digit = _step.value;\n\n      var digitValue = digit.toUpperCase() === 'X' ? 10 : +digit;\n      checksum += digitValue * position;\n      --position;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return checksum % 11 === 0;\n}\nmodule.exports = exports['default'];"};
jalangiLabel185:
    while (true) {
        try {
            J$.Se(1537, '/home/blake/ExpoSE/Targets/mario/node_modules/validator/lib/isISSN_jalangi_.js', '/home/blake/ExpoSE/Targets/mario/node_modules/validator/lib/isISSN.js');
            function _interopRequireDefault(obj) {
                jalangiLabel183:
                    while (true) {
                        try {
                            J$.Fe(321, arguments.callee, this, arguments);
                            arguments = J$.N(329, 'arguments', arguments, 4);
                            obj = J$.N(337, 'obj', obj, 4);
                            return J$.X1(313, J$.Rt(305, J$.X1(1609, J$.C(24, J$.C(16, J$.R(257, 'obj', obj, 0)) ? J$.G(273, J$.R(265, 'obj', obj, 0), '__esModule', 0) : J$._())) ? J$.R(281, 'obj', obj, 0) : J$.T(297, {
                                default: J$.R(289, 'obj', obj, 0)
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(1617, J$e);
                        } finally {
                            if (J$.Fr(1625))
                                continue jalangiLabel183;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isISSN(str) {
                jalangiLabel184:
                    while (true) {
                        try {
                            J$.Fe(1369, arguments.callee, this, arguments);
                            arguments = J$.N(1377, 'arguments', arguments, 4);
                            str = J$.N(1385, 'str', str, 4);
                            J$.N(1393, 'options', options, 0);
                            J$.N(1401, 'testIssn', testIssn, 0);
                            J$.N(1409, 'issnDigits', issnDigits, 0);
                            J$.N(1417, 'position', position, 0);
                            J$.N(1425, 'checksum', checksum, 0);
                            J$.N(1433, '_iteratorNormalCompletion', _iteratorNormalCompletion, 0);
                            J$.N(1441, '_didIteratorError', _didIteratorError, 0);
                            J$.N(1449, '_iteratorError', _iteratorError, 0);
                            J$.N(1457, '_iterator', _iterator, 0);
                            J$.N(1465, '_step', _step, 0);
                            J$.N(1473, 'digit', digit, 0);
                            J$.N(1481, 'digitValue', digitValue, 0);
                            var options = J$.X1(465, J$.W(457, 'options', J$.X1(1633, J$.C(40, J$.C(32, J$.B(18, '>', J$.G(377, J$.R(369, 'arguments', arguments, 2), 'length', 0), J$.T(385, 1, 22, false), 0)) ? J$.B(26, '!==', J$.G(409, J$.R(393, 'arguments', arguments, 2), J$.T(401, 1, 22, false), 4), J$.T(417, undefined, 24, false), 0) : J$._())) ? J$.G(441, J$.R(425, 'arguments', arguments, 2), J$.T(433, 1, 22, false), 4) : J$.T(449, {}, 11, false), options, 1));
                            J$.X1(521, J$.F(513, (J$.X1(497, J$.T(473, 0, 22, false)), J$.G(489, J$.R(481, '_assertString2', _assertString2, 1), 'default', 0)), 0)(J$.R(505, 'str', str, 0)));
                            var testIssn = J$.X1(545, J$.W(537, 'testIssn', J$.R(529, 'issn', issn, 1), testIssn, 1));
                            J$.X1(617, testIssn = J$.W(609, 'testIssn', J$.X1(1641, J$.C(48, J$.G(561, J$.R(553, 'options', options, 0), 'require_hyphen', 0))) ? J$.M(593, J$.R(569, 'testIssn', testIssn, 0), 'replace', 0)(J$.T(577, '?', 21, false), J$.T(585, '', 21, false)) : J$.R(601, 'testIssn', testIssn, 0), testIssn, 0));
                            J$.X1(705, testIssn = J$.W(697, 'testIssn', J$.X1(1649, J$.C(56, J$.G(633, J$.R(625, 'options', options, 0), 'case_sensitive', 0))) ? J$.F(657, J$.R(641, 'RegExp', RegExp, 2), 1)(J$.R(649, 'testIssn', testIssn, 0)) : J$.F(689, J$.R(665, 'RegExp', RegExp, 2), 1)(J$.R(673, 'testIssn', testIssn, 0), J$.T(681, 'i', 21, false)), testIssn, 0));
                            if (J$.X1(1657, J$.C(64, J$.U(34, '!', J$.M(729, J$.R(713, 'testIssn', testIssn, 0), 'test', 0)(J$.R(721, 'str', str, 0)))))) {
                                return J$.X1(753, J$.Rt(745, J$.T(737, false, 23, false)));
                            }
                            var issnDigits = J$.X1(801, J$.W(793, 'issnDigits', J$.M(785, J$.R(761, 'str', str, 0), 'replace', 0)(J$.T(769, '-', 21, false), J$.T(777, '', 21, false)), issnDigits, 1));
                            var position = J$.X1(825, J$.W(817, 'position', J$.T(809, 8, 22, false), position, 1));
                            var checksum = J$.X1(849, J$.W(841, 'checksum', J$.T(833, 0, 22, false), checksum, 1));
                            var _iteratorNormalCompletion = J$.X1(873, J$.W(865, '_iteratorNormalCompletion', J$.T(857, true, 23, false), _iteratorNormalCompletion, 1));
                            var _didIteratorError = J$.X1(897, J$.W(889, '_didIteratorError', J$.T(881, false, 23, false), _didIteratorError, 1));
                            var _iteratorError = J$.X1(921, J$.W(913, '_iteratorError', J$.T(905, undefined, 24, false), _iteratorError, 1));
                            try {
                                for (var _iterator = J$.X1(969, J$.W(961, '_iterator', J$.M(953, J$.R(929, 'issnDigits', issnDigits, 0), J$.G(945, J$.R(937, 'Symbol', Symbol, 2), 'iterator', 0), 1)(), _iterator, 1)), _step; J$.X1(1673, J$.C(80, J$.U(42, '!', _iteratorNormalCompletion = J$.W(1009, '_iteratorNormalCompletion', J$.G(1001, _step = J$.W(993, '_step', J$.M(985, J$.R(977, '_iterator', _iterator, 0), 'next', 0)(), _step, 0), 'done', 0), _iteratorNormalCompletion, 0)))); J$.X1(1681, _iteratorNormalCompletion = J$.W(1025, '_iteratorNormalCompletion', J$.T(1017, true, 23, false), _iteratorNormalCompletion, 0))) {
                                    var digit = J$.X1(1057, J$.W(1049, 'digit', J$.G(1041, J$.R(1033, '_step', _step, 0), 'value', 0), digit, 1));
                                    var digitValue = J$.X1(1113, J$.W(1105, 'digitValue', J$.X1(1665, J$.C(72, J$.B(50, '===', J$.M(1073, J$.R(1065, 'digit', digit, 0), 'toUpperCase', 0)(), J$.T(1081, 'X', 21, false), 0))) ? J$.T(1089, 10, 22, false) : J$.U(58, '+', J$.R(1097, 'digit', digit, 0)), digitValue, 1));
                                    J$.X1(1153, checksum = J$.W(1145, 'checksum', J$.B(74, '+', J$.R(1137, 'checksum', checksum, 0), J$.B(66, '*', J$.R(1121, 'digitValue', digitValue, 0), J$.R(1129, 'position', position, 0), 0), 0), checksum, 0));
                                    J$.X1(1185, position = J$.W(1177, 'position', J$.B(90, '-', J$.U(82, '+', J$.R(1169, 'position', position, 0)), J$.T(1161, 1, 22, false), 0), position, 0));
                                }
                            } catch (err) {
                                err = J$.N(1241, 'err', err, 1);
                                J$.X1(1209, _didIteratorError = J$.W(1201, '_didIteratorError', J$.T(1193, true, 23, false), _didIteratorError, 0));
                                J$.X1(1233, _iteratorError = J$.W(1225, '_iteratorError', J$.R(1217, 'err', err, 0), _iteratorError, 0));
                            } finally {
                                try {
                                    if (J$.X1(1689, J$.C(96, J$.C(88, J$.U(98, '!', J$.R(1249, '_iteratorNormalCompletion', _iteratorNormalCompletion, 0))) ? J$.G(1265, J$.R(1257, '_iterator', _iterator, 0), 'return', 0) : J$._()))) {
                                        J$.X1(1289, J$.M(1281, J$.R(1273, '_iterator', _iterator, 0), 'return', 0)());
                                    }
                                } finally {
                                    if (J$.X1(1697, J$.C(104, J$.R(1297, '_didIteratorError', _didIteratorError, 0)))) {
                                        throw J$.X1(1321, J$.Th(1313, J$.R(1305, '_iteratorError', _iteratorError, 0)));
                                    }
                                }
                            }
                            return J$.X1(1361, J$.Rt(1353, J$.B(114, '===', J$.B(106, '%', J$.R(1329, 'checksum', checksum, 0), J$.T(1337, 11, 22, false), 0), J$.T(1345, 0, 22, false), 0)));
                        } catch (J$e) {
                            J$.Ex(1705, J$e);
                        } finally {
                            if (J$.Fr(1713))
                                continue jalangiLabel184;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1545, '_assertString', _assertString, 0);
            J$.N(1553, '_assertString2', _assertString2, 0);
            _interopRequireDefault = J$.N(1569, '_interopRequireDefault', J$.T(1561, _interopRequireDefault, 12, false, 321), 0);
            J$.N(1577, 'issn', issn, 0);
            isISSN = J$.N(1593, 'isISSN', J$.T(1585, isISSN, 12, false, 1369), 0);
            if (J$.X1(1601, J$.C(8, J$.U(10, '!', J$.G(17, J$.R(9, 'Object', Object, 2), '_s$_', 0))))) {
                J$.X1(65, J$.P(57, J$.R(25, 'Object', Object, 2), '_s$_', J$.F(49, J$.R(33, 'require', require, 2), 0)(J$.T(41, 'S$', 21, false)), 0));
            }
            J$.X1(81, J$.T(73, 'use strict', 21, false));
            J$.X1(137, J$.M(129, J$.R(89, 'Object', Object, 2), 'defineProperty', 0)(J$.R(97, 'exports', exports, 2), J$.T(105, '__esModule', 21, false), J$.T(121, {
                value: J$.T(113, true, 23, false)
            }, 11, false)));
            J$.X1(169, J$.P(161, J$.R(145, 'exports', exports, 2), 'default', J$.R(153, 'isISSN', isISSN, 1), 0));
            var _assertString = J$.X1(209, J$.W(201, '_assertString', J$.F(193, J$.R(177, 'require', require, 2), 0)(J$.T(185, './util/assertString', 21, false)), _assertString, 3));
            var _assertString2 = J$.X1(249, J$.W(241, '_assertString2', J$.F(233, J$.R(217, '_interopRequireDefault', _interopRequireDefault, 1), 0)(J$.R(225, '_assertString', _assertString, 1)), _assertString2, 3));
            var issn = J$.X1(361, J$.W(353, 'issn', J$.T(345, '^\\d{4}-?\\d{3}[\\dX]$', 21, false), issn, 3));
            J$.X1(1529, J$.P(1521, J$.R(1489, 'module', module, 2), 'exports', J$.G(1513, J$.R(1497, 'exports', exports, 2), J$.T(1505, 'default', 21, false), 4), 0));
        } catch (J$e) {
            J$.Ex(1721, J$e);
        } finally {
            if (J$.Sr(1729)) {
                J$.L();
                continue jalangiLabel185;
            } else {
                J$.L();
                break jalangiLabel185;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
