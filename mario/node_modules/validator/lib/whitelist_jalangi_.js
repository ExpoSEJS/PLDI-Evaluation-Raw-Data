J$.iids = {"8":[1,5,1,17],"9":[1,6,1,12],"10":[1,5,1,17],"16":[10,12,10,33],"17":[1,6,1,17],"18":[14,35,14,47],"24":[10,12,10,33],"25":[2,5,2,11],"26":[14,35,14,54],"33":[2,19,2,26],"41":[2,27,2,31],"49":[2,19,2,32],"57":[2,5,2,32],"65":[2,5,2,33],"73":[4,1,4,13],"81":[4,1,4,14],"89":[5,1,5,7],"97":[5,23,5,30],"105":[5,32,5,44],"113":[5,55,5,59],"121":[5,46,5,61],"129":[5,1,5,62],"131":[5,1,5,22],"137":[5,1,5,63],"145":[6,1,6,8],"153":[6,19,6,28],"161":[6,1,6,28],"169":[6,1,6,29],"177":[7,21,7,28],"185":[7,29,7,50],"193":[7,21,7,51],"201":[7,21,7,51],"209":[7,21,7,51],"217":[8,22,8,44],"225":[8,45,8,58],"233":[8,22,8,59],"241":[8,22,8,59],"249":[8,22,8,59],"257":[10,12,10,15],"265":[10,19,10,22],"273":[10,19,10,33],"281":[10,36,10,39],"289":[10,53,10,56],"297":[10,42,10,58],"305":[10,12,10,58],"313":[10,5,10,59],"321":[9,1,11,2],"329":[9,1,11,2],"337":[9,1,11,2],"345":[13,6,13,7],"353":[13,9,13,23],"361":[13,9,13,31],"369":[13,6,13,7],"377":[13,33,13,36],"385":[13,5,13,37],"393":[13,5,13,38],"401":[14,12,14,15],"409":[14,28,14,34],"417":[14,35,14,39],"425":[14,42,14,47],"433":[14,50,14,54],"441":[14,56,14,59],"449":[14,24,14,60],"457":[14,62,14,64],"465":[14,12,14,65],"467":[14,12,14,23],"473":[14,12,14,65],"481":[14,5,14,66],"489":[12,1,15,2],"497":[12,1,15,2],"505":[12,1,15,2],"513":[12,1,15,2],"521":[16,1,16,7],"529":[16,18,16,25],"537":[16,26,16,35],"545":[16,18,16,36],"553":[16,1,16,36],"561":[16,1,16,37],"569":[1,1,16,37],"577":[1,1,16,37],"585":[1,1,16,37],"593":[9,1,11,2],"601":[1,1,16,37],"609":[12,1,15,2],"617":[1,1,16,37],"625":[1,1,3,2],"633":[10,12,10,58],"641":[9,1,11,2],"649":[9,1,11,2],"657":[12,1,15,2],"665":[12,1,15,2],"673":[1,1,16,37],"681":[1,1,16,37],"nBranches":6,"originalCodeFileName":"/home/blake/ExpoSE/Targets/mario/node_modules/validator/lib/whitelist.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/mario/node_modules/validator/lib/whitelist_jalangi_.js","code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = whitelist;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction whitelist(str, chars) {\n  (0, _assertString2.default)(str);\n  return str.replace(new RegExp('[^' + chars + ']+', 'g'), '');\n}\nmodule.exports = exports['default'];"};
jalangiLabel238:
    while (true) {
        try {
            J$.Se(569, '/home/blake/ExpoSE/Targets/mario/node_modules/validator/lib/whitelist_jalangi_.js', '/home/blake/ExpoSE/Targets/mario/node_modules/validator/lib/whitelist.js');
            function _interopRequireDefault(obj) {
                jalangiLabel236:
                    while (true) {
                        try {
                            J$.Fe(321, arguments.callee, this, arguments);
                            arguments = J$.N(329, 'arguments', arguments, 4);
                            obj = J$.N(337, 'obj', obj, 4);
                            return J$.X1(313, J$.Rt(305, J$.X1(633, J$.C(24, J$.C(16, J$.R(257, 'obj', obj, 0)) ? J$.G(273, J$.R(265, 'obj', obj, 0), '__esModule', 0) : J$._())) ? J$.R(281, 'obj', obj, 0) : J$.T(297, {
                                default: J$.R(289, 'obj', obj, 0)
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(641, J$e);
                        } finally {
                            if (J$.Fr(649))
                                continue jalangiLabel236;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function whitelist(str, chars) {
                jalangiLabel237:
                    while (true) {
                        try {
                            J$.Fe(489, arguments.callee, this, arguments);
                            arguments = J$.N(497, 'arguments', arguments, 4);
                            str = J$.N(505, 'str', str, 4);
                            chars = J$.N(513, 'chars', chars, 4);
                            J$.X1(393, J$.F(385, (J$.X1(369, J$.T(345, 0, 22, false)), J$.G(361, J$.R(353, '_assertString2', _assertString2, 1), 'default', 0)), 0)(J$.R(377, 'str', str, 0)));
                            return J$.X1(481, J$.Rt(473, J$.M(465, J$.R(401, 'str', str, 0), 'replace', 0)(J$.F(449, J$.R(409, 'RegExp', RegExp, 2), 1)(J$.B(26, '+', J$.B(18, '+', J$.T(417, '[^', 21, false), J$.R(425, 'chars', chars, 0), 0), J$.T(433, ']+', 21, false), 0), J$.T(441, 'g', 21, false)), J$.T(457, '', 21, false))));
                        } catch (J$e) {
                            J$.Ex(657, J$e);
                        } finally {
                            if (J$.Fr(665))
                                continue jalangiLabel237;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(577, '_assertString', _assertString, 0);
            J$.N(585, '_assertString2', _assertString2, 0);
            _interopRequireDefault = J$.N(601, '_interopRequireDefault', J$.T(593, _interopRequireDefault, 12, false, 321), 0);
            whitelist = J$.N(617, 'whitelist', J$.T(609, whitelist, 12, false, 489), 0);
            if (J$.X1(625, J$.C(8, J$.U(10, '!', J$.G(17, J$.R(9, 'Object', Object, 2), '_s$_', 0))))) {
                J$.X1(65, J$.P(57, J$.R(25, 'Object', Object, 2), '_s$_', J$.F(49, J$.R(33, 'require', require, 2), 0)(J$.T(41, 'S$', 21, false)), 0));
            }
            J$.X1(81, J$.T(73, 'use strict', 21, false));
            J$.X1(137, J$.M(129, J$.R(89, 'Object', Object, 2), 'defineProperty', 0)(J$.R(97, 'exports', exports, 2), J$.T(105, '__esModule', 21, false), J$.T(121, {
                value: J$.T(113, true, 23, false)
            }, 11, false)));
            J$.X1(169, J$.P(161, J$.R(145, 'exports', exports, 2), 'default', J$.R(153, 'whitelist', whitelist, 1), 0));
            var _assertString = J$.X1(209, J$.W(201, '_assertString', J$.F(193, J$.R(177, 'require', require, 2), 0)(J$.T(185, './util/assertString', 21, false)), _assertString, 3));
            var _assertString2 = J$.X1(249, J$.W(241, '_assertString2', J$.F(233, J$.R(217, '_interopRequireDefault', _interopRequireDefault, 1), 0)(J$.R(225, '_assertString', _assertString, 1)), _assertString2, 3));
            J$.X1(561, J$.P(553, J$.R(521, 'module', module, 2), 'exports', J$.G(545, J$.R(529, 'exports', exports, 2), J$.T(537, 'default', 21, false), 4), 0));
        } catch (J$e) {
            J$.Ex(673, J$e);
        } finally {
            if (J$.Sr(681)) {
                J$.L();
                continue jalangiLabel238;
            } else {
                J$.L();
                break jalangiLabel238;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
