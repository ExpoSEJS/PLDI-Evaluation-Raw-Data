J$.iids = {"8":[1,5,1,17],"9":[1,6,1,12],"10":[1,5,1,17],"16":[10,12,10,33],"17":[1,6,1,17],"24":[10,12,10,33],"25":[2,5,2,11],"33":[2,19,2,26],"41":[2,27,2,31],"49":[2,19,2,32],"57":[2,5,2,32],"65":[2,5,2,33],"73":[4,1,4,13],"81":[4,1,4,14],"89":[5,1,5,7],"97":[5,23,5,30],"105":[5,32,5,44],"113":[5,55,5,59],"121":[5,46,5,61],"129":[5,1,5,62],"131":[5,1,5,22],"137":[5,1,5,63],"145":[6,1,6,8],"153":[6,19,6,34],"161":[6,1,6,34],"169":[6,1,6,35],"177":[7,21,7,28],"185":[7,29,7,50],"193":[7,21,7,51],"201":[7,21,7,51],"209":[7,21,7,51],"217":[8,22,8,44],"225":[8,45,8,58],"233":[8,22,8,59],"241":[8,22,8,59],"249":[8,22,8,59],"257":[10,12,10,15],"265":[10,19,10,22],"273":[10,19,10,33],"281":[10,36,10,39],"289":[10,53,10,56],"297":[10,42,10,58],"305":[10,12,10,58],"313":[10,5,10,59],"321":[9,1,11,2],"329":[9,1,11,2],"337":[9,1,11,2],"345":[12,21,12,53],"353":[12,21,12,53],"361":[12,21,12,53],"369":[14,6,14,7],"377":[14,9,14,23],"385":[14,9,14,31],"393":[14,6,14,7],"401":[14,33,14,36],"409":[14,5,14,37],"417":[14,5,14,38],"425":[15,12,15,25],"433":[15,31,15,34],"441":[15,12,15,35],"443":[15,12,15,30],"449":[15,12,15,35],"457":[15,5,15,36],"465":[13,1,16,2],"473":[13,1,16,2],"481":[13,1,16,2],"489":[17,1,17,7],"497":[17,18,17,25],"505":[17,26,17,35],"513":[17,18,17,36],"521":[17,1,17,36],"529":[17,1,17,37],"537":[1,1,17,37],"545":[1,1,17,37],"553":[1,1,17,37],"561":[9,1,11,2],"569":[1,1,17,37],"577":[1,1,17,37],"585":[13,1,16,2],"593":[1,1,17,37],"601":[1,1,3,2],"609":[10,12,10,58],"617":[9,1,11,2],"625":[9,1,11,2],"633":[13,1,16,2],"641":[13,1,16,2],"649":[1,1,17,37],"657":[1,1,17,37],"nBranches":6,"originalCodeFileName":"/home/blake/ExpoSE/Targets/mario/node_modules/validator/lib/isSurrogatePair.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/mario/node_modules/validator/lib/isSurrogatePair_jalangi_.js","code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isSurrogatePair;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar surrogatePair = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/;\n\nfunction isSurrogatePair(str) {\n  (0, _assertString2.default)(str);\n  return surrogatePair.test(str);\n}\nmodule.exports = exports['default'];"};
jalangiLabel117:
    while (true) {
        try {
            J$.Se(537, '/home/blake/ExpoSE/Targets/mario/node_modules/validator/lib/isSurrogatePair_jalangi_.js', '/home/blake/ExpoSE/Targets/mario/node_modules/validator/lib/isSurrogatePair.js');
            function _interopRequireDefault(obj) {
                jalangiLabel115:
                    while (true) {
                        try {
                            J$.Fe(321, arguments.callee, this, arguments);
                            arguments = J$.N(329, 'arguments', arguments, 4);
                            obj = J$.N(337, 'obj', obj, 4);
                            return J$.X1(313, J$.Rt(305, J$.X1(609, J$.C(24, J$.C(16, J$.R(257, 'obj', obj, 0)) ? J$.G(273, J$.R(265, 'obj', obj, 0), '__esModule', 0) : J$._())) ? J$.R(281, 'obj', obj, 0) : J$.T(297, {
                                default: J$.R(289, 'obj', obj, 0)
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(617, J$e);
                        } finally {
                            if (J$.Fr(625))
                                continue jalangiLabel115;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isSurrogatePair(str) {
                jalangiLabel116:
                    while (true) {
                        try {
                            J$.Fe(465, arguments.callee, this, arguments);
                            arguments = J$.N(473, 'arguments', arguments, 4);
                            str = J$.N(481, 'str', str, 4);
                            J$.X1(417, J$.F(409, (J$.X1(393, J$.T(369, 0, 22, false)), J$.G(385, J$.R(377, '_assertString2', _assertString2, 1), 'default', 0)), 0)(J$.R(401, 'str', str, 0)));
                            return J$.X1(457, J$.Rt(449, J$.M(441, J$.R(425, 'surrogatePair', surrogatePair, 1), 'test', 0)(J$.R(433, 'str', str, 0))));
                        } catch (J$e) {
                            J$.Ex(633, J$e);
                        } finally {
                            if (J$.Fr(641))
                                continue jalangiLabel116;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(545, '_assertString', _assertString, 0);
            J$.N(553, '_assertString2', _assertString2, 0);
            _interopRequireDefault = J$.N(569, '_interopRequireDefault', J$.T(561, _interopRequireDefault, 12, false, 321), 0);
            J$.N(577, 'surrogatePair', surrogatePair, 0);
            isSurrogatePair = J$.N(593, 'isSurrogatePair', J$.T(585, isSurrogatePair, 12, false, 465), 0);
            if (J$.X1(601, J$.C(8, J$.U(10, '!', J$.G(17, J$.R(9, 'Object', Object, 2), '_s$_', 0))))) {
                J$.X1(65, J$.P(57, J$.R(25, 'Object', Object, 2), '_s$_', J$.F(49, J$.R(33, 'require', require, 2), 0)(J$.T(41, 'S$', 21, false)), 0));
            }
            J$.X1(81, J$.T(73, 'use strict', 21, false));
            J$.X1(137, J$.M(129, J$.R(89, 'Object', Object, 2), 'defineProperty', 0)(J$.R(97, 'exports', exports, 2), J$.T(105, '__esModule', 21, false), J$.T(121, {
                value: J$.T(113, true, 23, false)
            }, 11, false)));
            J$.X1(169, J$.P(161, J$.R(145, 'exports', exports, 2), 'default', J$.R(153, 'isSurrogatePair', isSurrogatePair, 1), 0));
            var _assertString = J$.X1(209, J$.W(201, '_assertString', J$.F(193, J$.R(177, 'require', require, 2), 0)(J$.T(185, './util/assertString', 21, false)), _assertString, 3));
            var _assertString2 = J$.X1(249, J$.W(241, '_assertString2', J$.F(233, J$.R(217, '_interopRequireDefault', _interopRequireDefault, 1), 0)(J$.R(225, '_assertString', _assertString, 1)), _assertString2, 3));
            var surrogatePair = J$.X1(361, J$.W(353, 'surrogatePair', J$.T(345, /[\uD800-\uDBFF][\uDC00-\uDFFF]/, 14, false), surrogatePair, 3));
            J$.X1(529, J$.P(521, J$.R(489, 'module', module, 2), 'exports', J$.G(513, J$.R(497, 'exports', exports, 2), J$.T(505, 'default', 21, false), 4), 0));
        } catch (J$e) {
            J$.Ex(649, J$e);
        } finally {
            if (J$.Sr(657)) {
                J$.L();
                continue jalangiLabel117;
            } else {
                J$.L();
                break jalangiLabel117;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
