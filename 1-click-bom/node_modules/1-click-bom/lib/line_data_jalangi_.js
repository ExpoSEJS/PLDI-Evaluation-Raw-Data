J$.iids = {"8":[22,20,22,52],"9":[1,20,1,27],"10":[17,12,17,46],"16":[28,13,28,40],"17":[1,28,1,32],"18":[22,28,22,52],"24":[32,17,32,41],"25":[1,20,1,33],"26":[28,13,28,40],"32":[53,17,53,73],"33":[1,20,1,33],"34":[29,21,29,22],"40":[56,25,56,43],"41":[1,20,1,33],"42":[32,17,32,41],"48":[59,25,59,44],"49":[2,26,2,38],"50":[33,24,33,32],"56":[55,21,55,30],"57":[2,26,2,45],"58":[49,25,49,46],"64":[53,17,53,73],"65":[2,26,2,45],"66":[49,48,49,55],"72":[51,30,51,52],"73":[2,26,2,45],"80":[87,37,87,78],"81":[3,1,3,13],"82":[49,48,49,55],"88":[86,33,86,58],"89":[3,1,3,14],"90":[51,30,51,52],"96":[84,89,84,154],"97":[5,5,5,14],"98":[51,54,51,62],"104":[98,33,98,81],"105":[6,5,6,13],"112":[98,33,98,81],"113":[7,5,7,9],"114":[51,54,51,62],"120":[102,33,102,51],"121":[8,5,8,13],"122":[53,17,53,33],"128":[114,41,114,74],"129":[9,5,9,14],"130":[53,37,53,73],"136":[114,40,114,120],"137":[4,21,10,2],"138":[55,21,55,30],"144":[116,33,116,46],"145":[4,21,10,2],"146":[56,25,56,43],"152":[111,93,111,158],"153":[4,21,10,2],"154":[59,25,59,44],"160":[125,33,125,81],"161":[11,1,11,8],"162":[75,68,75,130],"168":[125,33,125,81],"169":[11,25,11,38],"170":[77,21,77,56],"176":[129,33,129,51],"177":[11,1,11,38],"178":[84,89,84,154],"184":[134,25,134,39],"185":[11,1,11,39],"186":[86,33,86,58],"192":[77,21,77,56],"193":[12,1,12,8],"194":[87,37,87,78],"200":[75,68,75,130],"201":[13,5,13,18],"202":[98,33,98,60],"208":[145,21,145,67],"209":[14,5,14,18],"210":[111,93,111,158],"216":[145,21,145,67],"217":[12,22,15,2],"218":[114,49,114,74],"224":[149,21,149,38],"225":[12,1,15,2],"226":[114,79,114,120],"232":[154,13,154,20],"233":[12,1,15,3],"234":[113,45,115,38],"240":[49,25,49,46],"241":[16,1,16,8],"242":[125,33,125,60],"248":[162,97,162,126],"249":[17,12,17,19],"250":[134,25,134,39],"257":[17,34,17,39],"258":[145,21,145,47],"265":[17,12,17,40],"266":[154,13,154,20],"267":[17,12,17,33],"273":[17,45,17,46],"274":[162,22,162,66],"281":[17,12,17,46],"282":[162,22,162,83],"289":[17,5,17,47],"290":[162,97,162,109],"297":[16,22,18,2],"298":[162,97,162,113],"305":[16,22,18,2],"306":[163,24,163,29],"313":[16,22,18,2],"314":[162,22,164,15],"321":[16,22,18,2],"322":[162,22,164,25],"329":[16,1,18,2],"330":[164,31,164,43],"337":[16,1,18,3],"338":[164,29,164,48],"345":[19,1,19,8],"346":[162,22,164,49],"353":[20,12,20,17],"354":[162,22,164,78],"361":[21,16,21,29],"369":[22,20,22,24],"377":[22,28,22,32],"385":[22,28,22,42],"393":[22,43,22,44],"401":[22,28,22,45],"409":[22,50,22,52],"417":[22,20,22,52],"425":[22,13,22,53],"433":[21,37,23,10],"441":[21,37,23,10],"449":[21,37,23,10],"457":[21,37,23,10],"465":[21,37,23,10],"473":[23,12,23,16],"481":[21,16,23,17],"483":[21,16,21,36],"489":[21,16,23,17],"497":[21,9,23,18],"505":[20,25,24,6],"513":[20,25,24,6],"521":[20,25,24,6],"529":[20,25,24,6],"537":[20,25,24,6],"545":[24,8,24,13],"553":[20,12,24,14],"555":[20,12,20,24],"561":[20,12,24,14],"569":[20,5,24,15],"577":[19,19,25,2],"585":[19,19,25,2],"593":[19,19,25,2],"601":[19,19,25,2],"609":[19,1,25,2],"617":[19,1,25,3],"625":[26,1,26,8],"633":[27,12,27,17],"641":[28,13,28,17],"649":[28,13,28,29],"657":[28,13,28,36],"665":[28,39,28,40],"673":[29,21,29,22],"681":[29,13,29,17],"689":[29,13,29,22],"697":[29,13,29,23],"705":[31,16,31,29],"713":[32,17,32,21],"721":[32,17,32,31],"729":[32,32,32,33],"737":[32,17,32,34],"745":[32,39,32,41],"753":[33,24,33,28],"761":[33,31,33,32],"769":[33,24,33,32],"777":[33,17,33,33],"785":[35,20,35,24],"793":[35,20,35,24],"801":[35,13,35,25],"809":[31,37,36,10],"817":[31,37,36,10],"825":[31,37,36,10],"833":[31,37,36,10],"841":[31,37,36,10],"849":[36,12,36,16],"857":[31,16,36,17],"859":[31,16,31,36],"865":[31,16,36,17],"873":[31,9,36,18],"881":[27,25,37,6],"889":[27,25,37,6],"897":[27,25,37,6],"905":[27,25,37,6],"913":[27,25,37,6],"921":[37,8,37,9],"929":[27,12,37,10],"931":[27,12,27,24],"937":[27,12,37,10],"945":[27,5,37,11],"953":[26,25,38,2],"961":[26,25,38,2],"969":[26,25,38,2],"977":[26,25,38,2],"985":[26,25,38,2],"993":[26,1,38,2],"1001":[26,1,38,3],"1009":[39,1,39,8],"1017":[40,12,40,17],"1025":[41,16,41,20],"1033":[41,25,41,29],"1041":[41,31,41,35],"1049":[41,31,41,47],"1057":[41,31,41,54],"1065":[41,16,41,55],"1067":[41,16,41,24],"1073":[41,16,41,55],"1081":[41,9,41,56],"1089":[40,25,42,6],"1097":[40,25,42,6],"1105":[40,25,42,6],"1113":[40,25,42,6],"1121":[40,25,42,6],"1129":[42,8,42,9],"1137":[40,12,42,10],"1139":[40,12,40,24],"1145":[40,12,42,10],"1153":[40,5,42,11],"1161":[39,19,43,2],"1169":[39,19,43,2],"1177":[39,19,43,2],"1185":[39,19,43,2],"1193":[39,19,43,2],"1201":[39,1,43,2],"1209":[39,1,43,3],"1217":[44,1,44,8],"1225":[46,20,46,22],"1233":[46,20,46,22],"1241":[46,20,46,22],"1249":[47,22,47,24],"1257":[47,22,47,24],"1265":[47,22,47,24],"1273":[48,18,48,24],"1281":[48,18,48,24],"1289":[48,18,48,24],"1297":[49,22,49,23],"1305":[49,22,49,23],"1313":[49,22,49,23],"1321":[49,25,49,30],"1329":[49,33,49,39],"1337":[49,33,49,46],"1353":[49,48,49,53],"1361":[49,48,49,55],"1377":[50,21,50,27],"1385":[50,28,50,33],"1393":[50,21,50,34],"1401":[50,21,50,34],"1409":[50,21,50,34],"1417":[51,27,51,28],"1425":[51,27,51,28],"1433":[51,27,51,28],"1441":[51,30,51,36],"1449":[51,39,51,45],"1457":[51,39,51,52],"1473":[51,54,51,60],"1481":[51,54,51,62],"1497":[52,26,52,32],"1505":[52,33,52,39],"1513":[52,26,52,40],"1521":[52,26,52,40],"1529":[52,26,52,40],"1537":[53,17,53,22],"1545":[53,27,53,33],"1553":[53,37,53,42],"1561":[53,37,53,52],"1569":[53,57,53,63],"1577":[53,57,53,73],"1585":[54,21,54,31],"1593":[54,32,54,37],"1601":[54,32,54,47],"1609":[54,21,54,48],"1617":[54,21,54,48],"1625":[54,17,54,49],"1633":[55,21,55,22],"1641":[55,26,55,30],"1649":[56,26,56,27],"1657":[56,37,56,42],"1665":[56,26,56,43],"1667":[56,26,56,36],"1673":[57,25,57,26],"1681":[57,32,57,37],"1689":[57,25,57,38],"1691":[57,25,57,31],"1697":[57,25,57,39],"1705":[59,26,59,27],"1713":[59,37,59,43],"1721":[59,26,59,44],"1723":[59,26,59,36],"1729":[60,25,60,26],"1737":[60,32,60,38],"1745":[60,25,60,39],"1747":[60,25,60,31],"1753":[60,25,60,40],"1761":[63,21,63,31],"1769":[63,32,63,37],"1777":[63,32,63,47],"1785":[64,25,64,30],"1793":[65,25,65,31],"1801":[63,51,66,22],"1809":[63,21,66,22],"1817":[63,21,66,23],"1825":[70,22,70,27],"1833":[70,22,70,27],"1841":[70,22,70,27],"1849":[71,41,71,45],"1857":[71,41,71,45],"1865":[71,41,71,45],"1873":[72,33,72,38],"1881":[72,33,72,38],"1889":[72,33,72,38],"1897":[73,30,73,39],"1905":[73,30,73,39],"1913":[73,30,73,39],"1921":[75,34,75,40],"1929":[75,41,75,47],"1937":[75,41,75,56],"1945":[75,34,75,59],"1947":[75,34,75,57],"1953":[75,34,75,59],"1961":[75,34,75,59],"1969":[75,107,75,116],"1977":[75,107,75,123],"1979":[75,107,75,121],"1985":[75,107,75,123],"1993":[75,98,75,129],"2001":[75,98,75,129],"2009":[75,160,75,164],"2017":[75,160,75,164],"2025":[76,29,76,34],"2033":[76,29,76,40],"2041":[76,29,76,40],"2049":[76,29,76,40],"2057":[77,21,77,26],"2065":[77,21,77,36],"2073":[77,41,77,46],"2081":[77,41,77,56],"2089":[78,30,78,34],"2097":[78,30,78,34],"2105":[78,21,78,35],"2113":[79,41,79,46],"2121":[79,41,79,46],"2129":[79,41,79,46],"2137":[80,54,80,58],"2145":[80,54,80,58],"2153":[80,54,80,58],"2161":[81,46,81,51],"2169":[81,46,81,51],"2177":[81,46,81,51],"2185":[82,43,82,52],"2193":[82,43,82,52],"2201":[82,43,82,52],"2209":[84,47,84,60],"2217":[84,61,84,67],"2225":[84,61,84,76],"2233":[84,47,84,79],"2235":[84,47,84,77],"2241":[84,47,84,79],"2249":[84,47,84,79],"2257":[84,130,84,140],"2265":[84,130,84,147],"2267":[84,130,84,145],"2273":[84,130,84,147],"2281":[84,120,84,153],"2289":[84,120,84,153],"2297":[84,185,84,189],"2305":[84,185,84,189],"2313":[85,37,85,43],"2321":[85,37,85,49],"2329":[85,37,85,49],"2337":[85,37,85,49],"2345":[86,33,86,38],"2353":[86,33,86,48],"2361":[86,49,86,50],"2369":[86,33,86,51],"2377":[86,56,86,58],"2385":[87,37,87,42],"2393":[87,37,87,52],"2401":[87,53,87,54],"2409":[87,37,87,55],"2417":[87,60,87,65],"2425":[87,60,87,75],"2433":[87,76,87,77],"2441":[87,60,87,78],"2449":[88,53,88,57],"2457":[88,53,88,57],"2465":[88,37,88,58],"2473":[90,33,90,38],"2481":[90,33,90,48],"2489":[90,49,90,50],"2497":[90,54,90,59],"2505":[90,54,90,69],"2513":[90,70,90,71],"2521":[90,54,90,72],"2529":[90,33,90,72],"2537":[90,33,90,73],"2545":[94,46,94,50],"2553":[94,46,94,50],"2561":[94,25,94,51],"2569":[95,43,95,46],"2577":[95,43,95,46],"2585":[95,25,95,47],"2593":[93,23,96,22],"2601":[98,34,98,60],"2609":[98,64,98,74],"2617":[98,64,98,81],"2625":[99,33,99,43],"2633":[99,33,99,52],"2635":[99,33,99,50],"2641":[99,33,99,53],"2649":[102,33,102,51],"2657":[103,39,103,54],"2665":[103,39,103,54],"2673":[103,33,103,55],"2681":[107,54,107,58],"2689":[107,54,107,58],"2697":[107,54,107,58],"2705":[108,46,108,51],"2713":[108,46,108,51],"2721":[108,46,108,51],"2729":[109,43,109,52],"2737":[109,43,109,52],"2745":[109,43,109,52],"2753":[111,47,111,52],"2761":[111,47,111,64],"2769":[111,65,111,71],"2777":[111,65,111,80],"2785":[111,47,111,83],"2787":[111,47,111,81],"2793":[111,47,111,83],"2801":[111,47,111,83],"2809":[111,134,111,144],"2817":[111,134,111,151],"2819":[111,134,111,149],"2825":[111,134,111,151],"2833":[111,124,111,157],"2841":[111,124,111,157],"2849":[111,189,111,193],"2857":[111,189,111,193],"2865":[112,41,112,47],"2873":[112,41,112,53],"2881":[112,41,112,53],"2889":[112,41,112,53],"2897":[113,46,113,51],"2905":[113,46,113,63],"2913":[114,41,114,45],"2921":[114,49,114,54],"2929":[114,49,114,59],"2937":[114,64,114,69],"2945":[114,64,114,74],"2953":[114,79,114,84],"2961":[114,79,114,97],"2969":[114,102,114,107],"2977":[114,102,114,120],"2985":[114,40,114,120],"2993":[114,33,114,121],"3001":[113,71,115,30],"3009":[113,71,115,30],"3017":[113,71,115,30],"3025":[113,71,115,30],"3033":[113,71,115,30],"3041":[115,32,115,37],"3049":[113,46,115,38],"3051":[113,46,113,70],"3057":[113,45,115,38],"3065":[113,29,115,39],"3073":[116,33,116,46],"3081":[117,33,117,38],"3089":[117,33,117,50],"3097":[117,56,117,61],"3105":[117,33,117,62],"3107":[117,33,117,55],"3113":[117,33,117,63],"3121":[121,46,121,50],"3129":[121,46,121,50],"3137":[121,25,121,51],"3145":[122,43,122,46],"3153":[122,43,122,46],"3161":[122,25,122,47],"3169":[120,23,123,22],"3177":[125,34,125,60],"3185":[125,64,125,74],"3193":[125,64,125,81],"3201":[126,33,126,43],"3209":[126,33,126,52],"3211":[126,33,126,50],"3217":[126,33,126,53],"3225":[129,33,129,51],"3233":[130,39,130,54],"3241":[130,39,130,54],"3249":[130,33,130,55],"3257":[134,26,134,39],"3265":[135,25,135,30],"3273":[135,43,135,48],"3281":[135,43,135,57],"3289":[135,25,135,57],"3291":[135,25,135,57],"3297":[135,25,135,58],"3305":[141,33,141,37],"3313":[141,33,141,37],"3321":[141,13,141,38],"3329":[142,30,142,33],"3337":[142,30,142,33],"3345":[142,13,142,34],"3353":[140,11,143,10],"3361":[145,22,145,47],"3369":[145,51,145,60],"3377":[145,51,145,67],"3385":[146,21,146,30],"3393":[146,21,146,39],"3395":[146,21,146,37],"3401":[146,21,146,40],"3409":[149,21,149,38],"3417":[150,27,150,41],"3425":[150,27,150,41],"3433":[150,21,150,42],"3441":[154,14,154,20],"3449":[155,13,155,19],"3457":[155,25,155,30],"3465":[155,13,155,31],"3467":[155,13,155,24],"3473":[155,13,155,32],"3481":[158,21,158,31],"3489":[159,13,159,23],"3497":[159,24,159,27],"3505":[159,13,159,28],"3513":[159,13,159,28],"3521":[159,9,159,29],"3529":[160,9,160,17],"3537":[161,20,161,46],"3545":[162,22,162,60],"3553":[162,63,162,66],"3561":[162,69,162,83],"3569":[162,86,162,87],"3577":[162,94,162,95],"3585":[162,97,162,98],"3593":[162,97,162,105],"3601":[162,108,162,109],"3609":[162,112,162,113],"3617":[162,117,162,126],"3625":[162,86,162,127],"3627":[162,86,162,93],"3633":[163,24,163,25],"3641":[163,28,163,29],"3649":[163,24,163,29],"3657":[163,17,163,30],"3665":[162,132,164,14],"3673":[162,132,164,14],"3681":[162,132,164,14],"3689":[162,132,164,14],"3697":[162,86,164,15],"3699":[162,86,162,131],"3705":[164,18,164,25],"3713":[164,29,164,30],"3721":[164,31,164,32],"3729":[164,31,164,39],"3737":[164,42,164,43],"3745":[164,29,164,44],"3753":[164,47,164,48],"3761":[164,52,164,78],"3769":[160,23,165,10],"3777":[160,9,165,11],"3779":[160,9,160,22],"3785":[160,9,165,12],"3793":[158,21,158,31],"3801":[158,5,166,6],"3809":[158,5,166,6],"3817":[168,9,168,15],"3825":[169,9,169,17],"3833":[167,12,170,6],"3841":[167,12,170,6],"3849":[167,5,170,7],"3857":[44,17,171,2],"3865":[44,17,171,2],"3873":[44,17,171,2],"3881":[44,17,171,2],"3889":[44,17,171,2],"3897":[44,17,171,2],"3905":[44,17,171,2],"3913":[44,17,171,2],"3921":[44,17,171,2],"3929":[44,17,171,2],"3937":[44,17,171,2],"3945":[44,17,171,2],"3953":[44,17,171,2],"3961":[44,17,171,2],"3969":[44,17,171,2],"3977":[44,17,171,2],"3985":[44,17,171,2],"3993":[44,17,171,2],"4001":[44,17,171,2],"4009":[44,17,171,2],"4017":[44,17,171,2],"4025":[44,17,171,2],"4033":[44,17,171,2],"4041":[44,17,171,2],"4049":[44,17,171,2],"4057":[44,17,171,2],"4065":[44,17,171,2],"4073":[44,17,171,2],"4081":[44,17,171,2],"4089":[44,17,171,2],"4097":[44,17,171,2],"4105":[44,17,171,2],"4113":[44,17,171,2],"4121":[44,17,171,2],"4129":[44,1,171,2],"4137":[44,1,171,3],"4145":[1,1,171,3],"4153":[1,1,171,3],"4161":[1,1,171,3],"4169":[1,1,171,3],"4177":[16,22,18,2],"4185":[16,22,18,2],"4193":[21,37,23,10],"4201":[21,37,23,10],"4209":[20,25,24,6],"4217":[20,25,24,6],"4225":[19,19,25,2],"4233":[19,19,25,2],"4241":[28,9,30,10],"4249":[32,13,34,14],"4257":[31,37,36,10],"4265":[31,37,36,10],"4273":[27,25,37,6],"4281":[27,25,37,6],"4289":[26,25,38,2],"4297":[26,25,38,2],"4305":[40,25,42,6],"4313":[40,25,42,6],"4321":[39,19,43,2],"4329":[39,19,43,2],"4337":[56,21,58,22],"4345":[59,21,61,22],"4353":[55,17,67,18],"4361":[53,13,68,14],"4369":[51,9,69,10],"4377":[51,9,69,10],"4385":[87,33,89,34],"4393":[86,29,91,30],"4401":[84,25,92,26],"4409":[84,25,92,26],"4417":[98,29,100,30],"4425":[102,29,104,30],"4433":[113,71,115,30],"4441":[113,71,115,30],"4449":[116,29,118,30],"4457":[111,25,119,26],"4465":[111,25,119,26],"4473":[125,29,127,30],"4481":[129,29,131,30],"4489":[134,21,136,22],"4497":[77,17,138,18],"4505":[75,13,139,14],"4513":[75,13,139,14],"4521":[145,17,147,18],"4529":[149,17,151,18],"4537":[154,9,156,10],"4545":[49,5,157,6],"4553":[49,5,157,6],"4561":[162,132,164,14],"4569":[162,132,164,14],"4577":[44,17,171,2],"4585":[44,17,171,2],"4593":[1,1,171,3],"4601":[1,1,171,3],"nBranches":62,"originalCodeFileName":"/home/blake/ExpoSE/Targets/1-click-bom/node_modules/1-click-bom/lib/line_data.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/1-click-bom/node_modules/1-click-bom/lib/line_data_jalangi_.js","code":"'use strict';\n\nvar retailer_list = ['Digikey', 'Mouser', 'RS', 'Newark', 'Farnell'];\n\nexports.retailer_list = retailer_list;\n\nexports.field_list = ['partNumbers', 'description'];\n\nexports.isComplete = function (lines) {\n    return exports.numberOfEmpty(lines) === 0;\n};\n\nexports.hasSKUs = function (lines) {\n    return lines.reduce(function (prev, line) {\n        return retailer_list.reduce(function (prev, r) {\n            return prev || line.retailers[r] !== '';\n        }, prev);\n    }, false);\n};\n\nexports.numberOfEmpty = function numberOfEmpty(lines) {\n    return lines.reduce(function (prev, line) {\n        if (line.partNumbers.length < 1) {\n            prev += 1;\n        }\n        return retailer_list.reduce(function (prev, r) {\n            if (line.retailers[r] === '') {\n                return prev + 1;\n            }\n            return prev;\n        }, prev);\n    }, 0);\n};\n\nexports.maxMpns = function maxMpns(lines) {\n    return lines.reduce(function (prev, line) {\n        return Math.max(prev, line.partNumbers.length);\n    }, 0);\n};\n\nexports.merge = function (lines1, lines2) {\n    var d;\n    var warnings = [];\n    var duplicates = {};\n    var merged = lines1;\n    for (var index = 0; index < lines2.length; index++) {\n        //determine the line-numbers of any duplicates within a single line array\n        // as these will be merged too and we should warn about this\n        var line2 = lines2[index];\n        for (var index_ = 0; index_ < lines2.length; index_++) {\n            var line2_ = lines2[index_];\n            if (index !== index_ && line2.reference === line2_.reference) {\n                d = duplicates[line2.reference];\n                if (d != null) {\n                    //we already have a duplicate registered, push any\n                    //non-registered line-numbers\n                    if (!d.includes(index)) {\n                        d.push(index);\n                    }\n                    if (!d.includes(index_)) {\n                        d.push(index_);\n                    }\n                } else {\n                    duplicates[line2.reference] = [index, index_];\n                }\n            }\n        }\n        var exists = false;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = merged[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var line1 = _step.value;\n\n                if (line1.reference === line2.reference) {\n                    exists = true;\n                    var has_new_parts = false;\n                    var _iteratorNormalCompletion2 = true;\n                    var _didIteratorError2 = false;\n                    var _iteratorError2 = undefined;\n\n                    try {\n                        for (var _iterator2 = retailer_list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                            var r = _step2.value;\n\n                            if (line2.retailers[r] !== '') {\n                                if (line1.retailers[r] !== line2.retailers[r]) {\n                                    has_new_parts = true;\n                                }\n                                line1.retailers[r] = line2.retailers[r];\n                            }\n                        }\n                    } catch (err) {\n                        _didIteratorError2 = true;\n                        _iteratorError2 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                                _iterator2.return();\n                            }\n                        } finally {\n                            if (_didIteratorError2) {\n                                throw _iteratorError2;\n                            }\n                        }\n                    }\n\n                    var _iteratorNormalCompletion3 = true;\n                    var _didIteratorError3 = false;\n                    var _iteratorError3 = undefined;\n\n                    try {\n                        for (var _iterator3 = line2.partNumbers[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                            var part2 = _step3.value;\n\n                            has_new_parts = !line1.partNumbers.reduce(function (prev, part1) {\n                                return (prev || part1.part === part2.part) && part1.manufacturer === part2.manufacturer;\n                            }, false);\n                            if (has_new_parts) {\n                                line1.partNumbers.push(part2);\n                            }\n                        }\n                        //if the exact same parts are found, we increase the quantity\n                    } catch (err) {\n                        _didIteratorError3 = true;\n                        _iteratorError3 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                                _iterator3.return();\n                            }\n                        } finally {\n                            if (_didIteratorError3) {\n                                throw _iteratorError3;\n                            }\n                        }\n                    }\n\n                    if (!has_new_parts) {\n                        line1.quantity += line2.quantity;\n                    }\n                    break;\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n\n        if (!exists) {\n            merged.push(line2);\n        }\n    }\n    for (var ref in duplicates) {\n        d = duplicates[ref];\n        warnings.push({\n            title: 'Duplicate lines detected',\n            message: 'You have the exact same reference \\'' + ref + '\\' on lines ' + d.slice(0, d.length - 2 + 1 || undefined).map(function (n) {\n                return n + 1;\n            }) + ' and ' + (d[d.length - 1] + 1) + '. These have been merged'\n        });\n    }\n    return [merged, warnings];\n};"};
jalangiLabel67:
    while (true) {
        try {
            J$.Se(4145, '/home/blake/ExpoSE/Targets/1-click-bom/node_modules/1-click-bom/lib/line_data_jalangi_.js', '/home/blake/ExpoSE/Targets/1-click-bom/node_modules/1-click-bom/lib/line_data.js');
            J$.N(4153, '__secret__S$', __secret__S$, 0);
            J$.N(4161, '__secret__traits__', __secret__traits__, 0);
            J$.N(4169, 'retailer_list', retailer_list, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var retailer_list = J$.X1(153, J$.W(145, 'retailer_list', J$.T(137, [
                J$.T(97, 'Digikey', 21, false),
                J$.T(105, 'Mouser', 21, false),
                J$.T(113, 'RS', 21, false),
                J$.T(121, 'Newark', 21, false),
                J$.T(129, 'Farnell', 21, false)
            ], 10, false), retailer_list, 3));
            J$.X1(185, J$.P(177, J$.R(161, 'exports', exports, 2), 'retailer_list', J$.R(169, 'retailer_list', retailer_list, 1), 0));
            J$.X1(233, J$.P(225, J$.R(193, 'exports', exports, 2), 'field_list', J$.T(217, [
                J$.T(201, 'partNumbers', 21, false),
                J$.T(209, 'description', 21, false)
            ], 10, false), 0));
            J$.X1(337, J$.P(329, J$.R(241, 'exports', exports, 2), 'isComplete', J$.T(321, function (lines) {
                jalangiLabel55:
                    while (true) {
                        try {
                            J$.Fe(297, arguments.callee, this, arguments);
                            arguments = J$.N(305, 'arguments', arguments, 4);
                            lines = J$.N(313, 'lines', lines, 4);
                            return J$.X1(289, J$.Rt(281, J$.B(10, '===', J$.M(265, J$.R(249, 'exports', exports, 2), 'numberOfEmpty', 0)(J$.R(257, 'lines', lines, 0)), J$.T(273, 0, 22, false), 0)));
                        } catch (J$e) {
                            J$.Ex(4177, J$e);
                        } finally {
                            if (J$.Fr(4185))
                                continue jalangiLabel55;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 297), 0));
            J$.X1(617, J$.P(609, J$.R(345, 'exports', exports, 2), 'hasSKUs', J$.T(601, function (lines) {
                jalangiLabel58:
                    while (true) {
                        try {
                            J$.Fe(577, arguments.callee, this, arguments);
                            arguments = J$.N(585, 'arguments', arguments, 4);
                            lines = J$.N(593, 'lines', lines, 4);
                            return J$.X1(569, J$.Rt(561, J$.M(553, J$.R(353, 'lines', lines, 0), 'reduce', 0)(J$.T(537, function (prev, line) {
                                jalangiLabel57:
                                    while (true) {
                                        try {
                                            J$.Fe(505, arguments.callee, this, arguments);
                                            arguments = J$.N(513, 'arguments', arguments, 4);
                                            prev = J$.N(521, 'prev', prev, 4);
                                            line = J$.N(529, 'line', line, 4);
                                            return J$.X1(497, J$.Rt(489, J$.M(481, J$.R(361, 'retailer_list', retailer_list, 1), 'reduce', 0)(J$.T(465, function (prev, r) {
                                                jalangiLabel56:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(433, arguments.callee, this, arguments);
                                                            arguments = J$.N(441, 'arguments', arguments, 4);
                                                            prev = J$.N(449, 'prev', prev, 4);
                                                            r = J$.N(457, 'r', r, 4);
                                                            return J$.X1(425, J$.Rt(417, J$.C(8, J$.R(369, 'prev', prev, 0)) ? J$._() : J$.B(18, '!==', J$.G(401, J$.G(385, J$.R(377, 'line', line, 0), 'retailers', 0), J$.R(393, 'r', r, 0), 4), J$.T(409, '', 21, false), 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(4193, J$e);
                                                        } finally {
                                                            if (J$.Fr(4201))
                                                                continue jalangiLabel56;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 433), J$.R(473, 'prev', prev, 0))));
                                        } catch (J$e) {
                                            J$.Ex(4209, J$e);
                                        } finally {
                                            if (J$.Fr(4217))
                                                continue jalangiLabel57;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 505), J$.T(545, false, 23, false))));
                        } catch (J$e) {
                            J$.Ex(4225, J$e);
                        } finally {
                            if (J$.Fr(4233))
                                continue jalangiLabel58;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 577), 0));
            J$.X1(1001, J$.P(993, J$.R(625, 'exports', exports, 2), 'numberOfEmpty', J$.T(985, function numberOfEmpty(lines) {
                jalangiLabel61:
                    while (true) {
                        try {
                            J$.Fe(953, arguments.callee, this, arguments);
                            arguments = J$.N(961, 'arguments', arguments, 4);
                            numberOfEmpty = J$.N(969, 'numberOfEmpty', numberOfEmpty, 0);
                            lines = J$.N(977, 'lines', lines, 4);
                            return J$.X1(945, J$.Rt(937, J$.M(929, J$.R(633, 'lines', lines, 0), 'reduce', 0)(J$.T(913, function (prev, line) {
                                jalangiLabel60:
                                    while (true) {
                                        try {
                                            J$.Fe(881, arguments.callee, this, arguments);
                                            arguments = J$.N(889, 'arguments', arguments, 4);
                                            prev = J$.N(897, 'prev', prev, 4);
                                            line = J$.N(905, 'line', line, 4);
                                            if (J$.X1(4241, J$.C(16, J$.B(26, '<', J$.G(657, J$.G(649, J$.R(641, 'line', line, 0), 'partNumbers', 0), 'length', 0), J$.T(665, 1, 22, false), 0)))) {
                                                J$.X1(697, prev = J$.W(689, 'prev', J$.B(34, '+', J$.R(681, 'prev', prev, 0), J$.T(673, 1, 22, false), 0), prev, 0));
                                            }
                                            return J$.X1(873, J$.Rt(865, J$.M(857, J$.R(705, 'retailer_list', retailer_list, 1), 'reduce', 0)(J$.T(841, function (prev, r) {
                                                jalangiLabel59:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(809, arguments.callee, this, arguments);
                                                            arguments = J$.N(817, 'arguments', arguments, 4);
                                                            prev = J$.N(825, 'prev', prev, 4);
                                                            r = J$.N(833, 'r', r, 4);
                                                            if (J$.X1(4249, J$.C(24, J$.B(42, '===', J$.G(737, J$.G(721, J$.R(713, 'line', line, 0), 'retailers', 0), J$.R(729, 'r', r, 0), 4), J$.T(745, '', 21, false), 0)))) {
                                                                return J$.X1(777, J$.Rt(769, J$.B(50, '+', J$.R(753, 'prev', prev, 0), J$.T(761, 1, 22, false), 0)));
                                                            }
                                                            return J$.X1(801, J$.Rt(793, J$.R(785, 'prev', prev, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(4257, J$e);
                                                        } finally {
                                                            if (J$.Fr(4265))
                                                                continue jalangiLabel59;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 809), J$.R(849, 'prev', prev, 0))));
                                        } catch (J$e) {
                                            J$.Ex(4273, J$e);
                                        } finally {
                                            if (J$.Fr(4281))
                                                continue jalangiLabel60;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 881), J$.T(921, 0, 22, false))));
                        } catch (J$e) {
                            J$.Ex(4289, J$e);
                        } finally {
                            if (J$.Fr(4297))
                                continue jalangiLabel61;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 953), 0));
            J$.X1(1209, J$.P(1201, J$.R(1009, 'exports', exports, 2), 'maxMpns', J$.T(1193, function maxMpns(lines) {
                jalangiLabel63:
                    while (true) {
                        try {
                            J$.Fe(1161, arguments.callee, this, arguments);
                            arguments = J$.N(1169, 'arguments', arguments, 4);
                            maxMpns = J$.N(1177, 'maxMpns', maxMpns, 0);
                            lines = J$.N(1185, 'lines', lines, 4);
                            return J$.X1(1153, J$.Rt(1145, J$.M(1137, J$.R(1017, 'lines', lines, 0), 'reduce', 0)(J$.T(1121, function (prev, line) {
                                jalangiLabel62:
                                    while (true) {
                                        try {
                                            J$.Fe(1089, arguments.callee, this, arguments);
                                            arguments = J$.N(1097, 'arguments', arguments, 4);
                                            prev = J$.N(1105, 'prev', prev, 4);
                                            line = J$.N(1113, 'line', line, 4);
                                            return J$.X1(1081, J$.Rt(1073, J$.M(1065, J$.R(1025, 'Math', Math, 2), 'max', 0)(J$.R(1033, 'prev', prev, 0), J$.G(1057, J$.G(1049, J$.R(1041, 'line', line, 0), 'partNumbers', 0), 'length', 0))));
                                        } catch (J$e) {
                                            J$.Ex(4305, J$e);
                                        } finally {
                                            if (J$.Fr(4313))
                                                continue jalangiLabel62;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1089), J$.T(1129, 0, 22, false))));
                        } catch (J$e) {
                            J$.Ex(4321, J$e);
                        } finally {
                            if (J$.Fr(4329))
                                continue jalangiLabel63;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1161), 0));
            J$.X1(4137, J$.P(4129, J$.R(1217, 'exports', exports, 2), 'merge', J$.T(4121, function (lines1, lines2) {
                jalangiLabel66:
                    while (true) {
                        try {
                            J$.Fe(3857, arguments.callee, this, arguments);
                            arguments = J$.N(3865, 'arguments', arguments, 4);
                            lines1 = J$.N(3873, 'lines1', lines1, 4);
                            lines2 = J$.N(3881, 'lines2', lines2, 4);
                            J$.N(3889, 'd', d, 0);
                            J$.N(3897, 'warnings', warnings, 0);
                            J$.N(3905, 'duplicates', duplicates, 0);
                            J$.N(3913, 'merged', merged, 0);
                            J$.N(3921, 'index', index, 0);
                            J$.N(3929, 'line2', line2, 0);
                            J$.N(3937, 'index_', index_, 0);
                            J$.N(3945, 'line2_', line2_, 0);
                            J$.N(3953, 'exists', exists, 0);
                            J$.N(3961, '_iteratorNormalCompletion', _iteratorNormalCompletion, 0);
                            J$.N(3969, '_didIteratorError', _didIteratorError, 0);
                            J$.N(3977, '_iteratorError', _iteratorError, 0);
                            J$.N(3985, '_iterator', _iterator, 0);
                            J$.N(3993, '_step', _step, 0);
                            J$.N(4001, 'line1', line1, 0);
                            J$.N(4009, 'has_new_parts', has_new_parts, 0);
                            J$.N(4017, '_iteratorNormalCompletion2', _iteratorNormalCompletion2, 0);
                            J$.N(4025, '_didIteratorError2', _didIteratorError2, 0);
                            J$.N(4033, '_iteratorError2', _iteratorError2, 0);
                            J$.N(4041, '_iterator2', _iterator2, 0);
                            J$.N(4049, '_step2', _step2, 0);
                            J$.N(4057, 'r', r, 0);
                            J$.N(4065, '_iteratorNormalCompletion3', _iteratorNormalCompletion3, 0);
                            J$.N(4073, '_didIteratorError3', _didIteratorError3, 0);
                            J$.N(4081, '_iteratorError3', _iteratorError3, 0);
                            J$.N(4089, '_iterator3', _iterator3, 0);
                            J$.N(4097, '_step3', _step3, 0);
                            J$.N(4105, 'part2', part2, 0);
                            J$.N(4113, 'ref', ref, 0);
                            var d;
                            var warnings = J$.X1(1241, J$.W(1233, 'warnings', J$.T(1225, [], 10, false), warnings, 1));
                            var duplicates = J$.X1(1265, J$.W(1257, 'duplicates', J$.T(1249, {}, 11, false), duplicates, 1));
                            var merged = J$.X1(1289, J$.W(1281, 'merged', J$.R(1273, 'lines1', lines1, 0), merged, 1));
                            for (var index = J$.X1(1313, J$.W(1305, 'index', J$.T(1297, 0, 22, false), index, 1)); J$.X1(4545, J$.C(240, J$.B(58, '<', J$.R(1321, 'index', index, 0), J$.G(1337, J$.R(1329, 'lines2', lines2, 0), 'length', 0), 0))); J$.X1(4553, J$.B(82, '-', index = J$.W(1361, 'index', J$.B(74, '+', J$.U(66, '+', J$.R(1353, 'index', index, 0)), J$.T(1345, 1, 22, false), 0), index, 0), J$.T(1369, 1, 22, false), 0))) {
                                var line2 = J$.X1(1409, J$.W(1401, 'line2', J$.G(1393, J$.R(1377, 'lines2', lines2, 0), J$.R(1385, 'index', index, 0), 4), line2, 1));
                                for (var index_ = J$.X1(1433, J$.W(1425, 'index_', J$.T(1417, 0, 22, false), index_, 1)); J$.X1(4369, J$.C(72, J$.B(90, '<', J$.R(1441, 'index_', index_, 0), J$.G(1457, J$.R(1449, 'lines2', lines2, 0), 'length', 0), 0))); J$.X1(4377, J$.B(114, '-', index_ = J$.W(1481, 'index_', J$.B(106, '+', J$.U(98, '+', J$.R(1473, 'index_', index_, 0)), J$.T(1465, 1, 22, false), 0), index_, 0), J$.T(1489, 1, 22, false), 0))) {
                                    var line2_ = J$.X1(1529, J$.W(1521, 'line2_', J$.G(1513, J$.R(1497, 'lines2', lines2, 0), J$.R(1505, 'index_', index_, 0), 4), line2_, 1));
                                    if (J$.X1(4361, J$.C(64, J$.C(32, J$.B(122, '!==', J$.R(1537, 'index', index, 0), J$.R(1545, 'index_', index_, 0), 0)) ? J$.B(130, '===', J$.G(1561, J$.R(1553, 'line2', line2, 0), 'reference', 0), J$.G(1577, J$.R(1569, 'line2_', line2_, 0), 'reference', 0), 0) : J$._()))) {
                                        J$.X1(1625, d = J$.W(1617, 'd', J$.G(1609, J$.R(1585, 'duplicates', duplicates, 0), J$.G(1601, J$.R(1593, 'line2', line2, 0), 'reference', 0), 4), d, 0));
                                        if (J$.X1(4353, J$.C(56, J$.B(138, '!=', J$.R(1633, 'd', d, 0), J$.T(1641, null, 25, false), 0)))) {
                                            if (J$.X1(4337, J$.C(40, J$.U(146, '!', J$.M(1665, J$.R(1649, 'd', d, 0), 'includes', 0)(J$.R(1657, 'index', index, 0)))))) {
                                                J$.X1(1697, J$.M(1689, J$.R(1673, 'd', d, 0), 'push', 0)(J$.R(1681, 'index', index, 0)));
                                            }
                                            if (J$.X1(4345, J$.C(48, J$.U(154, '!', J$.M(1721, J$.R(1705, 'd', d, 0), 'includes', 0)(J$.R(1713, 'index_', index_, 0)))))) {
                                                J$.X1(1753, J$.M(1745, J$.R(1729, 'd', d, 0), 'push', 0)(J$.R(1737, 'index_', index_, 0)));
                                            }
                                        } else {
                                            J$.X1(1817, J$.P(1809, J$.R(1761, 'duplicates', duplicates, 0), J$.G(1777, J$.R(1769, 'line2', line2, 0), 'reference', 0), J$.T(1801, [
                                                J$.R(1785, 'index', index, 0),
                                                J$.R(1793, 'index_', index_, 0)
                                            ], 10, false), 2));
                                        }
                                    }
                                }
                                var exists = J$.X1(1841, J$.W(1833, 'exists', J$.T(1825, false, 23, false), exists, 1));
                                var _iteratorNormalCompletion = J$.X1(1865, J$.W(1857, '_iteratorNormalCompletion', J$.T(1849, true, 23, false), _iteratorNormalCompletion, 1));
                                var _didIteratorError = J$.X1(1889, J$.W(1881, '_didIteratorError', J$.T(1873, false, 23, false), _didIteratorError, 1));
                                var _iteratorError = J$.X1(1913, J$.W(1905, '_iteratorError', J$.T(1897, undefined, 24, false), _iteratorError, 1));
                                try {
                                    for (var _iterator = J$.X1(1961, J$.W(1953, '_iterator', J$.M(1945, J$.R(1921, 'merged', merged, 0), J$.G(1937, J$.R(1929, 'Symbol', Symbol, 2), 'iterator', 0), 1)(), _iterator, 1)), _step; J$.X1(4505, J$.C(200, J$.U(162, '!', _iteratorNormalCompletion = J$.W(2001, '_iteratorNormalCompletion', J$.G(1993, _step = J$.W(1985, '_step', J$.M(1977, J$.R(1969, '_iterator', _iterator, 0), 'next', 0)(), _step, 0), 'done', 0), _iteratorNormalCompletion, 0)))); J$.X1(4513, _iteratorNormalCompletion = J$.W(2017, '_iteratorNormalCompletion', J$.T(2009, true, 23, false), _iteratorNormalCompletion, 0))) {
                                        var line1 = J$.X1(2049, J$.W(2041, 'line1', J$.G(2033, J$.R(2025, '_step', _step, 0), 'value', 0), line1, 1));
                                        if (J$.X1(4497, J$.C(192, J$.B(170, '===', J$.G(2065, J$.R(2057, 'line1', line1, 0), 'reference', 0), J$.G(2081, J$.R(2073, 'line2', line2, 0), 'reference', 0), 0)))) {
                                            J$.X1(2105, exists = J$.W(2097, 'exists', J$.T(2089, true, 23, false), exists, 0));
                                            var has_new_parts = J$.X1(2129, J$.W(2121, 'has_new_parts', J$.T(2113, false, 23, false), has_new_parts, 1));
                                            var _iteratorNormalCompletion2 = J$.X1(2153, J$.W(2145, '_iteratorNormalCompletion2', J$.T(2137, true, 23, false), _iteratorNormalCompletion2, 1));
                                            var _didIteratorError2 = J$.X1(2177, J$.W(2169, '_didIteratorError2', J$.T(2161, false, 23, false), _didIteratorError2, 1));
                                            var _iteratorError2 = J$.X1(2201, J$.W(2193, '_iteratorError2', J$.T(2185, undefined, 24, false), _iteratorError2, 1));
                                            try {
                                                for (var _iterator2 = J$.X1(2249, J$.W(2241, '_iterator2', J$.M(2233, J$.R(2209, 'retailer_list', retailer_list, 1), J$.G(2225, J$.R(2217, 'Symbol', Symbol, 2), 'iterator', 0), 1)(), _iterator2, 1)), _step2; J$.X1(4401, J$.C(96, J$.U(178, '!', _iteratorNormalCompletion2 = J$.W(2289, '_iteratorNormalCompletion2', J$.G(2281, _step2 = J$.W(2273, '_step2', J$.M(2265, J$.R(2257, '_iterator2', _iterator2, 0), 'next', 0)(), _step2, 0), 'done', 0), _iteratorNormalCompletion2, 0)))); J$.X1(4409, _iteratorNormalCompletion2 = J$.W(2305, '_iteratorNormalCompletion2', J$.T(2297, true, 23, false), _iteratorNormalCompletion2, 0))) {
                                                    var r = J$.X1(2337, J$.W(2329, 'r', J$.G(2321, J$.R(2313, '_step2', _step2, 0), 'value', 0), r, 1));
                                                    if (J$.X1(4393, J$.C(88, J$.B(186, '!==', J$.G(2369, J$.G(2353, J$.R(2345, 'line2', line2, 0), 'retailers', 0), J$.R(2361, 'r', r, 0), 4), J$.T(2377, '', 21, false), 0)))) {
                                                        if (J$.X1(4385, J$.C(80, J$.B(194, '!==', J$.G(2409, J$.G(2393, J$.R(2385, 'line1', line1, 0), 'retailers', 0), J$.R(2401, 'r', r, 0), 4), J$.G(2441, J$.G(2425, J$.R(2417, 'line2', line2, 0), 'retailers', 0), J$.R(2433, 'r', r, 0), 4), 0)))) {
                                                            J$.X1(2465, has_new_parts = J$.W(2457, 'has_new_parts', J$.T(2449, true, 23, false), has_new_parts, 0));
                                                        }
                                                        J$.X1(2537, J$.P(2529, J$.G(2481, J$.R(2473, 'line1', line1, 0), 'retailers', 0), J$.R(2489, 'r', r, 0), J$.G(2521, J$.G(2505, J$.R(2497, 'line2', line2, 0), 'retailers', 0), J$.R(2513, 'r', r, 0), 4), 2));
                                                    }
                                                }
                                            } catch (err) {
                                                err = J$.N(2593, 'err', err, 1);
                                                J$.X1(2561, _didIteratorError2 = J$.W(2553, '_didIteratorError2', J$.T(2545, true, 23, false), _didIteratorError2, 0));
                                                J$.X1(2585, _iteratorError2 = J$.W(2577, '_iteratorError2', J$.R(2569, 'err', err, 0), _iteratorError2, 0));
                                            } finally {
                                                try {
                                                    if (J$.X1(4417, J$.C(112, J$.C(104, J$.U(202, '!', J$.R(2601, '_iteratorNormalCompletion2', _iteratorNormalCompletion2, 0))) ? J$.G(2617, J$.R(2609, '_iterator2', _iterator2, 0), 'return', 0) : J$._()))) {
                                                        J$.X1(2641, J$.M(2633, J$.R(2625, '_iterator2', _iterator2, 0), 'return', 0)());
                                                    }
                                                } finally {
                                                    if (J$.X1(4425, J$.C(120, J$.R(2649, '_didIteratorError2', _didIteratorError2, 0)))) {
                                                        throw J$.X1(2673, J$.Th(2665, J$.R(2657, '_iteratorError2', _iteratorError2, 0)));
                                                    }
                                                }
                                            }
                                            var _iteratorNormalCompletion3 = J$.X1(2697, J$.W(2689, '_iteratorNormalCompletion3', J$.T(2681, true, 23, false), _iteratorNormalCompletion3, 1));
                                            var _didIteratorError3 = J$.X1(2721, J$.W(2713, '_didIteratorError3', J$.T(2705, false, 23, false), _didIteratorError3, 1));
                                            var _iteratorError3 = J$.X1(2745, J$.W(2737, '_iteratorError3', J$.T(2729, undefined, 24, false), _iteratorError3, 1));
                                            try {
                                                for (var _iterator3 = J$.X1(2801, J$.W(2793, '_iterator3', J$.M(2785, J$.G(2761, J$.R(2753, 'line2', line2, 0), 'partNumbers', 0), J$.G(2777, J$.R(2769, 'Symbol', Symbol, 2), 'iterator', 0), 1)(), _iterator3, 1)), _step3; J$.X1(4457, J$.C(152, J$.U(210, '!', _iteratorNormalCompletion3 = J$.W(2841, '_iteratorNormalCompletion3', J$.G(2833, _step3 = J$.W(2825, '_step3', J$.M(2817, J$.R(2809, '_iterator3', _iterator3, 0), 'next', 0)(), _step3, 0), 'done', 0), _iteratorNormalCompletion3, 0)))); J$.X1(4465, _iteratorNormalCompletion3 = J$.W(2857, '_iteratorNormalCompletion3', J$.T(2849, true, 23, false), _iteratorNormalCompletion3, 0))) {
                                                    var part2 = J$.X1(2889, J$.W(2881, 'part2', J$.G(2873, J$.R(2865, '_step3', _step3, 0), 'value', 0), part2, 1));
                                                    J$.X1(3065, has_new_parts = J$.W(3057, 'has_new_parts', J$.U(234, '!', J$.M(3049, J$.G(2905, J$.R(2897, 'line1', line1, 0), 'partNumbers', 0), 'reduce', 0)(J$.T(3033, function (prev, part1) {
                                                        jalangiLabel64:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(3001, arguments.callee, this, arguments);
                                                                    arguments = J$.N(3009, 'arguments', arguments, 4);
                                                                    prev = J$.N(3017, 'prev', prev, 4);
                                                                    part1 = J$.N(3025, 'part1', part1, 4);
                                                                    return J$.X1(2993, J$.Rt(2985, J$.C(136, J$.C(128, J$.R(2913, 'prev', prev, 0)) ? J$._() : J$.B(218, '===', J$.G(2929, J$.R(2921, 'part1', part1, 0), 'part', 0), J$.G(2945, J$.R(2937, 'part2', part2, 0), 'part', 0), 0)) ? J$.B(226, '===', J$.G(2961, J$.R(2953, 'part1', part1, 0), 'manufacturer', 0), J$.G(2977, J$.R(2969, 'part2', part2, 0), 'manufacturer', 0), 0) : J$._()));
                                                                } catch (J$e) {
                                                                    J$.Ex(4433, J$e);
                                                                } finally {
                                                                    if (J$.Fr(4441))
                                                                        continue jalangiLabel64;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false, 3001), J$.T(3041, false, 23, false))), has_new_parts, 0));
                                                    if (J$.X1(4449, J$.C(144, J$.R(3073, 'has_new_parts', has_new_parts, 0)))) {
                                                        J$.X1(3113, J$.M(3105, J$.G(3089, J$.R(3081, 'line1', line1, 0), 'partNumbers', 0), 'push', 0)(J$.R(3097, 'part2', part2, 0)));
                                                    }
                                                }
                                            } catch (err) {
                                                err = J$.N(3169, 'err', err, 1);
                                                J$.X1(3137, _didIteratorError3 = J$.W(3129, '_didIteratorError3', J$.T(3121, true, 23, false), _didIteratorError3, 0));
                                                J$.X1(3161, _iteratorError3 = J$.W(3153, '_iteratorError3', J$.R(3145, 'err', err, 0), _iteratorError3, 0));
                                            } finally {
                                                try {
                                                    if (J$.X1(4473, J$.C(168, J$.C(160, J$.U(242, '!', J$.R(3177, '_iteratorNormalCompletion3', _iteratorNormalCompletion3, 0))) ? J$.G(3193, J$.R(3185, '_iterator3', _iterator3, 0), 'return', 0) : J$._()))) {
                                                        J$.X1(3217, J$.M(3209, J$.R(3201, '_iterator3', _iterator3, 0), 'return', 0)());
                                                    }
                                                } finally {
                                                    if (J$.X1(4481, J$.C(176, J$.R(3225, '_didIteratorError3', _didIteratorError3, 0)))) {
                                                        throw J$.X1(3249, J$.Th(3241, J$.R(3233, '_iteratorError3', _iteratorError3, 0)));
                                                    }
                                                }
                                            }
                                            if (J$.X1(4489, J$.C(184, J$.U(250, '!', J$.R(3257, 'has_new_parts', has_new_parts, 0))))) {
                                                J$.X1(3297, J$.A(3289, J$.R(3265, 'line1', line1, 0), 'quantity', '+', 0)(J$.G(3281, J$.R(3273, 'line2', line2, 0), 'quantity', 0)));
                                            }
                                            break;
                                        }
                                    }
                                } catch (err) {
                                    err = J$.N(3353, 'err', err, 1);
                                    J$.X1(3321, _didIteratorError = J$.W(3313, '_didIteratorError', J$.T(3305, true, 23, false), _didIteratorError, 0));
                                    J$.X1(3345, _iteratorError = J$.W(3337, '_iteratorError', J$.R(3329, 'err', err, 0), _iteratorError, 0));
                                } finally {
                                    try {
                                        if (J$.X1(4521, J$.C(216, J$.C(208, J$.U(258, '!', J$.R(3361, '_iteratorNormalCompletion', _iteratorNormalCompletion, 0))) ? J$.G(3377, J$.R(3369, '_iterator', _iterator, 0), 'return', 0) : J$._()))) {
                                            J$.X1(3401, J$.M(3393, J$.R(3385, '_iterator', _iterator, 0), 'return', 0)());
                                        }
                                    } finally {
                                        if (J$.X1(4529, J$.C(224, J$.R(3409, '_didIteratorError', _didIteratorError, 0)))) {
                                            throw J$.X1(3433, J$.Th(3425, J$.R(3417, '_iteratorError', _iteratorError, 0)));
                                        }
                                    }
                                }
                                if (J$.X1(4537, J$.C(232, J$.U(266, '!', J$.R(3441, 'exists', exists, 0))))) {
                                    J$.X1(3473, J$.M(3465, J$.R(3449, 'merged', merged, 0), 'push', 0)(J$.R(3457, 'line2', line2, 0)));
                                }
                            }
                            for (J$._tm_p in J$.H(3793, J$.R(3481, 'duplicates', duplicates, 0))) {
                                var ref = J$.X1(3809, J$.W(3801, 'ref', J$._tm_p, ref, 1));
                                {
                                    {
                                        J$.X1(3521, d = J$.W(3513, 'd', J$.G(3505, J$.R(3489, 'duplicates', duplicates, 0), J$.R(3497, 'ref', ref, 0), 4), d, 0));
                                        J$.X1(3785, J$.M(3777, J$.R(3529, 'warnings', warnings, 0), 'push', 0)(J$.T(3769, {
                                            title: J$.T(3537, 'Duplicate lines detected', 21, false),
                                            message: J$.B(354, '+', J$.B(346, '+', J$.B(322, '+', J$.B(314, '+', J$.B(282, '+', J$.B(274, '+', J$.T(3545, 'You have the exact same reference \'', 21, false), J$.R(3553, 'ref', ref, 0), 0), J$.T(3561, '\' on lines ', 21, false), 0), J$.M(3697, J$.M(3625, J$.R(3569, 'd', d, 0), 'slice', 0)(J$.T(3577, 0, 22, false), J$.C(248, J$.B(298, '+', J$.B(290, '-', J$.G(3593, J$.R(3585, 'd', d, 0), 'length', 0), J$.T(3601, 2, 22, false), 0), J$.T(3609, 1, 22, false), 0)) ? J$._() : J$.T(3617, undefined, 24, false)), 'map', 0)(J$.T(3689, function (n) {
                                                jalangiLabel65:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(3665, arguments.callee, this, arguments);
                                                            arguments = J$.N(3673, 'arguments', arguments, 4);
                                                            n = J$.N(3681, 'n', n, 4);
                                                            return J$.X1(3657, J$.Rt(3649, J$.B(306, '+', J$.R(3633, 'n', n, 0), J$.T(3641, 1, 22, false), 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(4561, J$e);
                                                        } finally {
                                                            if (J$.Fr(4569))
                                                                continue jalangiLabel65;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 3665)), 0), J$.T(3705, ' and ', 21, false), 0), J$.B(338, '+', J$.G(3745, J$.R(3713, 'd', d, 0), J$.B(330, '-', J$.G(3729, J$.R(3721, 'd', d, 0), 'length', 0), J$.T(3737, 1, 22, false), 0), 4), J$.T(3753, 1, 22, false), 0), 0), J$.T(3761, '. These have been merged', 21, false), 0)
                                        }, 11, false)));
                                    }
                                }
                            }
                            return J$.X1(3849, J$.Rt(3841, J$.T(3833, [
                                J$.R(3817, 'merged', merged, 0),
                                J$.R(3825, 'warnings', warnings, 0)
                            ], 10, false)));
                        } catch (J$e) {
                            J$.Ex(4577, J$e);
                        } finally {
                            if (J$.Fr(4585))
                                continue jalangiLabel66;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3857), 0));
        } catch (J$e) {
            J$.Ex(4593, J$e);
        } finally {
            if (J$.Sr(4601)) {
                J$.L();
                continue jalangiLabel67;
            } else {
                J$.L();
                break jalangiLabel67;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
