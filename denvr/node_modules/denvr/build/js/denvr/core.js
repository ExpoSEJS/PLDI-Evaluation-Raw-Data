// Compiled by ClojureScript 1.7.170 {:static-fns true, :optimize-constants true, :target :nodejs}
goog.provide('denvr.core');
goog.require('cljs.core');
denvr.core.version = "0.1.0-SNAPSHOT";
if(typeof denvr.core.run !== 'undefined'){
} else {
/**
 * Run a subcommand.
 *   Called with a map of keys :top-options, :options, :arguments
 */
denvr.core.run = (function (){var method_table__1443__auto__ = (function (){var G__5623 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__5623) : cljs.core.atom.call(null,G__5623));
})();
var prefer_table__1444__auto__ = (function (){var G__5624 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__5624) : cljs.core.atom.call(null,G__5624));
})();
var method_cache__1445__auto__ = (function (){var G__5625 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__5625) : cljs.core.atom.call(null,G__5625));
})();
var cached_hierarchy__1446__auto__ = (function (){var G__5626 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__5626) : cljs.core.atom.call(null,G__5626));
})();
var hierarchy__1447__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,cljs.core.cst$kw$hierarchy,cljs.core.get_global_hierarchy());
return (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2("denvr.core","run"),cljs.core.cst$kw$subcmd,cljs.core.cst$kw$default,hierarchy__1447__auto__,method_table__1443__auto__,prefer_table__1444__auto__,method_cache__1445__auto__,cached_hierarchy__1446__auto__));
})();
}
denvr.core.run.cljs$core$IMultiFn$_add_method$arity$3(null,cljs.core.cst$kw$version,(function (_){
return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([denvr.core.version], 0));
}));
