{"8":[19,9,19,35],"9":[1,20,1,27],"10":[15,29,15,31],"16":[29,8,29,21],"17":[1,28,1,32],"18":[19,11,19,34],"24":[31,9,31,38],"25":[1,20,1,33],"26":[19,9,19,35],"32":[33,16,33,46],"33":[1,20,1,33],"34":[31,20,31,38],"40":[33,16,33,69],"41":[1,20,1,33],"42":[32,26,32,41],"48":[33,16,33,69],"49":[2,26,2,38],"50":[33,28,33,46],"56":[31,9,31,38],"57":[2,26,2,45],"58":[33,50,33,69],"64":[43,9,43,24],"65":[2,26,2,45],"66":[43,9,43,24],"72":[46,9,46,19],"73":[2,26,2,45],"74":[51,13,51,34],"80":[53,20,53,76],"81":[3,1,3,13],"82":[51,13,51,47],"88":[51,13,51,47],"89":[3,1,3,14],"90":[53,20,53,76],"96":[59,13,59,28],"97":[4,20,4,27],"98":[59,13,59,28],"104":[49,9,49,23],"105":[4,28,4,44],"106":[72,23,72,28],"112":[69,9,69,19],"113":[4,20,4,45],"114":[72,22,72,28],"120":[72,38,72,51],"121":[4,20,4,45],"122":[72,13,72,28],"128":[72,13,72,28],"129":[4,20,4,45],"130":[72,38,72,51],"136":[75,16,75,62],"137":[5,13,5,20],"138":[73,9,73,20],"144":[73,9,73,33],"145":[5,21,5,37],"146":[73,9,73,33],"152":[83,13,83,33],"153":[5,13,5,38],"154":[75,16,75,62],"160":[89,13,89,55],"161":[5,13,5,38],"162":[83,13,83,33],"168":[89,13,89,55],"169":[5,13,5,38],"170":[89,13,89,36],"176":[94,61,94,105],"177":[6,15,6,22],"178":[89,40,89,55],"184":[94,37,94,106],"185":[6,23,6,40],"186":[94,13,94,33],"192":[94,13,94,106],"193":[6,15,6,41],"194":[94,37,94,56],"200":[95,17,95,45],"201":[6,15,6,41],"202":[94,61,94,79],"208":[94,13,94,106],"209":[6,15,6,41],"210":[94,83,94,105],"216":[101,15,101,56],"217":[7,11,7,18],"218":[95,17,95,45],"224":[101,14,101,84],"225":[7,19,7,36],"226":[101,15,101,32],"232":[101,14,101,84],"233":[7,11,7,37],"234":[101,36,101,56],"240":[102,9,102,27],"241":[7,11,7,37],"242":[101,61,101,84],"248":[108,9,108,31],"249":[7,11,7,37],"250":[102,9,102,27],"256":[120,13,120,41],"257":[8,15,8,22],"258":[106,16,106,31],"264":[119,9,119,24],"265":[8,23,8,39],"266":[108,9,108,31],"272":[134,15,134,48],"273":[8,15,8,40],"274":[119,9,119,24],"280":[133,9,133,21],"281":[8,15,8,40],"282":[120,13,120,41],"288":[139,15,139,28],"289":[8,15,8,40],"296":[144,15,144,28],"297":[9,16,9,22],"305":[9,16,9,32],"313":[9,16,9,41],"321":[9,16,9,41],"329":[9,16,9,41],"337":[10,18,10,19],"345":[10,18,10,19],"353":[10,18,10,19],"361":[11,16,11,17],"369":[11,16,11,17],"377":[11,16,11,17],"385":[12,12,12,13],"393":[12,12,12,13],"401":[12,12,12,13],"409":[13,20,13,21],"417":[13,20,13,21],"425":[13,20,13,21],"433":[14,20,14,21],"441":[14,20,14,21],"449":[14,20,14,21],"457":[15,30,15,31],"465":[15,29,15,31],"473":[15,29,15,31],"481":[16,26,16,27],"489":[16,26,16,27],"497":[16,26,16,27],"505":[17,18,17,19],"513":[17,18,17,19],"521":[17,18,17,19],"529":[19,11,19,15],"537":[19,27,19,34],"545":[20,20,20,27],"553":[20,28,20,35],"561":[20,16,20,36],"569":[20,16,20,36],"577":[20,9,20,37],"585":[21,5,21,9],"593":[21,20,21,25],"601":[22,16,22,37],"609":[23,17,23,27],"617":[24,20,24,25],"625":[25,21,25,23],"633":[26,19,26,20],"641":[27,19,27,37],"649":[28,13,28,15],"657":[21,33,29,6],"665":[29,8,29,15],"673":[29,19,29,21],"681":[21,20,29,22],"683":[21,20,21,32],"689":[21,5,29,22],"697":[21,5,29,23],"705":[30,15,30,19],"713":[30,15,30,27],"721":[30,15,30,27],"729":[30,15,30,27],"737":[31,9,31,12],"745":[31,9,31,16],"753":[31,20,31,23],"761":[31,20,31,34],"769":[31,37,31,38],"777":[32,9,32,12],"785":[32,27,32,30],"793":[32,27,32,41],"801":[32,9,32,41],"809":[32,9,32,42],"817":[33,16,33,19],"825":[33,16,33,24],"833":[33,28,33,31],"841":[33,28,33,42],"849":[33,45,33,46],"857":[33,50,33,53],"865":[33,50,33,64],"873":[33,67,33,69],"881":[34,9,34,12],"889":[34,27,34,29],"897":[34,9,34,29],"899":[34,9,34,29],"905":[34,9,34,30],"913":[36,5,36,9],"921":[36,16,36,17],"929":[36,5,36,17],"937":[36,5,36,18],"945":[37,5,37,9],"953":[37,16,37,18],"961":[37,5,37,18],"969":[37,5,37,19],"977":[38,5,38,9],"985":[38,18,38,23],"993":[38,5,38,23],"1001":[38,5,38,24],"1009":[39,5,39,9],"1017":[39,19,39,21],"1025":[39,5,39,21],"1033":[39,5,39,22],"1041":[40,5,40,9],"1049":[40,21,40,28],"1057":[40,17,40,30],"1065":[40,5,40,30],"1073":[40,5,40,31],"1081":[41,5,41,9],"1089":[41,5,41,14],"1097":[41,27,41,28],"1105":[41,5,41,28],"1113":[41,5,41,29],"1121":[42,18,42,30],"1129":[42,44,42,48],"1137":[42,44,42,53],"1145":[42,55,42,58],"1153":[42,55,42,64],"1161":[42,66,42,69],"1169":[42,66,42,76],"1177":[42,78,42,81],"1185":[42,78,42,92],"1193":[42,94,42,97],"1201":[42,94,42,106],"1209":[42,108,42,111],"1217":[42,108,42,120],"1225":[42,18,42,121],"1227":[42,18,42,43],"1233":[42,18,42,121],"1241":[42,18,42,121],"1249":[43,9,43,15],"1257":[43,20,43,24],"1265":[44,19,44,24],"1273":[44,25,44,28],"1281":[44,29,44,35],"1289":[44,25,44,36],"1297":[44,15,44,37],"1305":[44,15,44,37],"1313":[44,9,44,38],"1321":[46,9,46,12],"1329":[46,9,46,19],"1337":[47,9,47,21],"1345":[47,39,47,43],"1353":[47,39,47,48],"1361":[47,50,47,53],"1369":[47,50,47,60],"1377":[47,9,47,61],"1379":[47,9,47,38],"1385":[47,9,47,62],"1393":[49,9,49,12],"1401":[49,9,49,23],"1409":[51,20,51,23],"1417":[51,20,51,34],"1425":[51,39,51,47],"1433":[52,20,52,27],"1441":[52,39,52,42],"1449":[52,39,52,53],"1457":[52,20,52,54],"1459":[52,20,52,38],"1465":[52,20,52,54],"1473":[52,13,52,55],"1481":[53,20,53,28],"1489":[53,34,53,37],"1497":[53,34,53,48],"1505":[53,20,53,49],"1507":[53,20,53,33],"1513":[53,54,53,76],"1521":[54,24,54,34],"1529":[54,35,54,38],"1537":[54,35,54,49],"1545":[54,20,54,50],"1553":[54,20,54,50],"1561":[54,13,54,51],"1569":[56,20,56,23],"1577":[56,20,56,34],"1585":[56,20,56,34],"1593":[56,13,56,35],"1601":[58,18,58,30],"1609":[58,52,58,56],"1617":[58,52,58,61],"1625":[58,63,58,67],"1633":[58,18,58,68],"1635":[58,18,58,51],"1641":[58,18,58,68],"1649":[58,9,58,69],"1657":[59,13,59,19],"1665":[59,24,59,28],"1673":[60,23,60,28],"1681":[60,29,60,32],"1689":[60,33,60,39],"1697":[60,29,60,40],"1705":[60,19,60,41],"1713":[60,19,60,41],"1721":[60,13,60,42],"1729":[62,9,62,13],"1737":[62,26,62,30],"1745":[62,9,62,30],"1753":[62,9,62,31],"1761":[18,1,64,2],"1769":[18,1,64,2],"1777":[18,1,64,2],"1785":[18,1,64,2],"1793":[18,1,64,2],"1801":[18,1,64,2],"1809":[65,1,65,8],"1817":[65,1,65,18],"1825":[66,16,66,20],"1833":[66,16,66,25],"1841":[66,16,66,25],"1849":[66,16,66,25],"1857":[67,21,67,25],"1865":[67,21,67,33],"1873":[67,21,67,43],"1881":[67,21,67,43],"1889":[67,21,67,43],"1897":[69,9,69,13],"1905":[69,9,69,19],"1913":[70,16,70,21],"1921":[70,16,70,21],"1929":[70,9,70,22],"1937":[72,13,72,17],"1945":[72,24,72,28],"1953":[72,31,72,35],"1961":[72,38,72,42],"1969":[72,47,72,51],"1977":[72,54,72,62],"1985":[72,65,72,75],"1993":[72,13,72,75],"2001":[72,5,72,76],"2009":[73,16,73,20],"2017":[73,25,73,33],"2025":[74,9,74,13],"2033":[74,22,74,29],"2041":[74,41,74,45],"2049":[74,22,74,46],"2051":[74,22,74,40],"2057":[74,9,74,46],"2065":[74,9,74,47],"2073":[75,16,75,24],"2081":[75,30,75,34],"2089":[75,16,75,35],"2091":[75,16,75,29],"2097":[75,40,75,62],"2105":[76,9,76,13],"2113":[76,26,76,36],"2121":[76,37,76,41],"2129":[76,22,76,42],"2137":[76,9,76,42],"2145":[76,9,76,43],"2153":[78,9,78,13],"2161":[78,22,78,26],"2169":[78,9,78,26],"2177":[78,9,78,27],"2185":[80,5,80,9],"2193":[80,20,80,21],"2201":[80,5,80,21],"2209":[80,5,80,22],"2217":[81,5,81,9],"2225":[81,21,81,25],"2233":[81,21,81,31],"2241":[81,21,81,38],"2249":[81,5,81,38],"2257":[81,5,81,39],"2265":[83,13,83,17],"2273":[83,13,83,27],"2281":[83,32,83,33],"2289":[84,13,84,17],"2297":[84,31,84,36],"2305":[84,42,84,51],"2313":[84,27,84,52],"2315":[84,31,84,41],"2321":[84,13,84,52],"2329":[84,13,84,53],"2337":[85,13,85,17],"2345":[85,29,85,30],"2353":[85,13,85,30],"2361":[85,13,85,31],"2369":[86,13,86,17],"2377":[86,30,86,39],"2385":[86,13,86,39],"2393":[86,13,86,40],"2401":[88,18,88,30],"2409":[88,39,88,43],"2417":[88,45,88,50],"2425":[88,18,88,51],"2427":[88,18,88,38],"2433":[88,18,88,51],"2441":[88,9,88,52],"2449":[89,13,89,19],"2457":[89,24,89,36],"2465":[89,40,89,46],"2473":[89,51,89,55],"2481":[90,13,90,17],"2489":[90,24,90,30],"2497":[90,13,90,31],"2499":[90,13,90,23],"2505":[90,13,90,32],"2513":[91,13,91,17],"2521":[91,26,91,30],"2529":[91,13,91,30],"2537":[91,13,91,31],"2545":[92,20,92,25],"2553":[92,20,92,25],"2561":[92,13,92,26],"2569":[94,13,94,17],"2577":[94,13,94,27],"2585":[94,32,94,33],"2593":[94,37,94,41],"2601":[94,37,94,50],"2609":[94,55,94,56],"2617":[94,61,94,66],"2625":[94,71,94,79],"2633":[94,83,94,88],"2641":[94,93,94,105],"2649":[95,17,95,21],"2657":[95,17,95,29],"2665":[95,17,95,32],"2673":[95,37,95,45],"2681":[96,17,96,21],"2689":[96,29,96,36],"2697":[96,51,96,56],"2705":[96,67,96,71],"2713":[96,67,96,78],"2721":[96,80,96,84],"2729":[96,80,96,93],"2737":[96,51,96,94],"2739":[96,51,96,66],"2745":[96,29,96,95],"2747":[96,29,96,50],"2753":[96,17,96,96],"2755":[96,17,96,28],"2761":[96,17,96,97],"2769":[98,17,98,21],"2777":[98,29,98,34],"2785":[98,45,98,49],"2793":[98,45,98,56],"2801":[98,58,98,62],"2809":[98,58,98,71],"2817":[98,29,98,72],"2819":[98,29,98,44],"2825":[98,17,98,73],"2827":[98,17,98,28],"2833":[98,17,98,74],"2841":[101,15,101,19],"2849":[101,15,101,28],"2857":[101,31,101,32],"2865":[101,36,101,40],"2873":[101,36,101,50],"2881":[101,55,101,56],"2889":[101,61,101,67],"2897":[101,72,101,84],"2905":[102,9,102,14],"2913":[102,19,102,27],"2921":[103,18,103,30],"2929":[103,42,103,46],"2937":[103,42,103,51],"2945":[103,18,103,52],"2947":[103,18,103,41],"2953":[103,18,103,52],"2961":[103,9,103,53],"2969":[104,9,104,13],"2977":[104,20,104,26],"2985":[104,9,104,27],"2987":[104,9,104,19],"2993":[104,9,104,28],"3001":[105,9,105,13],"3009":[105,22,105,26],"3017":[105,9,105,26],"3025":[105,9,105,27],"3033":[106,16,106,22],"3041":[106,27,106,31],"3049":[106,16,106,31],"3057":[106,9,106,32],"3065":[108,9,108,14],"3073":[108,19,108,31],"3081":[109,9,109,13],"3089":[109,20,109,24],"3097":[109,9,109,25],"3099":[109,9,109,19],"3105":[109,9,109,26],"3113":[110,9,110,13],"3121":[110,26,110,27],"3129":[110,9,110,27],"3137":[110,9,110,28],"3145":[111,16,111,20],"3153":[111,16,111,20],"3161":[111,9,111,21],"3169":[113,12,113,16],"3177":[113,12,113,16],"3185":[113,5,113,17],"3193":[65,26,114,2],"3201":[65,26,114,2],"3209":[65,26,114,2],"3217":[65,26,114,2],"3225":[65,26,114,2],"3233":[65,26,114,2],"3241":[65,26,114,2],"3249":[65,26,114,2],"3257":[65,26,114,2],"3265":[65,1,114,2],"3273":[65,1,114,3],"3281":[115,1,115,8],"3289":[115,1,115,18],"3297":[116,5,116,9],"3305":[116,5,116,16],"3313":[116,22,116,27],"3321":[116,5,116,28],"3323":[116,5,116,21],"3329":[116,5,116,29],"3337":[115,28,117,2],"3345":[115,28,117,2],"3353":[115,28,117,2],"3361":[115,28,117,2],"3369":[115,1,117,2],"3377":[115,1,117,3],"3385":[118,1,118,8],"3393":[118,1,118,18],"3401":[119,9,119,15],"3409":[119,20,119,24],"3417":[120,13,120,17],"3425":[120,13,120,25],"3433":[120,13,120,28],"3441":[120,33,120,41],"3449":[121,13,121,17],"3457":[121,27,121,31],"3465":[121,27,121,38],"3473":[121,44,121,46],"3481":[121,27,121,47],"3483":[121,27,121,43],"3489":[121,13,121,47],"3497":[121,13,121,48],"3505":[123,13,123,17],"3513":[123,27,123,32],"3521":[123,47,123,51],"3529":[123,47,123,58],"3537":[123,27,123,59],"3539":[123,27,123,46],"3545":[123,13,123,59],"3553":[123,13,123,60],"3561":[126,5,126,9],"3569":[126,19,126,21],"3577":[126,5,126,21],"3585":[126,5,126,22],"3593":[127,5,127,9],"3601":[127,16,127,22],"3609":[127,5,127,22],"3617":[127,5,127,23],"3625":[128,5,128,9],"3633":[128,16,128,20],"3641":[128,16,128,25],"3649":[128,16,128,29],"3657":[128,5,128,29],"3665":[128,5,128,30],"3673":[118,27,129,2],"3681":[118,27,129,2],"3689":[118,27,129,2],"3697":[118,27,129,2],"3705":[118,1,129,2],"3713":[118,1,129,3],"3721":[131,24,131,31],"3729":[131,32,131,39],"3737":[131,20,131,40],"3745":[131,20,131,40],"3753":[131,20,131,40],"3761":[132,5,132,13],"3769":[132,19,132,24],"3777":[132,26,132,30],"3785":[132,5,132,31],"3787":[132,5,132,18],"3793":[132,5,132,32],"3801":[133,9,133,17],"3809":[133,9,133,21],"3817":[134,15,134,23],"3825":[134,15,134,27],"3833":[134,31,134,34],"3841":[134,35,134,43],"3849":[134,35,134,47],"3857":[134,31,134,48],"3865":[134,15,134,48],"3873":[134,9,134,49],"3881":[136,12,136,20],"3889":[136,12,136,27],"3897":[136,12,136,27],"3905":[136,5,136,28],"3913":[130,1,137,2],"3921":[130,1,137,2],"3929":[130,1,137,2],"3937":[130,1,137,2],"3945":[130,1,137,2],"3953":[139,15,139,22],"3961":[139,26,139,28],"3969":[139,15,139,28],"3977":[139,5,139,29],"3985":[140,5,140,12],"3993":[140,19,140,23],"4001":[140,5,140,23],"4009":[140,5,140,24],"4017":[141,12,141,19],"4025":[141,20,141,25],"4033":[141,27,141,34],"4041":[141,12,141,35],"4049":[141,12,141,35],"4057":[141,5,141,36],"4065":[138,1,142,2],"4073":[138,1,142,2],"4081":[138,1,142,2],"4089":[138,1,142,2],"4097":[144,15,144,22],"4105":[144,26,144,28],"4113":[144,15,144,28],"4121":[144,5,144,29],"4129":[145,5,145,12],"4137":[145,20,145,24],"4145":[145,5,145,24],"4153":[145,5,145,25],"4161":[146,12,146,19],"4169":[146,20,146,25],"4177":[146,27,146,34],"4185":[146,12,146,35],"4193":[146,12,146,35],"4201":[146,5,146,36],"4209":[143,1,147,2],"4217":[143,1,147,2],"4225":[143,1,147,2],"4233":[143,1,147,2],"4241":[148,1,148,8],"4249":[148,19,148,26],"4257":[148,1,148,26],"4265":[148,1,148,27],"4273":[149,1,149,8],"4281":[149,19,149,26],"4289":[149,1,149,26],"4297":[149,1,149,27],"4305":[150,1,150,8],"4313":[150,22,150,32],"4321":[150,1,150,32],"4329":[150,1,150,33],"4337":[151,1,151,8],"4345":[151,16,151,20],"4353":[151,1,151,20],"4361":[151,1,151,21],"4369":[1,1,151,21],"4377":[1,1,151,21],"4385":[1,1,151,21],"4393":[1,1,151,21],"4401":[1,1,151,21],"4409":[1,1,151,21],"4417":[1,1,151,21],"4425":[1,1,151,21],"4433":[1,1,151,21],"4441":[1,1,151,21],"4449":[1,1,151,21],"4457":[1,1,151,21],"4465":[1,1,151,21],"4473":[1,1,151,21],"4481":[1,1,151,21],"4489":[1,1,151,21],"4497":[1,1,151,21],"4505":[18,1,64,2],"4513":[1,1,151,21],"4521":[130,1,137,2],"4529":[1,1,151,21],"4537":[138,1,142,2],"4545":[1,1,151,21],"4553":[143,1,147,2],"4561":[1,1,151,21],"4569":[19,5,20,37],"4577":[33,12,35,6],"4585":[31,5,35,6],"4593":[43,5,45,6],"4601":[46,5,48,6],"4609":[53,16,57,10],"4617":[51,9,57,10],"4625":[59,9,61,10],"4633":[49,5,63,6],"4641":[18,1,64,2],"4649":[18,1,64,2],"4657":[69,5,71,6],"4665":[72,38,72,75],"4673":[72,13,72,75],"4681":[75,12,79,6],"4689":[73,5,79,6],"4697":[83,9,87,10],"4705":[89,9,93,10],"4713":[95,13,99,14],"4721":[94,9,100,10],"4729":[82,5,101,86],"4737":[102,5,107,6],"4745":[108,5,112,6],"4753":[65,26,114,2],"4761":[65,26,114,2],"4769":[115,28,117,2],"4777":[115,28,117,2],"4785":[120,9,124,10],"4793":[119,5,125,6],"4801":[118,27,129,2],"4809":[118,27,129,2],"4817":[133,5,135,6],"4825":[130,1,137,2],"4833":[130,1,137,2],"4841":[138,1,142,2],"4849":[138,1,142,2],"4857":[143,1,147,2],"4865":[143,1,147,2],"4873":[1,1,151,21],"4881":[1,1,151,21],"nBranches":74,"originalCodeFileName":"/home/blake/ExpoSE/Targets/excel-builder/node_modules/pako/lib/deflate.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/excel-builder/node_modules/pako/lib/deflate_jalangi_.js","code":"'use strict';\n\n\nvar zlib_deflate = require('./zlib/deflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\n\nvar toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH      = 0;\nvar Z_FINISH        = 4;\n\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_SYNC_FLUSH    = 2;\n\nvar Z_DEFAULT_COMPRESSION = -1;\n\nvar Z_DEFAULT_STRATEGY    = 0;\n\nvar Z_DEFLATED  = 8;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overriden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  if (!(this instanceof Deflate)) return new Deflate(options);\n\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    var dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` meansh Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n\n  if (this.ended) { return false; }\n\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\n\n    if (status !== Z_STREAM_END && status !== Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\n      if (this.options.to === 'string') {\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\n      } else {\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n      }\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH) {\n    status = zlib_deflate.deflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === Z_SYNC_FLUSH) {\n    this.onEnd(Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): ouput data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  var deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nexports.Deflate = Deflate;\nexports.deflate = deflate;\nexports.deflateRaw = deflateRaw;\nexports.gzip = gzip;\n"}