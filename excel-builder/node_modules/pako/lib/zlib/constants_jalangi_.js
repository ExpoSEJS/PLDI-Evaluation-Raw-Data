J$.iids = {"9":[1,20,1,27],"10":[15,14,15,16],"17":[1,28,1,32],"18":[16,21,16,23],"25":[1,20,1,33],"26":[17,19,17,21],"33":[1,20,1,33],"34":[18,18,18,20],"41":[1,20,1,33],"42":[22,28,22,30],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,1,4,7],"105":[5,17,5,18],"113":[6,22,6,23],"121":[7,19,7,20],"129":[8,19,8,20],"137":[9,15,9,16],"145":[10,14,10,15],"153":[11,14,11,15],"161":[12,11,12,12],"169":[13,19,13,20],"177":[14,18,14,19],"185":[15,15,15,16],"193":[16,22,16,23],"201":[17,20,17,21],"209":[18,19,18,20],"217":[19,23,19,24],"225":[20,19,20,20],"233":[21,25,21,26],"241":[22,29,22,30],"249":[23,17,23,18],"257":[24,21,24,22],"265":[25,12,25,13],"273":[26,14,26,15],"281":[27,25,27,26],"289":[28,15,28,16],"297":[29,13,29,14],"305":[30,16,30,17],"313":[31,17,31,18],"321":[4,18,32,2],"329":[4,1,32,2],"337":[4,1,32,3],"345":[1,1,32,3],"353":[1,1,32,3],"361":[1,1,32,3],"369":[1,1,32,3],"377":[1,1,32,3],"nBranches":0,"originalCodeFileName":"/home/blake/ExpoSE/Targets/excel-builder/node_modules/pako/lib/zlib/constants.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/excel-builder/node_modules/pako/lib/zlib/constants_jalangi_.js","code":"'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n"};
jalangiLabel1102:
    while (true) {
        try {
            J$.Se(345, '/home/blake/ExpoSE/Targets/excel-builder/node_modules/pako/lib/zlib/constants_jalangi_.js', '/home/blake/ExpoSE/Targets/excel-builder/node_modules/pako/lib/zlib/constants.js');
            J$.N(353, '__secret__S$', __secret__S$, 0);
            J$.N(361, '__secret__traits__', __secret__traits__, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            J$.X1(337, J$.P(329, J$.R(97, 'module', module, 2), 'exports', J$.T(321, {
                Z_NO_FLUSH: J$.T(105, 0, 22, false),
                Z_PARTIAL_FLUSH: J$.T(113, 1, 22, false),
                Z_SYNC_FLUSH: J$.T(121, 2, 22, false),
                Z_FULL_FLUSH: J$.T(129, 3, 22, false),
                Z_FINISH: J$.T(137, 4, 22, false),
                Z_BLOCK: J$.T(145, 5, 22, false),
                Z_TREES: J$.T(153, 6, 22, false),
                Z_OK: J$.T(161, 0, 22, false),
                Z_STREAM_END: J$.T(169, 1, 22, false),
                Z_NEED_DICT: J$.T(177, 2, 22, false),
                Z_ERRNO: J$.U(10, '-', J$.T(185, 1, 22, false)),
                Z_STREAM_ERROR: J$.U(18, '-', J$.T(193, 2, 22, false)),
                Z_DATA_ERROR: J$.U(26, '-', J$.T(201, 3, 22, false)),
                Z_BUF_ERROR: J$.U(34, '-', J$.T(209, 5, 22, false)),
                Z_NO_COMPRESSION: J$.T(217, 0, 22, false),
                Z_BEST_SPEED: J$.T(225, 1, 22, false),
                Z_BEST_COMPRESSION: J$.T(233, 9, 22, false),
                Z_DEFAULT_COMPRESSION: J$.U(42, '-', J$.T(241, 1, 22, false)),
                Z_FILTERED: J$.T(249, 1, 22, false),
                Z_HUFFMAN_ONLY: J$.T(257, 2, 22, false),
                Z_RLE: J$.T(265, 3, 22, false),
                Z_FIXED: J$.T(273, 4, 22, false),
                Z_DEFAULT_STRATEGY: J$.T(281, 0, 22, false),
                Z_BINARY: J$.T(289, 0, 22, false),
                Z_TEXT: J$.T(297, 1, 22, false),
                Z_UNKNOWN: J$.T(305, 2, 22, false),
                Z_DEFLATED: J$.T(313, 8, 22, false)
            }, 11, false), 0));
        } catch (J$e) {
            J$.Ex(369, J$e);
        } finally {
            if (J$.Sr(377)) {
                J$.L();
                continue jalangiLabel1102;
            } else {
                J$.L();
                break jalangiLabel1102;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
