{"8":[11,12,11,22],"9":[1,20,1,27],"10":[11,12,11,17],"16":[157,22,157,55],"17":[1,28,1,32],"24":[168,12,168,22],"25":[1,20,1,33],"26":[11,12,11,22],"32":[175,9,175,39],"33":[1,20,1,33],"34":[22,15,22,27],"40":[194,14,194,23],"41":[1,20,1,33],"42":[22,15,22,42],"48":[202,16,202,31],"49":[2,26,2,38],"50":[25,17,25,28],"56":[198,9,198,26],"57":[2,26,2,45],"58":[25,17,25,32],"64":[222,20,222,36],"65":[2,26,2,45],"66":[139,31,139,42],"72":[229,13,229,30],"73":[2,26,2,45],"74":[139,30,139,47],"80":[234,13,234,25],"81":[3,1,3,13],"82":[141,30,141,41],"88":[239,13,239,22],"89":[3,1,3,14],"90":[145,30,145,51],"96":[244,13,244,22],"97":[4,13,4,20],"98":[145,30,145,55],"104":[226,30,226,43],"105":[4,21,4,38],"106":[168,12,168,22],"112":[248,9,248,23],"113":[4,13,4,39],"114":[168,62,168,72],"120":[253,16,253,38],"121":[4,13,4,39],"122":[168,55,168,73],"128":[260,14,260,26],"129":[4,13,4,39],"130":[171,19,171,30],"136":[265,17,265,29],"137":[5,15,5,16],"138":[171,34,171,41],"144":[268,17,268,41],"145":[5,15,5,16],"146":[172,19,172,30],"152":[263,16,263,23],"153":[5,15,5,16],"154":[172,34,172,41],"160":[261,29,261,39],"161":[6,16,6,17],"162":[172,34,172,47],"168":[281,20,281,36],"169":[6,16,6,17],"170":[175,22,175,39],"176":[286,13,286,22],"177":[6,16,6,17],"178":[175,9,175,39],"184":[284,17,284,30],"185":[7,14,7,15],"186":[176,21,176,40],"192":[302,21,302,47],"193":[7,14,7,15],"194":[176,21,176,48],"200":[300,20,300,43],"201":[7,14,7,15],"202":[178,29,178,50],"208":[310,21,310,47],"209":[8,17,8,18],"210":[178,20,178,50],"216":[308,20,308,29],"217":[8,17,8,18],"218":[179,23,179,40],"224":[317,21,317,51],"225":[8,17,8,18],"226":[181,21,181,40],"232":[315,12,315,26],"233":[10,15,10,18],"234":[181,21,181,48],"240":[321,20,321,36],"241":[10,15,10,25],"242":[186,23,186,28],"248":[325,12,325,20],"249":[10,15,10,25],"250":[186,36,186,41],"256":[330,12,330,20],"257":[10,15,10,25],"258":[186,36,186,45],"264":[335,12,335,20],"266":[191,16,191,24],"272":[340,12,340,20],"273":[11,14,11,17],"274":[191,16,191,24],"280":[346,17,346,28],"281":[11,12,11,17],"282":[192,19,192,20],"288":[356,17,356,28],"289":[11,21,11,22],"290":[193,17,193,18],"296":[359,17,359,28],"297":[12,9,12,12],"298":[194,14,194,19],"304":[362,17,362,29],"305":[12,13,12,16],"312":[372,16,372,30],"313":[12,20,12,21],"314":[194,14,194,23],"320":[370,9,370,23],"321":[12,9,12,21],"322":[195,12,195,21],"328":[380,9,380,15],"329":[12,9,12,22],"330":[198,9,198,26],"336":[390,37,390,84],"337":[9,1,14,2],"338":[202,16,202,31],"344":[390,12,390,84],"345":[9,1,14,2],"346":[203,23,203,34],"352":[396,13,396,79],"353":[9,1,14,2],"354":[203,38,203,52],"360":[396,13,396,79],"361":[9,1,14,2],"362":[222,20,222,36],"368":[399,13,399,49],"369":[15,20,15,21],"370":[222,38,222,44],"376":[395,12,395,27],"377":[15,20,15,21],"384":[425,21,425,32],"385":[15,20,15,21],"386":[222,38,222,44],"392":[433,21,433,32],"393":[16,20,16,21],"394":[225,10,225,32],"400":[419,17,419,27],"401":[16,20,16,21],"402":[225,10,225,36],"408":[438,18,438,33],"409":[16,20,16,21],"410":[226,14,226,28],"416":[414,9,414,25],"417":[17,17,17,18],"418":[226,30,226,43],"424":[453,13,453,30],"425":[17,17,17,18],"426":[226,45,226,48],"432":[452,17,452,26],"433":[17,17,17,18],"440":[461,39,461,51],"441":[18,17,18,18],"442":[226,45,226,48],"448":[465,13,465,22],"449":[18,17,18,18],"450":[228,26,228,31],"456":[460,12,460,26],"457":[18,17,18,18],"458":[228,26,228,35],"464":[470,31,470,37],"465":[19,17,19,20],"466":[228,21,228,40],"472":[482,26,482,50],"473":[19,17,19,20],"474":[228,21,228,44],"480":[486,14,486,29],"481":[19,17,19,20],"482":[228,16,228,49],"488":[499,9,499,22],"489":[20,20,20,22],"490":[229,13,229,30],"496":[507,13,507,54],"497":[20,20,20,22],"498":[231,13,231,23],"504":[512,17,512,35],"505":[20,20,20,22],"512":[516,20,516,31],"513":[21,16,21,19],"514":[231,13,231,23],"520":[511,20,511,32],"521":[21,16,21,19],"522":[233,14,233,19],"528":[509,20,509,37],"529":[21,16,21,19],"530":[233,14,233,23],"536":[507,13,507,54],"537":[22,15,22,23],"538":[234,13,234,25],"544":[526,20,526,38],"545":[22,26,22,27],"546":[237,9,237,27],"552":[523,13,523,26],"553":[22,30,22,42],"554":[239,13,239,22],"560":[504,17,504,30],"561":[22,15,22,42],"562":[240,27,240,35],"568":[543,9,543,22],"569":[22,15,22,42],"570":[242,18,242,23],"576":[550,13,550,54],"577":[23,15,23,17],"578":[243,27,243,39],"584":[555,22,555,35],"585":[23,15,23,17],"586":[243,22,243,40],"592":[557,17,557,35],"593":[23,15,23,17],"594":[245,40,245,45],"600":[563,20,563,31],"601":[24,16,24,18],"602":[245,40,245,49],"608":[556,20,556,32],"609":[24,16,24,18],"610":[245,34,245,58],"616":[552,20,552,37],"617":[24,16,24,18],"618":[245,29,245,59],"624":[550,13,550,54],"625":[25,17,25,18],"626":[248,9,248,23],"632":[575,20,575,38],"633":[25,21,25,28],"634":[252,16,252,30],"640":[572,13,572,26],"641":[25,31,25,32],"642":[253,16,253,38],"648":[547,17,547,30],"649":[25,17,25,32],"650":[254,13,254,19],"656":[590,13,590,59],"657":[25,17,25,32],"664":[589,38,589,54],"665":[26,16,26,18],"666":[254,13,254,19],"672":[602,20,602,34],"673":[26,16,26,18],"674":[256,9,256,27],"680":[612,13,612,55],"681":[26,16,26,18],"682":[257,20,257,28],"688":[612,13,612,55],"689":[27,16,27,18],"690":[258,9,258,33],"696":[611,17,611,24],"697":[27,16,27,18],"698":[259,21,259,22],"704":[616,9,616,62],"705":[27,16,27,18],"706":[260,14,260,26],"712":[616,9,616,91],"713":[28,19,28,20],"714":[261,29,261,39],"720":[616,9,616,91],"721":[28,19,28,20],"722":[261,41,261,47],"728":[620,13,620,37],"729":[28,19,28,20],"736":[619,18,619,30],"737":[29,17,29,20],"738":[261,41,261,47],"744":[628,9,628,26],"745":[29,17,29,20],"746":[263,16,263,23],"752":[640,41,640,45],"753":[29,17,29,20],"754":[264,24,264,27],"760":[652,13,652,43],"761":[30,15,30,17],"768":[660,13,660,36],"769":[30,15,30,17],"770":[265,17,265,29],"776":[651,9,651,20],"777":[30,15,30,17],"778":[268,22,268,27],"784":[666,9,666,49],"785":[31,17,31,19],"786":[268,22,268,31],"792":[668,16,668,66],"793":[31,17,31,19],"794":[268,17,268,41],"800":[669,45,669,49],"801":[31,17,31,19],"802":[269,43,269,48],"808":[672,42,672,46],"809":[32,19,32,21],"810":[269,43,269,52],"816":[668,16,668,66],"817":[32,19,32,21],"818":[269,31,269,53],"824":[666,9,666,49],"825":[32,19,32,21],"826":[269,62,269,67],"832":[677,9,677,13],"833":[34,5,34,6],"834":[269,30,269,68],"840":[686,9,686,19],"841":[35,5,35,6],"842":[270,22,270,27],"849":[36,5,36,6],"850":[270,22,270,31],"857":[37,5,37,6],"858":[272,13,272,16],"865":[38,5,38,6],"873":[39,5,39,6],"874":[272,13,272,16],"881":[40,5,40,6],"882":[277,31,277,43],"889":[41,5,41,6],"890":[281,20,281,36],"897":[42,5,42,6],"898":[281,38,281,44],"905":[43,5,43,6],"913":[44,5,44,6],"914":[281,38,281,44],"921":[45,5,45,6],"922":[282,50,282,58],"929":[46,5,46,6],"930":[282,34,282,59],"937":[47,5,47,6],"938":[282,34,282,64],"945":[48,5,48,6],"946":[284,17,284,30],"953":[49,5,49,6],"954":[284,32,284,35],"961":[50,5,50,6],"969":[51,5,51,6],"970":[284,32,284,35],"977":[52,5,52,6],"978":[285,24,285,29],"985":[53,5,53,6],"986":[285,24,285,33],"993":[54,5,54,6],"994":[286,13,286,22],"1001":[55,5,55,6],"1002":[289,14,289,19],"1009":[56,5,56,6],"1010":[289,34,289,50],"1017":[57,5,57,6],"1018":[298,30,298,42],"1025":[58,5,58,6],"1026":[300,27,300,43],"1033":[59,5,59,6],"1034":[300,20,300,43],"1041":[60,5,60,6],"1042":[300,45,300,51],"1049":[61,5,61,6],"1057":[62,5,62,6],"1058":[300,45,300,51],"1065":[33,19,63,2],"1066":[302,25,302,47],"1073":[33,19,63,2],"1074":[302,21,302,47],"1081":[33,19,63,2],"1082":[302,49,302,52],"1089":[65,5,65,6],"1097":[66,5,66,6],"1098":[302,49,302,52],"1105":[67,5,67,6],"1106":[303,26,303,34],"1113":[68,5,68,6],"1121":[69,5,69,6],"1122":[303,26,303,34],"1129":[70,5,70,6],"1130":[306,18,306,28],"1137":[71,5,71,6],"1138":[308,20,308,29],"1145":[72,5,72,6],"1146":[308,31,308,37],"1153":[73,5,73,6],"1161":[74,5,74,6],"1162":[308,31,308,37],"1169":[75,5,75,6],"1170":[310,25,310,47],"1177":[76,5,76,6],"1178":[310,21,310,47],"1185":[77,5,77,6],"1186":[310,49,310,52],"1193":[78,5,78,6],"1201":[79,5,79,6],"1202":[310,49,310,52],"1209":[80,5,80,6],"1210":[311,24,311,30],"1217":[81,5,81,6],"1225":[82,5,82,6],"1226":[311,24,311,30],"1233":[83,5,83,6],"1234":[314,14,314,15],"1241":[84,5,84,6],"1242":[315,12,315,26],"1249":[85,5,85,6],"1250":[315,28,315,34],"1257":[86,5,86,6],"1265":[87,5,87,7],"1266":[315,28,315,34],"1273":[88,5,88,7],"1274":[316,27,316,36],"1281":[89,5,89,7],"1282":[317,30,317,51],"1289":[90,5,90,7],"1290":[317,25,317,51],"1297":[91,5,91,7],"1298":[317,21,317,51],"1305":[92,5,92,7],"1306":[317,53,317,56],"1313":[93,5,93,7],"1321":[94,5,94,7],"1322":[317,53,317,56],"1329":[64,19,95,2],"1330":[318,30,318,36],"1337":[64,19,95,2],"1345":[64,19,95,2],"1346":[318,30,318,36],"1353":[97,5,97,6],"1354":[318,24,318,36],"1361":[98,5,98,6],"1362":[321,20,321,36],"1369":[99,5,99,6],"1370":[321,38,321,44],"1377":[100,5,100,6],"1385":[101,5,101,6],"1386":[321,38,321,44],"1393":[102,5,102,6],"1394":[325,12,325,20],"1401":[103,5,103,6],"1402":[326,22,326,27],"1409":[104,5,104,6],"1410":[326,22,326,31],"1417":[105,5,105,6],"1418":[327,9,327,12],"1425":[106,5,106,6],"1433":[107,5,107,6],"1434":[327,9,327,12],"1441":[108,5,108,6],"1442":[328,9,328,22],"1449":[109,5,109,6],"1450":[330,12,330,20],"1457":[110,5,110,6],"1458":[331,22,331,27],"1465":[111,5,111,6],"1466":[331,22,331,31],"1473":[112,5,112,6],"1474":[332,9,332,12],"1481":[113,5,113,6],"1489":[114,5,114,6],"1490":[332,9,332,12],"1497":[115,5,115,6],"1498":[333,9,333,22],"1505":[96,20,116,2],"1506":[335,12,335,20],"1513":[96,20,116,2],"1514":[336,22,336,27],"1521":[96,20,116,2],"1522":[336,22,336,31],"1529":[118,5,118,7],"1530":[337,9,337,12],"1537":[119,5,119,7],"1545":[120,5,120,7],"1546":[337,9,337,12],"1553":[121,5,121,6],"1554":[338,9,338,22],"1561":[122,5,122,6],"1562":[340,12,340,20],"1569":[123,5,123,6],"1570":[341,22,341,27],"1577":[124,5,124,6],"1578":[341,22,341,31],"1585":[125,5,125,6],"1586":[342,9,342,12],"1593":[126,5,126,7],"1601":[127,5,127,6],"1602":[342,9,342,12],"1609":[128,5,128,7],"1610":[343,9,343,22],"1617":[129,5,129,6],"1618":[345,29,345,40],"1625":[130,5,130,7],"1626":[346,17,346,28],"1633":[131,5,131,6],"1634":[346,30,346,33],"1641":[132,5,132,7],"1649":[133,5,133,6],"1650":[346,30,346,33],"1657":[134,5,134,7],"1658":[347,22,347,27],"1665":[135,5,135,6],"1666":[347,22,347,31],"1673":[136,5,136,7],"1674":[348,22,348,27],"1681":[117,16,137,2],"1682":[350,67,350,79],"1689":[117,16,137,2],"1690":[356,17,356,28],"1697":[117,16,137,2],"1698":[356,30,356,33],"1705":[138,21,138,24],"1713":[138,21,138,24],"1714":[356,30,356,33],"1721":[138,21,138,24],"1722":[357,21,357,26],"1729":[139,24,139,29],"1730":[359,17,359,28],"1737":[139,31,139,38],"1738":[359,30,359,33],"1745":[139,41,139,42],"1753":[139,46,139,47],"1754":[359,30,359,33],"1761":[139,20,139,48],"1762":[360,21,360,26],"1769":[139,20,139,48],"1770":[362,17,362,29],"1777":[139,20,139,48],"1778":[362,31,362,34],"1785":[140,1,140,5],"1793":[140,6,140,18],"1794":[362,31,362,34],"1801":[140,1,140,19],"1802":[363,19,363,24],"1809":[140,1,140,20],"1810":[365,17,365,30],"1817":[141,24,141,29],"1818":[370,9,370,23],"1825":[141,30,141,37],"1826":[372,16,372,30],"1833":[141,40,141,41],"1834":[373,23,373,34],"1841":[141,20,141,42],"1842":[382,22,382,26],"1849":[141,20,141,42],"1850":[388,15,388,20],"1857":[141,20,141,42],"1858":[389,15,389,20],"1865":[142,1,142,5],"1866":[390,12,390,33],"1873":[142,6,142,18],"1874":[390,37,390,60],"1881":[142,1,142,19],"1882":[390,64,390,84],"1889":[142,1,142,20],"1890":[394,13,394,19],"1897":[143,22,143,27],"1898":[395,12,395,27],"1905":[143,28,143,41],"1906":[396,13,396,27],"1913":[143,18,143,42],"1914":[396,52,396,57],"1921":[143,18,143,42],"1922":[397,13,397,16],"1929":[143,18,143,42],"1937":[144,1,144,5],"1938":[397,13,397,16],"1945":[144,6,144,16],"1946":[404,15,404,16],"1953":[144,1,144,17],"1954":[414,9,414,25],"1961":[144,1,144,18],"1962":[416,44,416,50],"1969":[145,24,145,29],"1970":[416,34,416,50],"1977":[145,30,145,39],"1978":[416,20,416,56],"1985":[145,42,145,51],"1986":[416,83,416,89],"1993":[145,54,145,55],"1994":[416,73,416,89],"2001":[145,20,145,56],"2002":[416,73,416,93],"2009":[145,20,145,56],"2010":[416,20,416,94],"2017":[145,20,145,56],"2018":[417,32,417,44],"2025":[146,1,146,5],"2026":[418,13,418,17],"2033":[146,6,146,18],"2041":[146,1,146,19],"2042":[418,13,418,17],"2049":[146,1,146,20],"2050":[419,17,419,27],"2057":[147,23,147,28],"2058":[423,30,423,45],"2065":[147,29,147,41],"2066":[423,30,423,49],"2073":[147,19,147,42],"2074":[425,21,425,32],"2081":[147,19,147,42],"2082":[426,27,426,44],"2089":[147,19,147,42],"2090":[429,17,429,23],"2097":[148,1,148,5],"2105":[148,6,148,17],"2106":[429,17,429,23],"2113":[148,1,148,18],"2114":[433,21,433,32],"2121":[148,1,148,19],"2122":[434,29,434,44],"2129":[149,21,149,26],"2130":[438,18,438,33],"2137":[149,27,149,34],"2138":[448,20,448,22],"2145":[149,17,149,35],"2146":[452,17,452,26],"2153":[149,17,149,35],"2154":[452,28,452,31],"2161":[149,17,149,35],"2169":[150,1,150,5],"2170":[452,28,452,31],"2177":[150,6,150,15],"2178":[453,18,453,23],"2185":[150,1,150,16],"2186":[453,13,453,30],"2193":[150,1,150,17],"2194":[457,18,457,23],"2201":[152,5,152,9],"2202":[457,18,457,27],"2209":[152,24,152,35],"2210":[460,12,460,26],"2217":[152,5,152,35],"2218":[461,39,461,51],"2225":[152,5,152,36],"2226":[461,54,461,64],"2233":[153,5,153,9],"2241":[153,23,153,33],"2242":[462,14,462,22],"2249":[153,5,153,33],"2250":[464,9,464,20],"2257":[153,5,153,34],"2258":[466,35,466,43],"2265":[154,5,154,9],"2266":[466,35,466,47],"2273":[154,23,154,33],"2274":[470,14,470,29],"2281":[154,5,154,33],"2282":[470,31,470,37],"2289":[154,5,154,34],"2290":[470,39,470,42],"2297":[155,5,155,9],"2305":[155,18,155,23],"2306":[470,39,470,42],"2313":[155,5,155,23],"2314":[476,28,476,40],"2321":[155,5,155,24],"2322":[481,14,481,22],"2329":[156,5,156,9],"2330":[481,31,481,36],"2337":[156,23,156,33],"2338":[481,45,481,50],"2345":[156,5,156,33],"2346":[481,26,481,51],"2353":[156,5,156,34],"2354":[482,26,482,50],"2361":[157,5,157,9],"2362":[482,25,482,81],"2369":[157,22,157,33],"2370":[483,14,483,19],"2377":[157,37,157,48],"2378":[483,14,483,23],"2385":[157,37,157,55],"2386":[483,32,483,37],"2393":[157,5,157,55],"2394":[483,32,483,41],"2401":[157,5,157,56],"2402":[484,21,484,27],"2409":[151,1,158,2],"2417":[151,1,158,2],"2418":[484,21,484,27],"2425":[151,1,158,2],"2426":[486,14,486,29],"2433":[151,1,158,2],"2434":[493,19,493,21],"2441":[151,1,158,2],"2442":[495,24,495,29],"2449":[151,1,158,2],"2450":[495,24,495,33],"2457":[151,1,158,2],"2458":[499,9,499,22],"2465":[163,5,163,9],"2466":[503,11,503,23],"2473":[163,21,163,29],"2474":[503,10,503,28],"2481":[163,5,163,29],"2482":[503,10,503,32],"2489":[163,5,163,30],"2490":[504,17,504,30],"2497":[164,5,164,9],"2498":[504,32,504,35],"2505":[164,21,164,22],"2513":[164,5,164,22],"2514":[504,32,504,35],"2521":[164,5,164,23],"2522":[506,25,506,30],"2529":[165,5,165,9],"2530":[506,24,506,35],"2537":[165,22,165,31],"2538":[506,24,506,39],"2545":[165,5,165,31],"2546":[507,13,507,20],"2553":[165,5,165,32],"2561":[162,1,166,2],"2562":[507,13,507,32],"2569":[162,1,166,2],"2570":[507,36,507,54],"2577":[162,1,166,2],"2578":[509,20,509,37],"2585":[162,1,166,2],"2586":[510,23,510,33],"2593":[168,12,168,16],"2594":[511,20,511,32],"2601":[168,19,168,22],"2602":[512,17,512,35],"2609":[168,25,168,35],"2610":[513,27,513,37],"2617":[168,36,168,40],"2618":[513,17,513,40],"2625":[168,25,168,41],"2626":[515,23,515,34],"2633":[168,44,168,54],"2634":[515,13,515,37],"2641":[168,55,168,58],"2642":[516,20,516,31],"2649":[168,62,168,66],"2650":[517,23,517,36],"2657":[168,71,168,72],"2658":[517,13,517,39],"2665":[168,44,168,74],"2666":[519,23,519,38],"2673":[168,12,168,74],"2674":[519,13,519,41],"2681":[168,5,168,75],"2682":[523,13,523,26],"2689":[167,1,169,2],"2690":[526,20,526,38],"2697":[167,1,169,2],"2698":[537,19,537,21],"2705":[167,1,169,2],"2706":[539,24,539,29],"2713":[171,5,171,6],"2714":[539,24,539,33],"2721":[171,5,171,18],"2722":[543,9,543,22],"2729":[171,19,171,20],"2730":[547,17,547,30],"2738":[547,32,547,35],"2745":[171,19,171,30],"2747":[171,19,171,30],"2754":[547,32,547,35],"2761":[171,34,171,35],"2762":[549,25,549,30],"2769":[171,38,171,41],"2770":[549,24,549,35],"2777":[171,5,171,41],"2778":[549,24,549,39],"2785":[171,5,171,42],"2786":[550,13,550,20],"2793":[172,5,172,6],"2801":[172,5,172,18],"2802":[550,13,550,32],"2809":[172,19,172,20],"2810":[550,36,550,54],"2818":[552,20,552,37],"2825":[172,19,172,30],"2826":[555,22,555,29],"2827":[172,19,172,30],"2841":[172,34,172,35],"2842":[555,22,555,35],"2849":[172,40,172,41],"2850":[556,20,556,32],"2857":[172,44,172,47],"2858":[557,17,557,35],"2865":[172,5,172,47],"2866":[559,17,559,24],"2873":[172,5,172,48],"2881":[170,1,173,2],"2882":[559,17,559,24],"2889":[170,1,173,2],"2890":[562,26,562,35],"2897":[170,1,173,2],"2898":[563,20,563,31],"2905":[170,1,173,2],"2906":[565,26,565,35],"2913":[175,9,175,10],"2914":[568,26,568,36],"2921":[175,9,175,19],"2922":[572,13,572,26],"2929":[175,22,175,30],"2930":[575,20,575,38],"2937":[175,33,175,39],"2938":[589,24,589,36],"2945":[176,9,176,10],"2946":[589,38,589,54],"2953":[176,21,176,26],"2954":[589,56,589,69],"2961":[176,30,176,31],"2969":[176,30,176,40],"2970":[589,56,589,69],"2977":[176,43,176,48],"2978":[590,23,590,48],"2985":[176,9,176,48],"2986":[590,23,590,52],"2987":[176,9,176,48],"2993":[176,9,176,49],"2994":[590,13,590,59],"3001":[177,9,177,18],"3002":[594,23,594,38],"3009":[177,19,177,20],"3010":[594,18,594,39],"3017":[177,22,177,23],"3018":[594,18,594,43],"3025":[177,22,177,30],"3026":[594,18,594,47],"3033":[177,9,177,31],"3034":[594,18,594,51],"3041":[177,9,177,32],"3042":[599,18,599,30],"3049":[178,9,178,10],"3050":[600,18,600,28],"3057":[178,20,178,25],"3058":[601,18,601,29],"3065":[178,29,178,37],"3066":[602,20,602,34],"3073":[178,40,178,41],"3074":[602,36,602,42],"3081":[178,40,178,50],"3089":[178,9,178,50],"3090":[602,36,602,42],"3097":[178,9,178,51],"3098":[603,32,603,50],"3105":[179,9,179,10],"3106":[603,32,603,54],"3113":[179,23,179,29],"3114":[605,31,605,41],"3121":[179,32,179,40],"3122":[606,31,606,41],"3129":[179,9,179,40],"3130":[611,17,611,24],"3131":[179,9,179,40],"3137":[179,9,179,41],"3138":[611,26,611,29],"3145":[181,9,181,10],"3153":[181,21,181,26],"3154":[611,26,611,29],"3161":[181,30,181,31],"3162":[611,47,611,48],"3169":[181,30,181,40],"3170":[612,13,612,27],"3177":[181,43,181,48],"3178":[612,43,612,48],"3185":[181,9,181,48],"3186":[612,31,612,55],"3187":[181,9,181,48],"3193":[181,9,181,49],"3194":[616,21,616,26],"3201":[182,9,182,10],"3202":[616,9,616,33],"3209":[182,23,182,29],"3210":[616,49,616,55],"3217":[182,9,182,29],"3218":[616,37,616,62],"3219":[182,9,182,29],"3225":[182,9,182,30],"3226":[616,78,616,84],"3233":[174,1,184,2],"3234":[616,66,616,91],"3241":[174,1,184,2],"3242":[619,18,619,30],"3249":[174,1,184,2],"3250":[619,32,619,35],"3257":[174,1,184,2],"3265":[174,1,184,2],"3266":[619,32,619,35],"3273":[186,5,186,14],"3274":[620,25,620,30],"3281":[186,15,186,16],"3282":[620,13,620,37],"3289":[186,18,186,22],"3290":[628,9,628,26],"3297":[186,23,186,24],"3298":[640,19,640,36],"3305":[186,27,186,28],"3306":[640,18,640,54],"3313":[186,18,186,29],"3314":[644,18,644,35],"3321":[186,31,186,35],"3322":[651,9,651,20],"3329":[186,36,186,37],"3330":[652,13,652,43],"3337":[186,40,186,41],"3338":[658,20,658,33],"3345":[186,44,186,45],"3346":[658,20,658,37],"3353":[186,31,186,46],"3354":[658,20,658,43],"3361":[186,5,186,47],"3362":[659,23,659,39],"3369":[186,5,186,48],"3370":[659,23,659,43],"3377":[185,1,187,2],"3378":[659,23,659,49],"3385":[185,1,187,2],"3386":[660,13,660,36],"3393":[185,1,187,2],"3394":[664,34,664,48],"3401":[185,1,187,2],"3402":[666,9,666,23],"3409":[185,1,187,2],"3410":[666,9,666,35],"3417":[189,15,189,16],"3418":[666,47,666,49],"3425":[189,15,189,16],"3426":[666,39,666,49],"3433":[189,15,189,16],"3434":[668,16,668,38],"3441":[191,16,191,20],"3442":[668,42,668,66],"3449":[191,23,191,24],"3450":[669,23,669,40],"3457":[191,9,191,12],"3458":[669,22,669,58],"3465":[191,9,191,24],"3466":[672,23,672,37],"3473":[191,9,191,25],"3474":[672,22,672,55],"3481":[192,19,192,20],"3482":[673,27,673,48],"3489":[192,9,192,13],"3490":[673,50,673,71],"3497":[192,9,192,20],"3498":[673,73,673,88],"3505":[192,9,192,21],"3506":[682,29,682,43],"3513":[193,17,193,18],"3514":[682,19,682,43],"3521":[193,9,193,12],"3522":[682,47,682,57],"3529":[193,9,193,18],"3530":[682,47,682,63],"3537":[193,9,193,19],"3538":[683,29,683,43],"3546":[683,19,683,43],"3553":[194,16,194,19],"3554":[683,19,683,47],"3561":[194,14,194,19],"3562":[683,51,683,61],"3569":[194,22,194,23],"3570":[684,19,684,39],"3577":[195,12,195,15],"3578":[684,43,684,51],"3585":[195,20,195,21],"3586":[685,5,685,17],"3593":[195,12,195,21],"3594":[686,9,686,19],"3601":[195,5,195,22],"3602":[687,21,687,27],"3609":[188,1,196,2],"3610":[687,9,687,30],"3617":[188,1,196,2],"3618":[689,9,689,20],"3625":[188,1,196,2],"3626":[690,9,690,15],"3633":[188,1,196,2],"3641":[188,1,196,2],"3642":[690,9,690,15],"3649":[198,9,198,10],"3650":[691,22,691,49],"3657":[198,9,198,19],"3658":[691,22,691,53],"3665":[198,24,198,26],"3666":[691,21,691,58],"3673":[199,9,199,18],"3674":[691,9,691,61],"3681":[199,19,199,20],"3682":[692,21,692,37],"3689":[199,22,199,23],"3690":[692,9,692,40],"3697":[199,22,199,30],"3698":[694,27,694,44],"3705":[199,9,199,31],"3706":[694,12,694,44],"3713":[199,9,199,32],"3721":[200,9,200,10],"3729":[200,20,200,21],"3737":[200,9,200,21],"3745":[200,9,200,22],"3753":[201,9,201,10],"3761":[201,22,201,23],"3769":[201,9,201,23],"3777":[201,9,201,24],"3785":[202,16,202,17],"3793":[202,16,202,26],"3801":[202,30,202,31],"3809":[203,9,203,10],"3817":[203,9,203,22],"3825":[203,23,203,24],"3841":[203,23,203,34],"3843":[203,23,203,34],"3857":[203,38,203,39],"3865":[203,38,203,46],"3873":[203,49,203,52],"3881":[203,9,203,52],"3889":[203,9,203,53],"3897":[204,9,204,10],"3905":[204,22,204,23],"3913":[204,9,204,23],"3915":[204,9,204,23],"3921":[204,9,204,24],"3929":[205,9,205,10],"3937":[205,23,205,24],"3945":[205,9,205,24],"3947":[205,9,205,24],"3953":[205,9,205,25],"3961":[197,1,207,2],"3969":[197,1,207,2],"3977":[197,1,207,2],"3985":[209,16,209,20],"3993":[209,16,209,29],"4001":[209,16,209,29],"4009":[209,16,209,29],"4017":[210,20,210,24],"4025":[210,20,210,33],"4033":[210,20,210,33],"4041":[210,20,210,33],"4049":[211,17,211,21],"4057":[211,17,211,31],"4065":[211,17,211,43],"4073":[211,17,211,43],"4081":[211,17,211,43],"4089":[212,21,212,25],"4097":[212,21,212,35],"4105":[212,21,212,45],"4113":[212,21,212,45],"4121":[212,21,212,45],"4129":[213,17,213,21],"4137":[213,17,213,31],"4145":[213,17,213,42],"4153":[213,17,213,42],"4161":[213,17,213,42],"4169":[214,16,214,20],"4177":[214,16,214,30],"4185":[214,16,214,41],"4193":[214,16,214,41],"4201":[214,16,214,41],"4209":[215,22,215,26],"4217":[215,22,215,36],"4225":[215,22,215,47],"4233":[215,22,215,47],"4241":[215,22,215,47],"4249":[221,20,221,21],"4257":[221,20,221,21],"4265":[221,20,221,21],"4273":[222,17,222,18],"4281":[222,17,222,18],"4289":[222,20,222,24],"4297":[222,28,222,36],"4313":[222,38,222,42],"4321":[222,38,222,44],"4337":[223,9,223,10],"4345":[223,9,223,19],"4353":[223,20,223,24],"4361":[223,28,223,29],"4369":[223,9,223,29],"4377":[223,9,223,30],"4385":[225,5,225,9],"4393":[225,10,225,11],"4401":[225,10,225,16],"4409":[225,17,225,18],"4417":[225,17,225,27],"4425":[225,10,225,28],"4433":[225,31,225,32],"4441":[225,35,225,36],"4449":[225,40,225,41],"4457":[225,5,225,41],"4465":[225,5,225,42],"4473":[226,14,226,15],"4481":[226,14,226,24],"4489":[226,27,226,28],"4497":[226,14,226,28],"4505":[226,30,226,31],"4513":[226,34,226,43],"4529":[226,45,226,46],"4537":[226,45,226,48],"4553":[227,13,227,14],"4561":[227,13,227,19],"4569":[227,20,227,21],"4577":[227,13,227,22],"4585":[227,13,227,22],"4593":[227,9,227,23],"4601":[228,16,228,20],"4609":[228,21,228,25],"4617":[228,26,228,27],"4625":[228,30,228,31],"4633":[228,34,228,35],"4641":[228,21,228,36],"4649":[228,39,228,40],"4657":[228,43,228,44],"4665":[228,16,228,45],"4673":[228,48,228,49],"4681":[228,16,228,49],"4689":[228,9,228,50],"4697":[229,13,229,17],"4705":[229,20,229,30],"4713":[230,20,230,30],"4721":[230,20,230,30],"4729":[230,13,230,31],"4745":[231,13,231,21],"4753":[231,13,231,23],"4769":[231,13,231,24],"4777":[233,9,233,13],"4785":[233,14,233,15],"4793":[233,18,233,19],"4801":[233,22,233,23],"4809":[233,27,233,31],"4817":[233,9,233,31],"4825":[233,9,233,32],"4833":[234,13,234,14],"4841":[234,17,234,25],"4849":[237,9,237,10],"4857":[237,9,237,19],"4865":[237,20,237,24],"4881":[237,9,237,27],"4883":[237,9,237,27],"4897":[237,9,237,28],"4905":[238,17,238,18],"4913":[238,17,238,18],"4921":[238,9,238,19],"4929":[239,13,239,14],"4937":[239,18,239,22],"4945":[240,21,240,26],"4953":[240,27,240,28],"4961":[240,31,240,35],"4969":[240,21,240,36],"4977":[240,21,240,36],"4985":[240,13,240,37],"4993":[242,13,242,17],"5001":[242,18,242,19],"5009":[242,22,242,23],"5017":[242,13,242,24],"5025":[242,13,242,24],"5033":[242,9,242,25],"5041":[243,9,243,10],"5049":[243,22,243,23],"5057":[243,27,243,31],"5065":[243,34,243,39],"5073":[243,9,243,40],"5075":[243,9,243,40],"5081":[243,9,243,41],"5089":[244,13,244,22],"5097":[245,13,245,14],"5105":[245,29,245,30],"5113":[245,34,245,39],"5121":[245,40,245,41],"5129":[245,44,245,45],"5137":[245,48,245,49],"5145":[245,34,245,50],"5153":[245,53,245,58],"5161":[245,13,245,59],"5163":[245,13,245,59],"5169":[245,13,245,60],"5177":[248,9,248,17],"5185":[248,22,248,23],"5193":[249,9,249,16],"5201":[249,9,249,16],"5209":[252,16,252,26],"5217":[252,29,252,30],"5225":[252,16,252,30],"5233":[252,9,252,31],"5241":[253,16,253,17],"5249":[253,16,253,26],"5257":[253,27,253,31],"5265":[253,16,253,32],"5273":[253,37,253,38],"5289":[254,13,254,17],"5297":[254,13,254,19],"5313":[254,13,254,20],"5321":[256,9,256,10],"5329":[256,9,256,19],"5337":[256,20,256,24],"5353":[256,9,256,27],"5355":[256,9,256,27],"5369":[256,9,256,28],"5377":[257,9,257,10],"5385":[257,9,257,19],"5393":[257,20,257,24],"5401":[257,27,257,28],"5409":[257,33,257,34],"5417":[257,9,257,34],"5419":[257,9,257,34],"5425":[257,9,257,35],"5433":[258,9,258,10],"5441":[258,9,258,19],"5449":[258,20,258,30],"5465":[258,9,258,33],"5467":[258,9,258,33],"5481":[258,9,258,34],"5489":[259,21,259,22],"5497":[259,9,259,17],"5505":[259,9,259,22],"5513":[259,9,259,23],"5521":[260,14,260,22],"5529":[260,25,260,26],"5537":[261,17,261,27],"5545":[261,17,261,27],"5553":[261,29,261,33],"5561":[261,38,261,39],"5577":[261,41,261,45],"5585":[261,41,261,47],"5601":[262,13,262,14],"5609":[262,13,262,23],"5617":[262,24,262,28],"5625":[262,13,262,29],"5633":[262,13,262,29],"5641":[262,9,262,30],"5649":[263,16,263,17],"5657":[263,22,263,23],"5665":[264,17,264,18],"5673":[264,17,264,23],"5689":[264,26,264,27],"5697":[264,24,264,27],"5705":[264,17,264,28],"5713":[264,17,264,28],"5721":[264,13,264,29],"5729":[265,17,265,18],"5737":[265,21,265,29],"5745":[268,17,268,21],"5753":[268,22,268,23],"5761":[268,26,268,27],"5769":[268,30,268,31],"5777":[268,17,268,32],"5785":[268,37,268,41],"5793":[269,17,269,18],"5801":[269,31,269,35],"5809":[269,38,269,42],"5817":[269,43,269,44],"5825":[269,47,269,48],"5833":[269,51,269,52],"5841":[269,38,269,53],"5849":[269,57,269,61],"5857":[269,62,269,63],"5865":[269,66,269,67],"5873":[269,57,269,68],"5881":[269,17,269,68],"5883":[269,17,269,68],"5889":[269,17,269,69],"5897":[270,17,270,21],"5905":[270,22,270,23],"5913":[270,26,270,27],"5921":[270,30,270,31],"5929":[270,35,270,39],"5937":[270,17,270,39],"5945":[270,17,270,40],"5961":[272,13,272,14],"5969":[272,13,272,16],"5985":[272,13,272,17],"5993":[208,1,275,2],"6001":[208,1,275,2],"6009":[208,1,275,2],"6017":[208,1,275,2],"6025":[208,1,275,2],"6033":[208,1,275,2],"6041":[208,1,275,2],"6049":[208,1,275,2],"6057":[208,1,275,2],"6065":[208,1,275,2],"6073":[208,1,275,2],"6081":[208,1,275,2],"6089":[208,1,275,2],"6097":[208,1,275,2],"6105":[208,1,275,2],"6113":[208,1,275,2],"6121":[208,1,275,2],"6129":[208,1,275,2],"6137":[277,25,277,30],"6145":[277,31,277,39],"6153":[277,42,277,43],"6161":[277,21,277,44],"6169":[277,21,277,44],"6177":[277,21,277,44],"6185":[278,16,278,17],"6193":[278,16,278,17],"6201":[278,16,278,17],"6209":[281,17,281,18],"6217":[281,17,281,18],"6225":[281,20,281,24],"6233":[281,28,281,36],"6249":[281,38,281,42],"6257":[281,38,281,44],"6273":[282,9,282,18],"6281":[282,19,282,23],"6289":[282,34,282,38],"6297":[282,41,282,49],"6305":[282,50,282,54],"6313":[282,57,282,58],"6321":[282,41,282,59],"6329":[282,63,282,64],"6337":[282,34,282,64],"6345":[282,9,282,64],"6353":[282,9,282,65],"6361":[284,14,284,15],"6369":[284,14,284,15],"6377":[284,17,284,18],"6385":[284,22,284,30],"6401":[284,32,284,33],"6409":[284,32,284,35],"6425":[285,19,285,23],"6433":[285,24,285,25],"6441":[285,28,285,29],"6449":[285,32,285,33],"6457":[285,19,285,34],"6465":[285,19,285,34],"6473":[285,19,285,34],"6481":[286,13,286,16],"6489":[286,21,286,22],"6497":[289,9,289,13],"6505":[289,14,289,15],"6513":[289,18,289,19],"6521":[289,23,289,33],"6529":[289,34,289,43],"6537":[289,44,289,47],"6553":[289,34,289,50],"6555":[289,34,289,50],"6569":[289,52,289,55],"6577":[289,23,289,56],"6585":[289,9,289,56],"6593":[289,9,289,57],"6601":[276,1,291,2],"6609":[276,1,291,2],"6617":[276,1,291,2],"6625":[276,1,291,2],"6633":[276,1,291,2],"6641":[276,1,291,2],"6649":[276,1,291,2],"6657":[276,1,291,2],"6665":[276,1,291,2],"6673":[276,1,291,2],"6681":[298,24,298,29],"6689":[298,30,298,38],"6697":[298,41,298,42],"6705":[298,20,298,43],"6713":[298,20,298,43],"6721":[298,20,298,43],"6729":[299,14,299,15],"6737":[299,14,299,15],"6745":[299,5,299,16],"6753":[300,17,300,18],"6761":[300,17,300,18],"6769":[300,20,300,24],"6777":[300,27,300,39],"6785":[300,42,300,43],"6801":[300,45,300,49],"6809":[300,45,300,51],"6825":[301,9,301,20],"6833":[301,21,301,25],"6841":[301,29,301,35],"6849":[301,9,301,35],"6857":[301,9,301,36],"6865":[302,18,302,19],"6873":[302,18,302,19],"6881":[302,21,302,22],"6889":[302,25,302,26],"6897":[302,30,302,41],"6905":[302,42,302,46],"6913":[302,30,302,47],"6929":[302,49,302,50],"6937":[302,49,302,52],"6953":[303,13,303,25],"6969":[303,26,303,32],"6977":[303,26,303,34],"6993":[303,38,303,42],"7001":[303,13,303,42],"7009":[303,13,303,43],"7017":[306,5,306,17],"7025":[306,18,306,24],"7033":[306,27,306,28],"7041":[306,32,306,36],"7049":[306,5,306,36],"7057":[306,5,306,37],"7065":[307,12,307,13],"7073":[307,12,307,13],"7081":[307,5,307,14],"7089":[308,17,308,18],"7097":[308,17,308,18],"7105":[308,20,308,24],"7113":[308,27,308,29],"7129":[308,31,308,35],"7137":[308,31,308,37],"7153":[309,9,309,18],"7161":[309,19,309,23],"7169":[309,27,309,31],"7177":[309,9,309,31],"7185":[309,9,309,32],"7193":[310,18,310,19],"7201":[310,18,310,19],"7209":[310,21,310,22],"7217":[310,25,310,26],"7225":[310,30,310,41],"7233":[310,42,310,46],"7241":[310,30,310,47],"7257":[310,49,310,50],"7265":[310,49,310,52],"7281":[311,13,311,23],"7297":[311,24,311,28],"7305":[311,24,311,30],"7321":[311,34,311,38],"7329":[311,13,311,38],"7337":[311,13,311,39],"7345":[314,14,314,15],"7353":[314,5,314,9],"7361":[314,5,314,15],"7369":[314,5,314,16],"7377":[315,12,315,16],"7385":[315,19,315,26],"7401":[315,28,315,32],"7409":[315,28,315,34],"7425":[316,9,316,18],"7433":[316,19,316,23],"7441":[316,27,316,31],"7449":[316,35,316,36],"7457":[316,9,316,36],"7465":[316,9,316,37],"7473":[317,18,317,19],"7481":[317,18,317,19],"7489":[317,21,317,22],"7497":[317,25,317,26],"7505":[317,30,317,41],"7513":[317,42,317,46],"7521":[317,30,317,47],"7529":[317,50,317,51],"7545":[317,53,317,54],"7553":[317,53,317,56],"7569":[318,13,318,23],"7577":[318,24,318,27],"7593":[318,30,318,34],"7601":[318,30,318,36],"7617":[318,40,318,44],"7625":[318,13,318,44],"7633":[318,13,318,45],"7641":[321,17,321,18],"7649":[321,17,321,18],"7657":[321,20,321,24],"7665":[321,28,321,36],"7681":[321,38,321,42],"7689":[321,38,321,44],"7705":[322,9,322,17],"7713":[322,18,322,22],"7721":[322,26,322,27],"7729":[322,9,322,27],"7737":[322,9,322,28],"7745":[324,9,324,10],"7753":[324,9,324,10],"7761":[324,5,324,11],"7769":[325,12,325,13],"7777":[325,17,325,20],"7785":[326,9,326,21],"7793":[326,22,326,23],"7801":[326,26,326,27],"7809":[326,30,326,31],"7817":[326,35,326,36],"7825":[326,9,326,36],"7833":[326,9,326,37],"7849":[327,9,327,10],"7857":[327,9,327,12],"7873":[327,9,327,13],"7881":[328,9,328,17],"7889":[328,18,328,19],"7905":[328,9,328,22],"7907":[328,9,328,22],"7921":[328,9,328,23],"7929":[330,12,330,13],"7937":[330,17,330,20],"7945":[331,9,331,21],"7953":[331,22,331,23],"7961":[331,26,331,27],"7969":[331,30,331,31],"7977":[331,35,331,36],"7985":[331,9,331,36],"7993":[331,9,331,37],"8009":[332,9,332,10],"8017":[332,9,332,12],"8033":[332,9,332,13],"8041":[333,9,333,17],"8049":[333,18,333,19],"8065":[333,9,333,22],"8067":[333,9,333,22],"8081":[333,9,333,23],"8089":[335,12,335,13],"8097":[335,17,335,20],"8105":[336,9,336,21],"8113":[336,22,336,23],"8121":[336,26,336,27],"8129":[336,30,336,31],"8137":[336,35,336,36],"8145":[336,9,336,36],"8153":[336,9,336,37],"8169":[337,9,337,10],"8177":[337,9,337,12],"8193":[337,9,337,13],"8201":[338,9,338,17],"8209":[338,18,338,19],"8225":[338,9,338,22],"8227":[338,9,338,22],"8241":[338,9,338,23],"8249":[340,12,340,13],"8257":[340,17,340,20],"8265":[341,9,341,21],"8273":[341,22,341,23],"8281":[341,26,341,27],"8289":[341,30,341,31],"8297":[341,35,341,36],"8305":[341,9,341,36],"8313":[341,9,341,37],"8329":[342,9,342,10],"8337":[342,9,342,12],"8353":[342,9,342,13],"8361":[343,9,343,17],"8369":[343,18,343,19],"8385":[343,9,343,22],"8387":[343,9,343,22],"8401":[343,9,343,23],"8409":[345,5,345,14],"8417":[345,15,345,27],"8425":[345,29,345,36],"8433":[345,39,345,40],"8441":[345,42,345,50],"8449":[345,5,345,51],"8457":[345,5,345,52],"8465":[346,14,346,15],"8473":[346,14,346,15],"8481":[346,17,346,18],"8489":[346,21,346,28],"8505":[346,30,346,31],"8513":[346,30,346,33],"8529":[347,9,347,21],"8537":[347,22,347,23],"8545":[347,26,347,27],"8553":[347,30,347,31],"8561":[347,35,347,36],"8569":[347,9,347,36],"8577":[347,9,347,37],"8585":[348,9,348,21],"8593":[348,22,348,23],"8601":[348,26,348,27],"8609":[348,31,348,41],"8617":[348,42,348,43],"8625":[348,45,348,46],"8633":[348,31,348,47],"8641":[348,9,348,47],"8649":[348,9,348,48],"8657":[350,25,350,39],"8665":[350,40,350,52],"8673":[350,54,350,65],"8681":[350,67,350,75],"8689":[350,78,350,79],"8697":[350,81,350,88],"8705":[350,90,350,98],"8713":[350,21,350,99],"8721":[350,21,350,99],"8729":[350,5,350,100],"8737":[351,25,351,39],"8745":[351,40,351,52],"8753":[351,54,351,65],"8761":[351,67,351,68],"8769":[351,70,351,77],"8777":[351,79,351,87],"8785":[351,21,351,88],"8793":[351,21,351,88],"8801":[351,5,351,89],"8809":[352,26,352,40],"8817":[352,45,352,50],"8825":[352,51,352,52],"8833":[352,41,352,53],"8841":[352,55,352,67],"8849":[352,69,352,70],"8857":[352,72,352,80],"8865":[352,82,352,93],"8873":[352,22,352,94],"8881":[352,22,352,94],"8889":[352,5,352,95],"8897":[292,1,353,2],"8905":[292,1,353,2],"8913":[292,1,353,2],"8921":[292,1,353,2],"8929":[292,1,353,2],"8937":[292,1,353,2],"8945":[292,1,353,2],"8953":[292,1,353,2],"8961":[356,14,356,15],"8969":[356,14,356,15],"8977":[356,17,356,18],"8985":[356,21,356,28],"9001":[356,30,356,31],"9009":[356,30,356,33],"9025":[357,9,357,10],"9033":[357,9,357,20],"9041":[357,21,357,22],"9049":[357,25,357,26],"9057":[357,30,357,31],"9065":[357,9,357,31],"9073":[357,9,357,32],"9081":[359,14,359,15],"9089":[359,14,359,15],"9097":[359,17,359,18],"9105":[359,21,359,28],"9121":[359,30,359,31],"9129":[359,30,359,33],"9145":[360,9,360,10],"9153":[360,9,360,20],"9161":[360,21,360,22],"9169":[360,25,360,26],"9177":[360,30,360,31],"9185":[360,9,360,31],"9193":[360,9,360,32],"9201":[362,14,362,15],"9209":[362,14,362,15],"9217":[362,17,362,18],"9225":[362,21,362,29],"9241":[362,31,362,32],"9249":[362,31,362,34],"9265":[363,9,363,10],"9273":[363,9,363,18],"9281":[363,19,363,20],"9289":[363,23,363,24],"9297":[363,28,363,29],"9305":[363,9,363,29],"9313":[363,9,363,30],"9321":[365,5,365,6],"9329":[365,5,365,16],"9337":[365,17,365,26],"9345":[365,29,365,30],"9353":[365,34,365,35],"9361":[365,5,365,35],"9369":[365,5,365,36],"9377":[366,5,366,6],"9385":[366,17,366,18],"9393":[366,32,366,33],"9401":[366,17,366,33],"9409":[366,5,366,33],"9417":[366,5,366,34],"9425":[367,5,367,6],"9433":[367,18,367,19],"9441":[367,30,367,31],"9449":[367,18,367,31],"9457":[367,5,367,31],"9465":[367,5,367,32],"9473":[354,1,368,2],"9481":[354,1,368,2],"9489":[354,1,368,2],"9497":[354,1,368,2],"9505":[370,9,370,10],"9513":[370,9,370,19],"9521":[370,22,370,23],"9529":[371,9,371,18],"9537":[371,19,371,20],"9545":[371,22,371,23],"9553":[371,22,371,30],"9561":[371,9,371,31],"9569":[371,9,371,32],"9577":[372,16,372,17],"9585":[372,16,372,26],"9593":[372,29,372,30],"9601":[373,9,373,10],"9609":[373,9,373,22],"9617":[373,23,373,24],"9633":[373,23,373,34],"9635":[373,23,373,34],"9649":[373,38,373,39],"9657":[373,38,373,46],"9665":[373,9,373,46],"9673":[373,9,373,47],"9681":[375,5,375,6],"9689":[375,16,375,17],"9697":[375,5,375,17],"9705":[375,5,375,18],"9713":[376,5,376,6],"9721":[376,18,376,19],"9729":[376,5,376,19],"9737":[376,5,376,20],"9745":[369,1,377,2],"9753":[369,1,377,2],"9761":[369,1,377,2],"9769":[379,5,379,14],"9777":[379,15,379,16],"9785":[379,5,379,17],"9793":[379,5,379,18],"9801":[380,9,380,15],"9809":[381,9,381,18],"9817":[381,19,381,20],"9825":[381,22,381,25],"9833":[381,9,381,26],"9841":[381,9,381,27],"9849":[382,9,382,18],"9857":[382,19,382,20],"9865":[382,23,382,26],"9873":[382,9,382,27],"9881":[382,9,382,28],"9889":[384,5,384,10],"9897":[384,20,384,21],"9905":[384,20,384,33],"9913":[384,35,384,36],"9921":[384,35,384,43],"9929":[384,45,384,48],"9937":[384,50,384,53],"9945":[384,55,384,56],"9953":[384,55,384,64],"9961":[384,5,384,65],"9963":[384,5,384,19],"9969":[384,5,384,66],"9977":[385,5,385,6],"9985":[385,18,385,21],"9993":[385,5,385,21],"9995":[385,5,385,21],"10001":[385,5,385,22],"10009":[378,1,386,2],"10017":[378,1,386,2],"10025":[378,1,386,2],"10033":[378,1,386,2],"10041":[378,1,386,2],"10049":[378,1,386,2],"10057":[388,15,388,16],"10065":[388,19,388,20],"10073":[388,15,388,20],"10081":[388,15,388,20],"10089":[389,15,389,16],"10097":[389,19,389,20],"10105":[389,15,389,20],"10113":[389,15,389,20],"10121":[390,12,390,16],"10129":[390,17,390,20],"10137":[390,12,390,21],"10145":[390,24,390,28],"10153":[390,29,390,32],"10161":[390,24,390,33],"10169":[390,37,390,41],"10177":[390,42,390,45],"10185":[390,37,390,46],"10193":[390,51,390,55],"10201":[390,56,390,59],"10209":[390,51,390,60],"10217":[390,64,390,69],"10225":[390,70,390,71],"10233":[390,64,390,72],"10241":[390,76,390,81],"10249":[390,82,390,83],"10257":[390,76,390,84],"10265":[390,12,390,84],"10273":[390,5,390,85],"10281":[387,1,391,2],"10289":[387,1,391,2],"10297":[387,1,391,2],"10305":[387,1,391,2],"10313":[387,1,391,2],"10321":[387,1,391,2],"10329":[387,1,391,2],"10337":[387,1,391,2],"10345":[393,13,393,14],"10353":[393,13,393,19],"10361":[393,20,393,21],"10369":[393,13,393,22],"10377":[393,13,393,22],"10385":[393,13,393,22],"10393":[394,13,394,14],"10401":[394,18,394,19],"10409":[394,13,394,19],"10417":[394,13,394,19],"10425":[395,12,395,13],"10433":[395,17,395,18],"10441":[395,17,395,27],"10449":[396,13,396,14],"10457":[396,17,396,18],"10465":[396,17,396,27],"10473":[396,31,396,38],"10481":[396,39,396,43],"10489":[396,45,396,46],"10497":[396,45,396,51],"10505":[396,52,396,53],"10513":[396,56,396,57],"10521":[396,45,396,58],"10529":[396,60,396,61],"10537":[396,60,396,66],"10545":[396,67,396,68],"10553":[396,60,396,69],"10561":[396,71,396,72],"10569":[396,71,396,78],"10577":[396,31,396,79],"10593":[397,13,397,14],"10601":[397,13,397,16],"10617":[397,13,397,17],"10625":[399,13,399,20],"10633":[399,21,399,25],"10641":[399,27,399,28],"10649":[399,30,399,31],"10657":[399,30,399,36],"10665":[399,37,399,38],"10673":[399,30,399,39],"10681":[399,41,399,42],"10689":[399,41,399,48],"10697":[399,13,399,49],"10705":[402,9,402,10],"10713":[402,9,402,15],"10721":[402,16,402,17],"10729":[402,21,402,22],"10737":[402,21,402,27],"10745":[402,28,402,29],"10753":[402,21,402,30],"10761":[402,9,402,30],"10769":[402,9,402,31],"10777":[403,13,403,14],"10785":[403,13,403,14],"10793":[403,9,403,15],"10801":[404,15,404,16],"10809":[404,9,404,10],"10817":[404,9,404,16],"10825":[404,9,404,17],"10833":[406,5,406,6],"10841":[406,5,406,11],"10849":[406,12,406,13],"10857":[406,17,406,18],"10865":[406,5,406,18],"10873":[406,5,406,19],"10881":[392,1,407,2],"10889":[392,1,407,2],"10897":[392,1,407,2],"10905":[392,1,407,2],"10913":[392,1,407,2],"10921":[392,1,407,2],"10929":[392,1,407,2],"10937":[411,14,411,15],"10945":[411,14,411,15],"10953":[411,14,411,15],"10961":[414,9,414,10],"10969":[414,9,414,19],"10977":[414,24,414,25],"10985":[416,20,416,21],"10993":[416,20,416,33],"11001":[416,34,416,35],"11009":[416,34,416,41],"11017":[416,44,416,46],"11025":[416,49,416,50],"11033":[416,20,416,51],"11041":[416,55,416,56],"11049":[416,59,416,60],"11057":[416,59,416,72],"11065":[416,73,416,74],"11073":[416,73,416,80],"11081":[416,83,416,85],"11089":[416,88,416,89],"11097":[416,92,416,93],"11105":[416,59,416,94],"11113":[416,20,416,94],"11121":[416,13,416,95],"11129":[417,18,417,19],"11137":[417,18,417,31],"11145":[417,32,417,33],"11153":[417,32,417,39],"11161":[417,42,417,44],"11169":[417,18,417,45],"11177":[417,18,417,45],"11185":[417,13,417,46],"11201":[418,13,418,15],"11209":[418,13,418,17],"11225":[418,13,418,18],"11233":[419,17,419,21],"11241":[419,26,419,27],"11249":[420,17,420,26],"11257":[420,27,420,28],"11265":[420,30,420,32],"11273":[420,34,420,39],"11281":[420,17,420,40],"11289":[420,17,420,41],"11297":[422,24,422,36],"11305":[422,37,422,39],"11313":[422,24,422,40],"11321":[422,24,422,40],"11329":[422,17,422,41],"11337":[423,17,423,26],"11345":[423,27,423,28],"11353":[423,30,423,34],"11361":[423,37,423,45],"11369":[423,48,423,49],"11377":[423,51,423,56],"11385":[423,17,423,57],"11393":[423,17,423,58],"11401":[424,25,424,36],"11409":[424,37,424,41],"11417":[424,25,424,42],"11425":[424,25,424,42],"11433":[424,17,424,43],"11441":[425,21,425,26],"11449":[425,31,425,32],"11457":[426,27,426,38],"11465":[426,39,426,43],"11473":[426,27,426,44],"11481":[426,21,426,23],"11489":[426,21,426,44],"11497":[426,21,426,45],"11505":[427,21,427,30],"11513":[427,31,427,32],"11521":[427,34,427,36],"11529":[427,38,427,43],"11537":[427,21,427,44],"11545":[427,21,427,45],"11561":[429,17,429,21],"11569":[429,17,429,23],"11585":[429,17,429,24],"11593":[430,24,430,30],"11601":[430,31,430,35],"11609":[430,24,430,36],"11617":[430,24,430,36],"11625":[430,17,430,37],"11633":[431,17,431,26],"11641":[431,27,431,28],"11649":[431,30,431,34],"11657":[431,36,431,41],"11665":[431,17,431,42],"11673":[431,17,431,43],"11681":[432,25,432,36],"11689":[432,37,432,41],"11697":[432,25,432,42],"11705":[432,25,432,42],"11713":[432,17,432,43],"11721":[433,21,433,26],"11729":[433,31,433,32],"11737":[434,29,434,38],"11745":[434,39,434,43],"11753":[434,29,434,44],"11761":[434,21,434,25],"11769":[434,21,434,44],"11777":[434,21,434,45],"11785":[435,21,435,30],"11793":[435,31,435,32],"11801":[435,34,435,38],"11809":[435,40,435,45],"11817":[435,21,435,46],"11825":[435,21,435,47],"11833":[438,18,438,20],"11841":[438,23,438,24],"11849":[438,23,438,33],"11857":[440,5,440,14],"11865":[440,15,440,16],"11873":[440,18,440,27],"11881":[440,29,440,34],"11889":[440,5,440,35],"11897":[440,5,440,36],"11905":[408,1,441,2],"11913":[408,1,441,2],"11921":[408,1,441,2],"11929":[408,1,441,2],"11937":[408,1,441,2],"11945":[408,1,441,2],"11953":[408,1,441,2],"11961":[408,1,441,2],"11969":[408,1,441,2],"11977":[408,1,441,2],"11985":[443,16,443,20],"11993":[443,16,443,29],"12001":[443,16,443,29],"12009":[443,16,443,29],"12017":[444,17,444,21],"12025":[444,17,444,31],"12033":[444,17,444,43],"12041":[444,17,444,43],"12049":[444,17,444,43],"12057":[445,21,445,25],"12065":[445,21,445,35],"12073":[445,21,445,45],"12081":[445,21,445,45],"12089":[445,21,445,45],"12097":[446,17,446,21],"12105":[446,17,446,31],"12113":[446,17,446,37],"12121":[446,17,446,37],"12129":[446,17,446,37],"12137":[448,21,448,22],"12145":[448,20,448,22],"12153":[448,20,448,22],"12161":[450,5,450,6],"12169":[450,18,450,19],"12177":[450,5,450,19],"12185":[450,5,450,20],"12193":[451,5,451,6],"12201":[451,18,451,27],"12209":[451,5,451,27],"12217":[451,5,451,28],"12225":[452,14,452,15],"12233":[452,14,452,15],"12241":[452,17,452,18],"12249":[452,21,452,26],"12265":[452,28,452,29],"12273":[452,28,452,31],"12289":[453,13,453,17],"12297":[453,18,453,19],"12305":[453,22,453,23],"12313":[453,13,453,24],"12321":[453,29,453,30],"12329":[454,13,454,14],"12337":[454,13,454,19],"12345":[454,22,454,23],"12361":[454,20,454,32],"12363":[454,20,454,32],"12369":[454,47,454,48],"12377":[454,47,454,48],"12385":[454,13,454,48],"12393":[454,13,454,49],"12401":[455,13,455,14],"12409":[455,13,455,20],"12417":[455,21,455,22],"12425":[455,26,455,27],"12433":[455,13,455,27],"12441":[455,13,455,28],"12449":[457,13,457,17],"12457":[457,18,457,19],"12465":[457,22,457,23],"12473":[457,26,457,27],"12481":[457,31,457,32],"12489":[457,13,457,32],"12497":[457,13,457,33],"12505":[460,12,460,13],"12513":[460,12,460,22],"12521":[460,25,460,26],"12529":[461,16,461,17],"12537":[461,16,461,22],"12545":[461,25,461,26],"12561":[461,23,461,35],"12563":[461,23,461,35],"12569":[461,39,461,47],"12577":[461,50,461,51],"12593":[461,56,461,64],"12601":[461,54,461,64],"12609":[461,67,461,68],"12617":[461,16,461,68],"12625":[461,16,461,68],"12633":[461,9,461,69],"12641":[462,9,462,13],"12649":[462,14,462,18],"12657":[462,21,462,22],"12665":[462,26,462,27],"12673":[462,9,462,27],"12681":[462,9,462,28],"12689":[463,9,463,10],"12697":[463,9,463,16],"12705":[463,17,463,21],"12713":[463,25,463,26],"12721":[463,9,463,26],"12729":[463,9,463,27],"12737":[464,9,464,10],"12753":[464,9,464,20],"12755":[464,9,464,20],"12769":[464,9,464,21],"12777":[465,13,465,22],"12785":[466,13,466,14],"12793":[466,29,466,34],"12801":[466,35,466,39],"12809":[466,42,466,43],"12817":[466,46,466,47],"12825":[466,29,466,48],"12833":[466,13,466,48],"12835":[466,13,466,48],"12841":[466,13,466,49],"12849":[469,5,469,9],"12857":[469,21,469,29],"12865":[469,5,469,29],"12873":[469,5,469,30],"12881":[470,14,470,15],"12889":[470,14,470,24],"12897":[470,28,470,29],"12905":[470,14,470,29],"12913":[470,31,470,32],"12921":[470,36,470,37],"12937":[470,39,470,40],"12945":[470,39,470,42],"12961":[471,9,471,19],"12969":[471,20,471,21],"12977":[471,23,471,27],"12985":[471,29,471,30],"12993":[471,9,471,31],"13001":[471,9,471,32],"13009":[473,12,473,17],"13017":[473,12,473,17],"13025":[473,5,473,18],"13033":[475,13,475,14],"13041":[475,13,475,19],"13049":[475,20,475,21],"13057":[475,13,475,22],"13065":[475,13,475,22],"13073":[475,9,475,23],"13081":[476,9,476,10],"13089":[476,9,476,15],"13097":[476,16,476,17],"13105":[476,21,476,22],"13113":[476,21,476,27],"13121":[476,28,476,29],"13137":[476,28,476,40],"13139":[476,28,476,40],"13153":[476,21,476,41],"13161":[476,9,476,41],"13169":[476,9,476,42],"13177":[477,9,477,19],"13185":[477,20,477,21],"13193":[477,23,477,27],"13201":[477,29,477,30],"13209":[477,9,477,31],"13217":[477,9,477,32],"13225":[478,13,478,14],"13233":[478,13,478,19],"13241":[478,20,478,21],"13249":[478,13,478,22],"13257":[478,13,478,22],"13265":[478,9,478,23],"13273":[479,9,479,10],"13281":[479,9,479,15],"13289":[479,18,479,19],"13305":[479,16,479,28],"13307":[479,16,479,28],"13313":[479,32,479,33],"13321":[479,9,479,33],"13329":[479,9,479,34],"13337":[480,9,480,10],"13345":[480,9,480,15],"13353":[480,18,480,19],"13369":[480,16,480,28],"13371":[480,16,480,28],"13377":[480,32,480,33],"13385":[480,9,480,33],"13393":[480,9,480,34],"13401":[481,9,481,13],"13409":[481,14,481,18],"13417":[481,21,481,22],"13425":[481,26,481,30],"13433":[481,31,481,32],"13441":[481,35,481,36],"13449":[481,26,481,37],"13457":[481,40,481,44],"13465":[481,45,481,46],"13473":[481,49,481,50],"13481":[481,40,481,51],"13489":[481,9,481,51],"13497":[481,9,481,52],"13505":[482,9,482,10],"13513":[482,9,482,16],"13521":[482,17,482,21],"13529":[482,26,482,27],"13537":[482,26,482,33],"13545":[482,34,482,35],"13553":[482,26,482,36],"13561":[482,40,482,41],"13569":[482,40,482,47],"13577":[482,48,482,49],"13585":[482,40,482,50],"13593":[482,53,482,54],"13601":[482,53,482,60],"13609":[482,61,482,62],"13617":[482,53,482,63],"13625":[482,66,482,67],"13633":[482,66,482,73],"13641":[482,74,482,75],"13649":[482,66,482,76],"13657":[482,80,482,81],"13665":[482,9,482,81],"13673":[482,9,482,82],"13681":[483,9,483,13],"13689":[483,14,483,15],"13697":[483,18,483,19],"13705":[483,22,483,23],"13713":[483,27,483,31],"13721":[483,32,483,33],"13729":[483,36,483,37],"13737":[483,40,483,41],"13745":[483,45,483,49],"13753":[483,27,483,49],"13761":[483,9,483,49],"13769":[483,9,483,50],"13777":[484,9,484,10],"13785":[484,9,484,15],"13793":[484,16,484,17],"13809":[484,21,484,25],"13817":[484,21,484,27],"13833":[484,9,484,27],"13841":[484,9,484,28],"13849":[485,9,485,19],"13857":[485,20,485,21],"13865":[485,23,485,27],"13873":[485,29,485,30],"13881":[485,9,485,31],"13889":[485,9,485,32],"13897":[486,14,486,15],"13905":[486,14,486,24],"13913":[486,28,486,29],"13921":[487,5,487,6],"13929":[487,5,487,11],"13937":[487,14,487,15],"13953":[487,12,487,24],"13955":[487,12,487,24],"13961":[487,28,487,29],"13969":[487,28,487,34],"13977":[487,35,487,36],"13985":[487,28,487,37],"13993":[487,5,487,37],"14001":[487,5,487,38],"14009":[488,5,488,15],"14017":[488,16,488,17],"14025":[488,19,488,23],"14033":[488,5,488,24],"14041":[488,5,488,25],"14049":[489,5,489,14],"14057":[489,15,489,19],"14065":[489,21,489,29],"14073":[489,31,489,32],"14081":[489,31,489,41],"14089":[489,5,489,42],"14097":[489,5,489,43],"14105":[442,1,490,2],"14113":[442,1,490,2],"14121":[442,1,490,2],"14129":[442,1,490,2],"14137":[442,1,490,2],"14145":[442,1,490,2],"14153":[442,1,490,2],"14161":[442,1,490,2],"14169":[442,1,490,2],"14177":[442,1,490,2],"14185":[442,1,490,2],"14193":[442,1,490,2],"14201":[493,20,493,21],"14209":[493,19,493,21],"14217":[493,19,493,21],"14225":[495,19,495,23],"14233":[495,24,495,25],"14241":[495,28,495,29],"14249":[495,32,495,33],"14257":[495,19,495,34],"14265":[495,19,495,34],"14273":[495,19,495,34],"14281":[496,17,496,18],"14289":[496,17,496,18],"14297":[496,17,496,18],"14305":[497,21,497,22],"14313":[497,21,497,22],"14321":[497,21,497,22],"14329":[498,21,498,22],"14337":[498,21,498,22],"14345":[498,21,498,22],"14353":[499,9,499,16],"14361":[499,21,499,22],"14369":[500,21,500,24],"14377":[500,21,500,24],"14385":[500,9,500,25],"14393":[501,21,501,22],"14401":[501,21,501,22],"14409":[501,9,501,23],"14417":[503,5,503,9],"14425":[503,11,503,19],"14433":[503,22,503,23],"14441":[503,27,503,28],"14449":[503,31,503,32],"14457":[503,36,503,41],"14465":[503,5,503,41],"14473":[503,5,503,42],"14481":[504,14,504,15],"14489":[504,14,504,15],"14497":[504,17,504,18],"14505":[504,22,504,30],"14521":[504,32,504,33],"14529":[504,32,504,35],"14545":[505,18,505,25],"14553":[505,18,505,25],"14561":[505,9,505,26],"14569":[506,19,506,23],"14577":[506,25,506,26],"14585":[506,29,506,30],"14593":[506,34,506,35],"14601":[506,38,506,39],"14609":[506,19,506,40],"14617":[506,19,506,40],"14625":[506,9,506,41],"14641":[507,15,507,20],"14649":[507,13,507,20],"14657":[507,23,507,32],"14665":[507,36,507,42],"14673":[507,47,507,54],"14681":[509,20,509,25],"14689":[509,28,509,37],"14697":[510,13,510,14],"14705":[510,13,510,22],"14713":[510,23,510,29],"14721":[510,32,510,33],"14729":[510,38,510,43],"14737":[510,13,510,43],"14739":[510,13,510,43],"14745":[510,13,510,44],"14753":[511,20,511,26],"14761":[511,31,511,32],"14769":[512,17,512,23],"14777":[512,28,512,35],"14785":[513,17,513,18],"14793":[513,17,513,26],"14801":[513,27,513,33],"14809":[513,36,513,37],"14825":[513,17,513,40],"14827":[513,17,513,40],"14841":[513,17,513,41],"14849":[515,13,515,14],"14857":[515,13,515,22],"14865":[515,23,515,30],"14873":[515,33,515,34],"14889":[515,13,515,37],"14891":[515,13,515,37],"14905":[515,13,515,38],"14913":[516,20,516,25],"14921":[516,29,516,31],"14929":[517,13,517,14],"14937":[517,13,517,22],"14945":[517,23,517,32],"14953":[517,35,517,36],"14969":[517,13,517,39],"14971":[517,13,517,39],"14985":[517,13,517,40],"14993":[519,13,519,14],"15001":[519,13,519,22],"15009":[519,23,519,34],"15017":[519,37,519,38],"15033":[519,13,519,41],"15035":[519,13,519,41],"15049":[519,13,519,42],"15057":[521,17,521,18],"15065":[521,17,521,18],"15073":[521,9,521,19],"15081":[522,19,522,25],"15089":[522,19,522,25],"15097":[522,9,522,26],"15105":[523,13,523,20],"15113":[523,25,523,26],"15121":[524,25,524,28],"15129":[524,25,524,28],"15137":[524,13,524,29],"15145":[525,25,525,26],"15153":[525,25,525,26],"15161":[525,13,525,27],"15169":[526,20,526,26],"15177":[526,31,526,38],"15185":[527,25,527,26],"15193":[527,25,527,26],"15201":[527,13,527,27],"15209":[528,25,528,26],"15217":[528,25,528,26],"15225":[528,13,528,27],"15233":[530,25,530,26],"15241":[530,25,530,26],"15249":[530,13,530,27],"15257":[531,25,531,26],"15265":[531,25,531,26],"15273":[531,13,531,27],"15281":[491,1,534,2],"15289":[491,1,534,2],"15297":[491,1,534,2],"15305":[491,1,534,2],"15313":[491,1,534,2],"15321":[491,1,534,2],"15329":[491,1,534,2],"15337":[491,1,534,2],"15345":[491,1,534,2],"15353":[491,1,534,2],"15361":[491,1,534,2],"15369":[491,1,534,2],"15377":[537,20,537,21],"15385":[537,19,537,21],"15393":[537,19,537,21],"15401":[539,19,539,23],"15409":[539,24,539,25],"15417":[539,28,539,29],"15425":[539,32,539,33],"15433":[539,19,539,34],"15441":[539,19,539,34],"15449":[539,19,539,34],"15457":[540,17,540,18],"15465":[540,17,540,18],"15473":[540,17,540,18],"15481":[541,21,541,22],"15489":[541,21,541,22],"15497":[541,21,541,22],"15505":[542,21,542,22],"15513":[542,21,542,22],"15521":[542,21,542,22],"15529":[543,9,543,16],"15537":[543,21,543,22],"15545":[544,21,544,24],"15553":[544,21,544,24],"15561":[544,9,544,25],"15569":[545,21,545,22],"15577":[545,21,545,22],"15585":[545,9,545,23],"15593":[547,14,547,15],"15601":[547,14,547,15],"15609":[547,17,547,18],"15617":[547,22,547,30],"15633":[547,32,547,33],"15641":[547,32,547,35],"15657":[548,18,548,25],"15665":[548,18,548,25],"15673":[548,9,548,26],"15681":[549,19,549,23],"15689":[549,25,549,26],"15697":[549,29,549,30],"15705":[549,34,549,35],"15713":[549,38,549,39],"15721":[549,19,549,40],"15729":[549,19,549,40],"15737":[549,9,549,41],"15753":[550,15,550,20],"15761":[550,13,550,20],"15769":[550,23,550,32],"15777":[550,36,550,42],"15785":[550,47,550,54],"15793":[552,20,552,25],"15801":[552,28,552,37],"15809":[554,17,554,26],"15817":[554,27,554,28],"15825":[554,30,554,36],"15833":[554,38,554,39],"15841":[554,38,554,47],"15849":[554,17,554,48],"15857":[554,17,554,49],"15873":[555,24,555,29],"15881":[555,22,555,29],"15889":[555,34,555,35],"15897":[556,20,556,26],"15905":[556,31,556,32],"15913":[557,17,557,23],"15921":[557,28,557,35],"15929":[558,17,558,26],"15937":[558,27,558,28],"15945":[558,30,558,36],"15953":[558,38,558,39],"15961":[558,38,558,47],"15969":[558,17,558,48],"15977":[558,17,558,49],"15993":[559,17,559,22],"16001":[559,17,559,24],"16017":[559,17,559,25],"16025":[561,13,561,22],"16033":[561,23,561,24],"16041":[561,26,561,33],"16049":[561,35,561,36],"16057":[561,35,561,44],"16065":[561,13,561,45],"16073":[561,13,561,46],"16081":[562,13,562,22],"16089":[562,23,562,24],"16097":[562,26,562,31],"16105":[562,34,562,35],"16113":[562,37,562,38],"16121":[562,13,562,39],"16129":[562,13,562,40],"16137":[563,20,563,25],"16145":[563,29,563,31],"16153":[564,13,564,22],"16161":[564,23,564,24],"16169":[564,26,564,35],"16177":[564,37,564,38],"16185":[564,37,564,46],"16193":[564,13,564,47],"16201":[564,13,564,48],"16209":[565,13,565,22],"16217":[565,23,565,24],"16225":[565,26,565,31],"16233":[565,34,565,35],"16241":[565,37,565,38],"16249":[565,13,565,39],"16257":[565,13,565,40],"16265":[567,13,567,22],"16273":[567,23,567,24],"16281":[567,26,567,37],"16289":[567,39,567,40],"16297":[567,39,567,48],"16305":[567,13,567,49],"16313":[567,13,567,50],"16321":[568,13,568,22],"16329":[568,23,568,24],"16337":[568,26,568,31],"16345":[568,34,568,36],"16353":[568,38,568,39],"16361":[568,13,568,40],"16369":[568,13,568,41],"16377":[570,17,570,18],"16385":[570,17,570,18],"16393":[570,9,570,19],"16401":[571,19,571,25],"16409":[571,19,571,25],"16417":[571,9,571,26],"16425":[572,13,572,20],"16433":[572,25,572,26],"16441":[573,25,573,28],"16449":[573,25,573,28],"16457":[573,13,573,29],"16465":[574,25,574,26],"16473":[574,25,574,26],"16481":[574,13,574,27],"16489":[575,20,575,26],"16497":[575,31,575,38],"16505":[576,25,576,26],"16513":[576,25,576,26],"16521":[576,13,576,27],"16529":[577,25,577,26],"16537":[577,25,577,26],"16545":[577,13,577,27],"16553":[579,25,579,26],"16561":[579,25,579,26],"16569":[579,13,579,27],"16577":[580,25,580,26],"16585":[580,25,580,26],"16593":[580,13,580,27],"16601":[535,1,583,2],"16609":[535,1,583,2],"16617":[535,1,583,2],"16625":[535,1,583,2],"16633":[535,1,583,2],"16641":[535,1,583,2],"16649":[535,1,583,2],"16657":[535,1,583,2],"16665":[535,1,583,2],"16673":[535,1,583,2],"16681":[535,1,583,2],"16689":[535,1,583,2],"16697":[586,5,586,14],"16705":[586,15,586,16],"16713":[586,18,586,19],"16721":[586,18,586,29],"16729":[586,31,586,32],"16737":[586,31,586,39],"16745":[586,31,586,48],"16753":[586,5,586,49],"16761":[586,5,586,50],"16769":[587,5,587,14],"16777":[587,15,587,16],"16785":[587,18,587,19],"16793":[587,18,587,29],"16801":[587,31,587,32],"16809":[587,31,587,39],"16817":[587,31,587,48],"16825":[587,5,587,49],"16833":[587,5,587,50],"16841":[588,5,588,15],"16849":[588,16,588,17],"16857":[588,19,588,20],"16865":[588,19,588,28],"16873":[588,5,588,29],"16881":[588,5,588,30],"16889":[589,24,589,32],"16897":[589,35,589,36],"16905":[589,24,589,36],"16913":[589,38,589,49],"16921":[589,53,589,54],"16937":[589,56,589,67],"16945":[589,56,589,69],"16961":[590,13,590,14],"16969":[590,13,590,22],"16977":[590,23,590,31],"16985":[590,32,590,43],"16993":[590,23,590,44],"17001":[590,47,590,48],"17009":[590,51,590,52],"17017":[590,13,590,53],"17025":[590,58,590,59],"17033":[594,5,594,6],"17041":[594,18,594,19],"17049":[594,23,594,34],"17057":[594,37,594,38],"17065":[594,42,594,43],"17073":[594,46,594,47],"17081":[594,50,594,51],"17089":[594,5,594,51],"17091":[594,5,594,51],"17097":[594,5,594,52],"17105":[595,12,595,23],"17113":[595,12,595,23],"17121":[595,5,595,24],"17129":[584,1,596,2],"17137":[584,1,596,2],"17145":[584,1,596,2],"17153":[584,1,596,2],"17161":[599,5,599,14],"17169":[599,15,599,16],"17177":[599,18,599,24],"17185":[599,27,599,30],"17193":[599,32,599,33],"17201":[599,5,599,34],"17209":[599,5,599,35],"17217":[600,5,600,14],"17225":[600,15,600,16],"17233":[600,18,600,24],"17241":[600,27,600,28],"17249":[600,30,600,31],"17257":[600,5,600,32],"17265":[600,5,600,33],"17273":[601,5,601,14],"17281":[601,15,601,16],"17289":[601,18,601,25],"17297":[601,28,601,29],"17305":[601,31,601,32],"17313":[601,5,601,33],"17321":[601,5,601,34],"17329":[602,17,602,18],"17337":[602,17,602,18],"17345":[602,20,602,24],"17353":[602,27,602,34],"17369":[602,36,602,40],"17377":[602,36,602,42],"17393":[603,9,603,18],"17401":[603,19,603,20],"17409":[603,22,603,23],"17417":[603,22,603,31],"17425":[603,32,603,40],"17433":[603,41,603,45],"17441":[603,32,603,46],"17449":[603,49,603,50],"17457":[603,53,603,54],"17465":[603,22,603,55],"17473":[603,57,603,58],"17481":[603,9,603,59],"17489":[603,9,603,60],"17497":[605,5,605,14],"17505":[605,15,605,16],"17513":[605,18,605,19],"17521":[605,18,605,29],"17529":[605,31,605,37],"17537":[605,40,605,41],"17545":[605,5,605,42],"17553":[605,5,605,43],"17561":[606,5,606,14],"17569":[606,15,606,16],"17577":[606,18,606,19],"17585":[606,18,606,29],"17593":[606,31,606,37],"17601":[606,40,606,41],"17609":[606,5,606,42],"17617":[606,5,606,43],"17625":[597,1,607,2],"17633":[597,1,607,2],"17641":[597,1,607,2],"17649":[597,1,607,2],"17657":[597,1,607,2],"17665":[597,1,607,2],"17673":[597,1,607,2],"17681":[609,22,609,32],"17689":[609,22,609,32],"17697":[609,22,609,32],"17705":[611,14,611,15],"17713":[611,14,611,15],"17721":[611,17,611,18],"17729":[611,22,611,24],"17745":[611,26,611,27],"17753":[611,26,611,29],"17769":[611,47,611,48],"17777":[611,31,611,41],"17785":[611,31,611,48],"17793":[611,26,611,29],"17801":[612,13,612,23],"17809":[612,26,612,27],"17817":[612,31,612,32],"17825":[612,31,612,42],"17833":[612,43,612,44],"17841":[612,47,612,48],"17849":[612,31,612,49],"17857":[612,54,612,55],"17865":[613,20,613,28],"17873":[613,20,613,28],"17881":[613,13,613,29],"17889":[616,9,616,10],"17897":[616,9,616,20],"17905":[616,21,616,22],"17913":[616,25,616,26],"17921":[616,9,616,27],"17929":[616,32,616,33],"17937":[616,37,616,38],"17945":[616,37,616,48],"17953":[616,49,616,51],"17961":[616,54,616,55],"17969":[616,37,616,56],"17977":[616,61,616,62],"17985":[616,66,616,67],"17993":[616,66,616,77],"18001":[616,78,616,80],"18009":[616,83,616,84],"18017":[616,66,616,85],"18025":[616,90,616,91],"18033":[617,16,617,22],"18041":[617,16,617,22],"18049":[617,9,617,23],"18057":[619,14,619,16],"18065":[619,14,619,16],"18073":[619,18,619,19],"18081":[619,22,619,30],"18097":[619,32,619,33],"18105":[619,32,619,35],"18121":[620,13,620,14],"18129":[620,13,620,24],"18137":[620,25,620,26],"18145":[620,29,620,30],"18153":[620,13,620,31],"18161":[620,36,620,37],"18169":[621,20,621,26],"18177":[621,20,621,26],"18185":[621,13,621,27],"18193":[624,12,624,20],"18201":[624,12,624,20],"18209":[624,5,624,21],"18217":[608,1,625,2],"18225":[608,1,625,2],"18233":[608,1,625,2],"18241":[608,1,625,2],"18249":[608,1,625,2],"18257":[626,24,626,29],"18265":[626,24,626,29],"18273":[626,24,626,29],"18281":[628,10,628,26],"18289":[629,9,629,23],"18297":[629,9,629,25],"18305":[629,9,629,26],"18313":[630,28,630,32],"18321":[630,28,630,32],"18329":[630,9,630,33],"18337":[632,5,632,6],"18345":[632,20,632,28],"18353":[632,29,632,30],"18361":[632,29,632,40],"18369":[632,42,632,55],"18377":[632,16,632,56],"18385":[632,5,632,56],"18393":[632,5,632,57],"18401":[633,5,633,6],"18409":[633,20,633,28],"18417":[633,29,633,30],"18425":[633,29,633,40],"18433":[633,42,633,55],"18441":[633,16,633,56],"18449":[633,5,633,56],"18457":[633,5,633,57],"18465":[634,5,634,6],"18473":[634,21,634,29],"18481":[634,30,634,31],"18489":[634,30,634,39],"18497":[634,41,634,55],"18505":[634,17,634,56],"18513":[634,5,634,56],"18521":[634,5,634,57],"18529":[635,5,635,6],"18537":[635,16,635,17],"18545":[635,5,635,17],"18553":[635,5,635,18],"18561":[636,5,636,6],"18569":[636,18,636,19],"18577":[636,5,636,19],"18585":[636,5,636,20],"18593":[637,5,637,15],"18601":[637,16,637,17],"18609":[637,5,637,18],"18617":[637,5,637,19],"18625":[627,1,638,2],"18633":[627,1,638,2],"18641":[627,1,638,2],"18649":[640,5,640,14],"18657":[640,15,640,16],"18665":[640,19,640,31],"18673":[640,35,640,36],"18681":[640,41,640,45],"18689":[640,48,640,49],"18697":[640,52,640,53],"18705":[640,56,640,57],"18713":[640,5,640,58],"18721":[640,5,640,59],"18729":[641,5,641,15],"18737":[641,16,641,17],"18745":[641,19,641,22],"18753":[641,24,641,34],"18761":[641,36,641,40],"18769":[641,5,641,41],"18777":[641,5,641,42],"18785":[639,1,642,2],"18793":[639,1,642,2],"18801":[639,1,642,2],"18809":[639,1,642,2],"18817":[639,1,642,2],"18825":[639,1,642,2],"18833":[644,5,644,14],"18841":[644,15,644,16],"18849":[644,18,644,30],"18857":[644,34,644,35],"18865":[644,37,644,38],"18873":[644,5,644,39],"18881":[644,5,644,40],"18889":[645,5,645,14],"18897":[645,15,645,16],"18905":[645,18,645,27],"18913":[645,29,645,41],"18921":[645,5,645,42],"18929":[645,5,645,43],"18937":[646,5,646,13],"18945":[646,14,646,15],"18953":[646,5,646,16],"18961":[646,5,646,17],"18969":[643,1,647,2],"18977":[643,1,647,2],"18985":[643,1,647,2],"18993":[650,23,650,24],"19001":[650,23,650,24],"19009":[650,23,650,24],"19017":[651,9,651,10],"19025":[651,9,651,16],"19033":[651,19,651,20],"19041":[652,13,652,14],"19049":[652,13,652,19],"19057":[652,13,652,29],"19065":[652,34,652,43],"19073":[653,13,653,14],"19081":[653,13,653,19],"19089":[653,32,653,48],"19097":[653,49,653,50],"19105":[653,32,653,51],"19113":[653,13,653,51],"19121":[653,13,653,52],"19129":[655,9,655,19],"19137":[655,20,655,21],"19145":[655,23,655,24],"19153":[655,23,655,31],"19161":[655,9,655,32],"19169":[655,9,655,33],"19177":[656,9,656,19],"19185":[656,20,656,21],"19193":[656,23,656,24],"19201":[656,23,656,31],"19209":[656,9,656,32],"19217":[656,9,656,33],"19225":[657,23,657,36],"19233":[657,37,657,38],"19241":[657,23,657,39],"19249":[657,23,657,39],"19257":[657,9,657,40],"19265":[658,20,658,21],"19273":[658,20,658,29],"19281":[658,32,658,33],"19289":[658,36,658,37],"19297":[658,42,658,43],"19305":[658,20,658,43],"19313":[658,9,658,44],"19321":[659,23,659,24],"19329":[659,23,659,35],"19337":[659,38,659,39],"19345":[659,42,659,43],"19353":[659,48,659,49],"19361":[659,23,659,49],"19369":[659,9,659,50],"19377":[660,13,660,24],"19385":[660,28,660,36],"19393":[661,24,661,35],"19401":[661,24,661,35],"19409":[661,13,661,36],"19417":[664,34,664,44],"19425":[664,47,664,48],"19433":[664,34,664,48],"19441":[664,20,664,48],"19449":[664,9,664,49],"19457":[666,9,666,19],"19465":[666,22,666,23],"19473":[666,27,666,35],"19481":[666,39,666,42],"19489":[666,48,666,49],"19497":[667,9,667,25],"19505":[667,26,667,27],"19513":[667,29,667,32],"19521":[667,34,667,44],"19529":[667,46,667,50],"19537":[667,9,667,51],"19545":[667,9,667,52],"19553":[668,16,668,17],"19561":[668,16,668,26],"19569":[668,31,668,38],"19577":[668,42,668,53],"19585":[668,58,668,66],"19593":[669,9,669,18],"19601":[669,19,669,20],"19609":[669,23,669,35],"19617":[669,39,669,40],"19625":[669,45,669,49],"19633":[669,52,669,53],"19641":[669,56,669,57],"19649":[669,60,669,61],"19657":[669,9,669,62],"19665":[669,9,669,63],"19673":[670,9,670,23],"19681":[670,24,670,25],"19689":[670,27,670,39],"19697":[670,41,670,53],"19705":[670,9,670,54],"19713":[670,9,670,55],"19721":[672,9,672,18],"19729":[672,19,672,20],"19737":[672,23,672,32],"19745":[672,36,672,37],"19753":[672,42,672,46],"19761":[672,49,672,50],"19769":[672,53,672,54],"19777":[672,57,672,58],"19785":[672,9,672,59],"19793":[672,9,672,60],"19801":[673,9,673,23],"19809":[673,24,673,25],"19817":[673,27,673,28],"19825":[673,27,673,35],"19833":[673,27,673,44],"19841":[673,47,673,48],"19849":[673,50,673,51],"19857":[673,50,673,58],"19865":[673,50,673,67],"19873":[673,70,673,71],"19881":[673,73,673,84],"19889":[673,87,673,88],"19897":[673,9,673,89],"19905":[673,9,673,90],"19913":[674,9,674,23],"19921":[674,24,674,25],"19929":[674,27,674,28],"19937":[674,27,674,38],"19945":[674,40,674,41],"19953":[674,40,674,51],"19961":[674,9,674,52],"19969":[674,9,674,53],"19977":[676,5,676,15],"19985":[676,16,676,17],"19993":[676,5,676,18],"20001":[676,5,676,19],"20009":[677,9,677,13],"20017":[678,9,678,18],"20025":[678,19,678,20],"20033":[678,9,678,21],"20041":[678,9,678,22],"20049":[648,1,680,2],"20057":[648,1,680,2],"20065":[648,1,680,2],"20073":[648,1,680,2],"20081":[648,1,680,2],"20089":[648,1,680,2],"20097":[648,1,680,2],"20105":[648,1,680,2],"20113":[648,1,680,2],"20121":[682,5,682,6],"20129":[682,5,682,18],"20137":[682,19,682,20],"20145":[682,19,682,26],"20153":[682,29,682,30],"20161":[682,29,682,39],"20169":[682,42,682,43],"20177":[682,47,682,51],"20185":[682,56,682,57],"20193":[682,60,682,63],"20201":[682,5,682,63],"20209":[682,5,682,64],"20217":[683,5,683,6],"20225":[683,5,683,18],"20233":[683,19,683,20],"20241":[683,19,683,26],"20249":[683,29,683,30],"20257":[683,29,683,39],"20265":[683,42,683,43],"20273":[683,46,683,47],"20281":[683,51,683,55],"20289":[683,58,683,61],"20297":[683,5,683,61],"20305":[683,5,683,62],"20313":[684,5,684,6],"20321":[684,5,684,18],"20329":[684,19,684,20],"20337":[684,19,684,26],"20345":[684,29,684,30],"20353":[684,29,684,39],"20361":[684,43,684,45],"20369":[684,48,684,51],"20377":[684,5,684,51],"20385":[684,5,684,52],"20393":[685,5,685,6],"20409":[685,5,685,17],"20411":[685,5,685,17],"20425":[685,5,685,18],"20433":[686,9,686,13],"20441":[686,18,686,19],"20449":[687,9,687,10],"20457":[687,9,687,20],"20465":[687,21,687,23],"20473":[687,26,687,27],"20489":[687,9,687,30],"20491":[687,9,687,30],"20505":[687,9,687,31],"20513":[689,9,689,10],"20529":[689,9,689,20],"20531":[689,9,689,20],"20545":[689,9,689,21],"20561":[690,9,690,13],"20569":[690,9,690,15],"20585":[690,9,690,16],"20593":[691,9,691,10],"20601":[691,9,691,20],"20609":[691,22,691,34],"20617":[691,35,691,37],"20625":[691,22,691,38],"20633":[691,41,691,49],"20641":[691,52,691,53],"20649":[691,57,691,58],"20665":[691,9,691,61],"20667":[691,9,691,61],"20681":[691,9,691,62],"20689":[692,9,692,10],"20697":[692,9,692,20],"20705":[692,21,692,27],"20713":[692,28,692,32],"20721":[692,21,692,33],"20729":[692,36,692,37],"20745":[692,9,692,40],"20747":[692,9,692,40],"20761":[692,9,692,41],"20769":[694,12,694,13],"20777":[694,12,694,22],"20785":[694,27,694,28],"20793":[694,27,694,40],"20801":[694,43,694,44],"20809":[694,12,694,44],"20817":[694,5,694,45],"20825":[681,1,695,2],"20833":[681,1,695,2],"20841":[681,1,695,2],"20849":[681,1,695,2],"20857":[681,1,695,2],"20865":[696,1,696,8],"20873":[696,20,696,28],"20881":[696,1,696,28],"20889":[696,1,696,29],"20897":[697,1,697,8],"20905":[697,28,697,44],"20913":[697,1,697,44],"20921":[697,1,697,45],"20929":[698,1,698,8],"20937":[698,27,698,42],"20945":[698,1,698,42],"20953":[698,1,698,43],"20961":[699,1,699,8],"20969":[699,21,699,30],"20977":[699,1,699,30],"20985":[699,1,699,31],"20993":[700,1,700,8],"21001":[700,21,700,30],"21009":[700,1,700,30],"21017":[700,1,700,31],"21025":[1,1,700,31],"21033":[1,1,700,31],"21041":[1,1,700,31],"21049":[1,1,700,31],"21057":[1,1,700,31],"21065":[1,1,700,31],"21073":[1,1,700,31],"21081":[1,1,700,31],"21089":[9,1,14,2],"21097":[1,1,700,31],"21105":[1,1,700,31],"21113":[1,1,700,31],"21121":[1,1,700,31],"21129":[1,1,700,31],"21137":[1,1,700,31],"21145":[1,1,700,31],"21153":[1,1,700,31],"21161":[1,1,700,31],"21169":[1,1,700,31],"21177":[1,1,700,31],"21185":[1,1,700,31],"21193":[1,1,700,31],"21201":[1,1,700,31],"21209":[1,1,700,31],"21217":[1,1,700,31],"21225":[1,1,700,31],"21233":[1,1,700,31],"21241":[1,1,700,31],"21249":[1,1,700,31],"21257":[1,1,700,31],"21265":[1,1,700,31],"21273":[1,1,700,31],"21281":[1,1,700,31],"21289":[1,1,700,31],"21297":[1,1,700,31],"21305":[1,1,700,31],"21313":[1,1,700,31],"21321":[1,1,700,31],"21329":[1,1,700,31],"21337":[151,1,158,2],"21345":[1,1,700,31],"21353":[1,1,700,31],"21361":[1,1,700,31],"21369":[1,1,700,31],"21377":[162,1,166,2],"21385":[1,1,700,31],"21393":[167,1,169,2],"21401":[1,1,700,31],"21409":[170,1,173,2],"21417":[1,1,700,31],"21425":[174,1,184,2],"21433":[1,1,700,31],"21441":[185,1,187,2],"21449":[1,1,700,31],"21457":[188,1,196,2],"21465":[1,1,700,31],"21473":[197,1,207,2],"21481":[1,1,700,31],"21489":[208,1,275,2],"21497":[1,1,700,31],"21505":[276,1,291,2],"21513":[1,1,700,31],"21521":[292,1,353,2],"21529":[1,1,700,31],"21537":[354,1,368,2],"21545":[1,1,700,31],"21553":[369,1,377,2],"21561":[1,1,700,31],"21569":[378,1,386,2],"21577":[1,1,700,31],"21585":[387,1,391,2],"21593":[1,1,700,31],"21601":[392,1,407,2],"21609":[1,1,700,31],"21617":[408,1,441,2],"21625":[1,1,700,31],"21633":[442,1,490,2],"21641":[1,1,700,31],"21649":[491,1,534,2],"21657":[1,1,700,31],"21665":[535,1,583,2],"21673":[1,1,700,31],"21681":[584,1,596,2],"21689":[1,1,700,31],"21697":[597,1,607,2],"21705":[1,1,700,31],"21713":[608,1,625,2],"21721":[1,1,700,31],"21729":[1,1,700,31],"21737":[627,1,638,2],"21745":[1,1,700,31],"21753":[639,1,642,2],"21761":[1,1,700,31],"21769":[643,1,647,2],"21777":[1,1,700,31],"21785":[648,1,680,2],"21793":[1,1,700,31],"21801":[681,1,695,2],"21809":[1,1,700,31],"21817":[11,5,13,6],"21825":[9,1,14,2],"21833":[9,1,14,2],"21841":[151,1,158,2],"21849":[151,1,158,2],"21857":[162,1,166,2],"21865":[162,1,166,2],"21873":[168,12,168,74],"21881":[167,1,169,2],"21889":[167,1,169,2],"21897":[170,1,173,2],"21905":[170,1,173,2],"21913":[175,5,183,6],"21921":[174,1,184,2],"21929":[174,1,184,2],"21937":[185,1,187,2],"21945":[185,1,187,2],"21953":[190,5,194,25],"21961":[188,1,196,2],"21969":[188,1,196,2],"21977":[202,12,206,6],"21985":[198,5,206,6],"21993":[197,1,207,2],"22001":[197,1,207,2],"22009":[222,5,224,6],"22017":[222,5,224,6],"22025":[222,5,224,6],"22033":[229,9,232,10],"22041":[234,9,236,10],"22049":[239,9,241,10],"22057":[244,9,246,10],"22065":[226,5,247,6],"22073":[226,5,247,6],"22081":[226,5,247,6],"22089":[248,5,250,6],"22097":[253,9,255,10],"22105":[251,5,260,28],"22113":[265,13,267,14],"22121":[268,13,271,14],"22129":[263,9,273,10],"22137":[261,5,274,6],"22145":[261,5,274,6],"22153":[261,5,274,6],"22161":[208,1,275,2],"22169":[208,1,275,2],"22177":[281,5,283,6],"22185":[281,5,283,6],"22193":[281,5,283,6],"22201":[286,9,288,10],"22209":[284,5,290,6],"22217":[284,5,290,6],"22225":[284,5,290,6],"22233":[276,1,291,2],"22241":[276,1,291,2],"22249":[302,9,304,10],"22257":[302,9,304,10],"22265":[302,9,304,10],"22273":[300,5,305,6],"22281":[300,5,305,6],"22289":[300,5,305,6],"22297":[310,9,312,10],"22305":[310,9,312,10],"22313":[310,9,312,10],"22321":[308,5,313,6],"22329":[308,5,313,6],"22337":[308,5,313,6],"22345":[317,9,319,10],"22353":[317,9,319,10],"22361":[317,9,319,10],"22369":[315,5,320,6],"22377":[315,5,320,6],"22385":[321,5,323,6],"22393":[321,5,323,6],"22401":[321,5,323,6],"22409":[325,5,329,6],"22417":[330,5,334,6],"22425":[335,5,339,6],"22433":[340,5,344,6],"22441":[346,5,349,6],"22449":[346,5,349,6],"22457":[346,5,349,6],"22465":[292,1,353,2],"22473":[292,1,353,2],"22481":[356,5,358,6],"22489":[356,5,358,6],"22497":[356,5,358,6],"22505":[359,5,361,6],"22513":[359,5,361,6],"22521":[359,5,361,6],"22529":[362,5,364,6],"22537":[362,5,364,6],"22545":[362,5,364,6],"22553":[354,1,368,2],"22561":[354,1,368,2],"22569":[372,12,374,6],"22577":[370,5,374,6],"22585":[369,1,377,2],"22593":[369,1,377,2],"22601":[380,5,383,6],"22609":[378,1,386,2],"22617":[378,1,386,2],"22625":[387,1,391,2],"22633":[387,1,391,2],"22641":[396,9,398,10],"22649":[399,9,401,10],"22657":[395,5,405,6],"22665":[392,1,407,2],"22673":[392,1,407,2],"22681":[425,17,428,18],"22689":[433,17,436,18],"22697":[419,13,437,14],"22705":[415,9,438,35],"22713":[414,5,439,6],"22721":[408,1,441,2],"22729":[408,1,441,2],"22737":[453,9,458,10],"22745":[452,5,459,6],"22753":[452,5,459,6],"22761":[452,5,459,6],"22769":[461,39,461,68],"22777":[465,9,467,10],"22785":[460,5,468,6],"22793":[470,5,472,6],"22801":[470,5,472,6],"22809":[470,5,472,6],"22817":[482,26,482,76],"22825":[474,5,486,31],"22833":[442,1,490,2],"22841":[442,1,490,2],"22849":[499,5,502,6],"22857":[512,13,514,14],"22865":[516,16,520,10],"22873":[511,16,520,10],"22881":[509,16,520,10],"22889":[507,9,520,10],"22897":[526,16,532,10],"22905":[523,9,532,10],"22913":[504,5,533,6],"22921":[504,5,533,6],"22929":[504,5,533,6],"22937":[491,1,534,2],"22945":[491,1,534,2],"22953":[543,5,546,6],"22961":[553,13,555,37],"22969":[557,13,560,14],"22977":[563,16,569,10],"22985":[556,16,569,10],"22993":[552,16,569,10],"23001":[550,9,569,10],"23009":[575,16,581,10],"23017":[572,9,581,10],"23025":[547,5,582,6],"23033":[547,5,582,6],"23041":[547,5,582,6],"23049":[535,1,583,2],"23057":[535,1,583,2],"23065":[590,9,592,10],"23073":[589,5,593,6],"23081":[589,5,593,6],"23089":[589,5,593,6],"23097":[584,1,596,2],"23105":[584,1,596,2],"23113":[602,5,604,6],"23121":[602,5,604,6],"23129":[602,5,604,6],"23137":[597,1,607,2],"23145":[597,1,607,2],"23153":[612,9,614,10],"23161":[611,5,615,6],"23169":[611,5,615,6],"23177":[611,5,615,6],"23185":[616,5,618,6],"23193":[620,9,622,10],"23201":[619,5,623,6],"23209":[619,5,623,6],"23217":[619,5,623,6],"23225":[608,1,625,2],"23233":[608,1,625,2],"23241":[628,5,631,6],"23249":[627,1,638,2],"23257":[627,1,638,2],"23265":[640,41,640,53],"23273":[639,1,642,2],"23281":[639,1,642,2],"23289":[643,1,647,2],"23297":[643,1,647,2],"23305":[652,9,654,10],"23313":[660,9,662,10],"23321":[651,5,665,6],"23329":[669,45,669,57],"23337":[672,42,672,54],"23345":[668,12,675,6],"23353":[666,5,675,6],"23361":[677,5,679,6],"23369":[648,1,680,2],"23377":[648,1,680,2],"23385":[686,5,693,6],"23393":[681,1,695,2],"23401":[681,1,695,2],"23409":[1,1,700,31],"23417":[1,1,700,31],"nBranches":210,"originalCodeFileName":"/home/blake/ExpoSE/Targets/excel-builder/node_modules/pako/lib/zlib/trees.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/excel-builder/node_modules/pako/lib/zlib/trees_jalangi_.js","code":"'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array insdead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n"}