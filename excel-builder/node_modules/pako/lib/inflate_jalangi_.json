{"8":[13,9,13,35],"9":[1,20,1,27],"10":[13,11,13,34],"16":[19,8,19,21],"17":[1,28,1,32],"18":[13,9,13,35],"24":[21,9,21,39],"25":[1,20,1,33],"26":[21,20,21,39],"32":[21,9,21,62],"33":[1,20,1,33],"34":[21,43,21,62],"40":[23,13,23,33],"41":[1,20,1,33],"42":[22,26,22,41],"48":[21,9,21,62],"49":[2,26,2,38],"50":[23,13,23,33],"56":[27,9,27,51],"57":[2,26,2,45],"58":[24,30,24,33],"64":[27,57,27,86],"65":[2,26,2,45],"66":[27,9,27,28],"72":[27,9,27,87],"73":[2,26,2,45],"74":[27,32,27,51],"80":[27,9,27,87],"81":[3,1,3,13],"82":[27,55,27,87],"88":[30,9,30,51],"89":[3,1,3,14],"90":[30,9,30,28],"96":[31,13,31,40],"97":[4,20,4,27],"98":[30,32,30,51],"104":[30,9,30,51],"105":[4,28,4,44],"106":[31,14,31,33],"112":[42,9,42,26],"113":[4,20,4,45],"114":[31,13,31,40],"120":[56,9,56,19],"121":[4,20,4,45],"122":[42,9,42,26],"128":[59,38,59,51],"129":[4,20,4,45],"130":[59,23,59,28],"136":[59,13,59,28],"137":[5,13,5,20],"138":[59,22,59,28],"144":[62,16,62,62],"145":[5,21,5,37],"146":[59,13,59,28],"152":[60,9,60,33],"153":[5,13,5,38],"154":[59,38,59,51],"160":[70,13,70,33],"161":[5,13,5,38],"162":[60,9,60,20],"168":[76,13,76,51],"169":[5,13,5,38],"170":[60,9,60,33],"176":[79,24,79,76],"177":[6,15,6,22],"178":[62,16,62,62],"184":[77,17,77,47],"185":[6,23,6,40],"186":[70,13,70,33],"192":[76,13,76,51],"193":[6,15,6,41],"194":[76,13,76,37],"200":[86,13,86,63],"201":[6,15,6,41],"202":[77,17,77,34],"208":[86,13,86,63],"209":[6,15,6,41],"210":[77,17,77,47],"216":[90,13,90,59],"217":[7,9,7,16],"218":[79,24,79,76],"224":[90,13,90,59],"225":[7,17,7,35],"226":[86,13,86,37],"232":[96,17,96,66],"233":[7,9,7,36],"234":[86,41,86,63],"240":[96,94,96,142],"241":[7,9,7,36],"242":[90,13,90,38],"248":[96,70,96,143],"249":[7,9,7,36],"250":[90,42,90,59],"256":[96,17,96,143],"257":[8,11,8,18],"258":[96,17,96,37],"264":[103,25,103,29],"265":[8,19,8,36],"266":[96,41,96,66],"272":[97,21,97,49],"273":[8,11,8,37],"274":[96,70,96,89],"280":[96,17,96,143],"281":[8,11,8,37],"282":[96,94,96,114],"288":[95,13,95,26],"289":[8,11,8,37],"290":[96,118,96,142],"296":[112,13,112,56],"297":[9,15,9,22],"298":[97,21,97,49],"304":[112,13,112,56],"305":[9,23,9,39],"306":[99,28,99,57],"312":[115,15,115,56],"313":[9,15,9,40],"314":[102,38,102,54],"320":[115,14,115,86],"321":[9,15,9,40],"322":[112,13,112,32],"328":[115,14,115,86],"329":[9,15,9,40],"330":[112,36,112,56],"336":[116,9,116,34],"337":[10,16,10,23],"338":[115,15,115,32],"344":[119,9,119,29],"345":[10,24,10,41],"346":[115,36,115,56],"352":[125,9,125,33],"353":[10,16,10,42],"354":[115,61,115,86],"360":[137,13,137,41],"361":[10,16,10,42],"362":[116,9,116,34],"368":[136,9,136,26],"369":[10,16,10,42],"370":[119,9,119,29],"376":[151,15,151,48],"377":[11,16,11,22],"378":[123,16,123,33],"384":[150,9,150,21],"385":[11,16,11,32],"386":[125,9,125,33],"392":[156,15,156,28],"393":[11,16,11,41],"394":[136,9,136,26],"401":[11,16,11,41],"402":[137,13,137,41],"409":[11,16,11,41],"417":[13,11,13,15],"425":[13,27,13,34],"433":[14,20,14,27],"441":[14,28,14,35],"449":[14,16,14,36],"457":[14,16,14,36],"465":[14,9,14,37],"473":[15,5,15,9],"481":[15,20,15,25],"489":[16,20,16,25],"497":[17,21,17,22],"505":[18,13,18,15],"513":[15,33,19,6],"521":[19,8,19,15],"529":[19,19,19,21],"537":[15,20,19,22],"539":[15,20,15,32],"545":[15,5,19,22],"553":[15,5,19,23],"561":[20,15,20,19],"569":[20,15,20,27],"577":[20,15,20,27],"585":[20,15,20,27],"593":[21,9,21,12],"601":[21,9,21,16],"609":[21,20,21,23],"617":[21,20,21,34],"625":[21,38,21,39],"633":[21,43,21,46],"641":[21,43,21,57],"649":[21,60,21,62],"657":[22,9,22,12],"665":[22,27,22,30],"673":[22,27,22,41],"681":[22,9,22,41],"689":[22,9,22,42],"697":[23,13,23,16],"705":[23,13,23,27],"713":[23,32,23,33],"721":[24,13,24,16],"729":[24,31,24,33],"737":[24,13,24,33],"745":[24,13,24,34],"753":[27,9,27,12],"761":[27,9,27,23],"769":[27,27,27,28],"777":[27,32,27,35],"785":[27,32,27,46],"793":[27,49,27,51],"801":[27,57,27,64],"809":[27,68,27,75],"817":[27,68,27,86],"825":[28,9,28,12],"833":[28,27,28,29],"841":[28,9,28,29],"843":[28,9,28,29],"849":[28,9,28,30],"857":[30,9,30,12],"865":[30,9,30,23],"873":[30,26,30,28],"881":[30,32,30,35],"889":[30,32,30,46],"897":[30,49,30,51],"905":[31,14,31,17],"913":[31,14,31,28],"921":[31,31,31,33],"929":[31,39,31,40],"937":[32,13,32,16],"945":[32,31,32,33],"953":[32,13,32,33],"955":[32,13,32,33],"961":[32,13,32,34],"969":[35,5,35,9],"977":[35,16,35,17],"985":[35,5,35,17],"993":[35,5,35,18],"1001":[36,5,36,9],"1009":[36,16,36,18],"1017":[36,5,36,18],"1025":[36,5,36,19],"1033":[37,5,37,9],"1041":[37,18,37,23],"1049":[37,5,37,23],"1057":[37,5,37,24],"1065":[38,5,38,9],"1073":[38,19,38,21],"1081":[38,5,38,21],"1089":[38,5,38,22],"1097":[39,5,39,9],"1105":[39,21,39,28],"1113":[39,17,39,30],"1121":[39,5,39,30],"1129":[39,5,39,31],"1137":[40,5,40,9],"1145":[40,5,40,14],"1153":[40,27,40,28],"1161":[40,5,40,28],"1169":[40,5,40,29],"1177":[41,18,41,30],"1185":[41,44,41,48],"1193":[41,44,41,53],"1201":[41,55,41,58],"1209":[41,55,41,69],"1217":[41,18,41,70],"1219":[41,18,41,43],"1225":[41,18,41,70],"1233":[41,18,41,70],"1241":[42,9,42,15],"1249":[42,20,42,21],"1257":[42,20,42,26],"1265":[43,19,43,24],"1273":[43,25,43,28],"1281":[43,29,43,35],"1289":[43,25,43,36],"1297":[43,15,43,37],"1305":[43,15,43,37],"1313":[43,9,43,38],"1321":[45,5,45,9],"1329":[45,23,45,31],"1337":[45,19,45,33],"1345":[45,5,45,33],"1353":[45,5,45,34],"1361":[46,5,46,17],"1369":[46,35,46,39],"1377":[46,35,46,44],"1385":[46,46,46,50],"1393":[46,46,46,57],"1401":[46,5,46,58],"1403":[46,5,46,34],"1409":[46,5,46,59],"1417":[12,1,47,2],"1425":[12,1,47,2],"1433":[12,1,47,2],"1441":[12,1,47,2],"1449":[12,1,47,2],"1457":[48,1,48,8],"1465":[48,1,48,18],"1473":[49,16,49,20],"1481":[49,16,49,25],"1489":[49,16,49,25],"1497":[49,16,49,25],"1505":[50,21,50,25],"1513":[50,21,50,33],"1521":[50,21,50,43],"1529":[50,21,50,43],"1537":[50,21,50,43],"1545":[51,22,51,26],"1553":[51,22,51,34],"1561":[51,22,51,45],"1569":[51,22,51,45],"1577":[51,22,51,45],"1585":[55,25,55,30],"1593":[55,25,55,30],"1601":[55,25,55,30],"1609":[56,9,56,13],"1617":[56,9,56,19],"1625":[57,16,57,21],"1633":[57,16,57,21],"1641":[57,9,57,22],"1649":[59,13,59,17],"1657":[59,24,59,28],"1665":[59,31,59,35],"1673":[59,38,59,42],"1681":[59,47,59,51],"1689":[59,54,59,55],"1697":[59,54,59,64],"1705":[59,67,59,68],"1713":[59,67,59,79],"1721":[59,13,59,79],"1729":[59,5,59,80],"1737":[60,16,60,20],"1745":[60,25,60,33],"1753":[61,9,61,13],"1761":[61,22,61,29],"1769":[61,44,61,48],"1777":[61,22,61,49],"1779":[61,22,61,43],"1785":[61,9,61,49],"1793":[61,9,61,50],"1801":[62,16,62,24],"1809":[62,30,62,34],"1817":[62,16,62,35],"1819":[62,16,62,29],"1825":[62,40,62,62],"1833":[63,9,63,13],"1841":[63,26,63,36],"1849":[63,37,63,41],"1857":[63,22,63,42],"1865":[63,9,63,42],"1873":[63,9,63,43],"1881":[65,9,65,13],"1889":[65,22,65,26],"1897":[65,9,65,26],"1905":[65,9,65,27],"1913":[67,5,67,9],"1921":[67,20,67,21],"1929":[67,5,67,21],"1937":[67,5,67,22],"1945":[68,5,68,9],"1953":[68,21,68,25],"1961":[68,21,68,31],"1969":[68,21,68,38],"1977":[68,5,68,38],"1985":[68,5,68,39],"1993":[70,13,70,17],"2001":[70,13,70,27],"2009":[70,32,70,33],"2017":[71,13,71,17],"2025":[71,31,71,36],"2033":[71,42,71,51],"2041":[71,27,71,52],"2043":[71,31,71,41],"2049":[71,13,71,52],"2057":[71,13,71,53],"2065":[72,13,72,17],"2073":[72,29,72,30],"2081":[72,13,72,30],"2089":[72,13,72,31],"2097":[73,13,73,17],"2105":[73,30,73,39],"2113":[73,13,73,39],"2121":[73,13,73,40],"2129":[75,18,75,30],"2137":[75,39,75,43],"2145":[75,45,75,46],"2153":[75,45,75,57],"2161":[75,18,75,58],"2163":[75,18,75,38],"2169":[75,18,75,58],"2177":[75,9,75,59],"2185":[76,13,76,19],"2193":[76,24,76,25],"2201":[76,24,76,37],"2209":[76,41,76,51],"2217":[77,24,77,34],"2225":[77,39,77,47],"2233":[78,24,78,31],"2241":[78,43,78,53],"2249":[78,24,78,54],"2251":[78,24,78,42],"2257":[78,24,78,54],"2265":[78,17,78,55],"2273":[79,24,79,32],"2281":[79,38,79,48],"2289":[79,24,79,49],"2291":[79,24,79,37],"2297":[79,54,79,76],"2305":[80,28,80,38],"2313":[80,39,80,49],"2321":[80,24,80,50],"2329":[80,24,80,50],"2337":[80,17,80,51],"2345":[82,24,82,34],"2353":[82,24,82,34],"2361":[82,17,82,35],"2369":[84,22,84,34],"2377":[84,56,84,60],"2385":[84,56,84,65],"2393":[84,67,84,71],"2401":[84,22,84,72],"2403":[84,22,84,55],"2409":[84,22,84,72],"2417":[84,13,84,73],"2425":[86,13,86,19],"2433":[86,24,86,25],"2441":[86,24,86,37],"2449":[86,41,86,54],"2457":[86,59,86,63],"2465":[87,22,87,23],"2473":[87,22,87,28],"2481":[87,22,87,28],"2489":[87,13,87,29],"2497":[88,29,88,34],"2505":[88,29,88,34],"2513":[88,13,88,35],"2521":[90,13,90,19],"2529":[90,24,90,25],"2537":[90,24,90,38],"2545":[90,42,90,48],"2553":[90,53,90,54],"2561":[90,53,90,59],"2569":[91,13,91,17],"2577":[91,24,91,30],"2585":[91,13,91,31],"2587":[91,13,91,23],"2593":[91,13,91,32],"2601":[92,13,92,17],"2609":[92,26,92,30],"2617":[92,13,92,30],"2625":[92,13,92,31],"2633":[93,20,93,25],"2641":[93,20,93,25],"2649":[93,13,93,26],"2657":[95,13,95,17],"2665":[95,13,95,26],"2673":[96,17,96,21],"2681":[96,17,96,31],"2689":[96,36,96,37],"2697":[96,41,96,47],"2705":[96,52,96,53],"2713":[96,52,96,66],"2721":[96,70,96,74],"2729":[96,70,96,83],"2737":[96,88,96,89],"2745":[96,94,96,99],"2753":[96,104,96,105],"2761":[96,104,96,114],"2769":[96,118,96,123],"2777":[96,128,96,129],"2785":[96,128,96,142],"2793":[97,21,97,25],"2801":[97,21,97,33],"2809":[97,21,97,36],"2817":[97,41,97,49],"2825":[98,37,98,44],"2833":[98,56,98,60],"2841":[98,56,98,67],"2849":[98,69,98,73],"2857":[98,69,98,82],"2865":[98,37,98,83],"2867":[98,37,98,55],"2873":[98,37,98,83],"2881":[98,21,98,84],"2889":[99,28,99,32],"2897":[99,28,99,41],"2905":[99,44,99,57],"2913":[99,28,99,57],"2921":[99,21,99,58],"2929":[100,31,100,38],"2937":[100,50,100,54],"2945":[100,50,100,61],"2953":[100,63,100,76],"2961":[100,31,100,77],"2963":[100,31,100,49],"2969":[100,31,100,77],"2977":[100,21,100,78],"2985":[101,21,101,25],"2993":[101,37,101,41],"3001":[101,21,101,41],"3009":[101,21,101,42],"3017":[102,21,102,25],"3025":[102,38,102,47],"3033":[102,50,102,54],"3041":[102,21,102,54],"3049":[102,21,102,55],"3057":[103,25,103,29],"3065":[104,25,104,30],"3073":[104,40,104,44],"3081":[104,40,104,51],"3089":[104,53,104,57],"3097":[104,53,104,64],"3105":[104,66,104,79],"3113":[104,81,104,85],"3121":[104,87,104,88],"3129":[104,25,104,89],"3131":[104,25,104,39],"3137":[104,25,104,90],"3145":[106,21,106,25],"3153":[106,33,106,40],"3161":[106,21,106,41],"3163":[106,21,106,32],"3169":[106,21,106,42],"3177":[108,21,108,25],"3185":[108,33,108,38],"3193":[108,49,108,53],"3201":[108,49,108,60],"3209":[108,62,108,66],"3217":[108,62,108,75],"3225":[108,33,108,76],"3227":[108,33,108,48],"3233":[108,21,108,77],"3235":[108,21,108,32],"3241":[108,21,108,78],"3249":[112,13,112,17],"3257":[112,13,112,26],"3265":[112,31,112,32],"3273":[112,36,112,40],"3281":[112,36,112,50],"3289":[112,55,112,56],"3297":[113,29,113,33],"3305":[113,29,113,33],"3313":[113,13,113,34],"3321":[115,15,115,19],"3329":[115,15,115,28],"3337":[115,31,115,32],"3345":[115,36,115,40],"3353":[115,36,115,50],"3361":[115,55,115,56],"3369":[115,61,115,67],"3377":[115,72,115,73],"3385":[115,72,115,86],"3393":[116,9,116,15],"3401":[116,20,116,21],"3409":[116,20,116,34],"3417":[117,17,117,18],"3425":[117,17,117,27],"3433":[117,17,117,27],"3441":[117,9,117,28],"3449":[119,9,119,14],"3457":[119,19,119,20],"3465":[119,19,119,29],"3473":[120,18,120,30],"3481":[120,42,120,46],"3489":[120,42,120,51],"3497":[120,18,120,52],"3499":[120,18,120,41],"3505":[120,18,120,52],"3513":[120,9,120,53],"3521":[121,9,121,13],"3529":[121,20,121,26],"3537":[121,9,121,27],"3539":[121,9,121,19],"3545":[121,9,121,28],"3553":[122,9,122,13],"3561":[122,22,122,26],"3569":[122,9,122,26],"3577":[122,9,122,27],"3585":[123,16,123,22],"3593":[123,27,123,28],"3601":[123,27,123,33],"3609":[123,16,123,33],"3617":[123,9,123,34],"3625":[125,9,125,14],"3633":[125,19,125,20],"3641":[125,19,125,33],"3649":[126,9,126,13],"3657":[126,20,126,21],"3665":[126,20,126,26],"3673":[126,9,126,27],"3675":[126,9,126,19],"3681":[126,9,126,28],"3689":[127,9,127,13],"3697":[127,26,127,27],"3705":[127,9,127,27],"3713":[127,9,127,28],"3721":[128,16,128,20],"3729":[128,16,128,20],"3737":[128,9,128,21],"3745":[130,12,130,16],"3753":[130,12,130,16],"3761":[130,5,130,17],"3769":[48,26,131,2],"3777":[48,26,131,2],"3785":[48,26,131,2],"3793":[48,26,131,2],"3801":[48,26,131,2],"3809":[48,26,131,2],"3817":[48,26,131,2],"3825":[48,26,131,2],"3833":[48,26,131,2],"3841":[48,26,131,2],"3849":[48,26,131,2],"3857":[48,26,131,2],"3865":[48,26,131,2],"3873":[48,26,131,2],"3881":[48,26,131,2],"3889":[48,1,131,2],"3897":[48,1,131,3],"3905":[132,1,132,8],"3913":[132,1,132,18],"3921":[133,5,133,9],"3929":[133,5,133,16],"3937":[133,22,133,27],"3945":[133,5,133,28],"3947":[133,5,133,21],"3953":[133,5,133,29],"3961":[132,28,134,2],"3969":[132,28,134,2],"3977":[132,28,134,2],"3985":[132,28,134,2],"3993":[132,1,134,2],"4001":[132,1,134,3],"4009":[135,1,135,8],"4017":[135,1,135,18],"4025":[136,9,136,15],"4033":[136,20,136,21],"4041":[136,20,136,26],"4049":[137,13,137,17],"4057":[137,13,137,25],"4065":[137,13,137,28],"4073":[137,33,137,41],"4081":[138,13,138,17],"4089":[138,27,138,31],"4097":[138,27,138,38],"4105":[138,44,138,46],"4113":[138,27,138,47],"4115":[138,27,138,43],"4121":[138,13,138,47],"4129":[138,13,138,48],"4137":[140,13,140,17],"4145":[140,27,140,32],"4153":[140,47,140,51],"4161":[140,47,140,58],"4169":[140,27,140,59],"4171":[140,27,140,46],"4177":[140,13,140,59],"4185":[140,13,140,60],"4193":[143,5,143,9],"4201":[143,19,143,21],"4209":[143,5,143,21],"4217":[143,5,143,22],"4225":[144,5,144,9],"4233":[144,16,144,22],"4241":[144,5,144,22],"4249":[144,5,144,23],"4257":[145,5,145,9],"4265":[145,16,145,20],"4273":[145,16,145,25],"4281":[145,16,145,29],"4289":[145,5,145,29],"4297":[145,5,145,30],"4305":[135,27,146,2],"4313":[135,27,146,2],"4321":[135,27,146,2],"4329":[135,27,146,2],"4337":[135,1,146,2],"4345":[135,1,146,3],"4353":[148,24,148,31],"4361":[148,32,148,39],"4369":[148,20,148,40],"4377":[148,20,148,40],"4385":[148,20,148,40],"4393":[149,5,149,13],"4401":[149,19,149,24],"4409":[149,26,149,30],"4417":[149,5,149,31],"4419":[149,5,149,18],"4425":[149,5,149,32],"4433":[150,9,150,17],"4441":[150,9,150,21],"4449":[151,15,151,23],"4457":[151,15,151,27],"4465":[151,31,151,34],"4473":[151,35,151,43],"4481":[151,35,151,47],"4489":[151,31,151,48],"4497":[151,15,151,48],"4505":[151,9,151,49],"4513":[153,12,153,20],"4521":[153,12,153,27],"4529":[153,12,153,27],"4537":[153,5,153,28],"4545":[147,1,154,2],"4553":[147,1,154,2],"4561":[147,1,154,2],"4569":[147,1,154,2],"4577":[147,1,154,2],"4585":[156,15,156,22],"4593":[156,26,156,28],"4601":[156,15,156,28],"4609":[156,5,156,29],"4617":[157,5,157,12],"4625":[157,19,157,23],"4633":[157,5,157,23],"4641":[157,5,157,24],"4649":[158,12,158,19],"4657":[158,20,158,25],"4665":[158,27,158,34],"4673":[158,12,158,35],"4681":[158,12,158,35],"4689":[158,5,158,36],"4697":[155,1,159,2],"4705":[155,1,159,2],"4713":[155,1,159,2],"4721":[155,1,159,2],"4729":[160,1,160,8],"4737":[160,19,160,26],"4745":[160,1,160,26],"4753":[160,1,160,27],"4761":[161,1,161,8],"4769":[161,19,161,26],"4777":[161,1,161,26],"4785":[161,1,161,27],"4793":[162,1,162,8],"4801":[162,22,162,32],"4809":[162,1,162,32],"4817":[162,1,162,33],"4825":[163,1,163,8],"4833":[163,18,163,25],"4841":[163,1,163,25],"4849":[163,1,163,26],"4857":[1,1,163,26],"4865":[1,1,163,26],"4873":[1,1,163,26],"4881":[1,1,163,26],"4889":[1,1,163,26],"4897":[1,1,163,26],"4905":[1,1,163,26],"4913":[1,1,163,26],"4921":[1,1,163,26],"4929":[1,1,163,26],"4937":[1,1,163,26],"4945":[12,1,47,2],"4953":[1,1,163,26],"4961":[147,1,154,2],"4969":[1,1,163,26],"4977":[155,1,159,2],"4985":[1,1,163,26],"4993":[13,5,14,37],"5001":[23,9,25,10],"5009":[21,5,26,6],"5017":[27,5,29,6],"5025":[31,9,33,10],"5033":[30,5,34,6],"5041":[42,5,44,6],"5049":[12,1,47,2],"5057":[12,1,47,2],"5065":[56,5,58,6],"5073":[59,38,59,79],"5081":[59,13,59,79],"5089":[62,12,66,6],"5097":[60,5,66,6],"5105":[70,9,74,10],"5113":[79,20,83,14],"5121":[77,13,83,14],"5129":[76,9,85,10],"5137":[86,9,89,10],"5145":[90,9,94,10],"5153":[103,21,105,22],"5161":[97,17,109,18],"5169":[96,13,110,14],"5177":[95,9,111,10],"5185":[112,9,114,10],"5193":[69,5,115,88],"5201":[116,5,118,6],"5209":[119,5,124,6],"5217":[125,5,129,6],"5225":[48,26,131,2],"5233":[48,26,131,2],"5241":[132,28,134,2],"5249":[132,28,134,2],"5257":[137,9,141,10],"5265":[136,5,142,6],"5273":[135,27,146,2],"5281":[135,27,146,2],"5289":[150,5,152,6],"5297":[147,1,154,2],"5305":[147,1,154,2],"5313":[155,1,159,2],"5321":[155,1,159,2],"5329":[1,1,163,26],"5337":[1,1,163,26],"nBranches":98,"originalCodeFileName":"/home/blake/ExpoSE/Targets/excel-builder/node_modules/pako/lib/inflate.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/excel-builder/node_modules/pako/lib/inflate_jalangi_.js","code":"'use strict';\n\n\nvar zlib_inflate = require('./zlib/inflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar c            = require('./zlib/constants');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\nvar GZheader     = require('./zlib/gzheader');\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overriden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` meansh Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n  var dict;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status === c.Z_NEED_DICT && dictionary) {\n      // Convert data if needed\n      if (typeof dictionary === 'string') {\n        dict = strings.string2buf(dictionary);\n      } else if (toString.call(dictionary) === '[object ArrayBuffer]') {\n        dict = new Uint8Array(dictionary);\n      } else {\n        dict = dictionary;\n      }\n\n      status = zlib_inflate.inflateSetDictionary(this.strm, dict);\n\n    }\n\n    if (status === c.Z_BUF_ERROR && allowBufError === true) {\n      status = c.Z_OK;\n      allowBufError = false;\n    }\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data, we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): ouput data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 alligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n"}