J$.iids = {"9":[1,20,1,27],"17":[1,28,1,32],"25":[1,20,1,33],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,13,4,20],"105":[4,21,4,30],"113":[4,13,4,31],"121":[4,13,4,31],"129":[4,13,4,31],"137":[6,5,6,9],"145":[6,17,6,19],"153":[6,5,6,19],"161":[6,5,6,20],"169":[5,20,7,2],"177":[5,20,7,2],"185":[5,20,7,2],"193":[5,20,7,2],"201":[5,20,7,2],"209":[8,1,8,13],"217":[10,17,10,22],"225":[10,35,10,43],"233":[10,45,10,50],"241":[10,17,10,51],"243":[10,17,10,34],"249":[10,17,10,51],"257":[10,9,10,52],"265":[11,9,11,13],"273":[11,9,11,18],"281":[11,24,11,29],"289":[11,9,11,30],"291":[11,9,11,23],"297":[11,9,11,31],"305":[9,13,12,6],"313":[9,13,12,6],"321":[9,13,12,6],"329":[9,13,12,6],"337":[14,16,14,20],"345":[14,16,14,25],"353":[14,31,14,33],"361":[14,16,14,34],"363":[14,16,14,30],"369":[14,16,14,34],"377":[14,9,14,35],"385":[13,15,15,6],"393":[13,15,15,6],"401":[13,15,15,6],"409":[8,26,16,2],"417":[8,1,16,2],"425":[8,1,16,3],"433":[17,1,17,7],"441":[17,18,17,30],"449":[17,1,17,30],"457":[17,1,17,31],"465":[1,1,17,31],"473":[1,1,17,31],"481":[1,1,17,31],"489":[1,1,17,31],"497":[1,1,17,31],"505":[5,20,7,2],"513":[5,20,7,2],"521":[9,13,12,6],"529":[9,13,12,6],"537":[13,15,15,6],"545":[13,15,15,6],"553":[1,1,17,31],"561":[1,1,17,31],"nBranches":0,"originalCodeFileName":"/home/blake/ExpoSE/Targets/excel-builder/node_modules/jszip/lib/stringWriter.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/excel-builder/node_modules/jszip/lib/stringWriter_jalangi_.js","code":"'use strict';\n\nvar utils = require('./utils');\n\n/**\n * An object to write any content to a string.\n * @constructor\n */\nvar StringWriter = function() {\n    this.data = [];\n};\nStringWriter.prototype = {\n    /**\n     * Append any content to the current string.\n     * @param {Object} input the content to add.\n     */\n    append: function(input) {\n        input = utils.transformTo(\"string\", input);\n        this.data.push(input);\n    },\n    /**\n     * Finalize the construction an return the result.\n     * @return {string} the generated string.\n     */\n    finalize: function() {\n        return this.data.join(\"\");\n    }\n};\n\nmodule.exports = StringWriter;\n"};
jalangiLabel1125:
    while (true) {
        try {
            J$.Se(465, '/home/blake/ExpoSE/Targets/excel-builder/node_modules/jszip/lib/stringWriter_jalangi_.js', '/home/blake/ExpoSE/Targets/excel-builder/node_modules/jszip/lib/stringWriter.js');
            J$.N(473, '__secret__S$', __secret__S$, 0);
            J$.N(481, '__secret__traits__', __secret__traits__, 0);
            J$.N(489, 'utils', utils, 0);
            J$.N(497, 'StringWriter', StringWriter, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var utils = J$.X1(129, J$.W(121, 'utils', J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, './utils', 21, false)), utils, 3));
            var StringWriter = J$.X1(201, J$.W(193, 'StringWriter', J$.T(185, function () {
                jalangiLabel1122:
                    while (true) {
                        try {
                            J$.Fe(169, arguments.callee, this, arguments);
                            arguments = J$.N(177, 'arguments', arguments, 4);
                            J$.X1(161, J$.P(153, J$.R(137, 'this', this, 0), 'data', J$.T(145, [], 10, false), 0));
                        } catch (J$e) {
                            J$.Ex(505, J$e);
                        } finally {
                            if (J$.Fr(513))
                                continue jalangiLabel1122;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 169), StringWriter, 3));
            J$.X1(425, J$.P(417, J$.R(209, 'StringWriter', StringWriter, 1), 'prototype', J$.T(409, {
                append: J$.T(329, function (input) {
                    jalangiLabel1123:
                        while (true) {
                            try {
                                J$.Fe(305, arguments.callee, this, arguments);
                                arguments = J$.N(313, 'arguments', arguments, 4);
                                input = J$.N(321, 'input', input, 4);
                                J$.X1(257, input = J$.W(249, 'input', J$.M(241, J$.R(217, 'utils', utils, 1), 'transformTo', 0)(J$.T(225, 'string', 21, false), J$.R(233, 'input', input, 0)), input, 0));
                                J$.X1(297, J$.M(289, J$.G(273, J$.R(265, 'this', this, 0), 'data', 0), 'push', 0)(J$.R(281, 'input', input, 0)));
                            } catch (J$e) {
                                J$.Ex(521, J$e);
                            } finally {
                                if (J$.Fr(529))
                                    continue jalangiLabel1123;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 305),
                finalize: J$.T(401, function () {
                    jalangiLabel1124:
                        while (true) {
                            try {
                                J$.Fe(385, arguments.callee, this, arguments);
                                arguments = J$.N(393, 'arguments', arguments, 4);
                                return J$.X1(377, J$.Rt(369, J$.M(361, J$.G(345, J$.R(337, 'this', this, 0), 'data', 0), 'join', 0)(J$.T(353, '', 21, false))));
                            } catch (J$e) {
                                J$.Ex(537, J$e);
                            } finally {
                                if (J$.Fr(545))
                                    continue jalangiLabel1124;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 385)
            }, 11, false), 0));
            J$.X1(457, J$.P(449, J$.R(433, 'module', module, 2), 'exports', J$.R(441, 'StringWriter', StringWriter, 1), 0));
        } catch (J$e) {
            J$.Ex(553, J$e);
        } finally {
            if (J$.Sr(561)) {
                J$.L();
                continue jalangiLabel1125;
            } else {
                J$.L();
                break jalangiLabel1125;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
