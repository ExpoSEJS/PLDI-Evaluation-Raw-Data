{"8":[16,13,16,63],"9":[1,20,1,27],"10":[13,25,13,44],"16":[16,13,16,63],"17":[1,28,1,32],"18":[16,27,16,47],"24":[32,41,32,56],"25":[1,20,1,33],"26":[16,13,16,47],"33":[1,20,1,33],"34":[16,51,16,63],"41":[1,20,1,33],"42":[17,29,17,80],"49":[2,26,2,38],"50":[17,29,17,101],"57":[2,26,2,45],"58":[17,29,17,112],"65":[2,26,2,45],"66":[17,29,17,135],"73":[2,26,2,45],"74":[25,23,25,37],"81":[3,1,3,13],"82":[32,18,32,35],"89":[3,1,3,14],"90":[32,18,32,39],"97":[4,13,4,20],"98":[32,41,32,56],"105":[4,21,4,30],"106":[32,58,32,61],"113":[4,13,4,31],"121":[4,13,4,31],"122":[32,58,32,61],"129":[4,13,4,31],"130":[33,23,33,34],"137":[6,5,6,9],"138":[33,22,33,52],"145":[6,17,6,21],"146":[47,26,47,39],"153":[6,5,6,21],"154":[47,26,47,45],"161":[6,5,6,22],"162":[47,25,47,53],"169":[7,5,7,9],"170":[47,56,47,69],"177":[7,19,7,20],"178":[47,56,47,74],"185":[7,5,7,20],"186":[47,55,47,79],"193":[7,5,7,21],"194":[47,81,47,94],"201":[8,5,8,9],"202":[47,81,47,99],"209":[8,18,8,19],"210":[47,101,47,114],"217":[8,5,8,19],"218":[47,101,47,119],"225":[8,5,8,20],"226":[47,121,47,133],"233":[9,5,9,9],"234":[47,121,47,138],"241":[9,17,9,18],"242":[47,141,47,153],"249":[9,5,9,18],"250":[47,140,47,159],"257":[9,5,9,19],"265":[5,1,10,2],"273":[5,1,10,2],"281":[5,1,10,2],"289":[11,1,11,11],"297":[13,9,13,13],"305":[13,25,13,29],"313":[13,25,13,35],"321":[13,38,13,44],"329":[13,9,13,45],"331":[13,9,13,24],"337":[13,9,13,46],"345":[12,18,14,6],"353":[12,18,14,6],"361":[12,18,14,6],"369":[12,18,14,6],"377":[16,13,16,17],"385":[16,13,16,24],"393":[16,27,16,31],"401":[16,27,16,36],"409":[16,39,16,47],"417":[16,51,16,59],"425":[16,62,16,63],"433":[17,23,17,28],"441":[17,29,17,66],"449":[17,69,17,73],"457":[17,69,17,80],"465":[17,83,17,101],"473":[17,104,17,112],"481":[17,115,17,135],"489":[17,19,17,136],"497":[17,19,17,136],"505":[17,13,17,137],"513":[15,17,19,6],"521":[15,17,19,6],"529":[15,17,19,6],"537":[15,17,19,6],"545":[21,9,21,13],"553":[21,25,21,33],"561":[21,9,21,34],"563":[21,9,21,24],"569":[21,9,21,35],"577":[22,9,22,13],"585":[22,22,22,30],"593":[22,9,22,30],"601":[22,9,22,31],"609":[20,15,23,6],"617":[20,15,23,6],"625":[20,15,23,6],"633":[20,15,23,6],"641":[25,9,25,13],"649":[25,23,25,27],"657":[25,23,25,33],"665":[25,36,25,37],"673":[25,9,25,38],"675":[25,9,25,22],"681":[25,9,25,39],"689":[24,11,26,6],"697":[24,11,26,6],"705":[24,11,26,6],"713":[24,11,26,6],"721":[27,13,28,6],"729":[27,13,28,6],"737":[27,13,28,6],"745":[27,13,28,6],"753":[30,22,30,23],"761":[30,22,30,23],"769":[30,22,30,23],"777":[31,9,31,13],"785":[31,26,31,30],"793":[31,9,31,31],"795":[31,9,31,25],"801":[31,9,31,32],"809":[32,18,32,22],"817":[32,18,32,28],"825":[32,31,32,35],"833":[32,38,32,39],"841":[32,18,32,39],"849":[32,41,32,42],"857":[32,46,32,50],"865":[32,46,32,56],"881":[32,58,32,59],"889":[32,58,32,61],"905":[33,23,33,29],"913":[33,33,33,34],"921":[33,38,33,42],"929":[33,50,33,51],"937":[33,38,33,52],"939":[33,38,33,49],"945":[33,22,33,52],"953":[33,13,33,53],"961":[35,9,35,13],"969":[35,23,35,27],"977":[35,9,35,27],"979":[35,9,35,27],"985":[35,9,35,28],"993":[36,16,36,22],"1001":[36,16,36,22],"1009":[36,9,36,23],"1017":[29,14,37,6],"1025":[29,14,37,6],"1033":[29,14,37,6],"1041":[29,14,37,6],"1049":[29,14,37,6],"1057":[29,14,37,6],"1065":[39,16,39,21],"1073":[39,34,39,42],"1081":[39,44,39,48],"1089":[39,58,39,62],"1097":[39,44,39,63],"1099":[39,44,39,57],"1105":[39,16,39,64],"1107":[39,16,39,33],"1113":[39,16,39,64],"1121":[39,9,39,65],"1129":[38,17,40,6],"1137":[38,17,40,6],"1145":[38,17,40,6],"1153":[38,17,40,6],"1161":[41,15,42,6],"1169":[41,15,42,6],"1177":[41,15,42,6],"1185":[41,15,42,6],"1193":[43,27,44,6],"1201":[43,27,44,6],"1209":[43,27,44,6],"1217":[43,27,44,6],"1225":[46,23,46,27],"1233":[46,36,46,37],"1241":[46,23,46,38],"1243":[46,23,46,35],"1249":[46,23,46,38],"1257":[46,23,46,38],"1265":[47,20,47,24],"1273":[47,26,47,33],"1281":[47,37,47,39],"1289":[47,42,47,45],"1297":[47,49,47,53],"1305":[47,56,47,63],"1313":[47,67,47,69],"1321":[47,72,47,74],"1329":[47,78,47,79],"1337":[47,81,47,88],"1345":[47,92,47,94],"1353":[47,97,47,99],"1361":[47,101,47,108],"1369":[47,112,47,114],"1377":[47,117,47,119],"1385":[47,121,47,128],"1393":[47,132,47,133],"1401":[47,136,47,138],"1409":[47,141,47,148],"1417":[47,151,47,153],"1425":[47,158,47,159],"1433":[47,16,47,160],"1441":[47,16,47,160],"1449":[47,9,47,161],"1457":[45,15,48,6],"1465":[45,15,48,6],"1473":[45,15,48,6],"1481":[45,15,48,6],"1489":[11,24,49,2],"1497":[11,1,49,2],"1505":[11,1,49,3],"1513":[50,1,50,7],"1521":[50,18,50,28],"1529":[50,1,50,28],"1537":[50,1,50,29],"1545":[1,1,50,29],"1553":[1,1,50,29],"1561":[1,1,50,29],"1569":[1,1,50,29],"1577":[5,1,10,2],"1585":[1,1,50,29],"1593":[5,1,10,2],"1601":[5,1,10,2],"1609":[12,18,14,6],"1617":[12,18,14,6],"1625":[16,9,18,10],"1633":[15,17,19,6],"1641":[15,17,19,6],"1649":[20,15,23,6],"1657":[20,15,23,6],"1665":[24,11,26,6],"1673":[24,11,26,6],"1681":[27,13,28,6],"1689":[27,13,28,6],"1697":[32,9,34,10],"1705":[32,9,34,10],"1713":[32,9,34,10],"1721":[29,14,37,6],"1729":[29,14,37,6],"1737":[38,17,40,6],"1745":[38,17,40,6],"1753":[41,15,42,6],"1761":[41,15,42,6],"1769":[43,27,44,6],"1777":[43,27,44,6],"1785":[45,15,48,6],"1793":[45,15,48,6],"1801":[1,1,50,29],"1809":[1,1,50,29],"nBranches":6,"originalCodeFileName":"/home/blake/ExpoSE/Targets/excel-builder/node_modules/jszip/lib/dataReader.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/excel-builder/node_modules/jszip/lib/dataReader_jalangi_.js","code":"'use strict';\nvar utils = require('./utils');\n\nfunction DataReader(data) {\n    this.data = null; // type : see implementation\n    this.length = 0;\n    this.index = 0;\n    this.zero = 0;\n}\nDataReader.prototype = {\n    /**\n     * Check that the offset will not go too far.\n     * @param {string} offset the additional offset to check.\n     * @throws {Error} an Error if the offset is out of bounds.\n     */\n    checkOffset: function(offset) {\n        this.checkIndex(this.index + offset);\n    },\n    /**\n     * Check that the specifed index will not be too far.\n     * @param {string} newIndex the index to check.\n     * @throws {Error} an Error if the index is out of bounds.\n     */\n    checkIndex: function(newIndex) {\n        if (this.length < this.zero + newIndex || newIndex < 0) {\n            throw new Error(\"End of data reached (data length = \" + this.length + \", asked index = \" + (newIndex) + \"). Corrupted zip ?\");\n        }\n    },\n    /**\n     * Change the index.\n     * @param {number} newIndex The new index.\n     * @throws {Error} if the new index is out of the data.\n     */\n    setIndex: function(newIndex) {\n        this.checkIndex(newIndex);\n        this.index = newIndex;\n    },\n    /**\n     * Skip the next n bytes.\n     * @param {number} n the number of bytes to skip.\n     * @throws {Error} if the new index is out of the data.\n     */\n    skip: function(n) {\n        this.setIndex(this.index + n);\n    },\n    /**\n     * Get the byte at the specified index.\n     * @param {number} i the index to use.\n     * @return {number} a byte.\n     */\n    byteAt: function(i) {\n        // see implementations\n    },\n    /**\n     * Get the next number with a given byte size.\n     * @param {number} size the number of bytes to read.\n     * @return {number} the corresponding number.\n     */\n    readInt: function(size) {\n        var result = 0,\n            i;\n        this.checkOffset(size);\n        for (i = this.index + size - 1; i >= this.index; i--) {\n            result = (result << 8) + this.byteAt(i);\n        }\n        this.index += size;\n        return result;\n    },\n    /**\n     * Get the next string with a given byte size.\n     * @param {number} size the number of bytes to read.\n     * @return {string} the corresponding string.\n     */\n    readString: function(size) {\n        return utils.transformTo(\"string\", this.readData(size));\n    },\n    /**\n     * Get raw data without conversion, <size> bytes.\n     * @param {number} size the number of bytes to read.\n     * @return {Object} the raw data, implementation specific.\n     */\n    readData: function(size) {\n        // see implementations\n    },\n    /**\n     * Find the last occurence of a zip signature (4 bytes).\n     * @param {string} sig the signature to find.\n     * @return {number} the index of the last occurence, -1 if not found.\n     */\n    lastIndexOfSignature: function(sig) {\n        // see implementations\n    },\n    /**\n     * Get the next date.\n     * @return {Date} the date.\n     */\n    readDate: function() {\n        var dostime = this.readInt(4);\n        return new Date(\n        ((dostime >> 25) & 0x7f) + 1980, // year\n        ((dostime >> 21) & 0x0f) - 1, // month\n        (dostime >> 16) & 0x1f, // day\n        (dostime >> 11) & 0x1f, // hour\n        (dostime >> 5) & 0x3f, // minute\n        (dostime & 0x1f) << 1); // second\n    }\n};\nmodule.exports = DataReader;\n"}