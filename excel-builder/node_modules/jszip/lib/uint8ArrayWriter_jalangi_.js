J$.iids = {"8":[11,13,11,31],"9":[1,20,1,27],"10":[11,13,11,31],"17":[1,28,1,32],"25":[1,20,1,33],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,13,4,20],"105":[4,21,4,30],"113":[4,13,4,31],"121":[4,13,4,31],"129":[4,13,4,31],"137":[6,5,6,9],"145":[6,21,6,31],"153":[6,32,6,38],"161":[6,17,6,39],"169":[6,5,6,39],"177":[6,5,6,40],"185":[7,5,7,9],"193":[7,18,7,19],"201":[7,5,7,19],"209":[7,5,7,20],"217":[5,24,8,2],"225":[5,24,8,2],"233":[5,24,8,2],"241":[5,24,8,2],"249":[5,24,8,2],"257":[5,24,8,2],"265":[9,1,9,17],"273":[11,13,11,18],"281":[11,13,11,25],"289":[11,30,11,31],"297":[12,21,12,26],"305":[12,39,12,51],"313":[12,53,12,58],"321":[12,21,12,59],"323":[12,21,12,38],"329":[12,21,12,59],"337":[12,13,12,60],"345":[13,13,13,17],"353":[13,13,13,22],"361":[13,27,13,32],"369":[13,34,13,38],"377":[13,34,13,44],"385":[13,13,13,45],"387":[13,13,13,26],"393":[13,13,13,46],"401":[14,13,14,17],"409":[14,27,14,32],"417":[14,27,14,39],"425":[14,13,14,39],"427":[14,13,14,39],"433":[14,13,14,40],"441":[10,13,16,6],"449":[10,13,16,6],"457":[10,13,16,6],"465":[10,13,16,6],"473":[18,16,18,20],"481":[18,16,18,25],"489":[18,16,18,25],"497":[18,9,18,26],"505":[17,15,19,6],"513":[17,15,19,6],"521":[17,15,19,6],"529":[9,30,20,2],"537":[9,1,20,2],"545":[9,1,20,3],"553":[21,1,21,7],"561":[21,18,21,34],"569":[21,1,21,34],"577":[21,1,21,35],"585":[1,1,21,35],"593":[1,1,21,35],"601":[1,1,21,35],"609":[1,1,21,35],"617":[1,1,21,35],"625":[5,24,8,2],"633":[5,24,8,2],"641":[11,9,15,10],"649":[10,13,16,6],"657":[10,13,16,6],"665":[17,15,19,6],"673":[17,15,19,6],"681":[1,1,21,35],"689":[1,1,21,35],"nBranches":2,"originalCodeFileName":"/home/blake/ExpoSE/Targets/excel-builder/node_modules/jszip/lib/uint8ArrayWriter.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/excel-builder/node_modules/jszip/lib/uint8ArrayWriter_jalangi_.js","code":"'use strict';\n\nvar utils = require('./utils');\n\n/**\n * An object to write any content to an Uint8Array.\n * @constructor\n * @param {number} length The length of the array.\n */\nvar Uint8ArrayWriter = function(length) {\n    this.data = new Uint8Array(length);\n    this.index = 0;\n};\nUint8ArrayWriter.prototype = {\n    /**\n     * Append any content to the current array.\n     * @param {Object} input the content to add.\n     */\n    append: function(input) {\n        if (input.length !== 0) {\n            // with an empty Uint8Array, Opera fails with a \"Offset larger than array size\"\n            input = utils.transformTo(\"uint8array\", input);\n            this.data.set(input, this.index);\n            this.index += input.length;\n        }\n    },\n    /**\n     * Finalize the construction an return the result.\n     * @return {Uint8Array} the generated array.\n     */\n    finalize: function() {\n        return this.data;\n    }\n};\n\nmodule.exports = Uint8ArrayWriter;\n"};
jalangiLabel1129:
    while (true) {
        try {
            J$.Se(585, '/home/blake/ExpoSE/Targets/excel-builder/node_modules/jszip/lib/uint8ArrayWriter_jalangi_.js', '/home/blake/ExpoSE/Targets/excel-builder/node_modules/jszip/lib/uint8ArrayWriter.js');
            J$.N(593, '__secret__S$', __secret__S$, 0);
            J$.N(601, '__secret__traits__', __secret__traits__, 0);
            J$.N(609, 'utils', utils, 0);
            J$.N(617, 'Uint8ArrayWriter', Uint8ArrayWriter, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var utils = J$.X1(129, J$.W(121, 'utils', J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, './utils', 21, false)), utils, 3));
            var Uint8ArrayWriter = J$.X1(257, J$.W(249, 'Uint8ArrayWriter', J$.T(241, function (length) {
                jalangiLabel1126:
                    while (true) {
                        try {
                            J$.Fe(217, arguments.callee, this, arguments);
                            arguments = J$.N(225, 'arguments', arguments, 4);
                            length = J$.N(233, 'length', length, 4);
                            J$.X1(177, J$.P(169, J$.R(137, 'this', this, 0), 'data', J$.F(161, J$.R(145, 'Uint8Array', Uint8Array, 2), 1)(J$.R(153, 'length', length, 0)), 0));
                            J$.X1(209, J$.P(201, J$.R(185, 'this', this, 0), 'index', J$.T(193, 0, 22, false), 0));
                        } catch (J$e) {
                            J$.Ex(625, J$e);
                        } finally {
                            if (J$.Fr(633))
                                continue jalangiLabel1126;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 217), Uint8ArrayWriter, 3));
            J$.X1(545, J$.P(537, J$.R(265, 'Uint8ArrayWriter', Uint8ArrayWriter, 1), 'prototype', J$.T(529, {
                append: J$.T(465, function (input) {
                    jalangiLabel1127:
                        while (true) {
                            try {
                                J$.Fe(441, arguments.callee, this, arguments);
                                arguments = J$.N(449, 'arguments', arguments, 4);
                                input = J$.N(457, 'input', input, 4);
                                if (J$.X1(641, J$.C(8, J$.B(10, '!==', J$.G(281, J$.R(273, 'input', input, 0), 'length', 0), J$.T(289, 0, 22, false), 0)))) {
                                    J$.X1(337, input = J$.W(329, 'input', J$.M(321, J$.R(297, 'utils', utils, 1), 'transformTo', 0)(J$.T(305, 'uint8array', 21, false), J$.R(313, 'input', input, 0)), input, 0));
                                    J$.X1(393, J$.M(385, J$.G(353, J$.R(345, 'this', this, 0), 'data', 0), 'set', 0)(J$.R(361, 'input', input, 0), J$.G(377, J$.R(369, 'this', this, 0), 'index', 0)));
                                    J$.X1(433, J$.A(425, J$.R(401, 'this', this, 0), 'index', '+', 0)(J$.G(417, J$.R(409, 'input', input, 0), 'length', 0)));
                                }
                            } catch (J$e) {
                                J$.Ex(649, J$e);
                            } finally {
                                if (J$.Fr(657))
                                    continue jalangiLabel1127;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 441),
                finalize: J$.T(521, function () {
                    jalangiLabel1128:
                        while (true) {
                            try {
                                J$.Fe(505, arguments.callee, this, arguments);
                                arguments = J$.N(513, 'arguments', arguments, 4);
                                return J$.X1(497, J$.Rt(489, J$.G(481, J$.R(473, 'this', this, 0), 'data', 0)));
                            } catch (J$e) {
                                J$.Ex(665, J$e);
                            } finally {
                                if (J$.Fr(673))
                                    continue jalangiLabel1128;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 505)
            }, 11, false), 0));
            J$.X1(577, J$.P(569, J$.R(553, 'module', module, 2), 'exports', J$.R(561, 'Uint8ArrayWriter', Uint8ArrayWriter, 1), 0));
        } catch (J$e) {
            J$.Ex(681, J$e);
        } finally {
            if (J$.Sr(689)) {
                J$.L();
                continue jalangiLabel1129;
            } else {
                J$.L();
                break jalangiLabel1129;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
