{"9":[1,20,1,27],"17":[1,28,1,32],"25":[1,20,1,33],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,13,4,20],"105":[4,21,4,30],"113":[4,13,4,31],"121":[4,13,4,31],"129":[4,13,4,31],"137":[6,5,6,9],"145":[6,17,6,19],"153":[6,5,6,19],"161":[6,5,6,20],"169":[5,20,7,2],"177":[5,20,7,2],"185":[5,20,7,2],"193":[5,20,7,2],"201":[5,20,7,2],"209":[8,1,8,13],"217":[10,17,10,22],"225":[10,35,10,43],"233":[10,45,10,50],"241":[10,17,10,51],"243":[10,17,10,34],"249":[10,17,10,51],"257":[10,9,10,52],"265":[11,9,11,13],"273":[11,9,11,18],"281":[11,24,11,29],"289":[11,9,11,30],"291":[11,9,11,23],"297":[11,9,11,31],"305":[9,13,12,6],"313":[9,13,12,6],"321":[9,13,12,6],"329":[9,13,12,6],"337":[14,16,14,20],"345":[14,16,14,25],"353":[14,31,14,33],"361":[14,16,14,34],"363":[14,16,14,30],"369":[14,16,14,34],"377":[14,9,14,35],"385":[13,15,15,6],"393":[13,15,15,6],"401":[13,15,15,6],"409":[8,26,16,2],"417":[8,1,16,2],"425":[8,1,16,3],"433":[17,1,17,7],"441":[17,18,17,30],"449":[17,1,17,30],"457":[17,1,17,31],"465":[1,1,17,31],"473":[1,1,17,31],"481":[1,1,17,31],"489":[1,1,17,31],"497":[1,1,17,31],"505":[5,20,7,2],"513":[5,20,7,2],"521":[9,13,12,6],"529":[9,13,12,6],"537":[13,15,15,6],"545":[13,15,15,6],"553":[1,1,17,31],"561":[1,1,17,31],"nBranches":0,"originalCodeFileName":"/home/blake/ExpoSE/Targets/excel-builder/node_modules/jszip/lib/stringWriter.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/excel-builder/node_modules/jszip/lib/stringWriter_jalangi_.js","code":"'use strict';\n\nvar utils = require('./utils');\n\n/**\n * An object to write any content to a string.\n * @constructor\n */\nvar StringWriter = function() {\n    this.data = [];\n};\nStringWriter.prototype = {\n    /**\n     * Append any content to the current string.\n     * @param {Object} input the content to add.\n     */\n    append: function(input) {\n        input = utils.transformTo(\"string\", input);\n        this.data.push(input);\n    },\n    /**\n     * Finalize the construction an return the result.\n     * @return {string} the generated string.\n     */\n    finalize: function() {\n        return this.data.join(\"\");\n    }\n};\n\nmodule.exports = StringWriter;\n"}