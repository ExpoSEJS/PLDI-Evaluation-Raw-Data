J$.iids = {"9":[1,20,1,27],"10":[6,27,6,42],"17":[1,28,1,32],"18":[6,27,6,47],"25":[1,20,1,33],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,1,4,7],"105":[6,16,6,20],"113":[6,27,6,33],"121":[6,36,6,42],"129":[6,45,6,47],"137":[6,16,6,48],"139":[6,16,6,26],"145":[6,16,6,48],"153":[6,9,6,49],"161":[5,19,7,6],"169":[5,19,7,6],"177":[5,19,7,6],"185":[5,19,7,6],"193":[4,18,8,2],"201":[4,1,8,2],"209":[4,1,8,3],"217":[1,1,8,3],"225":[1,1,8,3],"233":[1,1,8,3],"241":[5,19,7,6],"249":[5,19,7,6],"257":[1,1,8,3],"265":[1,1,8,3],"nBranches":0,"originalCodeFileName":"/home/blake/ExpoSE/Targets/excel-builder/node_modules/excel-builder/src/Excel/Positioning.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/excel-builder/node_modules/excel-builder/src/Excel/Positioning_jalangi_.js","code":"\"use strict\";\r\n\r\nmodule.exports = {\r\n    /**\r\n     * Converts pixel sizes to 'EMU's, which is what Open XML uses.\r\n     *\r\n     * @todo clean this up. Code borrowed from http://polymathprogrammer.com/2009/10/22/english-metric-units-and-open-xml/,\r\n     * but not sure that it's going to be as accurate as it needs to be.\r\n     *\r\n     * @param int pixels\r\n     * @returns int\r\n     */\r\n    pixelsToEMUs: function (pixels) {\r\n        return Math.round(pixels * 914400 / 96);\r\n    }\r\n};\r\n"};
jalangiLabel561:
    while (true) {
        try {
            J$.Se(217, '/home/blake/ExpoSE/Targets/excel-builder/node_modules/excel-builder/src/Excel/Positioning_jalangi_.js', '/home/blake/ExpoSE/Targets/excel-builder/node_modules/excel-builder/src/Excel/Positioning.js');
            J$.N(225, '__secret__S$', __secret__S$, 0);
            J$.N(233, '__secret__traits__', __secret__traits__, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            J$.X1(209, J$.P(201, J$.R(97, 'module', module, 2), 'exports', J$.T(193, {
                pixelsToEMUs: J$.T(185, function (pixels) {
                    jalangiLabel560:
                        while (true) {
                            try {
                                J$.Fe(161, arguments.callee, this, arguments);
                                arguments = J$.N(169, 'arguments', arguments, 4);
                                pixels = J$.N(177, 'pixels', pixels, 4);
                                return J$.X1(153, J$.Rt(145, J$.M(137, J$.R(105, 'Math', Math, 2), 'round', 0)(J$.B(18, '/', J$.B(10, '*', J$.R(113, 'pixels', pixels, 0), J$.T(121, 914400, 22, false), 0), J$.T(129, 96, 22, false), 0))));
                            } catch (J$e) {
                                J$.Ex(241, J$e);
                            } finally {
                                if (J$.Fr(249))
                                    continue jalangiLabel560;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 161)
            }, 11, false), 0));
        } catch (J$e) {
            J$.Ex(257, J$e);
        } finally {
            if (J$.Sr(265)) {
                J$.L();
                continue jalangiLabel561;
            } else {
                J$.L();
                break jalangiLabel561;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
