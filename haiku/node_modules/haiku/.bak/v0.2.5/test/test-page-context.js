

  describe('lambdas/helpers', function(){
    it('allows the expansion of pages via front-matter', function(done){
      h.find('001-page-expansion.md', function(err, page){
        if (err) return done(err)

        var expanded = page.context.expanded

        assert.equal(expanded.foo, 'oh')
        assert.equal(expanded.bar, 'my')
        assert.equal(expanded.baz, 'glob')

        done()
      })
    })

    describe('.next', function(){
      it('provides the next page in page.dirname', function(done){
        var names = [ 'linked-pages/second.md'
            , 'linked-pages/third.md'
            ]

        h.find(names, function(err, pages){
          if (err) return done(err)

          var current = pages['linked-pages/second.md']
            , expected = pages['linked-pages/third.md']
            , actual = current.context.next()

          assert.equal(actual.url, expected.url)

          done()
        })
      })
    })

    describe('.previous', function(){
      it('provides the previous page in page.dirname', function(done){
        var names = [ 'linked-pages/second.md'
            , 'linked-pages/first.md'
            ]

        h.find(names, function(err, pages){
          if (err) return done(err)

          var current = pages['linked-pages/second.md']
            , expected = pages['linked-pages/first.md']
            , actual = current.context.previous()

          assert.equal(actual.url, expected.url)

          done()
        })
      })
    })
  })
})
