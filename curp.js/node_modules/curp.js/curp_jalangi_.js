J$.iids = {"8":[86,13,86,45],"9":[1,20,1,27],"10":[86,43,86,45],"16":[114,17,114,36],"17":[1,28,1,32],"18":[86,13,86,45],"24":[136,16,136,41],"25":[1,20,1,33],"26":[124,17,124,26],"32":[136,16,136,41],"33":[1,20,1,33],"34":[124,47,124,67],"40":[276,20,276,28],"41":[1,20,1,33],"42":[124,47,124,75],"48":[329,13,329,26],"49":[2,26,2,38],"50":[136,16,136,26],"56":[337,31,337,85],"57":[2,26,2,45],"58":[136,30,136,41],"64":[338,13,338,32],"65":[2,26,2,45],"66":[177,52,177,54],"72":[345,13,345,40],"73":[2,26,2,45],"74":[177,16,177,54],"80":[350,34,350,62],"81":[4,5,4,17],"82":[276,26,276,28],"88":[354,26,354,47],"89":[4,5,4,18],"90":[276,20,276,28],"96":[356,33,356,62],"97":[7,13,7,19],"98":[326,36,326,47],"104":[357,13,357,69],"105":[8,13,8,19],"106":[326,27,326,48],"112":[361,37,361,66],"113":[9,13,9,19],"114":[326,20,326,48],"120":[357,13,357,69],"121":[10,13,10,19],"122":[328,23,328,32],"128":[373,25,373,57],"129":[11,13,11,19],"130":[328,18,328,32],"136":[387,33,387,65],"137":[12,13,12,19],"138":[329,13,329,26],"144":[387,13,387,76],"145":[13,13,13,19],"146":[332,16,332,33],"152":[391,9,391,68],"153":[14,13,14,19],"154":[337,31,337,49],"160":[391,9,391,68],"161":[15,13,15,19],"162":[337,83,337,85],"169":[16,13,16,19],"170":[337,53,337,85],"177":[17,13,17,19],"178":[345,13,345,40],"185":[18,13,18,19],"186":[354,26,354,47],"193":[19,13,19,19],"194":[356,33,356,62],"201":[20,13,20,19],"202":[357,13,357,36],"209":[21,13,21,19],"210":[357,40,357,69],"217":[22,13,22,19],"218":[361,37,361,66],"225":[23,13,23,19],"226":[371,20,371,34],"233":[24,13,24,19],"234":[373,55,373,57],"241":[25,13,25,19],"242":[373,25,373,57],"249":[26,13,26,19],"250":[381,17,381,49],"257":[27,13,27,19],"258":[387,33,387,65],"265":[28,13,28,19],"266":[391,44,391,68],"273":[29,13,29,19],"281":[30,13,30,19],"289":[31,13,31,19],"297":[32,13,32,19],"305":[33,13,33,19],"313":[34,13,34,19],"321":[35,13,35,19],"329":[36,13,36,19],"337":[37,13,37,19],"345":[38,13,38,19],"353":[39,13,39,19],"361":[40,13,40,19],"369":[41,13,41,19],"377":[42,13,42,19],"385":[43,13,43,19],"393":[44,13,44,19],"401":[45,13,45,19],"409":[46,13,46,19],"417":[47,13,47,19],"425":[48,13,48,19],"433":[49,13,49,19],"441":[50,13,50,19],"449":[51,13,51,19],"457":[52,13,52,19],"465":[53,13,53,19],"473":[54,13,54,19],"481":[55,13,55,19],"489":[56,13,56,19],"497":[57,13,57,19],"505":[58,13,58,19],"513":[59,13,59,19],"521":[60,13,60,19],"529":[61,13,61,19],"537":[62,13,62,19],"545":[63,13,63,19],"553":[64,13,64,19],"561":[65,13,65,19],"569":[66,13,66,19],"577":[67,13,67,19],"585":[68,13,68,19],"593":[69,13,69,19],"601":[70,13,70,19],"609":[71,13,71,19],"617":[72,13,72,19],"625":[73,13,73,19],"633":[74,13,74,19],"641":[75,13,75,19],"649":[76,13,76,19],"657":[77,13,77,19],"665":[78,13,78,19],"673":[79,13,79,19],"681":[80,13,80,19],"689":[81,13,81,19],"697":[82,13,82,19],"705":[83,13,83,19],"713":[84,13,84,19],"721":[6,30,85,10],"729":[6,30,85,10],"737":[6,30,85,10],"745":[86,13,86,27],"753":[86,36,86,39],"761":[86,13,86,40],"763":[86,13,86,35],"769":[86,44,86,45],"777":[87,19,87,22],"785":[87,31,87,40],"793":[87,42,87,47],"801":[87,19,87,48],"803":[87,19,87,30],"809":[87,19,87,48],"817":[87,13,87,49],"825":[89,16,89,19],"833":[89,16,89,19],"841":[89,9,89,20],"849":[5,5,90,6],"857":[5,5,90,6],"865":[5,5,90,6],"873":[5,5,90,6],"881":[93,13,93,21],"889":[94,13,94,22],"897":[95,13,95,21],"905":[96,13,96,22],"913":[97,13,97,22],"921":[98,13,98,21],"929":[99,13,99,22],"937":[100,13,100,21],"945":[101,13,101,21],"953":[102,13,102,21],"961":[103,13,103,22],"969":[104,13,104,22],"977":[105,13,105,21],"985":[106,13,106,22],"993":[107,13,107,22],"1001":[108,13,108,21],"1009":[109,13,109,22],"1017":[110,13,110,22],"1025":[111,13,111,20],"1033":[92,26,112,10],"1041":[92,26,112,10],"1049":[92,26,112,10],"1057":[113,9,113,19],"1065":[114,17,114,26],"1073":[114,32,114,35],"1081":[114,17,114,36],"1083":[114,17,114,31],"1089":[115,23,115,26],"1097":[115,35,115,44],"1105":[115,46,115,48],"1113":[115,23,115,49],"1115":[115,23,115,34],"1121":[115,23,115,49],"1129":[115,17,115,50],"1137":[113,28,117,10],"1145":[113,28,117,10],"1153":[113,28,117,10],"1161":[113,28,117,10],"1169":[113,9,117,11],"1171":[113,9,113,27],"1177":[113,9,117,12],"1185":[118,16,118,19],"1193":[118,16,118,19],"1201":[118,9,118,20],"1209":[91,5,119,6],"1217":[91,5,119,6],"1225":[91,5,119,6],"1233":[91,5,119,6],"1241":[121,19,121,24],"1249":[121,31,121,32],"1257":[121,34,121,39],"1265":[121,45,121,46],"1273":[121,48,121,53],"1281":[121,34,121,54],"1283":[121,34,121,44],"1289":[121,19,121,55],"1291":[121,19,121,30],"1297":[122,20,122,21],"1305":[122,20,122,21],"1313":[122,13,122,22],"1321":[121,60,123,10],"1329":[121,60,123,10],"1337":[121,60,123,10],"1345":[121,19,123,11],"1347":[121,19,121,59],"1353":[123,17,123,19],"1361":[121,19,123,20],"1363":[121,19,123,16],"1369":[121,19,123,20],"1377":[121,19,123,20],"1385":[124,17,124,20],"1393":[124,23,124,26],"1401":[124,40,124,46],"1409":[124,47,124,59],"1417":[124,62,124,67],"1425":[124,70,124,75],"1433":[124,36,124,76],"1441":[124,78,124,82],"1449":[124,16,124,83],"1451":[124,16,124,35],"1457":[124,16,124,83],"1465":[124,9,124,84],"1473":[120,5,125,6],"1481":[120,5,125,6],"1489":[120,5,125,6],"1497":[120,5,125,6],"1505":[120,5,125,6],"1513":[126,15,126,22],"1521":[126,28,126,32],"1529":[126,34,126,35],"1537":[126,15,126,36],"1539":[126,15,126,27],"1545":[127,13,127,20],"1553":[128,13,128,17],"1561":[129,13,129,18],"1569":[130,13,130,19],"1577":[131,13,131,16],"1585":[132,13,132,17],"1593":[126,48,133,10],"1601":[126,15,126,36],"1609":[126,15,126,36],"1617":[126,48,133,10],"1625":[126,48,133,10],"1633":[135,15,135,18],"1641":[135,15,135,25],"1643":[135,15,135,23],"1649":[135,36,135,37],"1657":[135,15,135,38],"1659":[135,15,135,35],"1665":[135,47,135,58],"1673":[135,60,135,62],"1681":[135,15,135,63],"1683":[135,15,135,46],"1689":[135,74,135,75],"1697":[135,77,135,78],"1705":[135,15,135,79],"1707":[135,15,135,73],"1713":[135,15,135,79],"1721":[135,9,135,80],"1729":[136,16,136,19],"1737":[136,24,136,26],"1745":[136,30,136,33],"1753":[136,38,136,41],"1761":[136,44,136,47],"1769":[136,50,136,53],"1777":[136,16,136,53],"1785":[136,9,136,54],"1793":[134,5,137,6],"1801":[134,5,137,6],"1809":[134,5,137,6],"1817":[139,16,139,19],"1825":[139,16,139,33],"1827":[139,16,139,31],"1833":[139,42,139,59],"1841":[139,61,139,64],"1849":[139,16,139,65],"1851":[139,16,139,41],"1857":[139,16,139,65],"1865":[139,9,139,66],"1873":[138,5,140,6],"1881":[138,5,140,6],"1889":[138,5,140,6],"1897":[143,13,143,17],"1905":[144,13,144,17],"1913":[145,13,145,17],"1921":[146,13,146,17],"1929":[147,13,147,17],"1937":[148,13,148,17],"1945":[149,13,149,17],"1953":[150,13,150,17],"1961":[151,13,151,17],"1969":[152,13,152,17],"1977":[153,13,153,17],"1985":[154,13,154,17],"1993":[155,13,155,17],"2001":[156,13,156,17],"2009":[157,13,157,17],"2017":[158,13,158,17],"2025":[159,13,159,17],"2033":[160,13,160,17],"2041":[161,13,161,17],"2049":[162,13,162,17],"2057":[163,13,163,17],"2065":[164,13,164,17],"2073":[165,13,165,17],"2081":[166,13,166,17],"2089":[167,13,167,17],"2097":[168,13,168,17],"2105":[169,13,169,17],"2113":[170,13,170,17],"2121":[171,13,171,17],"2129":[172,13,172,17],"2137":[173,13,173,17],"2145":[174,13,174,17],"2153":[175,13,175,17],"2161":[142,22,176,10],"2169":[142,22,176,10],"2177":[142,22,176,10],"2185":[177,16,177,22],"2193":[177,31,177,34],"2201":[177,31,177,48],"2203":[177,31,177,46],"2209":[177,16,177,49],"2211":[177,16,177,30],"2217":[177,53,177,54],"2225":[177,16,177,54],"2233":[177,9,177,55],"2241":[141,5,178,6],"2249":[141,5,178,6],"2257":[141,5,178,6],"2265":[141,5,178,6],"2273":[182,13,182,16],"2281":[183,13,183,16],"2289":[184,13,184,16],"2297":[185,13,185,16],"2305":[186,13,186,16],"2313":[187,13,187,16],"2321":[188,13,188,16],"2329":[189,13,189,16],"2337":[190,13,190,16],"2345":[191,13,191,16],"2353":[192,13,192,16],"2361":[193,13,193,16],"2369":[194,13,194,16],"2377":[195,13,195,16],"2385":[196,13,196,16],"2393":[197,13,197,16],"2401":[198,13,198,16],"2409":[199,13,199,16],"2417":[200,13,200,16],"2425":[201,13,201,16],"2433":[202,13,202,16],"2441":[203,13,203,16],"2449":[204,13,204,16],"2457":[205,13,205,16],"2465":[206,13,206,16],"2473":[207,13,207,16],"2481":[208,13,208,16],"2489":[209,13,209,16],"2497":[210,13,210,16],"2505":[211,13,211,16],"2513":[212,13,212,16],"2521":[213,13,213,16],"2529":[214,13,214,16],"2537":[215,13,215,16],"2545":[216,13,216,16],"2553":[217,13,217,16],"2561":[218,13,218,16],"2569":[219,13,219,16],"2577":[220,13,220,16],"2585":[221,13,221,16],"2593":[222,13,222,16],"2601":[223,13,223,16],"2609":[224,13,224,16],"2617":[225,13,225,16],"2625":[181,18,226,10],"2633":[181,18,226,10],"2641":[181,9,226,11],"2649":[228,13,228,16],"2657":[229,13,229,16],"2665":[230,13,230,16],"2673":[231,13,231,16],"2681":[232,13,232,16],"2689":[233,13,233,16],"2697":[234,13,234,16],"2705":[235,13,235,16],"2713":[236,13,236,16],"2721":[237,13,237,16],"2729":[238,13,238,16],"2737":[239,13,239,16],"2745":[240,13,240,16],"2753":[241,13,241,16],"2761":[242,13,242,16],"2769":[243,13,243,16],"2777":[244,13,244,16],"2785":[245,13,245,16],"2793":[246,13,246,16],"2801":[247,13,247,16],"2809":[248,13,248,16],"2817":[249,13,249,16],"2825":[250,13,250,16],"2833":[251,13,251,16],"2841":[252,13,252,16],"2849":[253,13,253,16],"2857":[254,13,254,16],"2865":[255,13,255,16],"2873":[256,13,256,16],"2881":[257,13,257,16],"2889":[258,13,258,16],"2897":[259,13,259,16],"2905":[260,13,260,16],"2913":[261,13,261,16],"2921":[262,13,262,16],"2929":[263,13,263,16],"2937":[264,13,264,16],"2945":[265,13,265,16],"2953":[266,13,266,16],"2961":[267,13,267,16],"2969":[268,13,268,16],"2977":[269,13,269,16],"2985":[270,13,270,16],"2993":[271,13,271,16],"3001":[227,19,272,10],"3009":[227,19,272,10],"3017":[227,9,272,11],"3025":[273,15,273,18],"3033":[273,25,273,27],"3041":[273,15,273,28],"3043":[273,15,273,24],"3049":[273,15,273,28],"3057":[273,9,273,29],"3065":[274,18,274,21],"3073":[275,23,275,29],"3081":[275,38,275,42],"3089":[275,23,275,43],"3091":[275,23,275,37],"3097":[275,23,275,43],"3105":[275,23,275,43],"3113":[276,20,276,23],"3121":[276,27,276,28],"3129":[276,31,276,38],"3137":[276,39,276,42],"3145":[276,31,276,43],"3153":[276,46,276,50],"3161":[276,20,276,50],"3169":[276,13,276,51],"3177":[274,26,277,10],"3185":[274,26,277,10],"3193":[274,26,277,10],"3201":[274,26,277,10],"3209":[274,26,277,10],"3217":[274,18,277,11],"3219":[274,18,274,25],"3225":[274,18,277,11],"3233":[274,9,277,12],"3241":[278,16,278,22],"3249":[278,28,278,30],"3257":[278,16,278,31],"3259":[278,16,278,27],"3265":[278,16,278,31],"3273":[278,9,278,32],"3281":[179,5,279,6],"3289":[179,5,279,6],"3297":[179,5,279,6],"3305":[179,5,279,6],"3313":[179,5,279,6],"3321":[179,5,279,6],"3329":[282,16,282,24],"3337":[282,35,282,36],"3345":[282,38,282,40],"3353":[282,16,282,41],"3355":[282,16,282,34],"3361":[282,16,282,55],"3363":[282,16,282,53],"3369":[282,62,282,64],"3377":[282,16,282,65],"3379":[282,16,282,61],"3385":[282,16,282,65],"3393":[282,9,282,66],"3401":[284,13,284,16],"3409":[285,13,285,16],"3417":[286,13,286,16],"3425":[287,13,287,16],"3433":[288,13,288,16],"3441":[289,13,289,16],"3449":[290,13,290,16],"3457":[291,13,291,16],"3465":[292,13,292,16],"3473":[293,13,293,16],"3481":[294,13,294,16],"3489":[295,13,295,16],"3497":[296,13,296,16],"3505":[297,13,297,16],"3513":[298,13,298,16],"3521":[299,13,299,16],"3529":[300,13,300,16],"3537":[301,13,301,16],"3545":[302,13,302,16],"3553":[303,13,303,16],"3561":[304,13,304,16],"3569":[305,13,305,16],"3577":[306,13,306,16],"3585":[307,13,307,16],"3593":[308,13,308,16],"3601":[309,13,309,16],"3609":[310,13,310,16],"3617":[311,13,311,16],"3625":[312,13,312,16],"3633":[313,13,313,16],"3641":[314,13,314,16],"3649":[315,13,315,16],"3657":[316,13,316,16],"3665":[317,13,317,16],"3673":[318,13,318,16],"3681":[319,13,319,16],"3689":[320,13,320,16],"3697":[283,22,321,10],"3705":[283,22,321,10],"3713":[283,9,321,11],"3721":[322,24,322,28],"3729":[323,20,323,30],"3737":[323,39,323,47],"3745":[323,20,323,48],"3747":[323,20,323,38],"3753":[323,20,323,48],"3761":[323,13,323,49],"3769":[322,33,324,10],"3777":[322,33,324,10],"3785":[322,33,324,10],"3793":[322,33,324,10],"3801":[322,24,324,11],"3803":[322,24,322,32],"3809":[322,24,324,11],"3817":[322,9,324,12],"3825":[325,16,325,28],"3833":[326,20,326,24],"3841":[326,27,326,32],"3849":[326,36,326,38],"3857":[326,41,326,47],"3865":[326,20,326,48],"3873":[326,13,326,49],"3881":[325,36,327,10],"3889":[325,36,327,10],"3897":[325,36,327,10],"3905":[325,36,327,10],"3913":[325,36,327,10],"3921":[325,36,327,10],"3929":[327,12,327,13],"3937":[325,16,327,14],"3939":[325,16,325,35],"3945":[325,16,327,14],"3953":[325,9,327,15],"3961":[328,18,328,20],"3969":[328,23,328,27],"3977":[328,30,328,32],"3985":[328,18,328,32],"3993":[328,9,328,33],"4001":[329,13,329,19],"4009":[329,24,329,26],"4017":[330,22,330,23],"4025":[330,22,330,23],"4033":[330,13,330,24],"4041":[332,16,332,24],"4049":[332,27,332,33],"4057":[332,16,332,33],"4065":[332,9,332,34],"4073":[280,5,333,6],"4081":[280,5,333,6],"4089":[280,5,333,6],"4097":[280,5,333,6],"4105":[280,5,333,6],"4113":[280,5,333,6],"4121":[280,5,333,6],"4129":[280,5,333,6],"4137":[336,19,336,25],"4145":[336,19,336,39],"4147":[336,19,336,37],"4153":[336,19,336,46],"4155":[336,19,336,44],"4161":[336,53,336,58],"4169":[336,19,336,59],"4171":[336,19,336,52],"4177":[336,19,336,59],"4185":[336,9,336,60],"4193":[337,31,337,38],"4201":[337,31,337,45],"4209":[337,48,337,49],"4217":[337,53,337,60],"4225":[337,69,337,76],"4233":[337,77,337,78],"4241":[337,69,337,79],"4249":[337,53,337,80],"4251":[337,53,337,68],"4257":[337,84,337,85],"4265":[337,31,337,85],"4273":[337,9,337,86],"4281":[338,13,338,32],"4289":[339,20,339,27],"4297":[339,28,339,29],"4305":[339,20,339,30],"4313":[339,41,339,42],"4321":[339,44,339,45],"4329":[339,20,339,46],"4331":[339,20,339,40],"4337":[339,20,339,46],"4345":[339,13,339,47],"4353":[341,16,341,23],"4361":[341,24,341,25],"4369":[341,16,341,26],"4377":[341,37,341,38],"4385":[341,40,341,41],"4393":[341,16,341,42],"4395":[341,16,341,36],"4401":[341,16,341,42],"4409":[341,9,341,43],"4417":[334,5,342,6],"4425":[334,5,342,6],"4433":[334,5,342,6],"4441":[334,5,342,6],"4449":[334,5,342,6],"4457":[345,14,345,26],"4465":[345,27,345,32],"4473":[345,27,345,39],"4481":[345,14,345,40],"4489":[346,20,346,25],"4497":[346,20,346,25],"4505":[346,13,346,26],"4513":[348,9,348,14],"4521":[348,24,348,39],"4529":[348,40,348,55],"4537":[348,56,348,61],"4545":[348,56,348,68],"4553":[348,56,348,82],"4555":[348,56,348,80],"4561":[348,40,348,83],"4569":[348,24,348,84],"4577":[348,24,348,91],"4579":[348,24,348,89],"4585":[348,9,348,91],"4593":[348,9,348,92],"4601":[349,9,349,14],"4609":[349,34,349,49],"4617":[349,50,349,65],"4625":[349,66,349,71],"4633":[349,66,349,88],"4641":[349,66,349,102],"4643":[349,66,349,100],"4649":[349,50,349,103],"4657":[349,34,349,104],"4665":[349,34,349,111],"4667":[349,34,349,109],"4673":[349,9,349,111],"4681":[349,9,349,112],"4689":[350,9,350,14],"4697":[350,34,350,39],"4705":[350,34,350,56],"4713":[350,60,350,62],"4721":[350,9,350,62],"4729":[350,9,350,63],"4737":[351,9,351,14],"4745":[351,34,351,49],"4753":[351,50,351,65],"4761":[351,66,351,71],"4769":[351,66,351,88],"4777":[351,66,351,102],"4779":[351,66,351,100],"4785":[351,50,351,103],"4793":[351,34,351,104],"4801":[351,34,351,111],"4803":[351,34,351,109],"4809":[351,9,351,111],"4817":[351,9,351,112],"4825":[352,26,352,39],"4833":[352,40,352,45],"4841":[352,40,352,52],"4849":[352,26,352,53],"4857":[352,26,352,53],"4865":[352,9,352,54],"4873":[353,26,353,31],"4881":[353,26,353,48],"4889":[353,26,353,55],"4891":[353,26,353,53],"4897":[353,66,353,67],"4905":[353,26,353,68],"4907":[353,26,353,65],"4913":[353,77,353,104],"4921":[353,106,353,108],"4929":[353,26,353,109],"4931":[353,26,353,76],"4937":[353,120,353,121],"4945":[353,123,353,124],"4953":[353,26,353,125],"4955":[353,26,353,119],"4961":[353,26,353,125],"4969":[353,9,353,126],"4977":[354,26,354,40],"4985":[354,45,354,47],"4993":[354,50,354,53],"5001":[354,56,354,70],"5009":[354,26,354,70],"5017":[354,9,354,71],"5025":[355,33,355,38],"5033":[355,33,355,55],"5041":[355,66,355,67],"5049":[355,69,355,70],"5057":[355,33,355,71],"5059":[355,33,355,65],"5065":[355,33,355,71],"5073":[355,9,355,72],"5081":[356,33,356,54],"5089":[356,59,356,62],"5097":[356,65,356,68],"5105":[356,71,356,92],"5113":[356,33,356,92],"5121":[356,9,356,93],"5129":[357,14,357,19],"5137":[357,14,357,36],"5145":[357,40,357,45],"5153":[357,40,357,62],"5161":[357,67,357,69],"5169":[358,37,358,40],"5177":[358,37,358,40],"5185":[358,13,358,41],"5193":[360,37,360,42],"5201":[360,37,360,59],"5209":[360,70,360,71],"5217":[360,73,360,74],"5225":[360,37,360,75],"5227":[360,37,360,69],"5233":[360,37,360,75],"5241":[360,13,360,76],"5249":[361,37,361,58],"5257":[361,63,361,66],"5265":[361,69,361,72],"5273":[361,75,361,96],"5281":[361,37,361,96],"5289":[361,13,361,97],"5297":[364,13,364,34],"5305":[365,13,365,27],"5313":[366,13,366,34],"5321":[367,13,367,27],"5329":[363,24,368,10],"5337":[368,16,368,18],"5345":[363,24,368,19],"5347":[363,24,368,15],"5353":[363,24,368,19],"5361":[363,9,368,20],"5369":[369,24,369,44],"5377":[369,45,369,61],"5385":[369,62,369,74],"5393":[369,45,369,75],"5401":[369,24,369,76],"5409":[369,24,369,76],"5417":[369,9,369,77],"5425":[370,19,370,24],"5433":[370,19,370,31],"5441":[370,38,370,41],"5449":[370,19,370,42],"5451":[370,19,370,37],"5457":[371,20,371,27],"5465":[371,32,371,34],"5473":[371,20,371,34],"5481":[371,13,371,35],"5489":[370,50,372,10],"5497":[370,50,372,10],"5505":[370,50,372,10],"5513":[370,50,372,10],"5521":[370,19,372,11],"5523":[370,19,370,49],"5529":[370,19,372,11],"5537":[370,9,372,12],"5545":[373,25,373,32],"5553":[373,41,373,48],"5561":[373,49,373,50],"5569":[373,41,373,51],"5577":[373,25,373,52],"5579":[373,25,373,40],"5585":[373,56,373,57],"5593":[373,60,373,67],"5601":[373,68,373,69],"5609":[373,60,373,70],"5617":[373,73,373,80],"5625":[373,81,373,82],"5633":[373,73,373,83],"5641":[373,25,373,83],"5649":[373,9,373,84],"5657":[375,13,375,29],"5665":[375,30,375,35],"5673":[375,30,375,52],"5681":[375,13,375,53],"5689":[376,13,376,29],"5697":[376,30,376,35],"5705":[376,30,376,52],"5713":[376,13,376,53],"5721":[377,13,377,29],"5729":[377,30,377,43],"5737":[377,13,377,44],"5745":[374,26,378,10],"5753":[378,16,378,18],"5761":[374,26,378,19],"5763":[374,26,378,15],"5769":[374,26,378,19],"5777":[374,9,378,20],"5785":[380,13,380,25],"5793":[381,13,381,16],"5801":[381,17,381,22],"5809":[381,17,381,39],"5817":[381,40,381,41],"5825":[381,17,381,42],"5833":[381,45,381,49],"5841":[381,13,381,50],"5849":[382,13,382,16],"5857":[382,17,382,22],"5865":[382,17,382,39],"5873":[382,40,382,41],"5881":[382,17,382,42],"5889":[382,13,382,43],"5897":[383,13,383,16],"5905":[383,17,383,22],"5913":[383,17,383,39],"5921":[383,40,383,41],"5929":[383,17,383,42],"5937":[383,13,383,43],"5945":[384,13,384,18],"5953":[384,13,384,23],"5961":[384,13,384,37],"5963":[384,13,384,35],"5969":[385,13,385,18],"5977":[385,13,385,25],"5985":[385,13,385,39],"5987":[385,13,385,37],"5993":[386,13,386,27],"6001":[387,13,387,18],"6009":[387,13,387,28],"6017":[387,33,387,38],"6025":[387,33,387,55],"6033":[387,56,387,57],"6041":[387,33,387,58],"6049":[387,61,387,65],"6057":[387,68,387,71],"6065":[387,74,387,75],"6073":[379,16,388,10],"6081":[388,16,388,18],"6089":[379,16,388,19],"6091":[379,16,388,15],"6097":[379,16,388,19],"6105":[379,9,388,20],"6113":[389,16,389,39],"6121":[389,40,389,44],"6129":[389,16,389,45],"6137":[389,16,389,45],"6145":[389,9,389,46],"6153":[343,5,390,6],"6161":[343,5,390,6],"6169":[343,5,390,6],"6177":[343,5,390,6],"6185":[343,5,390,6],"6193":[343,5,390,6],"6201":[343,5,390,6],"6209":[343,5,390,6],"6217":[343,5,390,6],"6225":[343,5,390,6],"6233":[343,5,390,6],"6241":[343,5,390,6],"6249":[391,9,391,15],"6257":[391,31,391,39],"6265":[391,9,391,40],"6267":[391,9,391,30],"6273":[391,44,391,50],"6281":[391,44,391,57],"6289":[391,62,391,68],"6297":[392,9,392,15],"6305":[392,29,392,39],"6313":[392,9,392,39],"6321":[392,9,392,40],"6329":[394,9,394,15],"6337":[394,26,394,36],"6345":[394,9,394,36],"6353":[394,9,394,37],"6361":[3,2,396,2],"6369":[3,2,396,2],"6377":[3,2,396,2],"6385":[5,5,90,6],"6393":[3,2,396,2],"6401":[91,5,119,6],"6409":[3,2,396,2],"6417":[120,5,125,6],"6425":[3,2,396,2],"6433":[3,2,396,2],"6441":[3,2,396,2],"6449":[134,5,137,6],"6457":[3,2,396,2],"6465":[138,5,140,6],"6473":[3,2,396,2],"6481":[141,5,178,6],"6489":[3,2,396,2],"6497":[179,5,279,6],"6505":[3,2,396,2],"6513":[280,5,333,6],"6521":[3,2,396,2],"6529":[334,5,342,6],"6537":[3,2,396,2],"6545":[343,5,390,6],"6553":[3,2,396,2],"6561":[3,2,396,2],"6569":[396,3,396,7],"6577":[3,2,396,8],"6585":[3,1,396,10],"6593":[1,1,396,10],"6601":[1,1,396,10],"6609":[1,1,396,10],"6617":[86,9,88,10],"6625":[5,5,90,6],"6633":[5,5,90,6],"6641":[114,13,116,14],"6649":[113,28,117,10],"6657":[113,28,117,10],"6665":[91,5,119,6],"6673":[91,5,119,6],"6681":[121,60,123,10],"6689":[121,60,123,10],"6697":[120,5,125,6],"6705":[120,5,125,6],"6713":[136,16,136,53],"6721":[134,5,137,6],"6729":[134,5,137,6],"6737":[138,5,140,6],"6745":[138,5,140,6],"6753":[141,5,178,6],"6761":[141,5,178,6],"6769":[276,20,276,50],"6777":[274,26,277,10],"6785":[274,26,277,10],"6793":[179,5,279,6],"6801":[179,5,279,6],"6809":[322,33,324,10],"6817":[322,33,324,10],"6825":[325,36,327,10],"6833":[325,36,327,10],"6841":[329,9,331,10],"6849":[280,5,333,6],"6857":[280,5,333,6],"6865":[338,9,340,10],"6873":[334,5,342,6],"6881":[334,5,342,6],"6889":[345,9,347,10],"6897":[354,26,354,70],"6905":[356,33,356,92],"6913":[361,37,361,96],"6921":[357,9,362,10],"6929":[370,50,372,10],"6937":[370,50,372,10],"6945":[373,25,373,83],"6953":[387,33,387,75],"6961":[343,5,390,6],"6969":[343,5,390,6],"6977":[391,5,395,6],"6985":[3,2,396,2],"6993":[3,2,396,2],"7001":[1,1,396,10],"7009":[1,1,396,10],"nBranches":40,"originalCodeFileName":"/home/blake/ExpoSE/Targets/curp.js/node_modules/curp.js/curp.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/curp.js/node_modules/curp.js/curp_jalangi_.js","code":"/*jslint indent:2, regexp:true*/\n(function (global) {\n  'use strict';\n  /**\n    curp.js\n    Función para generar el CURP, de acuerdo a las especificaciones oficiales.\n    Se puede usar con node.js y directamente en el navegador.\n\n    INSTALACION:\n    Navegador : <script src=\"curp.js\"></script>\n    Node.js   : var generaCurp = require('curp');\n\n    MODO DE USO:\n    var curp = generaCurp({\n      nombre            : 'Juan',\n      apellido_paterno  : 'Perez',\n      apellido_materno  : 'Ramirez',\n      sexo              : 'H',\n      estado            : 'DF',\n      fecha_nacimiento  : [31, 1, 1981]\n    });\n\n\n    Licencia: MIT ( http://opensource.org/licenses/MIT )\n  */\n\n  /**\n  * filtraInconvenientes()\n  * Filtra palabras altisonantes en los primeros 4 caracteres del CURP\n  * @param {string} str - Los primeros 4 caracteres del CURP\n  */\n  function filtraInconvenientes(str) {\n    var inconvenientes = [ 'BACA', 'LOCO', 'BUEI', 'BUEY', 'MAME', 'CACA', 'MAMO',\n      'CACO', 'MEAR', 'CAGA', 'MEAS', 'CAGO', 'MEON', 'CAKA', 'MIAR', 'CAKO', 'MION',\n      'COGE', 'MOCO', 'COGI', 'MOKO', 'COJA', 'MULA', 'COJE', 'MULO', 'COJI', 'NACA',\n      'COJO', 'NACO', 'COLA', 'PEDA', 'CULO', 'PEDO', 'FALO', 'PENE', 'FETO', 'PIPI',\n      'GETA', 'PITO', 'GUEI', 'POPO', 'GUEY', 'PUTA', 'JETA', 'PUTO', 'JOTO', 'QULO',\n      'KACA', 'RATA', 'KACO', 'ROBA', 'KAGA', 'ROBE', 'KAGO', 'ROBO', 'KAKA', 'RUIN',\n      'KAKO', 'SENO', 'KOGE', 'TETA', 'KOGI', 'VACA', 'KOJA', 'VAGA', 'KOJE', 'VAGO',\n      'KOJI', 'VAKA', 'KOJO', 'VUEI', 'KOLA', 'VUEY', 'KULO', 'WUEI', 'LILO', 'WUEY',\n      'LOCA' ];\n\n    if (inconvenientes.indexOf(str) > -1) {\n      str = str.replace(/^(\\w)\\w/, '$1X');\n    }\n\n    return str;\n  }\n\n  /**\n   * ajustaCompuesto()\n   * Cuando el nombre o los apellidos son compuestos y tienen\n   * proposiciones, contracciones o conjunciones, se deben eliminar esas palabras\n   * a la hora de calcular el CURP.\n   * @param {string} str - String donde se eliminarán las partes que lo hacen compuesto\n   */\n  function ajustaCompuesto(str) {\n    var compuestos = [ /\\bDA\\b/, /\\bDAS\\b/, /\\bDE\\b/, /\\bDEL\\b/, /\\bDER\\b/, /\\bDI\\b/,\n        /\\bDIE\\b/, /\\bDD\\b/, /\\bEL\\b/, /\\bLA\\b/, /\\bLOS\\b/, /\\bLAS\\b/, /\\bLE\\b/,\n        /\\bLES\\b/, /\\bMAC\\b/, /\\bMC\\b/, /\\bVAN\\b/, /\\bVON\\b/, /\\bY\\b/ ];\n\n    compuestos.forEach(function (compuesto) {\n      if (compuesto.test(str)) {\n        str = str.replace(compuesto, '');\n      }\n    });\n\n    return str;\n  }\n\n  /**\n  * zeropad()\n  * Rellena con ceros un string, para que quede de un ancho determinado.\n  * @param {number} ancho - Ancho deseado.\n  * @param {number} num - Numero que sera procesado.\n  */\n  function zeropad(ancho, num) {\n    var pad = Array.apply(0, Array.call(0, ancho)).map(function () { return 0; }).join('');\n\n    return (pad + num).replace(new RegExp('^.*([0-9]{' + ancho + '})$'), '$1');\n  }\n  var pad = zeropad.bind(null, 2), comunes = [ 'MARIA', 'MA', 'MA.', 'JOSE', 'J', 'J.' ];\n  /**\n  * primerConsonante()\n  * Saca la primer consonante interna del string, y la devuelve.\n  * Si no hay una consonante interna, devuelve X.\n  * @param {string} str - String del cual se va a sacar la primer consonante.\n  */\n  function primerConsonante(str) {\n    str = str.trim().substring(1).replace(/[AEIOU]/ig, '').substring(0, 1);\n    return (str === '' || str === 'Ñ') ? 'X' : str;\n  }\n\n  /**\n  * filtraCaracteres()\n  * Filtra convirtiendo todos los caracteres no alfabeticos a X.\n  * @param {string} str - String el cual sera convertido.\n  */\n  function filtraCaracteres(str) {\n    return str.toUpperCase().replace(/[\\d_\\-\\.\\/\\\\,]/g, 'X');\n  }\n\n  /**\n  * estadoValido()\n  * Valida si el estado esta en la lista de estados, de acuerdo a la RENAPO.\n  * @param {string} str - String con el estado.\n  */\n  function estadoValido(str) {\n    var estado = [ 'AS', 'BC', 'BS', 'CC', 'CS', 'CH', 'CL', 'CM', 'DF', 'DG',\n        'GT', 'GR', 'HG', 'JC', 'MC', 'MN', 'MS', 'NT', 'NL', 'OC', 'PL', 'QT',\n        'QR', 'SP', 'SL', 'SR', 'TC', 'TS', 'TL', 'VZ', 'YN', 'ZS', 'NE' ];\n\n    return (estado.indexOf(str.toUpperCase()) > -1);\n  }\n\n\n  /**\n  * normalizaString()\n  * Elimina los acentos, eñes y diéresis que pudiera tener el nombre.\n  * @param {string} str - String con el nombre o los apellidos.\n  */\n  function normalizaString(str) {\n    var origen, destino, salida;\n    origen  = [ 'Ã', 'À', 'Á', 'Ä', 'Â', 'È', 'É', 'Ë', 'Ê', 'Ì', 'Í', 'Ï', 'Î',\n             'Ò', 'Ó', 'Ö', 'Ô', 'Ù', 'Ú', 'Ü', 'Û', 'ã', 'à', 'á', 'ä', 'â',\n             'è', 'é', 'ë', 'ê', 'ì', 'í', 'ï', 'î', 'ò', 'ó', 'ö', 'ô', 'ù',\n             'ú', 'ü', 'û', 'Ç', 'ç' ];\n    destino = [ 'A', 'A', 'A', 'A', 'A', 'E', 'E', 'E', 'E', 'I', 'I', 'I', 'I',\n             'O', 'O', 'O', 'O', 'U', 'U', 'U', 'U', 'a', 'a', 'a', 'a', 'a',\n             'e', 'e', 'e', 'e', 'i', 'i', 'i', 'i', 'o', 'o', 'o', 'o', 'u',\n             'u', 'u', 'u', 'c', 'c' ];\n    str     = str.split('');\n    salida  = str.map(function (char) {\n      var pos = origen.indexOf(char);\n      return (pos > -1) ? destino[pos] : char;\n    });\n\n    return salida.join('');\n  }\n\n\n  /**\n  * agregaDigitoVerificador()\n  * Agrega el dígito que se usa para validar el CURP.\n  * @param {string} curp_str - String que contiene los primeros 17 caracteres del CURP.\n  */\n  function agregaDigitoVerificador(curp_str) {\n    // Convierte el CURP en un arreglo\n    var curp, caracteres, curpNumerico, suma, digito;\n\n    curp = curp_str.substring(0, 17).toUpperCase().split('');\n    caracteres  = [\n      '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E',\n      'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'Ñ', 'O', 'P', 'Q', 'R', 'S',\n      'T', 'U', 'V', 'W', 'X', 'Y', 'Z'\n    ];\n\n    // Convierte el curp a un arreglo de números, usando la posición de cada\n    // carácter, dentro del arreglo `caracteres`.\n    curpNumerico = curp.map(function (caracter) {\n      return caracteres.indexOf(caracter);\n    });\n\n    suma = curpNumerico.reduce(function (prev, valor, indice) {\n      return prev + (valor * (18 - indice));\n    }, 0);\n\n    digito = (10 - (suma % 10));\n\n    if (digito === 10) {\n      digito = 0;\n    }\n\n    return curp_str + digito;\n  }\n\n  /**\n   * extraerInicial()\n   * Funcion que extrae la inicial del primer nombre, o, si tiene mas de 1 nombre Y el primer\n   * nombre es uno de la lista de nombres comunes, la inicial del segundo nombre\n   * @param {string} nombre - String que representa todos los nombres (excepto los apellidos) separados por espacio\n   */\n  function extrarInicial(nombre) {\n    var nombres, primerNombreEsComun;\n    nombres = nombre.toUpperCase().trim().split(/\\s+/);\n    primerNombreEsComun = (nombres.length > 1 && comunes.indexOf(nombres[0]) > -1);\n\n    if (primerNombreEsComun) {\n      return nombres[1].substring(0, 1);\n    }\n\n    return nombres[0].substring(0, 1);\n  }\n\n  /**\n  * generaCurp()\n  * Función principal que genera el CURP.\n  * @param {object} param - Objeto que tiene los parámetros necesarios para poder generar el curp,\n  * Las propiedasdes del objeto param son:\n  * @param {string} nombre - Nombre(s).\n  * @param {string} apellido_paterno - Apellido materno.\n  * @param {string} apellido_materno - Apellido materno.\n  * En caso de haber conjunciones en los apellidos, estas deben ir aqui.\n  * @param {string} sexo - Sexo. H para hombre, M para mujer.\n  * @param {string} estado - Estado, usando las abreviaturas oficiales.\n  * @param {array} fecha_nacimiento - Arreglo con [ día, mes, año ], cada uno como numero.\n  * @param {string} [homonimia] - Opcional. Valor usado para evitar repeticiones, es asignado por gobernación.\n  * Por default es 0 si la fecha de nacimiento es menor o igual a 1999, o A, si es igual o mayor a 2000.\n  */\n  function generaCurp(param) {\n    var inicial_nombre, vocal_apellido, posicion_1_4, posicion_14_16, curp, primera_letra_paterno, primera_letra_materno, nombres, nombre_a_usar;\n\n    if (!estadoValido(param.estado)) {\n      return false;\n    }\n\n    param.nombre = ajustaCompuesto(normalizaString(param.nombre.toUpperCase())).trim();\n    param.apellido_paterno = ajustaCompuesto(normalizaString(param.apellido_paterno.toUpperCase())).trim();\n\n    param.apellido_materno = param.apellido_materno || \"\";\n    param.apellido_materno = ajustaCompuesto(normalizaString(param.apellido_materno.toUpperCase())).trim();\n\n    inicial_nombre = extrarInicial(param.nombre);\n\n    vocal_apellido = param.apellido_paterno.trim().substring(1).replace(/[BCDFGHJKLMNÑPQRSTVWXYZ]/g, '').substring(0, 1);\n    vocal_apellido = (vocal_apellido === '') ? 'X' : vocal_apellido;\n\n    primera_letra_paterno = param.apellido_paterno.substring(0, 1);\n    primera_letra_paterno = primera_letra_paterno === 'Ñ' ? 'X' : primera_letra_paterno;\n\n    if (!param.apellido_materno || param.apellido_materno === \"\") {\n      primera_letra_materno = 'X';\n    } else {\n      primera_letra_materno = param.apellido_materno.substring(0, 1);\n      primera_letra_materno = primera_letra_materno === 'Ñ' ? 'X' : primera_letra_materno;\n    }\n\n    posicion_1_4 = [\n      primera_letra_paterno,\n      vocal_apellido,\n      primera_letra_materno,\n      inicial_nombre\n    ].join('');\n\n    posicion_1_4 = filtraInconvenientes(filtraCaracteres(posicion_1_4));\n\n    nombres = param.nombre.split(\" \").filter(function (palabra) {\n      return palabra !== \"\";\n    });\n    nombre_a_usar = comunes.indexOf(nombres[0]) > -1 ? nombres[1] : nombres[0];\n\n    posicion_14_16 = [\n      primerConsonante(param.apellido_paterno),\n      primerConsonante(param.apellido_materno),\n      primerConsonante(nombre_a_usar)\n    ].join('');\n\n    curp = [\n      posicion_1_4,\n      pad(param.fecha_nacimiento[2] - 1900),\n      pad(param.fecha_nacimiento[1]),\n      pad(param.fecha_nacimiento[0]),\n      param.sexo.toUpperCase(),\n      param.estado.toUpperCase(),\n      posicion_14_16,\n      param.homonimia || (param.fecha_nacimiento[2] > 1999 ? 'A' : 0)\n    ].join('');\n\n    return agregaDigitoVerificador(curp);\n  }\n\n  // Si es un navegador, exporta 'generaCurp' a una variable global.\n  // Si es node.js, exporta esa función en module.exports\n  if (global.hasOwnProperty('window') && global.window === global) {\n    global.generaCurp = generaCurp;\n  } else {\n    module.exports = generaCurp;\n  }\n\n}(this));\n\n"};
jalangiLabel60:
    while (true) {
        try {
            J$.Se(6593, '/home/blake/ExpoSE/Targets/curp.js/node_modules/curp.js/curp_jalangi_.js', '/home/blake/ExpoSE/Targets/curp.js/node_modules/curp.js/curp.js');
            J$.N(6601, '__secret__S$', __secret__S$, 0);
            J$.N(6609, '__secret__traits__', __secret__traits__, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(6585, J$.F(6577, J$.T(6561, function (global) {
                jalangiLabel59:
                    while (true) {
                        try {
                            J$.Fe(6361, arguments.callee, this, arguments);
                            function filtraInconvenientes(str) {
                                jalangiLabel43:
                                    while (true) {
                                        try {
                                            J$.Fe(849, arguments.callee, this, arguments);
                                            arguments = J$.N(857, 'arguments', arguments, 4);
                                            str = J$.N(865, 'str', str, 4);
                                            J$.N(873, 'inconvenientes', inconvenientes, 0);
                                            var inconvenientes = J$.X1(737, J$.W(729, 'inconvenientes', J$.T(721, [
                                                J$.T(97, 'BACA', 21, false),
                                                J$.T(105, 'LOCO', 21, false),
                                                J$.T(113, 'BUEI', 21, false),
                                                J$.T(121, 'BUEY', 21, false),
                                                J$.T(129, 'MAME', 21, false),
                                                J$.T(137, 'CACA', 21, false),
                                                J$.T(145, 'MAMO', 21, false),
                                                J$.T(153, 'CACO', 21, false),
                                                J$.T(161, 'MEAR', 21, false),
                                                J$.T(169, 'CAGA', 21, false),
                                                J$.T(177, 'MEAS', 21, false),
                                                J$.T(185, 'CAGO', 21, false),
                                                J$.T(193, 'MEON', 21, false),
                                                J$.T(201, 'CAKA', 21, false),
                                                J$.T(209, 'MIAR', 21, false),
                                                J$.T(217, 'CAKO', 21, false),
                                                J$.T(225, 'MION', 21, false),
                                                J$.T(233, 'COGE', 21, false),
                                                J$.T(241, 'MOCO', 21, false),
                                                J$.T(249, 'COGI', 21, false),
                                                J$.T(257, 'MOKO', 21, false),
                                                J$.T(265, 'COJA', 21, false),
                                                J$.T(273, 'MULA', 21, false),
                                                J$.T(281, 'COJE', 21, false),
                                                J$.T(289, 'MULO', 21, false),
                                                J$.T(297, 'COJI', 21, false),
                                                J$.T(305, 'NACA', 21, false),
                                                J$.T(313, 'COJO', 21, false),
                                                J$.T(321, 'NACO', 21, false),
                                                J$.T(329, 'COLA', 21, false),
                                                J$.T(337, 'PEDA', 21, false),
                                                J$.T(345, 'CULO', 21, false),
                                                J$.T(353, 'PEDO', 21, false),
                                                J$.T(361, 'FALO', 21, false),
                                                J$.T(369, 'PENE', 21, false),
                                                J$.T(377, 'FETO', 21, false),
                                                J$.T(385, 'PIPI', 21, false),
                                                J$.T(393, 'GETA', 21, false),
                                                J$.T(401, 'PITO', 21, false),
                                                J$.T(409, 'GUEI', 21, false),
                                                J$.T(417, 'POPO', 21, false),
                                                J$.T(425, 'GUEY', 21, false),
                                                J$.T(433, 'PUTA', 21, false),
                                                J$.T(441, 'JETA', 21, false),
                                                J$.T(449, 'PUTO', 21, false),
                                                J$.T(457, 'JOTO', 21, false),
                                                J$.T(465, 'QULO', 21, false),
                                                J$.T(473, 'KACA', 21, false),
                                                J$.T(481, 'RATA', 21, false),
                                                J$.T(489, 'KACO', 21, false),
                                                J$.T(497, 'ROBA', 21, false),
                                                J$.T(505, 'KAGA', 21, false),
                                                J$.T(513, 'ROBE', 21, false),
                                                J$.T(521, 'KAGO', 21, false),
                                                J$.T(529, 'ROBO', 21, false),
                                                J$.T(537, 'KAKA', 21, false),
                                                J$.T(545, 'RUIN', 21, false),
                                                J$.T(553, 'KAKO', 21, false),
                                                J$.T(561, 'SENO', 21, false),
                                                J$.T(569, 'KOGE', 21, false),
                                                J$.T(577, 'TETA', 21, false),
                                                J$.T(585, 'KOGI', 21, false),
                                                J$.T(593, 'VACA', 21, false),
                                                J$.T(601, 'KOJA', 21, false),
                                                J$.T(609, 'VAGA', 21, false),
                                                J$.T(617, 'KOJE', 21, false),
                                                J$.T(625, 'VAGO', 21, false),
                                                J$.T(633, 'KOJI', 21, false),
                                                J$.T(641, 'VAKA', 21, false),
                                                J$.T(649, 'KOJO', 21, false),
                                                J$.T(657, 'VUEI', 21, false),
                                                J$.T(665, 'KOLA', 21, false),
                                                J$.T(673, 'VUEY', 21, false),
                                                J$.T(681, 'KULO', 21, false),
                                                J$.T(689, 'WUEI', 21, false),
                                                J$.T(697, 'LILO', 21, false),
                                                J$.T(705, 'WUEY', 21, false),
                                                J$.T(713, 'LOCA', 21, false)
                                            ], 10, false), inconvenientes, 1));
                                            if (J$.X1(6617, J$.C(8, J$.B(18, '>', J$.M(761, J$.R(745, 'inconvenientes', inconvenientes, 0), 'indexOf', 0)(J$.R(753, 'str', str, 0)), J$.U(10, '-', J$.T(769, 1, 22, false)), 0)))) {
                                                J$.X1(817, str = J$.W(809, 'str', J$.M(801, J$.R(777, 'str', str, 0), 'replace', 0)(J$.T(785, /^(\w)\w/, 14, false), J$.T(793, '$1X', 21, false)), str, 0));
                                            }
                                            return J$.X1(841, J$.Rt(833, J$.R(825, 'str', str, 0)));
                                        } catch (J$e) {
                                            J$.Ex(6625, J$e);
                                        } finally {
                                            if (J$.Fr(6633))
                                                continue jalangiLabel43;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function ajustaCompuesto(str) {
                                jalangiLabel45:
                                    while (true) {
                                        try {
                                            J$.Fe(1209, arguments.callee, this, arguments);
                                            arguments = J$.N(1217, 'arguments', arguments, 4);
                                            str = J$.N(1225, 'str', str, 4);
                                            J$.N(1233, 'compuestos', compuestos, 0);
                                            var compuestos = J$.X1(1049, J$.W(1041, 'compuestos', J$.T(1033, [
                                                J$.T(881, /\bDA\b/, 14, false),
                                                J$.T(889, /\bDAS\b/, 14, false),
                                                J$.T(897, /\bDE\b/, 14, false),
                                                J$.T(905, /\bDEL\b/, 14, false),
                                                J$.T(913, /\bDER\b/, 14, false),
                                                J$.T(921, /\bDI\b/, 14, false),
                                                J$.T(929, /\bDIE\b/, 14, false),
                                                J$.T(937, /\bDD\b/, 14, false),
                                                J$.T(945, /\bEL\b/, 14, false),
                                                J$.T(953, /\bLA\b/, 14, false),
                                                J$.T(961, /\bLOS\b/, 14, false),
                                                J$.T(969, /\bLAS\b/, 14, false),
                                                J$.T(977, /\bLE\b/, 14, false),
                                                J$.T(985, /\bLES\b/, 14, false),
                                                J$.T(993, /\bMAC\b/, 14, false),
                                                J$.T(1001, /\bMC\b/, 14, false),
                                                J$.T(1009, /\bVAN\b/, 14, false),
                                                J$.T(1017, /\bVON\b/, 14, false),
                                                J$.T(1025, /\bY\b/, 14, false)
                                            ], 10, false), compuestos, 1));
                                            J$.X1(1177, J$.M(1169, J$.R(1057, 'compuestos', compuestos, 0), 'forEach', 0)(J$.T(1161, function (compuesto) {
                                                jalangiLabel44:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1137, arguments.callee, this, arguments);
                                                            arguments = J$.N(1145, 'arguments', arguments, 4);
                                                            compuesto = J$.N(1153, 'compuesto', compuesto, 4);
                                                            if (J$.X1(6641, J$.C(16, J$.M(1081, J$.R(1065, 'compuesto', compuesto, 0), 'test', 0)(J$.R(1073, 'str', str, 0))))) {
                                                                J$.X1(1129, str = J$.W(1121, 'str', J$.M(1113, J$.R(1089, 'str', str, 0), 'replace', 0)(J$.R(1097, 'compuesto', compuesto, 0), J$.T(1105, '', 21, false)), str, 0));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(6649, J$e);
                                                        } finally {
                                                            if (J$.Fr(6657))
                                                                continue jalangiLabel44;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 1137)));
                                            return J$.X1(1201, J$.Rt(1193, J$.R(1185, 'str', str, 0)));
                                        } catch (J$e) {
                                            J$.Ex(6665, J$e);
                                        } finally {
                                            if (J$.Fr(6673))
                                                continue jalangiLabel45;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function zeropad(ancho, num) {
                                jalangiLabel47:
                                    while (true) {
                                        try {
                                            J$.Fe(1473, arguments.callee, this, arguments);
                                            arguments = J$.N(1481, 'arguments', arguments, 4);
                                            ancho = J$.N(1489, 'ancho', ancho, 4);
                                            num = J$.N(1497, 'num', num, 4);
                                            J$.N(1505, 'pad', pad, 0);
                                            var pad = J$.X1(1377, J$.W(1369, 'pad', J$.M(1361, J$.M(1345, J$.M(1289, J$.R(1241, 'Array', Array, 2), 'apply', 0)(J$.T(1249, 0, 22, false), J$.M(1281, J$.R(1257, 'Array', Array, 2), 'call', 0)(J$.T(1265, 0, 22, false), J$.R(1273, 'ancho', ancho, 0))), 'map', 0)(J$.T(1337, function () {
                                                jalangiLabel46:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1321, arguments.callee, this, arguments);
                                                            arguments = J$.N(1329, 'arguments', arguments, 4);
                                                            return J$.X1(1313, J$.Rt(1305, J$.T(1297, 0, 22, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(6681, J$e);
                                                        } finally {
                                                            if (J$.Fr(6689))
                                                                continue jalangiLabel46;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 1321)), 'join', 0)(J$.T(1353, '', 21, false)), pad, 1));
                                            return J$.X1(1465, J$.Rt(1457, J$.M(1449, J$.B(26, '+', J$.R(1385, 'pad', pad, 0), J$.R(1393, 'num', num, 0), 0), 'replace', 0)(J$.F(1433, J$.R(1401, 'RegExp', RegExp, 2), 1)(J$.B(42, '+', J$.B(34, '+', J$.T(1409, '^.*([0-9]{', 21, false), J$.R(1417, 'ancho', ancho, 0), 0), J$.T(1425, '})$', 21, false), 0)), J$.T(1441, '$1', 21, false))));
                                        } catch (J$e) {
                                            J$.Ex(6697, J$e);
                                        } finally {
                                            if (J$.Fr(6705))
                                                continue jalangiLabel47;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function primerConsonante(str) {
                                jalangiLabel48:
                                    while (true) {
                                        try {
                                            J$.Fe(1793, arguments.callee, this, arguments);
                                            arguments = J$.N(1801, 'arguments', arguments, 4);
                                            str = J$.N(1809, 'str', str, 4);
                                            J$.X1(1721, str = J$.W(1713, 'str', J$.M(1705, J$.M(1681, J$.M(1657, J$.M(1641, J$.R(1633, 'str', str, 0), 'trim', 0)(), 'substring', 0)(J$.T(1649, 1, 22, false)), 'replace', 0)(J$.T(1665, /[AEIOU]/gi, 14, false), J$.T(1673, '', 21, false)), 'substring', 0)(J$.T(1689, 0, 22, false), J$.T(1697, 1, 22, false)), str, 0));
                                            return J$.X1(1785, J$.Rt(1777, J$.X1(6713, J$.C(32, J$.C(24, J$.B(50, '===', J$.R(1729, 'str', str, 0), J$.T(1737, '', 21, false), 0)) ? J$._() : J$.B(58, '===', J$.R(1745, 'str', str, 0), J$.T(1753, 'Ñ', 21, false), 0))) ? J$.T(1761, 'X', 21, false) : J$.R(1769, 'str', str, 0)));
                                        } catch (J$e) {
                                            J$.Ex(6721, J$e);
                                        } finally {
                                            if (J$.Fr(6729))
                                                continue jalangiLabel48;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function filtraCaracteres(str) {
                                jalangiLabel49:
                                    while (true) {
                                        try {
                                            J$.Fe(1873, arguments.callee, this, arguments);
                                            arguments = J$.N(1881, 'arguments', arguments, 4);
                                            str = J$.N(1889, 'str', str, 4);
                                            return J$.X1(1865, J$.Rt(1857, J$.M(1849, J$.M(1825, J$.R(1817, 'str', str, 0), 'toUpperCase', 0)(), 'replace', 0)(J$.T(1833, /[\d_\-\.\/\\,]/g, 14, false), J$.T(1841, 'X', 21, false))));
                                        } catch (J$e) {
                                            J$.Ex(6737, J$e);
                                        } finally {
                                            if (J$.Fr(6745))
                                                continue jalangiLabel49;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function estadoValido(str) {
                                jalangiLabel50:
                                    while (true) {
                                        try {
                                            J$.Fe(2241, arguments.callee, this, arguments);
                                            arguments = J$.N(2249, 'arguments', arguments, 4);
                                            str = J$.N(2257, 'str', str, 4);
                                            J$.N(2265, 'estado', estado, 0);
                                            var estado = J$.X1(2177, J$.W(2169, 'estado', J$.T(2161, [
                                                J$.T(1897, 'AS', 21, false),
                                                J$.T(1905, 'BC', 21, false),
                                                J$.T(1913, 'BS', 21, false),
                                                J$.T(1921, 'CC', 21, false),
                                                J$.T(1929, 'CS', 21, false),
                                                J$.T(1937, 'CH', 21, false),
                                                J$.T(1945, 'CL', 21, false),
                                                J$.T(1953, 'CM', 21, false),
                                                J$.T(1961, 'DF', 21, false),
                                                J$.T(1969, 'DG', 21, false),
                                                J$.T(1977, 'GT', 21, false),
                                                J$.T(1985, 'GR', 21, false),
                                                J$.T(1993, 'HG', 21, false),
                                                J$.T(2001, 'JC', 21, false),
                                                J$.T(2009, 'MC', 21, false),
                                                J$.T(2017, 'MN', 21, false),
                                                J$.T(2025, 'MS', 21, false),
                                                J$.T(2033, 'NT', 21, false),
                                                J$.T(2041, 'NL', 21, false),
                                                J$.T(2049, 'OC', 21, false),
                                                J$.T(2057, 'PL', 21, false),
                                                J$.T(2065, 'QT', 21, false),
                                                J$.T(2073, 'QR', 21, false),
                                                J$.T(2081, 'SP', 21, false),
                                                J$.T(2089, 'SL', 21, false),
                                                J$.T(2097, 'SR', 21, false),
                                                J$.T(2105, 'TC', 21, false),
                                                J$.T(2113, 'TS', 21, false),
                                                J$.T(2121, 'TL', 21, false),
                                                J$.T(2129, 'VZ', 21, false),
                                                J$.T(2137, 'YN', 21, false),
                                                J$.T(2145, 'ZS', 21, false),
                                                J$.T(2153, 'NE', 21, false)
                                            ], 10, false), estado, 1));
                                            return J$.X1(2233, J$.Rt(2225, J$.B(74, '>', J$.M(2209, J$.R(2185, 'estado', estado, 0), 'indexOf', 0)(J$.M(2201, J$.R(2193, 'str', str, 0), 'toUpperCase', 0)()), J$.U(66, '-', J$.T(2217, 1, 22, false)), 0)));
                                        } catch (J$e) {
                                            J$.Ex(6753, J$e);
                                        } finally {
                                            if (J$.Fr(6761))
                                                continue jalangiLabel50;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function normalizaString(str) {
                                jalangiLabel52:
                                    while (true) {
                                        try {
                                            J$.Fe(3281, arguments.callee, this, arguments);
                                            arguments = J$.N(3289, 'arguments', arguments, 4);
                                            str = J$.N(3297, 'str', str, 4);
                                            J$.N(3305, 'origen', origen, 0);
                                            J$.N(3313, 'destino', destino, 0);
                                            J$.N(3321, 'salida', salida, 0);
                                            var origen, destino, salida;
                                            J$.X1(2641, origen = J$.W(2633, 'origen', J$.T(2625, [
                                                J$.T(2273, 'Ã', 21, false),
                                                J$.T(2281, 'À', 21, false),
                                                J$.T(2289, 'Á', 21, false),
                                                J$.T(2297, 'Ä', 21, false),
                                                J$.T(2305, 'Â', 21, false),
                                                J$.T(2313, 'È', 21, false),
                                                J$.T(2321, 'É', 21, false),
                                                J$.T(2329, 'Ë', 21, false),
                                                J$.T(2337, 'Ê', 21, false),
                                                J$.T(2345, 'Ì', 21, false),
                                                J$.T(2353, 'Í', 21, false),
                                                J$.T(2361, 'Ï', 21, false),
                                                J$.T(2369, 'Î', 21, false),
                                                J$.T(2377, 'Ò', 21, false),
                                                J$.T(2385, 'Ó', 21, false),
                                                J$.T(2393, 'Ö', 21, false),
                                                J$.T(2401, 'Ô', 21, false),
                                                J$.T(2409, 'Ù', 21, false),
                                                J$.T(2417, 'Ú', 21, false),
                                                J$.T(2425, 'Ü', 21, false),
                                                J$.T(2433, 'Û', 21, false),
                                                J$.T(2441, 'ã', 21, false),
                                                J$.T(2449, 'à', 21, false),
                                                J$.T(2457, 'á', 21, false),
                                                J$.T(2465, 'ä', 21, false),
                                                J$.T(2473, 'â', 21, false),
                                                J$.T(2481, 'è', 21, false),
                                                J$.T(2489, 'é', 21, false),
                                                J$.T(2497, 'ë', 21, false),
                                                J$.T(2505, 'ê', 21, false),
                                                J$.T(2513, 'ì', 21, false),
                                                J$.T(2521, 'í', 21, false),
                                                J$.T(2529, 'ï', 21, false),
                                                J$.T(2537, 'î', 21, false),
                                                J$.T(2545, 'ò', 21, false),
                                                J$.T(2553, 'ó', 21, false),
                                                J$.T(2561, 'ö', 21, false),
                                                J$.T(2569, 'ô', 21, false),
                                                J$.T(2577, 'ù', 21, false),
                                                J$.T(2585, 'ú', 21, false),
                                                J$.T(2593, 'ü', 21, false),
                                                J$.T(2601, 'û', 21, false),
                                                J$.T(2609, 'Ç', 21, false),
                                                J$.T(2617, 'ç', 21, false)
                                            ], 10, false), origen, 0));
                                            J$.X1(3017, destino = J$.W(3009, 'destino', J$.T(3001, [
                                                J$.T(2649, 'A', 21, false),
                                                J$.T(2657, 'A', 21, false),
                                                J$.T(2665, 'A', 21, false),
                                                J$.T(2673, 'A', 21, false),
                                                J$.T(2681, 'A', 21, false),
                                                J$.T(2689, 'E', 21, false),
                                                J$.T(2697, 'E', 21, false),
                                                J$.T(2705, 'E', 21, false),
                                                J$.T(2713, 'E', 21, false),
                                                J$.T(2721, 'I', 21, false),
                                                J$.T(2729, 'I', 21, false),
                                                J$.T(2737, 'I', 21, false),
                                                J$.T(2745, 'I', 21, false),
                                                J$.T(2753, 'O', 21, false),
                                                J$.T(2761, 'O', 21, false),
                                                J$.T(2769, 'O', 21, false),
                                                J$.T(2777, 'O', 21, false),
                                                J$.T(2785, 'U', 21, false),
                                                J$.T(2793, 'U', 21, false),
                                                J$.T(2801, 'U', 21, false),
                                                J$.T(2809, 'U', 21, false),
                                                J$.T(2817, 'a', 21, false),
                                                J$.T(2825, 'a', 21, false),
                                                J$.T(2833, 'a', 21, false),
                                                J$.T(2841, 'a', 21, false),
                                                J$.T(2849, 'a', 21, false),
                                                J$.T(2857, 'e', 21, false),
                                                J$.T(2865, 'e', 21, false),
                                                J$.T(2873, 'e', 21, false),
                                                J$.T(2881, 'e', 21, false),
                                                J$.T(2889, 'i', 21, false),
                                                J$.T(2897, 'i', 21, false),
                                                J$.T(2905, 'i', 21, false),
                                                J$.T(2913, 'i', 21, false),
                                                J$.T(2921, 'o', 21, false),
                                                J$.T(2929, 'o', 21, false),
                                                J$.T(2937, 'o', 21, false),
                                                J$.T(2945, 'o', 21, false),
                                                J$.T(2953, 'u', 21, false),
                                                J$.T(2961, 'u', 21, false),
                                                J$.T(2969, 'u', 21, false),
                                                J$.T(2977, 'u', 21, false),
                                                J$.T(2985, 'c', 21, false),
                                                J$.T(2993, 'c', 21, false)
                                            ], 10, false), destino, 0));
                                            J$.X1(3057, str = J$.W(3049, 'str', J$.M(3041, J$.R(3025, 'str', str, 0), 'split', 0)(J$.T(3033, '', 21, false)), str, 0));
                                            J$.X1(3233, salida = J$.W(3225, 'salida', J$.M(3217, J$.R(3065, 'str', str, 0), 'map', 0)(J$.T(3209, function (char) {
                                                jalangiLabel51:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(3177, arguments.callee, this, arguments);
                                                            arguments = J$.N(3185, 'arguments', arguments, 4);
                                                            char = J$.N(3193, 'char', char, 4);
                                                            J$.N(3201, 'pos', pos, 0);
                                                            var pos = J$.X1(3105, J$.W(3097, 'pos', J$.M(3089, J$.R(3073, 'origen', origen, 0), 'indexOf', 0)(J$.R(3081, 'char', char, 0)), pos, 1));
                                                            return J$.X1(3169, J$.Rt(3161, J$.X1(6769, J$.C(40, J$.B(90, '>', J$.R(3113, 'pos', pos, 0), J$.U(82, '-', J$.T(3121, 1, 22, false)), 0))) ? J$.G(3145, J$.R(3129, 'destino', destino, 0), J$.R(3137, 'pos', pos, 0), 4) : J$.R(3153, 'char', char, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(6777, J$e);
                                                        } finally {
                                                            if (J$.Fr(6785))
                                                                continue jalangiLabel51;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 3177)), salida, 0));
                                            return J$.X1(3273, J$.Rt(3265, J$.M(3257, J$.R(3241, 'salida', salida, 0), 'join', 0)(J$.T(3249, '', 21, false))));
                                        } catch (J$e) {
                                            J$.Ex(6793, J$e);
                                        } finally {
                                            if (J$.Fr(6801))
                                                continue jalangiLabel52;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function agregaDigitoVerificador(curp_str) {
                                jalangiLabel55:
                                    while (true) {
                                        try {
                                            J$.Fe(4073, arguments.callee, this, arguments);
                                            arguments = J$.N(4081, 'arguments', arguments, 4);
                                            curp_str = J$.N(4089, 'curp_str', curp_str, 4);
                                            J$.N(4097, 'curp', curp, 0);
                                            J$.N(4105, 'caracteres', caracteres, 0);
                                            J$.N(4113, 'curpNumerico', curpNumerico, 0);
                                            J$.N(4121, 'suma', suma, 0);
                                            J$.N(4129, 'digito', digito, 0);
                                            var curp, caracteres, curpNumerico, suma, digito;
                                            J$.X1(3393, curp = J$.W(3385, 'curp', J$.M(3377, J$.M(3361, J$.M(3353, J$.R(3329, 'curp_str', curp_str, 0), 'substring', 0)(J$.T(3337, 0, 22, false), J$.T(3345, 17, 22, false)), 'toUpperCase', 0)(), 'split', 0)(J$.T(3369, '', 21, false)), curp, 0));
                                            J$.X1(3713, caracteres = J$.W(3705, 'caracteres', J$.T(3697, [
                                                J$.T(3401, '0', 21, false),
                                                J$.T(3409, '1', 21, false),
                                                J$.T(3417, '2', 21, false),
                                                J$.T(3425, '3', 21, false),
                                                J$.T(3433, '4', 21, false),
                                                J$.T(3441, '5', 21, false),
                                                J$.T(3449, '6', 21, false),
                                                J$.T(3457, '7', 21, false),
                                                J$.T(3465, '8', 21, false),
                                                J$.T(3473, '9', 21, false),
                                                J$.T(3481, 'A', 21, false),
                                                J$.T(3489, 'B', 21, false),
                                                J$.T(3497, 'C', 21, false),
                                                J$.T(3505, 'D', 21, false),
                                                J$.T(3513, 'E', 21, false),
                                                J$.T(3521, 'F', 21, false),
                                                J$.T(3529, 'G', 21, false),
                                                J$.T(3537, 'H', 21, false),
                                                J$.T(3545, 'I', 21, false),
                                                J$.T(3553, 'J', 21, false),
                                                J$.T(3561, 'K', 21, false),
                                                J$.T(3569, 'L', 21, false),
                                                J$.T(3577, 'M', 21, false),
                                                J$.T(3585, 'N', 21, false),
                                                J$.T(3593, 'Ñ', 21, false),
                                                J$.T(3601, 'O', 21, false),
                                                J$.T(3609, 'P', 21, false),
                                                J$.T(3617, 'Q', 21, false),
                                                J$.T(3625, 'R', 21, false),
                                                J$.T(3633, 'S', 21, false),
                                                J$.T(3641, 'T', 21, false),
                                                J$.T(3649, 'U', 21, false),
                                                J$.T(3657, 'V', 21, false),
                                                J$.T(3665, 'W', 21, false),
                                                J$.T(3673, 'X', 21, false),
                                                J$.T(3681, 'Y', 21, false),
                                                J$.T(3689, 'Z', 21, false)
                                            ], 10, false), caracteres, 0));
                                            J$.X1(3817, curpNumerico = J$.W(3809, 'curpNumerico', J$.M(3801, J$.R(3721, 'curp', curp, 0), 'map', 0)(J$.T(3793, function (caracter) {
                                                jalangiLabel53:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(3769, arguments.callee, this, arguments);
                                                            arguments = J$.N(3777, 'arguments', arguments, 4);
                                                            caracter = J$.N(3785, 'caracter', caracter, 4);
                                                            return J$.X1(3761, J$.Rt(3753, J$.M(3745, J$.R(3729, 'caracteres', caracteres, 0), 'indexOf', 0)(J$.R(3737, 'caracter', caracter, 0))));
                                                        } catch (J$e) {
                                                            J$.Ex(6809, J$e);
                                                        } finally {
                                                            if (J$.Fr(6817))
                                                                continue jalangiLabel53;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 3769)), curpNumerico, 0));
                                            J$.X1(3953, suma = J$.W(3945, 'suma', J$.M(3937, J$.R(3825, 'curpNumerico', curpNumerico, 0), 'reduce', 0)(J$.T(3921, function (prev, valor, indice) {
                                                jalangiLabel54:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(3881, arguments.callee, this, arguments);
                                                            arguments = J$.N(3889, 'arguments', arguments, 4);
                                                            prev = J$.N(3897, 'prev', prev, 4);
                                                            valor = J$.N(3905, 'valor', valor, 4);
                                                            indice = J$.N(3913, 'indice', indice, 4);
                                                            return J$.X1(3873, J$.Rt(3865, J$.B(114, '+', J$.R(3833, 'prev', prev, 0), J$.B(106, '*', J$.R(3841, 'valor', valor, 0), J$.B(98, '-', J$.T(3849, 18, 22, false), J$.R(3857, 'indice', indice, 0), 0), 0), 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(6825, J$e);
                                                        } finally {
                                                            if (J$.Fr(6833))
                                                                continue jalangiLabel54;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 3881), J$.T(3929, 0, 22, false)), suma, 0));
                                            J$.X1(3993, digito = J$.W(3985, 'digito', J$.B(130, '-', J$.T(3961, 10, 22, false), J$.B(122, '%', J$.R(3969, 'suma', suma, 0), J$.T(3977, 10, 22, false), 0), 0), digito, 0));
                                            if (J$.X1(6841, J$.C(48, J$.B(138, '===', J$.R(4001, 'digito', digito, 0), J$.T(4009, 10, 22, false), 0)))) {
                                                J$.X1(4033, digito = J$.W(4025, 'digito', J$.T(4017, 0, 22, false), digito, 0));
                                            }
                                            return J$.X1(4065, J$.Rt(4057, J$.B(146, '+', J$.R(4041, 'curp_str', curp_str, 0), J$.R(4049, 'digito', digito, 0), 0)));
                                        } catch (J$e) {
                                            J$.Ex(6849, J$e);
                                        } finally {
                                            if (J$.Fr(6857))
                                                continue jalangiLabel55;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function extrarInicial(nombre) {
                                jalangiLabel56:
                                    while (true) {
                                        try {
                                            J$.Fe(4417, arguments.callee, this, arguments);
                                            arguments = J$.N(4425, 'arguments', arguments, 4);
                                            nombre = J$.N(4433, 'nombre', nombre, 4);
                                            J$.N(4441, 'nombres', nombres, 0);
                                            J$.N(4449, 'primerNombreEsComun', primerNombreEsComun, 0);
                                            var nombres, primerNombreEsComun;
                                            J$.X1(4185, nombres = J$.W(4177, 'nombres', J$.M(4169, J$.M(4153, J$.M(4145, J$.R(4137, 'nombre', nombre, 0), 'toUpperCase', 0)(), 'trim', 0)(), 'split', 0)(J$.T(4161, /\s+/, 14, false)), nombres, 0));
                                            J$.X1(4273, primerNombreEsComun = J$.W(4265, 'primerNombreEsComun', J$.C(56, J$.B(154, '>', J$.G(4201, J$.R(4193, 'nombres', nombres, 0), 'length', 0), J$.T(4209, 1, 22, false), 0)) ? J$.B(170, '>', J$.M(4249, J$.R(4217, 'comunes', comunes, 0), 'indexOf', 0)(J$.G(4241, J$.R(4225, 'nombres', nombres, 0), J$.T(4233, 0, 22, false), 4)), J$.U(162, '-', J$.T(4257, 1, 22, false)), 0) : J$._(), primerNombreEsComun, 0));
                                            if (J$.X1(6865, J$.C(64, J$.R(4281, 'primerNombreEsComun', primerNombreEsComun, 0)))) {
                                                return J$.X1(4345, J$.Rt(4337, J$.M(4329, J$.G(4305, J$.R(4289, 'nombres', nombres, 0), J$.T(4297, 1, 22, false), 4), 'substring', 0)(J$.T(4313, 0, 22, false), J$.T(4321, 1, 22, false))));
                                            }
                                            return J$.X1(4409, J$.Rt(4401, J$.M(4393, J$.G(4369, J$.R(4353, 'nombres', nombres, 0), J$.T(4361, 0, 22, false), 4), 'substring', 0)(J$.T(4377, 0, 22, false), J$.T(4385, 1, 22, false))));
                                        } catch (J$e) {
                                            J$.Ex(6873, J$e);
                                        } finally {
                                            if (J$.Fr(6881))
                                                continue jalangiLabel56;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function generaCurp(param) {
                                jalangiLabel58:
                                    while (true) {
                                        try {
                                            J$.Fe(6153, arguments.callee, this, arguments);
                                            arguments = J$.N(6161, 'arguments', arguments, 4);
                                            param = J$.N(6169, 'param', param, 4);
                                            J$.N(6177, 'inicial_nombre', inicial_nombre, 0);
                                            J$.N(6185, 'vocal_apellido', vocal_apellido, 0);
                                            J$.N(6193, 'posicion_1_4', posicion_1_4, 0);
                                            J$.N(6201, 'posicion_14_16', posicion_14_16, 0);
                                            J$.N(6209, 'curp', curp, 0);
                                            J$.N(6217, 'primera_letra_paterno', primera_letra_paterno, 0);
                                            J$.N(6225, 'primera_letra_materno', primera_letra_materno, 0);
                                            J$.N(6233, 'nombres', nombres, 0);
                                            J$.N(6241, 'nombre_a_usar', nombre_a_usar, 0);
                                            var inicial_nombre, vocal_apellido, posicion_1_4, posicion_14_16, curp, primera_letra_paterno, primera_letra_materno, nombres, nombre_a_usar;
                                            if (J$.X1(6889, J$.C(72, J$.U(178, '!', J$.F(4481, J$.R(4457, 'estadoValido', estadoValido, 0), 0)(J$.G(4473, J$.R(4465, 'param', param, 0), 'estado', 0)))))) {
                                                return J$.X1(4505, J$.Rt(4497, J$.T(4489, false, 23, false)));
                                            }
                                            J$.X1(4593, J$.P(4585, J$.R(4513, 'param', param, 0), 'nombre', J$.M(4577, J$.F(4569, J$.R(4521, 'ajustaCompuesto', ajustaCompuesto, 0), 0)(J$.F(4561, J$.R(4529, 'normalizaString', normalizaString, 0), 0)(J$.M(4553, J$.G(4545, J$.R(4537, 'param', param, 0), 'nombre', 0), 'toUpperCase', 0)())), 'trim', 0)(), 0));
                                            J$.X1(4681, J$.P(4673, J$.R(4601, 'param', param, 0), 'apellido_paterno', J$.M(4665, J$.F(4657, J$.R(4609, 'ajustaCompuesto', ajustaCompuesto, 0), 0)(J$.F(4649, J$.R(4617, 'normalizaString', normalizaString, 0), 0)(J$.M(4641, J$.G(4633, J$.R(4625, 'param', param, 0), 'apellido_paterno', 0), 'toUpperCase', 0)())), 'trim', 0)(), 0));
                                            J$.X1(4729, J$.P(4721, J$.R(4689, 'param', param, 0), 'apellido_materno', J$.C(80, J$.G(4705, J$.R(4697, 'param', param, 0), 'apellido_materno', 0)) ? J$._() : J$.T(4713, '', 21, false), 0));
                                            J$.X1(4817, J$.P(4809, J$.R(4737, 'param', param, 0), 'apellido_materno', J$.M(4801, J$.F(4793, J$.R(4745, 'ajustaCompuesto', ajustaCompuesto, 0), 0)(J$.F(4785, J$.R(4753, 'normalizaString', normalizaString, 0), 0)(J$.M(4777, J$.G(4769, J$.R(4761, 'param', param, 0), 'apellido_materno', 0), 'toUpperCase', 0)())), 'trim', 0)(), 0));
                                            J$.X1(4865, inicial_nombre = J$.W(4857, 'inicial_nombre', J$.F(4849, J$.R(4825, 'extrarInicial', extrarInicial, 0), 0)(J$.G(4841, J$.R(4833, 'param', param, 0), 'nombre', 0)), inicial_nombre, 0));
                                            J$.X1(4969, vocal_apellido = J$.W(4961, 'vocal_apellido', J$.M(4953, J$.M(4929, J$.M(4905, J$.M(4889, J$.G(4881, J$.R(4873, 'param', param, 0), 'apellido_paterno', 0), 'trim', 0)(), 'substring', 0)(J$.T(4897, 1, 22, false)), 'replace', 0)(J$.T(4913, /[BCDFGHJKLMNÑPQRSTVWXYZ]/g, 14, false), J$.T(4921, '', 21, false)), 'substring', 0)(J$.T(4937, 0, 22, false), J$.T(4945, 1, 22, false)), vocal_apellido, 0));
                                            J$.X1(5017, vocal_apellido = J$.W(5009, 'vocal_apellido', J$.X1(6897, J$.C(88, J$.B(186, '===', J$.R(4977, 'vocal_apellido', vocal_apellido, 0), J$.T(4985, '', 21, false), 0))) ? J$.T(4993, 'X', 21, false) : J$.R(5001, 'vocal_apellido', vocal_apellido, 0), vocal_apellido, 0));
                                            J$.X1(5073, primera_letra_paterno = J$.W(5065, 'primera_letra_paterno', J$.M(5057, J$.G(5033, J$.R(5025, 'param', param, 0), 'apellido_paterno', 0), 'substring', 0)(J$.T(5041, 0, 22, false), J$.T(5049, 1, 22, false)), primera_letra_paterno, 0));
                                            J$.X1(5121, primera_letra_paterno = J$.W(5113, 'primera_letra_paterno', J$.X1(6905, J$.C(96, J$.B(194, '===', J$.R(5081, 'primera_letra_paterno', primera_letra_paterno, 0), J$.T(5089, 'Ñ', 21, false), 0))) ? J$.T(5097, 'X', 21, false) : J$.R(5105, 'primera_letra_paterno', primera_letra_paterno, 0), primera_letra_paterno, 0));
                                            if (J$.X1(6921, J$.C(120, J$.C(104, J$.U(202, '!', J$.G(5137, J$.R(5129, 'param', param, 0), 'apellido_materno', 0))) ? J$._() : J$.B(210, '===', J$.G(5153, J$.R(5145, 'param', param, 0), 'apellido_materno', 0), J$.T(5161, '', 21, false), 0)))) {
                                                J$.X1(5185, primera_letra_materno = J$.W(5177, 'primera_letra_materno', J$.T(5169, 'X', 21, false), primera_letra_materno, 0));
                                            } else {
                                                J$.X1(5241, primera_letra_materno = J$.W(5233, 'primera_letra_materno', J$.M(5225, J$.G(5201, J$.R(5193, 'param', param, 0), 'apellido_materno', 0), 'substring', 0)(J$.T(5209, 0, 22, false), J$.T(5217, 1, 22, false)), primera_letra_materno, 0));
                                                J$.X1(5289, primera_letra_materno = J$.W(5281, 'primera_letra_materno', J$.X1(6913, J$.C(112, J$.B(218, '===', J$.R(5249, 'primera_letra_materno', primera_letra_materno, 0), J$.T(5257, 'Ñ', 21, false), 0))) ? J$.T(5265, 'X', 21, false) : J$.R(5273, 'primera_letra_materno', primera_letra_materno, 0), primera_letra_materno, 0));
                                            }
                                            J$.X1(5361, posicion_1_4 = J$.W(5353, 'posicion_1_4', J$.M(5345, J$.T(5329, [
                                                J$.R(5297, 'primera_letra_paterno', primera_letra_paterno, 0),
                                                J$.R(5305, 'vocal_apellido', vocal_apellido, 0),
                                                J$.R(5313, 'primera_letra_materno', primera_letra_materno, 0),
                                                J$.R(5321, 'inicial_nombre', inicial_nombre, 0)
                                            ], 10, false), 'join', 0)(J$.T(5337, '', 21, false)), posicion_1_4, 0));
                                            J$.X1(5417, posicion_1_4 = J$.W(5409, 'posicion_1_4', J$.F(5401, J$.R(5369, 'filtraInconvenientes', filtraInconvenientes, 0), 0)(J$.F(5393, J$.R(5377, 'filtraCaracteres', filtraCaracteres, 0), 0)(J$.R(5385, 'posicion_1_4', posicion_1_4, 0))), posicion_1_4, 0));
                                            J$.X1(5537, nombres = J$.W(5529, 'nombres', J$.M(5521, J$.M(5449, J$.G(5433, J$.R(5425, 'param', param, 0), 'nombre', 0), 'split', 0)(J$.T(5441, ' ', 21, false)), 'filter', 0)(J$.T(5513, function (palabra) {
                                                jalangiLabel57:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(5489, arguments.callee, this, arguments);
                                                            arguments = J$.N(5497, 'arguments', arguments, 4);
                                                            palabra = J$.N(5505, 'palabra', palabra, 4);
                                                            return J$.X1(5481, J$.Rt(5473, J$.B(226, '!==', J$.R(5457, 'palabra', palabra, 0), J$.T(5465, '', 21, false), 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(6929, J$e);
                                                        } finally {
                                                            if (J$.Fr(6937))
                                                                continue jalangiLabel57;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 5489)), nombres, 0));
                                            J$.X1(5649, nombre_a_usar = J$.W(5641, 'nombre_a_usar', J$.X1(6945, J$.C(128, J$.B(242, '>', J$.M(5577, J$.R(5545, 'comunes', comunes, 0), 'indexOf', 0)(J$.G(5569, J$.R(5553, 'nombres', nombres, 0), J$.T(5561, 0, 22, false), 4)), J$.U(234, '-', J$.T(5585, 1, 22, false)), 0))) ? J$.G(5609, J$.R(5593, 'nombres', nombres, 0), J$.T(5601, 1, 22, false), 4) : J$.G(5633, J$.R(5617, 'nombres', nombres, 0), J$.T(5625, 0, 22, false), 4), nombre_a_usar, 0));
                                            J$.X1(5777, posicion_14_16 = J$.W(5769, 'posicion_14_16', J$.M(5761, J$.T(5745, [
                                                J$.F(5681, J$.R(5657, 'primerConsonante', primerConsonante, 0), 0)(J$.G(5673, J$.R(5665, 'param', param, 0), 'apellido_paterno', 0)),
                                                J$.F(5713, J$.R(5689, 'primerConsonante', primerConsonante, 0), 0)(J$.G(5705, J$.R(5697, 'param', param, 0), 'apellido_materno', 0)),
                                                J$.F(5737, J$.R(5721, 'primerConsonante', primerConsonante, 0), 0)(J$.R(5729, 'nombre_a_usar', nombre_a_usar, 0))
                                            ], 10, false), 'join', 0)(J$.T(5753, '', 21, false)), posicion_14_16, 0));
                                            J$.X1(6105, curp = J$.W(6097, 'curp', J$.M(6089, J$.T(6073, [
                                                J$.R(5785, 'posicion_1_4', posicion_1_4, 0),
                                                J$.F(5841, J$.R(5793, 'pad', pad, 0), 0)(J$.B(250, '-', J$.G(5825, J$.G(5809, J$.R(5801, 'param', param, 0), 'fecha_nacimiento', 0), J$.T(5817, 2, 22, false), 4), J$.T(5833, 1900, 22, false), 0)),
                                                J$.F(5889, J$.R(5849, 'pad', pad, 0), 0)(J$.G(5881, J$.G(5865, J$.R(5857, 'param', param, 0), 'fecha_nacimiento', 0), J$.T(5873, 1, 22, false), 4)),
                                                J$.F(5937, J$.R(5897, 'pad', pad, 0), 0)(J$.G(5929, J$.G(5913, J$.R(5905, 'param', param, 0), 'fecha_nacimiento', 0), J$.T(5921, 0, 22, false), 4)),
                                                J$.M(5961, J$.G(5953, J$.R(5945, 'param', param, 0), 'sexo', 0), 'toUpperCase', 0)(),
                                                J$.M(5985, J$.G(5977, J$.R(5969, 'param', param, 0), 'estado', 0), 'toUpperCase', 0)(),
                                                J$.R(5993, 'posicion_14_16', posicion_14_16, 0),
                                                J$.C(144, J$.G(6009, J$.R(6001, 'param', param, 0), 'homonimia', 0)) ? J$._() : J$.X1(6953, J$.C(136, J$.B(258, '>', J$.G(6041, J$.G(6025, J$.R(6017, 'param', param, 0), 'fecha_nacimiento', 0), J$.T(6033, 2, 22, false), 4), J$.T(6049, 1999, 22, false), 0))) ? J$.T(6057, 'A', 21, false) : J$.T(6065, 0, 22, false)
                                            ], 10, false), 'join', 0)(J$.T(6081, '', 21, false)), curp, 0));
                                            return J$.X1(6145, J$.Rt(6137, J$.F(6129, J$.R(6113, 'agregaDigitoVerificador', agregaDigitoVerificador, 0), 0)(J$.R(6121, 'curp', curp, 0))));
                                        } catch (J$e) {
                                            J$.Ex(6961, J$e);
                                        } finally {
                                            if (J$.Fr(6969))
                                                continue jalangiLabel58;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(6369, 'arguments', arguments, 4);
                            global = J$.N(6377, 'global', global, 4);
                            filtraInconvenientes = J$.N(6393, 'filtraInconvenientes', J$.T(6385, filtraInconvenientes, 12, false, 849), 0);
                            ajustaCompuesto = J$.N(6409, 'ajustaCompuesto', J$.T(6401, ajustaCompuesto, 12, false, 1209), 0);
                            zeropad = J$.N(6425, 'zeropad', J$.T(6417, zeropad, 12, false, 1473), 0);
                            J$.N(6433, 'pad', pad, 0);
                            J$.N(6441, 'comunes', comunes, 0);
                            primerConsonante = J$.N(6457, 'primerConsonante', J$.T(6449, primerConsonante, 12, false, 1793), 0);
                            filtraCaracteres = J$.N(6473, 'filtraCaracteres', J$.T(6465, filtraCaracteres, 12, false, 1873), 0);
                            estadoValido = J$.N(6489, 'estadoValido', J$.T(6481, estadoValido, 12, false, 2241), 0);
                            normalizaString = J$.N(6505, 'normalizaString', J$.T(6497, normalizaString, 12, false, 3281), 0);
                            agregaDigitoVerificador = J$.N(6521, 'agregaDigitoVerificador', J$.T(6513, agregaDigitoVerificador, 12, false, 4073), 0);
                            extrarInicial = J$.N(6537, 'extrarInicial', J$.T(6529, extrarInicial, 12, false, 4417), 0);
                            generaCurp = J$.N(6553, 'generaCurp', J$.T(6545, generaCurp, 12, false, 6153), 0);
                            J$.X1(89, J$.T(81, 'use strict', 21, false));
                            var pad = J$.X1(1609, J$.W(1601, 'pad', J$.M(1537, J$.R(1513, 'zeropad', zeropad, 0), 'bind', 0)(J$.T(1521, null, 25, false), J$.T(1529, 2, 22, false)), pad, 1)), comunes = J$.X1(1625, J$.W(1617, 'comunes', J$.T(1593, [
                                    J$.T(1545, 'MARIA', 21, false),
                                    J$.T(1553, 'MA', 21, false),
                                    J$.T(1561, 'MA.', 21, false),
                                    J$.T(1569, 'JOSE', 21, false),
                                    J$.T(1577, 'J', 21, false),
                                    J$.T(1585, 'J.', 21, false)
                                ], 10, false), comunes, 1));
                            if (J$.X1(6977, J$.C(160, J$.C(152, J$.M(6265, J$.R(6249, 'global', global, 0), 'hasOwnProperty', 0)(J$.T(6257, 'window', 21, false))) ? J$.B(266, '===', J$.G(6281, J$.R(6273, 'global', global, 0), 'window', 0), J$.R(6289, 'global', global, 0), 0) : J$._()))) {
                                J$.X1(6321, J$.P(6313, J$.R(6297, 'global', global, 0), 'generaCurp', J$.R(6305, 'generaCurp', generaCurp, 0), 0));
                            } else {
                                J$.X1(6353, J$.P(6345, J$.R(6329, 'module', module, 2), 'exports', J$.R(6337, 'generaCurp', generaCurp, 0), 0));
                            }
                        } catch (J$e) {
                            J$.Ex(6985, J$e);
                        } finally {
                            if (J$.Fr(6993))
                                continue jalangiLabel59;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 6361), 0)(J$.R(6569, 'this', this, 0)));
        } catch (J$e) {
            J$.Ex(7001, J$e);
        } finally {
            if (J$.Sr(7009)) {
                J$.L();
                continue jalangiLabel60;
            } else {
                J$.L();
                break jalangiLabel60;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
