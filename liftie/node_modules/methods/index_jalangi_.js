J$.iids = {"8":[5,18,5,66],"9":[1,20,1,27],"16":[7,12,9,7],"17":[1,28,1,32],"25":[1,20,1,33],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,12,4,19],"105":[4,20,4,26],"113":[4,12,4,27],"121":[4,12,4,27],"129":[4,12,4,27],"137":[5,1,5,7],"145":[5,18,5,39],"153":[5,18,5,41],"161":[5,45,5,64],"169":[5,45,5,66],"177":[5,1,5,66],"185":[5,1,5,67],"193":[7,12,7,16],"201":[7,12,7,24],"209":[7,28,7,32],"217":[7,28,7,40],"225":[8,16,8,22],"233":[8,16,8,36],"235":[8,16,8,34],"241":[8,16,8,36],"249":[8,9,8,37],"257":[7,45,9,6],"265":[7,45,9,6],"273":[7,45,9,6],"281":[7,45,9,6],"289":[7,45,9,6],"297":[7,28,9,7],"299":[7,28,7,44],"305":[7,12,9,7],"313":[7,5,9,8],"321":[6,1,10,2],"329":[6,1,10,2],"337":[13,9,13,14],"345":[14,9,14,15],"353":[15,9,15,14],"361":[16,9,16,15],"369":[17,9,17,17],"377":[18,9,18,18],"385":[19,9,19,16],"393":[20,9,20,15],"401":[21,9,21,15],"409":[22,9,22,16],"417":[23,9,23,15],"425":[24,9,24,16],"433":[25,9,25,19],"441":[26,9,26,20],"449":[27,9,27,17],"457":[28,9,28,17],"465":[29,9,29,21],"473":[30,9,30,19],"481":[31,9,31,16],"489":[32,9,32,19],"497":[33,9,33,17],"505":[34,9,34,20],"513":[35,9,35,22],"521":[36,9,36,16],"529":[37,9,37,17],"537":[38,9,38,18],"545":[12,12,39,6],"553":[12,12,39,6],"561":[12,5,39,7],"569":[11,1,40,2],"577":[11,1,40,2],"585":[1,1,40,2],"593":[1,1,40,2],"601":[1,1,40,2],"609":[1,1,40,2],"617":[6,1,10,2],"625":[1,1,40,2],"633":[11,1,40,2],"641":[1,1,40,2],"649":[7,45,9,6],"657":[7,45,9,6],"665":[6,1,10,2],"673":[6,1,10,2],"681":[11,1,40,2],"689":[11,1,40,2],"697":[1,1,40,2],"705":[1,1,40,2],"nBranches":4,"originalCodeFileName":"/home/blake/ExpoSE/Targets/liftie/node_modules/methods/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/liftie/node_modules/methods/index_jalangi_.js","code":"/*!\n * methods\n * Copyright(c) 2013-2014 TJ Holowaychuk\n * Copyright(c) 2015-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar http = require('http');\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = getCurrentNodeMethods() || getBasicNodeMethods();\n\n/**\n * Get the current Node.js methods.\n * @private\n */\n\nfunction getCurrentNodeMethods() {\n  return http.METHODS && http.METHODS.map(function lowerCaseMethod(method) {\n    return method.toLowerCase();\n  });\n}\n\n/**\n * Get the \"basic\" Node.js methods, a snapshot from Node.js 0.10.\n * @private\n */\n\nfunction getBasicNodeMethods() {\n  return [\n    'get',\n    'post',\n    'put',\n    'head',\n    'delete',\n    'options',\n    'trace',\n    'copy',\n    'lock',\n    'mkcol',\n    'move',\n    'purge',\n    'propfind',\n    'proppatch',\n    'unlock',\n    'report',\n    'mkactivity',\n    'checkout',\n    'merge',\n    'm-search',\n    'notify',\n    'subscribe',\n    'unsubscribe',\n    'patch',\n    'search',\n    'connect'\n  ];\n}\n"};
jalangiLabel259:
    while (true) {
        try {
            J$.Se(585, '/home/blake/ExpoSE/Targets/liftie/node_modules/methods/index_jalangi_.js', '/home/blake/ExpoSE/Targets/liftie/node_modules/methods/index.js');
            function getCurrentNodeMethods() {
                jalangiLabel257:
                    while (true) {
                        try {
                            J$.Fe(321, arguments.callee, this, arguments);
                            arguments = J$.N(329, 'arguments', arguments, 4);
                            return J$.X1(313, J$.Rt(305, J$.C(16, J$.G(201, J$.R(193, 'http', http, 1), 'METHODS', 0)) ? J$.M(297, J$.G(217, J$.R(209, 'http', http, 1), 'METHODS', 0), 'map', 0)(J$.T(289, function lowerCaseMethod(method) {
                                jalangiLabel256:
                                    while (true) {
                                        try {
                                            J$.Fe(257, arguments.callee, this, arguments);
                                            arguments = J$.N(265, 'arguments', arguments, 4);
                                            lowerCaseMethod = J$.N(273, 'lowerCaseMethod', lowerCaseMethod, 0);
                                            method = J$.N(281, 'method', method, 4);
                                            return J$.X1(249, J$.Rt(241, J$.M(233, J$.R(225, 'method', method, 0), 'toLowerCase', 0)()));
                                        } catch (J$e) {
                                            J$.Ex(649, J$e);
                                        } finally {
                                            if (J$.Fr(657))
                                                continue jalangiLabel256;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 257)) : J$._()));
                        } catch (J$e) {
                            J$.Ex(665, J$e);
                        } finally {
                            if (J$.Fr(673))
                                continue jalangiLabel257;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getBasicNodeMethods() {
                jalangiLabel258:
                    while (true) {
                        try {
                            J$.Fe(569, arguments.callee, this, arguments);
                            arguments = J$.N(577, 'arguments', arguments, 4);
                            return J$.X1(561, J$.Rt(553, J$.T(545, [
                                J$.T(337, 'get', 21, false),
                                J$.T(345, 'post', 21, false),
                                J$.T(353, 'put', 21, false),
                                J$.T(361, 'head', 21, false),
                                J$.T(369, 'delete', 21, false),
                                J$.T(377, 'options', 21, false),
                                J$.T(385, 'trace', 21, false),
                                J$.T(393, 'copy', 21, false),
                                J$.T(401, 'lock', 21, false),
                                J$.T(409, 'mkcol', 21, false),
                                J$.T(417, 'move', 21, false),
                                J$.T(425, 'purge', 21, false),
                                J$.T(433, 'propfind', 21, false),
                                J$.T(441, 'proppatch', 21, false),
                                J$.T(449, 'unlock', 21, false),
                                J$.T(457, 'report', 21, false),
                                J$.T(465, 'mkactivity', 21, false),
                                J$.T(473, 'checkout', 21, false),
                                J$.T(481, 'merge', 21, false),
                                J$.T(489, 'm-search', 21, false),
                                J$.T(497, 'notify', 21, false),
                                J$.T(505, 'subscribe', 21, false),
                                J$.T(513, 'unsubscribe', 21, false),
                                J$.T(521, 'patch', 21, false),
                                J$.T(529, 'search', 21, false),
                                J$.T(537, 'connect', 21, false)
                            ], 10, false)));
                        } catch (J$e) {
                            J$.Ex(681, J$e);
                        } finally {
                            if (J$.Fr(689))
                                continue jalangiLabel258;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(593, '__secret__S$', __secret__S$, 0);
            J$.N(601, '__secret__traits__', __secret__traits__, 0);
            J$.N(609, 'http', http, 0);
            getCurrentNodeMethods = J$.N(625, 'getCurrentNodeMethods', J$.T(617, getCurrentNodeMethods, 12, false, 321), 0);
            getBasicNodeMethods = J$.N(641, 'getBasicNodeMethods', J$.T(633, getBasicNodeMethods, 12, false, 569), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var http = J$.X1(129, J$.W(121, 'http', J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'http', 21, false)), http, 3));
            J$.X1(185, J$.P(177, J$.R(137, 'module', module, 2), 'exports', J$.C(8, J$.F(153, J$.R(145, 'getCurrentNodeMethods', getCurrentNodeMethods, 1), 0)()) ? J$._() : J$.F(169, J$.R(161, 'getBasicNodeMethods', getBasicNodeMethods, 1), 0)(), 0));
        } catch (J$e) {
            J$.Ex(697, J$e);
        } finally {
            if (J$.Sr(705)) {
                J$.L();
                continue jalangiLabel259;
            } else {
                J$.L();
                break jalangiLabel259;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
