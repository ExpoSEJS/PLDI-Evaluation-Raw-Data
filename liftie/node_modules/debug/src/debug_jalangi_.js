J$.iids = {"8":[23,13,23,27],"9":[1,20,1,27],"10":[16,17,16,26],"16":[27,26,27,42],"17":[1,28,1,32],"18":[16,16,16,34],"24":[33,25,33,40],"25":[1,20,1,33],"26":[16,16,16,60],"32":[37,13,37,40],"33":[1,20,1,33],"34":[17,17,17,18],"40":[42,17,42,31],"41":[1,20,1,33],"42":[19,27,19,65],"48":[46,17,46,48],"49":[2,26,2,38],"50":[23,13,23,27],"56":[55,21,55,45],"57":[2,26,2,45],"58":[26,20,26,31],"64":[55,21,55,74],"65":[2,26,2,45],"66":[27,18,27,43],"72":[62,9,62,43],"73":[2,26,2,45],"74":[33,25,33,40],"80":[71,18,71,48],"81":[3,11,3,17],"82":[33,42,33,45],"88":[74,13,74,22],"89":[3,28,3,39],"96":[77,13,77,34],"97":[3,48,3,59],"98":[33,42,33,45],"104":[73,21,73,28],"105":[3,60,3,69],"106":[37,26,37,40],"112":[90,13,90,40],"113":[3,73,3,84],"114":[37,13,37,40],"120":[89,45,89,52],"121":[3,48,3,84],"122":[42,17,42,31],"128":[95,13,95,40],"129":[3,28,3,84],"130":[44,13,44,20],"136":[94,45,94,52],"137":[3,11,3,84],"144":[103,16,103,40],"145":[3,11,3,84],"146":[44,13,44,20],"152":[102,9,102,29],"153":[3,1,3,85],"154":[46,32,46,48],"161":[4,1,4,8],"162":[46,17,46,48],"169":[4,18,4,24],"170":[50,17,50,24],"177":[4,1,4,24],"185":[4,1,4,25],"186":[50,17,50,24],"193":[5,1,5,8],"194":[62,24,62,43],"201":[5,19,5,26],"202":[62,9,62,43],"209":[5,1,5,26],"210":[71,18,71,35],"217":[5,1,5,27],"218":[71,18,71,48],"225":[6,1,6,8],"226":[73,21,73,28],"233":[6,18,6,24],"234":[73,30,73,33],"241":[6,1,6,24],"249":[6,1,6,25],"250":[73,30,73,33],"257":[7,1,7,8],"258":[74,13,74,22],"265":[7,19,7,26],"266":[77,13,77,34],"273":[7,1,7,26],"274":[78,43,78,69],"281":[7,1,7,27],"282":[78,43,78,75],"289":[8,1,8,8],"290":[80,43,80,59],"297":[8,20,8,27],"298":[80,43,80,65],"305":[8,28,8,32],"306":[89,45,89,52],"313":[8,20,8,33],"314":[89,54,89,57],"321":[8,1,8,33],"329":[8,1,8,34],"330":[89,54,89,57],"337":[9,1,9,8],"338":[94,45,94,52],"345":[9,17,9,19],"346":[94,54,94,57],"353":[9,1,9,19],"361":[9,1,9,20],"362":[94,54,94,57],"369":[10,1,10,8],"370":[102,9,102,29],"377":[10,17,10,19],"385":[10,1,10,19],"393":[10,1,10,20],"401":[11,1,11,8],"409":[11,22,11,24],"417":[11,1,11,24],"425":[11,1,11,25],"433":[14,16,14,17],"441":[14,16,14,17],"449":[14,16,14,17],"457":[15,15,15,24],"465":[16,17,16,21],"473":[16,25,16,26],"481":[16,30,16,34],"489":[16,37,16,46],"497":[16,58,16,59],"505":[16,37,16,60],"507":[16,37,16,57],"513":[16,16,16,60],"521":[16,9,16,61],"529":[17,17,17,18],"537":[17,9,17,13],"545":[17,9,17,18],"553":[17,9,17,19],"561":[15,15,15,24],"569":[15,5,18,6],"577":[15,5,18,6],"585":[19,12,19,19],"593":[19,12,19,26],"601":[19,27,19,31],"609":[19,36,19,40],"617":[19,27,19,41],"619":[19,27,19,35],"625":[19,44,19,51],"633":[19,44,19,58],"641":[19,44,19,65],"649":[19,12,19,66],"657":[19,12,19,66],"665":[19,5,19,67],"673":[13,1,20,2],"681":[13,1,20,2],"689":[13,1,20,2],"697":[13,1,20,2],"705":[13,1,20,2],"713":[23,14,23,19],"721":[23,14,23,27],"729":[24,13,24,20],"737":[24,13,24,20],"745":[25,20,25,25],"753":[25,20,25,25],"761":[25,20,25,25],"769":[26,25,26,29],"777":[26,21,26,31],"785":[26,20,26,31],"793":[26,20,26,31],"801":[27,18,27,22],"809":[27,26,27,34],"817":[27,38,27,42],"825":[27,18,27,43],"833":[27,18,27,43],"841":[28,9,28,13],"849":[28,21,28,23],"857":[28,9,28,23],"865":[28,9,28,24],"873":[29,9,29,13],"881":[29,21,29,29],"889":[29,9,29,29],"897":[29,9,29,30],"905":[30,9,30,13],"913":[30,21,30,25],"921":[30,9,30,25],"929":[30,9,30,26],"937":[31,20,31,24],"945":[31,20,31,24],"953":[31,9,31,25],"961":[32,24,32,29],"969":[32,30,32,39],"977":[32,30,32,46],"985":[32,20,32,47],"993":[32,20,32,47],"1001":[32,20,32,47],"1009":[33,22,33,23],"1017":[33,22,33,23],"1025":[33,22,33,23],"1033":[33,25,33,26],"1041":[33,29,33,33],"1049":[33,29,33,40],"1065":[33,42,33,43],"1073":[33,42,33,45],"1089":[34,13,34,17],"1097":[34,18,34,19],"1105":[34,23,34,32],"1113":[34,33,34,34],"1121":[34,23,34,35],"1129":[34,13,34,35],"1137":[34,13,34,36],"1145":[36,9,36,13],"1153":[36,14,36,15],"1161":[36,19,36,26],"1169":[36,34,36,38],"1177":[36,39,36,40],"1185":[36,34,36,41],"1193":[36,19,36,42],"1195":[36,19,36,33],"1201":[36,9,36,42],"1209":[36,9,36,43],"1217":[37,13,37,21],"1225":[37,33,37,37],"1233":[37,38,37,39],"1241":[37,33,37,40],"1249":[38,13,38,17],"1257":[38,26,38,30],"1265":[38,13,38,31],"1267":[38,13,38,25],"1273":[38,13,38,32],"1281":[40,21,40,22],"1289":[40,21,40,22],"1297":[40,21,40,22],"1305":[41,9,41,13],"1313":[41,14,41,15],"1321":[41,19,41,23],"1329":[41,24,41,25],"1337":[41,19,41,26],"1345":[41,35,41,50],"1353":[42,17,42,22],"1361":[42,27,42,31],"1369":[43,24,43,29],"1377":[43,24,43,29],"1385":[43,17,43,30],"1401":[44,13,44,18],"1409":[44,13,44,20],"1425":[44,13,44,21],"1433":[45,29,45,36],"1441":[45,29,45,47],"1449":[45,48,45,54],"1457":[45,29,45,55],"1465":[45,29,45,55],"1473":[45,29,45,55],"1481":[46,17,46,27],"1489":[46,39,46,48],"1497":[47,27,47,31],"1505":[47,32,47,37],"1513":[47,27,47,38],"1521":[47,27,47,38],"1529":[47,27,47,38],"1537":[48,25,48,34],"1545":[48,40,48,44],"1553":[48,46,48,49],"1561":[48,25,48,50],"1563":[48,25,48,39],"1569":[48,25,48,50],"1577":[48,17,48,51],"1585":[49,17,49,21],"1593":[49,29,49,34],"1601":[49,36,49,37],"1609":[49,17,49,38],"1611":[49,17,49,28],"1617":[49,17,49,39],"1633":[50,17,50,22],"1641":[50,17,50,24],"1657":[50,17,50,25],"1665":[52,20,52,25],"1673":[52,20,52,25],"1681":[52,13,52,26],"1689":[41,52,53,10],"1697":[41,52,53,10],"1705":[41,52,53,10],"1713":[41,52,53,10],"1721":[41,52,53,10],"1729":[41,52,53,10],"1737":[41,52,53,10],"1745":[41,19,53,11],"1747":[41,19,41,34],"1753":[41,9,53,11],"1761":[41,9,53,12],"1769":[54,9,54,16],"1777":[54,9,54,27],"1785":[54,33,54,37],"1793":[54,39,54,43],"1801":[54,9,54,44],"1803":[54,9,54,32],"1809":[54,9,54,45],"1817":[55,21,55,26],"1825":[55,21,55,30],"1833":[55,34,55,41],"1841":[55,34,55,45],"1849":[55,49,55,56],"1857":[55,49,55,60],"1865":[55,66,55,73],"1873":[55,49,55,74],"1875":[55,49,55,65],"1881":[55,21,55,74],"1889":[55,21,55,74],"1897":[56,9,56,14],"1905":[56,21,56,25],"1913":[56,27,56,31],"1921":[56,9,56,32],"1923":[56,9,56,20],"1929":[56,9,56,33],"1937":[22,5,57,6],"1945":[22,5,57,6],"1953":[22,5,57,6],"1961":[22,5,57,6],"1969":[22,5,57,6],"1977":[22,5,57,6],"1985":[22,5,57,6],"1993":[22,5,57,6],"2001":[22,5,57,6],"2009":[58,5,58,10],"2017":[58,23,58,32],"2025":[58,5,58,32],"2033":[58,5,58,33],"2041":[59,5,59,10],"2049":[59,21,59,28],"2057":[59,37,59,46],"2065":[59,21,59,47],"2067":[59,21,59,36],"2073":[59,5,59,47],"2081":[59,5,59,48],"2089":[60,5,60,10],"2097":[60,23,60,30],"2105":[60,23,60,42],"2107":[60,23,60,40],"2113":[60,5,60,42],"2121":[60,5,60,43],"2129":[61,5,61,10],"2137":[61,19,61,30],"2145":[61,31,61,40],"2153":[61,19,61,41],"2161":[61,5,61,41],"2169":[61,5,61,42],"2177":[62,9,62,19],"2185":[62,31,62,38],"2193":[62,31,62,43],"2201":[63,9,63,16],"2209":[63,22,63,27],"2217":[63,9,63,28],"2219":[63,9,63,21],"2225":[63,9,63,29],"2233":[65,12,65,17],"2241":[65,12,65,17],"2249":[65,5,65,18],"2257":[21,1,66,2],"2265":[21,1,66,2],"2273":[21,1,66,2],"2281":[22,5,57,6],"2289":[21,1,66,2],"2297":[68,5,68,12],"2305":[68,18,68,28],"2313":[68,5,68,29],"2315":[68,5,68,17],"2321":[68,5,68,30],"2329":[69,5,69,12],"2337":[69,21,69,23],"2345":[69,5,69,23],"2353":[69,5,69,24],"2361":[70,5,70,12],"2369":[70,21,70,23],"2377":[70,5,70,23],"2385":[70,5,70,24],"2393":[71,25,71,35],"2401":[71,40,71,48],"2409":[71,51,71,61],"2417":[71,64,71,66],"2425":[71,74,71,82],"2433":[71,17,71,83],"2435":[71,17,71,73],"2441":[71,17,71,83],"2449":[71,17,71,83],"2457":[72,15,72,20],"2465":[72,15,72,27],"2473":[72,15,72,27],"2481":[72,15,72,27],"2489":[73,18,73,19],"2497":[73,18,73,19],"2505":[73,18,73,19],"2513":[73,21,73,22],"2521":[73,25,73,28],"2537":[73,30,73,31],"2545":[73,30,73,33],"2561":[74,14,74,19],"2569":[74,20,74,21],"2577":[74,14,74,22],"2585":[76,22,76,27],"2593":[76,28,76,29],"2601":[76,22,76,30],"2609":[76,39,76,44],"2617":[76,46,76,51],"2625":[76,22,76,52],"2627":[76,22,76,38],"2633":[76,22,76,52],"2641":[76,9,76,53],"2649":[77,13,77,23],"2657":[77,24,77,25],"2665":[77,13,77,26],"2673":[77,31,77,34],"2681":[78,13,78,20],"2689":[78,13,78,26],"2697":[78,36,78,42],"2705":[78,43,78,46],"2713":[78,49,78,59],"2721":[78,67,78,68],"2729":[78,49,78,69],"2731":[78,49,78,66],"2737":[78,72,78,75],"2745":[78,32,78,76],"2753":[78,13,78,77],"2755":[78,13,78,31],"2761":[78,13,78,78],"2769":[80,13,80,20],"2777":[80,13,80,26],"2785":[80,36,80,42],"2793":[80,43,80,46],"2801":[80,49,80,59],"2809":[80,62,80,65],"2817":[80,32,80,66],"2825":[80,13,80,67],"2827":[80,13,80,31],"2833":[80,13,80,68],"2841":[67,1,83,2],"2849":[67,1,83,2],"2857":[67,1,83,2],"2865":[67,1,83,2],"2873":[67,1,83,2],"2881":[67,1,83,2],"2889":[85,5,85,12],"2897":[85,20,85,22],"2905":[85,5,85,23],"2907":[85,5,85,19],"2913":[85,5,85,24],"2921":[84,1,86,2],"2929":[84,1,86,2],"2937":[89,14,89,15],"2945":[89,14,89,15],"2953":[89,23,89,30],"2961":[89,23,89,36],"2969":[89,23,89,43],"2977":[89,23,89,43],"2985":[89,10,89,15],"2993":[89,45,89,46],"3001":[89,49,89,52],"3017":[89,54,89,55],"3025":[89,54,89,57],"3041":[90,13,90,20],"3049":[90,13,90,26],"3057":[90,27,90,28],"3065":[90,13,90,29],"3073":[90,35,90,39],"3081":[90,13,90,40],"3083":[90,13,90,34],"3089":[91,20,91,25],"3097":[91,20,91,25],"3105":[91,13,91,26],"3113":[94,14,94,15],"3121":[94,14,94,15],"3129":[94,23,94,30],"3137":[94,23,94,36],"3145":[94,23,94,43],"3153":[94,23,94,43],"3161":[94,10,94,15],"3169":[94,45,94,46],"3177":[94,49,94,52],"3193":[94,54,94,55],"3201":[94,54,94,57],"3217":[95,13,95,20],"3225":[95,13,95,26],"3233":[95,27,95,28],"3241":[95,13,95,29],"3249":[95,35,95,39],"3257":[95,13,95,40],"3259":[95,13,95,34],"3265":[96,20,96,24],"3273":[96,20,96,24],"3281":[96,13,96,25],"3289":[99,12,99,17],"3297":[99,12,99,17],"3305":[99,5,99,18],"3313":[87,1,100,2],"3321":[87,1,100,2],"3329":[87,1,100,2],"3337":[87,1,100,2],"3345":[87,1,100,2],"3353":[102,9,102,12],"3361":[102,24,102,29],"3369":[103,16,103,19],"3377":[103,16,103,25],"3385":[103,29,103,32],"3393":[103,29,103,40],"3401":[103,16,103,40],"3409":[103,9,103,41],"3417":[104,12,104,15],"3425":[104,12,104,15],"3433":[104,5,104,16],"3441":[101,1,105,2],"3449":[101,1,105,2],"3457":[101,1,105,2],"3465":[1,1,105,2],"3473":[1,1,105,2],"3481":[1,1,105,2],"3489":[1,1,105,2],"3497":[13,1,20,2],"3505":[1,1,105,2],"3513":[21,1,66,2],"3521":[1,1,105,2],"3529":[67,1,83,2],"3537":[1,1,105,2],"3545":[84,1,86,2],"3553":[1,1,105,2],"3561":[87,1,100,2],"3569":[1,1,105,2],"3577":[101,1,105,2],"3585":[1,1,105,2],"3593":[13,1,20,2],"3601":[13,1,20,2],"3609":[23,9,24,20],"3617":[33,9,35,10],"3625":[33,9,35,10],"3633":[37,9,39,10],"3641":[42,13,43,30],"3649":[46,13,51,14],"3657":[41,52,53,10],"3665":[41,52,53,10],"3673":[22,5,57,6],"3681":[22,5,57,6],"3689":[62,5,64,6],"3697":[21,1,66,2],"3705":[21,1,66,2],"3713":[71,18,71,66],"3721":[74,9,75,22],"3729":[77,9,81,10],"3737":[73,5,82,6],"3745":[73,5,82,6],"3753":[67,1,83,2],"3761":[67,1,83,2],"3769":[84,1,86,2],"3777":[84,1,86,2],"3785":[90,9,92,10],"3793":[89,5,93,6],"3801":[89,5,93,6],"3809":[89,5,93,6],"3817":[95,9,97,10],"3825":[94,5,98,6],"3833":[94,5,98,6],"3841":[94,5,98,6],"3849":[87,1,100,2],"3857":[87,1,100,2],"3865":[102,5,103,41],"3873":[101,1,105,2],"3881":[101,1,105,2],"3889":[1,1,105,2],"3897":[1,1,105,2],"nBranches":38,"originalCodeFileName":"/home/blake/ExpoSE/Targets/liftie/node_modules/debug/src/debug.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/liftie/node_modules/debug/src/debug_jalangi_.js","code":"\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n"};
jalangiLabel163:
    while (true) {
        try {
            J$.Se(3465, '/home/blake/ExpoSE/Targets/liftie/node_modules/debug/src/debug_jalangi_.js', '/home/blake/ExpoSE/Targets/liftie/node_modules/debug/src/debug.js');
            function selectColor(namespace) {
                jalangiLabel155:
                    while (true) {
                        try {
                            J$.Fe(673, arguments.callee, this, arguments);
                            arguments = J$.N(681, 'arguments', arguments, 4);
                            namespace = J$.N(689, 'namespace', namespace, 4);
                            J$.N(697, 'hash', hash, 0);
                            J$.N(705, 'i', i, 0);
                            var hash = J$.X1(449, J$.W(441, 'hash', J$.T(433, 0, 22, false), hash, 1)), i;
                            for (J$._tm_p in J$.H(561, J$.R(457, 'namespace', namespace, 0))) {
                                J$.X1(577, i = J$.W(569, 'i', J$._tm_p, i, 0));
                                {
                                    {
                                        J$.X1(521, hash = J$.W(513, 'hash', J$.B(26, '+', J$.B(18, '-', J$.B(10, '<<', J$.R(465, 'hash', hash, 0), J$.T(473, 5, 22, false), 0), J$.R(481, 'hash', hash, 0), 0), J$.M(505, J$.R(489, 'namespace', namespace, 0), 'charCodeAt', 0)(J$.R(497, 'i', i, 0)), 0), hash, 0));
                                        J$.X1(553, hash = J$.W(545, 'hash', J$.B(34, '|', J$.R(537, 'hash', hash, 0), J$.T(529, 0, 22, false), 0), hash, 0));
                                    }
                                }
                            }
                            return J$.X1(665, J$.Rt(657, J$.G(649, J$.G(593, J$.R(585, 'exports', exports, 2), 'colors', 0), J$.B(42, '%', J$.M(617, J$.R(601, 'Math', Math, 2), 'abs', 0)(J$.R(609, 'hash', hash, 0)), J$.G(641, J$.G(633, J$.R(625, 'exports', exports, 2), 'colors', 0), 'length', 0), 0), 4)));
                        } catch (J$e) {
                            J$.Ex(3593, J$e);
                        } finally {
                            if (J$.Fr(3601))
                                continue jalangiLabel155;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createDebug(namespace) {
                jalangiLabel158:
                    while (true) {
                        try {
                            J$.Fe(2257, arguments.callee, this, arguments);
                            function debug() {
                                jalangiLabel157:
                                    while (true) {
                                        try {
                                            J$.Fe(1937, arguments.callee, this, arguments);
                                            arguments = J$.N(1945, 'arguments', arguments, 4);
                                            J$.N(1953, 'self', self, 0);
                                            J$.N(1961, 'curr', curr, 0);
                                            J$.N(1969, 'ms', ms, 0);
                                            J$.N(1977, 'args', args, 0);
                                            J$.N(1985, 'i', i, 0);
                                            J$.N(1993, 'index', index, 0);
                                            J$.N(2001, 'logFn', logFn, 0);
                                            if (J$.X1(3609, J$.C(8, J$.U(50, '!', J$.G(721, J$.R(713, 'debug', debug, 0), 'enabled', 0)))))
                                                return J$.X1(737, J$.Rt(729, undefined));
                                            var self = J$.X1(761, J$.W(753, 'self', J$.R(745, 'debug', debug, 0), self, 1));
                                            var curr = J$.X1(793, J$.W(785, 'curr', J$.U(58, '+', J$.F(777, J$.R(769, 'Date', Date, 2), 1)()), curr, 1));
                                            var ms = J$.X1(833, J$.W(825, 'ms', J$.B(66, '-', J$.R(801, 'curr', curr, 0), J$.C(16, J$.R(809, 'prevTime', prevTime, 1)) ? J$._() : J$.R(817, 'curr', curr, 0), 0), ms, 1));
                                            J$.X1(865, J$.P(857, J$.R(841, 'self', self, 0), 'diff', J$.R(849, 'ms', ms, 0), 0));
                                            J$.X1(897, J$.P(889, J$.R(873, 'self', self, 0), 'prev', J$.R(881, 'prevTime', prevTime, 1), 0));
                                            J$.X1(929, J$.P(921, J$.R(905, 'self', self, 0), 'curr', J$.R(913, 'curr', curr, 0), 0));
                                            J$.X1(953, prevTime = J$.W(945, 'prevTime', J$.R(937, 'curr', curr, 0), prevTime, 2));
                                            var args = J$.X1(1001, J$.W(993, 'args', J$.F(985, J$.R(961, 'Array', Array, 2), 1)(J$.G(977, J$.R(969, 'arguments', arguments, 2), 'length', 0)), args, 1));
                                            for (var i = J$.X1(1025, J$.W(1017, 'i', J$.T(1009, 0, 22, false), i, 1)); J$.X1(3617, J$.C(24, J$.B(74, '<', J$.R(1033, 'i', i, 0), J$.G(1049, J$.R(1041, 'args', args, 0), 'length', 0), 0))); J$.X1(3625, J$.B(98, '-', i = J$.W(1073, 'i', J$.B(90, '+', J$.U(82, '+', J$.R(1065, 'i', i, 0)), J$.T(1057, 1, 22, false), 0), i, 0), J$.T(1081, 1, 22, false), 0))) {
                                                J$.X1(1137, J$.P(1129, J$.R(1089, 'args', args, 0), J$.R(1097, 'i', i, 0), J$.G(1121, J$.R(1105, 'arguments', arguments, 2), J$.R(1113, 'i', i, 0), 4), 2));
                                            }
                                            J$.X1(1209, J$.P(1201, J$.R(1145, 'args', args, 0), J$.T(1153, 0, 22, false), J$.M(1193, J$.R(1161, 'exports', exports, 2), 'coerce', 0)(J$.G(1185, J$.R(1169, 'args', args, 0), J$.T(1177, 0, 22, false), 4)), 2));
                                            if (J$.X1(3633, J$.C(32, J$.B(114, '!==', J$.T(1217, 'string', 21, false), J$.U(106, 'typeof', J$.G(1241, J$.R(1225, 'args', args, 0), J$.T(1233, 0, 22, false), 4)), 0)))) {
                                                J$.X1(1273, J$.M(1265, J$.R(1249, 'args', args, 0), 'unshift', 0)(J$.T(1257, '%O', 21, false)));
                                            }
                                            var index = J$.X1(1297, J$.W(1289, 'index', J$.T(1281, 0, 22, false), index, 1));
                                            J$.X1(1761, J$.P(1753, J$.R(1305, 'args', args, 0), J$.T(1313, 0, 22, false), J$.M(1745, J$.G(1337, J$.R(1321, 'args', args, 0), J$.T(1329, 0, 22, false), 4), 'replace', 0)(J$.T(1345, /%([a-zA-Z%])/g, 14, false), J$.T(1737, function (match, format) {
                                                jalangiLabel156:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1689, arguments.callee, this, arguments);
                                                            arguments = J$.N(1697, 'arguments', arguments, 4);
                                                            match = J$.N(1705, 'match', match, 4);
                                                            format = J$.N(1713, 'format', format, 4);
                                                            J$.N(1721, 'formatter', formatter, 0);
                                                            J$.N(1729, 'val', val, 0);
                                                            if (J$.X1(3641, J$.C(40, J$.B(122, '===', J$.R(1353, 'match', match, 0), J$.T(1361, '%%', 21, false), 0))))
                                                                return J$.X1(1385, J$.Rt(1377, J$.R(1369, 'match', match, 0)));
                                                            J$.X1(1425, J$.B(146, '-', index = J$.W(1409, 'index', J$.B(138, '+', J$.U(130, '+', J$.R(1401, 'index', index, 0)), J$.T(1393, 1, 22, false), 0), index, 0), J$.T(1417, 1, 22, false), 0));
                                                            var formatter = J$.X1(1473, J$.W(1465, 'formatter', J$.G(1457, J$.G(1441, J$.R(1433, 'exports', exports, 2), 'formatters', 0), J$.R(1449, 'format', format, 0), 4), formatter, 1));
                                                            if (J$.X1(3649, J$.C(48, J$.B(162, '===', J$.T(1481, 'function', 21, false), J$.U(154, 'typeof', J$.R(1489, 'formatter', formatter, 0)), 0)))) {
                                                                var val = J$.X1(1529, J$.W(1521, 'val', J$.G(1513, J$.R(1497, 'args', args, 0), J$.R(1505, 'index', index, 0), 4), val, 1));
                                                                J$.X1(1577, match = J$.W(1569, 'match', J$.M(1561, J$.R(1537, 'formatter', formatter, 0), 'call', 0)(J$.R(1545, 'self', self, 0), J$.R(1553, 'val', val, 0)), match, 0));
                                                                J$.X1(1617, J$.M(1609, J$.R(1585, 'args', args, 0), 'splice', 0)(J$.R(1593, 'index', index, 0), J$.T(1601, 1, 22, false)));
                                                                J$.X1(1657, J$.B(186, '+', index = J$.W(1641, 'index', J$.B(178, '-', J$.U(170, '+', J$.R(1633, 'index', index, 0)), J$.T(1625, 1, 22, false), 0), index, 0), J$.T(1649, 1, 22, false), 0));
                                                            }
                                                            return J$.X1(1681, J$.Rt(1673, J$.R(1665, 'match', match, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(3657, J$e);
                                                        } finally {
                                                            if (J$.Fr(3665))
                                                                continue jalangiLabel156;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 1689)), 2));
                                            J$.X1(1809, J$.M(1801, J$.G(1777, J$.R(1769, 'exports', exports, 2), 'formatArgs', 0), 'call', 0)(J$.R(1785, 'self', self, 0), J$.R(1793, 'args', args, 0)));
                                            var logFn = J$.X1(1889, J$.W(1881, 'logFn', J$.C(64, J$.C(56, J$.G(1825, J$.R(1817, 'debug', debug, 0), 'log', 0)) ? J$._() : J$.G(1841, J$.R(1833, 'exports', exports, 2), 'log', 0)) ? J$._() : J$.M(1873, J$.G(1857, J$.R(1849, 'console', console, 2), 'log', 0), 'bind', 0)(J$.R(1865, 'console', console, 2)), logFn, 1));
                                            J$.X1(1929, J$.M(1921, J$.R(1897, 'logFn', logFn, 0), 'apply', 0)(J$.R(1905, 'self', self, 0), J$.R(1913, 'args', args, 0)));
                                        } catch (J$e) {
                                            J$.Ex(3673, J$e);
                                        } finally {
                                            if (J$.Fr(3681))
                                                continue jalangiLabel157;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(2265, 'arguments', arguments, 4);
                            namespace = J$.N(2273, 'namespace', namespace, 4);
                            debug = J$.N(2289, 'debug', J$.T(2281, debug, 12, false, 1937), 0);
                            J$.X1(2033, J$.P(2025, J$.R(2009, 'debug', debug, 0), 'namespace', J$.R(2017, 'namespace', namespace, 0), 0));
                            J$.X1(2081, J$.P(2073, J$.R(2041, 'debug', debug, 0), 'enabled', J$.M(2065, J$.R(2049, 'exports', exports, 2), 'enabled', 0)(J$.R(2057, 'namespace', namespace, 0)), 0));
                            J$.X1(2121, J$.P(2113, J$.R(2089, 'debug', debug, 0), 'useColors', J$.M(2105, J$.R(2097, 'exports', exports, 2), 'useColors', 0)(), 0));
                            J$.X1(2169, J$.P(2161, J$.R(2129, 'debug', debug, 0), 'color', J$.F(2153, J$.R(2137, 'selectColor', selectColor, 1), 0)(J$.R(2145, 'namespace', namespace, 0)), 0));
                            if (J$.X1(3689, J$.C(72, J$.B(202, '===', J$.T(2177, 'function', 21, false), J$.U(194, 'typeof', J$.G(2193, J$.R(2185, 'exports', exports, 2), 'init', 0)), 0)))) {
                                J$.X1(2225, J$.M(2217, J$.R(2201, 'exports', exports, 2), 'init', 0)(J$.R(2209, 'debug', debug, 0)));
                            }
                            return J$.X1(2249, J$.Rt(2241, J$.R(2233, 'debug', debug, 0)));
                        } catch (J$e) {
                            J$.Ex(3697, J$e);
                        } finally {
                            if (J$.Fr(3705))
                                continue jalangiLabel158;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function enable(namespaces) {
                jalangiLabel159:
                    while (true) {
                        try {
                            J$.Fe(2841, arguments.callee, this, arguments);
                            arguments = J$.N(2849, 'arguments', arguments, 4);
                            namespaces = J$.N(2857, 'namespaces', namespaces, 4);
                            J$.N(2865, 'split', split, 0);
                            J$.N(2873, 'len', len, 0);
                            J$.N(2881, 'i', i, 0);
                            J$.X1(2321, J$.M(2313, J$.R(2297, 'exports', exports, 2), 'save', 0)(J$.R(2305, 'namespaces', namespaces, 0)));
                            J$.X1(2353, J$.P(2345, J$.R(2329, 'exports', exports, 2), 'names', J$.T(2337, [], 10, false), 0));
                            J$.X1(2385, J$.P(2377, J$.R(2361, 'exports', exports, 2), 'skips', J$.T(2369, [], 10, false), 0));
                            var split = J$.X1(2449, J$.W(2441, 'split', J$.M(2433, J$.X1(3713, J$.C(80, J$.B(218, '===', J$.U(210, 'typeof', J$.R(2393, 'namespaces', namespaces, 0)), J$.T(2401, 'string', 21, false), 0))) ? J$.R(2409, 'namespaces', namespaces, 0) : J$.T(2417, '', 21, false), 'split', 0)(J$.T(2425, /[\s,]+/, 14, false)), split, 1));
                            var len = J$.X1(2481, J$.W(2473, 'len', J$.G(2465, J$.R(2457, 'split', split, 0), 'length', 0), len, 1));
                            for (var i = J$.X1(2505, J$.W(2497, 'i', J$.T(2489, 0, 22, false), i, 1)); J$.X1(3737, J$.C(104, J$.B(226, '<', J$.R(2513, 'i', i, 0), J$.R(2521, 'len', len, 0), 0))); J$.X1(3745, J$.B(250, '-', i = J$.W(2545, 'i', J$.B(242, '+', J$.U(234, '+', J$.R(2537, 'i', i, 0)), J$.T(2529, 1, 22, false), 0), i, 0), J$.T(2553, 1, 22, false), 0))) {
                                if (J$.X1(3721, J$.C(88, J$.U(258, '!', J$.G(2577, J$.R(2561, 'split', split, 0), J$.R(2569, 'i', i, 0), 4)))))
                                    continue;
                                J$.X1(2641, namespaces = J$.W(2633, 'namespaces', J$.M(2625, J$.G(2601, J$.R(2585, 'split', split, 0), J$.R(2593, 'i', i, 0), 4), 'replace', 0)(J$.T(2609, /\*/g, 14, false), J$.T(2617, '.*?', 21, false)), namespaces, 0));
                                if (J$.X1(3729, J$.C(96, J$.B(266, '===', J$.G(2665, J$.R(2649, 'namespaces', namespaces, 0), J$.T(2657, 0, 22, false), 4), J$.T(2673, '-', 21, false), 0)))) {
                                    J$.X1(2761, J$.M(2753, J$.G(2689, J$.R(2681, 'exports', exports, 2), 'skips', 0), 'push', 0)(J$.F(2745, J$.R(2697, 'RegExp', RegExp, 2), 1)(J$.B(282, '+', J$.B(274, '+', J$.T(2705, '^', 21, false), J$.M(2729, J$.R(2713, 'namespaces', namespaces, 0), 'substr', 0)(J$.T(2721, 1, 22, false)), 0), J$.T(2737, '$', 21, false), 0))));
                                } else {
                                    J$.X1(2833, J$.M(2825, J$.G(2777, J$.R(2769, 'exports', exports, 2), 'names', 0), 'push', 0)(J$.F(2817, J$.R(2785, 'RegExp', RegExp, 2), 1)(J$.B(298, '+', J$.B(290, '+', J$.T(2793, '^', 21, false), J$.R(2801, 'namespaces', namespaces, 0), 0), J$.T(2809, '$', 21, false), 0))));
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(3753, J$e);
                        } finally {
                            if (J$.Fr(3761))
                                continue jalangiLabel159;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function disable() {
                jalangiLabel160:
                    while (true) {
                        try {
                            J$.Fe(2921, arguments.callee, this, arguments);
                            arguments = J$.N(2929, 'arguments', arguments, 4);
                            J$.X1(2913, J$.M(2905, J$.R(2889, 'exports', exports, 2), 'enable', 0)(J$.T(2897, '', 21, false)));
                        } catch (J$e) {
                            J$.Ex(3769, J$e);
                        } finally {
                            if (J$.Fr(3777))
                                continue jalangiLabel160;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function enabled(name) {
                jalangiLabel161:
                    while (true) {
                        try {
                            J$.Fe(3313, arguments.callee, this, arguments);
                            arguments = J$.N(3321, 'arguments', arguments, 4);
                            name = J$.N(3329, 'name', name, 4);
                            J$.N(3337, 'i', i, 0);
                            J$.N(3345, 'len', len, 0);
                            var i, len;
                            for (J$.X1(3801, (J$.X1(2985, i = J$.W(2945, 'i', J$.T(2937, 0, 22, false), i, 0)), len = J$.W(2977, 'len', J$.G(2969, J$.G(2961, J$.R(2953, 'exports', exports, 2), 'skips', 0), 'length', 0), len, 0))); J$.X1(3793, J$.C(120, J$.B(306, '<', J$.R(2993, 'i', i, 0), J$.R(3001, 'len', len, 0), 0))); J$.X1(3809, J$.B(330, '-', i = J$.W(3025, 'i', J$.B(322, '+', J$.U(314, '+', J$.R(3017, 'i', i, 0)), J$.T(3009, 1, 22, false), 0), i, 0), J$.T(3033, 1, 22, false), 0))) {
                                if (J$.X1(3785, J$.C(112, J$.M(3081, J$.G(3065, J$.G(3049, J$.R(3041, 'exports', exports, 2), 'skips', 0), J$.R(3057, 'i', i, 0), 4), 'test', 0)(J$.R(3073, 'name', name, 0))))) {
                                    return J$.X1(3105, J$.Rt(3097, J$.T(3089, false, 23, false)));
                                }
                            }
                            for (J$.X1(3833, (J$.X1(3161, i = J$.W(3121, 'i', J$.T(3113, 0, 22, false), i, 0)), len = J$.W(3153, 'len', J$.G(3145, J$.G(3137, J$.R(3129, 'exports', exports, 2), 'names', 0), 'length', 0), len, 0))); J$.X1(3825, J$.C(136, J$.B(338, '<', J$.R(3169, 'i', i, 0), J$.R(3177, 'len', len, 0), 0))); J$.X1(3841, J$.B(362, '-', i = J$.W(3201, 'i', J$.B(354, '+', J$.U(346, '+', J$.R(3193, 'i', i, 0)), J$.T(3185, 1, 22, false), 0), i, 0), J$.T(3209, 1, 22, false), 0))) {
                                if (J$.X1(3817, J$.C(128, J$.M(3257, J$.G(3241, J$.G(3225, J$.R(3217, 'exports', exports, 2), 'names', 0), J$.R(3233, 'i', i, 0), 4), 'test', 0)(J$.R(3249, 'name', name, 0))))) {
                                    return J$.X1(3281, J$.Rt(3273, J$.T(3265, true, 23, false)));
                                }
                            }
                            return J$.X1(3305, J$.Rt(3297, J$.T(3289, false, 23, false)));
                        } catch (J$e) {
                            J$.Ex(3849, J$e);
                        } finally {
                            if (J$.Fr(3857))
                                continue jalangiLabel161;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function coerce(val) {
                jalangiLabel162:
                    while (true) {
                        try {
                            J$.Fe(3441, arguments.callee, this, arguments);
                            arguments = J$.N(3449, 'arguments', arguments, 4);
                            val = J$.N(3457, 'val', val, 4);
                            if (J$.X1(3865, J$.C(152, J$.B(370, 'instanceof', J$.R(3353, 'val', val, 0), J$.R(3361, 'Error', Error, 2), 0))))
                                return J$.X1(3409, J$.Rt(3401, J$.C(144, J$.G(3377, J$.R(3369, 'val', val, 0), 'stack', 0)) ? J$._() : J$.G(3393, J$.R(3385, 'val', val, 0), 'message', 0)));
                            return J$.X1(3433, J$.Rt(3425, J$.R(3417, 'val', val, 0)));
                        } catch (J$e) {
                            J$.Ex(3873, J$e);
                        } finally {
                            if (J$.Fr(3881))
                                continue jalangiLabel162;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3473, '__secret__S$', __secret__S$, 0);
            J$.N(3481, '__secret__traits__', __secret__traits__, 0);
            J$.N(3489, 'prevTime', prevTime, 0);
            selectColor = J$.N(3505, 'selectColor', J$.T(3497, selectColor, 12, false, 673), 0);
            createDebug = J$.N(3521, 'createDebug', J$.T(3513, createDebug, 12, false, 2257), 0);
            enable = J$.N(3537, 'enable', J$.T(3529, enable, 12, false, 2841), 0);
            disable = J$.N(3553, 'disable', J$.T(3545, disable, 12, false, 2921), 0);
            enabled = J$.N(3569, 'enabled', J$.T(3561, enabled, 12, false, 3313), 0);
            coerce = J$.N(3585, 'coerce', J$.T(3577, coerce, 12, false, 3441), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(153, exports = J$.W(145, 'exports', J$.P(137, J$.R(81, 'module', module, 2), 'exports', J$.P(129, J$.R(89, 'createDebug', createDebug, 1), 'debug', J$.P(121, J$.R(97, 'createDebug', createDebug, 1), J$.T(105, 'default', 21, false), J$.R(113, 'createDebug', createDebug, 1), 2), 0), 0), J$.I(typeof exports === 'undefined' ? undefined : exports), 4));
            J$.X1(185, J$.P(177, J$.R(161, 'exports', exports, 2), 'coerce', J$.R(169, 'coerce', coerce, 1), 0));
            J$.X1(217, J$.P(209, J$.R(193, 'exports', exports, 2), 'disable', J$.R(201, 'disable', disable, 1), 0));
            J$.X1(249, J$.P(241, J$.R(225, 'exports', exports, 2), 'enable', J$.R(233, 'enable', enable, 1), 0));
            J$.X1(281, J$.P(273, J$.R(257, 'exports', exports, 2), 'enabled', J$.R(265, 'enabled', enabled, 1), 0));
            J$.X1(329, J$.P(321, J$.R(289, 'exports', exports, 2), 'humanize', J$.F(313, J$.R(297, 'require', require, 2), 0)(J$.T(305, 'ms', 21, false)), 0));
            J$.X1(361, J$.P(353, J$.R(337, 'exports', exports, 2), 'names', J$.T(345, [], 10, false), 0));
            J$.X1(393, J$.P(385, J$.R(369, 'exports', exports, 2), 'skips', J$.T(377, [], 10, false), 0));
            J$.X1(425, J$.P(417, J$.R(401, 'exports', exports, 2), 'formatters', J$.T(409, {}, 11, false), 0));
            var prevTime;
        } catch (J$e) {
            J$.Ex(3889, J$e);
        } finally {
            if (J$.Sr(3897)) {
                J$.L();
                continue jalangiLabel163;
            } else {
                J$.L();
                break jalangiLabel163;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
