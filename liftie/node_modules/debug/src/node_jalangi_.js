J$.iids = {"8":[31,14,31,28],"9":[1,20,1,27],"10":[31,14,31,28],"16":[29,14,29,52],"17":[1,28,1,32],"18":[39,5,39,13],"24":[27,9,27,45],"25":[1,20,1,33],"26":[39,17,39,25],"32":[38,10,38,49],"33":[1,20,1,33],"34":[43,14,43,22],"40":[39,5,39,25],"41":[1,20,1,33],"42":[43,42,43,50],"48":[39,5,39,25],"49":[2,26,2,38],"50":[45,12,45,43],"56":[43,42,43,50],"57":[2,26,2,45],"58":[62,22,62,36],"64":[43,14,43,22],"65":[2,26,2,45],"66":[62,22,62,44],"72":[45,12,45,43],"73":[2,26,2,45],"74":[62,22,62,51],"80":[60,9,60,18],"81":[3,11,3,18],"82":[62,22,62,57],"88":[73,9,73,27],"89":[3,19,3,24],"90":[62,22,62,69],"96":[89,13,89,51],"97":[3,11,3,25],"98":[63,53,63,66],"104":[89,13,89,51],"105":[3,11,3,25],"106":[63,19,63,67],"112":[109,13,109,51],"113":[3,11,3,25],"114":[64,19,64,31],"120":[109,13,109,51],"121":[4,12,4,19],"122":[64,19,64,38],"128":[85,13,85,41],"129":[4,20,4,26],"130":[64,19,64,68],"136":[86,10,86,15],"137":[4,12,4,27],"138":[64,19,64,80],"144":[93,10,93,16],"145":[4,12,4,27],"146":[66,19,66,49],"152":[98,10,98,16],"153":[4,12,4,27],"154":[66,19,66,56],"160":[99,10,99,15],"161":[5,11,5,17],"162":[66,19,66,62],"168":[123,21,123,36],"169":[5,28,5,35],"170":[66,19,66,72],"177":[5,36,5,45],"178":[70,25,70,66],"185":[5,28,5,46],"186":[73,9,73,27],"193":[5,11,5,46],"194":[74,9,74,33],"201":[5,11,5,46],"202":[123,21,123,36],"209":[5,1,5,47],"210":[123,38,123,41],"217":[6,1,6,8],"225":[6,16,6,20],"226":[123,38,123,41],"233":[6,1,6,20],"241":[6,1,6,21],"249":[7,1,7,8],"257":[7,15,7,18],"265":[7,1,7,18],"273":[7,1,7,19],"281":[8,1,8,8],"289":[8,22,8,32],"297":[8,1,8,32],"305":[8,1,8,33],"313":[9,1,9,8],"321":[9,16,9,20],"329":[9,1,9,20],"337":[9,1,9,21],"345":[10,1,10,8],"353":[10,16,10,20],"361":[10,1,10,20],"369":[10,1,10,21],"377":[11,1,11,8],"385":[11,21,11,30],"393":[11,1,11,30],"401":[11,1,11,31],"409":[12,1,12,8],"417":[13,5,13,6],"425":[14,5,14,6],"433":[15,5,15,6],"441":[16,5,16,6],"449":[17,5,17,6],"457":[18,5,18,6],"465":[12,18,19,2],"473":[12,1,19,2],"481":[12,1,19,3],"489":[20,1,20,8],"497":[20,23,20,29],"505":[20,35,20,42],"513":[20,35,20,46],"521":[20,23,20,47],"523":[20,23,20,34],"529":[21,12,21,22],"537":[21,28,21,31],"545":[21,12,21,32],"547":[21,12,21,27],"553":[21,12,21,32],"561":[21,5,21,33],"569":[20,55,22,2],"577":[20,55,22,2],"585":[20,55,22,2],"593":[20,55,22,2],"601":[20,23,22,3],"603":[20,23,20,54],"609":[23,16,23,19],"617":[23,30,23,31],"625":[23,16,23,32],"627":[23,16,23,29],"633":[23,16,23,46],"635":[23,16,23,44],"641":[23,55,23,66],"649":[24,16,24,17],"657":[24,16,24,31],"659":[24,16,24,29],"665":[24,16,24,31],"673":[24,9,24,32],"681":[23,68,25,6],"689":[23,68,25,6],"697":[23,68,25,6],"705":[23,68,25,6],"713":[23,68,25,6],"721":[23,16,25,7],"723":[23,16,23,54],"729":[23,16,25,7],"737":[23,16,25,7],"745":[26,15,26,22],"753":[26,15,26,26],"761":[26,27,26,30],"769":[26,15,26,31],"777":[26,15,26,31],"785":[26,15,26,31],"793":[27,9,27,35],"801":[27,41,27,44],"809":[27,9,27,45],"811":[27,9,27,40],"817":[28,15,28,19],"825":[28,15,28,19],"833":[28,9,28,20],"841":[29,14,29,42],"849":[29,48,29,51],"857":[29,14,29,52],"859":[29,14,29,47],"865":[30,15,30,20],"873":[30,15,30,20],"881":[30,9,30,21],"889":[31,14,31,17],"897":[31,22,31,28],"905":[32,15,32,19],"913":[32,15,32,19],"921":[32,9,32,20],"929":[34,15,34,21],"937":[34,22,34,25],"945":[34,15,34,26],"953":[34,15,34,26],"961":[34,9,34,27],"969":[35,5,35,8],"977":[35,9,35,13],"985":[35,17,35,20],"993":[35,5,35,20],"1001":[35,5,35,21],"1009":[36,12,36,15],"1017":[36,12,36,15],"1025":[36,5,36,16],"1033":[22,11,37,2],"1041":[22,11,37,2],"1049":[22,11,37,2],"1057":[22,11,37,2],"1065":[22,11,37,2],"1073":[22,11,37,2],"1081":[22,11,37,2],"1089":[37,4,37,6],"1097":[20,23,37,7],"1099":[20,23,22,10],"1105":[20,1,37,7],"1113":[20,1,37,8],"1121":[38,10,38,18],"1129":[38,19,38,26],"1137":[38,19,38,30],"1145":[38,19,38,39],"1153":[38,41,38,43],"1161":[38,10,38,44],"1169":[38,48,38,49],"1177":[38,10,38,49],"1185":[38,10,38,49],"1193":[39,5,39,6],"1201":[39,11,39,13],"1209":[39,17,39,18],"1217":[39,23,39,25],"1225":[40,5,40,9],"1233":[40,20,41,6],"1241":[40,20,41,6],"1249":[40,20,41,6],"1257":[41,8,41,177],"1265":[40,5,41,178],"1267":[40,5,40,19],"1273":[40,5,41,180],"1281":[40,5,41,181],"1289":[43,14,43,15],"1297":[43,20,43,22],"1305":[43,25,43,32],"1313":[43,25,43,39],"1321":[43,42,43,43],"1329":[43,48,43,50],"1337":[43,53,43,60],"1345":[43,53,43,67],"1353":[43,70,43,95],"1361":[43,96,43,98],"1369":[43,70,43,99],"1377":[43,14,43,99],"1385":[43,14,43,99],"1393":[45,12,45,20],"1401":[45,24,45,31],"1409":[45,24,45,43],"1417":[45,46,45,53],"1425":[45,54,45,61],"1433":[45,54,45,73],"1441":[45,54,45,80],"1449":[45,46,45,81],"1457":[45,84,45,87],"1465":[45,95,45,97],"1473":[45,84,45,98],"1475":[45,84,45,94],"1481":[45,12,45,98],"1489":[45,5,45,99],"1497":[44,1,46,2],"1505":[44,1,46,2],"1513":[47,1,47,8],"1521":[47,1,47,19],"1529":[48,5,48,9],"1537":[48,5,48,21],"1545":[48,31,48,35],"1553":[48,31,48,45],"1561":[48,5,48,45],"1569":[48,5,48,46],"1577":[49,12,49,16],"1585":[49,25,49,26],"1593":[49,28,49,32],"1601":[49,28,49,44],"1609":[49,12,49,45],"1611":[49,12,49,24],"1617":[49,52,49,56],"1625":[49,12,49,57],"1627":[49,12,49,51],"1633":[50,16,50,19],"1641":[50,16,50,26],"1643":[50,16,50,24],"1649":[50,16,50,26],"1657":[50,9,50,27],"1665":[49,62,51,6],"1673":[49,62,51,6],"1681":[49,62,51,6],"1689":[49,62,51,6],"1697":[49,12,51,7],"1699":[49,12,49,61],"1705":[51,13,51,16],"1713":[49,12,51,17],"1715":[49,12,51,12],"1721":[49,12,51,17],"1729":[49,5,51,18],"1737":[47,24,52,2],"1745":[47,24,52,2],"1753":[47,24,52,2],"1761":[47,24,52,2],"1769":[47,1,52,2],"1777":[47,1,52,3],"1785":[53,1,53,8],"1793":[53,1,53,19],"1801":[54,5,54,9],"1809":[54,5,54,21],"1817":[54,31,54,35],"1825":[54,31,54,45],"1833":[54,5,54,45],"1841":[54,5,54,46],"1849":[55,12,55,16],"1857":[55,25,55,26],"1865":[55,28,55,32],"1873":[55,28,55,44],"1881":[55,12,55,45],"1883":[55,12,55,24],"1889":[55,12,55,45],"1897":[55,5,55,46],"1905":[53,24,56,2],"1913":[53,24,56,2],"1921":[53,24,56,2],"1929":[53,24,56,2],"1937":[53,1,56,2],"1945":[53,1,56,3],"1953":[58,16,58,20],"1961":[58,16,58,30],"1969":[58,16,58,30],"1977":[58,16,58,30],"1985":[59,21,59,25],"1993":[59,21,59,35],"2001":[59,21,59,35],"2009":[59,21,59,35],"2017":[60,9,60,18],"2025":[61,17,61,21],"2033":[61,17,61,27],"2041":[61,17,61,27],"2049":[61,17,61,27],"2057":[62,22,62,32],"2065":[62,35,62,36],"2073":[62,39,62,44],"2081":[62,47,62,51],"2089":[62,54,62,57],"2097":[62,60,62,69],"2105":[62,22,62,69],"2113":[62,22,62,69],"2121":[63,9,63,13],"2129":[63,14,63,15],"2137":[63,19,63,25],"2145":[63,28,63,32],"2153":[63,33,63,34],"2161":[63,28,63,35],"2169":[63,42,63,46],"2177":[63,28,63,47],"2179":[63,28,63,41],"2185":[63,53,63,57],"2193":[63,60,63,66],"2201":[63,28,63,67],"2203":[63,28,63,52],"2209":[63,9,63,67],"2217":[63,9,63,68],"2225":[64,9,64,13],"2233":[64,19,64,27],"2241":[64,30,64,31],"2249":[64,34,64,38],"2257":[64,41,64,48],"2265":[64,58,64,62],"2273":[64,58,64,67],"2281":[64,41,64,68],"2283":[64,41,64,57],"2289":[64,71,64,80],"2297":[64,9,64,81],"2299":[64,9,64,18],"2305":[64,9,64,82],"2313":[66,9,66,13],"2321":[66,14,66,15],"2329":[66,23,66,27],"2337":[66,19,66,29],"2345":[66,19,66,43],"2347":[66,19,66,41],"2353":[66,46,66,49],"2361":[66,52,66,56],"2369":[66,59,66,62],"2377":[66,65,66,69],"2385":[66,70,66,71],"2393":[66,65,66,72],"2401":[66,9,66,72],"2409":[66,9,66,73],"2417":[57,1,68,2],"2425":[57,1,68,2],"2433":[57,1,68,2],"2441":[57,1,68,2],"2449":[57,1,68,2],"2457":[57,1,68,2],"2465":[57,1,68,2],"2473":[70,12,70,18],"2481":[70,25,70,29],"2489":[70,25,70,36],"2497":[70,43,70,47],"2505":[70,49,70,58],"2513":[70,25,70,59],"2515":[70,25,70,42],"2521":[70,62,70,66],"2529":[70,12,70,67],"2531":[70,12,70,24],"2537":[70,12,70,67],"2545":[70,5,70,68],"2553":[69,1,71,2],"2561":[69,1,71,2],"2569":[73,9,73,13],"2577":[73,17,73,27],"2585":[74,16,74,23],"2593":[74,16,74,27],"2601":[74,9,74,34],"2609":[76,9,76,16],"2617":[76,9,76,20],"2625":[76,29,76,39],"2633":[76,9,76,39],"2641":[76,9,76,40],"2649":[72,1,78,2],"2657":[72,1,78,2],"2665":[72,1,78,2],"2673":[80,12,80,19],"2681":[80,12,80,23],"2689":[80,12,80,29],"2697":[80,12,80,29],"2705":[80,5,80,30],"2713":[79,1,81,2],"2721":[79,1,81,2],"2729":[84,20,84,27],"2737":[84,36,84,46],"2745":[84,20,84,47],"2747":[84,20,84,35],"2753":[84,20,84,47],"2761":[84,20,84,47],"2769":[85,13,85,21],"2777":[85,38,85,40],"2785":[85,13,85,41],"2787":[85,13,85,37],"2793":[87,22,87,25],"2801":[87,38,87,40],"2809":[87,18,87,41],"2811":[87,22,87,37],"2817":[87,18,87,41],"2825":[87,9,87,42],"2833":[88,9,88,15],"2841":[88,24,88,29],"2849":[88,9,88,29],"2857":[88,9,88,30],"2865":[89,13,89,19],"2873":[89,13,89,27],"2881":[89,31,89,37],"2889":[89,31,89,45],"2897":[89,31,89,51],"2905":[90,13,90,19],"2913":[90,13,90,27],"2921":[90,13,90,35],"2923":[90,13,90,33],"2929":[90,13,90,36],"2937":[86,10,86,15],"2945":[94,18,94,25],"2953":[94,26,94,30],"2961":[94,18,94,31],"2969":[94,18,94,31],"2977":[94,18,94,31],"2985":[95,22,95,24],"2993":[95,41,95,43],"3001":[95,58,95,63],"3009":[95,45,95,65],"3017":[95,18,95,66],"3019":[95,22,95,40],"3025":[95,18,95,66],"3033":[95,9,95,67],"3041":[96,9,96,15],"3049":[96,24,96,28],"3057":[96,9,96,28],"3065":[96,9,96,29],"3073":[93,10,93,16],"3081":[98,10,98,16],"3089":[100,19,100,26],"3097":[100,27,100,32],"3105":[100,19,100,33],"3113":[100,19,100,33],"3121":[100,19,100,33],"3129":[101,22,101,25],"3137":[102,17,102,19],"3145":[103,23,103,28],"3153":[104,23,104,27],"3161":[101,33,105,10],"3169":[101,18,105,11],"3171":[101,22,101,32],"3177":[101,18,105,11],"3185":[101,9,105,12],"3193":[106,9,106,15],"3201":[106,27,106,32],"3209":[106,9,106,32],"3217":[106,9,106,33],"3225":[107,9,107,15],"3233":[107,23,107,27],"3241":[107,9,107,27],"3249":[107,9,107,28],"3257":[108,9,108,15],"3265":[108,24,108,30],"3273":[108,9,108,30],"3281":[108,9,108,31],"3289":[109,13,109,19],"3297":[109,13,109,27],"3305":[109,31,109,37],"3313":[109,31,109,45],"3321":[109,31,109,51],"3329":[110,13,110,19],"3337":[110,13,110,27],"3345":[110,13,110,35],"3347":[110,13,110,33],"3353":[110,13,110,36],"3361":[99,10,99,15],"3369":[114,19,114,24],"3377":[114,25,114,66],"3385":[114,15,114,67],"3393":[114,15,114,67],"3401":[114,9,114,68],"3409":[116,5,116,11],"3417":[116,17,116,19],"3425":[116,5,116,19],"3433":[116,5,116,20],"3441":[117,5,117,11],"3449":[117,23,117,27],"3457":[117,5,117,27],"3465":[117,5,117,28],"3473":[118,12,118,18],"3481":[118,12,118,18],"3489":[118,5,118,19],"3497":[82,1,119,2],"3505":[82,1,119,2],"3513":[82,1,119,2],"3521":[82,1,119,2],"3529":[82,1,119,2],"3537":[82,1,119,2],"3545":[82,1,119,2],"3553":[121,5,121,10],"3561":[121,25,121,27],"3569":[121,5,121,27],"3577":[121,5,121,28],"3585":[122,16,122,22],"3593":[122,28,122,35],"3601":[122,28,122,47],"3609":[122,16,122,48],"3611":[122,16,122,27],"3617":[122,16,122,48],"3625":[122,16,122,48],"3633":[123,18,123,19],"3641":[123,18,123,19],"3649":[123,18,123,19],"3657":[123,21,123,22],"3665":[123,25,123,29],"3673":[123,25,123,36],"3689":[123,38,123,39],"3697":[123,38,123,41],"3713":[124,9,124,14],"3721":[124,9,124,26],"3729":[124,27,124,31],"3737":[124,32,124,33],"3745":[124,27,124,34],"3753":[124,38,124,45],"3761":[124,38,124,57],"3769":[124,58,124,62],"3777":[124,63,124,64],"3785":[124,58,124,65],"3793":[124,38,124,66],"3801":[124,9,124,66],"3809":[124,9,124,67],"3817":[120,1,126,2],"3825":[120,1,126,2],"3833":[120,1,126,2],"3841":[120,1,126,2],"3849":[120,1,126,2],"3857":[127,1,127,8],"3865":[127,16,127,20],"3873":[127,16,127,22],"3881":[127,1,127,23],"3883":[127,1,127,15],"3889":[127,1,127,24],"3897":[1,1,127,24],"3905":[1,1,127,24],"3913":[1,1,127,24],"3921":[1,1,127,24],"3929":[1,1,127,24],"3937":[1,1,127,24],"3945":[1,1,127,24],"3953":[44,1,46,2],"3961":[1,1,127,24],"3969":[57,1,68,2],"3977":[1,1,127,24],"3985":[69,1,71,2],"3993":[1,1,127,24],"4001":[72,1,78,2],"4009":[1,1,127,24],"4017":[79,1,81,2],"4025":[1,1,127,24],"4033":[82,1,119,2],"4041":[1,1,127,24],"4049":[120,1,126,2],"4057":[1,1,127,24],"4065":[20,55,22,2],"4073":[20,55,22,2],"4081":[23,68,25,6],"4089":[23,68,25,6],"4097":[31,10,34,27],"4105":[29,10,34,27],"4113":[27,5,34,27],"4121":[22,11,37,2],"4129":[22,11,37,2],"4137":[40,20,41,6],"4145":[40,20,41,6],"4153":[39,1,42,2],"4161":[43,42,43,99],"4169":[43,14,43,99],"4177":[45,12,45,98],"4185":[44,1,46,2],"4193":[44,1,46,2],"4201":[49,62,51,6],"4209":[49,62,51,6],"4217":[47,24,52,2],"4225":[47,24,52,2],"4233":[53,24,56,2],"4241":[53,24,56,2],"4249":[60,5,67,6],"4257":[57,1,68,2],"4265":[57,1,68,2],"4273":[69,1,71,2],"4281":[69,1,71,2],"4289":[73,5,77,6],"4297":[72,1,78,2],"4305":[72,1,78,2],"4313":[79,1,81,2],"4321":[79,1,81,2],"4329":[89,9,91,10],"4337":[109,9,111,10],"4345":[85,13,85,41],"4353":[86,10,86,15],"4361":[93,10,93,16],"4369":[98,10,98,16],"4377":[99,10,99,15],"4385":[82,1,119,2],"4393":[82,1,119,2],"4401":[123,5,125,6],"4409":[123,5,125,6],"4417":[120,1,126,2],"4425":[120,1,126,2],"4433":[1,1,127,24],"4441":[1,1,127,24],"nBranches":42,"originalCodeFileName":"/home/blake/ExpoSE/Targets/liftie/node_modules/debug/src/node.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/liftie/node_modules/debug/src/node_jalangi_.js","code":"/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n"};
jalangiLabel154:
    while (true) {
        try {
            J$.Se(3897, '/home/blake/ExpoSE/Targets/liftie/node_modules/debug/src/node_jalangi_.js', '/home/blake/ExpoSE/Targets/liftie/node_modules/debug/src/node.js');
            function useColors() {
                jalangiLabel144:
                    while (true) {
                        try {
                            J$.Fe(1497, arguments.callee, this, arguments);
                            arguments = J$.N(1505, 'arguments', arguments, 4);
                            return J$.X1(1489, J$.Rt(1481, J$.X1(4177, J$.C(72, J$.B(50, 'in', J$.T(1393, 'colors', 21, false), J$.G(1409, J$.R(1401, 'exports', exports, 2), 'inspectOpts', 0), 0))) ? J$.F(1449, J$.R(1417, 'Boolean', Boolean, 2), 0)(J$.G(1441, J$.G(1433, J$.R(1425, 'exports', exports, 2), 'inspectOpts', 0), 'colors', 0)) : J$.M(1473, J$.R(1457, 'tty', tty, 1), 'isatty', 0)(J$.R(1465, 'fd', fd, 1))));
                        } catch (J$e) {
                            J$.Ex(4185, J$e);
                        } finally {
                            if (J$.Fr(4193))
                                continue jalangiLabel144;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function formatArgs(args) {
                jalangiLabel148:
                    while (true) {
                        try {
                            J$.Fe(2417, arguments.callee, this, arguments);
                            arguments = J$.N(2425, 'arguments', arguments, 4);
                            args = J$.N(2433, 'args', args, 4);
                            J$.N(2441, 'name', name, 0);
                            J$.N(2449, 'useColors', useColors, 0);
                            J$.N(2457, 'c', c, 0);
                            J$.N(2465, 'prefix', prefix, 0);
                            var name = J$.X1(1977, J$.W(1969, 'name', J$.G(1961, J$.R(1953, 'this', this, 0), 'namespace', 0), name, 1));
                            var useColors = J$.X1(2009, J$.W(2001, 'useColors', J$.G(1993, J$.R(1985, 'this', this, 0), 'useColors', 0), useColors, 1));
                            if (J$.X1(4249, J$.C(80, J$.R(2017, 'useColors', useColors, 0)))) {
                                var c = J$.X1(2049, J$.W(2041, 'c', J$.G(2033, J$.R(2025, 'this', this, 0), 'color', 0), c, 1));
                                var prefix = J$.X1(2113, J$.W(2105, 'prefix', J$.B(90, '+', J$.B(82, '+', J$.B(74, '+', J$.B(66, '+', J$.B(58, '+', J$.T(2057, '  \x1B[3', 21, false), J$.R(2065, 'c', c, 0), 0), J$.T(2073, ';1m', 21, false), 0), J$.R(2081, 'name', name, 0), 0), J$.T(2089, ' ', 21, false), 0), J$.T(2097, '\x1B[0m', 21, false), 0), prefix, 1));
                                J$.X1(2217, J$.P(2209, J$.R(2121, 'args', args, 0), J$.T(2129, 0, 22, false), J$.B(106, '+', J$.R(2137, 'prefix', prefix, 0), J$.M(2201, J$.M(2177, J$.G(2161, J$.R(2145, 'args', args, 0), J$.T(2153, 0, 22, false), 4), 'split', 0)(J$.T(2169, '\n', 21, false)), 'join', 0)(J$.B(98, '+', J$.T(2185, '\n', 21, false), J$.R(2193, 'prefix', prefix, 0), 0)), 0), 2));
                                J$.X1(2305, J$.M(2297, J$.R(2225, 'args', args, 0), 'push', 0)(J$.B(138, '+', J$.B(130, '+', J$.B(122, '+', J$.B(114, '+', J$.T(2233, '\x1B[3', 21, false), J$.R(2241, 'c', c, 0), 0), J$.T(2249, 'm+', 21, false), 0), J$.M(2281, J$.R(2257, 'exports', exports, 2), 'humanize', 0)(J$.G(2273, J$.R(2265, 'this', this, 0), 'diff', 0)), 0), J$.T(2289, '\x1B[0m', 21, false), 0)));
                            } else {
                                J$.X1(2409, J$.P(2401, J$.R(2313, 'args', args, 0), J$.T(2321, 0, 22, false), J$.B(170, '+', J$.B(162, '+', J$.B(154, '+', J$.B(146, '+', J$.M(2345, J$.F(2337, J$.R(2329, 'Date', Date, 2), 1)(), 'toUTCString', 0)(), J$.T(2353, ' ', 21, false), 0), J$.R(2361, 'name', name, 0), 0), J$.T(2369, ' ', 21, false), 0), J$.G(2393, J$.R(2377, 'args', args, 0), J$.T(2385, 0, 22, false), 4), 0), 2));
                            }
                        } catch (J$e) {
                            J$.Ex(4257, J$e);
                        } finally {
                            if (J$.Fr(4265))
                                continue jalangiLabel148;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function log() {
                jalangiLabel149:
                    while (true) {
                        try {
                            J$.Fe(2553, arguments.callee, this, arguments);
                            arguments = J$.N(2561, 'arguments', arguments, 4);
                            return J$.X1(2545, J$.Rt(2537, J$.M(2529, J$.R(2473, 'stream', stream, 1), 'write', 0)(J$.B(178, '+', J$.M(2513, J$.G(2489, J$.R(2481, 'util', util, 1), 'format', 0), 'apply', 0)(J$.R(2497, 'util', util, 1), J$.R(2505, 'arguments', arguments, 2)), J$.T(2521, '\n', 21, false), 0))));
                        } catch (J$e) {
                            J$.Ex(4273, J$e);
                        } finally {
                            if (J$.Fr(4281))
                                continue jalangiLabel149;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function save(namespaces) {
                jalangiLabel150:
                    while (true) {
                        try {
                            J$.Fe(2649, arguments.callee, this, arguments);
                            arguments = J$.N(2657, 'arguments', arguments, 4);
                            namespaces = J$.N(2665, 'namespaces', namespaces, 4);
                            if (J$.X1(4289, J$.C(88, J$.B(186, '==', J$.T(2569, null, 25, false), J$.R(2577, 'namespaces', namespaces, 0), 0)))) {
                                J$.X1(2601, J$.B(194, 'delete', J$.G(2593, J$.R(2585, 'process', process, 2), 'env', 0), 'DEBUG', 0));
                            } else {
                                J$.X1(2641, J$.P(2633, J$.G(2617, J$.R(2609, 'process', process, 2), 'env', 0), 'DEBUG', J$.R(2625, 'namespaces', namespaces, 0), 0));
                            }
                        } catch (J$e) {
                            J$.Ex(4297, J$e);
                        } finally {
                            if (J$.Fr(4305))
                                continue jalangiLabel150;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function load() {
                jalangiLabel151:
                    while (true) {
                        try {
                            J$.Fe(2713, arguments.callee, this, arguments);
                            arguments = J$.N(2721, 'arguments', arguments, 4);
                            return J$.X1(2705, J$.Rt(2697, J$.G(2689, J$.G(2681, J$.R(2673, 'process', process, 2), 'env', 0), 'DEBUG', 0)));
                        } catch (J$e) {
                            J$.Ex(4313, J$e);
                        } finally {
                            if (J$.Fr(4321))
                                continue jalangiLabel151;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createWritableStdioStream(fd) {
                jalangiLabel152:
                    while (true) {
                        try {
                            J$.Fe(3497, arguments.callee, this, arguments);
                            arguments = J$.N(3505, 'arguments', arguments, 4);
                            fd = J$.N(3513, 'fd', fd, 4);
                            J$.N(3521, 'stream', stream, 0);
                            J$.N(3529, 'tty_wrap', tty_wrap, 0);
                            J$.N(3537, 'fs', fs, 0);
                            J$.N(3545, 'net', net, 0);
                            var stream;
                            var tty_wrap = J$.X1(2761, J$.W(2753, 'tty_wrap', J$.M(2745, J$.R(2729, 'process', process, 2), 'binding', 0)(J$.T(2737, 'tty_wrap', 21, false)), tty_wrap, 1));
                            switch (J$.X1(4345, J$.C1(128, J$.M(2785, J$.R(2769, 'tty_wrap', tty_wrap, 0), 'guessHandleType', 0)(J$.R(2777, 'fd', fd, 0))))) {
                            case J$.X1(4353, J$.C2(136, J$.T(2937, 'TTY', 21, false))):
                                J$.X1(2825, stream = J$.W(2817, 'stream', J$.M(2809, J$.R(2793, 'tty', tty, 1), 'WriteStream', 2)(J$.R(2801, 'fd', fd, 0)), stream, 0));
                                J$.X1(2857, J$.P(2849, J$.R(2833, 'stream', stream, 0), '_type', J$.T(2841, 'tty', 21, false), 0));
                                if (J$.X1(4329, J$.C(104, J$.C(96, J$.G(2873, J$.R(2865, 'stream', stream, 0), '_handle', 0)) ? J$.G(2897, J$.G(2889, J$.R(2881, 'stream', stream, 0), '_handle', 0), 'unref', 0) : J$._()))) {
                                    J$.X1(2929, J$.M(2921, J$.G(2913, J$.R(2905, 'stream', stream, 0), '_handle', 0), 'unref', 0)());
                                }
                                break;
                            case J$.X1(4361, J$.C2(144, J$.T(3073, 'FILE', 21, false))):
                                var fs = J$.X1(2977, J$.W(2969, 'fs', J$.F(2961, J$.R(2945, 'require', require, 2), 0)(J$.T(2953, 'fs', 21, false)), fs, 1));
                                J$.X1(3033, stream = J$.W(3025, 'stream', J$.M(3017, J$.R(2985, 'fs', fs, 0), 'SyncWriteStream', 2)(J$.R(2993, 'fd', fd, 0), J$.T(3009, {
                                    autoClose: J$.T(3001, false, 23, false)
                                }, 11, false)), stream, 0));
                                J$.X1(3065, J$.P(3057, J$.R(3041, 'stream', stream, 0), '_type', J$.T(3049, 'fs', 21, false), 0));
                                break;
                            case J$.X1(4369, J$.C2(152, J$.T(3081, 'PIPE', 21, false))):
                            case J$.X1(4377, J$.C2(160, J$.T(3361, 'TCP', 21, false))):
                                var net = J$.X1(3121, J$.W(3113, 'net', J$.F(3105, J$.R(3089, 'require', require, 2), 0)(J$.T(3097, 'net', 21, false)), net, 1));
                                J$.X1(3185, stream = J$.W(3177, 'stream', J$.M(3169, J$.R(3129, 'net', net, 0), 'Socket', 2)(J$.T(3161, {
                                    fd: J$.R(3137, 'fd', fd, 0),
                                    readable: J$.T(3145, false, 23, false),
                                    writable: J$.T(3153, true, 23, false)
                                }, 11, false)), stream, 0));
                                J$.X1(3217, J$.P(3209, J$.R(3193, 'stream', stream, 0), 'readable', J$.T(3201, false, 23, false), 0));
                                J$.X1(3249, J$.P(3241, J$.R(3225, 'stream', stream, 0), 'read', J$.T(3233, null, 25, false), 0));
                                J$.X1(3281, J$.P(3273, J$.R(3257, 'stream', stream, 0), '_type', J$.T(3265, 'pipe', 21, false), 0));
                                if (J$.X1(4337, J$.C(120, J$.C(112, J$.G(3297, J$.R(3289, 'stream', stream, 0), '_handle', 0)) ? J$.G(3321, J$.G(3313, J$.R(3305, 'stream', stream, 0), '_handle', 0), 'unref', 0) : J$._()))) {
                                    J$.X1(3353, J$.M(3345, J$.G(3337, J$.R(3329, 'stream', stream, 0), '_handle', 0), 'unref', 0)());
                                }
                                break;
                            default:
                                throw J$.X1(3401, J$.Th(3393, J$.F(3385, J$.R(3369, 'Error', Error, 2), 1)(J$.T(3377, 'Implement me. Unknown stream file type!', 21, false))));
                            }
                            J$.X1(3433, J$.P(3425, J$.R(3409, 'stream', stream, 0), 'fd', J$.R(3417, 'fd', fd, 0), 0));
                            J$.X1(3465, J$.P(3457, J$.R(3441, 'stream', stream, 0), '_isStdio', J$.T(3449, true, 23, false), 0));
                            return J$.X1(3489, J$.Rt(3481, J$.R(3473, 'stream', stream, 0)));
                        } catch (J$e) {
                            J$.Ex(4385, J$e);
                        } finally {
                            if (J$.Fr(4393))
                                continue jalangiLabel152;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function init(debug) {
                jalangiLabel153:
                    while (true) {
                        try {
                            J$.Fe(3817, arguments.callee, this, arguments);
                            arguments = J$.N(3825, 'arguments', arguments, 4);
                            debug = J$.N(3833, 'debug', debug, 4);
                            J$.N(3841, 'keys', keys, 0);
                            J$.N(3849, 'i', i, 0);
                            J$.X1(3577, J$.P(3569, J$.R(3553, 'debug', debug, 0), 'inspectOpts', J$.T(3561, {}, 11, false), 0));
                            var keys = J$.X1(3625, J$.W(3617, 'keys', J$.M(3609, J$.R(3585, 'Object', Object, 2), 'keys', 0)(J$.G(3601, J$.R(3593, 'exports', exports, 2), 'inspectOpts', 0)), keys, 1));
                            for (var i = J$.X1(3649, J$.W(3641, 'i', J$.T(3633, 0, 22, false), i, 1)); J$.X1(4401, J$.C(168, J$.B(202, '<', J$.R(3657, 'i', i, 0), J$.G(3673, J$.R(3665, 'keys', keys, 0), 'length', 0), 0))); J$.X1(4409, J$.B(226, '-', i = J$.W(3697, 'i', J$.B(218, '+', J$.U(210, '+', J$.R(3689, 'i', i, 0)), J$.T(3681, 1, 22, false), 0), i, 0), J$.T(3705, 1, 22, false), 0))) {
                                J$.X1(3809, J$.P(3801, J$.G(3721, J$.R(3713, 'debug', debug, 0), 'inspectOpts', 0), J$.G(3745, J$.R(3729, 'keys', keys, 0), J$.R(3737, 'i', i, 0), 4), J$.G(3793, J$.G(3761, J$.R(3753, 'exports', exports, 2), 'inspectOpts', 0), J$.G(3785, J$.R(3769, 'keys', keys, 0), J$.R(3777, 'i', i, 0), 4), 4), 2));
                            }
                        } catch (J$e) {
                            J$.Ex(4417, J$e);
                        } finally {
                            if (J$.Fr(4425))
                                continue jalangiLabel153;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3905, '__secret__S$', __secret__S$, 0);
            J$.N(3913, '__secret__traits__', __secret__traits__, 0);
            J$.N(3921, 'tty', tty, 0);
            J$.N(3929, 'util', util, 0);
            J$.N(3937, 'fd', fd, 0);
            J$.N(3945, 'stream', stream, 0);
            useColors = J$.N(3961, 'useColors', J$.T(3953, useColors, 12, false, 1497), 0);
            formatArgs = J$.N(3977, 'formatArgs', J$.T(3969, formatArgs, 12, false, 2417), 0);
            log = J$.N(3993, 'log', J$.T(3985, log, 12, false, 2553), 0);
            save = J$.N(4009, 'save', J$.T(4001, save, 12, false, 2649), 0);
            load = J$.N(4025, 'load', J$.T(4017, load, 12, false, 2713), 0);
            createWritableStdioStream = J$.N(4041, 'createWritableStdioStream', J$.T(4033, createWritableStdioStream, 12, false, 3497), 0);
            init = J$.N(4057, 'init', J$.T(4049, init, 12, false, 3817), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var tty = J$.X1(113, J$.W(105, 'tty', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, 'tty', 21, false)), tty, 3));
            var util = J$.X1(153, J$.W(145, 'util', J$.F(137, J$.R(121, 'require', require, 2), 0)(J$.T(129, 'util', 21, false)), util, 3));
            J$.X1(209, exports = J$.W(201, 'exports', J$.P(193, J$.R(161, 'module', module, 2), 'exports', J$.F(185, J$.R(169, 'require', require, 2), 0)(J$.T(177, './debug', 21, false)), 0), J$.I(typeof exports === 'undefined' ? undefined : exports), 4));
            J$.X1(241, J$.P(233, J$.R(217, 'exports', exports, 2), 'init', J$.R(225, 'init', init, 1), 0));
            J$.X1(273, J$.P(265, J$.R(249, 'exports', exports, 2), 'log', J$.R(257, 'log', log, 1), 0));
            J$.X1(305, J$.P(297, J$.R(281, 'exports', exports, 2), 'formatArgs', J$.R(289, 'formatArgs', formatArgs, 1), 0));
            J$.X1(337, J$.P(329, J$.R(313, 'exports', exports, 2), 'save', J$.R(321, 'save', save, 1), 0));
            J$.X1(369, J$.P(361, J$.R(345, 'exports', exports, 2), 'load', J$.R(353, 'load', load, 1), 0));
            J$.X1(401, J$.P(393, J$.R(377, 'exports', exports, 2), 'useColors', J$.R(385, 'useColors', useColors, 1), 0));
            J$.X1(481, J$.P(473, J$.R(409, 'exports', exports, 2), 'colors', J$.T(465, [
                J$.T(417, 6, 22, false),
                J$.T(425, 2, 22, false),
                J$.T(433, 3, 22, false),
                J$.T(441, 4, 22, false),
                J$.T(449, 5, 22, false),
                J$.T(457, 1, 22, false)
            ], 10, false), 0));
            J$.X1(1113, J$.P(1105, J$.R(489, 'exports', exports, 2), 'inspectOpts', J$.M(1097, J$.M(601, J$.M(521, J$.R(497, 'Object', Object, 2), 'keys', 0)(J$.G(513, J$.R(505, 'process', process, 2), 'env', 0)), 'filter', 0)(J$.T(593, function (key) {
                jalangiLabel140:
                    while (true) {
                        try {
                            J$.Fe(569, arguments.callee, this, arguments);
                            arguments = J$.N(577, 'arguments', arguments, 4);
                            key = J$.N(585, 'key', key, 4);
                            return J$.X1(561, J$.Rt(553, J$.M(545, J$.T(529, /^debug_/i, 14, false), 'test', 0)(J$.R(537, 'key', key, 0))));
                        } catch (J$e) {
                            J$.Ex(4065, J$e);
                        } finally {
                            if (J$.Fr(4073))
                                continue jalangiLabel140;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 569)), 'reduce', 0)(J$.T(1081, function (obj, key) {
                jalangiLabel142:
                    while (true) {
                        try {
                            J$.Fe(1033, arguments.callee, this, arguments);
                            arguments = J$.N(1041, 'arguments', arguments, 4);
                            obj = J$.N(1049, 'obj', obj, 4);
                            key = J$.N(1057, 'key', key, 4);
                            J$.N(1065, 'prop', prop, 0);
                            J$.N(1073, 'val', val, 0);
                            var prop = J$.X1(737, J$.W(729, 'prop', J$.M(721, J$.M(633, J$.M(625, J$.R(609, 'key', key, 0), 'substring', 0)(J$.T(617, 6, 22, false)), 'toLowerCase', 0)(), 'replace', 0)(J$.T(641, /_([a-z])/g, 14, false), J$.T(713, function (_, k) {
                                jalangiLabel141:
                                    while (true) {
                                        try {
                                            J$.Fe(681, arguments.callee, this, arguments);
                                            arguments = J$.N(689, 'arguments', arguments, 4);
                                            _ = J$.N(697, '_', _, 4);
                                            k = J$.N(705, 'k', k, 4);
                                            return J$.X1(673, J$.Rt(665, J$.M(657, J$.R(649, 'k', k, 0), 'toUpperCase', 0)()));
                                        } catch (J$e) {
                                            J$.Ex(4081, J$e);
                                        } finally {
                                            if (J$.Fr(4089))
                                                continue jalangiLabel141;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 681)), prop, 1));
                            var val = J$.X1(785, J$.W(777, 'val', J$.G(769, J$.G(753, J$.R(745, 'process', process, 2), 'env', 0), J$.R(761, 'key', key, 0), 4), val, 1));
                            if (J$.X1(4113, J$.C(24, J$.M(809, J$.T(793, /^(yes|on|true|enabled)$/i, 14, false), 'test', 0)(J$.R(801, 'val', val, 0)))))
                                J$.X1(833, val = J$.W(825, 'val', J$.T(817, true, 23, false), val, 0));
                            else if (J$.X1(4105, J$.C(16, J$.M(857, J$.T(841, /^(no|off|false|disabled)$/i, 14, false), 'test', 0)(J$.R(849, 'val', val, 0)))))
                                J$.X1(881, val = J$.W(873, 'val', J$.T(865, false, 23, false), val, 0));
                            else if (J$.X1(4097, J$.C(8, J$.B(10, '===', J$.R(889, 'val', val, 0), J$.T(897, 'null', 21, false), 0))))
                                J$.X1(921, val = J$.W(913, 'val', J$.T(905, null, 25, false), val, 0));
                            else
                                J$.X1(961, val = J$.W(953, 'val', J$.F(945, J$.R(929, 'Number', Number, 2), 0)(J$.R(937, 'val', val, 0)), val, 0));
                            J$.X1(1001, J$.P(993, J$.R(969, 'obj', obj, 0), J$.R(977, 'prop', prop, 0), J$.R(985, 'val', val, 0), 2));
                            return J$.X1(1025, J$.Rt(1017, J$.R(1009, 'obj', obj, 0)));
                        } catch (J$e) {
                            J$.Ex(4121, J$e);
                        } finally {
                            if (J$.Fr(4129))
                                continue jalangiLabel142;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1033), J$.T(1089, {}, 11, false)), 0));
            var fd = J$.X1(1185, J$.W(1177, 'fd', J$.C(32, J$.F(1161, J$.R(1121, 'parseInt', parseInt, 2), 0)(J$.G(1145, J$.G(1137, J$.R(1129, 'process', process, 2), 'env', 0), 'DEBUG_FD', 0), J$.T(1153, 10, 22, false))) ? J$._() : J$.T(1169, 2, 22, false), fd, 3));
            if (J$.X1(4153, J$.C(48, J$.C(40, J$.B(18, '!==', J$.T(1193, 1, 22, false), J$.R(1201, 'fd', fd, 1), 0)) ? J$.B(26, '!==', J$.T(1209, 2, 22, false), J$.R(1217, 'fd', fd, 1), 0) : J$._()))) {
                J$.X1(1281, J$.F(1273, J$.M(1265, J$.R(1225, 'util', util, 1), 'deprecate', 0)(J$.T(1249, function () {
                    jalangiLabel143:
                        while (true) {
                            try {
                                J$.Fe(1233, arguments.callee, this, arguments);
                                arguments = J$.N(1241, 'arguments', arguments, 4);
                            } catch (J$e) {
                                J$.Ex(4137, J$e);
                            } finally {
                                if (J$.Fr(4145))
                                    continue jalangiLabel143;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 1233), J$.T(1257, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)', 21, false)), 0)());
            }
            var stream = J$.X1(1385, J$.W(1377, 'stream', J$.X1(4169, J$.C(64, J$.B(34, '===', J$.T(1289, 1, 22, false), J$.R(1297, 'fd', fd, 1), 0))) ? J$.G(1313, J$.R(1305, 'process', process, 2), 'stdout', 0) : J$.X1(4161, J$.C(56, J$.B(42, '===', J$.T(1321, 2, 22, false), J$.R(1329, 'fd', fd, 1), 0))) ? J$.G(1345, J$.R(1337, 'process', process, 2), 'stderr', 0) : J$.F(1369, J$.R(1353, 'createWritableStdioStream', createWritableStdioStream, 1), 0)(J$.R(1361, 'fd', fd, 1)), stream, 3));
            J$.X1(1777, J$.P(1769, J$.G(1521, J$.R(1513, 'exports', exports, 2), 'formatters', 0), 'o', J$.T(1761, function (v) {
                jalangiLabel146:
                    while (true) {
                        try {
                            J$.Fe(1737, arguments.callee, this, arguments);
                            arguments = J$.N(1745, 'arguments', arguments, 4);
                            v = J$.N(1753, 'v', v, 4);
                            J$.X1(1569, J$.P(1561, J$.G(1537, J$.R(1529, 'this', this, 0), 'inspectOpts', 0), 'colors', J$.G(1553, J$.R(1545, 'this', this, 0), 'useColors', 0), 0));
                            return J$.X1(1729, J$.Rt(1721, J$.M(1713, J$.M(1697, J$.M(1625, J$.M(1609, J$.R(1577, 'util', util, 1), 'inspect', 0)(J$.R(1585, 'v', v, 0), J$.G(1601, J$.R(1593, 'this', this, 0), 'inspectOpts', 0)), 'split', 0)(J$.T(1617, '\n', 21, false)), 'map', 0)(J$.T(1689, function (str) {
                                jalangiLabel145:
                                    while (true) {
                                        try {
                                            J$.Fe(1665, arguments.callee, this, arguments);
                                            arguments = J$.N(1673, 'arguments', arguments, 4);
                                            str = J$.N(1681, 'str', str, 4);
                                            return J$.X1(1657, J$.Rt(1649, J$.M(1641, J$.R(1633, 'str', str, 0), 'trim', 0)()));
                                        } catch (J$e) {
                                            J$.Ex(4201, J$e);
                                        } finally {
                                            if (J$.Fr(4209))
                                                continue jalangiLabel145;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1665)), 'join', 0)(J$.T(1705, ' ', 21, false))));
                        } catch (J$e) {
                            J$.Ex(4217, J$e);
                        } finally {
                            if (J$.Fr(4225))
                                continue jalangiLabel146;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1737), 0));
            J$.X1(1945, J$.P(1937, J$.G(1793, J$.R(1785, 'exports', exports, 2), 'formatters', 0), 'O', J$.T(1929, function (v) {
                jalangiLabel147:
                    while (true) {
                        try {
                            J$.Fe(1905, arguments.callee, this, arguments);
                            arguments = J$.N(1913, 'arguments', arguments, 4);
                            v = J$.N(1921, 'v', v, 4);
                            J$.X1(1841, J$.P(1833, J$.G(1809, J$.R(1801, 'this', this, 0), 'inspectOpts', 0), 'colors', J$.G(1825, J$.R(1817, 'this', this, 0), 'useColors', 0), 0));
                            return J$.X1(1897, J$.Rt(1889, J$.M(1881, J$.R(1849, 'util', util, 1), 'inspect', 0)(J$.R(1857, 'v', v, 0), J$.G(1873, J$.R(1865, 'this', this, 0), 'inspectOpts', 0))));
                        } catch (J$e) {
                            J$.Ex(4233, J$e);
                        } finally {
                            if (J$.Fr(4241))
                                continue jalangiLabel147;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1905), 0));
            J$.X1(3889, J$.M(3881, J$.R(3857, 'exports', exports, 2), 'enable', 0)(J$.F(3873, J$.R(3865, 'load', load, 1), 0)()));
        } catch (J$e) {
            J$.Ex(4433, J$e);
        } finally {
            if (J$.Sr(4441)) {
                J$.L();
                continue jalangiLabel154;
            } else {
                J$.L();
                break jalangiLabel154;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
