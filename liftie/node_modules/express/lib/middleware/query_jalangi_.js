J$.iids = {"8":[10,9,10,38],"9":[1,20,1,27],"10":[10,9,10,23],"16":[14,9,14,65],"17":[1,28,1,32],"18":[10,9,10,38],"24":[14,9,14,65],"25":[1,20,1,33],"26":[14,9,14,27],"32":[18,13,18,23],"33":[1,20,1,33],"34":[14,31,14,65],"41":[1,20,1,33],"42":[18,13,18,23],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,13,4,20],"105":[4,21,4,34],"113":[4,13,4,35],"121":[4,13,4,35],"129":[4,13,4,35],"137":[5,16,5,23],"145":[5,24,5,34],"153":[5,16,5,35],"161":[5,16,5,35],"169":[5,16,5,35],"177":[6,10,6,17],"185":[6,18,6,22],"193":[6,10,6,23],"201":[6,10,6,23],"209":[6,10,6,23],"217":[7,1,7,7],"225":[8,16,8,21],"233":[8,22,8,24],"241":[8,26,8,33],"249":[8,16,8,34],"257":[8,16,8,34],"265":[8,16,8,34],"273":[9,22,9,24],"281":[9,22,9,30],"289":[9,22,9,30],"297":[9,22,9,30],"305":[10,16,10,23],"313":[10,28,10,38],"321":[11,22,11,29],"329":[11,22,11,29],"337":[11,9,11,30],"345":[12,16,12,25],"353":[12,16,12,25],"361":[12,9,12,26],"369":[14,9,14,13],"377":[14,18,14,27],"385":[14,31,14,35],"393":[14,31,14,51],"401":[14,56,14,65],"409":[15,9,15,13],"417":[15,32,15,36],"425":[15,9,15,36],"433":[15,9,15,37],"441":[18,14,18,17],"449":[18,14,18,23],"457":[19,23,19,31],"465":[19,32,19,35],"473":[19,23,19,36],"481":[19,23,19,42],"489":[19,23,19,42],"497":[19,23,19,42],"505":[20,13,20,16],"513":[20,25,20,35],"521":[20,36,20,39],"529":[20,41,20,45],"537":[20,25,20,46],"545":[20,13,20,46],"553":[20,13,20,47],"561":[22,9,22,13],"569":[22,9,22,15],"577":[22,9,22,16],"585":[17,12,23,6],"593":[17,12,23,6],"601":[17,12,23,6],"609":[17,12,23,6],"617":[17,12,23,6],"625":[17,12,23,6],"633":[17,12,23,6],"641":[17,12,23,6],"649":[17,12,23,6],"657":[17,5,23,7],"665":[7,18,24,2],"673":[7,18,24,2],"681":[7,18,24,2],"689":[7,18,24,2],"697":[7,18,24,2],"705":[7,18,24,2],"713":[7,18,24,2],"721":[7,1,24,2],"729":[7,1,24,3],"737":[1,1,24,3],"745":[1,1,24,3],"753":[1,1,24,3],"761":[1,1,24,3],"769":[1,1,24,3],"777":[1,1,24,3],"785":[10,5,13,6],"793":[14,5,16,6],"801":[18,9,21,10],"809":[17,12,23,6],"817":[17,12,23,6],"825":[7,18,24,2],"833":[7,18,24,2],"841":[1,1,24,3],"849":[1,1,24,3],"nBranches":8,"originalCodeFileName":"/home/blake/ExpoSE/Targets/liftie/node_modules/express/lib/middleware/query.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/liftie/node_modules/express/lib/middleware/query_jalangi_.js","code":"/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar merge = require('utils-merge')\nvar parseUrl = require('parseurl');\nvar qs = require('qs');\n\n/**\n * @param {Object} options\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function query(options) {\n  var opts = merge({}, options)\n  var queryparse = qs.parse;\n\n  if (typeof options === 'function') {\n    queryparse = options;\n    opts = undefined;\n  }\n\n  if (opts !== undefined && opts.allowPrototypes === undefined) {\n    // back-compat for qs module\n    opts.allowPrototypes = true;\n  }\n\n  return function query(req, res, next){\n    if (!req.query) {\n      var val = parseUrl(req).query;\n      req.query = queryparse(val, opts);\n    }\n\n    next();\n  };\n};\n"};
jalangiLabel270:
    while (true) {
        try {
            J$.Se(737, '/home/blake/ExpoSE/Targets/liftie/node_modules/express/lib/middleware/query_jalangi_.js', '/home/blake/ExpoSE/Targets/liftie/node_modules/express/lib/middleware/query.js');
            J$.N(745, '__secret__S$', __secret__S$, 0);
            J$.N(753, '__secret__traits__', __secret__traits__, 0);
            J$.N(761, 'merge', merge, 0);
            J$.N(769, 'parseUrl', parseUrl, 0);
            J$.N(777, 'qs', qs, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var merge = J$.X1(129, J$.W(121, 'merge', J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'utils-merge', 21, false)), merge, 3));
            var parseUrl = J$.X1(169, J$.W(161, 'parseUrl', J$.F(153, J$.R(137, 'require', require, 2), 0)(J$.T(145, 'parseurl', 21, false)), parseUrl, 3));
            var qs = J$.X1(209, J$.W(201, 'qs', J$.F(193, J$.R(177, 'require', require, 2), 0)(J$.T(185, 'qs', 21, false)), qs, 3));
            J$.X1(729, J$.P(721, J$.R(217, 'module', module, 2), 'exports', J$.T(713, function query(options) {
                jalangiLabel269:
                    while (true) {
                        try {
                            J$.Fe(665, arguments.callee, this, arguments);
                            arguments = J$.N(673, 'arguments', arguments, 4);
                            query = J$.N(681, 'query', query, 0);
                            options = J$.N(689, 'options', options, 4);
                            J$.N(697, 'opts', opts, 0);
                            J$.N(705, 'queryparse', queryparse, 0);
                            var opts = J$.X1(265, J$.W(257, 'opts', J$.F(249, J$.R(225, 'merge', merge, 1), 0)(J$.T(233, {}, 11, false), J$.R(241, 'options', options, 0)), opts, 1));
                            var queryparse = J$.X1(297, J$.W(289, 'queryparse', J$.G(281, J$.R(273, 'qs', qs, 1), 'parse', 0), queryparse, 1));
                            if (J$.X1(785, J$.C(8, J$.B(18, '===', J$.U(10, 'typeof', J$.R(305, 'options', options, 0)), J$.T(313, 'function', 21, false), 0)))) {
                                J$.X1(337, queryparse = J$.W(329, 'queryparse', J$.R(321, 'options', options, 0), queryparse, 0));
                                J$.X1(361, opts = J$.W(353, 'opts', J$.T(345, undefined, 24, false), opts, 0));
                            }
                            if (J$.X1(793, J$.C(24, J$.C(16, J$.B(26, '!==', J$.R(369, 'opts', opts, 0), J$.T(377, undefined, 24, false), 0)) ? J$.B(34, '===', J$.G(393, J$.R(385, 'opts', opts, 0), 'allowPrototypes', 0), J$.T(401, undefined, 24, false), 0) : J$._()))) {
                                J$.X1(433, J$.P(425, J$.R(409, 'opts', opts, 0), 'allowPrototypes', J$.T(417, true, 23, false), 0));
                            }
                            return J$.X1(657, J$.Rt(649, J$.T(641, function query(req, res, next) {
                                jalangiLabel268:
                                    while (true) {
                                        try {
                                            J$.Fe(585, arguments.callee, this, arguments);
                                            arguments = J$.N(593, 'arguments', arguments, 4);
                                            query = J$.N(601, 'query', query, 0);
                                            req = J$.N(609, 'req', req, 4);
                                            res = J$.N(617, 'res', res, 4);
                                            next = J$.N(625, 'next', next, 4);
                                            J$.N(633, 'val', val, 0);
                                            if (J$.X1(801, J$.C(32, J$.U(42, '!', J$.G(449, J$.R(441, 'req', req, 0), 'query', 0))))) {
                                                var val = J$.X1(497, J$.W(489, 'val', J$.G(481, J$.F(473, J$.R(457, 'parseUrl', parseUrl, 1), 0)(J$.R(465, 'req', req, 0)), 'query', 0), val, 1));
                                                J$.X1(553, J$.P(545, J$.R(505, 'req', req, 0), 'query', J$.F(537, J$.R(513, 'queryparse', queryparse, 0), 0)(J$.R(521, 'val', val, 0), J$.R(529, 'opts', opts, 0)), 0));
                                            }
                                            J$.X1(577, J$.F(569, J$.R(561, 'next', next, 0), 0)());
                                        } catch (J$e) {
                                            J$.Ex(809, J$e);
                                        } finally {
                                            if (J$.Fr(817))
                                                continue jalangiLabel268;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 585)));
                        } catch (J$e) {
                            J$.Ex(825, J$e);
                        } finally {
                            if (J$.Fr(833))
                                continue jalangiLabel269;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 665), 0));
        } catch (J$e) {
            J$.Ex(841, J$e);
        } finally {
            if (J$.Sr(849)) {
                J$.L();
                continue jalangiLabel270;
            } else {
                J$.L();
                break jalangiLabel270;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
