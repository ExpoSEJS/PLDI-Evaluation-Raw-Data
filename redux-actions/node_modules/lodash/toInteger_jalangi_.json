{"8":[6,32,6,41],"9":[1,20,1,27],"10":[5,47,5,57],"16":[6,12,6,29],"17":[1,28,1,32],"18":[6,12,6,29],"25":[1,20,1,33],"26":[6,44,6,62],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,16,3,23],"89":[3,24,3,36],"97":[3,16,3,37],"105":[3,16,3,37],"113":[3,16,3,37],"121":[5,18,5,26],"129":[5,27,5,32],"137":[5,18,5,33],"145":[5,47,5,53],"153":[5,56,5,57],"161":[5,18,5,33],"169":[5,18,5,33],"177":[5,47,5,57],"185":[5,47,5,57],"193":[6,12,6,18],"201":[6,23,6,29],"209":[6,32,6,41],"217":[6,44,6,50],"225":[6,53,6,62],"233":[6,65,6,71],"241":[6,74,6,75],"249":[6,12,6,75],"257":[6,5,6,76],"265":[4,1,7,2],"273":[4,1,7,2],"281":[4,1,7,2],"289":[4,1,7,2],"297":[4,1,7,2],"305":[8,1,8,7],"313":[8,18,8,27],"321":[8,1,8,27],"329":[8,1,8,28],"337":[1,1,8,28],"345":[1,1,8,28],"353":[1,1,8,28],"361":[1,1,8,28],"369":[4,1,7,2],"377":[1,1,8,28],"385":[6,32,6,71],"393":[6,12,6,75],"401":[4,1,7,2],"409":[4,1,7,2],"417":[1,1,8,28],"425":[1,1,8,28],"nBranches":4,"originalCodeFileName":"/home/blake/ExpoSE/Targets/redux-actions/node_modules/lodash/toInteger.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/redux-actions/node_modules/lodash/toInteger_jalangi_.js","code":"var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n"}