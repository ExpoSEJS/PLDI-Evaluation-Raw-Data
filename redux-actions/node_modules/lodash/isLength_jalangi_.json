{"8":[5,12,5,50],"9":[1,20,1,27],"10":[5,12,5,24],"16":[5,12,5,68],"17":[1,28,1,32],"18":[5,12,5,36],"24":[5,12,5,97],"25":[1,20,1,33],"26":[5,48,5,50],"33":[1,20,1,33],"34":[5,40,5,50],"41":[1,20,1,33],"42":[5,54,5,63],"49":[2,26,2,38],"50":[5,54,5,68],"57":[2,26,2,45],"58":[5,72,5,97],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,24,3,40],"89":[3,24,3,40],"97":[3,24,3,40],"105":[5,19,5,24],"113":[5,28,5,36],"121":[5,40,5,45],"129":[5,49,5,50],"137":[5,54,5,59],"145":[5,62,5,63],"153":[5,67,5,68],"161":[5,72,5,77],"169":[5,81,5,97],"177":[5,12,5,97],"185":[5,5,5,98],"193":[4,1,6,2],"201":[4,1,6,2],"209":[4,1,6,2],"217":[7,1,7,7],"225":[7,18,7,26],"233":[7,1,7,26],"241":[7,1,7,27],"249":[1,1,7,27],"257":[1,1,7,27],"265":[1,1,7,27],"273":[1,1,7,27],"281":[4,1,6,2],"289":[1,1,7,27],"297":[4,1,6,2],"305":[4,1,6,2],"313":[1,1,7,27],"321":[1,1,7,27],"nBranches":6,"originalCodeFileName":"/home/blake/ExpoSE/Targets/redux-actions/node_modules/lodash/isLength.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/redux-actions/node_modules/lodash/isLength_jalangi_.js","code":"/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n"}