J$.iids = {"8":[4,30,4,43],"9":[1,20,1,27],"10":[4,17,4,19],"16":[5,12,5,28],"17":[1,28,1,32],"18":[4,30,4,43],"25":[1,20,1,33],"26":[5,12,5,19],"33":[1,20,1,33],"41":[1,20,1,33],"42":[5,12,5,28],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[4,18,4,19],"89":[4,30,4,35],"97":[4,39,4,43],"105":[4,46,4,47],"113":[4,50,4,55],"121":[4,50,4,62],"129":[4,73,4,78],"137":[4,79,4,85],"145":[4,73,4,86],"153":[4,17,4,19],"161":[4,17,4,19],"169":[4,30,4,62],"177":[4,30,4,62],"185":[4,73,4,86],"193":[4,73,4,86],"209":[5,14,5,19],"217":[5,12,5,19],"225":[5,22,5,28],"233":[6,9,6,15],"241":[6,16,6,21],"249":[6,25,6,33],"257":[6,34,6,39],"265":[6,40,6,45],"273":[6,34,6,46],"281":[6,48,6,53],"289":[6,55,6,60],"297":[6,25,6,61],"305":[6,9,6,61],"313":[6,9,6,62],"321":[8,12,8,18],"329":[8,12,8,18],"337":[8,5,8,19],"345":[3,1,9,2],"353":[3,1,9,2],"361":[3,1,9,2],"369":[3,1,9,2],"377":[3,1,9,2],"385":[3,1,9,2],"393":[3,1,9,2],"401":[10,1,10,7],"409":[10,18,10,26],"417":[10,1,10,26],"425":[10,1,10,27],"433":[1,1,10,27],"441":[1,1,10,27],"449":[1,1,10,27],"457":[3,1,9,2],"465":[1,1,10,27],"473":[4,30,4,62],"481":[5,5,7,6],"489":[3,1,9,2],"497":[3,1,9,2],"505":[1,1,10,27],"513":[1,1,10,27],"nBranches":4,"originalCodeFileName":"/home/blake/ExpoSE/Targets/redux-actions/node_modules/lodash/_arrayMap.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/redux-actions/node_modules/lodash/_arrayMap_jalangi_.js","code":"/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n"};
jalangiLabel122:
    while (true) {
        try {
            J$.Se(433, '/home/blake/ExpoSE/Targets/redux-actions/node_modules/lodash/_arrayMap_jalangi_.js', '/home/blake/ExpoSE/Targets/redux-actions/node_modules/lodash/_arrayMap.js');
            function arrayMap(array, iteratee) {
                jalangiLabel121:
                    while (true) {
                        try {
                            J$.Fe(345, arguments.callee, this, arguments);
                            arguments = J$.N(353, 'arguments', arguments, 4);
                            array = J$.N(361, 'array', array, 4);
                            iteratee = J$.N(369, 'iteratee', iteratee, 4);
                            J$.N(377, 'index', index, 0);
                            J$.N(385, 'length', length, 0);
                            J$.N(393, 'result', result, 0);
                            var index = J$.X1(161, J$.W(153, 'index', J$.U(10, '-', J$.T(81, 1, 22, false)), index, 1)), length = J$.X1(177, J$.W(169, 'length', J$.X1(473, J$.C(8, J$.B(18, '==', J$.R(89, 'array', array, 0), J$.T(97, null, 25, false), 0))) ? J$.T(105, 0, 22, false) : J$.G(121, J$.R(113, 'array', array, 0), 'length', 0), length, 1)), result = J$.X1(193, J$.W(185, 'result', J$.F(145, J$.R(129, 'Array', Array, 2), 0)(J$.R(137, 'length', length, 0)), result, 1));
                            while (J$.X1(481, J$.C(16, J$.B(42, '<', index = J$.W(217, 'index', J$.B(34, '+', J$.U(26, '+', J$.R(209, 'index', index, 0)), J$.T(201, 1, 22, false), 0), index, 0), J$.R(225, 'length', length, 0), 0)))) {
                                J$.X1(313, J$.P(305, J$.R(233, 'result', result, 0), J$.R(241, 'index', index, 0), J$.F(297, J$.R(249, 'iteratee', iteratee, 0), 0)(J$.G(273, J$.R(257, 'array', array, 0), J$.R(265, 'index', index, 0), 4), J$.R(281, 'index', index, 0), J$.R(289, 'array', array, 0)), 2));
                            }
                            return J$.X1(337, J$.Rt(329, J$.R(321, 'result', result, 0)));
                        } catch (J$e) {
                            J$.Ex(489, J$e);
                        } finally {
                            if (J$.Fr(497))
                                continue jalangiLabel121;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(441, '__secret__S$', __secret__S$, 0);
            J$.N(449, '__secret__traits__', __secret__traits__, 0);
            arrayMap = J$.N(465, 'arrayMap', J$.T(457, arrayMap, 12, false, 345), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(425, J$.P(417, J$.R(401, 'module', module, 2), 'exports', J$.R(409, 'arrayMap', arrayMap, 1), 0));
        } catch (J$e) {
            J$.Ex(505, J$e);
        } finally {
            if (J$.Sr(513)) {
                J$.L();
                continue jalangiLabel122;
            } else {
                J$.L();
                break jalangiLabel122;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
