{"8":[10,12,10,37],"9":[1,20,1,27],"10":[16,22,16,35],"16":[14,14,14,26],"17":[1,28,1,32],"18":[16,9,16,35],"24":[16,9,16,35],"25":[1,20,1,33],"26":[20,24,20,53],"32":[19,13,19,31],"33":[1,20,1,33],"34":[20,24,20,84],"40":[23,12,23,24],"41":[1,20,1,33],"42":[23,27,23,51],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,11,4,17],"105":[4,11,4,27],"113":[4,11,4,42],"121":[4,11,4,42],"129":[4,11,4,42],"137":[6,12,6,30],"145":[6,31,6,36],"153":[6,45,6,50],"161":[6,52,6,55],"169":[6,31,6,56],"171":[6,31,6,44],"177":[6,12,6,57],"185":[6,12,6,57],"193":[6,5,6,58],"201":[5,1,7,2],"209":[5,1,7,2],"217":[5,1,7,2],"225":[9,18,9,39],"233":[9,50,9,52],"241":[9,18,9,39],"249":[9,18,9,39],"257":[9,50,9,52],"265":[9,50,9,52],"273":[10,19,10,25],"281":[10,31,10,36],"289":[10,19,10,37],"291":[10,19,10,30],"297":[10,19,10,37],"305":[10,39,10,45],"313":[10,46,10,52],"321":[10,53,10,57],"329":[10,58,10,59],"337":[10,53,10,60],"345":[10,46,10,61],"353":[10,65,10,71],"361":[10,72,10,76],"369":[10,77,10,78],"377":[10,72,10,79],"385":[10,65,10,80],"393":[10,39,10,80],"401":[11,12,11,18],"409":[11,12,11,18],"417":[11,5,11,19],"425":[8,1,12,2],"433":[8,1,12,2],"441":[8,1,12,2],"449":[8,1,12,2],"457":[8,1,12,2],"465":[8,1,12,2],"473":[14,14,14,20],"481":[14,24,14,26],"489":[14,14,14,26],"497":[14,5,14,27],"505":[15,17,15,19],"513":[15,17,15,19],"521":[15,17,15,19],"529":[16,9,16,17],"537":[16,29,16,35],"545":[17,18,17,21],"553":[17,18,17,21],"561":[17,9,17,22],"569":[18,21,18,24],"577":[19,13,19,16],"585":[19,22,19,25],"593":[19,27,19,30],"601":[19,13,19,31],"603":[19,13,19,21],"609":[20,13,20,18],"617":[20,24,20,42],"625":[20,43,20,46],"633":[20,24,20,47],"641":[20,50,20,53],"649":[20,56,20,74],"657":[20,75,20,78],"665":[20,79,20,82],"673":[20,75,20,83],"681":[20,56,20,84],"689":[20,13,20,85],"691":[20,13,20,23],"697":[20,13,20,86],"705":[18,21,18,24],"713":[18,5,22,6],"721":[18,5,22,6],"729":[23,12,23,17],"737":[23,12,23,24],"745":[23,27,23,33],"753":[23,36,23,41],"761":[23,47,23,50],"769":[23,36,23,51],"771":[23,36,23,46],"777":[23,54,23,56],"785":[23,12,23,56],"793":[23,5,23,57],"801":[13,1,24,2],"809":[13,1,24,2],"817":[13,1,24,2],"825":[13,1,24,2],"833":[13,1,24,2],"841":[13,1,24,2],"849":[25,1,25,8],"857":[25,21,25,35],"865":[25,1,25,35],"873":[25,1,25,36],"881":[26,1,26,8],"889":[26,17,26,28],"897":[26,1,26,28],"905":[26,1,26,29],"913":[1,1,26,29],"921":[1,1,26,29],"929":[1,1,26,29],"937":[1,1,26,29],"945":[5,1,7,2],"953":[1,1,26,29],"961":[8,1,12,2],"969":[1,1,26,29],"977":[13,1,24,2],"985":[1,1,26,29],"993":[5,1,7,2],"1001":[5,1,7,2],"1009":[10,5,10,82],"1017":[10,5,10,82],"1025":[8,1,12,2],"1033":[8,1,12,2],"1041":[16,5,17,22],"1049":[19,9,21,10],"1057":[23,12,23,56],"1065":[13,1,24,2],"1073":[13,1,24,2],"1081":[1,1,26,29],"1089":[1,1,26,29],"nBranches":10,"originalCodeFileName":"/home/arran/projects/Targets/url-parse/node_modules/querystringify/index.js","instrumentedCodeFileName":"/home/arran/projects/Targets/url-parse/node_modules/querystringify/index_jalangi_.js","code":"'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  return decodeURIComponent(input.replace(/\\+/g, ' '));\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  //\n  // Little nifty parsing hack, leverage the fact that RegExp.exec increments\n  // the lastIndex property so we can continue executing this loop until we've\n  // parsed all results.\n  //\n  for (;\n    part = parser.exec(query);\n    result[decode(part[1])] = decode(part[2])\n  );\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = [];\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      pairs.push(encodeURIComponent(key) +'='+ encodeURIComponent(obj[key]));\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n"}