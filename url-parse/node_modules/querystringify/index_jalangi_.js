J$.iids = {"8":[10,12,10,37],"9":[1,20,1,27],"10":[16,22,16,35],"16":[14,14,14,26],"17":[1,28,1,32],"18":[16,9,16,35],"24":[16,9,16,35],"25":[1,20,1,33],"26":[20,24,20,53],"32":[19,13,19,31],"33":[1,20,1,33],"34":[20,24,20,84],"40":[23,12,23,24],"41":[1,20,1,33],"42":[23,27,23,51],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,11,4,17],"105":[4,11,4,27],"113":[4,11,4,42],"121":[4,11,4,42],"129":[4,11,4,42],"137":[6,12,6,30],"145":[6,31,6,36],"153":[6,45,6,50],"161":[6,52,6,55],"169":[6,31,6,56],"171":[6,31,6,44],"177":[6,12,6,57],"185":[6,12,6,57],"193":[6,5,6,58],"201":[5,1,7,2],"209":[5,1,7,2],"217":[5,1,7,2],"225":[9,18,9,39],"233":[9,50,9,52],"241":[9,18,9,39],"249":[9,18,9,39],"257":[9,50,9,52],"265":[9,50,9,52],"273":[10,19,10,25],"281":[10,31,10,36],"289":[10,19,10,37],"291":[10,19,10,30],"297":[10,19,10,37],"305":[10,39,10,45],"313":[10,46,10,52],"321":[10,53,10,57],"329":[10,58,10,59],"337":[10,53,10,60],"345":[10,46,10,61],"353":[10,65,10,71],"361":[10,72,10,76],"369":[10,77,10,78],"377":[10,72,10,79],"385":[10,65,10,80],"393":[10,39,10,80],"401":[11,12,11,18],"409":[11,12,11,18],"417":[11,5,11,19],"425":[8,1,12,2],"433":[8,1,12,2],"441":[8,1,12,2],"449":[8,1,12,2],"457":[8,1,12,2],"465":[8,1,12,2],"473":[14,14,14,20],"481":[14,24,14,26],"489":[14,14,14,26],"497":[14,5,14,27],"505":[15,17,15,19],"513":[15,17,15,19],"521":[15,17,15,19],"529":[16,9,16,17],"537":[16,29,16,35],"545":[17,18,17,21],"553":[17,18,17,21],"561":[17,9,17,22],"569":[18,21,18,24],"577":[19,13,19,16],"585":[19,22,19,25],"593":[19,27,19,30],"601":[19,13,19,31],"603":[19,13,19,21],"609":[20,13,20,18],"617":[20,24,20,42],"625":[20,43,20,46],"633":[20,24,20,47],"641":[20,50,20,53],"649":[20,56,20,74],"657":[20,75,20,78],"665":[20,79,20,82],"673":[20,75,20,83],"681":[20,56,20,84],"689":[20,13,20,85],"691":[20,13,20,23],"697":[20,13,20,86],"705":[18,21,18,24],"713":[18,5,22,6],"721":[18,5,22,6],"729":[23,12,23,17],"737":[23,12,23,24],"745":[23,27,23,33],"753":[23,36,23,41],"761":[23,47,23,50],"769":[23,36,23,51],"771":[23,36,23,46],"777":[23,54,23,56],"785":[23,12,23,56],"793":[23,5,23,57],"801":[13,1,24,2],"809":[13,1,24,2],"817":[13,1,24,2],"825":[13,1,24,2],"833":[13,1,24,2],"841":[13,1,24,2],"849":[25,1,25,8],"857":[25,21,25,35],"865":[25,1,25,35],"873":[25,1,25,36],"881":[26,1,26,8],"889":[26,17,26,28],"897":[26,1,26,28],"905":[26,1,26,29],"913":[1,1,26,29],"921":[1,1,26,29],"929":[1,1,26,29],"937":[1,1,26,29],"945":[5,1,7,2],"953":[1,1,26,29],"961":[8,1,12,2],"969":[1,1,26,29],"977":[13,1,24,2],"985":[1,1,26,29],"993":[5,1,7,2],"1001":[5,1,7,2],"1009":[10,5,10,82],"1017":[10,5,10,82],"1025":[8,1,12,2],"1033":[8,1,12,2],"1041":[16,5,17,22],"1049":[19,9,21,10],"1057":[23,12,23,56],"1065":[13,1,24,2],"1073":[13,1,24,2],"1081":[1,1,26,29],"1089":[1,1,26,29],"nBranches":10,"originalCodeFileName":"/home/arran/projects/Targets/url-parse/node_modules/querystringify/index.js","instrumentedCodeFileName":"/home/arran/projects/Targets/url-parse/node_modules/querystringify/index_jalangi_.js","code":"'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  return decodeURIComponent(input.replace(/\\+/g, ' '));\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  //\n  // Little nifty parsing hack, leverage the fact that RegExp.exec increments\n  // the lastIndex property so we can continue executing this loop until we've\n  // parsed all results.\n  //\n  for (;\n    part = parser.exec(query);\n    result[decode(part[1])] = decode(part[2])\n  );\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = [];\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (var key in obj) {\n    if (has.call(obj, key)) {\n      pairs.push(encodeURIComponent(key) +'='+ encodeURIComponent(obj[key]));\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n"};
jalangiLabel54:
    while (true) {
        try {
            J$.Se(913, '/home/arran/projects/Targets/url-parse/node_modules/querystringify/index_jalangi_.js', '/home/arran/projects/Targets/url-parse/node_modules/querystringify/index.js');
            function decode(input) {
                jalangiLabel51:
                    while (true) {
                        try {
                            J$.Fe(201, arguments.callee, this, arguments);
                            arguments = J$.N(209, 'arguments', arguments, 4);
                            input = J$.N(217, 'input', input, 4);
                            return J$.X1(193, J$.Rt(185, J$.F(177, J$.R(137, 'decodeURIComponent', decodeURIComponent, 2), 0)(J$.M(169, J$.R(145, 'input', input, 0), 'replace', 0)(J$.T(153, /\+/g, 14, false), J$.T(161, ' ', 21, false)))));
                        } catch (J$e) {
                            J$.Ex(993, J$e);
                        } finally {
                            if (J$.Fr(1001))
                                continue jalangiLabel51;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function querystring(query) {
                jalangiLabel52:
                    while (true) {
                        try {
                            J$.Fe(425, arguments.callee, this, arguments);
                            arguments = J$.N(433, 'arguments', arguments, 4);
                            query = J$.N(441, 'query', query, 4);
                            J$.N(449, 'parser', parser, 0);
                            J$.N(457, 'result', result, 0);
                            J$.N(465, 'part', part, 0);
                            var parser = J$.X1(249, J$.W(241, 'parser', J$.T(225, /([^=?&]+)=?([^&]*)/g, 14, false), parser, 1)), result = J$.X1(265, J$.W(257, 'result', J$.T(233, {}, 11, false), result, 1)), part;
                            for (; J$.X1(1009, J$.C(8, part = J$.W(297, 'part', J$.M(289, J$.R(273, 'parser', parser, 0), 'exec', 0)(J$.R(281, 'query', query, 0)), part, 0))); J$.X1(1017, J$.P(393, J$.R(305, 'result', result, 0), J$.F(345, J$.R(313, 'decode', decode, 1), 0)(J$.G(337, J$.R(321, 'part', part, 0), J$.T(329, 1, 22, false), 4)), J$.F(385, J$.R(353, 'decode', decode, 1), 0)(J$.G(377, J$.R(361, 'part', part, 0), J$.T(369, 2, 22, false), 4)), 2)));
                            return J$.X1(417, J$.Rt(409, J$.R(401, 'result', result, 0)));
                        } catch (J$e) {
                            J$.Ex(1025, J$e);
                        } finally {
                            if (J$.Fr(1033))
                                continue jalangiLabel52;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function querystringify(obj, prefix) {
                jalangiLabel53:
                    while (true) {
                        try {
                            J$.Fe(801, arguments.callee, this, arguments);
                            arguments = J$.N(809, 'arguments', arguments, 4);
                            obj = J$.N(817, 'obj', obj, 4);
                            prefix = J$.N(825, 'prefix', prefix, 4);
                            J$.N(833, 'pairs', pairs, 0);
                            J$.N(841, 'key', key, 0);
                            J$.X1(497, prefix = J$.W(489, 'prefix', J$.C(16, J$.R(473, 'prefix', prefix, 0)) ? J$._() : J$.T(481, '', 21, false), prefix, 0));
                            var pairs = J$.X1(521, J$.W(513, 'pairs', J$.T(505, [], 10, false), pairs, 1));
                            if (J$.X1(1041, J$.C(24, J$.B(18, '!==', J$.T(529, 'string', 21, false), J$.U(10, 'typeof', J$.R(537, 'prefix', prefix, 0)), 0))))
                                J$.X1(561, prefix = J$.W(553, 'prefix', J$.T(545, '?', 21, false), prefix, 0));
                            for (J$._tm_p in J$.H(705, J$.R(569, 'obj', obj, 0))) {
                                var key = J$.X1(721, J$.W(713, 'key', J$._tm_p, key, 1));
                                {
                                    {
                                        if (J$.X1(1049, J$.C(32, J$.M(601, J$.R(577, 'has', has, 1), 'call', 0)(J$.R(585, 'obj', obj, 0), J$.R(593, 'key', key, 0))))) {
                                            J$.X1(697, J$.M(689, J$.R(609, 'pairs', pairs, 0), 'push', 0)(J$.B(34, '+', J$.B(26, '+', J$.F(633, J$.R(617, 'encodeURIComponent', encodeURIComponent, 2), 0)(J$.R(625, 'key', key, 0)), J$.T(641, '=', 21, false), 0), J$.F(681, J$.R(649, 'encodeURIComponent', encodeURIComponent, 2), 0)(J$.G(673, J$.R(657, 'obj', obj, 0), J$.R(665, 'key', key, 0), 4)), 0)));
                                        }
                                    }
                                }
                            }
                            return J$.X1(793, J$.Rt(785, J$.X1(1057, J$.C(40, J$.G(737, J$.R(729, 'pairs', pairs, 0), 'length', 0))) ? J$.B(42, '+', J$.R(745, 'prefix', prefix, 0), J$.M(769, J$.R(753, 'pairs', pairs, 0), 'join', 0)(J$.T(761, '&', 21, false)), 0) : J$.T(777, '', 21, false)));
                        } catch (J$e) {
                            J$.Ex(1065, J$e);
                        } finally {
                            if (J$.Fr(1073))
                                continue jalangiLabel53;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(921, '__secret__S$', __secret__S$, 0);
            J$.N(929, '__secret__traits__', __secret__traits__, 0);
            J$.N(937, 'has', has, 0);
            decode = J$.N(953, 'decode', J$.T(945, decode, 12, false, 201), 0);
            querystring = J$.N(969, 'querystring', J$.T(961, querystring, 12, false, 425), 0);
            querystringify = J$.N(985, 'querystringify', J$.T(977, querystringify, 12, false, 801), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var has = J$.X1(129, J$.W(121, 'has', J$.G(113, J$.G(105, J$.R(97, 'Object', Object, 2), 'prototype', 0), 'hasOwnProperty', 0), has, 3));
            J$.X1(873, J$.P(865, J$.R(849, 'exports', exports, 2), 'stringify', J$.R(857, 'querystringify', querystringify, 1), 0));
            J$.X1(905, J$.P(897, J$.R(881, 'exports', exports, 2), 'parse', J$.R(889, 'querystring', querystring, 1), 0));
        } catch (J$e) {
            J$.Ex(1081, J$e);
        } finally {
            if (J$.Sr(1089)) {
                J$.L();
                continue jalangiLabel54;
            } else {
                J$.L();
                break jalangiLabel54;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
