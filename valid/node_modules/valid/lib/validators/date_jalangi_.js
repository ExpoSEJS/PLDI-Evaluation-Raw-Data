J$.iids = {"8":[14,23,14,73],"9":[1,20,1,27],"10":[14,23,14,40],"16":[15,9,15,43],"17":[1,28,1,32],"18":[14,44,14,73],"24":[15,9,15,43],"25":[1,20,1,33],"26":[15,9,15,21],"32":[22,9,22,59],"33":[1,20,1,33],"34":[15,25,15,43],"40":[28,13,28,22],"41":[1,20,1,33],"42":[22,28,22,59],"48":[22,9,22,59],"49":[2,26,2,38],"50":[28,13,28,22],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,16,4,23],"105":[4,24,4,30],"113":[4,16,4,31],"121":[4,16,4,40],"129":[4,16,4,40],"137":[4,16,4,40],"145":[5,21,5,28],"153":[5,29,5,52],"161":[5,21,5,53],"169":[5,21,5,53],"177":[5,21,5,53],"185":[7,5,7,18],"193":[7,24,7,28],"201":[7,5,7,29],"203":[7,5,7,23],"209":[7,5,7,30],"217":[6,21,8,2],"225":[6,21,8,2],"233":[6,21,8,2],"241":[6,21,8,2],"249":[6,21,8,2],"257":[9,1,9,9],"265":[9,10,9,23],"273":[9,25,9,38],"281":[9,1,9,39],"289":[9,1,9,40],"297":[10,1,10,14],"305":[10,1,10,24],"313":[10,32,10,36],"321":[10,1,10,36],"329":[10,1,10,37],"337":[11,1,11,14],"345":[11,1,11,24],"353":[11,32,11,38],"361":[11,1,11,38],"369":[11,1,11,39],"377":[12,1,12,14],"385":[12,1,12,24],"393":[12,39,12,45],"401":[12,1,12,45],"409":[12,1,12,46],"417":[13,1,13,14],"425":[13,1,13,24],"433":[14,23,14,26],"441":[14,23,14,32],"449":[14,36,14,40],"457":[14,44,14,47],"465":[14,44,14,53],"473":[14,44,14,65],"481":[14,69,14,73],"489":[14,23,14,73],"497":[14,23,14,73],"505":[15,10,15,21],"513":[15,26,15,29],"521":[15,26,15,43],"529":[16,23,16,27],"537":[16,41,16,44],"545":[16,23,16,45],"547":[16,23,16,40],"553":[16,23,16,45],"561":[16,9,16,46],"569":[18,12,18,23],"577":[18,12,18,23],"585":[18,5,18,24],"593":[13,39,19,2],"601":[13,39,19,2],"609":[13,39,19,2],"617":[13,39,19,2],"625":[13,39,19,2],"633":[13,1,19,2],"641":[13,1,19,3],"649":[20,1,20,14],"657":[20,1,20,24],"665":[21,19,21,24],"673":[21,19,21,24],"681":[21,19,21,24],"689":[22,9,22,12],"697":[22,9,22,24],"699":[22,9,22,22],"705":[22,28,22,31],"713":[22,28,22,37],"721":[22,28,22,49],"729":[22,53,22,59],"737":[25,21,25,25],"745":[25,26,25,29],"753":[25,26,25,35],"761":[25,17,25,36],"769":[25,17,25,36],"777":[25,13,25,37],"785":[26,11,27,10],"793":[28,13,28,14],"801":[28,18,28,22],"809":[29,23,29,27],"817":[29,23,29,27],"825":[29,13,29,28],"833":[30,13,30,16],"841":[30,30,30,31],"849":[30,13,30,32],"851":[30,13,30,29],"857":[30,13,30,33],"865":[33,12,33,19],"873":[33,12,33,19],"881":[33,5,33,20],"889":[20,40,34,2],"897":[20,40,34,2],"905":[20,40,34,2],"913":[20,40,34,2],"921":[20,40,34,2],"929":[20,40,34,2],"937":[20,1,34,2],"945":[20,1,34,3],"953":[35,1,35,14],"961":[35,26,35,39],"969":[35,22,35,41],"977":[35,1,35,41],"985":[35,1,35,42],"993":[36,1,36,14],"1001":[37,12,37,25],"1009":[37,12,37,30],"1017":[37,12,37,30],"1025":[37,5,37,31],"1033":[36,26,38,2],"1041":[36,26,38,2],"1049":[36,26,38,2],"1057":[36,26,38,2],"1065":[36,1,38,2],"1073":[36,1,38,3],"1081":[39,1,39,7],"1089":[39,18,39,31],"1097":[39,1,39,31],"1105":[39,1,39,32],"1113":[1,1,39,32],"1121":[1,1,39,32],"1129":[1,1,39,32],"1137":[1,1,39,32],"1145":[1,1,39,32],"1153":[1,1,39,32],"1161":[6,21,8,2],"1169":[6,21,8,2],"1177":[15,5,17,6],"1185":[13,39,19,2],"1193":[13,39,19,2],"1201":[28,9,31,10],"1209":[22,5,32,6],"1217":[20,40,34,2],"1225":[20,40,34,2],"1233":[36,26,38,2],"1241":[36,26,38,2],"1249":[1,1,39,32],"1257":[1,1,39,32],"nBranches":12,"originalCodeFileName":"/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/date.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/date_jalangi_.js","code":"\"use strict\";\nvar inherits = require('util').inherits;\nvar TypeValidator = require('./core/type_validator');\n\n\nvar DateValidator = function () {\n\tTypeValidator.call(this);\n};\ninherits(DateValidator, TypeValidator);\n\nDateValidator.prototype.type = Date;\nDateValidator.prototype.code = 'date';\nDateValidator.prototype.expectedStr = 'date';\n\nDateValidator.prototype.isTypeValid = function (ctx) {\n\tvar isTypeValid = (ctx.value != null && ctx.value.constructor == Date);\n\tif (!isTypeValid && !ctx.isTransformed) {\n\t\tisTypeValid = this.tryTransform(ctx);\n\t}\n\treturn isTypeValid;\n};\n\nDateValidator.prototype.tryTransform = function (ctx) {\n\tvar isValid = false;\n\tif (ctx.isStrMode() && ctx.value.constructor == String) {\n\t\tvar v;\n\t\ttry {\n\t\t\tv = new Date(ctx.value);\n\t\t}\n\t\tcatch (err) {\n\t\t}\n\t\tif (v != null) {\n\t\t\tisValid = true;\n\t\t\tctx.setTransform(v);\n\t\t}\n\t}\n\treturn isValid;\n};\n\nDateValidator.date = new DateValidator();\n\nDateValidator.getShort = function (corrector) {\n\treturn DateValidator.date;\n};\n\n\nmodule.exports = DateValidator;\n"};
jalangiLabel226:
    while (true) {
        try {
            J$.Se(1113, '/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/date_jalangi_.js', '/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/date.js');
            J$.N(1121, '__secret__S$', __secret__S$, 0);
            J$.N(1129, '__secret__traits__', __secret__traits__, 0);
            J$.N(1137, 'inherits', inherits, 0);
            J$.N(1145, 'TypeValidator', TypeValidator, 0);
            J$.N(1153, 'DateValidator', DateValidator, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var inherits = J$.X1(137, J$.W(129, 'inherits', J$.G(121, J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'util', 21, false)), 'inherits', 0), inherits, 3));
            var TypeValidator = J$.X1(177, J$.W(169, 'TypeValidator', J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, './core/type_validator', 21, false)), TypeValidator, 3));
            var DateValidator = J$.X1(249, J$.W(241, 'DateValidator', J$.T(233, function () {
                jalangiLabel222:
                    while (true) {
                        try {
                            J$.Fe(217, arguments.callee, this, arguments);
                            arguments = J$.N(225, 'arguments', arguments, 4);
                            J$.X1(209, J$.M(201, J$.R(185, 'TypeValidator', TypeValidator, 1), 'call', 0)(J$.R(193, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(1161, J$e);
                        } finally {
                            if (J$.Fr(1169))
                                continue jalangiLabel222;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 217), DateValidator, 3));
            J$.X1(289, J$.F(281, J$.R(257, 'inherits', inherits, 1), 0)(J$.R(265, 'DateValidator', DateValidator, 1), J$.R(273, 'TypeValidator', TypeValidator, 1)));
            J$.X1(329, J$.P(321, J$.G(305, J$.R(297, 'DateValidator', DateValidator, 1), 'prototype', 0), 'type', J$.R(313, 'Date', Date, 2), 0));
            J$.X1(369, J$.P(361, J$.G(345, J$.R(337, 'DateValidator', DateValidator, 1), 'prototype', 0), 'code', J$.T(353, 'date', 21, false), 0));
            J$.X1(409, J$.P(401, J$.G(385, J$.R(377, 'DateValidator', DateValidator, 1), 'prototype', 0), 'expectedStr', J$.T(393, 'date', 21, false), 0));
            J$.X1(641, J$.P(633, J$.G(425, J$.R(417, 'DateValidator', DateValidator, 1), 'prototype', 0), 'isTypeValid', J$.T(625, function (ctx) {
                jalangiLabel223:
                    while (true) {
                        try {
                            J$.Fe(593, arguments.callee, this, arguments);
                            arguments = J$.N(601, 'arguments', arguments, 4);
                            ctx = J$.N(609, 'ctx', ctx, 4);
                            J$.N(617, 'isTypeValid', isTypeValid, 0);
                            var isTypeValid = J$.X1(497, J$.W(489, 'isTypeValid', J$.C(8, J$.B(10, '!=', J$.G(441, J$.R(433, 'ctx', ctx, 0), 'value', 0), J$.T(449, null, 25, false), 0)) ? J$.B(18, '==', J$.G(473, J$.G(465, J$.R(457, 'ctx', ctx, 0), 'value', 0), 'constructor', 0), J$.R(481, 'Date', Date, 2), 0) : J$._(), isTypeValid, 1));
                            if (J$.X1(1177, J$.C(24, J$.C(16, J$.U(26, '!', J$.R(505, 'isTypeValid', isTypeValid, 0))) ? J$.U(34, '!', J$.G(521, J$.R(513, 'ctx', ctx, 0), 'isTransformed', 0)) : J$._()))) {
                                J$.X1(561, isTypeValid = J$.W(553, 'isTypeValid', J$.M(545, J$.R(529, 'this', this, 0), 'tryTransform', 0)(J$.R(537, 'ctx', ctx, 0)), isTypeValid, 0));
                            }
                            return J$.X1(585, J$.Rt(577, J$.R(569, 'isTypeValid', isTypeValid, 0)));
                        } catch (J$e) {
                            J$.Ex(1185, J$e);
                        } finally {
                            if (J$.Fr(1193))
                                continue jalangiLabel223;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 593), 0));
            J$.X1(945, J$.P(937, J$.G(657, J$.R(649, 'DateValidator', DateValidator, 1), 'prototype', 0), 'tryTransform', J$.T(929, function (ctx) {
                jalangiLabel224:
                    while (true) {
                        try {
                            J$.Fe(889, arguments.callee, this, arguments);
                            arguments = J$.N(897, 'arguments', arguments, 4);
                            ctx = J$.N(905, 'ctx', ctx, 4);
                            J$.N(913, 'isValid', isValid, 0);
                            J$.N(921, 'v', v, 0);
                            var isValid = J$.X1(681, J$.W(673, 'isValid', J$.T(665, false, 23, false), isValid, 1));
                            if (J$.X1(1209, J$.C(48, J$.C(32, J$.M(697, J$.R(689, 'ctx', ctx, 0), 'isStrMode', 0)()) ? J$.B(42, '==', J$.G(721, J$.G(713, J$.R(705, 'ctx', ctx, 0), 'value', 0), 'constructor', 0), J$.R(729, 'String', String, 2), 0) : J$._()))) {
                                var v;
                                try {
                                    J$.X1(777, v = J$.W(769, 'v', J$.F(761, J$.R(737, 'Date', Date, 2), 1)(J$.G(753, J$.R(745, 'ctx', ctx, 0), 'value', 0)), v, 0));
                                } catch (err) {
                                    err = J$.N(785, 'err', err, 1);
                                }
                                if (J$.X1(1201, J$.C(40, J$.B(50, '!=', J$.R(793, 'v', v, 0), J$.T(801, null, 25, false), 0)))) {
                                    J$.X1(825, isValid = J$.W(817, 'isValid', J$.T(809, true, 23, false), isValid, 0));
                                    J$.X1(857, J$.M(849, J$.R(833, 'ctx', ctx, 0), 'setTransform', 0)(J$.R(841, 'v', v, 0)));
                                }
                            }
                            return J$.X1(881, J$.Rt(873, J$.R(865, 'isValid', isValid, 0)));
                        } catch (J$e) {
                            J$.Ex(1217, J$e);
                        } finally {
                            if (J$.Fr(1225))
                                continue jalangiLabel224;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 889), 0));
            J$.X1(985, J$.P(977, J$.R(953, 'DateValidator', DateValidator, 1), 'date', J$.F(969, J$.R(961, 'DateValidator', DateValidator, 1), 1)(), 0));
            J$.X1(1073, J$.P(1065, J$.R(993, 'DateValidator', DateValidator, 1), 'getShort', J$.T(1057, function (corrector) {
                jalangiLabel225:
                    while (true) {
                        try {
                            J$.Fe(1033, arguments.callee, this, arguments);
                            arguments = J$.N(1041, 'arguments', arguments, 4);
                            corrector = J$.N(1049, 'corrector', corrector, 4);
                            return J$.X1(1025, J$.Rt(1017, J$.G(1009, J$.R(1001, 'DateValidator', DateValidator, 1), 'date', 0)));
                        } catch (J$e) {
                            J$.Ex(1233, J$e);
                        } finally {
                            if (J$.Fr(1241))
                                continue jalangiLabel225;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1033), 0));
            J$.X1(1105, J$.P(1097, J$.R(1081, 'module', module, 2), 'exports', J$.R(1089, 'DateValidator', DateValidator, 1), 0));
        } catch (J$e) {
            J$.Ex(1249, J$e);
        } finally {
            if (J$.Sr(1257)) {
                J$.L();
                continue jalangiLabel226;
            } else {
                J$.L();
                break jalangiLabel226;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
