J$.iids = {"8":[14,9,14,17],"9":[1,20,1,27],"10":[13,19,13,29],"17":[1,28,1,32],"18":[14,9,14,17],"25":[1,20,1,33],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,16,4,23],"105":[4,24,4,30],"113":[4,16,4,31],"121":[4,16,4,40],"129":[4,16,4,40],"137":[4,16,4,40],"145":[5,17,5,24],"153":[5,25,5,43],"161":[5,17,5,44],"169":[5,17,5,44],"177":[5,17,5,44],"185":[7,5,7,14],"193":[7,20,7,24],"201":[7,5,7,25],"203":[7,5,7,19],"209":[7,5,7,26],"217":[6,14,8,2],"225":[6,14,8,2],"233":[6,14,8,2],"241":[6,14,8,2],"249":[6,14,8,2],"257":[9,1,9,9],"265":[9,10,9,16],"273":[9,18,9,27],"281":[9,1,9,28],"289":[9,1,9,29],"297":[10,1,10,7],"305":[10,1,10,17],"313":[10,25,10,31],"321":[10,1,10,31],"329":[10,1,10,32],"337":[11,1,11,7],"345":[11,1,11,17],"353":[11,32,11,70],"361":[11,1,11,70],"369":[11,1,11,71],"377":[12,1,12,7],"385":[12,1,12,17],"393":[13,20,13,23],"401":[13,20,13,29],"409":[13,19,13,29],"417":[13,19,13,29],"425":[14,10,14,17],"433":[15,9,15,12],"441":[15,30,15,34],"449":[15,9,15,35],"451":[15,9,15,29],"457":[15,9,15,36],"465":[16,9,16,13],"473":[16,32,16,35],"481":[16,9,16,36],"483":[16,9,16,31],"489":[16,9,16,37],"497":[17,9,17,12],"505":[17,30,17,35],"513":[17,9,17,36],"515":[17,9,17,29],"521":[17,9,17,37],"529":[19,12,19,19],"537":[19,12,19,19],"545":[19,5,19,20],"553":[12,29,20,2],"561":[12,29,20,2],"569":[12,29,20,2],"577":[12,29,20,2],"585":[12,29,20,2],"593":[12,1,20,2],"601":[12,1,20,3],"609":[21,1,21,7],"617":[21,19,21,25],"625":[21,15,21,27],"633":[21,1,21,27],"641":[21,1,21,28],"649":[22,1,22,7],"657":[23,12,23,18],"665":[23,12,23,23],"673":[23,12,23,23],"681":[23,5,23,24],"689":[22,19,24,2],"697":[22,19,24,2],"705":[22,19,24,2],"713":[22,19,24,2],"721":[22,1,24,2],"729":[22,1,24,3],"737":[25,1,25,7],"745":[25,18,25,24],"753":[25,1,25,24],"761":[25,1,25,25],"769":[1,1,25,25],"777":[1,1,25,25],"785":[1,1,25,25],"793":[1,1,25,25],"801":[1,1,25,25],"809":[1,1,25,25],"817":[6,14,8,2],"825":[6,14,8,2],"833":[14,5,18,6],"841":[12,29,20,2],"849":[12,29,20,2],"857":[22,19,24,2],"865":[22,19,24,2],"873":[1,1,25,25],"881":[1,1,25,25],"nBranches":2,"originalCodeFileName":"/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/not_dbg.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/not_dbg_jalangi_.js","code":"\"use strict\";\nvar inherits = require('util').inherits;\nvar Validator = require('./core/validator');\n\n\nvar NotDbg = function () {\n\tValidator.call(this);\n};\ninherits(NotDbg, Validator);\n\nNotDbg.prototype.code = 'ndbg';\nNotDbg.prototype.expectedStr = 'is allowed only if not in debug mode';\n\nNotDbg.prototype.validate = function (ctx) {\n\tvar isValid = !ctx.debug;\n\tif (!isValid) {\n\t\tctx.setPropertyCheck(true);\n\t\tthis.onValidationError(ctx);\n\t\tctx.setPropertyCheck(false);\n\t}\n\treturn isValid;\n};\n\nNotDbg.ndbg = new NotDbg();\n\nNotDbg.getShort = function (corrector) {\n\treturn NotDbg.ndbg;\n};\n\n\nmodule.exports = NotDbg;\n"};
jalangiLabel148:
    while (true) {
        try {
            J$.Se(769, '/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/not_dbg_jalangi_.js', '/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/not_dbg.js');
            J$.N(777, '__secret__S$', __secret__S$, 0);
            J$.N(785, '__secret__traits__', __secret__traits__, 0);
            J$.N(793, 'inherits', inherits, 0);
            J$.N(801, 'Validator', Validator, 0);
            J$.N(809, 'NotDbg', NotDbg, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var inherits = J$.X1(137, J$.W(129, 'inherits', J$.G(121, J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'util', 21, false)), 'inherits', 0), inherits, 3));
            var Validator = J$.X1(177, J$.W(169, 'Validator', J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, './core/validator', 21, false)), Validator, 3));
            var NotDbg = J$.X1(249, J$.W(241, 'NotDbg', J$.T(233, function () {
                jalangiLabel145:
                    while (true) {
                        try {
                            J$.Fe(217, arguments.callee, this, arguments);
                            arguments = J$.N(225, 'arguments', arguments, 4);
                            J$.X1(209, J$.M(201, J$.R(185, 'Validator', Validator, 1), 'call', 0)(J$.R(193, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(817, J$e);
                        } finally {
                            if (J$.Fr(825))
                                continue jalangiLabel145;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 217), NotDbg, 3));
            J$.X1(289, J$.F(281, J$.R(257, 'inherits', inherits, 1), 0)(J$.R(265, 'NotDbg', NotDbg, 1), J$.R(273, 'Validator', Validator, 1)));
            J$.X1(329, J$.P(321, J$.G(305, J$.R(297, 'NotDbg', NotDbg, 1), 'prototype', 0), 'code', J$.T(313, 'ndbg', 21, false), 0));
            J$.X1(369, J$.P(361, J$.G(345, J$.R(337, 'NotDbg', NotDbg, 1), 'prototype', 0), 'expectedStr', J$.T(353, 'is allowed only if not in debug mode', 21, false), 0));
            J$.X1(601, J$.P(593, J$.G(385, J$.R(377, 'NotDbg', NotDbg, 1), 'prototype', 0), 'validate', J$.T(585, function (ctx) {
                jalangiLabel146:
                    while (true) {
                        try {
                            J$.Fe(553, arguments.callee, this, arguments);
                            arguments = J$.N(561, 'arguments', arguments, 4);
                            ctx = J$.N(569, 'ctx', ctx, 4);
                            J$.N(577, 'isValid', isValid, 0);
                            var isValid = J$.X1(417, J$.W(409, 'isValid', J$.U(10, '!', J$.G(401, J$.R(393, 'ctx', ctx, 0), 'debug', 0)), isValid, 1));
                            if (J$.X1(833, J$.C(8, J$.U(18, '!', J$.R(425, 'isValid', isValid, 0))))) {
                                J$.X1(457, J$.M(449, J$.R(433, 'ctx', ctx, 0), 'setPropertyCheck', 0)(J$.T(441, true, 23, false)));
                                J$.X1(489, J$.M(481, J$.R(465, 'this', this, 0), 'onValidationError', 0)(J$.R(473, 'ctx', ctx, 0)));
                                J$.X1(521, J$.M(513, J$.R(497, 'ctx', ctx, 0), 'setPropertyCheck', 0)(J$.T(505, false, 23, false)));
                            }
                            return J$.X1(545, J$.Rt(537, J$.R(529, 'isValid', isValid, 0)));
                        } catch (J$e) {
                            J$.Ex(841, J$e);
                        } finally {
                            if (J$.Fr(849))
                                continue jalangiLabel146;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 553), 0));
            J$.X1(641, J$.P(633, J$.R(609, 'NotDbg', NotDbg, 1), 'ndbg', J$.F(625, J$.R(617, 'NotDbg', NotDbg, 1), 1)(), 0));
            J$.X1(729, J$.P(721, J$.R(649, 'NotDbg', NotDbg, 1), 'getShort', J$.T(713, function (corrector) {
                jalangiLabel147:
                    while (true) {
                        try {
                            J$.Fe(689, arguments.callee, this, arguments);
                            arguments = J$.N(697, 'arguments', arguments, 4);
                            corrector = J$.N(705, 'corrector', corrector, 4);
                            return J$.X1(681, J$.Rt(673, J$.G(665, J$.R(657, 'NotDbg', NotDbg, 1), 'ndbg', 0)));
                        } catch (J$e) {
                            J$.Ex(857, J$e);
                        } finally {
                            if (J$.Fr(865))
                                continue jalangiLabel147;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 689), 0));
            J$.X1(761, J$.P(753, J$.R(737, 'module', module, 2), 'exports', J$.R(745, 'NotDbg', NotDbg, 1), 0));
        } catch (J$e) {
            J$.Ex(873, J$e);
        } finally {
            if (J$.Sr(881)) {
                J$.L();
                continue jalangiLabel148;
            } else {
                J$.L();
                break jalangiLabel148;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
