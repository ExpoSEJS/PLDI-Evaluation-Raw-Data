{"8":[18,9,18,59],"9":[1,20,1,27],"10":[13,12,13,47],"16":[18,9,18,102],"17":[1,28,1,32],"18":[18,28,18,59],"24":[20,13,20,22],"25":[1,20,1,33],"26":[20,13,20,22],"32":[18,9,18,102],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,16,4,23],"105":[4,24,4,30],"113":[4,16,4,31],"121":[4,16,4,40],"129":[4,16,4,40],"137":[4,16,4,40],"145":[5,11,5,18],"153":[5,19,5,26],"161":[5,11,5,27],"169":[5,11,5,27],"177":[5,11,5,27],"185":[7,5,7,8],"193":[7,14,7,18],"201":[7,5,7,19],"203":[7,5,7,13],"209":[7,5,7,20],"217":[6,14,8,2],"225":[6,14,8,2],"233":[6,14,8,2],"241":[6,14,8,2],"249":[6,14,8,2],"257":[9,1,9,9],"265":[9,10,9,16],"273":[9,18,9,21],"281":[9,1,9,22],"289":[9,1,9,23],"297":[10,1,10,7],"305":[10,1,10,17],"313":[10,25,10,33],"321":[10,1,10,33],"329":[10,1,10,34],"337":[11,1,11,7],"345":[11,1,11,17],"353":[11,32,11,41],"361":[11,1,11,41],"369":[11,1,11,42],"377":[12,1,12,7],"385":[12,1,12,17],"393":[13,12,13,16],"401":[13,23,13,26],"409":[13,23,13,32],"417":[13,12,13,33],"419":[13,12,13,22],"425":[13,38,13,41],"433":[13,38,13,47],"441":[13,12,13,47],"449":[13,5,13,48],"457":[12,33,14,2],"465":[12,33,14,2],"473":[12,33,14,2],"481":[12,33,14,2],"489":[12,1,14,2],"497":[12,1,14,3],"505":[15,1,15,4],"513":[15,1,15,14],"521":[15,36,15,50],"529":[15,1,15,50],"537":[15,1,15,51],"545":[16,1,16,7],"553":[16,1,16,17],"561":[17,19,17,24],"569":[17,19,17,24],"577":[17,19,17,24],"585":[18,9,18,12],"593":[18,9,18,24],"595":[18,9,18,22],"601":[18,28,18,31],"609":[18,28,18,37],"617":[18,28,18,49],"625":[18,53,18,59],"633":[18,63,18,67],"641":[18,63,18,86],"649":[18,92,18,95],"657":[18,92,18,101],"665":[18,63,18,102],"667":[18,63,18,91],"673":[19,17,19,25],"681":[19,26,19,29],"689":[19,26,19,35],"697":[19,37,19,39],"705":[19,17,19,40],"713":[19,17,19,40],"721":[19,17,19,40],"729":[20,14,20,19],"737":[20,20,20,21],"745":[20,14,20,22],"753":[21,23,21,27],"761":[21,23,21,27],"769":[21,13,21,28],"777":[22,13,22,16],"785":[22,30,22,31],"793":[22,13,22,32],"795":[22,13,22,29],"801":[22,13,22,33],"809":[25,12,25,19],"817":[25,12,25,19],"825":[25,5,25,20],"833":[16,33,26,2],"841":[16,33,26,2],"849":[16,33,26,2],"857":[16,33,26,2],"865":[16,33,26,2],"873":[16,33,26,2],"881":[16,1,26,2],"889":[16,1,26,3],"897":[27,1,27,7],"905":[27,21,27,27],"913":[27,17,27,29],"921":[27,1,27,29],"929":[27,1,27,30],"937":[28,1,28,7],"945":[29,12,29,18],"953":[29,12,29,25],"961":[29,12,29,25],"969":[29,5,29,26],"977":[28,19,30,2],"985":[28,19,30,2],"993":[28,19,30,2],"1001":[28,19,30,2],"1009":[28,1,30,2],"1017":[28,1,30,3],"1025":[31,1,31,7],"1033":[31,18,31,24],"1041":[31,1,31,24],"1049":[31,1,31,25],"1057":[1,1,31,25],"1065":[1,1,31,25],"1073":[1,1,31,25],"1081":[1,1,31,25],"1089":[1,1,31,25],"1097":[1,1,31,25],"1105":[6,14,8,2],"1113":[6,14,8,2],"1121":[12,33,14,2],"1129":[12,33,14,2],"1137":[20,9,23,10],"1145":[18,5,24,6],"1153":[16,33,26,2],"1161":[16,33,26,2],"1169":[28,19,30,2],"1177":[28,19,30,2],"1185":[1,1,31,25],"1193":[1,1,31,25],"nBranches":8,"originalCodeFileName":"/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/int_num.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/int_num_jalangi_.js","code":"\"use strict\";\nvar inherits = require('util').inherits;\nvar Num = require('./num');\n\n\nvar IntNum = function () {\n\tNum.call(this);\n};\ninherits(IntNum, Num);\n\nIntNum.prototype.code = 'intNum';\nIntNum.prototype.expectedStr = 'integer';\n\nIntNum.prototype.isValueValid = function (ctx) {\n\t// WARN does not guarantee that value is not large inaccurate float\n\t// add len() check when need\n\treturn Math.floor(ctx.value) === ctx.value;\n};\n\nNum.prototype.transformableStrRe = /^[\\+\\-]?\\d+$/;\n\nIntNum.prototype.tryTransform = function (ctx) {\n\tvar isValid = false;\n\tif (ctx.isStrMode() && ctx.value.constructor == String && this.transformableStrRe.test(ctx.value)) {\n\t\tvar v = parseInt(ctx.value, 10);\n\t\tif (!isNaN(v)) {\n\t\t\tisValid = true;\n\t\t\tctx.setTransform(v);\n\t\t}\n\t}\n\treturn isValid;\n};\n\nIntNum.intNum = new IntNum();\n\nIntNum.getShort = function (corrector) {\n\treturn IntNum.intNum;\n};\n\n\nmodule.exports = IntNum;\n"}