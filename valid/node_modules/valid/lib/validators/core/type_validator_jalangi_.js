J$.iids = {"8":[15,12,15,67],"9":[1,20,1,27],"10":[15,12,15,29],"17":[1,28,1,32],"18":[15,33,15,67],"25":[1,20,1,33],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,16,4,23],"105":[4,24,4,30],"113":[4,16,4,31],"121":[4,16,4,40],"129":[4,16,4,40],"137":[4,16,4,40],"145":[5,17,5,24],"153":[5,25,5,38],"161":[5,17,5,39],"169":[5,17,5,39],"177":[5,17,5,39],"185":[7,5,7,14],"193":[7,20,7,24],"201":[7,5,7,25],"203":[7,5,7,19],"209":[7,5,7,26],"217":[6,21,8,2],"225":[6,21,8,2],"233":[6,21,8,2],"241":[6,21,8,2],"249":[6,21,8,2],"257":[9,1,9,9],"265":[9,10,9,23],"273":[9,25,9,34],"281":[9,1,9,35],"289":[9,1,9,36],"297":[10,1,10,14],"305":[10,1,10,24],"313":[10,32,10,36],"321":[10,1,10,36],"329":[10,1,10,37],"337":[11,1,11,14],"345":[11,1,11,24],"353":[12,12,12,16],"361":[12,29,12,32],"369":[12,12,12,33],"371":[12,12,12,28],"377":[12,12,12,33],"385":[12,5,12,34],"393":[11,35,13,2],"401":[11,35,13,2],"409":[11,35,13,2],"417":[11,35,13,2],"425":[11,1,13,2],"433":[11,1,13,3],"441":[14,1,14,14],"449":[14,1,14,24],"457":[15,12,15,15],"465":[15,12,15,21],"473":[15,25,15,29],"481":[15,33,15,36],"489":[15,33,15,42],"497":[15,33,15,54],"505":[15,58,15,62],"513":[15,58,15,67],"521":[15,12,15,67],"529":[15,5,15,68],"537":[14,39,16,2],"545":[14,39,16,2],"553":[14,39,16,2],"561":[14,39,16,2],"569":[14,1,16,2],"577":[14,1,16,3],"585":[17,1,17,7],"593":[17,18,17,31],"601":[17,1,17,31],"609":[17,1,17,32],"617":[1,1,17,32],"625":[1,1,17,32],"633":[1,1,17,32],"641":[1,1,17,32],"649":[1,1,17,32],"657":[1,1,17,32],"665":[6,21,8,2],"673":[6,21,8,2],"681":[11,35,13,2],"689":[11,35,13,2],"697":[14,39,16,2],"705":[14,39,16,2],"713":[1,1,17,32],"721":[1,1,17,32],"nBranches":2,"originalCodeFileName":"/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/core/type_validator.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/core/type_validator_jalangi_.js","code":"\"use strict\";\nvar inherits = require('util').inherits;\nvar Validator = require('./validator');\n\n\nvar TypeValidator = function () {\n\tValidator.call(this);\n};\ninherits(TypeValidator, Validator);\n\nTypeValidator.prototype.type = null;\n\nTypeValidator.prototype.isValid = function (ctx) {\n\treturn this.isTypeValid(ctx);\n};\n\nTypeValidator.prototype.isTypeValid = function (ctx) {\n\treturn ctx.value != null && ctx.value.constructor == this.type;\n};\n\n\nmodule.exports = TypeValidator;\n"};
jalangiLabel115:
    while (true) {
        try {
            J$.Se(617, '/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/core/type_validator_jalangi_.js', '/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/core/type_validator.js');
            J$.N(625, '__secret__S$', __secret__S$, 0);
            J$.N(633, '__secret__traits__', __secret__traits__, 0);
            J$.N(641, 'inherits', inherits, 0);
            J$.N(649, 'Validator', Validator, 0);
            J$.N(657, 'TypeValidator', TypeValidator, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var inherits = J$.X1(137, J$.W(129, 'inherits', J$.G(121, J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'util', 21, false)), 'inherits', 0), inherits, 3));
            var Validator = J$.X1(177, J$.W(169, 'Validator', J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, './validator', 21, false)), Validator, 3));
            var TypeValidator = J$.X1(249, J$.W(241, 'TypeValidator', J$.T(233, function () {
                jalangiLabel112:
                    while (true) {
                        try {
                            J$.Fe(217, arguments.callee, this, arguments);
                            arguments = J$.N(225, 'arguments', arguments, 4);
                            J$.X1(209, J$.M(201, J$.R(185, 'Validator', Validator, 1), 'call', 0)(J$.R(193, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(665, J$e);
                        } finally {
                            if (J$.Fr(673))
                                continue jalangiLabel112;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 217), TypeValidator, 3));
            J$.X1(289, J$.F(281, J$.R(257, 'inherits', inherits, 1), 0)(J$.R(265, 'TypeValidator', TypeValidator, 1), J$.R(273, 'Validator', Validator, 1)));
            J$.X1(329, J$.P(321, J$.G(305, J$.R(297, 'TypeValidator', TypeValidator, 1), 'prototype', 0), 'type', J$.T(313, null, 25, false), 0));
            J$.X1(433, J$.P(425, J$.G(345, J$.R(337, 'TypeValidator', TypeValidator, 1), 'prototype', 0), 'isValid', J$.T(417, function (ctx) {
                jalangiLabel113:
                    while (true) {
                        try {
                            J$.Fe(393, arguments.callee, this, arguments);
                            arguments = J$.N(401, 'arguments', arguments, 4);
                            ctx = J$.N(409, 'ctx', ctx, 4);
                            return J$.X1(385, J$.Rt(377, J$.M(369, J$.R(353, 'this', this, 0), 'isTypeValid', 0)(J$.R(361, 'ctx', ctx, 0))));
                        } catch (J$e) {
                            J$.Ex(681, J$e);
                        } finally {
                            if (J$.Fr(689))
                                continue jalangiLabel113;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 393), 0));
            J$.X1(577, J$.P(569, J$.G(449, J$.R(441, 'TypeValidator', TypeValidator, 1), 'prototype', 0), 'isTypeValid', J$.T(561, function (ctx) {
                jalangiLabel114:
                    while (true) {
                        try {
                            J$.Fe(537, arguments.callee, this, arguments);
                            arguments = J$.N(545, 'arguments', arguments, 4);
                            ctx = J$.N(553, 'ctx', ctx, 4);
                            return J$.X1(529, J$.Rt(521, J$.C(8, J$.B(10, '!=', J$.G(465, J$.R(457, 'ctx', ctx, 0), 'value', 0), J$.T(473, null, 25, false), 0)) ? J$.B(18, '==', J$.G(497, J$.G(489, J$.R(481, 'ctx', ctx, 0), 'value', 0), 'constructor', 0), J$.G(513, J$.R(505, 'this', this, 0), 'type', 0), 0) : J$._()));
                        } catch (J$e) {
                            J$.Ex(697, J$e);
                        } finally {
                            if (J$.Fr(705))
                                continue jalangiLabel114;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 537), 0));
            J$.X1(609, J$.P(601, J$.R(585, 'module', module, 2), 'exports', J$.R(593, 'TypeValidator', TypeValidator, 1), 0));
        } catch (J$e) {
            J$.Ex(713, J$e);
        } finally {
            if (J$.Sr(721)) {
                J$.L();
                continue jalangiLabel115;
            } else {
                J$.L();
                break jalangiLabel115;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
