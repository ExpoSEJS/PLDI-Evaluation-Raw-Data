J$.iids = {"8":[23,9,23,36],"9":[1,20,1,27],"10":[23,9,23,24],"16":[23,9,23,36],"17":[1,28,1,32],"18":[23,28,23,36],"24":[26,9,26,17],"25":[1,20,1,33],"26":[26,9,26,17],"32":[35,9,35,26],"33":[1,20,1,33],"34":[35,9,35,26],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,10,4,17],"105":[4,18,4,32],"113":[4,10,4,33],"121":[4,10,4,33],"129":[4,10,4,33],"137":[5,17,6,2],"145":[5,17,6,2],"153":[5,17,6,2],"161":[5,17,6,2],"169":[5,17,6,2],"177":[7,1,7,3],"185":[7,9,7,18],"193":[7,20,7,37],"201":[7,1,7,38],"203":[7,1,7,8],"209":[7,1,7,39],"217":[8,1,8,10],"225":[8,1,8,20],"233":[8,35,8,40],"241":[8,1,8,40],"249":[8,1,8,41],"257":[9,1,9,10],"265":[9,1,9,20],"273":[10,12,10,16],"281":[10,12,10,28],"289":[10,12,10,28],"297":[10,5,10,29],"305":[9,37,11,2],"313":[9,37,11,2],"321":[9,37,11,2],"329":[9,37,11,2],"337":[9,1,11,2],"345":[9,1,11,3],"353":[12,1,12,10],"361":[12,1,12,20],"369":[13,12,13,17],"377":[13,12,13,17],"385":[13,5,13,18],"393":[12,41,14,2],"401":[12,41,14,2],"409":[12,41,14,2],"417":[12,41,14,2],"425":[12,1,14,2],"433":[12,1,14,3],"441":[15,1,15,10],"449":[15,1,15,20],"457":[15,28,15,32],"465":[15,1,15,32],"473":[15,1,15,33],"481":[16,1,16,10],"489":[16,1,16,20],"497":[16,35,16,39],"505":[16,1,16,39],"513":[16,1,16,40],"521":[17,1,17,10],"529":[17,1,17,20],"537":[18,12,18,16],"545":[18,12,18,16],"553":[18,5,18,17],"561":[17,31,19,2],"569":[17,31,19,2],"577":[17,31,19,2],"585":[17,1,19,2],"593":[17,1,19,3],"601":[20,1,20,10],"609":[20,1,20,20],"617":[21,26,21,29],"625":[21,26,21,43],"633":[21,26,21,43],"641":[21,26,21,43],"649":[22,19,22,23],"657":[22,32,22,35],"665":[22,19,22,36],"667":[22,19,22,31],"673":[22,19,22,36],"681":[22,19,22,36],"689":[23,10,23,24],"697":[23,29,23,36],"705":[24,9,24,12],"713":[24,9,24,29],"715":[24,9,24,27],"721":[24,9,24,30],"729":[26,10,26,17],"737":[27,9,27,13],"745":[27,32,27,35],"753":[27,9,27,36],"755":[27,9,27,31],"761":[27,9,27,37],"769":[29,12,29,19],"777":[29,12,29,19],"785":[29,5,29,20],"793":[20,32,30,2],"801":[20,32,30,2],"809":[20,32,30,2],"817":[20,32,30,2],"825":[20,32,30,2],"833":[20,32,30,2],"841":[20,1,30,2],"849":[20,1,30,3],"857":[31,1,31,10],"865":[31,1,31,20],"873":[32,12,32,17],"881":[32,12,32,17],"889":[32,5,32,18],"897":[31,31,33,2],"905":[31,31,33,2],"913":[31,31,33,2],"921":[31,31,33,2],"929":[31,1,33,2],"937":[31,1,33,3],"945":[34,1,34,10],"953":[34,1,34,20],"961":[35,9,35,13],"969":[35,9,35,18],"977":[35,22,35,26],"985":[36,19,36,24],"993":[36,25,36,44],"1001":[36,15,36,45],"1009":[36,15,36,45],"1017":[36,9,36,46],"1025":[38,12,38,16],"1033":[38,12,38,21],"1041":[38,12,38,21],"1049":[38,5,38,22],"1057":[34,31,39,2],"1065":[34,31,39,2],"1073":[34,31,39,2],"1081":[34,1,39,2],"1089":[34,1,39,3],"1097":[40,1,40,10],"1105":[40,1,40,20],"1113":[41,12,41,16],"1121":[41,12,41,28],"1129":[41,12,41,28],"1137":[41,5,41,29],"1145":[40,38,42,2],"1153":[40,38,42,2],"1161":[40,38,42,2],"1169":[40,1,42,2],"1177":[40,1,42,3],"1185":[43,1,43,10],"1193":[43,1,43,20],"1201":[44,5,44,8],"1209":[44,25,44,29],"1217":[44,5,44,30],"1219":[44,5,44,24],"1225":[44,5,44,31],"1233":[43,41,45,2],"1241":[43,41,45,2],"1249":[43,41,45,2],"1257":[43,41,45,2],"1265":[43,1,45,2],"1273":[43,1,45,3],"1281":[46,1,46,10],"1289":[46,1,46,20],"1297":[47,12,47,16],"1305":[47,12,47,26],"1307":[47,12,47,24],"1313":[47,12,47,26],"1321":[47,5,47,27],"1329":[46,36,48,2],"1337":[46,36,48,2],"1345":[46,36,48,2],"1353":[46,1,48,2],"1361":[46,1,48,3],"1369":[49,1,49,10],"1377":[49,1,49,20],"1385":[50,15,50,20],"1393":[50,21,50,38],"1401":[50,11,50,39],"1409":[50,11,50,39],"1417":[50,5,50,40],"1425":[49,32,51,2],"1433":[49,32,51,2],"1441":[49,32,51,2],"1449":[49,1,51,2],"1457":[49,1,51,3],"1465":[52,1,52,7],"1473":[52,18,52,27],"1481":[52,1,52,27],"1489":[52,1,52,28],"1497":[1,1,52,28],"1505":[1,1,52,28],"1513":[1,1,52,28],"1521":[1,1,52,28],"1529":[1,1,52,28],"1537":[5,17,6,2],"1545":[5,17,6,2],"1553":[9,37,11,2],"1561":[9,37,11,2],"1569":[12,41,14,2],"1577":[12,41,14,2],"1585":[17,31,19,2],"1593":[17,31,19,2],"1601":[23,5,25,6],"1609":[26,5,28,6],"1617":[20,32,30,2],"1625":[20,32,30,2],"1633":[31,31,33,2],"1641":[31,31,33,2],"1649":[35,5,37,6],"1657":[34,31,39,2],"1665":[34,31,39,2],"1673":[40,38,42,2],"1681":[40,38,42,2],"1689":[43,41,45,2],"1697":[43,41,45,2],"1705":[46,36,48,2],"1713":[46,36,48,2],"1721":[49,32,51,2],"1729":[49,32,51,2],"1737":[1,1,52,28],"1745":[1,1,52,28],"nBranches":8,"originalCodeFileName":"/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/core/validator.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/core/validator_jalangi_.js","code":"\"use strict\";\nvar mt = require('marked_types');\n\n\nvar Validator = function () {\n};\nmt.mark(Validator, 'valid:Validator');\n\n// treat as optional in Obj and inheritants\nValidator.prototype.keyOptional = false;\nValidator.prototype.isKeyOptional = function (ctx) {\n\treturn this.keyOptional;\n};\n\n// allows NoWay to prohibit it's fields\nValidator.prototype.isFieldProhibited = function (k) {\n\treturn false;\n};\n\nValidator.prototype.code = null;\nValidator.prototype.expectedStr = null;\n\nValidator.prototype.getInfo = function () {\n\treturn null;\n};\n\nValidator.prototype.validate = function (ctx) {\n\tvar wasTransformed = ctx.isTransformed;\n\tvar isValid = this.isValid(ctx);\n\tif (!wasTransformed && !isValid) {\n\t\tctx.resetTransform();\n\t}\n\tif (!isValid) {\n\t\tthis.onValidationError(ctx);\n\t}\n\treturn isValid;\n};\n\nValidator.prototype.isValid = function (ctx) {\n\treturn false;\n};\n\nValidator.prototype.getCode = function () {\n\tif (this.code == null) {\n\t\tthrow new Error('Code not provided');\n\t}\n\treturn this.code;\n};\n\nValidator.prototype.getExpectedStr = function () {\n\treturn this.expectedStr;\n};\n\nValidator.prototype.onValidationError = function (ctx) {\n\tctx.validationError(this);\n};\n\nValidator.prototype.getShortName = function () {\n\treturn this.getCode();\n};\n\nValidator.prototype.getShort = function () {\n\tthrow new Error('Not implemented');\n};\n\n\nmodule.exports = Validator;\n"};
jalangiLabel107:
    while (true) {
        try {
            J$.Se(1497, '/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/core/validator_jalangi_.js', '/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/core/validator.js');
            J$.N(1505, '__secret__S$', __secret__S$, 0);
            J$.N(1513, '__secret__traits__', __secret__traits__, 0);
            J$.N(1521, 'mt', mt, 0);
            J$.N(1529, 'Validator', Validator, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var mt = J$.X1(129, J$.W(121, 'mt', J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'marked_types', 21, false)), mt, 3));
            var Validator = J$.X1(169, J$.W(161, 'Validator', J$.T(153, function () {
                jalangiLabel96:
                    while (true) {
                        try {
                            J$.Fe(137, arguments.callee, this, arguments);
                            arguments = J$.N(145, 'arguments', arguments, 4);
                        } catch (J$e) {
                            J$.Ex(1537, J$e);
                        } finally {
                            if (J$.Fr(1545))
                                continue jalangiLabel96;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 137), Validator, 3));
            J$.X1(209, J$.M(201, J$.R(177, 'mt', mt, 1), 'mark', 0)(J$.R(185, 'Validator', Validator, 1), J$.T(193, 'valid:Validator', 21, false)));
            J$.X1(249, J$.P(241, J$.G(225, J$.R(217, 'Validator', Validator, 1), 'prototype', 0), 'keyOptional', J$.T(233, false, 23, false), 0));
            J$.X1(345, J$.P(337, J$.G(265, J$.R(257, 'Validator', Validator, 1), 'prototype', 0), 'isKeyOptional', J$.T(329, function (ctx) {
                jalangiLabel97:
                    while (true) {
                        try {
                            J$.Fe(305, arguments.callee, this, arguments);
                            arguments = J$.N(313, 'arguments', arguments, 4);
                            ctx = J$.N(321, 'ctx', ctx, 4);
                            return J$.X1(297, J$.Rt(289, J$.G(281, J$.R(273, 'this', this, 0), 'keyOptional', 0)));
                        } catch (J$e) {
                            J$.Ex(1553, J$e);
                        } finally {
                            if (J$.Fr(1561))
                                continue jalangiLabel97;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 305), 0));
            J$.X1(433, J$.P(425, J$.G(361, J$.R(353, 'Validator', Validator, 1), 'prototype', 0), 'isFieldProhibited', J$.T(417, function (k) {
                jalangiLabel98:
                    while (true) {
                        try {
                            J$.Fe(393, arguments.callee, this, arguments);
                            arguments = J$.N(401, 'arguments', arguments, 4);
                            k = J$.N(409, 'k', k, 4);
                            return J$.X1(385, J$.Rt(377, J$.T(369, false, 23, false)));
                        } catch (J$e) {
                            J$.Ex(1569, J$e);
                        } finally {
                            if (J$.Fr(1577))
                                continue jalangiLabel98;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 393), 0));
            J$.X1(473, J$.P(465, J$.G(449, J$.R(441, 'Validator', Validator, 1), 'prototype', 0), 'code', J$.T(457, null, 25, false), 0));
            J$.X1(513, J$.P(505, J$.G(489, J$.R(481, 'Validator', Validator, 1), 'prototype', 0), 'expectedStr', J$.T(497, null, 25, false), 0));
            J$.X1(593, J$.P(585, J$.G(529, J$.R(521, 'Validator', Validator, 1), 'prototype', 0), 'getInfo', J$.T(577, function () {
                jalangiLabel99:
                    while (true) {
                        try {
                            J$.Fe(561, arguments.callee, this, arguments);
                            arguments = J$.N(569, 'arguments', arguments, 4);
                            return J$.X1(553, J$.Rt(545, J$.T(537, null, 25, false)));
                        } catch (J$e) {
                            J$.Ex(1585, J$e);
                        } finally {
                            if (J$.Fr(1593))
                                continue jalangiLabel99;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 561), 0));
            J$.X1(849, J$.P(841, J$.G(609, J$.R(601, 'Validator', Validator, 1), 'prototype', 0), 'validate', J$.T(833, function (ctx) {
                jalangiLabel100:
                    while (true) {
                        try {
                            J$.Fe(793, arguments.callee, this, arguments);
                            arguments = J$.N(801, 'arguments', arguments, 4);
                            ctx = J$.N(809, 'ctx', ctx, 4);
                            J$.N(817, 'wasTransformed', wasTransformed, 0);
                            J$.N(825, 'isValid', isValid, 0);
                            var wasTransformed = J$.X1(641, J$.W(633, 'wasTransformed', J$.G(625, J$.R(617, 'ctx', ctx, 0), 'isTransformed', 0), wasTransformed, 1));
                            var isValid = J$.X1(681, J$.W(673, 'isValid', J$.M(665, J$.R(649, 'this', this, 0), 'isValid', 0)(J$.R(657, 'ctx', ctx, 0)), isValid, 1));
                            if (J$.X1(1601, J$.C(16, J$.C(8, J$.U(10, '!', J$.R(689, 'wasTransformed', wasTransformed, 0))) ? J$.U(18, '!', J$.R(697, 'isValid', isValid, 0)) : J$._()))) {
                                J$.X1(721, J$.M(713, J$.R(705, 'ctx', ctx, 0), 'resetTransform', 0)());
                            }
                            if (J$.X1(1609, J$.C(24, J$.U(26, '!', J$.R(729, 'isValid', isValid, 0))))) {
                                J$.X1(761, J$.M(753, J$.R(737, 'this', this, 0), 'onValidationError', 0)(J$.R(745, 'ctx', ctx, 0)));
                            }
                            return J$.X1(785, J$.Rt(777, J$.R(769, 'isValid', isValid, 0)));
                        } catch (J$e) {
                            J$.Ex(1617, J$e);
                        } finally {
                            if (J$.Fr(1625))
                                continue jalangiLabel100;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 793), 0));
            J$.X1(937, J$.P(929, J$.G(865, J$.R(857, 'Validator', Validator, 1), 'prototype', 0), 'isValid', J$.T(921, function (ctx) {
                jalangiLabel101:
                    while (true) {
                        try {
                            J$.Fe(897, arguments.callee, this, arguments);
                            arguments = J$.N(905, 'arguments', arguments, 4);
                            ctx = J$.N(913, 'ctx', ctx, 4);
                            return J$.X1(889, J$.Rt(881, J$.T(873, false, 23, false)));
                        } catch (J$e) {
                            J$.Ex(1633, J$e);
                        } finally {
                            if (J$.Fr(1641))
                                continue jalangiLabel101;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 897), 0));
            J$.X1(1089, J$.P(1081, J$.G(953, J$.R(945, 'Validator', Validator, 1), 'prototype', 0), 'getCode', J$.T(1073, function () {
                jalangiLabel102:
                    while (true) {
                        try {
                            J$.Fe(1057, arguments.callee, this, arguments);
                            arguments = J$.N(1065, 'arguments', arguments, 4);
                            if (J$.X1(1649, J$.C(32, J$.B(34, '==', J$.G(969, J$.R(961, 'this', this, 0), 'code', 0), J$.T(977, null, 25, false), 0)))) {
                                throw J$.X1(1017, J$.Th(1009, J$.F(1001, J$.R(985, 'Error', Error, 2), 1)(J$.T(993, 'Code not provided', 21, false))));
                            }
                            return J$.X1(1049, J$.Rt(1041, J$.G(1033, J$.R(1025, 'this', this, 0), 'code', 0)));
                        } catch (J$e) {
                            J$.Ex(1657, J$e);
                        } finally {
                            if (J$.Fr(1665))
                                continue jalangiLabel102;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1057), 0));
            J$.X1(1177, J$.P(1169, J$.G(1105, J$.R(1097, 'Validator', Validator, 1), 'prototype', 0), 'getExpectedStr', J$.T(1161, function () {
                jalangiLabel103:
                    while (true) {
                        try {
                            J$.Fe(1145, arguments.callee, this, arguments);
                            arguments = J$.N(1153, 'arguments', arguments, 4);
                            return J$.X1(1137, J$.Rt(1129, J$.G(1121, J$.R(1113, 'this', this, 0), 'expectedStr', 0)));
                        } catch (J$e) {
                            J$.Ex(1673, J$e);
                        } finally {
                            if (J$.Fr(1681))
                                continue jalangiLabel103;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1145), 0));
            J$.X1(1273, J$.P(1265, J$.G(1193, J$.R(1185, 'Validator', Validator, 1), 'prototype', 0), 'onValidationError', J$.T(1257, function (ctx) {
                jalangiLabel104:
                    while (true) {
                        try {
                            J$.Fe(1233, arguments.callee, this, arguments);
                            arguments = J$.N(1241, 'arguments', arguments, 4);
                            ctx = J$.N(1249, 'ctx', ctx, 4);
                            J$.X1(1225, J$.M(1217, J$.R(1201, 'ctx', ctx, 0), 'validationError', 0)(J$.R(1209, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(1689, J$e);
                        } finally {
                            if (J$.Fr(1697))
                                continue jalangiLabel104;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1233), 0));
            J$.X1(1361, J$.P(1353, J$.G(1289, J$.R(1281, 'Validator', Validator, 1), 'prototype', 0), 'getShortName', J$.T(1345, function () {
                jalangiLabel105:
                    while (true) {
                        try {
                            J$.Fe(1329, arguments.callee, this, arguments);
                            arguments = J$.N(1337, 'arguments', arguments, 4);
                            return J$.X1(1321, J$.Rt(1313, J$.M(1305, J$.R(1297, 'this', this, 0), 'getCode', 0)()));
                        } catch (J$e) {
                            J$.Ex(1705, J$e);
                        } finally {
                            if (J$.Fr(1713))
                                continue jalangiLabel105;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1329), 0));
            J$.X1(1457, J$.P(1449, J$.G(1377, J$.R(1369, 'Validator', Validator, 1), 'prototype', 0), 'getShort', J$.T(1441, function () {
                jalangiLabel106:
                    while (true) {
                        try {
                            J$.Fe(1425, arguments.callee, this, arguments);
                            arguments = J$.N(1433, 'arguments', arguments, 4);
                            throw J$.X1(1417, J$.Th(1409, J$.F(1401, J$.R(1385, 'Error', Error, 2), 1)(J$.T(1393, 'Not implemented', 21, false))));
                        } catch (J$e) {
                            J$.Ex(1721, J$e);
                        } finally {
                            if (J$.Fr(1729))
                                continue jalangiLabel106;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1425), 0));
            J$.X1(1489, J$.P(1481, J$.R(1465, 'module', module, 2), 'exports', J$.R(1473, 'Validator', Validator, 1), 0));
        } catch (J$e) {
            J$.Ex(1737, J$e);
        } finally {
            if (J$.Sr(1745)) {
                J$.L();
                continue jalangiLabel107;
            } else {
                J$.L();
                break jalangiLabel107;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
