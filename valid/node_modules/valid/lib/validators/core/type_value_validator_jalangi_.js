J$.iids = {"8":[12,19,12,68],"9":[1,20,1,27],"10":[13,9,13,24],"16":[13,9,13,36],"17":[1,28,1,32],"18":[13,28,13,36],"24":[13,9,13,36],"25":[1,20,1,33],"32":[19,9,19,30],"33":[1,20,1,33],"40":[26,9,26,31],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,16,4,23],"105":[4,24,4,30],"113":[4,16,4,31],"121":[4,16,4,40],"129":[4,16,4,40],"137":[4,16,4,40],"145":[5,17,5,24],"153":[5,25,5,38],"161":[5,17,5,39],"169":[5,17,5,39],"177":[5,17,5,39],"185":[7,5,7,14],"193":[7,20,7,24],"201":[7,5,7,25],"203":[7,5,7,19],"209":[7,5,7,26],"217":[6,26,8,2],"225":[6,26,8,2],"233":[6,26,8,2],"241":[6,26,8,2],"249":[6,26,8,2],"257":[9,1,9,9],"265":[9,10,9,28],"273":[9,30,9,39],"281":[9,1,9,40],"289":[9,1,9,41],"297":[10,1,10,19],"305":[10,1,10,29],"313":[11,26,11,29],"321":[11,26,11,43],"329":[11,26,11,43],"337":[11,26,11,43],"345":[12,19,12,23],"353":[12,37,12,40],"361":[12,19,12,41],"363":[12,19,12,36],"369":[12,45,12,49],"377":[12,64,12,67],"385":[12,45,12,68],"387":[12,45,12,63],"393":[12,19,12,68],"401":[12,19,12,68],"409":[13,10,13,24],"417":[13,29,13,36],"425":[14,9,14,12],"433":[14,9,14,29],"435":[14,9,14,27],"441":[14,9,14,30],"449":[16,12,16,19],"457":[16,12,16,19],"465":[16,5,16,20],"473":[10,41,17,2],"481":[10,41,17,2],"489":[10,41,17,2],"497":[10,41,17,2],"505":[10,41,17,2],"513":[10,41,17,2],"521":[10,1,17,2],"529":[10,1,17,3],"537":[18,1,18,19],"545":[18,1,18,29],"553":[19,9,19,13],"561":[19,26,19,29],"569":[19,9,19,30],"571":[19,9,19,25],"577":[20,16,20,20],"585":[20,16,20,20],"593":[20,9,20,21],"601":[22,5,22,9],"609":[22,22,22,25],"617":[22,5,22,26],"619":[22,5,22,21],"625":[22,5,22,27],"633":[23,12,23,17],"641":[23,12,23,17],"649":[23,5,23,18],"657":[18,45,24,2],"665":[18,45,24,2],"673":[18,45,24,2],"681":[18,45,24,2],"689":[18,1,24,2],"697":[18,1,24,3],"705":[25,1,25,19],"713":[25,1,25,29],"721":[26,9,26,13],"729":[26,27,26,30],"737":[26,9,26,31],"739":[26,9,26,26],"745":[27,16,27,20],"753":[27,16,27,20],"761":[27,9,27,21],"769":[29,5,29,9],"777":[29,23,29,26],"785":[29,5,29,27],"787":[29,5,29,22],"793":[29,5,29,28],"801":[30,12,30,17],"809":[30,12,30,17],"817":[30,5,30,18],"825":[25,46,31,2],"833":[25,46,31,2],"841":[25,46,31,2],"849":[25,46,31,2],"857":[25,1,31,2],"865":[25,1,31,3],"873":[32,1,32,19],"881":[32,1,32,29],"889":[33,12,33,17],"897":[33,12,33,17],"905":[33,5,33,18],"913":[32,44,34,2],"921":[32,44,34,2],"929":[32,44,34,2],"937":[32,44,34,2],"945":[32,1,34,2],"953":[32,1,34,3],"961":[35,1,35,19],"969":[35,1,35,29],"977":[36,12,36,17],"985":[36,12,36,17],"993":[36,5,36,18],"1001":[35,45,37,2],"1009":[35,45,37,2],"1017":[35,45,37,2],"1025":[35,45,37,2],"1033":[35,1,37,2],"1041":[35,1,37,3],"1049":[38,1,38,19],"1057":[38,1,38,29],"1065":[39,5,39,9],"1073":[39,28,39,31],"1081":[39,5,39,32],"1083":[39,5,39,27],"1089":[39,5,39,33],"1097":[38,44,40,2],"1105":[38,44,40,2],"1113":[38,44,40,2],"1121":[38,44,40,2],"1129":[38,1,40,2],"1137":[38,1,40,3],"1145":[41,1,41,19],"1153":[41,1,41,29],"1161":[42,5,42,9],"1169":[42,28,42,31],"1177":[42,5,42,32],"1179":[42,5,42,27],"1185":[42,5,42,33],"1193":[41,45,43,2],"1201":[41,45,43,2],"1209":[41,45,43,2],"1217":[41,45,43,2],"1225":[41,1,43,2],"1233":[41,1,43,3],"1241":[44,1,44,7],"1249":[44,18,44,36],"1257":[44,1,44,36],"1265":[44,1,44,37],"1273":[1,1,44,37],"1281":[1,1,44,37],"1289":[1,1,44,37],"1297":[1,1,44,37],"1305":[1,1,44,37],"1313":[1,1,44,37],"1321":[6,26,8,2],"1329":[6,26,8,2],"1337":[13,5,15,6],"1345":[10,41,17,2],"1353":[10,41,17,2],"1361":[19,5,21,6],"1369":[18,45,24,2],"1377":[18,45,24,2],"1385":[26,5,28,6],"1393":[25,46,31,2],"1401":[25,46,31,2],"1409":[32,44,34,2],"1417":[32,44,34,2],"1425":[35,45,37,2],"1433":[35,45,37,2],"1441":[38,44,40,2],"1449":[38,44,40,2],"1457":[41,45,43,2],"1465":[41,45,43,2],"1473":[1,1,44,37],"1481":[1,1,44,37],"nBranches":10,"originalCodeFileName":"/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/core/type_value_validator.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/core/type_value_validator_jalangi_.js","code":"\"use strict\";\nvar inherits = require('util').inherits;\nvar Validator = require('./validator');\n\n\nvar TypeValueValidator = function () {\n\tValidator.call(this);\n};\ninherits(TypeValueValidator, Validator);\n\nTypeValueValidator.prototype.validate = function (ctx) {\n\tvar wasTransformed = ctx.isTransformed;\n\tvar isValid = this.validateType(ctx) && this.validateValue(ctx);\n\tif (!wasTransformed && !isValid) {\n\t\tctx.resetTransform();\n\t}\n\treturn isValid;\n};\n\nTypeValueValidator.prototype.validateType = function (ctx) {\n\tif (this.isTypeValid(ctx)) {\n\t\treturn true;\n\t}\n\tthis.onTypeError(ctx);\n\treturn false;\n};\n\nTypeValueValidator.prototype.validateValue = function (ctx) {\n\tif (this.isValueValid(ctx)) {\n\t\treturn true;\n\t}\n\tthis.onValueError(ctx);\n\treturn false;\n};\n\nTypeValueValidator.prototype.isTypeValid = function (ctx) {\n\treturn false;\n};\n\nTypeValueValidator.prototype.isValueValid = function (ctx) {\n\treturn false;\n};\n\nTypeValueValidator.prototype.onTypeError = function (ctx) {\n\tthis.onValidationError(ctx);\n};\n\nTypeValueValidator.prototype.onValueError = function (ctx) {\n\tthis.onValidationError(ctx);\n};\n\n\nmodule.exports = TypeValueValidator;\n"};
jalangiLabel128:
    while (true) {
        try {
            J$.Se(1273, '/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/core/type_value_validator_jalangi_.js', '/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/core/type_value_validator.js');
            J$.N(1281, '__secret__S$', __secret__S$, 0);
            J$.N(1289, '__secret__traits__', __secret__traits__, 0);
            J$.N(1297, 'inherits', inherits, 0);
            J$.N(1305, 'Validator', Validator, 0);
            J$.N(1313, 'TypeValueValidator', TypeValueValidator, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var inherits = J$.X1(137, J$.W(129, 'inherits', J$.G(121, J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'util', 21, false)), 'inherits', 0), inherits, 3));
            var Validator = J$.X1(177, J$.W(169, 'Validator', J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, './validator', 21, false)), Validator, 3));
            var TypeValueValidator = J$.X1(249, J$.W(241, 'TypeValueValidator', J$.T(233, function () {
                jalangiLabel120:
                    while (true) {
                        try {
                            J$.Fe(217, arguments.callee, this, arguments);
                            arguments = J$.N(225, 'arguments', arguments, 4);
                            J$.X1(209, J$.M(201, J$.R(185, 'Validator', Validator, 1), 'call', 0)(J$.R(193, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(1321, J$e);
                        } finally {
                            if (J$.Fr(1329))
                                continue jalangiLabel120;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 217), TypeValueValidator, 3));
            J$.X1(289, J$.F(281, J$.R(257, 'inherits', inherits, 1), 0)(J$.R(265, 'TypeValueValidator', TypeValueValidator, 1), J$.R(273, 'Validator', Validator, 1)));
            J$.X1(529, J$.P(521, J$.G(305, J$.R(297, 'TypeValueValidator', TypeValueValidator, 1), 'prototype', 0), 'validate', J$.T(513, function (ctx) {
                jalangiLabel121:
                    while (true) {
                        try {
                            J$.Fe(473, arguments.callee, this, arguments);
                            arguments = J$.N(481, 'arguments', arguments, 4);
                            ctx = J$.N(489, 'ctx', ctx, 4);
                            J$.N(497, 'wasTransformed', wasTransformed, 0);
                            J$.N(505, 'isValid', isValid, 0);
                            var wasTransformed = J$.X1(337, J$.W(329, 'wasTransformed', J$.G(321, J$.R(313, 'ctx', ctx, 0), 'isTransformed', 0), wasTransformed, 1));
                            var isValid = J$.X1(401, J$.W(393, 'isValid', J$.C(8, J$.M(361, J$.R(345, 'this', this, 0), 'validateType', 0)(J$.R(353, 'ctx', ctx, 0))) ? J$.M(385, J$.R(369, 'this', this, 0), 'validateValue', 0)(J$.R(377, 'ctx', ctx, 0)) : J$._(), isValid, 1));
                            if (J$.X1(1337, J$.C(24, J$.C(16, J$.U(10, '!', J$.R(409, 'wasTransformed', wasTransformed, 0))) ? J$.U(18, '!', J$.R(417, 'isValid', isValid, 0)) : J$._()))) {
                                J$.X1(441, J$.M(433, J$.R(425, 'ctx', ctx, 0), 'resetTransform', 0)());
                            }
                            return J$.X1(465, J$.Rt(457, J$.R(449, 'isValid', isValid, 0)));
                        } catch (J$e) {
                            J$.Ex(1345, J$e);
                        } finally {
                            if (J$.Fr(1353))
                                continue jalangiLabel121;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 473), 0));
            J$.X1(697, J$.P(689, J$.G(545, J$.R(537, 'TypeValueValidator', TypeValueValidator, 1), 'prototype', 0), 'validateType', J$.T(681, function (ctx) {
                jalangiLabel122:
                    while (true) {
                        try {
                            J$.Fe(657, arguments.callee, this, arguments);
                            arguments = J$.N(665, 'arguments', arguments, 4);
                            ctx = J$.N(673, 'ctx', ctx, 4);
                            if (J$.X1(1361, J$.C(32, J$.M(569, J$.R(553, 'this', this, 0), 'isTypeValid', 0)(J$.R(561, 'ctx', ctx, 0))))) {
                                return J$.X1(593, J$.Rt(585, J$.T(577, true, 23, false)));
                            }
                            J$.X1(625, J$.M(617, J$.R(601, 'this', this, 0), 'onTypeError', 0)(J$.R(609, 'ctx', ctx, 0)));
                            return J$.X1(649, J$.Rt(641, J$.T(633, false, 23, false)));
                        } catch (J$e) {
                            J$.Ex(1369, J$e);
                        } finally {
                            if (J$.Fr(1377))
                                continue jalangiLabel122;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 657), 0));
            J$.X1(865, J$.P(857, J$.G(713, J$.R(705, 'TypeValueValidator', TypeValueValidator, 1), 'prototype', 0), 'validateValue', J$.T(849, function (ctx) {
                jalangiLabel123:
                    while (true) {
                        try {
                            J$.Fe(825, arguments.callee, this, arguments);
                            arguments = J$.N(833, 'arguments', arguments, 4);
                            ctx = J$.N(841, 'ctx', ctx, 4);
                            if (J$.X1(1385, J$.C(40, J$.M(737, J$.R(721, 'this', this, 0), 'isValueValid', 0)(J$.R(729, 'ctx', ctx, 0))))) {
                                return J$.X1(761, J$.Rt(753, J$.T(745, true, 23, false)));
                            }
                            J$.X1(793, J$.M(785, J$.R(769, 'this', this, 0), 'onValueError', 0)(J$.R(777, 'ctx', ctx, 0)));
                            return J$.X1(817, J$.Rt(809, J$.T(801, false, 23, false)));
                        } catch (J$e) {
                            J$.Ex(1393, J$e);
                        } finally {
                            if (J$.Fr(1401))
                                continue jalangiLabel123;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 825), 0));
            J$.X1(953, J$.P(945, J$.G(881, J$.R(873, 'TypeValueValidator', TypeValueValidator, 1), 'prototype', 0), 'isTypeValid', J$.T(937, function (ctx) {
                jalangiLabel124:
                    while (true) {
                        try {
                            J$.Fe(913, arguments.callee, this, arguments);
                            arguments = J$.N(921, 'arguments', arguments, 4);
                            ctx = J$.N(929, 'ctx', ctx, 4);
                            return J$.X1(905, J$.Rt(897, J$.T(889, false, 23, false)));
                        } catch (J$e) {
                            J$.Ex(1409, J$e);
                        } finally {
                            if (J$.Fr(1417))
                                continue jalangiLabel124;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 913), 0));
            J$.X1(1041, J$.P(1033, J$.G(969, J$.R(961, 'TypeValueValidator', TypeValueValidator, 1), 'prototype', 0), 'isValueValid', J$.T(1025, function (ctx) {
                jalangiLabel125:
                    while (true) {
                        try {
                            J$.Fe(1001, arguments.callee, this, arguments);
                            arguments = J$.N(1009, 'arguments', arguments, 4);
                            ctx = J$.N(1017, 'ctx', ctx, 4);
                            return J$.X1(993, J$.Rt(985, J$.T(977, false, 23, false)));
                        } catch (J$e) {
                            J$.Ex(1425, J$e);
                        } finally {
                            if (J$.Fr(1433))
                                continue jalangiLabel125;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1001), 0));
            J$.X1(1137, J$.P(1129, J$.G(1057, J$.R(1049, 'TypeValueValidator', TypeValueValidator, 1), 'prototype', 0), 'onTypeError', J$.T(1121, function (ctx) {
                jalangiLabel126:
                    while (true) {
                        try {
                            J$.Fe(1097, arguments.callee, this, arguments);
                            arguments = J$.N(1105, 'arguments', arguments, 4);
                            ctx = J$.N(1113, 'ctx', ctx, 4);
                            J$.X1(1089, J$.M(1081, J$.R(1065, 'this', this, 0), 'onValidationError', 0)(J$.R(1073, 'ctx', ctx, 0)));
                        } catch (J$e) {
                            J$.Ex(1441, J$e);
                        } finally {
                            if (J$.Fr(1449))
                                continue jalangiLabel126;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1097), 0));
            J$.X1(1233, J$.P(1225, J$.G(1153, J$.R(1145, 'TypeValueValidator', TypeValueValidator, 1), 'prototype', 0), 'onValueError', J$.T(1217, function (ctx) {
                jalangiLabel127:
                    while (true) {
                        try {
                            J$.Fe(1193, arguments.callee, this, arguments);
                            arguments = J$.N(1201, 'arguments', arguments, 4);
                            ctx = J$.N(1209, 'ctx', ctx, 4);
                            J$.X1(1185, J$.M(1177, J$.R(1161, 'this', this, 0), 'onValidationError', 0)(J$.R(1169, 'ctx', ctx, 0)));
                        } catch (J$e) {
                            J$.Ex(1457, J$e);
                        } finally {
                            if (J$.Fr(1465))
                                continue jalangiLabel127;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1193), 0));
            J$.X1(1265, J$.P(1257, J$.R(1241, 'module', module, 2), 'exports', J$.R(1249, 'TypeValueValidator', TypeValueValidator, 1), 0));
        } catch (J$e) {
            J$.Ex(1473, J$e);
        } finally {
            if (J$.Sr(1481)) {
                J$.L();
                continue jalangiLabel128;
            } else {
                J$.L();
                break jalangiLabel128;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
