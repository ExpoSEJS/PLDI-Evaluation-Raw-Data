J$.iids = {"8":[18,9,18,59],"9":[1,20,1,27],"10":[13,12,13,47],"16":[18,9,18,102],"17":[1,28,1,32],"18":[18,28,18,59],"24":[20,13,20,22],"25":[1,20,1,33],"26":[20,13,20,22],"32":[18,9,18,102],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,16,4,23],"105":[4,24,4,30],"113":[4,16,4,31],"121":[4,16,4,40],"129":[4,16,4,40],"137":[4,16,4,40],"145":[5,11,5,18],"153":[5,19,5,26],"161":[5,11,5,27],"169":[5,11,5,27],"177":[5,11,5,27],"185":[7,5,7,8],"193":[7,14,7,18],"201":[7,5,7,19],"203":[7,5,7,13],"209":[7,5,7,20],"217":[6,14,8,2],"225":[6,14,8,2],"233":[6,14,8,2],"241":[6,14,8,2],"249":[6,14,8,2],"257":[9,1,9,9],"265":[9,10,9,16],"273":[9,18,9,21],"281":[9,1,9,22],"289":[9,1,9,23],"297":[10,1,10,7],"305":[10,1,10,17],"313":[10,25,10,33],"321":[10,1,10,33],"329":[10,1,10,34],"337":[11,1,11,7],"345":[11,1,11,17],"353":[11,32,11,41],"361":[11,1,11,41],"369":[11,1,11,42],"377":[12,1,12,7],"385":[12,1,12,17],"393":[13,12,13,16],"401":[13,23,13,26],"409":[13,23,13,32],"417":[13,12,13,33],"419":[13,12,13,22],"425":[13,38,13,41],"433":[13,38,13,47],"441":[13,12,13,47],"449":[13,5,13,48],"457":[12,33,14,2],"465":[12,33,14,2],"473":[12,33,14,2],"481":[12,33,14,2],"489":[12,1,14,2],"497":[12,1,14,3],"505":[15,1,15,4],"513":[15,1,15,14],"521":[15,36,15,50],"529":[15,1,15,50],"537":[15,1,15,51],"545":[16,1,16,7],"553":[16,1,16,17],"561":[17,19,17,24],"569":[17,19,17,24],"577":[17,19,17,24],"585":[18,9,18,12],"593":[18,9,18,24],"595":[18,9,18,22],"601":[18,28,18,31],"609":[18,28,18,37],"617":[18,28,18,49],"625":[18,53,18,59],"633":[18,63,18,67],"641":[18,63,18,86],"649":[18,92,18,95],"657":[18,92,18,101],"665":[18,63,18,102],"667":[18,63,18,91],"673":[19,17,19,25],"681":[19,26,19,29],"689":[19,26,19,35],"697":[19,37,19,39],"705":[19,17,19,40],"713":[19,17,19,40],"721":[19,17,19,40],"729":[20,14,20,19],"737":[20,20,20,21],"745":[20,14,20,22],"753":[21,23,21,27],"761":[21,23,21,27],"769":[21,13,21,28],"777":[22,13,22,16],"785":[22,30,22,31],"793":[22,13,22,32],"795":[22,13,22,29],"801":[22,13,22,33],"809":[25,12,25,19],"817":[25,12,25,19],"825":[25,5,25,20],"833":[16,33,26,2],"841":[16,33,26,2],"849":[16,33,26,2],"857":[16,33,26,2],"865":[16,33,26,2],"873":[16,33,26,2],"881":[16,1,26,2],"889":[16,1,26,3],"897":[27,1,27,7],"905":[27,21,27,27],"913":[27,17,27,29],"921":[27,1,27,29],"929":[27,1,27,30],"937":[28,1,28,7],"945":[29,12,29,18],"953":[29,12,29,25],"961":[29,12,29,25],"969":[29,5,29,26],"977":[28,19,30,2],"985":[28,19,30,2],"993":[28,19,30,2],"1001":[28,19,30,2],"1009":[28,1,30,2],"1017":[28,1,30,3],"1025":[31,1,31,7],"1033":[31,18,31,24],"1041":[31,1,31,24],"1049":[31,1,31,25],"1057":[1,1,31,25],"1065":[1,1,31,25],"1073":[1,1,31,25],"1081":[1,1,31,25],"1089":[1,1,31,25],"1097":[1,1,31,25],"1105":[6,14,8,2],"1113":[6,14,8,2],"1121":[12,33,14,2],"1129":[12,33,14,2],"1137":[20,9,23,10],"1145":[18,5,24,6],"1153":[16,33,26,2],"1161":[16,33,26,2],"1169":[28,19,30,2],"1177":[28,19,30,2],"1185":[1,1,31,25],"1193":[1,1,31,25],"nBranches":8,"originalCodeFileName":"/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/int_num.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/int_num_jalangi_.js","code":"\"use strict\";\nvar inherits = require('util').inherits;\nvar Num = require('./num');\n\n\nvar IntNum = function () {\n\tNum.call(this);\n};\ninherits(IntNum, Num);\n\nIntNum.prototype.code = 'intNum';\nIntNum.prototype.expectedStr = 'integer';\n\nIntNum.prototype.isValueValid = function (ctx) {\n\t// WARN does not guarantee that value is not large inaccurate float\n\t// add len() check when need\n\treturn Math.floor(ctx.value) === ctx.value;\n};\n\nNum.prototype.transformableStrRe = /^[\\+\\-]?\\d+$/;\n\nIntNum.prototype.tryTransform = function (ctx) {\n\tvar isValid = false;\n\tif (ctx.isStrMode() && ctx.value.constructor == String && this.transformableStrRe.test(ctx.value)) {\n\t\tvar v = parseInt(ctx.value, 10);\n\t\tif (!isNaN(v)) {\n\t\t\tisValid = true;\n\t\t\tctx.setTransform(v);\n\t\t}\n\t}\n\treturn isValid;\n};\n\nIntNum.intNum = new IntNum();\n\nIntNum.getShort = function (corrector) {\n\treturn IntNum.intNum;\n};\n\n\nmodule.exports = IntNum;\n"};
jalangiLabel218:
    while (true) {
        try {
            J$.Se(1057, '/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/int_num_jalangi_.js', '/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/int_num.js');
            J$.N(1065, '__secret__S$', __secret__S$, 0);
            J$.N(1073, '__secret__traits__', __secret__traits__, 0);
            J$.N(1081, 'inherits', inherits, 0);
            J$.N(1089, 'Num', Num, 0);
            J$.N(1097, 'IntNum', IntNum, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var inherits = J$.X1(137, J$.W(129, 'inherits', J$.G(121, J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'util', 21, false)), 'inherits', 0), inherits, 3));
            var Num = J$.X1(177, J$.W(169, 'Num', J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, './num', 21, false)), Num, 3));
            var IntNum = J$.X1(249, J$.W(241, 'IntNum', J$.T(233, function () {
                jalangiLabel214:
                    while (true) {
                        try {
                            J$.Fe(217, arguments.callee, this, arguments);
                            arguments = J$.N(225, 'arguments', arguments, 4);
                            J$.X1(209, J$.M(201, J$.R(185, 'Num', Num, 1), 'call', 0)(J$.R(193, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(1105, J$e);
                        } finally {
                            if (J$.Fr(1113))
                                continue jalangiLabel214;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 217), IntNum, 3));
            J$.X1(289, J$.F(281, J$.R(257, 'inherits', inherits, 1), 0)(J$.R(265, 'IntNum', IntNum, 1), J$.R(273, 'Num', Num, 1)));
            J$.X1(329, J$.P(321, J$.G(305, J$.R(297, 'IntNum', IntNum, 1), 'prototype', 0), 'code', J$.T(313, 'intNum', 21, false), 0));
            J$.X1(369, J$.P(361, J$.G(345, J$.R(337, 'IntNum', IntNum, 1), 'prototype', 0), 'expectedStr', J$.T(353, 'integer', 21, false), 0));
            J$.X1(497, J$.P(489, J$.G(385, J$.R(377, 'IntNum', IntNum, 1), 'prototype', 0), 'isValueValid', J$.T(481, function (ctx) {
                jalangiLabel215:
                    while (true) {
                        try {
                            J$.Fe(457, arguments.callee, this, arguments);
                            arguments = J$.N(465, 'arguments', arguments, 4);
                            ctx = J$.N(473, 'ctx', ctx, 4);
                            return J$.X1(449, J$.Rt(441, J$.B(10, '===', J$.M(417, J$.R(393, 'Math', Math, 2), 'floor', 0)(J$.G(409, J$.R(401, 'ctx', ctx, 0), 'value', 0)), J$.G(433, J$.R(425, 'ctx', ctx, 0), 'value', 0), 0)));
                        } catch (J$e) {
                            J$.Ex(1121, J$e);
                        } finally {
                            if (J$.Fr(1129))
                                continue jalangiLabel215;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 457), 0));
            J$.X1(537, J$.P(529, J$.G(513, J$.R(505, 'Num', Num, 1), 'prototype', 0), 'transformableStrRe', J$.T(521, /^[\+\-]?\d+$/, 14, false), 0));
            J$.X1(889, J$.P(881, J$.G(553, J$.R(545, 'IntNum', IntNum, 1), 'prototype', 0), 'tryTransform', J$.T(873, function (ctx) {
                jalangiLabel216:
                    while (true) {
                        try {
                            J$.Fe(833, arguments.callee, this, arguments);
                            arguments = J$.N(841, 'arguments', arguments, 4);
                            ctx = J$.N(849, 'ctx', ctx, 4);
                            J$.N(857, 'isValid', isValid, 0);
                            J$.N(865, 'v', v, 0);
                            var isValid = J$.X1(577, J$.W(569, 'isValid', J$.T(561, false, 23, false), isValid, 1));
                            if (J$.X1(1145, J$.C(32, J$.C(16, J$.C(8, J$.M(593, J$.R(585, 'ctx', ctx, 0), 'isStrMode', 0)()) ? J$.B(18, '==', J$.G(617, J$.G(609, J$.R(601, 'ctx', ctx, 0), 'value', 0), 'constructor', 0), J$.R(625, 'String', String, 2), 0) : J$._()) ? J$.M(665, J$.G(641, J$.R(633, 'this', this, 0), 'transformableStrRe', 0), 'test', 0)(J$.G(657, J$.R(649, 'ctx', ctx, 0), 'value', 0)) : J$._()))) {
                                var v = J$.X1(721, J$.W(713, 'v', J$.F(705, J$.R(673, 'parseInt', parseInt, 2), 0)(J$.G(689, J$.R(681, 'ctx', ctx, 0), 'value', 0), J$.T(697, 10, 22, false)), v, 1));
                                if (J$.X1(1137, J$.C(24, J$.U(26, '!', J$.F(745, J$.R(729, 'isNaN', isNaN, 2), 0)(J$.R(737, 'v', v, 0)))))) {
                                    J$.X1(769, isValid = J$.W(761, 'isValid', J$.T(753, true, 23, false), isValid, 0));
                                    J$.X1(801, J$.M(793, J$.R(777, 'ctx', ctx, 0), 'setTransform', 0)(J$.R(785, 'v', v, 0)));
                                }
                            }
                            return J$.X1(825, J$.Rt(817, J$.R(809, 'isValid', isValid, 0)));
                        } catch (J$e) {
                            J$.Ex(1153, J$e);
                        } finally {
                            if (J$.Fr(1161))
                                continue jalangiLabel216;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 833), 0));
            J$.X1(929, J$.P(921, J$.R(897, 'IntNum', IntNum, 1), 'intNum', J$.F(913, J$.R(905, 'IntNum', IntNum, 1), 1)(), 0));
            J$.X1(1017, J$.P(1009, J$.R(937, 'IntNum', IntNum, 1), 'getShort', J$.T(1001, function (corrector) {
                jalangiLabel217:
                    while (true) {
                        try {
                            J$.Fe(977, arguments.callee, this, arguments);
                            arguments = J$.N(985, 'arguments', arguments, 4);
                            corrector = J$.N(993, 'corrector', corrector, 4);
                            return J$.X1(969, J$.Rt(961, J$.G(953, J$.R(945, 'IntNum', IntNum, 1), 'intNum', 0)));
                        } catch (J$e) {
                            J$.Ex(1169, J$e);
                        } finally {
                            if (J$.Fr(1177))
                                continue jalangiLabel217;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 977), 0));
            J$.X1(1049, J$.P(1041, J$.R(1025, 'module', module, 2), 'exports', J$.R(1033, 'IntNum', IntNum, 1), 0));
        } catch (J$e) {
            J$.Ex(1185, J$e);
        } finally {
            if (J$.Sr(1193)) {
                J$.L();
                continue jalangiLabel218;
            } else {
                J$.L();
                break jalangiLabel218;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
