J$.iids = {"8":[13,23,13,75],"9":[1,20,1,27],"10":[13,23,13,40],"16":[14,9,14,43],"17":[1,28,1,32],"18":[13,44,13,75],"24":[14,9,14,43],"25":[1,20,1,33],"26":[14,9,14,21],"32":[23,9,23,59],"33":[1,20,1,33],"34":[14,25,14,43],"40":[23,9,23,102],"41":[1,20,1,33],"42":[23,28,23,59],"48":[25,13,25,46],"49":[2,26,2,38],"50":[30,13,30,22],"56":[30,13,30,22],"57":[2,26,2,45],"64":[23,9,23,102],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,16,4,23],"105":[4,24,4,30],"113":[4,16,4,31],"121":[4,16,4,40],"129":[4,16,4,40],"137":[4,16,4,40],"145":[5,26,5,33],"153":[5,34,5,63],"161":[5,26,5,64],"169":[5,26,5,64],"177":[5,26,5,64],"185":[7,5,7,23],"193":[7,29,7,33],"201":[7,5,7,34],"203":[7,5,7,28],"209":[7,5,7,35],"217":[6,11,8,2],"225":[6,11,8,2],"233":[6,11,8,2],"241":[6,11,8,2],"249":[6,11,8,2],"257":[9,1,9,9],"265":[9,10,9,13],"273":[9,15,9,33],"281":[9,1,9,34],"289":[9,1,9,35],"297":[10,1,10,4],"305":[10,1,10,14],"313":[10,22,10,27],"321":[10,1,10,27],"329":[10,1,10,28],"337":[11,1,11,4],"345":[11,1,11,14],"353":[11,29,11,37],"361":[11,1,11,37],"369":[11,1,11,38],"377":[12,1,12,4],"385":[12,1,12,14],"393":[13,23,13,26],"401":[13,23,13,32],"409":[13,36,13,40],"417":[13,44,13,47],"425":[13,44,13,53],"433":[13,44,13,65],"441":[13,69,13,75],"449":[13,23,13,75],"457":[13,23,13,75],"465":[14,10,14,21],"473":[14,26,14,29],"481":[14,26,14,43],"489":[15,23,15,27],"497":[15,41,15,44],"505":[15,23,15,45],"507":[15,23,15,40],"513":[15,23,15,45],"521":[15,9,15,46],"529":[17,12,17,23],"537":[17,12,17,23],"545":[17,5,17,24],"553":[12,29,18,2],"561":[12,29,18,2],"569":[12,29,18,2],"577":[12,29,18,2],"585":[12,29,18,2],"593":[12,1,18,2],"601":[12,1,18,3],"609":[19,1,19,4],"617":[19,1,19,14],"625":[19,36,19,72],"633":[19,1,19,72],"641":[19,1,19,73],"649":[20,1,20,4],"657":[20,1,20,14],"665":[20,30,20,37],"673":[20,1,20,37],"681":[20,1,20,38],"689":[21,1,21,4],"697":[21,1,21,14],"705":[22,19,22,24],"713":[22,19,22,24],"721":[22,19,22,24],"729":[23,9,23,12],"737":[23,9,23,24],"739":[23,9,23,22],"745":[23,28,23,31],"753":[23,28,23,37],"761":[23,28,23,49],"769":[23,53,23,59],"777":[23,63,23,67],"785":[23,63,23,86],"793":[23,92,23,95],"801":[23,92,23,101],"809":[23,63,23,102],"811":[23,63,23,91],"817":[25,13,25,17],"825":[25,13,25,30],"833":[25,36,25,39],"841":[25,36,25,45],"849":[25,13,25,46],"851":[25,13,25,35],"857":[26,17,26,27],"865":[26,28,26,31],"873":[26,28,26,37],"881":[26,17,26,38],"889":[26,17,26,38],"897":[26,13,26,39],"905":[28,17,28,25],"913":[28,26,28,29],"921":[28,26,28,35],"929":[28,37,28,39],"937":[28,17,28,40],"945":[28,17,28,40],"953":[28,13,28,41],"961":[30,14,30,19],"969":[30,20,30,21],"977":[30,14,30,22],"985":[31,23,31,27],"993":[31,23,31,27],"1001":[31,13,31,28],"1009":[32,13,32,16],"1017":[32,30,32,31],"1025":[32,13,32,32],"1027":[32,13,32,29],"1033":[32,13,32,33],"1041":[35,12,35,19],"1049":[35,12,35,19],"1057":[35,5,35,20],"1065":[21,30,36,2],"1073":[21,30,36,2],"1081":[21,30,36,2],"1089":[21,30,36,2],"1097":[21,30,36,2],"1105":[21,30,36,2],"1113":[21,1,36,2],"1121":[21,1,36,3],"1129":[37,1,37,4],"1137":[37,1,37,14],"1145":[38,12,38,20],"1153":[38,21,38,24],"1161":[38,21,38,30],"1169":[38,12,38,31],"1177":[38,12,38,31],"1185":[38,5,38,32],"1193":[37,30,39,2],"1201":[37,30,39,2],"1209":[37,30,39,2],"1217":[37,30,39,2],"1225":[37,1,39,2],"1233":[37,1,39,3],"1241":[40,1,40,4],"1249":[40,15,40,18],"1257":[40,11,40,20],"1265":[40,1,40,20],"1273":[40,1,40,21],"1281":[41,1,41,4],"1289":[42,12,42,15],"1297":[42,12,42,19],"1305":[42,12,42,19],"1313":[42,5,42,20],"1321":[41,16,43,2],"1329":[41,16,43,2],"1337":[41,16,43,2],"1345":[41,16,43,2],"1353":[41,1,43,2],"1361":[41,1,43,3],"1369":[44,1,44,7],"1377":[44,18,44,21],"1385":[44,1,44,21],"1393":[44,1,44,22],"1401":[1,1,44,22],"1409":[1,1,44,22],"1417":[1,1,44,22],"1425":[1,1,44,22],"1433":[1,1,44,22],"1441":[1,1,44,22],"1449":[6,11,8,2],"1457":[6,11,8,2],"1465":[14,5,16,6],"1473":[12,29,18,2],"1481":[12,29,18,2],"1489":[25,9,29,10],"1497":[30,9,33,10],"1505":[23,5,34,6],"1513":[21,30,36,2],"1521":[21,30,36,2],"1529":[37,30,39,2],"1537":[37,30,39,2],"1545":[41,16,43,2],"1553":[41,16,43,2],"1561":[1,1,44,22],"1569":[1,1,44,22],"nBranches":16,"originalCodeFileName":"/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/num.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/num_jalangi_.js","code":"\"use strict\";\nvar inherits = require('util').inherits;\nvar TypeValueValidator = require('./core/type_value_validator');\n\n\nvar Num = function () {\n\tTypeValueValidator.call(this);\n};\ninherits(Num, TypeValueValidator);\n\nNum.prototype.code = 'num';\nNum.prototype.expectedStr = 'number';\n\nNum.prototype.isTypeValid = function (ctx) {\n\tvar isTypeValid = (ctx.value != null && ctx.value.constructor == Number);\n\tif (!isTypeValid && !ctx.isTransformed) {\n\t\tisTypeValid = this.tryTransform(ctx);\n\t}\n\treturn isTypeValid;\n};\n\nNum.prototype.transformableStrRe = /^[\\+\\-]?\\d+(\\.\\d*)?(e[\\+\\-]?\\d+)?$/;\nNum.prototype.floatCheckRe = /[\\.e]/;\n\nNum.prototype.tryTransform = function (ctx) {\n\tvar isValid = false;\n\tif (ctx.isStrMode() && ctx.value.constructor == String && this.transformableStrRe.test(ctx.value)) {\n\t\tvar v;\n\t\tif (this.floatCheckRe.test(ctx.value)) {\n\t\t\tv = parseFloat(ctx.value);\n\t\t}\n\t\telse {\n\t\t\tv = parseInt(ctx.value, 10);\n\t\t}\n\t\tif (!isNaN(v)) {\n\t\t\tisValid = true;\n\t\t\tctx.setTransform(v);\n\t\t}\n\t}\n\treturn isValid;\n};\n\nNum.prototype.isValueValid = function (ctx) {\n\treturn isFinite(ctx.value);\n};\n\nNum.num = new Num();\n\nNum.getShort = function (corrector) {\n\treturn Num.num;\n};\n\n\nmodule.exports = Num;\n"};
jalangiLabel213:
    while (true) {
        try {
            J$.Se(1401, '/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/num_jalangi_.js', '/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/num.js');
            J$.N(1409, '__secret__S$', __secret__S$, 0);
            J$.N(1417, '__secret__traits__', __secret__traits__, 0);
            J$.N(1425, 'inherits', inherits, 0);
            J$.N(1433, 'TypeValueValidator', TypeValueValidator, 0);
            J$.N(1441, 'Num', Num, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var inherits = J$.X1(137, J$.W(129, 'inherits', J$.G(121, J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'util', 21, false)), 'inherits', 0), inherits, 3));
            var TypeValueValidator = J$.X1(177, J$.W(169, 'TypeValueValidator', J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, './core/type_value_validator', 21, false)), TypeValueValidator, 3));
            var Num = J$.X1(249, J$.W(241, 'Num', J$.T(233, function () {
                jalangiLabel208:
                    while (true) {
                        try {
                            J$.Fe(217, arguments.callee, this, arguments);
                            arguments = J$.N(225, 'arguments', arguments, 4);
                            J$.X1(209, J$.M(201, J$.R(185, 'TypeValueValidator', TypeValueValidator, 1), 'call', 0)(J$.R(193, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(1449, J$e);
                        } finally {
                            if (J$.Fr(1457))
                                continue jalangiLabel208;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 217), Num, 3));
            J$.X1(289, J$.F(281, J$.R(257, 'inherits', inherits, 1), 0)(J$.R(265, 'Num', Num, 1), J$.R(273, 'TypeValueValidator', TypeValueValidator, 1)));
            J$.X1(329, J$.P(321, J$.G(305, J$.R(297, 'Num', Num, 1), 'prototype', 0), 'code', J$.T(313, 'num', 21, false), 0));
            J$.X1(369, J$.P(361, J$.G(345, J$.R(337, 'Num', Num, 1), 'prototype', 0), 'expectedStr', J$.T(353, 'number', 21, false), 0));
            J$.X1(601, J$.P(593, J$.G(385, J$.R(377, 'Num', Num, 1), 'prototype', 0), 'isTypeValid', J$.T(585, function (ctx) {
                jalangiLabel209:
                    while (true) {
                        try {
                            J$.Fe(553, arguments.callee, this, arguments);
                            arguments = J$.N(561, 'arguments', arguments, 4);
                            ctx = J$.N(569, 'ctx', ctx, 4);
                            J$.N(577, 'isTypeValid', isTypeValid, 0);
                            var isTypeValid = J$.X1(457, J$.W(449, 'isTypeValid', J$.C(8, J$.B(10, '!=', J$.G(401, J$.R(393, 'ctx', ctx, 0), 'value', 0), J$.T(409, null, 25, false), 0)) ? J$.B(18, '==', J$.G(433, J$.G(425, J$.R(417, 'ctx', ctx, 0), 'value', 0), 'constructor', 0), J$.R(441, 'Number', Number, 2), 0) : J$._(), isTypeValid, 1));
                            if (J$.X1(1465, J$.C(24, J$.C(16, J$.U(26, '!', J$.R(465, 'isTypeValid', isTypeValid, 0))) ? J$.U(34, '!', J$.G(481, J$.R(473, 'ctx', ctx, 0), 'isTransformed', 0)) : J$._()))) {
                                J$.X1(521, isTypeValid = J$.W(513, 'isTypeValid', J$.M(505, J$.R(489, 'this', this, 0), 'tryTransform', 0)(J$.R(497, 'ctx', ctx, 0)), isTypeValid, 0));
                            }
                            return J$.X1(545, J$.Rt(537, J$.R(529, 'isTypeValid', isTypeValid, 0)));
                        } catch (J$e) {
                            J$.Ex(1473, J$e);
                        } finally {
                            if (J$.Fr(1481))
                                continue jalangiLabel209;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 553), 0));
            J$.X1(641, J$.P(633, J$.G(617, J$.R(609, 'Num', Num, 1), 'prototype', 0), 'transformableStrRe', J$.T(625, /^[\+\-]?\d+(\.\d*)?(e[\+\-]?\d+)?$/, 14, false), 0));
            J$.X1(681, J$.P(673, J$.G(657, J$.R(649, 'Num', Num, 1), 'prototype', 0), 'floatCheckRe', J$.T(665, /[\.e]/, 14, false), 0));
            J$.X1(1121, J$.P(1113, J$.G(697, J$.R(689, 'Num', Num, 1), 'prototype', 0), 'tryTransform', J$.T(1105, function (ctx) {
                jalangiLabel210:
                    while (true) {
                        try {
                            J$.Fe(1065, arguments.callee, this, arguments);
                            arguments = J$.N(1073, 'arguments', arguments, 4);
                            ctx = J$.N(1081, 'ctx', ctx, 4);
                            J$.N(1089, 'isValid', isValid, 0);
                            J$.N(1097, 'v', v, 0);
                            var isValid = J$.X1(721, J$.W(713, 'isValid', J$.T(705, false, 23, false), isValid, 1));
                            if (J$.X1(1505, J$.C(64, J$.C(40, J$.C(32, J$.M(737, J$.R(729, 'ctx', ctx, 0), 'isStrMode', 0)()) ? J$.B(42, '==', J$.G(761, J$.G(753, J$.R(745, 'ctx', ctx, 0), 'value', 0), 'constructor', 0), J$.R(769, 'String', String, 2), 0) : J$._()) ? J$.M(809, J$.G(785, J$.R(777, 'this', this, 0), 'transformableStrRe', 0), 'test', 0)(J$.G(801, J$.R(793, 'ctx', ctx, 0), 'value', 0)) : J$._()))) {
                                var v;
                                if (J$.X1(1489, J$.C(48, J$.M(849, J$.G(825, J$.R(817, 'this', this, 0), 'floatCheckRe', 0), 'test', 0)(J$.G(841, J$.R(833, 'ctx', ctx, 0), 'value', 0))))) {
                                    J$.X1(897, v = J$.W(889, 'v', J$.F(881, J$.R(857, 'parseFloat', parseFloat, 2), 0)(J$.G(873, J$.R(865, 'ctx', ctx, 0), 'value', 0)), v, 0));
                                } else {
                                    J$.X1(953, v = J$.W(945, 'v', J$.F(937, J$.R(905, 'parseInt', parseInt, 2), 0)(J$.G(921, J$.R(913, 'ctx', ctx, 0), 'value', 0), J$.T(929, 10, 22, false)), v, 0));
                                }
                                if (J$.X1(1497, J$.C(56, J$.U(50, '!', J$.F(977, J$.R(961, 'isNaN', isNaN, 2), 0)(J$.R(969, 'v', v, 0)))))) {
                                    J$.X1(1001, isValid = J$.W(993, 'isValid', J$.T(985, true, 23, false), isValid, 0));
                                    J$.X1(1033, J$.M(1025, J$.R(1009, 'ctx', ctx, 0), 'setTransform', 0)(J$.R(1017, 'v', v, 0)));
                                }
                            }
                            return J$.X1(1057, J$.Rt(1049, J$.R(1041, 'isValid', isValid, 0)));
                        } catch (J$e) {
                            J$.Ex(1513, J$e);
                        } finally {
                            if (J$.Fr(1521))
                                continue jalangiLabel210;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1065), 0));
            J$.X1(1233, J$.P(1225, J$.G(1137, J$.R(1129, 'Num', Num, 1), 'prototype', 0), 'isValueValid', J$.T(1217, function (ctx) {
                jalangiLabel211:
                    while (true) {
                        try {
                            J$.Fe(1193, arguments.callee, this, arguments);
                            arguments = J$.N(1201, 'arguments', arguments, 4);
                            ctx = J$.N(1209, 'ctx', ctx, 4);
                            return J$.X1(1185, J$.Rt(1177, J$.F(1169, J$.R(1145, 'isFinite', isFinite, 2), 0)(J$.G(1161, J$.R(1153, 'ctx', ctx, 0), 'value', 0))));
                        } catch (J$e) {
                            J$.Ex(1529, J$e);
                        } finally {
                            if (J$.Fr(1537))
                                continue jalangiLabel211;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1193), 0));
            J$.X1(1273, J$.P(1265, J$.R(1241, 'Num', Num, 1), 'num', J$.F(1257, J$.R(1249, 'Num', Num, 1), 1)(), 0));
            J$.X1(1361, J$.P(1353, J$.R(1281, 'Num', Num, 1), 'getShort', J$.T(1345, function (corrector) {
                jalangiLabel212:
                    while (true) {
                        try {
                            J$.Fe(1321, arguments.callee, this, arguments);
                            arguments = J$.N(1329, 'arguments', arguments, 4);
                            corrector = J$.N(1337, 'corrector', corrector, 4);
                            return J$.X1(1313, J$.Rt(1305, J$.G(1297, J$.R(1289, 'Num', Num, 1), 'num', 0)));
                        } catch (J$e) {
                            J$.Ex(1545, J$e);
                        } finally {
                            if (J$.Fr(1553))
                                continue jalangiLabel212;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1321), 0));
            J$.X1(1393, J$.P(1385, J$.R(1369, 'module', module, 2), 'exports', J$.R(1377, 'Num', Num, 1), 0));
        } catch (J$e) {
            J$.Ex(1561, J$e);
        } finally {
            if (J$.Sr(1569)) {
                J$.L();
                continue jalangiLabel213;
            } else {
                J$.L();
                break jalangiLabel213;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
