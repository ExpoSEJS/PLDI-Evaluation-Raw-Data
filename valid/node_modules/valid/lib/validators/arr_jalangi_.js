J$.iids = {"8":[14,12,14,63],"9":[1,20,1,27],"10":[14,12,14,29],"16":[21,17,21,46],"17":[1,28,1,32],"18":[14,33,14,63],"24":[25,17,25,57],"25":[1,20,1,33],"26":[18,9,18,31],"32":[25,17,25,57],"33":[1,20,1,33],"34":[19,25,19,45],"40":[19,25,19,45],"41":[1,20,1,33],"42":[19,47,19,50],"48":[18,9,18,31],"49":[2,26,2,38],"56":[36,25,36,46],"57":[2,26,2,45],"58":[19,47,19,50],"65":[2,26,2,45],"66":[21,17,21,46],"73":[2,26,2,45],"74":[25,17,25,25],"81":[3,1,3,13],"82":[36,25,36,46],"89":[3,1,3,14],"97":[4,16,4,23],"105":[4,24,4,30],"113":[4,16,4,31],"121":[4,16,4,40],"129":[4,16,4,40],"137":[4,16,4,40],"145":[5,26,5,33],"153":[5,34,5,63],"161":[5,26,5,64],"169":[5,26,5,64],"177":[5,26,5,64],"185":[7,5,7,23],"193":[7,29,7,33],"201":[7,5,7,34],"203":[7,5,7,28],"209":[7,5,7,35],"217":[8,5,8,9],"225":[8,22,8,35],"233":[8,5,8,35],"241":[8,5,8,36],"249":[6,11,9,2],"257":[6,11,9,2],"265":[6,11,9,2],"273":[6,11,9,2],"281":[6,11,9,2],"289":[6,11,9,2],"297":[10,1,10,9],"305":[10,10,10,13],"313":[10,15,10,33],"321":[10,1,10,34],"329":[10,1,10,35],"337":[11,1,11,4],"345":[11,1,11,14],"353":[11,22,11,27],"361":[11,1,11,27],"369":[11,1,11,28],"377":[12,1,12,4],"385":[12,1,12,14],"393":[12,29,12,36],"401":[12,1,12,36],"409":[12,1,12,37],"417":[13,1,13,4],"425":[13,1,13,14],"433":[14,12,14,15],"441":[14,12,14,21],"449":[14,25,14,29],"457":[14,33,14,36],"465":[14,33,14,42],"473":[14,33,14,54],"481":[14,58,14,63],"489":[14,12,14,63],"497":[14,5,14,64],"505":[13,29,15,2],"513":[13,29,15,2],"521":[13,29,15,2],"529":[13,29,15,2],"537":[13,1,15,2],"545":[13,1,15,3],"553":[16,1,16,4],"561":[16,1,16,14],"569":[17,19,17,23],"577":[17,19,17,23],"585":[17,19,17,23],"593":[18,9,18,13],"601":[18,9,18,23],"609":[18,27,18,31],"617":[19,22,19,23],"625":[19,22,19,23],"633":[19,22,19,23],"641":[19,25,19,26],"649":[19,29,19,32],"657":[19,29,19,38],"665":[19,29,19,45],"681":[19,47,19,48],"689":[19,47,19,50],"705":[20,13,20,16],"713":[20,23,20,24],"721":[20,13,20,25],"723":[20,13,20,22],"729":[20,13,20,26],"737":[21,18,21,22],"745":[21,18,21,32],"753":[21,42,21,45],"761":[21,18,21,46],"763":[21,18,21,41],"769":[22,27,22,32],"777":[22,27,22,32],"785":[22,17,22,33],"793":[24,13,24,16],"801":[24,23,24,24],"809":[24,13,24,25],"811":[24,13,24,22],"817":[24,13,24,26],"825":[25,18,25,25],"833":[25,29,25,32],"841":[25,29,25,40],"849":[25,29,25,57],"857":[30,12,30,19],"865":[30,12,30,19],"873":[30,5,30,20],"881":[16,30,31,2],"889":[16,30,31,2],"897":[16,30,31,2],"905":[16,30,31,2],"913":[16,30,31,2],"921":[16,30,31,2],"929":[16,1,31,2],"937":[16,1,31,3],"945":[32,1,32,4],"953":[32,1,32,14],"961":[32,30,33,2],"969":[32,30,33,2],"977":[32,30,33,2],"985":[32,30,33,2],"993":[32,1,33,2],"1001":[32,1,33,3],"1009":[34,1,34,4],"1017":[36,25,36,38],"1025":[36,42,36,46],"1033":[36,49,36,53],"1041":[36,56,36,65],"1049":[36,78,36,91],"1057":[36,56,36,92],"1059":[36,56,36,77],"1065":[36,25,36,92],"1073":[36,25,36,92],"1081":[37,20,37,23],"1089":[37,24,37,33],"1097":[37,16,37,34],"1105":[37,16,37,34],"1113":[37,9,37,35],"1121":[35,12,38,6],"1129":[35,12,38,6],"1137":[35,12,38,6],"1145":[35,12,38,6],"1153":[35,12,38,6],"1161":[35,12,38,6],"1169":[35,5,38,7],"1177":[34,16,39,2],"1185":[34,16,39,2],"1193":[34,16,39,2],"1201":[34,16,39,2],"1209":[34,1,39,2],"1217":[34,1,39,3],"1225":[40,1,40,7],"1233":[40,18,40,21],"1241":[40,1,40,21],"1249":[40,1,40,22],"1257":[1,1,40,22],"1265":[1,1,40,22],"1273":[1,1,40,22],"1281":[1,1,40,22],"1289":[1,1,40,22],"1297":[1,1,40,22],"1305":[6,11,9,2],"1313":[6,11,9,2],"1321":[13,29,15,2],"1329":[13,29,15,2],"1337":[21,13,23,14],"1345":[25,13,27,14],"1353":[19,9,28,10],"1361":[19,9,28,10],"1369":[18,5,29,6],"1377":[16,30,31,2],"1385":[16,30,31,2],"1393":[32,30,33,2],"1401":[32,30,33,2],"1409":[36,25,36,92],"1417":[35,12,38,6],"1425":[35,12,38,6],"1433":[34,16,39,2],"1441":[34,16,39,2],"1449":[1,1,40,22],"1457":[1,1,40,22],"nBranches":14,"originalCodeFileName":"/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/arr.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/arr_jalangi_.js","code":"\"use strict\";\nvar inherits = require('util').inherits;\nvar TypeValueValidator = require('./core/type_value_validator');\n\n\nvar Arr = function (opt_validator) {\n\tTypeValueValidator.call(this);\n\tthis.validator = opt_validator;\n};\ninherits(Arr, TypeValueValidator);\n\nArr.prototype.code = 'arr';\nArr.prototype.expectedStr = 'array';\n\nArr.prototype.isTypeValid = function (ctx) {\n\treturn ctx.value != null && ctx.value.constructor == Array;\n};\n\nArr.prototype.isValueValid = function (ctx) {\n\tvar isValid = true;\n\tif (this.validator != null) {\n\t\tfor (var i = 0; i < ctx.value.length; i++) {\n\t\t\tctx.enter(i);\n\t\t\tif (!this.validator.validate(ctx)) {\n\t\t\t\tisValid = false;\n\t\t\t}\n\t\t\tctx.leave(i);\n\t\t\tif (!isValid && ctx.options.stopOnFirstError) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn isValid;\n};\n\nArr.prototype.onValueError = function (ctx) {\n};\n\nArr.getShort = function (corrector) {\n\treturn function (opt_validator) {\n\t\tvar validator = opt_validator == null ? null : corrector.toValidator(opt_validator);\n\t\treturn new Arr(validator);\n\t};\n};\n\n\nmodule.exports = Arr;\n"};
jalangiLabel179:
    while (true) {
        try {
            J$.Se(1257, '/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/arr_jalangi_.js', '/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/arr.js');
            J$.N(1265, '__secret__S$', __secret__S$, 0);
            J$.N(1273, '__secret__traits__', __secret__traits__, 0);
            J$.N(1281, 'inherits', inherits, 0);
            J$.N(1289, 'TypeValueValidator', TypeValueValidator, 0);
            J$.N(1297, 'Arr', Arr, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var inherits = J$.X1(137, J$.W(129, 'inherits', J$.G(121, J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'util', 21, false)), 'inherits', 0), inherits, 3));
            var TypeValueValidator = J$.X1(177, J$.W(169, 'TypeValueValidator', J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, './core/type_value_validator', 21, false)), TypeValueValidator, 3));
            var Arr = J$.X1(289, J$.W(281, 'Arr', J$.T(273, function (opt_validator) {
                jalangiLabel173:
                    while (true) {
                        try {
                            J$.Fe(249, arguments.callee, this, arguments);
                            arguments = J$.N(257, 'arguments', arguments, 4);
                            opt_validator = J$.N(265, 'opt_validator', opt_validator, 4);
                            J$.X1(209, J$.M(201, J$.R(185, 'TypeValueValidator', TypeValueValidator, 1), 'call', 0)(J$.R(193, 'this', this, 0)));
                            J$.X1(241, J$.P(233, J$.R(217, 'this', this, 0), 'validator', J$.R(225, 'opt_validator', opt_validator, 0), 0));
                        } catch (J$e) {
                            J$.Ex(1305, J$e);
                        } finally {
                            if (J$.Fr(1313))
                                continue jalangiLabel173;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 249), Arr, 3));
            J$.X1(329, J$.F(321, J$.R(297, 'inherits', inherits, 1), 0)(J$.R(305, 'Arr', Arr, 1), J$.R(313, 'TypeValueValidator', TypeValueValidator, 1)));
            J$.X1(369, J$.P(361, J$.G(345, J$.R(337, 'Arr', Arr, 1), 'prototype', 0), 'code', J$.T(353, 'arr', 21, false), 0));
            J$.X1(409, J$.P(401, J$.G(385, J$.R(377, 'Arr', Arr, 1), 'prototype', 0), 'expectedStr', J$.T(393, 'array', 21, false), 0));
            J$.X1(545, J$.P(537, J$.G(425, J$.R(417, 'Arr', Arr, 1), 'prototype', 0), 'isTypeValid', J$.T(529, function (ctx) {
                jalangiLabel174:
                    while (true) {
                        try {
                            J$.Fe(505, arguments.callee, this, arguments);
                            arguments = J$.N(513, 'arguments', arguments, 4);
                            ctx = J$.N(521, 'ctx', ctx, 4);
                            return J$.X1(497, J$.Rt(489, J$.C(8, J$.B(10, '!=', J$.G(441, J$.R(433, 'ctx', ctx, 0), 'value', 0), J$.T(449, null, 25, false), 0)) ? J$.B(18, '==', J$.G(473, J$.G(465, J$.R(457, 'ctx', ctx, 0), 'value', 0), 'constructor', 0), J$.R(481, 'Array', Array, 2), 0) : J$._()));
                        } catch (J$e) {
                            J$.Ex(1321, J$e);
                        } finally {
                            if (J$.Fr(1329))
                                continue jalangiLabel174;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 505), 0));
            J$.X1(937, J$.P(929, J$.G(561, J$.R(553, 'Arr', Arr, 1), 'prototype', 0), 'isValueValid', J$.T(921, function (ctx) {
                jalangiLabel175:
                    while (true) {
                        try {
                            J$.Fe(881, arguments.callee, this, arguments);
                            arguments = J$.N(889, 'arguments', arguments, 4);
                            ctx = J$.N(897, 'ctx', ctx, 4);
                            J$.N(905, 'isValid', isValid, 0);
                            J$.N(913, 'i', i, 0);
                            var isValid = J$.X1(585, J$.W(577, 'isValid', J$.T(569, true, 23, false), isValid, 1));
                            if (J$.X1(1369, J$.C(48, J$.B(26, '!=', J$.G(601, J$.R(593, 'this', this, 0), 'validator', 0), J$.T(609, null, 25, false), 0)))) {
                                for (var i = J$.X1(633, J$.W(625, 'i', J$.T(617, 0, 22, false), i, 1)); J$.X1(1353, J$.C(40, J$.B(34, '<', J$.R(641, 'i', i, 0), J$.G(665, J$.G(657, J$.R(649, 'ctx', ctx, 0), 'value', 0), 'length', 0), 0))); J$.X1(1361, J$.B(58, '-', i = J$.W(689, 'i', J$.B(50, '+', J$.U(42, '+', J$.R(681, 'i', i, 0)), J$.T(673, 1, 22, false), 0), i, 0), J$.T(697, 1, 22, false), 0))) {
                                    J$.X1(729, J$.M(721, J$.R(705, 'ctx', ctx, 0), 'enter', 0)(J$.R(713, 'i', i, 0)));
                                    if (J$.X1(1337, J$.C(16, J$.U(66, '!', J$.M(761, J$.G(745, J$.R(737, 'this', this, 0), 'validator', 0), 'validate', 0)(J$.R(753, 'ctx', ctx, 0)))))) {
                                        J$.X1(785, isValid = J$.W(777, 'isValid', J$.T(769, false, 23, false), isValid, 0));
                                    }
                                    J$.X1(817, J$.M(809, J$.R(793, 'ctx', ctx, 0), 'leave', 0)(J$.R(801, 'i', i, 0)));
                                    if (J$.X1(1345, J$.C(32, J$.C(24, J$.U(74, '!', J$.R(825, 'isValid', isValid, 0))) ? J$.G(849, J$.G(841, J$.R(833, 'ctx', ctx, 0), 'options', 0), 'stopOnFirstError', 0) : J$._()))) {
                                        break;
                                    }
                                }
                            }
                            return J$.X1(873, J$.Rt(865, J$.R(857, 'isValid', isValid, 0)));
                        } catch (J$e) {
                            J$.Ex(1377, J$e);
                        } finally {
                            if (J$.Fr(1385))
                                continue jalangiLabel175;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 881), 0));
            J$.X1(1001, J$.P(993, J$.G(953, J$.R(945, 'Arr', Arr, 1), 'prototype', 0), 'onValueError', J$.T(985, function (ctx) {
                jalangiLabel176:
                    while (true) {
                        try {
                            J$.Fe(961, arguments.callee, this, arguments);
                            arguments = J$.N(969, 'arguments', arguments, 4);
                            ctx = J$.N(977, 'ctx', ctx, 4);
                        } catch (J$e) {
                            J$.Ex(1393, J$e);
                        } finally {
                            if (J$.Fr(1401))
                                continue jalangiLabel176;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 961), 0));
            J$.X1(1217, J$.P(1209, J$.R(1009, 'Arr', Arr, 1), 'getShort', J$.T(1201, function (corrector) {
                jalangiLabel178:
                    while (true) {
                        try {
                            J$.Fe(1177, arguments.callee, this, arguments);
                            arguments = J$.N(1185, 'arguments', arguments, 4);
                            corrector = J$.N(1193, 'corrector', corrector, 4);
                            return J$.X1(1169, J$.Rt(1161, J$.T(1153, function (opt_validator) {
                                jalangiLabel177:
                                    while (true) {
                                        try {
                                            J$.Fe(1121, arguments.callee, this, arguments);
                                            arguments = J$.N(1129, 'arguments', arguments, 4);
                                            opt_validator = J$.N(1137, 'opt_validator', opt_validator, 4);
                                            J$.N(1145, 'validator', validator, 0);
                                            var validator = J$.X1(1073, J$.W(1065, 'validator', J$.X1(1409, J$.C(56, J$.B(82, '==', J$.R(1017, 'opt_validator', opt_validator, 0), J$.T(1025, null, 25, false), 0))) ? J$.T(1033, null, 25, false) : J$.M(1057, J$.R(1041, 'corrector', corrector, 0), 'toValidator', 0)(J$.R(1049, 'opt_validator', opt_validator, 0)), validator, 1));
                                            return J$.X1(1113, J$.Rt(1105, J$.F(1097, J$.R(1081, 'Arr', Arr, 1), 1)(J$.R(1089, 'validator', validator, 0))));
                                        } catch (J$e) {
                                            J$.Ex(1417, J$e);
                                        } finally {
                                            if (J$.Fr(1425))
                                                continue jalangiLabel177;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1121)));
                        } catch (J$e) {
                            J$.Ex(1433, J$e);
                        } finally {
                            if (J$.Fr(1441))
                                continue jalangiLabel178;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1177), 0));
            J$.X1(1249, J$.P(1241, J$.R(1225, 'module', module, 2), 'exports', J$.R(1233, 'Arr', Arr, 1), 0));
        } catch (J$e) {
            J$.Ex(1449, J$e);
        } finally {
            if (J$.Sr(1457)) {
                J$.L();
                continue jalangiLabel179;
            } else {
                J$.L();
                break jalangiLabel179;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
