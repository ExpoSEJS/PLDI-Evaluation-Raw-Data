J$.iids = {"8":[9,38,9,60],"9":[1,20,1,27],"10":[9,38,9,60],"16":[9,21,9,90],"17":[1,28,1,32],"24":[14,12,14,57],"25":[1,20,1,33],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,16,4,23],"105":[4,24,4,30],"113":[4,16,4,31],"121":[4,16,4,40],"129":[4,16,4,40],"137":[4,16,4,40],"145":[5,21,5,28],"153":[5,29,5,52],"161":[5,21,5,53],"169":[5,21,5,53],"177":[5,21,5,53],"185":[7,5,7,18],"193":[7,24,7,28],"201":[7,5,7,29],"203":[7,5,7,23],"209":[7,5,7,30],"217":[8,5,8,9],"225":[8,17,8,21],"233":[8,5,8,21],"241":[8,5,8,22],"249":[9,5,9,9],"257":[9,21,9,33],"265":[9,38,9,42],"273":[9,38,9,52],"281":[9,56,9,60],"289":[9,63,9,67],"297":[9,63,9,77],"305":[9,63,9,82],"313":[9,85,9,89],"321":[9,5,9,90],"329":[9,5,9,91],"337":[6,10,10,2],"345":[6,10,10,2],"353":[6,10,10,2],"361":[6,10,10,2],"369":[6,10,10,2],"377":[6,10,10,2],"385":[6,10,10,2],"393":[11,1,11,9],"401":[11,10,11,12],"409":[11,14,11,27],"417":[11,1,11,28],"425":[11,1,11,29],"433":[12,1,12,3],"441":[12,1,12,13],"449":[12,21,12,25],"457":[12,1,12,25],"465":[12,1,12,26],"473":[13,1,13,3],"481":[13,1,13,13],"489":[14,12,14,16],"497":[14,12,14,25],"505":[14,29,14,57],"513":[14,12,14,57],"521":[14,5,14,58],"529":[13,31,15,2],"537":[13,31,15,2],"545":[13,31,15,2],"553":[13,1,15,2],"561":[13,1,15,3],"569":[16,1,16,3],"577":[17,16,17,18],"585":[17,19,17,23],"593":[17,25,17,37],"601":[17,12,17,38],"609":[17,12,17,38],"617":[17,5,17,39],"625":[16,9,18,2],"633":[16,9,18,2],"641":[16,9,18,2],"649":[16,9,18,2],"657":[16,9,18,2],"665":[16,1,18,2],"673":[16,1,18,3],"681":[19,1,19,3],"689":[20,12,20,14],"697":[20,12,20,17],"705":[20,12,20,17],"713":[20,5,20,18],"721":[19,15,21,2],"729":[19,15,21,2],"737":[19,15,21,2],"745":[19,15,21,2],"753":[19,1,21,2],"761":[19,1,21,3],"769":[22,1,22,7],"777":[22,18,22,20],"785":[22,1,22,20],"793":[22,1,22,21],"801":[1,1,22,21],"809":[1,1,22,21],"817":[1,1,22,21],"825":[1,1,22,21],"833":[1,1,22,21],"841":[1,1,22,21],"849":[9,38,9,89],"857":[6,10,10,2],"865":[6,10,10,2],"873":[13,31,15,2],"881":[13,31,15,2],"889":[16,9,18,2],"897":[16,9,18,2],"905":[19,15,21,2],"913":[19,15,21,2],"921":[1,1,22,21],"929":[1,1,22,21],"nBranches":6,"originalCodeFileName":"/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/is.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/is_jalangi_.js","code":"\"use strict\";\nvar inherits = require('util').inherits;\nvar TypeValidator = require('./core/type_validator');\n\n\nvar Is = function (type, opt_typeName) {\n\tTypeValidator.call(this);\n\tthis.type = type;\n\tthis.typeName = opt_typeName || (type.prototype != null ? type.prototype.name : null);\n};\ninherits(Is, TypeValidator);\n\nIs.prototype.code = 'is';\nIs.prototype.getExpectedStr = function () {\n\treturn this.typeName || 'type specified by dataspec';\n};\n\nIs.is = function (type, opt_typeName) {\n\treturn new Is(type, opt_typeName);\n};\n\nIs.getShort = function (corrector) {\n\treturn Is.is;\n};\n\n\nmodule.exports = Is;\n"};
jalangiLabel317:
    while (true) {
        try {
            J$.Se(801, '/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/is_jalangi_.js', '/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/is.js');
            J$.N(809, '__secret__S$', __secret__S$, 0);
            J$.N(817, '__secret__traits__', __secret__traits__, 0);
            J$.N(825, 'inherits', inherits, 0);
            J$.N(833, 'TypeValidator', TypeValidator, 0);
            J$.N(841, 'Is', Is, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var inherits = J$.X1(137, J$.W(129, 'inherits', J$.G(121, J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'util', 21, false)), 'inherits', 0), inherits, 3));
            var TypeValidator = J$.X1(177, J$.W(169, 'TypeValidator', J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, './core/type_validator', 21, false)), TypeValidator, 3));
            var Is = J$.X1(385, J$.W(377, 'Is', J$.T(369, function (type, opt_typeName) {
                jalangiLabel313:
                    while (true) {
                        try {
                            J$.Fe(337, arguments.callee, this, arguments);
                            arguments = J$.N(345, 'arguments', arguments, 4);
                            type = J$.N(353, 'type', type, 4);
                            opt_typeName = J$.N(361, 'opt_typeName', opt_typeName, 4);
                            J$.X1(209, J$.M(201, J$.R(185, 'TypeValidator', TypeValidator, 1), 'call', 0)(J$.R(193, 'this', this, 0)));
                            J$.X1(241, J$.P(233, J$.R(217, 'this', this, 0), 'type', J$.R(225, 'type', type, 0), 0));
                            J$.X1(329, J$.P(321, J$.R(249, 'this', this, 0), 'typeName', J$.C(16, J$.R(257, 'opt_typeName', opt_typeName, 0)) ? J$._() : J$.X1(849, J$.C(8, J$.B(10, '!=', J$.G(273, J$.R(265, 'type', type, 0), 'prototype', 0), J$.T(281, null, 25, false), 0))) ? J$.G(305, J$.G(297, J$.R(289, 'type', type, 0), 'prototype', 0), 'name', 0) : J$.T(313, null, 25, false), 0));
                        } catch (J$e) {
                            J$.Ex(857, J$e);
                        } finally {
                            if (J$.Fr(865))
                                continue jalangiLabel313;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 337), Is, 3));
            J$.X1(425, J$.F(417, J$.R(393, 'inherits', inherits, 1), 0)(J$.R(401, 'Is', Is, 1), J$.R(409, 'TypeValidator', TypeValidator, 1)));
            J$.X1(465, J$.P(457, J$.G(441, J$.R(433, 'Is', Is, 1), 'prototype', 0), 'code', J$.T(449, 'is', 21, false), 0));
            J$.X1(561, J$.P(553, J$.G(481, J$.R(473, 'Is', Is, 1), 'prototype', 0), 'getExpectedStr', J$.T(545, function () {
                jalangiLabel314:
                    while (true) {
                        try {
                            J$.Fe(529, arguments.callee, this, arguments);
                            arguments = J$.N(537, 'arguments', arguments, 4);
                            return J$.X1(521, J$.Rt(513, J$.C(24, J$.G(497, J$.R(489, 'this', this, 0), 'typeName', 0)) ? J$._() : J$.T(505, 'type specified by dataspec', 21, false)));
                        } catch (J$e) {
                            J$.Ex(873, J$e);
                        } finally {
                            if (J$.Fr(881))
                                continue jalangiLabel314;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 529), 0));
            J$.X1(673, J$.P(665, J$.R(569, 'Is', Is, 1), 'is', J$.T(657, function (type, opt_typeName) {
                jalangiLabel315:
                    while (true) {
                        try {
                            J$.Fe(625, arguments.callee, this, arguments);
                            arguments = J$.N(633, 'arguments', arguments, 4);
                            type = J$.N(641, 'type', type, 4);
                            opt_typeName = J$.N(649, 'opt_typeName', opt_typeName, 4);
                            return J$.X1(617, J$.Rt(609, J$.F(601, J$.R(577, 'Is', Is, 1), 1)(J$.R(585, 'type', type, 0), J$.R(593, 'opt_typeName', opt_typeName, 0))));
                        } catch (J$e) {
                            J$.Ex(889, J$e);
                        } finally {
                            if (J$.Fr(897))
                                continue jalangiLabel315;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 625), 0));
            J$.X1(761, J$.P(753, J$.R(681, 'Is', Is, 1), 'getShort', J$.T(745, function (corrector) {
                jalangiLabel316:
                    while (true) {
                        try {
                            J$.Fe(721, arguments.callee, this, arguments);
                            arguments = J$.N(729, 'arguments', arguments, 4);
                            corrector = J$.N(737, 'corrector', corrector, 4);
                            return J$.X1(713, J$.Rt(705, J$.G(697, J$.R(689, 'Is', Is, 1), 'is', 0)));
                        } catch (J$e) {
                            J$.Ex(905, J$e);
                        } finally {
                            if (J$.Fr(913))
                                continue jalangiLabel316;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 721), 0));
            J$.X1(793, J$.P(785, J$.R(769, 'module', module, 2), 'exports', J$.R(777, 'Is', Is, 1), 0));
        } catch (J$e) {
            J$.Ex(921, J$e);
        } finally {
            if (J$.Sr(929)) {
                J$.L();
                continue jalangiLabel317;
            } else {
                J$.L();
                break jalangiLabel317;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
