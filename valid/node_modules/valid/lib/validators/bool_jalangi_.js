J$.iids = {"9":[1,20,1,27],"17":[1,28,1,32],"25":[1,20,1,33],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,16,4,23],"105":[4,24,4,30],"113":[4,16,4,31],"121":[4,16,4,40],"129":[4,16,4,40],"137":[4,16,4,40],"145":[5,21,5,28],"153":[5,29,5,52],"161":[5,21,5,53],"169":[5,21,5,53],"177":[5,21,5,53],"185":[7,5,7,18],"193":[7,24,7,28],"201":[7,5,7,29],"203":[7,5,7,23],"209":[7,5,7,30],"217":[6,12,8,2],"225":[6,12,8,2],"233":[6,12,8,2],"241":[6,12,8,2],"249":[6,12,8,2],"257":[9,1,9,9],"265":[9,10,9,14],"273":[9,16,9,29],"281":[9,1,9,30],"289":[9,1,9,31],"297":[10,1,10,5],"305":[10,1,10,15],"313":[10,23,10,30],"321":[10,1,10,30],"329":[10,1,10,31],"337":[11,1,11,5],"345":[11,1,11,15],"353":[11,23,11,29],"361":[11,1,11,29],"369":[11,1,11,30],"377":[12,1,12,5],"385":[12,1,12,15],"393":[12,30,12,55],"401":[12,1,12,55],"409":[12,1,12,56],"417":[13,1,13,5],"425":[13,17,13,21],"433":[13,13,13,23],"441":[13,1,13,23],"449":[13,1,13,24],"457":[14,1,14,5],"465":[15,12,15,16],"473":[15,12,15,21],"481":[15,12,15,21],"489":[15,5,15,22],"497":[14,17,16,2],"505":[14,17,16,2],"513":[14,17,16,2],"521":[14,17,16,2],"529":[14,1,16,2],"537":[14,1,16,3],"545":[17,1,17,7],"553":[17,18,17,22],"561":[17,1,17,22],"569":[17,1,17,23],"577":[1,1,17,23],"585":[1,1,17,23],"593":[1,1,17,23],"601":[1,1,17,23],"609":[1,1,17,23],"617":[1,1,17,23],"625":[6,12,8,2],"633":[6,12,8,2],"641":[14,17,16,2],"649":[14,17,16,2],"657":[1,1,17,23],"665":[1,1,17,23],"nBranches":0,"originalCodeFileName":"/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/bool.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/bool_jalangi_.js","code":"\"use strict\";\nvar inherits = require('util').inherits;\nvar TypeValidator = require('./core/type_validator');\n\n\nvar Bool = function () {\n\tTypeValidator.call(this);\n};\ninherits(Bool, TypeValidator);\n\nBool.prototype.type = Boolean;\nBool.prototype.code = 'bool';\nBool.prototype.expectedStr = 'boolean (true or false)';\n\nBool.bool = new Bool();\n\nBool.getShort = function (corrector) {\n\treturn Bool.bool;\n};\n\n\nmodule.exports = Bool;\n"};
jalangiLabel221:
    while (true) {
        try {
            J$.Se(577, '/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/bool_jalangi_.js', '/home/blake/ExpoSE/Targets/valid/node_modules/valid/lib/validators/bool.js');
            J$.N(585, '__secret__S$', __secret__S$, 0);
            J$.N(593, '__secret__traits__', __secret__traits__, 0);
            J$.N(601, 'inherits', inherits, 0);
            J$.N(609, 'TypeValidator', TypeValidator, 0);
            J$.N(617, 'Bool', Bool, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var inherits = J$.X1(137, J$.W(129, 'inherits', J$.G(121, J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'util', 21, false)), 'inherits', 0), inherits, 3));
            var TypeValidator = J$.X1(177, J$.W(169, 'TypeValidator', J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, './core/type_validator', 21, false)), TypeValidator, 3));
            var Bool = J$.X1(249, J$.W(241, 'Bool', J$.T(233, function () {
                jalangiLabel219:
                    while (true) {
                        try {
                            J$.Fe(217, arguments.callee, this, arguments);
                            arguments = J$.N(225, 'arguments', arguments, 4);
                            J$.X1(209, J$.M(201, J$.R(185, 'TypeValidator', TypeValidator, 1), 'call', 0)(J$.R(193, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(625, J$e);
                        } finally {
                            if (J$.Fr(633))
                                continue jalangiLabel219;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 217), Bool, 3));
            J$.X1(289, J$.F(281, J$.R(257, 'inherits', inherits, 1), 0)(J$.R(265, 'Bool', Bool, 1), J$.R(273, 'TypeValidator', TypeValidator, 1)));
            J$.X1(329, J$.P(321, J$.G(305, J$.R(297, 'Bool', Bool, 1), 'prototype', 0), 'type', J$.R(313, 'Boolean', Boolean, 2), 0));
            J$.X1(369, J$.P(361, J$.G(345, J$.R(337, 'Bool', Bool, 1), 'prototype', 0), 'code', J$.T(353, 'bool', 21, false), 0));
            J$.X1(409, J$.P(401, J$.G(385, J$.R(377, 'Bool', Bool, 1), 'prototype', 0), 'expectedStr', J$.T(393, 'boolean (true or false)', 21, false), 0));
            J$.X1(449, J$.P(441, J$.R(417, 'Bool', Bool, 1), 'bool', J$.F(433, J$.R(425, 'Bool', Bool, 1), 1)(), 0));
            J$.X1(537, J$.P(529, J$.R(457, 'Bool', Bool, 1), 'getShort', J$.T(521, function (corrector) {
                jalangiLabel220:
                    while (true) {
                        try {
                            J$.Fe(497, arguments.callee, this, arguments);
                            arguments = J$.N(505, 'arguments', arguments, 4);
                            corrector = J$.N(513, 'corrector', corrector, 4);
                            return J$.X1(489, J$.Rt(481, J$.G(473, J$.R(465, 'Bool', Bool, 1), 'bool', 0)));
                        } catch (J$e) {
                            J$.Ex(641, J$e);
                        } finally {
                            if (J$.Fr(649))
                                continue jalangiLabel220;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 497), 0));
            J$.X1(569, J$.P(561, J$.R(545, 'module', module, 2), 'exports', J$.R(553, 'Bool', Bool, 1), 0));
        } catch (J$e) {
            J$.Ex(657, J$e);
        } finally {
            if (J$.Sr(665)) {
                J$.L();
                continue jalangiLabel221;
            } else {
                J$.L();
                break jalangiLabel221;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
