/root/Targets/cqs
└─┬ cqs@0.10.0 
  ├── browser-request@0.2.1 
  ├─┬ browserify@2.29.1 
  │ ├─┬ browser-builtins@1.0.7 
  │ │ ├─┬ buffer-browserify@0.1.0 
  │ │ │ └── base64-js@0.0.2 
  │ │ ├── console-browserify@0.1.6 
  │ │ ├── constants-browserify@0.0.1 
  │ │ ├── crypto-browserify@1.0.9 
  │ │ ├─┬ http-browserify@0.1.14 
  │ │ │ └── Base64@0.1.4 
  │ │ ├── punycode@1.2.4 
  │ │ ├── resolve@0.3.1 
  │ │ ├─┬ vm-browserify@0.0.4 
  │ │ │ └── indexof@0.0.1 
  │ │ └─┬ zlib-browserify@0.0.3 
  │ │   └─┬ tape@0.2.2 
  │ │     ├── deep-equal@0.0.0 
  │ │     ├── defined@0.0.0 
  │ │     └── jsonify@0.0.0 
  │ ├─┬ browser-pack@0.10.2 
  │ │ └─┬ combine-source-map@0.1.3 
  │ │   ├── convert-source-map@0.2.6 
  │ │   ├── inline-source-map@0.2.5 
  │ │   └── parse-base64vlq-mappings@0.1.4 
  │ ├─┬ browser-resolve@1.1.4 
  │ │ └── resolve@0.5.1 
  │ ├─┬ concat-stream@1.0.1 
  │ │ └─┬ bops@0.0.6 
  │ │   └── to-utf8@0.0.1 
  │ ├─┬ deps-sort@0.1.2 
  │ │ └── minimist@0.0.10 
  │ ├── duplexer@0.1.1 
  │ ├── inherits@1.0.2 
  │ ├─┬ insert-module-globals@1.2.1 
  │ │ ├── commondir@0.0.2 
  │ │ ├── duplexer@0.0.4 
  │ │ ├── JSONStream@0.4.4 
  │ │ ├─┬ lexical-scope@0.0.15 
  │ │ │ └── astw@0.0.0 
  │ │ ├── process@0.5.2 
  │ │ └── through@2.2.7 
  │ ├─┬ JSONStream@0.6.4 
  │ │ ├── jsonparse@0.0.5 
  │ │ └── through@2.2.7 
  │ ├─┬ module-deps@1.0.2 
  │ │ ├─┬ detective@2.1.2 
  │ │ │ ├── escodegen@0.0.15 
  │ │ │ └── esprima@1.0.2 
  │ │ └── resolve@0.4.3 
  │ ├─┬ optimist@0.5.2 
  │ │ └── wordwrap@0.0.3 
  │ ├─┬ parents@0.0.3 
  │ │ └── path-platform@0.0.1 
  │ ├── shell-quote@0.0.1 
  │ ├── stream-combiner@0.0.4 
  │ ├─┬ syntax-error@0.0.1 
  │ │ └── esprima@0.9.9 
  │ ├── through@2.3.8 
  │ └─┬ umd@1.1.1 
  │   ├─┬ rfile@1.0.0 
  │   │ └── callsite@1.0.0 
  │   ├── ruglify@1.0.0 
  │   └─┬ uglify-js@2.2.5 
  │     ├── optimist@0.3.7 
  │     └─┬ source-map@0.1.43 
  │       └── amdefine@1.0.1 
  ├── debug@0.7.4 
  ├── defaultable@0.7.2 
  ├─┬ follow@0.8.0 
  │ └── request@2.2.9 
  ├─┬ request@2.16.6 
  │ ├── aws-sign@0.2.0 
  │ ├── cookie-jar@0.2.0 
  │ ├── forever-agent@0.2.0 
  │ ├─┬ form-data@0.0.10 
  │ │ ├── async@0.2.10 
  │ │ └─┬ combined-stream@0.0.7 
  │ │   └── delayed-stream@0.0.5 
  │ ├─┬ hawk@0.10.2 
  │ │ ├── boom@0.3.8 
  │ │ ├── cryptiles@0.1.3 
  │ │ ├── hoek@0.7.6 
  │ │ └── sntp@0.1.4 
  │ ├── json-stringify-safe@3.0.0 
  │ ├── mime@1.2.11 
  │ ├── node-uuid@1.4.8 
  │ ├── oauth-sign@0.2.0 
  │ ├── qs@0.5.6 
  │ └── tunnel-agent@0.2.0 
  └─┬ txn@0.2.16 
    ├─┬ debug@2.6.9 
    │ └── ms@2.0.0 
    ├── obj_diff@0.2.0 
    └─┬ request@2.82.0 
      ├── aws-sign2@0.7.0 
      ├── aws4@1.6.0 
      ├── caseless@0.12.0 
      ├─┬ combined-stream@1.0.5 
      │ └── delayed-stream@1.0.0 
      ├── extend@3.0.1 
      ├── forever-agent@0.6.1 
      ├─┬ form-data@2.3.1 
      │ └── asynckit@0.4.0 
      ├─┬ har-validator@5.0.3 
      │ ├─┬ ajv@5.2.3 
      │ │ ├── co@4.6.0 
      │ │ ├── fast-deep-equal@1.0.0 
      │ │ ├── json-schema-traverse@0.3.1 
      │ │ └── json-stable-stringify@1.0.1 
      │ └── har-schema@2.0.0 
      ├─┬ hawk@6.0.2 
      │ ├── boom@4.3.1 
      │ ├─┬ cryptiles@3.1.2 
      │ │ └── boom@5.2.0 
      │ ├── hoek@4.2.0 
      │ └── sntp@2.0.2 
      ├─┬ http-signature@1.2.0 
      │ ├── assert-plus@1.0.0 
      │ ├─┬ jsprim@1.4.1 
      │ │ ├── extsprintf@1.3.0 
      │ │ ├── json-schema@0.2.3 
      │ │ └─┬ verror@1.10.0 
      │ │   └── core-util-is@1.0.2 
      │ └─┬ sshpk@1.13.1 
      │   ├── asn1@0.2.3 
      │   ├── bcrypt-pbkdf@1.0.1 
      │   ├── dashdash@1.14.1 
      │   ├── ecc-jsbn@0.1.1 
      │   ├── getpass@0.1.7 
      │   ├── jsbn@0.1.1 
      │   └── tweetnacl@0.14.5 
      ├── is-typedarray@1.0.0 
      ├── isstream@0.1.2 
      ├── json-stringify-safe@5.0.1 
      ├─┬ mime-types@2.1.17 
      │ └── mime-db@1.30.0 
      ├── oauth-sign@0.8.2 
      ├── performance-now@2.1.0 
      ├── qs@6.5.1 
      ├── safe-buffer@5.1.1 
      ├── stringstream@0.0.5 
      ├─┬ tough-cookie@2.3.3 
      │ └── punycode@1.4.1 
      ├── tunnel-agent@0.6.0 
      └── uuid@3.1.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/cqs/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 19% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","call","apply","isArray","randomBytes","toString","create"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0244 took 17.8277s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (8:4) on program 'use strict'

var net = require('net')
  , tls = require('tls')
  , http = require('http')
  , https = require('https')
  , events = require('events')
  , assert = require('assert')
  , util = require('util')
  ;

exports.httpOverHttp = httpOverHttp
exports.httpsOverHttp = httpsOverHttp
exports.httpOverHttps = httpOverHttps
exports.httpsOverHttps = httpsOverHttps


function httpOverHttp(options) {
  var agent = new TunnelingAgent(options)
  agent.request = http.request
  return agent
}

function httpsOverHttp(options) {
  var agent = new TunnelingAgent(options)
  agent.request = http.request
  agent.createSocket = createSecureSocket
  return agent
}

function httpOverHttps(options) {
  var agent = new TunnelingAgent(options)
  agent.request = https.request
  return agent
}

function httpsOverHttps(options) {
  var agent = new TunnelingAgent(options)
  agent.request = https.request
  agent.createSocket = createSecureSocket
  return agent
}


function TunnelingAgent(options) {
  var self = this
  self.options = options || {}
  self.proxyOptions = self.options.proxy || {}
  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets
  self.requests = []
  self.sockets = []

  self.on('free', function onFree(socket, host, port) {
    for (var i = 0, len = self.requests.length; i < len; ++i) {
      var pending = self.requests[i]
      if (pending.host === host && pending.port === port) {
        // Detect the request to connect same origin server,
        // reuse the connection.
        self.requests.splice(i, 1)
        pending.request.onSocket(socket)
        return
      }
    }
    socket.destroy()
    self.removeSocket(socket)
  })
}
util.inherits(TunnelingAgent, events.EventEmitter)

TunnelingAgent.prototype.addRequest = function addRequest(req, host, port) {
  var self = this

  if (self.sockets.length >= this.maxSockets) {
    // We are over limit so we'll add it to the queue.
    self.requests.push({host: host, port: port, request: req})
    return
  }

  // If we are under maxSockets create a new one.
  self.createSocket({host: host, port: port, request: req}, function(socket) {
    socket.on('free', onFree)
    socket.on('close', onCloseOrRemove)
    socket.on('agentRemove', onCloseOrRemove)
    req.onSocket(socket)

    function onFree() {
      self.emit('free', socket, host, port)
    }

    function onCloseOrRemove(err) {
      self.removeSocket()
      socket.removeListener('free', onFree)
      socket.removeListener('close', onCloseOrRemove)
      socket.removeListener('agentRemove', onCloseOrRemove)
    }
  })
}

TunnelingAgent.prototype.createSocket = function createSocket(options, cb) {
  var self = this
  var placeholder = {}
  self.sockets.push(placeholder)

  var connectOptions = mergeOptions({}, self.proxyOptions, 
    { method: 'CONNECT'
    , path: options.host + ':' + options.port
    , agent: false
    }
  )
  if (connectOptions.proxyAuth) {
    connectOptions.headers = connectOptions.headers || {}
    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +
        new Buffer(connectOptions.proxyAuth).toString('base64')
  }

  debug('making CONNECT request')
  var connectReq = self.request(connectOptions)
  connectReq.useChunkedEncodingByDefault = false // for v0.6
  connectReq.once('response', onResponse) // for v0.6
  connectReq.once('upgrade', onUpgrade)   // for v0.6
  connectReq.once('connect', onConnect)   // for v0.7 or later
  connectReq.once('error', onError)
  connectReq.end()

  function onResponse(res) {
    // Very hacky. This is necessary to avoid http-parser leaks.
    res.upgrade = true
  }

  function onUpgrade(res, socket, head) {
    // Hacky.
    process.nextTick(function() {
      onConnect(res, socket, head)
    })
  }

  function onConnect(res, socket, head) {
    connectReq.removeAllListeners()
    socket.removeAllListeners()

    if (res.statusCode === 200) {
      assert.equal(head.length, 0)
      debug('tunneling connection has established')
      self.sockets[self.sockets.indexOf(placeholder)] = socket
      cb(socket)
    } else {
      debug('tunneling socket could not be established, statusCode=%d', res.statusCode)
      var error = new Error('tunneling socket could not be established, ' + 'statusCode=' + res.statusCode)
      error.code = 'ECONNRESET'
      options.request.emit('error', error)
      self.removeSocket(placeholder)
    }
  }

  function onError(cause) {
    connectReq.removeAllListeners()

    debug('tunneling socket could not be established, cause=%s\n', cause.message, cause.stack)
    var error = new Error('tunneling socket could not be established, ' + 'cause=' + cause.message)
    error.code = 'ECONNRESET'
    options.request.emit('error', error)
    self.removeSocket(placeholder)
  }
}

TunnelingAgent.prototype.removeSocket = function removeSocket(socket) {
  var pos = this.sockets.indexOf(socket)
  if (pos === -1) return
  
  this.sockets.splice(pos, 1)

  var pending = this.requests.shift()
  if (pending) {
    // If we have pending requests and a socket gets closed a new one
    // needs to be created to take over in the pool for the one that closed.
    this.createSocket(pending, function(socket) {
      pending.request.onSocket(socket)
    })
  }
}

function createSecureSocket(options, cb) {
  var self = this
  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {
    // 0 is dummy port for v0.6
    var secureSocket = tls.connect(0, mergeOptions({}, self.options, 
      { servername: options.host
      , socket: socket
      }
    ))
    cb(secureSocket)
  })
}


function mergeOptions(target) {
  for (var i = 1, len = arguments.length; i < len; ++i) {
    var overrides = arguments[i]
    if (typeof overrides === 'object') {
      var keys = Object.keys(overrides)
      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {
        var k = keys[j]
        if (overrides[k] !== undefined) {
          target[k] = overrides[k]
        }
      }
    }
  }
  return target
}


var debug
if (process.env.NODE_DEBUG && /\btunnel\b/.test(process.env.NODE_DEBUG)) {
  debug = function() {
    var args = Array.prototype.slice.call(arguments)
    if (typeof args[0] === 'string') {
      args[0] = 'TUNNEL: ' + args[0]
    } else {
      args.unshift('TUNNEL:')
    }
    console.error.apply(console, args)
  }
} else {
  debug = function() {}
}
exports.debug = debug // for test
 at SyntaxError: Unexpected token (8:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/cqs/node_modules/cqs/api.js. Coverage (Term): 40% Coverage (LOC): 38%
*- File /root/Targets/cqs/node_modules/defaultable/defaultable.js. Coverage (Term): 58% Coverage (LOC): 69%
*- File /root/Targets/cqs/node_modules/cqs/lib.js. Coverage (Term): 5% Coverage (LOC): 8%
*- File /root/Targets/cqs/node_modules/request/index.js. Coverage (Term): 2% Coverage (LOC): 1%
*- File /root/Targets/cqs/node_modules/qs/index.js. Coverage (Term): 6% Coverage (LOC): 13%
*- File /root/Targets/cqs/node_modules/oauth-sign/index.js. Coverage (Term): 23% Coverage (LOC): 38%
*- File /root/Targets/cqs/node_modules/hawk/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/cqs/node_modules/hawk/lib/index.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/cqs/node_modules/boom/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/cqs/node_modules/boom/lib/index.js. Coverage (Term): 16% Coverage (LOC): 23%
*- File /root/Targets/cqs/node_modules/hoek/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/cqs/node_modules/hoek/lib/index.js. Coverage (Term): 9% Coverage (LOC): 22%
*- File /root/Targets/cqs/node_modules/hoek/lib/escape.js. Coverage (Term): 34% Coverage (LOC): 46%
*- File /root/Targets/cqs/node_modules/sntp/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/cqs/node_modules/sntp/lib/index.js. Coverage (Term): 6% Coverage (LOC): 14%
*- File /root/Targets/cqs/node_modules/hawk/lib/server.js. Coverage (Term): 9% Coverage (LOC): 13%
*- File /root/Targets/cqs/node_modules/cryptiles/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/cqs/node_modules/cryptiles/lib/index.js. Coverage (Term): 20% Coverage (LOC): 32%
*- File /root/Targets/cqs/node_modules/hawk/lib/crypto.js. Coverage (Term): 21% Coverage (LOC): 46%
*- File /root/Targets/cqs/node_modules/hawk/lib/utils.js. Coverage (Term): 18% Coverage (LOC): 23%
*- File /root/Targets/cqs/node_modules/hawk/lib/client.js. Coverage (Term): 11% Coverage (LOC): 13%
*- File /root/Targets/cqs/node_modules/hawk/lib/uri.js. Coverage (Term): 9% Coverage (LOC): 11%
*- File /root/Targets/cqs/node_modules/aws-sign/index.js. Coverage (Term): 26% Coverage (LOC): 51%
*- File /root/Targets/cqs/node_modules/node-uuid/uuid.js. Coverage (Term): 22% Coverage (LOC): 33%
*- File /root/Targets/cqs/node_modules/mime/mime.js. Coverage (Term): 77% Coverage (LOC): 92%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
