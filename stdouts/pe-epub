/root/Targets/pe-epub
└─┬ pe-epub@0.3.8 
  ├─┬ archiver@0.9.1 
  │ ├── buffer-crc32@0.2.13 
  │ ├─┬ file-utils@0.1.5 
  │ │ ├─┬ findup-sync@0.1.3 
  │ │ │ └── lodash@2.4.2 
  │ │ ├─┬ glob@3.2.11 
  │ │ │ └── minimatch@0.3.0 
  │ │ ├── iconv-lite@0.2.11 
  │ │ ├── isbinaryfile@0.1.9 
  │ │ ├── lodash@2.1.0 
  │ │ ├─┬ minimatch@0.2.14 
  │ │ │ ├── lru-cache@2.7.3 
  │ │ │ └── sigmund@1.0.1 
  │ │ └── rimraf@2.2.8 
  │ ├── lazystream@0.1.0 
  │ ├── lodash@2.4.2 
  │ ├─┬ readable-stream@1.0.34 
  │ │ ├── core-util-is@1.0.2 
  │ │ ├── inherits@2.0.3 
  │ │ ├── isarray@0.0.1 
  │ │ └── string_decoder@0.10.31 
  │ ├─┬ tar-stream@0.3.3 
  │ │ ├── bl@0.6.0 
  │ │ └─┬ end-of-stream@0.1.5 
  │ │   └─┬ once@1.3.3 
  │ │     └── wrappy@1.0.2 
  │ └─┬ zip-stream@0.3.7 
  │   ├── crc32-stream@0.2.0 
  │   ├─┬ debug@1.0.5 
  │   │ └── ms@2.0.0 
  │   ├── deflate-crc32-stream@0.1.2 
  │   └── lodash@2.4.2 
  ├── buffers@0.1.1 
  ├─┬ cheerio@0.10.8 
  │ ├─┬ cheerio-select@0.0.3 
  │ │ └─┬ CSSselect@0.7.0 
  │ │   ├── boolbase@1.0.0 
  │ │   ├── CSSwhat@0.4.7 
  │ │   ├── domutils@1.4.3 
  │ │   └── nth-check@1.0.1 
  │ ├── entities@0.5.0 
  │ ├─┬ htmlparser2@2.6.0 
  │ │ ├── domelementtype@1.3.0 
  │ │ ├── domhandler@2.0.3 
  │ │ └── domutils@1.0.1 
  │ └── underscore@1.4.4 
  ├─┬ follow-redirects@0.0.3 
  │ └── underscore@1.8.3 
  ├─┬ handlebars@1.0.12 
  │ ├─┬ optimist@0.3.7 
  │ │ └── wordwrap@0.0.3 
  │ └─┬ uglify-js@2.3.6 
  │   ├── async@0.2.10 
  │   └─┬ source-map@0.1.43 
  │     └── amdefine@1.0.1 
  ├── lodash@4.17.4 
  └── q@0.9.7 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/pe-epub/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 37% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","call","RegExp","join","binding","Object","WeakMap","create","Set","Array","ArrayBuffer","DataView","Map","resolve","max","now","apply","Error","bind","parse","sort","reduce","Number","Function"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0494 took 66.0842s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Invalid number (66:17) on program /**
 * node-archiver
 *
 * Copyright (c) 2012-2014 Chris Talkington, contributors.
 * Licensed under the MIT license.
 * https://github.com/ctalkington/node-archiver/blob/master/LICENSE-MIT
 */
var inherits = require('util').inherits;
var Transform = require('readable-stream').Transform;

var util = require('../../util');
var Queue = require('./queue');

var Archiver = module.exports = function(options) {
  options = this.options = util.defaults(options, {
    highWaterMark: 1024 * 1024
  });

  Transform.call(this, options);

  this._moduleOutputPiped = false;

  this._pointer = 0;
  this._files = [];
  this._module = false;

  this._queue = new Queue();
  this._queue.on('error', this._onQueueError.bind(this));
  this._queue.on('entry', this._onQueueEntry.bind(this));
  this._queue.once('end', this._onQueueEnd.bind(this));
};

inherits(Archiver, Transform);

Archiver.prototype._moduleSupports = function(key) {
  this._module.supports = util.defaults(this._module.supports, {
    directory: false
  });

  return this._module.supports[key];
};

Archiver.prototype._normalizeFileData = function(data) {
  data = util.defaults(data, {
    type: 'file',
    name: null,
    date: null,
    mode: null,
    sourcePath: null
  });

  var isDir = data.type === 'directory';

  if (data.name) {
    data.name = util.sanitizePath(data.name);

    if (data.name.slice(-1) === '/') {
      isDir = true;
      data.type = 'directory';
    } else if (isDir) {
      data.name += '/';
    }
  }

  if (typeof data.mode === 'number') {
    data.mode &= 0777;
  } else {
    data.mode = isDir ? 0755 : 0644;
  }

  data.date = util.dateify(data.date);

  return data;
};

Archiver.prototype._onModuleError = function(err) {
  this.emit('error', err);
};

Archiver.prototype._onQueueEnd = function() {
  if (typeof this._module.finalize === 'function') {
    this._module.finalize();
  } else if (typeof this._module.end === 'function') {
    this._module.end();
  } else {
    this.emit('error', new Error('format module missing finalize and end method'));
  }
};

Archiver.prototype._onQueueEntry = function(entry) {
  var nextCallback = function(err, file) {
    if (err) {
      this.emit('error', err);
      return;
    }

    file = file || entry.data;

    this.emit('entry', file);
    this._files.push(file);
    this._queue.next();
  }.bind(this);

  this._module.append(entry.source, entry.data, nextCallback);
};

Archiver.prototype._onQueueError = function(err) {
  this.emit('error', err);
};

Archiver.prototype._pipeModuleOutput = function() {
  this._module.on('error', this._onModuleError.bind(this));
  this._module.pipe(this);

  this._moduleOutputPiped = true;
};

Archiver.prototype._processFile = function(source, data, callback) {
  this.emit('error', new Error('method not implemented'));
};

Archiver.prototype._transform = function(chunk, encoding, callback) {
  if (chunk) {
    this._pointer += chunk.length;
  }

  callback(null, chunk);
};

Archiver.prototype.append = function(source, data) {
  data = this._normalizeFileData(data);

  if (typeof data.name !== 'string' || data.name.length === 0) {
    this.emit('error', new Error('entry name must be a non-empty string value'));
    return this;
  }

  if (data.type === 'directory' && !this._moduleSupports('directory')) {
    this.emit('error', new Error('entries of "' + data.type + '" type not currently supported by this module'));
    return;
  }

  source = util.normalizeInputSource(source);

  if (Buffer.isBuffer(source)) {
    data.sourceType = 'buffer';
  } else if (util.isStream(source)) {
    data.sourceType = 'stream';
  } else {
    this.emit('error', new Error('input source must be valid Stream or Buffer instance'));
    return this;
  }

  this._queue.add({
    data: data,
    source: source
  });

  return this;
};

Archiver.prototype.bulk = function(mappings) {
  if (!Array.isArray(mappings)) {
    mappings = [mappings];
  }

  var self = this;
  var files = util.normalizeFilesArray(mappings);

  files.forEach(function(file){
    var isExpandedPair = file.orig.expand || false;
    var fileData = file.data || {};

    file.src.forEach(function(filepath) {
      var data = util._.extend({}, fileData);
      var name = isExpandedPair ? file.dest : util.unixifyPath(file.dest || '', filepath);

      if (name === '.') {
        return;
      }

      var stat = util.stat(filepath);
      var source;

      if (!stat) {
        return;
      }

      data.name = util.sanitizePath(name);
      data.sourcePath = filepath;

      if (stat.isFile()) {
        data.type = 'file';
        data.sourceType = 'stream';

        source = util.lazyReadStream(filepath);
      } else if (stat.isDirectory() && self._moduleSupports('directory')) {
        data.name = util.trailingSlashIt(data.name);
        data.type = 'directory';
        data.sourcePath = util.trailingSlashIt(data.sourcePath);
        data.sourceType = 'buffer';

        source = new Buffer(0);
      } else {
        return;
      }

      self._queue.add({
        data: data,
        source: source
      });
    });
  });

  return this;
};

Archiver.prototype.file = function(filepath, data) {
  data = this._normalizeFileData(data);

  if (typeof filepath !== 'string' || filepath.length === 0) {
    this.emit('error', new Error('filepath must be a non-empty string value'));
    return this;
  }

  if (util.file.isFile(filepath)) {
    if (typeof data.name !== 'string' || data.name.length === 0) {
      data.name = util.sanitizePath(filepath);
    }

    data.sourcePath = filepath;
    data.sourceType = 'stream';

    this._queue.add({
      data: data,
      source: util.lazyReadStream(filepath)
    });
  } else {
    this.emit('error', new Error('invalid file: ' + filepath));
  }

  return this;
};

Archiver.prototype.finalize = function(callback) {
  this._queue.close();

  return this;
};

Archiver.prototype.setModule = function(module) {
  if (this._moduleOutputPiped) {
    this.emit('error', new Error('format module already set'));
    return;
  }

  this._module = module;
  this._pipeModuleOutput();
};

Archiver.prototype.pointer = function() {
  return this._pointer;
}; at SyntaxError: Invalid number (66:17)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1607:12)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/pe-epub/node_modules/pe-epub/Peepub.js. Coverage (Term): 2% Coverage (LOC): 2%
*- File /root/Targets/pe-epub/node_modules/lodash/lodash.js. Coverage (Term): 22% Coverage (LOC): 35%
*- File /root/Targets/pe-epub/node_modules/handlebars/lib/handlebars.js. Coverage (Term): 78% Coverage (LOC): 85%
*- File /root/Targets/pe-epub/node_modules/handlebars/lib/handlebars/base.js. Coverage (Term): 24% Coverage (LOC): 39%
*- File /root/Targets/pe-epub/node_modules/handlebars/lib/handlebars/utils.js. Coverage (Term): 33% Coverage (LOC): 56%
*- File /root/Targets/pe-epub/node_modules/handlebars/lib/handlebars/compiler/index.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/pe-epub/node_modules/handlebars/lib/handlebars/runtime.js. Coverage (Term): 9% Coverage (LOC): 17%
*- File /root/Targets/pe-epub/node_modules/handlebars/lib/handlebars/compiler/visitor.js. Coverage (Term): 70% Coverage (LOC): 91%
*- File /root/Targets/pe-epub/node_modules/handlebars/lib/handlebars/compiler/printer.js. Coverage (Term): 18% Coverage (LOC): 34%
*- File /root/Targets/pe-epub/node_modules/handlebars/lib/handlebars/compiler/ast.js. Coverage (Term): 18% Coverage (LOC): 33%
*- File /root/Targets/pe-epub/node_modules/handlebars/lib/handlebars/compiler/compiler.js. Coverage (Term): 5% Coverage (LOC): 14%
*- File /root/Targets/pe-epub/node_modules/handlebars/lib/handlebars/compiler/base.js. Coverage (Term): 55% Coverage (LOC): 64%
*- File /root/Targets/pe-epub/node_modules/handlebars/lib/handlebars/compiler/parser.js. Coverage (Term): 39% Coverage (LOC): 78%
*- File /root/Targets/pe-epub/node_modules/cheerio/index.js. Coverage (Term): 89% Coverage (LOC): 100%
*- File /root/Targets/pe-epub/node_modules/cheerio/lib/cheerio.js. Coverage (Term): 35% Coverage (LOC): 41%
*- File /root/Targets/pe-epub/node_modules/cheerio-select/index.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/pe-epub/node_modules/cheerio-select/lib/select.js. Coverage (Term): 27% Coverage (LOC): 35%
*- File /root/Targets/pe-epub/node_modules/CSSselect/index.js. Coverage (Term): 49% Coverage (LOC): 69%
*- File /root/Targets/pe-epub/node_modules/CSSselect/lib/pseudos.js. Coverage (Term): 12% Coverage (LOC): 22%
*- File /root/Targets/pe-epub/node_modules/domutils/index.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/pe-epub/node_modules/domutils/lib/stringify.js. Coverage (Term): 25% Coverage (LOC): 55%
*- File /root/Targets/pe-epub/node_modules/domelementtype/index.js. Coverage (Term): 54% Coverage (LOC): 93%
*- File /root/Targets/pe-epub/node_modules/domutils/lib/traversal.js. Coverage (Term): 34% Coverage (LOC): 67%
*- File /root/Targets/pe-epub/node_modules/domutils/lib/manipulation.js. Coverage (Term): 11% Coverage (LOC): 18%
*- File /root/Targets/pe-epub/node_modules/domutils/lib/querying.js. Coverage (Term): 10% Coverage (LOC): 24%
*- File /root/Targets/pe-epub/node_modules/domutils/lib/legacy.js. Coverage (Term): 11% Coverage (LOC): 26%
*- File /root/Targets/pe-epub/node_modules/domutils/lib/helpers.js. Coverage (Term): 19% Coverage (LOC): 19%
*- File /root/Targets/pe-epub/node_modules/nth-check/index.js. Coverage (Term): 74% Coverage (LOC): 88%
*- File /root/Targets/pe-epub/node_modules/nth-check/parse.js. Coverage (Term): 17% Coverage (LOC): 17%
*- File /root/Targets/pe-epub/node_modules/nth-check/compile.js. Coverage (Term): 18% Coverage (LOC): 18%
*- File /root/Targets/pe-epub/node_modules/boolbase/index.js. Coverage (Term): 53% Coverage (LOC): 75%
*- File /root/Targets/pe-epub/node_modules/CSSselect/lib/attributes.js. Coverage (Term): 7% Coverage (LOC): 17%
*- File /root/Targets/pe-epub/node_modules/CSSselect/lib/compile.js. Coverage (Term): 24% Coverage (LOC): 24%
*- File /root/Targets/pe-epub/node_modules/CSSwhat/index.js. Coverage (Term): 13% Coverage (LOC): 25%
*- File /root/Targets/pe-epub/node_modules/CSSselect/lib/general.js. Coverage (Term): 19% Coverage (LOC): 27%
*- File /root/Targets/pe-epub/node_modules/CSSselect/lib/sort.js. Coverage (Term): 28% Coverage (LOC): 57%
*- File /root/Targets/pe-epub/node_modules/cheerio/lib/parse.js. Coverage (Term): 20% Coverage (LOC): 22%
*- File /root/Targets/pe-epub/node_modules/htmlparser2/lib/index.js. Coverage (Term): 17% Coverage (LOC): 38%
*- File /root/Targets/pe-epub/node_modules/underscore/underscore.js. Coverage (Term): 18% Coverage (LOC): 32%
*- File /root/Targets/pe-epub/node_modules/cheerio/lib/utils.js. Coverage (Term): 45% Coverage (LOC): 72%
*- File /root/Targets/pe-epub/node_modules/entities/index.js. Coverage (Term): 41% Coverage (LOC): 57%
*- File /root/Targets/pe-epub/node_modules/entities/compile.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/pe-epub/node_modules/cheerio/lib/static.js. Coverage (Term): 24% Coverage (LOC): 27%
*- File /root/Targets/pe-epub/node_modules/cheerio/lib/render.js. Coverage (Term): 22% Coverage (LOC): 47%
*- File /root/Targets/pe-epub/node_modules/cheerio/lib/api/attributes.js. Coverage (Term): 13% Coverage (LOC): 16%
*- File /root/Targets/pe-epub/node_modules/cheerio/lib/api/traversing.js. Coverage (Term): 18% Coverage (LOC): 31%
*- File /root/Targets/pe-epub/node_modules/cheerio/lib/api/manipulation.js. Coverage (Term): 19% Coverage (LOC): 22%
*- File /root/Targets/pe-epub/node_modules/q/q.js. Coverage (Term): 18% Coverage (LOC): 27%
*- File evalIndirect. Coverage (Term): 14% Coverage (LOC): 20%
*- File /root/Targets/pe-epub/node_modules/pe-epub/src/libs/jszip.js. Coverage (Term): 7% Coverage (LOC): 11%
*- File /root/Targets/pe-epub/node_modules/archiver/lib/archiver.js. Coverage (Term): 10% Coverage (LOC): 14%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
