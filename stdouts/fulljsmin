/root/Targets/fulljsmin
└── fulljsmin@0.1.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/fulljsmin/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0562 took 2.0948s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node

var minifier = require('../lib/fulljsmin.js')
  , sys = require('sys')
  , fs = require('fs')
;

var filenameOrType = process.argv[2] || 'err';
    auto           = false                      // set true to generate code if file not found
    buf            = ''
    type           = 'javascript'               // default jsmin type
;

// check for file
try {
    var fileExists = fs.existsSync(filenameOrType);

    buf = fileExists
            ? fs.readFileSync(filenameOrType).toString()
            : 'err'
    ;

    type = filenameOrType.match(/\.js$/)
            ? 'javascript'
            : filenameOrType.match(/\.css$/)
                ? 'css'
                : 'err'
    ;

    if ((! auto) && (buf == 'err')) {
        console.log('file not found');
    }
} catch(ex) {}

if (auto) {
    // no buffer, generate an appropriate string
    if (buf == '' || buf == 'err') {
        buf = filenameOrType == 'js'
                ? "var o = {\n  k: 'value',\n  foo: 'bar'\n};"
                : filenameOrType == 'css'
                    ? "body {\n  margin: 0px;\n  padding: 0px;\n}\n"
                    : 'err'
        ;

        type = filenameOrType;
    }
}

// help
if (buf == 'err') {
    var msg = '  usage: ' + process.argv[1];
        msg += (auto) ? ' [<filename>|js|css]' : ' <filename>';

    console.log(msg);
    process.exit(1);
}

// minify js or css
var minified = minifier.jsmin({
    source: buf
  , type: type
});

// output
console.log(minified);
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
