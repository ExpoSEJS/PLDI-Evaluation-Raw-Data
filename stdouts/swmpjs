/root/Targets/swmpjs
└─┬ swmpjs@1.2.3 
  ├── ejs@2.5.7 
  ├─┬ express@4.15.5 
  │ ├─┬ accepts@1.3.4 
  │ │ ├─┬ mime-types@2.1.17 
  │ │ │ └── mime-db@1.30.0 
  │ │ └── negotiator@0.6.1 
  │ ├── array-flatten@1.1.1 
  │ ├── content-disposition@0.5.2 
  │ ├── content-type@1.0.4 
  │ ├── cookie@0.3.1 
  │ ├── cookie-signature@1.0.6 
  │ ├─┬ debug@2.6.9 
  │ │ └── ms@2.0.0 
  │ ├── depd@1.1.1 
  │ ├── encodeurl@1.0.1 
  │ ├── escape-html@1.0.3 
  │ ├── etag@1.8.1 
  │ ├─┬ finalhandler@1.0.6 
  │ │ └── unpipe@1.0.0 
  │ ├── fresh@0.5.2 
  │ ├── merge-descriptors@1.0.1 
  │ ├── methods@1.1.2 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── parseurl@1.3.2 
  │ ├── path-to-regexp@0.1.7 
  │ ├─┬ proxy-addr@1.1.5 
  │ │ ├── forwarded@0.1.2 
  │ │ └── ipaddr.js@1.4.0 
  │ ├── qs@6.5.0 
  │ ├── range-parser@1.2.0 
  │ ├─┬ send@0.15.6 
  │ │ ├── destroy@1.0.4 
  │ │ ├─┬ http-errors@1.6.2 
  │ │ │ └── inherits@2.0.3 
  │ │ └── mime@1.3.4 
  │ ├── serve-static@1.12.6 
  │ ├── setprototypeof@1.0.3 
  │ ├── statuses@1.3.1 
  │ ├─┬ type-is@1.6.15 
  │ │ └── media-typer@0.3.0 
  │ ├── utils-merge@1.0.0 
  │ └── vary@1.1.2 
  ├── minimist@1.2.0 
  └─┬ morgan@1.9.0 
    ├─┬ basic-auth@2.0.0 
    │ └── safe-buffer@5.1.1 
    └── on-headers@1.0.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/swmpjs/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0457 took 2.1041s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node
var fs = require('fs');
var ejs = require('ejs');
var express = require('express');
var morgan = require('morgan');
var os = require('os');
var config = require('minimist')(process.argv.slice(2), {
	string: ["theme","listen","interface","port","title","reload"],
	boolean: "errors",
	default: {ip:"127.0.0.1",port:"8000",theme:"simplex",errors:false,title:"SWMPjs | {hostname}",interface:"eth0",reload:"60"},
	unknown:function(arg){
		console.log("Available arguments:");
		console.log("\t--errors\tfalse\tshow errors?.");
		console.log("\t--listen\t127.0.0.1\taddress to listen on");
		console.log("\t--theme\tsimplex\tpick a stylesheet from the css/themes directory");
		console.log("\t--port\t8000\tWhat port to listen on?");
		console.log("\t--interface\teth0\tWhat interface to report IP for?");
		console.log("\t--reload\t60\tHow often to refresh the page (in seconds)?");
	}
});

var system = require('./lib/system.js');

var app = express();

var getTitle = function(){
	return config.title.replace("{hostname}",os.hostname())
		.replace("{ip}",system.getLanIp([],config).join(" "))
		.replace("{os}",system.getOperatingSystem([]))
		.replace("{kernel}",system.getKernel([]));
}

app.use(morgan('combined'));
app.set('trust proxy', 'loopback,uniquelocal');
app.set('view engine','ejs');
app.get('/', function(req, res){
	var errors = [];
	var data = {
		hostname: system.getSystemHostname(errors),
		ip: system.getLanIp(errors,config),
		cores: system.getCpuCoresNumber(errors),
		os: system.getOperatingSystem(errors),
		kernel: system.getKernel(errors),
		uptime: system.getUptime(errors),
		bootTime: system.getBootupTime(errors),

		cpumodel: system.getCpuModel(errors),
		cpufrequency: system.getCpuFrequency(errors),
		cpucache: system.getCpuCacheSize(errors),
		cputemp: system.getCpuTemperature(errors),

		cpudata: system.getCpuLoadData(errors),

		ramdata: system.getRamInfo(errors),

		swap: system.getSwapData(errors),
		network: system.getNetworkData(errors),
		disk: system.getDiskData(errors),
		errors: errors,
		title: getTitle(),
		config: {
			theme: req.query && req.query.theme ? req.query.theme : config.theme,
			reload: config.reload,
			show_errors: config.errors
		}
	}
	res.render('index.ejs', data);
});
app.use('/js', express.static(__dirname+'/js'));
app.use('/css', express.static(__dirname+'/css'));
app.use('/', express.static(__dirname,{extensions: ['svg','png','ico']}));
app.listen(parseInt(config.port),config.listen);
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
