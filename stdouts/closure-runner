/root/Targets/closure-runner
└─┬ closure-runner@0.1.15 
  ├─┬ async@2.5.0 
  │ └── lodash@4.17.4 
  ├─┬ mkdirp@0.5.1 
  │ └── minimist@0.0.8 
  ├─┬ optimist@0.6.1 
  │ └── wordwrap@0.0.3 
  ├─┬ rimraf@2.6.2 
  │ └─┬ glob@7.1.2 
  │   ├── fs.realpath@1.0.0 
  │   ├─┬ inflight@1.0.6 
  │   │ └── wrappy@1.0.2 
  │   ├── inherits@2.0.3 
  │   ├─┬ minimatch@3.0.4 
  │   │ └─┬ brace-expansion@1.1.8 
  │   │   ├── balanced-match@1.0.0 
  │   │   └── concat-map@0.0.1 
  │   ├── once@1.4.0 
  │   └── path-is-absolute@1.0.1 
  ├─┬ shelljs@0.7.8 
  │ ├── interpret@1.0.4 
  │ └─┬ rechoir@0.6.2 
  │   └─┬ resolve@1.4.0 
  │     └── path-parse@1.0.5 
  └── win-spawn@2.0.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/closure-runner/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0478 took 4.1101s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Octal literal in strict mode (54:31) on program var async = require('async');
var path = require('path');


var Runner = require('./lib/runner');
var Environment = require('./lib/environment');
var ProcessOutput = require('./lib/process-output');


function main(callback) {
  if (!process.env['PWD']) {
    process.env['PWD'] = process.cwd();
  }

  var env = new Environment(process.env);
  var stderr = new ProcessOutput(process.stderr);

  env.addConfig(path.join(__dirname, './client.defaults.json'));
  env.addConfig(path.join(env.getProjectDirname(), './client.json'));
  env.setArguments(process.argv.slice(2));

  var project_dirname = env.getProjectDirname();

  if (env.get('use-goog-in-tasks')) {
    var closure_dirname_rel = env.get('closure-library');
    var closure_dirname = path.join(project_dirname, closure_dirname_rel);
    var goog_bootstrap_filename = path.join(
        closure_dirname, 'closure', 'goog', 'bootstrap', 'nodejs.js');

    require(goog_bootstrap_filename);
  }

  async.eachSeries(env.getApps(), function (app, callback) {
    var args = env.getArguments();
    var runner = new Runner(app, args, stderr);

    runner.setConfig(env.getConfig());
    runner.setProjectDirname(project_dirname);
    runner.setTasks(env.getTasks());

    if (env.get('use-goog-in-tasks')) {
      if (!runner.getAppConfigValue('output.deps')) {
        throw new Error('output.deps is required for use-goog-in-tasks');
      }
      runner.runTask('deps', function () {
        require(path.join(project_dirname, runner.getAppConfigValue('output.deps')));
        runner.runMainTask(env.getMainTaskId(), callback);
      });
    } else {
      runner.runMainTask(env.getMainTaskId(), callback);
    }
  }, function (err) {
    if (err) {
      if (err.message.indexOf('\033[') !== -1) {
        stderr.write(err.message + '\n');
      } else {
        stderr.write('\033[0;31m' + err.message + '\033[0m\n');
      }
    }
    callback(err);
  });
}


function exit(err) {
  if (err) {
    process.exit(1);
  }
}


if (require.main === module) {
  main(exit);
} else {
  exports.Environment = Environment;
  exports.ProcessOutput = ProcessOutput;
  exports.Runner = Runner;

  exports.main = main.bind(null, exit);
  exports.run = main.bind(null);
}
 at SyntaxError: Octal literal in strict mode (54:31)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readEscapedChar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:3023:16)
    at Parser.pp$7.readString (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2935:23)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2724:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp$3.parseSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1738:37)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
