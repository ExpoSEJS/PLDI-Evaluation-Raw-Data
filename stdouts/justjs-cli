/root/Targets/justjs-cli
└─┬ justjs-cli@0.0.32 
  ├─┬ fs-extra@0.24.0 
  │ ├── graceful-fs@4.1.11 
  │ ├── jsonfile@2.4.0 
  │ ├── path-is-absolute@1.0.1 
  │ └─┬ rimraf@2.6.2 
  │   └─┬ glob@7.1.2 
  │     ├── fs.realpath@1.0.0 
  │     ├─┬ inflight@1.0.6 
  │     │ └── wrappy@1.0.2 
  │     ├── inherits@2.0.3 
  │     ├─┬ minimatch@3.0.4 
  │     │ └─┬ brace-expansion@1.1.8 
  │     │   ├── balanced-match@1.0.0 
  │     │   └── concat-map@0.0.1 
  │     └── once@1.4.0 
  └─┬ yargs@3.27.0 
    ├── camelcase@1.2.1 
    ├─┬ cliui@2.1.0 
    │ ├─┬ center-align@0.1.3 
    │ │ ├─┬ align-text@0.1.4 
    │ │ │ ├─┬ kind-of@3.2.2 
    │ │ │ │ └── is-buffer@1.1.5 
    │ │ │ ├── longest@1.0.1 
    │ │ │ └── repeat-string@1.6.1 
    │ │ └── lazy-cache@1.0.4 
    │ ├── right-align@0.1.3 
    │ └── wordwrap@0.0.2 
    ├── decamelize@1.2.0 
    ├─┬ os-locale@1.4.0 
    │ └─┬ lcid@1.0.0 
    │   └── invert-kv@1.0.0 
    ├── window-size@0.1.4 
    └── y18n@3.2.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/justjs-cli/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0272 took 1.7197s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node
var argv = require('yargs')
  .usage('Usage: $0 --name [name] --path [path] --cordova [boolean]')
  .demand(['name'])
  .default('path', '.')
  .default('cordova', 'true')
  .argv;

var fs = require('fs-extra')

var appFolder = argv.path+'/'+argv.name;
var frameworkName = 'JustJs.min.js';
var GruntFile = 'GruntFile.js';
var YuiDocFile = 'yuidoc.json';
var npmPackageFile = 'package.json';
var JustJSFile = 'JustJs.json';
var GruntExtract = 'grunt-extractHtml';
var CDVBuildSH = 'cdv_build.sh';
var simpleBlog = 'simpleBlog';
var HTMLIndex = argv.name+'.html';
var JSIndex = argv.name+'.js';
var CSSIndex = argv.name+'.scss';


/* CREATE APP FOLDER STRUCTURE */
function structure(cbk){
  fs.mkdirsSync(appFolder)
  fs.mkdirsSync(appFolder+'/node_modules');
  fs.mkdirsSync(appFolder+'/dist');
  fs.mkdirsSync(appFolder+'/cordova');
  fs.mkdirsSync(appFolder+'/doc');
  cbk();
};


/* COPY CONFIG FILES AND LIB */

function config(cbk){
  
  fs.copy(__dirname+'/'+simpleBlog, appFolder, function (err) {
    if (err) return console.error(err)
  });
  
  fs.copy(__dirname+'/'+GruntExtract, appFolder+'/node_modules/'+GruntExtract, function (err) {
    if (err) return console.error(err)
  });

cbk();
};


/* INITIALIZING CORDOVA PROJECT */
function cordova(cbk){
  var execCdv = require('child_process').exec;

  var cmd = 'cordova create '+appFolder+'/cordova js.app.'+argv.name + ' js.app.'+argv.name + ' && cd '+appFolder+'/cordova && cordova platform add android';
  execCdv(cmd, function(error, stdout, stderr) {
    // command output is in stdout
    console.log(error, stdout, stderr);

  });
  cbk();
}


/* INITIALIZING GRUNT */
function grunt(cbk){
  var execNpm = require('child_process').exec;

  var cmd2 = 'cd '+appFolder + ' && npm install';
  execNpm(cmd2, function(error, stdout, stderr) {
    // command output is in stdout
    console.log(error, stdout, stderr);
  });
  cbk();
}

structure(function(){
  config(function(){
    cordova(function(){
      grunt(function(){
        console.log('done');
      });
    });
  });
});
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
