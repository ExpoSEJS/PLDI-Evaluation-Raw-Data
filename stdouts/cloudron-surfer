
> dtrace-provider@0.2.8 install /root/Targets/cloudron-surfer/node_modules/cloudron-surfer/node_modules/dtrace-provider
> node-gyp rebuild

make: Entering directory '/root/Targets/cloudron-surfer/node_modules/cloudron-surfer/node_modules/dtrace-provider/build'
  TOUCH Release/obj.target/DTraceProviderStub.stamp
make: Leaving directory '/root/Targets/cloudron-surfer/node_modules/cloudron-surfer/node_modules/dtrace-provider/build'
/root/Targets/cloudron-surfer
└─┬ cloudron-surfer@4.2.0 
  ├── abbrev@1.1.0 
  ├── accepts@1.3.3 
  ├── ajv@4.11.8 
  ├── array-flatten@1.1.1 
  ├── array-union@1.0.2 
  ├── array-uniq@1.0.3 
  ├── arrify@1.0.1 
  ├── asn1@0.2.3 
  ├── assert-plus@0.2.0 
  ├── async@1.5.2 
  ├── asynckit@0.4.0 
  ├── aws-sign2@0.6.0 
  ├── aws4@1.6.0 
  ├── balanced-match@1.0.0 
  ├── basic-auth@1.1.0 
  ├── batch@0.6.1 
  ├── bcrypt-pbkdf@1.0.1 
  ├── bcryptjs@2.4.3 
  ├─┬ body-parser@1.17.2 
  │ └── debug@2.6.7 
  ├── boom@2.10.1 
  ├── brace-expansion@1.1.8 
  ├── bunyan@0.22.1 
  ├── bytes@2.4.0 
  ├── caseless@0.12.0 
  ├── co@4.6.0 
  ├── colors@1.1.2 
  ├── combined-stream@1.0.5 
  ├── commander@2.11.0 
  ├── component-emitter@1.2.1 
  ├── compressible@2.0.10 
  ├─┬ compression@1.7.0 
  │ └── bytes@2.5.0 
  ├── concat-map@0.0.1 
  ├─┬ connect-lastmile@0.0.10 
  │ ├── debug@2.1.3 
  │ └── ms@0.7.0 
  ├── connect-timeout@1.9.0 
  ├── content-disposition@0.5.2 
  ├── content-type@1.0.2 
  ├── cookie@0.3.1 
  ├── cookie-parser@1.4.3 
  ├── cookie-signature@1.0.6 
  ├── cookiejar@2.0.6 
  ├── core-util-is@1.0.2 
  ├── crc@3.4.4 
  ├── cryptiles@2.0.5 
  ├─┬ dashdash@1.14.1 
  │ └── assert-plus@1.0.0 
  ├── debug@2.6.8 
  ├── del@2.2.2 
  ├── delayed-stream@1.0.0 
  ├── depd@1.1.0 
  ├── destroy@1.0.4 
  ├── double-ended-queue@2.1.0-0 
  ├── dtrace-provider@0.2.8 
  ├── ecc-jsbn@0.1.1 
  ├── ee-first@1.1.1 
  ├── encodeurl@1.0.1 
  ├── escape-html@1.0.3 
  ├── etag@1.8.0 
  ├─┬ express@4.15.3 
  │ └── debug@2.6.7 
  ├── express-session@1.15.4 
  ├── extend@3.0.1 
  ├── extsprintf@1.0.2 
  ├── fd-slicer@1.0.1 
  ├─┬ finalhandler@1.0.3 
  │ └── debug@2.6.7 
  ├── forever-agent@0.6.1 
  ├── form-data@2.1.4 
  ├── formidable@1.0.17 
  ├── forwarded@0.1.0 
  ├── fresh@0.5.0 
  ├── fs.realpath@1.0.0 
  ├─┬ getpass@0.1.7 
  │ └── assert-plus@1.0.0 
  ├── glob@7.1.2 
  ├── globby@5.0.0 
  ├── har-schema@1.0.5 
  ├── har-validator@4.2.1 
  ├── hawk@3.1.3 
  ├── hoek@2.16.3 
  ├── http-errors@1.6.1 
  ├── http-signature@1.1.1 
  ├── iconv-lite@0.4.15 
  ├── inflight@1.0.6 
  ├── inherits@2.0.3 
  ├── ipaddr.js@1.3.0 
  ├── is-path-cwd@1.0.0 
  ├── is-path-in-cwd@1.0.0 
  ├── is-path-inside@1.0.0 
  ├── is-typedarray@1.0.0 
  ├── isarray@0.0.1 
  ├── isstream@0.1.2 
  ├── jsbn@0.1.1 
  ├── json-schema@0.2.3 
  ├── json-stable-stringify@1.0.1 
  ├── json-stringify-safe@5.0.1 
  ├── jsonify@0.0.0 
  ├─┬ jsprim@1.4.0 
  │ └── assert-plus@1.0.0 
  ├─┬ ldapjs@0.7.1 
  │ ├── asn1@0.2.1 
  │ └── assert-plus@0.1.5 
  ├── media-typer@0.3.0 
  ├── merge-descriptors@1.0.1 
  ├── methods@1.1.2 
  ├── mime@1.3.4 
  ├── mime-db@1.27.0 
  ├── mime-types@2.1.15 
  ├── minimatch@3.0.4 
  ├── minimist@0.0.8 
  ├── mkdirp@0.5.1 
  ├── morgan@1.8.2 
  ├── ms@2.0.0 
  ├── multiparty@4.1.3 
  ├── mv@0.0.5 
  ├── negotiator@0.6.1 
  ├── nopt@2.1.1 
  ├── oauth-sign@0.8.2 
  ├── object-assign@4.1.1 
  ├── on-finished@2.3.0 
  ├── on-headers@1.0.1 
  ├── once@1.4.0 
  ├── parseurl@1.3.1 
  ├── passport@0.2.2 
  ├── passport-http-bearer@1.0.1 
  ├── passport-ldapjs@1.0.2 
  ├── passport-strategy@1.0.0 
  ├── path-is-absolute@1.0.1 
  ├── path-is-inside@1.0.2 
  ├── path-to-regexp@0.1.7 
  ├── pause@0.0.1 
  ├── pend@1.2.0 
  ├── performance-now@0.2.0 
  ├── pify@2.3.0 
  ├── pinkie@2.0.4 
  ├── pinkie-promise@2.0.1 
  ├─┬ pooling@0.4.6 
  │ ├── assert-plus@0.1.5 
  │ └── once@1.3.0 
  ├── proxy-addr@1.1.4 
  ├── punycode@1.4.1 
  ├── qs@6.4.0 
  ├── random-bytes@1.0.0 
  ├── range-parser@1.2.0 
  ├── raw-body@2.2.0 
  ├── readable-stream@1.0.27-1 
  ├── readline-sync@1.4.7 
  ├── redis@2.7.1 
  ├── redis-commands@1.3.1 
  ├── redis-parser@2.6.0 
  ├── reduce-component@1.0.1 
  ├─┬ request@2.81.0 
  │ └── uuid@3.1.0 
  ├── rimraf@2.6.1 
  ├── safe-buffer@5.1.1 
  ├── safetydance@0.1.1 
  ├─┬ send@0.15.3 
  │ └── debug@2.6.7 
  ├── serve-index@1.9.0 
  ├── serve-static@1.12.3 
  ├── setprototypeof@1.0.3 
  ├── sntp@1.0.9 
  ├─┬ sshpk@1.13.1 
  │ └── assert-plus@1.0.0 
  ├── statuses@1.3.1 
  ├── string_decoder@0.10.31 
  ├── stringstream@0.0.5 
  ├─┬ superagent@1.8.5 
  │ ├── extend@3.0.0 
  │ ├── form-data@1.0.0-rc3 
  │ └── qs@2.3.3 
  ├── tough-cookie@2.3.2 
  ├── tunnel-agent@0.6.0 
  ├── tweetnacl@0.14.5 
  ├── type-is@1.6.15 
  ├── uid-safe@2.1.4 
  ├── underscore@1.8.3 
  ├── unpipe@1.0.0 
  ├── utils-merge@1.0.0 
  ├── uuid@3.1.0 
  ├── vary@1.1.1 
  ├─┬ vasync@1.4.0 
  │ ├── extsprintf@1.0.0 
  │ ├── json-schema@0.2.2 
  │ ├─┬ jsprim@0.3.0 
  │ │ └── verror@1.3.3 
  │ └── verror@1.1.0 
  ├── verror@1.3.6 
  └── wrappy@1.0.2 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/cloudron-surfer/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0401 took 2.9534s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node

'use strict';


var express = require('express'),
    morgan = require('morgan'),
    passport = require('passport'),
    path = require('path'),
    compression = require('compression'),
    session = require('express-session'),
    bodyParser = require('body-parser'),
    cookieParser = require('cookie-parser'),
    lastMile = require('connect-lastmile'),
    multipart = require('./src/multipart'),
    mkdirp = require('mkdirp'),
    auth = require('./src/auth.js'),
    serveIndex = require('serve-index'),
    files = require('./src/files.js')(path.resolve(__dirname, process.argv[2] || 'files'));

var app = express();
var router = new express.Router();

var multipart = multipart({ maxFieldsSize: 2 * 1024, limit: '512mb', timeout: 3 * 60 * 1000 });

router.post  ('/api/login', auth.login);
router.post  ('/api/logout', auth.verify, auth.logout);
router.get   ('/api/profile', auth.verify, auth.getProfile);
router.get   ('/api/files/*', auth.verify, files.get);
router.post  ('/api/files/*', auth.verify, multipart, files.post);
router.put   ('/api/files/*', auth.verify, files.put);
router.delete('/api/files/*', auth.verify, files.del);
router.get   ('/api/healthcheck', function (req, res) { res.status(200).send(); });

// welcome screen in case / does not serve up any file yet
function welcomePage(req, res, next) {
    if (req.path !== '/') return next();

    res.status(200).sendFile(path.join(__dirname, '/frontend/welcome.html'));
}
// router.get('/', function (req, res) { res.status(200).sendFile(path.join(__dirname, '/frontend/welcome.html')); });

var rootFolder = path.resolve(__dirname, process.argv[2] || 'files');

app.use(morgan('dev'));
app.use(compression());
app.use('/api', bodyParser.json());
app.use('/api', bodyParser.urlencoded({ extended: false, limit: '100mb' }));
app.use('/api', cookieParser());
app.use('/api', session({ secret: 'surfin surfin', resave: false, saveUninitialized: false }));
app.use('/api', passport.initialize());
app.use('/api', passport.session());
app.use(router);
app.use('/_admin', express.static(__dirname + '/frontend'));
app.use('/', express.static(rootFolder));
app.use('/', welcomePage);
app.use('/', serveIndex(rootFolder, { icons: true }));
app.use(lastMile());

var server = app.listen(3000, function () {
    var host = server.address().address;
    var port = server.address().port;

    var basePath = path.resolve(__dirname, process.argv[2] || 'files');
    mkdirp.sync(basePath);

    console.log('Surfer listening at http://%s:%s', host, port);
    console.log('Using base path', basePath);
});
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
