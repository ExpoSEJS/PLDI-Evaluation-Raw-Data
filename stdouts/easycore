/root/Targets/easycore
└── easycore@1.1.4 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/easycore/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0492 took 5.2337s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node

var argv = require('yargs').argv;
var init = require('./lib/init');
var install = require('./lib/install');

/**
 * 初始化命令处理
 * --pm  (project module)初始化项目公共组件
 * --np  (new project)初始化项目
 * --cm  (common module)初始化公共组件
 * --cp  (common project)初始化公共项目
 */
var type = argv.pm ? "pm" : argv.cm ? "cm" : argv.cp ? "cp" : argv.np ? "np" : "help";

//命令分组处理
switch (true) {
	//创建模板
	case /^(?:pm|cm|cp|np)$/.test(type):
		init(type, typeof argv[type] === "string" ? argv[type] : "./");
		break;

	//安装环境
	case argv._.indexOf("install") >= 0:
		install();
		break;

		//帮助
	case type === "help":
		console.log([
			"\nUsage: easycore <commands>",
			"",
			"where <commands> is one of :",
			"",
			"    --pm  创建一个项目模块(project module)",
			"    --cm  创建一个通用模块(common module)",
			"    --cp  创建一个通用项目(common project)",
			"    --np  创建一个新项目(new project)",
			"    install  安装开发环境所需要的nodejs模块",
			"    start    启动开发调试环境ftl-node"
		].join("\n"));
		break;
}
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
