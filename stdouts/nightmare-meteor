
> electron-prebuilt@1.4.13 postinstall /root/Targets/nightmare-meteor/node_modules/electron-prebuilt
> node install.js

/root/Targets/nightmare-meteor
└─┬ nightmare-meteor@2.4.21 
  ├─┬ debug@2.6.9 
  │ └── ms@2.0.0 
  ├─┬ deep-defaults@1.0.4 
  │ └── lodash@3.0.1 
  ├─┬ defaults@1.0.3 
  │ └── clone@1.0.2 
  ├─┬ electron-prebuilt@1.4.13 
  │ ├─┬ electron-download@3.3.0 
  │ │ ├─┬ fs-extra@0.30.0 
  │ │ │ ├── graceful-fs@4.1.11 
  │ │ │ ├── jsonfile@2.4.0 
  │ │ │ └── klaw@1.3.1 
  │ │ ├── home-path@1.0.5 
  │ │ ├── minimist@1.2.0 
  │ │ ├─┬ nugget@2.0.1 
  │ │ │ ├─┬ pretty-bytes@1.0.4 
  │ │ │ │ ├── get-stdin@4.0.1 
  │ │ │ │ └─┬ meow@3.7.0 
  │ │ │ │   ├─┬ camelcase-keys@2.1.0 
  │ │ │ │   │ └── camelcase@2.1.1 
  │ │ │ │   ├── decamelize@1.2.0 
  │ │ │ │   ├─┬ loud-rejection@1.6.0 
  │ │ │ │   │ ├─┬ currently-unhandled@0.4.1 
  │ │ │ │   │ │ └── array-find-index@1.0.2 
  │ │ │ │   │ └── signal-exit@3.0.2 
  │ │ │ │   ├── map-obj@1.0.1 
  │ │ │ │   ├─┬ normalize-package-data@2.4.0 
  │ │ │ │   │ ├── hosted-git-info@2.5.0 
  │ │ │ │   │ ├─┬ is-builtin-module@1.0.0 
  │ │ │ │   │ │ └── builtin-modules@1.1.1 
  │ │ │ │   │ └─┬ validate-npm-package-license@3.0.1 
  │ │ │ │   │   ├─┬ spdx-correct@1.0.2 
  │ │ │ │   │   │ └── spdx-license-ids@1.2.2 
  │ │ │ │   │   └── spdx-expression-parse@1.0.4 
  │ │ │ │   ├─┬ read-pkg-up@1.0.1 
  │ │ │ │   │ ├── find-up@1.1.2 
  │ │ │ │   │ └─┬ read-pkg@1.1.0 
  │ │ │ │   │   ├─┬ load-json-file@1.1.0 
  │ │ │ │   │   │ ├─┬ parse-json@2.2.0 
  │ │ │ │   │   │ │ └─┬ error-ex@1.3.1 
  │ │ │ │   │   │ │   └── is-arrayish@0.2.1 
  │ │ │ │   │   │ ├── pify@2.3.0 
  │ │ │ │   │   │ └─┬ strip-bom@2.0.0 
  │ │ │ │   │   │   └── is-utf8@0.2.1 
  │ │ │ │   │   └── path-type@1.1.0 
  │ │ │ │   ├─┬ redent@1.0.0 
  │ │ │ │   │ ├─┬ indent-string@2.1.0 
  │ │ │ │   │ │ └─┬ repeating@2.0.1 
  │ │ │ │   │ │   └── is-finite@1.0.2 
  │ │ │ │   │ └── strip-indent@1.0.1 
  │ │ │ │   └── trim-newlines@1.0.0 
  │ │ │ ├─┬ progress-stream@1.2.0 
  │ │ │ │ ├── speedometer@0.1.4 
  │ │ │ │ └─┬ through2@0.2.3 
  │ │ │ │   ├─┬ readable-stream@1.1.14 
  │ │ │ │   │ ├── isarray@0.0.1 
  │ │ │ │   │ └── string_decoder@0.10.31 
  │ │ │ │   └─┬ xtend@2.1.2 
  │ │ │ │     └── object-keys@0.4.0 
  │ │ │ ├─┬ request@2.82.0 
  │ │ │ │ ├── aws-sign2@0.7.0 
  │ │ │ │ ├── aws4@1.6.0 
  │ │ │ │ ├── caseless@0.12.0 
  │ │ │ │ ├─┬ combined-stream@1.0.5 
  │ │ │ │ │ └── delayed-stream@1.0.0 
  │ │ │ │ ├── extend@3.0.1 
  │ │ │ │ ├── forever-agent@0.6.1 
  │ │ │ │ ├─┬ form-data@2.3.1 
  │ │ │ │ │ └── asynckit@0.4.0 
  │ │ │ │ ├─┬ har-validator@5.0.3 
  │ │ │ │ │ ├─┬ ajv@5.2.3 
  │ │ │ │ │ │ ├── co@4.6.0 
  │ │ │ │ │ │ ├── fast-deep-equal@1.0.0 
  │ │ │ │ │ │ ├── json-schema-traverse@0.3.1 
  │ │ │ │ │ │ └─┬ json-stable-stringify@1.0.1 
  │ │ │ │ │ │   └── jsonify@0.0.0 
  │ │ │ │ │ └── har-schema@2.0.0 
  │ │ │ │ ├─┬ hawk@6.0.2 
  │ │ │ │ │ ├── boom@4.3.1 
  │ │ │ │ │ ├─┬ cryptiles@3.1.2 
  │ │ │ │ │ │ └── boom@5.2.0 
  │ │ │ │ │ ├── hoek@4.2.0 
  │ │ │ │ │ └── sntp@2.0.2 
  │ │ │ │ ├─┬ http-signature@1.2.0 
  │ │ │ │ │ ├── assert-plus@1.0.0 
  │ │ │ │ │ ├─┬ jsprim@1.4.1 
  │ │ │ │ │ │ ├── extsprintf@1.3.0 
  │ │ │ │ │ │ ├── json-schema@0.2.3 
  │ │ │ │ │ │ └── verror@1.10.0 
  │ │ │ │ │ └─┬ sshpk@1.13.1 
  │ │ │ │ │   ├── asn1@0.2.3 
  │ │ │ │ │   ├── bcrypt-pbkdf@1.0.1 
  │ │ │ │ │   ├── dashdash@1.14.1 
  │ │ │ │ │   ├── ecc-jsbn@0.1.1 
  │ │ │ │ │   ├── getpass@0.1.7 
  │ │ │ │ │   ├── jsbn@0.1.1 
  │ │ │ │ │   └── tweetnacl@0.14.5 
  │ │ │ │ ├── is-typedarray@1.0.0 
  │ │ │ │ ├── isstream@0.1.2 
  │ │ │ │ ├── json-stringify-safe@5.0.1 
  │ │ │ │ ├─┬ mime-types@2.1.17 
  │ │ │ │ │ └── mime-db@1.30.0 
  │ │ │ │ ├── oauth-sign@0.8.2 
  │ │ │ │ ├── performance-now@2.1.0 
  │ │ │ │ ├── qs@6.5.1 
  │ │ │ │ ├── stringstream@0.0.5 
  │ │ │ │ ├─┬ tough-cookie@2.3.3 
  │ │ │ │ │ └── punycode@1.4.1 
  │ │ │ │ ├── tunnel-agent@0.6.0 
  │ │ │ │ └── uuid@3.1.0 
  │ │ │ ├─┬ single-line-log@1.1.2 
  │ │ │ │ └─┬ string-width@1.0.2 
  │ │ │ │   ├── code-point-at@1.1.0 
  │ │ │ │   ├─┬ is-fullwidth-code-point@1.0.0 
  │ │ │ │   │ └── number-is-nan@1.0.1 
  │ │ │ │   └─┬ strip-ansi@3.0.1 
  │ │ │ │     └── ansi-regex@2.1.1 
  │ │ │ └── throttleit@0.0.2 
  │ │ ├─┬ path-exists@2.1.0 
  │ │ │ └─┬ pinkie-promise@2.0.1 
  │ │ │   └── pinkie@2.0.4 
  │ │ ├─┬ rc@1.2.1 
  │ │ │ ├── deep-extend@0.4.2 
  │ │ │ ├── ini@1.3.4 
  │ │ │ └── strip-json-comments@2.0.1 
  │ │ ├── semver@5.4.1 
  │ │ └─┬ sumchecker@1.3.1 
  │ │   └── es6-promise@4.1.1 
  │ └─┬ extract-zip@1.6.5 
  │   ├─┬ concat-stream@1.6.0 
  │   │ ├─┬ readable-stream@2.3.3 
  │   │ │ ├── isarray@1.0.0 
  │   │ │ └── string_decoder@1.0.3 
  │   │ └── typedarray@0.0.6 
  │   ├─┬ debug@2.2.0 
  │   │ └── ms@0.7.1 
  │   ├─┬ mkdirp@0.5.0 
  │   │ └── minimist@0.0.8 
  │   └─┬ yauzl@2.4.1 
  │     └─┬ fd-slicer@1.0.1 
  │       └── pend@1.2.0 
  ├─┬ enqueue@1.0.2 
  │ └── sliced@0.0.5 
  ├── function-source@0.1.0 
  ├── jsesc@0.5.0 
  ├─┬ minstache@1.2.0 
  │ └─┬ commander@1.0.4 
  │   └── keypress@0.1.0 
  ├─┬ mkdirp@0.5.1 
  │ └── minimist@0.0.8 
  ├── object-assign@4.1.1 
  ├─┬ once@1.4.0 
  │ └── wrappy@1.0.2 
  ├─┬ rimraf@2.6.2 
  │ └─┬ glob@7.1.2 
  │   ├── fs.realpath@1.0.0 
  │   ├── inflight@1.0.6 
  │   ├── inherits@2.0.3 
  │   ├─┬ minimatch@3.0.4 
  │   │ └─┬ brace-expansion@1.1.8 
  │   │   ├── balanced-match@1.0.0 
  │   │   └── concat-map@0.0.1 
  │   └── path-is-absolute@1.0.1 
  ├── sliced@1.0.1 
  └─┬ split2@2.2.0 
    └─┬ through2@2.0.3 
      ├─┬ readable-stream@2.3.3 
      │ ├── core-util-is@1.0.2 
      │ ├── isarray@1.0.0 
      │ ├── process-nextick-args@1.0.7 
      │ ├── safe-buffer@5.1.1 
      │ ├── string_decoder@1.0.3 
      │ └── util-deprecate@1.0.2 
      └── xtend@4.0.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/nightmare-meteor/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 24% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","reduce","parseInt","charCodeAt","abs","Symbol","join","toString","Function"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0523 took 22.1711s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Assigning to arguments in strict mode (7:30) on program (function(obj) { 
  function escape(html) {
                  jalangiLabel470:
                      while (true) {
                          try {
                              J$.Fe(2145, arguments.callee, this, arguments);
                              arguments = J$.N(2153, 'arguments', arguments, 4);
                              html = J$.N(2161, 'html', html, 4);
                              return J$.X1(2137, J$.Rt(2129, J$.M(2121, J$.M(2097, J$.M(2073, J$.M(2049, J$.F(2025, J$.R(2009, 'String', String, 2), 0)(J$.R(2017, 'html', html, 0)), 'replace', 0)(J$.T(2033, /&/g, 14, false), J$.T(2041, '&amp;', 21, false)), 'replace', 0)(J$.T(2057, /"/g, 14, false), J$.T(2065, '&quot;', 21, false)), 'replace', 0)(J$.T(2081, /</g, 14, false), J$.T(2089, '&lt;', 21, false)), 'replace', 0)(J$.T(2105, />/g, 14, false), J$.T(2113, '&gt;', 21, false))));
                          } catch (J$e) {
                              J$.Ex(2505, J$e);
                          } finally {
                              if (J$.Fr(2513))
                                  continue jalangiLabel470;
                              else
                                  return J$.Ra();
                          }
                      }
              };

  function section(obj, prop, negate, thunk) {
                  jalangiLabel469:
                      while (true) {
                          try {
                              J$.Fe(1953, arguments.callee, this, arguments);
                              arguments = J$.N(1961, 'arguments', arguments, 4);
                              obj = J$.N(1969, 'obj', obj, 4);
                              prop = J$.N(1977, 'prop', prop, 4);
                              negate = J$.N(1985, 'negate', negate, 4);
                              thunk = J$.N(1993, 'thunk', thunk, 4);
                              J$.N(2001, 'val', val, 0);
                              var val = J$.X1(1681, J$.W(1673, 'val', J$.G(1665, J$.R(1649, 'obj', obj, 0), J$.R(1657, 'prop', prop, 0), 4), val, 1));
                              if (J$.X1(2457, J$.C(80, J$.M(1705, J$.R(1689, 'Array', Array, 2), 'isArray', 0)(J$.R(1697, 'val', val, 0)))))
                                  return J$.X1(1761, J$.Rt(1753, J$.M(1745, J$.M(1729, J$.R(1713, 'val', val, 0), 'map', 0)(J$.R(1721, 'thunk', thunk, 0)), 'join', 0)(J$.T(1737, '', 21, false))));
                              if (J$.X1(2465, J$.C(88, J$.B(210, '==', J$.T(1769, 'function', 21, false), J$.U(202, 'typeof', J$.R(1777, 'val', val, 0)), 0))))
                                  return J$.X1(1841, J$.Rt(1833, J$.M(1825, J$.R(1785, 'val', val, 0), 'call', 0)(J$.R(1793, 'obj', obj, 0), J$.F(1817, J$.R(1801, 'thunk', thunk, 0), 0)(J$.R(1809, 'obj', obj, 0)))));
                              if (J$.X1(2473, J$.C(96, J$.R(1849, 'negate', negate, 0))))
                                  J$.X1(1873, val = J$.W(1865, 'val', J$.U(218, '!', J$.R(1857, 'val', val, 0)), val, 0));
                              if (J$.X1(2481, J$.C(104, J$.R(1881, 'val', val, 0))))
                                  return J$.X1(1921, J$.Rt(1913, J$.F(1905, J$.R(1889, 'thunk', thunk, 0), 0)(J$.R(1897, 'obj', obj, 0))));
                              return J$.X1(1945, J$.Rt(1937, J$.T(1929, '', 21, false)));
                          } catch (J$e) {
                              J$.Ex(2489, J$e);
                          } finally {
                              if (J$.Fr(2497))
                                  continue jalangiLabel469;
                              else
                                  return J$.Ra();
                          }
                      }
              };

  return "(function javascript () {\n  var ipc = __nightmare.ipc;\n  try {\n    var response = (" + obj.src + ")(" + obj.args + ")\n    ipc.send('response', response);\n  } catch (e) {\n    ipc.send('error', e.message);\n  }\n})()" }) at SyntaxError: Assigning to arguments in strict mode (7:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.checkLVal (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1472:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1606:12)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseTryStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:897:23)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:702:31)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/nightmare-meteor/node_modules/nightmare-meteor/index.js. Coverage (Term): 3% Coverage (LOC): 3%
*- File /root/Targets/nightmare-meteor/node_modules/nightmare-meteor/lib/nightmare.js. Coverage (Term): 7% Coverage (LOC): 9%
*- File /root/Targets/nightmare-meteor/node_modules/debug/src/index.js. Coverage (Term): 81% Coverage (LOC): 83%
*- File /root/Targets/nightmare-meteor/node_modules/debug/src/node.js. Coverage (Term): 34% Coverage (LOC): 43%
*- File /root/Targets/nightmare-meteor/node_modules/debug/src/debug.js. Coverage (Term): 44% Coverage (LOC): 48%
*- File /root/Targets/nightmare-meteor/node_modules/ms/index.js. Coverage (Term): 12% Coverage (LOC): 15%
*- File /root/Targets/nightmare-meteor/node_modules/electron-prebuilt/index.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/nightmare-meteor/node_modules/function-source/index.js. Coverage (Term): 27% Coverage (LOC): 40%
*- File /root/Targets/nightmare-meteor/node_modules/nightmare-meteor/lib/actions.js. Coverage (Term): 11% Coverage (LOC): 22%
*- File /root/Targets/nightmare-meteor/node_modules/sliced/index.js. Coverage (Term): 18% Coverage (LOC): 25%
*- File /root/Targets/nightmare-meteor/node_modules/jsesc/jsesc.js. Coverage (Term): 18% Coverage (LOC): 23%
*- File /root/Targets/nightmare-meteor/node_modules/once/once.js. Coverage (Term): 31% Coverage (LOC): 34%
*- File /root/Targets/nightmare-meteor/node_modules/wrappy/wrappy.js. Coverage (Term): 31% Coverage (LOC): 48%
*- File /root/Targets/nightmare-meteor/node_modules/nightmare-meteor/lib/ipc.js. Coverage (Term): 12% Coverage (LOC): 13%
*- File /root/Targets/nightmare-meteor/node_modules/split2/index.js. Coverage (Term): 14% Coverage (LOC): 18%
*- File /root/Targets/nightmare-meteor/node_modules/split2/node_modules/through2/through2.js. Coverage (Term): 24% Coverage (LOC): 26%
*- File /root/Targets/nightmare-meteor/node_modules/split2/node_modules/readable-stream/transform.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/nightmare-meteor/node_modules/split2/node_modules/readable-stream/readable.js. Coverage (Term): 61% Coverage (LOC): 60%
*- File /root/Targets/nightmare-meteor/node_modules/split2/node_modules/readable-stream/lib/_stream_readable.js. Coverage (Term): 8% Coverage (LOC): 14%
*- File /root/Targets/nightmare-meteor/node_modules/process-nextick-args/index.js. Coverage (Term): 22% Coverage (LOC): 19%
*- File /root/Targets/nightmare-meteor/node_modules/split2/node_modules/isarray/index.js. Coverage (Term): 62% Coverage (LOC): 83%
*- File /root/Targets/nightmare-meteor/node_modules/split2/node_modules/readable-stream/lib/internal/streams/stream.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/nightmare-meteor/node_modules/safe-buffer/index.js. Coverage (Term): 36% Coverage (LOC): 44%
*- File /root/Targets/nightmare-meteor/node_modules/core-util-is/lib/util.js. Coverage (Term): 33% Coverage (LOC): 64%
*- File /root/Targets/nightmare-meteor/node_modules/inherits/inherits.js. Coverage (Term): 74% Coverage (LOC): 88%
*- File /root/Targets/nightmare-meteor/node_modules/split2/node_modules/readable-stream/lib/internal/streams/BufferList.js. Coverage (Term): 19% Coverage (LOC): 29%
*- File /root/Targets/nightmare-meteor/node_modules/split2/node_modules/readable-stream/lib/internal/streams/destroy.js. Coverage (Term): 15% Coverage (LOC): 21%
*- File /root/Targets/nightmare-meteor/node_modules/split2/node_modules/readable-stream/lib/_stream_writable.js. Coverage (Term): 14% Coverage (LOC): 19%
*- File /root/Targets/nightmare-meteor/node_modules/util-deprecate/node.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/nightmare-meteor/node_modules/split2/node_modules/readable-stream/lib/_stream_duplex.js. Coverage (Term): 35% Coverage (LOC): 44%
*- File /root/Targets/nightmare-meteor/node_modules/split2/node_modules/readable-stream/lib/_stream_transform.js. Coverage (Term): 14% Coverage (LOC): 22%
*- File /root/Targets/nightmare-meteor/node_modules/split2/node_modules/readable-stream/lib/_stream_passthrough.js. Coverage (Term): 59% Coverage (LOC): 73%
*- File /root/Targets/nightmare-meteor/node_modules/split2/node_modules/xtend/immutable.js. Coverage (Term): 32% Coverage (LOC): 33%
*- File /root/Targets/nightmare-meteor/node_modules/nightmare-meteor/lib/javascript.js. Coverage (Term): 83% Coverage (LOC): 100%
*- File /root/Targets/nightmare-meteor/node_modules/minstache/index.js. Coverage (Term): 50% Coverage (LOC): 58%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
