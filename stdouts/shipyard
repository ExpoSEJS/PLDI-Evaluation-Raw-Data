
> contextify@0.1.15 install /root/Targets/shipyard/node_modules/contextify
> node-gyp rebuild

make: Entering directory '/root/Targets/shipyard/node_modules/contextify/build'
  CXX(target) Release/obj.target/contextify/src/contextify.o
contextify.target.mk:94: recipe for target 'Release/obj.target/contextify/src/contextify.o' failed
make: Leaving directory '/root/Targets/shipyard/node_modules/contextify/build'
/root/Targets/shipyard
└─┬ shipyard@0.2.0 
  ├── commander@0.6.1 
  ├─┬ dryice@0.2.5  (git://github.com/seanmonstar/dryice.git#8b798ed50aa00c03cbbd46ad001246849815e9aa)
  │ └─┬ uglify-js@3.1.2 
  │   ├── commander@2.11.0 
  │   └── source-map@0.5.7 
  └─┬ jsdom@0.2.19 
    ├── cssom@0.2.5 
    ├─┬ cssstyle@0.2.37 
    │ └── cssom@0.3.2 
    ├── htmlparser@1.7.7 
    └─┬ request@2.83.0 
      ├── aws-sign2@0.7.0 
      ├── aws4@1.6.0 
      ├── caseless@0.12.0 
      ├─┬ combined-stream@1.0.5 
      │ └── delayed-stream@1.0.0 
      ├── extend@3.0.1 
      ├── forever-agent@0.6.1 
      ├─┬ form-data@2.3.1 
      │ └── asynckit@0.4.0 
      ├─┬ har-validator@5.0.3 
      │ ├─┬ ajv@5.2.3 
      │ │ ├── co@4.6.0 
      │ │ ├── fast-deep-equal@1.0.0 
      │ │ ├── json-schema-traverse@0.3.1 
      │ │ └─┬ json-stable-stringify@1.0.1 
      │ │   └── jsonify@0.0.0 
      │ └── har-schema@2.0.0 
      ├─┬ hawk@6.0.2 
      │ ├── boom@4.3.1 
      │ ├─┬ cryptiles@3.1.2 
      │ │ └── boom@5.2.0 
      │ ├── hoek@4.2.0 
      │ └── sntp@2.0.2 
      ├─┬ http-signature@1.2.0 
      │ ├── assert-plus@1.0.0 
      │ ├─┬ jsprim@1.4.1 
      │ │ ├── extsprintf@1.3.0 
      │ │ ├── json-schema@0.2.3 
      │ │ └─┬ verror@1.10.0 
      │ │   └── core-util-is@1.0.2 
      │ └─┬ sshpk@1.13.1 
      │   ├── asn1@0.2.3 
      │   ├── bcrypt-pbkdf@1.0.1 
      │   ├── dashdash@1.14.1 
      │   ├── ecc-jsbn@0.1.1 
      │   ├── getpass@0.1.7 
      │   ├── jsbn@0.1.1 
      │   └── tweetnacl@0.14.5 
      ├── is-typedarray@1.0.0 
      ├── isstream@0.1.2 
      ├── json-stringify-safe@5.0.1 
      ├─┬ mime-types@2.1.17 
      │ └── mime-db@1.30.0 
      ├── oauth-sign@0.8.2 
      ├── performance-now@2.1.0 
      ├── qs@6.5.1 
      ├── safe-buffer@5.1.1 
      ├── stringstream@0.0.5 
      ├─┬ tough-cookie@2.3.3 
      │ └── punycode@1.4.1 
      ├── tunnel-agent@0.6.0 
      └── uuid@3.1.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/shipyard/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 1 running / 1 errors / 46% coverage ] ****** [1 done /0 queued / 1 running / 1 errors / 46% coverage ] ****** [2 done /0 queued / 0 running / 1 errors / 46% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","toString","apply","bound registerExts"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0,"Switcher":false,"Target_Switch_Base":0} start 0.0269 took 3.5556s
*-- Errors occured in test {"_bound":0,"Switcher":false,"Target_Switch_Base":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program var Class = require('../../class/Class'),
    Template = require('../Template'),
    assert = require('../../error/assert'),
    logging = require('../../logging');

var log = logging.getLogger('shipyard.template.ejs');

var EJS = module.exports = new Class({

    Extends: Template,

    compile: function compile() {
        assert(this.text, 'Template cannot compile with no text.');
        var head = 'var p=[],print=function(){p.push.apply(p,arguments);};',
            wrapper = ["with(__view){with(__o){p.push(\'", "');}}return p.join('');"];
        
        var inner = this.text
            .replace(/[\r\t\n]/g, " ")
            .split("<%").join("\t")
            .replace(/((^|%>)[^\t]*)'/g, "$1\r")
            
            //operators. like <%, <%=, <%-, <%?
            
            .replace(/\t=(.*?)%>/g, "',escape($1 || ''),'")
            .replace(/\t-(.*?)%>/g, "',$1 || '','")
            .replace(/\t\?(.*?)%>/g, "',(typeof $1 != 'undefined')?escape($1):'','")
    
            
            .split("\t").join("');")
            .split("%>").join("p.push('")
            .split("\r").join("\\'");
        
        this.compiled = new Function('__view','__o', head + wrapper.join(inner));
        return this.compiled;
    }

});

//<node>
// For now, we need to define how to load EJS templates as modules.
var env = require('../../env');
require.extensions['.ejs'] = function(module, filename) {
    var content;
    if (env.platform.node) {
        content = require('fs').readFileSync(filename, 'utf8');
    } else {
        content = require._load(filename);
    }
    var template = new EJS(content);
    try {
        module.exports = template.compile();
    } catch (ex) {
        log.error(ex);
        throw new Error('Syntax error in ' + filename);
    }
};
//</node>
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"_bound":1} start 3.6226 took 2.3572s
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 76% Coverage (LOC): 84%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 19% Coverage (LOC): 37%
*- File /root/Targets/shipyard/node_modules/shipyard/index.js. Coverage (Term): 90% Coverage (LOC): 100%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 2 paths with 1 errors **
