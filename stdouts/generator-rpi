/root/Targets/generator-rpi
└─┬ generator-rpi@0.1.23 
  ├─┬ abc-generator@0.1.5 
  │ ├── async@0.2.10 
  │ └── lodash@1.2.1 
  ├─┬ git-config@0.0.6 
  │ └── iniparser@1.0.5 
  ├─┬ mocha@1.10.0 
  │ ├── commander@0.6.1 
  │ ├── debug@0.7.4 
  │ ├── diff@1.0.2 
  │ ├─┬ glob@3.2.1 
  │ │ ├── graceful-fs@1.2.3 
  │ │ ├── inherits@1.0.2 
  │ │ └─┬ minimatch@0.2.14 
  │ │   ├── lru-cache@2.7.3 
  │ │   └── sigmund@1.0.1 
  │ ├── growl@1.7.0 
  │ ├─┬ jade@0.26.3 
  │ │ └── mkdirp@0.3.0 
  │ ├── mkdirp@0.3.3 
  │ └── ms@0.3.0 
  ├─┬ promise@8.0.1 
  │ └── asap@2.0.6 
  ├─┬ rmdir@1.0.4 
  │ └─┬ node.flow@1.2.3 
  │   └─┬ node.extend@1.0.8 
  │     ├── is@0.2.7 
  │     └── object-keys@0.4.0 
  ├── semver@5.1.1 
  ├── shelljs@0.5.3 
  └─┬ yeoman-generator@0.13.4 
    ├─┬ chalk@0.2.1 
    │ ├── ansi-styles@0.2.0 
    │ └── has-color@0.1.7 
    ├─┬ cheerio@0.12.4 
    │ ├─┬ cheerio-select@0.0.3 
    │ │ └─┬ CSSselect@0.7.0 
    │ │   ├── boolbase@1.0.0 
    │ │   ├── CSSwhat@0.4.7 
    │ │   ├── domutils@1.4.3 
    │ │   └── nth-check@1.0.1 
    │ ├── entities@0.5.0 
    │ ├─┬ htmlparser2@3.1.4 
    │ │ ├── domelementtype@1.3.0 
    │ │ ├── domhandler@2.0.3 
    │ │ ├── domutils@1.1.6 
    │ │ └─┬ readable-stream@1.0.34 
    │ │   ├── core-util-is@1.0.2 
    │ │   ├── isarray@0.0.1 
    │ │   └── string_decoder@0.10.31 
    │ └── underscore@1.4.4 
    ├── dargs@0.1.0 
    ├── diff@1.0.8 
    ├─┬ findup-sync@0.1.3 
    │ └── lodash@2.4.2 
    ├─┬ glob@3.2.11 
    │ ├── inherits@2.0.3 
    │ └── minimatch@0.3.0 
    ├── iconv-lite@0.2.11 
    ├─┬ inquirer@0.3.5 
    │ ├─┬ cli-color@0.2.3 
    │ │ ├── es5-ext@0.9.2 
    │ │ └─┬ memoizee@0.2.6 
    │ │   ├── event-emitter@0.2.2 
    │ │   └── next-tick@0.1.0 
    │ └── mute-stream@0.0.3 
    ├── isbinaryfile@0.1.9 
    ├── lodash@1.3.1 
    ├── mime@1.2.11 
    ├── mkdirp@0.3.5 
    ├─┬ request@2.25.0 
    │ ├── aws-sign@0.3.0 
    │ ├── cookie-jar@0.3.0 
    │ ├── forever-agent@0.5.2 
    │ ├─┬ form-data@0.1.4 
    │ │ ├── async@0.9.2 
    │ │ └─┬ combined-stream@0.0.7 
    │ │   └── delayed-stream@0.0.5 
    │ ├─┬ hawk@1.0.0 
    │ │ ├── boom@0.4.2 
    │ │ ├── cryptiles@0.2.2 
    │ │ ├── hoek@0.9.1 
    │ │ └── sntp@0.2.4 
    │ ├─┬ http-signature@0.10.1 
    │ │ ├── asn1@0.1.11 
    │ │ ├── assert-plus@0.1.5 
    │ │ └── ctype@0.5.3 
    │ ├── json-stringify-safe@5.0.1 
    │ ├── node-uuid@1.4.8 
    │ ├── oauth-sign@0.3.0 
    │ ├── qs@0.6.6 
    │ └── tunnel-agent@0.3.0 
    ├── rimraf@2.2.8 
    ├── shelljs@0.1.4 
    ├─┬ tar@0.1.20 
    │ ├── block-stream@0.0.9 
    │ └─┬ fstream@0.1.31 
    │   ├─┬ graceful-fs@3.0.11 
    │   │ └── natives@1.1.0 
    │   └─┬ mkdirp@0.5.1 
    │     └── minimist@0.0.8 
    ├── text-table@0.1.1 
    └── underscore.string@2.3.3 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/generator-rpi/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0235 took 2.6798s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Octal literal in strict mode (154:9) on program // 'use strict';
var util = require('util');
var path = require('path');
var yeoman = require('yeoman-generator');
var ABC = require('abc-generator');
var Logo = require('./logo').Logo;
var exec = require('child_process').exec;
var gitConfig = require('git-config'),
	curGitUser = gitConfig.sync().user,
	curUserName = curGitUser.name,
	curUserEmail = curGitUser.email;

var MyGenerator = module.exports = function MyGenerator(args, options, config) {
	this.pkg = JSON.parse(this.readFileAsString(path.join(__dirname, '../package.json')));

	ABC.UIBase.apply(this, arguments);

	this.on('error', function () {
	});
	this.on('end', function () {
		var cb = this.async();
		var that = this;

		console.log(green('\n 运行 npm install & bower install\n'));
		console.log(green('\n 完成后，启动本地服务: grunt server \n'));

	}.bind(this));
};

util.inherits(MyGenerator, ABC.UIBase);

MyGenerator.prototype.askFor = function askFor() {
	var cb = this.async();

	// welcome message
	console.log(Logo(this));

	var bowerJSON = {};
	try {
		bowerJSON = require(path.resolve(process.cwd(), 'bower.json'));
	} catch (e) {

	}

	// have Yeoman greet the user.
	// console.log(this.yeoman);
	var folderName = path.basename(process.cwd());

	// your-mojo-name => YourMojoName
	function parseMojoName(name) {
		return name.replace(/\b(\w)|(-\w)/g, function (m) {
			return m.toUpperCase().replace('-', '');
		});
	}

	var prompts = [
		{
			name   : 'projectName',
			message: 'widget Name?(模块名)',
			default: folderName,
			warning: ''
		},
		{
			name   : 'gitRepository',
			message: 'Chose Your Git Repository(git仓库):',
			type	 : 'list',
			choices: ['gitlab.alibaba-inc.com', 'github.com'],
			default: 'gitlab.alibaba-inc.com',
			warning: ''
		},
		{
			name   : 'projectDesc',
			message: 'Description of this Widget?(描述)',
			default: folderName,
			warning: ''
		},
		{
			name   : 'author',
			message: 'Author Name(花名):',
			default: curUserName,
			warning: ''
		},
		{
			name   : 'email',
			message: 'Author Email(邮箱):',
			default: curUserEmail,
			warning: ''
		},
		{
			name   : 'version',
			message: 'Version(版本):',
			default: '0.1.0',
			warning: ''
		}
	];

	/*
	 * projectName：驼峰名称,比如 ProjectName
	 * packageName：原目录名称，比如 project-name
	 **/
	this.prompt(prompts, function (props) {

		this.packageName = props.projectName;// project-name
		this.projectName = parseMojoName(this.packageName); //ProjectName
		this.packageDesc = props.projectDesc;
		this.gitRepository = props.gitRepository;
		this.author = props.author;
		this.email = props.email;
		this.version = props.version;

		cb();

	}.bind(this));
};

MyGenerator.prototype.bowerJSON = function bowerJSON() {
	this.template('bower.json', 'bower.json');
	this.template('_bowerrc', '.bowerrc');
	this.template('package.json', 'package.json');
	this.copy('Gruntfile.js', 'Gruntfile.js');
};

MyGenerator.prototype.git = function git() {
	this.copy('_gitignore', '.gitignore');
};

MyGenerator.prototype.app = function app() {
	var that = this;
	this.template('README.md');
	this.mkdir('demo');
	this.mkdir('tests');
	this.mkdir('tests/lib');

	// proxy template
	this.template('index.js', 'index.js');
	this.template('index.scss', 'index.scss');

	// 测试用例资源文件
	this.copy('tests/lib/async.js', 'tests/lib/async.js');
	this.copy('tests/lib/chai.js','tests/lib/chai.js');
	this.copy('tests/lib/mocha.js','tests/lib/mocha.js');
	this.copy('tests/lib/mocha.css','tests/lib/mocha.css');
	this.copy('tests/lib/should.js','tests/lib/should.js');
	this.copy('tests/lib/simulate-dom-event.js','tests/lib/simulate-dom-event.js');
	this.template('tests/main/index.html', 'tests/main/index.html');
	this.template('tests/main/index.js', 'tests/main/index.js');
	this.template('tests/main/index.scss', 'tests/main/index.scss');
};

function consoleColor(str, num) {
	if (!num) {
		num = '32';
	}
	return "\033[" + num + "m" + str + "\033[0m"
}

function green(str) {
	return consoleColor(str, 32);
}

function yellow(str) {
	return consoleColor(str, 33);
}

function red(str) {
	return consoleColor(str, 31);
}

function blue(str) {
	return consoleColor(str, 34);
}
 at SyntaxError: Octal literal in strict mode (154:9)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readEscapedChar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:3023:16)
    at Parser.pp$7.readString (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2935:23)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2724:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp$1.parseReturnStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:832:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:699:34)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
