
> jsonpath@0.2.12 postinstall /root/Targets/pokemock/node_modules/jsonpath
> node lib/aesprim.js > generated/aesprim-browser.js

/root/Targets/pokemock
└─┬ pokemock@1.2.0 
  ├── chance@1.0.11 
  ├─┬ express@4.16.1 
  │ ├─┬ accepts@1.3.4 
  │ │ ├─┬ mime-types@2.1.17 
  │ │ │ └── mime-db@1.30.0 
  │ │ └── negotiator@0.6.1 
  │ ├── array-flatten@1.1.1 
  │ ├─┬ body-parser@1.18.2 
  │ │ ├── bytes@3.0.0 
  │ │ ├─┬ http-errors@1.6.2 
  │ │ │ ├── inherits@2.0.3 
  │ │ │ └── setprototypeof@1.0.3 
  │ │ ├── iconv-lite@0.4.19 
  │ │ └── raw-body@2.3.2 
  │ ├── content-disposition@0.5.2 
  │ ├── content-type@1.0.4 
  │ ├── cookie@0.3.1 
  │ ├── cookie-signature@1.0.6 
  │ ├─┬ debug@2.6.9 
  │ │ └── ms@2.0.0 
  │ ├── depd@1.1.1 
  │ ├── encodeurl@1.0.1 
  │ ├── escape-html@1.0.3 
  │ ├── etag@1.8.1 
  │ ├─┬ finalhandler@1.1.0 
  │ │ └── unpipe@1.0.0 
  │ ├── fresh@0.5.2 
  │ ├── merge-descriptors@1.0.1 
  │ ├── methods@1.1.2 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── parseurl@1.3.2 
  │ ├── path-to-regexp@0.1.7 
  │ ├─┬ proxy-addr@2.0.2 
  │ │ ├── forwarded@0.1.2 
  │ │ └── ipaddr.js@1.5.2 
  │ ├── qs@6.5.1 
  │ ├── range-parser@1.2.0 
  │ ├── safe-buffer@5.1.1 
  │ ├─┬ send@0.16.1 
  │ │ ├── destroy@1.0.4 
  │ │ └── mime@1.4.1 
  │ ├── serve-static@1.13.1 
  │ ├── setprototypeof@1.1.0 
  │ ├── statuses@1.3.1 
  │ ├─┬ type-is@1.6.15 
  │ │ └── media-typer@0.3.0 
  │ ├── utils-merge@1.0.1 
  │ └── vary@1.1.2 
  ├── fast-levenshtein@2.0.6 
  ├─┬ json-schema-ref-parser@3.3.1 
  │ ├── call-me-maybe@1.0.1 
  │ ├── debug@3.1.0 
  │ ├── es6-promise@4.1.1 
  │ ├─┬ js-yaml@3.10.0 
  │ │ ├─┬ argparse@1.0.9 
  │ │ │ └── sprintf-js@1.0.3 
  │ │ └── esprima@4.0.0 
  │ ├─┬ ono@4.0.2 
  │ │ └── format-util@1.0.3 
  │ └─┬ z-schema@3.18.4 
  │   ├── commander@2.11.0 
  │   ├── lodash.get@4.4.2 
  │   ├── lodash.isequal@4.5.0 
  │   └── validator@8.2.0 
  ├─┬ jsonpath@0.2.12 
  │ ├── esprima@1.2.2 
  │ ├─┬ jison@0.4.13 
  │ │ ├── cjson@0.2.1 
  │ │ ├── ebnf-parser@0.1.10 
  │ │ ├─┬ escodegen@0.0.21 
  │ │ │ ├── esprima@1.0.4 
  │ │ │ ├── estraverse@0.0.4 
  │ │ │ └── source-map@0.6.1 
  │ │ ├── esprima@1.0.4 
  │ │ ├── jison-lex@0.2.1 
  │ │ ├── JSONSelect@0.4.0 
  │ │ ├── lex-parser@0.1.4 
  │ │ └─┬ nomnom@1.5.2 
  │ │   ├── colors@0.5.1 
  │ │   └── underscore@1.1.7 
  │ ├─┬ static-eval@0.2.3 
  │ │ └─┬ escodegen@0.0.28 
  │ │   ├── esprima@1.0.4 
  │ │   └── estraverse@1.3.2 
  │ └── underscore@1.7.0 
  ├── lodash@4.17.4 
  ├── minimist@1.2.0 
  ├── server-destroy@1.0.1 
  ├─┬ swagger-express-middleware@1.0.0-alpha.12 
  │ ├── cookie-parser@1.4.3 
  │ ├── lodash@3.10.1 
  │ ├─┬ mkdirp@0.5.1 
  │ │ └── minimist@0.0.8 
  │ ├─┬ multer@0.1.8 
  │ │ ├─┬ busboy@0.2.14 
  │ │ │ ├─┬ dicer@0.2.5 
  │ │ │ │ └── streamsearch@0.1.2 
  │ │ │ └─┬ readable-stream@1.1.14 
  │ │ │   ├── core-util-is@1.0.2 
  │ │ │   ├── isarray@0.0.1 
  │ │ │   └── string_decoder@0.10.31 
  │ │ ├── mkdirp@0.3.5 
  │ │ ├── qs@1.2.2 
  │ │ └─┬ type-is@1.5.7 
  │ │   └─┬ mime-types@2.0.14 
  │ │     └── mime-db@1.12.0 
  │ ├── ono@1.0.22 
  │ ├── swagger-methods@1.0.0 
  │ ├─┬ swagger-parser@3.4.2 
  │ │ ├── debug@3.1.0 
  │ │ ├─┬ json-schema-ref-parser@1.4.1 
  │ │ │ ├── debug@2.6.9 
  │ │ │ ├── es6-promise@3.3.1 
  │ │ │ └── ono@2.2.5 
  │ │ └── swagger-schema-official@2.0.0-bab6bed 
  │ ├─┬ tmp@0.0.27 
  │ │ └── os-tmpdir@1.0.2 
  │ └── tv4@1.3.0 
  └── swagger-ui@2.2.10 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/pokemock/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 32% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.09 took 7.7327s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (4:4) on program var readFile = require( './readFile' );
var cluster = require( 'cluster' );
var minimist = require( 'minimist' );
var assert = require( 'assert' );
var pack = require( '../package.json' );
var enableDestroy = require( 'server-destroy' );
var swaggerMerge = require( './swaggerMerge' );
var swaggerMin = require( './swaggerMin' );

module.exports = dispatch;

function dispatch( argv, createApp ) {

  var args = minimist( argv.slice( 0 ) );

  if ( args.h || args.help ) return usage();
  if ( args.v || args.version ) return version();
  if ( args._.length === 0 ) return usage();
  if ( ( args.w || args.watch ) && cluster.isMaster ) return watch();

  return serve( args, createApp );

}

function usage() {
  return readFile( __dirname + '/../README.md' ).then( function ( contents ) {
    console.log();
    console.log( contents.toString( 'utf-8' ).match( /```([\s\S]*?)```/ )[ 1 ].trim() );
  } );
}

function version() {
  return new Promise( function ( resolve ) {
    console.log( pack.version );
    resolve();
  } );
}

function watch() {
  return new Promise( function ( resolve ) {
    cluster.fork();
    cluster.on( 'exit', function ( worker ) {
      console.log( 'Worker ' + worker.process.pid + ' died. Restarting...');
      cluster.fork();
    } );
    resolve();
  } );
}

function serve( args, createApp ) {

  return Promise.resolve(
    createApp( args._, {
      killable: args.k || args.killable,
      memory: args.memory
    } )
  ).then( function ( app ) {

    // parse port and use 8000 as default if no custom port is set.
    var port = parseInt( args.p || args.port || 8000 );

    app.server = app.listen( port, function () {
      console.log( 'Pokemock ready at http://localhost:' + port );
      console.log( 'Swagger UI at http://localhost:' + port + '/ui' );
      if ( args.k || args.killable ) console.log( 'Kill via http://localhost:' + port + '/kill' );
    } );

    enableDestroy( app.server );

    if ( args.w || args.watch ) poll( args._ );

  } );

}

function poll( apis, current ) {

  swaggerMerge( apis ).then( swaggerMin ).then( function ( api ) {

    if ( current ) assert.deepEqual( api, current );

    current = api;

    setTimeout( function () {
      poll( apis, current );
    }, 1000 );

  } ).catch( function () {
    process.exit( 1 );
  } );

}
 at SyntaxError: Unexpected token (4:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/pokemock/node_modules/pokemock/index.js. Coverage (Term): 22% Coverage (LOC): 23%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
