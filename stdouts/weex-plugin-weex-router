/root/Targets/weex-plugin-weex-router
└── weex-plugin-weex-router@0.1.3 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/weex-plugin-weex-router/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0516 took 4.6387s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (1:78) on program <template>
  <div if = "{{isMatch}}">
    <content ></content>
  </div>
</template>


<script>
var  matchPattern = require('./js/matchPattern')
var pathUtils = require('./js/pathUtils')
var History = require('./js/history')
var navigator = require('./js/navigator')


module.exports =  {
  name: 'Match',
  data:{
    pattern:""
  },
  abstract: true,
  created:function () {

  },
  ready: function(){

  },
  computed: {
    isMatch: {
      get: function() {
        var bundleUrl = pathUtils.nomalizeBundleUrl(this.$getConfig().bundleUrl);
        var location = pathUtils.parsePath(bundleUrl)
        if (this.pattern) {
          var path;
          var parentPattern;
          if(navigator.isMatch){
            path = navigator.pathname
            parentPattern = navigator.parentPattern
          }
          else {
            path = location.hash
          }

          location = pathUtils.parsePath(path)
          const match = matchPattern(this.pattern, location, false, false)
          if (match && match.isExact) {
            navigator.params = match.params
            navigator.pathname = match.pathname
            navigator.isMatch = true
            navigator.parentPattern = this.pattern
            return true
          }
          else {
            return false
          }
        }
      },

      set: function(v) {
      }
    }
  },
  shouldUpdate: function () {
    const pattern = this.pattern
    var history = History.getHistoryInstance()
    if (history&&this.pattern) {
      var location = history.location
      const match = matchPattern(pattern, location, false, false)
      if (match && match.isExact) {
       return true
      }
    }
  },

  destroyed: function () {
  }
}
</script>
 at SyntaxError: Unexpected token (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1822:12)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1597:21)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/weex-plugin-weex-router/node_modules/weex-plugin-weex-router/index.js. Coverage (Term): 47% Coverage (LOC): 67%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
