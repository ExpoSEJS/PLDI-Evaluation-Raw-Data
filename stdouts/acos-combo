/root/Targets/acos-combo
└── acos-combo@0.2.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/acos-combo/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0537 took 4.8322s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Invalid number (55:18) on program var fs = require('fs');
var htmlencode = require('htmlencode').htmlEncode;

var Combo = function() {};

Combo.addToHead = function(params) {
  return '<script src="/static/combo/jsvee/jquery.min.js" type="text/javascript"></script>\n' +
    '<link href="/static/combo/style.css" rel="stylesheet" />\n' +
    '<link href="/static/combo/parsons/parsons.css" rel="stylesheet" />\n' +
    '<link href="/static/combo/parsons/prettify.css" rel="stylesheet" />\n' +
    '<script src="/static/combo/parsons/prettify.js"></script>\n' +

    '<link href="/static/combo/jsvee/jsvee.css" rel="stylesheet" type="text/css" />\n' +
    '<link href="/static/combo/jsvee/python.css" rel="stylesheet" type="text/css" />\n' +
    '<script src="/static/combo/jsvee/core.js" type="text/javascript"></script>\n' +
    '<script src="/static/combo/jsvee/messages.js" type="text/javascript"></script>\n' +
    '<script src="/static/combo/jsvee/ui_utils.js" type="text/javascript"></script>\n' +
    '<script src="/static/combo/jsvee/actions.js" type="text/javascript"></script>\n' +
    '<script src="/static/combo/jsvee/ui.js" type="text/javascript"></script>\n' +
    '<script src="/static/combo/jsvee/dummy.js" type="text/javascript"></script>\n' +
    '<script src="/static/combo/jsvee/logging.js" type="text/javascript"></script>\n' +
    '<script src="/static/combo/jsvee/animations.js" type="text/javascript"></script>\n' +

    '<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js"></script>\n' +
    '<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.18/jquery-ui.min.js"></script>\n' +
    '<script src="/static/combo/parsons/underscore-min.js"></script>\n' +
    '<script src="/static/combo/parsons/lis.js"></script>\n' +
    '<script src="/static/combo/parsons/parsons.js"></script>\n' +
    '<script src="/static/combo/parsons/skulpt.js"></script>\n' +
    '<script src="/static/combo/parsons/skulpt-stdlib.js"></script>\n' +
    '<script>window.exerciseId = "' + params.name + '";</script>';
};

Combo.addToBody = function(params) {
  return '<input type="hidden" name="exercise" value="' + params.name + '">\n' +
    '<div id="exercise-content"></div>';
};

Combo.initialize = function(req, params, handlers, cb) {

  // Initialize the content type
  params.headContent += Combo.addToHead(params);
  params.bodyContent += Combo.addToBody(params);

  // Initialize the content package
  handlers.contentPackages[req.params.contentPackage].initialize(req, params, handlers, function() {
    params.headContent += '<script src="/static/combo/script.js"></script>';
    cb();
  });
};

Combo.handleEvent = function(event, payload, req, res, protocolPayload, responseObj, cb) {
  var dir = Combo.config.logDirectory + '/combo/' + req.params.contentPackage;
  if (event == 'log') {
    fs.mkdir(dir, 0775, function(err) {
      var name = payload.animationId.replace(/\.|\/|\\|~/g, "-") + '.log';
      var data = new Date().toISOString() + ' ' + payload.logId + ' ' + JSON.stringify(payload.log) + ' ' + JSON.stringify(protocolPayload || {}) + '\n';
      fs.writeFile(dir + '/' + name, data, { flag: 'a' }, function(err) {
        cb(event, payload, req, res, protocolPayload, responseObj);
      });
    });
  } else {
    cb(event, payload, req, res, protocolPayload, responseObj);
  }
};

Combo.register = function(handlers, app, conf) {
  handlers.contentTypes.combo = Combo;
  fs.mkdir(conf.logDirectory + '/combo', 0775, function(err) {});
  Combo.config = conf;
};

Combo.namespace = 'combo';
Combo.installedContentPackages = [];
Combo.packageType = 'content-type';

Combo.meta = {
  'name': 'combo',
  'shortDescription': 'Combination of JSParsons and JSVEE.',
  'description': '',
  'author': 'Teemu Sirkiä',
  'license': 'MIT',
  'version': '0.2.0',
  'url': ''
};

module.exports = Combo;
 at SyntaxError: Invalid number (55:18)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
