
> ws@0.4.32 install /root/Targets/phinqx/node_modules/ws
> (node-gyp rebuild 2> builderror.log) || (exit 0)

make: Entering directory '/root/Targets/phinqx/node_modules/ws/build'
  CXX(target) Release/obj.target/bufferutil/src/bufferutil.o
bufferutil.target.mk:96: recipe for target 'Release/obj.target/bufferutil/src/bufferutil.o' failed
make: Leaving directory '/root/Targets/phinqx/node_modules/ws/build'
/root/Targets/phinqx
└─┬ phinqx@0.3.15 
  ├─┬ chokidar@1.7.0 
  │ ├─┬ anymatch@1.3.2 
  │ │ ├─┬ micromatch@2.3.11 
  │ │ │ ├─┬ arr-diff@2.0.0 
  │ │ │ │ └── arr-flatten@1.1.0 
  │ │ │ ├── array-unique@0.2.1 
  │ │ │ ├─┬ braces@1.8.5 
  │ │ │ │ ├─┬ expand-range@1.8.2 
  │ │ │ │ │ └─┬ fill-range@2.2.3 
  │ │ │ │ │   ├── is-number@2.1.0 
  │ │ │ │ │   ├── isobject@2.1.0 
  │ │ │ │ │   ├─┬ randomatic@1.1.7 
  │ │ │ │ │   │ ├─┬ is-number@3.0.0 
  │ │ │ │ │   │ │ └── kind-of@3.2.2 
  │ │ │ │ │   │ └── kind-of@4.0.0 
  │ │ │ │ │   └── repeat-string@1.6.1 
  │ │ │ │ ├── preserve@0.2.0 
  │ │ │ │ └── repeat-element@1.1.2 
  │ │ │ ├─┬ expand-brackets@0.1.5 
  │ │ │ │ └── is-posix-bracket@0.1.1 
  │ │ │ ├── extglob@0.3.2 
  │ │ │ ├── filename-regex@2.0.1 
  │ │ │ ├─┬ kind-of@3.2.2 
  │ │ │ │ └── is-buffer@1.1.5 
  │ │ │ ├─┬ object.omit@2.0.1 
  │ │ │ │ ├─┬ for-own@0.1.5 
  │ │ │ │ │ └── for-in@1.0.2 
  │ │ │ │ └── is-extendable@0.1.1 
  │ │ │ ├─┬ parse-glob@3.0.4 
  │ │ │ │ ├── glob-base@0.3.0 
  │ │ │ │ └── is-dotfile@1.0.3 
  │ │ │ └─┬ regex-cache@0.4.4 
  │ │ │   └─┬ is-equal-shallow@0.1.3 
  │ │ │     └── is-primitive@2.0.0 
  │ │ └─┬ normalize-path@2.1.1 
  │ │   └── remove-trailing-separator@1.1.0 
  │ ├── async-each@1.0.1 
  │ ├── glob-parent@2.0.0 
  │ ├── inherits@2.0.3 
  │ ├─┬ is-binary-path@1.0.1 
  │ │ └── binary-extensions@1.10.0 
  │ ├─┬ is-glob@2.0.1 
  │ │ └── is-extglob@1.0.0 
  │ ├── path-is-absolute@1.0.1 
  │ └─┬ readdirp@2.1.0 
  │   ├─┬ minimatch@3.0.4 
  │   │ └─┬ brace-expansion@1.1.8 
  │   │   ├── balanced-match@1.0.0 
  │   │   └── concat-map@0.0.1 
  │   ├─┬ readable-stream@2.3.3 
  │   │ ├── core-util-is@1.0.2 
  │   │ ├── isarray@1.0.0 
  │   │ ├── process-nextick-args@1.0.7 
  │   │ ├── string_decoder@1.0.3 
  │   │ └── util-deprecate@1.0.2 
  │   └── set-immediate-shim@1.0.1 
  ├── commander@2.11.0 
  ├── dom-shim@0.1.1 
  ├── html-util@0.2.2 
  ├─┬ less@2.7.2 
  │ ├─┬ errno@0.1.4 
  │ │ └── prr@0.0.0 
  │ ├── graceful-fs@4.1.11 
  │ ├── image-size@0.5.5 
  │ ├── mime@1.4.1 
  │ ├─┬ promise@7.3.1 
  │ │ └── asap@2.0.6 
  │ ├─┬ request@2.83.0 
  │ │ ├── aws-sign2@0.7.0 
  │ │ ├── aws4@1.6.0 
  │ │ ├── caseless@0.12.0 
  │ │ ├─┬ combined-stream@1.0.5 
  │ │ │ └── delayed-stream@1.0.0 
  │ │ ├── extend@3.0.1 
  │ │ ├── forever-agent@0.6.1 
  │ │ ├─┬ form-data@2.3.1 
  │ │ │ └── asynckit@0.4.0 
  │ │ ├─┬ har-validator@5.0.3 
  │ │ │ ├─┬ ajv@5.2.3 
  │ │ │ │ ├── co@4.6.0 
  │ │ │ │ ├── fast-deep-equal@1.0.0 
  │ │ │ │ ├── json-schema-traverse@0.3.1 
  │ │ │ │ └─┬ json-stable-stringify@1.0.1 
  │ │ │ │   └── jsonify@0.0.0 
  │ │ │ └── har-schema@2.0.0 
  │ │ ├─┬ hawk@6.0.2 
  │ │ │ ├── boom@4.3.1 
  │ │ │ ├─┬ cryptiles@3.1.2 
  │ │ │ │ └── boom@5.2.0 
  │ │ │ ├── hoek@4.2.0 
  │ │ │ └── sntp@2.0.2 
  │ │ ├─┬ http-signature@1.2.0 
  │ │ │ ├── assert-plus@1.0.0 
  │ │ │ ├─┬ jsprim@1.4.1 
  │ │ │ │ ├── extsprintf@1.3.0 
  │ │ │ │ ├── json-schema@0.2.3 
  │ │ │ │ └── verror@1.10.0 
  │ │ │ └─┬ sshpk@1.13.1 
  │ │ │   ├── asn1@0.2.3 
  │ │ │   ├── bcrypt-pbkdf@1.0.1 
  │ │ │   ├── dashdash@1.14.1 
  │ │ │   ├── ecc-jsbn@0.1.1 
  │ │ │   ├── getpass@0.1.7 
  │ │ │   ├── jsbn@0.1.1 
  │ │ │   └── tweetnacl@0.14.5 
  │ │ ├── is-typedarray@1.0.0 
  │ │ ├── isstream@0.1.2 
  │ │ ├── json-stringify-safe@5.0.1 
  │ │ ├─┬ mime-types@2.1.17 
  │ │ │ └── mime-db@1.30.0 
  │ │ ├── oauth-sign@0.8.2 
  │ │ ├── performance-now@2.1.0 
  │ │ ├── safe-buffer@5.1.1 
  │ │ ├── stringstream@0.0.5 
  │ │ ├─┬ tough-cookie@2.3.3 
  │ │ │ └── punycode@1.4.1 
  │ │ ├── tunnel-agent@0.6.0 
  │ │ └── uuid@3.1.0 
  │ └── source-map@0.5.7 
  ├─┬ MD5@1.0.1 
  │ ├── charenc@0.0.2 
  │ └── crypt@0.0.2 
  ├─┬ mkdirp@0.5.1 
  │ └── minimist@0.0.8 
  ├── nib@1.1.2 
  ├─┬ racer@0.3.15 
  │ ├── ansi-color@0.2.1 
  │ ├─┬ browserify@1.17.3 
  │ │ ├─┬ buffer-browserify@0.0.5 
  │ │ │ └── base64-js@0.0.2 
  │ │ ├── coffee-script@1.12.7 
  │ │ ├── commondir@0.0.2 
  │ │ ├── console-browserify@0.1.6 
  │ │ ├── crypto-browserify@0.4.0 
  │ │ ├─┬ deputy@0.0.4 
  │ │ │ └── mkdirp@0.3.5 
  │ │ ├─┬ detective@0.2.1 
  │ │ │ └── esprima@0.9.9 
  │ │ ├─┬ http-browserify@0.1.14 
  │ │ │ ├── Base64@0.1.4 
  │ │ │ └─┬ concat-stream@1.0.1 
  │ │ │   └─┬ bops@0.0.6 
  │ │ │     └── to-utf8@0.0.1 
  │ │ ├── nub@0.0.0 
  │ │ ├─┬ optimist@0.3.7 
  │ │ │ └── wordwrap@0.0.3 
  │ │ ├── resolve@0.2.8 
  │ │ ├── syntax-error@0.0.1 
  │ │ └─┬ vm-browserify@0.0.4 
  │ │   └── indexof@0.0.1 
  │ ├─┬ connect@2.30.2 
  │ │ ├── basic-auth-connect@1.0.0 
  │ │ ├─┬ body-parser@1.13.3 
  │ │ │ ├─┬ debug@2.2.0 
  │ │ │ │ └── ms@0.7.1 
  │ │ │ ├── iconv-lite@0.4.11 
  │ │ │ ├─┬ on-finished@2.3.0 
  │ │ │ │ └── ee-first@1.1.1 
  │ │ │ ├── qs@4.0.0 
  │ │ │ └─┬ raw-body@2.1.7 
  │ │ │   ├── bytes@2.4.0 
  │ │ │   └── iconv-lite@0.4.13 
  │ │ ├── bytes@2.1.0 
  │ │ ├─┬ compression@1.5.2 
  │ │ │ ├─┬ accepts@1.2.13 
  │ │ │ │ └── negotiator@0.5.3 
  │ │ │ ├── compressible@2.0.11 
  │ │ │ ├─┬ debug@2.2.0 
  │ │ │ │ └── ms@0.7.1 
  │ │ │ └── vary@1.0.1 
  │ │ ├─┬ connect-timeout@1.6.2 
  │ │ │ ├── debug@2.2.0 
  │ │ │ └── ms@0.7.1 
  │ │ ├── content-type@1.0.4 
  │ │ ├── cookie@0.1.3 
  │ │ ├─┬ cookie-parser@1.3.5 
  │ │ │ └── cookie@0.1.3 
  │ │ ├── cookie-signature@1.0.6 
  │ │ ├─┬ csurf@1.8.3 
  │ │ │ ├── cookie@0.1.3 
  │ │ │ └─┬ csrf@3.0.6 
  │ │ │   ├── rndm@1.2.0 
  │ │ │   ├── tsscmp@1.0.5 
  │ │ │   └─┬ uid-safe@2.1.4 
  │ │ │     └── random-bytes@1.0.0 
  │ │ ├─┬ debug@2.2.0 
  │ │ │ └── ms@0.7.1 
  │ │ ├── depd@1.0.1 
  │ │ ├─┬ errorhandler@1.4.3 
  │ │ │ ├─┬ accepts@1.3.4 
  │ │ │ │ └── negotiator@0.6.1 
  │ │ │ └── escape-html@1.0.3 
  │ │ ├─┬ express-session@1.11.3 
  │ │ │ ├── cookie@0.1.3 
  │ │ │ ├── crc@3.3.0 
  │ │ │ ├─┬ debug@2.2.0 
  │ │ │ │ └── ms@0.7.1 
  │ │ │ └─┬ uid-safe@2.0.0 
  │ │ │   └── base64-url@1.2.1 
  │ │ ├─┬ finalhandler@0.4.0 
  │ │ │ ├─┬ debug@2.2.0 
  │ │ │ │ └── ms@0.7.1 
  │ │ │ ├── escape-html@1.0.2 
  │ │ │ └── unpipe@1.0.0 
  │ │ ├── fresh@0.3.0 
  │ │ ├─┬ http-errors@1.3.1 
  │ │ │ └── statuses@1.3.1 
  │ │ ├─┬ method-override@2.3.10 
  │ │ │ ├── debug@2.6.9 
  │ │ │ ├── methods@1.1.2 
  │ │ │ └── vary@1.1.2 
  │ │ ├─┬ morgan@1.6.1 
  │ │ │ ├── basic-auth@1.0.4 
  │ │ │ └─┬ debug@2.2.0 
  │ │ │   └── ms@0.7.1 
  │ │ ├─┬ multiparty@3.3.2 
  │ │ │ ├─┬ readable-stream@1.1.14 
  │ │ │ │ ├── isarray@0.0.1 
  │ │ │ │ └── string_decoder@0.10.31 
  │ │ │ └─┬ stream-counter@0.2.0 
  │ │ │   └─┬ readable-stream@1.1.14 
  │ │ │     ├── isarray@0.0.1 
  │ │ │     └── string_decoder@0.10.31 
  │ │ ├── on-headers@1.0.1 
  │ │ ├── parseurl@1.3.2 
  │ │ ├── pause@0.1.0 
  │ │ ├── qs@4.0.0 
  │ │ ├─┬ response-time@2.3.2 
  │ │ │ └── depd@1.1.1 
  │ │ ├─┬ serve-favicon@2.3.2 
  │ │ │ ├── etag@1.7.0 
  │ │ │ └── ms@0.7.2 
  │ │ ├─┬ serve-index@1.7.3 
  │ │ │ ├── batch@0.5.3 
  │ │ │ └─┬ debug@2.2.0 
  │ │ │   └── ms@0.7.1 
  │ │ ├─┬ serve-static@1.10.3 
  │ │ │ └─┬ send@0.13.2 
  │ │ │   ├── debug@2.2.0 
  │ │ │   ├── depd@1.1.1 
  │ │ │   ├── destroy@1.0.4 
  │ │ │   ├── mime@1.3.4 
  │ │ │   ├── ms@0.7.1 
  │ │ │   ├── range-parser@1.0.3 
  │ │ │   └── statuses@1.2.1 
  │ │ ├─┬ type-is@1.6.15 
  │ │ │ └── media-typer@0.3.0 
  │ │ ├── utils-merge@1.0.0 
  │ │ └── vhost@3.0.2 
  │ ├── cookie@0.0.4 
  │ ├─┬ debug@3.1.0 
  │ │ └── ms@2.0.0 
  │ ├── es5-shim@4.5.9 
  │ ├── hooks@0.2.1 
  │ ├── node-uuid@1.3.3 
  │ ├── racer-util@0.0.2 
  │ ├─┬ socket.io@0.9.13 
  │ │ ├── base64id@0.1.0 
  │ │ ├── policyfile@0.0.4 
  │ │ └── redis@0.7.3 
  │ ├─┬ socket.io-client@0.9.11 
  │ │ ├─┬ active-x-obfuscator@0.0.1 
  │ │ │ └── zeparser@0.0.5 
  │ │ ├── uglify-js@1.2.5 
  │ │ ├─┬ ws@0.4.32 
  │ │ │ ├── commander@2.1.0 
  │ │ │ ├── nan@1.0.0 
  │ │ │ ├── options@0.0.6 
  │ │ │ └── tinycolor@0.0.1 
  │ │ └── xmlhttprequest@1.4.2 
  │ └─┬ uglify-js@2.8.29 
  │   ├── uglify-to-browserify@1.0.2 
  │   └─┬ yargs@3.10.0 
  │     ├── camelcase@1.2.1 
  │     ├─┬ cliui@2.1.0 
  │     │ ├─┬ center-align@0.1.3 
  │     │ │ ├─┬ align-text@0.1.4 
  │     │ │ │ └── longest@1.0.1 
  │     │ │ └── lazy-cache@1.0.4 
  │     │ ├── right-align@0.1.3 
  │     │ └── wordwrap@0.0.2 
  │     ├── decamelize@1.2.0 
  │     └── window-size@0.1.0 
  ├─┬ stylus@0.54.5 
  │ ├── css-parse@1.7.0 
  │ ├─┬ glob@7.0.6 
  │ │ ├── fs.realpath@1.0.0 
  │ │ ├─┬ inflight@1.0.6 
  │ │ │ └── wrappy@1.0.2 
  │ │ └── once@1.4.0 
  │ ├── sax@0.5.8 
  │ └─┬ source-map@0.1.43 
  │   └── amdefine@1.0.1 
  └─┬ tracks@0.5.7 
    ├── debug@0.7.4 
    ├── methods@0.0.1 
    └── qs@6.5.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/phinqx/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 26% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0354 took 5.0195s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: The keyword 'await' is reserved (12:8) on program module.exports = {
  finishAfter: finishAfter

, forEach: function (items, fn, done) {
    var finish = finishAfter(items.length, done);
    for (var i = 0, l = items.length; i < l; i++) {
      fn(items[i], finish);
    }
  }

, bufferifyMethods: function (Klass, methodNames, opts) {
    var await = opts.await
      , fns = {}
      , buffer = null;

    methodNames.forEach( function (methodName) {
      fns[methodName] = Klass.prototype[methodName];
      Klass.prototype[methodName] = function () {
        var didFlush = false
          , self = this;

        function flush () {
          didFlush = true;

          // When we call flush, we no longer need to buffer, so replace each
          // method with the original method
          methodNames.forEach( function (methodName) {
            self[methodName] = fns[methodName];
          });
          delete await.alreadyCalled;

          // Call the method with the first invocation arguments if this is
          // during the first call to methodName, await called flush
          // immediately, and we therefore have no buffered method calls.
          if (!buffer) return;

          // Otherwise, invoke the buffered method calls
          for (var i = 0, l = buffer.length; i < l; i++) {
            fns[methodName].apply(self, buffer[i]);
          }
          buffer = null;
        } /* end flush */

        // The first time we call methodName, run await
        if (await.alreadyCalled) return;
        await.alreadyCalled = true;
        await.call(this, flush);

        // If await decided we need no buffering and it called flush, then call
        // the original function with the arguments to this first call to methodName.
        if (didFlush) return this[methodName].apply(this, arguments);

        // Otherwise, if we need to buffer calls to this method, then replace
        // this method temporarily with code that buffers the method calls
        // until `flush` is called
        this[methodName] = function () {
          if (!buffer) buffer = [];
          buffer.push(arguments);
        }
        this[methodName].apply(this, arguments);
      }
    });
  }

, bufferify: function (methodName, opts) {
    var fn = opts.fn
      , await = opts.await
      , buffer = null;

    return function () {
      var didFlush = false
        , self = this;

      function flush () {
        didFlush = true;

        // When we call flush, we no longer need to buffer, so replace this
        // method with the original method
        self[methodName] = fn;

        // Call the method with the first invocation arguments if this is
        // during the first call to methodName, await called flush immediately,
        // and we therefore have no buffered method calls.
        if (!buffer) return;

        // Otherwise, invoke the buffered method calls
        for (var i = 0, l = buffer.length; i < l; i++) {
          fn.apply(self, buffer[i]);
        }
        buffer = null;
      }

      // The first time we call methodName, run awai
      await.call(this, flush);

      // If await decided we need no buffering and it called flush, then call
      // the original function with the arguments to this first call to methodName
      if (didFlush) return this[methodName].apply(this, arguments);

      // Otherwise, if we need to buffer calls to this method, then replace
      // this method temporarily with code that buffers the method calls until
      // `flush` is called
      this[methodName] = function () {
        if (!buffer) buffer = [];
        buffer.push(arguments);
      }
      this[methodName].apply(this, arguments);
    }
  }
};

function finishAfter (count, callback) {
  if (!callback) callback = function (err) { if (err) throw err; };
  if (!count || count === 1) return callback;
  var err;
  return function (_err) {
    err || (err = _err);
    --count || callback(err);
  };
}
 at SyntaxError: The keyword 'await' is reserved (12:8)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$3.parseIdent (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2182:14)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:41:34)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$3.parseFunctionBody (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2105:24)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/phinqx/node_modules/phinqx/lib/phinqx.js. Coverage (Term): 30% Coverage (LOC): 80%
*- File /root/Targets/phinqx/node_modules/racer/lib/racer.js. Coverage (Term): 13% Coverage (LOC): 14%
*- File /root/Targets/phinqx/node_modules/racer/lib/util/index.js. Coverage (Term): 12% Coverage (LOC): 26%
*- File /root/Targets/phinqx/node_modules/racer/lib/util/Promise.js. Coverage (Term): 8% Coverage (LOC): 7%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
