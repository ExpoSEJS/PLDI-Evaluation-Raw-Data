
> fibers@2.0.0 install /root/Targets/portal/node_modules/fibers
> node build.js || nodejs build.js

make: Entering directory '/root/Targets/portal/node_modules/fibers/build'
  CXX(target) Release/obj.target/fibers/src/fibers.o
  CXX(target) Release/obj.target/fibers/src/coroutine.o
  CC(target) Release/obj.target/fibers/src/libcoro/coro.o
  SOLINK_MODULE(target) Release/obj.target/fibers.node
  COPY Release/fibers.node
make: Leaving directory '/root/Targets/portal/node_modules/fibers/build'
Installed in `/root/Targets/portal/node_modules/fibers/bin/linux-x64-51/fibers.node`

> kerberos@0.0.3 install /root/Targets/portal/node_modules/kerberos
> (node-gyp rebuild 2> builderror.log) || (exit 0)

make: Entering directory '/root/Targets/portal/node_modules/kerberos/build'
  SOLINK_MODULE(target) Release/obj.target/kerberos.node
  COPY Release/kerberos.node
make: Leaving directory '/root/Targets/portal/node_modules/kerberos/build'

> bson@0.2.8 install /root/Targets/portal/node_modules/bson
> (node-gyp rebuild 2> builderror.log) || (exit 0)

make: Entering directory '/root/Targets/portal/node_modules/bson/build'
  CXX(target) Release/obj.target/bson/ext/bson.o
bson.target.mk:92: recipe for target 'Release/obj.target/bson/ext/bson.o' failed
make: Leaving directory '/root/Targets/portal/node_modules/bson/build'

> ws@0.6.5 install /root/Targets/portal/node_modules/ws
> (node-gyp rebuild 2> builderror.log) || (exit 0)

make: Entering directory '/root/Targets/portal/node_modules/ws/build'
  CXX(target) Release/obj.target/bufferutil/src/bufferutil.o
bufferutil.target.mk:96: recipe for target 'Release/obj.target/bufferutil/src/bufferutil.o' failed
make: Leaving directory '/root/Targets/portal/node_modules/ws/build'
/root/Targets/portal
└─┬ portal@0.8.1 
  ├─┬ aws-sdk@2.124.0 
  │ ├─┬ buffer@4.9.1 
  │ │ ├── base64-js@1.2.1 
  │ │ ├── ieee754@1.1.8 
  │ │ └── isarray@1.0.0 
  │ ├── crypto-browserify@1.0.9 
  │ ├── events@1.1.1 
  │ ├── jmespath@0.15.0 
  │ ├── querystring@0.2.0 
  │ ├── sax@1.2.1 
  │ ├─┬ url@0.10.3 
  │ │ └── punycode@1.3.2 
  │ ├── uuid@3.0.1 
  │ ├── xml2js@0.4.17 
  │ └─┬ xmlbuilder@4.2.1 
  │   └── lodash@4.17.4 
  ├─┬ carbonfibers@0.2.1 
  │ └── fibers@2.0.0 
  ├── ejs@1.0.0 
  ├─┬ less@1.7.5 
  │ ├─┬ clean-css@2.2.23 
  │ │ └── commander@2.2.0 
  │ ├─┬ graceful-fs@3.0.11 
  │ │ └── natives@1.1.0 
  │ ├── mime@1.2.11 
  │ ├─┬ mkdirp@0.5.1 
  │ │ └── minimist@0.0.8 
  │ ├─┬ request@2.40.0 
  │ │ ├── aws-sign2@0.5.0 
  │ │ ├── forever-agent@0.5.2 
  │ │ ├─┬ form-data@0.1.4 
  │ │ │ ├── async@0.9.2 
  │ │ │ ├─┬ combined-stream@0.0.7 
  │ │ │ │ └── delayed-stream@0.0.5 
  │ │ │ └── mime@1.2.11 
  │ │ ├─┬ hawk@1.1.1 
  │ │ │ ├── boom@0.4.2 
  │ │ │ ├── cryptiles@0.2.2 
  │ │ │ ├── hoek@0.9.1 
  │ │ │ └── sntp@0.2.4 
  │ │ ├─┬ http-signature@0.10.1 
  │ │ │ ├── asn1@0.1.11 
  │ │ │ ├── assert-plus@0.1.5 
  │ │ │ └── ctype@0.5.3 
  │ │ ├── json-stringify-safe@5.0.1 
  │ │ ├── mime-types@1.0.2 
  │ │ ├── node-uuid@1.4.8 
  │ │ ├── oauth-sign@0.3.0 
  │ │ ├── qs@1.0.2 
  │ │ ├── stringstream@0.0.5 
  │ │ ├─┬ tough-cookie@2.3.3 
  │ │ │ └── punycode@1.4.1 
  │ │ └── tunnel-agent@0.4.3 
  │ └─┬ source-map@0.1.43 
  │   └── amdefine@1.0.1 
  ├── mime@1.4.1 
  ├── mongo-sql@2.7.8 
  ├─┬ monk@0.9.1 
  │ ├─┬ debug@3.1.0 
  │ │ └── ms@2.0.0 
  │ ├─┬ mongoskin@1.4.4 
  │ │ └─┬ mongodb@1.4.4 
  │ │   ├─┬ bson@0.2.8 
  │ │   │ └── nan@1.0.0 
  │ │   └── kerberos@0.0.3 
  │ └── mpromise@0.5.1 
  ├─┬ nedb@1.8.0 
  │ ├── async@0.2.10 
  │ ├── binary-search-tree@0.2.5 
  │ ├─┬ localforage@1.5.0 
  │ │ └─┬ lie@3.0.2 
  │ │   ├─┬ es3ify@0.1.4 
  │ │   │ ├── esprima-fb@3001.1.0-dev-harmony-fb 
  │ │   │ └─┬ jstransform@3.0.0 
  │ │   │   ├── base62@0.1.1 
  │ │   │   └── source-map@0.1.31 
  │ │   ├── immediate@3.0.6 
  │ │   ├─┬ inline-process-browser@1.0.0 
  │ │   │ ├─┬ falafel@1.2.0 
  │ │   │ │ ├── acorn@1.2.2 
  │ │   │ │ ├── foreach@2.0.5 
  │ │   │ │ ├── isarray@0.0.1 
  │ │   │ │ └── object-keys@1.0.11 
  │ │   │ └─┬ through2@0.6.5 
  │ │   │   └─┬ readable-stream@1.0.34 
  │ │   │     └── isarray@0.0.1 
  │ │   └─┬ unreachable-branch-transform@0.3.0 
  │ │     ├── esmangle-evaluator@1.0.1 
  │ │     └─┬ recast@0.10.43 
  │ │       ├── ast-types@0.8.15 
  │ │       ├── esprima-fb@15001.1001.0-dev-harmony-fb 
  │ │       ├── private@0.1.7 
  │ │       └── source-map@0.5.7 
  │ └── underscore@1.4.4 
  ├─┬ nodemailer@0.7.1 
  │ ├─┬ aws-sdk@2.0.5 
  │ │ ├── aws-sdk-apis@3.1.10 
  │ │ ├─┬ xml2js@0.2.6 
  │ │ │ └── sax@0.4.2 
  │ │ └── xmlbuilder@0.4.2 
  │ ├── directmail@0.1.8 
  │ ├── he@0.3.6 
  │ ├─┬ mailcomposer@0.2.12 
  │ │ ├─┬ dkim-signer@0.1.2 
  │ │ │ └── punycode@1.2.4 
  │ │ ├─┬ follow-redirects@0.0.3 
  │ │ │ └── underscore@1.8.3 
  │ │ ├── mime@1.2.11 
  │ │ └─┬ mimelib@0.2.19 
  │ │   ├── addressparser@0.3.2 
  │ │   └─┬ encoding@0.1.12 
  │ │     └── iconv-lite@0.4.19 
  │ ├── public-address@0.1.2 
  │ ├─┬ readable-stream@1.1.14 
  │ │ ├── core-util-is@1.0.2 
  │ │ ├── inherits@2.0.3 
  │ │ ├── isarray@0.0.1 
  │ │ └── string_decoder@0.10.31 
  │ └─┬ simplesmtp@0.3.35 
  │   ├── rai@0.1.12 
  │   └── xoauth2@0.1.8 
  ├─┬ pg@4.5.7 
  │ ├── buffer-writer@1.0.1 
  │ ├── generic-pool@2.4.2 
  │ ├── js-string-escape@1.0.1 
  │ ├── packet-reader@0.2.0 
  │ ├── pg-connection-string@0.1.3 
  │ ├─┬ pg-types@1.12.1 
  │ │ ├── postgres-array@1.0.2 
  │ │ ├── postgres-bytea@1.0.0 
  │ │ ├── postgres-date@1.0.3 
  │ │ └─┬ postgres-interval@1.1.1 
  │ │   └── xtend@4.0.1 
  │ ├─┬ pgpass@0.0.3 
  │ │ └─┬ split@0.3.3 
  │ │   └── through@2.3.8 
  │ └── semver@4.3.6 
  ├── redis@0.12.1 
  ├─┬ twilio@1.11.1 
  │ ├── jwt-simple@0.1.0 
  │ ├── q@0.9.7 
  │ ├─┬ request@2.27.0 
  │ │ ├── aws-sign@0.3.0 
  │ │ ├── cookie-jar@0.3.0 
  │ │ ├── hawk@1.0.0 
  │ │ ├── mime@1.2.11 
  │ │ ├── node-uuid@1.4.8 
  │ │ ├── qs@0.6.6 
  │ │ └── tunnel-agent@0.3.0 
  │ └── scmp@0.0.3 
  ├─┬ uglify-js@2.8.29 
  │ ├── source-map@0.5.7 
  │ ├── uglify-to-browserify@1.0.2 
  │ └─┬ yargs@3.10.0 
  │   ├── camelcase@1.2.1 
  │   ├─┬ cliui@2.1.0 
  │   │ ├─┬ center-align@0.1.3 
  │   │ │ ├─┬ align-text@0.1.4 
  │   │ │ │ ├─┬ kind-of@3.2.2 
  │   │ │ │ │ └── is-buffer@1.1.5 
  │   │ │ │ ├── longest@1.0.1 
  │   │ │ │ └── repeat-string@1.6.1 
  │   │ │ └── lazy-cache@1.0.4 
  │   │ ├── right-align@0.1.3 
  │   │ └── wordwrap@0.0.2 
  │   ├── decamelize@1.2.0 
  │   └── window-size@0.1.0 
  └─┬ ws@0.6.5 
    ├── nan@1.4.3 
    ├── options@0.0.6 
    └── ultron@1.0.2 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/portal/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0555 took 4.5005s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node
'use strict';

const DEBUG = !!process.env.PORTAL_DEBUG,
	fiber = require('carbonfibers'),
	errors = require('./errors'),
	analytics = require('./analytics'),
	packages = require('./packages'),
	views = require('./views'),
	less = (DEBUG ? require('less') : null),
	ServerError = errors.ServerError,
	fs = fiber.fs,
	colorBold = '\x1B[1m',
	colorGrey = '\x1B[90m',
	colorRed = '\x1B[31m',
	colorYellow = '\x1B[33m',
	colorWhite = '\x1B[37m',
	colorGreen = '\x1B[32m',
	colorCyan = '\x1B[1m\x1B[36m',
	colorReset = '\x1B[0m';

module.exports = Server;
Server.__proto__ = fiber.server;
Server.prototype = fiber.server.prototype;

function Server(options) {
	if (!(this instanceof Server)) {
		return new Server(options);
	}
	function handle(request, response) {
		if (DEBUG) {
			request.hostname = request.hostname.replace(/\.dev$/, '').replace(/\.dev\:/, ':');
			process.title = request.headers.host + request.url;
			/*useful*/ console.log(colorBold + 'pending --> ' + colorReset + colorBold + request.method + colorReset + ': ' + colorGrey + request.headers.host + request.url + colorReset);
			response.on('finish', function () {
				const codeType = ((response.statusCode + '')[0]|0);
				 /*useful*/ console.log('<-- ' + ((codeType === 2) ? colorGreen : ((codeType === 4) ? colorYellow : colorRed)) + response.statusCode + ' ' + colorReset + colorBold + request.method + colorReset + ': ' + request.headers.host + request.url, Date.now() - request.timestamp + 'ms');
			});
		}
		this.handleAnalytics(request, response);
		if (this.hooks && this.hooks.requests && this.hooks.requests.call(this, request, response) === false) { return; }
		if(request.location.pathname === '/favicon.ico') { return response.end(); }
		if (DEBUG) {
			if (/\.\w+$/.test(request.location.pathname)) {
				const pkg = this.package(request, response);
				if(/\.css$/.test(request.url)) {
					const parser = less.Parser();
					response.setHeader('content-type', 'text/css');
					return response.end(fiber.wait(parser.parse.bind(parser), '' + fs.readFile(pkg.paths.less + '/' + request.location.pathname.replace(/\.css$/, '.less')).wait()).toCSS({compress: false}));
				} else if(/\.js$/.test(request.url)) {
					response.setHeader('content-type', 'text/javascript');
					return response.end(fs.readFile(pkg.paths.javascript + '/' + request.location.pathname).wait());
				}
			}
		}

		try {
			if (request.method === 'GET') {
				this.view(request, response);
			} else if (request.method === 'POST') {
				Server.parseBody(request).wait();
				this.package(request, response).controll(request, response);
			} else {
				throw new ServerError('Invalid Request: Request Is Not A POST or GET.');
			}
		} catch(error) {
			errors.bind(request)(error);
		}
	}
	fiber.fork(function () {
		const port = options.port;
		fiber.server.call(this, handle.bind(this), { coors: options.coors });
		Object.keys(options).forEach(function (option) {
			this[option] = options[option];
		}.bind(this));
		this.fibers = fiber;
		this.tests = [];
		this.DEBUG = DEBUG;
		this.redis = fiber.redis(options.redisport, options.redishost);
		this.twilio = require('twilio')(process.env.TWILIOSID, process.env.TWILIOTOKEN);
		this.db = fiber.mongo(options.mongohost + '/' + options.database);
		this.ServerError = errors.ServerError;
		this.ClientError = errors.ClientError;
		this.Log = errors.Log;
		this.handleAnalytics = analytics(this);
		this.view = views(this);
		this.package = packages(this);
		fiber.wait(this.tests);
		if (this.hooks && this.hooks.initialization) {
			this.hooks.initialization.call(this, this);
		}
		this.listen(options.port);
	}.bind(this)).on('done', function (error) {
		if (error) { return errors(error); }
		/*useful*/console.log(   '\n\n'+
		'                         #\n'+
		'                        ###\n'+
		'                       ## ##\n'+
		'                      ##  ##\n'+
		'                       ####\n'+
		'                         |\n'+
		'                        ##\n'+
		'                       #### \n'+
		'                      ##  ##\n'+
		'                      ##  ##\n'+
		'                      ##  ##\n'+
		'                      ##  ##########\n'+
		'                     .##  #############\n'+
		'                .#######  ###############\n'+
		'            .#############################\n'+
		'       .###################################\n'+
		'      #####################################\n'+
		'      ##                                 ##\n'+
		'      ##,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,##\n'+
		'      #####################################\n'+
		'      ##                                 ##\n'+
		'      ##                                 ##\n'+
		'     .##                                 ###\n'+
		'   #####,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,#####\n'+
		'  ### ##################################### ###\n'+
		' ###  ##                                 ##  ###\n'+
		' ##   ##,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,##   ##\n'+
		'  ##  #####################################  ##\n'+
		'   ##                                       ##\n'+
		'    ####                                 ####\n'+
		'      ######                         ######\n'+
		'         ###############################\n'+
		' _____           _        _          ___   ___\n' +
		'|  __ \\         | |      | |        / _ \\ / _ \\\n' +
		'| |__) |__  _ __| |_ __ _| | __   _| | | | (_) |\n' +
		'|  ___/ _ \\| \'__| __/ _` | | \\ \\ / / | | |> _ <\n' +
		'| |  | (_) | |  | || (_| | |  \\ V /| |_| | (_) |\n' +
		'|_|   \\___/|_|   \\__\\__,_|_|   \\_/  \\___(_)___/\n');
	});
}
Server.errors = errors;
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
