/root/Targets/npkg
└─┬ npkg@0.0.6 
  ├─┬ async@2.5.0 
  │ └── lodash@4.17.4 
  ├── coffee-script@1.12.7 
  ├── colors@1.1.2 
  ├── get@1.4.0 
  ├── node-dep@0.0.5 
  ├── node-log@0.0.3 
  ├── node-obf@0.0.1 
  ├── protege@0.1.1 
  └─┬ rimraf@2.6.2 
    └─┬ glob@7.1.2 
      ├── fs.realpath@1.0.0 
      ├─┬ inflight@1.0.6 
      │ └── wrappy@1.0.2 
      ├── inherits@2.0.3 
      ├─┬ minimatch@3.0.4 
      │ └─┬ brace-expansion@1.1.8 
      │   ├── balanced-match@1.0.0 
      │   └── concat-map@0.0.1 
      ├── once@1.4.0 
      └── path-is-absolute@1.0.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/npkg/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.1262 took 3.8499s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (2:8) on program require('coffee-script');
require 'protege'
log = require 'node-log'
log.setName 'npkg'

rimraf = require 'rimraf'
fs = require 'fs'
path = require 'path'
packer = require './packer'
izpack = require './izpack'

module.exports =
  build: (temp, opt, cb) ->
    throw 'Missing parameters' unless opt

    try
      pack = JSON.parse fs.readFileSync path.join(opt.in, 'package.json')
    catch err
      throw 'Failed to find package.json in ' + opt.in

    throw '"main" property not in package.json' unless pack.main
    throw '"author" property not in package.json' unless pack.author
    throw '"name" property not in package.json' unless pack.name

    log.info 'Starting ' + pack.name + ' build'
    dirs = {}
    dirs.temp = temp
    dirs.app = path.join temp, 'app/'
    dirs.node = path.join temp, 'node/'
    dirs.deps = path.join temp, 'deps/'
    dirs.npm = path.join dirs.node, 'node_modules/'
    dirs.config = path.join temp, 'config/'

    for dir of dirs
      if path.existsSync(dirs[dir])
        rimraf.sync dirs[dir]
      fs.mkdirSync dirs[dir], 0755

    if path.existsSync opt.out
      if fs.readdirSync(opt.out).length <= 3 # We create 3 files, if they have any more throw an error
        rimraf.sync opt.out
        fs.mkdirSync opt.out, 0755
      else
        console.error 'Detected an unclean build folder! Please specify an empty or nonexistant folder'
        return cb()
    else
      fs.mkdirSync opt.out, 0755

    packer.save dirs, pack, opt, ->
      izpack.generateXML dirs, pack, opt, (result) ->
        fs.writeFile path.join(dirs.config, 'install.xml'), result, (err) ->
          throw err if err
          izpack.compile dirs, pack, opt, cb

 at SyntaxError: Unexpected token (2:8)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:61)
    at Parser.pp$1.parseExpressionStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:966:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:730:24)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
    at Parser.parse (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:516:17)
    at Object.parse (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:3098:39)
    at convert (/root/ExpoSE/lib/Tropigate/bin/main.js:50:18)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
