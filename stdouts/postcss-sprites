
> phantomjs-prebuilt@2.1.15 install /root/Targets/postcss-sprites/node_modules/phantomjs-prebuilt
> node install.js

PhantomJS not found on PATH
Download already available at /tmp/phantomjs/phantomjs-2.1.1-linux-x86_64.tar.bz2
Verified checksum of previously downloaded file
Extracting tar contents (via spawned process)
Removing /root/Targets/postcss-sprites/node_modules/phantomjs-prebuilt/lib/phantom
Copying extracted folder /tmp/phantomjs/phantomjs-2.1.1-linux-x86_64.tar.bz2-extract-1507287695359/phantomjs-2.1.1-linux-x86_64 -> /root/Targets/postcss-sprites/node_modules/phantomjs-prebuilt/lib/phantom
Writing location.js file
Done. Phantomjs binary available at /root/Targets/postcss-sprites/node_modules/phantomjs-prebuilt/lib/phantom/bin/phantomjs
/root/Targets/postcss-sprites
└─┬ postcss-sprites@4.2.1 
  ├── bluebird@3.5.1 
  ├─┬ debug@2.6.9 
  │ └── ms@2.0.0 
  ├─┬ fs-extra@0.26.7 
  │ ├── graceful-fs@4.1.11 
  │ ├── jsonfile@2.4.0 
  │ ├── klaw@1.3.1 
  │ ├── path-is-absolute@1.0.1 
  │ └── rimraf@2.6.2 
  ├── lodash@4.17.4 
  ├─┬ postcss@5.2.18 
  │ ├─┬ chalk@1.1.3 
  │ │ ├── ansi-styles@2.2.1 
  │ │ ├── escape-string-regexp@1.0.5 
  │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ └── ansi-regex@2.1.1 
  │ │ ├── strip-ansi@3.0.1 
  │ │ └── supports-color@2.0.0 
  │ ├── js-base64@2.3.2 
  │ ├── source-map@0.5.7 
  │ └─┬ supports-color@3.2.3 
  │   └── has-flag@1.0.0 
  ├─┬ spritesmith@3.1.1 
  │ ├─┬ concat-stream@1.5.2 
  │ │ ├── inherits@2.0.3 
  │ │ ├─┬ readable-stream@2.0.6 
  │ │ │ ├── core-util-is@1.0.2 
  │ │ │ ├── isarray@1.0.0 
  │ │ │ ├── process-nextick-args@1.0.7 
  │ │ │ ├── string_decoder@0.10.31 
  │ │ │ └── util-deprecate@1.0.2 
  │ │ └── typedarray@0.0.6 
  │ ├─┬ layout@2.2.0 
  │ │ └── bin-pack@1.0.2 
  │ ├─┬ pixelsmith@2.1.2 
  │ │ ├── async@0.9.2 
  │ │ ├─┬ get-pixels@3.3.0 
  │ │ │ ├── data-uri-to-buffer@0.0.3 
  │ │ │ ├── jpeg-js@0.1.2 
  │ │ │ ├─┬ ndarray-pack@1.2.1 
  │ │ │ │ └─┬ cwise-compiler@1.1.3 
  │ │ │ │   └── uniq@1.0.1 
  │ │ │ ├── node-bitmap@0.0.1 
  │ │ │ ├── omggif@1.0.8 
  │ │ │ ├── parse-data-uri@0.2.0 
  │ │ │ ├── pngjs@2.3.1 
  │ │ │ ├─┬ request@2.83.0 
  │ │ │ │ ├── aws-sign2@0.7.0 
  │ │ │ │ ├── form-data@2.3.1 
  │ │ │ │ ├─┬ har-validator@5.0.3 
  │ │ │ │ │ ├─┬ ajv@5.2.3 
  │ │ │ │ │ │ ├── fast-deep-equal@1.0.0 
  │ │ │ │ │ │ └── json-schema-traverse@0.3.1 
  │ │ │ │ │ └── har-schema@2.0.0 
  │ │ │ │ ├─┬ hawk@6.0.2 
  │ │ │ │ │ ├── boom@4.3.1 
  │ │ │ │ │ ├─┬ cryptiles@3.1.2 
  │ │ │ │ │ │ └── boom@5.2.0 
  │ │ │ │ │ ├── hoek@4.2.0 
  │ │ │ │ │ └── sntp@2.0.2 
  │ │ │ │ ├─┬ http-signature@1.2.0 
  │ │ │ │ │ └── assert-plus@1.0.0 
  │ │ │ │ ├── performance-now@2.1.0 
  │ │ │ │ └── qs@6.5.1 
  │ │ │ └── through@2.3.8 
  │ │ ├─┬ mime-types@2.1.17 
  │ │ │ └── mime-db@1.30.0 
  │ │ ├─┬ ndarray@1.0.18 
  │ │ │ ├── iota-array@1.0.0 
  │ │ │ └── is-buffer@1.1.5 
  │ │ ├─┬ ndarray-fill@1.0.2 
  │ │ │ └─┬ cwise@1.0.10 
  │ │ │   ├─┬ cwise-parser@1.0.3 
  │ │ │   │ └── esprima@1.2.5 
  │ │ │   ├─┬ static-module@1.5.0 
  │ │ │   │ ├─┬ concat-stream@1.6.0 
  │ │ │   │ │ └─┬ readable-stream@2.3.3 
  │ │ │   │ │   └── string_decoder@1.0.3 
  │ │ │   │ ├─┬ duplexer2@0.0.2 
  │ │ │   │ │ └─┬ readable-stream@1.1.14 
  │ │ │   │ │   └── isarray@0.0.1 
  │ │ │   │ ├─┬ escodegen@1.3.3 
  │ │ │   │ │ ├── esprima@1.1.1 
  │ │ │   │ │ ├── estraverse@1.5.1 
  │ │ │   │ │ ├── esutils@1.0.0 
  │ │ │   │ │ └─┬ source-map@0.1.43 
  │ │ │   │ │   └── amdefine@1.0.1 
  │ │ │   │ ├─┬ falafel@2.1.0 
  │ │ │   │ │ ├── acorn@5.1.2 
  │ │ │   │ │ ├── foreach@2.0.5 
  │ │ │   │ │ ├── isarray@0.0.1 
  │ │ │   │ │ └── object-keys@1.0.11 
  │ │ │   │ ├─┬ has@1.0.1 
  │ │ │   │ │ └── function-bind@1.1.1 
  │ │ │   │ ├── object-inspect@0.4.0 
  │ │ │   │ ├─┬ quote-stream@0.0.0 
  │ │ │   │ │ └─┬ through2@0.4.2 
  │ │ │   │ │   └─┬ readable-stream@1.0.34 
  │ │ │   │ │     └── isarray@0.0.1 
  │ │ │   │ ├─┬ readable-stream@1.0.34 
  │ │ │   │ │ ├── isarray@0.0.1 
  │ │ │   │ │ └── string_decoder@0.10.31 
  │ │ │   │ ├── shallow-copy@0.0.1 
  │ │ │   │ ├─┬ static-eval@0.2.4 
  │ │ │   │ │ └─┬ escodegen@0.0.28 
  │ │ │   │ │   ├── esprima@1.0.4 
  │ │ │   │ │   └── estraverse@1.3.2 
  │ │ │   │ └─┬ through2@0.4.2 
  │ │ │   │   └─┬ xtend@2.1.2 
  │ │ │   │     └── object-keys@0.4.0 
  │ │ │   └─┬ uglify-js@2.8.29 
  │ │ │     ├── uglify-to-browserify@1.0.2 
  │ │ │     └─┬ yargs@3.10.0 
  │ │ │       ├── camelcase@1.2.1 
  │ │ │       ├─┬ cliui@2.1.0 
  │ │ │       │ ├─┬ center-align@0.1.3 
  │ │ │       │ │ ├─┬ align-text@0.1.4 
  │ │ │       │ │ │ ├── kind-of@3.2.2 
  │ │ │       │ │ │ ├── longest@1.0.1 
  │ │ │       │ │ │ └── repeat-string@1.6.1 
  │ │ │       │ │ └── lazy-cache@1.0.4 
  │ │ │       │ ├── right-align@0.1.3 
  │ │ │       │ └── wordwrap@0.0.2 
  │ │ │       └── window-size@0.1.0 
  │ │ ├── obj-extend@0.1.0 
  │ │ ├─┬ save-pixels@2.3.4 
  │ │ │ ├─┬ contentstream@1.0.0 
  │ │ │ │ └─┬ readable-stream@1.0.34 
  │ │ │ │   └── isarray@0.0.1 
  │ │ │ ├─┬ gif-encoder@0.4.3 
  │ │ │ │ └─┬ readable-stream@1.1.14 
  │ │ │ │   └── isarray@0.0.1 
  │ │ │ ├── jpeg-js@0.0.4 
  │ │ │ ├── ndarray-ops@1.2.2 
  │ │ │ └── pngjs-nozlib@1.0.0 
  │ │ └─┬ vinyl-file@1.3.0 
  │ │   ├─┬ strip-bom@2.0.0 
  │ │   │ └── is-utf8@0.2.1 
  │ │   ├─┬ strip-bom-stream@1.0.0 
  │ │   │ └── first-chunk-stream@1.0.0 
  │ │   └─┬ vinyl@1.2.0 
  │ │     ├── clone@1.0.2 
  │ │     ├── clone-stats@0.0.1 
  │ │     └── replace-ext@0.0.1 
  │ ├── semver@5.0.3 
  │ └─┬ through2@2.0.3 
  │   ├─┬ readable-stream@2.3.3 
  │   │ ├── safe-buffer@5.1.1 
  │   │ └── string_decoder@1.0.3 
  │   └── xtend@4.0.1 
  └─┬ svg-sprite@1.3.7 
    ├── async@2.5.0 
    ├── css-selector-parser@1.3.0 
    ├── cssmin@0.4.3 
    ├── cssom@0.3.2 
    ├── dateformat@2.2.0 
    ├─┬ glob@7.1.2 
    │ ├── fs.realpath@1.0.0 
    │ ├─┬ inflight@1.0.6 
    │ │ └── wrappy@1.0.2 
    │ ├─┬ minimatch@3.0.4 
    │ │ └─┬ brace-expansion@1.1.8 
    │ │   ├── balanced-match@1.0.0 
    │ │   └── concat-map@0.0.1 
    │ └── once@1.4.0 
    ├─┬ js-yaml@3.10.0 
    │ ├─┬ argparse@1.0.9 
    │ │ └── sprintf-js@1.0.3 
    │ └── esprima@4.0.0 
    ├─┬ lodash.pluck@3.1.2 
    │ ├── lodash._baseget@3.7.2 
    │ ├── lodash._topath@3.8.1 
    │ ├── lodash.isarray@3.0.4 
    │ └─┬ lodash.map@3.1.4 
    │   ├── lodash._arraymap@3.0.0 
    │   ├─┬ lodash._basecallback@3.3.1 
    │   │ ├─┬ lodash._baseisequal@3.0.7 
    │   │ │ └── lodash.istypedarray@3.0.6 
    │   │ ├── lodash._bindcallback@3.0.1 
    │   │ └── lodash.pairs@3.0.1 
    │   ├── lodash._baseeach@3.0.4 
    │   └─┬ lodash.keys@3.1.2 
    │     ├── lodash._getnative@3.9.1 
    │     └── lodash.isarguments@3.1.0 
    ├─┬ mkdirp@0.5.1 
    │ └── minimist@0.0.8 
    ├── mustache@2.3.0 
    ├─┬ phantomjs-prebuilt@2.1.15 
    │ ├── es6-promise@4.0.5 
    │ ├─┬ extract-zip@1.6.5 
    │ │ ├─┬ concat-stream@1.6.0 
    │ │ │ └─┬ readable-stream@2.3.3 
    │ │ │   └── string_decoder@1.0.3 
    │ │ ├─┬ debug@2.2.0 
    │ │ │ └── ms@0.7.1 
    │ │ ├── mkdirp@0.5.0 
    │ │ └─┬ yauzl@2.4.1 
    │ │   └─┬ fd-slicer@1.0.1 
    │ │     └── pend@1.2.0 
    │ ├── fs-extra@1.0.0 
    │ ├─┬ hasha@2.2.0 
    │ │ ├── is-stream@1.1.0 
    │ │ └─┬ pinkie-promise@2.0.1 
    │ │   └── pinkie@2.0.4 
    │ ├── kew@0.7.0 
    │ ├── progress@1.1.8 
    │ ├─┬ request@2.81.0 
    │ │ ├── aws-sign2@0.6.0 
    │ │ ├── aws4@1.6.0 
    │ │ ├── caseless@0.12.0 
    │ │ ├─┬ combined-stream@1.0.5 
    │ │ │ └── delayed-stream@1.0.0 
    │ │ ├── extend@3.0.1 
    │ │ ├── forever-agent@0.6.1 
    │ │ ├─┬ form-data@2.1.4 
    │ │ │ └── asynckit@0.4.0 
    │ │ ├─┬ har-validator@4.2.1 
    │ │ │ ├─┬ ajv@4.11.8 
    │ │ │ │ ├── co@4.6.0 
    │ │ │ │ └─┬ json-stable-stringify@1.0.1 
    │ │ │ │   └── jsonify@0.0.0 
    │ │ │ └── har-schema@1.0.5 
    │ │ ├─┬ hawk@3.1.3 
    │ │ │ ├── boom@2.10.1 
    │ │ │ ├── cryptiles@2.0.5 
    │ │ │ ├── hoek@2.16.3 
    │ │ │ └── sntp@1.0.9 
    │ │ ├─┬ http-signature@1.1.1 
    │ │ │ ├── assert-plus@0.2.0 
    │ │ │ ├─┬ jsprim@1.4.1 
    │ │ │ │ ├── extsprintf@1.3.0 
    │ │ │ │ ├── json-schema@0.2.3 
    │ │ │ │ └── verror@1.10.0 
    │ │ │ └─┬ sshpk@1.13.1 
    │ │ │   ├── asn1@0.2.3 
    │ │ │   ├── bcrypt-pbkdf@1.0.1 
    │ │ │   ├── dashdash@1.14.1 
    │ │ │   ├── ecc-jsbn@0.1.1 
    │ │ │   ├── getpass@0.1.7 
    │ │ │   ├── jsbn@0.1.1 
    │ │ │   └── tweetnacl@0.14.5 
    │ │ ├── is-typedarray@1.0.0 
    │ │ ├── json-stringify-safe@5.0.1 
    │ │ ├── oauth-sign@0.8.2 
    │ │ ├── performance-now@0.2.0 
    │ │ ├── qs@6.4.0 
    │ │ ├── stringstream@0.0.5 
    │ │ ├─┬ tough-cookie@2.3.3 
    │ │ │ └── punycode@1.4.1 
    │ │ ├── tunnel-agent@0.6.0 
    │ │ └── uuid@3.1.0 
    │ ├─┬ request-progress@2.0.1 
    │ │ └── throttleit@1.0.0 
    │ └─┬ which@1.2.14 
    │   └── isexe@2.0.0 
    ├── prettysize@0.1.0 
    ├─┬ svgo@0.7.2 
    │ ├─┬ coa@1.0.4 
    │ │ └── q@1.5.0 
    │ ├── colors@1.1.2 
    │ ├─┬ csso@2.3.2 
    │ │ └── clap@1.2.3 
    │ ├─┬ js-yaml@3.7.0 
    │ │ └── esprima@2.7.3 
    │ ├── sax@1.2.4 
    │ └── whet.extend@0.9.9 
    ├─┬ vinyl@2.1.0 
    │ ├── clone@2.1.1 
    │ ├── clone-buffer@1.0.0 
    │ ├── clone-stats@1.0.0 
    │ ├── cloneable-readable@1.0.0 
    │ ├── remove-trailing-separator@1.1.0 
    │ └── replace-ext@1.0.0 
    ├─┬ winston@2.4.0 
    │ ├── async@1.0.0 
    │ ├── colors@1.0.3 
    │ ├── cycle@1.0.3 
    │ ├── eyes@0.1.8 
    │ ├── isstream@0.1.2 
    │ └── stack-trace@0.0.10 
    ├── xmldom@0.1.27 
    ├── xpath@0.0.24 
    └─┬ yargs@8.0.2 
      ├── camelcase@4.1.0 
      ├─┬ cliui@3.2.0 
      │ ├─┬ string-width@1.0.2 
      │ │ ├── code-point-at@1.1.0 
      │ │ └─┬ is-fullwidth-code-point@1.0.0 
      │ │   └── number-is-nan@1.0.1 
      │ └─┬ wrap-ansi@2.1.0 
      │   └── string-width@1.0.2 
      ├── decamelize@1.2.0 
      ├── get-caller-file@1.0.2 
      ├─┬ os-locale@2.1.0 
      │ ├─┬ execa@0.7.0 
      │ │ ├─┬ cross-spawn@5.1.0 
      │ │ │ ├─┬ lru-cache@4.1.1 
      │ │ │ │ ├── pseudomap@1.0.2 
      │ │ │ │ └── yallist@2.1.2 
      │ │ │ └─┬ shebang-command@1.2.0 
      │ │ │   └── shebang-regex@1.0.0 
      │ │ ├── get-stream@3.0.0 
      │ │ ├─┬ npm-run-path@2.0.2 
      │ │ │ └── path-key@2.0.1 
      │ │ ├── p-finally@1.0.0 
      │ │ ├── signal-exit@3.0.2 
      │ │ └── strip-eof@1.0.0 
      │ ├─┬ lcid@1.0.0 
      │ │ └── invert-kv@1.0.0 
      │ └─┬ mem@1.1.0 
      │   └── mimic-fn@1.1.0 
      ├─┬ read-pkg-up@2.0.0 
      │ ├─┬ find-up@2.1.0 
      │ │ └─┬ locate-path@2.0.0 
      │ │   ├─┬ p-locate@2.0.0 
      │ │   │ └── p-limit@1.1.0 
      │ │   └── path-exists@3.0.0 
      │ └─┬ read-pkg@2.0.0 
      │   ├─┬ load-json-file@2.0.0 
      │   │ ├─┬ parse-json@2.2.0 
      │   │ │ └─┬ error-ex@1.3.1 
      │   │ │   └── is-arrayish@0.2.1 
      │   │ ├── pify@2.3.0 
      │   │ └── strip-bom@3.0.0 
      │   ├─┬ normalize-package-data@2.4.0 
      │   │ ├── hosted-git-info@2.5.0 
      │   │ ├─┬ is-builtin-module@1.0.0 
      │   │ │ └── builtin-modules@1.1.1 
      │   │ └─┬ validate-npm-package-license@3.0.1 
      │   │   ├─┬ spdx-correct@1.0.2 
      │   │   │ └── spdx-license-ids@1.2.2 
      │   │   └── spdx-expression-parse@1.0.4 
      │   └── path-type@2.0.0 
      ├── require-directory@2.1.1 
      ├── require-main-filename@1.0.1 
      ├── set-blocking@2.0.0 
      ├─┬ string-width@2.1.1 
      │ ├── is-fullwidth-code-point@2.0.0 
      │ └─┬ strip-ansi@4.0.0 
      │   └── ansi-regex@3.0.0 
      ├── which-module@2.0.0 
      ├── y18n@3.2.1 
      └─┬ yargs-parser@7.0.0 
        └── camelcase@4.1.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/postcss-sprites/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 32% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","RegExp","bind","defineProperties","join","create","call","setPrototypeOf","binding","Object","WeakMap","Set","Array","ArrayBuffer","DataView","Map","resolve","max","now","apply","getOwnPropertyNames","getOwnPropertyDescriptor","parseInt"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0353 took 25.413s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (4:4) on program module.exports = rimraf
rimraf.sync = rimrafSync

var assert = require("assert")
var path = require("path")
var fs = require("fs")
var glob = require("glob")
var _0666 = parseInt('666', 8)

var defaultGlobOpts = {
  nosort: true,
  silent: true
}

// for EMFILE handling
var timeout = 0

var isWindows = (process.platform === "win32")

function defaults (options) {
  var methods = [
    'unlink',
    'chmod',
    'stat',
    'lstat',
    'rmdir',
    'readdir'
  ]
  methods.forEach(function(m) {
    options[m] = options[m] || fs[m]
    m = m + 'Sync'
    options[m] = options[m] || fs[m]
  })

  options.maxBusyTries = options.maxBusyTries || 3
  options.emfileWait = options.emfileWait || 1000
  if (options.glob === false) {
    options.disableGlob = true
  }
  options.disableGlob = options.disableGlob || false
  options.glob = options.glob || defaultGlobOpts
}

function rimraf (p, options, cb) {
  if (typeof options === 'function') {
    cb = options
    options = {}
  }

  assert(p, 'rimraf: missing path')
  assert.equal(typeof p, 'string', 'rimraf: path should be a string')
  assert.equal(typeof cb, 'function', 'rimraf: callback function required')
  assert(options, 'rimraf: invalid options argument provided')
  assert.equal(typeof options, 'object', 'rimraf: options should be object')

  defaults(options)

  var busyTries = 0
  var errState = null
  var n = 0

  if (options.disableGlob || !glob.hasMagic(p))
    return afterGlob(null, [p])

  options.lstat(p, function (er, stat) {
    if (!er)
      return afterGlob(null, [p])

    glob(p, options.glob, afterGlob)
  })

  function next (er) {
    errState = errState || er
    if (--n === 0)
      cb(errState)
  }

  function afterGlob (er, results) {
    if (er)
      return cb(er)

    n = results.length
    if (n === 0)
      return cb()

    results.forEach(function (p) {
      rimraf_(p, options, function CB (er) {
        if (er) {
          if ((er.code === "EBUSY" || er.code === "ENOTEMPTY" || er.code === "EPERM") &&
              busyTries < options.maxBusyTries) {
            busyTries ++
            var time = busyTries * 100
            // try again, with the same exact callback as this one.
            return setTimeout(function () {
              rimraf_(p, options, CB)
            }, time)
          }

          // this one won't happen if graceful-fs is used.
          if (er.code === "EMFILE" && timeout < options.emfileWait) {
            return setTimeout(function () {
              rimraf_(p, options, CB)
            }, timeout ++)
          }

          // already gone
          if (er.code === "ENOENT") er = null
        }

        timeout = 0
        next(er)
      })
    })
  }
}

// Two possible strategies.
// 1. Assume it's a file.  unlink it, then do the dir stuff on EPERM or EISDIR
// 2. Assume it's a directory.  readdir, then do the file stuff on ENOTDIR
//
// Both result in an extra syscall when you guess wrong.  However, there
// are likely far more normal files in the world than directories.  This
// is based on the assumption that a the average number of files per
// directory is >= 1.
//
// If anyone ever complains about this, then I guess the strategy could
// be made configurable somehow.  But until then, YAGNI.
function rimraf_ (p, options, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')

  // sunos lets the root user unlink directories, which is... weird.
  // so we have to lstat here and make sure it's not a dir.
  options.lstat(p, function (er, st) {
    if (er && er.code === "ENOENT")
      return cb(null)

    // Windows can EPERM on stat.  Life is suffering.
    if (er && er.code === "EPERM" && isWindows)
      fixWinEPERM(p, options, er, cb)

    if (st && st.isDirectory())
      return rmdir(p, options, er, cb)

    options.unlink(p, function (er) {
      if (er) {
        if (er.code === "ENOENT")
          return cb(null)
        if (er.code === "EPERM")
          return (isWindows)
            ? fixWinEPERM(p, options, er, cb)
            : rmdir(p, options, er, cb)
        if (er.code === "EISDIR")
          return rmdir(p, options, er, cb)
      }
      return cb(er)
    })
  })
}

function fixWinEPERM (p, options, er, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')
  if (er)
    assert(er instanceof Error)

  options.chmod(p, _0666, function (er2) {
    if (er2)
      cb(er2.code === "ENOENT" ? null : er)
    else
      options.stat(p, function(er3, stats) {
        if (er3)
          cb(er3.code === "ENOENT" ? null : er)
        else if (stats.isDirectory())
          rmdir(p, options, er, cb)
        else
          options.unlink(p, cb)
      })
  })
}

function fixWinEPERMSync (p, options, er) {
  assert(p)
  assert(options)
  if (er)
    assert(er instanceof Error)

  try {
    options.chmodSync(p, _0666)
  } catch (er2) {
    if (er2.code === "ENOENT")
      return
    else
      throw er
  }

  try {
    var stats = options.statSync(p)
  } catch (er3) {
    if (er3.code === "ENOENT")
      return
    else
      throw er
  }

  if (stats.isDirectory())
    rmdirSync(p, options, er)
  else
    options.unlinkSync(p)
}

function rmdir (p, options, originalEr, cb) {
  assert(p)
  assert(options)
  if (originalEr)
    assert(originalEr instanceof Error)
  assert(typeof cb === 'function')

  // try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS)
  // if we guessed wrong, and it's not a directory, then
  // raise the original error.
  options.rmdir(p, function (er) {
    if (er && (er.code === "ENOTEMPTY" || er.code === "EEXIST" || er.code === "EPERM"))
      rmkids(p, options, cb)
    else if (er && er.code === "ENOTDIR")
      cb(originalEr)
    else
      cb(er)
  })
}

function rmkids(p, options, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')

  options.readdir(p, function (er, files) {
    if (er)
      return cb(er)
    var n = files.length
    if (n === 0)
      return options.rmdir(p, cb)
    var errState
    files.forEach(function (f) {
      rimraf(path.join(p, f), options, function (er) {
        if (errState)
          return
        if (er)
          return cb(errState = er)
        if (--n === 0)
          options.rmdir(p, cb)
      })
    })
  })
}

// this looks simpler, and is strictly *faster*, but will
// tie up the JavaScript thread and fail on excessively
// deep directory trees.
function rimrafSync (p, options) {
  options = options || {}
  defaults(options)

  assert(p, 'rimraf: missing path')
  assert.equal(typeof p, 'string', 'rimraf: path should be a string')
  assert(options, 'rimraf: missing options')
  assert.equal(typeof options, 'object', 'rimraf: options should be object')

  var results

  if (options.disableGlob || !glob.hasMagic(p)) {
    results = [p]
  } else {
    try {
      options.lstatSync(p)
      results = [p]
    } catch (er) {
      results = glob.sync(p, options.glob)
    }
  }

  if (!results.length)
    return

  for (var i = 0; i < results.length; i++) {
    var p = results[i]

    try {
      var st = options.lstatSync(p)
    } catch (er) {
      if (er.code === "ENOENT")
        return

      // Windows can EPERM on stat.  Life is suffering.
      if (er.code === "EPERM" && isWindows)
        fixWinEPERMSync(p, options, er)
    }

    try {
      // sunos lets the root user unlink directories, which is... weird.
      if (st && st.isDirectory())
        rmdirSync(p, options, null)
      else
        options.unlinkSync(p)
    } catch (er) {
      if (er.code === "ENOENT")
        return
      if (er.code === "EPERM")
        return isWindows ? fixWinEPERMSync(p, options, er) : rmdirSync(p, options, er)
      if (er.code !== "EISDIR")
        throw er

      rmdirSync(p, options, er)
    }
  }
}

function rmdirSync (p, options, originalEr) {
  assert(p)
  assert(options)
  if (originalEr)
    assert(originalEr instanceof Error)

  try {
    options.rmdirSync(p)
  } catch (er) {
    if (er.code === "ENOENT")
      return
    if (er.code === "ENOTDIR")
      throw originalEr
    if (er.code === "ENOTEMPTY" || er.code === "EEXIST" || er.code === "EPERM")
      rmkidsSync(p, options)
  }
}

function rmkidsSync (p, options) {
  assert(p)
  assert(options)
  options.readdirSync(p).forEach(function (f) {
    rimrafSync(path.join(p, f), options)
  })

  // We only end up here once we got ENOTEMPTY at least once, and
  // at this point, we are guaranteed to have removed all the kids.
  // So, we know that it won't be ENOENT or ENOTDIR or anything else.
  // try really hard to delete stuff on windows, because it has a
  // PROFOUNDLY annoying habit of not closing handles promptly when
  // files are deleted, resulting in spurious ENOTEMPTY errors.
  var retries = isWindows ? 100 : 1
  var i = 0
  do {
    var threw = true
    try {
      var ret = options.rmdirSync(p, options)
      threw = false
      return ret
    } finally {
      if (++i < retries && threw)
        continue
    }
  } while (true)
}
 at SyntaxError: Unexpected token (4:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/postcss-sprites/node_modules/postcss-sprites/lib/index.js. Coverage (Term): 18% Coverage (LOC): 29%
*- File /root/Targets/postcss-sprites/node_modules/postcss/lib/postcss.js. Coverage (Term): 50% Coverage (LOC): 62%
*- File /root/Targets/postcss-sprites/node_modules/postcss/lib/declaration.js. Coverage (Term): 57% Coverage (LOC): 74%
*- File /root/Targets/postcss-sprites/node_modules/postcss/lib/warn-once.js. Coverage (Term): 52% Coverage (LOC): 62%
*- File /root/Targets/postcss-sprites/node_modules/postcss/lib/node.js. Coverage (Term): 21% Coverage (LOC): 35%
*- File /root/Targets/postcss-sprites/node_modules/postcss/lib/css-syntax-error.js. Coverage (Term): 33% Coverage (LOC): 40%
*- File /root/Targets/postcss-sprites/node_modules/supports-color/index.js. Coverage (Term): 49% Coverage (LOC): 40%
*- File /root/Targets/postcss-sprites/node_modules/has-flag/index.js. Coverage (Term): 83% Coverage (LOC): 100%
*- File /root/Targets/postcss-sprites/node_modules/chalk/index.js. Coverage (Term): 55% Coverage (LOC): 64%
*- File /root/Targets/postcss-sprites/node_modules/escape-string-regexp/index.js. Coverage (Term): 85% Coverage (LOC): 90%
*- File /root/Targets/postcss-sprites/node_modules/ansi-styles/index.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/postcss-sprites/node_modules/strip-ansi/index.js. Coverage (Term): 57% Coverage (LOC): 86%
*- File /root/Targets/postcss-sprites/node_modules/ansi-regex/index.js. Coverage (Term): 93% Coverage (LOC): 100%
*- File /root/Targets/postcss-sprites/node_modules/has-ansi/index.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/postcss-sprites/node_modules/chalk/node_modules/supports-color/index.js. Coverage (Term): 63% Coverage (LOC): 56%
*- File /root/Targets/postcss-sprites/node_modules/postcss/lib/terminal-highlight.js. Coverage (Term): 46% Coverage (LOC): 58%
*- File /root/Targets/postcss-sprites/node_modules/postcss/lib/tokenize.js. Coverage (Term): 10% Coverage (LOC): 10%
*- File /root/Targets/postcss-sprites/node_modules/postcss/lib/input.js. Coverage (Term): 35% Coverage (LOC): 41%
*- File /root/Targets/postcss-sprites/node_modules/postcss/lib/previous-map.js. Coverage (Term): 22% Coverage (LOC): 33%
*- File /root/Targets/postcss-sprites/node_modules/js-base64/base64.js. Coverage (Term): 24% Coverage (LOC): 46%
*- File /root/Targets/postcss-sprites/node_modules/source-map/source-map.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/postcss-sprites/node_modules/source-map/lib/source-map-generator.js. Coverage (Term): 8% Coverage (LOC): 11%
*- File /root/Targets/postcss-sprites/node_modules/source-map/lib/base64-vlq.js. Coverage (Term): 20% Coverage (LOC): 30%
*- File /root/Targets/postcss-sprites/node_modules/source-map/lib/base64.js. Coverage (Term): 17% Coverage (LOC): 19%
*- File /root/Targets/postcss-sprites/node_modules/source-map/lib/util.js. Coverage (Term): 11% Coverage (LOC): 14%
*- File /root/Targets/postcss-sprites/node_modules/source-map/lib/array-set.js. Coverage (Term): 20% Coverage (LOC): 34%
*- File /root/Targets/postcss-sprites/node_modules/source-map/lib/mapping-list.js. Coverage (Term): 23% Coverage (LOC): 34%
*- File /root/Targets/postcss-sprites/node_modules/source-map/lib/source-map-consumer.js. Coverage (Term): 9% Coverage (LOC): 15%
*- File /root/Targets/postcss-sprites/node_modules/source-map/lib/binary-search.js. Coverage (Term): 12% Coverage (LOC): 18%
*- File /root/Targets/postcss-sprites/node_modules/source-map/lib/quick-sort.js. Coverage (Term): 12% Coverage (LOC): 25%
*- File /root/Targets/postcss-sprites/node_modules/source-map/lib/source-node.js. Coverage (Term): 8% Coverage (LOC): 12%
*- File /root/Targets/postcss-sprites/node_modules/postcss/lib/stringifier.js. Coverage (Term): 11% Coverage (LOC): 21%
*- File /root/Targets/postcss-sprites/node_modules/postcss/lib/stringify.js. Coverage (Term): 74% Coverage (LOC): 85%
*- File /root/Targets/postcss-sprites/node_modules/postcss/lib/processor.js. Coverage (Term): 25% Coverage (LOC): 39%
*- File /root/Targets/postcss-sprites/node_modules/postcss/lib/lazy-result.js. Coverage (Term): 24% Coverage (LOC): 36%
*- File /root/Targets/postcss-sprites/node_modules/postcss/lib/map-generator.js. Coverage (Term): 13% Coverage (LOC): 18%
*- File /root/Targets/postcss-sprites/node_modules/postcss/lib/result.js. Coverage (Term): 51% Coverage (LOC): 63%
*- File /root/Targets/postcss-sprites/node_modules/postcss/lib/warning.js. Coverage (Term): 26% Coverage (LOC): 32%
*- File /root/Targets/postcss-sprites/node_modules/postcss/lib/parse.js. Coverage (Term): 39% Coverage (LOC): 41%
*- File /root/Targets/postcss-sprites/node_modules/postcss/lib/parser.js. Coverage (Term): 11% Coverage (LOC): 17%
*- File /root/Targets/postcss-sprites/node_modules/postcss/lib/comment.js. Coverage (Term): 57% Coverage (LOC): 74%
*- File /root/Targets/postcss-sprites/node_modules/postcss/lib/at-rule.js. Coverage (Term): 45% Coverage (LOC): 65%
*- File /root/Targets/postcss-sprites/node_modules/postcss/lib/container.js. Coverage (Term): 15% Coverage (LOC): 24%
*- File /root/Targets/postcss-sprites/node_modules/postcss/lib/root.js. Coverage (Term): 31% Coverage (LOC): 44%
*- File /root/Targets/postcss-sprites/node_modules/postcss/lib/rule.js. Coverage (Term): 54% Coverage (LOC): 73%
*- File /root/Targets/postcss-sprites/node_modules/postcss/lib/list.js. Coverage (Term): 14% Coverage (LOC): 18%
*- File /root/Targets/postcss-sprites/node_modules/postcss/lib/vendor.js. Coverage (Term): 48% Coverage (LOC): 60%
*- File /root/Targets/postcss-sprites/node_modules/lodash/lodash.js. Coverage (Term): 22% Coverage (LOC): 35%
*- File /root/Targets/postcss-sprites/node_modules/postcss-sprites/lib/core.js. Coverage (Term): 10% Coverage (LOC): 13%
*- File /root/Targets/postcss-sprites/node_modules/fs-extra/lib/index.js. Coverage (Term): 46% Coverage (LOC): 48%
*- File /root/Targets/postcss-sprites/node_modules/fs-extra/lib/util/assign.js. Coverage (Term): 94% Coverage (LOC): 100%
*- File /root/Targets/postcss-sprites/node_modules/graceful-fs/graceful-fs.js. Coverage (Term): 27% Coverage (LOC): 33%
*- File /root/Targets/postcss-sprites/node_modules/graceful-fs/polyfills.js. Coverage (Term): 31% Coverage (LOC): 39%
*- File /root/Targets/postcss-sprites/node_modules/graceful-fs/fs.js. Coverage (Term): 87% Coverage (LOC): 100%
*- File /root/Targets/postcss-sprites/node_modules/graceful-fs/legacy-streams.js. Coverage (Term): 6% Coverage (LOC): 5%
*- File /root/Targets/postcss-sprites/node_modules/fs-extra/lib/copy/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/postcss-sprites/node_modules/fs-extra/lib/copy/copy.js. Coverage (Term): 19% Coverage (LOC): 19%
*- File /root/Targets/postcss-sprites/node_modules/fs-extra/lib/copy/ncp.js. Coverage (Term): 4% Coverage (LOC): 3%
*- File /root/Targets/postcss-sprites/node_modules/fs-extra/lib/util/utimes.js. Coverage (Term): 13% Coverage (LOC): 24%
*- File /root/Targets/postcss-sprites/node_modules/fs-extra/lib/mkdirs/index.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/postcss-sprites/node_modules/fs-extra/lib/mkdirs/mkdirs.js. Coverage (Term): 17% Coverage (LOC): 16%
*- File /root/Targets/postcss-sprites/node_modules/fs-extra/lib/mkdirs/mkdirs-sync.js. Coverage (Term): 25% Coverage (LOC): 23%
*- File /root/Targets/postcss-sprites/node_modules/fs-extra/lib/copy-sync/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/postcss-sprites/node_modules/fs-extra/lib/copy-sync/copy-sync.js. Coverage (Term): 15% Coverage (LOC): 17%
*- File /root/Targets/postcss-sprites/node_modules/fs-extra/lib/copy-sync/copy-file-sync.js. Coverage (Term): 22% Coverage (LOC): 23%
*- File /root/Targets/postcss-sprites/node_modules/fs-extra/lib/remove/index.js. Coverage (Term): 31% Coverage (LOC): 50%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
