/root/Targets/doc-server
└─┬ doc-server@0.0.12 
  ├── accepts@1.3.3 
  ├── array-flatten@1.1.1 
  ├── basic-auth@1.1.0 
  ├── body-parser@1.16.0 
  ├── bytes@2.4.0 
  ├─┬ color-marked@0.3.3 
  │ ├─┬ cheerio@0.10.8 
  │ │ ├─┬ cheerio-select@0.0.3 
  │ │ │ └─┬ CSSselect@0.7.0 
  │ │ │   ├── boolbase@1.0.0 
  │ │ │   ├── CSSwhat@0.4.7 
  │ │ │   ├─┬ domutils@1.4.3 
  │ │ │   │ └── domelementtype@1.3.0 
  │ │ │   └── nth-check@1.0.1 
  │ │ ├── entities@0.5.0 
  │ │ ├─┬ htmlparser2@2.6.0 
  │ │ │ ├── domelementtype@1.3.0 
  │ │ │ ├── domhandler@2.0.3 
  │ │ │ └── domutils@1.0.1 
  │ │ └── underscore@1.4.4 
  │ ├── css-parse@1.2.0 
  │ └── highlight.js@7.3.0 
  ├── compressible@2.0.9 
  ├─┬ compression@1.6.2 
  │ ├── bytes@2.3.0 
  │ ├── debug@2.2.0 
  │ └── ms@0.7.1 
  ├── connect-livereload@0.5.4 
  ├── content-disposition@0.5.2 
  ├── content-type@1.0.2 
  ├── cookie@0.3.1 
  ├── cookie-signature@1.0.6 
  ├─┬ dashdash@1.14.1 
  │ └── assert-plus@1.0.0 
  ├── debug@2.6.0 
  ├── depd@1.1.0 
  ├── destroy@1.0.4 
  ├── ee-first@1.1.1 
  ├── encodeurl@1.0.1 
  ├── escape-html@1.0.3 
  ├── etag@1.7.0 
  ├─┬ express@4.14.1 
  │ ├── debug@2.2.0 
  │ ├── ms@0.7.1 
  │ └── qs@6.2.0 
  ├── faye-websocket@0.7.3 
  ├─┬ finalhandler@0.5.1 
  │ ├── debug@2.2.0 
  │ └── ms@0.7.1 
  ├── forwarded@0.1.0 
  ├── fresh@0.3.0 
  ├── http-errors@1.5.1 
  ├── iconv-lite@0.4.15 
  ├── inherits@2.0.3 
  ├── ipaddr.js@1.2.0 
  ├── livereload-js@2.2.2 
  ├── media-typer@0.3.0 
  ├── merge@1.2.0 
  ├── merge-descriptors@1.0.1 
  ├── methods@1.1.2 
  ├── mime@1.3.4 
  ├── mime-db@1.26.0 
  ├── mime-types@2.1.14 
  ├─┬ morgan@1.7.0 
  │ ├── basic-auth@1.0.4 
  │ ├── debug@2.2.0 
  │ └── ms@0.7.1 
  ├── ms@0.7.2 
  ├── negotiator@0.6.1 
  ├── node-watch@0.3.5 
  ├── on-finished@2.3.0 
  ├── on-headers@1.0.1 
  ├── parseurl@1.3.1 
  ├── path-to-regexp@0.1.7 
  ├── proxy-addr@1.1.3 
  ├── qs@6.2.1 
  ├── range-parser@1.2.0 
  ├── raw-body@2.2.0 
  ├─┬ send@0.14.2 
  │ └─┬ debug@2.2.0 
  │   └── ms@0.7.1 
  ├── serve-static@1.11.2 
  ├── setprototypeof@1.0.2 
  ├── statuses@1.3.1 
  ├── string.prototype.endswith@0.2.0 
  ├─┬ tiny-lr@0.1.6  (git+https://gitlab.com/conradoqg/tiny-lr.git#1798f285c391ee73058f4d4d18ba5e3f6548362f)
  │ ├─┬ body-parser@1.8.4 
  │ │ └── qs@2.2.4 
  │ ├── bytes@1.0.0 
  │ ├── debug@2.0.0 
  │ ├── depd@0.4.5 
  │ ├── ee-first@1.0.5 
  │ ├── iconv-lite@0.4.4 
  │ ├── mime-db@1.12.0 
  │ ├── mime-types@2.0.14 
  │ ├── ms@0.6.2 
  │ ├── on-finished@2.1.0 
  │ ├── qs@2.2.5 
  │ ├── raw-body@1.3.0 
  │ └── type-is@1.5.7 
  ├── type-is@1.6.14 
  ├── unpipe@1.0.0 
  ├── utils-merge@1.0.0 
  ├── vary@1.1.0 
  ├── websocket-driver@0.6.5 
  └── websocket-extensions@0.1.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/doc-server/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.1458 took 7.4223s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node

var pkg = require('./../package.json');
var docServer = require('./../lib/doc-server.js');
var dashdash = require('dashdash');
var fs = require('fs');

var cliOptions = [{
    group: 'Server Options'
}, {
        names: ['port', 'p'],
        type: 'integer',
        default: 8080,
        help: 'TCP port at which the files will be served. (Default: 8080)'
    }, {
        names: ['host-addresss', 'a'],
        type: 'string',
        helpArg: '127.0.0.1',
        help: 'Begin accepting connections on the specified host. If the host is omitted, the server will accept connections directed to any IPv4 address. (Default: omitted)'
    }, {
        names: ['no-log', 'l'],
        type: 'bool',
        default: false,
        help: 'Disable logging requests and file reloads in console. (Default: enable)'
    }, {
        names: ['log-type', 't'],
        type: 'string',
        default: 'dev',
        helpArg: 'TYPE',
        help: 'Log format. Possible values are "combined", "common", "dev", "short" or "tiny". (Default: dev)'
    }, {
        names: ['log-request', 'q'],
        type: 'bool',
        default: false,
        help: 'Log request data. (Default: disabled)'
    },{
        names: ['no-respond-error', 'e'],
        type: 'bool',
        default: false,
        help: 'Disable respond error and stack-trace back to requester. (Default: enable)'
    }, {
        names: ['reload-delay', 'r'],
        type: 'integer',
        default: 100,
        help: 'Interval in ms, which the server monitors the file system and reload webpage. (Default: 100)'
    }, {
        names: ['no-parser-md', 'd'],
        type: 'bool',
        default: false,
        help: 'Disable markdown parser. (Default: Enabled)'
    }, {
        names: ['md-type', 'y'],
        type: 'string',
        default: 'mdwiki',
        helpArg: 'TYPE',
        help: 'Markdown handler to use. Possible value are "mdwiki" and "marked". (Default: mdwiki)'
    }, {
        names: ['no-livereload', 'c'],
        type: 'bool',
        default: false,
        help: 'Disable live reload. (Default: Enabled)'
    }, {
        names: ['max-age', 'm'],
        type: 'integer',
        default: 0,
        help: 'Set the max-age property of the Cache-Control header in milliseconds or a string in ms format. (Default: 0)'
    }, {
        names: ['headers-file'],
        type: 'string',
        help: 'JSON file of additional headers.',
        helpArg: 'headers.json'
    }, {
        names: ['no-compress', 'g'],
        type: 'bool',
        default: false,
        help: 'Disable compression. (Default: enable)'
    }, {
        group: 'Authentication'
    }, {
        names: ['username', 'u'],
        type: 'string',
        helpArg: 'user',
        help: 'Username to authenticate.'
    }, {
        names: ['password', 'w'],
        type: 'string',
        helpArg: 'pass',
        help: 'Password to authenticate.'
    }, {
        group: 'Static Options'
    }, {
        names: ['static-dotFile'],
        type: 'string',
        default: 'ignore',
        help: 'Option for serving dotfiles. Possible values are “allow”, “deny”, and “ignore”. (Default: ignore)'
    }, {
        names: ['static-no-etag'],
        type: 'bool',
        default: false,
        help: 'Disable etag generation. (Default: enable)'
    }, {
        names: ['static-extension'],
        type: 'arrayOfString',
        default: [],
        helpArg: '.ext',
        help: 'Sets file extension fallbacks. Repeat --static-extension for each extension. (Default: empty)'
    }, {
        names: ['static-no-indexing'],
        type: 'bool',
        default: false,
        help: 'Disable directory indexing. (Default: enable)'
    }, {
        names: ['static-index', 'i'],
        type: 'arrayOfString',
        default: ['index.html', 'index.html', 'index.md'],
        helpArg: 'file.ext',
        help: 'If directory indexing, sends directory index file. Repeat --static-extension for each extension. (Default: index.html, index.htm, index.md)'
    }, {
        names: ['static-no-last-modified'],
        type: 'bool',
        default: false,
        help: 'Desable the Last-Modified header to the last modified date of the file on the OS. (Default: enable)'
    }, {
        names: ['static-no-redirect'],
        type: 'bool',
        default: false,
        help: 'Disable redirect to trailing “/” when the pathname is a directory. (Default: enable)'
    }, {
        group: 'Live Reload Options',
    }, {
        names: ['lr-no-css'],
        type: 'bool',
        default: false,
        help: 'Disable LiveReload live CSS reloading (Default: enable)'
    }, {
        names: ['lr-no-js'],
        type: 'bool',
        default: false,
        help: 'Disable LiveReload live JS reloading (Default: enable)'
    }, {
        names: ['lr-no-img'],
        type: 'bool',
        default: false,
        help: 'Disable LiveReload live IMG reloading (Default: enable)'
    }, {
        names: ['lr-ignore'],
        type: 'arrayOfString',
        default: null,
        helpArg: '.ext',
        help: 'Sets file extension to ignore. Repeat --lr-ignore for each extension.'
    }, {
        names: ['lr-include'],
        type: 'arrayOfString',
        default: null,
        helpArg: '.ext',
        help: 'Sets file extension to include. Repeat --lr-include for each extension.'
    }, {
        group: 'MD Wiki Options: (see http://mdwiki.info for details)'
    }, {
        group: 'Marked Options'
    }, {
        names: ['md-no-gfm'],
        type: 'bool',
        default: false,
        help: 'Disable GitHub flavored markdown. (Default: enable)'
    }, {
        names: ['md-no-table'],
        type: 'bool',
        default: false,
        help: 'Disable GFM tables. This option requires the gfm option to be true. (Default: enable)'
    }, {
        names: ['md-breaks'],
        type: 'bool',
        default: false,
        help: 'Enable GFM line breaks. This option requires the gfm option to be true. (Default: disable)'
    }, {
        names: ['md-pedantic'],
        type: 'bool',
        default: false,
        help: 'Conform to obscure parts of markdown.pl as much as possible. Don\'t fix any of the original markdown bugs or poor behavior. (Default: disable)'
    }, {
        names: ['md-sanitize'],
        type: 'bool',
        default: false,
        help: 'Sanitize the output. Ignore any HTML that has been input. (Default: disable)'
    }, {
        names: ['md-no-smartlists'],
        type: 'bool',
        default: false,
        help: 'Disable the smarter list behavior than the original markdown. May eventually be default with the old behavior moved into pedantic. (Default: enable)'
    }, {
        names: ['md-smartypants'],
        type: 'bool',
        default: false,
        help: 'Use "smart" typograhic punctuation for things like quotes and dashes. (Default: disable)'
    }, {
        group: 'General Options'
    }, {
        names: ['version', 'v'],
        type: 'bool',
        help: 'doc-server version.'
    }, {
        // `names` or a single `name`. First element is the `opts.KEY`.
        names: ['help', 'h'],
        // See "Option specs" below for types.
        type: 'bool',
        help: 'Print this help and exit.'
    }];

var parser = dashdash.createParser({
    options: cliOptions
});

var showHelp = function showHelp(exitCode, message) {
    try {
        var help = parser.help({
            includeEnv: true,
            helpWrap: false
        }).trimRight();
        help = help +
        '\n\n' +
        '  URL Integration:\n\n' +
        '    Use ?relatedTo=<file> in <a href=\'<URL>\'> to tell what monitored file will update the URL path. (Example: http://127.0.0.1/index.md?relatedTo=user.md which will tell to update the index.md if user.md is modified).\n' +
        '    Use ?noParserMD in URL to disable markdown parse. (Example: http://127.0.0.1/index.md?noParserMD).\n'
    }
    catch (e) {

    }

    message = 'usage: doc-server [OPTIONS] [directory]\n\n' + 'Options:\n' + help + (message ? '\n\n' + message : '')

    if (exitCode >= 1)
        console.error(message);
    else if (exitCode === 0)
        console.log(message);

    if (exitCode !== null) process.exit(exitCode);
}

try {
    var cliArgv = parser.parse(process.argv);

    // Help
    if (cliArgv.help) {
        showHelp(0)
    }

    // Version
    if (cliArgv.version) {
        console.log('doc-server', pkg.version);
        process.exit(0);
    }

    var options = {};

    // Translate options
    options.directory = (cliArgv._args.length == 0) ? '.' : cliArgv._args[0];
    options.port = cliArgv.port;
    options.host = cliArgv.host_addresss;
    options.consoleLog = !cliArgv.no_log;
    options.consoleType = cliArgv.log_type;
    options.logRequest = cliArgv.log_request;
    options.respondErrorLog = !cliArgv.no_respond_error;
    options.reloadDelay = cliArgv.reload_delay;
    options.handleMD = !cliArgv.no_parser_md;
    options.liveReload = !cliArgv.no_livereload;
    options.maxAge = cliArgv.max_age;
    options.compress = !cliArgv.no_compress;
    options.mdHandler = cliArgv.md_type;
    if (cliArgv.username && cliArgv.password) {
        options.auth = {
            username: cliArgv.username,
            password: cliArgv.password
        }
    }
    options.static = {};
    options.static.dotFile = cliArgv.static_dotFile;
    options.static.etag = !cliArgv.static_no_etag;
    options.static.extensions = cliArgv.static_extension;
    if (!cliArgv.static_no_indexing) options.static.index = cliArgv.static_index;
    else options.static.index = false;
    options.static.lastModified = !cliArgv.static_no_last_modified;
    options.static.maxAge = cliArgv.max_age;
    options.static.redirect = !cliArgv.static_no_redirect;
    if (cliArgv.headers_file) {
        if (fs.existsSync(cliArgv.headers_file)) {
            try {
                var headers = JSON.parse(fs.readFileSync(cliArgv.headers_file, 'utf8'));
                if (headers) {
                    options.static.setHeaders = function (res) {
                        for (var headerKey in headers) {
                            res.set(headerKey, headers[headerKey]);
                        }
                    }
                }
                else {
                    showHelp(1, 'File "' + cliArgv.headers_file + '" is not in JSON format!');
                }
            }
            catch (e) {
                showHelp(1, 'File "' + cliArgv.headers_file + '" is not in JSON format!');
            }
        }
        else {
            showHelp(1, 'File "' + cliArgv.headers_file + '" not found!');
        }
    }
    else {
        options.static.setHeaders = function (res) { };
    }
    options.liveReloadServer = {};
    options.liveReloadServer.liveCSS = !cliArgv.lr_no_css;
    options.liveReloadServer.liveJS = !cliArgv.lr_no_js;
    options.liveReloadServer.liveImg = !cliArgv.lr_no_img;
    options.liveReloadMiddleware = {};
    options.liveReloadMiddleware.ignore = cliArgv.lr_ignore;
    options.liveReloadMiddleware.include = cliArgv.lr_include;
    options.marked = {};
    options.marked.gfm = !cliArgv.md_no_gfm;
    options.marked.table = !cliArgv.md_no_table;
    options.marked.breaks = cliArgv.md_breaks;
    options.marked.pedantic = cliArgv.md_pedantic;
    options.marked.sanitize = cliArgv.md_sanitize;
    options.marked.smartLists = !cliArgv.md_no_smartlists;
    options.marked.smartypants = cliArgv.md_smartypants;

    // Run doc-server
    docServer(options);
}
catch (e) {
    showHelp(1, 'error: ' + e.message + '\n' + e.stack);
    process.exit(1);
} at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
