
> node-sass@4.5.0 install /root/Targets/feri/node_modules/node-sass
> node scripts/install.js

Downloading binary from https://github.com/sass/node-sass/releases/download/v4.5.0/linux-x64-51_binding.node
Download complete
Binary saved to /root/Targets/feri/node_modules/node-sass/vendor/linux-x64-51/binding.node
Caching binary to /root/Targets/feri/false/node-sass/4.5.0/linux-x64-51_binding.node

> gifsicle@3.0.4 postinstall /root/Targets/feri/node_modules/gifsicle
> node lib/install.js


> jpegtran-bin@3.2.0 postinstall /root/Targets/feri/node_modules/jpegtran-bin
> node lib/install.js


> node-sass@4.5.0 postinstall /root/Targets/feri/node_modules/node-sass
> node scripts/build.js

Binary found at /root/Targets/feri/node_modules/node-sass/vendor/linux-x64-51/binding.node
Testing binary
Binary is fine

> optipng-bin@3.1.2 postinstall /root/Targets/feri/node_modules/optipng-bin
> node lib/install.js

/root/Targets/feri
└─┬ feri@2.0.3 
  ├─┬ babel-core@6.23.1 
  │ ├─┬ babel-code-frame@6.26.0 
  │ │ ├── esutils@2.0.2 
  │ │ └── js-tokens@3.0.2 
  │ ├─┬ babel-generator@6.26.0 
  │ │ ├─┬ detect-indent@4.0.0 
  │ │ │ └─┬ repeating@2.0.1 
  │ │ │   └─┬ is-finite@1.0.2 
  │ │ │     └── number-is-nan@1.0.1 
  │ │ ├── jsesc@1.3.0 
  │ │ └── trim-right@1.0.1 
  │ ├── babel-helpers@6.24.1 
  │ ├── babel-messages@6.23.0 
  │ ├─┬ babel-register@6.26.0 
  │ │ ├── babel-core@6.26.0 
  │ │ ├── core-js@2.5.1 
  │ │ ├─┬ home-or-tmp@2.0.0 
  │ │ │ ├── os-homedir@1.0.2 
  │ │ │ └── os-tmpdir@1.0.2 
  │ │ └── source-map-support@0.4.18 
  │ ├─┬ babel-runtime@6.26.0 
  │ │ └── regenerator-runtime@0.11.0 
  │ ├── babel-template@6.26.0 
  │ ├─┬ babel-traverse@6.26.0 
  │ │ ├── globals@9.18.0 
  │ │ └─┬ invariant@2.2.2 
  │ │   └── loose-envify@1.3.1 
  │ ├─┬ babel-types@6.26.0 
  │ │ └── to-fast-properties@1.0.3 
  │ ├── babylon@6.18.0 
  │ ├── convert-source-map@1.5.0 
  │ ├─┬ debug@2.6.9 
  │ │ └── ms@2.0.0 
  │ ├── json5@0.5.1 
  │ ├── lodash@4.17.4 
  │ ├─┬ minimatch@3.0.4 
  │ │ └─┬ brace-expansion@1.1.8 
  │ │   ├── balanced-match@1.0.0 
  │ │   └── concat-map@0.0.1 
  │ ├── path-is-absolute@1.0.1 
  │ ├── private@0.1.7 
  │ └── slash@1.0.0 
  ├─┬ babel-preset-react@6.23.0 
  │ ├── babel-plugin-syntax-jsx@6.18.0 
  │ ├── babel-plugin-transform-react-display-name@6.25.0 
  │ ├─┬ babel-plugin-transform-react-jsx@6.24.1 
  │ │ └── babel-helper-builder-react-jsx@6.26.0 
  │ ├── babel-plugin-transform-react-jsx-self@6.22.0 
  │ ├── babel-plugin-transform-react-jsx-source@6.22.0 
  │ └─┬ babel-preset-flow@6.23.0 
  │   └─┬ babel-plugin-transform-flow-strip-types@6.22.0 
  │     └── babel-plugin-syntax-flow@6.18.0 
  ├─┬ chalk@1.1.3 
  │ ├── ansi-styles@2.2.1 
  │ ├── escape-string-regexp@1.0.5 
  │ ├─┬ has-ansi@2.0.0 
  │ │ └── ansi-regex@2.1.1 
  │ ├── strip-ansi@3.0.1 
  │ └── supports-color@2.0.0 
  ├─┬ chokidar@1.6.1 
  │ ├─┬ anymatch@1.3.2 
  │ │ ├─┬ micromatch@2.3.11 
  │ │ │ ├─┬ arr-diff@2.0.0 
  │ │ │ │ └── arr-flatten@1.1.0 
  │ │ │ ├── array-unique@0.2.1 
  │ │ │ ├─┬ braces@1.8.5 
  │ │ │ │ ├─┬ expand-range@1.8.2 
  │ │ │ │ │ └─┬ fill-range@2.2.3 
  │ │ │ │ │   ├── is-number@2.1.0 
  │ │ │ │ │   ├── isobject@2.1.0 
  │ │ │ │ │   └─┬ randomatic@1.1.7 
  │ │ │ │ │     ├─┬ is-number@3.0.0 
  │ │ │ │ │     │ └── kind-of@3.2.2 
  │ │ │ │ │     └── kind-of@4.0.0 
  │ │ │ │ ├── preserve@0.2.0 
  │ │ │ │ └── repeat-element@1.1.2 
  │ │ │ ├─┬ expand-brackets@0.1.5 
  │ │ │ │ └── is-posix-bracket@0.1.1 
  │ │ │ ├── extglob@0.3.2 
  │ │ │ ├── filename-regex@2.0.1 
  │ │ │ ├─┬ kind-of@3.2.2 
  │ │ │ │ └── is-buffer@1.1.5 
  │ │ │ ├─┬ object.omit@2.0.1 
  │ │ │ │ ├─┬ for-own@0.1.5 
  │ │ │ │ │ └── for-in@1.0.2 
  │ │ │ │ └── is-extendable@0.1.1 
  │ │ │ ├─┬ parse-glob@3.0.4 
  │ │ │ │ ├── glob-base@0.3.0 
  │ │ │ │ └── is-dotfile@1.0.3 
  │ │ │ └─┬ regex-cache@0.4.4 
  │ │ │   └─┬ is-equal-shallow@0.1.3 
  │ │ │     └── is-primitive@2.0.0 
  │ │ └─┬ normalize-path@2.1.1 
  │ │   └── remove-trailing-separator@1.1.0 
  │ ├── async-each@1.0.1 
  │ ├── glob-parent@2.0.0 
  │ ├── inherits@2.0.3 
  │ ├─┬ is-binary-path@1.0.1 
  │ │ └── binary-extensions@1.10.0 
  │ ├─┬ is-glob@2.0.1 
  │ │ └── is-extglob@1.0.0 
  │ └─┬ readdirp@2.1.0 
  │   ├─┬ readable-stream@2.3.3 
  │   │ ├── core-util-is@1.0.2 
  │   │ ├── isarray@1.0.0 
  │   │ ├── process-nextick-args@1.0.7 
  │   │ ├── string_decoder@1.0.3 
  │   │ └── util-deprecate@1.0.2 
  │   └── set-immediate-shim@1.0.1 
  ├── clean-css@4.0.8 
  ├── coffee-script@1.12.4 
  ├── compare-versions@3.0.0 
  ├── ejs@2.5.6 
  ├─┬ es6-promisify@5.0.0 
  │ └── es6-promise@4.1.1 
  ├── expect.js@0.3.1 
  ├─┬ gifsicle@3.0.4 
  │ ├─┬ bin-build@2.2.0 
  │ │ ├─┬ archive-type@3.2.0 
  │ │ │ └── file-type@3.9.0 
  │ │ ├─┬ decompress@3.0.0 
  │ │ │ ├── buffer-to-vinyl@1.1.0 
  │ │ │ ├─┬ concat-stream@1.6.0 
  │ │ │ │ └── typedarray@0.0.6 
  │ │ │ ├─┬ decompress-tar@3.1.0 
  │ │ │ │ ├── is-tar@1.0.0 
  │ │ │ │ ├── object-assign@2.1.1 
  │ │ │ │ ├─┬ strip-dirs@1.1.1 
  │ │ │ │ │ ├─┬ is-absolute@0.1.7 
  │ │ │ │ │ │ └── is-relative@0.1.3 
  │ │ │ │ │ ├── is-natural-number@2.1.1 
  │ │ │ │ │ ├── minimist@1.2.0 
  │ │ │ │ │ └── sum-up@1.0.3 
  │ │ │ │ ├─┬ tar-stream@1.5.4 
  │ │ │ │ │ ├── bl@1.2.1 
  │ │ │ │ │ ├── end-of-stream@1.4.0 
  │ │ │ │ │ └── xtend@4.0.1 
  │ │ │ │ ├─┬ through2@0.6.5 
  │ │ │ │ │ └─┬ readable-stream@1.0.34 
  │ │ │ │ │   ├── isarray@0.0.1 
  │ │ │ │ │   └── string_decoder@0.10.31 
  │ │ │ │ └─┬ vinyl@0.4.6 
  │ │ │ │   └── clone@0.2.0 
  │ │ │ ├─┬ decompress-tarbz2@3.1.0 
  │ │ │ │ ├── is-bzip2@1.0.0 
  │ │ │ │ ├── seek-bzip@1.0.5 
  │ │ │ │ └─┬ vinyl@0.4.6 
  │ │ │ │   └── clone@0.2.0 
  │ │ │ ├─┬ decompress-targz@3.1.0 
  │ │ │ │ ├── is-gzip@1.0.0 
  │ │ │ │ └─┬ vinyl@0.4.6 
  │ │ │ │   └── clone@0.2.0 
  │ │ │ ├─┬ decompress-unzip@3.4.0 
  │ │ │ │ ├── is-zip@1.0.0 
  │ │ │ │ ├── stat-mode@0.2.2 
  │ │ │ │ ├── through2@2.0.3 
  │ │ │ │ └─┬ yauzl@2.8.0 
  │ │ │ │   ├── buffer-crc32@0.2.13 
  │ │ │ │   └─┬ fd-slicer@1.0.1 
  │ │ │ │     └── pend@1.2.0 
  │ │ │ ├─┬ stream-combiner2@1.1.1 
  │ │ │ │ └── duplexer2@0.1.4 
  │ │ │ ├─┬ vinyl-assign@1.2.1 
  │ │ │ │ └── object-assign@4.1.1 
  │ │ │ └─┬ vinyl-fs@2.4.4 
  │ │ │   ├─┬ duplexify@3.5.1 
  │ │ │   │ └── stream-shift@1.0.0 
  │ │ │   ├─┬ glob-stream@5.3.5 
  │ │ │   │ ├── glob@5.0.15 
  │ │ │   │ ├─┬ glob-parent@3.1.0 
  │ │ │   │ │ ├─┬ is-glob@3.1.0 
  │ │ │   │ │ │ └── is-extglob@2.1.1 
  │ │ │   │ │ └── path-dirname@1.0.2 
  │ │ │   │ ├── ordered-read-streams@0.3.0 
  │ │ │   │ ├─┬ to-absolute-glob@0.1.1 
  │ │ │   │ │ └── extend-shallow@2.0.1 
  │ │ │   │ └── unique-stream@2.2.1 
  │ │ │   ├─┬ gulp-sourcemaps@1.6.0 
  │ │ │   │ └── through2@2.0.3 
  │ │ │   ├── is-valid-glob@0.3.0 
  │ │ │   ├── lazystream@1.0.0 
  │ │ │   ├── lodash.isequal@4.5.0 
  │ │ │   ├── merge-stream@1.0.1 
  │ │ │   ├── object-assign@4.1.1 
  │ │ │   ├─┬ strip-bom@2.0.0 
  │ │ │   │ └── is-utf8@0.2.1 
  │ │ │   ├─┬ strip-bom-stream@1.0.0 
  │ │ │   │ └── first-chunk-stream@1.0.0 
  │ │ │   ├── through2@2.0.3 
  │ │ │   ├─┬ through2-filter@2.0.0 
  │ │ │   │ └── through2@2.0.3 
  │ │ │   └── vali-date@1.0.0 
  │ │ ├─┬ download@4.4.3 
  │ │ │ ├─┬ caw@1.2.0 
  │ │ │ │ ├─┬ get-proxy@1.1.0 
  │ │ │ │ │ └─┬ rc@1.2.1 
  │ │ │ │ │   ├── deep-extend@0.4.2 
  │ │ │ │ │   ├── ini@1.3.4 
  │ │ │ │ │   ├── minimist@1.2.0 
  │ │ │ │ │   └── strip-json-comments@2.0.1 
  │ │ │ │ ├── is-obj@1.0.1 
  │ │ │ │ ├── object-assign@3.0.0 
  │ │ │ │ └── tunnel-agent@0.4.3 
  │ │ │ ├─┬ filenamify@1.2.1 
  │ │ │ │ ├── filename-reserved-regex@1.0.0 
  │ │ │ │ ├── strip-outer@1.0.0 
  │ │ │ │ └── trim-repeated@1.0.0 
  │ │ │ ├─┬ got@5.7.1 
  │ │ │ │ ├─┬ create-error-class@3.0.2 
  │ │ │ │ │ └── capture-stack-trace@1.0.0 
  │ │ │ │ ├── is-redirect@1.0.0 
  │ │ │ │ ├── is-retry-allowed@1.1.0 
  │ │ │ │ ├── is-stream@1.1.0 
  │ │ │ │ ├── lowercase-keys@1.0.0 
  │ │ │ │ ├── node-status-codes@1.0.0 
  │ │ │ │ ├── object-assign@4.1.1 
  │ │ │ │ ├─┬ parse-json@2.2.0 
  │ │ │ │ │ └─┬ error-ex@1.3.1 
  │ │ │ │ │   └── is-arrayish@0.2.1 
  │ │ │ │ ├─┬ pinkie-promise@2.0.1 
  │ │ │ │ │ └── pinkie@2.0.4 
  │ │ │ │ ├── timed-out@3.1.3 
  │ │ │ │ ├── unzip-response@1.0.2 
  │ │ │ │ └─┬ url-parse-lax@1.0.0 
  │ │ │ │   └── prepend-http@1.0.4 
  │ │ │ ├─┬ gulp-decompress@1.2.0 
  │ │ │ │ └─┬ gulp-util@3.0.8 
  │ │ │ │   ├── array-differ@1.0.0 
  │ │ │ │   ├── array-uniq@1.0.3 
  │ │ │ │   ├── beeper@1.1.1 
  │ │ │ │   ├── dateformat@2.2.0 
  │ │ │ │   ├─┬ fancy-log@1.3.0 
  │ │ │ │   │ └── time-stamp@1.1.0 
  │ │ │ │   ├─┬ gulplog@1.0.0 
  │ │ │ │   │ └── glogg@1.0.0 
  │ │ │ │   ├─┬ has-gulplog@0.1.0 
  │ │ │ │   │ └── sparkles@1.0.0 
  │ │ │ │   ├── lodash._reescape@3.0.0 
  │ │ │ │   ├── lodash._reevaluate@3.0.0 
  │ │ │ │   ├── lodash._reinterpolate@3.0.0 
  │ │ │ │   ├─┬ lodash.template@3.6.2 
  │ │ │ │   │ ├── lodash._basetostring@3.0.1 
  │ │ │ │   │ ├── lodash._basevalues@3.0.0 
  │ │ │ │   │ ├─┬ lodash.escape@3.2.0 
  │ │ │ │   │ │ └── lodash._root@3.0.1 
  │ │ │ │   │ ├── lodash.restparam@3.6.1 
  │ │ │ │   │ └── lodash.templatesettings@3.1.1 
  │ │ │ │   ├── minimist@1.2.0 
  │ │ │ │   ├─┬ multipipe@0.1.2 
  │ │ │ │   │ └─┬ duplexer2@0.0.2 
  │ │ │ │   │   └─┬ readable-stream@1.1.14 
  │ │ │ │   │     ├── isarray@0.0.1 
  │ │ │ │   │     └── string_decoder@0.10.31 
  │ │ │ │   ├── object-assign@3.0.0 
  │ │ │ │   ├── through2@2.0.3 
  │ │ │ │   └── vinyl@0.5.3 
  │ │ │ ├── gulp-rename@1.2.2 
  │ │ │ ├── is-url@1.2.2 
  │ │ │ ├── object-assign@4.1.1 
  │ │ │ ├── read-all-stream@3.1.0 
  │ │ │ ├─┬ vinyl@1.2.0 
  │ │ │ │ ├── clone@1.0.2 
  │ │ │ │ ├── clone-stats@0.0.1 
  │ │ │ │ └── replace-ext@0.0.1 
  │ │ │ └─┬ ware@1.3.0 
  │ │ │   └─┬ wrap-fn@0.1.5 
  │ │ │     └── co@3.1.0 
  │ │ ├─┬ exec-series@1.0.3 
  │ │ │ ├── async-each-series@1.1.0 
  │ │ │ └── object-assign@4.1.1 
  │ │ ├─┬ tempfile@1.1.1 
  │ │ │ └── uuid@2.0.3 
  │ │ └─┬ url-regex@3.2.0 
  │ │   └── ip-regex@1.0.3 
  │ ├─┬ bin-wrapper@3.0.2 
  │ │ ├─┬ bin-check@2.0.0 
  │ │ │ └── executable@1.1.0 
  │ │ ├─┬ bin-version-check@2.1.0 
  │ │ │ ├─┬ bin-version@1.0.4 
  │ │ │ │ └─┬ find-versions@1.2.1 
  │ │ │ │   └── semver-regex@1.0.0 
  │ │ │ ├── minimist@1.2.0 
  │ │ │ ├── semver@4.3.6 
  │ │ │ └── semver-truncate@1.1.2 
  │ │ ├─┬ each-async@1.1.1 
  │ │ │ └── onetime@1.1.0 
  │ │ ├── lazy-req@1.1.0 
  │ │ └── os-filter-obj@1.0.3 
  │ └─┬ logalot@2.1.0 
  │   ├─┬ figures@1.7.0 
  │   │ └── object-assign@4.1.1 
  │   └─┬ squeak@1.3.0 
  │     ├── console-stream@0.1.1 
  │     └─┬ lpad-align@1.1.2 
  │       └── longest@1.0.1 
  ├─┬ glob@7.1.1 
  │ ├── fs.realpath@1.0.0 
  │ ├─┬ inflight@1.0.6 
  │ │ └── wrappy@1.0.2 
  │ └── once@1.4.0 
  ├─┬ html-minifier@3.4.0 
  │ ├─┬ camel-case@3.0.0 
  │ │ ├─┬ no-case@2.3.2 
  │ │ │ └── lower-case@1.1.4 
  │ │ └── upper-case@1.1.3 
  │ ├─┬ commander@2.9.0 
  │ │ └── graceful-readlink@1.0.1 
  │ ├── he@1.1.1 
  │ ├─┬ ncname@1.0.0 
  │ │ └── xml-char-classes@1.0.0 
  │ ├── param-case@2.1.1 
  │ └── relateurl@0.2.7 
  ├─┬ jade@1.11.0 
  │ ├── character-parser@1.2.1 
  │ ├─┬ clean-css@3.4.28 
  │ │ ├── commander@2.8.1 
  │ │ └── source-map@0.4.4 
  │ ├── commander@2.6.0 
  │ ├─┬ constantinople@3.0.2 
  │ │ └── acorn@2.7.0 
  │ ├─┬ jstransformer@0.0.2 
  │ │ ├── is-promise@2.1.0 
  │ │ └─┬ promise@6.1.0 
  │ │   └── asap@1.0.0 
  │ ├─┬ transformers@2.1.0 
  │ │ ├─┬ css@1.0.8 
  │ │ │ ├── css-parse@1.0.4 
  │ │ │ └── css-stringify@1.0.5 
  │ │ ├─┬ promise@2.0.0 
  │ │ │ └── is-promise@1.0.1 
  │ │ └─┬ uglify-js@2.2.5 
  │ │   ├── optimist@0.3.7 
  │ │   └── source-map@0.1.43 
  │ ├── void-elements@2.0.1 
  │ └─┬ with@4.0.3 
  │   ├── acorn@1.2.2 
  │   └── acorn-globals@1.0.9 
  ├── jpegtran-bin@3.2.0 
  ├─┬ less@2.7.2 
  │ ├─┬ errno@0.1.4 
  │ │ └── prr@0.0.0 
  │ ├── graceful-fs@4.1.11 
  │ ├── image-size@0.5.5 
  │ ├── mime@1.4.1 
  │ ├─┬ promise@7.3.1 
  │ │ └── asap@2.0.6 
  │ └─┬ request@2.83.0 
  │   ├── aws-sign2@0.7.0 
  │   ├── aws4@1.6.0 
  │   ├── caseless@0.12.0 
  │   ├─┬ combined-stream@1.0.5 
  │   │ └── delayed-stream@1.0.0 
  │   ├── extend@3.0.1 
  │   ├── forever-agent@0.6.1 
  │   ├─┬ form-data@2.3.1 
  │   │ └── asynckit@0.4.0 
  │   ├─┬ har-validator@5.0.3 
  │   │ ├─┬ ajv@5.2.3 
  │   │ │ ├── co@4.6.0 
  │   │ │ ├── fast-deep-equal@1.0.0 
  │   │ │ ├── json-schema-traverse@0.3.1 
  │   │ │ └─┬ json-stable-stringify@1.0.1 
  │   │ │   └── jsonify@0.0.0 
  │   │ └── har-schema@2.0.0 
  │   ├─┬ hawk@6.0.2 
  │   │ ├── boom@4.3.1 
  │   │ ├─┬ cryptiles@3.1.2 
  │   │ │ └── boom@5.2.0 
  │   │ ├── hoek@4.2.0 
  │   │ └── sntp@2.0.2 
  │   ├─┬ http-signature@1.2.0 
  │   │ ├── assert-plus@1.0.0 
  │   │ ├─┬ jsprim@1.4.1 
  │   │ │ ├── extsprintf@1.3.0 
  │   │ │ ├── json-schema@0.2.3 
  │   │ │ └── verror@1.10.0 
  │   │ └─┬ sshpk@1.13.1 
  │   │   ├── asn1@0.2.3 
  │   │   ├── bcrypt-pbkdf@1.0.1 
  │   │   ├── dashdash@1.14.1 
  │   │   ├── ecc-jsbn@0.1.1 
  │   │   ├── getpass@0.1.7 
  │   │   ├── jsbn@0.1.1 
  │   │   └── tweetnacl@0.14.5 
  │   ├── is-typedarray@1.0.0 
  │   ├── isstream@0.1.2 
  │   ├── json-stringify-safe@5.0.1 
  │   ├─┬ mime-types@2.1.17 
  │   │ └── mime-db@1.30.0 
  │   ├── oauth-sign@0.8.2 
  │   ├── performance-now@2.1.0 
  │   ├── qs@6.5.1 
  │   ├── safe-buffer@5.1.1 
  │   ├── stringstream@0.0.5 
  │   ├─┬ tough-cookie@2.3.3 
  │   │ └── punycode@1.4.1 
  │   ├── tunnel-agent@0.6.0 
  │   └── uuid@3.1.0 
  ├─┬ markdown-it@8.3.0 
  │ ├─┬ argparse@1.0.9 
  │ │ └── sprintf-js@1.0.3 
  │ ├── entities@1.1.1 
  │ ├── linkify-it@2.0.3 
  │ ├── mdurl@1.0.1 
  │ └── uc.micro@1.0.3 
  ├─┬ mkdirp@0.5.1 
  │ └── minimist@0.0.8 
  ├─┬ mocha@3.2.0 
  │ ├── browser-stdout@1.3.0 
  │ ├── commander@2.9.0 
  │ ├─┬ debug@2.2.0 
  │ │ └── ms@0.7.1 
  │ ├── diff@1.4.0 
  │ ├── glob@7.0.5 
  │ ├── growl@1.9.2 
  │ ├── json3@3.3.2 
  │ ├─┬ lodash.create@3.1.1 
  │ │ ├─┬ lodash._baseassign@3.2.0 
  │ │ │ ├── lodash._basecopy@3.0.1 
  │ │ │ └─┬ lodash.keys@3.1.2 
  │ │ │   ├── lodash._getnative@3.9.1 
  │ │ │   ├── lodash.isarguments@3.1.0 
  │ │ │   └── lodash.isarray@3.0.4 
  │ │ ├── lodash._basecreate@3.0.3 
  │ │ └── lodash._isiterateecall@3.0.9 
  │ └─┬ supports-color@3.1.2 
  │   └── has-flag@1.0.0 
  ├─┬ multi-stage-sourcemap@0.2.1 
  │ └─┬ source-map@0.1.43 
  │   └── amdefine@1.0.1 
  ├─┬ node-sass@4.5.0 
  │ ├── async-foreach@0.1.3 
  │ ├─┬ cross-spawn@3.0.1 
  │ │ ├─┬ lru-cache@4.1.1 
  │ │ │ ├── pseudomap@1.0.2 
  │ │ │ └── yallist@2.1.2 
  │ │ └─┬ which@1.3.0 
  │ │   └── isexe@2.0.0 
  │ ├─┬ gaze@1.1.2 
  │ │ └── globule@1.2.0 
  │ ├── get-stdin@4.0.1 
  │ ├── in-publish@2.0.0 
  │ ├── lodash.assign@4.2.0 
  │ ├── lodash.clonedeep@4.5.0 
  │ ├── lodash.mergewith@4.6.0 
  │ ├─┬ meow@3.7.0 
  │ │ ├─┬ camelcase-keys@2.1.0 
  │ │ │ └── camelcase@2.1.1 
  │ │ ├── decamelize@1.2.0 
  │ │ ├─┬ loud-rejection@1.6.0 
  │ │ │ ├─┬ currently-unhandled@0.4.1 
  │ │ │ │ └── array-find-index@1.0.2 
  │ │ │ └── signal-exit@3.0.2 
  │ │ ├── map-obj@1.0.1 
  │ │ ├── minimist@1.2.0 
  │ │ ├─┬ normalize-package-data@2.4.0 
  │ │ │ ├── hosted-git-info@2.5.0 
  │ │ │ ├─┬ is-builtin-module@1.0.0 
  │ │ │ │ └── builtin-modules@1.1.1 
  │ │ │ ├── semver@5.4.1 
  │ │ │ └─┬ validate-npm-package-license@3.0.1 
  │ │ │   ├─┬ spdx-correct@1.0.2 
  │ │ │   │ └── spdx-license-ids@1.2.2 
  │ │ │   └── spdx-expression-parse@1.0.4 
  │ │ ├── object-assign@4.1.1 
  │ │ ├─┬ read-pkg-up@1.0.1 
  │ │ │ ├─┬ find-up@1.1.2 
  │ │ │ │ └── path-exists@2.1.0 
  │ │ │ └─┬ read-pkg@1.1.0 
  │ │ │   ├─┬ load-json-file@1.1.0 
  │ │ │   │ └── pify@2.3.0 
  │ │ │   └── path-type@1.1.0 
  │ │ ├─┬ redent@1.0.0 
  │ │ │ ├── indent-string@2.1.0 
  │ │ │ └── strip-indent@1.0.1 
  │ │ └── trim-newlines@1.0.0 
  │ ├── nan@2.7.0 
  │ ├─┬ node-gyp@3.6.2 
  │ │ ├── fstream@1.0.11 
  │ │ ├─┬ nopt@3.0.6 
  │ │ │ └── abbrev@1.1.1 
  │ │ ├── osenv@0.1.4 
  │ │ ├── semver@5.3.0 
  │ │ └─┬ tar@2.2.1 
  │ │   └── block-stream@0.0.9 
  │ ├─┬ npmlog@4.1.2 
  │ │ ├─┬ are-we-there-yet@1.1.4 
  │ │ │ └── delegates@1.0.0 
  │ │ ├── console-control-strings@1.1.0 
  │ │ ├─┬ gauge@2.7.4 
  │ │ │ ├── aproba@1.2.0 
  │ │ │ ├── has-unicode@2.0.1 
  │ │ │ ├── object-assign@4.1.1 
  │ │ │ ├─┬ string-width@1.0.2 
  │ │ │ │ ├── code-point-at@1.1.0 
  │ │ │ │ └── is-fullwidth-code-point@1.0.0 
  │ │ │ └── wide-align@1.1.2 
  │ │ └── set-blocking@2.0.0 
  │ ├─┬ sass-graph@2.2.4 
  │ │ ├─┬ scss-tokenizer@0.2.3 
  │ │ │ ├── js-base64@2.3.2 
  │ │ │ └── source-map@0.4.4 
  │ │ └─┬ yargs@7.1.0 
  │ │   ├── camelcase@3.0.0 
  │ │   ├─┬ cliui@3.2.0 
  │ │   │ └── wrap-ansi@2.1.0 
  │ │   ├── get-caller-file@1.0.2 
  │ │   ├─┬ os-locale@1.4.0 
  │ │   │ └─┬ lcid@1.0.0 
  │ │   │   └── invert-kv@1.0.0 
  │ │   ├── require-directory@2.1.1 
  │ │   ├── require-main-filename@1.0.1 
  │ │   ├── which-module@1.0.0 
  │ │   ├── y18n@3.2.1 
  │ │   └─┬ yargs-parser@5.0.0 
  │ │     └── camelcase@3.0.0 
  │ └── stdout-stream@1.4.0 
  ├── optipng-bin@3.1.2 
  ├── pako@1.0.4 
  ├─┬ pug@2.0.0-beta4 
  │ ├─┬ pug-code-gen@0.0.7 
  │ │ ├── doctypes@1.1.0 
  │ │ ├── js-stringify@1.0.2 
  │ │ ├── pug-attrs@2.0.2 
  │ │ ├── pug-error@1.3.2 
  │ │ └─┬ with@5.1.1 
  │ │   ├── acorn@3.3.0 
  │ │   └─┬ acorn-globals@3.1.0 
  │ │     └── acorn@4.0.13 
  │ ├─┬ pug-filters@1.2.4 
  │ │ ├─┬ clean-css@3.4.28 
  │ │ │ ├── commander@2.8.1 
  │ │ │ └── source-map@0.4.4 
  │ │ ├─┬ jstransformer@1.0.0 
  │ │ │ └─┬ promise@7.3.1 
  │ │ │   └── asap@2.0.6 
  │ │ ├── pug-walk@1.1.5 
  │ │ └─┬ resolve@1.4.0 
  │ │   └── path-parse@1.0.5 
  │ ├─┬ pug-lexer@2.3.2 
  │ │ ├─┬ character-parser@2.2.0 
  │ │ │ └─┬ is-regex@1.0.4 
  │ │ │   └─┬ has@1.0.1 
  │ │ │     └── function-bind@1.1.1 
  │ │ └─┬ is-expression@3.0.0 
  │ │   ├── acorn@4.0.13 
  │ │   └── object-assign@4.1.1 
  │ ├── pug-linker@1.0.2 
  │ ├─┬ pug-load@2.0.9 
  │ │ └── object-assign@4.1.1 
  │ ├─┬ pug-parser@2.0.2 
  │ │ └── token-stream@0.0.1 
  │ ├── pug-runtime@2.0.3 
  │ └─┬ pug-strip-comments@0.0.1 
  │   └── pug-error@0.0.0 
  ├── rimraf@2.6.1 
  ├── source-map@0.5.6 
  ├─┬ stylus@0.54.5 
  │ ├── css-parse@1.7.0 
  │ ├── glob@7.0.6 
  │ ├── sax@0.5.8 
  │ └── source-map@0.1.43 
  ├─┬ tiny-lr-fork@0.0.5 
  │ ├── debug@0.7.4 
  │ ├── faye-websocket@0.4.4 
  │ ├─┬ noptify@0.0.3 
  │ │ └── nopt@2.0.0 
  │ └── qs@0.5.6 
  ├─┬ uglify-js@2.8.5 
  │ ├── async@0.2.10 
  │ ├── uglify-to-browserify@1.0.2 
  │ └─┬ yargs@3.10.0 
  │   ├── camelcase@1.2.1 
  │   ├─┬ cliui@2.1.0 
  │   │ ├─┬ center-align@0.1.3 
  │   │ │ ├─┬ align-text@0.1.4 
  │   │ │ │ └── repeat-string@1.6.1 
  │   │ │ └── lazy-cache@1.0.4 
  │   │ ├── right-align@0.1.3 
  │   │ └── wordwrap@0.0.2 
  │   └── window-size@0.1.0 
  └── unique-number@2.0.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/feri/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0276 took 3.339s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node

'use strict'

//-------------------
// Load Timer: Begin
//-------------------
var time = new Date().getTime()

//-----------------------
// Includes: Self Part 1
//-----------------------
var shared = require('./2 - shared.js')

//-------------------------
// Command Line or Require
//-------------------------
try {
    if (require.main.filename === __filename) {
        // we are running on the command line
        shared.cli = true
    }
} catch(e) {
    // do nothing
}

//----------
// Includes
//----------
var chalk = require('chalk') // ~ 20 ms
var fs    = require('fs')    // ~  1 ms
var path  = require('path')  // ~  1 ms

//-------------------------
// Global or Local Install
//-------------------------
try {
    var pathToModules = path.join(shared.path.self, 'node_modules')
    shared.global = typeof(fs.statSync(pathToModules)) === 'object'
} catch(e) {
    shared.global = false
}

//-----------------------
// Includes: Self Part 2
//-----------------------
var config    = require('./3 - config.js')
var functions = require('./4 - functions.js')
var clean     = require('./5 - clean.js')
var build     = require('./6 - build.js')
var watch     = require('./7 - watch.js')

//-----------
// Variables
//-----------
var feri = {
    'action': {
        'clean': clean.processClean,
        'build': build.processBuild,
        'watch': watch.processWatch,
    },
    'shared'   : shared,
    'config'   : config,
    'functions': functions,
    'clean'    : clean,
    'build'    : build,
    'watch'    : watch
}

//-----------
// Functions
//-----------
var inOptions = function inOptions(search) {
    /*
    Find out if the options variable has any occurence of what we are searching for.
    @param  {Object}  search  Array of strings like ['--clean', '-c']
    */
    for (var i in search) {
        if (commandLineOptions.indexOf(search[i]) >= 0) {
            return true
        }
    }

    return false
} // inOptions

//-------------------------
// Command Line or Require
//-------------------------
if (shared.cli) {
    //--------------
    // Command Line
    //--------------
    var commandLineOptions = process.argv.slice(2)
    var configFile = path.join(shared.path.pwd, 'feri-config.js')
    var configFileExists = false

    // enable console logging since we are running as a command line program
    shared.log = true

    return Promise.resolve().then(function() {

        // check for a feri-config.js file
        return functions.fileExists(configFile).then(function(exists) {
            configFileExists = exists
        })

    }).then(function() {

        if (configFileExists) {
            try {
                require(configFile)(feri) // share our feri reference with this require
            } catch(e) {
                throw 'Loading ' + configFile + ' \n\n' + 'Make sure the file is a valid module like...\n\n' + 'module.exports = function(feri) { /* code */ }'
            }
        }

        if (config.language !== 'en-us') {
            return functions.setLanguage()
        }

    }).then(function() {

        //----------------------------------------------
        // Command Line Options: Source and Destination
        //----------------------------------------------
        (function() {
            var foundSource = false

            for (var i in commandLineOptions) {
                if (commandLineOptions[i].charAt(0) !== '-') {
                    // found a path
                    if (foundSource === false) {
                        foundSource = true
                        config.path.source = functions.figureOutPath(commandLineOptions[i])
                    } else {
                        config.path.dest = functions.figureOutPath(commandLineOptions[i])
                    }
                } else {
                    // lower case this option
                    commandLineOptions[i] = commandLineOptions[i].toLowerCase()
                }
            }
        })()

        //----------------------
        // Command Line Options
        //----------------------
        if (inOptions(['--version', '-v'])) {
            shared.help = true
            //-------------------------------
            // Command Line Options: Version
            //-------------------------------
            let localVersion = require('../package.json').version

            console.log('\n' + chalk.cyan('Feri') + chalk.gray(' version ') + chalk.cyan(localVersion))

            return functions.upgradeAvailable().then(function(upgradeVersion) {

                var message = ''

                if (upgradeVersion) {
                    message += '\n' + chalk.gray('    Upgrade to version ')
                    message += chalk.cyan(upgradeVersion) + chalk.gray(' -> ')
                    message += chalk.green('npm install -g feri') + '\n'
                }

                console.log(message)

            })

        } else if (inOptions(['--help', '-h'])) {
            shared.help = true
            //----------------------------
            // Command Line Options: Help
            //----------------------------
            console.log()
            console.log('Usage:')
            console.log()
            console.log('    ' + chalk.cyan('feri [options] [source] [destination]'))
            console.log()
            console.log('Options:')
            console.log()
            console.log('    -c, --clean          clean the destination directory')
            console.log('    -b, --build          build source files to destination')
            console.log('    -w, --watch          watch source to clean and build as needed')
            console.log('    -l, --livereload     monitor destination directory for livereload')
            console.log('    -s, --stats          display statistics')
            console.log()
            console.log('    -nc, --noclean       no clean')
            console.log('    -nb, --nobuild       no build')
            console.log('    -nw, --nowatch       no watch')
            console.log('    -nl, --nolivereload  no livereload')
            console.log('    -ns, --nostats       no statistics')
            console.log()
            console.log('    -a, --all            clean, build, watch, livereload, stats')
            console.log('    -f, --forcebuild     overwrite destination files without consideration')
            console.log('    -r, --republish      remove all destination files and then build')
            console.log('    -i, --init           create source, destination, and feri-config.js')
            console.log('    -d, --debug          enable verbose console logging')
            console.log('    -v, --version        version')
            console.log('    -h, --help           help')
            console.log()
            console.log('    ' + chalk.gray('Negating options like "--noclean" are stronger than their counterparts.'))
            console.log('    ' + chalk.gray('For example, "feri --clean --noclean" would result in not cleaning.'))
            console.log()
            console.log('    ' + chalk.gray('Options "--all", "--forcebuild", and "--republish" are even stronger.'))
            console.log()
            console.log('    ' + chalk.gray('Want even more options? Try a custom config file.'))
            console.log('    ' + chalk.gray('https://github.com/ForestMist/feri#custom-config-file'))
            console.log()
            console.log('Source:')
            console.log()
            console.log('    Optional source directory to build files from.')
            console.log('    ' + chalk.gray('Defaults to "./source"'))
            console.log()
            console.log('Destination:')
            console.log()
            console.log('    Optional destination directory to build files to.')
            console.log('    ' + chalk.gray('Defaults to "./dest"'))
            console.log()
            console.log('Examples:')
            console.log()
            console.log('    ' + chalk.gray('// clean, build, and stats are enabled by default'))
            console.log('    ' + chalk.cyan('feri'))
            console.log()
            console.log('    ' + chalk.gray('// clean, do not build, then watch'))
            console.log('    ' + chalk.cyan('feri --nobuild --watch'))
            console.log()
            console.log('    ' + chalk.gray('// republish from a specific source folder to a specific destination'))
            console.log('    ' + chalk.cyan('feri --republish /source /destination'))
            console.log()

        } else if (commandLineOptions.length > 0) {
            //-----------------------------
            // Command Line Options: Clean
            //-----------------------------
            if (inOptions(['--clean', '-c'])) {
                config.option.clean = true
            }

            if (inOptions(['--noclean', '-nc'])) {
                config.option.clean = false
            }

            //-----------------------------
            // Command Line Options: Build
            //-----------------------------
            if (inOptions(['--build', '-b'])) {
                config.option.build = true
            }

            if (inOptions(['--nobuild', '-nb'])) {
                config.option.build = false
            }

            //-----------------------------
            // Command Line Options: Watch
            //-----------------------------
            if (inOptions(['--livereload', '-l'])) {
                config.option.livereload = true
                config.option.watch = true // livereload on so better turn on watch too
            }

            if (inOptions(['--nolivereload', '-nl'])) {
                config.option.livereload = false
            }

            if (inOptions(['--watch', '-w'])) {
                config.option.watch = true
            }

            if (inOptions(['--nowatch', '-nw'])) {
                config.option.watch = false
                config.option.livereload = false // no watch, no point in livereload
            }

            //-----------------------------
            // Command Line Options: Stats
            //-----------------------------
            if (inOptions(['--stats', '-s'])) {
                config.option.stats = true
            }

            if (inOptions(['--nostats', '-ns'])) {
                config.option.stats = false
            }

            //---------------------------
            // Command Line Options: All
            //---------------------------
            if (inOptions(['--all', '-a'])) {
                config.option.build = true
                config.option.clean = true
                config.option.watch = true
                config.option.stats = true
                config.option.livereload = true
            }

            //-----------------------------------
            // Command Line Options: Force Build
            //-----------------------------------
            if (inOptions(['--forcebuild', '-f'])) {
                // forcebuild is a stronger option than nobuild
                config.option.build = true
                config.option.forcebuild = true
            }

            //---------------------------------
            // Command Line Options: Republish
            //---------------------------------
            if (inOptions(['--republish', '-r'])) {
                // republish is a stronger option than noclean and nobuild
                config.option.republish = true
                config.option.clean = true
                config.option.build = true
            }

            //----------------------------
            // Command Line Options: Misc
            //----------------------------
            if (inOptions(['--debug', '-d'])) {
                config.option.debug = true
            }

            if (inOptions(['--init', '-i'])) {
                config.option.init = true
            }
        } // if

    }).then(function() {
        //-----------------
        // Load Timer: End
        //-----------------
        shared.stats.timeTo.load = functions.sharedStatsTimeTo(time)

        if (!shared.help) {

            if (config.option.init) {

                return functions.initFeri()

            } else {

                if (configFileExists) {
                    functions.log(chalk.gray(shared.language.display('message.usingConfigFile').replace('{file}', '"feri-config.js"')), false)
                }

                var p = Promise.resolve()

                p = p.then(function() {

                    //-------
                    // Clean
                    //-------
                    if (config.option.clean) {
                        return clean.processClean()
                    }

                }).then(function() {

                    //-------
                    // Build
                    //-------
                    if (config.option.build) {
                        return build.processBuild()
                    }

                }).then(function() {

                    //-------
                    // Watch
                    //-------
                    if (config.option.watch) {
                        shared.suppressWatchEvents = true // suppress watch events until the title "Watching" is displayed

                        return watch.processWatch()
                    }

                }).then(function() {

                    //-------
                    // Stats
                    //-------
                    if (!config.option.stats) {
                        functions.log('', false)
                    } else {
                        functions.log(chalk.gray('\n' + shared.language.display('words.stats') + '\n'), false)

                        if (shared.stats.timeTo.load > 0) {
                            functions.log(chalk.gray(shared.language.display('paddedGroups.stats.load')) + ' ' + chalk.cyan(shared.stats.timeTo.load))
                        }

                        if (shared.stats.timeTo.clean > 0) {
                            functions.log(chalk.gray(shared.language.display('paddedGroups.stats.clean')) + ' ' + chalk.cyan(shared.stats.timeTo.clean))
                        }

                        if (shared.stats.timeTo.build > 0) {
                            functions.log(chalk.gray(shared.language.display('paddedGroups.stats.build')) + ' ' + chalk.cyan(shared.stats.timeTo.build))
                        }

                        if (shared.stats.timeTo.watch > 0) {
                            functions.log(chalk.gray(shared.language.display('paddedGroups.stats.watch')) + ' ' + chalk.cyan(shared.stats.timeTo.watch))
                        }

                        var totalTime = shared.stats.timeTo.load + shared.stats.timeTo.clean + shared.stats.timeTo.build + shared.stats.timeTo.watch

                        totalTime = functions.mathRoundPlaces(totalTime, 3)

                        functions.log('', false)
                        functions.log(chalk.gray(shared.language.display('paddedGroups.stats.total')) + ' ' + chalk.cyan(totalTime) + chalk.gray(' ' + shared.language.display('words.seconds') + '\n'))
                    }

                }).then(function() {

                    //----------
                    // Watching
                    //----------
                    if (config.option.watch) {
                        functions.log(chalk.gray(shared.language.display('words.watching')) + '\n', false)

                        shared.suppressWatchEvents = false
                    }

                })

                return p

            } // if (config.option.init)

        } // if (!shared.help)

    }).catch(function(err) {

        functions.logError(err)

        var message = shared.language.display('error.halted') + '\n'
        message = message.replace('{software}', chalk.cyan('Feri'))
        message = message.replace('{version}', chalk.green(require('../package.json').version))

        functions.log(chalk.gray(message), false)
        throw err

    })
} else {
    //---------
    // Require
    //---------

    // set sensible defaults for programatic consumers
    config.option.clean = true
    config.option.build = true
    config.option.watch = true

    //-----------------
    // Load Timer: End
    //-----------------
    shared.stats.timeTo.load = functions.sharedStatsTimeTo(time)
}

//---------
// Exports
//---------
module.exports = feri
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
