/root/Targets/vue-dual-list
└─┬ vue-dual-list@0.0.7 
  ├─┬ babel-plugin-transform-runtime@6.23.0 
  │ └─┬ babel-runtime@6.26.0 
  │   ├── core-js@2.5.1 
  │   └── regenerator-runtime@0.11.0 
  ├── UNMET PEER DEPENDENCY css-loader@*
  ├─┬ express@4.15.2 
  │ ├─┬ accepts@1.3.4 
  │ │ ├─┬ mime-types@2.1.17 
  │ │ │ └── mime-db@1.30.0 
  │ │ └── negotiator@0.6.1 
  │ ├── array-flatten@1.1.1 
  │ ├── content-disposition@0.5.2 
  │ ├── content-type@1.0.4 
  │ ├── cookie@0.3.1 
  │ ├── cookie-signature@1.0.6 
  │ ├── debug@2.6.1 
  │ ├── depd@1.1.1 
  │ ├── encodeurl@1.0.1 
  │ ├── escape-html@1.0.3 
  │ ├── etag@1.8.1 
  │ ├─┬ finalhandler@1.0.6 
  │ │ ├─┬ debug@2.6.9 
  │ │ │ └── ms@2.0.0 
  │ │ └── unpipe@1.0.0 
  │ ├── fresh@0.5.0 
  │ ├── merge-descriptors@1.0.1 
  │ ├── methods@1.1.2 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── parseurl@1.3.2 
  │ ├── path-to-regexp@0.1.7 
  │ ├─┬ proxy-addr@1.1.5 
  │ │ ├── forwarded@0.1.2 
  │ │ └── ipaddr.js@1.4.0 
  │ ├── qs@6.4.0 
  │ ├── range-parser@1.2.0 
  │ ├─┬ send@0.15.1 
  │ │ ├── destroy@1.0.4 
  │ │ ├─┬ http-errors@1.6.2 
  │ │ │ └── inherits@2.0.3 
  │ │ └── mime@1.3.4 
  │ ├── serve-static@1.12.1 
  │ ├── setprototypeof@1.0.3 
  │ ├── statuses@1.3.1 
  │ ├─┬ type-is@1.6.15 
  │ │ └── media-typer@0.3.0 
  │ ├── utils-merge@1.0.0 
  │ └── vary@1.1.2 
  ├─┬ serve-favicon@2.3.2 
  │ ├── etag@1.7.0 
  │ ├── fresh@0.3.0 
  │ └── ms@0.7.2 
  ├── UNMET PEER DEPENDENCY vue@2.2.6
  ├─┬ vue-dual-list@0.0.5  invalid
  │ ├── UNMET PEER DEPENDENCY css-loader@*
  │ ├─┬ vue-dual-list@0.0.1  invalid
  │ │ └── UNMET PEER DEPENDENCY vue@2.2.4 extraneous
  │ └── UNMET PEER DEPENDENCY vue-template-compiler@^2.0.0
  ├─┬ vue-loader@11.3.4 
  │ ├─┬ consolidate@0.14.5 
  │ │ └── bluebird@3.5.0 
  │ ├── hash-sum@1.0.2 
  │ ├─┬ js-beautify@1.7.3 
  │ │ ├─┬ config-chain@1.1.11 
  │ │ │ ├── ini@1.3.4 
  │ │ │ └── proto-list@1.2.4 
  │ │ ├─┬ editorconfig@0.13.3 
  │ │ │ ├── commander@2.11.0 
  │ │ │ ├── lru-cache@3.2.0 
  │ │ │ ├── semver@5.4.1 
  │ │ │ └── sigmund@1.0.1 
  │ │ ├─┬ mkdirp@0.5.1 
  │ │ │ └── minimist@0.0.8 
  │ │ └─┬ nopt@3.0.6 
  │ │   └── abbrev@1.1.1 
  │ ├─┬ loader-utils@1.1.0 
  │ │ ├── big.js@3.2.0 
  │ │ ├── emojis-list@2.1.0 
  │ │ └── json5@0.5.1 
  │ ├─┬ lru-cache@4.1.1 
  │ │ ├── pseudomap@1.0.2 
  │ │ └── yallist@2.1.2 
  │ ├─┬ postcss@5.2.17 
  │ │ ├─┬ chalk@1.1.3 
  │ │ │ ├── ansi-styles@2.2.1 
  │ │ │ ├── escape-string-regexp@1.0.5 
  │ │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ │ └── ansi-regex@2.1.1 
  │ │ │ ├── strip-ansi@3.0.1 
  │ │ │ └── supports-color@2.0.0 
  │ │ ├── js-base64@2.3.2 
  │ │ └─┬ supports-color@3.2.3 
  │ │   └── has-flag@1.0.0 
  │ ├─┬ postcss-load-config@1.2.0 
  │ │ ├─┬ cosmiconfig@2.2.2 
  │ │ │ ├── is-directory@0.3.1 
  │ │ │ ├─┬ js-yaml@3.10.0 
  │ │ │ │ ├─┬ argparse@1.0.9 
  │ │ │ │ │ └── sprintf-js@1.0.3 
  │ │ │ │ └── esprima@4.0.0 
  │ │ │ ├── minimist@1.2.0 
  │ │ │ ├── os-homedir@1.0.2 
  │ │ │ ├─┬ parse-json@2.2.0 
  │ │ │ │ └─┬ error-ex@1.3.1 
  │ │ │ │   └── is-arrayish@0.2.1 
  │ │ │ └── require-from-string@1.2.1 
  │ │ ├── object-assign@4.1.1 
  │ │ ├── postcss-load-options@1.2.0 
  │ │ └── postcss-load-plugins@2.3.0 
  │ ├─┬ postcss-selector-parser@2.2.3 
  │ │ ├── flatten@1.0.2 
  │ │ ├── indexes-of@1.0.1 
  │ │ └── uniq@1.0.1 
  │ ├── source-map@0.5.7 
  │ ├── vue-hot-reload-api@2.1.0 
  │ ├── vue-style-loader@2.0.5 
  │ └── vue-template-es2015-compiler@1.5.3 
  ├── vue-material@0.7.5 
  └── UNMET PEER DEPENDENCY vue-template-compiler@^2.0.0

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/vue-dual-list/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0967 took 4.883s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (1:78) on program <template lang="html">
	<md-layout md-gutter class='vue-dual-list'>
		<md-layout md-flex-small="100" md-flex-medium="100" md-hide-xsmall>

			<md-input-container v-if='options.inputOptions.isRequired' style='margin-bottom: 0px'>
				<label for="filter">{{options.label}}</label>
        <md-input v-model="search" required v-bind:style="{'text-transform': options.inputOptions.uppercase ? 'uppercase' : ''}"></md-input>
			</md-input-container>

			<md-input-container v-if='!options.inputOptions.isRequired' style='margin-bottom: 0px'>
				<label for="filter">{{options.label}}</label>
        <md-input v-model="search" v-bind:style="{'text-transform': options.inputOptions.uppercase ? 'uppercase' : ''}"></md-input>
			</md-input-container>

			<md-layout md-flex='50' md-align="center">
				<md-button class="md-raised" v-on:click.native='transferToRight(options.items.indexOf(item))'>
					{{options.buttonOption.textLeft}}
					<md-icon style='padding-bottom: 4px;'>arrow_forward</md-icon>
				</md-button>
			</md-layout>

			<md-layout md-flex='50' md-align="center">
				<md-button class="md-raised" v-on:click.native='transferToLeft(-1)'>
					<md-icon style='padding-bottom: 4px;'>arrow_back</md-icon>
					{{ options.buttonOption.textRight }}
				</md-button>
			</md-layout>

			<md-layout md-flex class='list' v-bind:class="options.resizeBox">
				<ul class='pd'>
					<li v-for='item in filtering' :key="item.name">
						<a href='#' v-on:click='transferToRight(options.items.indexOf(item))' v-bind:style="{ color: options.colorItems || '#1E90FF' }">
					    {{ item.name }}&nbsp;&rArr;</a>
					</li>
				</ul>
			</md-layout>

			<div style='padding-left: 10px' />

			<md-layout md-flex class='list' v-bind:class="options.resizeBox">
				<ul class='pd'>
					<li v-for='item in options.selectedItems' :key="item.name">
						<a href='#' v-on:click='transferToLeft(options.selectedItems.indexOf(item))' v-bind:style="{ color: options.colorItems || '#1E90FF'}">
								&lArr;&nbsp;{{ item.name }}
						</a>
					</li>
				</ul>
			</md-layout>
		</md-layout>
	</md-layout>
</template>


<style lang="css">
  .vue-dual-list .list {
    border: 1px solid #999;
    border-radius: 4px;
    padding: 10px;
    overflow-y: scroll;
  }
  
  .vue-dual-list .xs {
    height: 150px;
  }
  
  .vue-dual-list .md {
    height: 225px;
  }
  
  .vue-dual-list .lg {
    height: 350px;
  }
  
  .vue-dual-list .xl {
    height: 500px;
  }
  
  .vue-dual-list ul.pd {
    padding-left: 12px;
  }
</style>

<script>
  import Vue from 'vue';
  import VueMaterial from 'vue-material';

  Vue.use(VueMaterial);

  export default {
    name: 'vue-dual-list',
    props: {
      'options': {
        type: Object,
        default: {},
        required: true
      }
    },
    data: function() {
      return {
        search: '',
        item: {}
      }
    },
    methods: {
      transferToRight: function(index) {
        if (index >= 0) {
          this.search = '';
          this.options.selectedItems.push(this.options.items[index]);
          this.options.items.splice(index, 1);
        } else {
          this.search = '';
          for (var cont = 0; cont < this.options.items.length; cont++) {
            this.options.selectedItems.push(this.options.items[cont]);
          }

          while (this.options.items.length > 0) {
            this.options.items.pop();
          }
        }
      },
      transferToLeft: function(index) {
        if (index >= 0) {
          this.search = '';
          this.options.items.push(this.options.selectedItems[index]);
          this.options.selectedItems.splice(index, 1);

        } else {
          this.search = '';
          for (var cont = 0; cont < this.options.selectedItems.length; cont++) {
            this.options.items.push(this.options.selectedItems[cont]);
          }

          while (this.options.selectedItems.length > 0) {
            this.options.selectedItems.pop();
          }
        }
      }
    },
    computed: {
      filtering: function() {
        if (this.search) {
          return this.options.items.filter((item) => {
            return item.name.toLowerCase().indexOf(this.search) !== -1;
          });
        }
        return this.options.items;
      }
    }
  }
</script> at SyntaxError: Unexpected token (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1822:12)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1597:21)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
