
> wrtc@0.0.62 install /root/Targets/serverless-webrtc/node_modules/wrtc
> node-pre-gyp install --fallback-to-build

[wrtc] Success: "/root/Targets/serverless-webrtc/node_modules/wrtc/build/wrtc/v0.0.62/Release/node-v51-linux-x64/wrtc.node" is installed via remote
/root/Targets/serverless-webrtc
└─┬ serverless-webrtc@1.0.5 
  ├── ansi@0.3.0 
  └─┬ wrtc@0.0.62 
    ├─┬ download@5.0.3 
    │ ├─┬ caw@2.0.1 
    │ │ ├─┬ get-proxy@2.1.0 
    │ │ │ └─┬ npm-conf@1.1.2 
    │ │ │   ├─┬ config-chain@1.1.11 
    │ │ │   │ └── proto-list@1.2.4 
    │ │ │   └── pify@3.0.0 
    │ │ ├─┬ isurl@1.0.0 
    │ │ │ ├─┬ has-to-string-tag-x@1.4.1 
    │ │ │ │ └── has-symbol-support-x@1.4.1 
    │ │ │ └── is-object@1.0.1 
    │ │ ├── tunnel-agent@0.6.0 
    │ │ └── url-to-options@1.0.1 
    │ ├─┬ decompress@4.2.0 
    │ │ ├─┬ decompress-tar@4.1.1 
    │ │ │ └── file-type@5.2.0 
    │ │ ├─┬ decompress-tarbz2@4.1.1 
    │ │ │ ├── file-type@6.2.0 
    │ │ │ ├─┬ seek-bzip@1.0.5 
    │ │ │ │ └─┬ commander@2.8.1 
    │ │ │ │   └── graceful-readlink@1.0.1 
    │ │ │ └─┬ unbzip2-stream@1.2.5 
    │ │ │   ├─┬ buffer@3.6.0 
    │ │ │   │ ├── base64-js@0.0.8 
    │ │ │   │ └── ieee754@1.1.8 
    │ │ │   └── through@2.3.8 
    │ │ ├── decompress-targz@4.1.1 
    │ │ ├─┬ decompress-unzip@4.0.1 
    │ │ │ ├── file-type@3.9.0 
    │ │ │ ├─┬ get-stream@2.3.1 
    │ │ │ │ └─┬ pinkie-promise@2.0.1 
    │ │ │ │   └── pinkie@2.0.4 
    │ │ │ └─┬ yauzl@2.8.0 
    │ │ │   ├── buffer-crc32@0.2.13 
    │ │ │   └─┬ fd-slicer@1.0.1 
    │ │ │     └── pend@1.2.0 
    │ │ ├── graceful-fs@4.1.11 
    │ │ ├── make-dir@1.0.0 
    │ │ └─┬ strip-dirs@2.0.0 
    │ │   └── is-natural-number@4.0.1 
    │ ├─┬ filenamify@2.0.0 
    │ │ ├── filename-reserved-regex@2.0.0 
    │ │ ├─┬ strip-outer@1.0.0 
    │ │ │ └── escape-string-regexp@1.0.5 
    │ │ └── trim-repeated@1.0.0 
    │ ├── get-stream@3.0.0 
    │ ├─┬ got@6.7.1 
    │ │ ├─┬ create-error-class@3.0.2 
    │ │ │ └── capture-stack-trace@1.0.0 
    │ │ ├── duplexer3@0.1.4 
    │ │ ├── is-redirect@1.0.0 
    │ │ ├── is-retry-allowed@1.1.0 
    │ │ ├── is-stream@1.1.0 
    │ │ ├── lowercase-keys@1.0.0 
    │ │ ├── safe-buffer@5.1.1 
    │ │ ├── timed-out@4.0.1 
    │ │ ├── unzip-response@2.0.1 
    │ │ └─┬ url-parse-lax@1.0.0 
    │ │   └── prepend-http@1.0.4 
    │ ├─┬ mkdirp@0.5.1 
    │ │ └── minimist@0.0.8 
    │ └── pify@2.3.0 
    ├─┬ gunzip-maybe@1.4.1 
    │ ├─┬ browserify-zlib@0.1.4 
    │ │ └── pako@0.2.9 
    │ ├── is-deflate@1.0.0 
    │ ├── is-gzip@1.0.0 
    │ ├─┬ peek-stream@1.1.2 
    │ │ └─┬ duplexify@3.5.1 
    │ │   └── stream-shift@1.0.0 
    │ ├─┬ pumpify@1.3.5 
    │ │ └── inherits@2.0.3 
    │ └─┬ through2@2.0.3 
    │   ├─┬ readable-stream@2.3.3 
    │   │ ├── core-util-is@1.0.2 
    │   │ ├── isarray@1.0.0 
    │   │ ├── process-nextick-args@1.0.7 
    │   │ ├── string_decoder@1.0.3 
    │   │ └── util-deprecate@1.0.2 
    │   └── xtend@4.0.1 
    ├── nan@2.7.0 
    ├─┬ node-pre-gyp@0.6.38 
    │ ├─┬ hawk@3.1.3 
    │ │ ├── boom@2.10.1 
    │ │ ├── cryptiles@2.0.5 
    │ │ ├── hoek@2.16.3 
    │ │ └── sntp@1.0.9 
    │ ├─┬ nopt@4.0.1 
    │ │ ├── abbrev@1.1.1 
    │ │ └─┬ osenv@0.1.4 
    │ │   ├── os-homedir@1.0.2 
    │ │   └── os-tmpdir@1.0.2 
    │ ├─┬ npmlog@4.1.2 
    │ │ ├─┬ are-we-there-yet@1.1.4 
    │ │ │ └── delegates@1.0.0 
    │ │ ├── console-control-strings@1.1.0 
    │ │ ├─┬ gauge@2.7.4 
    │ │ │ ├── aproba@1.2.0 
    │ │ │ ├── has-unicode@2.0.1 
    │ │ │ ├── object-assign@4.1.1 
    │ │ │ ├── signal-exit@3.0.2 
    │ │ │ ├─┬ string-width@1.0.2 
    │ │ │ │ ├── code-point-at@1.1.0 
    │ │ │ │ └─┬ is-fullwidth-code-point@1.0.0 
    │ │ │ │   └── number-is-nan@1.0.1 
    │ │ │ ├─┬ strip-ansi@3.0.1 
    │ │ │ │ └── ansi-regex@2.1.1 
    │ │ │ └── wide-align@1.1.2 
    │ │ └── set-blocking@2.0.0 
    │ ├─┬ rc@1.2.1 
    │ │ ├── deep-extend@0.4.2 
    │ │ ├── ini@1.3.4 
    │ │ ├── minimist@1.2.0 
    │ │ └── strip-json-comments@2.0.1 
    │ ├─┬ request@2.81.0 
    │ │ ├── aws-sign2@0.6.0 
    │ │ ├── aws4@1.6.0 
    │ │ ├── caseless@0.12.0 
    │ │ ├─┬ combined-stream@1.0.5 
    │ │ │ └── delayed-stream@1.0.0 
    │ │ ├── extend@3.0.1 
    │ │ ├── forever-agent@0.6.1 
    │ │ ├─┬ form-data@2.1.4 
    │ │ │ └── asynckit@0.4.0 
    │ │ ├─┬ har-validator@4.2.1 
    │ │ │ ├─┬ ajv@4.11.8 
    │ │ │ │ ├── co@4.6.0 
    │ │ │ │ └─┬ json-stable-stringify@1.0.1 
    │ │ │ │   └── jsonify@0.0.0 
    │ │ │ └── har-schema@1.0.5 
    │ │ ├─┬ http-signature@1.1.1 
    │ │ │ ├── assert-plus@0.2.0 
    │ │ │ ├─┬ jsprim@1.4.1 
    │ │ │ │ ├── assert-plus@1.0.0 
    │ │ │ │ ├── extsprintf@1.3.0 
    │ │ │ │ ├── json-schema@0.2.3 
    │ │ │ │ └─┬ verror@1.10.0 
    │ │ │ │   └── assert-plus@1.0.0 
    │ │ │ └─┬ sshpk@1.13.1 
    │ │ │   ├── asn1@0.2.3 
    │ │ │   ├── assert-plus@1.0.0 
    │ │ │   ├── bcrypt-pbkdf@1.0.1 
    │ │ │   ├─┬ dashdash@1.14.1 
    │ │ │   │ └── assert-plus@1.0.0 
    │ │ │   ├── ecc-jsbn@0.1.1 
    │ │ │   ├─┬ getpass@0.1.7 
    │ │ │   │ └── assert-plus@1.0.0 
    │ │ │   ├── jsbn@0.1.1 
    │ │ │   └── tweetnacl@0.14.5 
    │ │ ├── is-typedarray@1.0.0 
    │ │ ├── isstream@0.1.2 
    │ │ ├── json-stringify-safe@5.0.1 
    │ │ ├─┬ mime-types@2.1.17 
    │ │ │ └── mime-db@1.30.0 
    │ │ ├── oauth-sign@0.8.2 
    │ │ ├── performance-now@0.2.0 
    │ │ ├── qs@6.4.0 
    │ │ ├── stringstream@0.0.5 
    │ │ ├─┬ tough-cookie@2.3.3 
    │ │ │ └── punycode@1.4.1 
    │ │ └── uuid@3.1.0 
    │ ├─┬ rimraf@2.6.2 
    │ │ └─┬ glob@7.1.2 
    │ │   ├── fs.realpath@1.0.0 
    │ │   ├── inflight@1.0.6 
    │ │   ├─┬ minimatch@3.0.4 
    │ │   │ └─┬ brace-expansion@1.1.8 
    │ │   │   ├── balanced-match@1.0.0 
    │ │   │   └── concat-map@0.0.1 
    │ │   └── path-is-absolute@1.0.1 
    │ ├── semver@5.4.1 
    │ ├─┬ tar@2.2.1 
    │ │ ├── block-stream@0.0.9 
    │ │ └── fstream@1.0.11 
    │ └─┬ tar-pack@3.4.0 
    │   ├─┬ debug@2.6.9 
    │   │ └── ms@2.0.0 
    │   ├── fstream-ignore@1.0.5 
    │   ├─┬ once@1.4.0 
    │   │ └── wrappy@1.0.2 
    │   └── uid-number@0.0.6 
    └─┬ tar-fs@1.15.3 
      ├── chownr@1.0.1 
      ├─┬ pump@1.0.2 
      │ └── end-of-stream@1.4.0 
      └─┬ tar-stream@1.5.4 
        └── bl@1.2.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/serverless-webrtc/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0389 took 2.7479s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node

// This script runs under node, and `serverless-webrtc.html` runs inside
// a browser.
// Usage: `node serverless-webrtc.js` or `node serverless-webrtc.js --create`.
var webrtc = require('wrtc');
var readline = require('readline');
var ansi = require('ansi');
var cursor = ansi(process.stdout);

var pc = null;
var offer = null;
var answer = null;

/* 1. Global settings, data and functions. */
var dataChannelSettings = {
  'reliable': {
        ordered: true,
        maxRetransmits: 0
      },
};

var pcSettings = [
  {
    iceServers: [{url:'stun:stun.l.google.com:19302'}]
  },
  {
    'optional': [{DtlsSrtpKeyAgreement: false}]
  }
];

var pendingDataChannels = {};
var dataChannels = {}

var rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

if (process.argv[2] == "--create") {
  makeOffer();
}
else {
  rl.question("Please paste your offer:\n", function(offer) {
    getOffer(offer);
  });
}

function doHandleError(error) {
  throw error;
}

function onsignalingstatechange(state) {
  //console.info('signaling state change:', state);
}
function oniceconnectionstatechange(state) {
  //console.info('ice connection state change:', state);
}
function onicegatheringstatechange(state) {
  //console.info('ice gathering state change:', state);
}

function inputLoop(channel) {
  cursor.green();
  rl.question("> ", function(text) {
    channel.send(JSON.stringify({message: text}));
    inputLoop(channel);
  });
}

/* 2. This code deals with the --join case. */

function getOffer(pastedOffer) {
  data = JSON.parse(pastedOffer);
  offer = new webrtc.RTCSessionDescription(data);
  answer = null;

  pc = new webrtc.RTCPeerConnection(pcSettings);
  pc.onsignalingstatechange = onsignalingstatechange;
  pc.oniceconnectionstatechange = oniceconnectionstatechange;
  pc.onicegatheringstatechange = onicegatheringstatechange;
  pc.onicecandidate = function(candidate) {
    // Firing this callback with a null candidate indicates that
    // trickle ICE gathering has finished, and all the candidates
    // are now present in pc.localDescription.  Waiting until now
    // to create the answer saves us from having to send offer +
    // answer + iceCandidates separately.
    if (candidate.candidate == null) {
      doShowAnswer();
    }
  }
  doHandleDataChannels();
}

function doShowAnswer() {
  answer = pc.localDescription;
  console.log("\n\nHere is your answer:");
  console.log(JSON.stringify(answer) + "\n\n");
}

function doCreateAnswer() {
  pc.createAnswer(doSetLocalDesc, doHandleError);
}

function doSetLocalDesc(desc) {
  answer = desc;
  pc.setLocalDescription(desc, undefined, doHandleError);
};

function doHandleDataChannels() {
  var labels = Object.keys(dataChannelSettings);
  pc.ondatachannel = function(evt) {
    var channel = evt.channel;
    var label = channel.label;
    pendingDataChannels[label] = channel;
    //channel.binaryType = 'arraybuffer';
    channel.onopen = function() {
      dataChannels[label] = channel;
      delete pendingDataChannels[label];
      if(Object.keys(dataChannels).length === labels.length) {
        console.log("\nConnected!");
        inputLoop(channel);
      }
    };
    channel.onmessage = function(evt) {
      data = JSON.parse(evt.data);
      cursor.blue();
      console.log(data.message);
      inputLoop(channel);
    };
    channel.onerror = doHandleError;
  };

  pc.setRemoteDescription(offer, doCreateAnswer, doHandleError);
}

/* 3. From here on down deals with the --create case. */

function makeOffer() {
  pc = new webrtc.RTCPeerConnection(pcSettings);
  makeDataChannel();
  pc.onsignalingstatechange = onsignalingstatechange;
  pc.oniceconnectionstatechange = oniceconnectionstatechange;
  pc.onicegatheringstatechange = onicegatheringstatechange;
  pc.createOffer(function (desc) {
    pc.setLocalDescription(desc, function () {});
    // We'll pick up the offer text once trickle ICE is complete,
    // in onicecandidate.
  });
  pc.onicecandidate = function(candidate) {
    // Firing this callback with a null candidate indicates that
    // trickle ICE gathering has finished, and all the candidates
    // are now present in pc.localDescription.  Waiting until now
    // to create the answer saves us from having to send offer +
    // answer + iceCandidates separately.
    if (candidate.candidate == null) {
      console.log("Your offer is:");
      console.log(JSON.stringify(pc.localDescription));
      rl.question("Please paste your answer:\n", function(answer) {
        getAnswer(answer);
      });
    }
  }
}

function makeDataChannel() {
  // If you don't make a datachannel *before* making your offer (such
  // that it's included in the offer), then when you try to make one
  // afterwards it just stays in "connecting" state forever.  This is
  // my least favorite thing about the datachannel API.
  var channel = pc.createDataChannel('test', {reliable:true});
  channel.onopen = function() {
    console.log("\nConnected!");
    inputLoop(channel);
  };
  channel.onmessage = function(evt) {
    data = JSON.parse(evt.data);
    cursor.blue();
    console.log(data.message);
    inputLoop(channel);
  };
  channel.onerror = doHandleError;
}

function getAnswer(pastedAnswer) {
  data = JSON.parse(pastedAnswer);
  answer = new webrtc.RTCSessionDescription(data);
  pc.setRemoteDescription(answer);
}
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
