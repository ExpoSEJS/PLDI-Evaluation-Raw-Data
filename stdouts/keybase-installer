/root/Targets/keybase-installer
└─┬ keybase-installer@1.0.3 
  ├── badnode@1.0.1 
  ├── colors@0.6.2 
  ├── gpg-wrapper@1.0.1 
  ├── iced-data-structures@0.0.5 
  ├── iced-error@0.0.9 
  ├── iced-logger@0.0.6 
  ├── iced-runtime@1.0.2 
  ├── iced-spawn@1.0.0 
  ├── iced-utils@0.1.22 
  ├── keybase-path@0.0.16 
  ├── pgp-utils@0.0.27 
  ├── progress@1.1.3 
  ├─┬ request@2.58.0 
  │ ├── aws-sign2@0.5.0 
  │ ├─┬ bl@0.9.4 
  │ │ └─┬ readable-stream@1.0.33 
  │ │   ├── core-util-is@1.0.1 
  │ │   ├── inherits@2.0.1 
  │ │   ├── isarray@0.0.1 
  │ │   └── string_decoder@0.10.31 
  │ ├── caseless@0.10.0 
  │ ├─┬ combined-stream@1.0.5 
  │ │ └── delayed-stream@1.0.0 
  │ ├── extend@2.0.1 
  │ ├── forever-agent@0.6.1 
  │ ├─┬ form-data@1.0.0-rc1 
  │ │ ├── async@1.3.0 
  │ │ └─┬ mime-types@2.1.2 
  │ │   └── mime-db@1.14.0 
  │ ├─┬ har-validator@1.8.0 
  │ │ ├── bluebird@2.9.30 
  │ │ ├─┬ chalk@1.1.0 
  │ │ │ ├── ansi-styles@2.1.0 
  │ │ │ ├── escape-string-regexp@1.0.3 
  │ │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ │ └── ansi-regex@2.0.0 
  │ │ │ ├─┬ strip-ansi@3.0.0 
  │ │ │ │ └── ansi-regex@2.0.0 
  │ │ │ └── supports-color@2.0.0 
  │ │ ├─┬ commander@2.8.1 
  │ │ │ └── graceful-readlink@1.0.1 
  │ │ └─┬ is-my-json-valid@2.12.0 
  │ │   ├── generate-function@2.0.0 
  │ │   ├─┬ generate-object-property@1.2.0 
  │ │   │ └── is-property@1.0.2 
  │ │   ├── jsonpointer@1.1.0 
  │ │   └── xtend@4.0.0 
  │ ├─┬ hawk@2.3.1 
  │ │ ├── boom@2.8.0 
  │ │ ├── cryptiles@2.0.4 
  │ │ ├── hoek@2.14.0 
  │ │ └── sntp@1.0.9 
  │ ├─┬ http-signature@0.11.0 
  │ │ ├── asn1@0.1.11 
  │ │ ├── assert-plus@0.1.5 
  │ │ └── ctype@0.5.3 
  │ ├── isstream@0.1.2 
  │ ├── json-stringify-safe@5.0.1 
  │ ├─┬ mime-types@2.0.14 
  │ │ └── mime-db@1.12.0 
  │ ├── node-uuid@1.4.3 
  │ ├── oauth-sign@0.8.0 
  │ ├── qs@3.1.0 
  │ ├── stringstream@0.0.4 
  │ ├── tough-cookie@2.0.0 
  │ └── tunnel-agent@0.4.0 
  └── semver@4.2.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/keybase-installer/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 17% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","call","toUpperCase","join"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0564 took 8.9628s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (11:9) on program // Generated by IcedCoffeeScript 1.7.1-f
(function() {
  var ASP, Canceler, Warnings, assert, assert_no_nulls, asyncify, bufeq_secure, buffer_to_ui8a, bufferify, iced, katch, obj_extract, strip, trim, ui32a_to_ui8a, ui8Ga_to_ui32a, xxd, __iced_k, __iced_k_noop,
    __slice = [].slice;

  iced = require('iced-runtime');
  __iced_k = __iced_k_noop = function() {};

  Canceler = require('iced-error').Canceler;

  assert = require('assert');

  exports.uint_to_buffer = function(nbits, i) {
    var ret;
    ret = null;
    switch (nbits) {
      case 16:
        ret = new Buffer(2);
        ret.writeUInt16BE(i, 0);
        break;
      case 32:
        ret = new Buffer(4);
        ret.writeUInt32BE(i, 0);
        break;
      case 8:
        ret = new Buffer(1);
        ret.writeUInt8(i, 0);
        break;
      default:
        throw new Error("Bit types not found: " + nbit);
    }
    return ret;
  };

  exports.ASP = ASP = (function() {
    function ASP(_arg) {
      var canceler, delay, progress_hook;
      progress_hook = _arg.progress_hook, delay = _arg.delay, canceler = _arg.canceler;
      this._delay = delay != null ? delay : 2;
      this._canceler = canceler || (new Canceler());
      this._progress_hook = progress_hook || (function(obj) {});
      this._section = null;
    }

    ASP.prototype.section = function(s) {
      this._section = s;
      return this;
    };

    ASP.prototype.progress = function(o, cb) {
      var err, ___iced_passed_deferral, __iced_deferrals, __iced_k;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      if (this._section) {
        o.section = this._section;
      }
      this._progress_hook(o);
      if (cb != null) {
        (function(_this) {
          return (function(__iced_k) {
            __iced_deferrals = new iced.Deferrals(__iced_k, {
              parent: ___iced_passed_deferral,
              filename: "/Users/max/src/keybase/pgp-utils/src/util.iced",
              funcname: "ASP.progress"
            });
            _this.delay(__iced_deferrals.defer({
              assign_fn: (function() {
                return function() {
                  return err = arguments[0];
                };
              })(),
              lineno: 43
            }));
            __iced_deferrals._fulfill();
          });
        })(this)((function(_this) {
          return function() {
            return __iced_k(cb(err));
          };
        })(this));
      } else {
        return __iced_k();
      }
    };

    ASP.prototype.delay = function(cb) {
      var ___iced_passed_deferral, __iced_deferrals, __iced_k;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      (function(_this) {
        return (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/Users/max/src/keybase/pgp-utils/src/util.iced",
            funcname: "ASP.delay"
          });
          setTimeout(__iced_deferrals.defer({
            lineno: 47
          }), _this.delay);
          __iced_deferrals._fulfill();
        });
      })(this)((function(_this) {
        return function() {
          return cb(_this._canceler.err());
        };
      })(this));
    };

    ASP.prototype.canceler = function() {
      return this._canceler;
    };

    ASP.prototype.progress_hook = function() {
      return this._progress_hook;
    };

    ASP.make = function(asp) {
      return asp || (new ASP({}));
    };

    return ASP;

  })();

  exports.Warnings = Warnings = (function() {
    function Warnings() {
      this._w = [];
    }

    Warnings.prototype.push = function() {
      var args, _ref;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return (_ref = this._w).push.apply(_ref, args);
    };

    Warnings.prototype.warnings = function() {
      return this._w;
    };

    return Warnings;

  })();

  exports.bufeq_fast = function(x, y) {
    var i, _i, _ref;
    if ((x == null) && (y == null)) {
      return true;
    }
    if ((x == null) || (y == null)) {
      return false;
    }
    if (x.length !== y.length) {
      return false;
    }
    for (i = _i = 0, _ref = x.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
      if (x.readUInt8(i) !== y.readUInt8(i)) {
        return false;
      }
    }
    return true;
  };

  exports.bufeq_secure = bufeq_secure = function(x, y) {
    var check, i, ret;
    ret = (function() {
      var _i, _ref;
      if ((x == null) && (y == null)) {
        return true;
      } else if ((x == null) || (y == null)) {
        return false;
      } else if (x.length !== y.length) {
        return false;
      } else {
        check = 0;
        for (i = _i = 0, _ref = x.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
          check |= x.readUInt8(i) ^ y.readUInt8(i);
        }
        return check === 0;
      }
    })();
    return ret;
  };

  exports.streq_secure = function(x, y) {
    var B;
    B = function(x) {
      if (x != null) {
        return bufferify(x);
      } else {
        return null;
      }
    };
    return bufeq_secure(B(x), B(y));
  };

  exports.bufferify = bufferify = function(s) {
    if (Buffer.isBuffer(s)) {
      return s;
    } else if (typeof s === 'string') {
      return new Buffer(s, 'utf8');
    } else {
      throw new Error("Cannot convert to buffer: " + s);
    }
  };

  exports.katch = katch = function(fn) {
    var e, err, ret;
    ret = err = null;
    try {
      ret = fn();
    } catch (_error) {
      e = _error;
      err = e;
    }
    return [err, ret];
  };

  exports.akatch = function(fn, cb) {
    return asyncify(katch(fn), cb);
  };

  exports.buffer_to_ui8a = buffer_to_ui8a = function(b) {
    var i, l, ret, _i;
    l = b.length;
    ret = new Uint8Array(l);
    for (i = _i = 0; 0 <= l ? _i < l : _i > l; i = 0 <= l ? ++_i : --_i) {
      ret[i] = b.readUInt8(i);
    }
    return ret;
  };

  exports.ui32a_to_ui8a = ui32a_to_ui8a = function(v, out) {
    var k, w, _i, _len;
    if (out == null) {
      out = null;
    }
    out || (out = new Uint8Array(v.length * 4));
    k = 0;
    for (_i = 0, _len = v.length; _i < _len; _i++) {
      w = v[_i];
      out[k++] = (w >> 24) & 0xff;
      out[k++] = (w >> 16) & 0xff;
      out[k++] = (w >> 8) & 0xff;
      out[k++] = w & 0xff;
    }
    return out;
  };

  exports.ui8a_to_ui32a = ui8Ga_to_ui32a = function(v, out) {
    var b, i, k, tmp, _i, _len;
    if (out == null) {
      out = null;
    }
    out || (out = new Uint32Array(v.length >> 2));
    k = 0;
    for (i = _i = 0, _len = v.length; _i < _len; i = _i += 4) {
      b = v[i];
      tmp = (b << 24) + (v[i + 1] << 16) + (v[i + 2] << 8) + v[i + 3];
      out[k++] = tmp;
    }
    return out;
  };

  exports.unix_time = function() {
    return Math.floor(Date.now() / 1000);
  };

  exports.json_stringify_sorted = function(o, opts) {
    var i, json_safe, lb, o2, sort_fn, space_it, spaces, str;
    opts = opts || {};
    sort_fn = opts.sort_fn || null;
    spaces = opts.spaces || null;
    lb = opts.spaces != null ? "\n" : "";
    if ((typeof spaces) === "number") {
      spaces = ((function() {
        var _i, _results;
        _results = [];
        for (i = _i = 0; 0 <= spaces ? _i < spaces : _i > spaces; i = 0 <= spaces ? ++_i : --_i) {
          _results.push(" ");
        }
        return _results;
      })()).join("");
    }
    space_it = function(depth) {
      if (spaces == null) {
        return "";
      }
      return "\n" + ((function() {
        var _i, _results;
        _results = [];
        for (i = _i = 0; 0 <= depth ? _i < depth : _i > depth; i = 0 <= depth ? ++_i : --_i) {
          _results.push(spaces);
        }
        return _results;
      })()).join("");
    };
    json_safe = function(os, depth) {
      var k, keys, s, sp, spp, v;
      if (Array.isArray(os)) {
        s = "[" + ((function() {
          var _i, _len, _results;
          _results = [];
          for (_i = 0, _len = os.length; _i < _len; _i++) {
            v = os[_i];
            _results.push(json_safe(v, depth + 1));
          }
          return _results;
        })()).join(',') + "]";
      } else if ((typeof os) === "object") {
        if (!os) {
          s = JSON.stringify(os);
        } else {
          sp = space_it(depth);
          spp = space_it(depth + 1);
          keys = (function() {
            var _results;
            _results = [];
            for (k in os) {
              _results.push(k);
            }
            return _results;
          })();
          if (sort_fn) {
            keys.sort(sort_fn);
          } else {
            keys.sort();
          }
          s = "{" + ((function() {
            var _i, _len, _results;
            _results = [];
            for (_i = 0, _len = keys.length; _i < _len; _i++) {
              k = keys[_i];
              _results.push(spp + JSON.stringify(k) + ":" + json_safe(os[k], depth + 1));
            }
            return _results;
          })()).join(',') + sp + "}";
        }
      } else {
        s = JSON.stringify(os);
      }
      return s;
    };
    str = JSON.stringify(o);
    if (str === void 0) {
      return str;
    } else {
      o2 = JSON.parse(str);
      return json_safe(o2, 0);
    }
  };

  exports.obj_extract = obj_extract = function(o, keys) {
    var k, ret, _i, _len;
    ret = {};
    for (_i = 0, _len = keys.length; _i < _len; _i++) {
      k = keys[_i];
      ret[k] = o[k];
    }
    return ret;
  };

  exports.base64u = {
    encode: function(b) {
      return b.toString('base64').replace(/\+/g, '-').replace(/\//g, '_').replace(/=+$/, '');
    },
    decode: function(b) {
      b = (b + Array(5 - b.length % 4).join('=')).replace(/\-/g, '+').replace(/\_/g, '/');
      return new Buffer(b, 'base64');
    },
    verify: function(b) {
      return /^[A-Za-z0-9\-_]+$/.test(b);
    }
  };

  exports.assert_no_nulls = assert_no_nulls = function(v) {
    var e, ok, _i, _len;
    ok = true;
    for (_i = 0, _len = v.length; _i < _len; _i++) {
      e = v[_i];
      if (e == null) {
        ok = false;
      }
    }
    if (!ok) {
      console.error("Found 1 or more nulls in vector: ");
      console.error(v);
      return assert(false);
    }
  };

  exports.athrow = function(err, cb) {
    return cb(err);
  };

  exports.asyncify = asyncify = function(args, cb) {
    return cb.apply(null, args);
  };

  exports.format_fingerprint = function(raw) {
    var hex, i, parts;
    hex = raw.toString('hex').toUpperCase();
    parts = (function() {
      var _i, _ref, _results;
      _results = [];
      for (i = _i = 0, _ref = hex.length; _i < _ref; i = _i += 4) {
        _results.push(hex.slice(i, i + 4));
      }
      return _results;
    })();
    return parts.join(' ');
  };

  exports.fingerprint_to_key_id_64 = function(fp) {
    return fp.slice(-16);
  };

  exports.strip = strip = function(x) {
    return x.split(/\s+/).join('');
  };

  exports.trim = trim = function(x) {
    var m;
    if ((m = x != null ? x.match(/^\s+(.*?)$/) : void 0)) {
      x = m[1];
    }
    if ((m = x != null ? x.match(/^(.*?)\s+$/) : void 0)) {
      x = m[1];
    }
    return x;
  };

  exports.fpeq = function(fp1, fp2) {
    return strip(fp1).toLowerCase() === strip(fp2).toLowerCase();
  };

  exports.xxd = xxd = function(buf, opts) {
    var i, line, lines, p, pad, q, quartets, v;
    if (opts == null) {
      opts = {};
    }
    q = opts.q || 8;
    p = opts.p || 7;
    buf = buf.toString('hex');
    quartets = (function() {
      var _i, _ref, _results;
      _results = [];
      for (i = _i = 0, _ref = buf.length; _i < _ref; i = _i += 4) {
        _results.push(buf.slice(i, i + 4));
      }
      return _results;
    })();
    lines = (function() {
      var _i, _ref, _results;
      _results = [];
      for (i = _i = 0, _ref = quartets.length; q > 0 ? _i < _ref : _i > _ref; i = _i += q) {
        _results.push(quartets.slice(i, i + q).join(' '));
      }
      return _results;
    })();
    pad = function(s, n) {
      return ((function() {
        var _i, _ref, _results;
        _results = [];
        for (_i = 0, _ref = n - s.length; 0 <= _ref ? _i < _ref : _i > _ref; 0 <= _ref ? _i++ : _i--) {
          _results.push('0');
        }
        return _results;
      })()).join('') + s;
    };
    v = (function() {
      var _i, _len, _results;
      _results = [];
      for (i = _i = 0, _len = lines.length; _i < _len; i = ++_i) {
        line = lines[i];
        _results.push(pad((i * 2 * q).toString(16), p) + ": " + line);
      }
      return _results;
    })();
    return v.join("\n");
  };

}).call(this);
 at SyntaxError: Unexpected token (11:9)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1822:12)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1597:21)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/keybase-installer/node_modules/keybase-installer/lib/top.js. Coverage (Term): 44% Coverage (LOC): 57%
*- File /root/Targets/keybase-installer/node_modules/keybase-installer/lib/key_setup.js. Coverage (Term): 3% Coverage (LOC): 2%
*- File /root/Targets/keybase-installer/node_modules/keybase-installer/node_modules/iced-runtime/lib/main.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/keybase-installer/node_modules/keybase-installer/node_modules/iced-runtime/lib/const.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/keybase-installer/node_modules/keybase-installer/node_modules/iced-runtime/lib/runtime.js. Coverage (Term): 19% Coverage (LOC): 31%
*- File /root/Targets/keybase-installer/node_modules/keybase-installer/node_modules/iced-runtime/lib/library.js. Coverage (Term): 9% Coverage (LOC): 13%
*- File /root/Targets/keybase-installer/node_modules/keybase-installer/node_modules/gpg-wrapper/lib/main.js. Coverage (Term): 35% Coverage (LOC): 31%
*- File /root/Targets/keybase-installer/node_modules/keybase-installer/node_modules/gpg-wrapper/lib/err.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/keybase-installer/node_modules/keybase-installer/node_modules/iced-error/index.js. Coverage (Term): 34% Coverage (LOC): 47%
*- File /root/Targets/keybase-installer/node_modules/keybase-installer/node_modules/gpg-wrapper/lib/gpg.js. Coverage (Term): 5% Coverage (LOC): 3%
*- File /root/Targets/keybase-installer/node_modules/keybase-installer/node_modules/gpg-wrapper/lib/colgrep.js. Coverage (Term): 14% Coverage (LOC): 15%
*- File /root/Targets/keybase-installer/node_modules/keybase-installer/node_modules/pgp-utils/lib/main.js. Coverage (Term): 54% Coverage (LOC): 67%
*- File /root/Targets/keybase-installer/node_modules/keybase-installer/node_modules/pgp-utils/lib/armor.js. Coverage (Term): 2% Coverage (LOC): 1%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
