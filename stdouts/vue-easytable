
> uglifyjs-webpack-plugin@0.4.6 postinstall /root/Targets/vue-easytable/node_modules/uglifyjs-webpack-plugin
> node lib/post_install.js

/root/Targets/vue-easytable
└─┬ vue-easytable@1.1.4 
  ├── UNMET PEER DEPENDENCY css-loader@*
  ├── nprogress@0.2.0 
  ├── vue@2.4.4 
  ├─┬ vue-loader@12.2.2 
  │ ├─┬ consolidate@0.14.5 
  │ │ └── bluebird@3.5.0 
  │ ├── hash-sum@1.0.2 
  │ ├─┬ js-beautify@1.7.3 
  │ │ ├─┬ config-chain@1.1.11 
  │ │ │ ├── ini@1.3.4 
  │ │ │ └── proto-list@1.2.4 
  │ │ ├─┬ editorconfig@0.13.3 
  │ │ │ ├── commander@2.11.0 
  │ │ │ ├── lru-cache@3.2.0 
  │ │ │ ├── semver@5.4.1 
  │ │ │ └── sigmund@1.0.1 
  │ │ └─┬ nopt@3.0.6 
  │ │   └── abbrev@1.1.0 
  │ ├─┬ loader-utils@1.1.0 
  │ │ ├── big.js@3.2.0 
  │ │ └── emojis-list@2.1.0 
  │ ├─┬ lru-cache@4.1.1 
  │ │ ├── pseudomap@1.0.2 
  │ │ └── yallist@2.1.2 
  │ ├─┬ postcss@5.2.17 
  │ │ ├─┬ chalk@1.1.3 
  │ │ │ ├── ansi-styles@2.2.1 
  │ │ │ ├── escape-string-regexp@1.0.5 
  │ │ │ ├── has-ansi@2.0.0 
  │ │ │ └── supports-color@2.0.0 
  │ │ ├── js-base64@2.3.2 
  │ │ └─┬ supports-color@3.2.3 
  │ │   └── has-flag@1.0.0 
  │ ├─┬ postcss-load-config@1.2.0 
  │ │ ├─┬ cosmiconfig@2.2.2 
  │ │ │ ├── is-directory@0.3.1 
  │ │ │ ├─┬ js-yaml@3.10.0 
  │ │ │ │ ├─┬ argparse@1.0.9 
  │ │ │ │ │ └── sprintf-js@1.0.3 
  │ │ │ │ └── esprima@4.0.0 
  │ │ │ ├── minimist@1.2.0 
  │ │ │ ├── os-homedir@1.0.2 
  │ │ │ ├─┬ parse-json@2.2.0 
  │ │ │ │ └─┬ error-ex@1.3.1 
  │ │ │ │   └── is-arrayish@0.2.1 
  │ │ │ └── require-from-string@1.2.1 
  │ │ ├── object-assign@4.1.1 
  │ │ ├── postcss-load-options@1.2.0 
  │ │ └── postcss-load-plugins@2.3.0 
  │ ├─┬ postcss-selector-parser@2.2.3 
  │ │ ├── flatten@1.0.2 
  │ │ ├── indexes-of@1.0.1 
  │ │ └── uniq@1.0.1 
  │ ├─┬ resolve@1.4.0 
  │ │ └── path-parse@1.0.5 
  │ ├── source-map@0.5.7 
  │ ├── vue-hot-reload-api@2.1.0 
  │ └── vue-template-es2015-compiler@1.5.3 
  ├── vue-router@2.7.0 
  ├── vue-style-loader@3.0.3 
  ├─┬ vue-template-compiler@2.4.4 
  │ ├── de-indent@1.0.2 
  │ └── he@1.1.1 
  ├─┬ webpack@3.6.0 
  │ ├── acorn@5.1.2 
  │ ├─┬ acorn-dynamic-import@2.0.2 
  │ │ └── acorn@4.0.13 
  │ ├─┬ ajv@5.2.3 
  │ │ ├── co@4.6.0 
  │ │ ├── fast-deep-equal@1.0.0 
  │ │ ├── json-schema-traverse@0.3.1 
  │ │ └─┬ json-stable-stringify@1.0.1 
  │ │   └── jsonify@0.0.0 
  │ ├── ajv-keywords@2.1.0 
  │ ├─┬ async@2.5.0 
  │ │ └── lodash@4.17.4 
  │ ├─┬ enhanced-resolve@3.4.1 
  │ │ └── graceful-fs@4.1.11 
  │ ├─┬ escope@3.6.0 
  │ │ ├─┬ es6-map@0.1.5 
  │ │ │ ├── d@1.0.0 
  │ │ │ ├── es5-ext@0.10.30 
  │ │ │ ├── es6-iterator@2.0.1 
  │ │ │ ├── es6-set@0.1.5 
  │ │ │ ├── es6-symbol@3.1.1 
  │ │ │ └── event-emitter@0.3.5 
  │ │ ├── es6-weak-map@2.0.2 
  │ │ ├── esrecurse@4.2.0 
  │ │ └── estraverse@4.2.0 
  │ ├── interpret@1.0.4 
  │ ├── json-loader@0.5.7 
  │ ├── json5@0.5.1 
  │ ├── loader-runner@2.3.0 
  │ ├─┬ memory-fs@0.4.1 
  │ │ ├─┬ errno@0.1.4 
  │ │ │ └── prr@0.0.0 
  │ │ └─┬ readable-stream@2.3.3 
  │ │   ├── core-util-is@1.0.2 
  │ │   ├── isarray@1.0.0 
  │ │   ├── process-nextick-args@1.0.7 
  │ │   ├── string_decoder@1.0.3 
  │ │   └── util-deprecate@1.0.2 
  │ ├─┬ mkdirp@0.5.1 
  │ │ └── minimist@0.0.8 
  │ ├─┬ node-libs-browser@2.0.0 
  │ │ ├── assert@1.4.1 
  │ │ ├─┬ browserify-zlib@0.1.4 
  │ │ │ └── pako@0.2.9 
  │ │ ├─┬ buffer@4.9.1 
  │ │ │ ├── base64-js@1.2.1 
  │ │ │ └── ieee754@1.1.8 
  │ │ ├─┬ console-browserify@1.1.0 
  │ │ │ └── date-now@0.1.4 
  │ │ ├── constants-browserify@1.0.0 
  │ │ ├─┬ crypto-browserify@3.11.1 
  │ │ │ ├─┬ browserify-cipher@1.0.0 
  │ │ │ │ ├─┬ browserify-aes@1.0.8 
  │ │ │ │ │ └── buffer-xor@1.0.3 
  │ │ │ │ ├─┬ browserify-des@1.0.0 
  │ │ │ │ │ └── des.js@1.0.0 
  │ │ │ │ └─┬ evp_bytestokey@1.0.3 
  │ │ │ │   └─┬ md5.js@1.3.4 
  │ │ │ │     └── hash-base@3.0.4 
  │ │ │ ├─┬ browserify-sign@4.0.4 
  │ │ │ │ ├── bn.js@4.11.8 
  │ │ │ │ ├── browserify-rsa@4.0.1 
  │ │ │ │ ├─┬ elliptic@6.4.0 
  │ │ │ │ │ ├── brorand@1.1.0 
  │ │ │ │ │ ├── hash.js@1.1.3 
  │ │ │ │ │ ├── hmac-drbg@1.0.1 
  │ │ │ │ │ └── minimalistic-crypto-utils@1.0.1 
  │ │ │ │ └─┬ parse-asn1@5.1.0 
  │ │ │ │   └── asn1.js@4.9.1 
  │ │ │ ├── create-ecdh@4.0.0 
  │ │ │ ├─┬ create-hash@1.1.3 
  │ │ │ │ ├── cipher-base@1.0.4 
  │ │ │ │ ├─┬ ripemd160@2.0.1 
  │ │ │ │ │ └── hash-base@2.0.2 
  │ │ │ │ └── sha.js@2.4.9 
  │ │ │ ├── create-hmac@1.1.6 
  │ │ │ ├─┬ diffie-hellman@5.0.2 
  │ │ │ │ └── miller-rabin@4.0.0 
  │ │ │ ├── pbkdf2@3.0.14 
  │ │ │ ├── public-encrypt@4.0.0 
  │ │ │ └── randombytes@2.0.5 
  │ │ ├── domain-browser@1.1.7 
  │ │ ├── events@1.1.1 
  │ │ ├── https-browserify@0.0.1 
  │ │ ├── os-browserify@0.2.1 
  │ │ ├── path-browserify@0.0.0 
  │ │ ├── process@0.11.10 
  │ │ ├── punycode@1.4.1 
  │ │ ├── querystring-es3@0.2.1 
  │ │ ├── stream-browserify@2.0.1 
  │ │ ├─┬ stream-http@2.7.2 
  │ │ │ ├── builtin-status-codes@3.0.0 
  │ │ │ ├── to-arraybuffer@1.0.1 
  │ │ │ └── xtend@4.0.1 
  │ │ ├── string_decoder@0.10.31 
  │ │ ├─┬ timers-browserify@2.0.4 
  │ │ │ └── setimmediate@1.0.5 
  │ │ ├── tty-browserify@0.0.0 
  │ │ ├─┬ url@0.11.0 
  │ │ │ ├── punycode@1.3.2 
  │ │ │ └── querystring@0.2.0 
  │ │ ├─┬ util@0.10.3 
  │ │ │ └── inherits@2.0.1 
  │ │ └─┬ vm-browserify@0.0.4 
  │ │   └── indexof@0.0.1 
  │ ├─┬ supports-color@4.4.0 
  │ │ └── has-flag@2.0.0 
  │ ├── tapable@0.2.8 
  │ ├─┬ uglifyjs-webpack-plugin@0.4.6 
  │ │ └─┬ uglify-js@2.8.29 
  │ │   ├── uglify-to-browserify@1.0.2 
  │ │   └─┬ yargs@3.10.0 
  │ │     ├── camelcase@1.2.1 
  │ │     ├─┬ cliui@2.1.0 
  │ │     │ ├─┬ center-align@0.1.3 
  │ │     │ │ ├─┬ align-text@0.1.4 
  │ │     │ │ │ └── longest@1.0.1 
  │ │     │ │ └── lazy-cache@1.0.4 
  │ │     │ ├── right-align@0.1.3 
  │ │     │ └── wordwrap@0.0.2 
  │ │     └── window-size@0.1.0 
  │ ├── watchpack@1.4.0 
  │ ├─┬ webpack-sources@1.0.1 
  │ │ └── source-list-map@2.0.0 
  │ └─┬ yargs@8.0.2 
  │   ├── camelcase@4.1.0 
  │   ├─┬ cliui@3.2.0 
  │   │ ├── string-width@1.0.2 
  │   │ └─┬ wrap-ansi@2.1.0 
  │   │   └── string-width@1.0.2 
  │   ├── decamelize@1.2.0 
  │   ├── get-caller-file@1.0.2 
  │   ├─┬ os-locale@2.1.0 
  │   │ ├─┬ execa@0.7.0 
  │   │ │ ├─┬ cross-spawn@5.1.0 
  │   │ │ │ ├─┬ shebang-command@1.2.0 
  │   │ │ │ │ └── shebang-regex@1.0.0 
  │   │ │ │ └─┬ which@1.3.0 
  │   │ │ │   └── isexe@2.0.0 
  │   │ │ ├── get-stream@3.0.0 
  │   │ │ ├── is-stream@1.1.0 
  │   │ │ ├─┬ npm-run-path@2.0.2 
  │   │ │ │ └── path-key@2.0.1 
  │   │ │ ├── p-finally@1.0.0 
  │   │ │ ├── signal-exit@3.0.2 
  │   │ │ └── strip-eof@1.0.0 
  │   │ ├─┬ lcid@1.0.0 
  │   │ │ └── invert-kv@1.0.0 
  │   │ └─┬ mem@1.1.0 
  │   │   └── mimic-fn@1.1.0 
  │   ├─┬ read-pkg-up@2.0.0 
  │   │ ├─┬ find-up@2.1.0 
  │   │ │ └─┬ locate-path@2.0.0 
  │   │ │   ├─┬ p-locate@2.0.0 
  │   │ │   │ └── p-limit@1.1.0 
  │   │ │   └── path-exists@3.0.0 
  │   │ └─┬ read-pkg@2.0.0 
  │   │   ├─┬ load-json-file@2.0.0 
  │   │   │ └── strip-bom@3.0.0 
  │   │   ├─┬ normalize-package-data@2.4.0 
  │   │   │ ├── hosted-git-info@2.5.0 
  │   │   │ ├─┬ is-builtin-module@1.0.0 
  │   │   │ │ └── builtin-modules@1.1.1 
  │   │   │ └─┬ validate-npm-package-license@3.0.1 
  │   │   │   ├─┬ spdx-correct@1.0.2 
  │   │   │   │ └── spdx-license-ids@1.2.2 
  │   │   │   └── spdx-expression-parse@1.0.4 
  │   │   └── path-type@2.0.0 
  │   ├── require-directory@2.1.1 
  │   ├── require-main-filename@1.0.1 
  │   ├── set-blocking@2.0.0 
  │   ├─┬ string-width@2.1.1 
  │   │ ├── is-fullwidth-code-point@2.0.0 
  │   │ └─┬ strip-ansi@4.0.0 
  │   │   └── ansi-regex@3.0.0 
  │   ├── which-module@2.0.0 
  │   ├── y18n@3.2.1 
  │   └─┬ yargs-parser@7.0.0 
  │     └── camelcase@4.1.0 
  ├── webpack-chunk-hash@0.4.0 
  └─┬ webpack-dev-server@2.8.2 
    ├── ansi-html@0.0.7 
    ├─┬ array-includes@3.0.3 
    │ ├─┬ define-properties@1.1.2 
    │ │ ├── foreach@2.0.5 
    │ │ └── object-keys@1.0.11 
    │ └─┬ es-abstract@1.8.2 
    │   ├─┬ es-to-primitive@1.1.1 
    │   │ ├── is-date-object@1.0.1 
    │   │ └── is-symbol@1.0.1 
    │   ├── function-bind@1.1.1 
    │   ├── has@1.0.1 
    │   ├── is-callable@1.1.3 
    │   └── is-regex@1.0.4 
    ├─┬ bonjour@3.5.0 
    │ ├── array-flatten@2.1.1 
    │ ├── deep-equal@1.0.1 
    │ ├── dns-equal@1.0.0 
    │ ├─┬ dns-txt@2.0.2 
    │ │ └── buffer-indexof@1.1.1 
    │ ├─┬ multicast-dns@6.1.1 
    │ │ ├── dns-packet@1.2.2 
    │ │ └── thunky@0.1.0 
    │ └── multicast-dns-service-types@1.1.0 
    ├─┬ chokidar@1.7.0 
    │ ├─┬ anymatch@1.3.2 
    │ │ └─┬ normalize-path@2.1.1 
    │ │   └── remove-trailing-separator@1.1.0 
    │ ├── async-each@1.0.1 
    │ ├── glob-parent@2.0.0 
    │ ├── inherits@2.0.3 
    │ ├─┬ is-binary-path@1.0.1 
    │ │ └── binary-extensions@1.10.0 
    │ ├─┬ is-glob@2.0.1 
    │ │ └── is-extglob@1.0.0 
    │ ├── path-is-absolute@1.0.1 
    │ └─┬ readdirp@2.1.0 
    │   ├─┬ minimatch@3.0.4 
    │   │ └─┬ brace-expansion@1.1.8 
    │   │   ├── balanced-match@1.0.0 
    │   │   └── concat-map@0.0.1 
    │   └── set-immediate-shim@1.0.1 
    ├─┬ compression@1.7.0 
    │ ├─┬ accepts@1.3.4 
    │ │ └── negotiator@0.6.1 
    │ ├── bytes@2.5.0 
    │ ├─┬ compressible@2.0.11 
    │ │ └── mime-db@1.30.0 
    │ ├─┬ debug@2.6.8 
    │ │ └── ms@2.0.0 
    │ ├── on-headers@1.0.1 
    │ ├── safe-buffer@5.1.1 
    │ └── vary@1.1.2 
    ├── connect-history-api-fallback@1.3.0 
    ├─┬ del@3.0.0 
    │ ├─┬ globby@6.1.0 
    │ │ ├─┬ array-union@1.0.2 
    │ │ │ └── array-uniq@1.0.3 
    │ │ ├─┬ glob@7.1.2 
    │ │ │ ├── fs.realpath@1.0.0 
    │ │ │ ├─┬ inflight@1.0.6 
    │ │ │ │ └── wrappy@1.0.2 
    │ │ │ └── once@1.4.0 
    │ │ ├── pify@2.3.0 
    │ │ └─┬ pinkie-promise@2.0.1 
    │ │   └── pinkie@2.0.4 
    │ ├── is-path-cwd@1.0.0 
    │ ├─┬ is-path-in-cwd@1.0.0 
    │ │ └─┬ is-path-inside@1.0.0 
    │ │   └── path-is-inside@1.0.2 
    │ ├── p-map@1.2.0 
    │ ├── pify@3.0.0 
    │ └── rimraf@2.6.2 
    ├─┬ express@4.15.5 
    │ ├── array-flatten@1.1.1 
    │ ├── content-disposition@0.5.2 
    │ ├── content-type@1.0.4 
    │ ├── cookie@0.3.1 
    │ ├── cookie-signature@1.0.6 
    │ ├── debug@2.6.9 
    │ ├── depd@1.1.1 
    │ ├── encodeurl@1.0.1 
    │ ├── escape-html@1.0.3 
    │ ├── etag@1.8.1 
    │ ├─┬ finalhandler@1.0.6 
    │ │ ├── debug@2.6.9 
    │ │ └── unpipe@1.0.0 
    │ ├── fresh@0.5.2 
    │ ├── merge-descriptors@1.0.1 
    │ ├── methods@1.1.2 
    │ ├─┬ on-finished@2.3.0 
    │ │ └── ee-first@1.1.1 
    │ ├── parseurl@1.3.2 
    │ ├── path-to-regexp@0.1.7 
    │ ├─┬ proxy-addr@1.1.5 
    │ │ ├── forwarded@0.1.2 
    │ │ └── ipaddr.js@1.4.0 
    │ ├── qs@6.5.0 
    │ ├── range-parser@1.2.0 
    │ ├─┬ send@0.15.6 
    │ │ ├── debug@2.6.9 
    │ │ └── destroy@1.0.4 
    │ ├── serve-static@1.12.6 
    │ ├── setprototypeof@1.0.3 
    │ ├── statuses@1.3.1 
    │ ├─┬ type-is@1.6.15 
    │ │ └── media-typer@0.3.0 
    │ └── utils-merge@1.0.0 
    ├── html-entities@1.2.1 
    ├─┬ http-proxy-middleware@0.17.4 
    │ ├─┬ http-proxy@1.16.2 
    │ │ ├── eventemitter3@1.2.0 
    │ │ └── requires-port@1.0.0 
    │ ├─┬ is-glob@3.1.0 
    │ │ └── is-extglob@2.1.1 
    │ └─┬ micromatch@2.3.11 
    │   ├─┬ arr-diff@2.0.0 
    │   │ └── arr-flatten@1.1.0 
    │   ├── array-unique@0.2.1 
    │   ├─┬ braces@1.8.5 
    │   │ ├─┬ expand-range@1.8.2 
    │   │ │ └─┬ fill-range@2.2.3 
    │   │ │   ├── is-number@2.1.0 
    │   │ │   ├── isobject@2.1.0 
    │   │ │   ├─┬ randomatic@1.1.7 
    │   │ │   │ ├─┬ is-number@3.0.0 
    │   │ │   │ │ └── kind-of@3.2.2 
    │   │ │   │ └── kind-of@4.0.0 
    │   │ │   └── repeat-string@1.6.1 
    │   │ ├── preserve@0.2.0 
    │   │ └── repeat-element@1.1.2 
    │   ├─┬ expand-brackets@0.1.5 
    │   │ └── is-posix-bracket@0.1.1 
    │   ├── extglob@0.3.2 
    │   ├── filename-regex@2.0.1 
    │   ├─┬ kind-of@3.2.2 
    │   │ └── is-buffer@1.1.5 
    │   ├─┬ object.omit@2.0.1 
    │   │ ├─┬ for-own@0.1.5 
    │   │ │ └── for-in@1.0.2 
    │   │ └── is-extendable@0.1.1 
    │   ├─┬ parse-glob@3.0.4 
    │   │ ├── glob-base@0.3.0 
    │   │ └── is-dotfile@1.0.3 
    │   └─┬ regex-cache@0.4.4 
    │     └─┬ is-equal-shallow@0.1.3 
    │       └── is-primitive@2.0.0 
    ├─┬ internal-ip@2.0.3 
    │ ├─┬ default-gateway@2.5.0 
    │ │ └── ip-regex@2.1.0 
    │ └── ipaddr.js@1.5.2 
    ├── ip@1.1.5 
    ├── loglevel@1.5.0 
    ├─┬ opn@5.1.0 
    │ └── is-wsl@1.1.0 
    ├─┬ portfinder@1.0.13 
    │ └── async@1.5.2 
    ├─┬ selfsigned@1.10.1 
    │ └── node-forge@0.6.33 
    ├─┬ serve-index@1.9.0 
    │ ├── batch@0.6.1 
    │ ├── http-errors@1.6.2 
    │ └── mime-types@2.1.17 
    ├─┬ sockjs@0.3.18 
    │ ├─┬ faye-websocket@0.10.0 
    │ │ └─┬ websocket-driver@0.7.0 
    │ │   ├── http-parser-js@0.4.8 
    │ │   └── websocket-extensions@0.1.2 
    │ └── uuid@2.0.3 
    ├─┬ sockjs-client@1.1.4 
    │ ├─┬ eventsource@0.1.6 
    │ │ └─┬ original@1.0.0 
    │ │   └─┬ url-parse@1.0.5 
    │ │     └── querystringify@0.0.4 
    │ ├── faye-websocket@0.11.1 
    │ ├── json3@3.3.2 
    │ └─┬ url-parse@1.1.9 
    │   └── querystringify@1.0.0 
    ├─┬ spdy@3.4.7 
    │ ├── handle-thing@1.2.5 
    │ ├── http-deceiver@1.2.7 
    │ ├── select-hose@2.0.0 
    │ └─┬ spdy-transport@2.0.20 
    │   ├── detect-node@2.0.3 
    │   ├── hpack.js@2.1.6 
    │   ├── obuf@1.1.1 
    │   └─┬ wbuf@1.7.2 
    │     └── minimalistic-assert@1.0.0 
    ├─┬ strip-ansi@3.0.1 
    │ └── ansi-regex@2.1.1 
    ├─┬ supports-color@4.4.0 
    │ └── has-flag@2.0.0 
    ├─┬ webpack-dev-middleware@1.12.0 
    │ ├── mime@1.3.4 
    │ └── time-stamp@2.0.0 
    └─┬ yargs@6.6.0 
      ├── camelcase@3.0.0 
      ├── cliui@3.2.0 
      ├── os-locale@1.4.0 
      ├─┬ read-pkg-up@1.0.1 
      │ ├─┬ find-up@1.1.2 
      │ │ └── path-exists@2.1.0 
      │ └─┬ read-pkg@1.1.0 
      │   ├─┬ load-json-file@1.1.0 
      │   │ └─┬ strip-bom@2.0.0 
      │   │   └── is-utf8@0.2.1 
      │   └── path-type@1.1.0 
      ├─┬ string-width@1.0.2 
      │ ├── code-point-at@1.1.0 
      │ └─┬ is-fullwidth-code-point@1.0.0 
      │   └── number-is-nan@1.0.1 
      ├── which-module@1.0.0 
      └── yargs-parser@4.2.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/vue-easytable/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 34% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0401 took 2.068s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (1:78) on program <template>
    <div class="v-table-views v-table-class" :style="{'width': internalWidth+'px', 'height': getTableHeight+'px'}">
        <!--左列-->
        <template v-if="frozenCols.length > 0">
            <div class="v-table-leftview" :style="{'width':leftViewWidth+'px'}">
                <!--左列头-->
                <div class="v-table-header v-table-title-class"
                     :style="{'width': leftViewWidth+'px','background-color':titleBgColor}">
                    <div class="v-table-header-inner" style="display: block;">
                        <table class="v-table-htable" border="0" cellspacing="0" cellpadding="0">
                            <tbody>

                            <template v-if="frozenTitleCols.length > 0">
                                <tr v-for="row in frozenTitleCols">
                                    <td v-for="col in row"
                                        :class="[enableSort(col.orderBy) ? 'cursorPointer':'',col.titleCellClassName]"
                                        :colspan="col.colspan" :rowspan="col.rowspan"
                                        @click.stop="sortControl(col.fields[0],col.orderBy)"
                                        @mousemove.stop="handleTitleMouseMove($event,col.fields)"
                                        @mousedown.stop="handleTitleMouseDown($event)"
                                        @mouseout.stop="handleTitleMouseOut()">
                                        <div :class="['v-table-title-cell',showVerticalBorder?'vertical-border':'',showHorizontalBorder?'horizontal-border':'']"
                                             :style="{'width':titleColumnWidth(col.fields)+'px','height':titleColumnHeight(col.rowspan)+'px','text-align':col.titleAlign}">
                                            <span class="table-title" v-html="col.title"></span>
                                            <span class="v-table-sort-icon" v-if="enableSort(col.orderBy)">
                                                    <i :class='["v-icon-up-dir",col.orderBy ==="asc" ? "checked":""]'></i>
                                                    <i :class='["v-icon-down-dir",col.orderBy ==="desc" ? "checked":""]'></i>
                                            </span>
                                        </div>
                                    </td>
                                </tr>
                            </template>

                            <template v-else>
                                <tr class="v-table-header-row">
                                    <td v-for="col in frozenCols"
                                        :class="[enableSort(col.orderBy) ? 'cursorPointer':'',col.titleCellClassName]"
                                        @click.stop="sortControl(col.field,col.orderBy)"
                                        @mousemove.stop="handleTitleMouseMove($event,col.field)"
                                        @mousedown.stop="handleTitleMouseDown($event)"
                                        @mouseout.stop="handleTitleMouseOut()">
                                        <div :class="['v-table-title-cell',showVerticalBorder?'vertical-border':'',showHorizontalBorder?'horizontal-border':'']"
                                             :style="{'width':col.width+'px','height':titleRowHeight+'px','text-align':col.titleAlign}">
                                            <span class="table-title" v-html="col.title"></span>
                                            <span class="v-table-sort-icon" v-if="enableSort(col.orderBy)">
                                                    <i :class='["v-icon-up-dir",col.orderBy ==="asc" ? "checked":""]'></i>
                                                    <i :class='["v-icon-down-dir",col.orderBy ==="desc" ? "checked":""]'></i>
                                        </span>
                                        </div>
                                    </td>
                                </tr>
                            </template>
                            </tbody>
                        </table>
                    </div>
                </div>
                <!--左列内容-->
                <div class="v-table-body v-table-body-class"
                     :style="{'width': leftViewWidth+'px', 'height': bodyViewHeight+'px'}">
                    <div class="v-table-body-inner">
                        <table class="v-table-btable" cellspacing="0" cellpadding="0" border="0">
                            <tbody>
                            <tr v-for="(item,rowIndex) in internalTableData" class="v-table-row"
                                :style="[trBgColor(rowIndex+1),setRowHoverColor(item.__mouseenter__),setRowClickColor(item.__columnCellClick__)]"
                                @mouseenter.stop="handleMouseEnter(rowIndex)"
                                @mouseleave.stop="handleMouseOut(rowIndex)">
                                <td v-for="col in frozenCols"
                                    :class="[setColumnCellClassName(rowIndex,col.field,item)]">
                                    <div :class="['v-table-body-cell',showVerticalBorder ? 'vertical-border':'',showHorizontalBorder?'horizontal-border':'']"
                                         :style="{'width':col.width+'px','height': rowHeight+'px','line-height':rowHeight+'px','text-align':col.columnAlign}"
                                         :title="col.overflowTitle ?  overflowTitle(item,col) :''"
                                         @click.stop="onCellClick(rowIndex,item,col)"
                                    >
                                        <template
                                                v-if="typeof col.componentName ==='string' && col.componentName.length > 0">
                                            <component :rowData="item" :field="col.field ? col.field : ''"
                                                       :index="rowIndex"
                                                       :is="col.componentName"></component>
                                        </template>
                                        <template v-else>
                                                   <span v-if="typeof col.formatter==='function'"
                                                         v-html="col.formatter(item,rowIndex,pagingIndex,col.field)">
                                                    </span>
                                            <span v-else>
                                                        {{item[col.field]}}
                                                    </span>
                                        </template>
                                    </div>
                                </td>
                            </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </template>
        <!--右列-->
        <div class="v-table-rightview"
             :style="{'width': rightViewWidth+'px'}">
            <!--右列头-->
            <div class="v-table-header v-table-title-class"
                 :style="{'width': (rightViewWidth-1)+'px','background-color':titleBgColor}">
                <div class="v-table-header-inner" style="display: block;">
                    <table class="v-table-htable" border="0" cellspacing="0" cellpadding="0">
                        <tbody>

                        <template v-if="noFrozenTitleCols.length > 0">
                            <tr v-for="row in noFrozenTitleCols">
                                <td v-for="col in row"
                                    :class="[enableSort(col.orderBy) ? 'cursorPointer':'',col.titleCellClassName]"
                                    :colspan="col.colspan" :rowspan="col.rowspan"
                                    @click.stop="sortControl(col.fields[0],col.orderBy)"
                                    @mousemove.stop="handleTitleMouseMove($event,col.fields)"
                                    @mousedown.stop="handleTitleMouseDown($event)"
                                    @mouseout.stop="handleTitleMouseOut()">
                                    <div :class="['v-table-title-cell',showVerticalBorder?'vertical-border':'',showHorizontalBorder?'horizontal-border':'']"
                                         :style="{'width':titleColumnWidth(col.fields)+'px','height':titleColumnHeight(col.rowspan)+'px','text-align':col.titleAlign}">
                                        <span class="table-title" v-html="col.title"></span>
                                        <span class="v-table-sort-icon" v-if="enableSort(col.orderBy)">
                                                    <i :class='["v-icon-up-dir",col.orderBy ==="asc" ? "checked":""]'></i>
                                                    <i :class='["v-icon-down-dir",col.orderBy ==="desc" ? "checked":""]'></i>
                                        </span>

                                    </div>
                                </td>
                            </tr>
                        </template>

                        <template v-else>
                            <tr class="v-table-header-row">
                                <td v-for="(col,colIndex) in noFrozenCols"
                                    :class="[enableSort(col.orderBy) ? 'cursorPointer':'',col.titleCellClassName]"
                                    @click.stop="sortControl(col.field,col.orderBy)"
                                    @mousemove.stop="handleTitleMouseMove($event,col.field)"
                                    @mousedown.stop="handleTitleMouseDown($event)"
                                    @mouseout.stop="handleTitleMouseOut()">
                                    <div :class="['v-table-title-cell',showVerticalBorder?'vertical-border':'',showHorizontalBorder?'horizontal-border':'']"
                                         :style="{'width':col.width+'px','height':titleRowHeight+'px','text-align':col.titleAlign}">
                                        <span class="table-title" v-html="col.title"></span>
                                        <span class="v-table-sort-icon" v-if="enableSort(col.orderBy)">
                                                    <i :class='["v-icon-up-dir",col.orderBy ==="asc" ? "checked":""]'></i>
                                                    <i :class='["v-icon-down-dir",col.orderBy ==="desc" ? "checked":""]'></i>
                                        </span>
                                    </div>
                                </td>
                            </tr>
                        </template>
                        </tbody>
                    </table>
                </div>
            </div>
            <!--右列内容-->
            <div :class="['v-table-body v-table-body-class',hasFrozenColumn ? '' : 'v-table-rightview-special-border']"
                 :style="{'width': rightViewWidth+'px', 'height': bodyViewHeight+'px'}">
                <table class="v-table-btable" cellspacing="0" cellpadding="0" border="0">
                    <tbody>
                    <tr v-for="(item,rowIndex) in internalTableData" class="v-table-row"
                        :style="[trBgColor(rowIndex+1),setRowHoverColor(item.__mouseenter__),setRowClickColor(item.__columnCellClick__)]"
                        @mouseenter.stop="handleMouseEnter(rowIndex)"
                        @mouseleave.stop="handleMouseOut(rowIndex)"
                    >
                        <td v-for="(col,colIndex) in noFrozenCols"
                            :class="[setColumnCellClassName(rowIndex,col.field,item)]">
                            <div :class="['v-table-body-cell',showVerticalBorder ? 'vertical-border':'',showHorizontalBorder?'horizontal-border':'']"
                                 :style="{'width':col.width+'px','height': rowHeight+'px','line-height':rowHeight+'px','text-align':col.columnAlign}"
                                 :title="col.overflowTitle ?  overflowTitle(item,col) :''"
                                 @click.stop="onCellClick(rowIndex,item,col)"
                            >
                                <template v-if="typeof col.componentName ==='string' && col.componentName.length > 0">
                                    <component :rowData="item" :field="col.field ? col.field : ''" :index="rowIndex"
                                               :is="col.componentName"></component>
                                </template>
                                <template v-else>
                                           <span v-if="typeof col.formatter==='function'"
                                                 v-html="col.formatter(item,rowIndex,pagingIndex,col.field)">
                                            </span>
                                    <span v-else>
                                                {{item[col.field]}}
                                            </span>
                                </template>
                            </div>
                        </td>
                    </tr>
                    </tbody>
                </table>
            </div>
        </div>

        <table-empty v-if="isTableEmpty"
                     :width="internalWidth"
                     :totalColumnsWidth="totalColumnsWidth"
                     :contentHeight="errorContentHeight"
                     :titleHeight="getTotalColumnsHeight()"
                     :errorContent="errorContent"
                     :isLoading="isLoading"
        ></table-empty>

        <loading
                v-if="isLoading"
                :loadingContent="loadingContent"
        ></loading>

        <!--列拖动时的线条-->
        <div v-show="isDragging" class="v-table-drag-line"></div>
    </div>
</template>

<script>

    import scrollControlMixin from './scrollControlMixin.js'
    import frozenColumnsMixin from './frozenColumnsMixin.js'
    import tableResizeMixin from './tableResizeMixin.js'
    import sortControlMixin from './sortControlMixin.js'
    import tableEmptyMixin from './tableEmptyMixin.js'
    import dragWidthMixin from './dragWidthMixin.js'
    import utils from '../../src/utils/utils.js'
    import deepClone from '../../src/utils/deepClone.js'

    import tableEmpty from './tableEmpty.vue'
    import loading from './loading.vue'

    export default {
        name: 'v-table',
        mixins: [tableResizeMixin, frozenColumnsMixin, scrollControlMixin, sortControlMixin, tableEmptyMixin,dragWidthMixin],
        components: {tableEmpty, loading},
        data(){
            return {
                // 本地列表数据
                internalTableData: [],

                // 本地宽度
                internalWidth: 0,

                // 本地高度
                internalHeight: 0,

                // 本地列数据
                internalColumns: [],
                // 本地复杂表头数据
                internalTitleRows: [],

                errorMsg: ' V-Table error: ',

                // 最大宽度（当width:'max'时）
                maxWidth: 5000,

                hasFrozenColumn: false,// 是否拥有固定列（false时最后一列的右边border无边框）

                hasBindScrollEvent: false, // 是否绑定了滚动事件（防止多次注册）

            }
        },
        props: {
            width: [Number, String],
            minWidth: {
                type: Number,
                require: false,
                default: 50
            },
            height: {
                type: Number,
                require: false
            },
            minHeight: {
                type: Number,
                require: false,
                default: 50
            },
            titleRowHeight: {
                type: Number,
                require: false,
                default: 38
            },

            // 随着浏览器窗口改变，横向自适应
            isHorizontalResize: {
                type: Boolean,
                require: false,
                default: false
            },
            // 随着浏览器窗口改变，垂直自适应
            isVerticalResize: {
                type: Boolean,
                require: false,
                default: false
            },

            // 垂直自适应偏移量
            VerticalResizeOffset:{
                type:Number,
                default:0
            },

            // 表头背景颜色
            titleBgColor: {
                type: String,
                require: false,
                default: '#fff'
            },

            // 奇数行颜色
            oddBgColor: {
                type: String,
                default: '#fff'
            },
            // 偶数行颜色
            evenBgColor: {
                type: String
            },

            // 内容行高
            rowHeight: {
                type: Number,
                require: false,
                default: 40
            },
            // 多列排序
            multipleSort: {
                type: Boolean,
                require: false,
                default: true
            },
            columns: {
                type: Array,
                require: true
            },

            // 特殊表头
            titleRows: {
                type: Array,
                require: true,
                default: function () {
                    return []
                }
            },
            tableData: {
                type: Array,
                require: true,
                default: function () {
                    return []
                }
            },

            // 分页序号
            pagingIndex: Number,

            // 没数据时的html
            errorContent: {
                type: String,
                default: '暂无数据'
            },
            // 没数据时内容区域高度
            errorContentHeight: {
                type: Number,
                default: 50
            },

            // 是否正在加载,为false 则会显示错误信息（如果加载时间较长，最好设置为true,数据返回后设置为false）
            isLoading: {
                type: Boolean,
                default: false
            },

            loadingContent: {
                type: String,
                default: '<span><i class="v-icon-spin5 animate-loading-23" style="font-size: 28px;opacity:0.6;"></i></span>'
            },

            // 不设置则没有hover效果
            rowHoverColor: {
                type: String
            },

            rowClickColor: {
                type: String
            },

            showVerticalBorder: {
                type: Boolean,
                default: true
            },

            showHorizontalBorder: {
                type: Boolean,
                default: true
            },

            // 表体单元格样式回调
            columnCellClassName: Function,

            // 行点击回调
            onRowClick: Function,

            // 鼠标进入行的回调
            rowMouseEnter: Function,
            // 鼠标离开行的回调
            rowMouseLeave: Function,

        },
        computed: {

            // 获取表格高度
            getTableHeight(){

                return this.isTableEmpty ? this.tableEmptyHeight : this.internalHeight;
            },

            // 左侧区域宽度
            leftViewWidth(){
                var result = 0
                if (this.frozenCols && this.frozenCols.length > 0) {
                    result = this.frozenCols.reduce((total, curr) => total + curr.width, 0);
                }
                return result
            },
            // 右侧区域宽度
            rightViewWidth(){
                return this.internalWidth - this.leftViewWidth - 2;
            },

            // 左侧、右侧区域高度
            bodyViewHeight(){
                if (this.internalTitleRows.length > 0) {
                    return this.internalHeight - this.titleRowHeight * this.internalTitleRows.length;
                } else {
                    return this.internalHeight - this.titleRowHeight;
                }
            },

            // 将复杂表头配置数据简单化
            titleRowsToSortInfo(){
                var result = [], self = this;

                if (self.internalTitleRows.length > 0) {
                    self.internalTitleRows.filter(function (row) {
                        row.filter(function (column, index) {
                            if (typeof column.orderBy === 'string' && column.fields.length === 1) {
                                column.field = column.fields[0];
                                result.push(column);
                            }
                        })
                    })
                }
                return result;
            },


            // 所有列的总宽度
            totalColumnsWidth(){
                return this.internalColumns.reduce(function (total, curr) {
                    return curr.width ? (total + curr.width) : total;
                }, 0)
            }

        },
        methods: {

            setRowHoverColor(isMouseenter){

                if (this.rowHoverColor && this.rowHoverColor.length > 0 && isMouseenter) {

                    return {'background-color': this.rowHoverColor};
                }
            },

            setRowClickColor(isColumnCellClick){

                if (this.rowClickColor && this.rowClickColor.length > 0 && isColumnCellClick) {

                    return {'background-color': this.rowClickColor};
                }
            },

            // 行颜色
            trBgColor(num){
                if ((this.evenBgColor && this.evenBgColor.length > 0) || (this.oddBgColor && this.oddBgColor.length > 0)) {
                    return num % 2 === 0 ? {'background-color': this.evenBgColor} : {'background-color': this.oddBgColor};
                }
            },

            handleMouseEnter(rowIndex){

                this.internalTableData[rowIndex].__mouseenter__ = true;
                this.rowMouseEnter && this.rowMouseEnter(rowIndex);
            },

            handleMouseOut(rowIndex){

                this.internalTableData[rowIndex].__mouseenter__ = false;
                this.rowMouseLeave && this.rowMouseLeave(rowIndex);
            },

            // 设置 column 列的样式
            setColumnCellClassName(rowIndex, field, rowData){

                return this.columnCellClassName && this.columnCellClassName(rowIndex, field, rowData);
            },

            //点击数据行时，回调点击事件
            onCellClick(rowIndex, rowData, column){

                if (Array.isArray(this.internalTableData) && this.internalTableData.length > 0) {

                    var clickCell = this.internalTableData.find(x => x.__columnCellClick__);

                    if (clickCell) {
                        clickCell.__columnCellClick__ = false;
                    }

                    this.internalTableData[rowIndex].__columnCellClick__ = true;
                }

                this.onRowClick && this.onRowClick(rowIndex, rowData, column);
            },

            // 获取每个表头列的宽度
            titleColumnWidth(fields){
                var result = 0;
                if (Array.isArray(fields)) {
                    var matchItems = this.internalColumns.filter((item, index) => {
                        return fields.some(x => x === item.field);
                    })

                    result = matchItems.reduce((total, curr) => total + curr.width, 0);
                } else {
                    console.error(this.errorMsg + 'the fields attribute must be a array in titleRows')
                }
                return result;
            },

            // 获取每个表头列的高度
            titleColumnHeight(rowspan){
                if (rowspan && rowspan > 0) {
                    return this.titleRowHeight * rowspan;
                } else {
                    return this.titleRowHeight;
                }
            },

            // 超出的title提示
            overflowTitle(row, col){
                var result = '';
                if (typeof col.formatter === 'function') {
                    var val = col.formatter(row, -1);
                    // 如果是html 不处理
                    if (utils.isHtml(val)) {
                        result = '';
                    } else {
                        result = val;
                    }
                } else {
                    result = row[col.field];
                }
                return result;
            },

            // 获取所有列的总高度
            getTotalColumnsHeight(){

                var titleTotalHeight = (this.internalTitleRows && this.internalTitleRows.length > 0) ? this.titleRowHeight * this.internalTitleRows.length : this.titleRowHeight
                return titleTotalHeight + this.internalTableData.length * this.rowHeight + 1;
            },


            // 初始化width
            initTableWidth(){

                this.internalWidth = this.isHorizontalResize ? this.maxWidth : this.width;

            },

            // 当宽度设置 && 非固定列未设置宽度时（列自适应）初始化列集合
            initColumns(){

                this.internalHeight = this.height;

                this.internalColumns = Array.isArray(this.columns) ? deepClone(this.columns) : [];

                this.internalTitleRows = Array.isArray(this.titleRows) ? deepClone(this.titleRows) : [];

                this.initResizeColumns();

                this.hasFrozenColumn = this.internalColumns.some(x => x.isFrozen);

                this.initTableWidth();


                var self = this, widthCountCheck = 0;

                if (self.internalWidth && self.internalWidth > 0) {
                    self.internalColumns.map(function (item) {
                        if (!(item.width && item.width > 0)) {

                            widthCountCheck++;
                            if (self.isHorizontalResize) {
                                console.error(self.errorMsg + "If you are using the isHorizontalResize property,Please set the value for each column's width");
                            } else {
                                item.width = self.internalWidth - self.totalColumnsWidth - 2;
                            }

                        }
                    })
                }

                if (widthCountCheck > 1) {
                    console.error(this.errorMsg + 'Only allow one column is not set width');
                }

            },


            // 当没设置宽度和高度时动态计算
            initView(){

                var self = this
                // 当没有设置宽度计算总宽度
                if (!(self.internalWidth && self.internalWidth > 0)) {

                    if (self.columns && self.columns.length > 0) {
                        self.internalWidth = self.columns.reduce((total, curr) => total + curr.width, 0) + 2;

                    }
                }

                var totalColumnsHeight = self.getTotalColumnsHeight();

                // 当没有设置高度时计算总高度
                if (!(self.height && self.height > 0)) {

                    self.internalHeight = totalColumnsHeight;

                } else if (self.height > totalColumnsHeight) {  // 设置的高度小于所有列高度之和时

                    if (self.$el) {

                        self.$nextTick(x => {

                            var rightViewBody = self.$el.querySelector('.v-table-rightview .v-table-body'),
                                rightViewContent = self.$el.querySelector('.v-table-rightview .v-table-body .v-table-btable'),
                                hasHorizontalScrollBar = rightViewBody.clientWidth + 2 < rightViewContent.clientWidth,
                                scrollbarWidth = 0;

                            if (hasHorizontalScrollBar) {

                                scrollbarWidth = utils.getScrollbarWidth();
                                totalColumnsHeight += scrollbarWidth;
                            }

                            self.internalHeight = totalColumnsHeight;
                        })
                    }
                } else if (self.height <= totalColumnsHeight) {

                    self.internalHeight = self.height;
                }
            },

            initInternalTableData(data){

                var result = Array.isArray(this.tableData) ? deepClone(this.tableData) : [];

                if (result.length > 0) {

                    result.map(x => {
                        x.__mouseenter__ = false;
                        x.__columnCellClick__ = false;
                    })
                }

                return result;
            },

            // 对外暴露（隐藏显示切换时）
            resize(){

                this.$nextTick(x => {

                    this.tableResize();

                })
            }
        },
        created(){

            this.internalTableData = this.initInternalTableData(this.tableData);

            if (Array.isArray(this.columns) && this.columns.length > 0) {

                this.initColumns();
            }

            this.$nextTick(x => {
                this.initView();
            })

            this.resize();
        },
        mounted(){

            this.tableEmpty();

            if (Array.isArray(this.tableData) && this.tableData.length > 0) {

                this.scrollControl();
                this.hasBindScrollEvent = true;
            }

            this.singelSortInit();

        },
        watch: {

            // 重新跟新列信息
            'columns': function (newVal) {

                this.initColumns();
            },
            // 重新覆盖复杂表头信息
            'titleRows': function (newVal) {

                this.initColumns();
            },

            'tableData': function (newVal) {

                this.internalTableData = this.initInternalTableData(newVal);

                this.tableEmpty();

                if (Array.isArray(newVal) && newVal.length > 0) {

                    this.initView();

                    if (!this.hasBindScrollEvent) {
                        this.scrollControl();
                    }
                }

                this.resize();
            }
        }
    }
</script> at SyntaxError: Unexpected token (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1822:12)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1597:21)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/vue-easytable/node_modules/vue-easytable/libs/index.js. Coverage (Term): 21% Coverage (LOC): 35%
*- File /root/Targets/vue-easytable/node_modules/vue-easytable/libs/v-table/index.js. Coverage (Term): 37% Coverage (LOC): 58%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
