/root/Targets/fmtjs-web
├─┬ accepts@1.3.4 
│ ├─┬ mime-types@2.1.17 
│ │ └── mime-db@1.30.0 
│ └── negotiator@0.6.1 
├─┬ ajv@5.2.3 
│ ├── co@4.6.0 
│ ├── fast-deep-equal@1.0.0 
│ ├── json-schema-traverse@0.3.1 
│ └─┬ json-stable-stringify@1.0.1 
│   └── jsonify@0.0.0 
├── array-flatten@1.1.1 
├── asn1@0.2.3 
├── assert-plus@1.0.0 
├── asynckit@0.4.0 
├── aws-sign2@0.7.0 
├── aws4@1.6.0 
├─┬ bcrypt-pbkdf@1.0.1 
│ └── tweetnacl@0.14.5 
├─┬ body-parser@1.18.2 
│ ├── bytes@3.0.0 
│ ├── content-type@1.0.4 
│ ├─┬ debug@2.6.9 
│ │ └── ms@2.0.0 
│ ├── depd@1.1.1 
│ ├─┬ http-errors@1.6.2 
│ │ └── inherits@2.0.3 
│ ├── iconv-lite@0.4.19 
│ ├─┬ on-finished@2.3.0 
│ │ └── ee-first@1.1.1 
│ ├── qs@6.5.1 
│ ├─┬ raw-body@2.3.2 
│ │ └── unpipe@1.0.0 
│ └─┬ type-is@1.6.15 
│   └── media-typer@0.3.0 
├─┬ boom@4.3.1 
│ └── hoek@4.2.0 
├── caseless@0.12.0 
├─┬ combined-stream@1.0.5 
│ └── delayed-stream@1.0.0 
├── content-disposition@0.5.2 
├── cookie@0.3.1 
├── cookie-signature@1.0.6 
├── core-util-is@1.0.2 
├─┬ cryptiles@3.1.2 
│ └── boom@5.2.0 
├── dashdash@1.14.1 
├── destroy@1.0.4 
├─┬ ecc-jsbn@0.1.1 
│ └── jsbn@0.1.1 
├── encodeurl@1.0.1 
├── escape-html@1.0.3 
├── esprima@3.1.3 
├── etag@1.8.1 
├─┬ express@4.15.5 
│ ├── finalhandler@1.0.6 
│ ├── fresh@0.5.2 
│ ├── merge-descriptors@1.0.1 
│ ├── methods@1.1.2 
│ ├── parseurl@1.3.2 
│ ├── path-to-regexp@0.1.7 
│ ├─┬ proxy-addr@1.1.5 
│ │ ├── forwarded@0.1.2 
│ │ └── ipaddr.js@1.4.0 
│ ├── qs@6.5.0 
│ ├── range-parser@1.2.0 
│ ├─┬ send@0.15.6 
│ │ └── mime@1.3.4 
│ ├── serve-static@1.12.6 
│ ├── setprototypeof@1.0.3 
│ ├── statuses@1.3.1 
│ ├── utils-merge@1.0.0 
│ └── vary@1.1.2 
├── extend@3.0.1 
├── extsprintf@1.3.0 
└─┬ fmtjs@5.8.0 
  ├─┬ fmtjs-att@5.8.0 
  │ ├── fmtjs-ast-walker@5.8.0 
  │ └─┬ fmtjs-att-pass@5.8.0 
  │   ├── fmtjs-att-pass-flat@5.8.0 
  │   ├── fmtjs-att-pass-id@5.8.0 
  │   └── fmtjs-att-pass-lexical@5.8.0 
  └─┬ fmtjs-att-render@5.8.0 
    ├─┬ fmtjs-att-render-html@5.8.0 
    │ └─┬ fmtjs-web@5.8.0 
    │   ├── fmtjs-loader@5.8.0 
    │   └─┬ request@2.82.0 
    │     ├── forever-agent@0.6.1 
    │     ├── form-data@2.3.1 
    │     ├─┬ har-validator@5.0.3 
    │     │ └── har-schema@2.0.0 
    │     ├─┬ hawk@6.0.2 
    │     │ └── sntp@2.0.2 
    │     ├─┬ http-signature@1.2.0 
    │     │ ├─┬ jsprim@1.4.1 
    │     │ │ ├── json-schema@0.2.3 
    │     │ │ └── verror@1.10.0 
    │     │ └─┬ sshpk@1.13.1 
    │     │   └── getpass@0.1.7 
    │     ├── is-typedarray@1.0.0 
    │     ├── isstream@0.1.2 
    │     ├── json-stringify-safe@5.0.1 
    │     ├── oauth-sign@0.8.2 
    │     ├── performance-now@2.1.0 
    │     ├── safe-buffer@5.1.1 
    │     ├── stringstream@0.0.5 
    │     ├─┬ tough-cookie@2.3.3 
    │     │ └── punycode@1.4.1 
    │     ├── tunnel-agent@0.6.0 
    │     └── uuid@3.1.0 
    └── fmtjs-att-render-text@5.8.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/fmtjs-web/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0313 took 3.359s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (2:4) on program var dbg = require('debug')('fmtjs-web:start')
var assert = require('assert')
var app = require('../web')
var config = require('../config')

// # cb(err, status)
module.exports = function(opt, cb) {
	var self = this

	opt = opt || {}

	if (opt.background) {
		// run in a new process, not this
		run_in_background(opt, cb)
		return
	}

	var host = opt.public ? '0.0.0.0' : config.host
	var port = config.port
	dbg('host=' + host + ', port=' + port)

	var onetime_cb = (function() {
		var invoked = false
		return function() {
			if (invoked) return
			if (cb) cb.apply(this, arguments)
		}
	})();

	app.start(port, host, function() {
		self.status(function(err, status) {
			assert(!err)
			onetime_cb(undefined, status)
		})
	}).once('error', function(err) {
		onetime_cb(err)
	})
}

// # cb(err, status)
function run_in_background(opt, cb) {
	// check if it is runing already?
	is_web_server_started(
		function yes() {
			cb(new Error('another instance exists already'))
		},
		function no() {
			opt = JSON.parse(JSON.stringify(opt))
			delete opt.background

			var path = require('path')
			var spawn = require('child_process').spawn
			var child = spawn('node', [__filename, JSON.stringify(opt)], {detached: true})
			child.stdin.unref()
			child.stdout.unref()
			child.stderr.unref()
			child.unref()

			// wait for a short time
			// then retrieve status info to check
			setTimeout(function() {
				require('../index').status(function(err, status) {
					assert(!err)
					cb(undefined, status)
				})
			}, 1000)
		}
	)

	function is_web_server_started(yes_cb, no_cb) {
		require('../index').status(function(err, status) {
			if (err) {
				no_cb()
			}
			else {
				yes_cb()
			}
		})
	}
}

// trick...

;(function() {
	if (require.main !== module) return

	if (process.argv.length !== 3) {
		console.log('Do not invoke this program by hand.')
		return
	}

	var opt_str = process.argv[2]

	try {
		var opt = JSON.parse(opt_str)
	}
	catch (err) {
		console.error('Parsing as JSON failed: ' + opt_str)
		return
	}

	require('../index').start(opt)
})(); at SyntaxError: Unexpected token (2:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/fmtjs-web/node_modules/fmtjs-web/index.js. Coverage (Term): 42% Coverage (LOC): 67%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
