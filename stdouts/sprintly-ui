/root/Targets/sprintly-ui
├── UNMET PEER DEPENDENCY moment@^2.10.6
├── UNMET PEER DEPENDENCY react@^0.13.3
└─┬ sprintly-ui@2.0.1 
  ├── @sprintly/react-onclickoutside@1.0.0 
  ├─┬ browserify-istanbul@0.2.1 
  │ ├─┬ istanbul@0.3.22 
  │ │ ├── abbrev@1.0.9 
  │ │ ├── async@1.5.2 
  │ │ ├─┬ escodegen@1.7.1 
  │ │ │ ├── esprima@1.2.5 
  │ │ │ ├── estraverse@1.9.3 
  │ │ │ ├── esutils@2.0.2 
  │ │ │ ├─┬ optionator@0.5.0 
  │ │ │ │ ├── deep-is@0.1.3 
  │ │ │ │ ├── fast-levenshtein@1.0.7 
  │ │ │ │ ├── levn@0.2.5 
  │ │ │ │ ├── prelude-ls@1.1.2 
  │ │ │ │ ├── type-check@0.3.2 
  │ │ │ │ └── wordwrap@0.0.3 
  │ │ │ └─┬ source-map@0.2.0 
  │ │ │   └── amdefine@1.0.1 
  │ │ ├── esprima@2.5.0 
  │ │ ├─┬ fileset@0.2.1 
  │ │ │ └─┬ glob@5.0.15 
  │ │ │   ├── inflight@1.0.6 
  │ │ │   ├── inherits@2.0.3 
  │ │ │   └── path-is-absolute@1.0.1 
  │ │ ├─┬ handlebars@4.0.10 
  │ │ │ ├─┬ optimist@0.6.1 
  │ │ │ │ ├── minimist@0.0.10 
  │ │ │ │ └── wordwrap@0.0.3 
  │ │ │ ├── source-map@0.4.4 
  │ │ │ └─┬ uglify-js@2.8.29 
  │ │ │   ├── source-map@0.5.7 
  │ │ │   ├── uglify-to-browserify@1.0.2 
  │ │ │   └─┬ yargs@3.10.0 
  │ │ │     ├── camelcase@1.2.1 
  │ │ │     ├─┬ cliui@2.1.0 
  │ │ │     │ ├─┬ center-align@0.1.3 
  │ │ │     │ │ ├─┬ align-text@0.1.4 
  │ │ │     │ │ │ ├─┬ kind-of@3.2.2 
  │ │ │     │ │ │ │ └── is-buffer@1.1.5 
  │ │ │     │ │ │ ├── longest@1.0.1 
  │ │ │     │ │ │ └── repeat-string@1.6.1 
  │ │ │     │ │ └── lazy-cache@1.0.4 
  │ │ │     │ ├── right-align@0.1.3 
  │ │ │     │ └── wordwrap@0.0.2 
  │ │ │     ├── decamelize@1.2.0 
  │ │ │     └── window-size@0.1.0 
  │ │ ├─┬ js-yaml@3.10.0 
  │ │ │ ├─┬ argparse@1.0.9 
  │ │ │ │ └── sprintf-js@1.0.3 
  │ │ │ └── esprima@4.0.0 
  │ │ ├─┬ mkdirp@0.5.1 
  │ │ │ └── minimist@0.0.8 
  │ │ ├── nopt@3.0.6 
  │ │ ├─┬ once@1.4.0 
  │ │ │ └── wrappy@1.0.2 
  │ │ ├── resolve@1.1.7 
  │ │ ├─┬ supports-color@3.2.3 
  │ │ │ └── has-flag@1.0.0 
  │ │ ├─┬ which@1.3.0 
  │ │ │ └── isexe@2.0.0 
  │ │ └── wordwrap@1.0.0 
  │ ├─┬ minimatch@2.0.10 
  │ │ └─┬ brace-expansion@1.1.8 
  │ │   ├── balanced-match@1.0.0 
  │ │   └── concat-map@0.0.1 
  │ └── through@2.3.8 
  ├── fuzzy@0.1.3 
  ├── lodash@3.10.1 
  └── object-path@0.9.2 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/sprintly-ui/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 32% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.1189 took 6.2874s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (90:10) on program var React = window.React || require('react/addons');
var onClickOutside = require('@sprintly/react-onclickoutside');
/*
 * Estimator element displays item score that, when clicked, opens a menu
 * for editing the current score. Expects an estimate changer utility object
 * containing a changeScore method for handling score changing on the model
 * and syncing any changes with the backend.
 */

var Estimator = React.createClass({
  ALL_ESTIMATES: [0, 1, 3, 5, 8],

  ESTIMATE_HASH: {
    0: '?',
    1: 'S',
    3: 'M',
    5: 'L',
    8: 'XL'
  },

  mixins: [
    onClickOutside
  ],

  propTypes: {
    modelId: React.PropTypes.arrayOf(React.PropTypes.number),
    readOnly: React.PropTypes.bool,
    itemType: React.PropTypes.string.isRequired,
    score: React.PropTypes.string.isRequired,
    estimateChanger: React.PropTypes.object
  },

  getDefaultProps: function() {
    return {
      modelId: null,
      readOnly: false
    };
  },

  getInitialState: function() {
    return {
      menuOpen: false
    };
  },

  handleClickOutside: function(ev) {
    ev.stopPropagation();

    this.setState({
      menuOpen: false
    });
  },

  onScoreClick: function() {
    if (this.props.readOnly || !this.props.estimateChanger) {
      return;
    }

    var openOrClose = this.state.menuOpen === false ? true : false;

    this.setState({
      menuOpen: openOrClose
    });
  },

  onScoreChange: function(ev) {
    if (this.props.readOnly || !this.props.estimateChanger) {
      return;
    }

    var newScore = parseInt(ev.target.getAttribute('data-score'), 10);

    if (this.props.score === this.ESTIMATE_HASH[newScore].toLowerCase()) {
      return;
    }

    this.props.estimateChanger.changeScore(this.props.modelId, newScore);
    this.setState({
      menuOpen: false
    });
  },

  render: function() {
    var currentScore = this.props.score === '~' ? '?' : this.props.score;
    var scoreMenu = null;

    if (this.state.menuOpen) {
      var scores = this.ALL_ESTIMATES.map(function(score) {
        return (
          <li key={score} className='estimator__score'>
            <button className={'estimator__button ' + this.props.itemType}
              data-score={score}
              onClick={this.onScoreChange}>
              {this.ESTIMATE_HASH[score]}
            </button>
          </li>
        );
      }.bind(this));

      scoreMenu = (
        <div className='estimator__menu'>
          <ul className='estimator__list'>
            {scores}
          </ul>
        </div>
      );
    }

    return (
      <div className='estimator__score'>
        <button className={'estimator__button ' + this.props.itemType}
          onClick={this.onScoreClick}>
          {currentScore}
        </button>
        {scoreMenu}
      </div>
    );
  }
});

module.exports = Estimator;
 at SyntaxError: Unexpected token (90:10)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1822:12)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1597:21)
    at Parser.pp$3.parseParenAndDistinguishExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1861:32)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/sprintly-ui/node_modules/sprintly-ui/src/index.js. Coverage (Term): 31% Coverage (LOC): 20%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
