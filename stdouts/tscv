
> ws@0.4.32 install /root/Targets/tscv/node_modules/ws
> (node-gyp rebuild 2> builderror.log) || (exit 0)

make: Entering directory '/root/Targets/tscv/node_modules/ws/build'
  CXX(target) Release/obj.target/bufferutil/src/bufferutil.o
bufferutil.target.mk:96: recipe for target 'Release/obj.target/bufferutil/src/bufferutil.o' failed
make: Leaving directory '/root/Targets/tscv/node_modules/ws/build'
/root/Targets/tscv
└─┬ tscv@0.1.0 
  ├─┬ connect@2.4.6 
  │ ├── bytes@0.1.0 
  │ ├── cookie@0.0.4 
  │ ├── crc@0.2.0 
  │ ├─┬ debug@3.0.1 
  │ │ └── ms@2.0.0 
  │ ├── formidable@1.0.11 
  │ ├── fresh@0.1.0 
  │ ├── pause@0.0.1 
  │ ├── qs@0.5.1 
  │ └─┬ send@0.0.4 
  │   ├── mime@1.2.6 
  │   └── range-parser@0.0.4 
  └─┬ socket.io@0.9.19 
    ├── base64id@0.1.0 
    ├── policyfile@0.0.4 
    ├── redis@0.7.3 
    └─┬ socket.io-client@0.9.16 
      ├─┬ active-x-obfuscator@0.0.1 
      │ └── zeparser@0.0.5 
      ├── uglify-js@1.2.5 
      ├─┬ ws@0.4.32 
      │ ├── commander@2.1.0 
      │ ├── nan@1.0.0 
      │ ├── options@0.0.6 
      │ └── tinycolor@0.0.1 
      └── xmlhttprequest@1.4.2 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/tscv/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0243 took 2.2083s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #! /usr/bin/env node

// standard modules
var https = require('https')
  , http = require('http')
  , fs = require('fs')
  , url = require('url')
  , spawn = require('child_process').spawn;

// third party modules
var connect = require('connect')
  , io = require('socket.io')
  ;

// options
var target = process.argv[2]
  , port = process.argv[3] || 3000
  ;

if (target === '-v') {
  var v = require('./package').version;
  console.log(v);
  return;
}

var tsFile = fs.realpathSync(target);

var server = connect()
  .use(connect.static(__dirname + '/public'))
  .listen(port);

io = io.listen(server);

io.configure('development', function() {
  io.set('log level', 1);
  io.set('transports', ['websocket']);
});

io.sockets.on('connection', function(socket) {
  // read at the first access
  read(tsFile, function(err, data) {
    if (err) return socket.emit('err', { message: err.message });
    socket.emit('update', { file: tsFile, data: data });
  });
});

// watch the change of file
change(tsFile, function(err, data) {
  if (err) return io.sockets.emit('err', { message: err.message });
  io.sockets.emit('update', { file: tsFile, data: data });
});

function read(path, cb) {
  compile(path, function (err, jsFile) {
    if (err) return cb(err);

    fs.readFile(jsFile, 'utf8', function(err, data) {
      if (err) return cb(err);
      if (data.length === 0) return cb(new Error('length zero'));
      cb(null, data);
    });
  });
}

function change(path, cb) {
  fs.watchFile(path, { interval: 10 }, function(curr, prev) {
    read(path, cb);
  });
}

function compile(path, cb) {
  var out = '';
  var tsc = spawn('tsc', [ path ]);

  tsc.stdout.on('data', function (data) {
    out += data;
  });

  tsc.stderr.on('data', function (data) {
    out += data;
  });

  tsc.on('exit', function (code) {
    if (code === 0) {
      cb(null, path.replace(/.ts$/, '.js'));
    } else {
      cb(new Error(out));
    }
  });
}

 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
