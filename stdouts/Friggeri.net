
> keygrip@0.1.7 install /root/Targets/Friggeri.net/node_modules/keygrip
> node scripts/install.js

/root/Targets/Friggeri.net
└─┬ Friggeri.net@0.2.6 
  ├─┬ async@2.5.0 
  │ └── lodash@4.17.4 
  ├── coffee-script@1.12.7 
  ├─┬ datejs@0.0.2 
  │ └─┬ vows@0.8.1 
  │   ├── diff@1.0.8 
  │   ├── eyes@0.1.8 
  │   └─┬ glob@4.0.6 
  │     ├─┬ graceful-fs@3.0.11 
  │     │ └── natives@1.1.0 
  │     └─┬ minimatch@1.0.0 
  │       ├── lru-cache@2.7.3 
  │       └── sigmund@1.0.1 
  ├── discount@0.2.3 
  ├─┬ express@4.15.5 
  │ ├─┬ accepts@1.3.4 
  │ │ ├─┬ mime-types@2.1.17 
  │ │ │ └── mime-db@1.30.0 
  │ │ └── negotiator@0.6.1 
  │ ├── array-flatten@1.1.1 
  │ ├── content-disposition@0.5.2 
  │ ├── content-type@1.0.4 
  │ ├── cookie@0.3.1 
  │ ├── cookie-signature@1.0.6 
  │ ├─┬ debug@2.6.9 
  │ │ └── ms@2.0.0 
  │ ├── depd@1.1.1 
  │ ├── encodeurl@1.0.1 
  │ ├── escape-html@1.0.3 
  │ ├── etag@1.8.1 
  │ ├─┬ finalhandler@1.0.6 
  │ │ └── unpipe@1.0.0 
  │ ├── fresh@0.5.2 
  │ ├── merge-descriptors@1.0.1 
  │ ├── methods@1.1.2 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── parseurl@1.3.2 
  │ ├── path-to-regexp@0.1.7 
  │ ├─┬ proxy-addr@1.1.5 
  │ │ ├── forwarded@0.1.2 
  │ │ └── ipaddr.js@1.4.0 
  │ ├── qs@6.5.0 
  │ ├── range-parser@1.2.0 
  │ ├─┬ send@0.15.6 
  │ │ ├── destroy@1.0.4 
  │ │ ├── http-errors@1.6.2 
  │ │ └── mime@1.3.4 
  │ ├── serve-static@1.12.6 
  │ ├── setprototypeof@1.0.3 
  │ ├── statuses@1.3.1 
  │ ├─┬ type-is@1.6.15 
  │ │ └── media-typer@0.3.0 
  │ ├── utils-merge@1.0.0 
  │ └── vary@1.1.2 
  ├─┬ jade@1.11.0 
  │ ├── character-parser@1.2.1 
  │ ├─┬ clean-css@3.4.28 
  │ │ ├─┬ commander@2.8.1 
  │ │ │ └── graceful-readlink@1.0.1 
  │ │ └── source-map@0.4.4 
  │ ├── commander@2.6.0 
  │ ├─┬ constantinople@3.0.2 
  │ │ └── acorn@2.7.0 
  │ ├─┬ jstransformer@0.0.2 
  │ │ ├── is-promise@2.1.0 
  │ │ └─┬ promise@6.1.0 
  │ │   └── asap@1.0.0 
  │ ├─┬ mkdirp@0.5.1 
  │ │ └── minimist@0.0.8 
  │ ├─┬ transformers@2.1.0 
  │ │ ├─┬ css@1.0.8 
  │ │ │ ├── css-parse@1.0.4 
  │ │ │ └── css-stringify@1.0.5 
  │ │ ├─┬ promise@2.0.0 
  │ │ │ └── is-promise@1.0.1 
  │ │ └─┬ uglify-js@2.2.5 
  │ │   ├─┬ optimist@0.3.7 
  │ │   │ └── wordwrap@0.0.3 
  │ │   └── source-map@0.1.43 
  │ ├─┬ uglify-js@2.8.29 
  │ │ ├── source-map@0.5.7 
  │ │ ├── uglify-to-browserify@1.0.2 
  │ │ └─┬ yargs@3.10.0 
  │ │   ├── camelcase@1.2.1 
  │ │   ├─┬ cliui@2.1.0 
  │ │   │ ├─┬ center-align@0.1.3 
  │ │   │ │ ├─┬ align-text@0.1.4 
  │ │   │ │ │ ├─┬ kind-of@3.2.2 
  │ │   │ │ │ │ └── is-buffer@1.1.5 
  │ │   │ │ │ ├── longest@1.0.1 
  │ │   │ │ │ └── repeat-string@1.6.1 
  │ │   │ │ └── lazy-cache@1.0.4 
  │ │   │ ├── right-align@0.1.3 
  │ │   │ └── wordwrap@0.0.2 
  │ │   ├── decamelize@1.2.0 
  │ │   └── window-size@0.1.0 
  │ ├── void-elements@2.0.1 
  │ └─┬ with@4.0.3 
  │   ├── acorn@1.2.2 
  │   └── acorn-globals@1.0.9 
  ├─┬ ntwitter@0.2.10 
  │ ├── cookies@0.1.6 
  │ ├── keygrip@0.1.7 
  │ └── oauth@0.9.15 
  └─┬ stylus@0.54.5 
    ├── css-parse@1.7.0 
    ├─┬ glob@7.0.6 
    │ ├── fs.realpath@1.0.0 
    │ ├─┬ inflight@1.0.6 
    │ │ └── wrappy@1.0.2 
    │ ├── inherits@2.0.3 
    │ ├─┬ minimatch@3.0.4 
    │ │ └─┬ brace-expansion@1.1.8 
    │ │   ├── balanced-match@1.0.0 
    │ │   └── concat-map@0.0.1 
    │ ├── once@1.4.0 
    │ └── path-is-absolute@1.0.1 
    ├── sax@0.5.8 
    └─┬ source-map@0.1.43 
      └── amdefine@1.0.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/Friggeri.net/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0612 took 2.201s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env coffee

require 'datejs'
express        = require 'express'
stylus         = require 'stylus'
jade           = require 'jade'
http           = require 'http'
markdown       = require './lib/markdown'
loadIfModified = require './lib/loadIfModified'
blog           = require './lib/blog'
async          = require 'async'

postsPerPage = 5

app = express.createServer()
app.configure ->
  @helpers(
    pages :
      home         : '/'
      research     : '/research'
      bibliography : '/bibliography'
      teaching     : '/teaching'
      blog         : '/blog'
  )
  @set 'views', (__dirname + '/views')
  @set 'view engine', 'jade'
  @set 'view options', layout:false
  
  @use express.bodyParser()
  @use express.methodOverride()
  @use stylus.middleware(
    src     : __dirname + '/views'
    dest    : __dirname + '/public'
    compile : (str, path) ->
      stylus(str)
        .set('filename', path)
        .set('warn', true)
        .set('force', true)
        .set('compress', true)
  )
  @use express.compiler(
    src     : __dirname + '/views'
    dest    : __dirname + '/public'
    enable  : ['coffeescript']
  )
  @use express.static(__dirname + '/public', maxAge:2592000000)
  @use app.router

app.get '*', (req, res, next) ->
  if !req.headers.host? then return next()
  if req.headers.host is "www.friggeri.net" then return res.redirect "http://friggeri.net#{req.url}", 301
  next()

app.get '/bibliography', (req, res, next) ->
  http.request((
    host  :  'haltools.inrialpes.fr'
    port  :  80
    path  :  "/Public/afficheRequetePubli.php?auteur_exp=Friggeri&CB_auteur=oui&CB_titre=oui&CB_article=oui&langue=Anglais&tri_exp=annee_publi&tri_exp2=typdoc&tri_exp3=date_publi&ordre_aff=TA&Fen=Aff"
    method: 'GET'
  ), (result) ->
    buffer = []
    result.on('data', buffer.push.bind(buffer)).on('end', ->
      if (match = buffer.join('').match(/<div id="res_script">((?:.|\s)*)<\/div>/mi))
        res.render 'index'
          current : 'bibliography'
          title   : 'Bibliography &ndash; Adrien Friggeri'
          content : match[1].replace(/<img[^>]*>/g, '').replace(/;/g, ' ;').replace(/[ ];/g, ';')
      else
        next()
    )
  ).end()

app.get('/blog/:slug?', (req, res, next) ->
  blog.load (err, db) ->
    if err then return next()
    opts = 
      current : 'blog'
    
    if req.params.slug? and not (feed = ((slug = req.params.slug) is "feed"))
      fetch = (cb) -> blog.article db, "#{slug}.md", (err, data) -> cb err, [data]
    else
      opts.nav = page = if feed then 0 else parseInt(req.query.p ? "0", 10)
      opts.postsPerPage = postsPerPage
      title = "Blog"
      fetch = (cb) -> blog.articles db, postsPerPage*page, postsPerPage*(page+1), cb
    
    fetch (err, data, maximum) ->
      if err then return next()
      
      title ?= data[0].title
      if feed
        lastPub = data[0].date
        res.render 'feed', {articles:data, lastPub:data[0].date, updated:(new Date).setTimezone('ETC')}, (err, xml) ->
          if err then return next(err)
          res.header('Content-Type', 'application/rss+xml')
          res.send xml, 200
      else
        res.render 'articles', {articles:data}, (err, data) ->
          if err then return next(err)
          opts.title   = "#{title} &ndash; Adrien Friggeri"
          opts.content = data
          opts.maximum = blog.count db
          res.render 'index', opts
)

app.get('/:page?', (req, res, next) ->
  page = (req.params.page ? 'home').toLowerCase()
  loadIfModified "./content/#{page}.md", (err, data) ->
    if err then next()
    else res.render 'index',
      current  : page
      title    : (if page is "home" then "Adrien Friggeri" else "#{page[0].toUpperCase()+page.substr(1)} &ndash; Adrien Friggeri")
      content  : markdown.parse(data)
)

app.get('*', (req, res, next) ->
  jade.renderFile 'views/404.jade', (err, html) ->
    if err then next()
    else
      res.render 'index', (
        current : "e404"
        title   : "four o' four"
        content : html
      ), (err, html) ->
        if err then next()
        else
          res.send html, 404
)
app.listen(process.env.PORT || 80)
console.log("Server listening on port %d in %s mode", app.address().port, app.settings.env); at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
