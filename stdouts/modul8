/root/Targets/modul8
└─┬ modul8@0.17.2 
  ├─┬ autonomy@0.1.0 
  │ └── operators@0.1.7 
  ├── commander@0.6.1 
  ├── deep-equal@0.0.0 
  ├─┬ deputy@0.0.4 
  │ ├─┬ detective@0.2.1 
  │ │ └── esprima@0.9.9 
  │ └── mkdirp@0.3.5 
  ├─┬ logule@0.8.2 
  │ ├── autonomy@0.2.0 
  │ ├── colors@0.5.1 
  │ ├── confortable@0.1.5 
  │ ├── semver@1.0.14 
  │ └── subset@0.1.7 
  ├── topiary@0.0.1 
  ├── typr@0.1.3 
  └── uglify-js@1.3.5 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/modul8/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 23% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.1117 took 12.9896s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Invalid number (10:41) on program var fs = require('fs');
var path = require('path');
var crypto = require('crypto');
var existsSync = fs.existsSync || path.existsSync;

var mkdirp = require('mkdirp');
var detective = require('detective');

module.exports = function (cacheFile) {
    mkdirp.sync(path.dirname(cacheFile), 0700);
    
    var cache = {};
    if (existsSync(cacheFile)) {
        var body = fs.readFileSync(cacheFile);
        try {
            cache = JSON.parse(body);
        }
        catch (err) {}
    }
    
    function save (h, res) {
        cache[h] = res;
        fs.writeFileSync(cacheFile, JSON.stringify(cache));
    }
    
    function hash (src) {
        return new crypto.Hash('md5').update(src).digest('hex');
    }
    
    var deputy = function (src) {
        return deputy.find(src).strings;
    };
    
    deputy.find = function (src) {
        var h = hash(src);
        var c = cache[h];
        if (c) return c;
        else {
            c = detective.find(src);
            save(h, c);
            return c;
        }
    };
    
    return deputy;
};
 at SyntaxError: Invalid number (10:41)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/modul8/node_modules/modul8/index.js. Coverage (Term): 56% Coverage (LOC): 67%
*- File /root/Targets/modul8/node_modules/modul8/lib/api.js. Coverage (Term): 3% Coverage (LOC): 3%
*- File /root/Targets/modul8/node_modules/modul8/lib/bundler.js. Coverage (Term): 6% Coverage (LOC): 7%
*- File /root/Targets/modul8/node_modules/autonomy/autonomy.js. Coverage (Term): 15% Coverage (LOC): 39%
*- File /root/Targets/modul8/node_modules/operators/operators.js. Coverage (Term): 21% Coverage (LOC): 54%
*- File /root/Targets/modul8/node_modules/modul8/lib/analyzer.js. Coverage (Term): 5% Coverage (LOC): 5%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
