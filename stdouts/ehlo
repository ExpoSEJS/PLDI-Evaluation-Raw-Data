/root/Targets/ehlo
└─┬ ehlo@0.0.9 
  ├─┬ commander@2.8.1 
  │ └── graceful-readlink@1.0.1 
  ├── human-size@1.1.0 
  ├─┬ mailparser@0.5.3 
  │ ├─┬ encoding@0.1.12 
  │ │ └── iconv-lite@0.4.19 
  │ ├── mime@1.4.1 
  │ ├─┬ mimelib@0.2.19 
  │ │ └── addressparser@0.3.2 
  │ └── uue@3.1.0 
  ├─┬ request@2.60.0 
  │ ├── aws-sign2@0.5.0 
  │ ├─┬ bl@1.0.3 
  │ │ └─┬ readable-stream@2.0.6 
  │ │   ├── core-util-is@1.0.2 
  │ │   ├── inherits@2.0.3 
  │ │   ├── isarray@1.0.0 
  │ │   ├── process-nextick-args@1.0.7 
  │ │   ├── string_decoder@0.10.31 
  │ │   └── util-deprecate@1.0.2 
  │ ├── caseless@0.11.0 
  │ ├─┬ combined-stream@1.0.5 
  │ │ └── delayed-stream@1.0.0 
  │ ├── extend@3.0.1 
  │ ├── forever-agent@0.6.1 
  │ ├─┬ form-data@1.0.1 
  │ │ └─┬ async@2.5.0 
  │ │   └── lodash@4.17.4 
  │ ├─┬ har-validator@1.8.0 
  │ │ ├── bluebird@2.11.0 
  │ │ ├─┬ chalk@1.1.3 
  │ │ │ ├── ansi-styles@2.2.1 
  │ │ │ ├── escape-string-regexp@1.0.5 
  │ │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ │ └── ansi-regex@2.1.1 
  │ │ │ ├── strip-ansi@3.0.1 
  │ │ │ └── supports-color@2.0.0 
  │ │ └─┬ is-my-json-valid@2.16.1 
  │ │   ├── generate-function@2.0.0 
  │ │   ├─┬ generate-object-property@1.2.0 
  │ │   │ └── is-property@1.0.2 
  │ │   ├── jsonpointer@4.0.1 
  │ │   └── xtend@4.0.1 
  │ ├─┬ hawk@3.1.3 
  │ │ ├── boom@2.10.1 
  │ │ ├── cryptiles@2.0.5 
  │ │ ├── hoek@2.16.3 
  │ │ └── sntp@1.0.9 
  │ ├─┬ http-signature@0.11.0 
  │ │ ├── asn1@0.1.11 
  │ │ ├── assert-plus@0.1.5 
  │ │ └── ctype@0.5.3 
  │ ├── isstream@0.1.2 
  │ ├── json-stringify-safe@5.0.1 
  │ ├─┬ mime-types@2.1.17 
  │ │ └── mime-db@1.30.0 
  │ ├── node-uuid@1.4.8 
  │ ├── oauth-sign@0.8.2 
  │ ├── qs@4.0.0 
  │ ├── stringstream@0.0.5 
  │ ├─┬ tough-cookie@2.3.3 
  │ │ └── punycode@1.4.1 
  │ └── tunnel-agent@0.4.3 
  ├── smtp-server@1.4.2 
  ├─┬ stream-to-buffer@0.1.0 
  │ └── stream-to@0.2.2 
  └─┬ winston@1.0.2 
    ├── async@1.0.0 
    ├── colors@1.0.3 
    ├── cycle@1.0.3 
    ├── eyes@0.1.8 
    ├── pkginfo@0.3.1 
    └── stack-trace@0.0.10 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/ehlo/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /3 queued / 1 running / 1 errors / 23% coverage ] ****** [1 done /2 queued / 2 running / 1 errors / 23% coverage ] ****** [1 done /1 queued / 3 running / 1 errors / 23% coverage ] ****** [1 done /0 queued / 4 running / 1 errors / 23% coverage ] ****** [1 done /0 queued / 4 running / 1 errors / 23% coverage ] ****** [2 done /0 queued / 3 running / 1 errors / 23% coverage ] ****** [3 done /0 queued / 3 running / 2 errors / 23% coverage ] ****** [3 done /0 queued / 3 running / 2 errors / 23% coverage ] ****** [4 done /0 queued / 3 running / 2 errors / 23% coverage ] ****** [4 done /0 queued / 3 running / 2 errors / 23% coverage ] ****** [5 done /0 queued / 3 running / 3 errors / 25% coverage ] ****** [5 done /0 queued / 3 running / 3 errors / 25% coverage ] ****** [6 done /1 queued / 3 running / 3 errors / 25% coverage ] ****** [6 done /0 queued / 4 running / 3 errors / 25% coverage ] ****** [6 done /0 queued / 4 running / 3 errors / 25% coverage ] ****** [7 done /0 queued / 4 running / 4 errors / 26% coverage ] ****** [7 done /0 queued / 4 running / 4 errors / 26% coverage ] ****** [8 done /0 queued / 4 running / 5 errors / 26% coverage ] ****** [8 done /0 queued / 4 running / 5 errors / 26% coverage ] ****** [9 done /2 queued / 4 running / 6 errors / 26% coverage ] ****** [9 done /1 queued / 5 running / 6 errors / 26% coverage ] ****** [9 done /0 queued / 6 running / 6 errors / 26% coverage ] ****** [9 done /0 queued / 6 running / 6 errors / 26% coverage ] ****** [10 done /0 queued / 6 running / 7 errors / 26% coverage ] ****** [10 done /0 queued / 6 running / 7 errors / 26% coverage ] ****** [11 done /2 queued / 6 running / 7 errors / 26% coverage ] ****** [11 done /1 queued / 7 running / 7 errors / 26% coverage ] ****** [11 done /0 queued / 8 running / 7 errors / 26% coverage ] ****** [11 done /0 queued / 8 running / 7 errors / 26% coverage ] ****** [12 done /1 queued / 8 running / 8 errors / 26% coverage ] ****** [12 done /0 queued / 9 running / 8 errors / 26% coverage ] ****** [12 done /0 queued / 9 running / 8 errors / 26% coverage ] ****** [13 done /5 queued / 9 running / 9 errors / 27% coverage ] ****** [13 done /4 queued / 10 running / 9 errors / 27% coverage ] ****** [13 done /3 queued / 11 running / 9 errors / 27% coverage ] ****** [13 done /2 queued / 12 running / 9 errors / 27% coverage ] ****** [13 done /1 queued / 13 running / 9 errors / 27% coverage ] ****** [13 done /0 queued / 14 running / 9 errors / 27% coverage ] ****** [13 done /0 queued / 14 running / 9 errors / 27% coverage ] ****** [14 done /2 queued / 14 running / 10 errors / 27% coverage ] ****** [14 done /1 queued / 15 running / 10 errors / 27% coverage ] ****** [14 done /0 queued / 16 running / 10 errors / 27% coverage ] ****** [14 done /0 queued / 16 running / 10 errors / 27% coverage ] ****** [15 done /4 queued / 16 running / 11 errors / 27% coverage ] ****** [15 done /4 queued / 16 running / 11 errors / 27% coverage ] ****** [16 done /5 queued / 16 running / 12 errors / 27% coverage ] ****** [16 done /5 queued / 16 running / 12 errors / 27% coverage ] ****** [17 done /4 queued / 16 running / 13 errors / 27% coverage ] ****** [17 done /4 queued / 16 running / 13 errors / 27% coverage ] ****** [18 done /3 queued / 16 running / 13 errors / 27% coverage ] ****** [18 done /3 queued / 16 running / 13 errors / 27% coverage ] ****** [19 done /4 queued / 16 running / 13 errors / 27% coverage ] ****** [19 done /4 queued / 16 running / 13 errors / 27% coverage ] ****** [20 done /5 queued / 16 running / 14 errors / 27% coverage ] ****** [20 done /5 queued / 16 running / 14 errors / 27% coverage ] ****** [21 done /4 queued / 16 running / 14 errors / 27% coverage ] ****** [21 done /4 queued / 16 running / 14 errors / 27% coverage ] ****** [22 done /4 queued / 16 running / 15 errors / 27% coverage ] ****** [22 done /4 queued / 16 running / 15 errors / 27% coverage ] ****** [23 done /4 queued / 16 running / 16 errors / 27% coverage ] ****** [23 done /4 queued / 16 running / 16 errors / 27% coverage ] ****** [24 done /6 queued / 16 running / 17 errors / 27% coverage ] ****** [24 done /6 queued / 16 running / 17 errors / 27% coverage ] ****** [25 done /6 queued / 16 running / 18 errors / 27% coverage ] ****** [25 done /6 queued / 16 running / 18 errors / 27% coverage ] ****** [26 done /6 queued / 16 running / 19 errors / 27% coverage ] ****** [26 done /6 queued / 16 running / 19 errors / 27% coverage ] ****** [27 done /10 queued / 16 running / 20 errors / 27% coverage ] ****** [27 done /10 queued / 16 running / 20 errors / 27% coverage ] ****** [28 done /12 queued / 16 running / 21 errors / 28.000000000000004% coverage ] ****** [28 done /12 queued / 16 running / 21 errors / 28.000000000000004% coverage ] ****** [29 done /15 queued / 16 running / 22 errors / 28.000000000000004% coverage ] ****** [29 done /15 queued / 16 running / 22 errors / 28.000000000000004% coverage ] ****** [30 done /18 queued / 16 running / 23 errors / 28.000000000000004% coverage ] ****** [30 done /18 queued / 16 running / 23 errors / 28.000000000000004% coverage ] ****** [31 done /19 queued / 16 running / 24 errors / 28.000000000000004% coverage ] ****** [31 done /19 queued / 16 running / 24 errors / 28.000000000000004% coverage ] ****** [32 done /18 queued / 16 running / 25 errors / 28.000000000000004% coverage ] ****** [32 done /18 queued / 16 running / 25 errors / 28.000000000000004% coverage ] ****** [33 done /17 queued / 16 running / 26 errors / 28.000000000000004% coverage ] ****** [33 done /17 queued / 16 running / 26 errors / 28.000000000000004% coverage ] ****** [34 done /16 queued / 16 running / 26 errors / 28.000000000000004% coverage ] ****** [34 done /16 queued / 16 running / 26 errors / 28.000000000000004% coverage ] ****** [35 done /15 queued / 16 running / 27 errors / 28.000000000000004% coverage ] ****** [35 done /15 queued / 16 running / 27 errors / 28.000000000000004% coverage ] ****** [36 done /16 queued / 16 running / 27 errors / 28.000000000000004% coverage ] ****** [36 done /16 queued / 16 running / 27 errors / 28.000000000000004% coverage ] ****** [37 done /17 queued / 16 running / 28 errors / 28.000000000000004% coverage ] ****** [37 done /17 queued / 16 running / 28 errors / 28.000000000000004% coverage ] ****** [38 done /16 queued / 16 running / 29 errors / 28.000000000000004% coverage ] ****** [38 done /16 queued / 16 running / 29 errors / 28.000000000000004% coverage ] ****** [39 done /15 queued / 16 running / 30 errors / 28.000000000000004% coverage ] ****** [39 done /15 queued / 16 running / 30 errors / 28.000000000000004% coverage ] ****** [40 done /17 queued / 16 running / 31 errors / 28.000000000000004% coverage ] ****** [40 done /17 queued / 16 running / 31 errors / 28.000000000000004% coverage ] ****** [41 done /16 queued / 16 running / 32 errors / 28.000000000000004% coverage ] ****** [41 done /16 queued / 16 running / 32 errors / 28.000000000000004% coverage ] ****** [42 done /17 queued / 16 running / 33 errors / 28.000000000000004% coverage ] ****** [42 done /17 queued / 16 running / 33 errors / 28.000000000000004% coverage ] ****** [43 done /17 queued / 16 running / 34 errors / 28.000000000000004% coverage ] ****** [43 done /17 queued / 16 running / 34 errors / 28.000000000000004% coverage ] ****** [44 done /16 queued / 16 running / 35 errors / 28.000000000000004% coverage ] ****** [44 done /16 queued / 16 running / 35 errors / 28.000000000000004% coverage ] ****** [45 done /17 queued / 16 running / 36 errors / 28.000000000000004% coverage ] ****** [45 done /17 queued / 16 running / 36 errors / 28.000000000000004% coverage ] ****** [46 done /16 queued / 16 running / 37 errors / 28.000000000000004% coverage ] ****** [46 done /16 queued / 16 running / 37 errors / 28.000000000000004% coverage ] ****** [47 done /16 queued / 16 running / 38 errors / 28.000000000000004% coverage ] ****** [47 done /16 queued / 16 running / 38 errors / 28.000000000000004% coverage ] ****** [48 done /16 queued / 16 running / 39 errors / 28.000000000000004% coverage ] ****** [48 done /16 queued / 16 running / 39 errors / 28.000000000000004% coverage ] ****** [49 done /18 queued / 16 running / 40 errors / 28.000000000000004% coverage ] ****** [49 done /18 queued / 16 running / 40 errors / 28.000000000000004% coverage ] ****** [50 done /17 queued / 16 running / 41 errors / 28.000000000000004% coverage ] ****** [50 done /17 queued / 16 running / 41 errors / 28.000000000000004% coverage ] ****** [51 done /16 queued / 16 running / 42 errors / 28.000000000000004% coverage ] ****** [51 done /16 queued / 16 running / 42 errors / 28.000000000000004% coverage ] ****** [52 done /16 queued / 16 running / 43 errors / 28.000000000000004% coverage ] ****** [52 done /16 queued / 16 running / 43 errors / 28.000000000000004% coverage ] ****** [53 done /16 queued / 16 running / 44 errors / 28.000000000000004% coverage ] ****** [53 done /16 queued / 16 running / 44 errors / 28.000000000000004% coverage ] ****** [54 done /18 queued / 16 running / 45 errors / 28.000000000000004% coverage ] ****** [54 done /18 queued / 16 running / 45 errors / 28.000000000000004% coverage ] ****** [55 done /19 queued / 16 running / 46 errors / 28.000000000000004% coverage ] ****** [55 done /19 queued / 16 running / 46 errors / 28.000000000000004% coverage ] ****** [56 done /18 queued / 16 running / 47 errors / 28.000000000000004% coverage ] ****** [56 done /18 queued / 16 running / 47 errors / 28.000000000000004% coverage ] ****** [57 done /20 queued / 16 running / 48 errors / 28.000000000000004% coverage ] ****** [57 done /20 queued / 16 running / 48 errors / 28.000000000000004% coverage ] ****** [58 done /21 queued / 16 running / 48 errors / 28.000000000000004% coverage ] ****** [58 done /21 queued / 16 running / 48 errors / 28.000000000000004% coverage ] ****** [59 done /21 queued / 16 running / 49 errors / 28.000000000000004% coverage ] ****** [59 done /21 queued / 16 running / 49 errors / 28.000000000000004% coverage ] ****** [60 done /22 queued / 16 running / 50 errors / 28.000000000000004% coverage ] ****** [60 done /22 queued / 16 running / 50 errors / 28.000000000000004% coverage ] ****** [61 done /23 queued / 16 running / 51 errors / 28.000000000000004% coverage ] ****** [61 done /23 queued / 16 running / 51 errors / 28.000000000000004% coverage ] ****** [62 done /24 queued / 16 running / 52 errors / 28.000000000000004% coverage ] ****** [62 done /24 queued / 16 running / 52 errors / 28.000000000000004% coverage ] ****** [63 done /24 queued / 16 running / 53 errors / 28.000000000000004% coverage ] ****** [63 done /24 queued / 16 running / 53 errors / 28.000000000000004% coverage ] ****** [64 done /23 queued / 16 running / 54 errors / 28.000000000000004% coverage ] ****** [64 done /23 queued / 16 running / 54 errors / 28.000000000000004% coverage ] ****** [65 done /26 queued / 16 running / 55 errors / 28.000000000000004% coverage ] ****** [65 done /26 queued / 16 running / 55 errors / 28.000000000000004% coverage ] ****** [66 done /29 queued / 16 running / 56 errors / 28.000000000000004% coverage ] ****** [66 done /29 queued / 16 running / 56 errors / 28.000000000000004% coverage ] ****** [67 done /30 queued / 16 running / 57 errors / 28.000000000000004% coverage ] ****** [67 done /30 queued / 16 running / 57 errors / 28.000000000000004% coverage ] ****** [68 done /32 queued / 16 running / 58 errors / 28.000000000000004% coverage ] ****** [68 done /32 queued / 16 running / 58 errors / 28.000000000000004% coverage ] ****** [69 done /36 queued / 16 running / 59 errors / 28.000000000000004% coverage ] ****** [69 done /36 queued / 16 running / 59 errors / 28.000000000000004% coverage ] ****** [70 done /37 queued / 16 running / 60 errors / 28.000000000000004% coverage ] ****** [70 done /37 queued / 16 running / 60 errors / 28.000000000000004% coverage ] ****** [71 done /38 queued / 16 running / 61 errors / 28.000000000000004% coverage ] ****** [71 done /38 queued / 16 running / 61 errors / 28.000000000000004% coverage ] ****** [72 done /40 queued / 16 running / 62 errors / 28.000000000000004% coverage ] ****** [72 done /40 queued / 16 running / 62 errors / 28.000000000000004% coverage ] ****** [73 done /40 queued / 16 running / 63 errors / 28.000000000000004% coverage ] ****** [73 done /40 queued / 16 running / 63 errors / 28.000000000000004% coverage ] ****** [74 done /41 queued / 16 running / 63 errors / 28.000000000000004% coverage ] ****** [74 done /41 queued / 16 running / 63 errors / 28.000000000000004% coverage ] ****** [75 done /42 queued / 16 running / 64 errors / 28.000000000000004% coverage ] ****** [75 done /42 queued / 16 running / 64 errors / 28.000000000000004% coverage ] ****** [76 done /41 queued / 16 running / 65 errors / 28.000000000000004% coverage ] ****** [76 done /41 queued / 16 running / 65 errors / 28.000000000000004% coverage ] ****** [77 done /41 queued / 16 running / 66 errors / 28.000000000000004% coverage ] ****** [77 done /41 queued / 16 running / 66 errors / 28.000000000000004% coverage ] ****** [78 done /40 queued / 16 running / 67 errors / 28.000000000000004% coverage ] ****** [78 done /40 queued / 16 running / 67 errors / 28.000000000000004% coverage ] ****** [79 done /42 queued / 16 running / 68 errors / 28.000000000000004% coverage ] ****** [79 done /42 queued / 16 running / 68 errors / 28.000000000000004% coverage ] ****** [80 done /41 queued / 16 running / 69 errors / 28.000000000000004% coverage ] ****** [80 done /41 queued / 16 running / 69 errors / 28.000000000000004% coverage ] ****** [81 done /42 queued / 16 running / 70 errors / 28.000000000000004% coverage ] ****** [81 done /42 queued / 16 running / 70 errors / 28.000000000000004% coverage ] ****** [82 done /41 queued / 16 running / 71 errors / 28.000000000000004% coverage ] ****** [82 done /41 queued / 16 running / 71 errors / 28.000000000000004% coverage ] ****** [83 done /41 queued / 16 running / 72 errors / 28.000000000000004% coverage ] ****** [83 done /41 queued / 16 running / 72 errors / 28.000000000000004% coverage ] ****** [84 done /41 queued / 16 running / 73 errors / 28.000000000000004% coverage ] ****** [84 done /41 queued / 16 running / 73 errors / 28.000000000000004% coverage ] ****** [85 done /40 queued / 16 running / 74 errors / 28.000000000000004% coverage ] ****** [85 done /40 queued / 16 running / 74 errors / 28.000000000000004% coverage ] ****** [86 done /39 queued / 16 running / 75 errors / 28.000000000000004% coverage ] ****** [86 done /39 queued / 16 running / 75 errors / 28.000000000000004% coverage ] ****** [87 done /39 queued / 16 running / 76 errors / 28.000000000000004% coverage ] ****** [87 done /39 queued / 16 running / 76 errors / 28.000000000000004% coverage ] ****** [88 done /38 queued / 16 running / 77 errors / 28.000000000000004% coverage ] ****** [88 done /38 queued / 16 running / 77 errors / 28.000000000000004% coverage ] ****** [89 done /39 queued / 16 running / 77 errors / 28.000000000000004% coverage ] ****** [89 done /39 queued / 16 running / 77 errors / 28.000000000000004% coverage ] ****** [90 done /40 queued / 16 running / 78 errors / 28.000000000000004% coverage ] ****** [90 done /40 queued / 16 running / 78 errors / 28.000000000000004% coverage ] ****** [91 done /40 queued / 16 running / 79 errors / 28.000000000000004% coverage ] ****** [91 done /40 queued / 16 running / 79 errors / 28.000000000000004% coverage ] ****** [92 done /39 queued / 16 running / 80 errors / 28.000000000000004% coverage ] ****** [92 done /39 queued / 16 running / 80 errors / 28.000000000000004% coverage ] ****** [93 done /40 queued / 16 running / 81 errors / 28.000000000000004% coverage ] ****** [93 done /40 queued / 16 running / 81 errors / 28.000000000000004% coverage ] ****** [94 done /42 queued / 16 running / 82 errors / 28.000000000000004% coverage ] ****** [94 done /42 queued / 16 running / 82 errors / 28.000000000000004% coverage ] ****** [95 done /41 queued / 16 running / 83 errors / 28.000000000000004% coverage ] ****** [95 done /41 queued / 16 running / 83 errors / 28.000000000000004% coverage ] ****** [96 done /40 queued / 16 running / 84 errors / 28.000000000000004% coverage ] ****** [96 done /40 queued / 16 running / 84 errors / 28.000000000000004% coverage ] ****** [97 done /40 queued / 16 running / 85 errors / 28.000000000000004% coverage ] ****** [97 done /40 queued / 16 running / 85 errors / 28.000000000000004% coverage ] ****** [98 done /39 queued / 16 running / 86 errors / 28.000000000000004% coverage ] ****** [98 done /39 queued / 16 running / 86 errors / 28.000000000000004% coverage ] ****** [99 done /42 queued / 16 running / 87 errors / 28.000000000000004% coverage ] ****** [99 done /42 queued / 16 running / 87 errors / 28.000000000000004% coverage ] ****** [100 done /44 queued / 16 running / 88 errors / 28.000000000000004% coverage ] ****** [100 done /44 queued / 16 running / 88 errors / 28.000000000000004% coverage ] ****** [101 done /46 queued / 16 running / 89 errors / 28.000000000000004% coverage ] ****** [101 done /46 queued / 16 running / 89 errors / 28.000000000000004% coverage ] ****** [102 done /49 queued / 16 running / 90 errors / 28.000000000000004% coverage ] ****** [102 done /49 queued / 16 running / 90 errors / 28.000000000000004% coverage ] ****** [103 done /50 queued / 16 running / 90 errors / 28.000000000000004% coverage ] ****** [103 done /50 queued / 16 running / 90 errors / 28.000000000000004% coverage ] ****** [104 done /51 queued / 16 running / 91 errors / 28.000000000000004% coverage ] ****** [104 done /51 queued / 16 running / 91 errors / 28.000000000000004% coverage ] ****** [105 done /50 queued / 16 running / 92 errors / 28.000000000000004% coverage ] ****** [105 done /50 queued / 16 running / 92 errors / 28.000000000000004% coverage ] ****** [106 done /53 queued / 16 running / 93 errors / 28.000000000000004% coverage ] ****** [106 done /53 queued / 16 running / 93 errors / 28.000000000000004% coverage ] ****** [107 done /56 queued / 16 running / 93 errors / 28.000000000000004% coverage ] ****** [107 done /56 queued / 16 running / 93 errors / 28.000000000000004% coverage ] ****** [108 done /55 queued / 16 running / 94 errors / 28.000000000000004% coverage ] ****** [108 done /55 queued / 16 running / 94 errors / 28.000000000000004% coverage ] ****** [109 done /54 queued / 16 running / 95 errors / 28.000000000000004% coverage ] ****** [109 done /54 queued / 16 running / 95 errors / 28.000000000000004% coverage ] ****** [110 done /54 queued / 16 running / 96 errors / 28.000000000000004% coverage ] ****** [110 done /54 queued / 16 running / 96 errors / 28.000000000000004% coverage ] ****** [111 done /55 queued / 16 running / 96 errors / 28.000000000000004% coverage ] ****** [111 done /55 queued / 16 running / 96 errors / 28.000000000000004% coverage ] ****** [112 done /56 queued / 16 running / 97 errors / 28.000000000000004% coverage ] ****** [112 done /56 queued / 16 running / 97 errors / 28.000000000000004% coverage ] ****** [113 done /60 queued / 16 running / 98 errors / 28.000000000000004% coverage ] ****** [113 done /60 queued / 16 running / 98 errors / 28.000000000000004% coverage ] ****** [114 done /61 queued / 16 running / 99 errors / 28.000000000000004% coverage ] ****** [114 done /61 queued / 16 running / 99 errors / 28.000000000000004% coverage ] ****** [115 done /62 queued / 16 running / 100 errors / 28.000000000000004% coverage ] ****** [115 done /62 queued / 16 running / 100 errors / 28.000000000000004% coverage ] ****** [116 done /64 queued / 16 running / 101 errors / 28.000000000000004% coverage ] ****** [116 done /64 queued / 16 running / 101 errors / 28.000000000000004% coverage ] ****** [117 done /67 queued / 16 running / 102 errors / 28.000000000000004% coverage ] ****** [117 done /67 queued / 16 running / 102 errors / 28.000000000000004% coverage ] ****** [118 done /66 queued / 16 running / 103 errors / 28.000000000000004% coverage ] ****** [118 done /66 queued / 16 running / 103 errors / 28.000000000000004% coverage ] ****** [119 done /66 queued / 16 running / 104 errors / 28.000000000000004% coverage ] ****** [119 done /66 queued / 16 running / 104 errors / 28.000000000000004% coverage ] ****** [120 done /67 queued / 16 running / 104 errors / 28.000000000000004% coverage ] ****** [120 done /67 queued / 16 running / 104 errors / 28.000000000000004% coverage ] ****** [121 done /66 queued / 16 running / 105 errors / 28.000000000000004% coverage ] ****** [121 done /66 queued / 16 running / 105 errors / 28.000000000000004% coverage ] ****** [122 done /65 queued / 16 running / 106 errors / 28.000000000000004% coverage ] ****** [122 done /65 queued / 16 running / 106 errors / 28.000000000000004% coverage ] ****** [123 done /65 queued / 16 running / 107 errors / 28.000000000000004% coverage ] ****** [123 done /65 queued / 16 running / 107 errors / 28.000000000000004% coverage ] ****** [124 done /64 queued / 16 running / 108 errors / 28.000000000000004% coverage ] ****** [124 done /64 queued / 16 running / 108 errors / 28.000000000000004% coverage ] ****** [125 done /63 queued / 16 running / 109 errors / 28.000000000000004% coverage ] ****** [125 done /63 queued / 16 running / 109 errors / 28.000000000000004% coverage ] ****** [126 done /62 queued / 16 running / 110 errors / 28.000000000000004% coverage ] ****** [126 done /62 queued / 16 running / 110 errors / 28.000000000000004% coverage ] ****** [127 done /62 queued / 16 running / 110 errors / 28.000000000000004% coverage ] ****** [127 done /62 queued / 16 running / 110 errors / 28.000000000000004% coverage ] ****** [128 done /62 queued / 16 running / 111 errors / 28.000000000000004% coverage ] ****** [128 done /62 queued / 16 running / 111 errors / 28.000000000000004% coverage ] ****** [129 done /62 queued / 16 running / 111 errors / 28.000000000000004% coverage ] ****** [129 done /62 queued / 16 running / 111 errors / 28.000000000000004% coverage ] ****** [130 done /63 queued / 16 running / 112 errors / 28.000000000000004% coverage ] ****** [130 done /63 queued / 16 running / 112 errors / 28.000000000000004% coverage ] ****** [131 done /63 queued / 16 running / 113 errors / 28.000000000000004% coverage ] ****** [131 done /63 queued / 16 running / 113 errors / 28.000000000000004% coverage ] ****** [132 done /64 queued / 16 running / 113 errors / 28.000000000000004% coverage ] ****** [132 done /64 queued / 16 running / 113 errors / 28.000000000000004% coverage ] ****** [133 done /66 queued / 16 running / 114 errors / 28.000000000000004% coverage ] ****** [133 done /66 queued / 16 running / 114 errors / 28.000000000000004% coverage ] ****** [134 done /67 queued / 16 running / 115 errors / 28.000000000000004% coverage ] ****** [134 done /67 queued / 16 running / 115 errors / 28.000000000000004% coverage ] ****** [135 done /67 queued / 16 running / 116 errors / 28.000000000000004% coverage ] ****** [135 done /67 queued / 16 running / 116 errors / 28.000000000000004% coverage ] ****** [136 done /67 queued / 16 running / 116 errors / 28.000000000000004% coverage ] ****** [136 done /67 queued / 16 running / 116 errors / 28.000000000000004% coverage ] ****** [137 done /67 queued / 16 running / 117 errors / 28.000000000000004% coverage ] ****** [137 done /67 queued / 16 running / 117 errors / 28.000000000000004% coverage ] ****** [138 done /68 queued / 16 running / 118 errors / 28.000000000000004% coverage ] ****** [138 done /68 queued / 16 running / 118 errors / 28.000000000000004% coverage ] ****** [139 done /68 queued / 16 running / 119 errors / 28.000000000000004% coverage ] ****** [139 done /68 queued / 16 running / 119 errors / 28.000000000000004% coverage ] ****** [140 done /70 queued / 16 running / 120 errors / 28.000000000000004% coverage ] ****** [140 done /70 queued / 16 running / 120 errors / 28.000000000000004% coverage ] ****** [141 done /70 queued / 16 running / 121 errors / 28.000000000000004% coverage ] ****** [141 done /70 queued / 16 running / 121 errors / 28.000000000000004% coverage ] ****** [142 done /72 queued / 16 running / 122 errors / 28.000000000000004% coverage ] ****** [142 done /72 queued / 16 running / 122 errors / 28.000000000000004% coverage ] ****** [143 done /75 queued / 16 running / 123 errors / 28.000000000000004% coverage ] ****** [143 done /75 queued / 16 running / 123 errors / 28.000000000000004% coverage ] ****** [144 done /76 queued / 16 running / 124 errors / 28.000000000000004% coverage ] ****** [144 done /76 queued / 16 running / 124 errors / 28.000000000000004% coverage ] ****** [145 done /77 queued / 16 running / 125 errors / 28.000000000000004% coverage ] ****** [145 done /77 queued / 16 running / 125 errors / 28.000000000000004% coverage ] ****** [146 done /77 queued / 16 running / 126 errors / 28.000000000000004% coverage ] ****** [146 done /77 queued / 16 running / 126 errors / 28.000000000000004% coverage ] ****** [147 done /78 queued / 16 running / 127 errors / 28.000000000000004% coverage ] ****** [147 done /78 queued / 16 running / 127 errors / 28.000000000000004% coverage ] ****** [148 done /79 queued / 16 running / 127 errors / 28.000000000000004% coverage ] ****** [148 done /79 queued / 16 running / 127 errors / 28.000000000000004% coverage ] ****** [149 done /83 queued / 16 running / 128 errors / 28.000000000000004% coverage ] ****** [149 done /83 queued / 16 running / 128 errors / 28.000000000000004% coverage ] ****** [150 done /84 queued / 16 running / 129 errors / 28.000000000000004% coverage ] ****** [150 done /84 queued / 16 running / 129 errors / 28.000000000000004% coverage ] ****** [151 done /85 queued / 16 running / 130 errors / 28.000000000000004% coverage ] ****** [151 done /85 queued / 16 running / 130 errors / 28.000000000000004% coverage ] ****** [152 done /84 queued / 16 running / 130 errors / 28.000000000000004% coverage ] ****** [152 done /84 queued / 16 running / 130 errors / 28.000000000000004% coverage ] ****** [153 done /84 queued / 16 running / 131 errors / 28.000000000000004% coverage ] ****** [153 done /84 queued / 16 running / 131 errors / 28.000000000000004% coverage ] ****** [154 done /85 queued / 16 running / 132 errors / 28.000000000000004% coverage ] ****** [154 done /85 queued / 16 running / 132 errors / 28.000000000000004% coverage ] ****** [155 done /87 queued / 16 running / 133 errors / 28.000000000000004% coverage ] ****** [155 done /87 queued / 16 running / 133 errors / 28.000000000000004% coverage ] ****** [156 done /87 queued / 16 running / 134 errors / 28.000000000000004% coverage ] ****** [156 done /87 queued / 16 running / 134 errors / 28.000000000000004% coverage ] ****** [157 done /87 queued / 16 running / 135 errors / 28.000000000000004% coverage ] ****** [157 done /87 queued / 16 running / 135 errors / 28.000000000000004% coverage ] ****** [158 done /87 queued / 16 running / 136 errors / 28.000000000000004% coverage ] ****** [158 done /87 queued / 16 running / 136 errors / 28.000000000000004% coverage ] ****** [159 done /89 queued / 16 running / 137 errors / 28.000000000000004% coverage ] ****** [159 done /89 queued / 16 running / 137 errors / 28.000000000000004% coverage ] ****** [160 done /88 queued / 16 running / 138 errors / 28.000000000000004% coverage ] ****** [160 done /88 queued / 16 running / 138 errors / 28.000000000000004% coverage ] ****** [161 done /87 queued / 16 running / 139 errors / 28.000000000000004% coverage ] ****** [161 done /87 queued / 16 running / 139 errors / 28.000000000000004% coverage ] ****** [162 done /86 queued / 16 running / 140 errors / 28.000000000000004% coverage ] ****** [162 done /86 queued / 16 running / 140 errors / 28.000000000000004% coverage ] ****** [163 done /87 queued / 16 running / 141 errors / 28.000000000000004% coverage ] ****** [163 done /87 queued / 16 running / 141 errors / 28.000000000000004% coverage ] ****** [164 done /88 queued / 16 running / 142 errors / 28.000000000000004% coverage ] ****** [164 done /88 queued / 16 running / 142 errors / 28.000000000000004% coverage ] ****** [165 done /89 queued / 16 running / 143 errors / 28.000000000000004% coverage ] ****** [165 done /89 queued / 16 running / 143 errors / 28.000000000000004% coverage ] ****** [166 done /89 queued / 16 running / 144 errors / 28.000000000000004% coverage ] ****** [166 done /89 queued / 16 running / 144 errors / 28.000000000000004% coverage ] ****** [167 done /89 queued / 16 running / 145 errors / 28.000000000000004% coverage ] ****** [167 done /89 queued / 16 running / 145 errors / 28.000000000000004% coverage ] ****** [168 done /89 queued / 16 running / 146 errors / 28.000000000000004% coverage ] ****** [168 done /89 queued / 16 running / 146 errors / 28.000000000000004% coverage ] ****** [169 done /90 queued / 16 running / 147 errors / 28.000000000000004% coverage ] ****** [169 done /90 queued / 16 running / 147 errors / 28.000000000000004% coverage ] ****** [170 done /89 queued / 16 running / 148 errors / 28.000000000000004% coverage ] ****** [170 done /89 queued / 16 running / 148 errors / 28.000000000000004% coverage ] ****** [171 done /89 queued / 16 running / 149 errors / 28.000000000000004% coverage ] ****** [171 done /89 queued / 16 running / 149 errors / 28.000000000000004% coverage ] ****** [172 done /93 queued / 16 running / 150 errors / 28.000000000000004% coverage ] ****** [172 done /93 queued / 16 running / 150 errors / 28.000000000000004% coverage ] ****** [173 done /93 queued / 16 running / 151 errors / 28.000000000000004% coverage ] ****** [173 done /93 queued / 16 running / 151 errors / 28.000000000000004% coverage ] ****** [174 done /93 queued / 16 running / 152 errors / 28.000000000000004% coverage ] ****** [174 done /93 queued / 16 running / 152 errors / 28.000000000000004% coverage ] ****** [175 done /94 queued / 16 running / 153 errors / 28.000000000000004% coverage ] ****** [175 done /94 queued / 16 running / 153 errors / 28.000000000000004% coverage ] ****** [176 done /95 queued / 16 running / 154 errors / 28.000000000000004% coverage ] ****** [176 done /95 queued / 16 running / 154 errors / 28.000000000000004% coverage ] ****** [177 done /96 queued / 16 running / 155 errors / 28.000000000000004% coverage ] ****** [177 done /96 queued / 16 running / 155 errors / 28.000000000000004% coverage ] ****** [178 done /99 queued / 16 running / 156 errors / 28.000000000000004% coverage ] ****** [178 done /99 queued / 16 running / 156 errors / 28.000000000000004% coverage ] ****** [179 done /101 queued / 16 running / 157 errors / 28.000000000000004% coverage ] ****** [179 done /101 queued / 16 running / 157 errors / 28.000000000000004% coverage ] ****** [180 done /101 queued / 16 running / 158 errors / 28.000000000000004% coverage ] ****** [180 done /101 queued / 16 running / 158 errors / 28.000000000000004% coverage ] ****** [181 done /100 queued / 16 running / 159 errors / 28.000000000000004% coverage ] ****** [181 done /100 queued / 16 running / 159 errors / 28.000000000000004% coverage ] ****** [182 done /101 queued / 16 running / 160 errors / 28.000000000000004% coverage ] ****** [182 done /101 queued / 16 running / 160 errors / 28.000000000000004% coverage ] ****** [183 done /102 queued / 16 running / 161 errors / 28.000000000000004% coverage ] ****** [183 done /102 queued / 16 running / 161 errors / 28.000000000000004% coverage ] ****** [184 done /103 queued / 16 running / 162 errors / 28.000000000000004% coverage ] ****** [184 done /103 queued / 16 running / 162 errors / 28.000000000000004% coverage ] ****** [185 done /103 queued / 16 running / 163 errors / 28.000000000000004% coverage ] ****** [185 done /103 queued / 16 running / 163 errors / 28.000000000000004% coverage ] ****** [186 done /104 queued / 16 running / 164 errors / 28.000000000000004% coverage ] ****** [186 done /104 queued / 16 running / 164 errors / 28.000000000000004% coverage ] ****** [187 done /107 queued / 16 running / 165 errors / 28.000000000000004% coverage ] ****** [187 done /107 queued / 16 running / 165 errors / 28.000000000000004% coverage ] ****** [188 done /108 queued / 16 running / 166 errors / 28.000000000000004% coverage ] ****** [188 done /108 queued / 16 running / 166 errors / 28.000000000000004% coverage ] ****** [189 done /110 queued / 16 running / 167 errors / 28.000000000000004% coverage ] ****** [189 done /110 queued / 16 running / 167 errors / 28.000000000000004% coverage ] ****** [190 done /111 queued / 16 running / 168 errors / 28.000000000000004% coverage ] ****** [190 done /111 queued / 16 running / 168 errors / 28.000000000000004% coverage ] ****** [191 done /110 queued / 16 running / 169 errors / 28.000000000000004% coverage ] ****** [191 done /110 queued / 16 running / 169 errors / 28.000000000000004% coverage ] ****** [192 done /109 queued / 16 running / 170 errors / 28.000000000000004% coverage ] ****** [192 done /109 queued / 16 running / 170 errors / 28.000000000000004% coverage ] ****** [193 done /109 queued / 16 running / 171 errors / 28.000000000000004% coverage ] ****** [193 done /109 queued / 16 running / 171 errors / 28.000000000000004% coverage ] ****** [194 done /109 queued / 16 running / 172 errors / 28.000000000000004% coverage ] ****** [194 done /109 queued / 16 running / 172 errors / 28.000000000000004% coverage ] ****** [195 done /110 queued / 16 running / 173 errors / 28.000000000000004% coverage ] ****** [195 done /110 queued / 16 running / 173 errors / 28.000000000000004% coverage ] ****** [196 done /110 queued / 16 running / 174 errors / 28.000000000000004% coverage ] ****** [196 done /110 queued / 16 running / 174 errors / 28.000000000000004% coverage ] ****** [197 done /110 queued / 16 running / 175 errors / 28.000000000000004% coverage ] ****** [197 done /110 queued / 16 running / 175 errors / 28.000000000000004% coverage ] ****** [198 done /112 queued / 16 running / 176 errors / 28.000000000000004% coverage ] ****** [198 done /112 queued / 16 running / 176 errors / 28.000000000000004% coverage ] ****** [199 done /115 queued / 16 running / 177 errors / 28.000000000000004% coverage ] ****** [199 done /115 queued / 16 running / 177 errors / 28.000000000000004% coverage ] ****** [200 done /117 queued / 16 running / 178 errors / 28.000000000000004% coverage ] ****** [200 done /117 queued / 16 running / 178 errors / 28.000000000000004% coverage ] ****** [201 done /117 queued / 16 running / 179 errors / 28.000000000000004% coverage ] ****** [201 done /117 queued / 16 running / 179 errors / 28.000000000000004% coverage ] ****** [202 done /118 queued / 16 running / 179 errors / 28.000000000000004% coverage ] ****** [202 done /118 queued / 16 running / 179 errors / 28.000000000000004% coverage ] ****** [203 done /117 queued / 16 running / 180 errors / 28.000000000000004% coverage ] ****** [203 done /117 queued / 16 running / 180 errors / 28.000000000000004% coverage ] ****** [204 done /116 queued / 16 running / 181 errors / 28.000000000000004% coverage ] ****** [204 done /116 queued / 16 running / 181 errors / 28.000000000000004% coverage ] ****** [205 done /118 queued / 16 running / 182 errors / 28.000000000000004% coverage ] ****** [205 done /118 queued / 16 running / 182 errors / 28.000000000000004% coverage ] ****** [206 done /117 queued / 16 running / 183 errors / 28.000000000000004% coverage ] ****** [206 done /117 queued / 16 running / 183 errors / 28.000000000000004% coverage ] ****** [207 done /118 queued / 16 running / 184 errors / 28.000000000000004% coverage ] ****** [207 done /118 queued / 16 running / 184 errors / 28.000000000000004% coverage ] ****** [208 done /118 queued / 16 running / 185 errors / 28.000000000000004% coverage ] ****** [208 done /118 queued / 16 running / 185 errors / 28.000000000000004% coverage ] ****** [209 done /118 queued / 16 running / 186 errors / 28.000000000000004% coverage ] ****** [209 done /118 queued / 16 running / 186 errors / 28.000000000000004% coverage ] ****** [210 done /120 queued / 16 running / 187 errors / 28.000000000000004% coverage ] ****** [210 done /120 queued / 16 running / 187 errors / 28.000000000000004% coverage ] ****** [211 done /120 queued / 16 running / 188 errors / 28.000000000000004% coverage ] ****** [211 done /120 queued / 16 running / 188 errors / 28.000000000000004% coverage ] ****** [212 done /121 queued / 16 running / 188 errors / 28.000000000000004% coverage ] ****** [212 done /121 queued / 16 running / 188 errors / 28.000000000000004% coverage ] ****** [213 done /123 queued / 16 running / 189 errors / 28.000000000000004% coverage ] ****** [213 done /123 queued / 16 running / 189 errors / 28.000000000000004% coverage ] ****** [214 done /124 queued / 16 running / 190 errors / 28.000000000000004% coverage ] ****** [214 done /124 queued / 16 running / 190 errors / 28.000000000000004% coverage ] ****** [215 done /123 queued / 16 running / 191 errors / 28.000000000000004% coverage ] ****** [215 done /123 queued / 16 running / 191 errors / 28.000000000000004% coverage ] ****** [216 done /123 queued / 16 running / 192 errors / 28.000000000000004% coverage ] ****** [216 done /123 queued / 16 running / 192 errors / 28.000000000000004% coverage ] ****** [217 done /123 queued / 16 running / 193 errors / 28.000000000000004% coverage ] ****** [217 done /123 queued / 16 running / 193 errors / 28.000000000000004% coverage ] ****** [218 done /125 queued / 16 running / 194 errors / 28.000000000000004% coverage ] ****** [218 done /125 queued / 16 running / 194 errors / 28.000000000000004% coverage ] ****** [219 done /125 queued / 16 running / 195 errors / 28.000000000000004% coverage ] ****** [219 done /125 queued / 16 running / 195 errors / 28.000000000000004% coverage ] ****** [220 done /124 queued / 16 running / 196 errors / 28.000000000000004% coverage ] ****** [220 done /124 queued / 16 running / 196 errors / 28.000000000000004% coverage ] ****** [221 done /125 queued / 16 running / 197 errors / 28.000000000000004% coverage ] ****** [221 done /125 queued / 16 running / 197 errors / 28.000000000000004% coverage ] ****** [222 done /126 queued / 16 running / 198 errors / 28.000000000000004% coverage ] ****** [222 done /126 queued / 16 running / 198 errors / 28.000000000000004% coverage ] ****** [223 done /127 queued / 16 running / 199 errors / 28.000000000000004% coverage ] ****** [223 done /127 queued / 16 running / 199 errors / 28.000000000000004% coverage ] ****** [224 done /127 queued / 16 running / 200 errors / 28.000000000000004% coverage ] ****** [224 done /127 queued / 16 running / 200 errors / 28.000000000000004% coverage ] ****** [225 done /128 queued / 16 running / 200 errors / 28.000000000000004% coverage ] ****** [225 done /128 queued / 16 running / 200 errors / 28.000000000000004% coverage ] ****** [226 done /130 queued / 16 running / 201 errors / 28.000000000000004% coverage ] ****** [226 done /130 queued / 16 running / 201 errors / 28.000000000000004% coverage ] ****** [227 done /132 queued / 16 running / 201 errors / 28.000000000000004% coverage ] ****** [227 done /132 queued / 16 running / 201 errors / 28.000000000000004% coverage ] ****** [228 done /132 queued / 16 running / 202 errors / 28.000000000000004% coverage ] ****** [228 done /132 queued / 16 running / 202 errors / 28.000000000000004% coverage ] ****** [229 done /133 queued / 16 running / 203 errors / 28.000000000000004% coverage ] ****** [229 done /133 queued / 16 running / 203 errors / 28.000000000000004% coverage ] ****** [230 done /133 queued / 16 running / 204 errors / 28.000000000000004% coverage ] ****** [230 done /133 queued / 16 running / 204 errors / 28.000000000000004% coverage ] ****** [231 done /135 queued / 16 running / 205 errors / 28.000000000000004% coverage ] ****** [231 done /135 queued / 16 running / 205 errors / 28.000000000000004% coverage ] ****** [232 done /136 queued / 16 running / 206 errors / 28.000000000000004% coverage ] ****** [232 done /136 queued / 16 running / 206 errors / 28.000000000000004% coverage ] ****** [233 done /138 queued / 16 running / 207 errors / 28.000000000000004% coverage ] ****** [233 done /138 queued / 16 running / 207 errors / 28.000000000000004% coverage ] ****** [234 done /139 queued / 16 running / 208 errors / 28.000000000000004% coverage ] ****** [234 done /139 queued / 16 running / 208 errors / 28.000000000000004% coverage ] ****** [235 done /143 queued / 16 running / 209 errors / 28.000000000000004% coverage ] ****** [235 done /143 queued / 16 running / 209 errors / 28.000000000000004% coverage ] ****** [236 done /145 queued / 16 running / 210 errors / 28.000000000000004% coverage ] ****** [236 done /145 queued / 16 running / 210 errors / 28.000000000000004% coverage ] ****** [237 done /148 queued / 16 running / 211 errors / 28.000000000000004% coverage ] ****** [237 done /148 queued / 16 running / 211 errors / 28.000000000000004% coverage ] ****** [238 done /149 queued / 16 running / 212 errors / 28.000000000000004% coverage ] ****** [238 done /149 queued / 16 running / 212 errors / 28.000000000000004% coverage ] ****** [239 done /151 queued / 16 running / 213 errors / 28.000000000000004% coverage ] ****** [239 done /151 queued / 16 running / 213 errors / 28.000000000000004% coverage ] ****** [240 done /154 queued / 16 running / 214 errors / 28.000000000000004% coverage ] ****** [240 done /154 queued / 16 running / 214 errors / 28.000000000000004% coverage ] ****** [241 done /156 queued / 16 running / 215 errors / 28.000000000000004% coverage ] ****** [241 done /156 queued / 16 running / 215 errors / 28.000000000000004% coverage ] ****** [242 done /156 queued / 16 running / 215 errors / 28.000000000000004% coverage ] ****** [242 done /156 queued / 16 running / 215 errors / 28.000000000000004% coverage ] ****** [243 done /156 queued / 16 running / 216 errors / 28.000000000000004% coverage ] ****** [243 done /156 queued / 16 running / 216 errors / 28.000000000000004% coverage ] ****** [244 done /157 queued / 16 running / 216 errors / 28.000000000000004% coverage ] ****** [244 done /157 queued / 16 running / 216 errors / 28.000000000000004% coverage ] ****** [245 done /158 queued / 16 running / 217 errors / 28.000000000000004% coverage ] ****** [245 done /158 queued / 16 running / 217 errors / 28.000000000000004% coverage ] ****** [246 done /160 queued / 16 running / 218 errors / 28.000000000000004% coverage ] ****** [246 done /160 queued / 16 running / 218 errors / 28.000000000000004% coverage ] ****** [247 done /161 queued / 16 running / 219 errors / 28.000000000000004% coverage ] ****** [247 done /161 queued / 16 running / 219 errors / 28.000000000000004% coverage ] ****** [248 done /162 queued / 16 running / 220 errors / 28.000000000000004% coverage ] ****** [248 done /162 queued / 16 running / 220 errors / 28.000000000000004% coverage ] ****** [249 done /163 queued / 16 running / 221 errors / 28.000000000000004% coverage ] ****** [249 done /163 queued / 16 running / 221 errors / 28.000000000000004% coverage ] ****** [250 done /163 queued / 16 running / 222 errors / 28.000000000000004% coverage ] ****** [250 done /163 queued / 16 running / 222 errors / 28.000000000000004% coverage ] ****** [251 done /164 queued / 16 running / 223 errors / 28.000000000000004% coverage ] ****** [251 done /164 queued / 16 running / 223 errors / 28.000000000000004% coverage ] ****** [252 done /164 queued / 16 running / 224 errors / 28.000000000000004% coverage ] ****** [252 done /164 queued / 16 running / 224 errors / 28.000000000000004% coverage ] ****** [253 done /163 queued / 16 running / 225 errors / 28.000000000000004% coverage ] ****** [253 done /163 queued / 16 running / 225 errors / 28.000000000000004% coverage ] ****** [254 done /162 queued / 16 running / 226 errors / 28.000000000000004% coverage ] ****** [254 done /162 queued / 16 running / 226 errors / 28.000000000000004% coverage ] ****** [255 done /162 queued / 16 running / 227 errors / 28.000000000000004% coverage ] ****** [255 done /162 queued / 16 running / 227 errors / 28.000000000000004% coverage ] ****** [256 done /163 queued / 16 running / 228 errors / 28.000000000000004% coverage ] ****** [256 done /163 queued / 16 running / 228 errors / 28.000000000000004% coverage ] ****** [257 done /165 queued / 16 running / 229 errors / 28.000000000000004% coverage ] ****** [257 done /165 queued / 16 running / 229 errors / 28.000000000000004% coverage ] ****** [258 done /165 queued / 16 running / 230 errors / 28.000000000000004% coverage ] ****** [258 done /165 queued / 16 running / 230 errors / 28.000000000000004% coverage ] ****** [259 done /166 queued / 16 running / 231 errors / 28.000000000000004% coverage ] ****** [259 done /166 queued / 16 running / 231 errors / 28.000000000000004% coverage ] ****** [260 done /167 queued / 16 running / 232 errors / 28.000000000000004% coverage ] ****** [260 done /167 queued / 16 running / 232 errors / 28.000000000000004% coverage ] ****** [261 done /168 queued / 16 running / 232 errors / 28.000000000000004% coverage ] ****** [261 done /168 queued / 16 running / 232 errors / 28.000000000000004% coverage ] ****** [262 done /169 queued / 16 running / 233 errors / 28.000000000000004% coverage ] ****** [262 done /169 queued / 16 running / 233 errors / 28.000000000000004% coverage ] ****** [263 done /169 queued / 16 running / 234 errors / 28.000000000000004% coverage ] ****** [263 done /169 queued / 16 running / 234 errors / 28.000000000000004% coverage ] ****** [264 done /169 queued / 16 running / 235 errors / 28.000000000000004% coverage ] ****** [264 done /169 queued / 16 running / 235 errors / 28.000000000000004% coverage ] ****** [265 done /170 queued / 16 running / 236 errors / 28.000000000000004% coverage ] ****** [265 done /170 queued / 16 running / 236 errors / 28.000000000000004% coverage ] ****** [266 done /170 queued / 16 running / 237 errors / 28.000000000000004% coverage ] ****** [266 done /170 queued / 16 running / 237 errors / 28.000000000000004% coverage ] ****** [267 done /169 queued / 16 running / 238 errors / 28.000000000000004% coverage ] ****** [267 done /169 queued / 16 running / 238 errors / 28.000000000000004% coverage ] ****** [268 done /171 queued / 16 running / 239 errors / 28.000000000000004% coverage ] ****** [268 done /171 queued / 16 running / 239 errors / 28.000000000000004% coverage ] ****** [269 done /174 queued / 16 running / 240 errors / 28.000000000000004% coverage ] ****** [269 done /174 queued / 16 running / 240 errors / 28.000000000000004% coverage ] ****** [270 done /175 queued / 16 running / 241 errors / 28.000000000000004% coverage ] ****** [270 done /175 queued / 16 running / 241 errors / 28.000000000000004% coverage ] ****** [271 done /176 queued / 16 running / 242 errors / 28.000000000000004% coverage ] ****** [271 done /176 queued / 16 running / 242 errors / 28.000000000000004% coverage ] ****** [272 done /177 queued / 16 running / 243 errors / 28.000000000000004% coverage ] ****** [272 done /177 queued / 16 running / 243 errors / 28.000000000000004% coverage ] ****** [273 done /178 queued / 16 running / 243 errors / 28.000000000000004% coverage ] ****** [273 done /178 queued / 16 running / 243 errors / 28.000000000000004% coverage ] ****** [274 done /178 queued / 16 running / 244 errors / 28.000000000000004% coverage ] ****** [274 done /178 queued / 16 running / 244 errors / 28.000000000000004% coverage ] ****** [275 done /180 queued / 16 running / 245 errors / 28.000000000000004% coverage ] ****** [275 done /180 queued / 16 running / 245 errors / 28.000000000000004% coverage ] ****** [276 done /179 queued / 16 running / 246 errors / 28.000000000000004% coverage ] ****** [276 done /179 queued / 16 running / 246 errors / 28.000000000000004% coverage ] ****** [277 done /179 queued / 16 running / 247 errors / 28.000000000000004% coverage ] ****** [277 done /179 queued / 16 running / 247 errors / 28.000000000000004% coverage ] ****** [278 done /180 queued / 16 running / 248 errors / 28.000000000000004% coverage ] ****** [278 done /180 queued / 16 running / 248 errors / 28.000000000000004% coverage ] ****** [279 done /181 queued / 16 running / 248 errors / 28.000000000000004% coverage ] ****** [279 done /181 queued / 16 running / 248 errors / 28.000000000000004% coverage ] ****** [280 done /184 queued / 16 running / 248 errors / 28.000000000000004% coverage ] ****** [280 done /184 queued / 16 running / 248 errors / 28.000000000000004% coverage ] ****** [281 done /184 queued / 16 running / 249 errors / 28.000000000000004% coverage ] ****** [281 done /184 queued / 16 running / 249 errors / 28.000000000000004% coverage ] ****** [282 done /185 queued / 16 running / 249 errors / 28.000000000000004% coverage ] ****** [282 done /185 queued / 16 running / 249 errors / 28.000000000000004% coverage ] ****** [283 done /186 queued / 16 running / 250 errors / 28.000000000000004% coverage ] ****** [283 done /186 queued / 16 running / 250 errors / 28.000000000000004% coverage ] ****** [284 done /187 queued / 16 running / 251 errors / 28.000000000000004% coverage ] ****** [284 done /187 queued / 16 running / 251 errors / 28.000000000000004% coverage ] ****** [285 done /186 queued / 16 running / 252 errors / 28.000000000000004% coverage ] ****** [285 done /186 queued / 16 running / 252 errors / 28.000000000000004% coverage ] ****** [286 done /185 queued / 16 running / 253 errors / 28.000000000000004% coverage ] ****** [286 done /185 queued / 16 running / 253 errors / 28.000000000000004% coverage ] ****** [287 done /185 queued / 16 running / 254 errors / 28.000000000000004% coverage ] ****** [287 done /185 queued / 16 running / 254 errors / 28.000000000000004% coverage ] ****** [288 done /186 queued / 16 running / 255 errors / 28.000000000000004% coverage ] ****** [288 done /186 queued / 16 running / 255 errors / 28.000000000000004% coverage ] ****** [289 done /189 queued / 16 running / 255 errors / 28.000000000000004% coverage ] ****** [289 done /189 queued / 16 running / 255 errors / 28.000000000000004% coverage ] ****** [290 done /188 queued / 16 running / 256 errors / 28.000000000000004% coverage ] ****** [290 done /188 queued / 16 running / 256 errors / 28.000000000000004% coverage ] ****** [291 done /188 queued / 16 running / 257 errors / 28.000000000000004% coverage ] ****** [291 done /188 queued / 16 running / 257 errors / 28.000000000000004% coverage ] ****** [292 done /190 queued / 16 running / 258 errors / 28.000000000000004% coverage ] ****** [292 done /190 queued / 16 running / 258 errors / 28.000000000000004% coverage ] ****** [293 done /190 queued / 16 running / 259 errors / 28.000000000000004% coverage ] ****** [293 done /190 queued / 16 running / 259 errors / 28.000000000000004% coverage ] ****** [294 done /191 queued / 16 running / 260 errors / 28.000000000000004% coverage ] ****** [294 done /191 queued / 16 running / 260 errors / 28.000000000000004% coverage ] ****** [295 done /191 queued / 16 running / 260 errors / 28.000000000000004% coverage ] ****** [295 done /191 queued / 16 running / 260 errors / 28.000000000000004% coverage ] ****** [296 done /192 queued / 16 running / 260 errors / 28.000000000000004% coverage ] ****** [296 done /192 queued / 16 running / 260 errors / 28.000000000000004% coverage ] ****** [297 done /192 queued / 16 running / 261 errors / 28.000000000000004% coverage ] ****** [297 done /192 queued / 16 running / 261 errors / 28.000000000000004% coverage ] ****** [298 done /191 queued / 16 running / 261 errors / 28.000000000000004% coverage ] ****** [298 done /191 queued / 16 running / 261 errors / 28.000000000000004% coverage ] ****** [299 done /194 queued / 16 running / 262 errors / 28.000000000000004% coverage ] ****** [299 done /194 queued / 16 running / 262 errors / 28.000000000000004% coverage ] ****** [300 done /193 queued / 16 running / 262 errors / 28.000000000000004% coverage ] ****** [300 done /193 queued / 16 running / 262 errors / 28.000000000000004% coverage ] ****** [301 done /195 queued / 16 running / 263 errors / 28.000000000000004% coverage ] ****** [301 done /195 queued / 16 running / 263 errors / 28.000000000000004% coverage ] ****** [302 done /197 queued / 16 running / 264 errors / 28.000000000000004% coverage ] ****** [302 done /197 queued / 16 running / 264 errors / 28.000000000000004% coverage ] ****** [303 done /199 queued / 16 running / 265 errors / 28.000000000000004% coverage ] ****** [303 done /199 queued / 16 running / 265 errors / 28.000000000000004% coverage ] ****** [304 done /198 queued / 16 running / 265 errors / 28.000000000000004% coverage ] ****** [304 done /198 queued / 16 running / 265 errors / 28.000000000000004% coverage ] ****** [305 done /199 queued / 16 running / 265 errors / 28.000000000000004% coverage ] ****** [305 done /199 queued / 16 running / 265 errors / 28.000000000000004% coverage ] ****** [306 done /199 queued / 16 running / 265 errors / 28.000000000000004% coverage ] ****** [306 done /199 queued / 16 running / 265 errors / 28.000000000000004% coverage ] ****** [307 done /199 queued / 16 running / 265 errors / 28.000000000000004% coverage ] ****** [307 done /199 queued / 16 running / 265 errors / 28.000000000000004% coverage ] ****** [308 done /199 queued / 16 running / 266 errors / 28.000000000000004% coverage ] ****** [308 done /199 queued / 16 running / 266 errors / 28.000000000000004% coverage ] ****** [309 done /199 queued / 16 running / 267 errors / 28.000000000000004% coverage ] ****** [309 done /199 queued / 16 running / 267 errors / 28.000000000000004% coverage ] ****** [310 done /200 queued / 16 running / 268 errors / 28.000000000000004% coverage ] ****** [310 done /200 queued / 16 running / 268 errors / 28.000000000000004% coverage ] ****** [311 done /201 queued / 16 running / 269 errors / 28.000000000000004% coverage ] ****** [311 done /201 queued / 16 running / 269 errors / 28.000000000000004% coverage ] ****** [312 done /202 queued / 16 running / 270 errors / 28.000000000000004% coverage ] ****** [312 done /202 queued / 16 running / 270 errors / 28.000000000000004% coverage ] ****** [313 done /204 queued / 16 running / 271 errors / 28.000000000000004% coverage ] ****** [313 done /204 queued / 16 running / 271 errors / 28.000000000000004% coverage ] ****** [314 done /203 queued / 16 running / 272 errors / 28.000000000000004% coverage ] ****** [314 done /203 queued / 16 running / 272 errors / 28.000000000000004% coverage ] ****** [315 done /205 queued / 16 running / 273 errors / 28.000000000000004% coverage ] ****** [315 done /205 queued / 16 running / 273 errors / 28.000000000000004% coverage ] ****** [316 done /207 queued / 16 running / 274 errors / 28.000000000000004% coverage ] ****** [316 done /207 queued / 16 running / 274 errors / 28.000000000000004% coverage ] ****** [317 done /208 queued / 16 running / 275 errors / 28.000000000000004% coverage ] ****** [317 done /208 queued / 16 running / 275 errors / 28.000000000000004% coverage ] ****** [318 done /211 queued / 16 running / 276 errors / 28.000000000000004% coverage ] ****** [318 done /211 queued / 16 running / 276 errors / 28.000000000000004% coverage ] ****** [319 done /211 queued / 16 running / 277 errors / 28.000000000000004% coverage ] ****** [319 done /211 queued / 16 running / 277 errors / 28.000000000000004% coverage ] ****** [320 done /211 queued / 16 running / 278 errors / 28.000000000000004% coverage ] ****** [320 done /211 queued / 16 running / 278 errors / 28.000000000000004% coverage ] ****** [321 done /212 queued / 16 running / 279 errors / 28.000000000000004% coverage ] ****** [321 done /212 queued / 16 running / 279 errors / 28.000000000000004% coverage ] ****** [322 done /213 queued / 16 running / 280 errors / 28.000000000000004% coverage ] ****** [322 done /213 queued / 16 running / 280 errors / 28.000000000000004% coverage ] ****** [323 done /215 queued / 16 running / 281 errors / 28.000000000000004% coverage ] ****** [323 done /215 queued / 16 running / 281 errors / 28.000000000000004% coverage ] ****** [324 done /215 queued / 16 running / 282 errors / 28.000000000000004% coverage ] ****** [324 done /215 queued / 16 running / 282 errors / 28.000000000000004% coverage ] ****** [325 done /216 queued / 16 running / 283 errors / 28.000000000000004% coverage ] ****** [325 done /216 queued / 16 running / 283 errors / 28.000000000000004% coverage ] ****** [326 done /217 queued / 16 running / 284 errors / 28.000000000000004% coverage ] ****** [326 done /217 queued / 16 running / 284 errors / 28.000000000000004% coverage ] ****** [327 done /216 queued / 16 running / 285 errors / 28.000000000000004% coverage ] ****** [327 done /216 queued / 16 running / 285 errors / 28.000000000000004% coverage ] ****** [328 done /215 queued / 16 running / 286 errors / 28.000000000000004% coverage ] ****** [328 done /215 queued / 16 running / 286 errors / 28.000000000000004% coverage ] ****** [329 done /215 queued / 16 running / 287 errors / 28.000000000000004% coverage ] ****** [329 done /215 queued / 16 running / 287 errors / 28.000000000000004% coverage ] ****** [330 done /216 queued / 16 running / 287 errors / 28.000000000000004% coverage ] ****** [330 done /216 queued / 16 running / 287 errors / 28.000000000000004% coverage ] ****** [331 done /219 queued / 16 running / 288 errors / 28.000000000000004% coverage ] ****** [331 done /219 queued / 16 running / 288 errors / 28.000000000000004% coverage ] ****** [332 done /218 queued / 16 running / 289 errors / 28.000000000000004% coverage ] ****** [332 done /218 queued / 16 running / 289 errors / 28.000000000000004% coverage ] ****** [333 done /217 queued / 16 running / 290 errors / 28.000000000000004% coverage ] ****** [333 done /217 queued / 16 running / 290 errors / 28.000000000000004% coverage ] ****** [334 done /216 queued / 16 running / 291 errors / 28.000000000000004% coverage ] ****** [334 done /216 queued / 16 running / 291 errors / 28.000000000000004% coverage ] ****** [335 done /216 queued / 16 running / 292 errors / 28.000000000000004% coverage ] ****** [335 done /216 queued / 16 running / 292 errors / 28.000000000000004% coverage ] ****** [336 done /215 queued / 16 running / 293 errors / 28.000000000000004% coverage ] ****** [336 done /215 queued / 16 running / 293 errors / 28.000000000000004% coverage ] ****** [337 done /214 queued / 16 running / 294 errors / 28.000000000000004% coverage ] ****** [337 done /214 queued / 16 running / 294 errors / 28.000000000000004% coverage ] ****** [338 done /217 queued / 16 running / 294 errors / 28.000000000000004% coverage ] ****** [338 done /217 queued / 16 running / 294 errors / 28.000000000000004% coverage ] ****** [339 done /218 queued / 16 running / 295 errors / 28.000000000000004% coverage ] ****** [339 done /218 queued / 16 running / 295 errors / 28.000000000000004% coverage ] ****** [340 done /218 queued / 16 running / 296 errors / 28.000000000000004% coverage ] ****** [340 done /218 queued / 16 running / 296 errors / 28.000000000000004% coverage ] ****** [341 done /220 queued / 16 running / 297 errors / 28.000000000000004% coverage ] ****** [341 done /220 queued / 16 running / 297 errors / 28.000000000000004% coverage ] ****** [342 done /221 queued / 16 running / 298 errors / 28.000000000000004% coverage ] ****** [342 done /221 queued / 16 running / 298 errors / 28.000000000000004% coverage ] ****** [343 done /223 queued / 16 running / 298 errors / 28.000000000000004% coverage ] ****** [343 done /223 queued / 16 running / 298 errors / 28.000000000000004% coverage ] ****** [344 done /224 queued / 16 running / 299 errors / 28.000000000000004% coverage ] ****** [344 done /224 queued / 16 running / 299 errors / 28.000000000000004% coverage ] ****** [345 done /225 queued / 16 running / 300 errors / 28.000000000000004% coverage ] ****** [345 done /225 queued / 16 running / 300 errors / 28.000000000000004% coverage ] ****** [346 done /227 queued / 16 running / 300 errors / 28.000000000000004% coverage ] ****** [346 done /227 queued / 16 running / 300 errors / 28.000000000000004% coverage ] ****** [347 done /229 queued / 16 running / 301 errors / 28.000000000000004% coverage ] ****** [347 done /229 queued / 16 running / 301 errors / 28.000000000000004% coverage ] ****** [348 done /232 queued / 16 running / 302 errors / 28.000000000000004% coverage ] ****** [348 done /232 queued / 16 running / 302 errors / 28.000000000000004% coverage ] ****** [349 done /233 queued / 16 running / 303 errors / 28.000000000000004% coverage ] ****** [349 done /233 queued / 16 running / 303 errors / 28.000000000000004% coverage ] ****** [350 done /234 queued / 16 running / 304 errors / 28.000000000000004% coverage ] ****** [350 done /234 queued / 16 running / 304 errors / 28.000000000000004% coverage ] ****** [351 done /237 queued / 16 running / 305 errors / 28.000000000000004% coverage ] ****** [351 done /237 queued / 16 running / 305 errors / 28.000000000000004% coverage ] ****** [352 done /238 queued / 16 running / 305 errors / 28.000000000000004% coverage ] ****** [352 done /238 queued / 16 running / 305 errors / 28.000000000000004% coverage ] ****** [353 done /239 queued / 16 running / 306 errors / 28.000000000000004% coverage ] ****** [353 done /239 queued / 16 running / 306 errors / 28.000000000000004% coverage ] ****** [354 done /238 queued / 16 running / 306 errors / 28.000000000000004% coverage ] ****** [354 done /238 queued / 16 running / 306 errors / 28.000000000000004% coverage ] ****** [355 done /238 queued / 16 running / 306 errors / 28.000000000000004% coverage ] ****** [355 done /238 queued / 16 running / 306 errors / 28.000000000000004% coverage ] ****** [356 done /238 queued / 16 running / 307 errors / 28.000000000000004% coverage ] ****** [356 done /238 queued / 16 running / 307 errors / 28.000000000000004% coverage ] ****** [357 done /237 queued / 16 running / 308 errors / 28.000000000000004% coverage ] ****** [357 done /237 queued / 16 running / 308 errors / 28.000000000000004% coverage ] ****** [358 done /236 queued / 16 running / 308 errors / 28.000000000000004% coverage ] ****** [358 done /236 queued / 16 running / 308 errors / 28.000000000000004% coverage ] ****** [359 done /235 queued / 16 running / 308 errors / 28.000000000000004% coverage ] ****** [359 done /235 queued / 16 running / 308 errors / 28.000000000000004% coverage ] ****** [360 done /235 queued / 16 running / 309 errors / 28.000000000000004% coverage ] ****** [360 done /235 queued / 16 running / 309 errors / 28.000000000000004% coverage ] ****** [361 done /234 queued / 16 running / 310 errors / 28.000000000000004% coverage ] ****** [361 done /234 queued / 16 running / 310 errors / 28.000000000000004% coverage ] ****** [362 done /233 queued / 16 running / 311 errors / 28.000000000000004% coverage ] ****** [362 done /233 queued / 16 running / 311 errors / 28.000000000000004% coverage ] ****** [363 done /234 queued / 16 running / 311 errors / 28.000000000000004% coverage ] ****** [363 done /234 queued / 16 running / 311 errors / 28.000000000000004% coverage ] ****** [364 done /236 queued / 16 running / 312 errors / 28.000000000000004% coverage ] ****** [364 done /236 queued / 16 running / 312 errors / 28.000000000000004% coverage ] ****** [365 done /236 queued / 16 running / 313 errors / 28.000000000000004% coverage ] ****** [365 done /236 queued / 16 running / 313 errors / 28.000000000000004% coverage ] ****** [366 done /235 queued / 16 running / 314 errors / 28.000000000000004% coverage ] ****** [366 done /235 queued / 16 running / 314 errors / 28.000000000000004% coverage ] ****** [367 done /236 queued / 16 running / 315 errors / 28.000000000000004% coverage ] ****** [367 done /236 queued / 16 running / 315 errors / 28.000000000000004% coverage ] ****** [368 done /236 queued / 16 running / 316 errors / 28.000000000000004% coverage ] ****** [368 done /236 queued / 16 running / 316 errors / 28.000000000000004% coverage ] ****** [369 done /236 queued / 16 running / 316 errors / 28.000000000000004% coverage ] ****** [369 done /236 queued / 16 running / 316 errors / 28.000000000000004% coverage ] ****** [370 done /236 queued / 16 running / 317 errors / 28.000000000000004% coverage ] ****** [370 done /236 queued / 16 running / 317 errors / 28.000000000000004% coverage ] ****** [371 done /237 queued / 16 running / 318 errors / 28.000000000000004% coverage ] ****** [371 done /237 queued / 16 running / 318 errors / 28.000000000000004% coverage ] ****** [372 done /236 queued / 16 running / 319 errors / 28.000000000000004% coverage ] ****** [372 done /236 queued / 16 running / 319 errors / 28.000000000000004% coverage ] ****** [373 done /235 queued / 16 running / 320 errors / 28.000000000000004% coverage ] ****** [373 done /235 queued / 16 running / 320 errors / 28.000000000000004% coverage ] ****** [374 done /234 queued / 16 running / 321 errors / 28.000000000000004% coverage ] ****** [374 done /234 queued / 16 running / 321 errors / 28.000000000000004% coverage ] ****** [375 done /235 queued / 16 running / 322 errors / 28.000000000000004% coverage ] ****** [375 done /235 queued / 16 running / 322 errors / 28.000000000000004% coverage ] ****** [376 done /235 queued / 16 running / 323 errors / 28.000000000000004% coverage ] ****** [376 done /235 queued / 16 running / 323 errors / 28.000000000000004% coverage ] ****** [377 done /234 queued / 16 running / 324 errors / 28.000000000000004% coverage ] ****** [377 done /234 queued / 16 running / 324 errors / 28.000000000000004% coverage ] ****** [378 done /235 queued / 16 running / 325 errors / 28.000000000000004% coverage ] ****** [378 done /235 queued / 16 running / 325 errors / 28.000000000000004% coverage ] ****** [379 done /236 queued / 16 running / 325 errors / 28.000000000000004% coverage ] ****** [379 done /236 queued / 16 running / 325 errors / 28.000000000000004% coverage ] ****** [380 done /235 queued / 16 running / 326 errors / 28.000000000000004% coverage ] ****** [380 done /235 queued / 16 running / 326 errors / 28.000000000000004% coverage ] ****** [381 done /235 queued / 16 running / 327 errors / 28.000000000000004% coverage ] ****** [381 done /235 queued / 16 running / 327 errors / 28.000000000000004% coverage ] ****** [382 done /236 queued / 16 running / 328 errors / 28.000000000000004% coverage ] ****** [382 done /236 queued / 16 running / 328 errors / 28.000000000000004% coverage ] ****** [383 done /238 queued / 16 running / 329 errors / 28.000000000000004% coverage ] ****** [383 done /238 queued / 16 running / 329 errors / 28.000000000000004% coverage ] ****** [384 done /239 queued / 16 running / 330 errors / 28.000000000000004% coverage ] ****** [384 done /239 queued / 16 running / 330 errors / 28.000000000000004% coverage ] ****** [385 done /242 queued / 16 running / 330 errors / 28.000000000000004% coverage ] ****** [385 done /242 queued / 16 running / 330 errors / 28.000000000000004% coverage ] ****** [386 done /243 queued / 16 running / 331 errors / 28.000000000000004% coverage ] ****** [386 done /243 queued / 16 running / 331 errors / 28.000000000000004% coverage ] ****** [387 done /244 queued / 16 running / 332 errors / 28.000000000000004% coverage ] ****** [387 done /244 queued / 16 running / 332 errors / 28.000000000000004% coverage ] ****** [388 done /245 queued / 16 running / 333 errors / 28.000000000000004% coverage ] ****** [388 done /245 queued / 16 running / 333 errors / 28.000000000000004% coverage ] ****** [389 done /246 queued / 16 running / 334 errors / 28.000000000000004% coverage ] ****** [389 done /246 queued / 16 running / 334 errors / 28.000000000000004% coverage ] ****** [390 done /248 queued / 16 running / 335 errors / 28.000000000000004% coverage ] ****** [390 done /248 queued / 16 running / 335 errors / 28.000000000000004% coverage ] ****** [391 done /248 queued / 16 running / 336 errors / 28.000000000000004% coverage ] ****** [391 done /248 queued / 16 running / 336 errors / 28.000000000000004% coverage ] ****** [392 done /247 queued / 16 running / 337 errors / 28.000000000000004% coverage ] ****** [392 done /247 queued / 16 running / 337 errors / 28.000000000000004% coverage ] ****** [393 done /248 queued / 16 running / 338 errors / 28.000000000000004% coverage ] ****** [393 done /248 queued / 16 running / 338 errors / 28.000000000000004% coverage ] ****** [394 done /250 queued / 16 running / 339 errors / 28.000000000000004% coverage ] ****** [394 done /250 queued / 16 running / 339 errors / 28.000000000000004% coverage ] ****** [395 done /250 queued / 16 running / 340 errors / 28.000000000000004% coverage ] ****** [395 done /250 queued / 16 running / 340 errors / 28.000000000000004% coverage ] ****** [396 done /251 queued / 16 running / 341 errors / 28.000000000000004% coverage ] ****** [396 done /251 queued / 16 running / 341 errors / 28.000000000000004% coverage ] ****** [397 done /253 queued / 16 running / 342 errors / 28.000000000000004% coverage ] ****** [397 done /253 queued / 16 running / 342 errors / 28.000000000000004% coverage ] ****** [398 done /253 queued / 16 running / 343 errors / 28.000000000000004% coverage ] ****** [398 done /253 queued / 16 running / 343 errors / 28.000000000000004% coverage ] ****** [399 done /255 queued / 16 running / 344 errors / 28.000000000000004% coverage ] ****** [399 done /255 queued / 16 running / 344 errors / 28.000000000000004% coverage ] ****** [400 done /254 queued / 16 running / 345 errors / 28.000000000000004% coverage ] ****** [400 done /254 queued / 16 running / 345 errors / 28.000000000000004% coverage ] ****** [401 done /253 queued / 16 running / 345 errors / 28.000000000000004% coverage ] ****** [401 done /253 queued / 16 running / 345 errors / 28.000000000000004% coverage ] ****** [402 done /253 queued / 16 running / 345 errors / 28.000000000000004% coverage ] ****** [402 done /253 queued / 16 running / 345 errors / 28.000000000000004% coverage ] ****** [403 done /254 queued / 16 running / 346 errors / 28.000000000000004% coverage ] ****** [403 done /254 queued / 16 running / 346 errors / 28.000000000000004% coverage ] ****** [404 done /254 queued / 16 running / 347 errors / 28.000000000000004% coverage ] ****** [404 done /254 queued / 16 running / 347 errors / 28.000000000000004% coverage ] ****** [405 done /253 queued / 16 running / 347 errors / 28.000000000000004% coverage ] ****** [405 done /253 queued / 16 running / 347 errors / 28.000000000000004% coverage ] ****** [406 done /252 queued / 16 running / 347 errors / 28.000000000000004% coverage ] ****** [406 done /252 queued / 16 running / 347 errors / 28.000000000000004% coverage ] ****** [407 done /251 queued / 16 running / 348 errors / 28.000000000000004% coverage ] ****** [407 done /251 queued / 16 running / 348 errors / 28.000000000000004% coverage ] ****** [408 done /252 queued / 16 running / 349 errors / 28.000000000000004% coverage ] ****** [408 done /252 queued / 16 running / 349 errors / 28.000000000000004% coverage ] ****** [409 done /253 queued / 16 running / 350 errors / 28.000000000000004% coverage ] ****** [409 done /253 queued / 16 running / 350 errors / 28.000000000000004% coverage ] ****** [410 done /253 queued / 16 running / 351 errors / 28.000000000000004% coverage ] ****** [410 done /253 queued / 16 running / 351 errors / 28.000000000000004% coverage ] ****** [411 done /253 queued / 16 running / 352 errors / 28.000000000000004% coverage ] ****** [411 done /253 queued / 16 running / 352 errors / 28.000000000000004% coverage ] ****** [412 done /252 queued / 16 running / 353 errors / 28.000000000000004% coverage ] ****** [412 done /252 queued / 16 running / 353 errors / 28.000000000000004% coverage ] ****** [413 done /253 queued / 16 running / 354 errors / 28.000000000000004% coverage ] ****** [413 done /253 queued / 16 running / 354 errors / 28.000000000000004% coverage ] ****** [414 done /254 queued / 16 running / 355 errors / 28.000000000000004% coverage ] ****** [414 done /254 queued / 16 running / 355 errors / 28.000000000000004% coverage ] ****** [415 done /255 queued / 16 running / 356 errors / 28.000000000000004% coverage ] ****** [415 done /255 queued / 16 running / 356 errors / 28.000000000000004% coverage ] ****** [416 done /255 queued / 16 running / 357 errors / 28.000000000000004% coverage ] ****** [416 done /255 queued / 16 running / 357 errors / 28.000000000000004% coverage ] ****** [417 done /255 queued / 16 running / 358 errors / 28.000000000000004% coverage ] ****** [417 done /255 queued / 16 running / 358 errors / 28.000000000000004% coverage ] ****** [418 done /256 queued / 16 running / 359 errors / 28.000000000000004% coverage ] ****** [418 done /256 queued / 16 running / 359 errors / 28.000000000000004% coverage ] ****** [419 done /257 queued / 16 running / 360 errors / 28.000000000000004% coverage ] ****** [419 done /257 queued / 16 running / 360 errors / 28.000000000000004% coverage ] ****** [420 done /259 queued / 16 running / 361 errors / 28.000000000000004% coverage ] ****** [420 done /259 queued / 16 running / 361 errors / 28.000000000000004% coverage ] ****** [421 done /259 queued / 16 running / 362 errors / 28.000000000000004% coverage ] ****** [421 done /259 queued / 16 running / 362 errors / 28.000000000000004% coverage ] ****** [422 done /260 queued / 16 running / 363 errors / 28.000000000000004% coverage ] ****** [422 done /260 queued / 16 running / 363 errors / 28.000000000000004% coverage ] ****** [423 done /260 queued / 16 running / 364 errors / 28.000000000000004% coverage ] ****** [423 done /260 queued / 16 running / 364 errors / 28.000000000000004% coverage ] ****** [424 done /261 queued / 16 running / 365 errors / 28.000000000000004% coverage ] ****** [424 done /261 queued / 16 running / 365 errors / 28.000000000000004% coverage ] ****** [425 done /261 queued / 16 running / 366 errors / 28.000000000000004% coverage ] ****** [425 done /261 queued / 16 running / 366 errors / 28.000000000000004% coverage ] ****** [426 done /260 queued / 16 running / 367 errors / 28.000000000000004% coverage ] ****** [426 done /260 queued / 16 running / 367 errors / 28.000000000000004% coverage ] ****** [427 done /260 queued / 16 running / 368 errors / 28.000000000000004% coverage ] ****** [427 done /260 queued / 16 running / 368 errors / 28.000000000000004% coverage ] ****** [428 done /260 queued / 16 running / 369 errors / 28.000000000000004% coverage ] ****** [428 done /260 queued / 16 running / 369 errors / 28.000000000000004% coverage ] ****** [429 done /262 queued / 16 running / 370 errors / 28.000000000000004% coverage ] ****** [429 done /262 queued / 16 running / 370 errors / 28.000000000000004% coverage ] ****** [430 done /263 queued / 16 running / 371 errors / 28.000000000000004% coverage ] ****** [430 done /263 queued / 16 running / 371 errors / 28.000000000000004% coverage ] ****** [431 done /264 queued / 16 running / 372 errors / 28.000000000000004% coverage ] ****** [431 done /264 queued / 16 running / 372 errors / 28.000000000000004% coverage ] ****** [432 done /263 queued / 16 running / 373 errors / 28.000000000000004% coverage ] ****** [432 done /263 queued / 16 running / 373 errors / 28.000000000000004% coverage ] ****** [433 done /263 queued / 16 running / 374 errors / 28.000000000000004% coverage ] ****** [433 done /263 queued / 16 running / 374 errors / 28.000000000000004% coverage ] ****** [434 done /265 queued / 16 running / 375 errors / 28.000000000000004% coverage ] ****** [434 done /265 queued / 16 running / 375 errors / 28.000000000000004% coverage ] ****** [435 done /264 queued / 16 running / 376 errors / 28.000000000000004% coverage ] ****** [435 done /264 queued / 16 running / 376 errors / 28.000000000000004% coverage ] ****** [436 done /266 queued / 16 running / 377 errors / 28.000000000000004% coverage ] ****** [436 done /266 queued / 16 running / 377 errors / 28.000000000000004% coverage ] ****** [437 done /267 queued / 16 running / 378 errors / 28.000000000000004% coverage ] ****** [437 done /267 queued / 16 running / 378 errors / 28.000000000000004% coverage ] ****** [438 done /269 queued / 16 running / 379 errors / 28.000000000000004% coverage ] ****** [438 done /269 queued / 16 running / 379 errors / 28.000000000000004% coverage ] ****** [439 done /270 queued / 16 running / 380 errors / 28.000000000000004% coverage ] ****** [439 done /270 queued / 16 running / 380 errors / 28.000000000000004% coverage ] ****** [440 done /272 queued / 16 running / 381 errors / 28.000000000000004% coverage ] ****** [440 done /272 queued / 16 running / 381 errors / 28.000000000000004% coverage ] ****** [441 done /276 queued / 16 running / 382 errors / 28.000000000000004% coverage ] ****** [441 done /276 queued / 16 running / 382 errors / 28.000000000000004% coverage ] ****** [442 done /279 queued / 16 running / 383 errors / 28.000000000000004% coverage ] ****** [442 done /279 queued / 16 running / 383 errors / 28.000000000000004% coverage ] ****** [443 done /279 queued / 16 running / 384 errors / 28.000000000000004% coverage ] ****** [443 done /279 queued / 16 running / 384 errors / 28.000000000000004% coverage ] ****** [444 done /280 queued / 16 running / 385 errors / 28.000000000000004% coverage ] ****** [444 done /280 queued / 16 running / 385 errors / 28.000000000000004% coverage ] ****** [445 done /281 queued / 16 running / 386 errors / 28.000000000000004% coverage ] ****** [445 done /281 queued / 16 running / 386 errors / 28.000000000000004% coverage ] ****** [446 done /282 queued / 16 running / 387 errors / 28.000000000000004% coverage ] ****** [446 done /282 queued / 16 running / 387 errors / 28.000000000000004% coverage ] ****** [447 done /284 queued / 16 running / 388 errors / 28.000000000000004% coverage ] ****** [447 done /284 queued / 16 running / 388 errors / 28.000000000000004% coverage ] ****** [448 done /285 queued / 16 running / 389 errors / 28.000000000000004% coverage ] ****** [448 done /285 queued / 16 running / 389 errors / 28.000000000000004% coverage ] ****** [449 done /287 queued / 16 running / 390 errors / 28.000000000000004% coverage ] ****** [449 done /287 queued / 16 running / 390 errors / 28.000000000000004% coverage ] ****** [450 done /288 queued / 16 running / 391 errors / 28.000000000000004% coverage ] ****** [450 done /288 queued / 16 running / 391 errors / 28.000000000000004% coverage ] ****** [451 done /291 queued / 16 running / 392 errors / 28.000000000000004% coverage ] ****** [451 done /291 queued / 16 running / 392 errors / 28.000000000000004% coverage ] ****** [452 done /292 queued / 16 running / 393 errors / 28.000000000000004% coverage ] ****** [452 done /292 queued / 16 running / 393 errors / 28.000000000000004% coverage ] ****** [453 done /293 queued / 16 running / 394 errors / 28.000000000000004% coverage ] ****** [453 done /293 queued / 16 running / 394 errors / 28.000000000000004% coverage ] ****** [454 done /292 queued / 16 running / 395 errors / 28.000000000000004% coverage ] ****** [454 done /292 queued / 16 running / 395 errors / 28.000000000000004% coverage ] ****** [455 done /295 queued / 16 running / 396 errors / 28.000000000000004% coverage ] ****** [455 done /295 queued / 16 running / 396 errors / 28.000000000000004% coverage ] ****** [456 done /297 queued / 16 running / 397 errors / 28.000000000000004% coverage ] ****** [456 done /297 queued / 16 running / 397 errors / 28.000000000000004% coverage ] ****** [457 done /298 queued / 16 running / 398 errors / 28.000000000000004% coverage ] ****** [457 done /298 queued / 16 running / 398 errors / 28.000000000000004% coverage ] ****** [458 done /298 queued / 16 running / 399 errors / 28.000000000000004% coverage ] ****** [458 done /298 queued / 16 running / 399 errors / 28.000000000000004% coverage ] ****** [459 done /297 queued / 16 running / 400 errors / 28.000000000000004% coverage ] ****** [459 done /297 queued / 16 running / 400 errors / 28.000000000000004% coverage ] ****** [460 done /296 queued / 16 running / 401 errors / 28.000000000000004% coverage ] ****** [460 done /296 queued / 16 running / 401 errors / 28.000000000000004% coverage ] ****** [461 done /296 queued / 16 running / 402 errors / 28.000000000000004% coverage ] ****** [461 done /296 queued / 16 running / 402 errors / 28.000000000000004% coverage ] ****** [462 done /296 queued / 16 running / 403 errors / 28.000000000000004% coverage ] ****** [462 done /296 queued / 16 running / 403 errors / 28.000000000000004% coverage ] ****** [463 done /296 queued / 16 running / 404 errors / 28.000000000000004% coverage ] ****** [463 done /296 queued / 16 running / 404 errors / 28.000000000000004% coverage ] ****** [464 done /297 queued / 16 running / 405 errors / 28.000000000000004% coverage ] ****** [464 done /297 queued / 16 running / 405 errors / 28.000000000000004% coverage ] ****** [465 done /297 queued / 16 running / 406 errors / 28.000000000000004% coverage ] ****** [465 done /297 queued / 16 running / 406 errors / 28.000000000000004% coverage ] ****** [466 done /296 queued / 16 running / 407 errors / 28.000000000000004% coverage ] ****** [466 done /296 queued / 16 running / 407 errors / 28.000000000000004% coverage ] ****** [467 done /297 queued / 16 running / 408 errors / 28.000000000000004% coverage ] ****** [467 done /297 queued / 16 running / 408 errors / 28.000000000000004% coverage ] ****** [468 done /296 queued / 16 running / 409 errors / 28.000000000000004% coverage ] ****** [468 done /296 queued / 16 running / 409 errors / 28.000000000000004% coverage ] ****** [469 done /298 queued / 16 running / 410 errors / 28.000000000000004% coverage ] ****** [469 done /298 queued / 16 running / 410 errors / 28.000000000000004% coverage ] ****** [470 done /297 queued / 16 running / 411 errors / 28.000000000000004% coverage ] ****** [470 done /297 queued / 16 running / 411 errors / 28.000000000000004% coverage ] ****** [471 done /297 queued / 16 running / 412 errors / 28.000000000000004% coverage ] ****** [471 done /297 queued / 16 running / 412 errors / 28.000000000000004% coverage ] ****** [472 done /296 queued / 16 running / 413 errors / 28.000000000000004% coverage ] ****** [472 done /296 queued / 16 running / 413 errors / 28.000000000000004% coverage ] ****** [473 done /295 queued / 16 running / 414 errors / 28.000000000000004% coverage ] ****** [473 done /295 queued / 16 running / 414 errors / 28.000000000000004% coverage ] ****** [474 done /295 queued / 16 running / 415 errors / 28.000000000000004% coverage ] ****** [474 done /295 queued / 16 running / 415 errors / 28.000000000000004% coverage ] ****** [475 done /295 queued / 16 running / 416 errors / 28.000000000000004% coverage ] ****** [475 done /295 queued / 16 running / 416 errors / 28.000000000000004% coverage ] ****** [476 done /296 queued / 16 running / 417 errors / 28.000000000000004% coverage ] ****** [476 done /296 queued / 16 running / 417 errors / 28.000000000000004% coverage ] ****** [477 done /295 queued / 16 running / 418 errors / 28.000000000000004% coverage ] ****** [477 done /295 queued / 16 running / 418 errors / 28.000000000000004% coverage ] ****** [478 done /294 queued / 16 running / 419 errors / 28.000000000000004% coverage ] ****** [478 done /294 queued / 16 running / 419 errors / 28.000000000000004% coverage ] ****** [479 done /293 queued / 16 running / 420 errors / 28.000000000000004% coverage ] ****** [479 done /293 queued / 16 running / 420 errors / 28.000000000000004% coverage ] ****** [480 done /293 queued / 16 running / 421 errors / 28.000000000000004% coverage ] ****** [480 done /293 queued / 16 running / 421 errors / 28.000000000000004% coverage ] ****** [481 done /294 queued / 16 running / 422 errors / 28.000000000000004% coverage ] ****** [481 done /294 queued / 16 running / 422 errors / 28.000000000000004% coverage ] ****** [482 done /296 queued / 16 running / 423 errors / 28.000000000000004% coverage ] ****** [482 done /296 queued / 16 running / 423 errors / 28.000000000000004% coverage ] ****** [483 done /298 queued / 16 running / 424 errors / 28.000000000000004% coverage ] ****** [483 done /298 queued / 16 running / 424 errors / 28.000000000000004% coverage ] ****** [484 done /301 queued / 16 running / 425 errors / 28.000000000000004% coverage ] ****** [484 done /301 queued / 16 running / 425 errors / 28.000000000000004% coverage ] ****** [485 done /304 queued / 16 running / 426 errors / 28.000000000000004% coverage ] ****** [485 done /304 queued / 16 running / 426 errors / 28.000000000000004% coverage ] ****** [486 done /303 queued / 16 running / 427 errors / 28.000000000000004% coverage ] ****** [486 done /303 queued / 16 running / 427 errors / 28.000000000000004% coverage ] ****** [487 done /305 queued / 16 running / 428 errors / 28.000000000000004% coverage ] ****** [487 done /305 queued / 16 running / 428 errors / 28.000000000000004% coverage ] ****** [488 done /307 queued / 16 running / 429 errors / 28.000000000000004% coverage ] ****** [488 done /307 queued / 16 running / 429 errors / 28.000000000000004% coverage ] ****** [489 done /310 queued / 16 running / 430 errors / 28.000000000000004% coverage ] ****** [489 done /310 queued / 16 running / 430 errors / 28.000000000000004% coverage ] ****** [490 done /311 queued / 16 running / 431 errors / 28.000000000000004% coverage ] ****** [490 done /311 queued / 16 running / 431 errors / 28.000000000000004% coverage ] ****** [491 done /314 queued / 16 running / 432 errors / 28.000000000000004% coverage ] ****** [491 done /314 queued / 16 running / 432 errors / 28.000000000000004% coverage ] ****** [492 done /316 queued / 16 running / 433 errors / 28.000000000000004% coverage ] ****** [492 done /316 queued / 16 running / 433 errors / 28.000000000000004% coverage ] ****** [493 done /316 queued / 16 running / 434 errors / 28.000000000000004% coverage ] ****** [493 done /316 queued / 16 running / 434 errors / 28.000000000000004% coverage ] ****** [494 done /316 queued / 16 running / 435 errors / 28.000000000000004% coverage ] ****** [494 done /316 queued / 16 running / 435 errors / 28.000000000000004% coverage ] ****** [495 done /317 queued / 16 running / 436 errors / 28.000000000000004% coverage ] ****** [495 done /317 queued / 16 running / 436 errors / 28.000000000000004% coverage ] ****** [496 done /317 queued / 16 running / 437 errors / 28.000000000000004% coverage ] ****** [496 done /317 queued / 16 running / 437 errors / 28.000000000000004% coverage ] ****** [497 done /317 queued / 16 running / 438 errors / 28.000000000000004% coverage ] ****** [497 done /317 queued / 16 running / 438 errors / 28.000000000000004% coverage ] ****** [498 done /319 queued / 16 running / 439 errors / 28.000000000000004% coverage ] ****** [498 done /319 queued / 16 running / 439 errors / 28.000000000000004% coverage ] ****** [499 done /320 queued / 16 running / 440 errors / 28.000000000000004% coverage ] ****** [499 done /320 queued / 16 running / 440 errors / 28.000000000000004% coverage ] ****** [500 done /320 queued / 16 running / 441 errors / 28.000000000000004% coverage ] ****** [500 done /320 queued / 16 running / 441 errors / 28.000000000000004% coverage ] ****** [501 done /321 queued / 16 running / 442 errors / 28.000000000000004% coverage ] ****** [501 done /321 queued / 16 running / 442 errors / 28.000000000000004% coverage ] ****** [502 done /322 queued / 16 running / 443 errors / 28.000000000000004% coverage ] ****** [502 done /322 queued / 16 running / 443 errors / 28.000000000000004% coverage ] ****** [503 done /322 queued / 16 running / 444 errors / 28.000000000000004% coverage ] ****** [503 done /322 queued / 16 running / 444 errors / 28.000000000000004% coverage ] ****** [504 done /322 queued / 16 running / 445 errors / 28.000000000000004% coverage ] ****** [504 done /322 queued / 16 running / 445 errors / 28.000000000000004% coverage ] ****** [505 done /321 queued / 16 running / 446 errors / 28.000000000000004% coverage ] ****** [505 done /321 queued / 16 running / 446 errors / 28.000000000000004% coverage ] ****** [506 done /322 queued / 16 running / 447 errors / 28.000000000000004% coverage ] ****** [506 done /322 queued / 16 running / 447 errors / 28.000000000000004% coverage ] ****** [507 done /322 queued / 16 running / 448 errors / 28.000000000000004% coverage ] ****** [507 done /322 queued / 16 running / 448 errors / 28.000000000000004% coverage ] ****** [508 done /321 queued / 16 running / 449 errors / 28.000000000000004% coverage ] ****** [508 done /321 queued / 16 running / 449 errors / 28.000000000000004% coverage ] ****** [509 done /321 queued / 16 running / 450 errors / 28.000000000000004% coverage ] ****** [509 done /321 queued / 16 running / 450 errors / 28.000000000000004% coverage ] ****** [510 done /323 queued / 16 running / 451 errors / 28.000000000000004% coverage ] ****** [510 done /323 queued / 16 running / 451 errors / 28.000000000000004% coverage ] ****** [511 done /323 queued / 16 running / 452 errors / 28.000000000000004% coverage ] ****** [511 done /323 queued / 16 running / 452 errors / 28.000000000000004% coverage ] ****** [512 done /323 queued / 16 running / 453 errors / 28.000000000000004% coverage ] ****** [512 done /323 queued / 16 running / 453 errors / 28.000000000000004% coverage ] ****** [513 done /325 queued / 16 running / 454 errors / 28.000000000000004% coverage ] ****** [513 done /325 queued / 16 running / 454 errors / 28.000000000000004% coverage ] ****** [514 done /325 queued / 16 running / 455 errors / 28.000000000000004% coverage ] ****** [514 done /325 queued / 16 running / 455 errors / 28.000000000000004% coverage ] ****** [515 done /326 queued / 16 running / 456 errors / 28.000000000000004% coverage ] ****** [515 done /326 queued / 16 running / 456 errors / 28.000000000000004% coverage ] ****** [516 done /325 queued / 16 running / 457 errors / 28.000000000000004% coverage ] ****** [516 done /325 queued / 16 running / 457 errors / 28.000000000000004% coverage ] ****** [517 done /324 queued / 16 running / 458 errors / 28.000000000000004% coverage ] ****** [517 done /324 queued / 16 running / 458 errors / 28.000000000000004% coverage ] ****** [518 done /326 queued / 16 running / 459 errors / 28.000000000000004% coverage ] ****** [518 done /326 queued / 16 running / 459 errors / 28.000000000000004% coverage ] ****** [519 done /326 queued / 16 running / 460 errors / 28.000000000000004% coverage ] ****** [519 done /326 queued / 16 running / 460 errors / 28.000000000000004% coverage ] ****** [520 done /326 queued / 16 running / 461 errors / 28.000000000000004% coverage ] ****** [520 done /326 queued / 16 running / 461 errors / 28.000000000000004% coverage ] ****** [521 done /327 queued / 16 running / 462 errors / 28.000000000000004% coverage ] ****** [521 done /327 queued / 16 running / 462 errors / 28.000000000000004% coverage ] ****** [522 done /328 queued / 16 running / 463 errors / 28.000000000000004% coverage ] ****** [522 done /328 queued / 16 running / 463 errors / 28.000000000000004% coverage ] ****** [523 done /330 queued / 16 running / 464 errors / 28.000000000000004% coverage ] ****** [523 done /330 queued / 16 running / 464 errors / 28.000000000000004% coverage ] ****** [524 done /331 queued / 16 running / 464 errors / 28.000000000000004% coverage ] ****** [524 done /331 queued / 16 running / 464 errors / 28.000000000000004% coverage ] ****** [525 done /332 queued / 16 running / 465 errors / 28.000000000000004% coverage ] ****** [525 done /332 queued / 16 running / 465 errors / 28.000000000000004% coverage ] ****** [526 done /334 queued / 16 running / 466 errors / 28.000000000000004% coverage ] ****** [526 done /334 queued / 16 running / 466 errors / 28.000000000000004% coverage ] ****** [527 done /334 queued / 16 running / 467 errors / 28.000000000000004% coverage ] ****** [527 done /334 queued / 16 running / 467 errors / 28.000000000000004% coverage ] ****** [528 done /336 queued / 16 running / 468 errors / 28.000000000000004% coverage ] ****** [528 done /336 queued / 16 running / 468 errors / 28.000000000000004% coverage ] ****** [529 done /337 queued / 16 running / 469 errors / 28.000000000000004% coverage ] ****** [529 done /337 queued / 16 running / 469 errors / 28.000000000000004% coverage ] ****** [530 done /338 queued / 16 running / 470 errors / 28.000000000000004% coverage ] ****** [530 done /338 queued / 16 running / 470 errors / 28.000000000000004% coverage ] ****** [531 done /340 queued / 16 running / 471 errors / 28.000000000000004% coverage ] ****** [531 done /340 queued / 16 running / 471 errors / 28.000000000000004% coverage ] ****** [532 done /340 queued / 16 running / 472 errors / 28.000000000000004% coverage ] ****** [532 done /340 queued / 16 running / 472 errors / 28.000000000000004% coverage ] ****** [533 done /340 queued / 16 running / 473 errors / 28.000000000000004% coverage ] ****** [533 done /340 queued / 16 running / 473 errors / 28.000000000000004% coverage ] ****** [534 done /340 queued / 16 running / 474 errors / 28.000000000000004% coverage ] ****** [534 done /340 queued / 16 running / 474 errors / 28.000000000000004% coverage ] ****** [535 done /339 queued / 16 running / 475 errors / 28.000000000000004% coverage ] ****** [535 done /339 queued / 16 running / 475 errors / 28.000000000000004% coverage ] ****** [536 done /341 queued / 16 running / 476 errors / 28.000000000000004% coverage ] ****** [536 done /341 queued / 16 running / 476 errors / 28.000000000000004% coverage ] ****** [537 done /342 queued / 16 running / 477 errors / 28.000000000000004% coverage ] ****** [537 done /342 queued / 16 running / 477 errors / 28.000000000000004% coverage ] ****** [538 done /343 queued / 16 running / 478 errors / 28.000000000000004% coverage ] ****** [538 done /343 queued / 16 running / 478 errors / 28.000000000000004% coverage ] ****** [539 done /342 queued / 16 running / 479 errors / 28.000000000000004% coverage ] ****** [539 done /342 queued / 16 running / 479 errors / 28.000000000000004% coverage ] ****** [540 done /341 queued / 16 running / 480 errors / 28.000000000000004% coverage ] ****** [540 done /341 queued / 16 running / 480 errors / 28.000000000000004% coverage ] ****** [541 done /340 queued / 16 running / 481 errors / 28.000000000000004% coverage ] ****** [541 done /340 queued / 16 running / 481 errors / 28.000000000000004% coverage ] ****** [542 done /339 queued / 16 running / 482 errors / 28.000000000000004% coverage ] ****** [542 done /339 queued / 16 running / 482 errors / 28.000000000000004% coverage ] ****** [543 done /339 queued / 16 running / 483 errors / 28.000000000000004% coverage ] ****** [543 done /339 queued / 16 running / 483 errors / 28.000000000000004% coverage ] ****** [544 done /341 queued / 16 running / 484 errors / 28.000000000000004% coverage ] ****** [544 done /341 queued / 16 running / 484 errors / 28.000000000000004% coverage ] ****** [545 done /343 queued / 16 running / 485 errors / 28.000000000000004% coverage ] ****** [545 done /343 queued / 16 running / 485 errors / 28.000000000000004% coverage ] ****** [546 done /342 queued / 16 running / 486 errors / 28.000000000000004% coverage ] ****** [546 done /342 queued / 16 running / 486 errors / 28.000000000000004% coverage ] ****** [547 done /343 queued / 16 running / 487 errors / 28.000000000000004% coverage ] ****** [547 done /343 queued / 16 running / 487 errors / 28.000000000000004% coverage ] ****** [548 done /347 queued / 16 running / 488 errors / 28.000000000000004% coverage ] ****** [548 done /347 queued / 16 running / 488 errors / 28.000000000000004% coverage ] ****** [549 done /347 queued / 16 running / 489 errors / 28.000000000000004% coverage ] ****** [549 done /347 queued / 16 running / 489 errors / 28.000000000000004% coverage ] ****** [550 done /349 queued / 16 running / 490 errors / 28.000000000000004% coverage ] ****** [550 done /349 queued / 16 running / 490 errors / 28.000000000000004% coverage ] ****** [551 done /350 queued / 16 running / 491 errors / 28.000000000000004% coverage ] ****** [551 done /350 queued / 16 running / 491 errors / 28.000000000000004% coverage ] ****** [552 done /350 queued / 16 running / 492 errors / 28.000000000000004% coverage ] ****** [552 done /350 queued / 16 running / 492 errors / 28.000000000000004% coverage ] ****** [553 done /349 queued / 16 running / 493 errors / 28.000000000000004% coverage ] ****** [553 done /349 queued / 16 running / 493 errors / 28.000000000000004% coverage ] ****** [554 done /348 queued / 16 running / 494 errors / 28.000000000000004% coverage ] ****** [554 done /348 queued / 16 running / 494 errors / 28.000000000000004% coverage ] ****** [555 done /347 queued / 16 running / 495 errors / 28.000000000000004% coverage ] ****** [555 done /347 queued / 16 running / 495 errors / 28.000000000000004% coverage ] ****** [556 done /348 queued / 16 running / 496 errors / 28.000000000000004% coverage ] ****** [556 done /348 queued / 16 running / 496 errors / 28.000000000000004% coverage ] ****** [557 done /349 queued / 16 running / 497 errors / 28.000000000000004% coverage ] ****** [557 done /349 queued / 16 running / 497 errors / 28.000000000000004% coverage ] ****** [558 done /351 queued / 16 running / 498 errors / 28.000000000000004% coverage ] ****** [558 done /351 queued / 16 running / 498 errors / 28.000000000000004% coverage ] ****** [559 done /351 queued / 16 running / 499 errors / 28.000000000000004% coverage ] ****** [559 done /351 queued / 16 running / 499 errors / 28.000000000000004% coverage ] ****** [560 done /352 queued / 16 running / 500 errors / 28.000000000000004% coverage ] ****** [560 done /352 queued / 16 running / 500 errors / 28.000000000000004% coverage ] ****** [561 done /353 queued / 16 running / 501 errors / 28.000000000000004% coverage ] ****** [561 done /353 queued / 16 running / 501 errors / 28.000000000000004% coverage ] ****** [562 done /354 queued / 16 running / 502 errors / 28.000000000000004% coverage ] ****** [562 done /354 queued / 16 running / 502 errors / 28.000000000000004% coverage ] ****** [563 done /354 queued / 16 running / 503 errors / 28.000000000000004% coverage ] ****** [563 done /354 queued / 16 running / 503 errors / 28.000000000000004% coverage ] ****** [564 done /355 queued / 16 running / 504 errors / 28.000000000000004% coverage ] ****** [564 done /355 queued / 16 running / 504 errors / 28.000000000000004% coverage ] ****** [565 done /357 queued / 16 running / 505 errors / 28.000000000000004% coverage ] ****** [565 done /357 queued / 16 running / 505 errors / 28.000000000000004% coverage ] ****** [566 done /358 queued / 16 running / 506 errors / 28.000000000000004% coverage ] ****** [566 done /358 queued / 16 running / 506 errors / 28.000000000000004% coverage ] ****** [567 done /358 queued / 16 running / 507 errors / 28.000000000000004% coverage ] ****** [567 done /358 queued / 16 running / 507 errors / 28.000000000000004% coverage ] ****** [568 done /357 queued / 16 running / 508 errors / 28.000000000000004% coverage ] ****** [568 done /357 queued / 16 running / 508 errors / 28.000000000000004% coverage ] ****** [569 done /358 queued / 16 running / 508 errors / 28.000000000000004% coverage ] ****** [569 done /358 queued / 16 running / 508 errors / 28.000000000000004% coverage ] ****** [570 done /361 queued / 16 running / 509 errors / 28.000000000000004% coverage ] ****** [570 done /361 queued / 16 running / 509 errors / 28.000000000000004% coverage ] ****** [571 done /364 queued / 16 running / 510 errors / 28.000000000000004% coverage ] ****** [571 done /364 queued / 16 running / 510 errors / 28.000000000000004% coverage ] ****** [572 done /364 queued / 16 running / 511 errors / 28.000000000000004% coverage ] ****** [572 done /364 queued / 16 running / 511 errors / 28.000000000000004% coverage ] ****** [573 done /363 queued / 16 running / 512 errors / 28.000000000000004% coverage ] ****** [573 done /363 queued / 16 running / 512 errors / 28.000000000000004% coverage ] ****** [574 done /363 queued / 16 running / 513 errors / 28.000000000000004% coverage ] ****** [574 done /363 queued / 16 running / 513 errors / 28.000000000000004% coverage ] ****** [575 done /364 queued / 16 running / 514 errors / 28.000000000000004% coverage ] ****** [575 done /364 queued / 16 running / 514 errors / 28.000000000000004% coverage ] ****** [576 done /365 queued / 16 running / 515 errors / 28.000000000000004% coverage ] ****** [576 done /365 queued / 16 running / 515 errors / 28.000000000000004% coverage ] ****** [577 done /365 queued / 16 running / 516 errors / 28.000000000000004% coverage ] ****** [577 done /365 queued / 16 running / 516 errors / 28.000000000000004% coverage ] ****** [578 done /364 queued / 16 running / 517 errors / 28.000000000000004% coverage ] ****** [578 done /364 queued / 16 running / 517 errors / 28.000000000000004% coverage ] ****** [579 done /366 queued / 16 running / 518 errors / 28.000000000000004% coverage ] ****** [579 done /366 queued / 16 running / 518 errors / 28.000000000000004% coverage ] ****** [580 done /367 queued / 16 running / 519 errors / 28.000000000000004% coverage ] ****** [580 done /367 queued / 16 running / 519 errors / 28.000000000000004% coverage ] ****** [581 done /369 queued / 16 running / 520 errors / 28.000000000000004% coverage ] ****** [581 done /369 queued / 16 running / 520 errors / 28.000000000000004% coverage ] ****** [582 done /371 queued / 16 running / 521 errors / 28.000000000000004% coverage ] ****** [582 done /371 queued / 16 running / 521 errors / 28.000000000000004% coverage ] ****** [583 done /372 queued / 16 running / 522 errors / 28.000000000000004% coverage ] ****** [583 done /372 queued / 16 running / 522 errors / 28.000000000000004% coverage ] ****** [584 done /371 queued / 16 running / 523 errors / 28.000000000000004% coverage ] ****** [584 done /371 queued / 16 running / 523 errors / 28.000000000000004% coverage ] ****** [585 done /372 queued / 16 running / 523 errors / 28.000000000000004% coverage ] ****** [585 done /372 queued / 16 running / 523 errors / 28.000000000000004% coverage ] ****** [586 done /375 queued / 16 running / 523 errors / 28.000000000000004% coverage ] ****** [586 done /375 queued / 16 running / 523 errors / 28.000000000000004% coverage ] ****** [587 done /375 queued / 16 running / 524 errors / 28.000000000000004% coverage ] ****** [587 done /375 queued / 16 running / 524 errors / 28.000000000000004% coverage ] ****** [588 done /374 queued / 16 running / 525 errors / 28.000000000000004% coverage ] ****** [588 done /374 queued / 16 running / 525 errors / 28.000000000000004% coverage ] ****** [589 done /375 queued / 16 running / 526 errors / 28.000000000000004% coverage ] ****** [589 done /375 queued / 16 running / 526 errors / 28.000000000000004% coverage ] ****** [590 done /375 queued / 16 running / 527 errors / 28.000000000000004% coverage ] ****** [590 done /375 queued / 16 running / 527 errors / 28.000000000000004% coverage ] ****** [591 done /377 queued / 16 running / 528 errors / 28.000000000000004% coverage ] ****** [591 done /377 queued / 16 running / 528 errors / 28.000000000000004% coverage ] ****** [592 done /377 queued / 16 running / 529 errors / 28.000000000000004% coverage ] ****** [592 done /377 queued / 16 running / 529 errors / 28.000000000000004% coverage ] ****** [593 done /377 queued / 16 running / 530 errors / 28.000000000000004% coverage ] ****** [593 done /377 queued / 16 running / 530 errors / 28.000000000000004% coverage ] ****** [594 done /376 queued / 16 running / 531 errors / 28.000000000000004% coverage ] ****** [594 done /376 queued / 16 running / 531 errors / 28.000000000000004% coverage ] ****** [595 done /375 queued / 16 running / 532 errors / 28.000000000000004% coverage ] ****** [595 done /375 queued / 16 running / 532 errors / 28.000000000000004% coverage ] ****** [596 done /375 queued / 16 running / 533 errors / 28.000000000000004% coverage ] ****** [596 done /375 queued / 16 running / 533 errors / 28.000000000000004% coverage ] ****** [597 done /374 queued / 16 running / 534 errors / 28.000000000000004% coverage ] ****** [597 done /374 queued / 16 running / 534 errors / 28.000000000000004% coverage ] ****** [598 done /374 queued / 16 running / 535 errors / 28.000000000000004% coverage ] ****** [598 done /374 queued / 16 running / 535 errors / 28.000000000000004% coverage ] ****** [599 done /375 queued / 16 running / 536 errors / 28.000000000000004% coverage ] ****** [599 done /375 queued / 16 running / 536 errors / 28.000000000000004% coverage ] ****** [600 done /376 queued / 16 running / 537 errors / 28.000000000000004% coverage ] ****** [600 done /376 queued / 16 running / 537 errors / 28.000000000000004% coverage ] ****** [601 done /376 queued / 16 running / 538 errors / 28.000000000000004% coverage ] ****** [601 done /376 queued / 16 running / 538 errors / 28.000000000000004% coverage ] ****** [602 done /377 queued / 16 running / 538 errors / 28.000000000000004% coverage ] ****** [602 done /377 queued / 16 running / 538 errors / 28.000000000000004% coverage ] ****** [603 done /377 queued / 16 running / 538 errors / 28.000000000000004% coverage ] ****** [603 done /377 queued / 16 running / 538 errors / 28.000000000000004% coverage ] ****** [604 done /379 queued / 16 running / 539 errors / 28.000000000000004% coverage ] ****** [604 done /379 queued / 16 running / 539 errors / 28.000000000000004% coverage ] ****** [605 done /379 queued / 16 running / 539 errors / 28.000000000000004% coverage ] ****** [605 done /379 queued / 16 running / 539 errors / 28.000000000000004% coverage ] ****** [606 done /378 queued / 16 running / 540 errors / 28.000000000000004% coverage ] ****** [606 done /378 queued / 16 running / 540 errors / 28.000000000000004% coverage ] ****** [607 done /380 queued / 16 running / 541 errors / 28.000000000000004% coverage ] ****** [607 done /380 queued / 16 running / 541 errors / 28.000000000000004% coverage ] ****** [608 done /380 queued / 16 running / 542 errors / 28.000000000000004% coverage ] ****** [608 done /380 queued / 16 running / 542 errors / 28.000000000000004% coverage ] ****** [609 done /379 queued / 16 running / 543 errors / 28.000000000000004% coverage ] ****** [609 done /379 queued / 16 running / 543 errors / 28.000000000000004% coverage ] ****** [610 done /381 queued / 16 running / 544 errors / 28.000000000000004% coverage ] ****** [610 done /381 queued / 16 running / 544 errors / 28.000000000000004% coverage ] ****** [611 done /381 queued / 16 running / 545 errors / 28.000000000000004% coverage ] ****** [611 done /381 queued / 16 running / 545 errors / 28.000000000000004% coverage ] ****** [612 done /381 queued / 16 running / 546 errors / 28.000000000000004% coverage ] ****** [612 done /381 queued / 16 running / 546 errors / 28.000000000000004% coverage ] ****** [613 done /382 queued / 16 running / 547 errors / 28.000000000000004% coverage ] ****** [613 done /382 queued / 16 running / 547 errors / 28.000000000000004% coverage ] ****** [614 done /381 queued / 16 running / 548 errors / 28.000000000000004% coverage ] ****** [614 done /381 queued / 16 running / 548 errors / 28.000000000000004% coverage ] ****** [615 done /383 queued / 16 running / 549 errors / 28.000000000000004% coverage ] ****** [615 done /383 queued / 16 running / 549 errors / 28.000000000000004% coverage ] ****** [616 done /383 queued / 16 running / 550 errors / 28.000000000000004% coverage ] ****** [616 done /383 queued / 16 running / 550 errors / 28.000000000000004% coverage ] ****** [617 done /382 queued / 16 running / 551 errors / 28.000000000000004% coverage ] ****** [617 done /382 queued / 16 running / 551 errors / 28.000000000000004% coverage ] ****** [618 done /385 queued / 16 running / 552 errors / 28.000000000000004% coverage ] ****** [618 done /385 queued / 16 running / 552 errors / 28.000000000000004% coverage ] ****** [619 done /389 queued / 16 running / 553 errors / 28.000000000000004% coverage ] ****** [619 done /389 queued / 16 running / 553 errors / 28.000000000000004% coverage ] ****** [620 done /391 queued / 16 running / 554 errors / 28.000000000000004% coverage ] ****** [620 done /391 queued / 16 running / 554 errors / 28.000000000000004% coverage ] ****** [621 done /392 queued / 16 running / 554 errors / 28.000000000000004% coverage ] ****** [621 done /392 queued / 16 running / 554 errors / 28.000000000000004% coverage ] ****** [622 done /393 queued / 16 running / 555 errors / 28.000000000000004% coverage ] ****** [622 done /393 queued / 16 running / 555 errors / 28.000000000000004% coverage ] ****** [623 done /394 queued / 16 running / 556 errors / 28.000000000000004% coverage ] ****** [623 done /394 queued / 16 running / 556 errors / 28.000000000000004% coverage ] ****** [624 done /394 queued / 16 running / 557 errors / 28.000000000000004% coverage ] ****** [624 done /394 queued / 16 running / 557 errors / 28.000000000000004% coverage ] ****** [625 done /395 queued / 16 running / 558 errors / 28.000000000000004% coverage ] ****** [625 done /395 queued / 16 running / 558 errors / 28.000000000000004% coverage ] ****** [626 done /396 queued / 16 running / 559 errors / 28.000000000000004% coverage ] ****** [626 done /396 queued / 16 running / 559 errors / 28.000000000000004% coverage ] ****** [627 done /397 queued / 16 running / 559 errors / 28.000000000000004% coverage ] ****** [627 done /397 queued / 16 running / 559 errors / 28.000000000000004% coverage ] ****** [628 done /398 queued / 16 running / 560 errors / 28.000000000000004% coverage ] ****** [628 done /398 queued / 16 running / 560 errors / 28.000000000000004% coverage ] ****** [629 done /399 queued / 16 running / 561 errors / 28.000000000000004% coverage ] ****** [629 done /399 queued / 16 running / 561 errors / 28.000000000000004% coverage ] ****** [630 done /400 queued / 16 running / 562 errors / 28.000000000000004% coverage ] ****** [630 done /400 queued / 16 running / 562 errors / 28.000000000000004% coverage ] ****** [631 done /400 queued / 16 running / 563 errors / 28.000000000000004% coverage ] ****** [631 done /400 queued / 16 running / 563 errors / 28.000000000000004% coverage ] ****** [632 done /401 queued / 16 running / 564 errors / 28.000000000000004% coverage ] ****** [632 done /401 queued / 16 running / 564 errors / 28.000000000000004% coverage ] ****** [633 done /401 queued / 16 running / 565 errors / 28.000000000000004% coverage ] ****** [633 done /401 queued / 16 running / 565 errors / 28.000000000000004% coverage ] ****** [634 done /402 queued / 16 running / 566 errors / 28.000000000000004% coverage ] ****** [634 done /402 queued / 16 running / 566 errors / 28.000000000000004% coverage ] ****** [635 done /405 queued / 16 running / 567 errors / 28.000000000000004% coverage ] ****** [635 done /405 queued / 16 running / 567 errors / 28.000000000000004% coverage ] ****** [636 done /404 queued / 16 running / 568 errors / 28.000000000000004% coverage ] ****** [636 done /404 queued / 16 running / 568 errors / 28.000000000000004% coverage ] ****** [637 done /403 queued / 16 running / 569 errors / 28.000000000000004% coverage ] ****** [637 done /403 queued / 16 running / 569 errors / 28.000000000000004% coverage ] ****** [638 done /406 queued / 16 running / 570 errors / 28.000000000000004% coverage ] ****** [638 done /406 queued / 16 running / 570 errors / 28.000000000000004% coverage ] ****** [639 done /405 queued / 16 running / 571 errors / 28.000000000000004% coverage ] ****** [639 done /405 queued / 16 running / 571 errors / 28.000000000000004% coverage ] ****** [640 done /405 queued / 16 running / 572 errors / 28.000000000000004% coverage ] ****** [640 done /405 queued / 16 running / 572 errors / 28.000000000000004% coverage ] ****** [641 done /406 queued / 16 running / 573 errors / 28.000000000000004% coverage ] ****** [641 done /406 queued / 16 running / 573 errors / 28.000000000000004% coverage ] ****** [642 done /406 queued / 16 running / 574 errors / 28.000000000000004% coverage ] ****** [642 done /406 queued / 16 running / 574 errors / 28.000000000000004% coverage ] ****** [643 done /407 queued / 16 running / 575 errors / 28.000000000000004% coverage ] ****** [643 done /407 queued / 16 running / 575 errors / 28.000000000000004% coverage ] ****** [644 done /409 queued / 16 running / 575 errors / 28.000000000000004% coverage ] ****** [644 done /409 queued / 16 running / 575 errors / 28.000000000000004% coverage ] ****** [645 done /408 queued / 16 running / 576 errors / 28.000000000000004% coverage ] ****** [645 done /408 queued / 16 running / 576 errors / 28.000000000000004% coverage ] ****** [646 done /408 queued / 16 running / 577 errors / 28.000000000000004% coverage ] ****** [646 done /408 queued / 16 running / 577 errors / 28.000000000000004% coverage ] ****** [647 done /409 queued / 16 running / 578 errors / 28.000000000000004% coverage ] ****** [647 done /409 queued / 16 running / 578 errors / 28.000000000000004% coverage ] ****** [648 done /413 queued / 16 running / 579 errors / 28.000000000000004% coverage ] ****** [648 done /413 queued / 16 running / 579 errors / 28.000000000000004% coverage ] ****** [649 done /414 queued / 16 running / 580 errors / 28.000000000000004% coverage ] ****** [649 done /414 queued / 16 running / 580 errors / 28.000000000000004% coverage ] ****** [650 done /414 queued / 16 running / 581 errors / 28.000000000000004% coverage ] ****** [650 done /414 queued / 16 running / 581 errors / 28.000000000000004% coverage ] ****** [651 done /414 queued / 16 running / 582 errors / 28.000000000000004% coverage ] ****** [651 done /414 queued / 16 running / 582 errors / 28.000000000000004% coverage ] ****** [652 done /413 queued / 16 running / 583 errors / 28.000000000000004% coverage ] ****** [652 done /413 queued / 16 running / 583 errors / 28.000000000000004% coverage ] ****** [653 done /412 queued / 16 running / 584 errors / 28.000000000000004% coverage ] ****** [653 done /412 queued / 16 running / 584 errors / 28.000000000000004% coverage ] ****** [654 done /414 queued / 16 running / 585 errors / 28.000000000000004% coverage ] ****** [654 done /414 queued / 16 running / 585 errors / 28.000000000000004% coverage ] ****** [655 done /415 queued / 16 running / 586 errors / 28.000000000000004% coverage ] ****** [655 done /415 queued / 16 running / 586 errors / 28.000000000000004% coverage ] ****** [656 done /414 queued / 16 running / 587 errors / 28.000000000000004% coverage ] ****** [656 done /414 queued / 16 running / 587 errors / 28.000000000000004% coverage ] ****** [657 done /419 queued / 16 running / 588 errors / 28.000000000000004% coverage ] ****** [657 done /419 queued / 16 running / 588 errors / 28.000000000000004% coverage ] ****** [658 done /418 queued / 16 running / 589 errors / 28.000000000000004% coverage ] ****** [658 done /418 queued / 16 running / 589 errors / 28.000000000000004% coverage ] ****** [659 done /420 queued / 16 running / 590 errors / 28.000000000000004% coverage ] ****** [659 done /420 queued / 16 running / 590 errors / 28.000000000000004% coverage ] ****** [660 done /420 queued / 16 running / 590 errors / 28.000000000000004% coverage ] ****** [660 done /420 queued / 16 running / 590 errors / 28.000000000000004% coverage ] ****** [661 done /422 queued / 16 running / 591 errors / 28.000000000000004% coverage ] ****** [661 done /422 queued / 16 running / 591 errors / 28.000000000000004% coverage ] ****** [662 done /423 queued / 16 running / 591 errors / 28.000000000000004% coverage ] ****** [662 done /423 queued / 16 running / 591 errors / 28.000000000000004% coverage ] ****** [663 done /425 queued / 16 running / 592 errors / 28.000000000000004% coverage ] ****** [663 done /425 queued / 16 running / 592 errors / 28.000000000000004% coverage ] ****** [664 done /425 queued / 16 running / 593 errors / 28.000000000000004% coverage ] ****** [664 done /425 queued / 16 running / 593 errors / 28.000000000000004% coverage ] ****** [665 done /426 queued / 16 running / 594 errors / 28.000000000000004% coverage ] ****** [665 done /426 queued / 16 running / 594 errors / 28.000000000000004% coverage ] ****** [666 done /426 queued / 16 running / 595 errors / 28.000000000000004% coverage ] ****** [666 done /426 queued / 16 running / 595 errors / 28.000000000000004% coverage ] ****** [667 done /426 queued / 16 running / 596 errors / 28.000000000000004% coverage ] ****** [667 done /426 queued / 16 running / 596 errors / 28.000000000000004% coverage ] ****** [668 done /426 queued / 16 running / 597 errors / 28.000000000000004% coverage ] ****** [668 done /426 queued / 16 running / 597 errors / 28.000000000000004% coverage ] ****** [669 done /427 queued / 16 running / 597 errors / 28.000000000000004% coverage ] ****** [669 done /427 queued / 16 running / 597 errors / 28.000000000000004% coverage ] ****** [670 done /430 queued / 16 running / 598 errors / 28.000000000000004% coverage ] ****** [670 done /430 queued / 16 running / 598 errors / 28.000000000000004% coverage ] ****** [671 done /431 queued / 16 running / 599 errors / 28.000000000000004% coverage ] ****** [671 done /431 queued / 16 running / 599 errors / 28.000000000000004% coverage ] ****** [672 done /435 queued / 16 running / 600 errors / 28.000000000000004% coverage ] ****** [672 done /435 queued / 16 running / 600 errors / 28.000000000000004% coverage ] ****** [673 done /437 queued / 16 running / 601 errors / 28.000000000000004% coverage ] ****** [673 done /437 queued / 16 running / 601 errors / 28.000000000000004% coverage ] ****** [674 done /438 queued / 16 running / 602 errors / 28.000000000000004% coverage ] ****** [674 done /438 queued / 16 running / 602 errors / 28.000000000000004% coverage ] ****** [675 done /439 queued / 16 running / 603 errors / 28.000000000000004% coverage ] ****** [675 done /439 queued / 16 running / 603 errors / 28.000000000000004% coverage ] ****** [676 done /439 queued / 16 running / 604 errors / 28.000000000000004% coverage ] ****** [676 done /439 queued / 16 running / 604 errors / 28.000000000000004% coverage ] ****** [677 done /440 queued / 16 running / 605 errors / 28.000000000000004% coverage ] ****** [677 done /440 queued / 16 running / 605 errors / 28.000000000000004% coverage ] ****** [678 done /441 queued / 16 running / 605 errors / 28.000000000000004% coverage ] ****** [678 done /441 queued / 16 running / 605 errors / 28.000000000000004% coverage ] ****** [679 done /442 queued / 16 running / 606 errors / 28.000000000000004% coverage ] ****** [679 done /442 queued / 16 running / 606 errors / 28.000000000000004% coverage ] ****** [680 done /442 queued / 16 running / 607 errors / 28.000000000000004% coverage ] ****** [680 done /442 queued / 16 running / 607 errors / 28.000000000000004% coverage ] ****** [681 done /443 queued / 16 running / 608 errors / 28.000000000000004% coverage ] ****** [681 done /443 queued / 16 running / 608 errors / 28.000000000000004% coverage ] ****** [682 done /443 queued / 16 running / 609 errors / 28.000000000000004% coverage ] ****** [682 done /443 queued / 16 running / 609 errors / 28.000000000000004% coverage ] ****** [683 done /446 queued / 16 running / 610 errors / 28.000000000000004% coverage ] ****** [683 done /446 queued / 16 running / 610 errors / 28.000000000000004% coverage ] ****** [684 done /447 queued / 16 running / 611 errors / 28.000000000000004% coverage ] ****** [684 done /447 queued / 16 running / 611 errors / 28.000000000000004% coverage ] ****** [685 done /448 queued / 16 running / 612 errors / 28.000000000000004% coverage ] ****** [685 done /448 queued / 16 running / 612 errors / 28.000000000000004% coverage ] ****** [686 done /448 queued / 16 running / 613 errors / 28.000000000000004% coverage ] ****** [686 done /448 queued / 16 running / 613 errors / 28.000000000000004% coverage ] ****** [687 done /449 queued / 16 running / 614 errors / 28.000000000000004% coverage ] ****** [687 done /449 queued / 16 running / 614 errors / 28.000000000000004% coverage ] ****** [688 done /448 queued / 16 running / 615 errors / 28.000000000000004% coverage ] ****** [688 done /448 queued / 16 running / 615 errors / 28.000000000000004% coverage ] ****** [689 done /448 queued / 16 running / 616 errors / 28.000000000000004% coverage ] ****** [689 done /448 queued / 16 running / 616 errors / 28.000000000000004% coverage ] ****** [690 done /448 queued / 16 running / 617 errors / 28.000000000000004% coverage ] ****** [690 done /448 queued / 16 running / 617 errors / 28.000000000000004% coverage ] ****** [691 done /447 queued / 16 running / 618 errors / 28.000000000000004% coverage ] ****** [691 done /447 queued / 16 running / 618 errors / 28.000000000000004% coverage ] ****** [692 done /447 queued / 16 running / 619 errors / 28.000000000000004% coverage ] ****** [692 done /447 queued / 16 running / 619 errors / 28.000000000000004% coverage ] ****** [693 done /448 queued / 16 running / 620 errors / 28.000000000000004% coverage ] ****** [693 done /448 queued / 16 running / 620 errors / 28.000000000000004% coverage ] ****** [694 done /453 queued / 16 running / 621 errors / 28.000000000000004% coverage ] ****** [694 done /453 queued / 16 running / 621 errors / 28.000000000000004% coverage ] ****** [695 done /455 queued / 16 running / 622 errors / 28.000000000000004% coverage ] ****** [695 done /455 queued / 16 running / 622 errors / 28.000000000000004% coverage ] ****** [696 done /456 queued / 16 running / 623 errors / 28.000000000000004% coverage ] ****** [696 done /456 queued / 16 running / 623 errors / 28.000000000000004% coverage ] ****** [697 done /455 queued / 16 running / 624 errors / 28.000000000000004% coverage ] ****** [697 done /455 queued / 16 running / 624 errors / 28.000000000000004% coverage ] ****** [698 done /458 queued / 16 running / 625 errors / 28.000000000000004% coverage ] ****** [698 done /458 queued / 16 running / 625 errors / 28.000000000000004% coverage ] ****** [699 done /457 queued / 16 running / 626 errors / 28.000000000000004% coverage ] ****** [699 done /457 queued / 16 running / 626 errors / 28.000000000000004% coverage ] ****** [700 done /456 queued / 16 running / 627 errors / 28.000000000000004% coverage ] ****** [700 done /456 queued / 16 running / 627 errors / 28.000000000000004% coverage ] ****** [701 done /456 queued / 16 running / 628 errors / 28.000000000000004% coverage ] ****** [701 done /456 queued / 16 running / 628 errors / 28.000000000000004% coverage ] ****** [702 done /455 queued / 16 running / 629 errors / 28.000000000000004% coverage ] ****** [702 done /455 queued / 16 running / 629 errors / 28.000000000000004% coverage ] ****** [703 done /456 queued / 16 running / 630 errors / 28.000000000000004% coverage ] ****** [703 done /456 queued / 16 running / 630 errors / 28.000000000000004% coverage ] ****** [704 done /459 queued / 16 running / 631 errors / 28.000000000000004% coverage ] ****** [704 done /459 queued / 16 running / 631 errors / 28.000000000000004% coverage ] ****** [705 done /460 queued / 16 running / 632 errors / 28.000000000000004% coverage ] ****** [705 done /460 queued / 16 running / 632 errors / 28.000000000000004% coverage ] ****** [706 done /463 queued / 16 running / 633 errors / 28.000000000000004% coverage ] ****** [706 done /463 queued / 16 running / 633 errors / 28.000000000000004% coverage ] ****** [707 done /463 queued / 16 running / 634 errors / 28.000000000000004% coverage ] ****** [707 done /463 queued / 16 running / 634 errors / 28.000000000000004% coverage ] ****** [708 done /463 queued / 16 running / 635 errors / 28.000000000000004% coverage ] ****** [708 done /463 queued / 16 running / 635 errors / 28.000000000000004% coverage ] ****** [709 done /464 queued / 16 running / 636 errors / 28.000000000000004% coverage ] ****** [709 done /464 queued / 16 running / 636 errors / 28.000000000000004% coverage ] ****** [710 done /466 queued / 16 running / 637 errors / 28.000000000000004% coverage ] ****** [710 done /466 queued / 16 running / 637 errors / 28.000000000000004% coverage ] ****** [711 done /467 queued / 16 running / 638 errors / 28.000000000000004% coverage ] ****** [711 done /467 queued / 16 running / 638 errors / 28.000000000000004% coverage ] ****** [712 done /468 queued / 16 running / 639 errors / 28.000000000000004% coverage ] ****** [712 done /468 queued / 16 running / 639 errors / 28.000000000000004% coverage ] ****** [713 done /469 queued / 16 running / 640 errors / 28.000000000000004% coverage ] ****** [713 done /469 queued / 16 running / 640 errors / 28.000000000000004% coverage ] ****** [714 done /468 queued / 16 running / 641 errors / 28.000000000000004% coverage ] ****** [714 done /468 queued / 16 running / 641 errors / 28.000000000000004% coverage ] ****** [715 done /467 queued / 16 running / 642 errors / 28.000000000000004% coverage ] ****** [715 done /467 queued / 16 running / 642 errors / 28.000000000000004% coverage ] ****** [716 done /466 queued / 16 running / 643 errors / 28.000000000000004% coverage ] ****** [716 done /466 queued / 16 running / 643 errors / 28.000000000000004% coverage ] ****** [717 done /468 queued / 16 running / 644 errors / 28.000000000000004% coverage ] ****** [717 done /468 queued / 16 running / 644 errors / 28.000000000000004% coverage ] ****** [718 done /468 queued / 16 running / 645 errors / 28.000000000000004% coverage ] ****** [718 done /468 queued / 16 running / 645 errors / 28.000000000000004% coverage ] ****** [719 done /467 queued / 16 running / 646 errors / 28.000000000000004% coverage ] ****** [719 done /467 queued / 16 running / 646 errors / 28.000000000000004% coverage ] ****** [720 done /467 queued / 16 running / 647 errors / 28.000000000000004% coverage ] ****** [720 done /467 queued / 16 running / 647 errors / 28.000000000000004% coverage ] ****** [721 done /466 queued / 16 running / 648 errors / 28.000000000000004% coverage ] ****** [721 done /466 queued / 16 running / 648 errors / 28.000000000000004% coverage ] ****** [722 done /466 queued / 16 running / 649 errors / 28.000000000000004% coverage ] ****** [722 done /466 queued / 16 running / 649 errors / 28.000000000000004% coverage ] ****** [723 done /466 queued / 16 running / 650 errors / 28.000000000000004% coverage ] ****** [723 done /466 queued / 16 running / 650 errors / 28.000000000000004% coverage ] ****** [724 done /466 queued / 16 running / 651 errors / 28.000000000000004% coverage ] ****** [724 done /466 queued / 16 running / 651 errors / 28.000000000000004% coverage ] ****** [725 done /465 queued / 16 running / 652 errors / 28.000000000000004% coverage ] ****** [725 done /465 queued / 16 running / 652 errors / 28.000000000000004% coverage ] ****** [726 done /468 queued / 16 running / 653 errors / 28.000000000000004% coverage ] ****** [726 done /468 queued / 16 running / 653 errors / 28.000000000000004% coverage ] ****** [727 done /468 queued / 16 running / 654 errors / 28.000000000000004% coverage ] ****** [727 done /468 queued / 16 running / 654 errors / 28.000000000000004% coverage ] ****** [728 done /468 queued / 16 running / 655 errors / 28.000000000000004% coverage ] ****** [728 done /468 queued / 16 running / 655 errors / 28.000000000000004% coverage ] ****** [729 done /470 queued / 16 running / 656 errors / 28.000000000000004% coverage ] ****** [729 done /470 queued / 16 running / 656 errors / 28.000000000000004% coverage ] ****** [730 done /472 queued / 16 running / 657 errors / 28.000000000000004% coverage ] ****** [730 done /472 queued / 16 running / 657 errors / 28.000000000000004% coverage ] ****** [731 done /473 queued / 16 running / 658 errors / 28.000000000000004% coverage ] ****** [731 done /473 queued / 16 running / 658 errors / 28.000000000000004% coverage ] ****** [732 done /474 queued / 16 running / 658 errors / 28.000000000000004% coverage ] ****** [732 done /474 queued / 16 running / 658 errors / 28.000000000000004% coverage ] ****** [733 done /475 queued / 16 running / 658 errors / 28.000000000000004% coverage ] ****** [733 done /475 queued / 16 running / 658 errors / 28.000000000000004% coverage ] ****** [734 done /476 queued / 16 running / 658 errors / 28.000000000000004% coverage ] ****** [734 done /476 queued / 16 running / 658 errors / 28.000000000000004% coverage ] ****** [735 done /480 queued / 16 running / 659 errors / 28.000000000000004% coverage ] ****** [735 done /480 queued / 16 running / 659 errors / 28.000000000000004% coverage ] ****** [736 done /480 queued / 16 running / 660 errors / 28.000000000000004% coverage ] ****** [736 done /480 queued / 16 running / 660 errors / 28.000000000000004% coverage ] ****** [737 done /483 queued / 16 running / 661 errors / 28.000000000000004% coverage ] ****** [737 done /483 queued / 16 running / 661 errors / 28.000000000000004% coverage ] ****** [738 done /483 queued / 16 running / 662 errors / 28.000000000000004% coverage ] ****** [738 done /483 queued / 16 running / 662 errors / 28.000000000000004% coverage ] ****** [739 done /484 queued / 16 running / 663 errors / 28.000000000000004% coverage ] ****** [739 done /484 queued / 16 running / 663 errors / 28.000000000000004% coverage ] ****** [740 done /485 queued / 16 running / 664 errors / 28.000000000000004% coverage ] ****** [740 done /485 queued / 16 running / 664 errors / 28.000000000000004% coverage ] ****** [741 done /486 queued / 16 running / 665 errors / 28.000000000000004% coverage ] ****** [741 done /486 queued / 16 running / 665 errors / 28.000000000000004% coverage ] ****** [742 done /487 queued / 16 running / 666 errors / 28.000000000000004% coverage ] ****** [742 done /487 queued / 16 running / 666 errors / 28.000000000000004% coverage ] ****** [743 done /487 queued / 16 running / 667 errors / 28.000000000000004% coverage ] ****** [743 done /487 queued / 16 running / 667 errors / 28.000000000000004% coverage ] ****** [744 done /487 queued / 16 running / 668 errors / 28.000000000000004% coverage ] ****** [744 done /487 queued / 16 running / 668 errors / 28.000000000000004% coverage ] ****** [745 done /487 queued / 16 running / 669 errors / 28.000000000000004% coverage ] ****** [745 done /487 queued / 16 running / 669 errors / 28.000000000000004% coverage ] ****** [746 done /488 queued / 16 running / 670 errors / 28.000000000000004% coverage ] ****** [746 done /488 queued / 16 running / 670 errors / 28.000000000000004% coverage ] ****** [747 done /492 queued / 16 running / 670 errors / 28.000000000000004% coverage ] ****** [747 done /492 queued / 16 running / 670 errors / 28.000000000000004% coverage ] ****** [748 done /493 queued / 16 running / 671 errors / 28.000000000000004% coverage ] ****** [748 done /493 queued / 16 running / 671 errors / 28.000000000000004% coverage ] ****** [749 done /494 queued / 16 running / 672 errors / 28.000000000000004% coverage ] ****** [749 done /494 queued / 16 running / 672 errors / 28.000000000000004% coverage ] ****** [750 done /496 queued / 16 running / 672 errors / 28.000000000000004% coverage ] ****** [750 done /496 queued / 16 running / 672 errors / 28.000000000000004% coverage ] ****** [751 done /496 queued / 16 running / 673 errors / 28.000000000000004% coverage ] ****** [751 done /496 queued / 16 running / 673 errors / 28.000000000000004% coverage ] ****** [752 done /496 queued / 16 running / 674 errors / 28.000000000000004% coverage ] ****** [752 done /496 queued / 16 running / 674 errors / 28.000000000000004% coverage ] ****** [753 done /497 queued / 16 running / 675 errors / 28.000000000000004% coverage ] ****** [753 done /497 queued / 16 running / 675 errors / 28.000000000000004% coverage ] ****** [754 done /497 queued / 16 running / 676 errors / 28.000000000000004% coverage ] ****** [754 done /497 queued / 16 running / 676 errors / 28.000000000000004% coverage ] ****** [755 done /497 queued / 16 running / 677 errors / 28.000000000000004% coverage ] ****** [755 done /497 queued / 16 running / 677 errors / 28.000000000000004% coverage ] ****** [756 done /498 queued / 16 running / 678 errors / 28.000000000000004% coverage ] ****** [756 done /498 queued / 16 running / 678 errors / 28.000000000000004% coverage ] ****** [757 done /498 queued / 16 running / 679 errors / 28.000000000000004% coverage ] ****** [757 done /498 queued / 16 running / 679 errors / 28.000000000000004% coverage ] ****** [758 done /499 queued / 16 running / 680 errors / 28.000000000000004% coverage ] ****** [758 done /499 queued / 16 running / 680 errors / 28.000000000000004% coverage ] ****** [759 done /501 queued / 16 running / 681 errors / 28.000000000000004% coverage ] ****** [759 done /501 queued / 16 running / 681 errors / 28.000000000000004% coverage ] ****** [760 done /501 queued / 16 running / 682 errors / 28.000000000000004% coverage ] ****** [760 done /501 queued / 16 running / 682 errors / 28.000000000000004% coverage ] ****** [761 done /503 queued / 16 running / 683 errors / 28.000000000000004% coverage ] ****** [761 done /503 queued / 16 running / 683 errors / 28.000000000000004% coverage ] ****** [762 done /502 queued / 16 running / 684 errors / 28.000000000000004% coverage ] ****** [762 done /502 queued / 16 running / 684 errors / 28.000000000000004% coverage ] ****** [763 done /503 queued / 16 running / 684 errors / 28.000000000000004% coverage ] ****** [763 done /503 queued / 16 running / 684 errors / 28.000000000000004% coverage ] ****** [764 done /504 queued / 16 running / 685 errors / 28.000000000000004% coverage ] ****** [764 done /504 queued / 16 running / 685 errors / 28.000000000000004% coverage ] ****** [765 done /504 queued / 16 running / 685 errors / 28.000000000000004% coverage ] ****** [765 done /504 queued / 16 running / 685 errors / 28.000000000000004% coverage ] ****** [766 done /503 queued / 16 running / 686 errors / 28.000000000000004% coverage ] ****** [766 done /503 queued / 16 running / 686 errors / 28.000000000000004% coverage ] ****** [767 done /504 queued / 16 running / 686 errors / 28.000000000000004% coverage ] ****** [767 done /504 queued / 16 running / 686 errors / 28.000000000000004% coverage ] ****** [768 done /503 queued / 16 running / 687 errors / 28.000000000000004% coverage ] ****** [768 done /503 queued / 16 running / 687 errors / 28.000000000000004% coverage ] ****** [769 done /503 queued / 16 running / 688 errors / 28.000000000000004% coverage ] ****** [769 done /503 queued / 16 running / 688 errors / 28.000000000000004% coverage ] ****** [770 done /503 queued / 16 running / 689 errors / 28.000000000000004% coverage ] ****** [770 done /503 queued / 16 running / 689 errors / 28.000000000000004% coverage ] ****** [771 done /503 queued / 16 running / 690 errors / 28.000000000000004% coverage ] ****** [771 done /503 queued / 16 running / 690 errors / 28.000000000000004% coverage ] ****** [772 done /502 queued / 16 running / 691 errors / 28.000000000000004% coverage ] ****** [772 done /502 queued / 16 running / 691 errors / 28.000000000000004% coverage ] ****** [773 done /502 queued / 16 running / 692 errors / 28.000000000000004% coverage ] ****** [773 done /502 queued / 16 running / 692 errors / 28.000000000000004% coverage ] ****** [774 done /502 queued / 16 running / 692 errors / 28.000000000000004% coverage ] ****** [774 done /502 queued / 16 running / 692 errors / 28.000000000000004% coverage ] ****** [775 done /501 queued / 16 running / 693 errors / 28.000000000000004% coverage ] ****** [775 done /501 queued / 16 running / 693 errors / 28.000000000000004% coverage ] ****** [776 done /501 queued / 16 running / 693 errors / 28.000000000000004% coverage ] ****** [776 done /501 queued / 16 running / 693 errors / 28.000000000000004% coverage ] ****** [777 done /500 queued / 16 running / 694 errors / 28.000000000000004% coverage ] ****** [777 done /500 queued / 16 running / 694 errors / 28.000000000000004% coverage ] ****** [778 done /503 queued / 16 running / 694 errors / 28.000000000000004% coverage ] ****** [778 done /503 queued / 16 running / 694 errors / 28.000000000000004% coverage ] ****** [779 done /502 queued / 16 running / 695 errors / 28.000000000000004% coverage ] ****** [779 done /502 queued / 16 running / 695 errors / 28.000000000000004% coverage ] ****** [780 done /501 queued / 16 running / 696 errors / 28.000000000000004% coverage ] ****** [780 done /501 queued / 16 running / 696 errors / 28.000000000000004% coverage ] ****** [781 done /503 queued / 16 running / 697 errors / 28.000000000000004% coverage ] ****** [781 done /503 queued / 16 running / 697 errors / 28.000000000000004% coverage ] ****** [782 done /504 queued / 16 running / 698 errors / 28.000000000000004% coverage ] ****** [782 done /504 queued / 16 running / 698 errors / 28.000000000000004% coverage ] ****** [783 done /505 queued / 16 running / 698 errors / 28.000000000000004% coverage ] ****** [783 done /505 queued / 16 running / 698 errors / 28.000000000000004% coverage ] ****** [784 done /506 queued / 16 running / 699 errors / 28.000000000000004% coverage ] ****** [784 done /506 queued / 16 running / 699 errors / 28.000000000000004% coverage ] ****** [785 done /508 queued / 16 running / 700 errors / 28.000000000000004% coverage ] ****** [785 done /508 queued / 16 running / 700 errors / 28.000000000000004% coverage ] ****** [786 done /512 queued / 16 running / 701 errors / 28.000000000000004% coverage ] ****** [786 done /512 queued / 16 running / 701 errors / 28.000000000000004% coverage ] ****** [787 done /513 queued / 16 running / 702 errors / 28.000000000000004% coverage ] ****** [787 done /513 queued / 16 running / 702 errors / 28.000000000000004% coverage ] ****** [788 done /513 queued / 16 running / 702 errors / 28.000000000000004% coverage ] ****** [788 done /513 queued / 16 running / 702 errors / 28.000000000000004% coverage ] ****** [789 done /513 queued / 16 running / 703 errors / 28.000000000000004% coverage ] ****** [789 done /513 queued / 16 running / 703 errors / 28.000000000000004% coverage ] ****** [790 done /514 queued / 16 running / 704 errors / 28.000000000000004% coverage ] ****** [790 done /514 queued / 16 running / 704 errors / 28.000000000000004% coverage ] ****** [791 done /515 queued / 16 running / 705 errors / 28.000000000000004% coverage ] ****** [791 done /515 queued / 16 running / 705 errors / 28.000000000000004% coverage ] ****** [792 done /518 queued / 16 running / 706 errors / 28.000000000000004% coverage ] ****** [792 done /518 queued / 16 running / 706 errors / 28.000000000000004% coverage ] ****** [793 done /520 queued / 16 running / 707 errors / 28.000000000000004% coverage ] ****** [793 done /520 queued / 16 running / 707 errors / 28.000000000000004% coverage ] ****** [794 done /520 queued / 16 running / 707 errors / 28.000000000000004% coverage ] ****** [794 done /520 queued / 16 running / 707 errors / 28.000000000000004% coverage ] ****** [795 done /522 queued / 16 running / 708 errors / 28.000000000000004% coverage ] ****** [795 done /522 queued / 16 running / 708 errors / 28.000000000000004% coverage ] ****** [796 done /522 queued / 16 running / 708 errors / 28.000000000000004% coverage ] ****** [796 done /522 queued / 16 running / 708 errors / 28.000000000000004% coverage ] ****** [797 done /523 queued / 16 running / 708 errors / 28.000000000000004% coverage ] ****** [797 done /523 queued / 16 running / 708 errors / 28.000000000000004% coverage ] ****** [798 done /525 queued / 16 running / 709 errors / 28.000000000000004% coverage ] ****** [798 done /525 queued / 16 running / 709 errors / 28.000000000000004% coverage ] ****** [799 done /525 queued / 16 running / 710 errors / 28.000000000000004% coverage ] ****** [799 done /525 queued / 16 running / 710 errors / 28.000000000000004% coverage ] ****** [800 done /526 queued / 16 running / 711 errors / 28.000000000000004% coverage ] ****** [800 done /526 queued / 16 running / 711 errors / 28.000000000000004% coverage ] ****** [801 done /527 queued / 16 running / 712 errors / 28.000000000000004% coverage ] ****** [801 done /527 queued / 16 running / 712 errors / 28.000000000000004% coverage ] ****** [802 done /531 queued / 16 running / 713 errors / 28.000000000000004% coverage ] ****** [802 done /531 queued / 16 running / 713 errors / 28.000000000000004% coverage ] ****** [803 done /533 queued / 16 running / 714 errors / 28.000000000000004% coverage ] ****** [803 done /533 queued / 16 running / 714 errors / 28.000000000000004% coverage ] ****** [804 done /535 queued / 16 running / 715 errors / 28.000000000000004% coverage ] ****** [804 done /535 queued / 16 running / 715 errors / 28.000000000000004% coverage ] ****** [805 done /538 queued / 16 running / 716 errors / 28.000000000000004% coverage ] ****** [805 done /538 queued / 16 running / 716 errors / 28.000000000000004% coverage ] ****** [806 done /537 queued / 16 running / 717 errors / 28.000000000000004% coverage ] ****** [806 done /537 queued / 16 running / 717 errors / 28.000000000000004% coverage ] ****** [807 done /536 queued / 16 running / 718 errors / 28.000000000000004% coverage ] ****** [807 done /536 queued / 16 running / 718 errors / 28.000000000000004% coverage ] ****** [808 done /537 queued / 16 running / 719 errors / 28.000000000000004% coverage ] ****** [808 done /537 queued / 16 running / 719 errors / 28.000000000000004% coverage ] ****** [809 done /541 queued / 16 running / 720 errors / 28.000000000000004% coverage ] ****** [809 done /541 queued / 16 running / 720 errors / 28.000000000000004% coverage ] ****** [810 done /541 queued / 16 running / 721 errors / 28.000000000000004% coverage ] ****** [810 done /541 queued / 16 running / 721 errors / 28.000000000000004% coverage ] ****** [811 done /543 queued / 16 running / 722 errors / 28.000000000000004% coverage ] ****** [811 done /543 queued / 16 running / 722 errors / 28.000000000000004% coverage ] ****** [812 done /545 queued / 16 running / 723 errors / 28.000000000000004% coverage ] ****** [812 done /545 queued / 16 running / 723 errors / 28.000000000000004% coverage ] ****** [813 done /546 queued / 16 running / 723 errors / 28.000000000000004% coverage ] ****** [813 done /546 queued / 16 running / 723 errors / 28.000000000000004% coverage ] ****** [814 done /550 queued / 16 running / 724 errors / 28.000000000000004% coverage ] ****** [814 done /550 queued / 16 running / 724 errors / 28.000000000000004% coverage ] ****** [815 done /552 queued / 16 running / 725 errors / 28.000000000000004% coverage ] ****** [815 done /552 queued / 16 running / 725 errors / 28.000000000000004% coverage ] ****** [816 done /553 queued / 16 running / 726 errors / 28.000000000000004% coverage ] ****** [816 done /553 queued / 16 running / 726 errors / 28.000000000000004% coverage ] ****** [817 done /555 queued / 16 running / 726 errors / 28.000000000000004% coverage ] ****** [817 done /555 queued / 16 running / 726 errors / 28.000000000000004% coverage ] ****** [818 done /557 queued / 16 running / 727 errors / 28.000000000000004% coverage ] ****** [818 done /557 queued / 16 running / 727 errors / 28.000000000000004% coverage ] ****** [819 done /560 queued / 16 running / 728 errors / 28.000000000000004% coverage ] ****** [819 done /560 queued / 16 running / 728 errors / 28.000000000000004% coverage ] ****** [820 done /562 queued / 16 running / 729 errors / 28.000000000000004% coverage ] ****** [820 done /562 queued / 16 running / 729 errors / 28.000000000000004% coverage ] ****** [821 done /565 queued / 16 running / 730 errors / 28.000000000000004% coverage ] ****** [821 done /565 queued / 16 running / 730 errors / 28.000000000000004% coverage ] ****** [822 done /566 queued / 16 running / 731 errors / 28.000000000000004% coverage ] ****** [822 done /566 queued / 16 running / 731 errors / 28.000000000000004% coverage ] ****** [823 done /567 queued / 16 running / 732 errors / 28.000000000000004% coverage ] ****** [823 done /567 queued / 16 running / 732 errors / 28.000000000000004% coverage ] ****** [824 done /566 queued / 16 running / 733 errors / 28.000000000000004% coverage ] ****** [824 done /566 queued / 16 running / 733 errors / 28.000000000000004% coverage ] ****** [825 done /566 queued / 16 running / 734 errors / 28.000000000000004% coverage ] ****** [825 done /566 queued / 16 running / 734 errors / 28.000000000000004% coverage ] ****** [826 done /568 queued / 16 running / 735 errors / 28.000000000000004% coverage ] ****** [826 done /568 queued / 16 running / 735 errors / 28.000000000000004% coverage ] ****** [827 done /570 queued / 16 running / 736 errors / 28.000000000000004% coverage ] ****** [827 done /570 queued / 16 running / 736 errors / 28.000000000000004% coverage ] ****** [828 done /571 queued / 16 running / 737 errors / 28.000000000000004% coverage ] ****** [828 done /571 queued / 16 running / 737 errors / 28.000000000000004% coverage ] ****** [829 done /572 queued / 16 running / 738 errors / 28.000000000000004% coverage ] ****** [829 done /572 queued / 16 running / 738 errors / 28.000000000000004% coverage ] ****** [830 done /574 queued / 16 running / 739 errors / 28.000000000000004% coverage ] ****** [830 done /574 queued / 16 running / 739 errors / 28.000000000000004% coverage ] ****** [831 done /575 queued / 16 running / 740 errors / 28.000000000000004% coverage ] ****** [831 done /575 queued / 16 running / 740 errors / 28.000000000000004% coverage ] ****** [832 done /574 queued / 16 running / 741 errors / 28.000000000000004% coverage ] ****** [832 done /574 queued / 16 running / 741 errors / 28.000000000000004% coverage ] ****** [833 done /573 queued / 16 running / 742 errors / 28.000000000000004% coverage ] ****** [833 done /573 queued / 16 running / 742 errors / 28.000000000000004% coverage ] ****** [834 done /574 queued / 16 running / 743 errors / 28.000000000000004% coverage ] ****** [834 done /574 queued / 16 running / 743 errors / 28.000000000000004% coverage ] ****** [835 done /575 queued / 16 running / 744 errors / 28.000000000000004% coverage ] ****** [835 done /575 queued / 16 running / 744 errors / 28.000000000000004% coverage ] ****** [836 done /574 queued / 16 running / 745 errors / 28.000000000000004% coverage ] ****** [836 done /574 queued / 16 running / 745 errors / 28.000000000000004% coverage ] ****** [837 done /576 queued / 16 running / 746 errors / 28.000000000000004% coverage ] ****** [837 done /576 queued / 16 running / 746 errors / 28.000000000000004% coverage ] ****** [838 done /576 queued / 16 running / 747 errors / 28.000000000000004% coverage ] ****** [838 done /576 queued / 16 running / 747 errors / 28.000000000000004% coverage ] ****** [839 done /576 queued / 16 running / 748 errors / 28.000000000000004% coverage ] ****** [839 done /576 queued / 16 running / 748 errors / 28.000000000000004% coverage ] ****** [840 done /577 queued / 16 running / 749 errors / 28.000000000000004% coverage ] ****** [840 done /577 queued / 16 running / 749 errors / 28.000000000000004% coverage ] ****** [841 done /576 queued / 16 running / 750 errors / 28.000000000000004% coverage ] ****** [841 done /576 queued / 16 running / 750 errors / 28.000000000000004% coverage ] ****** [842 done /577 queued / 16 running / 751 errors / 28.000000000000004% coverage ] ****** [842 done /577 queued / 16 running / 751 errors / 28.000000000000004% coverage ] ****** [843 done /577 queued / 16 running / 752 errors / 28.000000000000004% coverage ] ****** [843 done /577 queued / 16 running / 752 errors / 28.000000000000004% coverage ] ****** [844 done /576 queued / 16 running / 753 errors / 28.000000000000004% coverage ] ****** [844 done /576 queued / 16 running / 753 errors / 28.000000000000004% coverage ] ****** [845 done /575 queued / 16 running / 754 errors / 28.000000000000004% coverage ] ****** [845 done /575 queued / 16 running / 754 errors / 28.000000000000004% coverage ] ****** [846 done /576 queued / 16 running / 754 errors / 28.000000000000004% coverage ] ****** [846 done /576 queued / 16 running / 754 errors / 28.000000000000004% coverage ] ****** [847 done /579 queued / 16 running / 755 errors / 28.000000000000004% coverage ] ****** [847 done /579 queued / 16 running / 755 errors / 28.000000000000004% coverage ] ****** [848 done /580 queued / 16 running / 756 errors / 28.000000000000004% coverage ] ****** [848 done /580 queued / 16 running / 756 errors / 28.000000000000004% coverage ] ****** [849 done /582 queued / 16 running / 757 errors / 28.000000000000004% coverage ] ****** [849 done /582 queued / 16 running / 757 errors / 28.000000000000004% coverage ] ****** [850 done /583 queued / 16 running / 758 errors / 28.000000000000004% coverage ] ****** [850 done /583 queued / 16 running / 758 errors / 28.000000000000004% coverage ] ****** [851 done /584 queued / 16 running / 759 errors / 28.000000000000004% coverage ] ****** [851 done /584 queued / 16 running / 759 errors / 28.000000000000004% coverage ] ****** [852 done /588 queued / 16 running / 760 errors / 28.000000000000004% coverage ] ****** [852 done /588 queued / 16 running / 760 errors / 28.000000000000004% coverage ] ****** [853 done /589 queued / 16 running / 761 errors / 28.000000000000004% coverage ] ****** [853 done /589 queued / 16 running / 761 errors / 28.000000000000004% coverage ] ****** [854 done /589 queued / 16 running / 762 errors / 28.000000000000004% coverage ] ****** [854 done /589 queued / 16 running / 762 errors / 28.000000000000004% coverage ] ****** [855 done /589 queued / 16 running / 763 errors / 28.000000000000004% coverage ] ****** [855 done /589 queued / 16 running / 763 errors / 28.000000000000004% coverage ] ****** [856 done /590 queued / 16 running / 764 errors / 28.000000000000004% coverage ] ****** [856 done /590 queued / 16 running / 764 errors / 28.000000000000004% coverage ] ****** [857 done /594 queued / 16 running / 764 errors / 28.000000000000004% coverage ] ****** [857 done /594 queued / 16 running / 764 errors / 28.000000000000004% coverage ] ****** [858 done /595 queued / 16 running / 765 errors / 28.000000000000004% coverage ] ****** [858 done /595 queued / 16 running / 765 errors / 28.000000000000004% coverage ] ****** [859 done /596 queued / 16 running / 766 errors / 28.000000000000004% coverage ] ****** [859 done /596 queued / 16 running / 766 errors / 28.000000000000004% coverage ] ****** [860 done /599 queued / 16 running / 767 errors / 28.000000000000004% coverage ] ****** [860 done /599 queued / 16 running / 767 errors / 28.000000000000004% coverage ] ****** [861 done /600 queued / 16 running / 767 errors / 28.000000000000004% coverage ] ****** [861 done /600 queued / 16 running / 767 errors / 28.000000000000004% coverage ] ****** [862 done /602 queued / 16 running / 768 errors / 28.000000000000004% coverage ] ****** [862 done /602 queued / 16 running / 768 errors / 28.000000000000004% coverage ] ****** [863 done /601 queued / 16 running / 769 errors / 28.000000000000004% coverage ] ****** [863 done /601 queued / 16 running / 769 errors / 28.000000000000004% coverage ] ****** [864 done /601 queued / 16 running / 770 errors / 28.000000000000004% coverage ] ****** [864 done /601 queued / 16 running / 770 errors / 28.000000000000004% coverage ] ****** [865 done /600 queued / 16 running / 771 errors / 28.000000000000004% coverage ] ****** [865 done /600 queued / 16 running / 771 errors / 28.000000000000004% coverage ] ****** [866 done /602 queued / 16 running / 772 errors / 28.000000000000004% coverage ] ****** [866 done /602 queued / 16 running / 772 errors / 28.000000000000004% coverage ] ****** [867 done /601 queued / 16 running / 773 errors / 28.000000000000004% coverage ] ****** [867 done /601 queued / 16 running / 773 errors / 28.000000000000004% coverage ] ****** [868 done /601 queued / 16 running / 774 errors / 28.000000000000004% coverage ] ****** [868 done /601 queued / 16 running / 774 errors / 28.000000000000004% coverage ] ****** [869 done /601 queued / 16 running / 775 errors / 28.000000000000004% coverage ] ****** [869 done /601 queued / 16 running / 775 errors / 28.000000000000004% coverage ] ****** [870 done /602 queued / 16 running / 776 errors / 28.000000000000004% coverage ] ****** [870 done /602 queued / 16 running / 776 errors / 28.000000000000004% coverage ] ****** [871 done /602 queued / 16 running / 777 errors / 28.000000000000004% coverage ] ****** [871 done /602 queued / 16 running / 777 errors / 28.000000000000004% coverage ] ****** [872 done /603 queued / 16 running / 777 errors / 28.000000000000004% coverage ] ****** [872 done /603 queued / 16 running / 777 errors / 28.000000000000004% coverage ] ****** [873 done /604 queued / 16 running / 778 errors / 28.000000000000004% coverage ] ****** [873 done /604 queued / 16 running / 778 errors / 28.000000000000004% coverage ] ****** [874 done /606 queued / 16 running / 778 errors / 28.000000000000004% coverage ] ****** [874 done /606 queued / 16 running / 778 errors / 28.000000000000004% coverage ] ****** [875 done /609 queued / 16 running / 779 errors / 28.000000000000004% coverage ] ****** [875 done /609 queued / 16 running / 779 errors / 28.000000000000004% coverage ] ****** [876 done /609 queued / 16 running / 780 errors / 28.000000000000004% coverage ] ****** [876 done /609 queued / 16 running / 780 errors / 28.000000000000004% coverage ] ****** [877 done /608 queued / 16 running / 781 errors / 28.000000000000004% coverage ] ****** [877 done /608 queued / 16 running / 781 errors / 28.000000000000004% coverage ] ****** [878 done /607 queued / 16 running / 782 errors / 28.000000000000004% coverage ] ****** [878 done /607 queued / 16 running / 782 errors / 28.000000000000004% coverage ] ****** [879 done /608 queued / 16 running / 782 errors / 28.000000000000004% coverage ] ****** [879 done /608 queued / 16 running / 782 errors / 28.000000000000004% coverage ] ****** [880 done /608 queued / 16 running / 783 errors / 28.000000000000004% coverage ] ****** [880 done /608 queued / 16 running / 783 errors / 28.000000000000004% coverage ] ****** [881 done /610 queued / 16 running / 783 errors / 28.000000000000004% coverage ] ****** [881 done /610 queued / 16 running / 783 errors / 28.000000000000004% coverage ] ****** [882 done /610 queued / 16 running / 784 errors / 28.000000000000004% coverage ] ****** [882 done /610 queued / 16 running / 784 errors / 28.000000000000004% coverage ] ****** [883 done /613 queued / 16 running / 785 errors / 28.000000000000004% coverage ] ****** [883 done /613 queued / 16 running / 785 errors / 28.000000000000004% coverage ] ****** [884 done /615 queued / 16 running / 786 errors / 28.000000000000004% coverage ] ****** [884 done /615 queued / 16 running / 786 errors / 28.000000000000004% coverage ] ****** [885 done /615 queued / 16 running / 787 errors / 28.000000000000004% coverage ] ****** [885 done /615 queued / 16 running / 787 errors / 28.000000000000004% coverage ] ****** [886 done /616 queued / 16 running / 788 errors / 28.000000000000004% coverage ] ****** [886 done /616 queued / 16 running / 788 errors / 28.000000000000004% coverage ] ****** [887 done /617 queued / 16 running / 789 errors / 28.000000000000004% coverage ] ****** [887 done /617 queued / 16 running / 789 errors / 28.000000000000004% coverage ] ****** [888 done /618 queued / 16 running / 790 errors / 28.000000000000004% coverage ] ****** [888 done /618 queued / 16 running / 790 errors / 28.000000000000004% coverage ] ****** [889 done /619 queued / 16 running / 790 errors / 28.000000000000004% coverage ] ****** [889 done /619 queued / 16 running / 790 errors / 28.000000000000004% coverage ] ****** [890 done /621 queued / 16 running / 790 errors / 28.000000000000004% coverage ] ****** [890 done /621 queued / 16 running / 790 errors / 28.000000000000004% coverage ] ****** [891 done /622 queued / 16 running / 791 errors / 28.000000000000004% coverage ] ****** [891 done /622 queued / 16 running / 791 errors / 28.000000000000004% coverage ] ****** [892 done /622 queued / 16 running / 792 errors / 28.000000000000004% coverage ] ****** [892 done /622 queued / 16 running / 792 errors / 28.000000000000004% coverage ] ****** [893 done /622 queued / 16 running / 793 errors / 28.000000000000004% coverage ] ****** [893 done /622 queued / 16 running / 793 errors / 28.000000000000004% coverage ] ****** [894 done /621 queued / 16 running / 794 errors / 28.000000000000004% coverage ] ****** [894 done /621 queued / 16 running / 794 errors / 28.000000000000004% coverage ] ****** [895 done /625 queued / 16 running / 795 errors / 28.000000000000004% coverage ] ****** [895 done /625 queued / 16 running / 795 errors / 28.000000000000004% coverage ] ****** [896 done /626 queued / 16 running / 796 errors / 28.000000000000004% coverage ] ****** [896 done /626 queued / 16 running / 796 errors / 28.000000000000004% coverage ] ****** [897 done /627 queued / 16 running / 797 errors / 28.000000000000004% coverage ] ****** [897 done /627 queued / 16 running / 797 errors / 28.000000000000004% coverage ] ****** [898 done /628 queued / 16 running / 797 errors / 28.000000000000004% coverage ] ****** [898 done /628 queued / 16 running / 797 errors / 28.000000000000004% coverage ] ****** [899 done /629 queued / 16 running / 798 errors / 28.000000000000004% coverage ] ****** [899 done /629 queued / 16 running / 798 errors / 28.000000000000004% coverage ] ****** [900 done /631 queued / 16 running / 799 errors / 28.000000000000004% coverage ] ****** [900 done /631 queued / 16 running / 799 errors / 28.000000000000004% coverage ] ****** [901 done /631 queued / 16 running / 800 errors / 28.000000000000004% coverage ] ****** [901 done /631 queued / 16 running / 800 errors / 28.000000000000004% coverage ] ****** [902 done /632 queued / 16 running / 801 errors / 28.000000000000004% coverage ] ****** [902 done /632 queued / 16 running / 801 errors / 28.000000000000004% coverage ] ****** [903 done /632 queued / 16 running / 801 errors / 28.000000000000004% coverage ] ****** [903 done /632 queued / 16 running / 801 errors / 28.000000000000004% coverage ] ****** [904 done /633 queued / 16 running / 802 errors / 28.000000000000004% coverage ] ****** [904 done /633 queued / 16 running / 802 errors / 28.000000000000004% coverage ] ****** [905 done /634 queued / 16 running / 803 errors / 28.000000000000004% coverage ] ****** [905 done /634 queued / 16 running / 803 errors / 28.000000000000004% coverage ] ****** [906 done /635 queued / 16 running / 804 errors / 28.000000000000004% coverage ] ****** [906 done /635 queued / 16 running / 804 errors / 28.000000000000004% coverage ] ****** [907 done /636 queued / 16 running / 805 errors / 28.000000000000004% coverage ] ****** [907 done /636 queued / 16 running / 805 errors / 28.000000000000004% coverage ] ****** [908 done /637 queued / 16 running / 806 errors / 28.000000000000004% coverage ] ****** [908 done /637 queued / 16 running / 806 errors / 28.000000000000004% coverage ] ****** [909 done /639 queued / 16 running / 807 errors / 28.000000000000004% coverage ] ****** [909 done /639 queued / 16 running / 807 errors / 28.000000000000004% coverage ] ****** [910 done /641 queued / 16 running / 808 errors / 28.000000000000004% coverage ] ****** [910 done /641 queued / 16 running / 808 errors / 28.000000000000004% coverage ] ****** [911 done /641 queued / 16 running / 809 errors / 28.000000000000004% coverage ] ****** [911 done /641 queued / 16 running / 809 errors / 28.000000000000004% coverage ] ****** [912 done /641 queued / 16 running / 810 errors / 28.000000000000004% coverage ] ****** [912 done /641 queued / 16 running / 810 errors / 28.000000000000004% coverage ] ****** [913 done /640 queued / 16 running / 811 errors / 28.000000000000004% coverage ] ****** [913 done /640 queued / 16 running / 811 errors / 28.000000000000004% coverage ] ****** [914 done /639 queued / 16 running / 812 errors / 28.000000000000004% coverage ] ****** [914 done /639 queued / 16 running / 812 errors / 28.000000000000004% coverage ] ****** [915 done /640 queued / 16 running / 813 errors / 28.000000000000004% coverage ] ****** [915 done /640 queued / 16 running / 813 errors / 28.000000000000004% coverage ] ****** [916 done /640 queued / 16 running / 814 errors / 28.000000000000004% coverage ] ****** [916 done /640 queued / 16 running / 814 errors / 28.000000000000004% coverage ] ****** [917 done /641 queued / 16 running / 814 errors / 28.000000000000004% coverage ] ****** [917 done /641 queued / 16 running / 814 errors / 28.000000000000004% coverage ] ****** [918 done /642 queued / 16 running / 815 errors / 28.000000000000004% coverage ] ****** [918 done /642 queued / 16 running / 815 errors / 28.000000000000004% coverage ] ****** [919 done /642 queued / 16 running / 816 errors / 28.000000000000004% coverage ] ****** [919 done /642 queued / 16 running / 816 errors / 28.000000000000004% coverage ] ****** [920 done /642 queued / 16 running / 817 errors / 28.000000000000004% coverage ] ****** [920 done /642 queued / 16 running / 817 errors / 28.000000000000004% coverage ] ****** [921 done /641 queued / 16 running / 818 errors / 28.000000000000004% coverage ] ****** [921 done /641 queued / 16 running / 818 errors / 28.000000000000004% coverage ] ****** [922 done /641 queued / 16 running / 819 errors / 28.000000000000004% coverage ] ****** [922 done /641 queued / 16 running / 819 errors / 28.000000000000004% coverage ] ****** [923 done /642 queued / 16 running / 820 errors / 28.000000000000004% coverage ] ****** [923 done /642 queued / 16 running / 820 errors / 28.000000000000004% coverage ] ****** [924 done /645 queued / 16 running / 821 errors / 28.000000000000004% coverage ] ****** [924 done /645 queued / 16 running / 821 errors / 28.000000000000004% coverage ] ****** [925 done /645 queued / 16 running / 822 errors / 28.000000000000004% coverage ] ****** [925 done /645 queued / 16 running / 822 errors / 28.000000000000004% coverage ] ****** [926 done /646 queued / 16 running / 822 errors / 28.000000000000004% coverage ] ****** [926 done /646 queued / 16 running / 822 errors / 28.000000000000004% coverage ] ****** [927 done /647 queued / 16 running / 823 errors / 28.000000000000004% coverage ] ****** [927 done /647 queued / 16 running / 823 errors / 28.000000000000004% coverage ] ****** [928 done /650 queued / 16 running / 824 errors / 28.000000000000004% coverage ] ****** [928 done /650 queued / 16 running / 824 errors / 28.000000000000004% coverage ] ****** [929 done /653 queued / 16 running / 825 errors / 28.000000000000004% coverage ] ****** [929 done /653 queued / 16 running / 825 errors / 28.000000000000004% coverage ] ****** [930 done /654 queued / 16 running / 826 errors / 28.000000000000004% coverage ] ****** [930 done /654 queued / 16 running / 826 errors / 28.000000000000004% coverage ] ****** [931 done /656 queued / 16 running / 827 errors / 28.000000000000004% coverage ] ****** [931 done /656 queued / 16 running / 827 errors / 28.000000000000004% coverage ] ****** [932 done /657 queued / 16 running / 827 errors / 28.000000000000004% coverage ] ****** [932 done /657 queued / 16 running / 827 errors / 28.000000000000004% coverage ] ****** [933 done /659 queued / 16 running / 828 errors / 28.000000000000004% coverage ] ****** [933 done /659 queued / 16 running / 828 errors / 28.000000000000004% coverage ] ****** [934 done /659 queued / 16 running / 829 errors / 28.000000000000004% coverage ] ****** [934 done /659 queued / 16 running / 829 errors / 28.000000000000004% coverage ] ****** [935 done /659 queued / 16 running / 830 errors / 28.000000000000004% coverage ] ****** [935 done /659 queued / 16 running / 830 errors / 28.000000000000004% coverage ] ****** [936 done /659 queued / 16 running / 831 errors / 28.000000000000004% coverage ] ****** [936 done /659 queued / 16 running / 831 errors / 28.000000000000004% coverage ] ****** [937 done /661 queued / 16 running / 832 errors / 28.000000000000004% coverage ] ****** [937 done /661 queued / 16 running / 832 errors / 28.000000000000004% coverage ] ****** [938 done /662 queued / 16 running / 833 errors / 28.000000000000004% coverage ] ****** [938 done /662 queued / 16 running / 833 errors / 28.000000000000004% coverage ] ****** [939 done /664 queued / 16 running / 834 errors / 28.000000000000004% coverage ] ****** [939 done /664 queued / 16 running / 834 errors / 28.000000000000004% coverage ] ****** [940 done /664 queued / 16 running / 835 errors / 28.000000000000004% coverage ] ****** [940 done /664 queued / 16 running / 835 errors / 28.000000000000004% coverage ] ****** [941 done /665 queued / 16 running / 836 errors / 28.000000000000004% coverage ] ****** [941 done /665 queued / 16 running / 836 errors / 28.000000000000004% coverage ] ****** [942 done /665 queued / 16 running / 837 errors / 28.000000000000004% coverage ] ****** [942 done /665 queued / 16 running / 837 errors / 28.000000000000004% coverage ] ****** [943 done /666 queued / 16 running / 838 errors / 28.000000000000004% coverage ] ****** [943 done /666 queued / 16 running / 838 errors / 28.000000000000004% coverage ] ****** [944 done /667 queued / 16 running / 839 errors / 28.000000000000004% coverage ] ****** [944 done /667 queued / 16 running / 839 errors / 28.000000000000004% coverage ] ****** [945 done /667 queued / 16 running / 840 errors / 28.000000000000004% coverage ] ****** [945 done /667 queued / 16 running / 840 errors / 28.000000000000004% coverage ] ****** [946 done /666 queued / 16 running / 841 errors / 28.000000000000004% coverage ] ****** [946 done /666 queued / 16 running / 841 errors / 28.000000000000004% coverage ] ****** [947 done /667 queued / 16 running / 842 errors / 28.000000000000004% coverage ] ****** [947 done /667 queued / 16 running / 842 errors / 28.000000000000004% coverage ] ****** [948 done /667 queued / 16 running / 843 errors / 28.000000000000004% coverage ] ****** [948 done /667 queued / 16 running / 843 errors / 28.000000000000004% coverage ] ****** [949 done /670 queued / 16 running / 844 errors / 28.000000000000004% coverage ] ****** [949 done /670 queued / 16 running / 844 errors / 28.000000000000004% coverage ] ****** [950 done /671 queued / 16 running / 845 errors / 28.000000000000004% coverage ] ****** [950 done /671 queued / 16 running / 845 errors / 28.000000000000004% coverage ] ****** [951 done /674 queued / 16 running / 846 errors / 28.000000000000004% coverage ] ****** [951 done /674 queued / 16 running / 846 errors / 28.000000000000004% coverage ] ****** [952 done /675 queued / 16 running / 847 errors / 28.000000000000004% coverage ] ****** [952 done /675 queued / 16 running / 847 errors / 28.000000000000004% coverage ] ****** [953 done /676 queued / 16 running / 848 errors / 28.000000000000004% coverage ] ****** [953 done /676 queued / 16 running / 848 errors / 28.000000000000004% coverage ] ****** [954 done /676 queued / 16 running / 849 errors / 28.000000000000004% coverage ] ****** [954 done /676 queued / 16 running / 849 errors / 28.000000000000004% coverage ] ****** [955 done /679 queued / 16 running / 850 errors / 28.000000000000004% coverage ] ****** [955 done /679 queued / 16 running / 850 errors / 28.000000000000004% coverage ] ****** [956 done /680 queued / 16 running / 851 errors / 28.000000000000004% coverage ] ****** [956 done /680 queued / 16 running / 851 errors / 28.000000000000004% coverage ] ****** [957 done /681 queued / 16 running / 852 errors / 28.000000000000004% coverage ] ****** [957 done /681 queued / 16 running / 852 errors / 28.000000000000004% coverage ] ****** [958 done /682 queued / 16 running / 853 errors / 28.000000000000004% coverage ] ****** [958 done /682 queued / 16 running / 853 errors / 28.000000000000004% coverage ] ****** [959 done /683 queued / 16 running / 854 errors / 28.000000000000004% coverage ] ****** [959 done /683 queued / 16 running / 854 errors / 28.000000000000004% coverage ] ****** [960 done /684 queued / 16 running / 855 errors / 28.000000000000004% coverage ] ****** [960 done /684 queued / 16 running / 855 errors / 28.000000000000004% coverage ] ****** [961 done /686 queued / 16 running / 856 errors / 28.000000000000004% coverage ] ****** [961 done /686 queued / 16 running / 856 errors / 28.000000000000004% coverage ] ****** [962 done /687 queued / 16 running / 857 errors / 28.000000000000004% coverage ] ****** [962 done /687 queued / 16 running / 857 errors / 28.000000000000004% coverage ] ****** [963 done /688 queued / 16 running / 858 errors / 28.000000000000004% coverage ] ****** [963 done /688 queued / 16 running / 858 errors / 28.000000000000004% coverage ] ****** [964 done /689 queued / 16 running / 859 errors / 28.000000000000004% coverage ] ****** [964 done /689 queued / 16 running / 859 errors / 28.000000000000004% coverage ] ****** [965 done /690 queued / 16 running / 859 errors / 28.000000000000004% coverage ] ****** [965 done /690 queued / 16 running / 859 errors / 28.000000000000004% coverage ] ****** [966 done /692 queued / 16 running / 860 errors / 28.000000000000004% coverage ] ****** [966 done /692 queued / 16 running / 860 errors / 28.000000000000004% coverage ] ****** [967 done /692 queued / 16 running / 861 errors / 28.000000000000004% coverage ] ****** [967 done /692 queued / 16 running / 861 errors / 28.000000000000004% coverage ] ****** [968 done /694 queued / 16 running / 862 errors / 28.000000000000004% coverage ] ****** [968 done /694 queued / 16 running / 862 errors / 28.000000000000004% coverage ] ****** [969 done /693 queued / 16 running / 863 errors / 28.000000000000004% coverage ] ****** [969 done /693 queued / 16 running / 863 errors / 28.000000000000004% coverage ] ****** [970 done /694 queued / 16 running / 864 errors / 28.000000000000004% coverage ] ****** [970 done /694 queued / 16 running / 864 errors / 28.000000000000004% coverage ] ****** [971 done /694 queued / 16 running / 865 errors / 28.000000000000004% coverage ] ****** [971 done /694 queued / 16 running / 865 errors / 28.000000000000004% coverage ] ****** [972 done /693 queued / 16 running / 866 errors / 28.000000000000004% coverage ] ****** [972 done /693 queued / 16 running / 866 errors / 28.000000000000004% coverage ] ****** [973 done /694 queued / 16 running / 867 errors / 28.000000000000004% coverage ] ****** [973 done /694 queued / 16 running / 867 errors / 28.000000000000004% coverage ] ****** [974 done /693 queued / 16 running / 868 errors / 28.000000000000004% coverage ] ****** [974 done /693 queued / 16 running / 868 errors / 28.000000000000004% coverage ] ****** [975 done /695 queued / 16 running / 869 errors / 28.000000000000004% coverage ] ****** [975 done /695 queued / 16 running / 869 errors / 28.000000000000004% coverage ] ****** [976 done /695 queued / 16 running / 870 errors / 28.000000000000004% coverage ] ****** [976 done /695 queued / 16 running / 870 errors / 28.000000000000004% coverage ] ****** [977 done /697 queued / 16 running / 871 errors / 28.000000000000004% coverage ] ****** [977 done /697 queued / 16 running / 871 errors / 28.000000000000004% coverage ] ****** [978 done /697 queued / 16 running / 872 errors / 28.000000000000004% coverage ] ****** [978 done /697 queued / 16 running / 872 errors / 28.000000000000004% coverage ] ****** [979 done /698 queued / 16 running / 873 errors / 28.000000000000004% coverage ] ****** [979 done /698 queued / 16 running / 873 errors / 28.000000000000004% coverage ] ****** [980 done /699 queued / 16 running / 873 errors / 28.000000000000004% coverage ] ****** [980 done /699 queued / 16 running / 873 errors / 28.000000000000004% coverage ] ****** [981 done /700 queued / 16 running / 874 errors / 28.000000000000004% coverage ] ****** [981 done /700 queued / 16 running / 874 errors / 28.000000000000004% coverage ] ****** [982 done /700 queued / 16 running / 875 errors / 28.000000000000004% coverage ] ****** [982 done /700 queued / 16 running / 875 errors / 28.000000000000004% coverage ] ****** [983 done /704 queued / 16 running / 876 errors / 28.000000000000004% coverage ] ****** [983 done /704 queued / 16 running / 876 errors / 28.000000000000004% coverage ] ****** [984 done /706 queued / 16 running / 877 errors / 28.000000000000004% coverage ] ****** [984 done /706 queued / 16 running / 877 errors / 28.000000000000004% coverage ] ****** [985 done /707 queued / 16 running / 877 errors / 28.000000000000004% coverage ] ****** [985 done /707 queued / 16 running / 877 errors / 28.000000000000004% coverage ] ****** [986 done /708 queued / 16 running / 878 errors / 28.000000000000004% coverage ] ****** [986 done /708 queued / 16 running / 878 errors / 28.000000000000004% coverage ] ****** [987 done /710 queued / 16 running / 879 errors / 28.000000000000004% coverage ] ****** [987 done /710 queued / 16 running / 879 errors / 28.000000000000004% coverage ] ****** [988 done /711 queued / 16 running / 880 errors / 28.000000000000004% coverage ] ****** [988 done /711 queued / 16 running / 880 errors / 28.000000000000004% coverage ] ****** [989 done /712 queued / 16 running / 881 errors / 28.000000000000004% coverage ] ****** [989 done /712 queued / 16 running / 881 errors / 28.000000000000004% coverage ] ****** [990 done /714 queued / 16 running / 882 errors / 28.000000000000004% coverage ] ****** [990 done /714 queued / 16 running / 882 errors / 28.000000000000004% coverage ] ****** [991 done /716 queued / 16 running / 883 errors / 28.000000000000004% coverage ] ****** [991 done /716 queued / 16 running / 883 errors / 28.000000000000004% coverage ] ****** [992 done /716 queued / 16 running / 884 errors / 28.000000000000004% coverage ] ****** [992 done /716 queued / 16 running / 884 errors / 28.000000000000004% coverage ] ****** [993 done /716 queued / 16 running / 885 errors / 28.000000000000004% coverage ] ****** [993 done /716 queued / 16 running / 885 errors / 28.000000000000004% coverage ] ****** [994 done /717 queued / 16 running / 886 errors / 28.000000000000004% coverage ] ****** [994 done /717 queued / 16 running / 886 errors / 28.000000000000004% coverage ] ****** [995 done /718 queued / 16 running / 887 errors / 28.000000000000004% coverage ] ****** [995 done /718 queued / 16 running / 887 errors / 28.000000000000004% coverage ] ****** [996 done /721 queued / 16 running / 888 errors / 28.000000000000004% coverage ] ****** [996 done /721 queued / 16 running / 888 errors / 28.000000000000004% coverage ] ****** [997 done /724 queued / 16 running / 889 errors / 28.000000000000004% coverage ] ****** [997 done /724 queued / 16 running / 889 errors / 28.000000000000004% coverage ] ****** [998 done /723 queued / 16 running / 890 errors / 28.000000000000004% coverage ] ****** [998 done /723 queued / 16 running / 890 errors / 28.000000000000004% coverage ] ****** [999 done /724 queued / 16 running / 891 errors / 28.000000000000004% coverage ] ****** [999 done /724 queued / 16 running / 891 errors / 28.000000000000004% coverage ] ****** [1000 done /724 queued / 16 running / 892 errors / 28.000000000000004% coverage ] ****** [1000 done /724 queued / 16 running / 892 errors / 28.000000000000004% coverage ] ****** [1001 done /724 queued / 16 running / 893 errors / 28.000000000000004% coverage ] ****** [1001 done /724 queued / 16 running / 893 errors / 28.000000000000004% coverage ] ****** [1002 done /724 queued / 16 running / 894 errors / 28.000000000000004% coverage ] ****** [1002 done /724 queued / 16 running / 894 errors / 28.000000000000004% coverage ] ****** [1003 done /726 queued / 16 running / 895 errors / 28.000000000000004% coverage ] ****** [1003 done /726 queued / 16 running / 895 errors / 28.000000000000004% coverage ] ****** [1004 done /729 queued / 16 running / 896 errors / 28.000000000000004% coverage ] ****** [1004 done /729 queued / 16 running / 896 errors / 28.000000000000004% coverage ] ****** [1005 done /729 queued / 16 running / 897 errors / 28.000000000000004% coverage ] ****** [1005 done /729 queued / 16 running / 897 errors / 28.000000000000004% coverage ] ****** [1006 done /732 queued / 16 running / 898 errors / 28.000000000000004% coverage ] ****** [1006 done /732 queued / 16 running / 898 errors / 28.000000000000004% coverage ] ****** [1007 done /732 queued / 16 running / 899 errors / 28.000000000000004% coverage ] ****** [1007 done /732 queued / 16 running / 899 errors / 28.000000000000004% coverage ] ****** [1008 done /734 queued / 16 running / 900 errors / 28.000000000000004% coverage ] ****** [1008 done /734 queued / 16 running / 900 errors / 28.000000000000004% coverage ] ****** [1009 done /739 queued / 16 running / 901 errors / 28.000000000000004% coverage ] ****** [1009 done /739 queued / 16 running / 901 errors / 28.000000000000004% coverage ] ****** [1010 done /741 queued / 16 running / 902 errors / 28.000000000000004% coverage ] ****** [1010 done /741 queued / 16 running / 902 errors / 28.000000000000004% coverage ] ****** [1011 done /740 queued / 16 running / 903 errors / 28.000000000000004% coverage ] ****** [1011 done /740 queued / 16 running / 903 errors / 28.000000000000004% coverage ] ****** [1012 done /740 queued / 16 running / 904 errors / 28.000000000000004% coverage ] ****** [1012 done /740 queued / 16 running / 904 errors / 28.000000000000004% coverage ] ****** [1013 done /739 queued / 16 running / 905 errors / 28.000000000000004% coverage ] ****** [1013 done /739 queued / 16 running / 905 errors / 28.000000000000004% coverage ] ****** [1014 done /739 queued / 16 running / 906 errors / 28.000000000000004% coverage ] ****** [1014 done /739 queued / 16 running / 906 errors / 28.000000000000004% coverage ] ****** [1015 done /739 queued / 16 running / 907 errors / 28.000000000000004% coverage ] ****** [1015 done /739 queued / 16 running / 907 errors / 28.000000000000004% coverage ] ****** [1016 done /738 queued / 16 running / 908 errors / 28.000000000000004% coverage ] ****** [1016 done /738 queued / 16 running / 908 errors / 28.000000000000004% coverage ] ****** [1017 done /738 queued / 16 running / 909 errors / 28.000000000000004% coverage ] ****** [1017 done /738 queued / 16 running / 909 errors / 28.000000000000004% coverage ] ****** [1018 done /739 queued / 16 running / 910 errors / 28.000000000000004% coverage ] ****** [1018 done /739 queued / 16 running / 910 errors / 28.000000000000004% coverage ] ****** [1019 done /741 queued / 16 running / 911 errors / 28.000000000000004% coverage ] ****** [1019 done /741 queued / 16 running / 911 errors / 28.000000000000004% coverage ] ****** [1020 done /742 queued / 16 running / 912 errors / 28.000000000000004% coverage ] ****** [1020 done /742 queued / 16 running / 912 errors / 28.000000000000004% coverage ] ****** [1021 done /741 queued / 16 running / 913 errors / 28.000000000000004% coverage ] ****** [1021 done /741 queued / 16 running / 913 errors / 28.000000000000004% coverage ] ****** [1022 done /741 queued / 16 running / 914 errors / 28.000000000000004% coverage ] ****** [1022 done /741 queued / 16 running / 914 errors / 28.000000000000004% coverage ] ****** [1023 done /742 queued / 16 running / 915 errors / 28.000000000000004% coverage ] ****** [1023 done /742 queued / 16 running / 915 errors / 28.000000000000004% coverage ] ****** [1024 done /744 queued / 16 running / 916 errors / 28.000000000000004% coverage ] ****** [1024 done /744 queued / 16 running / 916 errors / 28.000000000000004% coverage ] ****** [1025 done /745 queued / 16 running / 917 errors / 28.000000000000004% coverage ] ****** [1025 done /745 queued / 16 running / 917 errors / 28.000000000000004% coverage ] ****** [1026 done /747 queued / 16 running / 917 errors / 28.000000000000004% coverage ] ****** [1026 done /747 queued / 16 running / 917 errors / 28.000000000000004% coverage ] ****** [1027 done /748 queued / 16 running / 918 errors / 28.000000000000004% coverage ] ****** [1027 done /748 queued / 16 running / 918 errors / 28.000000000000004% coverage ] ****** [1028 done /749 queued / 16 running / 919 errors / 28.000000000000004% coverage ] ****** [1028 done /749 queued / 16 running / 919 errors / 28.000000000000004% coverage ] ****** [1029 done /750 queued / 16 running / 919 errors / 28.000000000000004% coverage ] ****** [1029 done /750 queued / 16 running / 919 errors / 28.000000000000004% coverage ] ****** [1030 done /751 queued / 16 running / 920 errors / 28.000000000000004% coverage ] ****** [1030 done /751 queued / 16 running / 920 errors / 28.000000000000004% coverage ] ****** [1031 done /753 queued / 16 running / 921 errors / 28.000000000000004% coverage ] ****** [1031 done /753 queued / 16 running / 921 errors / 28.000000000000004% coverage ] ****** [1032 done /756 queued / 16 running / 922 errors / 28.000000000000004% coverage ] ****** [1032 done /756 queued / 16 running / 922 errors / 28.000000000000004% coverage ] ****** [1033 done /757 queued / 16 running / 922 errors / 28.000000000000004% coverage ] ****** [1033 done /757 queued / 16 running / 922 errors / 28.000000000000004% coverage ] ****** [1034 done /758 queued / 16 running / 923 errors / 28.000000000000004% coverage ] ****** [1034 done /758 queued / 16 running / 923 errors / 28.000000000000004% coverage ] ****** [1035 done /760 queued / 16 running / 924 errors / 28.000000000000004% coverage ] ****** [1035 done /760 queued / 16 running / 924 errors / 28.000000000000004% coverage ] ****** [1036 done /761 queued / 16 running / 925 errors / 28.000000000000004% coverage ] ****** [1036 done /761 queued / 16 running / 925 errors / 28.000000000000004% coverage ] ****** [1037 done /762 queued / 16 running / 926 errors / 28.000000000000004% coverage ] ****** [1037 done /762 queued / 16 running / 926 errors / 28.000000000000004% coverage ] ****** [1038 done /764 queued / 16 running / 927 errors / 28.000000000000004% coverage ] ****** [1038 done /764 queued / 16 running / 927 errors / 28.000000000000004% coverage ] ****** [1039 done /764 queued / 16 running / 928 errors / 28.000000000000004% coverage ] ****** [1039 done /764 queued / 16 running / 928 errors / 28.000000000000004% coverage ] ****** [1040 done /765 queued / 16 running / 929 errors / 28.000000000000004% coverage ] ****** [1040 done /765 queued / 16 running / 929 errors / 28.000000000000004% coverage ] ****** [1041 done /766 queued / 16 running / 930 errors / 28.000000000000004% coverage ] ****** [1041 done /766 queued / 16 running / 930 errors / 28.000000000000004% coverage ] ****** [1042 done /767 queued / 16 running / 930 errors / 28.000000000000004% coverage ] ****** [1042 done /767 queued / 16 running / 930 errors / 28.000000000000004% coverage ] ****** [1043 done /769 queued / 16 running / 931 errors / 28.000000000000004% coverage ] ****** [1043 done /769 queued / 16 running / 931 errors / 28.000000000000004% coverage ] ****** [1044 done /769 queued / 16 running / 932 errors / 28.000000000000004% coverage ] ****** [1044 done /769 queued / 16 running / 932 errors / 28.000000000000004% coverage ] ****** [1045 done /768 queued / 16 running / 933 errors / 28.000000000000004% coverage ] ****** [1045 done /768 queued / 16 running / 933 errors / 28.000000000000004% coverage ] ****** [1046 done /768 queued / 16 running / 934 errors / 28.000000000000004% coverage ] ****** [1046 done /768 queued / 16 running / 934 errors / 28.000000000000004% coverage ] ****** [1047 done /770 queued / 16 running / 935 errors / 28.000000000000004% coverage ] ****** [1047 done /770 queued / 16 running / 935 errors / 28.000000000000004% coverage ] ****** [1048 done /770 queued / 16 running / 936 errors / 28.000000000000004% coverage ] ****** [1048 done /770 queued / 16 running / 936 errors / 28.000000000000004% coverage ] ****** [1049 done /769 queued / 16 running / 937 errors / 28.000000000000004% coverage ] ****** [1049 done /769 queued / 16 running / 937 errors / 28.000000000000004% coverage ] ****** [1050 done /768 queued / 16 running / 938 errors / 28.000000000000004% coverage ] ****** [1050 done /768 queued / 16 running / 938 errors / 28.000000000000004% coverage ] ****** [1051 done /767 queued / 16 running / 939 errors / 28.000000000000004% coverage ] ****** [1051 done /767 queued / 16 running / 939 errors / 28.000000000000004% coverage ] ****** [1052 done /770 queued / 16 running / 940 errors / 28.000000000000004% coverage ] ****** [1052 done /770 queued / 16 running / 940 errors / 28.000000000000004% coverage ] ****** [1053 done /772 queued / 16 running / 941 errors / 28.000000000000004% coverage ] ****** [1053 done /772 queued / 16 running / 941 errors / 28.000000000000004% coverage ] ****** [1054 done /776 queued / 16 running / 942 errors / 28.000000000000004% coverage ] ****** [1054 done /776 queued / 16 running / 942 errors / 28.000000000000004% coverage ] ****** [1055 done /779 queued / 16 running / 943 errors / 28.000000000000004% coverage ] ****** [1055 done /779 queued / 16 running / 943 errors / 28.000000000000004% coverage ] ****** [1056 done /780 queued / 16 running / 944 errors / 28.000000000000004% coverage ] ****** [1056 done /780 queued / 16 running / 944 errors / 28.000000000000004% coverage ] ****** [1057 done /782 queued / 16 running / 945 errors / 28.000000000000004% coverage ] ****** [1057 done /782 queued / 16 running / 945 errors / 28.000000000000004% coverage ] ****** [1058 done /783 queued / 16 running / 946 errors / 28.000000000000004% coverage ] ****** [1058 done /783 queued / 16 running / 946 errors / 28.000000000000004% coverage ] ****** [1059 done /783 queued / 16 running / 947 errors / 28.000000000000004% coverage ] ****** [1059 done /783 queued / 16 running / 947 errors / 28.000000000000004% coverage ] ****** [1060 done /784 queued / 16 running / 948 errors / 28.000000000000004% coverage ] ****** [1060 done /784 queued / 16 running / 948 errors / 28.000000000000004% coverage ] ****** [1061 done /786 queued / 16 running / 949 errors / 28.000000000000004% coverage ] ****** [1061 done /786 queued / 16 running / 949 errors / 28.000000000000004% coverage ] ****** [1062 done /787 queued / 16 running / 950 errors / 28.000000000000004% coverage ] ****** [1062 done /787 queued / 16 running / 950 errors / 28.000000000000004% coverage ] ****** [1063 done /791 queued / 16 running / 951 errors / 28.000000000000004% coverage ] ****** [1063 done /791 queued / 16 running / 951 errors / 28.000000000000004% coverage ] ****** [1064 done /791 queued / 16 running / 952 errors / 28.000000000000004% coverage ] ****** [1064 done /791 queued / 16 running / 952 errors / 28.000000000000004% coverage ] ****** [1065 done /791 queued / 16 running / 953 errors / 28.000000000000004% coverage ] ****** [1065 done /791 queued / 16 running / 953 errors / 28.000000000000004% coverage ] ****** [1066 done /793 queued / 16 running / 954 errors / 28.000000000000004% coverage ] ****** [1066 done /793 queued / 16 running / 954 errors / 28.000000000000004% coverage ] ****** [1067 done /795 queued / 16 running / 955 errors / 28.000000000000004% coverage ] ****** [1067 done /795 queued / 16 running / 955 errors / 28.000000000000004% coverage ] ****** [1068 done /794 queued / 16 running / 956 errors / 28.000000000000004% coverage ] ****** [1068 done /794 queued / 16 running / 956 errors / 28.000000000000004% coverage ] ****** [1069 done /793 queued / 16 running / 957 errors / 28.000000000000004% coverage ] ****** [1069 done /793 queued / 16 running / 957 errors / 28.000000000000004% coverage ] ****** [1070 done /793 queued / 16 running / 958 errors / 28.000000000000004% coverage ] ****** [1070 done /793 queued / 16 running / 958 errors / 28.000000000000004% coverage ] ****** [1071 done /792 queued / 16 running / 959 errors / 28.000000000000004% coverage ] ****** [1071 done /792 queued / 16 running / 959 errors / 28.000000000000004% coverage ] ****** [1072 done /791 queued / 16 running / 960 errors / 28.000000000000004% coverage ] ****** [1072 done /791 queued / 16 running / 960 errors / 28.000000000000004% coverage ] ****** [1073 done /791 queued / 16 running / 961 errors / 28.000000000000004% coverage ] ****** [1073 done /791 queued / 16 running / 961 errors / 28.000000000000004% coverage ] ****** [1074 done /791 queued / 16 running / 962 errors / 28.000000000000004% coverage ] ****** [1074 done /791 queued / 16 running / 962 errors / 28.000000000000004% coverage ] ****** [1075 done /793 queued / 16 running / 963 errors / 28.000000000000004% coverage ] ****** [1075 done /793 queued / 16 running / 963 errors / 28.000000000000004% coverage ] ****** [1076 done /793 queued / 16 running / 964 errors / 28.000000000000004% coverage ] ****** [1076 done /793 queued / 16 running / 964 errors / 28.000000000000004% coverage ] ****** [1077 done /792 queued / 16 running / 965 errors / 28.000000000000004% coverage ] ****** [1077 done /792 queued / 16 running / 965 errors / 28.000000000000004% coverage ] ****** [1078 done /793 queued / 16 running / 966 errors / 28.000000000000004% coverage ] ****** [1078 done /793 queued / 16 running / 966 errors / 28.000000000000004% coverage ] ****** [1079 done /794 queued / 16 running / 967 errors / 28.000000000000004% coverage ] ****** [1079 done /794 queued / 16 running / 967 errors / 28.000000000000004% coverage ] ****** [1080 done /794 queued / 16 running / 968 errors / 28.000000000000004% coverage ] ****** [1080 done /794 queued / 16 running / 968 errors / 28.000000000000004% coverage ] ****** [1081 done /796 queued / 16 running / 969 errors / 28.000000000000004% coverage ] ****** [1081 done /796 queued / 16 running / 969 errors / 28.000000000000004% coverage ] ****** [1082 done /797 queued / 16 running / 970 errors / 28.000000000000004% coverage ] ****** [1082 done /797 queued / 16 running / 970 errors / 28.000000000000004% coverage ] ****** [1083 done /796 queued / 16 running / 971 errors / 28.000000000000004% coverage ] ****** [1083 done /796 queued / 16 running / 971 errors / 28.000000000000004% coverage ] ****** [1084 done /797 queued / 16 running / 972 errors / 28.000000000000004% coverage ] ****** [1084 done /797 queued / 16 running / 972 errors / 28.000000000000004% coverage ] ****** [1085 done /798 queued / 16 running / 973 errors / 28.000000000000004% coverage ] ****** [1085 done /798 queued / 16 running / 973 errors / 28.000000000000004% coverage ] ****** [1086 done /797 queued / 16 running / 974 errors / 28.000000000000004% coverage ] ****** [1086 done /797 queued / 16 running / 974 errors / 28.000000000000004% coverage ] ****** [1087 done /797 queued / 16 running / 975 errors / 28.000000000000004% coverage ] ****** [1087 done /797 queued / 16 running / 975 errors / 28.000000000000004% coverage ] ****** [1088 done /798 queued / 16 running / 976 errors / 28.000000000000004% coverage ] ****** [1088 done /798 queued / 16 running / 976 errors / 28.000000000000004% coverage ] ****** [1089 done /797 queued / 16 running / 977 errors / 28.000000000000004% coverage ] ****** [1089 done /797 queued / 16 running / 977 errors / 28.000000000000004% coverage ] ****** [1090 done /799 queued / 16 running / 978 errors / 28.000000000000004% coverage ] ****** [1090 done /799 queued / 16 running / 978 errors / 28.000000000000004% coverage ] ****** [1091 done /799 queued / 16 running / 979 errors / 28.000000000000004% coverage ] ****** [1091 done /799 queued / 16 running / 979 errors / 28.000000000000004% coverage ] ****** [1092 done /799 queued / 16 running / 980 errors / 28.000000000000004% coverage ] ****** [1092 done /799 queued / 16 running / 980 errors / 28.000000000000004% coverage ] ****** [1093 done /801 queued / 16 running / 981 errors / 28.000000000000004% coverage ] ****** [1093 done /801 queued / 16 running / 981 errors / 28.000000000000004% coverage ] ****** [1094 done /803 queued / 16 running / 982 errors / 28.000000000000004% coverage ] ****** [1094 done /803 queued / 16 running / 982 errors / 28.000000000000004% coverage ] ****** [1095 done /805 queued / 16 running / 983 errors / 28.000000000000004% coverage ] ****** [1095 done /805 queued / 16 running / 983 errors / 28.000000000000004% coverage ] ****** [1096 done /806 queued / 16 running / 984 errors / 28.000000000000004% coverage ] ****** [1096 done /806 queued / 16 running / 984 errors / 28.000000000000004% coverage ] ****** [1097 done /806 queued / 16 running / 985 errors / 28.000000000000004% coverage ] ****** [1097 done /806 queued / 16 running / 985 errors / 28.000000000000004% coverage ] ****** [1098 done /807 queued / 16 running / 986 errors / 28.000000000000004% coverage ] ****** [1098 done /807 queued / 16 running / 986 errors / 28.000000000000004% coverage ] ****** [1099 done /806 queued / 16 running / 987 errors / 28.000000000000004% coverage ] ****** [1099 done /806 queued / 16 running / 987 errors / 28.000000000000004% coverage ] ****** [1100 done /806 queued / 16 running / 988 errors / 28.000000000000004% coverage ] ****** [1100 done /806 queued / 16 running / 988 errors / 28.000000000000004% coverage ] ****** [1101 done /808 queued / 16 running / 989 errors / 28.000000000000004% coverage ] ****** [1101 done /808 queued / 16 running / 989 errors / 28.000000000000004% coverage ] ****** [1102 done /809 queued / 16 running / 990 errors / 28.000000000000004% coverage ] ****** [1102 done /809 queued / 16 running / 990 errors / 28.000000000000004% coverage ] ****** [1103 done /810 queued / 16 running / 991 errors / 28.000000000000004% coverage ] ****** [1103 done /810 queued / 16 running / 991 errors / 28.000000000000004% coverage ] ****** [1104 done /810 queued / 16 running / 992 errors / 28.000000000000004% coverage ] ****** [1104 done /810 queued / 16 running / 992 errors / 28.000000000000004% coverage ] ****** [1105 done /811 queued / 16 running / 993 errors / 28.000000000000004% coverage ] ****** [1105 done /811 queued / 16 running / 993 errors / 28.000000000000004% coverage ] ****** [1106 done /814 queued / 16 running / 994 errors / 28.000000000000004% coverage ] ****** [1106 done /814 queued / 16 running / 994 errors / 28.000000000000004% coverage ] ****** [1107 done /816 queued / 16 running / 995 errors / 28.000000000000004% coverage ] ****** [1107 done /816 queued / 16 running / 995 errors / 28.000000000000004% coverage ] ****** [1108 done /817 queued / 16 running / 996 errors / 28.000000000000004% coverage ] ****** [1108 done /817 queued / 16 running / 996 errors / 28.000000000000004% coverage ] ****** [1109 done /818 queued / 16 running / 997 errors / 28.000000000000004% coverage ] ****** [1109 done /818 queued / 16 running / 997 errors / 28.000000000000004% coverage ] ****** [1110 done /820 queued / 16 running / 998 errors / 28.000000000000004% coverage ] ****** [1110 done /820 queued / 16 running / 998 errors / 28.000000000000004% coverage ] ****** [1111 done /823 queued / 16 running / 999 errors / 28.000000000000004% coverage ] ****** [1111 done /823 queued / 16 running / 999 errors / 28.000000000000004% coverage ] ****** [1112 done /824 queued / 16 running / 1000 errors / 28.000000000000004% coverage ] ****** [1112 done /824 queued / 16 running / 1000 errors / 28.000000000000004% coverage ] ****** [1113 done /824 queued / 16 running / 1001 errors / 28.000000000000004% coverage ] ****** [1113 done /824 queued / 16 running / 1001 errors / 28.000000000000004% coverage ] ****** [1114 done /825 queued / 16 running / 1002 errors / 28.000000000000004% coverage ] ****** [1114 done /825 queued / 16 running / 1002 errors / 28.000000000000004% coverage ] ****** [1115 done /826 queued / 16 running / 1003 errors / 28.000000000000004% coverage ] ****** [1115 done /826 queued / 16 running / 1003 errors / 28.000000000000004% coverage ] ****** [1116 done /826 queued / 16 running / 1004 errors / 28.000000000000004% coverage ] ****** [1116 done /826 queued / 16 running / 1004 errors / 28.000000000000004% coverage ] ****** [1117 done /827 queued / 16 running / 1005 errors / 28.000000000000004% coverage ] ****** [1117 done /827 queued / 16 running / 1005 errors / 28.000000000000004% coverage ] ****** [1118 done /826 queued / 16 running / 1006 errors / 28.000000000000004% coverage ] ****** [1118 done /826 queued / 16 running / 1006 errors / 28.000000000000004% coverage ] ****** [1119 done /832 queued / 16 running / 1007 errors / 28.000000000000004% coverage ] ****** [1119 done /832 queued / 16 running / 1007 errors / 28.000000000000004% coverage ] ****** [1120 done /835 queued / 16 running / 1008 errors / 28.000000000000004% coverage ] ****** [1120 done /835 queued / 16 running / 1008 errors / 28.000000000000004% coverage ] ****** [1121 done /836 queued / 16 running / 1009 errors / 28.000000000000004% coverage ] ****** [1121 done /836 queued / 16 running / 1009 errors / 28.000000000000004% coverage ] ****** [1122 done /836 queued / 16 running / 1010 errors / 28.000000000000004% coverage ] ****** [1122 done /836 queued / 16 running / 1010 errors / 28.000000000000004% coverage ] ****** [1123 done /835 queued / 16 running / 1011 errors / 28.000000000000004% coverage ] ****** [1123 done /835 queued / 16 running / 1011 errors / 28.000000000000004% coverage ] ****** [1124 done /836 queued / 16 running / 1012 errors / 28.000000000000004% coverage ] ****** [1124 done /836 queued / 16 running / 1012 errors / 28.000000000000004% coverage ] ****** [1125 done /838 queued / 16 running / 1013 errors / 28.000000000000004% coverage ] ****** [1125 done /838 queued / 16 running / 1013 errors / 28.000000000000004% coverage ] ****** [1126 done /838 queued / 16 running / 1014 errors / 28.000000000000004% coverage ] ****** [1126 done /838 queued / 16 running / 1014 errors / 28.000000000000004% coverage ] ****** [1127 done /839 queued / 16 running / 1015 errors / 28.000000000000004% coverage ] ****** [1127 done /839 queued / 16 running / 1015 errors / 28.000000000000004% coverage ] ****** [1128 done /839 queued / 16 running / 1016 errors / 28.000000000000004% coverage ] ****** [1128 done /839 queued / 16 running / 1016 errors / 28.000000000000004% coverage ] ****** [1129 done /841 queued / 16 running / 1017 errors / 28.000000000000004% coverage ] ****** [1129 done /841 queued / 16 running / 1017 errors / 28.000000000000004% coverage ] ****** [1130 done /844 queued / 16 running / 1018 errors / 28.000000000000004% coverage ] ****** [1130 done /844 queued / 16 running / 1018 errors / 28.000000000000004% coverage ] ****** [1131 done /848 queued / 16 running / 1019 errors / 28.000000000000004% coverage ] ****** [1131 done /848 queued / 16 running / 1019 errors / 28.000000000000004% coverage ] ****** [1132 done /849 queued / 16 running / 1020 errors / 28.000000000000004% coverage ] ****** [1132 done /849 queued / 16 running / 1020 errors / 28.000000000000004% coverage ] ****** [1133 done /852 queued / 16 running / 1021 errors / 28.000000000000004% coverage ] ****** [1133 done /852 queued / 16 running / 1021 errors / 28.000000000000004% coverage ] ****** [1134 done /853 queued / 16 running / 1022 errors / 28.000000000000004% coverage ] ****** [1134 done /853 queued / 16 running / 1022 errors / 28.000000000000004% coverage ] ****** [1135 done /856 queued / 16 running / 1023 errors / 28.000000000000004% coverage ] ****** [1135 done /856 queued / 16 running / 1023 errors / 28.000000000000004% coverage ] ****** [1136 done /858 queued / 16 running / 1024 errors / 28.000000000000004% coverage ] ****** [1136 done /858 queued / 16 running / 1024 errors / 28.000000000000004% coverage ] ****** [1137 done /858 queued / 16 running / 1025 errors / 28.000000000000004% coverage ] ****** [1137 done /858 queued / 16 running / 1025 errors / 28.000000000000004% coverage ] ****** [1138 done /859 queued / 16 running / 1026 errors / 28.000000000000004% coverage ] ****** [1138 done /859 queued / 16 running / 1026 errors / 28.000000000000004% coverage ] ****** [1139 done /861 queued / 16 running / 1027 errors / 28.000000000000004% coverage ] ****** [1139 done /861 queued / 16 running / 1027 errors / 28.000000000000004% coverage ] ****** [1140 done /863 queued / 16 running / 1028 errors / 28.000000000000004% coverage ] ****** [1140 done /863 queued / 16 running / 1028 errors / 28.000000000000004% coverage ] ****** [1141 done /864 queued / 16 running / 1028 errors / 28.000000000000004% coverage ] ****** [1141 done /864 queued / 16 running / 1028 errors / 28.000000000000004% coverage ] ****** [1142 done /865 queued / 16 running / 1029 errors / 28.000000000000004% coverage ] ****** [1142 done /865 queued / 16 running / 1029 errors / 28.000000000000004% coverage ] ****** [1143 done /867 queued / 16 running / 1030 errors / 28.000000000000004% coverage ] ****** [1143 done /867 queued / 16 running / 1030 errors / 28.000000000000004% coverage ] ****** [1144 done /867 queued / 16 running / 1031 errors / 28.000000000000004% coverage ] ****** [1144 done /867 queued / 16 running / 1031 errors / 28.000000000000004% coverage ] ****** [1145 done /868 queued / 16 running / 1032 errors / 28.000000000000004% coverage ] ****** [1145 done /868 queued / 16 running / 1032 errors / 28.000000000000004% coverage ] ****** [1146 done /870 queued / 16 running / 1033 errors / 28.000000000000004% coverage ] ****** [1146 done /870 queued / 16 running / 1033 errors / 28.000000000000004% coverage ] ****** [1147 done /871 queued / 16 running / 1034 errors / 28.000000000000004% coverage ] ****** [1147 done /871 queued / 16 running / 1034 errors / 28.000000000000004% coverage ] ****** [1148 done /871 queued / 16 running / 1035 errors / 28.000000000000004% coverage ] ****** [1148 done /871 queued / 16 running / 1035 errors / 28.000000000000004% coverage ] ****** [1149 done /871 queued / 16 running / 1036 errors / 28.000000000000004% coverage ] ****** [1149 done /871 queued / 16 running / 1036 errors / 28.000000000000004% coverage ] ****** [1150 done /870 queued / 16 running / 1037 errors / 28.000000000000004% coverage ] ****** [1150 done /870 queued / 16 running / 1037 errors / 28.000000000000004% coverage ] ****** [1151 done /872 queued / 16 running / 1038 errors / 28.000000000000004% coverage ] ****** [1151 done /872 queued / 16 running / 1038 errors / 28.000000000000004% coverage ] ****** [1152 done /871 queued / 16 running / 1039 errors / 28.000000000000004% coverage ] ****** [1152 done /871 queued / 16 running / 1039 errors / 28.000000000000004% coverage ] ****** [1153 done /872 queued / 16 running / 1040 errors / 28.000000000000004% coverage ] ****** [1153 done /872 queued / 16 running / 1040 errors / 28.000000000000004% coverage ] ****** [1154 done /873 queued / 16 running / 1041 errors / 28.000000000000004% coverage ] ****** [1154 done /873 queued / 16 running / 1041 errors / 28.000000000000004% coverage ] ****** [1155 done /874 queued / 16 running / 1042 errors / 28.000000000000004% coverage ] ****** [1155 done /874 queued / 16 running / 1042 errors / 28.000000000000004% coverage ] ****** [1156 done /873 queued / 16 running / 1043 errors / 28.000000000000004% coverage ] ****** [1156 done /873 queued / 16 running / 1043 errors / 28.000000000000004% coverage ] ****** [1157 done /873 queued / 16 running / 1044 errors / 28.000000000000004% coverage ] ****** [1157 done /873 queued / 16 running / 1044 errors / 28.000000000000004% coverage ] ****** [1158 done /877 queued / 16 running / 1045 errors / 28.000000000000004% coverage ] ****** [1158 done /877 queued / 16 running / 1045 errors / 28.000000000000004% coverage ] ****** [1159 done /879 queued / 16 running / 1046 errors / 28.000000000000004% coverage ] ****** [1159 done /879 queued / 16 running / 1046 errors / 28.000000000000004% coverage ] ****** [1160 done /881 queued / 16 running / 1047 errors / 28.000000000000004% coverage ] ****** [1160 done /881 queued / 16 running / 1047 errors / 28.000000000000004% coverage ] ****** [1161 done /883 queued / 16 running / 1048 errors / 28.000000000000004% coverage ] ****** [1161 done /883 queued / 16 running / 1048 errors / 28.000000000000004% coverage ] ****** [1162 done /885 queued / 16 running / 1049 errors / 28.000000000000004% coverage ] ****** [1162 done /885 queued / 16 running / 1049 errors / 28.000000000000004% coverage ] ****** [1163 done /884 queued / 16 running / 1050 errors / 28.000000000000004% coverage ] ****** [1163 done /884 queued / 16 running / 1050 errors / 28.000000000000004% coverage ] ****** [1164 done /883 queued / 16 running / 1051 errors / 28.000000000000004% coverage ] ****** [1164 done /883 queued / 16 running / 1051 errors / 28.000000000000004% coverage ] ****** [1165 done /885 queued / 16 running / 1051 errors / 28.000000000000004% coverage ] ****** [1165 done /885 queued / 16 running / 1051 errors / 28.000000000000004% coverage ] ****** [1166 done /886 queued / 16 running / 1052 errors / 28.000000000000004% coverage ] ****** [1166 done /886 queued / 16 running / 1052 errors / 28.000000000000004% coverage ] ****** [1167 done /888 queued / 16 running / 1053 errors / 28.000000000000004% coverage ] ****** [1167 done /888 queued / 16 running / 1053 errors / 28.000000000000004% coverage ] ****** [1168 done /889 queued / 16 running / 1054 errors / 28.000000000000004% coverage ] ****** [1168 done /889 queued / 16 running / 1054 errors / 28.000000000000004% coverage ] ****** [1169 done /890 queued / 16 running / 1055 errors / 28.000000000000004% coverage ] ****** [1169 done /890 queued / 16 running / 1055 errors / 28.000000000000004% coverage ] ****** [1170 done /891 queued / 16 running / 1055 errors / 28.000000000000004% coverage ] ****** [1170 done /891 queued / 16 running / 1055 errors / 28.000000000000004% coverage ] ****** [1171 done /894 queued / 16 running / 1056 errors / 28.000000000000004% coverage ] ****** [1171 done /894 queued / 16 running / 1056 errors / 28.000000000000004% coverage ] ****** [1172 done /895 queued / 16 running / 1057 errors / 28.000000000000004% coverage ] ****** [1172 done /895 queued / 16 running / 1057 errors / 28.000000000000004% coverage ] ****** [1173 done /896 queued / 16 running / 1057 errors / 28.000000000000004% coverage ] ****** [1173 done /896 queued / 16 running / 1057 errors / 28.000000000000004% coverage ] ****** [1174 done /896 queued / 16 running / 1058 errors / 28.000000000000004% coverage ] ****** [1174 done /896 queued / 16 running / 1058 errors / 28.000000000000004% coverage ] ****** [1175 done /896 queued / 16 running / 1059 errors / 28.000000000000004% coverage ] ****** [1175 done /896 queued / 16 running / 1059 errors / 28.000000000000004% coverage ] ****** [1176 done /896 queued / 16 running / 1060 errors / 28.000000000000004% coverage ] ****** [1176 done /896 queued / 16 running / 1060 errors / 28.000000000000004% coverage ] ****** [1177 done /898 queued / 16 running / 1061 errors / 28.000000000000004% coverage ] ****** [1177 done /898 queued / 16 running / 1061 errors / 28.000000000000004% coverage ] ****** [1178 done /899 queued / 16 running / 1062 errors / 28.000000000000004% coverage ] ****** [1178 done /899 queued / 16 running / 1062 errors / 28.000000000000004% coverage ] ****** [1179 done /899 queued / 16 running / 1063 errors / 28.000000000000004% coverage ] ****** [1179 done /899 queued / 16 running / 1063 errors / 28.000000000000004% coverage ] ****** [1180 done /899 queued / 16 running / 1064 errors / 28.000000000000004% coverage ] ****** [1180 done /899 queued / 16 running / 1064 errors / 28.000000000000004% coverage ] ****** [1181 done /898 queued / 16 running / 1065 errors / 28.000000000000004% coverage ] ****** [1181 done /898 queued / 16 running / 1065 errors / 28.000000000000004% coverage ] ****** [1182 done /897 queued / 16 running / 1066 errors / 28.000000000000004% coverage ] ****** [1182 done /897 queued / 16 running / 1066 errors / 28.000000000000004% coverage ] ****** [1183 done /897 queued / 16 running / 1067 errors / 28.000000000000004% coverage ] ****** [1183 done /897 queued / 16 running / 1067 errors / 28.000000000000004% coverage ] ****** [1184 done /896 queued / 16 running / 1068 errors / 28.000000000000004% coverage ] ****** [1184 done /896 queued / 16 running / 1068 errors / 28.000000000000004% coverage ] ****** [1185 done /899 queued / 16 running / 1069 errors / 28.000000000000004% coverage ] ****** [1185 done /899 queued / 16 running / 1069 errors / 28.000000000000004% coverage ] ****** [1186 done /900 queued / 16 running / 1070 errors / 28.000000000000004% coverage ] ****** [1186 done /900 queued / 16 running / 1070 errors / 28.000000000000004% coverage ] ****** [1187 done /900 queued / 16 running / 1071 errors / 28.000000000000004% coverage ] ****** [1187 done /900 queued / 16 running / 1071 errors / 28.000000000000004% coverage ] ****** [1188 done /899 queued / 16 running / 1072 errors / 28.000000000000004% coverage ] ****** [1188 done /899 queued / 16 running / 1072 errors / 28.000000000000004% coverage ] ****** [1189 done /898 queued / 16 running / 1073 errors / 28.000000000000004% coverage ] ****** [1189 done /898 queued / 16 running / 1073 errors / 28.000000000000004% coverage ] ****** [1190 done /897 queued / 16 running / 1074 errors / 28.000000000000004% coverage ] ****** [1190 done /897 queued / 16 running / 1074 errors / 28.000000000000004% coverage ] ****** [1191 done /900 queued / 16 running / 1074 errors / 28.000000000000004% coverage ] ****** [1191 done /900 queued / 16 running / 1074 errors / 28.000000000000004% coverage ] ****** [1192 done /902 queued / 16 running / 1075 errors / 28.000000000000004% coverage ] ****** [1192 done /902 queued / 16 running / 1075 errors / 28.000000000000004% coverage ] ****** [1193 done /903 queued / 16 running / 1076 errors / 28.000000000000004% coverage ] ****** [1193 done /903 queued / 16 running / 1076 errors / 28.000000000000004% coverage ] ****** [1194 done /903 queued / 16 running / 1077 errors / 28.000000000000004% coverage ] ****** [1194 done /903 queued / 16 running / 1077 errors / 28.000000000000004% coverage ] ****** [1195 done /903 queued / 16 running / 1078 errors / 28.000000000000004% coverage ] ****** [1195 done /903 queued / 16 running / 1078 errors / 28.000000000000004% coverage ] ****** [1196 done /906 queued / 16 running / 1079 errors / 28.000000000000004% coverage ] ****** [1196 done /906 queued / 16 running / 1079 errors / 28.000000000000004% coverage ] ****** [1197 done /908 queued / 16 running / 1080 errors / 28.000000000000004% coverage ] ****** [1197 done /908 queued / 16 running / 1080 errors / 28.000000000000004% coverage ] ****** [1198 done /909 queued / 16 running / 1080 errors / 28.000000000000004% coverage ] ****** [1198 done /909 queued / 16 running / 1080 errors / 28.000000000000004% coverage ] ****** [1199 done /909 queued / 16 running / 1081 errors / 28.000000000000004% coverage ] ****** [1199 done /909 queued / 16 running / 1081 errors / 28.000000000000004% coverage ] ****** [1200 done /910 queued / 16 running / 1082 errors / 28.000000000000004% coverage ] ****** [1200 done /910 queued / 16 running / 1082 errors / 28.000000000000004% coverage ] ****** [1201 done /910 queued / 16 running / 1083 errors / 28.000000000000004% coverage ] ****** [1201 done /910 queued / 16 running / 1083 errors / 28.000000000000004% coverage ] ****** [1202 done /909 queued / 16 running / 1084 errors / 28.000000000000004% coverage ] ****** [1202 done /909 queued / 16 running / 1084 errors / 28.000000000000004% coverage ] ****** [1203 done /908 queued / 16 running / 1085 errors / 28.000000000000004% coverage ] ****** [1203 done /908 queued / 16 running / 1085 errors / 28.000000000000004% coverage ] ****** [1204 done /908 queued / 16 running / 1086 errors / 28.000000000000004% coverage ] ****** [1204 done /908 queued / 16 running / 1086 errors / 28.000000000000004% coverage ] ****** [1205 done /910 queued / 16 running / 1087 errors / 28.000000000000004% coverage ] ****** [1205 done /910 queued / 16 running / 1087 errors / 28.000000000000004% coverage ] ****** [1206 done /911 queued / 16 running / 1088 errors / 28.000000000000004% coverage ] ****** [1206 done /911 queued / 16 running / 1088 errors / 28.000000000000004% coverage ] ****** [1207 done /912 queued / 16 running / 1088 errors / 28.000000000000004% coverage ] ****** [1207 done /912 queued / 16 running / 1088 errors / 28.000000000000004% coverage ] ****** [1208 done /911 queued / 16 running / 1089 errors / 28.000000000000004% coverage ] ****** [1208 done /911 queued / 16 running / 1089 errors / 28.000000000000004% coverage ] ****** [1209 done /911 queued / 16 running / 1089 errors / 28.000000000000004% coverage ] ****** [1209 done /911 queued / 16 running / 1089 errors / 28.000000000000004% coverage ] ****** [1210 done /911 queued / 16 running / 1089 errors / 28.000000000000004% coverage ] ****** [1210 done /911 queued / 16 running / 1089 errors / 28.000000000000004% coverage ] ****** [1211 done /911 queued / 16 running / 1090 errors / 28.000000000000004% coverage ] ****** [1211 done /911 queued / 16 running / 1090 errors / 28.000000000000004% coverage ] ****** [1212 done /910 queued / 16 running / 1091 errors / 28.000000000000004% coverage ] ****** [1212 done /910 queued / 16 running / 1091 errors / 28.000000000000004% coverage ] ****** [1213 done /910 queued / 16 running / 1092 errors / 28.000000000000004% coverage ] ****** [1213 done /910 queued / 16 running / 1092 errors / 28.000000000000004% coverage ] ****** [1214 done /910 queued / 16 running / 1093 errors / 28.000000000000004% coverage ] ****** [1214 done /910 queued / 16 running / 1093 errors / 28.000000000000004% coverage ] ****** [1215 done /909 queued / 16 running / 1094 errors / 28.000000000000004% coverage ] ****** [1215 done /909 queued / 16 running / 1094 errors / 28.000000000000004% coverage ] ****** [1216 done /908 queued / 16 running / 1095 errors / 28.000000000000004% coverage ] ****** [1216 done /908 queued / 16 running / 1095 errors / 28.000000000000004% coverage ] ****** [1217 done /908 queued / 16 running / 1096 errors / 28.000000000000004% coverage ] ****** [1217 done /908 queued / 16 running / 1096 errors / 28.000000000000004% coverage ] ****** [1218 done /910 queued / 16 running / 1097 errors / 28.000000000000004% coverage ] ****** [1218 done /910 queued / 16 running / 1097 errors / 28.000000000000004% coverage ] ****** [1219 done /909 queued / 16 running / 1098 errors / 28.000000000000004% coverage ] ****** [1219 done /909 queued / 16 running / 1098 errors / 28.000000000000004% coverage ] ****** [1220 done /911 queued / 16 running / 1099 errors / 28.000000000000004% coverage ] ****** [1220 done /911 queued / 16 running / 1099 errors / 28.000000000000004% coverage ] ****** [1221 done /915 queued / 16 running / 1100 errors / 28.000000000000004% coverage ] ****** [1221 done /915 queued / 16 running / 1100 errors / 28.000000000000004% coverage ] ****** [1222 done /916 queued / 16 running / 1101 errors / 28.000000000000004% coverage ] ****** [1222 done /916 queued / 16 running / 1101 errors / 28.000000000000004% coverage ] ****** [1223 done /918 queued / 16 running / 1102 errors / 28.000000000000004% coverage ] ****** [1223 done /918 queued / 16 running / 1102 errors / 28.000000000000004% coverage ] ****** [1224 done /918 queued / 16 running / 1103 errors / 28.000000000000004% coverage ] ****** [1224 done /918 queued / 16 running / 1103 errors / 28.000000000000004% coverage ] ****** [1225 done /920 queued / 16 running / 1104 errors / 28.000000000000004% coverage ] ****** [1225 done /920 queued / 16 running / 1104 errors / 28.000000000000004% coverage ] ****** [1226 done /921 queued / 16 running / 1105 errors / 28.000000000000004% coverage ] ****** [1226 done /921 queued / 16 running / 1105 errors / 28.000000000000004% coverage ] ****** [1227 done /922 queued / 16 running / 1105 errors / 28.000000000000004% coverage ] ****** [1227 done /922 queued / 16 running / 1105 errors / 28.000000000000004% coverage ] ****** [1228 done /923 queued / 16 running / 1105 errors / 28.000000000000004% coverage ] ****** [1228 done /923 queued / 16 running / 1105 errors / 28.000000000000004% coverage ] ****** [1229 done /924 queued / 16 running / 1106 errors / 28.000000000000004% coverage ] ****** [1229 done /924 queued / 16 running / 1106 errors / 28.000000000000004% coverage ] ****** [1230 done /927 queued / 16 running / 1107 errors / 28.000000000000004% coverage ] ****** [1230 done /927 queued / 16 running / 1107 errors / 28.000000000000004% coverage ] ****** [1231 done /928 queued / 16 running / 1107 errors / 28.000000000000004% coverage ] ****** [1231 done /928 queued / 16 running / 1107 errors / 28.000000000000004% coverage ] ****** [1232 done /930 queued / 16 running / 1108 errors / 28.000000000000004% coverage ] ****** [1232 done /930 queued / 16 running / 1108 errors / 28.000000000000004% coverage ] ****** [1233 done /932 queued / 16 running / 1109 errors / 28.000000000000004% coverage ] ****** [1233 done /932 queued / 16 running / 1109 errors / 28.000000000000004% coverage ] ****** [1234 done /932 queued / 16 running / 1110 errors / 28.000000000000004% coverage ] ****** [1234 done /932 queued / 16 running / 1110 errors / 28.000000000000004% coverage ] ****** [1235 done /931 queued / 16 running / 1111 errors / 28.000000000000004% coverage ] ****** [1235 done /931 queued / 16 running / 1111 errors / 28.000000000000004% coverage ] ****** [1236 done /932 queued / 16 running / 1112 errors / 28.000000000000004% coverage ] ****** [1236 done /932 queued / 16 running / 1112 errors / 28.000000000000004% coverage ] ****** [1237 done /931 queued / 16 running / 1113 errors / 28.000000000000004% coverage ] ****** [1237 done /931 queued / 16 running / 1113 errors / 28.000000000000004% coverage ] ****** [1238 done /932 queued / 16 running / 1114 errors / 28.000000000000004% coverage ] ****** [1238 done /932 queued / 16 running / 1114 errors / 28.000000000000004% coverage ] ****** [1239 done /932 queued / 16 running / 1115 errors / 28.000000000000004% coverage ] ****** [1239 done /932 queued / 16 running / 1115 errors / 28.000000000000004% coverage ] ****** [1240 done /932 queued / 16 running / 1116 errors / 28.000000000000004% coverage ] ****** [1240 done /932 queued / 16 running / 1116 errors / 28.000000000000004% coverage ] ****** [1241 done /933 queued / 16 running / 1117 errors / 28.000000000000004% coverage ] ****** [1241 done /933 queued / 16 running / 1117 errors / 28.000000000000004% coverage ] ****** [1242 done /934 queued / 16 running / 1118 errors / 28.000000000000004% coverage ] ****** [1242 done /934 queued / 16 running / 1118 errors / 28.000000000000004% coverage ] ****** [1243 done /936 queued / 16 running / 1119 errors / 28.000000000000004% coverage ] ****** [1243 done /936 queued / 16 running / 1119 errors / 28.000000000000004% coverage ] ****** [1244 done /936 queued / 16 running / 1120 errors / 28.000000000000004% coverage ] ****** [1244 done /936 queued / 16 running / 1120 errors / 28.000000000000004% coverage ] ****** [1245 done /935 queued / 16 running / 1121 errors / 28.000000000000004% coverage ] ****** [1245 done /935 queued / 16 running / 1121 errors / 28.000000000000004% coverage ] ****** [1246 done /935 queued / 16 running / 1122 errors / 28.000000000000004% coverage ] ****** [1246 done /935 queued / 16 running / 1122 errors / 28.000000000000004% coverage ] ****** [1247 done /936 queued / 16 running / 1123 errors / 28.000000000000004% coverage ] ****** [1247 done /936 queued / 16 running / 1123 errors / 28.000000000000004% coverage ] ****** [1248 done /935 queued / 16 running / 1124 errors / 28.000000000000004% coverage ] ****** [1248 done /935 queued / 16 running / 1124 errors / 28.000000000000004% coverage ] ****** [1249 done /934 queued / 16 running / 1125 errors / 28.000000000000004% coverage ] ****** [1249 done /934 queued / 16 running / 1125 errors / 28.000000000000004% coverage ] ****** [1250 done /935 queued / 16 running / 1126 errors / 28.000000000000004% coverage ] ****** [1250 done /935 queued / 16 running / 1126 errors / 28.000000000000004% coverage ] ****** [1251 done /935 queued / 16 running / 1127 errors / 28.000000000000004% coverage ] ****** [1251 done /935 queued / 16 running / 1127 errors / 28.000000000000004% coverage ] ****** [1252 done /935 queued / 16 running / 1128 errors / 28.000000000000004% coverage ] ****** [1252 done /935 queued / 16 running / 1128 errors / 28.000000000000004% coverage ] ****** [1253 done /937 queued / 16 running / 1129 errors / 28.000000000000004% coverage ] ****** [1253 done /937 queued / 16 running / 1129 errors / 28.000000000000004% coverage ] ****** [1254 done /937 queued / 16 running / 1130 errors / 28.000000000000004% coverage ] ****** [1254 done /937 queued / 16 running / 1130 errors / 28.000000000000004% coverage ] ****** [1255 done /938 queued / 16 running / 1131 errors / 28.000000000000004% coverage ] ****** [1255 done /938 queued / 16 running / 1131 errors / 28.000000000000004% coverage ] ****** [1256 done /938 queued / 16 running / 1132 errors / 28.000000000000004% coverage ] ****** [1256 done /938 queued / 16 running / 1132 errors / 28.000000000000004% coverage ] ****** [1257 done /941 queued / 16 running / 1133 errors / 28.000000000000004% coverage ] ****** [1257 done /941 queued / 16 running / 1133 errors / 28.000000000000004% coverage ] ****** [1258 done /942 queued / 16 running / 1134 errors / 28.000000000000004% coverage ] ****** [1258 done /942 queued / 16 running / 1134 errors / 28.000000000000004% coverage ] ****** [1259 done /945 queued / 16 running / 1135 errors / 28.000000000000004% coverage ] ****** [1259 done /945 queued / 16 running / 1135 errors / 28.000000000000004% coverage ] ****** [1260 done /947 queued / 16 running / 1136 errors / 28.000000000000004% coverage ] ****** [1260 done /947 queued / 16 running / 1136 errors / 28.000000000000004% coverage ] ****** [1261 done /947 queued / 16 running / 1137 errors / 28.000000000000004% coverage ] ****** [1261 done /947 queued / 16 running / 1137 errors / 28.000000000000004% coverage ] ****** [1262 done /948 queued / 16 running / 1138 errors / 28.000000000000004% coverage ] ****** [1262 done /948 queued / 16 running / 1138 errors / 28.000000000000004% coverage ] ****** [1263 done /952 queued / 16 running / 1139 errors / 28.000000000000004% coverage ] ****** [1263 done /952 queued / 16 running / 1139 errors / 28.000000000000004% coverage ] ****** [1264 done /953 queued / 16 running / 1139 errors / 28.000000000000004% coverage ] ****** [1264 done /953 queued / 16 running / 1139 errors / 28.000000000000004% coverage ] ****** [1265 done /954 queued / 16 running / 1140 errors / 28.000000000000004% coverage ] ****** [1265 done /954 queued / 16 running / 1140 errors / 28.000000000000004% coverage ] ****** [1266 done /955 queued / 16 running / 1141 errors / 28.000000000000004% coverage ] ****** [1266 done /955 queued / 16 running / 1141 errors / 28.000000000000004% coverage ] ****** [1267 done /955 queued / 16 running / 1142 errors / 28.000000000000004% coverage ] ****** [1267 done /955 queued / 16 running / 1142 errors / 28.000000000000004% coverage ] ****** [1268 done /957 queued / 16 running / 1143 errors / 28.000000000000004% coverage ] ****** [1268 done /957 queued / 16 running / 1143 errors / 28.000000000000004% coverage ] ****** [1269 done /961 queued / 16 running / 1144 errors / 28.000000000000004% coverage ] ****** [1269 done /961 queued / 16 running / 1144 errors / 28.000000000000004% coverage ] ****** [1270 done /962 queued / 16 running / 1145 errors / 28.000000000000004% coverage ] ****** [1270 done /962 queued / 16 running / 1145 errors / 28.000000000000004% coverage ] ****** [1271 done /963 queued / 16 running / 1146 errors / 28.000000000000004% coverage ] ****** [1271 done /963 queued / 16 running / 1146 errors / 28.000000000000004% coverage ] ****** [1272 done /962 queued / 16 running / 1147 errors / 28.000000000000004% coverage ] ****** [1272 done /962 queued / 16 running / 1147 errors / 28.000000000000004% coverage ] ****** [1273 done /964 queued / 16 running / 1148 errors / 28.000000000000004% coverage ] ****** [1273 done /964 queued / 16 running / 1148 errors / 28.000000000000004% coverage ] ****** [1274 done /965 queued / 16 running / 1149 errors / 28.000000000000004% coverage ] ****** [1274 done /965 queued / 16 running / 1149 errors / 28.000000000000004% coverage ] ****** [1275 done /966 queued / 16 running / 1150 errors / 28.000000000000004% coverage ] ****** [1275 done /966 queued / 16 running / 1150 errors / 28.000000000000004% coverage ] ****** [1276 done /969 queued / 16 running / 1151 errors / 28.000000000000004% coverage ] ****** [1276 done /969 queued / 16 running / 1151 errors / 28.000000000000004% coverage ] ****** [1277 done /971 queued / 16 running / 1152 errors / 28.000000000000004% coverage ] ****** [1277 done /971 queued / 16 running / 1152 errors / 28.000000000000004% coverage ] ****** [1278 done /971 queued / 16 running / 1153 errors / 28.000000000000004% coverage ] ****** [1278 done /971 queued / 16 running / 1153 errors / 28.000000000000004% coverage ] ****** [1279 done /972 queued / 16 running / 1154 errors / 28.000000000000004% coverage ] ****** [1279 done /972 queued / 16 running / 1154 errors / 28.000000000000004% coverage ] ****** [1280 done /972 queued / 16 running / 1155 errors / 28.000000000000004% coverage ] ****** [1280 done /972 queued / 16 running / 1155 errors / 28.000000000000004% coverage ] ****** [1281 done /972 queued / 16 running / 1156 errors / 28.000000000000004% coverage ] ****** [1281 done /972 queued / 16 running / 1156 errors / 28.000000000000004% coverage ] ****** [1282 done /973 queued / 16 running / 1157 errors / 28.000000000000004% coverage ] ****** [1282 done /973 queued / 16 running / 1157 errors / 28.000000000000004% coverage ] ****** [1283 done /973 queued / 16 running / 1158 errors / 28.000000000000004% coverage ] ****** [1283 done /973 queued / 16 running / 1158 errors / 28.000000000000004% coverage ] ****** [1284 done /975 queued / 16 running / 1159 errors / 28.000000000000004% coverage ] ****** [1284 done /975 queued / 16 running / 1159 errors / 28.000000000000004% coverage ] ****** [1285 done /975 queued / 16 running / 1160 errors / 28.000000000000004% coverage ] ****** [1285 done /975 queued / 16 running / 1160 errors / 28.000000000000004% coverage ] ****** [1286 done /976 queued / 16 running / 1161 errors / 28.000000000000004% coverage ] ****** [1286 done /976 queued / 16 running / 1161 errors / 28.000000000000004% coverage ] ****** [1287 done /976 queued / 16 running / 1162 errors / 28.000000000000004% coverage ] ****** [1287 done /976 queued / 16 running / 1162 errors / 28.000000000000004% coverage ] ****** [1288 done /976 queued / 16 running / 1163 errors / 28.000000000000004% coverage ] ****** [1288 done /976 queued / 16 running / 1163 errors / 28.000000000000004% coverage ] ****** [1289 done /975 queued / 16 running / 1164 errors / 28.000000000000004% coverage ] ****** [1289 done /975 queued / 16 running / 1164 errors / 28.000000000000004% coverage ] ****** [1290 done /975 queued / 16 running / 1165 errors / 28.000000000000004% coverage ] ****** [1290 done /975 queued / 16 running / 1165 errors / 28.000000000000004% coverage ] ****** [1291 done /975 queued / 16 running / 1166 errors / 28.000000000000004% coverage ] ****** [1291 done /975 queued / 16 running / 1166 errors / 28.000000000000004% coverage ] ****** [1292 done /974 queued / 16 running / 1167 errors / 28.000000000000004% coverage ] ****** [1292 done /974 queued / 16 running / 1167 errors / 28.000000000000004% coverage ] ****** [1293 done /973 queued / 16 running / 1168 errors / 28.000000000000004% coverage ] ****** [1293 done /973 queued / 16 running / 1168 errors / 28.000000000000004% coverage ] ****** [1294 done /972 queued / 16 running / 1169 errors / 28.000000000000004% coverage ] ****** [1294 done /972 queued / 16 running / 1169 errors / 28.000000000000004% coverage ] ****** [1295 done /973 queued / 16 running / 1170 errors / 28.000000000000004% coverage ] ****** [1295 done /973 queued / 16 running / 1170 errors / 28.000000000000004% coverage ] ****** [1296 done /973 queued / 16 running / 1171 errors / 28.000000000000004% coverage ] ****** [1296 done /973 queued / 16 running / 1171 errors / 28.000000000000004% coverage ] ****** [1297 done /972 queued / 16 running / 1172 errors / 28.000000000000004% coverage ] ****** [1297 done /972 queued / 16 running / 1172 errors / 28.000000000000004% coverage ] ****** [1298 done /974 queued / 16 running / 1173 errors / 28.000000000000004% coverage ] ****** [1298 done /974 queued / 16 running / 1173 errors / 28.000000000000004% coverage ] ****** [1299 done /976 queued / 16 running / 1173 errors / 28.000000000000004% coverage ] ****** [1299 done /976 queued / 16 running / 1173 errors / 28.000000000000004% coverage ] ****** [1300 done /977 queued / 16 running / 1174 errors / 28.000000000000004% coverage ] ****** [1300 done /977 queued / 16 running / 1174 errors / 28.000000000000004% coverage ] ****** [1301 done /978 queued / 16 running / 1175 errors / 28.000000000000004% coverage ] ****** [1301 done /978 queued / 16 running / 1175 errors / 28.000000000000004% coverage ] ****** [1302 done /978 queued / 16 running / 1176 errors / 28.000000000000004% coverage ] ****** [1302 done /978 queued / 16 running / 1176 errors / 28.000000000000004% coverage ] ****** [1303 done /979 queued / 16 running / 1177 errors / 28.000000000000004% coverage ] ****** [1303 done /979 queued / 16 running / 1177 errors / 28.000000000000004% coverage ] ****** [1304 done /980 queued / 16 running / 1178 errors / 28.000000000000004% coverage ] ****** [1304 done /980 queued / 16 running / 1178 errors / 28.000000000000004% coverage ] ****** [1305 done /982 queued / 16 running / 1179 errors / 28.000000000000004% coverage ] ****** [1305 done /982 queued / 16 running / 1179 errors / 28.000000000000004% coverage ] ****** [1306 done /983 queued / 16 running / 1180 errors / 28.000000000000004% coverage ] ****** [1306 done /983 queued / 16 running / 1180 errors / 28.000000000000004% coverage ] ****** [1307 done /984 queued / 16 running / 1181 errors / 28.000000000000004% coverage ] ****** [1307 done /984 queued / 16 running / 1181 errors / 28.000000000000004% coverage ] ****** [1308 done /988 queued / 16 running / 1181 errors / 28.000000000000004% coverage ] ****** [1308 done /988 queued / 16 running / 1181 errors / 28.000000000000004% coverage ] ****** [1309 done /989 queued / 16 running / 1182 errors / 28.000000000000004% coverage ] ****** [1309 done /989 queued / 16 running / 1182 errors / 28.000000000000004% coverage ] ****** [1310 done /990 queued / 16 running / 1182 errors / 28.000000000000004% coverage ] ****** [1310 done /990 queued / 16 running / 1182 errors / 28.000000000000004% coverage ] ****** [1311 done /991 queued / 16 running / 1183 errors / 28.000000000000004% coverage ] ****** [1311 done /991 queued / 16 running / 1183 errors / 28.000000000000004% coverage ] ****** [1312 done /996 queued / 16 running / 1184 errors / 28.000000000000004% coverage ] ****** [1312 done /996 queued / 16 running / 1184 errors / 28.000000000000004% coverage ] ****** [1313 done /997 queued / 16 running / 1185 errors / 28.000000000000004% coverage ] ****** [1313 done /997 queued / 16 running / 1185 errors / 28.000000000000004% coverage ] ****** [1314 done /998 queued / 16 running / 1186 errors / 28.000000000000004% coverage ] ****** [1314 done /998 queued / 16 running / 1186 errors / 28.000000000000004% coverage ] ****** [1315 done /1003 queued / 16 running / 1187 errors / 28.000000000000004% coverage ] ****** [1315 done /1003 queued / 16 running / 1187 errors / 28.000000000000004% coverage ] ****** [1316 done /1004 queued / 16 running / 1188 errors / 28.000000000000004% coverage ] ****** [1316 done /1004 queued / 16 running / 1188 errors / 28.000000000000004% coverage ] ****** [1317 done /1005 queued / 16 running / 1189 errors / 28.000000000000004% coverage ] ****** [1317 done /1005 queued / 16 running / 1189 errors / 28.000000000000004% coverage ] ****** [1318 done /1006 queued / 16 running / 1190 errors / 28.000000000000004% coverage ] ****** [1318 done /1006 queued / 16 running / 1190 errors / 28.000000000000004% coverage ] ****** [1319 done /1005 queued / 16 running / 1191 errors / 28.000000000000004% coverage ] ****** [1319 done /1005 queued / 16 running / 1191 errors / 28.000000000000004% coverage ] ****** [1320 done /1006 queued / 16 running / 1192 errors / 28.000000000000004% coverage ] ****** [1320 done /1006 queued / 16 running / 1192 errors / 28.000000000000004% coverage ] ****** [1321 done /1006 queued / 16 running / 1193 errors / 28.000000000000004% coverage ] ****** [1321 done /1006 queued / 16 running / 1193 errors / 28.000000000000004% coverage ] ****** [1322 done /1005 queued / 16 running / 1194 errors / 28.000000000000004% coverage ] ****** [1322 done /1005 queued / 16 running / 1194 errors / 28.000000000000004% coverage ] ****** [1323 done /1004 queued / 16 running / 1195 errors / 28.000000000000004% coverage ] ****** [1323 done /1004 queued / 16 running / 1195 errors / 28.000000000000004% coverage ] ****** [1324 done /1005 queued / 16 running / 1195 errors / 28.000000000000004% coverage ] ****** [1324 done /1005 queued / 16 running / 1195 errors / 28.000000000000004% coverage ] ****** [1325 done /1005 queued / 16 running / 1195 errors / 28.000000000000004% coverage ] ****** [1325 done /1005 queued / 16 running / 1195 errors / 28.000000000000004% coverage ] ****** [1326 done /1007 queued / 16 running / 1196 errors / 28.000000000000004% coverage ] ****** [1326 done /1007 queued / 16 running / 1196 errors / 28.000000000000004% coverage ] ****** [1327 done /1008 queued / 16 running / 1197 errors / 28.000000000000004% coverage ] ****** [1327 done /1008 queued / 16 running / 1197 errors / 28.000000000000004% coverage ] ****** [1328 done /1010 queued / 16 running / 1198 errors / 28.000000000000004% coverage ] ****** [1328 done /1010 queued / 16 running / 1198 errors / 28.000000000000004% coverage ] ****** [1329 done /1010 queued / 16 running / 1198 errors / 28.000000000000004% coverage ] ****** [1329 done /1010 queued / 16 running / 1198 errors / 28.000000000000004% coverage ] ****** [1330 done /1010 queued / 16 running / 1198 errors / 28.000000000000004% coverage ] ****** [1330 done /1010 queued / 16 running / 1198 errors / 28.000000000000004% coverage ] ****** [1331 done /1011 queued / 16 running / 1199 errors / 28.000000000000004% coverage ] ****** [1331 done /1011 queued / 16 running / 1199 errors / 28.000000000000004% coverage ] ****** [1332 done /1010 queued / 16 running / 1200 errors / 28.000000000000004% coverage ] ****** [1332 done /1010 queued / 16 running / 1200 errors / 28.000000000000004% coverage ] ****** [1333 done /1011 queued / 16 running / 1201 errors / 28.000000000000004% coverage ] ****** [1333 done /1011 queued / 16 running / 1201 errors / 28.000000000000004% coverage ] ****** [1334 done /1012 queued / 16 running / 1202 errors / 28.000000000000004% coverage ] ****** [1334 done /1012 queued / 16 running / 1202 errors / 28.000000000000004% coverage ] ****** [1335 done /1012 queued / 16 running / 1203 errors / 28.000000000000004% coverage ] ****** [1335 done /1012 queued / 16 running / 1203 errors / 28.000000000000004% coverage ] ****** [1336 done /1014 queued / 16 running / 1204 errors / 28.000000000000004% coverage ] ****** [1336 done /1014 queued / 16 running / 1204 errors / 28.000000000000004% coverage ] ****** [1337 done /1017 queued / 16 running / 1205 errors / 28.000000000000004% coverage ] ****** [1337 done /1017 queued / 16 running / 1205 errors / 28.000000000000004% coverage ] ****** [1338 done /1018 queued / 16 running / 1206 errors / 28.000000000000004% coverage ] ****** [1338 done /1018 queued / 16 running / 1206 errors / 28.000000000000004% coverage ] ****** [1339 done /1019 queued / 16 running / 1207 errors / 28.000000000000004% coverage ] ****** [1339 done /1019 queued / 16 running / 1207 errors / 28.000000000000004% coverage ] ****** [1340 done /1020 queued / 16 running / 1208 errors / 28.000000000000004% coverage ] ****** [1340 done /1020 queued / 16 running / 1208 errors / 28.000000000000004% coverage ] ****** [1341 done /1020 queued / 16 running / 1209 errors / 28.000000000000004% coverage ] ****** [1341 done /1020 queued / 16 running / 1209 errors / 28.000000000000004% coverage ] ****** [1342 done /1022 queued / 16 running / 1210 errors / 28.000000000000004% coverage ] ****** [1342 done /1022 queued / 16 running / 1210 errors / 28.000000000000004% coverage ] ****** [1343 done /1023 queued / 16 running / 1211 errors / 28.000000000000004% coverage ] ****** [1343 done /1023 queued / 16 running / 1211 errors / 28.000000000000004% coverage ] ****** [1344 done /1024 queued / 16 running / 1212 errors / 28.000000000000004% coverage ] ****** [1344 done /1024 queued / 16 running / 1212 errors / 28.000000000000004% coverage ] ****** [1345 done /1027 queued / 16 running / 1213 errors / 28.000000000000004% coverage ] ****** [1345 done /1027 queued / 16 running / 1213 errors / 28.000000000000004% coverage ] ****** [1346 done /1030 queued / 16 running / 1214 errors / 28.000000000000004% coverage ] ****** [1346 done /1030 queued / 16 running / 1214 errors / 28.000000000000004% coverage ] ****** [1347 done /1031 queued / 16 running / 1214 errors / 28.000000000000004% coverage ] ****** [1347 done /1031 queued / 16 running / 1214 errors / 28.000000000000004% coverage ] ****** [1348 done /1033 queued / 16 running / 1215 errors / 28.000000000000004% coverage ] ****** [1348 done /1033 queued / 16 running / 1215 errors / 28.000000000000004% coverage ] ****** [1349 done /1034 queued / 16 running / 1216 errors / 28.000000000000004% coverage ] ****** [1349 done /1034 queued / 16 running / 1216 errors / 28.000000000000004% coverage ] ****** [1350 done /1037 queued / 16 running / 1217 errors / 28.000000000000004% coverage ] ****** [1350 done /1037 queued / 16 running / 1217 errors / 28.000000000000004% coverage ] ****** [1351 done /1039 queued / 16 running / 1218 errors / 28.000000000000004% coverage ] ****** [1351 done /1039 queued / 16 running / 1218 errors / 28.000000000000004% coverage ] ****** [1352 done /1039 queued / 16 running / 1219 errors / 28.000000000000004% coverage ] ****** [1352 done /1039 queued / 16 running / 1219 errors / 28.000000000000004% coverage ] ****** [1353 done /1039 queued / 16 running / 1220 errors / 28.000000000000004% coverage ] ****** [1353 done /1039 queued / 16 running / 1220 errors / 28.000000000000004% coverage ] ****** [1354 done /1041 queued / 16 running / 1221 errors / 28.000000000000004% coverage ] ****** [1354 done /1041 queued / 16 running / 1221 errors / 28.000000000000004% coverage ] ****** [1355 done /1042 queued / 16 running / 1222 errors / 28.000000000000004% coverage ] ****** [1355 done /1042 queued / 16 running / 1222 errors / 28.000000000000004% coverage ] ****** [1356 done /1043 queued / 16 running / 1223 errors / 28.000000000000004% coverage ] ****** [1356 done /1043 queued / 16 running / 1223 errors / 28.000000000000004% coverage ] ****** [1357 done /1045 queued / 16 running / 1224 errors / 28.000000000000004% coverage ] ****** [1357 done /1045 queued / 16 running / 1224 errors / 28.000000000000004% coverage ] ****** [1358 done /1046 queued / 16 running / 1225 errors / 28.000000000000004% coverage ] ****** [1358 done /1046 queued / 16 running / 1225 errors / 28.000000000000004% coverage ] ****** [1359 done /1046 queued / 16 running / 1226 errors / 28.000000000000004% coverage ] ****** [1359 done /1046 queued / 16 running / 1226 errors / 28.000000000000004% coverage ] ****** [1360 done /1047 queued / 16 running / 1227 errors / 28.000000000000004% coverage ] ****** [1360 done /1047 queued / 16 running / 1227 errors / 28.000000000000004% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","join","toString","apply","bound EventEmitter","bound setMaxListeners","bound getMaxListeners","bound ehlo","call","isArray","parse","bound emit","bound addListener","bound prependListener","bound once","bound prependOnceListener","bound removeListener","bound removeAllListeners","bound listeners","bound listenerCount","bound eventNames"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0,"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":0} start 0.0683 took 9.9589s
*-- Errors occured in test {"_bound":0,"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":0}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpandedSwitcher":0,"ExpansionArg_type":0,"_bound":2} start 10.1619 took 9.4638s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":1,"_bound":4} start 10.2562 took 9.8735s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":1,"_bound":4}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":1,"_bound":4}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":1,"ExpansionArg_type":0,"_bound":3,"ExpandedSwitcher_2":0} start 10.2299 took 10.1018s
*-- Test Case {"Switcher":true,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":0,"_bound":1} start 10.2018 took 10.306s
*-- Errors occured in test {"Switcher":true,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":0,"_bound":1}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":0,"_bound":1}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpandedSwitcher_2":0,"_bound":4,"ExpansionArg_type":0} start 20.3685 took 8.4168s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":2,"_bound":5,"ExpansionArg_int":0} start 20.2169 took 9.163s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":2,"_bound":5,"ExpansionArg_int":0}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":2,"_bound":5}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":1,"_bound":2} start 20.5399 took 9.2804s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":1,"_bound":2}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":1,"_bound":2}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpandedSwitcher_2":0,"_bound":5,"ExpansionArg_type_2":0} start 28.8142 took 8.7062s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpandedSwitcher_2":0,"_bound":5,"ExpansionArg_type_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpandedSwitcher_2":0,"_bound":5}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":3,"ExpansionArg_int":0,"_bound":6,"ExpansionArg_string":"PureString"} start 29.4169 took 8.9106s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":3,"ExpansionArg_int":0,"_bound":6,"ExpansionArg_string":"PureString"}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":3,"ExpansionArg_int":0,"_bound":6}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":3,"ExpandedSwitcher_2":0,"_bound":6,"ExpansionArg_string":"PureString"} start 28.8321 took 9.9507s
*-- Test Case {"Switcher":true,"ExpansionArg_type":2,"_bound":3,"ExpansionArg_int":0} start 29.8465 took 9.3247s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":2,"_bound":3,"ExpansionArg_int":0}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":2,"_bound":3}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_type_2":0,"_bound":7,"ExpansionArg_array_length":0} start 37.6014 took 8.5527s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_type_2":0,"_bound":7,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_type_2":0,"_bound":7}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"_bound":6} start 37.5826 took 9.0172s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"_bound":6}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"_bound":6}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"_bound":8,"ExpansionArg_array_length":0} start 37.6385 took 9.0599s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"_bound":8,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"_bound":8}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_string":"","_bound":7,"ExpansionArg_array_length":0} start 38.3706 took 9.23s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_string":"","_bound":7,"ExpansionArg_array_length":0}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_string":"","_bound":7}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":2,"ExpansionArg_int":3,"_bound":5} start 39.2128 took 9.1406s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":2,"ExpansionArg_int":3,"_bound":5}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":2,"ExpansionArg_int":3,"_bound":5}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":2,"ExpansionArg_string":"","ExpandedSwitcher_2":0,"_bound":8,"ExpansionArg_int":0} start 38.8731 took 9.5984s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_string":"","ExpandedSwitcher_2":0,"_bound":9,"ExpansionArg_array_length":0} start 38.8031 took 9.9841s
*-- Test Case {"Switcher":true,"ExpansionArg_type":3,"ExpansionArg_int":0,"_bound":4,"ExpansionArg_string":"PureString"} start 39.2469 took 9.5406s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":3,"ExpansionArg_int":0,"_bound":4,"ExpansionArg_string":"PureString"}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":3,"ExpansionArg_int":0,"_bound":4}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":1,"ExpansionArg_string":"","ExpandedSwitcher_2":0,"_bound":7} start 38.8274 took 10.0865s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_array_length":0,"ExpansionArg_type_2":0,"_bound":8} start 46.3531 took 9.4418s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_array_length":0,"ExpansionArg_type_2":0,"_bound":8}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_array_length":0,"ExpansionArg_type_2":0,"_bound":8}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"ExpansionArg_type_2":0,"_bound":11,"ExpansionArg_bool":false} start 46.1881 took 9.6518s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"ExpansionArg_type_2":0,"_bound":11,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"ExpansionArg_type_2":0,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"_bound":7} start 46.6592 took 9.3767s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"_bound":7}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"_bound":7}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_array_length":0,"ExpansionArg_type_2":0,"_bound":10,"ExpansionArg_string":"PureString"} start 46.2381 took 9.837s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_array_length":0,"ExpansionArg_type_2":0,"_bound":10,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_array_length":0,"ExpansionArg_type_2":0,"_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":2,"ExpansionArg_array_length":0,"ExpansionArg_type_2":0,"_bound":9,"ExpansionArg_int":0} start 46.3182 took 9.7571s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":2,"ExpansionArg_array_length":0,"ExpansionArg_type_2":0,"_bound":9,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":2,"ExpansionArg_array_length":0,"ExpansionArg_type_2":0,"_bound":9}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":5,"ExpansionArg_type_2":0,"_bound":8,"ExpansionArg_bool":false} start 46.6395 took 9.4358s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":5,"ExpansionArg_type_2":0,"_bound":8,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":5,"ExpansionArg_type_2":0,"_bound":8}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_type_2":0,"_bound":12,"ExpansionArg_array_element_0_type":0} start 46.2899 took 9.7855s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_type_2":0,"_bound":12,"ExpansionArg_array_element_0_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_type_2":0,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":5,"_bound":13,"ExpansionArg_bool":false} start 46.3743 took 9.9782s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":5,"_bound":13,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":5,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":5,"_bound":9,"ExpansionArg_bool":false} start 46.6898 took 9.8257s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":5,"_bound":9,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":5,"_bound":9}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":13,"ExpansionArg_array_element_0_type":0} start 46.76 took 9.7691s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":13,"ExpansionArg_array_element_0_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":12,"ExpansionArg_bool":false} start 47.6301 took 9.4798s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":12,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"_bound":11,"ExpansionArg_string":"PureString"} start 48.5373 took 10.147s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"_bound":11,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"ExpandedSwitcher_2":0,"_bound":10,"ExpansionArg_bool":false} start 48.8915 took 9.9632s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"_bound":8,"ExpansionArg_bool":false} start 48.4348 took 10.4712s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"_bound":8,"ExpansionArg_bool":false}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"_bound":8}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpandedSwitcher_2":0,"_bound":11,"ExpansionArg_array_element_0_type":0} start 48.8185 took 10.3098s
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_string":"","_bound":5,"ExpansionArg_array_length":0} start 48.9869 took 10.2092s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_string":"","_bound":5,"ExpansionArg_array_length":0}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_string":"","_bound":5}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_array_length":0,"_bound":9} start 56.1467 took 9.1987s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_array_length":0,"_bound":9}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_array_length":0,"_bound":9}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":3,"ExpansionArg_string":"","_bound":6} start 55.8194 took 9.5657s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":3,"ExpansionArg_string":"","_bound":6}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":3,"ExpansionArg_string":"","_bound":6}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"_bound":8} start 56.0669 took 9.3781s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"_bound":8}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"_bound":8}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_array_length":0,"_bound":10,"ExpansionArg_int":0} start 56.1776 took 9.4638s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_array_length":0,"_bound":10,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_array_length":0,"_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":12,"ExpansionArg_array_length":0} start 56.316 took 9.424s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":12,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":3,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":11,"ExpansionArg_string":"PureString"} start 56.2503 took 9.8289s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":3,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":11,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":3,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":16,"ExpansionArg_string":"PureString"} start 56.7366 took 9.6438s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":16,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"_bound":9,"ExpansionArg_array_element_0_type":0} start 55.9016 took 10.5569s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"_bound":9,"ExpansionArg_array_element_0_type":0}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"_bound":9}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":11,"ExpansionArg_int":0} start 57.1382 took 9.5444s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":11,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":13,"ExpansionArg_array_length":0} start 56.6328 took 10.2944s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":13,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":2,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":10,"ExpansionArg_int":0} start 56.4493 took 10.8506s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":2,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":10,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":2,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":0,"_bound":14,"ExpansionArg_array_element_1_type":0} start 58.7194 took 9.2337s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":0,"_bound":14,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":0,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":14} start 58.8929 took 9.1155s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":14}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":12,"ExpansionArg_string":"PureString"} start 58.9491 took 9.7687s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":12,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":17,"ExpansionArg_array_length_2":0} start 59.1603 took 9.7782s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":17,"ExpansionArg_array_length_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":1,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":9} start 59.2677 took 10.3124s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":1,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":9}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":1,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":9}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"_bound":9} start 65.5262 took 9.1118s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"_bound":9}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"_bound":9}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":15,"ExpansionArg_array_element_1_type":0} start 65.3782 took 9.3484s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":15,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":10} start 65.4316 took 9.7395s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":10}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_type_2":0,"_bound":13,"ExpansionArg_array_element_0_type":0} start 65.7834 took 9.6504s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_type_2":0,"_bound":13,"ExpansionArg_array_element_0_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_type_2":0,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpandedSwitcher_2":0,"_bound":13,"ExpansionArg_array_element_1_type":0} start 66.1232 took 9.4194s
*-- Test Case {"Switcher":true,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"_bound":6,"ExpansionArg_bool":false} start 65.6716 took 10.1952s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"_bound":6,"ExpansionArg_bool":false}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"_bound":6}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"_bound":9,"ExpansionArg_int":0} start 66.4886 took 9.76s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"_bound":9,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"_bound":9}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":11,"ExpansionArg_array_element_1_type":0} start 66.9601 took 9.7039s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":11,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":11}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"_bound":7,"ExpansionArg_array_element_0_type":0} start 66.7209 took 10.1232s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"_bound":7,"ExpansionArg_array_element_0_type":0}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"_bound":7}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":1,"_bound":11} start 67.3343 took 9.7424s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":1,"_bound":11}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":1,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":15,"ExpansionArg_int":0} start 66.414 took 10.9069s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":15,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":6,"_bound":10,"ExpansionArg_bool":false} start 68.0427 took 9.8562s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":6,"_bound":10,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":6,"_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":6,"_bound":12,"ExpansionArg_bool_2":false} start 68.7439 took 9.3172s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":6,"_bound":12,"ExpansionArg_bool_2":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":6,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":14,"ExpansionArg_array_element_0_type":0} start 68.9639 took 9.6697s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":14,"ExpansionArg_array_element_0_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":0,"_bound":16,"ExpansionArg_array_element_2_type":0} start 67.9833 took 10.9338s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":0,"_bound":16,"ExpansionArg_array_element_2_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":0,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":6,"ExpansionArg_type_2":0,"_bound":9,"ExpansionArg_bool":false} start 69.6185 took 10.1555s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":6,"ExpansionArg_type_2":0,"_bound":9,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":6,"ExpansionArg_type_2":0,"_bound":9}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"_bound":17,"ExpansionArg_array_element_2_type":0} start 74.7694 took 9.3442s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"_bound":17,"ExpansionArg_array_element_2_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":2,"_bound":15,"ExpansionArg_int":0} start 75.2114 took 9.0126s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":2,"_bound":15,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":2,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"_bound":10} start 74.6837 took 9.7466s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"_bound":10}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":1,"_bound":10} start 75.4676 took 9.3472s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":1,"_bound":10}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":1,"_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpandedSwitcher_2":0,"_bound":15,"ExpansionArg_array_element_2_type":0} start 75.5665 took 9.9033s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"_bound":13,"ExpansionArg_array_element_2_type":0} start 76.8787 took 8.9977s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"_bound":13,"ExpansionArg_array_element_2_type":0}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"_bound":13}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":5,"ExpansionArg_bool":true,"_bound":7} start 75.9033 took 10.4712s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":5,"ExpansionArg_bool":true,"_bound":7}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":5,"ExpansionArg_bool":true,"_bound":7}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"_bound":12,"ExpansionArg_int":0} start 77.1005 took 9.312s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"_bound":12,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":10} start 76.7095 took 9.818s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":10}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_int":0,"_bound":11,"ExpansionArg_array_length":0} start 76.2757 took 10.3162s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_int":0,"_bound":11,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_int":0,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":13,"ExpansionArg_string":"PureString"} start 77.9276 took 9.3744s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":13,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"_bound":18,"ExpansionArg_array_element_0_type":0} start 77.3714 took 10.3628s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"_bound":18,"ExpansionArg_array_element_0_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool_2":false,"_bound":15,"ExpansionArg_string":"PureString"} start 78.1091 took 9.7893s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool_2":false,"_bound":15,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool_2":false,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":2,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":11,"ExpansionArg_int":0} start 79.8195 took 8.6446s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":2,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":11,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":2,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":14,"ExpansionArg_array_length":0} start 78.6639 took 10.1449s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":14,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool_2":false,"_bound":14,"ExpansionArg_int":0} start 78.9552 took 10.0574s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool_2":false,"_bound":14,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool_2":false,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":12,"ExpansionArg_int":0} start 84.2641 took 9.2617s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":12,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":3,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":12,"ExpansionArg_string":"PureString"} start 84.1454 took 10.0026s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":3,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":12,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":3,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":11} start 84.8405 took 9.4797s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":11}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":9,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"_bound":11,"ExpandedSwitcher_2":0} start 84.4968 took 9.862s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":5,"ExpansionArg_int":0,"_bound":17,"ExpansionArg_bool":false} start 85.5036 took 10.0525s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":5,"ExpansionArg_int":0,"_bound":17,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":5,"ExpansionArg_int":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool_2":false,"_bound":16,"ExpansionArg_array_length":0} start 85.9235 took 9.7927s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool_2":false,"_bound":16,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool_2":false,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool_2":false,"_bound":13} start 86.572 took 9.32s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool_2":false,"_bound":13}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool_2":false,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":13,"ExpansionArg_array_length":0} start 86.4054 took 9.6731s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":13,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_int":0,"_bound":13,"ExpansionArg_array_length":0} start 86.4603 took 9.8482s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_int":0,"_bound":13,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_int":0,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":13,"ExpansionArg_bool":false} start 86.6369 took 9.7232s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":13,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"_bound":12,"ExpansionArg_string":"PureString"} start 87.3354 took 9.5687s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"_bound":12,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":1,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":10} start 87.9404 took 9.3806s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":1,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":10}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":1,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":16} start 87.771 took 9.88s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":16}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_type_2":0,"_bound":13,"ExpansionArg_array_element_0_int":0} start 89.0346 took 9.0586s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_type_2":0,"_bound":13,"ExpansionArg_array_element_0_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_type_2":0,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":14,"ExpansionArg_array_element_0_int":0} start 88.8411 took 9.4861s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":14,"ExpansionArg_array_element_0_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":0,"_bound":15,"ExpansionArg_array_element_1_type":0} start 88.5253 took 11.5542s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":0,"_bound":15,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":0,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":6,"_bound":13,"ExpansionArg_bool_2":false} start 93.5636 took 9.068s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":6,"_bound":13,"ExpansionArg_bool_2":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":6,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":10,"ExpansionArg_type":0,"ExpandedSwitcher_2":0,"_bound":12} start 94.424 took 9.8633s
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":9,"ExpansionArg_array_element_1_type":0} start 94.1875 took 10.2199s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":9,"ExpansionArg_array_element_1_type":0}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":9}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":18,"ExpansionArg_string":"PureString"} start 95.5855 took 9.5373s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":18,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"_bound":11,"ExpansionArg_array_length":0} start 94.3448 took 10.9416s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"_bound":11,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpandedSwitcher_2":0,"_bound":12,"ExpansionArg_array_element_0_string":"PureString"} start 95.9125 took 9.8223s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"_bound":14,"ExpansionArg_string_2":"PureString"} start 96.3374 took 9.6906s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"_bound":14,"ExpansionArg_string_2":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":15,"ExpansionArg_bool":false} start 96.411 took 9.7198s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":15,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":19,"ExpansionArg_array_length_2":0} start 95.7644 took 10.4061s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":19,"ExpansionArg_array_length_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpandedSwitcher_2":0,"_bound":17,"ExpansionArg_array_element_3_type":0} start 96.9317 took 9.4383s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"_bound":19,"ExpansionArg_array_element_3_type":0} start 97.3439 took 9.3207s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"_bound":19,"ExpansionArg_array_element_3_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":7,"ExpansionArg_type_2":0,"_bound":10,"ExpansionArg_bool":false} start 96.1278 took 10.9644s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":7,"ExpansionArg_type_2":0,"_bound":10,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":7,"ExpansionArg_type_2":0,"_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":16,"ExpansionArg_array_element_1_type":0} start 97.6874 took 9.9366s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":16,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"_bound":14} start 98.1555 took 9.5355s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"_bound":14}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_int":0,"_bound":16,"ExpansionArg_array_element_0_bool":false} start 98.384 took 9.5915s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_int":0,"_bound":16,"ExpansionArg_array_element_0_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_int":0,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"_bound":15,"ExpansionArg_array_element_0_bool":false} start 100.1188 took 9.3809s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"_bound":15,"ExpansionArg_array_element_0_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool_2":false,"_bound":16,"ExpansionArg_string":"PureString"} start 102.6769 took 9.6645s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool_2":false,"_bound":16,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool_2":false,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool_2":false,"_bound":17,"ExpansionArg_array_length":0} start 104.4396 took 9.1422s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool_2":false,"_bound":17,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool_2":false,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":11,"ExpansionArg_type":0,"ExpandedSwitcher_2":0,"_bound":13} start 104.3327 took 9.4592s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"_bound":13,"ExpansionArg_string":"PureString"} start 105.3354 took 9.2813s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"_bound":13,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool_2":false,"_bound":14} start 105.1637 took 9.5019s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool_2":false,"_bound":14}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool_2":false,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":15} start 106.3957 took 8.8972s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":15}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":14,"ExpansionArg_bool":false} start 106.2451 took 9.1753s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":14,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":2,"ExpansionArg_array_length":0,"_bound":12,"ExpansionArg_int_2":0} start 106.0718 took 9.7323s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":2,"ExpansionArg_array_length":0,"_bound":12,"ExpansionArg_int_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":2,"ExpansionArg_array_length":0,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool_2":false,"_bound":15,"ExpansionArg_int":0} start 106.1636 took 10.023s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool_2":false,"_bound":15,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool_2":false,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher_2":0,"_bound":14,"ExpansionArg_array_element_0_int":0} start 106.6991 took 9.8287s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_bool":false,"_bound":17,"ExpansionArg_array_element_0_string":"PureString"} start 108.008 took 8.8666s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_bool":false,"_bound":17,"ExpansionArg_array_element_0_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_bool":false,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher_2":0,"_bound":13} start 105.769 took 11.7477s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":4,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":14,"ExpansionArg_array_length":0} start 107.1236 took 10.6734s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":4,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":14,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":4,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":1,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":11} start 107.6677 took 10.1712s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":1,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":11}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":1,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher_2":0,"_bound":15,"ExpansionArg_array_element_0_bool":false} start 107.7513 took 10.09s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":0,"_bound":17,"ExpansionArg_array_element_0_array_length":0} start 109.5318 took 9.986s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":0,"_bound":17,"ExpansionArg_array_element_0_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":0,"_bound":16,"ExpansionArg_array_element_0_string":"PureString"} start 112.3858 took 9.3105s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":0,"_bound":16,"ExpansionArg_array_element_0_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":0,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":3,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":13,"ExpansionArg_string":"PureString"} start 113.6288 took 9.4725s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":3,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":13,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":3,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":12,"ExpansionArg_type":0,"ExpandedSwitcher_2":0,"_bound":14} start 113.8362 took 10.0177s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":1,"_bound":14} start 114.75 took 9.7943s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":1,"_bound":14}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":1,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":18,"ExpansionArg_array_element_0_array_length":0} start 114.6587 took 10.3562s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":18,"ExpansionArg_array_element_0_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":1,"_bound":12} start 115.8373 took 9.574s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":1,"_bound":12}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":1,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":10,"ExpansionArg_array_element_0_int":0} start 115.4557 took 10.2125s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":10,"ExpansionArg_array_element_0_int":0}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":2,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":12,"ExpansionArg_int":0} start 115.3363 took 10.3919s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":2,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":12,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":2,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":0,"_bound":18,"ExpansionArg_array_element_3_type":0} start 116.2159 took 9.6965s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":0,"_bound":18,"ExpansionArg_array_element_3_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":0,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":0,"ExpansionArg_type_2":7,"_bound":11,"ExpansionArg_bool":false} start 116.5627 took 10.1121s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":0,"ExpansionArg_type_2":7,"_bound":11,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":0,"ExpansionArg_type_2":7,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"_bound":15,"ExpansionArg_array_element_3_type":0} start 117.5441 took 9.572s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"_bound":15,"ExpansionArg_array_element_3_type":0}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":14,"ExpansionArg_array_element_0_type":0} start 117.8173 took 9.7412s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":14,"ExpansionArg_array_element_0_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":1,"_bound":11} start 116.9239 took 10.6995s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":1,"_bound":11}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":1,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":17,"ExpansionArg_array_element_0_type":0} start 117.8984 took 10.0261s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":17,"ExpansionArg_array_element_0_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"ExpandedSwitcher_2":0,"_bound":16,"ExpansionArg_array_element_0_array_length":0} start 118.017 took 9.9803s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":8,"ExpansionArg_type_2":0,"_bound":11,"ExpansionArg_bool":false} start 119.5538 took 9.9747s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":8,"ExpansionArg_type_2":0,"_bound":11,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":8,"ExpansionArg_type_2":0,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"_bound":10,"ExpansionArg_int":0} start 121.7428 took 10.3076s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"_bound":10,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type":0,"_bound":20,"ExpansionArg_array_element_1_type":0} start 123.1241 took 9.5576s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type":0,"_bound":20,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type":0,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":13,"ExpandedSwitcher_2":0,"_bound":15} start 123.9058 took 9.7306s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":2,"_bound":15,"ExpansionArg_int":0} start 124.5767 took 10.0281s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":2,"_bound":15,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":2,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"_bound":12,"ExpansionArg_array_element_0_string":"PureString"} start 125.7045 took 9.1064s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"_bound":12,"ExpansionArg_array_element_0_string":"PureString"}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":0,"_bound":15} start 125.0596 took 10.0526s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":0,"_bound":15}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":0,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"_bound":13,"ExpansionArg_int":0} start 125.4484 took 10.251s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"_bound":13,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":11} start 125.7795 took 10.0744s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":11}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":15,"ExpansionArg_array_length":0} start 126.7016 took 9.2829s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":15,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_type_2":0,"_bound":14,"ExpansionArg_array_element_0_type":0} start 125.9507 took 10.6004s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_type_2":0,"_bound":14,"ExpansionArg_array_element_0_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_type_2":0,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":12} start 127.651 took 8.9701s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":12}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":14,"ExpansionArg_string":"PureString"} start 127.1499 took 9.5461s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":14,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":13,"ExpansionArg_int":0} start 127.5878 took 9.4365s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":13,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":15,"ExpansionArg_array_element_0_type":0} start 128.0433 took 9.1173s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":15,"ExpansionArg_array_element_0_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"_bound":12,"ExpansionArg_string":"PureString"} start 127.9595 took 9.5195s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"_bound":12,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":4,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":15,"ExpansionArg_array_length":0} start 129.5536 took 8.6475s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":4,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":15,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":4,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":3,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":14,"ExpansionArg_string":"PureString"} start 132.0817 took 8.8408s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":3,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":14,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":3,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":2,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":13,"ExpansionArg_int":0} start 132.7175 took 8.7444s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":2,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":13,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":2,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":1,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":12} start 133.6741 took 8.7519s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":1,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":12}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":1,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","_bound":13,"ExpansionArg_array_element_0_bool":false} start 134.8505 took 8.2022s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","_bound":13,"ExpansionArg_array_element_0_bool":false}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":11} start 135.1476 took 8.453s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":11}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":16,"ExpansionArg_string":"PureString"} start 134.6391 took 9.0415s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":16,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_type_2":0,"_bound":16,"ExpansionArg_array_element_1_bool":false} start 135.7299 took 8.3702s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_type_2":0,"_bound":16,"ExpansionArg_array_element_1_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_type_2":0,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":1,"_bound":17} start 136.5883 took 7.8038s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":1,"_bound":17}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":1,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":12,"ExpansionArg_string":"PureString"} start 135.8915 took 8.5928s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":12,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":5,"ExpansionArg_int":0,"_bound":14,"ExpansionArg_bool":false} start 136.0353 took 8.8561s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":5,"ExpansionArg_int":0,"_bound":14,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":5,"ExpansionArg_int":0,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":2,"_bound":16,"ExpansionArg_int":0} start 137.0656 took 7.943s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":2,"_bound":16,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":2,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":16,"ExpansionArg_array_element_0_type":0} start 136.7201 took 8.4197s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":16,"ExpansionArg_array_element_0_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_type_2":0,"_bound":14,"ExpansionArg_array_element_0_int":0} start 136.6475 took 8.5409s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_type_2":0,"_bound":14,"ExpansionArg_array_element_0_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_type_2":0,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"_bound":16,"ExpansionArg_array_element_1_type":0} start 137.1934 took 8.3067s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"_bound":16,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":14,"ExpansionArg_bool":false} start 137.5053 took 8.3657s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":14,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","_bound":13,"ExpansionArg_int_2":0} start 138.2255 took 8.0043s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","_bound":13,"ExpansionArg_int_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":16} start 140.9616 took 9.2582s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":16}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":16}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"_bound":11,"ExpansionArg_array_element_2_type":0} start 141.4824 took 9.294s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"_bound":11,"ExpansionArg_array_element_2_type":0}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"_bound":17,"ExpansionArg_array_element_1_type":0} start 142.4673 took 8.7163s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"_bound":17,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":17,"ExpansionArg_bool":false} start 143.7338 took 7.7658s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":17,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":14,"ExpansionArg_array_element_0_array_length":0} start 143.0998 took 8.6142s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":14,"ExpansionArg_array_element_0_array_length":0}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":0,"ExpansionArg_type_2":8,"_bound":12,"ExpansionArg_bool":false} start 143.6475 took 8.9515s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":0,"ExpansionArg_type_2":8,"_bound":12,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":0,"ExpansionArg_type_2":8,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"_bound":17,"ExpansionArg_array_element_1_int":0} start 144.5688 took 8.0752s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"_bound":17,"ExpansionArg_array_element_1_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"_bound":19,"ExpansionArg_array_element_1_array_length":0} start 144.1275 took 8.8699s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"_bound":19,"ExpansionArg_array_element_1_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"_bound":18,"ExpansionArg_array_element_1_string":"PureString"} start 144.4347 took 8.6052s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"_bound":18,"ExpansionArg_array_element_1_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":17} start 145.028 took 8.2905s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":17}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":15,"ExpansionArg_string_2":"PureString"} start 145.1634 took 8.335s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":15,"ExpansionArg_string_2":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":13,"ExpansionArg_bool":false} start 145.2364 took 8.6551s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":13,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":16,"ExpansionArg_array_length":0} start 144.9441 took 9.0554s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":16,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"_bound":15} start 145.5187 took 8.6414s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"_bound":15}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":15,"ExpansionArg_array_length":0} start 145.8962 took 8.8982s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":15,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":18,"ExpansionArg_string":"PureString"} start 146.2597 took 8.6086s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":18,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":5,"_bound":18,"ExpansionArg_bool":false} start 150.8087 took 7.706s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":5,"_bound":18,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":5,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"_bound":17,"ExpansionArg_array_element_1_bool":false} start 150.2389 took 8.3734s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"_bound":17,"ExpansionArg_array_element_1_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"_bound":16,"ExpansionArg_array_element_0_string":"PureString"} start 151.2153 took 8.0195s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"_bound":16,"ExpansionArg_array_element_0_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":18,"ExpansionArg_array_length_2":0} start 151.5361 took 8.5369s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":18,"ExpansionArg_array_length_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher_2":0,"_bound":16,"ExpansionArg_array_element_1_type":0} start 151.7414 took 8.6646s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":15,"ExpansionArg_string":"PureString"} start 153.0234 took 8.1198s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":15,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":14,"ExpansionArg_int":0} start 152.7198 took 8.4814s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":14,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":0,"_bound":17,"ExpansionArg_array_element_2_type":0} start 153.0756 took 8.6836s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":0,"_bound":17,"ExpansionArg_array_element_2_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":13} start 153.528 took 8.2753s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":13}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"_bound":20,"ExpansionArg_array_element_0_type_2":0} start 153.3457 took 8.8097s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"_bound":20,"ExpansionArg_array_element_0_type_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":16,"ExpansionArg_array_length":0} start 152.6354 took 9.6247s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":16,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":14,"ExpansionArg_array_length":0} start 153.9236 took 8.7355s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":14,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_type_2":0,"_bound":17} start 154.0214 took 8.7266s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_type_2":0,"_bound":17}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_type_2":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":19,"ExpansionArg_bool":false} start 154.8994 took 8.3735s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":19,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpandedSwitcher_2":0,"_bound":14} start 154.1918 took 9.1734s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":15,"ExpansionArg_array_element_0_int":0} start 154.8309 took 10.023s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":15,"ExpansionArg_array_element_0_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"_bound":20,"ExpansionArg_array_element_1_array_length":0} start 158.6391 took 8.8371s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"_bound":20,"ExpansionArg_array_element_1_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":19,"ExpansionArg_int":0} start 158.5474 took 9.3405s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":19,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"_bound":19,"ExpansionArg_array_element_1_string":"PureString"} start 159.2804 took 9.6998s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"_bound":19,"ExpansionArg_array_element_1_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":21,"ExpansionArg_array_length_2":0} start 160.1048 took 9.0214s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":21,"ExpansionArg_array_length_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":0,"_bound":17,"ExpansionArg_array_element_0_bool":false} start 160.4357 took 9.0216s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":0,"_bound":17,"ExpansionArg_array_element_0_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"_bound":18,"ExpansionArg_array_element_1_int":0} start 161.2394 took 8.8434s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"_bound":18,"ExpansionArg_array_element_1_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":20,"ExpansionArg_string":"PureString"} start 161.1703 took 9.1444s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":20,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":15,"ExpansionArg_array_element_0_type":0} start 161.7964 took 8.7844s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":15,"ExpansionArg_array_element_0_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":12} start 161.8724 took 9.5807s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":12}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":5,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"_bound":21,"ExpansionArg_array_element_4_type":0} start 162.2994 took 9.3029s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":5,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"_bound":21,"ExpansionArg_array_element_4_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":5,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":1,"_bound":19} start 162.1681 took 9.6366s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":1,"_bound":19}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":1,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":5,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpandedSwitcher_2":0,"_bound":19,"ExpansionArg_array_element_4_type":0} start 162.6953 took 9.4277s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpansionArg_type_2":0,"_bound":18,"ExpansionArg_array_element_2_int":0} start 162.7801 took 9.4713s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpansionArg_type_2":0,"_bound":18,"ExpansionArg_array_element_2_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpansionArg_type_2":0,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpandedSwitcher_2":0,"_bound":15,"ExpansionArg_array_element_1_string":"PureString"} start 163.4026 took 9.375s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":20,"ExpansionArg_array_length_2":0} start 163.3023 took 10.5136s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":20,"ExpansionArg_array_length_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"_bound":17,"ExpansionArg_array_element_0_string":"PureString"} start 164.8935 took 9.3056s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"_bound":17,"ExpansionArg_array_element_0_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":16} start 167.5114 took 10.3939s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":16}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":16}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":8,"ExpansionArg_array_element_0_int":0} start 167.9154 took 10.3146s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":8,"ExpansionArg_array_element_0_int":0}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":8}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"_bound":18,"ExpansionArg_array_element_2_type":0} start 169.0265 took 9.6473s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"_bound":18,"ExpansionArg_array_element_2_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":0,"_bound":18,"ExpansionArg_array_element_0_array_length":0} start 169.4881 took 9.359s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":0,"_bound":18,"ExpansionArg_array_element_0_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":0,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"_bound":19,"ExpansionArg_array_element_1_type":0} start 169.1583 took 9.9388s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"_bound":19,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":9,"ExpansionArg_type_2":0,"_bound":12,"ExpansionArg_bool":false} start 170.1241 took 9.9259s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":9,"ExpansionArg_type_2":0,"_bound":12,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":9,"ExpansionArg_type_2":0,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":0,"_bound":15,"ExpansionArg_array_element_1_type":0} start 170.3522 took 10.088s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":0,"_bound":15,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":0,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":6,"ExpansionArg_bool":false,"ExpansionArg_type_2":7,"_bound":14,"ExpansionArg_bool_2":false} start 170.6314 took 9.9648s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":6,"ExpansionArg_bool":false,"ExpansionArg_type_2":7,"_bound":14,"ExpansionArg_bool_2":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":6,"ExpansionArg_bool":false,"ExpansionArg_type_2":7,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":18,"ExpansionArg_array_element_0_type":0} start 171.6354 took 9.3484s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":18,"ExpansionArg_array_element_0_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"_bound":13,"ExpansionArg_array_element_1_string":"PureString"} start 171.4855 took 10.4045s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"_bound":13,"ExpansionArg_array_element_1_string":"PureString"}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_int":0,"ExpansionArg_type_2":0,"_bound":19,"ExpansionArg_array_element_2_bool":false} start 172.2714 took 9.6752s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_int":0,"ExpansionArg_type_2":0,"_bound":19,"ExpansionArg_array_element_2_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_int":0,"ExpansionArg_type_2":0,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":0,"_bound":18,"ExpansionArg_array_element_1_type":0} start 172.1526 took 9.8356s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":0,"_bound":18,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":0,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher_2":0,"_bound":16,"ExpansionArg_array_element_1_int":0} start 172.8149 took 9.6352s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":2,"_bound":20,"ExpansionArg_int":0} start 171.834 took 11.0641s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":2,"_bound":20,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":2,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher_2":0,"_bound":17,"ExpansionArg_array_element_1_bool":false} start 173.8516 took 10.2097s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","_bound":18,"ExpansionArg_array_element_0_bool":false} start 174.2433 took 10.1348s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","_bound":18,"ExpansionArg_array_element_0_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type":2,"_bound":19,"ExpansionArg_array_element_0_int":0} start 177.9426 took 10.2354s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type":2,"_bound":19,"ExpansionArg_array_element_0_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type":2,"_bound":19}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"_bound":10,"ExpansionArg_array_element_0_string":"PureString"} start 178.2754 took 9.9765s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"_bound":10,"ExpansionArg_array_element_0_string":"PureString"}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"_bound":18} start 178.8845 took 9.6065s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"_bound":18}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","_bound":18,"ExpansionArg_array_element_1_type":0} start 179.1185 took 9.5819s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","_bound":18,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","_bound":18}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":9} start 178.7024 took 10.4716s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":9}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":9}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":4,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":16,"ExpansionArg_array_length":0} start 180.0892 took 9.2814s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":4,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":16,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":4,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":2,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":14,"ExpansionArg_int":0} start 180.4665 took 9.5148s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":2,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":14,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":2,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":6,"ExpansionArg_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool_2":false,"_bound":17,"ExpansionArg_string":"PureString"} start 181.0356 took 9.4609s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":6,"ExpansionArg_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool_2":false,"_bound":17,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":6,"ExpansionArg_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool_2":false,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":6,"ExpansionArg_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool_2":false,"_bound":16,"ExpansionArg_int":0} start 180.6432 took 10.1949s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":6,"ExpansionArg_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool_2":false,"_bound":16,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":6,"ExpansionArg_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool_2":false,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":6,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool_2":false,"_bound":18,"ExpansionArg_array_length":0} start 181.9274 took 9.4297s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":6,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool_2":false,"_bound":18,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":6,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool_2":false,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"ExpansionArg_type_2":0,"_bound":20,"ExpansionArg_array_element_2_string":"PureString"} start 182.0664 took 9.458s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"ExpansionArg_type_2":0,"_bound":20,"ExpansionArg_array_element_2_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"ExpansionArg_type_2":0,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_bool":false,"ExpansionArg_type_2":0,"_bound":21,"ExpansionArg_array_element_2_array_length":0} start 181.9775 took 9.8627s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_bool":false,"ExpansionArg_type_2":0,"_bound":21,"ExpansionArg_array_element_2_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_bool":false,"ExpansionArg_type_2":0,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":3,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":15,"ExpansionArg_string":"PureString"} start 182.4749 took 9.6725s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":3,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":15,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":3,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":5,"ExpansionArg_int":0,"_bound":21,"ExpansionArg_bool":false} start 182.9228 took 10.853s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":5,"ExpansionArg_int":0,"_bound":21,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":5,"ExpansionArg_int":0,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":19,"ExpansionArg_array_element_0_array_length":0} start 184.4091 took 9.8115s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":19,"ExpansionArg_array_element_0_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher_2":0,"_bound":18,"ExpansionArg_array_element_1_array_length":0} start 184.0994 took 10.2755s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","_bound":15,"ExpansionArg_array_element_1_bool":false} start 188.2114 took 9.4699s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","_bound":15,"ExpansionArg_array_element_1_bool":false}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":1,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":13} start 188.7263 took 9.6459s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":1,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":13}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":1,"ExpansionArg_bool":false,"ExpansionArg_type_2":0,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","_bound":14,"ExpansionArg_array_element_1_int":0} start 188.3269 took 10.1812s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","_bound":14,"ExpansionArg_array_element_1_int":0}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","_bound":14}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","_bound":11,"ExpansionArg_array_element_0_bool":false} start 188.5164 took 10.0952s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","_bound":11,"ExpansionArg_array_element_0_bool":false}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":20} start 189.2035 took 9.9551s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":20}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":6,"ExpansionArg_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool_2":false,"_bound":15} start 189.4091 took 10.019s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":6,"ExpansionArg_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool_2":false,"_bound":15}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":6,"ExpansionArg_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool_2":false,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_int":0,"_bound":21,"ExpansionArg_array_element_0_bool":false} start 190.5387 took 9.6247s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_int":0,"_bound":21,"ExpansionArg_array_element_0_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_int":0,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":0,"ExpansionArg_type_2":9,"_bound":13,"ExpansionArg_bool":false} start 190.0144 took 10.196s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":0,"ExpansionArg_type_2":9,"_bound":13,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":0,"ExpansionArg_type_2":9,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"_bound":16,"ExpansionArg_array_element_1_type":0} start 190.8754 took 9.7805s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"_bound":16,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"_bound":14} start 191.5652 took 9.435s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"_bound":14}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"_bound":19,"ExpansionArg_array_element_2_int":0} start 191.3944 took 10.0808s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"_bound":19,"ExpansionArg_array_element_2_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpandedSwitcher_2":0,"_bound":16} start 192.1755 took 10.0748s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":1,"_bound":12} start 191.8715 took 10.6439s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":1,"_bound":12}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":1,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_type_2":0,"_bound":15,"ExpansionArg_array_element_0_type":0} start 194.3925 took 9.664s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_type_2":0,"_bound":15,"ExpansionArg_array_element_0_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_type_2":0,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":22,"ExpansionArg_string":"PureString"} start 194.2524 took 10.6438s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":22,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":22}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":23,"ExpansionArg_array_length_2":0} start 193.8194 took 11.2648s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":23,"ExpansionArg_array_length_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":23}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"_bound":16,"ExpansionArg_array_element_1_array_length":0} start 197.723 took 9.9038s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"_bound":16,"ExpansionArg_array_element_1_array_length":0}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher_2":0,"_bound":15,"ExpansionArg_array_element_1_type":0} start 198.397 took 9.9215s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":9,"ExpansionArg_type":10,"ExpandedSwitcher_2":0,"_bound":13,"ExpansionArg_bool":false} start 198.5314 took 9.9517s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":1,"_bound":13} start 199.4527 took 9.7243s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":1,"_bound":13}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":1,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpandedSwitcher_2":0,"_bound":14,"ExpansionArg_array_element_1_type":0} start 199.1919 took 10.0343s
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":12,"ExpansionArg_array_element_0_array_length":0} start 198.6553 took 10.7313s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":12,"ExpansionArg_array_element_0_array_length":0}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":23,"ExpansionArg_array_element_0_array_length":0} start 200.1995 took 9.4092s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":23,"ExpansionArg_array_element_0_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":23}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":15,"ExpansionArg_int":0} start 200.2835 took 10.006s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":15,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":16,"ExpansionArg_string":"PureString"} start 201.5082 took 8.8233s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":16,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":17,"ExpansionArg_array_length":0} start 200.7057 took 9.7874s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":17,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"_bound":15,"ExpansionArg_array_element_2_int":0} start 201.0389 took 9.6646s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"_bound":15,"ExpansionArg_array_element_2_int":0}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpandedSwitcher_2":0,"_bound":17,"ExpansionArg_array_element_2_bool":false} start 202.28 took 9.9215s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":14} start 202.5454 took 10.7937s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":14}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":8,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_bool":false,"_bound":22,"ExpansionArg_array_element_0_string":"PureString"} start 204.0915 took 9.924s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_bool":false,"_bound":22,"ExpansionArg_array_element_0_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_bool":false,"_bound":22}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_int":0,"_bound":20,"ExpansionArg_array_element_2_bool":false} start 204.938 took 10.0087s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_int":0,"_bound":20,"ExpansionArg_array_element_2_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_int":0,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":1,"_bound":15} start 205.1353 took 10.1266s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":1,"_bound":15}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":1,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"_bound":13,"ExpansionArg_string":"PureString"} start 207.661 took 10.2241s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"_bound":13,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":9,"ExpansionArg_type":4,"ExpansionArg_bool":false,"ExpandedSwitcher_2":0,"_bound":17,"ExpansionArg_array_length":0} start 208.5193 took 9.4397s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpandedSwitcher_2":0,"_bound":17,"ExpansionArg_array_element_1_type":0} start 208.3385 took 10.1817s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"_bound":14,"ExpansionArg_int":0} start 209.4168 took 9.4773s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"_bound":14,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":9,"ExpansionArg_type":3,"ExpansionArg_bool":false,"ExpandedSwitcher_2":0,"_bound":16,"ExpansionArg_string":"PureString"} start 209.289 took 10.0678s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_type_2":0,"_bound":18,"ExpansionArg_array_element_0_array_element_0_type":0} start 209.632 took 9.8792s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_type_2":0,"_bound":18,"ExpansionArg_array_element_0_array_element_0_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_type_2":0,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":9,"ExpansionArg_type":1,"ExpansionArg_bool":false,"ExpandedSwitcher_2":0,"_bound":14} start 210.3743 took 9.6281s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_int":0,"_bound":16,"ExpansionArg_array_element_2_bool":false} start 210.7462 took 9.6915s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_int":0,"_bound":16,"ExpansionArg_array_element_2_bool":false}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_int":0,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":0,"_bound":17,"ExpansionArg_array_element_1_type":0} start 210.3177 took 10.1601s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":0,"_bound":17,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_type_2":0,"_bound":19,"ExpansionArg_array_element_1_type":0} start 210.5209 took 10.2995s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_type_2":0,"_bound":19,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_type_2":0,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":9,"ExpansionArg_type":2,"ExpansionArg_bool":false,"ExpandedSwitcher_2":0,"_bound":15,"ExpansionArg_int":0} start 209.2144 took 11.6732s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher_2":0,"_bound":20,"ExpansionArg_array_element_2_array_length":0} start 212.2281 took 9.93s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher_2":0,"_bound":19,"ExpansionArg_array_element_2_string":"PureString"} start 213.3596 took 10.2095s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher_2":0,"_bound":18,"ExpansionArg_array_element_2_int":0} start 214.0512 took 9.7308s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"_bound":21,"ExpansionArg_array_element_2_string":"PureString"} start 214.9755 took 9.704s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"_bound":21,"ExpansionArg_array_element_2_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":2,"_bound":16,"ExpansionArg_int":0} start 215.309 took 9.8917s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":2,"_bound":16,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":2,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_bool":false,"_bound":22,"ExpansionArg_array_element_2_array_length":0} start 217.994 took 9.6845s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_bool":false,"_bound":22,"ExpansionArg_array_element_2_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_bool":false,"_bound":22}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":15,"ExpansionArg_array_length":0} start 218.5482 took 9.3861s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":15,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"_bound":11,"ExpansionArg_int":0} start 219.4073 took 9.234s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"_bound":11,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":0,"_bound":16} start 218.9356 took 9.7544s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":0,"_bound":16}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":0,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","_bound":14,"ExpansionArg_int_2":0} start 217.9076 took 11.3822s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","_bound":14,"ExpansionArg_int_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"_bound":19,"ExpansionArg_array_element_0_array_element_0_type":0} start 219.5348 took 10.0352s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"_bound":19,"ExpansionArg_array_element_0_array_element_0_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_int":0,"_bound":15,"ExpansionArg_array_length":0} start 220.0446 took 9.9544s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_int":0,"_bound":15,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_int":0,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_bool":false,"_bound":18,"ExpansionArg_array_element_2_array_length":0} start 220.4594 took 9.5906s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_bool":false,"_bound":18,"ExpansionArg_array_element_2_array_length":0}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_bool":false,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":5,"_bound":17,"ExpansionArg_bool":false} start 220.9232 took 9.4107s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":5,"_bound":17,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":5,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"_bound":17,"ExpansionArg_array_element_2_string":"PureString"} start 220.5417 took 9.8503s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"_bound":17,"ExpansionArg_array_element_2_string":"PureString"}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":1,"_bound":18} start 220.857 took 9.8941s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":1,"_bound":18}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":1,"_bound":18}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":10} start 222.1831 took 11.2519s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":10}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":5,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"_bound":17,"ExpansionArg_array_element_4_type":0} start 223.6054 took 9.8986s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":5,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"_bound":17,"ExpansionArg_array_element_4_type":0}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":5,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":5,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_2":0,"_bound":20,"ExpansionArg_array_element_4_type":0} start 223.8094 took 9.8388s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":5,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_2":0,"_bound":20,"ExpansionArg_array_element_4_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":5,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_2":0,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":17,"ExpansionArg_string":"PureString"} start 225.2389 took 9.5517s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":17,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":16,"ExpansionArg_array_element_1_type":0} start 224.7085 took 10.512s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":16,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"_bound":20,"ExpansionArg_array_element_1_type":0} start 227.7123 took 10.0849s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"_bound":20,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":6,"ExpansionArg_array_length":0,"_bound":16,"ExpansionArg_bool":false} start 227.9638 took 9.9329s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":6,"ExpansionArg_array_length":0,"_bound":16,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":6,"ExpansionArg_array_length":0,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":12} start 228.6833 took 9.5461s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":12}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":13,"ExpansionArg_string":"PureString"} start 228.7398 took 9.8301s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":13,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":1,"ExpandedSwitcher_2":0,"_bound":18} start 229.6093 took 10.0783s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_type_2":0,"_bound":17,"ExpansionArg_array_element_1_string":"PureString"} start 229.3256 took 10.5465s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_type_2":0,"_bound":17,"ExpansionArg_array_element_1_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_type_2":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":6,"ExpansionArg_array_length":0,"_bound":17,"ExpansionArg_bool":false} start 230.093 took 9.838s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":6,"ExpansionArg_array_length":0,"_bound":17,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":6,"ExpansionArg_array_length":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"_bound":16,"ExpansionArg_string_2":"PureString"} start 230.0434 took 10.0842s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"_bound":16,"ExpansionArg_string_2":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":18} start 230.4555 took 9.8365s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":18}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":21,"ExpansionArg_array_length_2":0} start 230.3611 took 10.399s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":21,"ExpansionArg_array_length_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":20,"ExpansionArg_string":"PureString"} start 230.7843 took 10.4448s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":20,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":19,"ExpansionArg_int":0} start 233.4796 took 9.8083s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":19,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":10,"ExpansionArg_type":11,"ExpandedSwitcher_2":0,"_bound":14,"ExpansionArg_bool":false} start 233.6716 took 9.9662s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":3,"_bound":19,"ExpansionArg_string":"PureString"} start 233.5355 took 10.533s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":3,"_bound":19,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":3,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":6,"ExpansionArg_string":"","_bound":18,"ExpansionArg_bool":false} start 234.8112 took 10.349s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":6,"ExpansionArg_string":"","_bound":18,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":6,"ExpansionArg_string":"","_bound":18}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"_bound":11,"ExpansionArg_array_element_1_string":"PureString"} start 235.241 took 10.3492s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"_bound":11,"ExpansionArg_array_element_1_string":"PureString"}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"_bound":13,"ExpansionArg_array_element_1_type":0} start 237.8556 took 9.9448s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"_bound":13,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpandedSwitcher_2":0,"_bound":17,"ExpansionArg_array_element_0_array_element_0_type":0} start 237.9969 took 10.2247s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":1,"_bound":20} start 238.3093 took 10.1031s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":1,"_bound":20}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":1,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":14,"ExpansionArg_array_length":0} start 238.6019 took 10.4143s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":14,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":3,"ExpandedSwitcher_2":0,"_bound":19,"ExpansionArg_array_element_3_string":"PureString"} start 239.7196 took 9.8956s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":0,"_bound":19,"ExpansionArg_array_element_1_bool":false} start 239.9735 took 9.9233s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":0,"_bound":19,"ExpansionArg_array_element_1_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":0,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":6,"_bound":19,"ExpansionArg_bool":false} start 240.1681 took 10.2336s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":6,"_bound":19,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":6,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":2,"_bound":16,"ExpansionArg_int":0} start 240.3236 took 10.2214s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":2,"_bound":16,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":2,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":0,"_bound":18,"ExpansionArg_array_element_1_int":0} start 239.9234 took 11.1328s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":0,"_bound":18,"ExpansionArg_array_element_1_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":0,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":7,"_bound":15,"ExpansionArg_bool_2":false} start 240.7916 took 10.3359s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":7,"_bound":15,"ExpansionArg_bool_2":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":7,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpandedSwitcher_2":0,"_bound":18,"ExpansionArg_array_element_1_type":0} start 241.2574 took 10.6487s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"_bound":22,"ExpansionArg_array_element_2_type":0} start 243.3282 took 9.9275s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"_bound":22,"ExpansionArg_array_element_2_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"_bound":22}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":10,"ExpansionArg_type":1,"ExpansionArg_bool":false,"ExpandedSwitcher_2":0,"_bound":15} start 244.1042 took 9.6218s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":10,"ExpansionArg_type":4,"ExpansionArg_bool":false,"ExpandedSwitcher_2":0,"_bound":18,"ExpansionArg_array_length":0} start 243.6636 took 10.127s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":19,"ExpansionArg_array_length_2":0} start 245.1977 took 10.1144s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":19,"ExpansionArg_array_length_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","_bound":20,"ExpansionArg_int":0} start 245.6243 took 9.9053s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","_bound":20,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":10,"ExpansionArg_type":3,"ExpansionArg_bool":false,"ExpandedSwitcher_2":0,"_bound":17,"ExpansionArg_string":"PureString"} start 247.8315 took 10.0355s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":10,"ExpansionArg_type":2,"ExpansionArg_bool":false,"ExpandedSwitcher_2":0,"_bound":16,"ExpansionArg_int":0} start 248.2567 took 9.9301s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":21,"ExpansionArg_bool":false} start 248.4637 took 10.0721s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":21,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":1,"ExpansionArg_type_2":6,"ExpansionArg_array_length":0,"_bound":15,"ExpansionArg_bool":false} start 249.0396 took 10.2565s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":1,"ExpansionArg_type_2":6,"ExpansionArg_array_length":0,"_bound":15,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":1,"ExpansionArg_type_2":6,"ExpansionArg_array_length":0,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":21,"ExpansionArg_int":0} start 250.424 took 9.4935s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":21,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":5,"ExpansionArg_array_element_3_string":"","ExpandedSwitcher_2":0,"_bound":21,"ExpansionArg_array_element_3_bool":false} start 249.6495 took 10.4456s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"_bound":20,"ExpansionArg_array_element_1_array_length":0} start 249.9222 took 10.6267s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"_bound":20,"ExpansionArg_array_element_1_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":23,"ExpansionArg_array_length_2":0} start 250.5762 took 10.3401s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":23,"ExpansionArg_array_length_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":23}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool_2":false,"_bound":18,"ExpansionArg_string":"PureString"} start 251.1817 took 10.0613s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool_2":false,"_bound":18,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool_2":false,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":2,"_bound":21,"ExpansionArg_array_element_3_int":0} start 251.9289 took 9.9783s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":2,"_bound":21,"ExpansionArg_array_element_3_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":2,"_bound":21}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","_bound":12,"ExpansionArg_array_element_1_int":0} start 251.0859 took 11.1665s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","_bound":12,"ExpansionArg_array_element_1_int":0}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":2,"ExpansionArg_array_element_3_string":"","ExpandedSwitcher_2":0,"_bound":20,"ExpansionArg_array_element_3_int":0} start 253.7481 took 9.5929s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool_2":false,"_bound":19,"ExpansionArg_array_length":0} start 253.2908 took 10.4315s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool_2":false,"_bound":19,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool_2":false,"_bound":19}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","_bound":13,"ExpansionArg_array_element_1_bool":false} start 253.8278 took 11.0831s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","_bound":13,"ExpansionArg_array_element_1_bool":false}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool_2":false,"_bound":17,"ExpansionArg_int":0} start 255.5754 took 9.6973s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool_2":false,"_bound":17,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool_2":false,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":22,"ExpansionArg_string":"PureString"} start 255.3396 took 10.5686s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":22,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":22}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool_2":false,"_bound":16} start 257.9123 took 10.3719s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool_2":false,"_bound":16}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool_2":false,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":5,"ExpansionArg_int":0,"_bound":18,"ExpansionArg_bool":false} start 258.2282 took 10.576s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":5,"ExpansionArg_int":0,"_bound":18,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":5,"ExpansionArg_int":0,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":22,"ExpansionArg_array_length_2":0} start 258.5676 took 10.5606s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":22,"ExpansionArg_array_length_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":22}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":20} start 259.3261 took 10.3241s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":20}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":19,"ExpansionArg_array_element_1_type":0} start 259.954 took 10.1171s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":19,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":4,"ExpansionArg_array_element_3_bool":false,"ExpandedSwitcher_2":0,"_bound":22,"ExpansionArg_array_element_3_array_length":0} start 260.1276 took 10.2686s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":17} start 260.9517 took 9.7726s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":17}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":1,"_bound":16} start 260.5876 took 10.4584s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":1,"_bound":16}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":1,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":17} start 261.2876 took 10.1647s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":17}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":5,"ExpansionArg_array_element_3_int":0,"_bound":22,"ExpansionArg_array_element_3_bool":false} start 261.9383 took 10.2404s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":5,"ExpansionArg_array_element_3_int":0,"_bound":22,"ExpansionArg_array_element_3_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":5,"ExpansionArg_array_element_3_int":0,"_bound":22}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"_bound":12,"ExpansionArg_int":0} start 262.2835 took 10.3167s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"_bound":12,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":11,"ExpansionArg_type":12,"ExpandedSwitcher_2":0,"_bound":15,"ExpansionArg_bool":false} start 263.3817 took 9.6878s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","_bound":14,"ExpansionArg_array_element_1_type":0} start 263.7637 took 10.8622s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","_bound":14,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":2,"_bound":18,"ExpansionArg_int":0} start 265.3313 took 10.4606s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":2,"_bound":18,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":2,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"_bound":12,"ExpansionArg_array_element_1_type":0} start 265.9427 took 10.5555s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"_bound":12,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"_bound":12}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"_bound":14,"ExpansionArg_array_element_1_array_length":0} start 264.937 took 11.6433s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"_bound":14,"ExpansionArg_array_element_1_array_length":0}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":0,"_bound":17,"ExpansionArg_array_element_2_type":0} start 268.3198 took 10.0824s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":0,"_bound":17,"ExpansionArg_array_element_2_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":20,"ExpansionArg_array_length_2":0} start 269.1556 took 10.7079s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":20,"ExpansionArg_array_length_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":19,"ExpansionArg_string":"PureString"} start 268.8472 took 11.1089s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":19,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":16,"ExpansionArg_array_element_0_type":0} start 269.6733 took 10.4154s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":16,"ExpansionArg_array_element_0_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":0,"_bound":16,"ExpansionArg_array_element_1_type":0} start 270.117 took 10.3389s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":0,"_bound":16,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":0,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":2,"_bound":17,"ExpansionArg_int":0} start 271.0876 took 10.251s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":2,"_bound":17,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":2,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_type_2":2,"_bound":20,"ExpansionArg_int":0} start 270.4124 took 10.979s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_type_2":2,"_bound":20,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_type_2":2,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_type_2":0,"_bound":16,"ExpansionArg_array_element_0_type":0} start 270.7622 took 10.9152s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_type_2":0,"_bound":16,"ExpansionArg_array_element_0_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_type_2":0,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":3,"ExpansionArg_array_element_3_bool":false,"_bound":23,"ExpansionArg_array_element_3_string":"PureString"} start 272.2196 took 9.875s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":3,"ExpansionArg_array_element_3_bool":false,"_bound":23,"ExpansionArg_array_element_3_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":3,"ExpansionArg_array_element_3_bool":false,"_bound":23}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"_bound":18,"ExpansionArg_array_element_1_string":"PureString"} start 271.4872 took 10.6732s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"_bound":18,"ExpansionArg_array_element_1_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":13} start 272.6379 took 9.5664s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":13}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":11,"ExpansionArg_type":2,"ExpansionArg_bool":false,"ExpandedSwitcher_2":0,"_bound":17,"ExpansionArg_int":0} start 273.1074 took 9.8826s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":11,"ExpansionArg_type":4,"ExpansionArg_bool":false,"ExpandedSwitcher_2":0,"_bound":19,"ExpansionArg_array_length":0} start 274.658 took 9.6967s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":4,"ExpansionArg_array_element_3_bool":false,"_bound":24,"ExpansionArg_array_element_3_array_length":0} start 275.826 took 10.2193s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":4,"ExpansionArg_array_element_3_bool":false,"_bound":24,"ExpansionArg_array_element_3_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":4,"ExpansionArg_array_element_3_bool":false,"_bound":24}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":14,"ExpansionArg_string":"PureString"} start 276.611 took 9.8306s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":14,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":11,"ExpansionArg_type":3,"ExpansionArg_bool":false,"ExpandedSwitcher_2":0,"_bound":18,"ExpansionArg_string":"PureString"} start 276.5321 took 10.4275s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":11,"ExpansionArg_type":1,"ExpansionArg_bool":false,"ExpandedSwitcher_2":0,"_bound":16} start 278.4295 took 10.7483s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":19} start 279.9985 took 10.0679s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":19}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":5,"ExpansionArg_int":0,"_bound":20,"ExpansionArg_bool":false} start 279.8922 took 10.2284s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":5,"ExpansionArg_int":0,"_bound":20,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":5,"ExpansionArg_int":0,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"_bound":15,"ExpansionArg_array_element_1_type":0} start 280.1246 took 11.0219s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"_bound":15,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_2":1,"_bound":21} start 280.5242 took 10.9362s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_2":1,"_bound":21}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_2":1,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":18,"ExpansionArg_string":"PureString"} start 281.3755 took 10.5212s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":18,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":21} start 281.717 took 10.2155s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":21}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_type_2":5,"ExpansionArg_int":0,"_bound":22,"ExpansionArg_bool":false} start 281.4236 took 10.6492s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_type_2":5,"ExpansionArg_int":0,"_bound":22,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_type_2":5,"ExpansionArg_int":0,"_bound":22}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","_bound":20,"ExpansionArg_array_element_1_bool":false} start 282.1977 took 9.9708s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","_bound":20,"ExpansionArg_array_element_1_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":1,"_bound":16} start 282.1352 took 10.7752s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":1,"_bound":16}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":1,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":1,"_bound":14} start 283.0275 took 10.0673s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":1,"_bound":14}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":1,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","_bound":19,"ExpansionArg_array_element_1_int":0} start 282.265 took 10.9072s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","_bound":19,"ExpansionArg_array_element_1_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":17,"ExpansionArg_array_element_1_type":0} start 284.3874 took 10.636s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":17,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":15,"ExpansionArg_array_length":0} start 286.4653 took 10.035s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":15,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":1,"ExpansionArg_type_2":0,"_bound":19} start 286.0963 took 11.1037s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":1,"ExpansionArg_type_2":0,"_bound":19}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":1,"ExpansionArg_type_2":0,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":1,"_bound":13} start 286.9796 took 10.4526s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":1,"_bound":13}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":1,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":18,"ExpansionArg_array_element_1_type":0} start 289.2147 took 10.6018s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":18,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":22,"ExpansionArg_array_length_2":0} start 290.1607 took 10.2832s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":22,"ExpansionArg_array_length_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":22}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":18,"ExpansionArg_array_element_2_type":0} start 290.1037 took 10.5882s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":18,"ExpansionArg_array_element_2_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":24,"ExpansionArg_array_length_2":0} start 292.1116 took 9.8927s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":24,"ExpansionArg_array_length_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":24}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":21,"ExpansionArg_string":"PureString"} start 291.1807 took 10.9355s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":21,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":19,"ExpansionArg_bool":false} start 291.9235 took 10.4312s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":19,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_2":2,"_bound":22,"ExpansionArg_int":0} start 291.4876 took 10.9284s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_2":2,"_bound":22,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_2":2,"_bound":22}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"_bound":17,"ExpansionArg_array_element_1_type":0} start 292.011 took 11.3687s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"_bound":17,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"_bound":21,"ExpansionArg_array_element_1_array_length":0} start 292.9395 took 10.6654s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"_bound":21,"ExpansionArg_array_element_1_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":2,"_bound":17,"ExpansionArg_array_element_3_int":0} start 293.1319 took 10.6463s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":2,"_bound":17,"ExpansionArg_array_element_3_int":0}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":2,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":23,"ExpansionArg_string":"PureString"} start 292.1916 took 12.2235s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":23,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":23}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"_bound":15,"ExpansionArg_int":0} start 293.2145 took 12.2367s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"_bound":15,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"_bound":20,"ExpansionArg_array_element_2_type":0} start 295.057 took 11.0297s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"_bound":20,"ExpansionArg_array_element_2_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":16,"ExpansionArg_bool":false} start 296.541 took 10.2931s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":16,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":2,"ExpansionArg_type_2":0,"_bound":20,"ExpansionArg_array_element_3_int":0} start 297.2401 took 10.2388s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":2,"ExpansionArg_type_2":0,"_bound":20,"ExpansionArg_array_element_3_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":2,"ExpansionArg_type_2":0,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"_bound":14,"ExpansionArg_string":"PureString"} start 297.4644 took 10.9491s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"_bound":14,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":0,"_bound":18,"ExpansionArg_array_element_2_type":0} start 300.4786 took 10.6944s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":0,"_bound":18,"ExpansionArg_array_element_2_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":0,"_bound":18}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"_bound":13,"ExpansionArg_array_element_3_type":0} start 299.849 took 11.9192s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"_bound":13,"ExpansionArg_array_element_3_type":0}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":15,"ExpansionArg_array_element_0_int":0} start 300.7344 took 11.2364s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":15,"ExpansionArg_array_element_0_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":6,"_bound":18,"ExpansionArg_array_element_0_bool":false} start 302.0454 took 10.8628s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":6,"_bound":18,"ExpansionArg_array_element_0_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":6,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":6,"_bound":16,"ExpansionArg_bool_2":false} start 302.158 took 10.81s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":6,"_bound":16,"ExpansionArg_bool_2":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":6,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":20,"ExpansionArg_array_length_2":0} start 302.396 took 10.9667s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":20,"ExpansionArg_array_length_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_2":5,"ExpansionArg_int":0,"_bound":23,"ExpansionArg_bool":false} start 302.4867 took 11.9058s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_2":5,"ExpansionArg_int":0,"_bound":23,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_2":5,"ExpansionArg_int":0,"_bound":23}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":2,"_bound":17,"ExpansionArg_int":0} start 303.4132 took 11.1057s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":2,"_bound":17,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":2,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":3,"ExpansionArg_array_element_3_int":0,"_bound":18,"ExpansionArg_array_element_3_string":"PureString"} start 303.8116 took 10.8284s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":3,"ExpansionArg_array_element_3_int":0,"_bound":18,"ExpansionArg_array_element_3_string":"PureString"}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":3,"ExpansionArg_array_element_3_int":0,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":0,"_bound":18,"ExpansionArg_array_element_2_type":0} start 303.6346 took 11.2299s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":0,"_bound":18,"ExpansionArg_array_element_2_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":0,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"_bound":19,"ExpansionArg_array_element_2_type":0} start 304.4401 took 11.116s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"_bound":19,"ExpansionArg_array_element_2_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_int":0,"_bound":16,"ExpansionArg_array_length":0} start 305.4895 took 12.6854s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_int":0,"_bound":16,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_int":0,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":21} start 306.1246 took 12.1049s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":21}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":5,"ExpansionArg_array_element_3_int":0,"ExpansionArg_type_2":0,"_bound":21,"ExpansionArg_array_element_3_bool":false} start 307.5113 took 11.389s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":5,"ExpansionArg_array_element_3_int":0,"ExpansionArg_type_2":0,"_bound":21,"ExpansionArg_array_element_3_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":5,"ExpansionArg_array_element_3_int":0,"ExpansionArg_type_2":0,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"_bound":16,"ExpansionArg_array_element_1_type":0} start 306.8924 took 12.4082s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"_bound":16,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":16,"ExpansionArg_array_length":0} start 308.4446 took 11.2453s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":16,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","_bound":15,"ExpansionArg_int_2":0} start 311.2088 took 11.1289s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","_bound":15,"ExpansionArg_int_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":5,"_bound":18,"ExpansionArg_bool":false} start 311.8046 took 11.0482s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":5,"_bound":18,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":5,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_int":0,"_bound":17,"ExpansionArg_array_element_0_bool":false} start 312.0115 took 11.5071s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_int":0,"_bound":17,"ExpansionArg_array_element_0_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_int":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":22,"ExpansionArg_array_element_0_array_length":0} start 313.029 took 10.8525s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":22,"ExpansionArg_array_element_0_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":22}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_bool":false,"_bound":21,"ExpansionArg_array_element_0_string":"PureString"} start 312.9486 took 11.3956s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_bool":false,"_bound":21,"ExpansionArg_array_element_0_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_bool":false,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":24,"ExpansionArg_string":"PureString"} start 314.4317 took 10.3881s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":24,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":24}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool_2":false,"_bound":19,"ExpansionArg_string":"PureString"} start 313.3999 took 11.6608s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool_2":false,"_bound":19,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool_2":false,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_bool":false,"_bound":19} start 314.8967 took 10.8647s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_bool":false,"_bound":19}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_bool":false,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":25,"ExpansionArg_array_length_2":0} start 314.6753 took 11.3057s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":25,"ExpansionArg_array_length_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":25}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool_2":false,"_bound":20,"ExpansionArg_array_length":0} start 314.5579 took 11.4909s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool_2":false,"_bound":20,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool_2":false,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":5,"ExpansionArg_array_element_3_string":"","_bound":19,"ExpansionArg_array_element_3_bool":false} start 315.5936 took 10.6594s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":5,"ExpansionArg_array_element_3_string":"","_bound":19,"ExpansionArg_array_element_3_bool":false}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":5,"ExpansionArg_array_element_3_string":"","_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":16} start 318.2691 took 10.5164s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":16}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":18,"ExpansionArg_bool":false} start 318.2113 took 11.263s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":18,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":3,"ExpansionArg_array_element_3_bool":false,"ExpansionArg_type_2":0,"_bound":22,"ExpansionArg_array_element_3_string":"PureString"} start 318.9203 took 11.0084s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":3,"ExpansionArg_array_element_3_bool":false,"ExpansionArg_type_2":0,"_bound":22,"ExpansionArg_array_element_3_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":3,"ExpansionArg_array_element_3_bool":false,"ExpansionArg_type_2":0,"_bound":22}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":17,"ExpansionArg_bool":false} start 319.7327 took 11.3137s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":17,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":4,"ExpansionArg_array_element_3_bool":false,"ExpansionArg_type_2":0,"_bound":23,"ExpansionArg_array_element_3_array_length":0} start 319.3339 took 12.3358s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":4,"ExpansionArg_array_element_3_bool":false,"ExpansionArg_type_2":0,"_bound":23,"ExpansionArg_array_element_3_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":4,"ExpansionArg_array_element_3_bool":false,"ExpansionArg_type_2":0,"_bound":23}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"_bound":17,"ExpansionArg_string_2":"PureString"} start 322.382 took 10.6601s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"_bound":17,"ExpansionArg_string_2":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":6,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":22,"ExpansionArg_array_length_2":0} start 323.5467 took 11.1682s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":22,"ExpansionArg_array_length_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":22}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":21,"ExpansionArg_string":"PureString"} start 322.8937 took 12.2547s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":21,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool_2":false,"_bound":18,"ExpansionArg_int":0} start 323.9205 took 11.3255s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool_2":false,"_bound":18,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool_2":false,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_bool":false,"_bound":18,"ExpansionArg_array_element_0_string":"PureString"} start 324.8743 took 10.6787s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_bool":false,"_bound":18,"ExpansionArg_array_element_0_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_bool":false,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_bool":false,"_bound":20,"ExpansionArg_array_element_0_int":0} start 325.0967 took 10.978s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_bool":false,"_bound":20,"ExpansionArg_array_element_0_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_bool":false,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":19,"ExpansionArg_array_element_0_array_length":0} start 324.3954 took 11.7365s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":19,"ExpansionArg_array_element_0_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool_2":false,"_bound":17} start 326.0115 took 10.1205s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool_2":false,"_bound":17}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool_2":false,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":18} start 326.1152 took 10.3569s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":18}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":20,"ExpansionArg_int":0} start 325.7981 took 11.6781s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":20,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":19,"ExpansionArg_string":"PureString"} start 326.2825 took 11.3725s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":19,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":4,"ExpansionArg_array_element_3_bool":false,"_bound":20,"ExpansionArg_array_element_3_array_length":0} start 328.8129 took 10.5711s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":4,"ExpansionArg_array_element_3_bool":false,"_bound":20,"ExpansionArg_array_element_3_array_length":0}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":4,"ExpansionArg_array_element_3_bool":false,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":0,"_bound":21,"ExpansionArg_array_element_2_type":0} start 329.5273 took 10.7906s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":0,"_bound":21,"ExpansionArg_array_element_2_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":0,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"_bound":15,"ExpansionArg_array_element_0_array_element_0_type":0} start 329.948 took 11.2166s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"_bound":15,"ExpansionArg_array_element_0_array_element_0_type":0}
* Error: TypeError: "n" argument must be a positive number
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"_bound":22,"ExpansionArg_array_element_1_bool":false} start 331.7076 took 11.1939s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"_bound":22,"ExpansionArg_array_element_1_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"_bound":22}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_type_2":0,"_bound":15,"ExpansionArg_array_element_0_int":0} start 331.0915 took 12.2852s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_type_2":0,"_bound":15,"ExpansionArg_array_element_0_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_type_2":0,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":19} start 333.0753 took 11.1203s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":19}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":16,"ExpansionArg_array_element_0_int":0} start 335.2985 took 10.6368s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":16,"ExpansionArg_array_element_0_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":0,"_bound":19,"ExpansionArg_array_element_2_type":0} start 334.7467 took 11.5207s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":0,"_bound":19,"ExpansionArg_array_element_2_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":0,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":6,"_bound":21,"ExpansionArg_bool":false} start 336.494 took 10.3549s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":6,"_bound":21,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":6,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":16,"ExpansionArg_array_element_0_type":0} start 335.5912 took 11.3349s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":16,"ExpansionArg_array_element_0_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":1,"ExpansionArg_type_2":0,"_bound":20,"ExpansionArg_array_element_1_array_element_0_type":0} start 336.1875 took 10.8807s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":1,"ExpansionArg_type_2":0,"_bound":20,"ExpansionArg_array_element_1_array_element_0_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":1,"ExpansionArg_type_2":0,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":0,"_bound":16,"ExpansionArg_array_element_1_type":0} start 336.125 took 11.2287s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":0,"_bound":16,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":0,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":1,"_bound":15} start 336.2794 took 11.7501s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":1,"_bound":15}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":1,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":1,"_bound":17} start 335.189 took 13.034s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":1,"_bound":17}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":1,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"_bound":13,"ExpansionArg_int":0} start 337.5144 took 11.1727s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"_bound":13,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":6,"ExpansionArg_string":"","_bound":20,"ExpansionArg_bool":false} start 337.7476 took 12.9036s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":6,"ExpansionArg_string":"","_bound":20,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":6,"ExpansionArg_string":"","_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":1,"_bound":14} start 339.4296 took 11.4988s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":1,"_bound":14}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":1,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":17,"ExpansionArg_array_element_0_int":0} start 340.4062 took 11.226s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":17,"ExpansionArg_array_element_0_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"_bound":21,"ExpansionArg_array_element_2_type":0} start 341.1951 took 11.4972s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"_bound":21,"ExpansionArg_array_element_2_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"_bound":23,"ExpansionArg_array_element_1_int":0} start 342.929 took 10.327s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"_bound":23,"ExpansionArg_array_element_1_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"_bound":23}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"_bound":16} start 343.4003 took 11.14s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"_bound":16}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"_bound":25,"ExpansionArg_array_element_1_array_length":0} start 344.2345 took 10.7719s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"_bound":25,"ExpansionArg_array_element_1_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"_bound":25}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":17} start 345.9722 took 10.5912s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":17}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"_bound":24,"ExpansionArg_array_element_1_string":"PureString"} start 346.3055 took 11.343s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"_bound":24,"ExpansionArg_array_element_1_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"_bound":24}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":24,"ExpansionArg_string":"PureString"} start 346.8839 took 11.0339s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":24,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":24}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"_bound":18,"ExpansionArg_array_element_0_string":"PureString"} start 346.9994 took 10.9897s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"_bound":18,"ExpansionArg_array_element_0_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":25,"ExpansionArg_array_length_2":0} start 347.0968 took 11.5774s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":25,"ExpansionArg_array_length_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":25}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":23,"ExpansionArg_int":0} start 347.4033 took 11.3576s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":23,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":23}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"_bound":16,"ExpansionArg_int":0} start 348.0666 took 11.4313s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"_bound":16,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"_bound":17,"ExpansionArg_array_element_0_string":"PureString"} start 348.7275 took 11.3968s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"_bound":17,"ExpansionArg_array_element_0_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":2,"_bound":18,"ExpansionArg_int":0} start 348.2705 took 13.0013s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":2,"_bound":18,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":2,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":21,"ExpansionArg_array_length_2":0} start 350.6863 took 11.1908s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":21,"ExpansionArg_array_length_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_int":0,"_bound":19,"ExpansionArg_array_element_0_bool":false} start 351.6631 took 10.653s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_int":0,"_bound":19,"ExpansionArg_array_element_0_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_int":0,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":15,"ExpansionArg_string":"PureString"} start 352.7323 took 10.6176s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":15,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":17,"ExpansionArg_array_element_0_type":0} start 353.2761 took 10.2561s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":17,"ExpansionArg_array_element_0_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":22} start 350.9595 took 12.9157s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":22}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":22}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":14} start 355.025 took 10.8682s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":14}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":3,"_bound":18,"ExpansionArg_string":"PureString"} start 354.5874 took 11.565s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":3,"_bound":18,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":3,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":18} start 356.6067 took 10.6374s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":18}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":1,"_bound":19} start 357.696 took 10.9362s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":1,"_bound":19}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":1,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":6,"ExpansionArg_array_element_0_string":"","_bound":19,"ExpansionArg_array_element_0_bool":false} start 358.0419 took 11.264s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":6,"ExpansionArg_array_element_0_string":"","_bound":19,"ExpansionArg_array_element_0_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":6,"ExpansionArg_array_element_0_string":"","_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"_bound":15,"ExpansionArg_string":"PureString"} start 357.9552 took 12.1235s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"_bound":15,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_int":0,"_bound":17,"ExpansionArg_array_length":0} start 359.5399 took 10.8778s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_int":0,"_bound":17,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_int":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":0,"ExpandedSwitcher_2":0,"_bound":18,"ExpansionArg_array_element_2_type":0} start 358.7154 took 11.8014s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"_bound":19,"ExpansionArg_array_element_0_type":0} start 358.8323 took 11.771s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"_bound":19,"ExpansionArg_array_element_0_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":6,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":0,"_bound":18,"ExpansionArg_array_element_0_bool":false} start 360.166 took 11.7189s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":6,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":0,"_bound":18,"ExpansionArg_array_element_0_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":6,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":0,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":19,"ExpansionArg_string":"PureString"} start 361.3085 took 10.9995s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":19,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":0,"_bound":17} start 361.9077 took 10.9677s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":0,"_bound":17}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":0,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":21,"ExpansionArg_array_element_0_array_length":0} start 362.3556 took 11.1875s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":21,"ExpansionArg_array_element_0_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":16,"ExpansionArg_array_length":0} start 363.3963 took 11.2158s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":16,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":0,"_bound":18,"ExpansionArg_array_element_1_type":0} start 363.9595 took 11.0037s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":0,"_bound":18,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":0,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_bool":false,"_bound":20,"ExpansionArg_array_element_0_string":"PureString"} start 363.5834 took 11.5085s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_bool":false,"_bound":20,"ExpansionArg_array_element_0_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_bool":false,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":21,"ExpansionArg_bool":false} start 366.1915 took 10.8568s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":21,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":1,"_bound":19} start 365.9249 took 11.8831s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":1,"_bound":19}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":1,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","_bound":20,"ExpansionArg_int":0} start 367.2867 took 11.0054s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","_bound":20,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":5,"_bound":20,"ExpansionArg_bool":false} start 368.6716 took 10.9638s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":5,"_bound":20,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":5,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":20,"ExpansionArg_array_element_0_array_length":0} start 369.3345 took 10.929s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":20,"ExpansionArg_array_element_0_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":17,"ExpansionArg_array_length":0} start 370.1209 took 10.8776s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":17,"ExpansionArg_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"_bound":18,"ExpansionArg_string_2":"PureString"} start 370.5547 took 10.6696s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"_bound":18,"ExpansionArg_string_2":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","_bound":16,"ExpansionArg_int_2":0} start 370.6545 took 10.7189s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","_bound":16,"ExpansionArg_int_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","_bound":16}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":19,"ExpansionArg_bool":false} start 370.446 took 11.0223s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":19,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":1,"ExpansionArg_string":"","_bound":19} start 372.9196 took 10.6948s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":1,"ExpansionArg_string":"","_bound":19}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":1,"ExpansionArg_string":"","_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":20,"ExpansionArg_bool":false} start 372.3529 took 11.4694s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":20,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":0,"_bound":19,"ExpansionArg_array_element_0_array_length":0} start 371.921 took 12.5191s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":0,"_bound":19,"ExpansionArg_array_element_0_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":5,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":0,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":0,"_bound":19,"ExpansionArg_array_element_3_type":0} start 375.1357 took 10.4455s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":0,"_bound":19,"ExpansionArg_array_element_3_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":0,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":17,"ExpansionArg_bool":false} start 374.6436 took 11.269s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":17,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":17}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"_bound":12} start 373.5756 took 12.6198s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"_bound":12}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_type_2":0,"_bound":18,"ExpansionArg_array_element_1_bool":false} start 374.9943 took 11.3804s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_type_2":0,"_bound":18,"ExpansionArg_array_element_1_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_type_2":0,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":22,"ExpansionArg_array_length_2":0} start 377.0781 took 11.3075s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":22,"ExpansionArg_array_length_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":22}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":5,"_bound":20,"ExpansionArg_bool":false} start 377.8425 took 11.0175s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":5,"_bound":20,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":5,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":17,"ExpansionArg_array_element_0_type":0} start 378.3445 took 11.0157s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":17,"ExpansionArg_array_element_0_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":23,"ExpansionArg_array_length_2":0} start 379.6673 took 10.8731s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":23,"ExpansionArg_array_length_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":23}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":22,"ExpansionArg_string":"PureString"} start 380.2773 took 10.851s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":22,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":22}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":18,"ExpansionArg_bool":false} start 381.0304 took 10.7469s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":18,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":21,"ExpansionArg_int":0} start 381.2556 took 10.8928s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":21,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":1,"_bound":18} start 381.4041 took 10.8171s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":1,"_bound":18}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":1,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":15,"ExpansionArg_array_element_0_type":0} start 381.4812 took 10.9828s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":15,"ExpansionArg_array_element_0_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":15}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_type_2":0,"_bound":19,"ExpansionArg_array_element_3_type":0} start 383.657 took 10.8232s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_type_2":0,"_bound":19,"ExpansionArg_array_element_3_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_type_2":0,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":21,"ExpansionArg_array_length_2":0} start 383.8596 took 11.0963s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":21,"ExpansionArg_array_length_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":7,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type_2":0,"_bound":22,"ExpansionArg_array_element_1_type":0} start 384.4708 took 11.3896s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type_2":0,"_bound":22,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type_2":0,"_bound":22}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":2,"_bound":17,"ExpansionArg_int":0} start 385.622 took 10.8026s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":2,"_bound":17,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":2,"_bound":17}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"_bound":19,"ExpansionArg_array_element_1_int":0} start 386.4354 took 10.7951s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"_bound":19,"ExpansionArg_array_element_1_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":1,"_bound":22} start 385.9381 took 11.5594s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":1,"_bound":22}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":1,"_bound":22}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"_bound":13,"ExpansionArg_array_element_2_int":0} start 386.213 took 13.6385s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"_bound":13,"ExpansionArg_array_element_2_int":0}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"_bound":21,"ExpansionArg_array_element_1_array_length":0} start 388.4149 took 11.5453s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"_bound":21,"ExpansionArg_array_element_1_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"_bound":20,"ExpansionArg_array_element_1_string":"PureString"} start 389.4025 took 10.7705s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"_bound":20,"ExpansionArg_array_element_1_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":23,"ExpansionArg_array_length_2":0} start 388.8914 took 11.5533s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":23,"ExpansionArg_array_length_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":23}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":22,"ExpansionArg_string":"PureString"} start 390.6115 took 11.5933s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":22,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":22}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":1,"ExpandedSwitcher_2":0,"_bound":17} start 391.8194 took 10.7782s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":5,"_bound":19,"ExpansionArg_bool":false} start 392.1798 took 10.8111s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":5,"_bound":19,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":5,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":5,"_bound":19,"ExpansionArg_array_element_1_bool":false} start 392.2593 took 11.3614s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":5,"_bound":19,"ExpansionArg_array_element_1_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":5,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":1,"_bound":20} start 392.497 took 11.2862s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":1,"_bound":20}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":1,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":21,"ExpansionArg_int":0} start 391.1707 took 12.7905s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":21,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":1,"_bound":20} start 394.509 took 11.0913s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":1,"_bound":20}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":1,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"_bound":18,"ExpansionArg_array_element_1_type":0} start 395.8973 took 10.8671s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"_bound":18,"ExpansionArg_array_element_1_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","_bound":20,"ExpansionArg_array_element_2_type":0} start 395.0041 took 12.0286s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","_bound":20,"ExpansionArg_array_element_2_type":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":19,"ExpansionArg_string":"PureString"} start 396.4514 took 11.1614s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":19,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":19}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":18} start 397.2516 took 11.0076s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":18}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":18}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":5,"_bound":23,"ExpansionArg_bool":false} start 397.5316 took 10.9415s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":5,"_bound":23,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":5,"_bound":23}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_type_2":2,"_bound":20,"ExpansionArg_int":0} start 400.0036 took 10.7666s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_type_2":2,"_bound":20,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_type_2":2,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type_2":2,"_bound":21,"ExpansionArg_array_element_0_int":0} start 400.2116 took 10.6167s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type_2":2,"_bound":21,"ExpansionArg_array_element_0_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type_2":2,"_bound":21}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_int":0,"_bound":14,"ExpansionArg_array_element_2_bool":false} start 399.8918 took 11.5963s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_int":0,"_bound":14,"ExpansionArg_array_element_2_bool":false}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_int":0,"_bound":14}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"_bound":22,"ExpansionArg_array_element_0_type_2":0} start 400.4895 took 11.3711s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"_bound":22,"ExpansionArg_array_element_0_type_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"_bound":22}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":21,"ExpansionArg_int":0} start 403.029 took 9.8126s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":21,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpandedSwitcher_2":0,"_bound":16,"ExpansionArg_array_element_2_type":0} start 402.2448 took 10.7765s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":2,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":5,"ExpandedSwitcher_2":0,"_bound":18,"ExpansionArg_array_element_1_bool":false} start 402.6276 took 10.8247s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":23,"ExpansionArg_array_length_2":0} start 403.6342 took 10.4462s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":23,"ExpansionArg_array_length_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":23}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":22,"ExpansionArg_string":"PureString"} start 403.9956 took 10.1882s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":22,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":22}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"_bound":22,"ExpansionArg_array_element_1_array_length":0} start 403.8076 took 10.8011s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"_bound":22,"ExpansionArg_array_element_1_array_length":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"_bound":22}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"_bound":21,"ExpansionArg_array_element_1_string":"PureString"} start 405.6316 took 10.2225s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"_bound":21,"ExpansionArg_array_element_1_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":5,"_bound":21,"ExpansionArg_bool":false} start 406.7993 took 9.607s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":5,"_bound":21,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":5,"_bound":21}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"_bound":20,"ExpansionArg_array_element_1_int":0} start 407.0807 took 9.4271s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"_bound":20,"ExpansionArg_array_element_1_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":20,"ExpansionArg_bool":false} start 407.6634 took 10.0301s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":20,"ExpansionArg_bool":false}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":5,"ExpansionArg_string":"","_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":24,"ExpansionArg_int":0} start 408.5154 took 9.5007s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":24,"ExpansionArg_int":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":24}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":20} start 408.2877 took 9.8514s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":20}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":4,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":20}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":26,"ExpansionArg_array_length_2":0} start 410.8076 took 9.4085s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":26,"ExpansionArg_array_length_2":0}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":26}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":25,"ExpansionArg_string":"PureString"} start 410.8723 took 9.7936s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":25,"ExpansionArg_string":"PureString"}
* Error: TypeError: "listener" argument must be a function
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpandedSwitcher":3,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":25}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"_bound":15,"ExpansionArg_array_element_2_string":"PureString"} start 411.5116 took 9.6432s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"_bound":15,"ExpansionArg_array_element_2_string":"PureString"}
* Error: Tropigate failed because SyntaxError: Invalid number (367:30) on program /*
 * common.js: Internal helper and utility functions for winston
 *
 * (C) 2010 Charlie Robbins
 * MIT LICENCE
 *
 */

var util = require('util'),
    crypto = require('crypto'),
    cycle = require('cycle'),
    fs = require('fs'),
    StringDecoder = require('string_decoder').StringDecoder,
    Stream = require('stream').Stream,
    config = require('./config');

//
// ### function setLevels (target, past, current)
// #### @target {Object} Object on which to set levels.
// #### @past {Object} Previous levels set on target.
// #### @current {Object} Current levels to set on target.
// Create functions on the target objects for each level
// in current.levels. If past is defined, remove functions
// for each of those levels.
//
exports.setLevels = function (target, past, current, isDefault) {
  var self = this;
  if (past) {
    Object.keys(past).forEach(function (level) {
      delete target[level];
    });
  }

  target.levels = current || config.npm.levels;
  if (target.padLevels) {
    target.levelLength = exports.longestElement(Object.keys(target.levels));
  }

  //
  //  Define prototype methods for each log level
  //  e.g. target.log('info', msg) <=> target.info(msg)
  //
  Object.keys(target.levels).forEach(function (level) {

    // TODO Refactor logging methods into a different object to avoid name clashes
    if (level === 'log') {
      console.warn('Log level named "log" will clash with the method "log". Consider using a different name.');
      return;
    }

    target[level] = function (msg) {
      // build argument list (level, msg, ... [string interpolate], [{metadata}], [callback])
      var args = [level].concat(Array.prototype.slice.call(arguments));
      target.log.apply(target, args);
    };
  });

  return target;
};

//
// ### function longestElement
// #### @xs {Array} Array to calculate against
// Returns the longest element in the `xs` array.
//
exports.longestElement = function (xs) {
  return Math.max.apply(
    null,
    xs.map(function (x) { return x.length; })
  );
};

//
// ### function clone (obj)
// #### @obj {Object} Object to clone.
// Helper method for deep cloning pure JSON objects
// i.e. JSON objects that are either literals or objects (no Arrays, etc)
//
exports.clone = function (obj) {
  //
  // We only need to clone reference types (Object)
  //
  if (obj instanceof Error) {
    return obj;
  }
  else if (!(obj instanceof Object)) {
    return obj;
  }
  else if (obj instanceof Date) {
    return obj;
  }

  var copy = {};
  for (var i in obj) {
    if (Array.isArray(obj[i])) {
      copy[i] = obj[i].slice(0);
    }
    else if (obj[i] instanceof Buffer) {
        copy[i] = obj[i].slice(0);
    }
    else if (typeof obj[i] != 'function') {
      copy[i] = obj[i] instanceof Object ? exports.clone(obj[i]) : obj[i];
    }
    else if (typeof obj[i] === 'function') {
      copy[i] = obj[i];
    }
  }

  return copy;
};

//
// ### function log (options)
// #### @options {Object} All information about the log serialization.
// Generic logging function for returning timestamped strings
// with the following options:
//
//    {
//      level:     'level to add to serialized message',
//      message:   'message to serialize',
//      meta:      'additional logging metadata to serialize',
//      colorize:  false, // Colorizes output (only if `.json` is false)
//      timestamp: true   // Adds a timestamp to the serialized message
//      label:     'label to prepend the message'
//    }
//
exports.log = function (options) {
  var timestampFn = typeof options.timestamp === 'function'
        ? options.timestamp
        : exports.timestamp,
      timestamp   = options.timestamp ? timestampFn() : null,
      showLevel   = options.showLevel === undefined ? true : options.showLevel,
      meta        = options.meta !== null && options.meta !== undefined && !(options.meta instanceof Error)
        ? exports.clone(cycle.decycle(options.meta))
        : options.meta || null,
      output;

  //
  // raw mode is intended for outputing winston as streaming JSON to STDOUT
  //
  if (options.raw) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }
    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = options.message.stripColors;
    return JSON.stringify(output);
  }

  //
  // json mode is intended for pretty printing multi-line json to the terminal
  //
  if (options.json || true === options.logstash) {
    if (typeof meta !== 'object' && meta != null) {
      meta = { meta: meta };
    }

    output         = exports.clone(meta) || {};
    output.level   = options.level;
    output.message = output.message || '';

    if (options.label) { output.label = options.label; }
    if (options.message) { output.message = options.message; }
    if (timestamp) { output.timestamp = timestamp; }

    if (options.logstash === true) {
      // use logstash format
      var logstashOutput = {};
      if (output.message !== undefined) {
        logstashOutput['@message'] = output.message;
        delete output.message;
      }

      if (output.timestamp !== undefined) {
        logstashOutput['@timestamp'] = output.timestamp;
        delete output.timestamp;
      }

      logstashOutput['@fields'] = exports.clone(output);
      output = logstashOutput;
    }

    if (typeof options.stringify === 'function') {
      return options.stringify(output);
    }

    return JSON.stringify(output, function (key, value) {
      return value instanceof Buffer
        ? value.toString('base64')
        : value;
    });
  }

  //
  // Remark: this should really be a call to `util.format`.
  //
  if (typeof options.formatter == 'function') {
    return String(options.formatter(exports.clone(options)));
  }

  output = timestamp ? timestamp + ' - ' : '';
  if (showLevel) {
    output += options.colorize === 'all' || options.colorize === 'level' || options.colorize === true
      ? config.colorize(options.level)
      : options.level;
  }

  output += (timestamp || showLevel) ? ': ' : '';
  output += options.label ? ('[' + options.label + '] ') : '';
  output += options.colorize === 'all' || options.colorize === 'message'
    ? config.colorize(options.level, options.message)
    : options.message;

  if (meta !== null && meta !== undefined) {
    if (meta && meta instanceof Error && meta.stack) {
      meta = meta.stack;
    }

    if (typeof meta !== 'object') {
      output += ' ' + meta;
    }
    else if (Object.keys(meta).length > 0) {
      if (typeof options.prettyPrint === 'function') {
        output += ' ' + options.prettyPrint(meta);
      } else if (options.prettyPrint) {
        output += ' ' + '\n' + util.inspect(meta, false, options.depth || null, options.colorize);
      } else if (
        options.humanReadableUnhandledException
          && Object.keys(meta).length === 5
          && meta.hasOwnProperty('date')
          && meta.hasOwnProperty('process')
          && meta.hasOwnProperty('os')
          && meta.hasOwnProperty('trace')
          && meta.hasOwnProperty('stack')) {

        //
        // If meta carries unhandled exception data serialize the stack nicely
        //
        var stack = meta.stack;
        delete meta.stack;
        delete meta.trace;
        output += ' ' + exports.serialize(meta);
        output += '\n' + stack.join('\n');
      } else {
        output += ' ' + exports.serialize(meta);
      }
    }
  }

  return output;
};

exports.capitalize = function (str) {
  return str && str[0].toUpperCase() + str.slice(1);
};

//
// ### function hash (str)
// #### @str {string} String to hash.
// Utility function for creating unique ids
// e.g. Profiling incoming HTTP requests on the same tick
//
exports.hash = function (str) {
  return crypto.createHash('sha1').update(str).digest('hex');
};

//
// ### function pad (n)
// Returns a padded string if `n < 10`.
//
exports.pad = function (n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
};

//
// ### function timestamp ()
// Returns a timestamp string for the current time.
//
exports.timestamp = function () {
  return new Date().toISOString();
};

//
// ### function serialize (obj, key)
// #### @obj {Object|literal} Object to serialize
// #### @key {string} **Optional** Optional key represented by obj in a larger object
// Performs simple comma-separated, `key=value` serialization for Loggly when
// logging to non-JSON inputs.
//
exports.serialize = function (obj, key) {
  if (obj === null) {
    obj = 'null';
  }
  else if (obj === undefined) {
    obj = 'undefined';
  }
  else if (obj === false) {
    obj = 'false';
  }

  if (typeof obj !== 'object') {
    return key ? key + '=' + obj : obj;
  }

  if (obj instanceof Buffer) {
    return key ? key + '=' + obj.toString('base64') : obj.toString('base64');
  }

  var msg = '',
      keys = Object.keys(obj),
      length = keys.length;

  for (var i = 0; i < length; i++) {
    if (Array.isArray(obj[keys[i]])) {
      msg += keys[i] + '=[';

      for (var j = 0, l = obj[keys[i]].length; j < l; j++) {
        msg += exports.serialize(obj[keys[i]][j]);
        if (j < l - 1) {
          msg += ', ';
        }
      }

      msg += ']';
    }
    else if (obj[keys[i]] instanceof Date) {
      msg += keys[i] + '=' + obj[keys[i]];
    }
    else {
      msg += exports.serialize(obj[keys[i]], keys[i]);
    }

    if (i < length - 1) {
      msg += ', ';
    }
  }

  return msg;
};

//
// ### function tailFile (options, callback)
// #### @options {Object} Options for tail.
// #### @callback {function} Callback to execute on every line.
// `tail -f` a file. Options must include file.
//
exports.tailFile = function(options, callback) {
  var buffer = new Buffer(64 * 1024)
    , decode = new StringDecoder('utf8')
    , stream = new Stream
    , buff = ''
    , pos = 0
    , row = 0;

  if (options.start === -1) {
    delete options.start;
  }

  stream.readable = true;
  stream.destroy = function() {
    stream.destroyed = true;
    stream.emit('end');
    stream.emit('close');
  };

  fs.open(options.file, 'a+', 0644, function(err, fd) {
    if (err) {
      if (!callback) {
        stream.emit('error', err);
      } else {
        callback(err);
      }
      stream.destroy();
      return;
    }

    (function read() {
      if (stream.destroyed) {
        fs.close(fd);
        return;
      }

      return fs.read(fd, buffer, 0, buffer.length, pos, function(err, bytes) {
        if (err) {
          if (!callback) {
            stream.emit('error', err);
          } else {
            callback(err);
          }
          stream.destroy();
          return;
        }

        if (!bytes) {
          if (buff) {
            if (options.start == null || row > options.start) {
              if (!callback) {
                stream.emit('line', buff);
              } else {
                callback(null, buff);
              }
            }
            row++;
            buff = '';
          }
          return setTimeout(read, 1000);
        }

        var data = decode.write(buffer.slice(0, bytes));

        if (!callback) {
          stream.emit('data', data);
        }

        var data = (buff + data).split(/\n+/)
          , l = data.length - 1
          , i = 0;

        for (; i < l; i++) {
          if (options.start == null || row > options.start) {
            if (!callback) {
              stream.emit('line', data[i]);
            } else {
              callback(null, data[i]);
            }
          }
          row++;
        }

        buff = data[l];

        pos += bytes;

        return read();
      });
    })();
  });

  if (!callback) {
    return stream;
  }

  return stream.destroy;
};
 at SyntaxError: Invalid number (367:30)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
