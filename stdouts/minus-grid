/root/Targets/minus-grid
└─┬ minus-grid@1.2.0 
  ├── classnames@2.2.5 
  ├─┬ react@15.6.1 
  │ ├── create-react-class@15.6.0 
  │ ├─┬ fbjs@0.8.15 
  │ │ ├── core-js@1.2.7 
  │ │ ├─┬ isomorphic-fetch@2.2.1 
  │ │ │ ├─┬ node-fetch@1.7.3 
  │ │ │ │ ├─┬ encoding@0.1.12 
  │ │ │ │ │ └── iconv-lite@0.4.19 
  │ │ │ │ └── is-stream@1.1.0 
  │ │ │ └── whatwg-fetch@2.0.3 
  │ │ ├─┬ promise@7.3.1 
  │ │ │ └── asap@2.0.6 
  │ │ ├── setimmediate@1.0.5 
  │ │ └── ua-parser-js@0.7.14 
  │ ├─┬ loose-envify@1.3.1 
  │ │ └── js-tokens@3.0.2 
  │ ├── object-assign@4.1.1 
  │ └── prop-types@15.5.10 
  └── react-dom@15.6.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/minus-grid/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0659 took 4.0342s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (8:0) on program /********************************************
*  Defaults                                    *
********************************************/
/**
 * defaults are set inside the selector to prevent post-css
 * from trying to resolve these variables.
 */
.grid {
  --column-count: 4;
  --column-margin: 12;
  --column-padding: 16;
}

/********************************************
*  LOGIC                                    *
********************************************/
/**
 * `.grid` and `.row follow the same flexbox logic
 */
.grid,
.row {
  /**
   * Box model for columns
   * (1): create flexbox
   * (2): ensure direction row
   * (3): allow wrapping
   * (4): ensure full width
   */
  /* (1) */
  display: flex !important;
  /* (2) */
  flex-direction: row !important;
  /* (3) */
  flex-wrap: wrap !important;
  /* (2, 3) */
  flex-flow: row wrap !important;
  /* (4) */
  flex: 0 0 100% !important;
}

/**
 * A row resets margin and padding.
 * It sets the columns to the current colspan
 */
.row {
  --column-count: var(--colspan-HWGnxIEflR);
  /**
   * Box model for columns
   * (1): ensure horizontal padding to be 0
   * (2): reset margins and paddings
   */
  /* (1) */
  padding-left: 0 !important;
  padding-right: 0 !important;
  /* (2) */
  margin-left: calc((var(--column-padding) + var(--column-margin)) * -1px) !important;
  margin-right: calc((var(--column-padding) + var(--column-margin)) * -1px) !important;
}

/**
 * A `.column` provides margin and padding.
 * It allows changing the size via inline styles
 * @example
 * style="--m: 4; --l: 6"
 */
.column {
  /**
   * colspan:
   * @default --viewport-small
   */
  --colspan-HWGnxIEflR: var(--viewport-small);
  /**
   * each property defaults to the previous value
   * The first property defaults to 1
   */
  --viewport-small: 1;
  --viewport-medium: var(--viewport-small);
  --viewport-large: var(--viewport-medium);
  /**
   * Box model for columns
   * (1): ensure border-box
   * (2): set paddings
   * (3): set margins
   * (4): width based on properties
   */
  /* (1) */
  box-sizing: border-box !important;
  /* (2) */
  padding-left: calc(var(--column-padding) * 1px) !important;
  padding-right: calc(var(--column-padding) * 1px) !important;
  /* (3) */
  margin-right: calc(var(--column-margin) * 1px) !important;
  margin-left: calc(var(--column-margin) * 1px) !important;
  /* (4) */
  width: calc(100% / var(--column-count) * var(--colspan-HWGnxIEflR) - var(--column-margin) * 2px) !important;
}

/********************************************
*  RESPONSIVE                               *
********************************************/
/**
   * breakpoint for --viewport-small
   * (1) set column count on grid to --column-count
   * (2) set colspan to --viewport-small
   */
@media (min-width: 320px) {
  .grid {
    /* (1) */
    --column-count: 4;
  }
  .column {
    /* (2) */
    --colspan-HWGnxIEflR: var(--viewport-small);
  }
}

/**
   * breakpoint for --viewport-medium
   * (1) set column count on grid to --column-count
   * (2) set colspan to --viewport-medium
   */
@media (min-width: 480px) {
  .grid {
    /* (1) */
    --column-count: 8;
  }
  .column {
    /* (2) */
    --colspan-HWGnxIEflR: var(--viewport-medium);
  }
}

/**
   * breakpoint for --viewport-large
   * (1) set column count on grid to --column-count
   * (2) set colspan to --viewport-large
   */
@media (min-width: 800px) {
  .grid {
    /* (1) */
    --column-count: 12;
  }
  .column {
    /* (2) */
    --colspan-HWGnxIEflR: var(--viewport-large);
  }
}
 at SyntaxError: Unexpected token (8:0)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1822:12)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1597:21)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
