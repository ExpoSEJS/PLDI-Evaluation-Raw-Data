/root/Targets/loopbacknext
└─┬ loopbacknext@2.29.2 
  ├── async@0.9.2 
  ├── bcryptjs@2.4.3 
  ├─┬ body-parser@1.18.2 
  │ ├── bytes@3.0.0 
  │ ├── content-type@1.0.4 
  │ ├─┬ http-errors@1.6.2 
  │ │ ├── inherits@2.0.3 
  │ │ └── setprototypeof@1.0.3 
  │ ├── iconv-lite@0.4.19 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── qs@6.5.1 
  │ ├─┬ raw-body@2.3.2 
  │ │ └── unpipe@1.0.0 
  │ └─┬ type-is@1.6.15 
  │   ├── media-typer@0.3.0 
  │   └─┬ mime-types@2.1.17 
  │     └── mime-db@1.30.0 
  ├── canonical-json@0.0.4 
  ├─┬ continuation-local-storage@3.2.0 
  │ ├─┬ async-listener@0.6.8 
  │ │ └── shimmer@1.1.0 
  │ └─┬ emitter-listener@1.0.1 
  │   └── shimmer@1.0.0 
  ├─┬ cookie-parser@1.4.3 
  │ ├── cookie@0.3.1 
  │ └── cookie-signature@1.0.6 
  ├─┬ debug@2.6.9 
  │ └── ms@2.0.0 
  ├── depd@1.1.1 
  ├── ejs@2.5.7 
  ├─┬ errorhandler@1.5.0 
  │ ├─┬ accepts@1.3.4 
  │ │ └── negotiator@0.6.1 
  │ └── escape-html@1.0.3 
  ├─┬ express@4.16.1 
  │ ├── array-flatten@1.1.1 
  │ ├── content-disposition@0.5.2 
  │ ├── encodeurl@1.0.1 
  │ ├── etag@1.8.1 
  │ ├── finalhandler@1.1.0 
  │ ├── fresh@0.5.2 
  │ ├── merge-descriptors@1.0.1 
  │ ├── methods@1.1.2 
  │ ├── parseurl@1.3.2 
  │ ├── path-to-regexp@0.1.7 
  │ ├─┬ proxy-addr@2.0.2 
  │ │ ├── forwarded@0.1.2 
  │ │ └── ipaddr.js@1.5.2 
  │ ├── range-parser@1.2.0 
  │ ├── safe-buffer@5.1.1 
  │ ├─┬ send@0.16.1 
  │ │ ├── destroy@1.0.4 
  │ │ └── mime@1.4.1 
  │ ├── serve-static@1.13.1 
  │ ├── setprototypeof@1.1.0 
  │ ├── statuses@1.3.1 
  │ ├── utils-merge@1.0.1 
  │ └── vary@1.1.2 
  ├── inflection@1.12.0 
  ├─┬ loopback-bootnext@2.19.2 
  │ ├─┬ async@2.5.0 
  │ │ └── lodash@4.17.4 
  │ ├── commondir@1.0.1 
  │ ├── lodash@3.10.1 
  │ ├── semver@5.4.1 
  │ └── toposort@1.0.4 
  ├─┬ loopback-connector-remotenext@1.3.2 
  │ └─┬ loopback-datasource-jugglernext@2.46.2 
  │   ├── async@1.5.2 
  │   ├─┬ eslint@2.13.1 
  │   │ ├─┬ chalk@1.1.3 
  │   │ │ ├── ansi-styles@2.2.1 
  │   │ │ ├── escape-string-regexp@1.0.5 
  │   │ │ ├── has-ansi@2.0.0 
  │   │ │ ├── strip-ansi@3.0.1 
  │   │ │ └── supports-color@2.0.0 
  │   │ ├─┬ concat-stream@1.6.0 
  │   │ │ └── typedarray@0.0.6 
  │   │ ├─┬ doctrine@1.5.0 
  │   │ │ └── isarray@1.0.0 
  │   │ ├─┬ es6-map@0.1.5 
  │   │ │ ├── d@1.0.0 
  │   │ │ ├── es5-ext@0.10.30 
  │   │ │ ├── es6-iterator@2.0.1 
  │   │ │ ├── es6-set@0.1.5 
  │   │ │ ├── es6-symbol@3.1.1 
  │   │ │ └── event-emitter@0.3.5 
  │   │ ├─┬ escope@3.6.0 
  │   │ │ ├── es6-weak-map@2.0.2 
  │   │ │ └── esrecurse@4.2.0 
  │   │ ├─┬ espree@3.5.1 
  │   │ │ ├── acorn@5.1.2 
  │   │ │ └─┬ acorn-jsx@3.0.1 
  │   │ │   └── acorn@3.3.0 
  │   │ ├── esutils@2.0.2 
  │   │ ├─┬ file-entry-cache@1.3.1 
  │   │ │ └─┬ flat-cache@1.3.0 
  │   │ │   ├── circular-json@0.3.3 
  │   │ │   ├─┬ del@2.2.2 
  │   │ │   │ ├─┬ globby@5.0.0 
  │   │ │   │ │ ├─┬ array-union@1.0.2 
  │   │ │   │ │ │ └── array-uniq@1.0.3 
  │   │ │   │ │ └── arrify@1.0.1 
  │   │ │   │ ├── is-path-cwd@1.0.0 
  │   │ │   │ ├─┬ is-path-in-cwd@1.0.0 
  │   │ │   │ │ └── is-path-inside@1.0.0 
  │   │ │   │ ├── pify@2.3.0 
  │   │ │   │ ├─┬ pinkie-promise@2.0.1 
  │   │ │   │ │ └── pinkie@2.0.4 
  │   │ │   │ └── rimraf@2.6.2 
  │   │ │   ├── graceful-fs@4.1.11 
  │   │ │   └── write@0.2.1 
  │   │ ├─┬ glob@7.1.2 
  │   │ │ ├── fs.realpath@1.0.0 
  │   │ │ ├─┬ inflight@1.0.6 
  │   │ │ │ └── wrappy@1.0.2 
  │   │ │ ├─┬ minimatch@3.0.4 
  │   │ │ │ └─┬ brace-expansion@1.1.8 
  │   │ │ │   ├── balanced-match@1.0.0 
  │   │ │ │   └── concat-map@0.0.1 
  │   │ │ └── once@1.4.0 
  │   │ ├── globals@9.18.0 
  │   │ ├── ignore@3.3.5 
  │   │ ├── imurmurhash@0.1.4 
  │   │ ├─┬ inquirer@0.12.0 
  │   │ │ ├── ansi-escapes@1.4.0 
  │   │ │ ├── ansi-regex@2.1.1 
  │   │ │ ├─┬ cli-cursor@1.0.2 
  │   │ │ │ └─┬ restore-cursor@1.0.1 
  │   │ │ │   ├── exit-hook@1.1.1 
  │   │ │ │   └── onetime@1.1.0 
  │   │ │ ├── cli-width@2.2.0 
  │   │ │ ├── figures@1.7.0 
  │   │ │ ├── lodash@4.17.4 
  │   │ │ ├─┬ readline2@1.0.1 
  │   │ │ │ ├── code-point-at@1.1.0 
  │   │ │ │ ├─┬ is-fullwidth-code-point@1.0.0 
  │   │ │ │ │ └── number-is-nan@1.0.1 
  │   │ │ │ └── mute-stream@0.0.5 
  │   │ │ ├── run-async@0.1.0 
  │   │ │ ├── rx-lite@3.1.2 
  │   │ │ └── string-width@1.0.2 
  │   │ ├─┬ is-my-json-valid@2.16.1 
  │   │ │ ├── generate-function@2.0.0 
  │   │ │ ├─┬ generate-object-property@1.2.0 
  │   │ │ │ └── is-property@1.0.2 
  │   │ │ └── jsonpointer@4.0.1 
  │   │ ├─┬ is-resolvable@1.0.0 
  │   │ │ └── tryit@1.0.3 
  │   │ ├─┬ js-yaml@3.10.0 
  │   │ │ └── esprima@4.0.0 
  │   │ ├─┬ json-stable-stringify@1.0.1 
  │   │ │ └── jsonify@0.0.0 
  │   │ ├─┬ levn@0.3.0 
  │   │ │ ├── prelude-ls@1.1.2 
  │   │ │ └── type-check@0.3.2 
  │   │ ├── lodash@4.17.4 
  │   │ ├─┬ optionator@0.8.2 
  │   │ │ ├── deep-is@0.1.3 
  │   │ │ ├── fast-levenshtein@2.0.6 
  │   │ │ └── wordwrap@1.0.0 
  │   │ ├── path-is-absolute@1.0.1 
  │   │ ├── path-is-inside@1.0.2 
  │   │ ├── pluralize@1.2.1 
  │   │ ├── progress@1.1.8 
  │   │ ├─┬ require-uncached@1.0.3 
  │   │ │ ├─┬ caller-path@0.1.0 
  │   │ │ │ └── callsites@0.2.0 
  │   │ │ └── resolve-from@1.0.1 
  │   │ ├── shelljs@0.6.1 
  │   │ ├── strip-json-comments@1.0.4 
  │   │ ├─┬ table@3.8.3 
  │   │ │ ├── ajv@4.11.8 
  │   │ │ ├── ajv-keywords@1.5.1 
  │   │ │ ├── lodash@4.17.4 
  │   │ │ ├── slice-ansi@0.0.4 
  │   │ │ └─┬ string-width@2.1.1 
  │   │ │   ├── is-fullwidth-code-point@2.0.0 
  │   │ │   └─┬ strip-ansi@4.0.0 
  │   │ │     └── ansi-regex@3.0.0 
  │   │ ├── text-table@0.2.0 
  │   │ └─┬ user-home@2.0.0 
  │   │   └── os-homedir@1.0.2 
  │   ├─┬ loopback-connectornext@2.4.0 
  │   │ └── async@1.5.2 
  │   ├── node-uuid@1.4.8 
  │   └── qs@3.1.0 
  ├─┬ loopback-phase@1.4.1 
  │ └─┬ strong-globalize@2.8.5 
  │   ├── async@1.5.2 
  │   ├── esprima@3.1.3 
  │   ├── estraverse@4.2.0 
  │   ├─┬ g11n-pipeline@1.5.1 
  │   │ └─┬ swagger-client@2.1.32 
  │   │   ├── btoa@1.1.2 
  │   │   ├── cookiejar@2.1.1 
  │   │   ├── lodash-compat@3.10.2 
  │   │   ├── q@1.5.0 
  │   │   └─┬ superagent@2.3.0 
  │   │     ├── component-emitter@1.2.1 
  │   │     ├─┬ form-data@1.0.0-rc4 
  │   │     │ └── async@1.5.2 
  │   │     └── formidable@1.1.1 
  │   ├─┬ htmlparser2@3.9.2 
  │   │ ├── domelementtype@1.3.0 
  │   │ ├── domhandler@2.4.1 
  │   │ ├─┬ domutils@1.6.2 
  │   │ │ └─┬ dom-serializer@0.1.0 
  │   │ │   └── domelementtype@1.1.3 
  │   │ ├── entities@1.1.1 
  │   │ └─┬ readable-stream@2.3.3 
  │   │   ├── core-util-is@1.0.2 
  │   │   ├── process-nextick-args@1.0.7 
  │   │   └── string_decoder@1.0.3 
  │   ├── lodash@4.17.4 
  │   ├─┬ md5@2.2.1 
  │   │ ├── charenc@0.0.2 
  │   │ ├── crypt@0.0.2 
  │   │ └── is-buffer@1.1.5 
  │   ├─┬ mkdirp@0.5.1 
  │   │ └── minimist@0.0.8 
  │   ├─┬ mktmpdir@0.1.1 
  │   │ └── rimraf@2.2.8 
  │   ├── optional@0.1.4 
  │   ├─┬ os-locale@1.4.0 
  │   │ └─┬ lcid@1.0.0 
  │   │   └── invert-kv@1.0.0 
  │   ├── posix-getopt@1.2.0 
  │   ├── word-count@0.2.2 
  │   ├── xtend@4.0.1 
  │   └─┬ yamljs@0.2.10 
  │     └── argparse@1.0.9 
  ├─┬ nodemailer@1.11.0 
  │ ├─┬ libmime@1.2.0 
  │ │ ├── libbase64@0.1.0 
  │ │ └── libqp@1.1.0 
  │ ├─┬ mailcomposer@2.1.0 
  │ │ └─┬ buildmail@2.0.0 
  │ │   ├── addressparser@0.3.2 
  │ │   └── needle@0.10.0 
  │ ├── needle@0.11.0 
  │ ├─┬ nodemailer-direct-transport@1.1.0 
  │ │ └── smtp-connection@1.3.8 
  │ └─┬ nodemailer-smtp-transport@1.1.0 
  │   ├── clone@1.0.2 
  │   └── nodemailer-wellknown@0.1.10 
  ├── nodemailer-stub-transport@0.1.5 
  ├── serve-favicon@2.4.5 
  ├── stable@0.1.6 
  ├─┬ strong-remotingnext@2.28.1 
  │ ├─┬ async@2.5.0 
  │ │ └── lodash@4.17.4 
  │ ├─┬ cors@2.8.4 
  │ │ └── object-assign@4.1.1 
  │ ├── eventemitter2@2.2.2 
  │ ├─┬ jayson@1.2.2 
  │ │ ├─┬ commander@1.3.2 
  │ │ │ └── keypress@0.1.0 
  │ │ ├── eyes@0.1.8 
  │ │ ├─┬ JSONStream@1.0.3 
  │ │ │ └── jsonparse@1.0.0 
  │ │ └── lodash@3.6.0 
  │ ├── js2xmlparser@1.0.0 
  │ ├─┬ mux-demux@3.7.9 
  │ │ ├── duplex@1.0.0 
  │ │ ├── json-buffer@2.0.11 
  │ │ ├─┬ msgpack-stream@0.0.12 
  │ │ │ ├─┬ bops@0.0.6 
  │ │ │ │ ├── base64-js@0.0.2 
  │ │ │ │ └── to-utf8@0.0.1 
  │ │ │ ├── msgpack-js@0.3.0 
  │ │ │ └── through@2.3.4 
  │ │ ├─┬ stream-combiner@0.0.2 
  │ │ │ └── duplexer@0.0.4 
  │ │ ├── stream-serializer@1.1.2 
  │ │ ├── through@2.3.8 
  │ │ └── xtend@1.0.3 
  │ ├─┬ request@2.83.0 
  │ │ ├── aws-sign2@0.7.0 
  │ │ ├── aws4@1.6.0 
  │ │ ├── caseless@0.12.0 
  │ │ ├─┬ combined-stream@1.0.5 
  │ │ │ └── delayed-stream@1.0.0 
  │ │ ├── extend@3.0.1 
  │ │ ├── forever-agent@0.6.1 
  │ │ ├─┬ form-data@2.3.1 
  │ │ │ └── asynckit@0.4.0 
  │ │ ├─┬ har-validator@5.0.3 
  │ │ │ ├─┬ ajv@5.2.3 
  │ │ │ │ ├── co@4.6.0 
  │ │ │ │ ├── fast-deep-equal@1.0.0 
  │ │ │ │ └── json-schema-traverse@0.3.1 
  │ │ │ └── har-schema@2.0.0 
  │ │ ├─┬ hawk@6.0.2 
  │ │ │ ├── boom@4.3.1 
  │ │ │ ├─┬ cryptiles@3.1.2 
  │ │ │ │ └── boom@5.2.0 
  │ │ │ ├── hoek@4.2.0 
  │ │ │ └── sntp@2.0.2 
  │ │ ├─┬ http-signature@1.2.0 
  │ │ │ ├── assert-plus@1.0.0 
  │ │ │ ├─┬ jsprim@1.4.1 
  │ │ │ │ ├── extsprintf@1.3.0 
  │ │ │ │ ├── json-schema@0.2.3 
  │ │ │ │ └── verror@1.10.0 
  │ │ │ └─┬ sshpk@1.13.1 
  │ │ │   ├── asn1@0.2.3 
  │ │ │   ├── bcrypt-pbkdf@1.0.1 
  │ │ │   ├── dashdash@1.14.1 
  │ │ │   ├── ecc-jsbn@0.1.1 
  │ │ │   ├── getpass@0.1.7 
  │ │ │   ├── jsbn@0.1.1 
  │ │ │   └── tweetnacl@0.14.5 
  │ │ ├── is-typedarray@1.0.0 
  │ │ ├── isstream@0.1.2 
  │ │ ├── json-stringify-safe@5.0.1 
  │ │ ├── oauth-sign@0.8.2 
  │ │ ├── performance-now@2.1.0 
  │ │ ├── stringstream@0.0.5 
  │ │ ├─┬ tough-cookie@2.3.3 
  │ │ │ └── punycode@1.4.1 
  │ │ ├── tunnel-agent@0.6.0 
  │ │ └── uuid@3.1.0 
  │ ├─┬ sse@0.0.6 
  │ │ └── options@0.0.6 
  │ ├── traverse@0.6.6 
  │ └─┬ xml2js@0.4.19 
  │   ├── sax@1.2.4 
  │   └── xmlbuilder@9.0.4 
  ├── uid2@0.0.3 
  └─┬ underscore.string@3.3.4 
    ├── sprintf-js@1.0.3 
    └── util-deprecate@1.0.2 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/loopbacknext/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0562 took 2.4496s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (17:4) on program // Copyright IBM Corp. 2013,2016. All Rights Reserved.
// Node module: loopback
// This file is licensed under the MIT License.
// License text available at https://opensource.org/licenses/MIT

/*!
 * Module dependencies.
 */

var express = require('express');
var loopbackExpress = require('./server-app');
var proto = require('./application');
var fs = require('fs');
var ejs = require('ejs');
var path = require('path');
var merge = require('util')._extend;
var assert = require('assert');
var Registry = require('./registry');
var juggler = require('loopback-datasource-jugglernext');

/**
 * LoopBack core module. It provides static properties and
 * methods to create models and data sources. The module itself is a function
 * that creates loopback `app`. For example:
 *
 * ```js
 * var loopback = require('loopbacknext');
 * var app = loopback();
 * ```
 *
 * @property {String} version Version of LoopBack framework.  Static read-only property.
 * @property {String} mime
 * @property {Boolean} isBrowser True if running in a browser environment; false otherwise.  Static read-only property.
 * @property {Boolean} isServer True if running in a server environment; false otherwise.  Static read-only property.
 * @property {Registry} registry The global `Registry` object.
 * @property {String} faviconFile Path to a default favicon shipped with LoopBack.
 * Use as follows: `app.use(require('serve-favicon')(loopback.faviconFile));`
 * @class loopback
 * @header loopback
 */

var loopback = module.exports = createApplication;

/*!
 * Framework version.
 */

loopback.version = require('../package.json').version;

/*!
 * Expose mime.
 */

loopback.mime = express.mime;

loopback.registry = new Registry();

Object.defineProperties(loopback, {
  Model: {
    get: function() { return this.registry.getModel('Model'); }
  },
  PersistedModel: {
    get: function() { return this.registry.getModel('PersistedModel'); }
  },
  defaultDataSources: {
    get: function() { return this.registry.defaultDataSources; }
  },
  modelBuilder: {
    get: function() { return this.registry.modelBuilder; }
  }
});

/*!
 * Create an loopback application.
 *
 * @return {Function}
 * @api public
 */

function createApplication(options) {
  var app = loopbackExpress();

  merge(app, proto);

  app.loopback = loopback;

  // Create a new instance of models registry per each app instance
  app.models = function() {
    return proto.models.apply(this, arguments);
  };

  // Create a new instance of datasources registry per each app instance
  app.datasources = app.dataSources = {};

  // Create a new instance of connector registry per each app instance
  app.connectors = {};

  // Register built-in connectors. It's important to keep this code
  // hand-written, so that all require() calls are static
  // and thus browserify can process them (include connectors in the bundle)
  app.connector('memory', loopback.Memory);
  app.connector('remote', loopback.Remote);

  if (loopback.localRegistry || options && options.localRegistry === true) {
    // setup the app registry
    var registry = app.registry = new Registry();
    if (options && options.loadBuiltinModels === true) {
      require('./builtin-models')(registry);
    }
  } else {
    app.registry = loopback.registry;
  }

  return app;
}

function mixin(source) {
  for (var key in source) {
    var desc = Object.getOwnPropertyDescriptor(source, key);

    // Fix for legacy (pre-ES5) browsers like PhantomJS
    if (!desc) continue;

    Object.defineProperty(loopback, key, desc);
  }
}

mixin(require('./runtime'));

/*!
 * Expose static express methods like `express.errorHandler`.
 */

mixin(express);

/*!
 * Expose additional middleware like session as loopback.*
 * This will keep the loopback API compatible with express 3.x
 *
 * ***only in node***
 */

if (loopback.isServer) {
  var middlewares = require('./express-middleware');
  mixin(middlewares);
}

/*!
 * Expose additional loopback middleware
 * for example `loopback.configure` etc.
 *
 * ***only in node***
 */

if (loopback.isServer) {
  fs
    .readdirSync(path.join(__dirname, '..', 'server', 'middleware'))
    .filter(function(file) {
      return file.match(/\.js$/);
    })
    .forEach(function(m) {
      loopback[m.replace(/\.js$/, '')] = require('../server/middleware/' + m);
    });

  loopback.urlNotFound = loopback['url-not-found'];
  delete loopback['url-not-found'];

  loopback.errorHandler = loopback['error-handler'];
  delete loopback['error-handler'];
}

/*
 * Expose path to the default favicon file
 *
 * ***only in node***
 */

if (loopback.isServer) {
  /*!
   * Path to a default favicon shipped with LoopBack.
   *
   * **Example**
   *
   * ```js
   * app.use(require('serve-favicon')(loopback.faviconFile));
   * ```
   */
  loopback.faviconFile = path.resolve(__dirname, '../favicon.ico');
}

/**
 * Add a remote method to a model.
 * @param {Function} fn
 * @param {Object} options (optional)
 */

loopback.remoteMethod = function(fn, options) {
  fn.shared = true;
  if (typeof options === 'object') {
    Object.keys(options).forEach(function(key) {
      fn[key] = options[key];
    });
  }
  fn.http = fn.http || {verb: 'get'};
};

/**
 * Create a template helper.
 *
 *     var render = loopback.template('foo.ejs');
 *     var html = render({foo: 'bar'});
 *
 * @param {String} path Path to the template file.
 * @returns {Function}
 */

loopback.template = function(file) {
  var templates = this._templates || (this._templates = {});
  var str = templates[file] || (templates[file] = fs.readFileSync(file, 'utf8'));
  return ejs.compile(str, {
    filename: file
  });
};

require('../server/current-context')(loopback);

/**
 * Create a named vanilla JavaScript class constructor with an attached
 * set of properties and options.
 *
 * This function comes with two variants:
 *  * `loopback.createModel(name, properties, options)`
 *  * `loopback.createModel(config)`
 *
 * In the second variant, the parameters `name`, `properties` and `options`
 * are provided in the config object. Any additional config entries are
 * interpreted as `options`, i.e. the following two configs are identical:
 *
 * ```js
 * { name: 'Customer', base: 'User' }
 * { name: 'Customer', options: { base: 'User' } }
 * ```
 *
 * **Example**
 *
 * Create an `Author` model using the three-parameter variant:
 *
 * ```js
 * loopback.createModel(
 *   'Author',
 *   {
 *     firstName: 'string',
 *     lastName: 'string'
 *   },
 *   {
 *     relations: {
 *       books: {
 *         model: 'Book',
 *         type: 'hasAndBelongsToMany'
 *       }
 *     }
 *   }
 * );
 * ```
 *
 * Create the same model using a config object:
 *
 * ```js
 * loopback.createModel({
 *   name: 'Author',
 *   properties: {
 *     firstName: 'string',
 *     lastName: 'string'
 *   },
 *   relations: {
 *     books: {
 *       model: 'Book',
 *       type: 'hasAndBelongsToMany'
 *     }
 *   }
 * });
 * ```
 *
 * @param {String} name Unique name.
 * @param {Object} properties
 * @param {Object} options (optional)
 *
 * @header loopback.createModel
 */

loopback.createModel = function(name, properties, options) {
  return this.registry.createModel.apply(this.registry, arguments);
};

/**
 * Alter an existing Model class.
 * @param {Model} ModelCtor The model constructor to alter.
 * @options {Object} config Additional configuration to apply
 * @property {DataSource} dataSource Attach the model to a dataSource.
 * @property {Object} [relations] Model relations to add/update.
 *
 * @header loopback.configureModel(ModelCtor, config)
 */

loopback.configureModel = function(ModelCtor, config) {
  return this.registry.configureModel.apply(this.registry, arguments);
};

/**
 * Look up a model class by name from all models created by
 * `loopback.createModel()`
 * @param {String} modelName The model name
 * @returns {Model} The model class
 *
 * @header loopback.findModel(modelName)
 */
loopback.findModel = function(modelName) {
  return this.registry.findModel.apply(this.registry, arguments);
};

/**
 * Look up a model class by name from all models created by
 * `loopback.createModel()`. Throw an error when no such model exists.
 *
 * @param {String} modelName The model name
 * @returns {Model} The model class
 *
 * @header loopback.getModel(modelName)
 */
loopback.getModel = function(modelName) {
  return this.registry.getModel.apply(this.registry, arguments);
};

/**
 * Look up a model class by the base model class.
 * The method can be used by LoopBack
 * to find configured models in models.json over the base model.
 * @param {Model} modelType The base model class
 * @returns {Model} The subclass if found or the base class
 *
 * @header loopback.getModelByType(modelType)
 */
loopback.getModelByType = function(modelType) {
  return this.registry.getModelByType.apply(this.registry, arguments);
};

/**
 * Create a data source with passing the provided options to the connector.
 *
 * @param {String} name Optional name.
 * @options {Object} options Data Source options
 * @property {Object} connector LoopBack connector.
 * @property {*} [*] Other&nbsp;connector properties.
 *   See the relevant connector documentation.
 */

loopback.createDataSource = function(name, options) {
  return this.registry.createDataSource.apply(this.registry, arguments);
};

/**
 * Get an in-memory data source. Use one if it already exists.
 *
 * @param {String} [name] The name of the data source.
 * If not provided, the `'default'` is used.
 */

loopback.memory = function(name) {
  return this.registry.memory.apply(this.registry, arguments);
};

/**
 * Set the default `dataSource` for a given `type`.
 * @param {String} type The datasource type.
 * @param {Object|DataSource} dataSource The data source settings or instance
 * @returns {DataSource} The data source instance.
 *
 * @header loopback.setDefaultDataSourceForType(type, dataSource)
 */

loopback.setDefaultDataSourceForType = function(type, dataSource) {
  return this.registry.setDefaultDataSourceForType.apply(this.registry, arguments);
};

/**
 * Get the default `dataSource` for a given `type`.
 * @param {String} type The datasource type.
 * @returns {DataSource} The data source instance
 */

loopback.getDefaultDataSourceForType = function(type) {
  return this.registry.getDefaultDataSourceForType.apply(this.registry, arguments);
};

/**
 * Attach any model that does not have a dataSource to
 * the default dataSource for the type the Model requests
 */

loopback.autoAttach = function() {
  return this.registry.autoAttach.apply(this.registry, arguments);
};

loopback.autoAttachModel = function(ModelCtor) {
  return this.registry.autoAttachModel.apply(this.registry, arguments);
};

// temporary alias to simplify migration of code based on <=2.0.0-beta3
// TODO(bajtos) Remove this in v3.0
Object.defineProperty(loopback, 'DataModel', {
  get: function() {
    return this.registry.DataModel;
  }
});

/*!
 * Built in models / services
 */

require('./builtin-models')(loopback);

loopback.DataSource = juggler.DataSource;
 at SyntaxError: Unexpected token (17:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/loopbacknext/node_modules/loopbacknext/index.js. Coverage (Term): 28% Coverage (LOC): 40%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
