/root/Targets/imbroglio
└─┬ imbroglio@0.1.3 
  ├─┬ brfs@1.4.3 
  │ ├─┬ quote-stream@1.0.2 
  │ │ ├── buffer-equal@0.0.1 
  │ │ └── minimist@1.2.0 
  │ ├─┬ resolve@1.4.0 
  │ │ └── path-parse@1.0.5 
  │ ├─┬ static-module@1.5.0 
  │ │ ├─┬ concat-stream@1.6.0 
  │ │ │ ├── inherits@2.0.3 
  │ │ │ └── typedarray@0.0.6 
  │ │ ├─┬ duplexer2@0.0.2 
  │ │ │ └─┬ readable-stream@1.1.14 
  │ │ │   ├── isarray@0.0.1 
  │ │ │   └── string_decoder@0.10.31 
  │ │ ├─┬ escodegen@1.3.3 
  │ │ │ ├── esprima@1.1.1 
  │ │ │ ├── estraverse@1.5.1 
  │ │ │ ├── esutils@1.0.0 
  │ │ │ └─┬ source-map@0.1.43 
  │ │ │   └── amdefine@1.0.1 
  │ │ ├─┬ falafel@2.1.0 
  │ │ │ ├── acorn@5.1.2 
  │ │ │ ├── foreach@2.0.5 
  │ │ │ ├── isarray@0.0.1 
  │ │ │ └── object-keys@1.0.11 
  │ │ ├─┬ has@1.0.1 
  │ │ │ └── function-bind@1.1.1 
  │ │ ├── object-inspect@0.4.0 
  │ │ ├─┬ quote-stream@0.0.0 
  │ │ │ └── minimist@0.0.8 
  │ │ ├─┬ readable-stream@1.0.34 
  │ │ │ ├── core-util-is@1.0.2 
  │ │ │ ├── isarray@0.0.1 
  │ │ │ └── string_decoder@0.10.31 
  │ │ ├── shallow-copy@0.0.1 
  │ │ ├─┬ static-eval@0.2.4 
  │ │ │ └─┬ escodegen@0.0.28 
  │ │ │   ├── esprima@1.0.4 
  │ │ │   └── estraverse@1.3.2 
  │ │ └─┬ through2@0.4.2 
  │ │   └─┬ xtend@2.1.2 
  │ │     └── object-keys@0.4.0 
  │ └─┬ through2@2.0.3 
  │   ├─┬ readable-stream@2.3.3 
  │   │ ├── isarray@1.0.0 
  │   │ ├── process-nextick-args@1.0.7 
  │   │ ├── safe-buffer@5.1.1 
  │   │ ├── string_decoder@1.0.3 
  │   │ └── util-deprecate@1.0.2 
  │   └── xtend@4.0.1 
  └── coffee-script@1.9.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/imbroglio/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 34% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","call"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0223 took 7.1111s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (7:9) on program // Generated by IcedCoffeeScript 1.8.0-d
(function() {
  var $, assert, choiceChars, compile, elem, hashchange, newGame, normalize, prepare, quote, restore, stdlib, turn, _ref;

  choiceChars = 'abcdefghijklmnopqrstuvwxyz0123456789';

  assert = require('assert');

  $ = require('jquery');

  _ref = require('./compiler'), quote = _ref.quote, stdlib = _ref.stdlib, prepare = _ref.prepare;

  elem = stdlib().elem;

  normalize = function(s) {
    return s.replace(/^\s+/, '').replace(/\s+$/, '').replace(/\s+/, ' ');
  };

  exports.compile = compile = function(src, opts) {
    var firstPassage, handleError, passages, render;
    if (opts == null) {
      opts = {};
    }
    handleError = opts.handleError || function(msg) {
      return console.log(msg);
    };
    passages = {};
    firstPassage = null;
    (function() {
      var lastPassage, m, re;
      re = /(?:^\s*\n?|\n\n)#(?!\{)\s*([^\n]*\S)\s*\n/g;
      lastPassage = null;
      while (m = re.exec(src)) {
        if (lastPassage) {
          lastPassage.endIndex = m.index;
        }
        lastPassage = {
          name: normalize(m[1]),
          startIndex: re.lastIndex
        };
        assert(!(lastPassage.name in passages), lastPassage.name);
        passages[lastPassage.name] = lastPassage;
        firstPassage || (firstPassage = lastPassage);
      }
      if (!lastPassage) {
        handleError('no passages found');
      }
      lastPassage.endIndex = src.length;
    })();
    (function() {
      var k, v, _fn;
      _fn = function() {
        v.src = src.substring(v.startIndex, v.endIndex);
        v.mungedSrc = v.src.replace(/\[\[([^\]]*)\]\]/g, function(outer, inner, index) {
          var m, offset, target, text;
          offset = index + v.startIndex;
          text = target = inner;
          if (m = /^(.*)->\s*([^<>]*[^\s<>])\s*$/.exec(inner)) {
            text = m[1];
            target = m[2];
          } else if (m = /^\s*([^<>]*[^\s<>])\s*<-(.*)$/.exec(inner)) {
            target = m[1];
            text = m[2];
          }
          target = normalize(target);
          if (!(target in passages)) {
            handleError("bad link target '" + target + "' at " + outer + ", passage '" + k + "', offset " + offset);
          }
          return "#\{imbroglio.mkLink " + (quote(target)) + ", " + (quote(text)) + "}";
        });
        v.prepared = prepare(v.mungedSrc, {
          argNames: ['imbroglio'],
          thisVar: 'imbroglio.state',
          handleError: function(e) {
            console.log(e);
            if (e.error instanceof Error) {
              throw e.error;
            } else if (e.error) {
              throw new Error(e.error);
            } else {
              throw new Error(e);
            }
          }
        });
      };
      for (k in passages) {
        v = passages[k];
        _fn();
      }
    })();
    render = function(passage, result) {
      var linkCount, links, mkLink, moves, state;
      if (result == null) {
        result = {};
      }
      state = result.state || {};
      delete result.state;
      moves = result.moves || (result.moves = '');
      links = {};
      linkCount = 0;
      mkLink = function(target, text) {
        var choiceChar, el;
        if (!(target in passages)) {
          return elem('span', {
            "class": 'error'
          }, "ERROR: bad link target '" + target + "' in passage '" + passage.name + "': " + text);
        } else if (linkCount >= choiceChars.length) {
          return elem('span', {
            "class": 'error'
          }, "ERROR: too many links, passage '" + passage.name + "', target '" + target + "': " + text);
        }
        choiceChar = choiceChars[linkCount++];
        el = elem('a', {
          "class": 'choice',
          href: "#!" + moves + choiceChar
        }, text);
        links[choiceChar] = {
          el: el,
          target: target
        };
        return el;
      };
      result.passageElem = passage.prepared(stdlib({
        mkLink: mkLink,
        state: state
      }));
      result.choose = function(ch) {
        var link;
        if (!(link = links[ch])) {
          console.log("invalid move " + ch + " from passage " + passage.name);
          return null;
        }
        $(link.el).addClass('chosen');
        return render(passages[link.target], {
          moves: "" + moves + ch,
          state: state
        });
      };
      return result;
    };
    return function() {
      return render(firstPassage);
    };
  };

  newGame = turn = null;

  restore = function(moves) {
    var $chosen, $output, $p, ch, last, prevTurn, scrollPos, _i, _len, _ref1;
    if ((turn != null ? turn.moves : void 0) === moves) {
      return;
    }
    $('#loading').show();
    $('.pane').hide();
    $('#game').hide();
    $output = $('#output');
    last = function() {
      var children;
      children = $output.children();
      if (children.length) {
        return $(children.get(children.length - 1));
      } else {
        return children;
      }
    };
    if (!turn || turn.moves !== moves.slice(0, turn.moves.length)) {
      turn = newGame();
      $output.empty();
      $output.append(turn.passageElem);
    }
    _ref1 = moves.slice(turn.moves.length);
    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
      ch = _ref1[_i];
      prevTurn = turn;
      if (!(turn = turn.choose(ch))) {
        $('#404-pane').show();
        $('#loading').hide();
        return;
      }
      turn.prevTurn = prevTurn;
      $output.append(turn.passageElem);
    }
    $output.children().removeClass('current');
    last().addClass('current');
    $('#game').show();
    $('#loading').hide();
    $p = $(turn.passageElem);
    $chosen = $('.chosen');
    scrollPos = !$chosen.length ? 0 : $($chosen.get($chosen.length - 1)).offset().top;
    console.log("XXX scrollPos = " + scrollPos);
    window.scrollTo(0, scrollPos);
  };

  hashchange = function() {
    var hash, m, target;
    hash = window.location.hash.replace(/^#/, '');
    if (m = /^!(.*)$/.exec(hash)) {
      return restore(m[1]);
    }
    turn = target = null;
    if (!hash) {
      target = $('#home');
    } else if (m = /^\/([a-z][a-z0-9-]*)$/.exec(hash)) {
      target = $("#" + m[1] + "-pane");
    }
    if (!(target != null ? target.length : void 0)) {
      target = $('#404-pane');
    }
    $('#game').hide();
    $('#output').empty();
    $('.pane').hide();
    target.show();
    $('#loading').hide();
    window.scrollTo(0, 0);
  };

  exports.start = function(src) {
    newGame = compile(src);
    return $(function() {
      (function() {
        var m, _ref1;
        m = /([^\/]+)$/.exec(((_ref1 = window.location) != null ? _ref1.pathname : void 0) || '');
        $('a[href="#"], a[href="#/"]').attr('href', m ? m[1] : '.');
      })();
      $(window).on('hashchange', function(e) {
        e.preventDefault();
        hashchange();
        return true;
      });
      hashchange();
    });
  };

}).call(this);
 at SyntaxError: Unexpected token (7:9)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1822:12)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1597:21)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/imbroglio/node_modules/imbroglio/index.js. Coverage (Term): 76% Coverage (LOC): 100%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
