
> jpegtran-bin@0.1.7 postinstall /root/Targets/generator-admo/node_modules/jpegtran-bin
> node pre-build.js

[2J[1;3H
  3 tests complete (1 seconds)

[32mpre-build test passed successfully, skipping build...[39m

> optipng-bin@0.2.6 postinstall /root/Targets/generator-admo/node_modules/optipng-bin
> node pre-build.js

[2J[1;3H
  3 tests complete (1 seconds)

[32mpre-build test passed successfully, skipping build...[39m
/root/Targets/generator-admo
â”œâ”€â”¬ generator-admo@0.9.5 
â”‚ â”œâ”€â”¬ glob@3.2.6 
â”‚ â”‚ â”œâ”€â”€ inherits@2.0.3 
â”‚ â”‚ â””â”€â”¬ minimatch@0.2.14 
â”‚ â”‚   â”œâ”€â”€ lru-cache@2.7.3 
â”‚ â”‚   â””â”€â”€ sigmund@1.0.1 
â”‚ â”œâ”€â”¬ grunt@0.4.5 
â”‚ â”‚ â”œâ”€â”€ async@0.1.22 
â”‚ â”‚ â”œâ”€â”€ coffee-script@1.3.3 
â”‚ â”‚ â”œâ”€â”€ colors@0.6.2 
â”‚ â”‚ â”œâ”€â”€ dateformat@1.0.2-1.2.3 
â”‚ â”‚ â”œâ”€â”€ eventemitter2@0.4.14 
â”‚ â”‚ â”œâ”€â”€ exit@0.1.2 
â”‚ â”‚ â”œâ”€â”¬ findup-sync@0.1.3 
â”‚ â”‚ â”‚ â”œâ”€â”¬ glob@3.2.11 
â”‚ â”‚ â”‚ â”‚ â””â”€â”€ minimatch@0.3.0 
â”‚ â”‚ â”‚ â””â”€â”€ lodash@2.4.2 
â”‚ â”‚ â”œâ”€â”€ getobject@0.1.0 
â”‚ â”‚ â”œâ”€â”¬ glob@3.1.21 
â”‚ â”‚ â”‚ â”œâ”€â”€ graceful-fs@1.2.3 
â”‚ â”‚ â”‚ â””â”€â”€ inherits@1.0.2 
â”‚ â”‚ â”œâ”€â”¬ grunt-legacy-log@0.1.3 
â”‚ â”‚ â”‚ â”œâ”€â”¬ grunt-legacy-log-utils@0.1.1 
â”‚ â”‚ â”‚ â”‚ â”œâ”€â”€ lodash@2.4.2 
â”‚ â”‚ â”‚ â”‚ â””â”€â”€ underscore.string@2.3.3 
â”‚ â”‚ â”‚ â”œâ”€â”€ lodash@2.4.2 
â”‚ â”‚ â”‚ â””â”€â”€ underscore.string@2.3.3 
â”‚ â”‚ â”œâ”€â”€ grunt-legacy-util@0.2.0 
â”‚ â”‚ â”œâ”€â”€ hooker@0.2.3 
â”‚ â”‚ â”œâ”€â”€ iconv-lite@0.2.11 
â”‚ â”‚ â”œâ”€â”¬ js-yaml@2.0.5 
â”‚ â”‚ â”‚ â”œâ”€â”¬ argparse@0.1.16 
â”‚ â”‚ â”‚ â”‚ â”œâ”€â”€ underscore@1.7.0 
â”‚ â”‚ â”‚ â”‚ â””â”€â”€ underscore.string@2.4.0 
â”‚ â”‚ â”‚ â””â”€â”€ esprima@1.0.4 
â”‚ â”‚ â”œâ”€â”€ lodash@0.9.2 
â”‚ â”‚ â”œâ”€â”¬ nopt@1.0.10 
â”‚ â”‚ â”‚ â””â”€â”€ abbrev@1.1.0 
â”‚ â”‚ â”œâ”€â”€ rimraf@2.2.8 
â”‚ â”‚ â”œâ”€â”€ underscore.string@2.2.1 
â”‚ â”‚ â””â”€â”€ which@1.0.9 
â”‚ â”œâ”€â”€ grunt-contrib-clean@0.4.1 
â”‚ â”œâ”€â”¬ grunt-contrib-compass@0.1.3 
â”‚ â”‚ â”œâ”€â”¬ grunt-lib-contrib@0.5.3 
â”‚ â”‚ â”‚ â””â”€â”€ zlib-browserify@0.0.1 
â”‚ â”‚ â””â”€â”€ tmp@0.0.16 
â”‚ â”œâ”€â”¬ grunt-contrib-compress@0.4.10 
â”‚ â”‚ â”œâ”€â”¬ archiver@0.4.10 
â”‚ â”‚ â”‚ â””â”€â”¬ readable-stream@1.0.34 
â”‚ â”‚ â”‚   â”œâ”€â”€ core-util-is@1.0.2 
â”‚ â”‚ â”‚   â”œâ”€â”€ isarray@0.0.1 
â”‚ â”‚ â”‚   â””â”€â”€ string_decoder@0.10.31 
â”‚ â”‚ â”œâ”€â”€ lazystream@0.1.0 
â”‚ â”‚ â””â”€â”€ prettysize@0.0.3 
â”‚ â”œâ”€â”€ grunt-contrib-concat@0.1.3 
â”‚ â”œâ”€â”¬ grunt-contrib-connect@0.5.0 
â”‚ â”‚ â”œâ”€â”¬ connect@2.7.11 
â”‚ â”‚ â”‚ â”œâ”€â”€ buffer-crc32@0.2.1 
â”‚ â”‚ â”‚ â”œâ”€â”€ bytes@0.2.0 
â”‚ â”‚ â”‚ â”œâ”€â”€ cookie@0.0.5 
â”‚ â”‚ â”‚ â”œâ”€â”€ cookie-signature@1.0.1 
â”‚ â”‚ â”‚ â”œâ”€â”¬ debug@3.0.1 
â”‚ â”‚ â”‚ â”‚ â””â”€â”€ ms@2.0.0 
â”‚ â”‚ â”‚ â”œâ”€â”€ formidable@1.0.14 
â”‚ â”‚ â”‚ â”œâ”€â”€ fresh@0.1.0 
â”‚ â”‚ â”‚ â”œâ”€â”€ pause@0.0.1 
â”‚ â”‚ â”‚ â”œâ”€â”€ qs@0.6.5 
â”‚ â”‚ â”‚ â””â”€â”¬ send@0.1.1 
â”‚ â”‚ â”‚   â””â”€â”€ range-parser@0.0.4 
â”‚ â”‚ â”œâ”€â”€ connect-livereload@0.2.0 
â”‚ â”‚ â””â”€â”€ open@0.0.4 
â”‚ â”œâ”€â”€ grunt-contrib-copy@0.4.1 
â”‚ â”œâ”€â”¬ grunt-contrib-cssmin@0.5.0 
â”‚ â”‚ â”œâ”€â”¬ clean-css@0.10.2 
â”‚ â”‚ â”‚ â””â”€â”¬ commander@1.1.1 
â”‚ â”‚ â”‚   â””â”€â”€ keypress@0.1.0 
â”‚ â”‚ â””â”€â”€ grunt-lib-contrib@0.6.1 
â”‚ â”œâ”€â”¬ grunt-contrib-htmlmin@0.1.3 
â”‚ â”‚ â”œâ”€â”€ grunt-lib-contrib@0.6.1 
â”‚ â”‚ â””â”€â”€ html-minifier@0.5.6 
â”‚ â”œâ”€â”¬ grunt-contrib-imagemin@0.1.4 
â”‚ â”‚ â”œâ”€â”€ filesize@1.7.9 
â”‚ â”‚ â”œâ”€â”¬ jpegtran-bin@0.1.7 
â”‚ â”‚ â”‚ â”œâ”€â”¬ mocha@1.9.0 
â”‚ â”‚ â”‚ â”‚ â”œâ”€â”€ commander@0.6.1 
â”‚ â”‚ â”‚ â”‚ â”œâ”€â”€ diff@1.0.2 
â”‚ â”‚ â”‚ â”‚ â”œâ”€â”€ growl@1.7.0 
â”‚ â”‚ â”‚ â”‚ â”œâ”€â”¬ jade@0.26.3 
â”‚ â”‚ â”‚ â”‚ â”‚ â”œâ”€â”€ commander@0.6.1 
â”‚ â”‚ â”‚ â”‚ â”‚ â””â”€â”€ mkdirp@0.3.0 
â”‚ â”‚ â”‚ â”‚ â”œâ”€â”€ mkdirp@0.3.3 
â”‚ â”‚ â”‚ â”‚ â””â”€â”€ ms@0.3.0 
â”‚ â”‚ â”‚ â””â”€â”¬ request@2.16.6 
â”‚ â”‚ â”‚   â”œâ”€â”€ aws-sign@0.2.0 
â”‚ â”‚ â”‚   â”œâ”€â”€ cookie-jar@0.2.0 
â”‚ â”‚ â”‚   â”œâ”€â”€ forever-agent@0.2.0 
â”‚ â”‚ â”‚   â”œâ”€â”¬ form-data@0.0.10 
â”‚ â”‚ â”‚   â”‚ â””â”€â”€ async@0.2.10 
â”‚ â”‚ â”‚   â”œâ”€â”¬ hawk@0.10.2 
â”‚ â”‚ â”‚   â”‚ â”œâ”€â”€ boom@0.3.8 
â”‚ â”‚ â”‚   â”‚ â”œâ”€â”€ cryptiles@0.1.3 
â”‚ â”‚ â”‚   â”‚ â”œâ”€â”€ hoek@0.7.6 
â”‚ â”‚ â”‚   â”‚ â””â”€â”€ sntp@0.1.4 
â”‚ â”‚ â”‚   â”œâ”€â”€ json-stringify-safe@3.0.0 
â”‚ â”‚ â”‚   â”œâ”€â”€ oauth-sign@0.2.0 
â”‚ â”‚ â”‚   â”œâ”€â”€ qs@0.5.6 
â”‚ â”‚ â”‚   â””â”€â”€ tunnel-agent@0.2.0 
â”‚ â”‚ â””â”€â”€ optipng-bin@0.2.6 
â”‚ â”œâ”€â”¬ grunt-contrib-jshint@0.3.0 
â”‚ â”‚ â””â”€â”¬ jshint@1.1.0 
â”‚ â”‚   â”œâ”€â”€ cli@0.4.5 
â”‚ â”‚   â”œâ”€â”€ esprima@4.0.0-dev 
â”‚ â”‚   â”œâ”€â”€ peakle@0.0.1 
â”‚ â”‚   â””â”€â”€ underscore@1.4.4 
â”‚ â”œâ”€â”¬ grunt-contrib-livereload@0.1.2 
â”‚ â”‚ â””â”€â”¬ tiny-lr@0.0.9 
â”‚ â”‚   â”œâ”€â”¬ body-parser@1.18.2 
â”‚ â”‚   â”‚ â”œâ”€â”€ bytes@3.0.0 
â”‚ â”‚   â”‚ â”œâ”€â”€ content-type@1.0.4 
â”‚ â”‚   â”‚ â”œâ”€â”€ debug@2.6.9 
â”‚ â”‚   â”‚ â”œâ”€â”€ depd@1.1.1 
â”‚ â”‚   â”‚ â”œâ”€â”¬ http-errors@1.6.2 
â”‚ â”‚   â”‚ â”‚ â”œâ”€â”€ setprototypeof@1.0.3 
â”‚ â”‚   â”‚ â”‚ â””â”€â”€ statuses@1.3.1 
â”‚ â”‚   â”‚ â”œâ”€â”€ iconv-lite@0.4.19 
â”‚ â”‚   â”‚ â”œâ”€â”¬ on-finished@2.3.0 
â”‚ â”‚   â”‚ â”‚ â””â”€â”€ ee-first@1.1.1 
â”‚ â”‚   â”‚ â”œâ”€â”€ qs@6.5.1 
â”‚ â”‚   â”‚ â”œâ”€â”¬ raw-body@2.3.2 
â”‚ â”‚   â”‚ â”‚ â”œâ”€â”€ bytes@3.0.0 
â”‚ â”‚   â”‚ â”‚ â”œâ”€â”€ iconv-lite@0.4.19 
â”‚ â”‚   â”‚ â”‚ â””â”€â”€ unpipe@1.0.0 
â”‚ â”‚   â”‚ â””â”€â”¬ type-is@1.6.15 
â”‚ â”‚   â”‚   â”œâ”€â”€ media-typer@0.3.0 
â”‚ â”‚   â”‚   â””â”€â”¬ mime-types@2.1.17 
â”‚ â”‚   â”‚     â””â”€â”€ mime-db@1.30.0 
â”‚ â”‚   â”œâ”€â”€ debug@0.8.1 
â”‚ â”‚   â”œâ”€â”¬ faye-websocket@0.7.3 
â”‚ â”‚   â”‚ â””â”€â”¬ websocket-driver@0.7.0 
â”‚ â”‚   â”‚   â”œâ”€â”€ http-parser-js@0.4.8 
â”‚ â”‚   â”‚   â””â”€â”€ websocket-extensions@0.1.2 
â”‚ â”‚   â”œâ”€â”¬ noptify@0.0.3 
â”‚ â”‚   â”‚ â””â”€â”€ nopt@2.0.0 
â”‚ â”‚   â”œâ”€â”€ parseurl@1.3.2 
â”‚ â”‚   â””â”€â”€ qs@0.6.6 
â”‚ â”œâ”€â”¬ grunt-contrib-uglify@0.2.7 
â”‚ â”‚ â”œâ”€â”€ grunt-lib-contrib@0.6.1 
â”‚ â”‚ â””â”€â”¬ uglify-js@2.4.24 
â”‚ â”‚   â”œâ”€â”€ async@0.2.10 
â”‚ â”‚   â”œâ”€â”¬ source-map@0.1.34 
â”‚ â”‚   â”‚ â””â”€â”€ amdefine@1.0.1 
â”‚ â”‚   â”œâ”€â”€ uglify-to-browserify@1.0.2 
â”‚ â”‚   â””â”€â”¬ yargs@3.5.4 
â”‚ â”‚     â”œâ”€â”€ camelcase@1.2.1 
â”‚ â”‚     â”œâ”€â”€ decamelize@1.2.0 
â”‚ â”‚     â”œâ”€â”€ window-size@0.1.0 
â”‚ â”‚     â””â”€â”€ wordwrap@0.0.2 
â”‚ â”œâ”€â”¬ grunt-env@0.4.4 
â”‚ â”‚ â”œâ”€â”€ ini@1.3.4 
â”‚ â”‚ â””â”€â”€ lodash@2.4.2 
â”‚ â”œâ”€â”€ grunt-git-describe@2.0.2 
â”‚ â”œâ”€â”€ grunt-open@0.2.3 
â”‚ â”œâ”€â”¬ grunt-preprocess@2.3.0 
â”‚ â”‚ â””â”€â”€ preprocess@1.3.0 
â”‚ â”œâ”€â”¬ grunt-regarde@0.1.1 
â”‚ â”‚ â””â”€â”¬ gaze@0.3.4 
â”‚ â”‚   â””â”€â”€ fileset@0.1.8 
â”‚ â”œâ”€â”€ grunt-rev@0.1.0 
â”‚ â”œâ”€â”€ grunt-usemin@0.1.13 
â”‚ â”œâ”€â”€ matchdep@0.1.2 
â”‚ â””â”€â”¬ yeoman-generator@0.13.4 
â”‚   â”œâ”€â”€ async@0.2.10 
â”‚   â”œâ”€â”¬ chalk@0.2.1 
â”‚   â”‚ â”œâ”€â”€ ansi-styles@0.2.0 
â”‚   â”‚ â””â”€â”€ has-color@0.1.7 
â”‚   â”œâ”€â”¬ cheerio@0.12.4 
â”‚   â”‚ â”œâ”€â”¬ cheerio-select@0.0.3 
â”‚   â”‚ â”‚ â””â”€â”¬ CSSselect@0.7.0 
â”‚   â”‚ â”‚   â”œâ”€â”€ boolbase@1.0.0 
â”‚   â”‚ â”‚   â”œâ”€â”€ CSSwhat@0.4.7 
â”‚   â”‚ â”‚   â”œâ”€â”€ domutils@1.4.3 
â”‚   â”‚ â”‚   â””â”€â”€ nth-check@1.0.1 
â”‚   â”‚ â”œâ”€â”€ entities@0.5.0 
â”‚   â”‚ â”œâ”€â”¬ htmlparser2@3.1.4 
â”‚   â”‚ â”‚ â”œâ”€â”€ domelementtype@1.3.0 
â”‚   â”‚ â”‚ â”œâ”€â”€ domhandler@2.0.3 
â”‚   â”‚ â”‚ â””â”€â”€ domutils@1.1.6 
â”‚   â”‚ â””â”€â”€ underscore@1.4.4 
â”‚   â”œâ”€â”€ dargs@0.1.0 
â”‚   â”œâ”€â”€ debug@0.7.4 
â”‚   â”œâ”€â”€ diff@1.0.8 
â”‚   â”œâ”€â”¬ inquirer@0.3.5 
â”‚   â”‚ â”œâ”€â”€ async@0.2.10 
â”‚   â”‚ â”œâ”€â”¬ cli-color@0.2.3 
â”‚   â”‚ â”‚ â”œâ”€â”€ es5-ext@0.9.2 
â”‚   â”‚ â”‚ â””â”€â”¬ memoizee@0.2.6 
â”‚   â”‚ â”‚   â”œâ”€â”€ event-emitter@0.2.2 
â”‚   â”‚ â”‚   â””â”€â”€ next-tick@0.1.0 
â”‚   â”‚ â”œâ”€â”€ lodash@1.2.1 
â”‚   â”‚ â””â”€â”€ mute-stream@0.0.3 
â”‚   â”œâ”€â”€ isbinaryfile@0.1.9 
â”‚   â”œâ”€â”€ lodash@1.3.1 
â”‚   â”œâ”€â”€ mime@1.2.11 
â”‚   â”œâ”€â”€ mkdirp@0.3.5 
â”‚   â”œâ”€â”¬ request@2.25.0 
â”‚   â”‚ â”œâ”€â”€ aws-sign@0.3.0 
â”‚   â”‚ â”œâ”€â”€ cookie-jar@0.3.0 
â”‚   â”‚ â”œâ”€â”€ forever-agent@0.5.2 
â”‚   â”‚ â”œâ”€â”¬ form-data@0.1.4 
â”‚   â”‚ â”‚ â”œâ”€â”€ async@0.9.2 
â”‚   â”‚ â”‚ â””â”€â”¬ combined-stream@0.0.7 
â”‚   â”‚ â”‚   â””â”€â”€ delayed-stream@0.0.5 
â”‚   â”‚ â”œâ”€â”¬ hawk@1.0.0 
â”‚   â”‚ â”‚ â”œâ”€â”€ boom@0.4.2 
â”‚   â”‚ â”‚ â”œâ”€â”€ cryptiles@0.2.2 
â”‚   â”‚ â”‚ â”œâ”€â”€ hoek@0.9.1 
â”‚   â”‚ â”‚ â””â”€â”€ sntp@0.2.4 
â”‚   â”‚ â”œâ”€â”¬ http-signature@0.10.1 
â”‚   â”‚ â”‚ â”œâ”€â”€ asn1@0.1.11 
â”‚   â”‚ â”‚ â”œâ”€â”€ assert-plus@0.1.5 
â”‚   â”‚ â”‚ â””â”€â”€ ctype@0.5.3 
â”‚   â”‚ â”œâ”€â”€ json-stringify-safe@5.0.1 
â”‚   â”‚ â”œâ”€â”€ node-uuid@1.4.8 
â”‚   â”‚ â”œâ”€â”€ oauth-sign@0.3.0 
â”‚   â”‚ â””â”€â”€ tunnel-agent@0.3.0 
â”‚   â”œâ”€â”€ shelljs@0.1.4 
â”‚   â”œâ”€â”¬ tar@0.1.20 
â”‚   â”‚ â”œâ”€â”€ block-stream@0.0.9 
â”‚   â”‚ â””â”€â”¬ fstream@0.1.31 
â”‚   â”‚   â”œâ”€â”¬ graceful-fs@3.0.11 
â”‚   â”‚   â”‚ â””â”€â”€ natives@1.1.0 
â”‚   â”‚   â””â”€â”¬ mkdirp@0.5.1 
â”‚   â”‚     â””â”€â”€ minimist@0.0.8 
â”‚   â”œâ”€â”€ text-table@0.1.1 
â”‚   â””â”€â”€ underscore.string@2.3.3 
â”œâ”€â”€ UNMET PEER DEPENDENCY grunt-contrib-jst@~0.5.1
â””â”€â”€ UNMET PEER DEPENDENCY yo@>=1.0.0

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/generator-admo/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 28.000000000000004% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","Date","RegExp","call","parseInt","sort","defineProperties"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0249 took 17.5697s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (46:2) on program // Approach:
//
// 1. Get the minimatch set
// 2. For each pattern in the set, PROCESS(pattern)
// 3. Store matches per-set, then uniq them
//
// PROCESS(pattern)
// Get the first [n] items from pattern that are all strings
// Join these together.  This is PREFIX.
//   If there is no more remaining, then stat(PREFIX) and
//   add to matches if it succeeds.  END.
// readdir(PREFIX) as ENTRIES
//   If fails, END
//   If pattern[n] is GLOBSTAR
//     // handle the case where the globstar match is empty
//     // by pruning it out, and testing the resulting pattern
//     PROCESS(pattern[0..n] + pattern[n+1 .. $])
//     // handle other cases.
//     for ENTRY in ENTRIES (not dotfiles)
//       // attach globstar + tail onto the entry
//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $])
//
//   else // not globstar
//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)
//       Test ENTRY against pattern[n]
//       If fails, continue
//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])
//
// Caveat:
//   Cache all stats and readdirs results to minimize syscall.  Since all
//   we ever care about is existence and directory-ness, we can just keep
//   `true` for files, and [children,...] for directories, or `false` for
//   things that don't exist.



module.exports = glob

var fs = require("fs")
, minimatch = require("minimatch")
, Minimatch = minimatch.Minimatch
, inherits = require("inherits")
, EE = require("events").EventEmitter
, path = require("path")
, isDir = {}
, assert = require("assert").ok

function glob (pattern, options, cb) {
  if (typeof options === "function") cb = options, options = {}
  if (!options) options = {}

  if (typeof options === "number") {
    deprecated()
    return
  }

  var g = new Glob(pattern, options, cb)
  return g.sync ? g.found : g
}

glob.fnmatch = deprecated

function deprecated () {
  throw new Error("glob's interface has changed. Please see the docs.")
}

glob.sync = globSync
function globSync (pattern, options) {
  if (typeof options === "number") {
    deprecated()
    return
  }

  options = options || {}
  options.sync = true
  return glob(pattern, options)
}


glob.Glob = Glob
inherits(Glob, EE)
function Glob (pattern, options, cb) {
  if (!(this instanceof Glob)) {
    return new Glob(pattern, options, cb)
  }

  if (typeof cb === "function") {
    this.on("error", cb)
    this.on("end", function (matches) {
      cb(null, matches)
    })
  }

  options = options || {}

  this.EOF = {}
  this._emitQueue = []

  this.maxDepth = options.maxDepth || 1000
  this.maxLength = options.maxLength || Infinity
  this.cache = options.cache || {}
  this.statCache = options.statCache || {}

  this.changedCwd = false
  var cwd = process.cwd()
  if (!options.hasOwnProperty("cwd")) this.cwd = cwd
  else {
    this.cwd = options.cwd
    this.changedCwd = path.resolve(options.cwd) !== cwd
  }

  this.root = options.root || path.resolve(this.cwd, "/")
  this.root = path.resolve(this.root)
  if (process.platform === "win32")
    this.root = this.root.replace(/\\/g, "/")

  this.nomount = !!options.nomount

  if (!pattern) {
    throw new Error("must provide pattern")
  }

  // base-matching: just use globstar for that.
  if (options.matchBase && -1 === pattern.indexOf("/")) {
    if (options.noglobstar) {
      throw new Error("base matching requires globstar")
    }
    pattern = "**/" + pattern
  }

  this.strict = options.strict !== false
  this.dot = !!options.dot
  this.mark = !!options.mark
  this.sync = !!options.sync
  this.nounique = !!options.nounique
  this.nonull = !!options.nonull
  this.nosort = !!options.nosort
  this.nocase = !!options.nocase
  this.stat = !!options.stat

  this.debug = !!options.debug || !!options.globDebug
  if (this.debug)
    this.log = console.error

  this.silent = !!options.silent

  var mm = this.minimatch = new Minimatch(pattern, options)
  this.options = mm.options
  pattern = this.pattern = mm.pattern

  this.error = null
  this.aborted = false

  // list of all the patterns that ** has resolved do, so
  // we can avoid visiting multiple times.
  this._globstars = {}

  EE.call(this)

  // process each pattern in the minimatch set
  var n = this.minimatch.set.length

  // The matches are stored as {<filename>: true,...} so that
  // duplicates are automagically pruned.
  // Later, we do an Object.keys() on these.
  // Keep them as a list so we can fill in when nonull is set.
  this.matches = new Array(n)

  this.minimatch.set.forEach(iterator.bind(this))
  function iterator (pattern, i, set) {
    this._process(pattern, 0, i, function (er) {
      if (er) this.emit("error", er)
      if (-- n <= 0) this._finish()
    })
  }
}

Glob.prototype.log = function () {}

Glob.prototype._finish = function () {
  assert(this instanceof Glob)

  var nou = this.nounique
  , all = nou ? [] : {}

  for (var i = 0, l = this.matches.length; i < l; i ++) {
    var matches = this.matches[i]
    this.log("matches[%d] =", i, matches)
    // do like the shell, and spit out the literal glob
    if (!matches) {
      if (this.nonull) {
        var literal = this.minimatch.globSet[i]
        if (nou) all.push(literal)
        else all[literal] = true
      }
    } else {
      // had matches
      var m = Object.keys(matches)
      if (nou) all.push.apply(all, m)
      else m.forEach(function (m) {
        all[m] = true
      })
    }
  }

  if (!nou) all = Object.keys(all)

  if (!this.nosort) {
    all = all.sort(this.nocase ? alphasorti : alphasort)
  }

  if (this.mark) {
    // at *some* point we statted all of these
    all = all.map(function (m) {
      var sc = this.cache[m]
      if (!sc)
        return m
      var isDir = (Array.isArray(sc) || sc === 2)
      if (isDir && m.slice(-1) !== "/") {
        return m + "/"
      }
      if (!isDir && m.slice(-1) === "/") {
        return m.replace(/\/+$/, "")
      }
      return m
    }, this)
  }

  this.log("emitting end", all)

  this.EOF = this.found = all
  this.emitMatch(this.EOF)
}

function alphasorti (a, b) {
  a = a.toLowerCase()
  b = b.toLowerCase()
  return alphasort(a, b)
}

function alphasort (a, b) {
  return a > b ? 1 : a < b ? -1 : 0
}

Glob.prototype.abort = function () {
  this.aborted = true
  this.emit("abort")
}

Glob.prototype.pause = function () {
  if (this.paused) return
  if (this.sync)
    this.emit("error", new Error("Can't pause/resume sync glob"))
  this.paused = true
  this.emit("pause")
}

Glob.prototype.resume = function () {
  if (!this.paused) return
  if (this.sync)
    this.emit("error", new Error("Can't pause/resume sync glob"))
  this.paused = false
  this.emit("resume")
  this._processEmitQueue()
  //process.nextTick(this.emit.bind(this, "resume"))
}

Glob.prototype.emitMatch = function (m) {
  if (!this.stat || this.statCache[m] || m === this.EOF) {
    this._emitQueue.push(m)
    this._processEmitQueue()
  } else {
    this._stat(m, function(exists, isDir) {
      if (exists) {
        this._emitQueue.push(m)
        this._processEmitQueue()
      }
    })
  }
}

Glob.prototype._processEmitQueue = function (m) {
  while (!this._processingEmitQueue &&
         !this.paused) {
    this._processingEmitQueue = true
    var m = this._emitQueue.shift()
    if (!m) {
      this._processingEmitQueue = false
      break
    }

    this.log('emit!', m === this.EOF ? "end" : "match")

    this.emit(m === this.EOF ? "end" : "match", m)
    this._processingEmitQueue = false
  }
}

Glob.prototype._process = function (pattern, depth, index, cb_) {
  assert(this instanceof Glob)

  var cb = function cb (er, res) {
    assert(this instanceof Glob)
    if (this.paused) {
      if (!this._processQueue) {
        this._processQueue = []
        this.once("resume", function () {
          var q = this._processQueue
          this._processQueue = null
          q.forEach(function (cb) { cb() })
        })
      }
      this._processQueue.push(cb_.bind(this, er, res))
    } else {
      cb_.call(this, er, res)
    }
  }.bind(this)

  if (this.aborted) return cb()

  if (depth > this.maxDepth) return cb()

  // Get the first [n] parts of pattern that are all strings.
  var n = 0
  while (typeof pattern[n] === "string") {
    n ++
  }
  // now n is the index of the first one that is *not* a string.

  // see if there's anything else
  var prefix
  switch (n) {
    // if not, then this is rather simple
    case pattern.length:
      prefix = pattern.join("/")
      this._stat(prefix, function (exists, isDir) {
        // either it's there, or it isn't.
        // nothing more to do, either way.
        if (exists) {
          if (prefix && isAbsolute(prefix) && !this.nomount) {
            if (prefix.charAt(0) === "/") {
              prefix = path.join(this.root, prefix)
            } else {
              prefix = path.resolve(this.root, prefix)
            }
          }

          if (process.platform === "win32")
            prefix = prefix.replace(/\\/g, "/")

          this.matches[index] = this.matches[index] || {}
          this.matches[index][prefix] = true
          this.emitMatch(prefix)
        }
        return cb()
      })
      return

    case 0:
      // pattern *starts* with some non-trivial item.
      // going to readdir(cwd), but not include the prefix in matches.
      prefix = null
      break

    default:
      // pattern has some string bits in the front.
      // whatever it starts with, whether that's "absolute" like /foo/bar,
      // or "relative" like "../baz"
      prefix = pattern.slice(0, n)
      prefix = prefix.join("/")
      break
  }

  // get the list of entries.
  var read
  if (prefix === null) read = "."
  else if (isAbsolute(prefix) || isAbsolute(pattern.join("/"))) {
    if (!prefix || !isAbsolute(prefix)) {
      prefix = path.join("/", prefix)
    }
    read = prefix = path.resolve(prefix)

    // if (process.platform === "win32")
    //   read = prefix = prefix.replace(/^[a-zA-Z]:|\\/g, "/")

    this.log('absolute: ', prefix, this.root, pattern, read)
  } else {
    read = prefix
  }

  this.log('readdir(%j)', read, this.cwd, this.root)

  return this._readdir(read, function (er, entries) {
    if (er) {
      // not a directory!
      // this means that, whatever else comes after this, it can never match
      return cb()
    }

    // globstar is special
    if (pattern[n] === minimatch.GLOBSTAR) {
      // test without the globstar, and with every child both below
      // and replacing the globstar.
      var s = [ pattern.slice(0, n).concat(pattern.slice(n + 1)) ]
      entries.forEach(function (e) {
        if (e.charAt(0) === "." && !this.dot) return
        // instead of the globstar
        s.push(pattern.slice(0, n).concat(e).concat(pattern.slice(n + 1)))
        // below the globstar
        s.push(pattern.slice(0, n).concat(e).concat(pattern.slice(n)))
      }, this)

      s = s.filter(function (pattern) {
        var key = gsKey(pattern)
        var seen = !this._globstars[key]
        this._globstars[key] = true
        return seen
      }, this)

      if (!s.length)
        return cb()

      // now asyncForEach over this
      var l = s.length
      , errState = null
      s.forEach(function (gsPattern) {
        this._process(gsPattern, depth + 1, index, function (er) {
          if (errState) return
          if (er) return cb(errState = er)
          if (--l <= 0) return cb()
        })
      }, this)

      return
    }

    // not a globstar
    // It will only match dot entries if it starts with a dot, or if
    // dot is set.  Stuff like @(.foo|.bar) isn't allowed.
    var pn = pattern[n]
    var rawGlob = pattern[n]._glob
    , dotOk = this.dot || rawGlob.charAt(0) === "."

    entries = entries.filter(function (e) {
      return (e.charAt(0) !== "." || dotOk) &&
             e.match(pattern[n])
    })

    // If n === pattern.length - 1, then there's no need for the extra stat
    // *unless* the user has specified "mark" or "stat" explicitly.
    // We know that they exist, since the readdir returned them.
    if (n === pattern.length - 1 &&
        !this.mark &&
        !this.stat) {
      entries.forEach(function (e) {
        if (prefix) {
          if (prefix !== "/") e = prefix + "/" + e
          else e = prefix + e
        }
        if (e.charAt(0) === "/" && !this.nomount) {
          e = path.join(this.root, e)
        }

        if (process.platform === "win32")
          e = e.replace(/\\/g, "/")

        this.matches[index] = this.matches[index] || {}
        this.matches[index][e] = true
        this.emitMatch(e)
      }, this)
      return cb.call(this)
    }


    // now test all the remaining entries as stand-ins for that part
    // of the pattern.
    var l = entries.length
    , errState = null
    if (l === 0) return cb() // no matches possible
    entries.forEach(function (e) {
      var p = pattern.slice(0, n).concat(e).concat(pattern.slice(n + 1))
      this._process(p, depth + 1, index, function (er) {
        if (errState) return
        if (er) return cb(errState = er)
        if (--l === 0) return cb.call(this)
      })
    }, this)
  })

}

function gsKey (pattern) {
  return '**' + pattern.map(function (p) {
    return (p === minimatch.GLOBSTAR) ? '**' : (''+p)
  }).join('/')
}

Glob.prototype._stat = function (f, cb) {
  assert(this instanceof Glob)
  var abs = f
  if (f.charAt(0) === "/") {
    abs = path.join(this.root, f)
  } else if (this.changedCwd) {
    abs = path.resolve(this.cwd, f)
  }

  if (f.length > this.maxLength) {
    var er = new Error("Path name too long")
    er.code = "ENAMETOOLONG"
    er.path = f
    return this._afterStat(f, abs, cb, er)
  }

  this.log('stat', [this.cwd, f, '=', abs])

  if (!this.stat && this.cache.hasOwnProperty(f)) {
    var exists = this.cache[f]
    , isDir = exists && (Array.isArray(exists) || exists === 2)
    if (this.sync) return cb.call(this, !!exists, isDir)
    return process.nextTick(cb.bind(this, !!exists, isDir))
  }

  var stat = this.statCache[abs]
  if (this.sync || stat) {
    var er
    try {
      stat = fs.statSync(abs)
    } catch (e) {
      er = e
    }
    this._afterStat(f, abs, cb, er, stat)
  } else {
    fs.stat(abs, this._afterStat.bind(this, f, abs, cb))
  }
}

Glob.prototype._afterStat = function (f, abs, cb, er, stat) {
  var exists
  assert(this instanceof Glob)

  if (abs.slice(-1) === "/" && stat && !stat.isDirectory()) {
    this.log("should be ENOTDIR, fake it")

    er = new Error("ENOTDIR, not a directory '" + abs + "'")
    er.path = abs
    er.code = "ENOTDIR"
    stat = null
  }

  var emit = !this.statCache[abs]
  this.statCache[abs] = stat

  if (er || !stat) {
    exists = false
  } else {
    exists = stat.isDirectory() ? 2 : 1
    if (emit)
      this.emit('stat', f, stat)
  }
  this.cache[f] = this.cache[f] || exists
  cb.call(this, !!exists, exists === 2)
}

Glob.prototype._readdir = function (f, cb) {
  assert(this instanceof Glob)
  var abs = f
  if (f.charAt(0) === "/") {
    abs = path.join(this.root, f)
  } else if (isAbsolute(f)) {
    abs = f
  } else if (this.changedCwd) {
    abs = path.resolve(this.cwd, f)
  }

  if (f.length > this.maxLength) {
    var er = new Error("Path name too long")
    er.code = "ENAMETOOLONG"
    er.path = f
    return this._afterReaddir(f, abs, cb, er)
  }

  this.log('readdir', [this.cwd, f, abs])
  if (this.cache.hasOwnProperty(f)) {
    var c = this.cache[f]
    if (Array.isArray(c)) {
      if (this.sync) return cb.call(this, null, c)
      return process.nextTick(cb.bind(this, null, c))
    }

    if (!c || c === 1) {
      // either ENOENT or ENOTDIR
      var code = c ? "ENOTDIR" : "ENOENT"
      , er = new Error((c ? "Not a directory" : "Not found") + ": " + f)
      er.path = f
      er.code = code
      this.log(f, er)
      if (this.sync) return cb.call(this, er)
      return process.nextTick(cb.bind(this, er))
    }

    // at this point, c === 2, meaning it's a dir, but we haven't
    // had to read it yet, or c === true, meaning it's *something*
    // but we don't have any idea what.  Need to read it, either way.
  }

  if (this.sync) {
    var er, entries
    try {
      entries = fs.readdirSync(abs)
    } catch (e) {
      er = e
    }
    return this._afterReaddir(f, abs, cb, er, entries)
  }

  fs.readdir(abs, this._afterReaddir.bind(this, f, abs, cb))
}

Glob.prototype._afterReaddir = function (f, abs, cb, er, entries) {
  assert(this instanceof Glob)
  if (entries && !er) {
    this.cache[f] = entries
    // if we haven't asked to stat everything for suresies, then just
    // assume that everything in there exists, so we can avoid
    // having to stat it a second time.  This also gets us one step
    // further into ELOOP territory.
    if (!this.mark && !this.stat) {
      entries.forEach(function (e) {
        if (f === "/") e = f + e
        else e = f + "/" + e
        this.cache[e] = true
      }, this)
    }

    return cb.call(this, er, entries)
  }

  // now handle errors, and cache the information
  if (er) switch (er.code) {
    case "ENOTDIR": // totally normal. means it *does* exist.
      this.cache[f] = 1
      return cb.call(this, er)
    case "ENOENT": // not terribly unusual
    case "ELOOP":
    case "ENAMETOOLONG":
    case "UNKNOWN":
      this.cache[f] = false
      return cb.call(this, er)
    default: // some unusual error.  Treat as failure.
      this.cache[f] = false
      if (this.strict) this.emit("error", er)
      if (!this.silent) console.error("glob error", er)
      return cb.call(this, er)
  }
}

var isAbsolute = process.platform === "win32" ? absWin : absUnix

function absWin (p) {
  if (absUnix(p)) return true
  // pull off the device/UNC bit from a windows path.
  // from node's lib/path.js
  var splitDeviceRe =
      /^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?([\\\/])?([\s\S]*?)$/
    , result = splitDeviceRe.exec(p)
    , device = result[1] || ''
    , isUnc = device && device.charAt(1) !== ':'
    , isAbsolute = !!result[2] || isUnc // UNC paths are always absolute

  return isAbsolute
}

function absUnix (p) {
  return p.charAt(0) === "/" || p === ""
}
 at SyntaxError: Unexpected token (46:2)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/generator-admo/node_modules/generator-admo/app/index.js. Coverage (Term): 10% Coverage (LOC): 15%
*- File /root/Targets/generator-admo/node_modules/yeoman-generator/main.js. Coverage (Term): 30% Coverage (LOC): 36%
*- File /root/Targets/generator-admo/node_modules/yeoman-generator/lib/util/log.js. Coverage (Term): 14% Coverage (LOC): 24%
*- File /root/Targets/generator-admo/node_modules/yeoman-generator/node_modules/lodash/dist/lodash.js. Coverage (Term): 20% Coverage (LOC): 29%
*- File /root/Targets/generator-admo/node_modules/text-table/index.js. Coverage (Term): 5% Coverage (LOC): 11%
*- File /root/Targets/generator-admo/node_modules/chalk/chalk.js. Coverage (Term): 57% Coverage (LOC): 68%
*- File /root/Targets/generator-admo/node_modules/ansi-styles/ansi-styles.js. Coverage (Term): 99% Coverage (LOC): 100%
*- File /root/Targets/generator-admo/node_modules/has-color/index.js. Coverage (Term): 52% Coverage (LOC): 44%
*- File /root/Targets/generator-admo/node_modules/yeoman-generator/lib/env.js. Coverage (Term): 3% Coverage (LOC): 3%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
