/root/Targets/slides-now-node
└─┬ slides-now-node@0.0.5 
  ├── check-types@1.1.1 
  └── opener@1.3.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/slides-now-node/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0822 took 4.8537s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node

if (process.argv.length < 3) {
	console.error('missing .md filename');
	process.exit(-1);
}

var mdFilename = process.argv[2];
var mdName = /\.md|\.markdown|\.txt|\.md.txt$/i;
if (!mdName.test(mdFilename)) {
	console.error('invalid markdown filename', mdFilename);
	console.error('should end with .md');
	process.exit(-2);
}

var fs = require('fs');
var path = require('path');
var launcher = require('opener');
var http = require('http');
var check = require('check-types');

var content = fs.readFileSync(mdFilename);
var start = fs.readFileSync(path.join(__dirname, 'template/head.html'));
var end = fs.readFileSync(path.join(__dirname, 'template/body.html'));

var page = start + '\n' + content + '\n' + end;

function seconds(n) {
	check.verify.positiveNumber(n, 'expected number of seconds, not ' + n);
	return n * 1000;
}

var port = 3700;
var exitAfter = seconds(5);

function hostPage(page) {
	var server = http.createServer(function (req, res) {
		console.log(req.url);
		if (req.url === '/') {
			res.end(page);
		} else {
			var full = path.join(__dirname, 'lib', req.url);
			if (!fs.existsSync(full)) {
				full = path.join(process.cwd(), req.url);
			}
			res.end(fs.readFileSync(full));

			if (req.url === '/slides-now.js') {
				console.log('served application, exitting in', exitAfter, 'seconds');
				setTimeout(function () {
					process.exit(0);
				}, exitAfter);
			}
		}
	});

	server.listen(port, function () {
		console.log('listening at port', port);
		launcher('http://localhost:' + port);
	});
}

hostPage(page);
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
