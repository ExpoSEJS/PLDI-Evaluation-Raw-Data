/root/Targets/dikio
└─┬ dikio@0.0.0 
  ├─┬ check-update@0.0.8 
  │ ├── colors@1.1.2 
  │ ├─┬ got@2.9.2 
  │ │ ├─┬ duplexify@3.5.1 
  │ │ │ ├─┬ end-of-stream@1.4.0 
  │ │ │ │ └─┬ once@1.4.0 
  │ │ │ │   └── wrappy@1.0.2 
  │ │ │ ├── inherits@2.0.3 
  │ │ │ ├─┬ readable-stream@2.3.3 
  │ │ │ │ ├── core-util-is@1.0.2 
  │ │ │ │ ├── isarray@1.0.0 
  │ │ │ │ ├── process-nextick-args@1.0.7 
  │ │ │ │ ├── string_decoder@1.0.3 
  │ │ │ │ └── util-deprecate@1.0.2 
  │ │ │ └── stream-shift@1.0.0 
  │ │ ├── infinity-agent@2.0.3 
  │ │ ├── is-stream@1.1.0 
  │ │ ├── lowercase-keys@1.0.0 
  │ │ ├── nested-error-stacks@1.0.2 
  │ │ ├── object-assign@2.1.1 
  │ │ ├── prepend-http@1.0.4 
  │ │ ├── read-all-stream@2.2.0 
  │ │ └── timed-out@2.0.0 
  │ └─┬ rc@0.5.5 
  │   ├── deep-extend@0.2.11 
  │   ├── ini@1.3.4 
  │   ├── minimist@0.0.10 
  │   └── strip-json-comments@0.1.3 
  ├── commander@2.11.0 
  ├── debounce@1.0.2 
  ├── env-port@0.0.0 
  ├─┬ express@4.16.1 
  │ ├─┬ accepts@1.3.4 
  │ │ ├─┬ mime-types@2.1.17 
  │ │ │ └── mime-db@1.30.0 
  │ │ └── negotiator@0.6.1 
  │ ├── array-flatten@1.1.1 
  │ ├─┬ body-parser@1.18.2 
  │ │ ├── bytes@3.0.0 
  │ │ ├─┬ http-errors@1.6.2 
  │ │ │ └── setprototypeof@1.0.3 
  │ │ ├── iconv-lite@0.4.19 
  │ │ └── raw-body@2.3.2 
  │ ├── content-disposition@0.5.2 
  │ ├── content-type@1.0.4 
  │ ├── cookie@0.3.1 
  │ ├── cookie-signature@1.0.6 
  │ ├─┬ debug@2.6.9 
  │ │ └── ms@2.0.0 
  │ ├── depd@1.1.1 
  │ ├── encodeurl@1.0.1 
  │ ├── escape-html@1.0.3 
  │ ├── etag@1.8.1 
  │ ├─┬ finalhandler@1.1.0 
  │ │ └── unpipe@1.0.0 
  │ ├── fresh@0.5.2 
  │ ├── merge-descriptors@1.0.1 
  │ ├── methods@1.1.2 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── parseurl@1.3.2 
  │ ├── path-to-regexp@0.1.7 
  │ ├─┬ proxy-addr@2.0.2 
  │ │ ├── forwarded@0.1.2 
  │ │ └── ipaddr.js@1.5.2 
  │ ├── qs@6.5.1 
  │ ├── range-parser@1.2.0 
  │ ├── safe-buffer@5.1.1 
  │ ├─┬ send@0.16.1 
  │ │ ├── destroy@1.0.4 
  │ │ └── mime@1.4.1 
  │ ├── setprototypeof@1.1.0 
  │ ├── statuses@1.3.1 
  │ ├─┬ type-is@1.6.15 
  │ │ └── media-typer@0.3.0 
  │ ├── utils-merge@1.0.1 
  │ └── vary@1.1.2 
  ├─┬ iso-639-1@1.3.0 
  │ ├─┬ babel-polyfill@6.26.0 
  │ │ ├── core-js@2.5.1 
  │ │ └── regenerator-runtime@0.10.5 
  │ └─┬ babel-runtime@6.26.0 
  │   └── regenerator-runtime@0.11.0 
  ├── jquery@3.2.1 
  ├── languagedetect@1.1.1 
  ├── notie@3.9.5 
  ├── serve-static@1.13.1 
  └─┬ server-welcome@0.0.0 
    └─┬ internal-ip@1.2.0 
      └─┬ meow@3.7.0 
        ├─┬ camelcase-keys@2.1.0 
        │ └── camelcase@2.1.1 
        ├── decamelize@1.2.0 
        ├─┬ loud-rejection@1.6.0 
        │ ├─┬ currently-unhandled@0.4.1 
        │ │ └── array-find-index@1.0.2 
        │ └── signal-exit@3.0.2 
        ├── map-obj@1.0.1 
        ├── minimist@1.2.0 
        ├─┬ normalize-package-data@2.4.0 
        │ ├── hosted-git-info@2.5.0 
        │ ├─┬ is-builtin-module@1.0.0 
        │ │ └── builtin-modules@1.1.1 
        │ ├── semver@5.4.1 
        │ └─┬ validate-npm-package-license@3.0.1 
        │   ├─┬ spdx-correct@1.0.2 
        │   │ └── spdx-license-ids@1.2.2 
        │   └── spdx-expression-parse@1.0.4 
        ├── object-assign@4.1.1 
        ├─┬ read-pkg-up@1.0.1 
        │ ├─┬ find-up@1.1.2 
        │ │ ├── path-exists@2.1.0 
        │ │ └─┬ pinkie-promise@2.0.1 
        │ │   └── pinkie@2.0.4 
        │ └─┬ read-pkg@1.1.0 
        │   ├─┬ load-json-file@1.1.0 
        │   │ ├── graceful-fs@4.1.11 
        │   │ ├─┬ parse-json@2.2.0 
        │   │ │ └─┬ error-ex@1.3.1 
        │   │ │   └── is-arrayish@0.2.1 
        │   │ ├── pify@2.3.0 
        │   │ └─┬ strip-bom@2.0.0 
        │   │   └── is-utf8@0.2.1 
        │   └── path-type@1.1.0 
        ├─┬ redent@1.0.0 
        │ ├─┬ indent-string@2.1.0 
        │ │ └─┬ repeating@2.0.1 
        │ │   └─┬ is-finite@1.0.2 
        │ │     └── number-is-nan@1.0.1 
        │ └─┬ strip-indent@1.0.1 
        │   └── get-stdin@4.0.1 
        └── trim-newlines@1.0.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/dikio/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0489 took 4.1124s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node
'use strict';
var app = require('express')(),
    serveStatic = require('serve-static'),
    path = require('path'),
    program = require('commander'),
    fs = require('fs'),
    join = require('path').join,
    pkg = require('./package.json'),
    port = require('env-port')('8882'),
    iso639 = require('iso-639-1'),
    languageDetector = new (require('languagedetect'))();

program
    .version(pkg.version)
    .option('-p, --port [number]', 'specified the port')
    .parse(process.argv);

if (!isNaN(parseFloat(program.port)) && isFinite(program.port)) {
  port = program.port;
}

app.get('/api/languages/:langs/:word', function (req, res) {
  var langs = languageDetector.detect(req.params.word);
  var allowed = req.params.langs.split('-');
  var origins = [];
  langs.forEach(function (value, key) {
    if (allowed.indexOf(value[0]) > -1) origins.push({ name: value[0], code: iso639.getCode(value[0]) });
  });
  res.json(origins);
});

app.get('/api/language/:langs', function (req, res) {
  try {
    if (req.params.langs.length <= 2) {
      return res.json({ name: iso639.getName(req.params.langs).toLowerCase(), code: req.params.langs });
    }
    res.json({ name: req.params.langs, code: iso639.getCode(req.params.langs) });
  } catch (e) {
    res.status(400);
    res.json({ errorMessage: 'Bad request: cannot get language\'s informations.' })
  }
});

app.get('/api/detected-languages', function (req, res) {
  res.json(languageDetector.getLanguages());
});


app.disable('x-powered-by');

app.use(serveStatic(__dirname + '/dist'));

app.listen(port, function () {
  console.log(require('server-welcome')(port, 'Dikio'));
  require('check-update')({
    packageName: pkg.name,
    packageVersion: pkg.version,
    isCLI: true
  }, function (err, latestVersion, defaultMessage) {
    if (!err) {
      console.log(defaultMessage);
    }
  });
});

module.exports = app;
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
