/root/Targets/cpack
└── cpack@1.0.16 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/cpack/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0319 took 2.7943s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node

var childProcess = require('child_process');
var path = require('path');
var notifier = require('node-notifier');
var pkg = require('./package.json');

var args = process.argv.slice(2);

var cmd = args[0] || 'default';
var project = process.cwd();

// TODO 命令，help
if (cmd === '-v' || cmd === '--version' || cmd === '--versions') {
    console.log(pkg.version);
    process.exit(1);
} else if (!['', 'default', 'debug', 'build', 'build-debug', 'hybrid', 'hybrid-debug'].includes(cmd)) {
    console.error('command "' + cmd +  '" not found');
    process.exit(1);
}

childProcess.exec('grunt ' + cmd + ' --project=' + project + ' --domain=' + (args[1] || '') + ' --optionOfStaticDir=' + (args[2] || ''), {
    cwd: __dirname
}, function(error, stdout, stderr) {
    if (error !== null) {
        console.error('exec error: ' + error);
        console.error(stdout);
        notify(project + ': Pack Failed: ' + JSON.stringify(error));
        process.exit(1);
    } else {
        notify(project + ': Pack Success');
    }
});

function notify(msg) {
    notifier.notify({
        title: 'Pack',
        icon: path.join(__dirname, 'resource/cjia.png'),
        message: msg
    });
}
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
