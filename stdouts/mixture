/root/Targets/mixture
└── mixture@0.1.3 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/mixture/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 34% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0264 took 2.1727s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (11:4) on program /*!
 * mixture
 * Copyright(c) 2011 Daniel D. Shaw <dshaw@dshaw.com>
 * MIT Licensed
 */

/**
 * Module dependencies.
 */

var assert = require('assert')
  , util = require('util')
  , EventEmitter = require('events').EventEmitter
  , Task = require('./task')
  , noop = function () {}
  , debug = noop

/**
 * Exports
 */

exports.mix = Mix
exports.Task = Task

/**
 * Mix Master
 */

function Mix (name) {
  if (!(this instanceof Mix)) return new Mix(name)

  this.name = name
  this.ids = 0
  this.tasks = {}
  this.workers = []

  this.init()
}

/**
 * Inherit EventEmitter
 */

util.inherits(Mix, EventEmitter)

/**
 * Initialize Mix
 */

Mix.prototype.init = function () {
  var self = this

  this.on('exit', function(e) {
    self.eachWorker(function(worker) {
      debug('kill worker ' + worker.pid)
      worker.kill()
    })
  })

  this.on('death', function(worker, task) {
    debug('Task ' + task.name + ' worker ' + worker.pid + ' died')
  })

  process.on('uncaughtException', function(e) {
    self.eachWorker(function(worker) {
      debug('kill worker ' + worker.pid)
      worker.kill()
    })

    console.error('Exception in mix master process: ' + e.message + '\n' + e.stack)
    process.exit(1)
  })
}

/**
 * Enable debugging.
 * - pass falsey to disable.
 *
 * @param enable
 */

Mix.prototype.debug = function (enable) {
  debug = (typeof enable === 'undefined' || enable) ? console.log : noop;
}

/**
 * Task mix
 *
 * @param name
 * @return Task
 * @api public
 */

Mix.prototype.task = function (name, options) {
  if (!this.tasks[name]) {
    options || (options = {})
    options.master = this
    options.name = this.name
    this.tasks[name] = new Task(options)
  }
  return this.tasks[name]
}

/**
 * Send message to all
 *
 * @param task (optional)
 * @param cb
 */

Mix.prototype.eachWorker = function (task, cb) {
  var workers = null

  if (typeof cb === 'undefined') {
    cb = task
    workers = this.workers
  } else {
    workers = this.tasks[task].workers
  }

  for (var id in workers) {
    if (workers[id]) {
      cb(workers[id])
    }
  }
}

/**
 * Handle Worker Message
 *
 * @param task
 * @param worker
 * @param message
 */

Mix.prototype.onWorkerMessage = function (task, worker, message) {
  debug(task.name, worker.id, message)
}
 at SyntaxError: Unexpected token (11:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/mixture/node_modules/mixture/index.js. Coverage (Term): 57% Coverage (LOC): 100%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
