/root/Targets/vue-example
└─┬ vue-example@1.21.1 
  ├─┬ express@5.0.0-alpha.5 
  │ ├─┬ accepts@1.3.4 
  │ │ ├─┬ mime-types@2.1.17 
  │ │ │ └── mime-db@1.30.0 
  │ │ └── negotiator@0.6.1 
  │ ├── array-flatten@2.1.1 
  │ ├── content-disposition@0.5.2 
  │ ├── content-type@1.0.4 
  │ ├── cookie@0.3.1 
  │ ├── cookie-signature@1.0.6 
  │ ├─┬ debug@2.6.1 
  │ │ └── ms@0.7.2 
  │ ├── depd@1.1.1 
  │ ├── encodeurl@1.0.1 
  │ ├── escape-html@1.0.3 
  │ ├── etag@1.8.1 
  │ ├─┬ finalhandler@1.0.5 
  │ │ ├─┬ debug@2.6.8 
  │ │ │ └── ms@2.0.0 
  │ │ └── unpipe@1.0.0 
  │ ├── fresh@0.5.0 
  │ ├── merge-descriptors@1.0.1 
  │ ├── methods@1.1.2 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── parseurl@1.3.2 
  │ ├── path-is-absolute@1.0.1 
  │ ├── path-to-regexp@0.1.7 
  │ ├─┬ proxy-addr@1.1.5 
  │ │ ├── forwarded@0.1.2 
  │ │ └── ipaddr.js@1.4.0 
  │ ├── qs@6.4.0 
  │ ├── range-parser@1.2.0 
  │ ├─┬ router@1.3.1 
  │ │ └─┬ debug@2.6.8 
  │ │   └── ms@2.0.0 
  │ ├─┬ send@0.15.1 
  │ │ ├── destroy@1.0.4 
  │ │ ├─┬ http-errors@1.6.2 
  │ │ │ └── inherits@2.0.3 
  │ │ └── mime@1.3.4 
  │ ├── serve-static@1.12.1 
  │ ├── setprototypeof@1.0.3 
  │ ├── statuses@1.3.1 
  │ ├─┬ type-is@1.6.15 
  │ │ └── media-typer@0.3.0 
  │ ├── utils-merge@1.0.0 
  │ └── vary@1.1.1 
  ├── express-vue-builder@2.15.2 
  ├── icu4c-data@0.58.2 
  ├─┬ rawmodel@1.9.1 
  │ ├── handleable@0.20.1 
  │ ├── lodash.isequal@4.5.0 
  │ ├── lodash.merge@4.6.0 
  │ ├── typeable@2.0.1 
  │ └── validatable@0.24.1 
  ├─┬ translated@0.3.0 
  │ ├─┬ intl-messageformat@1.3.0 
  │ │ └── intl-messageformat-parser@1.2.0 
  │ └── intl-relativeformat@1.3.0 
  ├── vue@2.4.4 
  ├─┬ vue-builder@1.7.2 
  │ └─┬ memory-fs@0.4.1 
  │   ├─┬ errno@0.1.4 
  │   │ └── prr@0.0.0 
  │   └─┬ readable-stream@2.3.3 
  │     ├── core-util-is@1.0.2 
  │     ├── isarray@1.0.0 
  │     ├── process-nextick-args@1.0.7 
  │     ├── safe-buffer@5.1.1 
  │     ├── string_decoder@1.0.3 
  │     └── util-deprecate@1.0.2 
  ├─┬ vue-rawmodel@1.2.2 
  │ └─┬ promised-debounce@0.4.2 
  │   └─┬ babel-runtime@6.18.0 
  │     ├── core-js@2.5.1 
  │     └── regenerator-runtime@0.9.6 
  ├── vue-router@2.7.0 
  ├─┬ vue-server-renderer@2.4.4 
  │ ├─┬ chalk@1.1.3 
  │ │ ├── ansi-styles@2.2.1 
  │ │ ├── escape-string-regexp@1.0.5 
  │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ └── ansi-regex@2.1.1 
  │ │ ├── strip-ansi@3.0.1 
  │ │ └── supports-color@2.0.0 
  │ ├── hash-sum@1.0.2 
  │ ├── he@1.1.1 
  │ ├─┬ lodash.template@4.4.0 
  │ │ ├── lodash._reinterpolate@3.0.0 
  │ │ └── lodash.templatesettings@4.1.0 
  │ ├── lodash.uniq@4.5.0 
  │ ├─┬ resolve@1.4.0 
  │ │ └── path-parse@1.0.5 
  │ ├── serialize-javascript@1.4.0 
  │ └── source-map@0.5.6 
  ├── vue-translated@0.3.0 
  └── vuex@2.4.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/vue-example/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0842 took 4.1947s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (24:8) on program const express = require('express');
const {publicServer, vueServer, appServer} = require('./middlewares/app');

/*
* HTTP server class.
*/

exports.Server = class Server {

  /*
  * Class constructor.
  */

  constructor (config) {
    this.config = config;
    this.app = null;
    this.server = null;
  }

  /*
  * Returns a promise which starts the server.
  */

  async listen () {
    if (this.server) return this;

    this.app = express();
    this.app.use(publicServer(this));
    this.app.use(vueServer(this));
    this.app.use(appServer(this));

    await new Promise((resolve) => {
      let {serverPort, serverHost} = this.config;
      this.server = this.app.listen(serverPort, serverHost, resolve);
    });
  }

  /*
  * Returns a promise which stops the server.
  */

  async close () {
    if (!this.server) return this;

    await new Promise((resolve) => {
      this.server.close(resolve);
    });
    this.server = null;
    this.app = null;
  }

}
 at SyntaxError: Unexpected token (24:8)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:28)
    at Parser.pp$3.parseMethod (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2071:10)
    at Parser.pp$1.parseClassMethod (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1137:25)
    at Parser.pp$1.parseClass (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1118:14)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1813:19)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/vue-example/node_modules/vue-example/src/index.js. Coverage (Term): 76% Coverage (LOC): 100%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
