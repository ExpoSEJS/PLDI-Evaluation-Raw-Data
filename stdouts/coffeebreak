
> phantomjs@1.9.20 install /root/Targets/coffeebreak/node_modules/phantomjs
> node install.js

PhantomJS not found on PATH
Downloading https://github.com/Medium/phantomjs/releases/download/v1.9.19/phantomjs-1.9.8-linux-x86_64.tar.bz2
Saving to /root/Targets/coffeebreak/node_modules/phantomjs/phantomjs/phantomjs-1.9.8-linux-x86_64.tar.bz2
Receiving...

Received 12854K total.
Extracting tar contents (via spawned process)
Removing /root/Targets/coffeebreak/node_modules/phantomjs/lib/phantom
Copying extracted folder /root/Targets/coffeebreak/node_modules/phantomjs/phantomjs/phantomjs-1.9.8-linux-x86_64.tar.bz2-extract-1505970837116/phantomjs-1.9.8-linux-x86_64 -> /root/Targets/coffeebreak/node_modules/phantomjs/lib/phantom
Writing location.js file
Done. Phantomjs binary available at /root/Targets/coffeebreak/node_modules/phantomjs/lib/phantom/bin/phantomjs
/root/Targets/coffeebreak
└─┬ coffeebreak@0.3.2 
  ├── async@0.9.2 
  ├── coffeebreak-phantomjs-runner@0.0.1 
  ├── commander@2.6.0 
  ├─┬ express@4.11.2 
  │ ├─┬ accepts@1.2.13 
  │ │ ├─┬ mime-types@2.1.17 
  │ │ │ └── mime-db@1.30.0 
  │ │ └── negotiator@0.5.3 
  │ ├── content-disposition@0.5.0 
  │ ├── cookie@0.1.2 
  │ ├── cookie-signature@1.0.5 
  │ ├─┬ debug@2.1.3 
  │ │ └── ms@0.7.0 
  │ ├── depd@1.0.1 
  │ ├── escape-html@1.0.1 
  │ ├─┬ etag@1.5.1 
  │ │ └── crc@3.2.1 
  │ ├─┬ finalhandler@0.3.3 
  │ │ └─┬ debug@2.1.3 
  │ │   └── ms@0.7.0 
  │ ├── fresh@0.2.4 
  │ ├── media-typer@0.3.0 
  │ ├── merge-descriptors@0.0.2 
  │ ├── methods@1.1.2 
  │ ├─┬ on-finished@2.2.1 
  │ │ └── ee-first@1.1.0 
  │ ├── parseurl@1.3.2 
  │ ├── path-to-regexp@0.1.3 
  │ ├─┬ proxy-addr@1.0.10 
  │ │ ├── forwarded@0.1.2 
  │ │ └── ipaddr.js@1.0.5 
  │ ├── qs@2.3.3 
  │ ├── range-parser@1.0.3 
  │ ├─┬ send@0.11.1 
  │ │ ├── debug@2.1.3 
  │ │ ├── destroy@1.0.3 
  │ │ ├── mime@1.2.11 
  │ │ └── ms@0.7.0 
  │ ├── serve-static@1.8.1 
  │ ├─┬ type-is@1.5.7 
  │ │ └─┬ mime-types@2.0.14 
  │ │   └── mime-db@1.12.0 
  │ ├── utils-merge@1.0.0 
  │ └── vary@1.0.1 
  ├─┬ express-server@0.5.8 
  │ ├── async@1.5.2 
  │ ├─┬ express@4.15.4 
  │ │ ├─┬ accepts@1.3.4 
  │ │ │ └── negotiator@0.6.1 
  │ │ ├── array-flatten@1.1.1 
  │ │ ├── content-disposition@0.5.2 
  │ │ ├── content-type@1.0.4 
  │ │ ├── cookie@0.3.1 
  │ │ ├── cookie-signature@1.0.6 
  │ │ ├─┬ debug@2.6.8 
  │ │ │ └── ms@2.0.0 
  │ │ ├── depd@1.1.1 
  │ │ ├── encodeurl@1.0.1 
  │ │ ├── escape-html@1.0.3 
  │ │ ├── etag@1.8.1 
  │ │ ├─┬ finalhandler@1.0.5 
  │ │ │ └── unpipe@1.0.0 
  │ │ ├── fresh@0.5.0 
  │ │ ├── merge-descriptors@1.0.1 
  │ │ ├─┬ on-finished@2.3.0 
  │ │ │ └── ee-first@1.1.1 
  │ │ ├── path-to-regexp@0.1.7 
  │ │ ├─┬ proxy-addr@1.1.5 
  │ │ │ └── ipaddr.js@1.4.0 
  │ │ ├── qs@6.5.0 
  │ │ ├── range-parser@1.2.0 
  │ │ ├─┬ send@0.15.4 
  │ │ │ ├── destroy@1.0.4 
  │ │ │ ├─┬ http-errors@1.6.2 
  │ │ │ │ └── depd@1.1.1 
  │ │ │ └── mime@1.3.4 
  │ │ ├── serve-static@1.12.4 
  │ │ ├── setprototypeof@1.0.3 
  │ │ ├── statuses@1.3.1 
  │ │ ├── type-is@1.6.15 
  │ │ └── vary@1.1.1 
  │ ├─┬ express-session@1.15.5 
  │ │ ├── cookie@0.3.1 
  │ │ ├── cookie-signature@1.0.6 
  │ │ ├── crc@3.4.4 
  │ │ ├── debug@2.6.8 
  │ │ ├── depd@1.1.1 
  │ │ ├── on-headers@1.0.1 
  │ │ └─┬ uid-safe@2.1.5 
  │ │   └── random-bytes@1.0.0 
  │ ├─┬ glob@6.0.4 
  │ │ └── path-is-absolute@1.0.1 
  │ ├── UNMET PEER DEPENDENCY grunt@>=0.4.0
  │ ├─┬ grunt-release@0.13.1 
  │ │ ├── q@1.5.0 
  │ │ ├── semver@4.3.6 
  │ │ ├── shelljs@0.5.3 
  │ │ └─┬ superagent@1.8.5 
  │ │   ├── component-emitter@1.2.1 
  │ │   ├── cookiejar@2.0.6 
  │ │   ├── debug@2.6.8 
  │ │   ├── extend@3.0.0 
  │ │   ├─┬ form-data@1.0.0-rc3 
  │ │   │ └── async@1.5.2 
  │ │   ├── formidable@1.0.17 
  │ │   ├── mime@1.3.4 
  │ │   ├── qs@2.3.3 
  │ │   ├─┬ readable-stream@1.0.27-1 
  │ │   │ ├── core-util-is@1.0.2 
  │ │   │ ├── isarray@0.0.1 
  │ │   │ └── string_decoder@0.10.31 
  │ │   └── reduce-component@1.0.1 
  │ ├─┬ handlebars@4.0.10 
  │ │ ├── async@1.5.2 
  │ │ ├─┬ optimist@0.6.1 
  │ │ │ └── wordwrap@0.0.3 
  │ │ ├─┬ source-map@0.4.4 
  │ │ │ └── amdefine@1.0.1 
  │ │ └─┬ uglify-js@2.8.29 
  │ │   ├── source-map@0.5.7 
  │ │   ├── uglify-to-browserify@1.0.2 
  │ │   └─┬ yargs@3.10.0 
  │ │     ├── camelcase@1.2.1 
  │ │     ├─┬ cliui@2.1.0 
  │ │     │ ├─┬ center-align@0.1.3 
  │ │     │ │ ├─┬ align-text@0.1.4 
  │ │     │ │ │ ├─┬ kind-of@3.2.2 
  │ │     │ │ │ │ └── is-buffer@1.1.5 
  │ │     │ │ │ ├── longest@1.0.1 
  │ │     │ │ │ └── repeat-string@1.6.1 
  │ │     │ │ └── lazy-cache@1.0.4 
  │ │     │ ├── right-align@0.1.3 
  │ │     │ └── wordwrap@0.0.2 
  │ │     ├── decamelize@1.2.0 
  │ │     └── window-size@0.1.0 
  │ └─┬ hbs@4.0.1 
  │   ├── handlebars@4.0.5 
  │   └─┬ walk@2.3.9 
  │     └── foreachasync@3.0.0 
  ├─┬ glob@4.3.5 
  │ ├─┬ inflight@1.0.6 
  │ │ └── wrappy@1.0.2 
  │ ├── inherits@2.0.3 
  │ └── once@1.4.0 
  ├─┬ hbs@2.8.0 
  │ ├─┬ handlebars@2.0.0 
  │ │ ├── optimist@0.3.7 
  │ │ └─┬ uglify-js@2.3.6 
  │ │   ├── async@0.2.10 
  │ │   └── source-map@0.1.43 
  │ └─┬ walk@2.2.1 
  │   └─┬ forEachAsync@2.2.1 
  │     └── sequence@2.2.1 
  ├─┬ minimatch@2.0.10 
  │ └─┬ brace-expansion@1.1.8 
  │   ├── balanced-match@1.0.0 
  │   └── concat-map@0.0.1 
  ├─┬ mocha@2.1.0 
  │ ├── commander@2.3.0 
  │ ├─┬ debug@2.0.0 
  │ │ └── ms@0.6.2 
  │ ├── diff@1.0.8 
  │ ├── escape-string-regexp@1.0.2 
  │ ├─┬ glob@3.2.3 
  │ │ ├── graceful-fs@2.0.3 
  │ │ └─┬ minimatch@0.2.14 
  │ │   ├── lru-cache@2.7.3 
  │ │   └── sigmund@1.0.1 
  │ ├── growl@1.8.1 
  │ ├─┬ jade@0.26.3 
  │ │ ├── commander@0.6.1 
  │ │ └── mkdirp@0.3.0 
  │ └─┬ mkdirp@0.5.0 
  │   └── minimist@0.0.8 
  ├─┬ mocha-phantomjs@3.5.6 
  │ ├── commander@2.0.0 
  │ └─┬ mocha@1.20.1 
  │   ├── debug@3.0.1 
  │   ├── diff@1.0.7 
  │   ├─┬ glob@3.2.3 
  │   │ └── minimatch@0.2.14 
  │   ├── growl@1.7.0 
  │   └── mkdirp@0.3.5 
  ├─┬ node.extend@1.1.6 
  │ └── is@3.2.1 
  ├─┬ phantomjs@1.9.20 
  │ ├─┬ extract-zip@1.5.0 
  │ │ ├─┬ concat-stream@1.5.0 
  │ │ │ ├─┬ readable-stream@2.0.6 
  │ │ │ │ ├── isarray@1.0.0 
  │ │ │ │ ├── process-nextick-args@1.0.7 
  │ │ │ │ └── util-deprecate@1.0.2 
  │ │ │ └── typedarray@0.0.6 
  │ │ ├── debug@0.7.4 
  │ │ ├── mkdirp@0.5.0 
  │ │ └─┬ yauzl@2.4.1 
  │ │   └─┬ fd-slicer@1.0.1 
  │ │     └── pend@1.2.0 
  │ ├─┬ fs-extra@0.26.7 
  │ │ ├── graceful-fs@4.1.11 
  │ │ ├─┬ jsonfile@2.4.0 
  │ │ │ └── graceful-fs@4.1.11 
  │ │ ├─┬ klaw@1.3.1 
  │ │ │ └── graceful-fs@4.1.11 
  │ │ └─┬ rimraf@2.6.2 
  │ │   └─┬ glob@7.1.2 
  │ │     ├── fs.realpath@1.0.0 
  │ │     └── minimatch@3.0.4 
  │ ├─┬ hasha@2.2.0 
  │ │ ├── is-stream@1.1.0 
  │ │ └─┬ pinkie-promise@2.0.1 
  │ │   └── pinkie@2.0.4 
  │ ├── kew@0.7.0 
  │ ├── progress@1.1.8 
  │ ├─┬ request@2.67.0 
  │ │ ├── aws-sign2@0.6.0 
  │ │ ├── bl@1.0.3 
  │ │ ├── caseless@0.11.0 
  │ │ ├─┬ combined-stream@1.0.5 
  │ │ │ └── delayed-stream@1.0.0 
  │ │ ├── extend@3.0.1 
  │ │ ├── forever-agent@0.6.1 
  │ │ ├─┬ form-data@1.0.1 
  │ │ │ └─┬ async@2.5.0 
  │ │ │   └── lodash@4.17.4 
  │ │ ├─┬ har-validator@2.0.6 
  │ │ │ ├─┬ chalk@1.1.3 
  │ │ │ │ ├── ansi-styles@2.2.1 
  │ │ │ │ ├── escape-string-regexp@1.0.5 
  │ │ │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ │ │ └── ansi-regex@2.1.1 
  │ │ │ │ ├── strip-ansi@3.0.1 
  │ │ │ │ └── supports-color@2.0.0 
  │ │ │ ├── commander@2.11.0 
  │ │ │ └─┬ is-my-json-valid@2.16.1 
  │ │ │   ├── generate-function@2.0.0 
  │ │ │   ├─┬ generate-object-property@1.2.0 
  │ │ │   │ └── is-property@1.0.2 
  │ │ │   ├── jsonpointer@4.0.1 
  │ │ │   └── xtend@4.0.1 
  │ │ ├─┬ hawk@3.1.3 
  │ │ │ ├── boom@2.10.1 
  │ │ │ ├── cryptiles@2.0.5 
  │ │ │ ├── hoek@2.16.3 
  │ │ │ └── sntp@1.0.9 
  │ │ ├─┬ http-signature@1.1.1 
  │ │ │ ├── assert-plus@0.2.0 
  │ │ │ ├─┬ jsprim@1.4.1 
  │ │ │ │ ├── assert-plus@1.0.0 
  │ │ │ │ ├── extsprintf@1.3.0 
  │ │ │ │ ├── json-schema@0.2.3 
  │ │ │ │ └─┬ verror@1.10.0 
  │ │ │ │   └── assert-plus@1.0.0 
  │ │ │ └─┬ sshpk@1.13.1 
  │ │ │   ├── asn1@0.2.3 
  │ │ │   ├── assert-plus@1.0.0 
  │ │ │   ├── bcrypt-pbkdf@1.0.1 
  │ │ │   ├─┬ dashdash@1.14.1 
  │ │ │   │ └── assert-plus@1.0.0 
  │ │ │   ├── ecc-jsbn@0.1.1 
  │ │ │   ├─┬ getpass@0.1.7 
  │ │ │   │ └── assert-plus@1.0.0 
  │ │ │   ├── jsbn@0.1.1 
  │ │ │   └── tweetnacl@0.14.5 
  │ │ ├── is-typedarray@1.0.0 
  │ │ ├── isstream@0.1.2 
  │ │ ├── json-stringify-safe@5.0.1 
  │ │ ├── node-uuid@1.4.8 
  │ │ ├── oauth-sign@0.8.2 
  │ │ ├── qs@5.2.1 
  │ │ ├── stringstream@0.0.5 
  │ │ ├── tough-cookie@2.2.2 
  │ │ └── tunnel-agent@0.4.3 
  │ ├─┬ request-progress@2.0.1 
  │ │ └── throttleit@1.0.0 
  │ └─┬ which@1.2.14 
  │   └── isexe@2.0.0 
  ├─┬ sockjs@0.3.18 
  │ ├─┬ faye-websocket@0.10.0 
  │ │ └─┬ websocket-driver@0.7.0 
  │ │   ├── http-parser-js@0.4.6 
  │ │   └── websocket-extensions@0.1.2 
  │ └── uuid@2.0.3 
  └─┬ xqnode-logger@0.1.2 
    └─┬ winston@0.6.2 
      ├── async@0.1.22 
      ├── colors@0.6.2 
      ├── cycle@1.0.3 
      ├── eyes@0.1.8 
      ├── pkginfo@0.2.3 
      ├── request@2.9.203 
      └── stack-trace@0.0.10 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/coffeebreak/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 34% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0764 took 5.043s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Octal literal in strict mode (224:11) on program var fs = require('fs'),
	path = require('path'),
	EventEmitter = require('events').EventEmitter;

var ExpressServer = require('express-server'),
	extend = require('node.extend'),
	log = require('xqnode-logger'),
	minimatch = require('minimatch');

var ProjectScanner = require('./projectScanner'),
	pkg = require('../package.json'),
	TestRunner = require('./testRunner'),
	TaskRunner = require('./taskRunner'),
	Socket = require('./socket');

module.exports = function() {
	// "use strict";

	var CoffeeBreak = function() {
		extend(this, new EventEmitter());
	};

	CoffeeBreak.prototype.init = function(command, options) {
		command = command || 'default';
		options = options || {};

		this.port = options.port || 3005;
		this.onlyProject = options.project || null;
		this.diff = options.diff || null;
		this.disableServer = options.disableServer || false;
		this.__projectConfig = {};
		this.projects = {};
		this.codeCoverage = options.coverage || false;
		this.logLevel = options.logLevel || 'sys';

		this.taskRunner = new TaskRunner();
		this.taskRunner.coffeeBreak = this;
		this.taskRunner.loadTasks();

		this.testRunner = new TestRunner();
		this.testRunner.coffeeBreak = this;
		this.testRunner.taskRunner = this.taskRunner;

		this.socketPort = options.socketPort || 3362;
		this.socketHost = options.socketHost || '0.0.0.0';


		if (command === 'server') {
			this.initServer(function() {
				this.taskRunner.coreTasks();
				// this.scanProject(function(err, conf) {});
			}.bind(this));
		}
		else if(command === 'ci') {
			this.initServer(function() {
				this.startCI();
			}.bind(this));
		}
		else if(command === 'start') {
			this.start();


			process.on('SIGINT', function() {
				process.exit();
			});
		}
		else if (command === 'default') {
			this.initServer(function() {
				this.start();
			}.bind(this));
		}
		else {
			this.printStatus();
		}
	};

	/**
	 * Initialize Express and Socket server
	 *
	 * @private
	 */
	CoffeeBreak.prototype.initServer = function(callback) {
		this.expressServer = new ExpressServer({
			name: 'CoffeeBreak Server',
			baseDir: path.join(__dirname,'..'),
			port: parseInt(this.port),
			logLevel: this.logLevel
		});

		this.expressServer.start({
			disableServer: this.disableServer
		}, function() {
			this.app = this.expressServer.app;
			this.socket = new Socket({
				port: parseInt(this.socketPort),
				host: this.socketHost
			});
			this.socket.start();
			this.taskRunner.socket = this.socket;

			this.emit('ready');
			log.sys('Server started successful');
			
			callback(this);
		}.bind(this));

		process.on('SIGINT', function() {
			this.socket.stop();
			this.expressServer.stop();
			process.exit();
		}.bind(this));
	};

	/**
	 * Start coffeebreak
	 *
	 * @method start
	 */
	CoffeeBreak.prototype.start = function() {
		this.scanProject(function() {
			this.wachEnabled = true;
			if (this.wachEnabled) {
				process.stdin.resume();
				this.watch();
				this.on('file.changed', function(file, projectName) {
					this.runTests(projectName);
				}.bind(this));

				this.on('stop', function() {
					process.stdin.pause();
				});
			}

			this.runTests();
		}.bind(this));
	};

	/**
	 * Start coffeebreak
	 *
	 * @method start
	 */
	CoffeeBreak.prototype.startCI = function() {
		this.scanProject(function(err, conf) {
			this.runTests(function(err, status) {
				this.stop();

				var exitCode = err ? 1 : status ? 0 : 1;
				process.exit(exitCode);
			}.bind(this));
		}.bind(this));
	};

	CoffeeBreak.prototype.stop = function() {
		this.socket.stop();
		this.expressServer.stop();
	};

	CoffeeBreak.prototype.runTests = function(projectName, callback) {
		if (typeof projectName === 'function') {
			callback = projectName;
			projectName = null;
		}

		log.sys('New test session');
		this.projects = {};
		this.projects = extend(this.projects, this.__projectConfig);

		if (this.__projectConfig === this.projects) {
			log.warn('Config isn\'t a copy in CoffeBreak.runTests');
		}

		var conf;
		if (projectName) {
			conf = this.projects[projectName];
			this.testRunner.runOne(conf, function(err, result) {
				if (typeof callback === 'function') {
					callback(err, result);
				}
			});
		}
		else {
			conf = this.projects;
			this.testRunner.run(conf, function(err, result) {
				if (typeof callback === 'function') {
					callback(err, result);
				}
			});
		}
	};

	/**
	 * Get public CoffeBreak configuration
	 *
	 * @method getPublicConf
	 * @return {Object} Public project configuration
	 */
	CoffeeBreak.prototype.getPublicConf = function() {
		var conf = {
			projects: []
		};

		for (var p in this.projects) {
			conf.projects.push({
				project: this.projects[p].project,
				dirName: this.projects[p].dirName,
				status: this.projects[p].status
			});
		}

		return conf;
	};

	/**
	 * Search files and configurations
	 *
	 * @method scanProject
	 * @param {Function} callback Callback function
	 */
	CoffeeBreak.prototype.scanProject = function(callback) {
		var projectScanner = new ProjectScanner(),
			dir = process.cwd();

		log.sys('\033[38;5;220mScan dir for projects ...\033[m', dir);
		var start = Date.now();
		projectScanner.onlyProject = this.onlyProject;
		projectScanner.scan(dir, function(err, projectConf) {
			this.__projectConfig = projectScanner.projects;
			this.projects = extend({}, this.__projectConfig);
			this.files = projectScanner.files;

			log.sys('\033[38;5;220m' + Object.keys(this.__projectConfig).length + ' projects found in ' + (Date.now() - start) + 'ms!\033[m');
			
			callback(null, this);

		}.bind(this));
	};

	/**
	 * Enable file watch
	 *
	 * @method watch
	 * @param {Function} callback Callback function
	 */
	CoffeeBreak.prototype.watch = function(callback) {
		var addWatch = function(file) {
			var projectName = project.project;

			if (minimatch(file, project.watchIgnore)) {
				log.dev('File is in watchIgnore: ' + file + ' in project:' + project.project);
				return false;
			}

			if (project.watch.indexOf(file) !== -1) {
				log.dev('File has allready a watcher: ' + file + ' in project:' + project.project);
				return;
			}
			
			project.watch.push(file);
			file = path.join(project.cwd, file);
			log.dev('Watch file for changes: ' + file + ' in project:' + project.project);

			var options = {
				interval: 250
			};

			fs.watchFile(file, options, function(curr, prev) {
				if (curr.mtime > prev.mtime) {
					log.sys('File was changed: ' + file + ' of project ' + projectName);
					this.emit('file.changed', file, projectName);
				}
			}.bind(this));
		};
		
		for (var p in this.projects) {
			var project = this.projects[p];
			var watchFiles = project.watch || project.files;
			project.watch = [];
			watchFiles.forEach(addWatch.bind(this));
			project.tests.forEach(addWatch.bind(this));
		}
	};

	/**
	 * Print CoffeeBreak status
	 *
	 * @method printStatus
	 */
	CoffeeBreak.prototype.printStatus = function() {
		var bean = '';
		bean += '                              ____       __  __           _                    _    \n';
		bean += '   .⎼⎼⎼⎼⎼⎼⎼.                 / ___|___  / _|/ _| ___  ___| |__  _ __ ___  __ _| | __\n';
		bean += '  /    //   \\.⎼⎼⎼⎼⎼⎼.       | |   / _ \\| |_| |_ / _ \\/ _ \\ \'_ \\| \'__/ _ \\/ _` | |/ /\n';
		bean += ' /     ||  /    //   \\      | |__| (_) |  _|  _|  __/  __/ |_) | | |  __/ (_| |   < \n';
		bean += '▕      || /     ||    \\      \\____\\___/|_| |_|  \\___|\\___|_.__/|_|  \\___|\\__,_|_|\\_\\\n';
		bean += '▕      ||▕      ||    ▕            \n';
		bean += '▕      ||▕      ||    ▕      Version: ' + pkg.version + '    \n';
		bean += ' \\     ||▕      ||    ▕      \n';
		bean += '  \\    // \\     ||    /      \n';
		bean += '   `⎻⎻⎻⎻⎻⎻´\\   //    /          \n';
		bean += '            `⎻⎻⎻⎻⎻⎻⎻´              \n';
		bean += '\n';
		bean += '01000011·01101111·01100110·01100110·01100101·01100010·01110010·01100101·01100001·01101011\n';
		bean += ' \n';
		console.log(bean);

	};

	return CoffeeBreak;
}(); at SyntaxError: Octal literal in strict mode (224:11)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readEscapedChar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:3023:16)
    at Parser.pp$7.readString (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2935:23)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2724:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp$3.parseSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1738:37)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/coffeebreak/node_modules/coffeebreak/coffeebreak.js. Coverage (Term): 62% Coverage (LOC): 75%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
