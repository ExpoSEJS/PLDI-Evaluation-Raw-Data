
> buffertools@2.1.6 install /root/Targets/packard/node_modules/buffertools
> node-gyp rebuild

make: Entering directory '/root/Targets/packard/node_modules/buffertools/build'
  CXX(target) Release/obj.target/buffertools/buffertools.o
  SOLINK_MODULE(target) Release/obj.target/buffertools.node
  COPY Release/buffertools.node
make: Leaving directory '/root/Targets/packard/node_modules/buffertools/build'
/root/Targets/packard
└─┬ packard@3.2.2 
  ├─┬ @packard/model@3.0.2 
  │ └─┬ sanitize-filename@1.6.1 
  │   └─┬ truncate-utf8-bytes@1.0.2 
  │     └── utf8-byte-length@1.0.4 
  ├── aproba@1.2.0 
  ├─┬ babel-polyfill@6.26.0 
  │ ├─┬ babel-runtime@6.26.0 
  │ │ └── regenerator-runtime@0.11.0 
  │ ├── core-js@2.5.1 
  │ └── regenerator-runtime@0.10.5 
  ├── bluebird@3.5.0 
  ├── buffertools@2.1.6 
  ├─┬ flac-parser@0.3.1  (git://github.com/othiym23/flac-info-parser.git#5a24628ae4b0ac597691684e3836cc73b598a3c9)
  │ ├── debuglog@1.0.1 
  │ ├── lodash@2.4.2 
  │ ├─┬ stream-tokenizr@0.3.2 
  │ │ ├─┬ lodash.defaults@2.4.1 
  │ │ │ ├── lodash._objecttypes@2.4.1 
  │ │ │ └─┬ lodash.keys@2.4.1 
  │ │ │   ├── lodash._isnative@2.4.1 
  │ │ │   ├── lodash._shimkeys@2.4.1 
  │ │ │   └── lodash.isobject@2.4.1 
  │ │ ├─┬ readable-stream@1.0.34 
  │ │ │ ├── core-util-is@1.0.2 
  │ │ │ ├── isarray@0.0.1 
  │ │ │ └── string_decoder@0.10.31 
  │ │ └── simple-chainable@0.0.5 
  │ └─┬ vorbis-parser@0.3.2 
  │   └── lodash@4.17.4 
  ├─┬ glob@7.1.2 
  │ ├── fs.realpath@1.0.0 
  │ ├─┬ inflight@1.0.6 
  │ │ └── wrappy@1.0.2 
  │ ├── inherits@2.0.3 
  │ ├─┬ minimatch@3.0.4 
  │ │ └─┬ brace-expansion@1.1.8 
  │ │   ├── balanced-match@1.0.0 
  │ │   └── concat-map@0.0.1 
  │ ├── once@1.4.0 
  │ └── path-is-absolute@1.0.1 
  ├── graceful-fs@4.1.11 
  ├── ini@1.3.4 
  ├── knapsack-js@1.0.2 
  ├─┬ mkdirp@0.5.1 
  │ └── minimist@0.0.8 
  ├── moment@2.18.1 
  ├── mp4-parser@0.3.0 
  ├─┬ musicmetadata@2.0.5 
  │ ├── deep-equal@0.2.1 
  │ ├─┬ filereader-stream@0.2.0 
  │ │ └── inherits@1.0.0 
  │ ├── is-stream@1.1.0 
  │ ├── strtok2@1.0.4 
  │ └── through@2.3.8 
  ├─┬ mv@2.1.1 
  │ ├── ncp@2.0.0 
  │ └─┬ rimraf@2.4.5 
  │   └── glob@6.0.4 
  ├─┬ npmlog@4.1.2 
  │ ├─┬ are-we-there-yet@1.1.4 
  │ │ ├── delegates@1.0.0 
  │ │ └─┬ readable-stream@2.3.3 
  │ │   ├── isarray@1.0.0 
  │ │   ├── process-nextick-args@1.0.7 
  │ │   ├── safe-buffer@5.1.1 
  │ │   ├── string_decoder@1.0.3 
  │ │   └── util-deprecate@1.0.2 
  │ ├── console-control-strings@1.1.0 
  │ ├─┬ gauge@2.7.4 
  │ │ ├── has-unicode@2.0.1 
  │ │ ├── object-assign@4.1.1 
  │ │ ├── signal-exit@3.0.2 
  │ │ ├─┬ strip-ansi@3.0.1 
  │ │ │ └── ansi-regex@2.1.1 
  │ │ └── wide-align@1.1.2 
  │ └── set-blocking@2.0.0 
  ├─┬ rc@1.2.1 
  │ ├── deep-extend@0.4.2 
  │ ├── minimist@1.2.0 
  │ └── strip-json-comments@2.0.1 
  ├── rimraf@2.6.2 
  ├── sprintf@0.1.5 
  ├── untildify@3.0.2 
  ├─┬ yargs@6.6.0 
  │ ├── camelcase@3.0.0 
  │ ├─┬ cliui@3.2.0 
  │ │ └── wrap-ansi@2.1.0 
  │ ├── decamelize@1.2.0 
  │ ├── get-caller-file@1.0.2 
  │ ├─┬ os-locale@1.4.0 
  │ │ └─┬ lcid@1.0.0 
  │ │   └── invert-kv@1.0.0 
  │ ├─┬ read-pkg-up@1.0.1 
  │ │ ├─┬ find-up@1.1.2 
  │ │ │ ├── path-exists@2.1.0 
  │ │ │ └─┬ pinkie-promise@2.0.1 
  │ │ │   └── pinkie@2.0.4 
  │ │ └─┬ read-pkg@1.1.0 
  │ │   ├─┬ load-json-file@1.1.0 
  │ │   │ ├─┬ parse-json@2.2.0 
  │ │   │ │ └─┬ error-ex@1.3.1 
  │ │   │ │   └── is-arrayish@0.2.1 
  │ │   │ ├── pify@2.3.0 
  │ │   │ └─┬ strip-bom@2.0.0 
  │ │   │   └── is-utf8@0.2.1 
  │ │   ├─┬ normalize-package-data@2.4.0 
  │ │   │ ├── hosted-git-info@2.5.0 
  │ │   │ ├─┬ is-builtin-module@1.0.0 
  │ │   │ │ └── builtin-modules@1.1.1 
  │ │   │ ├── semver@5.4.1 
  │ │   │ └─┬ validate-npm-package-license@3.0.1 
  │ │   │   ├─┬ spdx-correct@1.0.2 
  │ │   │   │ └── spdx-license-ids@1.2.2 
  │ │   │   └── spdx-expression-parse@1.0.4 
  │ │   └── path-type@1.1.0 
  │ ├── require-directory@2.1.1 
  │ ├── require-main-filename@1.0.1 
  │ ├─┬ string-width@1.0.2 
  │ │ ├── code-point-at@1.1.0 
  │ │ └─┬ is-fullwidth-code-point@1.0.0 
  │ │   └── number-is-nan@1.0.1 
  │ ├── which-module@1.0.0 
  │ ├── y18n@3.2.1 
  │ └── yargs-parser@4.2.1 
  └─┬ yauzl@2.8.0 
    ├── buffer-crc32@0.2.13 
    └─┬ fd-slicer@1.0.1 
      └── pend@1.2.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/packard/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0585 took 4.7535s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node
'use strict';

require('babel-polyfill');

var _npmlog = require('npmlog');

var _npmlog2 = _interopRequireDefault(_npmlog);

var _default = require('./config/default.js');

var _default2 = _interopRequireDefault(_default);

var _options = require('./config/options.js');

var _options2 = _interopRequireDefault(_options);

var _save = require('./config/save.js');

var _save2 = _interopRequireDefault(_save);

var _commands = require('./commands.js');

var _commands2 = _interopRequireDefault(_commands);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// don't log the config until the log level is set
var yargs = require('yargs').usage('Usage: $0 [options] <command>').command(_commands2.default.albums).command(_commands2.default.artists).command(_commands2.default.audit).command(_commands2.default.inspect).command(_commands2.default.optimize).command(_commands2.default.pack).command(_commands2.default.pls).command(_commands2.default.unpack).options({
  S: _options2.default.S,
  loglevel: _options2.default.loglevel
}).help('h').alias('h', 'help').version(function () {
  return require('../package').version;
}).global('loglevel').global('S').env('PACKARD').demand(1).strict();

var argv = yargs.argv;
_npmlog2.default.level = argv.loglevel;
_npmlog2.default.silly('packard', 'argv', argv);

_npmlog2.default.verbose('config', _default2.default);

var command = _commands2.default.active;
if (argv.saveConfig) command = command.then(function () {
  return (0, _save2.default)(argv);
});
command.then(function () {
  _npmlog2.default.silly('packard', 'tracker debugging', _npmlog2.default.tracker.debug());
}).catch(function (e) {
  _npmlog2.default.disableProgress();
  _npmlog2.default.error('packard', e.stack);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jbGkuanMiXSwibmFtZXMiOlsieWFyZ3MiLCJyZXF1aXJlIiwidXNhZ2UiLCJjb21tYW5kIiwiYWxidW1zIiwiYXJ0aXN0cyIsImF1ZGl0IiwiaW5zcGVjdCIsIm9wdGltaXplIiwicGFjayIsInBscyIsInVucGFjayIsIm9wdGlvbnMiLCJTIiwibG9nbGV2ZWwiLCJoZWxwIiwiYWxpYXMiLCJ2ZXJzaW9uIiwiZ2xvYmFsIiwiZW52IiwiZGVtYW5kIiwic3RyaWN0IiwiYXJndiIsImxldmVsIiwic2lsbHkiLCJ2ZXJib3NlIiwiYWN0aXZlIiwic2F2ZUNvbmZpZyIsInRoZW4iLCJ0cmFja2VyIiwiZGVidWciLCJjYXRjaCIsImUiLCJkaXNhYmxlUHJvZ3Jlc3MiLCJlcnJvciIsInN0YWNrIl0sIm1hcHBpbmdzIjoiOztBQUVBOztBQUVBOzs7O0FBR0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBRUE7Ozs7OztBQUxBO0FBT0EsSUFBTUEsUUFBUUMsUUFBUSxPQUFSLEVBQ0dDLEtBREgsQ0FDUywrQkFEVCxFQUVHQyxPQUZILENBRVcsbUJBQVNDLE1BRnBCLEVBR0dELE9BSEgsQ0FHVyxtQkFBU0UsT0FIcEIsRUFJR0YsT0FKSCxDQUlXLG1CQUFTRyxLQUpwQixFQUtHSCxPQUxILENBS1csbUJBQVNJLE9BTHBCLEVBTUdKLE9BTkgsQ0FNVyxtQkFBU0ssUUFOcEIsRUFPR0wsT0FQSCxDQU9XLG1CQUFTTSxJQVBwQixFQVFHTixPQVJILENBUVcsbUJBQVNPLEdBUnBCLEVBU0dQLE9BVEgsQ0FTVyxtQkFBU1EsTUFUcEIsRUFVR0MsT0FWSCxDQVVXO0FBQ1BDLEtBQUcsa0JBQVFBLENBREo7QUFFUEMsWUFBVSxrQkFBUUE7QUFGWCxDQVZYLEVBY0dDLElBZEgsQ0FjUSxHQWRSLEVBZUdDLEtBZkgsQ0FlUyxHQWZULEVBZWMsTUFmZCxFQWdCR0MsT0FoQkgsQ0FnQlc7QUFBQSxTQUFNaEIsUUFBUSxZQUFSLEVBQXNCZ0IsT0FBNUI7QUFBQSxDQWhCWCxFQWlCR0MsTUFqQkgsQ0FpQlUsVUFqQlYsRUFrQkdBLE1BbEJILENBa0JVLEdBbEJWLEVBbUJHQyxHQW5CSCxDQW1CTyxTQW5CUCxFQW9CR0MsTUFwQkgsQ0FvQlUsQ0FwQlYsRUFxQkdDLE1BckJILEVBQWQ7O0FBdUJBLElBQU1DLE9BQU90QixNQUFNc0IsSUFBbkI7QUFDQSxpQkFBSUMsS0FBSixHQUFZRCxLQUFLUixRQUFqQjtBQUNBLGlCQUFJVSxLQUFKLENBQVUsU0FBVixFQUFxQixNQUFyQixFQUE2QkYsSUFBN0I7O0FBRUEsaUJBQUlHLE9BQUosQ0FBWSxRQUFaOztBQUVBLElBQUl0QixVQUFVLG1CQUFTdUIsTUFBdkI7QUFDQSxJQUFJSixLQUFLSyxVQUFULEVBQXFCeEIsVUFBVUEsUUFBUXlCLElBQVIsQ0FBYTtBQUFBLFNBQU0sb0JBQVdOLElBQVgsQ0FBTjtBQUFBLENBQWIsQ0FBVjtBQUNyQm5CLFFBQVF5QixJQUFSLENBQWEsWUFBTTtBQUNqQixtQkFBSUosS0FBSixDQUFVLFNBQVYsRUFBcUIsbUJBQXJCLEVBQTBDLGlCQUFJSyxPQUFKLENBQVlDLEtBQVosRUFBMUM7QUFDRCxDQUZELEVBRUdDLEtBRkgsQ0FFUyxVQUFDQyxDQUFELEVBQU87QUFDZCxtQkFBSUMsZUFBSjtBQUNBLG1CQUFJQyxLQUFKLENBQVUsU0FBVixFQUFxQkYsRUFBRUcsS0FBdkI7QUFDRCxDQUxEIiwiZmlsZSI6ImNsaS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuXG5pbXBvcnQgJ2JhYmVsLXBvbHlmaWxsJ1xuXG5pbXBvcnQgbG9nIGZyb20gJ25wbWxvZydcblxuLy8gZG9uJ3QgbG9nIHRoZSBjb25maWcgdW50aWwgdGhlIGxvZyBsZXZlbCBpcyBzZXRcbmltcG9ydCBjb25maWcgZnJvbSAnLi9jb25maWcvZGVmYXVsdC5qcydcbmltcG9ydCBvcHRpb25zIGZyb20gJy4vY29uZmlnL29wdGlvbnMuanMnXG5pbXBvcnQgc2F2ZUNvbmZpZyBmcm9tICcuL2NvbmZpZy9zYXZlLmpzJ1xuXG5pbXBvcnQgY29tbWFuZHMgZnJvbSAnLi9jb21tYW5kcy5qcydcblxuY29uc3QgeWFyZ3MgPSByZXF1aXJlKCd5YXJncycpXG4gICAgICAgICAgICAgICAgLnVzYWdlKCdVc2FnZTogJDAgW29wdGlvbnNdIDxjb21tYW5kPicpXG4gICAgICAgICAgICAgICAgLmNvbW1hbmQoY29tbWFuZHMuYWxidW1zKVxuICAgICAgICAgICAgICAgIC5jb21tYW5kKGNvbW1hbmRzLmFydGlzdHMpXG4gICAgICAgICAgICAgICAgLmNvbW1hbmQoY29tbWFuZHMuYXVkaXQpXG4gICAgICAgICAgICAgICAgLmNvbW1hbmQoY29tbWFuZHMuaW5zcGVjdClcbiAgICAgICAgICAgICAgICAuY29tbWFuZChjb21tYW5kcy5vcHRpbWl6ZSlcbiAgICAgICAgICAgICAgICAuY29tbWFuZChjb21tYW5kcy5wYWNrKVxuICAgICAgICAgICAgICAgIC5jb21tYW5kKGNvbW1hbmRzLnBscylcbiAgICAgICAgICAgICAgICAuY29tbWFuZChjb21tYW5kcy51bnBhY2spXG4gICAgICAgICAgICAgICAgLm9wdGlvbnMoe1xuICAgICAgICAgICAgICAgICAgUzogb3B0aW9ucy5TLFxuICAgICAgICAgICAgICAgICAgbG9nbGV2ZWw6IG9wdGlvbnMubG9nbGV2ZWxcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5oZWxwKCdoJylcbiAgICAgICAgICAgICAgICAuYWxpYXMoJ2gnLCAnaGVscCcpXG4gICAgICAgICAgICAgICAgLnZlcnNpb24oKCkgPT4gcmVxdWlyZSgnLi4vcGFja2FnZScpLnZlcnNpb24pXG4gICAgICAgICAgICAgICAgLmdsb2JhbCgnbG9nbGV2ZWwnKVxuICAgICAgICAgICAgICAgIC5nbG9iYWwoJ1MnKVxuICAgICAgICAgICAgICAgIC5lbnYoJ1BBQ0tBUkQnKVxuICAgICAgICAgICAgICAgIC5kZW1hbmQoMSlcbiAgICAgICAgICAgICAgICAuc3RyaWN0KClcblxuY29uc3QgYXJndiA9IHlhcmdzLmFyZ3ZcbmxvZy5sZXZlbCA9IGFyZ3YubG9nbGV2ZWxcbmxvZy5zaWxseSgncGFja2FyZCcsICdhcmd2JywgYXJndilcblxubG9nLnZlcmJvc2UoJ2NvbmZpZycsIGNvbmZpZylcblxubGV0IGNvbW1hbmQgPSBjb21tYW5kcy5hY3RpdmVcbmlmIChhcmd2LnNhdmVDb25maWcpIGNvbW1hbmQgPSBjb21tYW5kLnRoZW4oKCkgPT4gc2F2ZUNvbmZpZyhhcmd2KSlcbmNvbW1hbmQudGhlbigoKSA9PiB7XG4gIGxvZy5zaWxseSgncGFja2FyZCcsICd0cmFja2VyIGRlYnVnZ2luZycsIGxvZy50cmFja2VyLmRlYnVnKCkpXG59KS5jYXRjaCgoZSkgPT4ge1xuICBsb2cuZGlzYWJsZVByb2dyZXNzKClcbiAgbG9nLmVycm9yKCdwYWNrYXJkJywgZS5zdGFjaylcbn0pXG4iXX0= at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
