
> dtrace-provider@0.8.5 install /root/Targets/node-distribute/node_modules/dtrace-provider
> node scripts/install.js

/root/Targets/node-distribute
└─┬ node-distribute@0.7.1 
  ├─┬ async@2.5.0 
  │ └── lodash@4.17.4 
  ├── basic-auth-connect@1.0.0 
  ├── bluebird@3.5.0 
  ├─┬ body-parser@1.18.1 
  │ ├── bytes@3.0.0 
  │ ├── content-type@1.0.4 
  │ ├─┬ debug@2.6.8 
  │ │ └── ms@2.0.0 
  │ ├── depd@1.1.1 
  │ ├─┬ http-errors@1.6.2 
  │ │ └── inherits@2.0.3 
  │ ├── iconv-lite@0.4.19 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── qs@6.5.1 
  │ ├─┬ raw-body@2.3.2 
  │ │ └── unpipe@1.0.0 
  │ └─┬ type-is@1.6.15 
  │   ├── media-typer@0.3.0 
  │   └─┬ mime-types@2.1.17 
  │     └── mime-db@1.30.0 
  ├─┬ bunyan@1.8.12 
  │ ├─┬ dtrace-provider@0.8.5 
  │ │ └── nan@2.7.0 
  │ ├─┬ mv@2.1.1 
  │ │ ├── ncp@2.0.0 
  │ │ └─┬ rimraf@2.4.5 
  │ │   └── glob@6.0.4 
  │ └── safe-json-stringify@1.0.4 
  ├─┬ chart.js@2.7.0 
  │ └─┬ chartjs-color@2.2.0 
  │   ├─┬ chartjs-color-string@0.5.0 
  │   │ └── color-name@1.1.3 
  │   └── color-convert@0.5.3 
  ├── commander@2.11.0 
  ├─┬ cross-spawn@5.1.0 
  │ ├─┬ lru-cache@4.1.1 
  │ │ ├── pseudomap@1.0.2 
  │ │ └── yallist@2.1.2 
  │ ├─┬ shebang-command@1.2.0 
  │ │ └── shebang-regex@1.0.0 
  │ └─┬ which@1.3.0 
  │   └── isexe@2.0.0 
  ├─┬ express@4.15.4 
  │ ├─┬ accepts@1.3.4 
  │ │ └── negotiator@0.6.1 
  │ ├── array-flatten@1.1.1 
  │ ├── content-disposition@0.5.2 
  │ ├── cookie@0.3.1 
  │ ├── cookie-signature@1.0.6 
  │ ├── encodeurl@1.0.1 
  │ ├── escape-html@1.0.3 
  │ ├── etag@1.8.1 
  │ ├── finalhandler@1.0.5 
  │ ├── fresh@0.5.0 
  │ ├── merge-descriptors@1.0.1 
  │ ├── methods@1.1.2 
  │ ├── parseurl@1.3.2 
  │ ├── path-to-regexp@0.1.7 
  │ ├─┬ proxy-addr@1.1.5 
  │ │ ├── forwarded@0.1.2 
  │ │ └── ipaddr.js@1.4.0 
  │ ├── qs@6.5.0 
  │ ├── range-parser@1.2.0 
  │ ├─┬ send@0.15.4 
  │ │ ├── destroy@1.0.4 
  │ │ └── mime@1.3.4 
  │ ├── serve-static@1.12.4 
  │ ├── setprototypeof@1.0.3 
  │ ├── statuses@1.3.1 
  │ ├── utils-merge@1.0.0 
  │ └── vary@1.1.1 
  ├─┬ geoip-lite@1.2.1 
  │ ├── colors@1.1.2 
  │ ├─┬ glob@7.1.2 
  │ │ ├── fs.realpath@1.0.0 
  │ │ ├─┬ inflight@1.0.6 
  │ │ │ └── wrappy@1.0.2 
  │ │ ├─┬ minimatch@3.0.4 
  │ │ │ └─┬ brace-expansion@1.1.8 
  │ │ │   ├── balanced-match@1.0.0 
  │ │ │   └── concat-map@0.0.1 
  │ │ ├── once@1.4.0 
  │ │ └── path-is-absolute@1.0.1 
  │ ├── lazy@1.0.11 
  │ └─┬ unzip@0.1.11 
  │   ├─┬ binary@0.3.0 
  │   │ ├── buffers@0.1.1 
  │   │ └─┬ chainsaw@0.1.0 
  │   │   └── traverse@0.3.9 
  │   ├─┬ fstream@0.1.31 
  │   │ └─┬ graceful-fs@3.0.11 
  │   │   └── natives@1.1.0 
  │   ├── match-stream@0.0.2 
  │   ├─┬ pullstream@0.4.1 
  │   │ ├── over@0.0.5 
  │   │ └── slice-stream@1.0.0 
  │   ├─┬ readable-stream@1.0.34 
  │   │ ├── core-util-is@1.0.2 
  │   │ └── string_decoder@0.10.31 
  │   └── setimmediate@1.0.5 
  ├─┬ git-server@0.2.1  (git+https://github.com/stackdot/NodeJS-Git-Server.git#3be1aa65d428568dcd105d7c9062ab90260b10e1)
  │ ├── cli-listener@0.0.4 
  │ ├─┬ cli-table@0.3.1 
  │ │ └── colors@1.0.3 
  │ ├─┬ connect@2.9.2 
  │ │ ├── buffer-crc32@0.2.1 
  │ │ ├── bytes@0.2.0 
  │ │ ├── cookie@0.1.0 
  │ │ ├── cookie-signature@1.0.1 
  │ │ ├── fresh@0.2.0 
  │ │ ├── methods@0.0.1 
  │ │ ├─┬ multiparty@2.2.0 
  │ │ │ ├── readable-stream@1.1.14 
  │ │ │ └─┬ stream-counter@0.2.0 
  │ │ │   └── readable-stream@1.1.14 
  │ │ ├── negotiator@0.2.8 
  │ │ ├── pause@0.0.1 
  │ │ ├── qs@0.6.5 
  │ │ ├── raw-body@0.0.3 
  │ │ ├─┬ send@0.1.4 
  │ │ │ ├── mime@1.2.11 
  │ │ │ └── range-parser@0.0.4 
  │ │ └── uid2@0.0.2 
  │ ├── event-proxy@0.0.1 
  │ ├─┬ git-emit@0.0.0 
  │ │ ├─┬ dnode@0.9.12 
  │ │ │ ├─┬ dnode-protocol@0.1.5 
  │ │ │ │ └── traverse@0.6.6 
  │ │ │ ├── jsonify@0.0.0 
  │ │ │ ├─┬ socket.io@0.8.6 
  │ │ │ │ ├── policyfile@0.0.4 
  │ │ │ │ └── redis@0.6.7 
  │ │ │ └─┬ socket.io-client@0.8.6 
  │ │ │   ├── uglify-js@1.0.6 
  │ │ │   ├── websocket-client@1.0.0 
  │ │ │   └── xmlhttprequest@1.2.2 
  │ │ └─┬ seq@0.3.5 
  │ │   ├── chainsaw@0.0.9 
  │ │   └── hashish@0.0.4 
  │ ├─┬ mkdirp@0.5.1 
  │ │ └── minimist@0.0.8 
  │ └─┬ pushover@1.3.6 
  │   ├─┬ http-duplex@0.0.2 
  │   │ ├── duplex-pipe@0.0.2 
  │   │ └── inherits@1.0.2 
  │   ├── inherits@1.0.2 
  │   ├── mkdirp@0.3.5 
  │   └── through@2.2.7 
  ├─┬ http-proxy@1.16.2 
  │ ├── eventemitter3@1.2.0 
  │ └── requires-port@1.0.0 
  ├─┬ kue@0.11.6 
  │ ├── nib@1.1.2 
  │ ├─┬ node-redis-warlock@0.2.0 
  │ │ ├─┬ node-redis-scripty@0.0.5 
  │ │ │ ├── extend@1.3.0 
  │ │ │ └── lru-cache@2.7.3 
  │ │ └── uuid@2.0.3 
  │ ├─┬ redis@2.6.5 
  │ │ ├── double-ended-queue@2.1.0-0 
  │ │ ├── redis-commands@1.3.1 
  │ │ └── redis-parser@2.6.0 
  │ ├─┬ reds@0.2.5 
  │ │ ├─┬ natural@0.2.1 
  │ │ │ ├── apparatus@0.0.9 
  │ │ │ └── sylvester@0.0.21 
  │ │ └── redis@0.12.1 
  │ ├─┬ stylus@0.54.5 
  │ │ ├── css-parse@1.7.0 
  │ │ ├── glob@7.0.6 
  │ │ ├── sax@0.5.8 
  │ │ └─┬ source-map@0.1.43 
  │ │   └── amdefine@1.0.1 
  │ └─┬ yargs@4.8.1 
  │   ├─┬ cliui@3.2.0 
  │   │ └── wrap-ansi@2.1.0 
  │   ├── decamelize@1.2.0 
  │   ├── get-caller-file@1.0.2 
  │   ├── lodash.assign@4.2.0 
  │   ├─┬ os-locale@1.4.0 
  │   │ └─┬ lcid@1.0.0 
  │   │   └── invert-kv@1.0.0 
  │   ├─┬ read-pkg-up@1.0.1 
  │   │ ├─┬ find-up@1.1.2 
  │   │ │ ├── path-exists@2.1.0 
  │   │ │ └─┬ pinkie-promise@2.0.1 
  │   │ │   └── pinkie@2.0.4 
  │   │ └─┬ read-pkg@1.1.0 
  │   │   ├─┬ load-json-file@1.1.0 
  │   │   │ ├── graceful-fs@4.1.11 
  │   │   │ ├─┬ parse-json@2.2.0 
  │   │   │ │ └─┬ error-ex@1.3.1 
  │   │   │ │   └── is-arrayish@0.2.1 
  │   │   │ ├── pify@2.3.0 
  │   │   │ └─┬ strip-bom@2.0.0 
  │   │   │   └── is-utf8@0.2.1 
  │   │   ├─┬ normalize-package-data@2.4.0 
  │   │   │ ├── hosted-git-info@2.5.0 
  │   │   │ ├─┬ is-builtin-module@1.0.0 
  │   │   │ │ └── builtin-modules@1.1.1 
  │   │   │ └─┬ validate-npm-package-license@3.0.1 
  │   │   │   ├─┬ spdx-correct@1.0.2 
  │   │   │   │ └── spdx-license-ids@1.2.2 
  │   │   │   └── spdx-expression-parse@1.0.4 
  │   │   └─┬ path-type@1.1.0 
  │   │     └── graceful-fs@4.1.11 
  │   ├── require-directory@2.1.1 
  │   ├── require-main-filename@1.0.1 
  │   ├── set-blocking@2.0.0 
  │   ├─┬ string-width@1.0.2 
  │   │ ├── code-point-at@1.1.0 
  │   │ └─┬ is-fullwidth-code-point@1.0.0 
  │   │   └── number-is-nan@1.0.1 
  │   ├── which-module@1.0.0 
  │   ├── window-size@0.2.0 
  │   ├── y18n@3.2.1 
  │   └─┬ yargs-parser@2.4.1 
  │     └── camelcase@3.0.0 
  ├── moment@2.18.1 
  ├─┬ node-flat-db@0.2.1 
  │ ├── graceful-fs@4.1.11 
  │ ├── is-promise@2.1.0 
  │ ├─┬ json-parse-helpfulerror@1.0.3 
  │ │ └── jju@1.3.0 
  │ ├── lz-string@1.4.4 
  │ └─┬ steno@0.4.4 
  │   └── graceful-fs@4.1.11 
  ├─┬ npm@3.10.10 
  │ ├── abbrev@1.0.9 
  │ ├── ansi-regex@2.0.0 
  │ ├── ansicolors@0.3.2 
  │ ├── ansistyles@0.1.3 
  │ ├── aproba@1.0.4 
  │ ├── archy@1.0.0 
  │ ├── asap@2.0.5 
  │ ├── chownr@1.0.1 
  │ ├── cmd-shim@2.0.2 
  │ ├─┬ columnify@1.5.4 
  │ │ └─┬ wcwidth@1.0.0 
  │ │   └─┬ defaults@1.0.3 
  │ │     └── clone@1.0.2 
  │ ├─┬ config-chain@1.1.11 
  │ │ └── proto-list@1.2.4 
  │ ├── debuglog@1.0.1 
  │ ├── dezalgo@1.0.3 
  │ ├── editor@1.0.0 
  │ ├── fs-vacuum@1.2.9 
  │ ├── fs-write-stream-atomic@1.0.8 
  │ ├── fstream@1.0.10 
  │ ├─┬ fstream-npm@1.2.0 
  │ │ └─┬ fstream-ignore@1.0.5 
  │ │   └─┬ minimatch@3.0.3 
  │ │     └─┬ brace-expansion@1.1.6 
  │ │       ├── balanced-match@0.4.2 
  │ │       └── concat-map@0.0.1 
  │ ├─┬ glob@7.1.0 
  │ │ ├── fs.realpath@1.0.0 
  │ │ ├─┬ minimatch@3.0.3 
  │ │ │ └─┬ brace-expansion@1.1.6 
  │ │ │   ├── balanced-match@0.4.2 
  │ │ │   └── concat-map@0.0.1 
  │ │ └── path-is-absolute@1.0.1 
  │ ├── graceful-fs@4.1.9 
  │ ├── has-unicode@2.0.1 
  │ ├── hosted-git-info@2.1.5 
  │ ├── iferr@0.1.5 
  │ ├── imurmurhash@0.1.4 
  │ ├── inflight@1.0.5 
  │ ├── inherits@2.0.3 
  │ ├── ini@1.3.4 
  │ ├─┬ init-package-json@1.9.4 
  │ │ ├─┬ glob@6.0.4 
  │ │ │ ├─┬ minimatch@3.0.3 
  │ │ │ │ └─┬ brace-expansion@1.1.6 
  │ │ │ │   ├── balanced-match@0.4.2 
  │ │ │ │   └── concat-map@0.0.1 
  │ │ │ └── path-is-absolute@1.0.0 
  │ │ └── promzard@0.3.0 
  │ ├── lockfile@1.0.2 
  │ ├── lodash._baseindexof@3.1.0 
  │ ├─┬ lodash._baseuniq@4.6.0 
  │ │ ├── lodash._createset@4.0.3 
  │ │ └── lodash._root@3.0.1 
  │ ├── lodash._bindcallback@3.0.1 
  │ ├── lodash._cacheindexof@3.0.2 
  │ ├── lodash._createcache@3.1.2 
  │ ├── lodash._getnative@3.9.1 
  │ ├── lodash.clonedeep@4.5.0 
  │ ├── lodash.restparam@3.6.1 
  │ ├── lodash.union@4.6.0 
  │ ├── lodash.uniq@4.5.0 
  │ ├── lodash.without@4.4.0 
  │ ├─┬ mkdirp@0.5.1 
  │ │ └── minimist@0.0.8 
  │ ├─┬ node-gyp@3.4.0 
  │ │ ├─┬ minimatch@3.0.3 
  │ │ │ └─┬ brace-expansion@1.1.6 
  │ │ │   ├── balanced-match@0.4.2 
  │ │ │   └── concat-map@0.0.1 
  │ │ ├─┬ npmlog@3.1.2 
  │ │ │ ├─┬ are-we-there-yet@1.1.2 
  │ │ │ │ └── delegates@1.0.0 
  │ │ │ ├── console-control-strings@1.1.0 
  │ │ │ ├─┬ gauge@2.6.0 
  │ │ │ │ ├── has-color@0.1.7 
  │ │ │ │ ├── object-assign@4.1.0 
  │ │ │ │ ├── signal-exit@3.0.0 
  │ │ │ │ ├─┬ string-width@1.0.2 
  │ │ │ │ │ ├─┬ code-point-at@1.0.0 
  │ │ │ │ │ │ └── number-is-nan@1.0.0 
  │ │ │ │ │ └─┬ is-fullwidth-code-point@1.0.0 
  │ │ │ │ │   └── number-is-nan@1.0.0 
  │ │ │ │ └── wide-align@1.1.0 
  │ │ │ └── set-blocking@2.0.0 
  │ │ └─┬ path-array@1.0.1 
  │ │   └─┬ array-index@1.0.0 
  │ │     ├─┬ debug@2.2.0 
  │ │     │ └── ms@0.7.1 
  │ │     └─┬ es6-symbol@3.1.0 
  │ │       ├── d@0.1.1 
  │ │       └─┬ es5-ext@0.10.12 
  │ │         └── es6-iterator@2.0.0 
  │ ├── nopt@3.0.6 
  │ ├── normalize-git-url@3.0.2 
  │ ├─┬ normalize-package-data@2.3.5 
  │ │ └─┬ is-builtin-module@1.0.0 
  │ │   └── builtin-modules@1.1.1 
  │ ├── npm-cache-filename@1.0.2 
  │ ├── npm-install-checks@3.0.0 
  │ ├── npm-package-arg@4.2.0 
  │ ├─┬ npm-registry-client@7.2.1 
  │ │ ├─┬ concat-stream@1.5.2 
  │ │ │ ├─┬ readable-stream@2.0.6 
  │ │ │ │ ├── core-util-is@1.0.2 
  │ │ │ │ ├── isarray@1.0.0 
  │ │ │ │ ├── process-nextick-args@1.0.7 
  │ │ │ │ ├── string_decoder@0.10.31 
  │ │ │ │ └── util-deprecate@1.0.2 
  │ │ │ └── typedarray@0.0.6 
  │ │ ├─┬ npmlog@3.1.2 
  │ │ │ ├─┬ are-we-there-yet@1.1.2 
  │ │ │ │ └── delegates@1.0.0 
  │ │ │ ├── console-control-strings@1.1.0 
  │ │ │ ├─┬ gauge@2.6.0 
  │ │ │ │ ├── has-color@0.1.7 
  │ │ │ │ ├── object-assign@4.1.0 
  │ │ │ │ ├── signal-exit@3.0.0 
  │ │ │ │ ├─┬ string-width@1.0.2 
  │ │ │ │ │ ├─┬ code-point-at@1.0.0 
  │ │ │ │ │ │ └── number-is-nan@1.0.0 
  │ │ │ │ │ └─┬ is-fullwidth-code-point@1.0.0 
  │ │ │ │ │   └── number-is-nan@1.0.0 
  │ │ │ │ └── wide-align@1.1.0 
  │ │ │ └── set-blocking@2.0.0 
  │ │ └── retry@0.10.0 
  │ ├── npm-user-validate@0.1.5 
  │ ├─┬ npmlog@4.0.0 
  │ │ ├─┬ are-we-there-yet@1.1.2 
  │ │ │ └── delegates@1.0.0 
  │ │ ├── console-control-strings@1.1.0 
  │ │ ├─┬ gauge@2.6.0 
  │ │ │ ├── has-color@0.1.7 
  │ │ │ ├── object-assign@4.1.0 
  │ │ │ ├── signal-exit@3.0.0 
  │ │ │ ├─┬ string-width@1.0.2 
  │ │ │ │ ├─┬ code-point-at@1.0.0 
  │ │ │ │ │ └── number-is-nan@1.0.0 
  │ │ │ │ └─┬ is-fullwidth-code-point@1.0.0 
  │ │ │ │   └── number-is-nan@1.0.0 
  │ │ │ └── wide-align@1.1.0 
  │ │ └── set-blocking@2.0.0 
  │ ├── once@1.4.0 
  │ ├── opener@1.4.2 
  │ ├─┬ osenv@0.1.3 
  │ │ ├── os-homedir@1.0.1 
  │ │ └── os-tmpdir@1.0.1 
  │ ├── path-is-inside@1.0.2 
  │ ├─┬ read@1.0.7 
  │ │ └── mute-stream@0.0.5 
  │ ├── read-cmd-shim@1.0.1 
  │ ├─┬ read-installed@4.0.3 
  │ │ └── util-extend@1.0.3 
  │ ├─┬ read-package-json@2.0.4 
  │ │ ├─┬ glob@6.0.4 
  │ │ │ ├─┬ minimatch@3.0.3 
  │ │ │ │ └─┬ brace-expansion@1.1.6 
  │ │ │ │   ├── balanced-match@0.4.2 
  │ │ │ │   └── concat-map@0.0.1 
  │ │ │ └── path-is-absolute@1.0.0 
  │ │ └─┬ json-parse-helpfulerror@1.0.3 
  │ │   └── jju@1.3.0 
  │ ├── read-package-tree@5.1.5 
  │ ├─┬ readable-stream@2.1.5 
  │ │ ├── buffer-shims@1.0.0 
  │ │ ├── core-util-is@1.0.2 
  │ │ ├── isarray@1.0.0 
  │ │ ├── process-nextick-args@1.0.7 
  │ │ ├── string_decoder@0.10.31 
  │ │ └── util-deprecate@1.0.2 
  │ ├── readdir-scoped-modules@1.0.2 
  │ ├── realize-package-specifier@3.0.3 
  │ ├─┬ request@2.75.0 
  │ │ ├── aws-sign2@0.6.0 
  │ │ ├── aws4@1.4.1 
  │ │ ├─┬ bl@1.1.2 
  │ │ │ └─┬ readable-stream@2.0.6 
  │ │ │   ├── core-util-is@1.0.2 
  │ │ │   ├── isarray@1.0.0 
  │ │ │   ├── process-nextick-args@1.0.7 
  │ │ │   ├── string_decoder@0.10.31 
  │ │ │   └── util-deprecate@1.0.2 
  │ │ ├── caseless@0.11.0 
  │ │ ├─┬ combined-stream@1.0.5 
  │ │ │ └── delayed-stream@1.0.0 
  │ │ ├── extend@3.0.0 
  │ │ ├── forever-agent@0.6.1 
  │ │ ├─┬ form-data@2.0.0 
  │ │ │ └── asynckit@0.4.0 
  │ │ ├─┬ har-validator@2.0.6 
  │ │ │ ├─┬ chalk@1.1.3 
  │ │ │ │ ├── ansi-styles@2.2.1 
  │ │ │ │ ├── escape-string-regexp@1.0.5 
  │ │ │ │ ├── has-ansi@2.0.0 
  │ │ │ │ └── supports-color@2.0.0 
  │ │ │ ├─┬ commander@2.9.0 
  │ │ │ │ └── graceful-readlink@1.0.1 
  │ │ │ ├─┬ is-my-json-valid@2.15.0 
  │ │ │ │ ├── generate-function@2.0.0 
  │ │ │ │ ├─┬ generate-object-property@1.2.0 
  │ │ │ │ │ └── is-property@1.0.2 
  │ │ │ │ ├── jsonpointer@4.0.0 
  │ │ │ │ └── xtend@4.0.1 
  │ │ │ └─┬ pinkie-promise@2.0.1 
  │ │ │   └── pinkie@2.0.4 
  │ │ ├─┬ hawk@3.1.3 
  │ │ │ ├── boom@2.10.1 
  │ │ │ ├── cryptiles@2.0.5 
  │ │ │ ├── hoek@2.16.3 
  │ │ │ └── sntp@1.0.9 
  │ │ ├─┬ http-signature@1.1.1 
  │ │ │ ├── assert-plus@0.2.0 
  │ │ │ ├─┬ jsprim@1.3.1 
  │ │ │ │ ├── extsprintf@1.0.2 
  │ │ │ │ ├── json-schema@0.2.3 
  │ │ │ │ └── verror@1.3.6 
  │ │ │ └─┬ sshpk@1.10.1 
  │ │ │   ├── asn1@0.2.3 
  │ │ │   ├── assert-plus@1.0.0 
  │ │ │   ├── bcrypt-pbkdf@1.0.0 
  │ │ │   ├── dashdash@1.14.0 
  │ │ │   ├── ecc-jsbn@0.1.1 
  │ │ │   ├── getpass@0.1.6 
  │ │ │   ├── jodid25519@1.0.2 
  │ │ │   ├── jsbn@0.1.0 
  │ │ │   └── tweetnacl@0.14.3 
  │ │ ├── is-typedarray@1.0.0 
  │ │ ├── isstream@0.1.2 
  │ │ ├── json-stringify-safe@5.0.1 
  │ │ ├─┬ mime-types@2.1.12 
  │ │ │ └── mime-db@1.24.0 
  │ │ ├── node-uuid@1.4.7 
  │ │ ├── oauth-sign@0.8.2 
  │ │ ├── qs@6.2.1 
  │ │ ├── stringstream@0.0.5 
  │ │ ├── tough-cookie@2.3.1 
  │ │ └── tunnel-agent@0.4.3 
  │ ├── retry@0.10.0 
  │ ├── rimraf@2.5.4 
  │ ├── semver@5.3.0 
  │ ├── sha@2.0.1 
  │ ├── slide@1.1.6 
  │ ├── sorted-object@2.0.1 
  │ ├── strip-ansi@3.0.1 
  │ ├─┬ tar@2.2.1 
  │ │ └── block-stream@0.0.8 
  │ ├── text-table@0.2.0 
  │ ├── uid-number@0.0.6 
  │ ├── umask@1.1.0 
  │ ├─┬ unique-filename@1.1.0 
  │ │ └── unique-slug@2.0.0 
  │ ├── unpipe@1.0.0 
  │ ├─┬ validate-npm-package-license@3.0.1 
  │ │ ├─┬ spdx-correct@1.0.2 
  │ │ │ └── spdx-license-ids@1.2.0 
  │ │ └─┬ spdx-expression-parse@1.0.2 
  │ │   ├── spdx-exceptions@1.0.4 
  │ │   └── spdx-license-ids@1.2.0 
  │ ├─┬ validate-npm-package-name@2.2.2 
  │ │ └── builtins@0.0.7 
  │ ├─┬ which@1.2.11 
  │ │ └── isexe@1.1.2 
  │ ├── wrappy@1.0.2 
  │ └── write-file-atomic@1.2.0 
  ├─┬ pm2@2.7.0 
  │ ├── blessed@0.1.81 
  │ ├─┬ chalk@1.1.3 
  │ │ ├── ansi-styles@2.2.1 
  │ │ ├── escape-string-regexp@1.0.5 
  │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ └── ansi-regex@2.1.1 
  │ │ ├── strip-ansi@3.0.1 
  │ │ └── supports-color@2.0.0 
  │ ├─┬ chokidar@1.7.0 
  │ │ ├─┬ anymatch@1.3.2 
  │ │ │ ├─┬ micromatch@2.3.11 
  │ │ │ │ ├─┬ arr-diff@2.0.0 
  │ │ │ │ │ └── arr-flatten@1.1.0 
  │ │ │ │ ├── array-unique@0.2.1 
  │ │ │ │ ├─┬ braces@1.8.5 
  │ │ │ │ │ ├─┬ expand-range@1.8.2 
  │ │ │ │ │ │ └─┬ fill-range@2.2.3 
  │ │ │ │ │ │   ├── is-number@2.1.0 
  │ │ │ │ │ │   ├─┬ isobject@2.1.0 
  │ │ │ │ │ │   │ └── isarray@1.0.0 
  │ │ │ │ │ │   ├─┬ randomatic@1.1.7 
  │ │ │ │ │ │   │ ├─┬ is-number@3.0.0 
  │ │ │ │ │ │   │ │ └── kind-of@3.2.2 
  │ │ │ │ │ │   │ └── kind-of@4.0.0 
  │ │ │ │ │ │   └── repeat-string@1.6.1 
  │ │ │ │ │ ├── preserve@0.2.0 
  │ │ │ │ │ └── repeat-element@1.1.2 
  │ │ │ │ ├─┬ expand-brackets@0.1.5 
  │ │ │ │ │ └── is-posix-bracket@0.1.1 
  │ │ │ │ ├── extglob@0.3.2 
  │ │ │ │ ├── filename-regex@2.0.1 
  │ │ │ │ ├─┬ kind-of@3.2.2 
  │ │ │ │ │ └── is-buffer@1.1.5 
  │ │ │ │ ├─┬ object.omit@2.0.1 
  │ │ │ │ │ ├─┬ for-own@0.1.5 
  │ │ │ │ │ │ └── for-in@1.0.2 
  │ │ │ │ │ └── is-extendable@0.1.1 
  │ │ │ │ ├─┬ parse-glob@3.0.4 
  │ │ │ │ │ ├── glob-base@0.3.0 
  │ │ │ │ │ └── is-dotfile@1.0.3 
  │ │ │ │ └─┬ regex-cache@0.4.4 
  │ │ │ │   └─┬ is-equal-shallow@0.1.3 
  │ │ │ │     └── is-primitive@2.0.0 
  │ │ │ └─┬ normalize-path@2.1.1 
  │ │ │   └── remove-trailing-separator@1.1.0 
  │ │ ├── async-each@1.0.1 
  │ │ ├── glob-parent@2.0.0 
  │ │ ├─┬ is-binary-path@1.0.1 
  │ │ │ └── binary-extensions@1.10.0 
  │ │ ├─┬ is-glob@2.0.1 
  │ │ │ └── is-extglob@1.0.0 
  │ │ └─┬ readdirp@2.1.0 
  │ │   ├── graceful-fs@4.1.11 
  │ │   ├─┬ readable-stream@2.3.3 
  │ │   │ ├── isarray@1.0.0 
  │ │   │ ├── process-nextick-args@1.0.7 
  │ │   │ ├── safe-buffer@5.1.1 
  │ │   │ ├── string_decoder@1.0.3 
  │ │   │ └── util-deprecate@1.0.2 
  │ │   └── set-immediate-shim@1.0.1 
  │ ├── cli-table-redemption@1.0.1 
  │ ├─┬ cron@1.2.1 
  │ │ └── moment-timezone@0.5.13 
  │ ├── debug@3.0.1 
  │ ├── eventemitter2@1.0.5 
  │ ├── fclone@1.0.11 
  │ ├── gkt@1.0.0 
  │ ├── needle@1.6.0 
  │ ├─┬ nssocket@0.6.0 
  │ │ └── eventemitter2@0.4.14 
  │ ├── pidusage@1.1.6 
  │ ├─┬ pm2-axon@3.1.0 
  │ │ ├── amp@0.3.1 
  │ │ ├── amp-message@0.1.2 
  │ │ ├── debug@3.0.1 
  │ │ └── escape-regexp@0.0.1 
  │ ├─┬ pm2-axon-rpc@0.5.0 
  │ │ └── debug@3.0.1 
  │ ├─┬ pm2-deploy@0.3.7 
  │ │ ├── async@1.5.2 
  │ │ └── tv4@1.3.0 
  │ ├─┬ pm2-multimeter@0.1.2 
  │ │ └── charm@0.1.2 
  │ ├─┬ pmx@1.5.2 
  │ │ ├── debug@3.0.1 
  │ │ ├── json-stringify-safe@5.0.1 
  │ │ └─┬ vxx@1.2.2 
  │ │   ├─┬ continuation-local-storage@3.2.0 
  │ │   │ ├── async-listener@0.6.8 
  │ │   │ └─┬ emitter-listener@1.0.1 
  │ │   │   └── shimmer@1.0.0 
  │ │   ├── extend@3.0.1 
  │ │   ├── is@3.2.1 
  │ │   ├── lodash.findindex@4.6.0 
  │ │   ├── lodash.isequal@4.5.0 
  │ │   ├── lodash.merge@4.6.0 
  │ │   ├── shimmer@1.1.0 
  │ │   └── uuid@3.1.0 
  │ ├─┬ promptly@2.2.0 
  │ │ └─┬ read@1.0.7 
  │ │   └── mute-stream@0.0.7 
  │ ├── semver@5.4.1 
  │ ├─┬ shelljs@0.7.8 
  │ │ ├── glob@7.1.2 
  │ │ ├── interpret@1.0.4 
  │ │ └── rechoir@0.6.2 
  │ ├─┬ source-map-support@0.4.18 
  │ │ └── source-map@0.5.7 
  │ ├── sprintf-js@1.1.1 
  │ ├─┬ vizion@0.2.13 
  │ │ └── async@1.5.2 
  │ └─┬ yamljs@0.3.0 
  │   ├─┬ argparse@1.0.9 
  │   │ └── sprintf-js@1.0.3 
  │   └── glob@7.1.2 
  ├─┬ portfinder@1.0.13 
  │ └── async@1.5.2 
  ├── psychic-ui@0.4.0 
  ├─┬ pug@2.0.0-rc.4 
  │ ├─┬ pug-code-gen@2.0.0 
  │ │ ├─┬ constantinople@3.1.0 
  │ │ │ ├── acorn@3.3.0 
  │ │ │ └── is-expression@2.1.0 
  │ │ ├── doctypes@1.1.0 
  │ │ ├── js-stringify@1.0.2 
  │ │ ├── pug-attrs@2.0.2 
  │ │ ├── pug-error@1.3.2 
  │ │ ├── void-elements@2.0.1 
  │ │ └─┬ with@5.1.1 
  │ │   └─┬ acorn-globals@3.1.0 
  │ │     └── acorn@4.0.13 
  │ ├─┬ pug-filters@2.1.5 
  │ │ ├─┬ clean-css@3.4.28 
  │ │ │ ├─┬ commander@2.8.1 
  │ │ │ │ └── graceful-readlink@1.0.1 
  │ │ │ └── source-map@0.4.4 
  │ │ ├─┬ jstransformer@1.0.0 
  │ │ │ └─┬ promise@7.3.1 
  │ │ │   └── asap@2.0.6 
  │ │ ├── pug-walk@1.1.5 
  │ │ ├─┬ resolve@1.4.0 
  │ │ │ └── path-parse@1.0.5 
  │ │ └─┬ uglify-js@2.8.29 
  │ │   ├── source-map@0.5.7 
  │ │   ├── uglify-to-browserify@1.0.2 
  │ │   └─┬ yargs@3.10.0 
  │ │     ├── camelcase@1.2.1 
  │ │     ├─┬ cliui@2.1.0 
  │ │     │ ├─┬ center-align@0.1.3 
  │ │     │ │ ├─┬ align-text@0.1.4 
  │ │     │ │ │ └── longest@1.0.1 
  │ │     │ │ └── lazy-cache@1.0.4 
  │ │     │ ├── right-align@0.1.3 
  │ │     │ └── wordwrap@0.0.2 
  │ │     └── window-size@0.1.0 
  │ ├─┬ pug-lexer@3.1.0 
  │ │ ├─┬ character-parser@2.2.0 
  │ │ │ └─┬ is-regex@1.0.4 
  │ │ │   └─┬ has@1.0.1 
  │ │ │     └── function-bind@1.1.1 
  │ │ └─┬ is-expression@3.0.0 
  │ │   └── acorn@4.0.13 
  │ ├── pug-linker@3.0.3 
  │ ├─┬ pug-load@2.0.9 
  │ │ └── object-assign@4.1.1 
  │ ├─┬ pug-parser@4.0.0 
  │ │ └── token-stream@0.0.1 
  │ ├── pug-runtime@2.0.3 
  │ └── pug-strip-comments@1.0.2 
  ├─┬ response-time@2.3.2 
  │ └── on-headers@1.0.1 
  ├─┬ rimraf@2.6.2 
  │ └── glob@7.1.2 
  ├─┬ socket.io@1.7.4 
  │ ├─┬ debug@2.3.3 
  │ │ └── ms@0.7.2 
  │ ├─┬ engine.io@1.8.4 
  │ │ ├── accepts@1.3.3 
  │ │ ├── base64id@1.0.0 
  │ │ ├─┬ debug@2.3.3 
  │ │ │ └── ms@0.7.2 
  │ │ ├─┬ engine.io-parser@1.3.2 
  │ │ │ ├── after@0.8.2 
  │ │ │ ├── arraybuffer.slice@0.0.6 
  │ │ │ ├── base64-arraybuffer@0.1.5 
  │ │ │ ├── blob@0.0.4 
  │ │ │ └── wtf-8@1.0.0 
  │ │ └─┬ ws@1.1.4 
  │ │   ├── options@0.0.6 
  │ │   └── ultron@1.0.2 
  │ ├─┬ has-binary@0.1.7 
  │ │ └── isarray@0.0.1 
  │ ├── object-assign@4.1.0 
  │ ├─┬ socket.io-adapter@0.5.0 
  │ │ └─┬ debug@2.3.3 
  │ │   └── ms@0.7.2 
  │ ├─┬ socket.io-client@1.7.4 
  │ │ ├── backo2@1.0.2 
  │ │ ├── component-bind@1.0.0 
  │ │ ├── component-emitter@1.2.1 
  │ │ ├─┬ engine.io-client@1.8.4 
  │ │ │ ├── component-emitter@1.2.1 
  │ │ │ ├── component-inherit@0.0.3 
  │ │ │ ├─┬ debug@2.3.3 
  │ │ │ │ └── ms@0.7.2 
  │ │ │ ├── has-cors@1.1.0 
  │ │ │ ├── parsejson@0.0.3 
  │ │ │ ├── parseqs@0.0.5 
  │ │ │ ├── ws@1.1.2 
  │ │ │ ├── xmlhttprequest-ssl@1.5.3 
  │ │ │ └── yeast@0.1.2 
  │ │ ├── indexof@0.0.1 
  │ │ ├── object-component@0.0.3 
  │ │ ├─┬ parseuri@0.0.5 
  │ │ │ └─┬ better-assert@1.0.2 
  │ │ │   └── callsite@1.0.0 
  │ │ └── to-array@0.1.4 
  │ └─┬ socket.io-parser@2.3.1 
  │   ├── component-emitter@1.1.2 
  │   ├─┬ debug@2.2.0 
  │   │ └── ms@0.7.1 
  │   └── json3@3.3.2 
  ├── underscore@1.8.3 
  └── vue@2.4.4 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/node-distribute/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 28.000000000000004% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0608 took 4.655s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Octal literal in strict mode (73:17) on program var pushover = require('pushover');
var http = require('http');
var https = require('https');
var async = require('async');
var fs = require('fs');
var crypto = require('crypto');
var git_events = require('git-emit');
var path = require('path');
var EventEmitter = require('events').EventEmitter
var proxy = require('event-proxy');
var api = require('./api');

GitServer = (function() {
  function GitServer(repos, logging, repoLocation, port, certs, enable_http_api) {
    var _this = this;
    this.repos = repos;
    this.logging = logging;
    this.repoLocation = repoLocation;
    this.port = port;
    this.certs = certs;
    this.api = enable_http_api;
    this.getRepo = function(repoName) {
      return GitServer.prototype.getRepo.apply(_this, arguments);
    };
    this.getUser = function(username, password, repo) {
      return GitServer.prototype.getUser.apply(_this, arguments);
    };
    this.checkTriggers = function(method, repo) {
      return GitServer.prototype.checkTriggers.apply(_this, arguments);
    };
    this.onPush = function(push) {
      return GitServer.prototype.onPush.apply(_this, arguments);
    };
    this.onFetch = function(fetch) {
      return GitServer.prototype.onFetch.apply(_this, arguments);
    };
    this.makeReposIfNull = function(callback) {
      return GitServer.prototype.makeReposIfNull.apply(_this, arguments);
    };
    this.gitListeners = function() {
      return GitServer.prototype.gitListeners.apply(_this, arguments);
    };
    this.permissableMethod = function(username, password, method, repo, gitObject) {
      return GitServer.prototype.permissableMethod.apply(_this, arguments);
    };
    this.processSecurity = function(gitObject, method, repo) {
      return GitServer.prototype.processSecurity.apply(_this, arguments);
    };
    this.log = function() {
      return GitServer.prototype.log.apply(_this, arguments);
    };
    this.createRepo = function(repo, callback) {
      return GitServer.prototype.createRepo.apply(_this, arguments);
    };
    this.git = pushover(this.repoLocation, {
      autoCreate: false
    });
    this.permMap = {
      fetch: 'R',
      push: 'W'
    };
    this.gitListeners();
    this.makeReposIfNull(function() {
      _this.bindEvents(function() {
        var message, red, reset;
        if (_this.certs != null) {
          if(_this.api) {
            _this.server = https.createServer(_this.certs);
          } else {
            _this.server = https.createServer(_this.certs, _this.git.handle.bind(_this.git));
          }
        } else {
          red = '\033[31m';
          reset = '\033[0m';
          message = "WARNING: No SSL certs passed in. Running as HTTP and not HTTPS.\nBe careful, without HTTPS your user/pass will not be encrypted";
          console.log(red + message + reset);
          if(_this.api) {
            _this.server = http.createServer();
          } else {
            _this.server = http.createServer(_this.git.handle.bind(_this.git));
          }
        }
        if(_this.api) {
          _this.registerApiServer(function() {
            _this.server.listen(_this.port, function() {
              _this.log('Server listening on ', _this.port, '\r');
            });
          });
        } else {
          return _this.server.listen(_this.port, function() {
            return _this.log('Server listening on ', _this.port, '\r');
          });
        }
      });
});
}

GitServer.prototype.registerApiServer = function(callback) {
  var self = this;
  this.server.on('request', function(req, res) {
    api(req, res, self, function() {
      self.git.handle(req, res);
    });
  });
  callback();
}

GitServer.prototype.bindEvents = function(callback) {
  var self = this;
  for (var i in this.repos) {
    this.repos[i].path = path.normalize(this.repoLocation+"/"+this.repos[i].name+".git");
    this.repos[i].git_events = git_events(this.repos[i].path);
    this.repos[i].last_commit = {};
    this.repos[i].event = function(repo, update) {
      emitters = self.listeners(update.name).length;
      self.log("Emitting "+update.name+" event.");
      if(emitters < 1 && update.canAbort) {
        self.log("No event listeners on "+update.name+". Accepting....");
        update.accept();
      } else {
        self.emit(update.name, update, repo);
      }
    }
    var map = {
      "post-applypatch": this.repos[i].event,
      "post-commit": this.repos[i].event,
      "post-checkout": this.repos[i].event,
      "post-merge": this.repos[i].event,
      "post-receive": this.repos[i].event,
      "post-update": this.repos[i].event,
      "post-rewrite": this.repos[i].event,
      "applypatch-msg": this.repos[i].event,
      "pre-applypatch": this.repos[i].event,
      "pre-commit": this.repos[i].event,
      "prepare-commit-msg": this.repos[i].event,
      "commit-msg": this.repos[i].event,
      "pre-rebase": this.repos[i].event,
      "pre-receive": this.repos[i].event,
      "update": this.repos[i].event,
      "pre-auto-gc": this.repos[i].event
    }
    proxy(process, map, this.repos[i].git_events, this.repos[i]);
  }
  callback();
}

GitServer.prototype.createRepo = function(repo, callback) {
  if ((repo.name == null) || (repo.anonRead == null)) {
    callback(new Error('Not enough details, need atleast .name and .anonRead'), null)
    this.log('Not enough details, need atleast .name and .anonRead');
    return false;
  }
  if (!this.getRepo(repo.name)) {
    this.log('Creating repo', repo.name);
    this.repos.push(repo);
    return this.git.create(repo.name, callback);
  } else {
    callback(new Error('This repo already exists'), null)
    return this.log('This repo already exists');
  }
};

GitServer.prototype.log = function() {
  var args, key, value;
  args = (function() {
    var _results;
    _results = [];
    for (key in arguments) {
      value = arguments[key];
      _results.push("" + value);
    }
    return _results;
  }).apply(this, arguments);
  if (this.logging) {
    return console.log("LOG: ", args.join(' '));
  }
};

GitServer.prototype.processSecurity = function(gitObject, method, repo) {
  var auth, creds, plain_auth, req, res;
  req = gitObject.request;
  res = gitObject.response;
  auth = req.headers['authorization'];
  if (auth === void 0) {
    res.statusCode = 401;
    res.setHeader('WWW-Authenticate', 'Basic realm="Secure Area"');
    return res.end('<html><body>Need some creds son</body></html>');
  } else {
    plain_auth = (new Buffer(auth.split(' ')[1], 'base64')).toString();
    creds = plain_auth.split(':');
    return this.permissableMethod(creds[0], creds[1], method, repo, gitObject);
  }
};

GitServer.prototype.permissableMethod = function(username, password, method, repo, gitObject) {
  var user, _ref;
  this.log(username, 'is trying to', method, 'on repo:', repo.name, '...');
  user = this.getUser(username, password, repo);
  if (user === false) {
    this.log(username, 'was rejected as this user doesnt exist, or password is wrong');
    return gitObject.reject(500, 'Wrong username or password');
  } else {
    if (_ref = this.permMap[method], user.permissions.indexOf(_ref) >= 0) {
      this.log(username, 'Successfully did a', method, 'on', repo.name);
      return this.checkTriggers(method, repo, gitObject);
    } else {
      this.log(username, 'was rejected, no permission to', method, 'on', repo.name);
      return gitObject.reject(500, "You dont have these permissions");
    }
  }
};

GitServer.prototype.gitListeners = function() {
  this.git.on('push', this.onPush);
  this.git.on('fetch', this.onFetch);
  return this.git.on('info', this.onFetch);
};

GitServer.prototype.makeReposIfNull = function(callback) {
  var repo, repoNames, _i, _len, _ref,
  _this = this;
  this.log('Making repos if they dont exist');
  repoNames = [];
  _ref = this.repos;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    repo = _ref[_i];
    if ((repo.name != null) && (repo.anonRead != null) && (repo.users != null)) {
      repoNames.push("" + repo.name + ".git");
    } else {
      console.log('Bad Repo', repo.name, 'is missing an attribute..');
    }
  }
  return async.reject(repoNames, this.git.exists.bind(this.git), function(error, results) {
    var _j, _len1;
    if (!error && results.length > 0) {
      for (_j = 0, _len1 = results.length; _j < _len1; _j++) {
        repo = results[_j];
        console.log('Creating repo directory: ', repo);
      }
      return async.map(results, _this.git.create.bind(_this.git), callback);
    } else {
      return callback();
    }
  });
};

GitServer.prototype.onFetch = function(fetch) {
  var repo;
  this.log('Got a FETCH call for', fetch.repo);
  repo = this.getRepo(fetch.repo);
  if (repo !== false) {
    if (repo.anonRead === true) {
      return this.checkTriggers('fetch', repo, fetch);
      this.checkTriggers('fetch', repo, fetch);
      return fetch.accept();
    } else {
      return this.processSecurity(fetch, 'fetch', repo);
    }
  } else {
    this.log('Rejected - Repo', fetch.repo, 'doesnt exist');
    return fetch.reject(500, 'This repo doesnt exist');
  }
};

GitServer.prototype.onPush = function(push) {
  var repo;
  this.log('Got a PUSH call for', push.repo);
  repo = this.getRepo(push.repo);
  var data = {
    status: push.status,
    repo: push.repo,
    service: push.service,
    cwd: push.cwd,
    last: push.last,
    commit: push.commit,
    evName: push.evName,
    branch: push.branch
  }
  repo.last_commit = data;
  if (repo !== false) {
    return this.processSecurity(push, 'push', repo);
  } else {
    this.log('Rejected - Repo', push.repo, 'doesnt exist');
    return push.reject(500, 'This repo doesnt exist');
  }
};

GitServer.prototype.checkTriggers = function(method, repo, gitObject) {
  var _base;
  gitObject.name = method;
  gitObject.canAbort = true;
  repo.event(repo, gitObject);
};

GitServer.prototype.getUser = function(username, password, repo) {
  var userObject, _i, _len, _ref;
  crypted_password = crypto.createHash('sha1').update(password).digest('hex');
  _ref = repo.users;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    userObject = _ref[_i];
    if (userObject.user.username === username && (userObject.user.password === password || crypted_password === userObject.user.password)) {
      return userObject;
    }
  }
  return false;
};

GitServer.prototype.getRepo = function(repoName) {
  var repo, _i, _len, _ref;
  _ref = this.repos;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    repo = _ref[_i];
    if (repo.name + '.git' === repoName || repoName === repo.name) {
      return repo;
    }
  }
  return false;
};

GitServer.prototype.__proto__ = EventEmitter.prototype;

return GitServer;
})();

module.exports = GitServer;
 at SyntaxError: Octal literal in strict mode (73:17)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readEscapedChar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:3023:16)
    at Parser.pp$7.readString (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2935:23)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2724:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1607:12)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/node-distribute/node_modules/node-distribute/index.js. Coverage (Term): 86% Coverage (LOC): 100%
*- File /root/Targets/node-distribute/node_modules/node-distribute/operations/startup.js. Coverage (Term): 66% Coverage (LOC): 75%
*- File /root/Targets/node-distribute/node_modules/node-distribute/operations/startup-gitserver.js. Coverage (Term): 5% Coverage (LOC): 5%
*- File /root/Targets/node-distribute/node_modules/git-server/main.js. Coverage (Term): 16% Coverage (LOC): 29%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
