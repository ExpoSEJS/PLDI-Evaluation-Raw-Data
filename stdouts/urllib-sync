/root/Targets/urllib-sync
└─┬ urllib-sync@1.1.4 
  ├─┬ urllib@2.11.1 
  │ ├── any-promise@1.3.0 
  │ ├─┬ debug@2.6.9 
  │ │ └── ms@2.0.0 
  │ ├─┬ default-user-agent@1.0.0 
  │ │ └─┬ os-name@1.0.3 
  │ │   ├─┬ osx-release@1.1.0 
  │ │   │ └── minimist@1.2.0 
  │ │   └─┬ win-release@1.1.1 
  │ │     └── semver@5.4.1 
  │ ├─┬ digest-header@0.0.1 
  │ │ └─┬ utility@0.1.11 
  │ │   └── address@1.0.3 
  │ ├── humanize-ms@1.2.1 
  │ ├── iconv-lite@0.4.19 
  │ ├── media-typer@0.3.0 
  │ └── statuses@1.3.1 
  └─┬ utility@1.7.1 
    ├── copy-to@2.0.1 
    └── escape-html@1.0.3 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/urllib-sync/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0814 took 4.215s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (15:4) on program /*!
 * urllib-sync - index.js
 * Copyright(c) 2014 dead_horse <dead_horse@qq.com>
 * MIT Licensed
 */

'use strict';

/**
 * Module dependencies.
 */

var cp = require('child_process');
var utility = require('utility');
var assert = require('assert');
var path = require('path');
var fs = require('fs');

assert(cp.spawnSync, 'urllib-sync need node version 0.11.13+');

exports.request = function request(url, args) {
  assert(url, 'url required');
  args = args || {};

  var input = utility.base64encode(JSON.stringify({
    url: url,
    args: args
  }));
  var requestPath = path.join(__dirname, './request.js');

  var cmd = process.execPath;
  var _args = [requestPath, input];
  var res = cp.spawnSync(cmd, _args, {
    timeout: (args.timeout || 3000) + 1000
  });

  if (res.error) {
    res.error.url = url;
    res.error.args = args;
    throw res.error;
  }

  if (res.status !== 0) {
    var e = new Error(res.stderr.toString() || 'unknown error');
    e.url = url;
    e.args = args;
    e.status = res.status;
    throw e;
  }

  try {
    res = JSON.parse(res.stdout);
  } catch (err) {
    var e = new Error('parse response error:' + err.message);
    e.url = url;
    e.args = args;
    throw e;
  }

  try {
    switch (res.type) {
    case 'string':
      res.data = fs.readFileSync(res.path).toString();
      break;
    case 'json':
      res.data = JSON.parse(fs.readFileSync(res.path).toString());
      break;
    case 'file':
      res.data = null;
      break;
    default:
      res.data = fs.readFileSync(res.path);
    }
  } catch (err){
    // ignore
  } finally {
    if (res.type !== 'file') fs.unlinkSync(res.path);
    delete res.path;
  }

  return res;
};
 at SyntaxError: Unexpected token (15:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
