/root/Targets/validately
└─┬ validately@1.1.0 
  └─┬ gulp@3.9.1 
    ├── archy@1.0.0 
    ├─┬ chalk@1.1.3 
    │ ├── ansi-styles@2.2.1 
    │ ├── escape-string-regexp@1.0.5 
    │ ├─┬ has-ansi@2.0.0 
    │ │ └── ansi-regex@2.1.1 
    │ ├── strip-ansi@3.0.1 
    │ └── supports-color@2.0.0 
    ├── deprecated@0.0.1 
    ├─┬ gulp-util@3.0.8 
    │ ├── array-differ@1.0.0 
    │ ├── array-uniq@1.0.3 
    │ ├── beeper@1.1.1 
    │ ├── dateformat@2.2.0 
    │ ├─┬ fancy-log@1.3.0 
    │ │ └── time-stamp@1.1.0 
    │ ├─┬ gulplog@1.0.0 
    │ │ └── glogg@1.0.0 
    │ ├─┬ has-gulplog@0.1.0 
    │ │ └── sparkles@1.0.0 
    │ ├── lodash._reescape@3.0.0 
    │ ├── lodash._reevaluate@3.0.0 
    │ ├── lodash._reinterpolate@3.0.0 
    │ ├─┬ lodash.template@3.6.2 
    │ │ ├── lodash._basecopy@3.0.1 
    │ │ ├── lodash._basetostring@3.0.1 
    │ │ ├── lodash._basevalues@3.0.0 
    │ │ ├── lodash._isiterateecall@3.0.9 
    │ │ ├─┬ lodash.escape@3.2.0 
    │ │ │ └── lodash._root@3.0.1 
    │ │ ├─┬ lodash.keys@3.1.2 
    │ │ │ ├── lodash._getnative@3.9.1 
    │ │ │ ├── lodash.isarguments@3.1.0 
    │ │ │ └── lodash.isarray@3.0.4 
    │ │ ├── lodash.restparam@3.6.1 
    │ │ └── lodash.templatesettings@3.1.1 
    │ ├─┬ multipipe@0.1.2 
    │ │ └─┬ duplexer2@0.0.2 
    │ │   └── readable-stream@1.1.14 
    │ ├── object-assign@3.0.0 
    │ ├── replace-ext@0.0.1 
    │ ├─┬ through2@2.0.3 
    │ │ ├─┬ readable-stream@2.3.3 
    │ │ │ ├── core-util-is@1.0.2 
    │ │ │ ├── inherits@2.0.3 
    │ │ │ ├── isarray@1.0.0 
    │ │ │ ├── process-nextick-args@1.0.7 
    │ │ │ ├── safe-buffer@5.1.1 
    │ │ │ ├── string_decoder@1.0.3 
    │ │ │ └── util-deprecate@1.0.2 
    │ │ └── xtend@4.0.1 
    │ └─┬ vinyl@0.5.3 
    │   ├── clone@1.0.2 
    │   └── clone-stats@0.0.1 
    ├── interpret@1.0.4 
    ├─┬ liftoff@2.3.0 
    │ ├── extend@3.0.1 
    │ ├─┬ findup-sync@0.4.3 
    │ │ ├─┬ detect-file@0.1.0 
    │ │ │ └── fs-exists-sync@0.1.0 
    │ │ ├─┬ is-glob@2.0.1 
    │ │ │ └── is-extglob@1.0.0 
    │ │ ├─┬ micromatch@2.3.11 
    │ │ │ ├─┬ arr-diff@2.0.0 
    │ │ │ │ └── arr-flatten@1.1.0 
    │ │ │ ├── array-unique@0.2.1 
    │ │ │ ├─┬ braces@1.8.5 
    │ │ │ │ ├─┬ expand-range@1.8.2 
    │ │ │ │ │ └─┬ fill-range@2.2.3 
    │ │ │ │ │   ├── is-number@2.1.0 
    │ │ │ │ │   ├─┬ isobject@2.1.0 
    │ │ │ │ │   │ └── isarray@1.0.0 
    │ │ │ │ │   ├─┬ randomatic@1.1.7 
    │ │ │ │ │   │ ├─┬ is-number@3.0.0 
    │ │ │ │ │   │ │ └── kind-of@3.2.2 
    │ │ │ │ │   │ └── kind-of@4.0.0 
    │ │ │ │ │   └── repeat-string@1.6.1 
    │ │ │ │ ├── preserve@0.2.0 
    │ │ │ │ └── repeat-element@1.1.2 
    │ │ │ ├─┬ expand-brackets@0.1.5 
    │ │ │ │ └── is-posix-bracket@0.1.1 
    │ │ │ ├── extglob@0.3.2 
    │ │ │ ├── filename-regex@2.0.1 
    │ │ │ ├─┬ kind-of@3.2.2 
    │ │ │ │ └── is-buffer@1.1.5 
    │ │ │ ├─┬ normalize-path@2.1.1 
    │ │ │ │ └── remove-trailing-separator@1.1.0 
    │ │ │ ├─┬ object.omit@2.0.1 
    │ │ │ │ ├── for-own@0.1.5 
    │ │ │ │ └── is-extendable@0.1.1 
    │ │ │ ├─┬ parse-glob@3.0.4 
    │ │ │ │ ├─┬ glob-base@0.3.0 
    │ │ │ │ │ └── glob-parent@2.0.0 
    │ │ │ │ └── is-dotfile@1.0.3 
    │ │ │ └─┬ regex-cache@0.4.4 
    │ │ │   └─┬ is-equal-shallow@0.1.3 
    │ │ │     └── is-primitive@2.0.0 
    │ │ └─┬ resolve-dir@0.1.1 
    │ │   ├── expand-tilde@1.2.2 
    │ │   └─┬ global-modules@0.2.3 
    │ │     ├─┬ global-prefix@0.1.5 
    │ │     │ ├── ini@1.3.4 
    │ │     │ └─┬ which@1.3.0 
    │ │     │   └── isexe@2.0.0 
    │ │     └── is-windows@0.2.0 
    │ ├─┬ fined@1.1.0 
    │ │ ├─┬ expand-tilde@2.0.2 
    │ │ │ └─┬ homedir-polyfill@1.0.1 
    │ │ │   └── parse-passwd@1.0.0 
    │ │ ├─┬ is-plain-object@2.0.4 
    │ │ │ └── isobject@3.0.1 
    │ │ ├─┬ object.defaults@1.1.0 
    │ │ │ ├── array-each@1.0.1 
    │ │ │ ├── array-slice@1.0.0 
    │ │ │ ├─┬ for-own@1.0.0 
    │ │ │ │ └── for-in@1.0.2 
    │ │ │ └── isobject@3.0.1 
    │ │ ├─┬ object.pick@1.3.0 
    │ │ │ └── isobject@3.0.1 
    │ │ └─┬ parse-filepath@1.0.1 
    │ │   ├─┬ is-absolute@0.2.6 
    │ │   │ └─┬ is-relative@0.2.1 
    │ │   │   └─┬ is-unc-path@0.1.2 
    │ │   │     └── unc-path-regex@0.1.2 
    │ │   ├── map-cache@0.2.2 
    │ │   └─┬ path-root@0.1.1 
    │ │     └── path-root-regex@0.1.2 
    │ ├── flagged-respawn@0.3.2 
    │ ├── lodash.isplainobject@4.0.6 
    │ ├── lodash.isstring@4.0.1 
    │ ├── lodash.mapvalues@4.6.0 
    │ ├── rechoir@0.6.2 
    │ └─┬ resolve@1.4.0 
    │   └── path-parse@1.0.5 
    ├── minimist@1.2.0 
    ├─┬ orchestrator@0.3.8 
    │ ├─┬ end-of-stream@0.1.5 
    │ │ └─┬ once@1.3.3 
    │ │   └── wrappy@1.0.2 
    │ ├── sequencify@0.0.7 
    │ └── stream-consume@0.1.0 
    ├── pretty-hrtime@1.0.3 
    ├── semver@4.3.6 
    ├─┬ tildify@1.2.0 
    │ └── os-homedir@1.0.2 
    ├─┬ v8flags@2.1.1 
    │ └── user-home@1.1.1 
    └─┬ vinyl-fs@0.3.14 
      ├── defaults@1.0.3 
      ├─┬ glob-stream@3.1.18 
      │ ├─┬ glob@4.5.3 
      │ │ └── inflight@1.0.6 
      │ ├─┬ glob2base@0.0.12 
      │ │ └── find-index@0.1.1 
      │ ├─┬ minimatch@2.0.10 
      │ │ └─┬ brace-expansion@1.1.8 
      │ │   ├── balanced-match@1.0.0 
      │ │   └── concat-map@0.0.1 
      │ ├── ordered-read-streams@0.1.0 
      │ ├─┬ through2@0.6.5 
      │ │ └── readable-stream@1.0.34 
      │ └── unique-stream@1.0.0 
      ├─┬ glob-watcher@0.0.6 
      │ └─┬ gaze@0.5.2 
      │   └─┬ globule@0.1.0 
      │     ├─┬ glob@3.1.21 
      │     │ ├── graceful-fs@1.2.3 
      │     │ └── inherits@1.0.2 
      │     ├── lodash@1.0.2 
      │     └─┬ minimatch@0.2.14 
      │       ├── lru-cache@2.7.3 
      │       └── sigmund@1.0.1 
      ├─┬ graceful-fs@3.0.11 
      │ └── natives@1.1.0 
      ├─┬ mkdirp@0.5.1 
      │ └── minimist@0.0.8 
      ├─┬ strip-bom@1.0.0 
      │ ├── first-chunk-stream@1.0.0 
      │ └── is-utf8@0.2.1 
      ├─┬ through2@0.6.5 
      │ └─┬ readable-stream@1.0.34 
      │   ├── isarray@0.0.1 
      │   └── string_decoder@0.10.31 
      └─┬ vinyl@0.4.6 
        └── clone@0.2.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/validately/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 28.999999999999996% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0464 took 5.8237s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Binding arguments in strict mode (104:33) on program /**
 * Represents the results of validating a form.
 * @constructor
 */
function Validation() {
  this.fieldErrors = {};
}

/**
 * Stores an error message for a field, categorized by the field name.
 * @param {string} fieldName - Name of the field.
 * @param {string} error - Error message.
 * @returns {Validation}
 */
Validation.prototype.addError = function (fieldName, error) {
  this.fieldErrors[fieldName] = this.fieldErrors[fieldName] || [];
  this.fieldErrors[fieldName].push(error);
  
  return this;
};

/**
 * Retrieves the list of errors stored for a field name. Returns 
 * an empty array if no errors are stored. 
 * 
 * @param {string} fieldName - Name of the field. 
 * @returns {string[]}
 */
Validation.prototype.errors = function (fieldName) {
  return this.fieldErrors[fieldName] || [];
};

/**
 * Retrieves the list of error field names. Returns
 * an empty array if no errors are stored. 
 * 
 * @returns {string[]}
 */
Validation.prototype.errorFieldNames = function () {
  return Object.keys(this.fieldErrors);
};

/**
 * Merges two validations. If both validations contain errors for 
 * the same field, the second validation's errors will overwrite the 
 * first. 
 *
 * This operation does not modify either validation. It creates a 
 * new validation which contains the combined information from both 
 * input validations. 
 *
 * @param {Validation} Validation to merge. 
 * @returns {Validation}
 */
Validation.prototype.merge = function (validation) {
  var result = new Validation();
  
  this._copyErrorsTo(result);
  validation._copyErrorsTo(result);
  
  return result;
};

/**
 * Merges a list of validations, cascading conflicting field errors 
 * from the end of the array to the beginning. 
 *
 * This operation does not modify any input validations. It creates a 
 * new validation which contains the combined information from all 
 * input validations. 
 *
 * @param {Validation} Validation to merge. 
 * @returns {Validation}
 */
Validation.merge = function () {
  var validations = convertArgumentsToArray(arguments);

  return validations.reduce(function (previous, current) {
    return previous.merge(current);
  });
};

/**
 * Determines if the validation succeeded. 
 *
 * @returns {Boolean}
 */
Validation.prototype.succeeded = function () {
  return 0 === Object.keys(this.fieldErrors).map(function (fieldName) {
    return this.errors(fieldName).length;
  }.bind(this)).reduce(function (previous, current) {
    return previous + current;
  }, 0);
};

Validation.prototype._copyErrorsTo = function (validation) {
  Object.keys(this.fieldErrors).forEach(function (fieldName) {
    this.errors(fieldName).forEach(function (error) {
      validation.addError(fieldName, error);
    });
  }.bind(this));
};

function convertArgumentsToArray(arguments) {
  var args = [];
  
  for (var key in arguments) {
    args.push(arguments[key]);
  }
  
  return args;
}

module.exports = Validation; at SyntaxError: Binding arguments in strict mode (104:33)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.checkLVal (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1472:14)
    at Parser.pp$3.checkParams (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2136:16)
    at Parser.pp$3.parseFunctionBody (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2119:12)
    at Parser.parseFunctionBody (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:14:32)
    at Parser.pp$1.parseFunction (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1065:10)
    at Parser.pp$1.parseFunctionStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:818:17)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:694:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/validately/node_modules/validately/src/index.js. Coverage (Term): 31% Coverage (LOC): 38%
*- File /root/Targets/validately/node_modules/validately/src/FormValidatorFactory.js. Coverage (Term): 12% Coverage (LOC): 21%
*- File /root/Targets/validately/node_modules/validately/src/FormValidator.js. Coverage (Term): 9% Coverage (LOC): 14%
*- File /root/Targets/validately/node_modules/validately/src/Field.js. Coverage (Term): 12% Coverage (LOC): 21%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
