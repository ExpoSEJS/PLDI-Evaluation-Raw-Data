/root/Targets/vesta
└─┬ vesta@2.3.1 
  ├── @vesta/core@0.2.12 
  ├── @vesta/culture-us@0.1.6 
  ├── colors@1.1.2 
  ├─┬ fs-extra@3.0.1 
  │ ├── graceful-fs@4.1.11 
  │ ├── jsonfile@3.0.1 
  │ └── universalify@0.1.1 
  ├─┬ inquirer@3.3.0 
  │ ├── ansi-escapes@3.0.0 
  │ ├─┬ chalk@2.1.0 
  │ │ ├─┬ ansi-styles@3.2.0 
  │ │ │ └─┬ color-convert@1.9.0 
  │ │ │   └── color-name@1.1.3 
  │ │ ├── escape-string-regexp@1.0.5 
  │ │ └─┬ supports-color@4.4.0 
  │ │   └── has-flag@2.0.0 
  │ ├─┬ cli-cursor@2.1.0 
  │ │ └─┬ restore-cursor@2.0.0 
  │ │   ├─┬ onetime@2.0.1 
  │ │   │ └── mimic-fn@1.1.0 
  │ │   └── signal-exit@3.0.2 
  │ ├── cli-width@2.2.0 
  │ ├─┬ external-editor@2.0.5 
  │ │ ├── iconv-lite@0.4.19 
  │ │ ├── jschardet@1.5.1 
  │ │ └─┬ tmp@0.0.33 
  │ │   └── os-tmpdir@1.0.2 
  │ ├── figures@2.0.0 
  │ ├── lodash@4.17.4 
  │ ├── mute-stream@0.0.7 
  │ ├─┬ run-async@2.3.0 
  │ │ └── is-promise@2.1.0 
  │ ├── rx-lite@4.0.8 
  │ ├── rx-lite-aggregates@4.0.8 
  │ ├─┬ string-width@2.1.1 
  │ │ └── is-fullwidth-code-point@2.0.0 
  │ ├─┬ strip-ansi@4.0.0 
  │ │ └── ansi-regex@3.0.0 
  │ └── through@2.3.8 
  ├── is-root@1.0.0 
  ├─┬ speakeasy@2.0.0 
  │ └── base32.js@0.0.1 
  ├── typescript@2.5.3 
  ├─┬ xml-to-json@0.1.1 
  │ └─┬ xml2js@0.4.19 
  │   ├── sax@1.2.4 
  │   └── xmlbuilder@9.0.4 
  └─┬ yamljs@0.2.10 
    ├─┬ argparse@1.0.9 
    │ └── sprintf-js@1.0.3 
    └─┬ glob@7.1.2 
      ├── fs.realpath@1.0.0 
      ├─┬ inflight@1.0.6 
      │ └── wrappy@1.0.2 
      ├── inherits@2.0.3 
      ├─┬ minimatch@3.0.4 
      │ └─┬ brace-expansion@1.1.8 
      │   ├── balanced-match@1.0.0 
      │   └── concat-map@0.0.1 
      ├── once@1.4.0 
      └── path-is-absolute@1.0.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/vesta/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.062 took 5.3029s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #! /usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path = require("path");
const Create_1 = require("./cmd/Create");
const Init_1 = require("./cmd/Init");
const Gen_1 = require("./cmd/Gen");
const Update_1 = require("./cmd/Update");
const Deploy_1 = require("./cmd/Deploy");
const Backup_1 = require("./cmd/Backup");
const Docker_1 = require("./cmd/Docker");
const Module_1 = require("./cmd/Module");
const Log_1 = require("./util/Log");
const PlatformConfig_1 = require("./PlatformConfig");
const ArgParser_1 = require("./util/ArgParser");
const FsUtil_1 = require("./util/FsUtil");
const argParser = ArgParser_1.ArgParser.getInstance();
let command = argParser.get();
const packageInfo = FsUtil_1.readJsonFile(path.join(__dirname, '../package.json'));
if (!command) {
    if (argParser.has('--version', '-v')) {
        Log_1.Log.write(`Vesta Platform v${packageInfo.version}\n`);
    }
    else if (argParser.hasHelp()) {
        Log_1.Log.write(`
Vesta Platform v${packageInfo.version}

Usage: vesta <COMMAND> [args...]
       vesta [ --help | --version ]

Vesta platform command line

Options:
    -h, --help      Displays this help
    -v, --version   Displays the version of vesta platform

Commands:
    init            Initiating a vesta project from existing code and Managing server (Ubuntu)
    create          Creating new project
    module          Creating new module for vesta platform
    gen             Generate code for mentioned type
    deploy          Deploy a project from remote repository
    backup          Backup all storage data into a single tar file
    docker          Manage docker relevant operations
    update          Updates a package to it's latest version

Run 'vesta <COMMAND> --help' for more information on COMMAND

Attention:
    <arg>               Mandatory argument
    [arg]               Optional argument
    {default: value}    The default value if argument is not provided
`);
    }
    process.exit(0);
}
// initiating platform configuration
PlatformConfig_1.PlatformConfig.init(packageInfo.vesta);
switch (command) {
    // no need to vesta.json
    case 'init':
        Init_1.Init.init();
        break;
    case 'create':
        Create_1.Create.init();
        break;
    case 'module':
        Module_1.Module.init();
        break;
    case 'deploy':
        Deploy_1.Deploy.init();
        break;
    case 'backup':
        Backup_1.Backup.init();
        break;
    case 'docker':
        Docker_1.Docker.init();
        break;
    case 'update':
        Update_1.Update.init();
        break;
    // vesta.json must exist
    case 'gen':
        Gen_1.Gen.init();
        break;
    default:
        let error = command ? `'${command}' is not a vesta command\n` : '';
        Log_1.Log.error(`vesta: ${error}See 'Vesta --help'\n`);
}
process.on('unhandledRejection', err => {
    Log_1.Log.error(`\nAn unhandledRejection occurred:\n ${err.message}`);
    // console.error(err);
});
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
