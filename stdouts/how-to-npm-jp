/root/Targets/how-to-npm-jp
└─┬ how-to-npm-jp@1.0.1 
  ├─┬ adventure@2.10.0 
  │ ├── inherits@2.0.1 
  │ ├── minimist@0.2.0 
  │ ├─┬ split@0.3.3 
  │ │ └── through@2.3.6 
  │ ├─┬ terminal-menu@2.1.1 
  │ │ ├── charm@0.1.2 
  │ │ ├─┬ duplexer2@0.0.2 
  │ │ │ └─┬ readable-stream@1.1.13 
  │ │ │   ├── core-util-is@1.0.1 
  │ │ │   ├── isarray@0.0.1 
  │ │ │   └── string_decoder@0.10.31 
  │ │ ├─┬ resumer@0.0.0 
  │ │ │ └── through@2.3.6 
  │ │ ├─┬ through2@0.6.3 
  │ │ │ ├─┬ readable-stream@1.0.33 
  │ │ │ │ ├── core-util-is@1.0.1 
  │ │ │ │ ├── isarray@0.0.1 
  │ │ │ │ └── string_decoder@0.10.31 
  │ │ │ └── xtend@4.0.0 
  │ │ └── visualwidth@0.0.1 
  │ ├─┬ through2@0.5.1 
  │ │ ├─┬ readable-stream@1.0.33 
  │ │ │ ├── core-util-is@1.0.1 
  │ │ │ ├── isarray@0.0.1 
  │ │ │ └── string_decoder@0.10.31 
  │ │ └── xtend@3.0.0 
  │ └── x256@0.0.2 
  ├─┬ concat-stream@1.4.7 
  │ ├── inherits@2.0.1 
  │ ├─┬ readable-stream@1.1.13 
  │ │ ├── core-util-is@1.0.1 
  │ │ ├── isarray@0.0.1 
  │ │ └── string_decoder@0.10.31 
  │ └── typedarray@0.0.6 
  ├─┬ mkdirp@0.5.0 
  │ └── minimist@0.0.8 
  ├─┬ rimraf@2.3.2 
  │ └─┬ glob@4.5.3 
  │   ├─┬ inflight@1.0.4 
  │   │ └── wrappy@1.0.1 
  │   ├── inherits@2.0.1 
  │   ├─┬ minimatch@2.0.4 
  │   │ └─┬ brace-expansion@1.1.0 
  │   │   ├── balanced-match@0.2.0 
  │   │   └── concat-map@0.0.1 
  │   └─┬ once@1.3.1 
  │     └── wrappy@1.0.1 
  ├── semver@4.3.3 
  └── which@1.0.9 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/how-to-npm-jp/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.1158 took 4.7271s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node

var adventure = require('adventure')
var shop = module.exports = adventure({
  name: 'how-to-npm-jp',
  bg: 'white',
  fg: 'red'
})

var fs = require('fs')
var path = require('path')
var rimraf = require('rimraf')
var mkdirp = require('mkdirp')

var problems = fs.readdirSync(path.resolve(__dirname, 'problems'))
problems.filter(function (problem) {
  return problem.match(/^[^.].*\.js$/)
}).forEach(function (problem) {
  var name = problem.replace(/\.js$/, '').split('-').map(function (p) {
    if (p === 'npm')
      return p
    return p.charAt(0).toUpperCase() + p.slice(1)
  }).join(' ')
  shop.add(name, function () {
    return require('./problems/' + problem)
  })
})

shop.execute = function (args) {
  // Reset a bit harder, since we save other stuff in there.
  if (args[0] === 'reset') {
    require('./lib/registry.js').kill()
    rimraf.sync(this.datadir)
    mkdirp.sync(this.datadir)
  }

  return shop.constructor.prototype.execute.apply(this, arguments)
}

// Copy the registry-assets if they're not already there.
try {
  var assetsStat = fs.statSync(shop.datadir + '/registry')
  if (!assetsStat.isDirectory()) throw 'enotdir'
} catch (er) {
  rimraf.sync(shop.datadir + '/registry')
  cpr(path.resolve(__dirname, 'lib', 'registry-assets'),
      path.resolve(shop.datadir, 'registry'))
}

shop.cpr = cpr
function cpr (from, to) {
  var st = fs.statSync(from)
  if (st.isDirectory()) {
    mkdirp.sync(to)
    fs.readdirSync(from).forEach(function (file) {
      cpr(path.resolve(from, file), path.resolve(to, file))
    })
  } else {
    fs.writeFileSync(to, fs.readFileSync(from))
  }
}

shop.cwd = function () {
  var datadir = shop.datadir
  // verify we're in the right folder
  try {
    var cwd = fs.readFileSync(path.resolve(datadir, 'cwd'), 'utf8').trim()
    var pkg = require(cwd + '/package.json')
  } catch (er) {
    console.log('まだはじめる準備ができていないようです。\n' +
                'レッスン01に戻って、作業ディレクトリをセットアップ\n' +
                'してください。')
    return false
  }

  if (cwd === process.cwd())
    return cwd

  console.log('おっと。\n'+
              '間違ったフォルダーにいるようです。\n'+
              cwd + ' に cd してください。\n'+
              'それから再開しましょう。')
  return false
}

if (require.main === module)
  shop.execute(process.argv.slice(2))
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
