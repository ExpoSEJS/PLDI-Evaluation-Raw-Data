
> bufferutil@1.2.1 install /root/Targets/gcli/node_modules/bufferutil
> node-gyp rebuild

make: Entering directory '/root/Targets/gcli/node_modules/bufferutil/build'
  CXX(target) Release/obj.target/bufferutil/src/bufferutil.o
  SOLINK_MODULE(target) Release/obj.target/bufferutil.node
  COPY Release/bufferutil.node
make: Leaving directory '/root/Targets/gcli/node_modules/bufferutil/build'

> utf-8-validate@1.2.2 install /root/Targets/gcli/node_modules/utf-8-validate
> node-gyp rebuild

make: Entering directory '/root/Targets/gcli/node_modules/utf-8-validate/build'
  CXX(target) Release/obj.target/validation/src/validation.o
  SOLINK_MODULE(target) Release/obj.target/validation.node
  COPY Release/validation.node
make: Leaving directory '/root/Targets/gcli/node_modules/utf-8-validate/build'
/root/Targets/gcli
└─┬ gcli@0.6.4 
  ├─┬ body-parser@1.14.0 
  │ ├── bytes@2.1.0 
  │ ├── content-type@1.0.4 
  │ ├─┬ debug@2.2.0 
  │ │ └── ms@0.7.1 
  │ ├── depd@1.1.1 
  │ ├─┬ http-errors@1.3.1 
  │ │ ├── inherits@2.0.3 
  │ │ └── statuses@1.3.1 
  │ ├── iconv-lite@0.4.11 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── qs@5.1.0 
  │ ├─┬ raw-body@2.1.7 
  │ │ ├── bytes@2.4.0 
  │ │ ├── iconv-lite@0.4.13 
  │ │ └── unpipe@1.0.0 
  │ └─┬ type-is@1.6.15 
  │   ├── media-typer@0.3.0 
  │   └─┬ mime-types@2.1.17 
  │     └── mime-db@1.30.0 
  ├─┬ dom-urls@1.0.0 
  │ └── URIjs@1.16.1 
  ├─┬ dryice@0.4.11 
  │ └── uglify-js@1.3.5 
  ├── es6-promise@3.0.2 
  ├─┬ express@4.13.3 
  │ ├─┬ accepts@1.2.13 
  │ │ └── negotiator@0.5.3 
  │ ├── array-flatten@1.1.1 
  │ ├── content-disposition@0.5.0 
  │ ├── cookie@0.1.3 
  │ ├── cookie-signature@1.0.6 
  │ ├── depd@1.0.1 
  │ ├── escape-html@1.0.2 
  │ ├── etag@1.7.0 
  │ ├── finalhandler@0.4.0 
  │ ├── fresh@0.3.0 
  │ ├── merge-descriptors@1.0.0 
  │ ├── methods@1.1.2 
  │ ├── parseurl@1.3.2 
  │ ├── path-to-regexp@0.1.7 
  │ ├─┬ proxy-addr@1.0.10 
  │ │ ├── forwarded@0.1.2 
  │ │ └── ipaddr.js@1.0.5 
  │ ├── qs@4.0.0 
  │ ├── range-parser@1.0.3 
  │ ├─┬ send@0.13.0 
  │ │ ├── depd@1.0.1 
  │ │ ├── destroy@1.0.3 
  │ │ ├── mime@1.3.4 
  │ │ └── statuses@1.2.1 
  │ ├─┬ serve-static@1.10.3 
  │ │ ├── escape-html@1.0.3 
  │ │ └─┬ send@0.13.2 
  │ │   ├── destroy@1.0.4 
  │ │   └── statuses@1.2.1 
  │ ├── utils-merge@1.0.0 
  │ └── vary@1.0.1 
  ├─┬ jsdom@6.5.1 
  │ ├── acorn@2.7.0 
  │ ├── acorn-globals@1.0.9 
  │ ├── browser-request@0.3.3 
  │ ├── cssom@0.3.2 
  │ ├── cssstyle@0.2.37 
  │ ├─┬ escodegen@1.9.0 
  │ │ ├── esprima@3.1.3 
  │ │ ├── estraverse@4.2.0 
  │ │ ├── esutils@2.0.2 
  │ │ ├─┬ optionator@0.8.2 
  │ │ │ ├── deep-is@0.1.3 
  │ │ │ ├── fast-levenshtein@2.0.6 
  │ │ │ ├── levn@0.3.0 
  │ │ │ ├── prelude-ls@1.1.2 
  │ │ │ ├── type-check@0.3.2 
  │ │ │ └── wordwrap@1.0.0 
  │ │ └── source-map@0.5.7 
  │ ├─┬ htmlparser2@3.9.2 
  │ │ ├── domelementtype@1.3.0 
  │ │ ├── domhandler@2.4.1 
  │ │ ├─┬ domutils@1.6.2 
  │ │ │ └─┬ dom-serializer@0.1.0 
  │ │ │   └── domelementtype@1.1.3 
  │ │ ├── entities@1.1.1 
  │ │ └─┬ readable-stream@2.3.3 
  │ │   ├── process-nextick-args@1.0.7 
  │ │   ├── string_decoder@1.0.3 
  │ │   └── util-deprecate@1.0.2 
  │ ├── nwmatcher@1.4.1 
  │ ├── parse5@1.5.1 
  │ ├─┬ request@2.82.0 
  │ │ ├── aws-sign2@0.7.0 
  │ │ ├── aws4@1.6.0 
  │ │ ├── caseless@0.12.0 
  │ │ ├─┬ combined-stream@1.0.5 
  │ │ │ └── delayed-stream@1.0.0 
  │ │ ├── extend@3.0.1 
  │ │ ├── forever-agent@0.6.1 
  │ │ ├─┬ form-data@2.3.1 
  │ │ │ └── asynckit@0.4.0 
  │ │ ├─┬ har-validator@5.0.3 
  │ │ │ ├─┬ ajv@5.2.2 
  │ │ │ │ ├── co@4.6.0 
  │ │ │ │ ├── fast-deep-equal@1.0.0 
  │ │ │ │ ├── json-schema-traverse@0.3.1 
  │ │ │ │ └─┬ json-stable-stringify@1.0.1 
  │ │ │ │   └── jsonify@0.0.0 
  │ │ │ └── har-schema@2.0.0 
  │ │ ├─┬ hawk@6.0.2 
  │ │ │ ├── boom@4.3.1 
  │ │ │ ├─┬ cryptiles@3.1.2 
  │ │ │ │ └── boom@5.2.0 
  │ │ │ ├── hoek@4.2.0 
  │ │ │ └── sntp@2.0.2 
  │ │ ├─┬ http-signature@1.2.0 
  │ │ │ ├── assert-plus@1.0.0 
  │ │ │ ├─┬ jsprim@1.4.1 
  │ │ │ │ ├── extsprintf@1.3.0 
  │ │ │ │ ├── json-schema@0.2.3 
  │ │ │ │ └── verror@1.10.0 
  │ │ │ └─┬ sshpk@1.13.1 
  │ │ │   ├── asn1@0.2.3 
  │ │ │   ├── bcrypt-pbkdf@1.0.1 
  │ │ │   ├── dashdash@1.14.1 
  │ │ │   ├── ecc-jsbn@0.1.1 
  │ │ │   ├── getpass@0.1.7 
  │ │ │   ├── jsbn@0.1.1 
  │ │ │   └── tweetnacl@0.14.5 
  │ │ ├── is-typedarray@1.0.0 
  │ │ ├── isstream@0.1.2 
  │ │ ├── json-stringify-safe@5.0.1 
  │ │ ├── oauth-sign@0.8.2 
  │ │ ├── performance-now@2.1.0 
  │ │ ├── qs@6.5.1 
  │ │ ├── safe-buffer@5.1.1 
  │ │ ├── stringstream@0.0.5 
  │ │ ├── tunnel-agent@0.6.0 
  │ │ └── uuid@3.1.0 
  │ ├── symbol-tree@3.2.2 
  │ ├── tough-cookie@2.3.2 
  │ ├─┬ whatwg-url-compat@0.6.5 
  │ │ └── tr46@0.0.3 
  │ ├── xml-name-validator@2.0.1 
  │ ├── xmlhttprequest@1.8.0 
  │ └── xtend@4.0.1 
  ├── json-loader@0.5.3 
  ├─┬ morgan@1.6.1 
  │ ├── basic-auth@1.0.4 
  │ ├── depd@1.0.1 
  │ └── on-headers@1.0.1 
  ├─┬ node-libs-browser@0.5.3 
  │ ├── assert@1.4.1 
  │ ├─┬ browserify-zlib@0.1.4 
  │ │ └── pako@0.2.9 
  │ ├─┬ buffer@3.6.0 
  │ │ ├── base64-js@0.0.8 
  │ │ ├── ieee754@1.1.8 
  │ │ └── isarray@1.0.0 
  │ ├─┬ console-browserify@1.1.0 
  │ │ └── date-now@0.1.4 
  │ ├── constants-browserify@0.0.1 
  │ ├─┬ crypto-browserify@3.2.8 
  │ │ ├── pbkdf2-compat@2.0.1 
  │ │ ├── ripemd160@0.2.0 
  │ │ └── sha.js@2.2.6 
  │ ├── domain-browser@1.1.7 
  │ ├── events@1.1.1 
  │ ├─┬ http-browserify@1.7.0 
  │ │ └── Base64@0.2.1 
  │ ├── https-browserify@0.0.0 
  │ ├── os-browserify@0.1.2 
  │ ├── path-browserify@0.0.0 
  │ ├── process@0.11.10 
  │ ├── punycode@1.4.1 
  │ ├── querystring-es3@0.2.1 
  │ ├─┬ readable-stream@1.1.14 
  │ │ ├── core-util-is@1.0.2 
  │ │ └── isarray@0.0.1 
  │ ├─┬ stream-browserify@1.0.0 
  │ │ └─┬ readable-stream@1.1.14 
  │ │   ├── isarray@0.0.1 
  │ │   └── string_decoder@0.10.31 
  │ ├── string_decoder@0.10.31 
  │ ├── timers-browserify@1.4.2 
  │ ├── tty-browserify@0.0.0 
  │ ├─┬ url@0.10.3 
  │ │ ├── punycode@1.3.2 
  │ │ └── querystring@0.2.0 
  │ ├─┬ util@0.10.3 
  │ │ └── inherits@2.0.1 
  │ └── vm-browserify@0.0.4 
  ├── raw-loader@0.5.1 
  ├─┬ socket.io@1.3.7 
  │ ├─┬ debug@2.1.0 
  │ │ └── ms@0.6.2 
  │ ├─┬ engine.io@1.5.4 
  │ │ ├── base64id@0.1.0 
  │ │ ├─┬ debug@1.0.3 
  │ │ │ └── ms@0.6.2 
  │ │ ├─┬ engine.io-parser@1.2.2 
  │ │ │ ├── after@0.8.1 
  │ │ │ ├── arraybuffer.slice@0.0.6 
  │ │ │ ├── base64-arraybuffer@0.1.2 
  │ │ │ ├── blob@0.0.4 
  │ │ │ └── utf8@2.1.0 
  │ │ └─┬ ws@0.8.0 
  │ │   ├─┬ bufferutil@1.2.1 
  │ │   │ ├── bindings@1.2.1 
  │ │   │ └── nan@2.7.0 
  │ │   ├── options@0.0.6 
  │ │   ├── ultron@1.0.2 
  │ │   └─┬ utf-8-validate@1.2.2 
  │ │     └── nan@2.4.0 
  │ ├─┬ has-binary-data@0.1.3 
  │ │ └── isarray@0.0.1 
  │ ├─┬ socket.io-adapter@0.3.1 
  │ │ ├─┬ debug@1.0.2 
  │ │ │ └── ms@0.6.2 
  │ │ ├── object-keys@1.0.1 
  │ │ └─┬ socket.io-parser@2.2.2 
  │ │   ├── debug@0.7.4 
  │ │   └── isarray@0.0.1 
  │ └─┬ socket.io-parser@2.2.4 
  │   ├── benchmark@1.0.0 
  │   ├── debug@0.7.4 
  │   ├── isarray@0.0.1 
  │   └── json3@3.2.6 
  ├─┬ socket.io-client@1.3.7 
  │ ├── backo2@1.0.2 
  │ ├── component-bind@1.0.0 
  │ ├── component-emitter@1.1.2 
  │ ├── debug@0.7.4 
  │ ├─┬ engine.io-client@1.5.4 
  │ │ ├── component-inherit@0.0.3 
  │ │ ├─┬ debug@1.0.4 
  │ │ │ └── ms@0.6.2 
  │ │ ├─┬ has-cors@1.0.3 
  │ │ │ └── global@2.0.1 
  │ │ ├── parsejson@0.0.1 
  │ │ ├── parseqs@0.0.2 
  │ │ ├── parseuri@0.0.4 
  │ │ └── xmlhttprequest@1.5.0 
  │ ├─┬ has-binary@0.1.6 
  │ │ └── isarray@0.0.1 
  │ ├── indexof@0.0.1 
  │ ├── object-component@0.0.3 
  │ ├─┬ parseuri@0.0.2 
  │ │ └─┬ better-assert@1.0.2 
  │ │   └── callsite@1.0.0 
  │ └── to-array@0.1.3 
  └─┬ webpack@1.12.2 
    ├── async@1.5.2 
    ├── clone@1.0.2 
    ├─┬ enhanced-resolve@0.9.1 
    │ └── graceful-fs@4.1.11 
    ├── esprima@2.7.3 
    ├── interpret@0.6.6 
    ├── memory-fs@0.2.0 
    ├─┬ mkdirp@0.5.1 
    │ └── minimist@0.0.8 
    ├─┬ optimist@0.6.1 
    │ └── wordwrap@0.0.3 
    ├─┬ supports-color@3.2.3 
    │ └── has-flag@1.0.0 
    ├── tapable@0.1.10 
    ├─┬ uglify-js@2.4.24 
    │ ├── async@0.2.10 
    │ ├── source-map@0.1.34 
    │ ├── uglify-to-browserify@1.0.2 
    │ └─┬ yargs@3.5.4 
    │   ├── camelcase@1.2.1 
    │   ├── decamelize@1.2.0 
    │   ├── window-size@0.1.0 
    │   └── wordwrap@0.0.2 
    ├─┬ watchpack@0.2.9 
    │ ├── async@0.9.2 
    │ └─┬ chokidar@1.7.0 
    │   ├─┬ anymatch@1.3.2 
    │   │ ├─┬ micromatch@2.3.11 
    │   │ │ ├─┬ arr-diff@2.0.0 
    │   │ │ │ └── arr-flatten@1.1.0 
    │   │ │ ├── array-unique@0.2.1 
    │   │ │ ├─┬ braces@1.8.5 
    │   │ │ │ ├─┬ expand-range@1.8.2 
    │   │ │ │ │ └─┬ fill-range@2.2.3 
    │   │ │ │ │   ├── is-number@2.1.0 
    │   │ │ │ │   ├── isobject@2.1.0 
    │   │ │ │ │   ├─┬ randomatic@1.1.7 
    │   │ │ │ │   │ ├─┬ is-number@3.0.0 
    │   │ │ │ │   │ │ └── kind-of@3.2.2 
    │   │ │ │ │   │ └── kind-of@4.0.0 
    │   │ │ │ │   └── repeat-string@1.6.1 
    │   │ │ │ ├── preserve@0.2.0 
    │   │ │ │ └── repeat-element@1.1.2 
    │   │ │ ├─┬ expand-brackets@0.1.5 
    │   │ │ │ └── is-posix-bracket@0.1.1 
    │   │ │ ├── extglob@0.3.2 
    │   │ │ ├── filename-regex@2.0.1 
    │   │ │ ├─┬ kind-of@3.2.2 
    │   │ │ │ └── is-buffer@1.1.5 
    │   │ │ ├─┬ object.omit@2.0.1 
    │   │ │ │ ├─┬ for-own@0.1.5 
    │   │ │ │ │ └── for-in@1.0.2 
    │   │ │ │ └── is-extendable@0.1.1 
    │   │ │ ├─┬ parse-glob@3.0.4 
    │   │ │ │ ├── glob-base@0.3.0 
    │   │ │ │ └── is-dotfile@1.0.3 
    │   │ │ └─┬ regex-cache@0.4.4 
    │   │ │   └─┬ is-equal-shallow@0.1.3 
    │   │ │     └── is-primitive@2.0.0 
    │   │ └─┬ normalize-path@2.1.1 
    │   │   └── remove-trailing-separator@1.1.0 
    │   ├── async-each@1.0.1 
    │   ├── glob-parent@2.0.0 
    │   ├─┬ is-binary-path@1.0.1 
    │   │ └── binary-extensions@1.10.0 
    │   ├─┬ is-glob@2.0.1 
    │   │ └── is-extglob@1.0.0 
    │   ├── path-is-absolute@1.0.1 
    │   └─┬ readdirp@2.1.0 
    │     ├─┬ minimatch@3.0.4 
    │     │ └─┬ brace-expansion@1.1.8 
    │     │   ├── balanced-match@1.0.0 
    │     │   └── concat-map@0.0.1 
    │     └── set-immediate-shim@1.0.1 
    └─┬ webpack-core@0.6.9 
      ├── source-list-map@0.1.8 
      └─┬ source-map@0.4.4 
        └── amdefine@1.0.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/gcli/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 35% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","create","resolve","bind","Date","reduce","call"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0913 took 44.6921s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (21:4) on program /*
 * Copyright 2012, Mozilla Foundation and contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use strict';
var examiner = exports;

var util = require('../util/util');
var assert = require('./assert');
var stati = require('./status').stati;

/**
 * Test harness data
 */
examiner._suites = {};

/**
 * The gap between tests when running async
 */
var delay = 10;

/**
 * Add a test suite. Generally used like:
 * test.addSuite('foo', require('path/to/foo'));
 */
examiner.addSuite = function(name, suite) {
  examiner._suites[name] = new Suite(name, suite);
};

/**
 * Provide a clone of examiner._suites for external consumption
 */
Object.defineProperty(examiner, 'suites', {
  get: function() {
    var reply = {};
    Object.keys(examiner._suites).forEach(function(name) {
      reply[name] = examiner._suites[name];
    });
    return reply;
  },
  enumerable: true
});

/**
 * Run all the tests asynchronously
 */
examiner.run = function(options) {
  var suiteNames = Object.keys(examiner._suites);
  return util.promiseEach(suiteNames, function(suiteName) {
    return examiner._suites[suiteName].run(options);
  });
};

/**
 * Create a JSON object suitable for serialization
 */
examiner.toRemote = function() {
  return {
    suites: Object.keys(examiner._suites).map(function(suiteName) {
      return examiner._suites[suiteName].toRemote();
    }),
    summary: {
      checks: this.checks,
      status: this.status
    }
  };
};

/**
 * Reset all the tests to their original state
 */
examiner.reset = function() {
  Object.keys(examiner._suites).forEach(function(suiteName) {
    examiner._suites[suiteName].reset();
  }, this);
};

/**
 * The number of checks in this set of test suites is the sum of the checks in
 * the test suites.
 */
Object.defineProperty(examiner, 'checks', {
  get: function() {
    return  Object.keys(examiner._suites).reduce(function(current, suiteName) {
      return current + examiner._suites[suiteName].checks;
    }, 0);
  },
  enumerable: true
});

/**
 * The status of this set of test suites is the worst of the statuses of the
 * contained test suites.
 */
Object.defineProperty(examiner, 'status', {
  get: function() {
    return Object.keys(examiner._suites).reduce(function(status, suiteName) {
      var suiteStatus = examiner._suites[suiteName].status;
      return status.index > suiteStatus.index ? status : suiteStatus;
    }, stati.notrun);
  },
  enumerable: true
});

/**
 * Return a test summary
 */
examiner.detailedResultLog = function(name) {
  var reply = name + ' Summary: ' + this.status.name +
              ' (' + this.checks + ' checks)';

  if (this.status !== stati.pass) {
    reply += '\n';
    Object.keys(this.suites).forEach(function(suiteName) {
      var suite = examiner._suites[suiteName];
      if (suite.status !== stati.pass) {
        reply += '- ' + suite.name + ': ' + suite.status.name +
                 ' (funcs=' + Object.keys(suite.tests).length +
                 ', checks=' + suite.checks +
                 ', skipped=' + suite.skippedCount + ')\n';

        Object.keys(suite.tests).forEach(function(testName) {
          var test = suite.tests[testName];
          if (test.status !== stati.pass) {
            reply += '  - ' + test.name + ': ' + test.status.name + '\n';
            test.failures.forEach(function(failure) {
              reply += '    - ' + failure.message + '\n';
              if (failure.params) {
                reply += '      - (Actual)   P1: ' + failure.p1 + '\n';
                reply += '      - (Expected) P2: ' + failure.p2 + '\n';
              }
            }, this);
          }
        }, this);
      }
    }, this);
  }

  return reply;
};

/**
 * A suite is a group of tests
 */
function Suite(suiteName, suite) {
  this.name = suiteName;
  this.suite = suite;

  this.tests = {};

  Object.keys(suite).forEach(function(testName) {
    if (testName !== 'setup' && testName !== 'shutdown') {
      var test = new Test(this, testName, suite[testName]);
      this.tests[testName] = test;
    }
  }, this);
}

/**
 * Reset all the tests to their original state
 */
Suite.prototype.reset = function() {
  Object.keys(this.tests).forEach(function(testName) {
    this.tests[testName].reset();
  }, this);
};

/**
 * Run all the tests in this suite asynchronously (includes doing a setup and
 * shutdown of the suite)
 */
Suite.prototype.run = function(options) {
  return Promise.resolve(this._setup(options)).then(function() {
    var testNames = Object.keys(this.tests);
    var runTest = function(testName) {
      return this.tests[testName].run(options);
    }.bind(this);

    return util.promiseEach(testNames, runTest).then(function() {
      return this._shutdown(options);
    }.bind(this));
  }.bind(this));
};

/**
 * Create a JSON object suitable for serialization
 */
Suite.prototype.toRemote = function() {
  return {
    name: this.name,
    tests: Object.keys(this.tests).map(function(testName) {
      return this.tests[testName].toRemote();
    }.bind(this))
  };
};

/**
 * The number of checks in this suite is the sum of the checks in the contained
 * tests.
 */
Object.defineProperty(Suite.prototype, 'checks', {
  get: function() {
    return Object.keys(this.tests).reduce(function(prevChecks, testName) {
      return prevChecks + this.tests[testName].checks;
    }.bind(this), 0);
  },
  enumerable: true
});

/**
 * The status of a test suite is the worst of the statuses of the contained
 * tests.
 */
Object.defineProperty(Suite.prototype, 'status', {
  get: function() {
    return Object.keys(this.tests).reduce(function(prevStatus, testName) {
      var suiteStatus = this.tests[testName].status;
      return prevStatus.index > suiteStatus.index ? prevStatus : suiteStatus;
    }.bind(this), stati.notrun);
  },
  enumerable: true
});

/**
 * The status of a test suite is the worst of the statuses of the contained
 * tests.
 */
Object.defineProperty(Suite.prototype, 'skippedCount', {
  get: function() {
    return Object.keys(this.tests).reduce(function(count, testName) {
      return count + this.tests[testName].skipped.length;
    }.bind(this), 0);
  },
  enumerable: true
});

/**
 * Defensively setup the test suite
 */
Suite.prototype._setup = function(options) {
  if (typeof this.suite.setup !== 'function') {
    return true;
  }

  try {
    this.suite.setup(options);
    return true;
  }
  catch (ex) {
    this._logToAllTests('' + ex);
    console.error(ex);
    if (ex.stack) {
      console.error(ex.stack);
    }
    return false;
  }
};

/**
 * Defensively shutdown the test suite
 */
Suite.prototype._shutdown = function(options) {
  if (typeof this.suite.shutdown !== 'function') {
    return true;
  }

  try {
    this.suite.shutdown(options);
    return true;
  }
  catch (ex) {
    this._logToAllTests('' + ex);
    console.error(ex);
    if (ex.stack) {
      console.error(ex.stack);
    }
    return false;
  }
};

/**
 * Something has gone wrong that affects all tests in this Suite
 */
Suite.prototype._logToAllTests = function(message) {
  var priorCurrentTest = assert.currentTest;
  Object.keys(this.tests).forEach(function(testName) {
    assert.currentTest = this.tests[testName];
    assert.ok(false, message);
  }.bind(this));
  assert.currentTest = priorCurrentTest;
};


/**
 * A test represents data about a single test function
 */
function Test(suite, name, func) {
  this.suite = suite;
  this.name = name;
  this.func = func;
  this.title = name.replace(/^test/, '').replace(/([A-Z])/g, ' $1');

  this.failures = [];
  this.skipped = [];
  this.status = stati.notrun;
  this.checks = 0;
}

Test.prototype.toString = function() {
  return this.suite.name + '.' + this.name;
};

/**
 * Reset the test to its original state
 */
Test.prototype.reset = function() {
  this.failures = [];
  this.skipped = [];
  this.status = stati.notrun;
  this.checks = 0;
};

/**
 * Run all the tests in this suite asynchronously
 */
Test.prototype.run = function(options) {
  assert.currentTest = this;
  this.status = stati.executing;

  if (assert.testLogging) {
    console.log('START: ' + assert.currentTest);
  }

  var promise = new Promise(function(resolve, reject) {
    setTimeout(function() {
      try {
        var reply = this.func.apply(this.suite, [ options ]);
        Promise.resolve(reply).then(function() {
          resolve();
        }.bind(this), function(err) {
          assert.ok(false, 'Returned promise, rejected with: ' + toString(err));
          resolve();
        }.bind(this));
      }
      catch (ex) {
        assert.ok(false, 'Exception: ' + toString(ex));
        resolve();
      }
    }.bind(this), delay);
  }.bind(this));

  return promise.then(function() {
    if (this.status === stati.executing) {
      this.status = this.failures.length === 0 ? stati.pass : stati.fail;
    }

    if (assert.testLogging) {
      console.log('END: ' + assert.currentTest);
    }

    assert.currentTest = null;
  }.bind(this));
};

/**
 * Object.toString could be a lot better
 */
function toString(err) {
  if (err === null) {
    return 'null';
  }

  if (err === undefined) {
    return 'undefined';
  }

  // Convert err to a string
  if (typeof err === 'string') {
    return err;
  }

  if (err instanceof Error) {
    return '' + err.stack;
  }

  // If an object has it's own toString, that's probably the best way
  if (err.toString !== Object.prototype.toString) {
    return err.toString();
  }

  // Next best is JSON, if the object is JSONable
  try {
    return JSON.stringify(err);
  }
  catch (ex) {
    // Resort to Object.toString otherwise
    err = '' + err;
  }
}

/**
 * Create a JSON object suitable for serialization
 */
Test.prototype.toRemote = function() {
  return {
    name: this.name,
    title: this.title,
    status: this.status,
    failures: this.failures,
    checks: this.checks
  };
};
 at SyntaxError: Unexpected token (21:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/index.js. Coverage (Term): 93% Coverage (LOC): 100%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/util/legacy.js. Coverage (Term): 14% Coverage (LOC): 19%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/system.js. Coverage (Term): 8% Coverage (LOC): 10%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/util/util.js. Coverage (Term): 19% Coverage (LOC): 42%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/commands/commands.js. Coverage (Term): 8% Coverage (LOC): 13%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/util/l10n.js. Coverage (Term): 27% Coverage (LOC): 77%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/nls/strings.js. Coverage (Term): 99% Coverage (LOC): 100%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/connectors/connectors.js. Coverage (Term): 21% Coverage (LOC): 37%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/converters/converters.js. Coverage (Term): 18% Coverage (LOC): 38%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/util/host.js. Coverage (Term): 13% Coverage (LOC): 20%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/connectors/front.js. Coverage (Term): 25% Coverage (LOC): 42%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/fields/fields.js. Coverage (Term): 29% Coverage (LOC): 47%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/languages/languages.js. Coverage (Term): 14% Coverage (LOC): 34%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/settings.js. Coverage (Term): 18% Coverage (LOC): 34%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/types/types.js. Coverage (Term): 19% Coverage (LOC): 33%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/ui/terminal.js. Coverage (Term): 11% Coverage (LOC): 19%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/util/domtemplate.js. Coverage (Term): 4% Coverage (LOC): 8%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/ui/history.js. Coverage (Term): 32% Coverage (LOC): 50%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/ui/focus.js. Coverage (Term): 15% Coverage (LOC): 24%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/items/basic.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/types/delegate.js. Coverage (Term): 17% Coverage (LOC): 44%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/types/selection.js. Coverage (Term): 12% Coverage (LOC): 18%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/util/spell.js. Coverage (Term): 11% Coverage (LOC): 19%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/types/array.js. Coverage (Term): 20% Coverage (LOC): 37%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/types/boolean.js. Coverage (Term): 40% Coverage (LOC): 64%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/types/command.js. Coverage (Term): 11% Coverage (LOC): 23%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/cli.js. Coverage (Term): 9% Coverage (LOC): 16%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/ui/view.js. Coverage (Term): 29% Coverage (LOC): 32%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/types/date.js. Coverage (Term): 9% Coverage (LOC): 19%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/types/javascript.js. Coverage (Term): 10% Coverage (LOC): 14%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/types/node.js. Coverage (Term): 17% Coverage (LOC): 29%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/types/number.js. Coverage (Term): 9% Coverage (LOC): 19%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/types/resource.js. Coverage (Term): 12% Coverage (LOC): 24%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/types/setting.js. Coverage (Term): 26% Coverage (LOC): 47%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/types/string.js. Coverage (Term): 18% Coverage (LOC): 50%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/types/union.js. Coverage (Term): 11% Coverage (LOC): 21%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/types/url.js. Coverage (Term): 22% Coverage (LOC): 27%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/converters/basic.js. Coverage (Term): 40% Coverage (LOC): 84%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/converters/html.js. Coverage (Term): 43% Coverage (LOC): 73%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/converters/terminal.js. Coverage (Term): 26% Coverage (LOC): 55%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/items/ui.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/fields/delegate.js. Coverage (Term): 28% Coverage (LOC): 42%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/fields/selection.js. Coverage (Term): 25% Coverage (LOC): 38%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/ui/menu.js. Coverage (Term): 15% Coverage (LOC): 24%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/ui/intro.js. Coverage (Term): 29% Coverage (LOC): 39%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/languages/command.js. Coverage (Term): 8% Coverage (LOC): 16%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/languages/javascript.js. Coverage (Term): 16% Coverage (LOC): 37%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/util/prism.js. Coverage (Term): 22% Coverage (LOC): 34%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/items/remote.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/connectors/websocket.js. Coverage (Term): 21% Coverage (LOC): 30%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/connectors/xhr.js. Coverage (Term): 28% Coverage (LOC): 41%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/items/standard.js. Coverage (Term): 74% Coverage (LOC): 89%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/commands/clear.js. Coverage (Term): 40% Coverage (LOC): 59%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/commands/connect.js. Coverage (Term): 29% Coverage (LOC): 58%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/commands/context.js. Coverage (Term): 46% Coverage (LOC): 66%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/commands/global.js. Coverage (Term): 26% Coverage (LOC): 53%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/commands/help.js. Coverage (Term): 14% Coverage (LOC): 26%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/commands/intro.js. Coverage (Term): 88% Coverage (LOC): 100%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/commands/lang.js. Coverage (Term): 37% Coverage (LOC): 60%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/commands/mocks.js. Coverage (Term): 49% Coverage (LOC): 63%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/test/mockCommands.js. Coverage (Term): 55% Coverage (LOC): 85%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/test/mockFileCommands.js. Coverage (Term): 48% Coverage (LOC): 78%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/test/mockSettings.js. Coverage (Term): 44% Coverage (LOC): 72%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/test/mockDocument.js. Coverage (Term): 29% Coverage (LOC): 47%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/commands/pref.js. Coverage (Term): 73% Coverage (LOC): 89%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/commands/preflist.js. Coverage (Term): 22% Coverage (LOC): 48%
*- File /root/Targets/gcli/node_modules/gcli/lib/gcli/commands/test.js. Coverage (Term): 5% Coverage (LOC): 6%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
