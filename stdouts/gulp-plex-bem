/root/Targets/gulp-plex-bem
└─┬ gulp-plex-bem@0.0.1 
  ├─┬ gulp-util@3.0.8 
  │ ├── array-differ@1.0.0 
  │ ├── array-uniq@1.0.3 
  │ ├── beeper@1.1.1 
  │ ├─┬ chalk@1.1.3 
  │ │ ├── ansi-styles@2.2.1 
  │ │ ├── escape-string-regexp@1.0.5 
  │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ └── ansi-regex@2.1.1 
  │ │ ├── strip-ansi@3.0.1 
  │ │ └── supports-color@2.0.0 
  │ ├── dateformat@2.2.0 
  │ ├─┬ fancy-log@1.3.0 
  │ │ └── time-stamp@1.1.0 
  │ ├─┬ gulplog@1.0.0 
  │ │ └── glogg@1.0.0 
  │ ├─┬ has-gulplog@0.1.0 
  │ │ └── sparkles@1.0.0 
  │ ├── lodash._reescape@3.0.0 
  │ ├── lodash._reevaluate@3.0.0 
  │ ├── lodash._reinterpolate@3.0.0 
  │ ├─┬ lodash.template@3.6.2 
  │ │ ├── lodash._basecopy@3.0.1 
  │ │ ├── lodash._basetostring@3.0.1 
  │ │ ├── lodash._basevalues@3.0.0 
  │ │ ├── lodash._isiterateecall@3.0.9 
  │ │ ├─┬ lodash.escape@3.2.0 
  │ │ │ └── lodash._root@3.0.1 
  │ │ ├─┬ lodash.keys@3.1.2 
  │ │ │ ├── lodash._getnative@3.9.1 
  │ │ │ ├── lodash.isarguments@3.1.0 
  │ │ │ └── lodash.isarray@3.0.4 
  │ │ ├── lodash.restparam@3.6.1 
  │ │ └── lodash.templatesettings@3.1.1 
  │ ├── minimist@1.2.0 
  │ ├─┬ multipipe@0.1.2 
  │ │ └─┬ duplexer2@0.0.2 
  │ │   └── readable-stream@1.1.14 
  │ ├── object-assign@3.0.0 
  │ ├── replace-ext@0.0.1 
  │ ├─┬ through2@2.0.3 
  │ │ ├─┬ readable-stream@2.3.3 
  │ │ │ ├── isarray@1.0.0 
  │ │ │ ├── process-nextick-args@1.0.7 
  │ │ │ ├── safe-buffer@5.1.1 
  │ │ │ ├── string_decoder@1.0.3 
  │ │ │ └── util-deprecate@1.0.2 
  │ │ └── xtend@4.0.1 
  │ └─┬ vinyl@0.5.3 
  │   ├── clone@1.0.2 
  │   └── clone-stats@0.0.1 
  ├─┬ lodash.defaults@2.4.1 
  │ ├── lodash._objecttypes@2.4.1 
  │ └─┬ lodash.keys@2.4.1 
  │   ├── lodash._isnative@2.4.1 
  │   ├── lodash._shimkeys@2.4.1 
  │   └── lodash.isobject@2.4.1 
  └─┬ through2@0.5.1 
    ├─┬ readable-stream@1.0.34 
    │ ├── core-util-is@1.0.2 
    │ ├── inherits@2.0.3 
    │ ├── isarray@0.0.1 
    │ └── string_decoder@0.10.31 
    └── xtend@3.0.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/gulp-plex-bem/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 19% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0486 took 3.917s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Invalid number (11:21) on program var mkdirp = require('mkdirp');
var fs = require('fs');
var path = require('path');
module.exports = {
    /**
     * Create dir with mkdirp
     * @param path
     * @param callback
     */
    mkdir: function (path, callback) {
        mkdirp(path, 0755, function (err) {
            if (err) throw err;
            console.log('   \033[36mcreate\033[0m : ' + path);
            callback && callback();
        });
    },
    mkdirSync: function(path){
        mkdirp.sync(path,0755);
    },
    /**
     * Delete this directory recursive
     * @param path
     */
    deleteFolderRecursive: function (path) {
        var files = [];
        var self = this;
        if (fs.existsSync(path)) {
            files = fs.readdirSync(path);
            files.forEach(function (file, index) {
                var curPath = path + "/" + file;
                if (fs.lstatSync(curPath).isDirectory()) { // recurse
                    self.deleteFolderRecursive(curPath);
                } else { // delete file
                    fs.unlinkSync(curPath);
                }
            });
            fs.rmdirSync(path);
        }
    },
    /**
     * Delete all files and folders in this directory
     * @param path
     */
    deleteFolderInnerRecursive: function (path) {
        var files = [];
        var self = this;
        if (fs.existsSync(path)) {
            files = fs.readdirSync(path);
            files.forEach(function (file, index) {
                var curPath = path + "/" + file;
                if (fs.lstatSync(curPath).isDirectory()) {
                    self.deleteFolderInnerRecursive(curPath);
                    fs.rmdirSync(curPath);
                } else {
                    fs.unlinkSync(curPath);
                }
            });
        }
    },
    deleteFilesInDir: function (path) {
        var files = [];
        var self = this;
        if (fs.existsSync(path)) {
            files = fs.readdirSync(path);
            files.forEach(function (file, index) {
                var curPath = path + "/" + file;
                if (!fs.lstatSync(curPath).isDirectory() && !/variables/.test(file)) fs.unlinkSync(curPath);
            });
        }
    },
    getAllFileInDirectory: function(path,paths){
        var files = [];
        var self = this;
        if (fs.existsSync(path)) {
            files = fs.readdirSync(path);
            files.forEach(function (file, index) {
                var curPath = path + "/" + file;
                if(fs.lstatSync(curPath).isDirectory()) self.getAllFileInDirectory(curPath,paths);
                else paths.push(curPath);
            });
        }
        return this.sortArrayPathsOnDeep(paths);
    },
    sortArrayPathsOnDeep: function(paths){
        var self = this;
        return paths.sort(function(a,b){
            return self.getCharCount(a,'/') - self.getCharCount(b,'/');
        });
    },
    getCharCount: function(str,char){
        return str.split(char).length-1;
    },
    write: function (path, str, mode) {
        fs.writeFileSync(path, str, { mode: mode || 0666 });
        console.log('   \x1b[36mcreate\x1b[0m : ' + path);
    },
    tplMaster: {
        tpl: '',
        figures: {},
        execute: function (figures) {
            this.figures = figures;
            var html = this.tpl;
            for (var key in figures) {
                if (figures[key]) {
                    html = html.replace(new RegExp('{{' + key + '}}', 'ig'), figures[key]);
                }
                else {
                    html = html.replace(new RegExp('{{' + key + '}}', 'ig'), '');
                }
            }
            return html;
        }
    },
    copyTemplate: function (from, to, figures) {
        from = path.join(__dirname, 'templates', from);
        var html = '';
        if (figures && figures != undefined) {
            this.tplMaster.tpl = fs.readFileSync(from, 'utf-8').toString();
            html = this.tplMaster.execute(figures);
        } else {
            html = fs.readFileSync(from, 'utf-8').toString();
        }
        console.log(to,html);
        this.write(to, html);
    },
    abort: function (msg) {
        console.log(msg);
        process.exit(1);
    },
    inArray: function(array,value){
        var inArray=false;
        array.forEach(function(item){
           if(item==value) inArray = true;
        });
        return inArray;
    }
}
 at SyntaxError: Invalid number (11:21)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/gulp-plex-bem/node_modules/gulp-plex-bem/index.js. Coverage (Term): 3% Coverage (LOC): 3%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
