/root/Targets/shadowsocks-plus
└─┬ shadowsocks-plus@0.1.3 
  ├── babel-plugin-transform-runtime@6.23.0 
  ├─┬ babel-preset-es2015@6.24.1 
  │ ├── babel-plugin-check-es2015-constants@6.22.0 
  │ ├── babel-plugin-transform-es2015-arrow-functions@6.22.0 
  │ ├── babel-plugin-transform-es2015-block-scoped-functions@6.22.0 
  │ ├─┬ babel-plugin-transform-es2015-block-scoping@6.26.0 
  │ │ ├── babel-template@6.26.0 
  │ │ ├─┬ babel-traverse@6.26.0 
  │ │ │ └── globals@9.18.0 
  │ │ ├─┬ babel-types@6.26.0 
  │ │ │ ├── esutils@2.0.2 
  │ │ │ └── to-fast-properties@1.0.3 
  │ │ └── lodash@4.17.4 
  │ ├─┬ babel-plugin-transform-es2015-classes@6.24.1 
  │ │ ├── babel-helper-define-map@6.26.0 
  │ │ ├── babel-helper-function-name@6.24.1 
  │ │ ├── babel-helper-optimise-call-expression@6.24.1 
  │ │ ├── babel-helper-replace-supers@6.24.1 
  │ │ └── babel-messages@6.23.0 
  │ ├── babel-plugin-transform-es2015-computed-properties@6.24.1 
  │ ├── babel-plugin-transform-es2015-destructuring@6.23.0 
  │ ├── babel-plugin-transform-es2015-duplicate-keys@6.24.1 
  │ ├── babel-plugin-transform-es2015-for-of@6.23.0 
  │ ├── babel-plugin-transform-es2015-function-name@6.24.1 
  │ ├── babel-plugin-transform-es2015-literals@6.22.0 
  │ ├── babel-plugin-transform-es2015-modules-amd@6.24.1 
  │ ├─┬ babel-plugin-transform-es2015-modules-commonjs@6.26.0 
  │ │ └── babel-plugin-transform-strict-mode@6.24.1 
  │ ├─┬ babel-plugin-transform-es2015-modules-systemjs@6.24.1 
  │ │ └── babel-helper-hoist-variables@6.24.1 
  │ ├── babel-plugin-transform-es2015-modules-umd@6.24.1 
  │ ├── babel-plugin-transform-es2015-object-super@6.24.1 
  │ ├─┬ babel-plugin-transform-es2015-parameters@6.24.1 
  │ │ ├── babel-helper-call-delegate@6.24.1 
  │ │ └── babel-helper-get-function-arity@6.24.1 
  │ ├── babel-plugin-transform-es2015-shorthand-properties@6.24.1 
  │ ├── babel-plugin-transform-es2015-spread@6.22.0 
  │ ├─┬ babel-plugin-transform-es2015-sticky-regex@6.24.1 
  │ │ └── babel-helper-regex@6.26.0 
  │ ├── babel-plugin-transform-es2015-template-literals@6.22.0 
  │ ├── babel-plugin-transform-es2015-typeof-symbol@6.23.0 
  │ ├─┬ babel-plugin-transform-es2015-unicode-regex@6.24.1 
  │ │ └─┬ regexpu-core@2.0.0 
  │ │   ├── regenerate@1.3.3 
  │ │   ├── regjsgen@0.2.0 
  │ │   └─┬ regjsparser@0.1.5 
  │ │     └── jsesc@0.5.0 
  │ └─┬ babel-plugin-transform-regenerator@6.26.0 
  │   └── regenerator-transform@0.10.1 
  ├─┬ babel-preset-react@6.24.1 
  │ ├── babel-plugin-syntax-jsx@6.18.0 
  │ ├── babel-plugin-transform-react-display-name@6.25.0 
  │ ├─┬ babel-plugin-transform-react-jsx@6.24.1 
  │ │ └── babel-helper-builder-react-jsx@6.26.0 
  │ ├── babel-plugin-transform-react-jsx-self@6.22.0 
  │ ├── babel-plugin-transform-react-jsx-source@6.22.0 
  │ └─┬ babel-preset-flow@6.23.0 
  │   └─┬ babel-plugin-transform-flow-strip-types@6.22.0 
  │     └── babel-plugin-syntax-flow@6.18.0 
  ├─┬ babel-preset-stage-3@6.24.1 
  │ ├── babel-plugin-syntax-trailing-function-commas@6.22.0 
  │ ├─┬ babel-plugin-transform-async-generator-functions@6.24.1 
  │ │ ├── babel-helper-remap-async-to-generator@6.24.1 
  │ │ └── babel-plugin-syntax-async-generators@6.13.0 
  │ ├─┬ babel-plugin-transform-async-to-generator@6.24.1 
  │ │ └── babel-plugin-syntax-async-functions@6.13.0 
  │ ├─┬ babel-plugin-transform-exponentiation-operator@6.24.1 
  │ │ ├─┬ babel-helper-builder-binary-assignment-operator-visitor@6.24.1 
  │ │ │ └── babel-helper-explode-assignable-expression@6.24.1 
  │ │ └── babel-plugin-syntax-exponentiation-operator@6.13.0 
  │ └─┬ babel-plugin-transform-object-rest-spread@6.26.0 
  │   └── babel-plugin-syntax-object-rest-spread@6.13.0 
  ├─┬ babel-runtime@6.26.0 
  │ ├── core-js@2.5.1 
  │ └── regenerator-runtime@0.11.0 
  ├─┬ babelify@7.3.0 
  │ ├─┬ babel-core@6.26.0 
  │ │ ├─┬ babel-code-frame@6.26.0 
  │ │ │ └─┬ chalk@1.1.3 
  │ │ │   ├── ansi-styles@2.2.1 
  │ │ │   ├── escape-string-regexp@1.0.5 
  │ │ │   ├─┬ has-ansi@2.0.0 
  │ │ │   │ └── ansi-regex@2.1.1 
  │ │ │   ├── strip-ansi@3.0.1 
  │ │ │   └── supports-color@2.0.0 
  │ │ ├─┬ babel-generator@6.26.0 
  │ │ │ ├─┬ detect-indent@4.0.0 
  │ │ │ │ └─┬ repeating@2.0.1 
  │ │ │ │   └─┬ is-finite@1.0.2 
  │ │ │ │     └── number-is-nan@1.0.1 
  │ │ │ ├── jsesc@1.3.0 
  │ │ │ └── trim-right@1.0.1 
  │ │ ├── babel-helpers@6.24.1 
  │ │ ├─┬ babel-register@6.26.0 
  │ │ │ ├─┬ home-or-tmp@2.0.0 
  │ │ │ │ ├── os-homedir@1.0.2 
  │ │ │ │ └── os-tmpdir@1.0.2 
  │ │ │ ├─┬ mkdirp@0.5.1 
  │ │ │ │ └── minimist@0.0.8 
  │ │ │ └── source-map-support@0.4.18 
  │ │ ├── babylon@6.18.0 
  │ │ ├── convert-source-map@1.5.0 
  │ │ ├── json5@0.5.1 
  │ │ ├─┬ minimatch@3.0.4 
  │ │ │ └─┬ brace-expansion@1.1.8 
  │ │ │   ├── balanced-match@1.0.0 
  │ │ │   └── concat-map@0.0.1 
  │ │ ├── path-is-absolute@1.0.1 
  │ │ ├── private@0.1.7 
  │ │ ├── slash@1.0.0 
  │ │ └── source-map@0.5.7 
  │ └── object-assign@4.1.1 
  ├─┬ body-parser@1.18.2 
  │ ├── bytes@3.0.0 
  │ ├── content-type@1.0.4 
  │ ├─┬ debug@2.6.9 
  │ │ └── ms@2.0.0 
  │ ├── depd@1.1.1 
  │ ├─┬ http-errors@1.6.2 
  │ │ ├── inherits@2.0.3 
  │ │ └── setprototypeof@1.0.3 
  │ ├── iconv-lite@0.4.19 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── qs@6.5.1 
  │ ├─┬ raw-body@2.3.2 
  │ │ └── unpipe@1.0.0 
  │ └─┬ type-is@1.6.15 
  │   └── media-typer@0.3.0 
  ├─┬ cookie-parser@1.4.3 
  │ ├── cookie@0.3.1 
  │ └── cookie-signature@1.0.6 
  ├─┬ express@4.16.1 
  │ ├─┬ accepts@1.3.4 
  │ │ └── negotiator@0.6.1 
  │ ├── array-flatten@1.1.1 
  │ ├── content-disposition@0.5.2 
  │ ├── encodeurl@1.0.1 
  │ ├── escape-html@1.0.3 
  │ ├── etag@1.8.1 
  │ ├── finalhandler@1.1.0 
  │ ├── fresh@0.5.2 
  │ ├── merge-descriptors@1.0.1 
  │ ├── methods@1.1.2 
  │ ├── parseurl@1.3.2 
  │ ├── path-to-regexp@0.1.7 
  │ ├─┬ proxy-addr@2.0.2 
  │ │ ├── forwarded@0.1.2 
  │ │ └── ipaddr.js@1.5.2 
  │ ├── range-parser@1.2.0 
  │ ├── safe-buffer@5.1.1 
  │ ├─┬ send@0.16.1 
  │ │ ├── destroy@1.0.4 
  │ │ └── mime@1.4.1 
  │ ├── serve-static@1.13.1 
  │ ├── setprototypeof@1.1.0 
  │ ├── statuses@1.3.1 
  │ ├── utils-merge@1.0.1 
  │ └── vary@1.1.2 
  ├─┬ react@15.6.2 
  │ ├── create-react-class@15.6.2 
  │ ├─┬ fbjs@0.8.16 
  │ │ ├── core-js@1.2.7 
  │ │ ├─┬ isomorphic-fetch@2.2.1 
  │ │ │ ├─┬ node-fetch@1.7.3 
  │ │ │ │ ├── encoding@0.1.12 
  │ │ │ │ └── is-stream@1.1.0 
  │ │ │ └── whatwg-fetch@2.0.3 
  │ │ ├─┬ promise@7.3.1 
  │ │ │ └── asap@2.0.6 
  │ │ ├── setimmediate@1.0.5 
  │ │ └── ua-parser-js@0.7.14 
  │ ├─┬ loose-envify@1.3.1 
  │ │ └── js-tokens@3.0.2 
  │ └── prop-types@15.6.0 
  ├─┬ react-bootstrap@0.30.10 
  │ ├── classnames@2.2.5 
  │ ├── dom-helpers@3.2.1 
  │ ├── invariant@2.2.2 
  │ ├── keycode@2.1.9 
  │ ├── react-overlays@0.6.12 
  │ ├── react-prop-types@0.4.0 
  │ ├── uncontrollable@4.1.0 
  │ └── warning@3.0.0 
  ├── react-dom@15.6.2 
  ├─┬ request@2.83.0 
  │ ├── aws-sign2@0.7.0 
  │ ├── aws4@1.6.0 
  │ ├── caseless@0.12.0 
  │ ├─┬ combined-stream@1.0.5 
  │ │ └── delayed-stream@1.0.0 
  │ ├── extend@3.0.1 
  │ ├── forever-agent@0.6.1 
  │ ├─┬ form-data@2.3.1 
  │ │ └── asynckit@0.4.0 
  │ ├─┬ har-validator@5.0.3 
  │ │ ├─┬ ajv@5.2.3 
  │ │ │ ├── co@4.6.0 
  │ │ │ ├── fast-deep-equal@1.0.0 
  │ │ │ ├── json-schema-traverse@0.3.1 
  │ │ │ └─┬ json-stable-stringify@1.0.1 
  │ │ │   └── jsonify@0.0.0 
  │ │ └── har-schema@2.0.0 
  │ ├─┬ hawk@6.0.2 
  │ │ ├── boom@4.3.1 
  │ │ ├─┬ cryptiles@3.1.2 
  │ │ │ └── boom@5.2.0 
  │ │ ├── hoek@4.2.0 
  │ │ └── sntp@2.0.2 
  │ ├─┬ http-signature@1.2.0 
  │ │ ├── assert-plus@1.0.0 
  │ │ ├─┬ jsprim@1.4.1 
  │ │ │ ├── extsprintf@1.3.0 
  │ │ │ ├── json-schema@0.2.3 
  │ │ │ └─┬ verror@1.10.0 
  │ │ │   └── core-util-is@1.0.2 
  │ │ └─┬ sshpk@1.13.1 
  │ │   ├── asn1@0.2.3 
  │ │   ├── bcrypt-pbkdf@1.0.1 
  │ │   ├── dashdash@1.14.1 
  │ │   ├── ecc-jsbn@0.1.1 
  │ │   ├── getpass@0.1.7 
  │ │   ├── jsbn@0.1.1 
  │ │   └── tweetnacl@0.14.5 
  │ ├── is-typedarray@1.0.0 
  │ ├── isstream@0.1.2 
  │ ├── json-stringify-safe@5.0.1 
  │ ├─┬ mime-types@2.1.17 
  │ │ └── mime-db@1.30.0 
  │ ├── oauth-sign@0.8.2 
  │ ├── performance-now@2.1.0 
  │ ├── stringstream@0.0.5 
  │ ├─┬ tough-cookie@2.3.3 
  │ │ └── punycode@1.4.1 
  │ └── tunnel-agent@0.6.0 
  ├─┬ request-promise@4.2.2 
  │ ├── bluebird@3.5.0 
  │ ├── request-promise-core@1.1.1 
  │ └── stealthy-require@1.1.1 
  └── uuid@3.1.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/shadowsocks-plus/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0871 took 4.5166s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (105:4) on program "use strict";

var _typeof2 = require("babel-runtime/helpers/typeof");

var _typeof3 = _interopRequireDefault(_typeof2);

var _stringify = require("babel-runtime/core-js/json/stringify");

var _stringify2 = _interopRequireDefault(_stringify);

var _regenerator = require("babel-runtime/regenerator");

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require("babel-runtime/helpers/asyncToGenerator");

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var verifyClientToken = function () {
    var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2(token) {
        var result;
        return _regenerator2.default.wrap(function _callee2$(_context2) {
            while (1) {
                switch (_context2.prev = _context2.next) {
                    case 0:
                        _context2.next = 2;
                        return rp.post(SSO_PREFIX + "identity/verify/verify_client_token", {
                            "form": {
                                "client_token": token
                            }
                        });

                    case 2:
                        result = _context2.sent;

                        result = JSON.parse(result);

                        assert(result && result.err === 0);
                        return _context2.abrupt("return", new _user2.default(result.userId, result.username));

                    case 6:
                    case "end":
                        return _context2.stop();
                }
            }
        }, _callee2, this);
    }));

    return function verifyClientToken(_x3) {
        return _ref2.apply(this, arguments);
    };
}();

var run = function () {
    var _ref4 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee4() {
        var savedInstances;
        return _regenerator2.default.wrap(function _callee4$(_context4) {
            while (1) {
                switch (_context4.prev = _context4.next) {
                    case 0:
                        cfg = JSON.parse(fs.readFileSync(process.argv[2], "utf-8"));
                        manager = new _manager2.default(cfg.ss_binary_path);

                        try {
                            savedInstances = JSON.parse(fs.readFileSync(cfg.instance_list_path, "utf-8"));

                            assert(savedInstances instanceof Array);
                            savedInstances.forEach(function (v) {
                                assert((typeof v === "undefined" ? "undefined" : (0, _typeof3.default)(v)) == "object" && typeof v.port == "number" && typeof v.pw == "string");
                                manager.runInstance(v.port, v.pw);
                            });
                        } catch (e) {}

                        app.listen(7791);

                    case 4:
                    case "end":
                        return _context4.stop();
                }
            }
        }, _callee4, this);
    }));

    return function run() {
        return _ref4.apply(this, arguments);
    };
}();

var _manager = require("./manager.js");

var _manager2 = _interopRequireDefault(_manager);

var _session = require("./session.js");

var _session2 = _interopRequireDefault(_session);

var _user = require("./user.js");

var _user2 = _interopRequireDefault(_user);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var express = require("express");
var fs = require("fs");
var assert = require("assert");
var body_parser = require("body-parser");
var cookie_parser = require("cookie-parser");
var rp = require("request-promise");
var path = require("path");

var SSO_PREFIX = "https://hyperidentity.ifxor.com/";
var app = express();
var cfg = void 0;
var manager = void 0;
var sessions = {};

function wrap(f) {
    return function () {
        var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(req, resp) {
            return _regenerator2.default.wrap(function _callee$(_context) {
                while (1) {
                    switch (_context.prev = _context.next) {
                        case 0:
                            _context.prev = 0;
                            _context.next = 3;
                            return f(req, resp);

                        case 3:
                            _context.next = 8;
                            break;

                        case 5:
                            _context.prev = 5;
                            _context.t0 = _context["catch"](0);

                            //console.log(e);
                            resp.json({
                                "err": 1,
                                "msg": _context.t0
                            });

                        case 8:
                        case "end":
                            return _context.stop();
                    }
                }
            }, _callee, this, [[0, 5]]);
        }));

        return function (_x, _x2) {
            return _ref.apply(this, arguments);
        };
    }();
}

function checkAdmin(u) {
    assert(u instanceof _user2.default);
    assert(cfg.admin_users && cfg.admin_users instanceof Array);

    for (var i = 0; i < cfg.admin_users.length; i++) {
        if (cfg.admin_users[i] == u.id) {
            return true;
        }
    }

    return false;
}

app.use(body_parser.urlencoded({
    "extended": false
}));
app.use(cookie_parser());

app.use("/", function (req, resp, next) {
    if (req.url.split("?")[0] == "/auth") {
        next();
        return;
    }

    if (!req.cookies || typeof req.cookies.session_token != "string") {
        resp.redirect("/auth");
        return;
    }
    var sessionToken = req.cookies.session_token;
    if (!sessions[sessionToken] || sessions[sessionToken].isExpired()) {
        resp.redirect("/auth");
        return;
    }

    req.session = sessions[sessionToken];
    next();
});

app.use("/web/", express.static(path.join(__dirname, "../../web")));

app.get("/auth", wrap(function () {
    var _ref3 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee3(req, resp) {
        var u, sess, cbProtocol, hostname;
        return _regenerator2.default.wrap(function _callee3$(_context3) {
            while (1) {
                switch (_context3.prev = _context3.next) {
                    case 0:
                        if (!(req.query && typeof req.query.client_token == "string")) {
                            _context3.next = 11;
                            break;
                        }

                        _context3.next = 3;
                        return verifyClientToken(req.query.client_token);

                    case 3:
                        u = _context3.sent;

                        if (checkAdmin(u)) {
                            _context3.next = 6;
                            break;
                        }

                        throw "User not in the admin list";

                    case 6:
                        sess = new _session2.default(u);

                        sessions[sess.token] = sess;
                        resp.cookie("session_token", sess.token);
                        resp.redirect("/web/");
                        return _context3.abrupt("return");

                    case 11:
                        cbProtocol = req.protocol;

                        if (cfg.https) cbProtocol = "https";

                        hostname = cfg.domain;

                        if (typeof hostname != "string") hostname = req.hostname;
                        resp.send("<script>window.location.replace(\"" + SSO_PREFIX + "web/?callback=" + encodeURIComponent(cbProtocol + "://" + hostname + "/auth") + "#auth" + "\");</script>");

                    case 16:
                    case "end":
                        return _context3.stop();
                }
            }
        }, _callee3, this);
    }));

    return function (_x4, _x5) {
        return _ref3.apply(this, arguments);
    };
}()));

app.post("/instance/list", wrap(function (req, resp) {
    resp.json({
        "err": 0,
        "msg": "OK",
        "instances": manager.getInstances()
    });
}));

app.post("/instance/run", wrap(function (req, resp) {
    assert(req.body && typeof req.body.port == "string" && typeof req.body.pw == "string");

    var port = parseInt(req.body.port);
    var pw = req.body.pw;

    if (!(port > 0 && port < 65536)) {
        throw "Invalid port";
    }

    if (pw.length < 8) {
        throw "Password too short";
    }

    var id = manager.runInstance(port, pw);

    resp.json({
        "err": 0,
        "msg": "OK",
        "id": id
    });
}));

app.post("/instance/kill", wrap(function (req, resp) {
    assert(req.body && typeof req.body.id == "string");

    var id = req.body.id;
    if (!manager.killInstance(id)) {
        throw "Instance not found";
    }
    resp.json({
        "err": 0,
        "msg": "OK"
    });
}));

app.post("/instance/save", wrap(function (req, resp) {
    fs.writeFile(cfg.instance_list_path, (0, _stringify2.default)(manager.getInstances(), null, 4), function (err) {
        if (err) {
            console.log(err);
            resp.json({
                "err": 1,
                "msg": err
            });
        }
        resp.json({
            "err": 0,
            "msg": "OK"
        });
    });
}));

run().then(function (r) {}).catch(function (e) {
    return console.log(e);
}); at SyntaxError: Unexpected token (105:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
