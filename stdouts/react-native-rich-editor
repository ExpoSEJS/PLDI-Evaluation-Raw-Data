/root/Targets/react-native-rich-editor
└── react-native-rich-editor@0.1.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/react-native-rich-editor/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0779 took 6.1975s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (50:11) on program var React = require('react-native');
var PropTypes = require('ReactPropTypes');
var {
	requireNativeComponent,
	DeviceEventEmitter
} = React;

var TYZRNEditorViewManager = React.NativeModules.TYZRNEditorViewManager;
var subscription = null;
var backEventScript = null;

var TYZRNEditorView = React.createClass({

	propTypes: {
		contentStr: PropTypes.string,
		titleStr: PropTypes.string,
		backAction: PropTypes.func
	},

	componentWillMount: function() {
		subscription = DeviceEventEmitter.addListener(
			'event', (info) => {
				console.log('接受到一个事件');
				alert('接收到一个事件' + info);
			}
		);

		backEventScript = DeviceEventEmitter.addListener(
			'backEvent', (info) => {
				console.log('接受到一个返回事件');
				this.props.backAction();
			}
		);
	},

	componentWillUnmount: function() {
		subscription.remove();
		backEventScript.remove();
	},

	getInitialState: function() {
		return {
			contentStr: this.props.contentStr,
			titleStr: this.props.string
		};
	},

	render: function() {
		TYZRNEditorView.context = this;
		return ( < RCTMyEditorView {...this.props
			}
			/>
		);
	},

	//获取编辑器内容
	getContentString: function() {
		TYZRNEditorViewManager.getContentStrMethod((error, events) => {
			debugger;
			if (error) {
				console.error(error);
				return null;
			} else {
				console.log(events);
				this.setState({
					contentStr: events
				});
				return events;
			}
		});
	},
	//获取编辑器内容题目
	getTitleString: function() {
		TYZRNEditorViewManager.getTitleStrMethod((error, events) => {
			debugger;
			if (error) {
				console.error(error);
				return null;
			} else {
				console.log(events);
				this.setState({
					titleStr: events
				});
				return events;
			}
		});
	}
});


var RCTMyEditorView = requireNativeComponent('TYZRNEditorView', TYZRNEditorView);

module.exports = TYZRNEditorView; at SyntaxError: Unexpected token (50:11)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1822:12)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1597:21)
    at Parser.pp$3.parseParenAndDistinguishExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1861:32)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
