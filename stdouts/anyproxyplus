
> ws@0.4.32 install /root/Targets/anyproxyplus/node_modules/ws
> (node-gyp rebuild 2> builderror.log) || (exit 0)

make: Entering directory '/root/Targets/anyproxyplus/node_modules/ws/build'
  CXX(target) Release/obj.target/bufferutil/src/bufferutil.o
bufferutil.target.mk:96: recipe for target 'Release/obj.target/bufferutil/src/bufferutil.o' failed
make: Leaving directory '/root/Targets/anyproxyplus/node_modules/ws/build'
/root/Targets/anyproxyplus
└─┬ anyproxyplus@3.10.5 
  ├── async@0.9.2 
  ├── async-task-mgr@1.1.0 
  ├─┬ body-parser@1.18.1 
  │ ├── bytes@3.0.0 
  │ ├── content-type@1.0.4 
  │ ├─┬ debug@2.6.8 
  │ │ └── ms@2.0.0 
  │ ├── depd@1.1.1 
  │ ├─┬ http-errors@1.6.2 
  │ │ └── inherits@2.0.3 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── qs@6.5.1 
  │ ├─┬ raw-body@2.3.2 
  │ │ └── unpipe@1.0.0 
  │ └─┬ type-is@1.6.15 
  │   ├── media-typer@0.3.0 
  │   └── mime-types@2.1.17 
  ├── colorful@2.1.0 
  ├── commander@2.3.0 
  ├─┬ compression@1.7.0 
  │ ├─┬ accepts@1.3.4 
  │ │ └── negotiator@0.6.1 
  │ ├── bytes@2.5.0 
  │ ├─┬ compressible@2.0.11 
  │ │ └── mime-db@1.30.0 
  │ ├── on-headers@1.0.1 
  │ ├── safe-buffer@5.1.1 
  │ └── vary@1.1.1 
  ├─┬ express@4.15.4 
  │ ├── array-flatten@1.1.1 
  │ ├── content-disposition@0.5.2 
  │ ├── cookie@0.3.1 
  │ ├── cookie-signature@1.0.6 
  │ ├── encodeurl@1.0.1 
  │ ├── escape-html@1.0.3 
  │ ├── etag@1.8.1 
  │ ├── finalhandler@1.0.5 
  │ ├── fresh@0.5.0 
  │ ├── merge-descriptors@1.0.1 
  │ ├── methods@1.1.2 
  │ ├── parseurl@1.3.2 
  │ ├── path-to-regexp@0.1.7 
  │ ├─┬ proxy-addr@1.1.5 
  │ │ ├── forwarded@0.1.2 
  │ │ └── ipaddr.js@1.4.0 
  │ ├── qs@6.5.0 
  │ ├── range-parser@1.2.0 
  │ ├─┬ send@0.15.4 
  │ │ ├── destroy@1.0.4 
  │ │ └── mime@1.3.4 
  │ ├── serve-static@1.12.4 
  │ ├── setprototypeof@1.0.3 
  │ ├── statuses@1.3.1 
  │ └── utils-merge@1.0.0 
  ├── iconv-lite@0.4.19 
  ├── ip@0.3.3 
  ├─┬ juicer@0.6.15 
  │ ├─┬ optimist@0.3.7 
  │ │ └── wordwrap@0.0.3 
  │ └── uglify-js@1.2.6 
  ├─┬ nedb@0.11.2 
  │ ├── async@0.2.10 
  │ ├── binary-search-tree@0.2.4 
  │ ├── mkdirp@0.3.5 
  │ └── underscore@1.4.4 
  ├── node-forge@0.6.49 
  ├─┬ npm@2.15.12 
  │ ├── abbrev@1.0.9 
  │ ├── ansi@0.3.1 
  │ ├── ansi-regex@2.0.0 
  │ ├── ansicolors@0.3.2 
  │ ├── ansistyles@0.1.3 
  │ ├── archy@1.0.0 
  │ ├── async-some@1.0.2 
  │ ├── block-stream@0.0.9 
  │ ├── char-spinner@1.0.1 
  │ ├── chmodr@1.0.2 
  │ ├── chownr@1.0.1 
  │ ├── cmd-shim@2.0.2 
  │ ├─┬ columnify@1.5.4 
  │ │ └─┬ wcwidth@1.0.0 
  │ │   └─┬ defaults@1.0.3 
  │ │     └── clone@1.0.2 
  │ ├─┬ config-chain@1.1.10 
  │ │ └── proto-list@1.2.4 
  │ ├─┬ dezalgo@1.0.3 
  │ │ └── asap@2.0.3 
  │ ├── editor@1.0.0 
  │ ├── fs-vacuum@1.2.9 
  │ ├─┬ fs-write-stream-atomic@1.0.8 
  │ │ └── iferr@0.1.5 
  │ ├── fstream@1.0.10 
  │ ├─┬ fstream-npm@1.1.1 
  │ │ └── fstream-ignore@1.0.5 
  │ ├── github-url-from-git@1.4.0 
  │ ├── github-url-from-username-repo@1.0.2 
  │ ├─┬ glob@7.0.6 
  │ │ ├── fs.realpath@1.0.0 
  │ │ └── path-is-absolute@1.0.0 
  │ ├── graceful-fs@4.1.6 
  │ ├── hosted-git-info@2.1.5 
  │ ├── imurmurhash@0.1.4 
  │ ├── inflight@1.0.5 
  │ ├── inherits@2.0.3 
  │ ├── ini@1.3.4 
  │ ├─┬ init-package-json@1.9.4 
  │ │ ├─┬ glob@6.0.4 
  │ │ │ └── path-is-absolute@1.0.0 
  │ │ └── promzard@0.3.0 
  │ ├── lockfile@1.0.1 
  │ ├─┬ lru-cache@4.0.1 
  │ │ ├── pseudomap@1.0.2 
  │ │ └── yallist@2.0.0 
  │ ├─┬ minimatch@3.0.3 
  │ │ └─┬ brace-expansion@1.1.6 
  │ │   ├── balanced-match@0.4.2 
  │ │   └── concat-map@0.0.1 
  │ ├─┬ mkdirp@0.5.1 
  │ │ └── minimist@0.0.8 
  │ ├─┬ node-gyp@3.6.0 
  │ │ └── semver@5.3.0 
  │ ├── nopt@3.0.6 
  │ ├── normalize-git-url@3.0.2 
  │ ├─┬ normalize-package-data@2.3.5 
  │ │ └─┬ is-builtin-module@1.0.0 
  │ │   └── builtin-modules@1.1.0 
  │ ├── npm-cache-filename@1.0.2 
  │ ├── npm-install-checks@1.0.7 
  │ ├── npm-package-arg@4.1.0 
  │ ├─┬ npm-registry-client@7.2.1 
  │ │ ├─┬ concat-stream@1.5.2 
  │ │ │ ├─┬ readable-stream@2.0.6 
  │ │ │ │ ├── core-util-is@1.0.2 
  │ │ │ │ ├── isarray@1.0.0 
  │ │ │ │ ├── process-nextick-args@1.0.7 
  │ │ │ │ ├── string_decoder@0.10.31 
  │ │ │ │ └── util-deprecate@1.0.2 
  │ │ │ └── typedarray@0.0.6 
  │ │ └── retry@0.10.0 
  │ ├── npm-user-validate@0.1.5 
  │ ├─┬ npmlog@2.0.4 
  │ │ ├─┬ are-we-there-yet@1.1.2 
  │ │ │ └── delegates@1.0.0 
  │ │ └─┬ gauge@1.2.7 
  │ │   ├── has-unicode@2.0.0 
  │ │   ├─┬ lodash.pad@4.4.0 
  │ │   │ ├── lodash._baseslice@4.0.0 
  │ │   │ ├── lodash._basetostring@4.12.0 
  │ │   │ └── lodash.tostring@4.1.4 
  │ │   ├── lodash.padend@4.5.0 
  │ │   └── lodash.padstart@4.5.0 
  │ ├── once@1.4.0 
  │ ├── opener@1.4.1 
  │ ├─┬ osenv@0.1.3 
  │ │ ├── os-homedir@1.0.0 
  │ │ └── os-tmpdir@1.0.1 
  │ ├── path-is-inside@1.0.1 
  │ ├─┬ read@1.0.7 
  │ │ └── mute-stream@0.0.5 
  │ ├─┬ read-installed@4.0.3 
  │ │ ├── debuglog@1.0.1 
  │ │ ├── readdir-scoped-modules@1.0.2 
  │ │ └── util-extend@1.0.1 
  │ ├─┬ read-package-json@2.0.4 
  │ │ ├─┬ glob@6.0.4 
  │ │ │ └── path-is-absolute@1.0.0 
  │ │ └─┬ json-parse-helpfulerror@1.0.3 
  │ │   └── jju@1.3.0 
  │ ├─┬ readable-stream@2.1.5 
  │ │ ├── buffer-shims@1.0.0 
  │ │ ├── core-util-is@1.0.2 
  │ │ ├── isarray@1.0.0 
  │ │ ├── process-nextick-args@1.0.7 
  │ │ ├── string_decoder@0.10.31 
  │ │ └── util-deprecate@1.0.2 
  │ ├── realize-package-specifier@3.0.1 
  │ ├─┬ request@2.74.0 
  │ │ ├── aws-sign2@0.6.0 
  │ │ ├── aws4@1.4.1 
  │ │ ├─┬ bl@1.1.2 
  │ │ │ └─┬ readable-stream@2.0.6 
  │ │ │   ├── core-util-is@1.0.2 
  │ │ │   ├── isarray@1.0.0 
  │ │ │   ├── process-nextick-args@1.0.7 
  │ │ │   ├── string_decoder@0.10.31 
  │ │ │   └── util-deprecate@1.0.2 
  │ │ ├── caseless@0.11.0 
  │ │ ├─┬ combined-stream@1.0.5 
  │ │ │ └── delayed-stream@1.0.0 
  │ │ ├── extend@3.0.0 
  │ │ ├── forever-agent@0.6.1 
  │ │ ├─┬ form-data@1.0.0-rc4 
  │ │ │ └── async@1.5.2 
  │ │ ├─┬ har-validator@2.0.6 
  │ │ │ ├─┬ chalk@1.1.3 
  │ │ │ │ ├── ansi-styles@2.2.1 
  │ │ │ │ ├── escape-string-regexp@1.0.5 
  │ │ │ │ ├── has-ansi@2.0.0 
  │ │ │ │ └── supports-color@2.0.0 
  │ │ │ ├─┬ commander@2.9.0 
  │ │ │ │ └── graceful-readlink@1.0.1 
  │ │ │ ├─┬ is-my-json-valid@2.13.1 
  │ │ │ │ ├── generate-function@2.0.0 
  │ │ │ │ ├─┬ generate-object-property@1.2.0 
  │ │ │ │ │ └── is-property@1.0.2 
  │ │ │ │ ├── jsonpointer@2.0.0 
  │ │ │ │ └── xtend@4.0.1 
  │ │ │ └─┬ pinkie-promise@2.0.1 
  │ │ │   └── pinkie@2.0.4 
  │ │ ├─┬ hawk@3.1.3 
  │ │ │ ├── boom@2.10.1 
  │ │ │ ├── cryptiles@2.0.5 
  │ │ │ ├── hoek@2.16.3 
  │ │ │ └── sntp@1.0.9 
  │ │ ├─┬ http-signature@1.1.1 
  │ │ │ ├── assert-plus@0.2.0 
  │ │ │ ├─┬ jsprim@1.3.0 
  │ │ │ │ ├── extsprintf@1.0.2 
  │ │ │ │ ├── json-schema@0.2.2 
  │ │ │ │ └── verror@1.3.6 
  │ │ │ └─┬ sshpk@1.9.2 
  │ │ │   ├── asn1@0.2.3 
  │ │ │   ├── assert-plus@1.0.0 
  │ │ │   ├── dashdash@1.14.0 
  │ │ │   ├── ecc-jsbn@0.1.1 
  │ │ │   ├── getpass@0.1.6 
  │ │ │   ├── jodid25519@1.0.2 
  │ │ │   ├── jsbn@0.1.0 
  │ │ │   └── tweetnacl@0.13.3 
  │ │ ├── is-typedarray@1.0.0 
  │ │ ├── isstream@0.1.2 
  │ │ ├── json-stringify-safe@5.0.1 
  │ │ ├─┬ mime-types@2.1.11 
  │ │ │ └── mime-db@1.23.0 
  │ │ ├── node-uuid@1.4.7 
  │ │ ├── oauth-sign@0.8.2 
  │ │ ├── qs@6.2.1 
  │ │ ├── stringstream@0.0.5 
  │ │ ├── tough-cookie@2.3.1 
  │ │ └── tunnel-agent@0.4.3 
  │ ├── retry@0.10.0 
  │ ├── rimraf@2.5.4 
  │ ├── semver@5.1.0 
  │ ├─┬ sha@2.0.1 
  │ │ └─┬ readable-stream@2.0.2 
  │ │   ├── core-util-is@1.0.1 
  │ │   ├── isarray@0.0.1 
  │ │   ├── process-nextick-args@1.0.3 
  │ │   ├── string_decoder@0.10.31 
  │ │   └── util-deprecate@1.0.1 
  │ ├── slide@1.1.6 
  │ ├── sorted-object@2.0.0 
  │ ├── spdx-license-ids@1.2.2 
  │ ├── strip-ansi@3.0.1 
  │ ├── tar@2.2.1 
  │ ├── text-table@0.2.0 
  │ ├── uid-number@0.0.6 
  │ ├── umask@1.1.0 
  │ ├─┬ validate-npm-package-license@3.0.1 
  │ │ ├── spdx-correct@1.0.2 
  │ │ └─┬ spdx-expression-parse@1.0.2 
  │ │   └── spdx-exceptions@1.0.4 
  │ ├─┬ validate-npm-package-name@2.2.2 
  │ │ └── builtins@0.0.7 
  │ ├─┬ which@1.2.11 
  │ │ └── isexe@1.1.2 
  │ ├── wrappy@1.0.2 
  │ └── write-file-atomic@1.1.4 
  ├─┬ promise@7.3.1 
  │ └── asap@2.0.6 
  ├── qrcode-npm@0.0.3 
  ├─┬ stream-throttle@0.1.3 
  │ └── limiter@1.1.2 
  └─┬ ws@0.4.32 
    ├── commander@2.1.0 
    ├── nan@1.0.0 
    ├── options@0.0.6 
    └── tinycolor@0.0.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/anyproxyplus/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 21% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0304 took 11.7387s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Invalid number (21:29) on program var exec = require('child_process').exec,
    spawn         = require('child_process').spawn,
    path          = require("path"),
    fs            = require("fs"),
    os            = require("os"),
    color         = require('colorful'),
    readline      = require('readline'),
    util          = require('./util'),
    logUtil       = require("./log"),
    certGenerator = require("./certGenerator"),
    asyncTask     = require("async-task-mgr");

var isWin             = /^win/.test(process.platform),
    certDir           = path.join(util.getUserHome(),"/.anyproxy_certs/"),
    rootCAcrtFilePath = path.join(certDir,"rootCA.crt"),
    rootCAkeyFilePath = path.join(certDir,"rootCA.key"),
    createCertTaskMgr = new asyncTask();

if(!fs.existsSync(certDir)){
    try{
        fs.mkdirSync(certDir,0777);
    }catch(e){
        logUtil.printLog("===========", logUtil.T_ERR);
        logUtil.printLog("failed to create cert dir ,please create one by yourself - " + certDir, logUtil.T_ERR);
        logUtil.printLog("this error will not block main thread unless you use https-related features in anyproxy", logUtil.T_ERR);
        logUtil.printLog("===========", logUtil.T_ERR);
    }
}

var cache_rootCACrtFileContent, cache_rootCAKeyFileContent;
function getCertificate(hostname,certCallback){
    checkRootCA();
    var keyFile = path.join(certDir , "__hostname.key".replace(/__hostname/,hostname) ),
        crtFile = path.join(certDir , "__hostname.crt".replace(/__hostname/,hostname) );

    if(!cache_rootCACrtFileContent || !cache_rootCAKeyFileContent){
      cache_rootCACrtFileContent = fs.readFileSync(rootCAcrtFilePath, {encoding: 'utf8'});
      cache_rootCAKeyFileContent = fs.readFileSync(rootCAkeyFilePath, {encoding: 'utf8'});
    }

    createCertTaskMgr.addTask(hostname,function(callback){
        if(!fs.existsSync(keyFile) || !fs.existsSync(crtFile)){
            try{
              var result = certGenerator.generateCertsForHostname(hostname, {
                cert: cache_rootCACrtFileContent,
                key: cache_rootCAKeyFileContent
              });
              fs.writeFileSync(keyFile, result.privateKey);
              fs.writeFileSync(crtFile, result.certificate);
              callback(null, result.privateKey, result.certificate);

            }catch(e){
              callback(e);
            }
        }else{
            callback(null , fs.readFileSync(keyFile) , fs.readFileSync(crtFile));
        }

    },function(err,keyContent,crtContent){
        if(!err){
            certCallback(null ,keyContent,crtContent);
        }else{
            certCallback(err);
        }
    });
}

function createCert(hostname,callback){
    checkRootCA();

    var cmd = cmd_genCert + " __host __path".replace(/__host/,hostname).replace(/__path/,certDir);
    exec(cmd,{ cwd : certDir },function(err,stdout,stderr){
        if(err){
            callback && callback(new Error("error when generating certificate"),null);
        }else{
            var tipText = "certificate created for __HOST".replace(/__HOST/,hostname);
            logUtil.printLog(color.yellow(color.bold("[internal https]")) + color.yellow(tipText)) ;
            callback(null);
        }
    });
}

function clearCerts(cb){
    if(isWin){
        exec("del * /q",{cwd : certDir},cb);
    }else{
        exec("rm *.key *.csr *.crt *.srl",{cwd : certDir},cb);
    }
}

function isRootCAFileExists(){
   return (fs.existsSync(rootCAcrtFilePath) && fs.existsSync(rootCAkeyFilePath));
}

var rootCAExists = false;
function checkRootCA(){
    if(rootCAExists) return;
    if(!isRootCAFileExists()){
        logUtil.printLog(color.red("can not find rootCA.crt or rootCA.key"), logUtil.T_ERR);
        logUtil.printLog(color.red("you may generate one by the following methods"), logUtil.T_ERR);
        logUtil.printLog(color.red("\twhen using globally : anyproxy --root"), logUtil.T_ERR);
        logUtil.printLog(color.red("\twhen using as a module : require(\"anyproxy\").generateRootCA();"), logUtil.T_ERR);
        logUtil.printLog(color.red("\tmore info : https://github.com/alibaba/anyproxy/wiki/How-to-config-https-proxy"), logUtil.T_ERR);
        process.exit(0);
    } else{
      rootCAExists = true;
    }
}

function generateRootCA(){

    if(isRootCAFileExists()){
        logUtil.printLog(color.yellow("rootCA exists at " + certDir));
        var rl = readline.createInterface({
            input : process.stdin,
            output: process.stdout
        });

        rl.question("do you really want to generate a new one ?)(yes/NO)", function(answer) {
            if(/yes/i.test(answer)){
                startGenerating();
            }else{
                logUtil.printLog("will not generate a new one");
                process.exit(0);
            }

            rl.close();
        });
    }else{
        startGenerating();
    }

    function startGenerating(){
        //clear old certs
        clearCerts(function(){
            logUtil.printLog(color.green("temp certs cleared"));
            try{
              var result = certGenerator.generateRootCA();
              fs.writeFileSync(rootCAkeyFilePath, result.privateKey);
              fs.writeFileSync(rootCAcrtFilePath, result.certificate);

              logUtil.printLog(color.green("rootCA generated"));
              logUtil.printLog(color.green(color.bold("please trust the rootCA.crt in " + certDir)));
              logUtil.printLog(color.green(color.bold("or you may get it via anyproxy webinterface")));

              if(isWin){
                  exec("start .",{cwd : certDir});
              }else{
                  exec("open .",{cwd : certDir});
              }

            }catch(e){
              logUtil.printLog(color.red(e));
              logUtil.printLog(color.red(e.stack));
              logUtil.printLog(color.red("fail to generate root CA"),logUtil.T_ERR);
            }
        });
    }
}

function getRootCAFilePath(){
    if(isRootCAFileExists()){
        return rootCAcrtFilePath;
    }else{
        return "";
    }
}

module.exports.getRootCAFilePath  = getRootCAFilePath;
module.exports.generateRootCA     = generateRootCA;
module.exports.getCertificate     = getCertificate;
module.exports.createCert         = createCert;
module.exports.clearCerts         = clearCerts;
module.exports.isRootCAFileExists = isRootCAFileExists; at SyntaxError: Invalid number (21:29)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/anyproxyplus/node_modules/anyproxyplus/proxy.js. Coverage (Term): 10% Coverage (LOC): 5%
*- File /root/Targets/anyproxyplus/node_modules/async/lib/async.js. Coverage (Term): 10% Coverage (LOC): 14%
*- File /root/Targets/anyproxyplus/node_modules/commander/index.js. Coverage (Term): 11% Coverage (LOC): 20%
*- File /root/Targets/anyproxyplus/node_modules/colorful/index.js. Coverage (Term): 31% Coverage (LOC): 40%
*- File /root/Targets/anyproxyplus/node_modules/colorful/lib/ansi.js. Coverage (Term): 34% Coverage (LOC): 47%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
