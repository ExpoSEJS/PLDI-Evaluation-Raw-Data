/root/Targets/mok
└─┬ mok@0.0.6 
  ├─┬ cpr@0.3.3 
  │ ├─┬ graceful-fs@3.0.11 
  │ │ └── natives@1.1.0 
  │ ├─┬ mkdirp@0.5.1 
  │ │ └── minimist@0.0.8 
  │ └── rimraf@2.2.8 
  ├─┬ json-parser@0.2.4 
  │ └── esprima@1.2.5 
  └── mace@2.1.2 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/mok/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 16% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","RegExp","create","freeze"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0832 took 14.9845s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Octal literal in strict mode (2:17) on program var styles = {
  'bold':      ['\033[1m', '\033[22m'],
  'italic':    ['\033[3m', '\033[23m'],
  'underline': ['\033[4m', '\033[24m'],
  'inverse':   ['\033[7m', '\033[27m'],
  'black':     ['\033[30m', '\033[39m'],
  'red':       ['\033[31m', '\033[39m'],
  'green':     ['\033[32m', '\033[39m'],
  'yellow':    ['\033[33m', '\033[39m'],
  'blue':      ['\033[34m', '\033[39m'],
  'magenta':   ['\033[35m', '\033[39m'],
  'cyan':      ['\033[36m', '\033[39m'],
  'white':     ['\033[37m', '\033[39m'],
  'default':   ['\033[39m', '\033[39m'],
  'grey':      ['\033[90m', '\033[39m'],
  'bgBlack':   ['\033[40m', '\033[49m'],
  'bgRed':     ['\033[41m', '\033[49m'],
  'bgGreen':   ['\033[42m', '\033[49m'],
  'bgYellow':  ['\033[43m', '\033[49m'],
  'bgBlue':    ['\033[44m', '\033[49m'],
  'bgMagenta': ['\033[45m', '\033[49m'],
  'bgCyan':    ['\033[46m', '\033[49m'],
  'bgWhite':   ['\033[47m', '\033[49m'],
  'bgDefault': ['\033[49m', '\033[49m']
};

var _core_slice = [].slice;
var tty = require('tty');
var enabled = exports.enabled = !process.env.NOCOLOR && 
  tty.isatty(1) && 
  tty.isatty(2);
Object.keys(styles).forEach(function (style) {
  var color = styles[style];
  styles[style] = !exports.enabled ? function (s) {
    return s;
  } : function (s) {
    return color.join(s);
  }
});
exports.styles = styles;
exports.tinyColors = ['red', 'green', 'yellow', 'blue', 'magenta', 'cyan', 'grey','black'];
// for future hight light support
function hightlight (str) {
  return str;
}
exports.stringify = function (obj, deep, objCache) {
  var deep = deep || 0;
  var tabStr = new Array(deep + 1).join('  ');
  var objCache = objCache || [];
  // Buffer is an spec object;
  if (Buffer.isBuffer(obj)) {
    return require('util').format.call(null, '', obj);
  }
  var type = styles.toString.call(obj).slice(8, -1).toLowerCase();
  switch(type) {
    case 'function' : {
      // function 转化为函数定义
      return deep ? '[Function '+(obj.name || 'anonymous')+']' : hightlight(obj.toString());
    }
    case 'arguments':
    case 'object': {
      // 
      if (!~objCache.indexOf(obj)) {
        objCache.push(obj);
        var ret = [];
        Object.keys(obj).forEach(function (k) {
          var v = obj[k];
          if (!~objCache.indexOf(v)) {
            v = exports.stringify(v, deep + 1, objCache);
          } else {
            v = styles.yellow('[Circle object]');
          }
          var k = exports.stringify(k);
          ret.push(tabStr + '  "'+ k + '": ' + v);
        });
        return '{\r\n' + ret.join(',\r\n') + '\r\n' + tabStr + '}';
      }
      return styles.yellow('[Circle object]');
    }
    case 'array': {
      if (!~objCache.indexOf(obj)) {
        objCache.push(obj);
        var ret = [];
        obj.forEach(function (v) {
          if (!~objCache.indexOf(v)) {
            v = exports.stringify(v, deep + 1, objCache);
          } else {
            v = styles.yellow('[Circle array]');
          }
          ret.push(tabStr + '  ' + v);
        });
        return '[\r\n' + ret.join(',\r\n') + '\r\n' + tabStr + ']';
      }
      return styles.yellow('[Circle Array]');
    }
    case 'string': {
      var ret = styles.yellow(obj.toString());
      if (deep) {
        return '"' + ret + '"';
      }
      return ret;
    }
    case 'number': {
      return styles.cyan(obj.toString());
    }
    case 'regexp':{
      return styles.magenta(obj.toString())
    }
    case 'boolean': {
      return styles.red(obj.toString());
    }
    case 'date': {
      return styles.green(obj.toString());
    }
    case 'undefined':
    case 'null': {
      return styles.grey('' + obj);
    }
    case 'error': {
      var _errTab = '\n\r' + tabStr + '  ';
      return deep ? styles.red('[' + obj.message + ']') : styles.red(_errTab + obj.stack.replace(/\n\r*/g, _errTab));
    }
    default: {
      return tabStr + obj.toString();
    }
  }
};

exports.format = function () {
  var args = arguments;
  var out = '';
  var i = 0;
  var arg;
  if (typeof args[0] === 'string') {
    out = args[0]; 
    i = 1;
  }
  if (args.length < 2) {
    return exports.stringify(args[0]);
  }
  out = out.replace(/\%([a-z\%])/ig, function (s, m) {
    if (m === '%') {
      return '%';
    }
    return exports.stringify(args[i++]);
  });
  while(i < args.length) {
    out += exports.stringify(args[i++]);
  }
  return out;
};
exports.tripColors = function (s) {
  return s.replace(/\x1B\[\d+m/g, '');
};

exports.soules = [
  [ // highs
    '̍', '̎', '̄', '̅', '̿', '̑', '̆', '̐', '͒',  '͗',
    '͑',  '̇', '̈', '̊', '͂',  '̓', '̈', '͊',  '͋',  '͌',
    '̃', '̂', '̌', '͐',  '̀', '́', '̋', '̏', '̒', '̓',
    '̔', '̽', '̉', 'ͣ',  'ͤ',  'ͥ',  'ͦ',  'ͧ',  'ͨ',  'ͩ',
    'ͪ',  'ͫ',  'ͬ',  'ͭ',  'ͮ',  'ͯ',  '̾', '͛',  '͆',  '̚'
  ],
  [ // mids
    '̕', '̛', '̀', '́', '͘', '̡', '̢', '̧', '̨', '̴', '̵',
    '̶', '͜',  '͝',  '͞',  '͟',  '͠',  '͢',  '̸', '̷', '͡', '҉'
  ],
  [ // lows
    '̖', '̗', '̘', '̙', '̜', '̝', '̞', '̟', '̠', '̤',
    '̥', '̦', '̩', '̪', '̫', '̬', '̭', '̮', '̯', '̰',
    '̱', '̲', '̳', '̹', '̺', '̻', '̼', 'ͅ',  '͇',  '͈',
    '͉',  '͍',  '͎',  '͓',  '͔',  '͕',  '͖',  '͙',  '͚',  '̣'
  ]
]; at SyntaxError: Octal literal in strict mode (2:17)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readEscapedChar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:3023:16)
    at Parser.pp$7.readString (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2935:23)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2724:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1800:12)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/mok/node_modules/mok/index.js. Coverage (Term): 76% Coverage (LOC): 100%
*- File /root/Targets/mok/node_modules/mok/lib/mok.js. Coverage (Term): 22% Coverage (LOC): 31%
*- File /root/Targets/mok/node_modules/mok/lib/loader.js. Coverage (Term): 6% Coverage (LOC): 10%
*- File /root/Targets/mok/node_modules/json-parser/index.js. Coverage (Term): 8% Coverage (LOC): 14%
*- File /root/Targets/mok/node_modules/esprima/esprima.js. Coverage (Term): 6% Coverage (LOC): 13%
*- File /root/Targets/mok/node_modules/mace/lib/mace.js. Coverage (Term): 16% Coverage (LOC): 19%
*- File /root/Targets/mok/node_modules/mace/lib/util.js. Coverage (Term): 16% Coverage (LOC): 30%
*- File /root/Targets/mok/node_modules/mace/lib/type.js. Coverage (Term): 49% Coverage (LOC): 81%
*- File /root/Targets/mok/node_modules/mace/lib/logue.js. Coverage (Term): 4% Coverage (LOC): 5%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
