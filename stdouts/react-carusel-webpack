/root/Targets/react-carusel-webpack
└─┬ react-carusel-webpack@0.0.2 
  ├── d3@3.5.17 
  ├─┬ gulp-bump@0.1.13 
  │ ├─┬ gulp-util@3.0.8 
  │ │ ├── array-differ@1.0.0 
  │ │ ├── array-uniq@1.0.3 
  │ │ ├── beeper@1.1.1 
  │ │ ├─┬ chalk@1.1.3 
  │ │ │ ├── ansi-styles@2.2.1 
  │ │ │ ├── escape-string-regexp@1.0.5 
  │ │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ │ └── ansi-regex@2.1.1 
  │ │ │ ├── strip-ansi@3.0.1 
  │ │ │ └── supports-color@2.0.0 
  │ │ ├── dateformat@2.2.0 
  │ │ ├─┬ fancy-log@1.3.0 
  │ │ │ └── time-stamp@1.1.0 
  │ │ ├─┬ gulplog@1.0.0 
  │ │ │ └── glogg@1.0.0 
  │ │ ├─┬ has-gulplog@0.1.0 
  │ │ │ └── sparkles@1.0.0 
  │ │ ├── lodash._reescape@3.0.0 
  │ │ ├── lodash._reevaluate@3.0.0 
  │ │ ├── lodash._reinterpolate@3.0.0 
  │ │ ├─┬ lodash.template@3.6.2 
  │ │ │ ├── lodash._basecopy@3.0.1 
  │ │ │ ├── lodash._basetostring@3.0.1 
  │ │ │ ├── lodash._basevalues@3.0.0 
  │ │ │ ├── lodash._isiterateecall@3.0.9 
  │ │ │ ├─┬ lodash.escape@3.2.0 
  │ │ │ │ └── lodash._root@3.0.1 
  │ │ │ ├─┬ lodash.keys@3.1.2 
  │ │ │ │ ├── lodash._getnative@3.9.1 
  │ │ │ │ ├── lodash.isarguments@3.1.0 
  │ │ │ │ └── lodash.isarray@3.0.4 
  │ │ │ ├── lodash.restparam@3.6.1 
  │ │ │ └── lodash.templatesettings@3.1.1 
  │ │ ├── minimist@1.2.0 
  │ │ ├─┬ multipipe@0.1.2 
  │ │ │ └─┬ duplexer2@0.0.2 
  │ │ │   └── readable-stream@1.1.14 
  │ │ ├── object-assign@3.0.0 
  │ │ ├── replace-ext@0.0.1 
  │ │ ├─┬ through2@2.0.3 
  │ │ │ └─┬ readable-stream@2.3.3 
  │ │ │   ├── isarray@1.0.0 
  │ │ │   ├── process-nextick-args@1.0.7 
  │ │ │   ├── safe-buffer@5.1.1 
  │ │ │   ├── string_decoder@1.0.3 
  │ │ │   └── util-deprecate@1.0.2 
  │ │ └─┬ vinyl@0.5.3 
  │ │   ├── clone@1.0.2 
  │ │   └── clone-stats@0.0.1 
  │ ├── semver@2.3.2 
  │ └─┬ through2@0.5.1 
  │   ├─┬ readable-stream@1.0.34 
  │   │ ├── core-util-is@1.0.2 
  │   │ ├── inherits@2.0.3 
  │   │ ├── isarray@0.0.1 
  │   │ └── string_decoder@0.10.31 
  │   └── xtend@3.0.0 
  ├─┬ gulp-filter@1.0.2 
  │ ├─┬ multimatch@0.3.0 
  │ │ ├── array-differ@0.1.0 
  │ │ ├─┬ array-union@0.1.0 
  │ │ │ └── array-uniq@0.1.1 
  │ │ └─┬ minimatch@0.3.0 
  │ │   ├── lru-cache@2.7.3 
  │ │   └── sigmund@1.0.1 
  │ └─┬ through2@0.6.5 
  │   ├── readable-stream@1.0.34 
  │   └── xtend@4.0.1 
  ├─┬ gulp-git@0.5.6 
  │ ├── any-shell-escape@0.1.1 
  │ ├── require-dir@0.1.0 
  │ └─┬ through2@0.6.5 
  │   └── readable-stream@1.0.34 
  ├─┬ gulp-print@1.2.0 
  │ ├── colors@1.1.2 
  │ └── map-stream@0.0.7 
  ├─┬ gulp-prompt@0.1.2 
  │ ├─┬ event-stream@3.0.20 
  │ │ ├── duplexer@0.1.1 
  │ │ ├── from@0.1.7 
  │ │ ├── pause-stream@0.0.11 
  │ │ ├── split@0.2.10 
  │ │ ├── stream-combiner@0.0.4 
  │ │ └── through@2.3.8 
  │ └─┬ inquirer@0.3.5 
  │   ├── async@0.2.10 
  │   ├─┬ cli-color@0.2.3 
  │   │ ├── es5-ext@0.9.2 
  │   │ └─┬ memoizee@0.2.6 
  │   │   ├── event-emitter@0.2.2 
  │   │   └── next-tick@0.1.0 
  │   ├── lodash@1.2.1 
  │   └── mute-stream@0.0.3 
  ├─┬ gulp-tag-version@1.3.0 
  │ ├─┬ gulp-git@0.3.6 
  │ │ └─┬ through2@0.4.2 
  │ │   ├── readable-stream@1.0.34 
  │ │   └── xtend@2.1.2 
  │ ├─┬ gulp-util@2.2.20 
  │ │ ├─┬ chalk@0.5.1 
  │ │ │ ├── ansi-styles@1.1.0 
  │ │ │ ├─┬ has-ansi@0.1.0 
  │ │ │ │ └── ansi-regex@0.2.1 
  │ │ │ ├── strip-ansi@0.3.0 
  │ │ │ └── supports-color@0.2.0 
  │ │ ├─┬ dateformat@1.0.12 
  │ │ │ ├── get-stdin@4.0.1 
  │ │ │ └─┬ meow@3.7.0 
  │ │ │   ├─┬ camelcase-keys@2.1.0 
  │ │ │   │ └── camelcase@2.1.1 
  │ │ │   ├── decamelize@1.2.0 
  │ │ │   ├─┬ loud-rejection@1.6.0 
  │ │ │   │ ├─┬ currently-unhandled@0.4.1 
  │ │ │   │ │ └── array-find-index@1.0.2 
  │ │ │   │ └── signal-exit@3.0.2 
  │ │ │   ├── map-obj@1.0.1 
  │ │ │   ├─┬ normalize-package-data@2.4.0 
  │ │ │   │ ├── hosted-git-info@2.5.0 
  │ │ │   │ ├─┬ is-builtin-module@1.0.0 
  │ │ │   │ │ └── builtin-modules@1.1.1 
  │ │ │   │ └─┬ validate-npm-package-license@3.0.1 
  │ │ │   │   ├─┬ spdx-correct@1.0.2 
  │ │ │   │   │ └── spdx-license-ids@1.2.2 
  │ │ │   │   └── spdx-expression-parse@1.0.4 
  │ │ │   ├── object-assign@4.1.1 
  │ │ │   ├─┬ read-pkg-up@1.0.1 
  │ │ │   │ ├─┬ find-up@1.1.2 
  │ │ │   │ │ ├── path-exists@2.1.0 
  │ │ │   │ │ └─┬ pinkie-promise@2.0.1 
  │ │ │   │ │   └── pinkie@2.0.4 
  │ │ │   │ └─┬ read-pkg@1.1.0 
  │ │ │   │   ├─┬ load-json-file@1.1.0 
  │ │ │   │   │ ├── graceful-fs@4.1.11 
  │ │ │   │   │ ├─┬ parse-json@2.2.0 
  │ │ │   │   │ │ └─┬ error-ex@1.3.1 
  │ │ │   │   │ │   └── is-arrayish@0.2.1 
  │ │ │   │   │ ├── pify@2.3.0 
  │ │ │   │   │ └─┬ strip-bom@2.0.0 
  │ │ │   │   │   └── is-utf8@0.2.1 
  │ │ │   │   └── path-type@1.1.0 
  │ │ │   ├─┬ redent@1.0.0 
  │ │ │   │ ├─┬ indent-string@2.1.0 
  │ │ │   │ │ └─┬ repeating@2.0.1 
  │ │ │   │ │   └─┬ is-finite@1.0.2 
  │ │ │   │ │     └── number-is-nan@1.0.1 
  │ │ │   │ └── strip-indent@1.0.1 
  │ │ │   └── trim-newlines@1.0.0 
  │ │ ├── lodash._reinterpolate@2.4.1 
  │ │ ├─┬ lodash.template@2.4.1 
  │ │ │ ├── lodash._escapestringchar@2.4.1 
  │ │ │ ├─┬ lodash.defaults@2.4.1 
  │ │ │ │ ├── lodash._objecttypes@2.4.1 
  │ │ │ │ └── lodash.keys@2.4.1 
  │ │ │ ├─┬ lodash.escape@2.4.1 
  │ │ │ │ ├─┬ lodash._escapehtmlchar@2.4.1 
  │ │ │ │ │ └── lodash._htmlescapes@2.4.1 
  │ │ │ │ └─┬ lodash._reunescapedhtml@2.4.1 
  │ │ │ │   └── lodash.keys@2.4.1 
  │ │ │ ├─┬ lodash.keys@2.4.1 
  │ │ │ │ ├── lodash._isnative@2.4.1 
  │ │ │ │ ├── lodash._shimkeys@2.4.1 
  │ │ │ │ └── lodash.isobject@2.4.1 
  │ │ │ ├── lodash.templatesettings@2.4.1 
  │ │ │ └─┬ lodash.values@2.4.1 
  │ │ │   └── lodash.keys@2.4.1 
  │ │ ├── minimist@0.2.0 
  │ │ ├─┬ through2@0.5.1 
  │ │ │ └── xtend@3.0.0 
  │ │ └── vinyl@0.2.3 
  │ └── map-stream@0.1.0 
  ├── jquery@2.2.4 
  ├── lodash@4.17.4 
  ├── moment@2.18.1 
  ├── mousetrap@1.6.1 
  ├─┬ random-color@0.0.1 
  │ └── rnd@0.0.0 
  ├─┬ react@0.11.2 
  │ └─┬ envify@2.0.1 
  │   ├── esprima-fb@3001.1.0-dev-harmony-fb 
  │   ├─┬ jstransform@3.0.0 
  │   │ ├── base62@0.1.1 
  │   │ └─┬ source-map@0.1.31 
  │   │   └── amdefine@1.0.1 
  │   └─┬ xtend@2.1.2 
  │     └── object-keys@0.4.0 
  └── react.animate@1.0.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/react-carusel-webpack/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0997 took 4.0902s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (28:12) on program /**
 * @jsx React.DOM
 */
'use strict';

var $ = require('jquery');
var React = require('react.animate');
var emptyFunction = require('react/lib/emptyFunction');

var UpdateDimensionsOnResize = {
    updateDimensions: function () {
        this.setState({ height: $(window).height(), width: $(window).width()});
    },
    componentWillMount: function () {
        this.updateDimensions();
    },
    componentDidMount: function () {
        window.addEventListener("resize", this.updateDimensions);
    },
    componentWillUnmount: function () {
        window.removeEventListener("resize", this.updateDimensions);
    }
};

var ReactCaruselItem = React.createClass({
    render: function () {
        return (
            <div style={{float: 'left', width: this.props.width, height: '100%'}}>
                {this.props.children}
            </div>
            )
    }
});

var Mousetrap = require('mousetrap');

function createUIEvent(draggable) {
    return {
        position: {
            left: draggable.state.clientX
        }
    };
}

function isFunction(fn) {
    return typeof fn === 'function';
}

function getClientX(e) {
    var clientX;
    if (e.type == 'touchstart' || e.type == 'touchmove') {
        clientX = e.touches[0].pageX
    } else {
        clientX = e.clientX
    }
    return clientX;
}

function matchesSelector(el, selector) {
    if (isFunction(el.matches)) {
        return el.matches(selector);
    } else if (isFunction(el.webkitMatchesSelector)) {
        return el.webkitMatchesSelector(selector);
    } else if (isFunction(el.mozMatchesSelector)) {
        return el.mozMatchesSelector(selector);
    } else if (isFunction(el.msMatchesSelector)) {
        return el.msMatchesSelector(selector);
    } else if (isFunction(el.oMatchesSelector)) {
        return el.oMatchesSelector(selector);
    } else if (isFunction(el.webkitMatchesSelector)) {
        return el.webkitMatchesSelector(selector);
    }
}

function addEvent(el, event, handler) {
    if (!el) {
        return;
    }
    if (el.attachEvent) {
        el.attachEvent('on' + event, handler);
    } else if (el.addEventListener) {
        el.addEventListener(event, handler, true);
    } else {
        el['on' + event] = handler;
    }
}

function removeEvent(el, event, handler) {
    if (!el) {
        return;
    }
    if (el.detachEvent) {
        el.detachEvent('on' + event, handler);
    } else if (el.removeEventListener) {
        el.removeEventListener(event, handler, true);
    } else {
        el['on' + event] = null;
    }
}

var ReactCarusel = function () {
    return React.createClass({
        mixins: [UpdateDimensionsOnResize, React.Animate],
        getInitialState: function () {
            return {
                currentItemIndex: 0,
                moveTreshold: 0.05,
                dragging: false,
                startX: 0,
                offsetX: 0,
                clientX: 0
            }
        },
        move: function (dir) {
            var newItemIndex = this.state.currentItemIndex + dir;
            this.moveTo(newItemIndex);
        },
        moveTo: function (index) {
            index = index < 0 ? 0 : index;
            index = index >= this.state.numOfItems ? this.state.numOfItems - 1 : index;
            this.setState({currentItemIndex: index}, function () {
                this.translateTo();
            });
        },
        translateTo: function () {
            var translateVal = -this.state.width * this.state.currentItemIndex;
            this.translateToPosition(translateVal)
        },
        translateToPosition: function (pos) {
            this.animate({
                clientX: pos
            }, 500);
        },
        componentDidMount: function () {
            var that = this;
            this.setState({numOfItems: this.props.children.length});
            Mousetrap.bind('left', function () {
                that.move(-1)
            });
            Mousetrap.bind('right', function () {
                that.move(1)
            });
        },
        getAbsMoveTreshold: function () {
            return this.state.moveTreshold * this.state.width;
        },

        onStop: function () {
            var destination = this.state.clientX;

            var minMove = this.getAbsMoveTreshold(),
                absMove = this.state.startX - destination,
                itemsMove = Math[absMove >= 0 ? 'ceil' : 'floor'](absMove / this.state.width),
                shouldMove = true;

            if ((itemsMove + this.state.currentItemIndex) >= this.state.numOfItems) {
                itemsMove = this.state.numOfItems - 1 - this.state.currentItemIndex;
            }
            if ((itemsMove + this.state.currentItemIndex) < 0) {
                itemsMove = -this.state.currentItemIndex;
            }
            var moveOffset = shouldMove ? itemsMove : 0;

            this.moveTo(moveOffset + this.state.currentItemIndex)
        },

        onStart: function (e) {
        },

        onDrag: function (e) {

        },

        getDefaultProps: function () {
            return {
                axis: 'both',
                handle: null,
                cancel: null,
                zIndex: NaN,
                onStart: emptyFunction,
                onDrag: emptyFunction,
                onStop: emptyFunction
            };
        },

        handleMouseDown: function (e) {
            var node = this.getDOMNode();

            if ((this.props.handle && !matchesSelector(e.target, this.props.handle)) ||
                (this.props.cancel && matchesSelector(e.target, this.props.cancel))) {
                return;
            }

            var clientX = getClientX(e);

            this.setState({
                dragging: true,
                offsetX: clientX,
                startX: parseInt(node.style.left, 10) || 0
            });

            this.onStart(e, createUIEvent(this));

            addEvent(window, 'mousemove', this.handleMouseMove);
            addEvent(window, 'touchmove', this.handleMouseMove);
            addEvent(window, 'mouseup', this.handleMouseUp);
            addEvent(window, 'touchend', this.handleMouseUp);
        },

        handleMouseUp: function (e) {
            if (!this.state.dragging) {
                return;
            }

            this.setState({
                dragging: false
            });

            this.onStop(e, createUIEvent(this));

            removeEvent(window, 'mousemove', this.handleMouseMove);
            removeEvent(window, 'touchmove', this.handleMouseMove);
            removeEvent(window, 'mouseup', this.handleMouseUp);
            removeEvent(window, 'touchend', this.handleMouseUp);
        },

        handleMouseMove: function (e) {
            var clientX = getClientX(e);

            this.setState({
                clientX: (this.state.startX + (clientX - this.state.offsetX))
            });
            this.onDrag(e, createUIEvent(this));
        },

        render: function () {
            var index = 0,
                children = React.Children.map(this.props.children, function (child) {
                    return React.addons.cloneWithProps(child, {
                        ref: 'child-' + (index++)
                    });
                });

            var that = this;
            var i = 0;
            children = _.map(children, function (child) {
                return <ReactCaruselItem key={i++} width={that.state.width}>{child}</ReactCaruselItem>
            });

            var width = children.length * this.state.width;

            return (
                <div className="react-draggable" onTouchStart={this.handleMouseDown} onMouseDown={this.handleMouseDown}
                style={{height: '100%', width: width + 'px', left: this.state.clientX }}>
                            {children}
                </div>
                )
        }
    });
};

module.exports = ReactCarusel;
 at SyntaxError: Unexpected token (28:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1822:12)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1597:21)
    at Parser.pp$3.parseParenAndDistinguishExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1861:32)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
