/root/Targets/multi-image-mergetool
└─┬ multi-image-mergetool@1.32.1 
  ├─┬ async@2.1.5 
  │ └── lodash@4.17.4 
  ├─┬ body-parser@1.15.2 
  │ ├── bytes@2.4.0 
  │ ├── content-type@1.0.4 
  │ ├─┬ debug@2.2.0 
  │ │ └── ms@0.7.1 
  │ ├── depd@1.1.1 
  │ ├── iconv-lite@0.4.13 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── qs@6.2.0 
  │ ├─┬ raw-body@2.1.7 
  │ │ └── unpipe@1.0.0 
  │ └─┬ type-is@1.6.15 
  │   ├── media-typer@0.3.0 
  │   └─┬ mime-types@2.1.17 
  │     └── mime-db@1.30.0 
  ├── cli-spinners@1.0.1 
  ├── data-uri-to-buffer@0.0.4 
  ├─┬ express@4.14.1 
  │ ├─┬ accepts@1.3.4 
  │ │ └── negotiator@0.6.1 
  │ ├── array-flatten@1.1.1 
  │ ├── content-disposition@0.5.2 
  │ ├── cookie@0.3.1 
  │ ├── cookie-signature@1.0.6 
  │ ├── encodeurl@1.0.1 
  │ ├── escape-html@1.0.3 
  │ ├── etag@1.7.0 
  │ ├── finalhandler@0.5.1 
  │ ├── fresh@0.3.0 
  │ ├── merge-descriptors@1.0.1 
  │ ├── methods@1.1.2 
  │ ├── parseurl@1.3.2 
  │ ├── path-to-regexp@0.1.7 
  │ ├─┬ proxy-addr@1.1.5 
  │ │ ├── forwarded@0.1.2 
  │ │ └── ipaddr.js@1.4.0 
  │ ├── range-parser@1.2.0 
  │ ├─┬ send@0.14.2 
  │ │ ├── destroy@1.0.4 
  │ │ ├── mime@1.3.4 
  │ │ └── ms@0.7.2 
  │ ├── serve-static@1.11.2 
  │ ├── utils-merge@1.0.0 
  │ └── vary@1.1.2 
  ├─┬ glob@7.1.2 
  │ ├── fs.realpath@1.0.0 
  │ ├─┬ inflight@1.0.6 
  │ │ └── wrappy@1.0.2 
  │ ├── inherits@2.0.3 
  │ ├─┬ minimatch@3.0.4 
  │ │ └─┬ brace-expansion@1.1.8 
  │ │   ├── balanced-match@1.0.0 
  │ │   └── concat-map@0.0.1 
  │ ├── once@1.4.0 
  │ └── path-is-absolute@1.0.1 
  ├─┬ http-errors@1.5.1 
  │ ├── setprototypeof@1.0.2 
  │ └── statuses@1.3.1 
  ├─┬ jade@1.11.0 
  │ ├── character-parser@1.2.1 
  │ ├─┬ clean-css@3.4.28 
  │ │ ├─┬ commander@2.8.1 
  │ │ │ └── graceful-readlink@1.0.1 
  │ │ └─┬ source-map@0.4.4 
  │ │   └── amdefine@1.0.1 
  │ ├── commander@2.6.0 
  │ ├─┬ constantinople@3.0.2 
  │ │ └── acorn@2.7.0 
  │ ├─┬ jstransformer@0.0.2 
  │ │ ├── is-promise@2.1.0 
  │ │ └─┬ promise@6.1.0 
  │ │   └── asap@1.0.0 
  │ ├─┬ transformers@2.1.0 
  │ │ ├─┬ css@1.0.8 
  │ │ │ ├── css-parse@1.0.4 
  │ │ │ └── css-stringify@1.0.5 
  │ │ ├─┬ promise@2.0.0 
  │ │ │ └── is-promise@1.0.1 
  │ │ └─┬ uglify-js@2.2.5 
  │ │   ├─┬ optimist@0.3.7 
  │ │   │ └── wordwrap@0.0.3 
  │ │   └── source-map@0.1.43 
  │ ├─┬ uglify-js@2.8.29 
  │ │ ├── source-map@0.5.7 
  │ │ ├── uglify-to-browserify@1.0.2 
  │ │ └─┬ yargs@3.10.0 
  │ │   ├── camelcase@1.2.1 
  │ │   ├─┬ cliui@2.1.0 
  │ │   │ ├─┬ center-align@0.1.3 
  │ │   │ │ ├─┬ align-text@0.1.4 
  │ │   │ │ │ ├── kind-of@3.2.2 
  │ │   │ │ │ ├── longest@1.0.1 
  │ │   │ │ │ └── repeat-string@1.6.1 
  │ │   │ │ └── lazy-cache@1.0.4 
  │ │   │ ├── right-align@0.1.3 
  │ │   │ └── wordwrap@0.0.2 
  │ │   └── window-size@0.1.0 
  │ ├── void-elements@2.0.1 
  │ └─┬ with@4.0.3 
  │   ├── acorn@1.2.2 
  │   └── acorn-globals@1.0.9 
  ├─┬ looks-same@3.0.0 
  │ ├── color-diff@0.1.7 
  │ ├─┬ concat-stream@1.6.0 
  │ │ ├─┬ readable-stream@2.3.3 
  │ │ │ ├── core-util-is@1.0.2 
  │ │ │ ├── isarray@1.0.0 
  │ │ │ ├── process-nextick-args@1.0.7 
  │ │ │ ├── safe-buffer@5.1.1 
  │ │ │ ├── string_decoder@1.0.3 
  │ │ │ └── util-deprecate@1.0.2 
  │ │ └── typedarray@0.0.6 
  │ ├─┬ parse-color@1.0.0 
  │ │ └── color-convert@0.5.3 
  │ └── pngjs@2.3.1 
  ├─┬ mkdirp@0.5.1 
  │ └── minimist@0.0.8 
  ├─┬ multispinner@0.2.1 
  │ ├─┬ chalk@1.1.3 
  │ │ ├── ansi-styles@2.2.1 
  │ │ ├── escape-string-regexp@1.0.5 
  │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ └── ansi-regex@2.1.1 
  │ │ ├── strip-ansi@3.0.1 
  │ │ └── supports-color@2.0.0 
  │ ├─┬ figures@1.7.0 
  │ │ └── object-assign@4.1.1 
  │ ├─┬ kind-of@2.0.1 
  │ │ └── is-buffer@1.1.5 
  │ ├─┬ lodash.clonedeep@3.0.2 
  │ │ ├─┬ lodash._baseclone@3.3.0 
  │ │ │ ├── lodash._baseassign@3.2.0 
  │ │ │ └── lodash._basefor@3.0.3 
  │ │ └── lodash._bindcallback@3.0.1 
  │ ├─┬ lodash.merge@3.3.2 
  │ │ ├── lodash._arraycopy@3.0.0 
  │ │ ├── lodash._arrayeach@3.0.0 
  │ │ ├─┬ lodash._createassigner@3.1.1 
  │ │ │ ├── lodash._isiterateecall@3.0.9 
  │ │ │ └── lodash.restparam@3.6.1 
  │ │ ├── lodash._getnative@3.9.1 
  │ │ ├── lodash.isarguments@3.1.0 
  │ │ ├── lodash.isarray@3.0.4 
  │ │ ├── lodash.isplainobject@3.2.0 
  │ │ ├── lodash.istypedarray@3.0.6 
  │ │ ├── lodash.keys@3.1.2 
  │ │ ├── lodash.keysin@3.0.8 
  │ │ └─┬ lodash.toplainobject@3.0.0 
  │ │   └── lodash._basecopy@3.0.1 
  │ └─┬ log-update@1.0.2 
  │   ├── ansi-escapes@1.4.0 
  │   └─┬ cli-cursor@1.0.2 
  │     └─┬ restore-cursor@1.0.1 
  │       ├── exit-hook@1.1.1 
  │       └── onetime@1.1.0 
  ├── opener@1.4.3 
  ├─┬ tmp@0.0.29 
  │ └── os-tmpdir@1.0.2 
  ├── underscore@1.8.3 
  └─┬ yargs@6.3.0 
    ├── camelcase@3.0.0 
    ├─┬ cliui@3.2.0 
    │ └── wrap-ansi@2.1.0 
    ├── decamelize@1.2.0 
    ├── get-caller-file@1.0.2 
    ├─┬ os-locale@1.4.0 
    │ └─┬ lcid@1.0.0 
    │   └── invert-kv@1.0.0 
    ├─┬ read-pkg-up@1.0.1 
    │ ├─┬ find-up@1.1.2 
    │ │ ├── path-exists@2.1.0 
    │ │ └─┬ pinkie-promise@2.0.1 
    │ │   └── pinkie@2.0.4 
    │ └─┬ read-pkg@1.1.0 
    │   ├─┬ load-json-file@1.1.0 
    │   │ ├── graceful-fs@4.1.11 
    │   │ ├─┬ parse-json@2.2.0 
    │   │ │ └─┬ error-ex@1.3.1 
    │   │ │   └── is-arrayish@0.2.1 
    │   │ ├── pify@2.3.0 
    │   │ └─┬ strip-bom@2.0.0 
    │   │   └── is-utf8@0.2.1 
    │   ├─┬ normalize-package-data@2.4.0 
    │   │ ├── hosted-git-info@2.5.0 
    │   │ ├─┬ is-builtin-module@1.0.0 
    │   │ │ └── builtin-modules@1.1.1 
    │   │ ├── semver@5.4.1 
    │   │ └─┬ validate-npm-package-license@3.0.1 
    │   │   ├─┬ spdx-correct@1.0.2 
    │   │   │ └── spdx-license-ids@1.2.2 
    │   │   └── spdx-expression-parse@1.0.4 
    │   └── path-type@1.1.0 
    ├── require-directory@2.1.1 
    ├── require-main-filename@1.0.1 
    ├── set-blocking@2.0.0 
    ├─┬ string-width@1.0.2 
    │ ├── code-point-at@1.1.0 
    │ └─┬ is-fullwidth-code-point@1.0.0 
    │   └── number-is-nan@1.0.1 
    ├── which-module@1.0.0 
    ├── window-size@0.2.0 
    ├── y18n@3.2.1 
    └─┬ yargs-parser@4.2.1 
      └── camelcase@3.0.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/multi-image-mergetool/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0249 took 3.7526s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (2:4) on program // Load in our dependencies
var assert = require('assert');
var bodyParser = require('body-parser');
var dataUriToBuffer = require('data-uri-to-buffer');
var HttpError = require('http-errors');
var express = require('express');
var path = require('path');

// Define our server builder
function generateServer(imageSets) {
  // Create our server
  var server = express();

  // Configure our views
  // http://expressjs.com/en/guide/using-template-engines.html
  server.set('views', __dirname + '/views');
  server.set('view engine', 'jade');

  // Statically host our JS files
  server.use('/browser-dist', express.static(__dirname + '/../browser-dist'));

  // Set up body handling support
  // DEV: We are setting high limit with 1MB but we'll see if people exceed that...
  // https://github.com/expressjs/body-parser/tree/1.15.2#bodyparserurlencodedoptions
  server.use(bodyParser.urlencoded({extended: false, limit: '1MB'}));

  // Expose our images statically
  var imageSetsByFilepath = {};
  imageSets.forEach(function saveImageFilepath (imageSet) {
    imageSetsByFilepath[imageSet.currentImage] = imageSet;
    imageSetsByFilepath[imageSet.refImage] = imageSet;
    // DEV: We could have a security issue if someone symlinks `/tmp/...` to `/etc/passwd` =/
    //   but that's kind of unavoidable since the inode is constantly changing due to being a diff
    assert(imageSet.diffImage, 'Expected `imageSet.diffImage` to be defined but it wasn\'t. ' +
      'Please verify `imageSet.compare()` has been run first');
    imageSetsByFilepath[imageSet.diffImage] = imageSet;
  });
  function resolveImageSet(req, res, next) {
    // Attempt to recognize our image
    // Usage: `/images/gemini-report/images/root/Chrome~current.png`
    // Malicious usage: `/images/../../../../../etc/passwd`
    // DEV: We use `hasOwnProperty` to avoid exploits on `Object.prototype` (e.g. `/hasOwnProperty`)
    var requestedFilepath = req.params.filepath;
    if (!imageSetsByFilepath.hasOwnProperty(requestedFilepath)) {
      return next(new HttpError.NotFound());
    }

    // Otherwise, expose our filepath/image and continue
    req.requestedFilepath = requestedFilepath;
    req.imageSet = imageSetsByFilepath[requestedFilepath];
    next();
  }
  // DEV: We use `:filepath` instead of `imageSet.id` to make source of image more obvious in browser
  server.get('/images/:filepath', [
    resolveImageSet,
    function serveImages (req, res, next) {
      // Normalize our path to an absolute path
      // `/tmp/123456/gemini-report/images/root/Chrome~current.png.diff.png`
      // `gemini-report/images/root/Chrome~current.png` -> `$PWD/gemini-report/images/root/Chrome~current.png`
      var requestedFilepath = req.requestedFilepath;
      assert(req.requestedFilepath);
      if (!path.isAbsolute(requestedFilepath)) {
        requestedFilepath = path.join(process.cwd(), requestedFilepath);
      }

      // Otherwise, send our image
      // DEV: We don't use `send` as we want to avoid caching (e.g. for diffs)
      res.sendFile(requestedFilepath);
    }
  ]);

  // Define our application's page
  server.get('/', function rootShow (req, res, next) {
    res.render('index.jade', {
      image_sets: imageSets.map(function serializeImageSet (imageSet) {
        return imageSet.serialize();
      })
    });
  });

  // Define our image update route
  // TODO: Add CSRF support (totally possible attack vector sadly =/)
  //    Probably use cookies or RocksDB
  // DEV: We use `:filepath` instead of `imageSet.id` for consistency with `/images/:filepath`
  server.post('/update-image-set/:filepath', [
    resolveImageSet,
    function updateImageSetSave (req, res, next) {
      // Verify we got our input
      // DEV: We could use `body-parser-multidict` but it's not always compatible (i.e. different API)
      if (req.body.ref === undefined) {
        return next(new HttpError.BadRequest('Missing "ref" key on request'));
      }

      // Update our reference image
      // DEV: We could use `data-uri-to-buffer` in browser or at least strip off header but
      //   this is one less dependency to include in the build
      var refBuff = dataUriToBuffer(req.body.ref);
      req.imageSet.updateRef(refBuff, function handleResult (err, imagesEqual) {
        // If there was an error (e.g. couldn't read file), then callback with error
        if (err) {
          return next(err);
        }

        // Otherwise, send back result
        res.json({imagesEqual: imagesEqual});
      });
    }
  ]);

  // Silence NotFound errors
  server.use(function handleNotFoundError (err, req, res, next) {
    // If the error wasn't a NotFound error, then continue
    var isNotFoundError = err instanceof HttpError.NotFound;
    if (isNotFoundError === false) {
      return next(err);
    }

    // Otherwise, send a normal 404 response via `next()`
    // DEV: By default, Express logs the whole NotFound error
    next();
  });

  // Return our server
  return server;
}

// Export our server builder
module.exports = generateServer;
 at SyntaxError: Unexpected token (2:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
