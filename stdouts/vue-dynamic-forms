/root/Targets/vue-dynamic-forms
└─┬ vue-dynamic-forms@1.1.0 
  └── vue@2.4.4 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/vue-dynamic-forms/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0473 took 2.0074s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (1:78) on program <template>
	<div class="dynamic-form-wrapper">
		<!-- api call render form with onSubmit method -->
		<h3 v-show="config.title">{{config.title}}</h3>
		<form @submit.prevent='onSubmit'>
			<div class="form-group" v-for="input in config.inputs">
				<dynamic-input :input="input" :error="form.errors.has(input.name) ? form.errors.get(input.name) : false"></dynamic-input> 
			</div>
			<input type="submit" class="btn btn-primary" :value="config.submitText || 'Submit'">
		</form>
	</div>

</template>

<script>
//added the form class
import { Form } from './classes'
//added the dynamic input component
import dynamicInput  from './dynamic-input.vue'
/**
 * @module Dynamic forms component
 * @param {Object} config the configuration of the whole form
 * @see module:dynamic-input
 * @see class:classes/Form.js
 * @see clas:classes/Errors.js
*/
export default {

	name: 'dynamic-form',
	components:{
		dynamicInput
	},
	props:{
		config:{
			required:true,
			type:Object
		}
	},
	data () {
		let newForm=new Form(this.config.inputs,this.config.request)
		return {
			form:newForm
		};
	},
	methods:{
		onSubmit(){
			this.form.submit()
			.then((response) => {
				this.$emit('succes',{res:response,data:this.form.data()})
			})
			.catch((err) => {
				this.$emit('fail',err)
			})
		
		}
	}
};
</script>

<style lang="css" scoped>
</style> at SyntaxError: Unexpected token (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1822:12)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1597:21)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
