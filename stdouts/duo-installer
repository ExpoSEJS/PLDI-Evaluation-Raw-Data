/root/Targets/duo-installer
├─┬ duo-installer@0.0.3 
│ ├── batch@0.5.3 
│ ├─┬ co-fs@1.1.1 
│ │ └── thunkify@0.0.1 
│ ├── co-parallel@0.0.1 
│ ├── debug@0.8.1 
│ └─┬ duo-package@0.0.10 
│   ├─┬ co-fs@1.2.0 
│   │ └─┬ co-from-stream@0.0.0 
│   │   └── co-read@0.0.1 
│   ├─┬ co-req@0.0.4 
│   │ └─┬ hyperdirect@0.0.0 
│   │   ├─┬ hyperquest@0.1.8 
│   │   │ └── through@2.2.7 
│   │   └── through@2.3.8 
│   ├─┬ co-write@0.3.1 
│   │ └── stream-write@1.0.1 
│   └─┬ decompress@0.2.5 
│     ├── adm-zip@0.4.7 
│     ├─┬ ext-name@1.0.1 
│     │ ├─┬ ext-list@0.2.0 
│     │ │ └─┬ got@0.2.0 
│     │ │   └── object-assign@0.3.1 
│     │ └── underscore.string@2.3.3 
│     ├── get-stdin@0.1.0 
│     ├── mkdirp@0.3.5 
│     ├─┬ nopt@2.2.1 
│     │ └── abbrev@1.1.1 
│     ├─┬ rimraf@2.6.2 
│     │ └─┬ glob@7.1.2 
│     │   ├── fs.realpath@1.0.0 
│     │   ├─┬ inflight@1.0.6 
│     │   │ └── wrappy@1.0.2 
│     │   ├─┬ minimatch@3.0.4 
│     │   │ └─┬ brace-expansion@1.1.8 
│     │   │   ├── balanced-match@1.0.0 
│     │   │   └── concat-map@0.0.1 
│     │   ├── once@1.4.0 
│     │   └── path-is-absolute@1.0.1 
│     ├─┬ stream-combiner@0.0.4 
│     │ └── duplexer@0.1.1 
│     ├─┬ tar@0.1.20 
│     │ ├── block-stream@0.0.9 
│     │ ├─┬ fstream@0.1.31 
│     │ │ ├─┬ graceful-fs@3.0.11 
│     │ │ │ └── natives@1.1.0 
│     │ │ └─┬ mkdirp@0.5.1 
│     │ │   └── minimist@0.0.8 
│     │ └── inherits@2.0.3 
│     └─┬ tempfile@0.1.3 
│       └── uuid@1.4.2 
└─┬ gh2@0.5.2  (git://github.com/matthewmueller/gh.git#f241e69817991363dbf4b1ce372cc17700459b63)
  ├── ms@0.6.2 
  ├─┬ request@2.33.0 
  │ ├── aws-sign2@0.5.0 
  │ ├── forever-agent@0.5.2 
  │ ├─┬ form-data@0.1.4 
  │ │ ├── async@0.9.2 
  │ │ └─┬ combined-stream@0.0.7 
  │ │   └── delayed-stream@0.0.5 
  │ ├─┬ hawk@1.0.0 
  │ │ ├── boom@0.4.2 
  │ │ ├── cryptiles@0.2.2 
  │ │ ├── hoek@0.9.1 
  │ │ └── sntp@0.2.4 
  │ ├─┬ http-signature@0.10.1 
  │ │ ├── asn1@0.1.11 
  │ │ ├── assert-plus@0.1.5 
  │ │ └── ctype@0.5.3 
  │ ├── json-stringify-safe@5.0.1 
  │ ├── mime@1.2.11 
  │ ├── node-uuid@1.4.8 
  │ ├── oauth-sign@0.3.0 
  │ ├── qs@0.6.6 
  │ ├─┬ tough-cookie@2.3.3 
  │ │ └── punycode@1.4.1 
  │ └── tunnel-agent@0.3.0 
  └── semver@2.2.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/duo-installer/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 22% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","RegExp","some"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0437 took 5.3975s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Invalid number (9:15) on program var path = require('path');
var fs = require('fs');

module.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;

function mkdirP (p, mode, f, made) {
    if (typeof mode === 'function' || mode === undefined) {
        f = mode;
        mode = 0777 & (~process.umask());
    }
    if (!made) made = null;

    var cb = f || function () {};
    if (typeof mode === 'string') mode = parseInt(mode, 8);
    p = path.resolve(p);

    fs.mkdir(p, mode, function (er) {
        if (!er) {
            made = made || p;
            return cb(null, made);
        }
        switch (er.code) {
            case 'ENOENT':
                mkdirP(path.dirname(p), mode, function (er, made) {
                    if (er) cb(er, made);
                    else mkdirP(p, mode, cb, made);
                });
                break;

            // In the case of any other error, just see if there's a dir
            // there already.  If so, then hooray!  If not, then something
            // is borked.
            default:
                fs.stat(p, function (er2, stat) {
                    // if the stat fails, then that's super weird.
                    // let the original error be the failure reason.
                    if (er2 || !stat.isDirectory()) cb(er, made)
                    else cb(null, made);
                });
                break;
        }
    });
}

mkdirP.sync = function sync (p, mode, made) {
    if (mode === undefined) {
        mode = 0777 & (~process.umask());
    }
    if (!made) made = null;

    if (typeof mode === 'string') mode = parseInt(mode, 8);
    p = path.resolve(p);

    try {
        fs.mkdirSync(p, mode);
        made = made || p;
    }
    catch (err0) {
        switch (err0.code) {
            case 'ENOENT' :
                made = sync(path.dirname(p), mode, made);
                sync(p, mode, made);
                break;

            // In the case of any other error, just see if there's a dir
            // there already.  If so, then hooray!  If not, then something
            // is borked.
            default:
                var stat;
                try {
                    stat = fs.statSync(p);
                }
                catch (err1) {
                    throw err0;
                }
                if (!stat.isDirectory()) throw err0;
                break;
        }
    }

    return made;
};
 at SyntaxError: Invalid number (9:15)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1607:12)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/duo-installer/node_modules/duo-installer/index.js. Coverage (Term): 6% Coverage (LOC): 8%
*- File /root/Targets/duo-installer/node_modules/debug/lib/debug.js. Coverage (Term): 39% Coverage (LOC): 61%
*- File /root/Targets/duo-installer/node_modules/duo-package/index.js. Coverage (Term): 4% Coverage (LOC): 4%
*- File /root/Targets/duo-installer/node_modules/decompress/index.js. Coverage (Term): 6% Coverage (LOC): 8%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
