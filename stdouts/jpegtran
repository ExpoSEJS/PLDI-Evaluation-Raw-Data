
> jpegtran-bin@3.0.4 postinstall /root/Targets/jpegtran/node_modules/jpegtran-bin
> node lib/install.js

/root/Targets/jpegtran
└─┬ jpegtran@1.0.5 
  ├─┬ jpegtran-bin@3.0.4 
  │ ├─┬ bin-build@2.2.0 
  │ │ ├─┬ archive-type@3.2.0 
  │ │ │ └── file-type@3.9.0 
  │ │ ├─┬ decompress@3.0.0 
  │ │ │ ├── buffer-to-vinyl@1.1.0 
  │ │ │ ├─┬ concat-stream@1.6.0 
  │ │ │ │ ├── inherits@2.0.3 
  │ │ │ │ └── typedarray@0.0.6 
  │ │ │ ├─┬ decompress-tar@3.1.0 
  │ │ │ │ ├── is-tar@1.0.0 
  │ │ │ │ ├── object-assign@2.1.1 
  │ │ │ │ ├─┬ strip-dirs@1.1.1 
  │ │ │ │ │ ├── is-natural-number@2.1.1 
  │ │ │ │ │ └── sum-up@1.0.3 
  │ │ │ │ ├─┬ tar-stream@1.5.4 
  │ │ │ │ │ ├── bl@1.2.1 
  │ │ │ │ │ ├── end-of-stream@1.4.0 
  │ │ │ │ │ └── xtend@4.0.1 
  │ │ │ │ ├─┬ through2@0.6.5 
  │ │ │ │ │ └─┬ readable-stream@1.0.34 
  │ │ │ │ │   ├── isarray@0.0.1 
  │ │ │ │ │   └── string_decoder@0.10.31 
  │ │ │ │ └─┬ vinyl@0.4.6 
  │ │ │ │   └── clone@0.2.0 
  │ │ │ ├─┬ decompress-tarbz2@3.1.0 
  │ │ │ │ ├── is-bzip2@1.0.0 
  │ │ │ │ ├─┬ seek-bzip@1.0.5 
  │ │ │ │ │ └─┬ commander@2.8.1 
  │ │ │ │ │   └── graceful-readlink@1.0.1 
  │ │ │ │ └─┬ vinyl@0.4.6 
  │ │ │ │   └── clone@0.2.0 
  │ │ │ ├─┬ decompress-targz@3.1.0 
  │ │ │ │ ├── is-gzip@1.0.0 
  │ │ │ │ └─┬ vinyl@0.4.6 
  │ │ │ │   └── clone@0.2.0 
  │ │ │ ├─┬ decompress-unzip@3.4.0 
  │ │ │ │ ├── is-zip@1.0.0 
  │ │ │ │ ├── stat-mode@0.2.2 
  │ │ │ │ ├── through2@2.0.3 
  │ │ │ │ └─┬ yauzl@2.8.0 
  │ │ │ │   ├── buffer-crc32@0.2.13 
  │ │ │ │   └─┬ fd-slicer@1.0.1 
  │ │ │ │     └── pend@1.2.0 
  │ │ │ ├─┬ stream-combiner2@1.1.1 
  │ │ │ │ └── duplexer2@0.1.4 
  │ │ │ ├─┬ vinyl-assign@1.2.1 
  │ │ │ │ └── object-assign@4.1.1 
  │ │ │ └─┬ vinyl-fs@2.4.4 
  │ │ │   ├─┬ duplexify@3.5.1 
  │ │ │   │ └── stream-shift@1.0.0 
  │ │ │   ├─┬ glob-stream@5.3.5 
  │ │ │   │ ├── extend@3.0.1 
  │ │ │   │ ├── glob@5.0.15 
  │ │ │   │ ├─┬ glob-parent@3.1.0 
  │ │ │   │ │ ├─┬ is-glob@3.1.0 
  │ │ │   │ │ │ └── is-extglob@2.1.1 
  │ │ │   │ │ └── path-dirname@1.0.2 
  │ │ │   │ ├─┬ micromatch@2.3.11 
  │ │ │   │ │ ├─┬ arr-diff@2.0.0 
  │ │ │   │ │ │ └── arr-flatten@1.1.0 
  │ │ │   │ │ ├── array-unique@0.2.1 
  │ │ │   │ │ ├─┬ braces@1.8.5 
  │ │ │   │ │ │ ├─┬ expand-range@1.8.2 
  │ │ │   │ │ │ │ └─┬ fill-range@2.2.3 
  │ │ │   │ │ │ │   ├── is-number@2.1.0 
  │ │ │   │ │ │ │   ├── isobject@2.1.0 
  │ │ │   │ │ │ │   ├─┬ randomatic@1.1.7 
  │ │ │   │ │ │ │   │ ├─┬ is-number@3.0.0 
  │ │ │   │ │ │ │   │ │ └── kind-of@3.2.2 
  │ │ │   │ │ │ │   │ └── kind-of@4.0.0 
  │ │ │   │ │ │ │   └── repeat-string@1.6.1 
  │ │ │   │ │ │ ├── preserve@0.2.0 
  │ │ │   │ │ │ └── repeat-element@1.1.2 
  │ │ │   │ │ ├─┬ expand-brackets@0.1.5 
  │ │ │   │ │ │ └── is-posix-bracket@0.1.1 
  │ │ │   │ │ ├─┬ extglob@0.3.2 
  │ │ │   │ │ │ └── is-extglob@1.0.0 
  │ │ │   │ │ ├── filename-regex@2.0.1 
  │ │ │   │ │ ├── is-extglob@1.0.0 
  │ │ │   │ │ ├── is-glob@2.0.1 
  │ │ │   │ │ ├─┬ kind-of@3.2.2 
  │ │ │   │ │ │ └── is-buffer@1.1.5 
  │ │ │   │ │ ├─┬ normalize-path@2.1.1 
  │ │ │   │ │ │ └── remove-trailing-separator@1.1.0 
  │ │ │   │ │ ├─┬ object.omit@2.0.1 
  │ │ │   │ │ │ ├─┬ for-own@0.1.5 
  │ │ │   │ │ │ │ └── for-in@1.0.2 
  │ │ │   │ │ │ └── is-extendable@0.1.1 
  │ │ │   │ │ ├─┬ parse-glob@3.0.4 
  │ │ │   │ │ │ ├─┬ glob-base@0.3.0 
  │ │ │   │ │ │ │ ├── glob-parent@2.0.0 
  │ │ │   │ │ │ │ └─┬ is-glob@2.0.1 
  │ │ │   │ │ │ │   └── is-extglob@1.0.0 
  │ │ │   │ │ │ ├── is-dotfile@1.0.3 
  │ │ │   │ │ │ ├── is-extglob@1.0.0 
  │ │ │   │ │ │ └── is-glob@2.0.1 
  │ │ │   │ │ └─┬ regex-cache@0.4.4 
  │ │ │   │ │   └─┬ is-equal-shallow@0.1.3 
  │ │ │   │ │     └── is-primitive@2.0.0 
  │ │ │   │ ├── ordered-read-streams@0.3.0 
  │ │ │   │ ├─┬ to-absolute-glob@0.1.1 
  │ │ │   │ │ └── extend-shallow@2.0.1 
  │ │ │   │ └─┬ unique-stream@2.2.1 
  │ │ │   │   └─┬ json-stable-stringify@1.0.1 
  │ │ │   │     └── jsonify@0.0.0 
  │ │ │   ├── graceful-fs@4.1.11 
  │ │ │   ├─┬ gulp-sourcemaps@1.6.0 
  │ │ │   │ ├── convert-source-map@1.5.0 
  │ │ │   │ └── through2@2.0.3 
  │ │ │   ├── is-valid-glob@0.3.0 
  │ │ │   ├── lazystream@1.0.0 
  │ │ │   ├── lodash.isequal@4.5.0 
  │ │ │   ├── merge-stream@1.0.1 
  │ │ │   ├─┬ mkdirp@0.5.1 
  │ │ │   │ └── minimist@0.0.8 
  │ │ │   ├── object-assign@4.1.1 
  │ │ │   ├─┬ strip-bom@2.0.0 
  │ │ │   │ └── is-utf8@0.2.1 
  │ │ │   ├─┬ strip-bom-stream@1.0.0 
  │ │ │   │ └── first-chunk-stream@1.0.0 
  │ │ │   ├── through2@2.0.3 
  │ │ │   ├─┬ through2-filter@2.0.0 
  │ │ │   │ └── through2@2.0.3 
  │ │ │   └── vali-date@1.0.0 
  │ │ ├─┬ download@4.4.3 
  │ │ │ ├─┬ caw@1.2.0 
  │ │ │ │ ├─┬ get-proxy@1.1.0 
  │ │ │ │ │ └─┬ rc@1.2.1 
  │ │ │ │ │   ├── deep-extend@0.4.2 
  │ │ │ │ │   ├── ini@1.3.4 
  │ │ │ │ │   └── strip-json-comments@2.0.1 
  │ │ │ │ ├── is-obj@1.0.1 
  │ │ │ │ ├── object-assign@3.0.0 
  │ │ │ │ └── tunnel-agent@0.4.3 
  │ │ │ ├─┬ filenamify@1.2.1 
  │ │ │ │ ├── filename-reserved-regex@1.0.0 
  │ │ │ │ ├── strip-outer@1.0.0 
  │ │ │ │ └── trim-repeated@1.0.0 
  │ │ │ ├─┬ got@5.7.1 
  │ │ │ │ ├─┬ create-error-class@3.0.2 
  │ │ │ │ │ └── capture-stack-trace@1.0.0 
  │ │ │ │ ├── is-redirect@1.0.0 
  │ │ │ │ ├── is-retry-allowed@1.1.0 
  │ │ │ │ ├── is-stream@1.1.0 
  │ │ │ │ ├── lowercase-keys@1.0.0 
  │ │ │ │ ├── node-status-codes@1.0.0 
  │ │ │ │ ├── object-assign@4.1.1 
  │ │ │ │ ├─┬ parse-json@2.2.0 
  │ │ │ │ │ └─┬ error-ex@1.3.1 
  │ │ │ │ │   └── is-arrayish@0.2.1 
  │ │ │ │ ├─┬ pinkie-promise@2.0.1 
  │ │ │ │ │ └── pinkie@2.0.4 
  │ │ │ │ ├── timed-out@3.1.3 
  │ │ │ │ ├── unzip-response@1.0.2 
  │ │ │ │ └─┬ url-parse-lax@1.0.0 
  │ │ │ │   └── prepend-http@1.0.4 
  │ │ │ ├─┬ gulp-decompress@1.2.0 
  │ │ │ │ └─┬ gulp-util@3.0.8 
  │ │ │ │   ├── array-differ@1.0.0 
  │ │ │ │   ├── array-uniq@1.0.3 
  │ │ │ │   ├── beeper@1.1.1 
  │ │ │ │   ├── dateformat@2.2.0 
  │ │ │ │   ├─┬ fancy-log@1.3.0 
  │ │ │ │   │ └── time-stamp@1.1.0 
  │ │ │ │   ├─┬ gulplog@1.0.0 
  │ │ │ │   │ └── glogg@1.0.0 
  │ │ │ │   ├─┬ has-gulplog@0.1.0 
  │ │ │ │   │ └── sparkles@1.0.0 
  │ │ │ │   ├── lodash._reescape@3.0.0 
  │ │ │ │   ├── lodash._reevaluate@3.0.0 
  │ │ │ │   ├── lodash._reinterpolate@3.0.0 
  │ │ │ │   ├─┬ lodash.template@3.6.2 
  │ │ │ │   │ ├── lodash._basecopy@3.0.1 
  │ │ │ │   │ ├── lodash._basetostring@3.0.1 
  │ │ │ │   │ ├── lodash._basevalues@3.0.0 
  │ │ │ │   │ ├── lodash._isiterateecall@3.0.9 
  │ │ │ │   │ ├─┬ lodash.escape@3.2.0 
  │ │ │ │   │ │ └── lodash._root@3.0.1 
  │ │ │ │   │ ├─┬ lodash.keys@3.1.2 
  │ │ │ │   │ │ ├── lodash._getnative@3.9.1 
  │ │ │ │   │ │ ├── lodash.isarguments@3.1.0 
  │ │ │ │   │ │ └── lodash.isarray@3.0.4 
  │ │ │ │   │ ├── lodash.restparam@3.6.1 
  │ │ │ │   │ └── lodash.templatesettings@3.1.1 
  │ │ │ │   ├─┬ multipipe@0.1.2 
  │ │ │ │   │ └─┬ duplexer2@0.0.2 
  │ │ │ │   │   └─┬ readable-stream@1.1.14 
  │ │ │ │   │     ├── isarray@0.0.1 
  │ │ │ │   │     └── string_decoder@0.10.31 
  │ │ │ │   ├── object-assign@3.0.0 
  │ │ │ │   ├── through2@2.0.3 
  │ │ │ │   └── vinyl@0.5.3 
  │ │ │ ├── gulp-rename@1.2.2 
  │ │ │ ├── is-url@1.2.2 
  │ │ │ ├── object-assign@4.1.1 
  │ │ │ ├── read-all-stream@3.1.0 
  │ │ │ ├─┬ readable-stream@2.3.3 
  │ │ │ │ ├── core-util-is@1.0.2 
  │ │ │ │ ├── isarray@1.0.0 
  │ │ │ │ ├── process-nextick-args@1.0.7 
  │ │ │ │ ├── safe-buffer@5.1.1 
  │ │ │ │ ├── string_decoder@1.0.3 
  │ │ │ │ └── util-deprecate@1.0.2 
  │ │ │ ├─┬ vinyl@1.2.0 
  │ │ │ │ ├── clone@1.0.2 
  │ │ │ │ ├── clone-stats@0.0.1 
  │ │ │ │ └── replace-ext@0.0.1 
  │ │ │ └─┬ ware@1.3.0 
  │ │ │   └─┬ wrap-fn@0.1.5 
  │ │ │     └── co@3.1.0 
  │ │ ├─┬ exec-series@1.0.3 
  │ │ │ ├── async-each-series@1.1.0 
  │ │ │ └── object-assign@4.1.1 
  │ │ ├─┬ rimraf@2.6.2 
  │ │ │ └─┬ glob@7.1.2 
  │ │ │   ├── fs.realpath@1.0.0 
  │ │ │   ├─┬ inflight@1.0.6 
  │ │ │   │ └── wrappy@1.0.2 
  │ │ │   ├─┬ minimatch@3.0.4 
  │ │ │   │ └─┬ brace-expansion@1.1.8 
  │ │ │   │   ├── balanced-match@1.0.0 
  │ │ │   │   └── concat-map@0.0.1 
  │ │ │   ├── once@1.4.0 
  │ │ │   └── path-is-absolute@1.0.1 
  │ │ ├─┬ tempfile@1.1.1 
  │ │ │ ├── os-tmpdir@1.0.2 
  │ │ │ └── uuid@2.0.3 
  │ │ └─┬ url-regex@3.2.0 
  │ │   └── ip-regex@1.0.3 
  │ ├─┬ bin-wrapper@3.0.2 
  │ │ ├─┬ bin-check@2.0.0 
  │ │ │ └─┬ executable@1.1.0 
  │ │ │   └─┬ meow@3.7.0 
  │ │ │     ├─┬ camelcase-keys@2.1.0 
  │ │ │     │ └── camelcase@2.1.1 
  │ │ │     ├── decamelize@1.2.0 
  │ │ │     ├─┬ loud-rejection@1.6.0 
  │ │ │     │ ├─┬ currently-unhandled@0.4.1 
  │ │ │     │ │ └── array-find-index@1.0.2 
  │ │ │     │ └── signal-exit@3.0.2 
  │ │ │     ├── map-obj@1.0.1 
  │ │ │     ├─┬ normalize-package-data@2.4.0 
  │ │ │     │ ├── hosted-git-info@2.5.0 
  │ │ │     │ ├─┬ is-builtin-module@1.0.0 
  │ │ │     │ │ └── builtin-modules@1.1.1 
  │ │ │     │ └─┬ validate-npm-package-license@3.0.1 
  │ │ │     │   ├─┬ spdx-correct@1.0.2 
  │ │ │     │   │ └── spdx-license-ids@1.2.2 
  │ │ │     │   └── spdx-expression-parse@1.0.4 
  │ │ │     ├── object-assign@4.1.1 
  │ │ │     ├─┬ read-pkg-up@1.0.1 
  │ │ │     │ ├─┬ find-up@1.1.2 
  │ │ │     │ │ └── path-exists@2.1.0 
  │ │ │     │ └─┬ read-pkg@1.1.0 
  │ │ │     │   ├─┬ load-json-file@1.1.0 
  │ │ │     │   │ └── pify@2.3.0 
  │ │ │     │   └── path-type@1.1.0 
  │ │ │     ├─┬ redent@1.0.0 
  │ │ │     │ └── strip-indent@1.0.1 
  │ │ │     └── trim-newlines@1.0.0 
  │ │ ├─┬ bin-version-check@2.1.0 
  │ │ │ ├─┬ bin-version@1.0.4 
  │ │ │ │ └─┬ find-versions@1.2.1 
  │ │ │ │   └── semver-regex@1.0.0 
  │ │ │ ├── minimist@1.2.0 
  │ │ │ ├── semver@4.3.6 
  │ │ │ └─┬ semver-truncate@1.1.2 
  │ │ │   └── semver@5.4.1 
  │ │ ├─┬ each-async@1.1.1 
  │ │ │ ├── onetime@1.1.0 
  │ │ │ └── set-immediate-shim@1.0.1 
  │ │ ├── lazy-req@1.1.0 
  │ │ └── os-filter-obj@1.0.3 
  │ └─┬ logalot@2.1.0 
  │   ├─┬ figures@1.7.0 
  │   │ ├── escape-string-regexp@1.0.5 
  │   │ └── object-assign@4.1.1 
  │   └─┬ squeak@1.3.0 
  │     ├─┬ chalk@1.1.3 
  │     │ ├── ansi-styles@2.2.1 
  │     │ ├─┬ has-ansi@2.0.0 
  │     │ │ └── ansi-regex@2.1.1 
  │     │ ├── strip-ansi@3.0.1 
  │     │ └── supports-color@2.0.0 
  │     ├── console-stream@0.1.1 
  │     └─┬ lpad-align@1.1.2 
  │       ├── get-stdin@4.0.1 
  │       ├─┬ indent-string@2.1.0 
  │       │ └─┬ repeating@2.0.1 
  │       │   └─┬ is-finite@1.0.2 
  │       │     └── number-is-nan@1.0.1 
  │       └── longest@1.0.1 
  ├─┬ memoizeasync@0.9.0 
  │ ├── lru-cache@2.5.0 
  │ └── passerror@1.1.1 
  └─┬ which@1.1.1 
    └─┬ is-absolute@0.1.7 
      └── is-relative@0.1.3 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/jpegtran/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 23% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0176 took 3.5497s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Invalid number (19:21) on program module.exports = which
which.sync = whichSync

var isWindows = process.platform === 'win32' ||
    process.env.OSTYPE === 'cygwin' ||
    process.env.OSTYPE === 'msys'

var path = require('path')
var COLON = isWindows ? ';' : ':'
var isExe
var fs = require('fs')
var isAbsolute = require('is-absolute')

if (isWindows) {
  // On windows, there is no good way to check that a file is executable
  isExe = function isExe () { return true }
} else {
  isExe = function isExe (mod, uid, gid) {
    var ret = (mod & 0001)
        || (mod & 0010) && process.getgid && gid === process.getgid()
        || (mod & 0100) && process.getuid && uid === process.getuid()
        || (mod & 0110) && process.getuid && 0   === process.getuid()

    if (process.getgroups && (mod & 0010)) {
      var groups = process.getgroups()
      for (var g = 0; g < groups.length; g++) {
        if (groups[g] === gid)
          return true
      }
    }

    return ret
  }
}

function which (cmd, opt, cb) {
  if (typeof opt === 'function') {
    cb = opt
    opt = {}
  }

  var colon = opt.colon || COLON
  var pathEnv = opt.path || process.env.PATH || ''
  var pathExt = ['']

  // On windows, env.Path is common.
  if (isWindows && !pathEnv) {
    var k = Object.keys(process.env)
    for (var p = 0; p < k.length; p++) {
      if (p.toLowerCase() === 'path') {
        pathEnv = process.env[p]
        break
      }
    }
  }

  pathEnv = pathEnv.split(colon)

  if (isWindows) {
    pathEnv.unshift(process.cwd())
    pathExt = (opt.pathExt || process.env.PATHEXT || '.EXE').split(colon)
    if (cmd.indexOf('.') !== -1 && pathExt[0] !== '')
      pathExt.unshift('')
  }

  // If it's absolute, then we don't bother searching the pathenv.
  // just check the file itself, and that's it.
  if (isAbsolute(cmd))
    pathEnv = ['']

  ;(function F (i, l) {
    if (i === l) return cb(new Error('not found: '+cmd))
    var p = path.resolve(pathEnv[i], cmd)
    ;(function E (ii, ll) {
      if (ii === ll) return F(i + 1, l)
      var ext = pathExt[ii]
      fs.stat(p + ext, function (er, stat) {
        if (!er &&
            stat.isFile() &&
            isExe(stat.mode, stat.uid, stat.gid)) {
          return cb(null, p + ext)
        }
        return E(ii + 1, ll)
      })
    })(0, pathExt.length)
  })(0, pathEnv.length)
}

function whichSync (cmd, opt) {
  if (!opt)
    opt = {}

  var colon = opt.colon || COLON

  var pathEnv = opt.path || process.env.PATH || ''
  var pathExt = ['']

  // On windows, env.Path is common.
  if (isWindows && !pathEnv) {
    var k = Object.keys(process.env)
    for (var p = 0; p < k.length; p++) {
      if (p.toLowerCase() === 'path') {
        pathEnv = process.env[p]
        break
      }
    }
  }

  pathEnv = pathEnv.split(colon)

  if (isWindows) {
    pathEnv.unshift(process.cwd())
    pathExt = (opt.pathExt || process.env.PATHEXT || '.EXE').split(colon)
    if (cmd.indexOf('.') !== -1 && pathExt[0] !== '')
      pathExt.unshift('')
  }

  // If it's absolute, then we don't bother searching the pathenv.
  // just check the file itself, and that's it.
  if (isAbsolute(cmd))
    pathEnv = ['']

  for (var i = 0, l = pathEnv.length; i < l; i ++) {
    var p = path.join(pathEnv[i], cmd)
    for (var j = 0, ll = pathExt.length; j < ll; j ++) {
      var cur = p + pathExt[j]
      var stat
      try {
        stat = fs.statSync(cur)
        if (stat.isFile() && isExe(stat.mode, stat.uid, stat.gid))
          return cur
      } catch (ex) {}
    }
  }

  throw new Error('not found: '+cmd)
}
 at SyntaxError: Invalid number (19:21)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp$3.parseExprOp (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1654:14)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1639:17)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/jpegtran/node_modules/jpegtran/lib/JpegTran.js. Coverage (Term): 7% Coverage (LOC): 4%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
