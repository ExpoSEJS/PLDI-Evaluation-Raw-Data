
> iconv@2.2.3 install /root/Targets/ave-irc/node_modules/iconv
> node-gyp rebuild

make: Entering directory '/root/Targets/ave-irc/node_modules/iconv/build'
  CXX(target) Release/obj.target/iconv/src/binding.o
  CC(target) Release/obj.target/iconv/deps/libiconv/lib/iconv.o
  SOLINK_MODULE(target) Release/obj.target/iconv.node
  COPY Release/iconv.node
make: Leaving directory '/root/Targets/ave-irc/node_modules/iconv/build'

> node-icu-charset-detector@0.2.0 install /root/Targets/ave-irc/node_modules/node-icu-charset-detector
> node-gyp rebuild

make: Entering directory '/root/Targets/ave-irc/node_modules/node-icu-charset-detector/build'
  CXX(target) Release/obj.target/node-icu-charset-detector/node-icu-charset-detector.o
node-icu-charset-detector.target.mk:92: recipe for target 'Release/obj.target/node-icu-charset-detector/node-icu-charset-detector.o' failed
make: Leaving directory '/root/Targets/ave-irc/node_modules/node-icu-charset-detector/build'
/root/Targets/ave-irc
└─┬ ave-irc@0.4.0 
  ├─┬ electron-squirrel-startup@1.0.0 
  │ └─┬ debug@2.6.9 
  │   └── ms@2.0.0 
  ├─┬ firebase@3.9.0 
  │ ├── base64url@2.0.0 
  │ ├── buffer-equal-constant-time@1.0.1 
  │ ├── dom-storage@2.0.2 
  │ ├── ecdsa-sig-formatter@1.0.9 
  │ ├── faye-websocket@0.9.3 
  │ ├── hoek@2.16.3 
  │ ├── isemail@1.2.0 
  │ ├── joi@6.10.1 
  │ ├── jsonwebtoken@7.4.0 
  │ ├── jwa@1.1.5 
  │ ├── jws@3.1.4 
  │ ├── lodash.once@4.1.1 
  │ ├── moment@2.18.1 
  │ ├── ms@0.7.3 
  │ ├── promise-polyfill@6.0.2 
  │ ├── safe-buffer@5.0.1 
  │ ├── topo@1.1.0 
  │ ├── websocket-driver@0.6.5 
  │ ├── websocket-extensions@0.1.1 
  │ ├── xmlhttprequest@1.8.0 
  │ └── xtend@4.0.1 
  ├─┬ irc@0.5.2 
  │ ├─┬ iconv@2.2.3 
  │ │ └── nan@2.7.0 
  │ └── irc-colors@1.3.3 
  ├─┬ linkifyjs@2.1.5 
  │ ├── jquery@3.2.1 
  │ ├─┬ react@16.0.0 
  │ │ ├─┬ fbjs@0.8.16 
  │ │ │ ├── core-js@1.2.7 
  │ │ │ ├─┬ isomorphic-fetch@2.2.1 
  │ │ │ │ ├─┬ node-fetch@1.7.3 
  │ │ │ │ │ ├─┬ encoding@0.1.12 
  │ │ │ │ │ │ └── iconv-lite@0.4.19 
  │ │ │ │ │ └── is-stream@1.1.0 
  │ │ │ │ └── whatwg-fetch@2.0.3 
  │ │ │ ├─┬ promise@7.3.1 
  │ │ │ │ └── asap@2.0.6 
  │ │ │ ├── setimmediate@1.0.5 
  │ │ │ └── ua-parser-js@0.7.14 
  │ │ ├─┬ loose-envify@1.3.1 
  │ │ │ └── js-tokens@3.0.2 
  │ │ ├── object-assign@4.1.1 
  │ │ └── prop-types@15.6.0 
  │ └── react-dom@16.0.0 
  ├── marked@0.3.6 
  ├── material-design-lite@1.3.0 
  └── nodejs-websocket@1.7.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/ave-irc/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0884 took 4.8237s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: 'return' outside of function (19:41) on program /*
Ave Material Design Modern IRC Client
Copyright (C) 2016  Damian Heaton

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

if(require('electron-squirrel-startup')) return;

const {app, BrowserWindow, ipcMain, shell, autoUpdater} = require("electron");
const ws = require("nodejs-websocket");
const os = require("os");
const fs = require("fs");

if(os.platform === "win32"){
    const feedURL = 'http://ave-update.herokuapp.com/update/win32-' + os.arch();

    var cmd = process.argv[1];
    if(cmd === "--squirrel-install"){
        app.quit();
    }

    autoUpdater.addListener("update-available", function(event) {
        console.log("an update is available");
    });
    autoUpdater.addListener("update-downloaded", function(event, releaseNotes, releaseName, releaseDate, updateURL) {
        console.log("update downloaded");
        autoUpdater.quitAndInstall();
    });
    autoUpdater.addListener("error", function(error) {
        console.log("update error", error);
    });
    autoUpdater.addListener("checking-for-update", function(event) {
        console.log("checking for an update");
    });
    autoUpdater.addListener("update-not-available", function(event) {
        console.log("no updates are available");
    });

    autoUpdater.setFeedURL(feedURL);
    autoUpdater.checkForUpdates();
}

let windows = [];
let contents = [];
let mainWin;
let api;

var ico = `${__dirname}/app/res/img/icon.png`;

var Settings = JSON.parse(fs.readFileSync("settings.json", "utf-8"));
var apisocket = false;

function startServer(){
    if(Settings.enableWebsocketApi){
        try{
            api = ws.createServer(function(conn){
                console.log("New connection");
                conn.on("close", function(code, reason){
                    console.log("Connection closed");
                });
            });
            api.listen(Settings.websocketPort);
            apisocket = true;
        }catch(err){
            // we couldn't start the websocket server
            console.log("Unable to start the websocket server.", err);
        }
    }
    start();
}

function start(){
    mainWin = new BrowserWindow({
        width: 900,
        height: 700,
        icon: ico
    });
    console.log(ico);

    mainWin.loadURL(`file://${__dirname}/app/dash.html`);

    var that = this;

    ipcMain.on("server", function(event, serverId, serverData, uid){
        var newWin = new Window(serverId, serverData, uid);
        windows.push(newWin);
        contents.push(newWin.contents);
    });
}

function Window(serverId, serverData, uid){
    this.win = new BrowserWindow({
        width: 900,
        height: 700,
        icon: ico
    });

    this.contents = this.win.webContents;

    this.win.loadURL(`file://${__dirname}/app/client.html`);

    var that = this;

    this.contents.on("did-finish-load", function(){
        that.contents.send("server", serverId, serverData, uid);
    });

    this.win.on("closed", function(){
        this.win = null;
    })
}

ipcMain.on("websocket-api-send", function(event, obj){
    if(apisocket){
        console.log(obj);
        var index = contents.indexOf(event.sender);
        console.log(index);
        obj.instance = index;
        json = JSON.stringify(obj);
        api.connections.forEach(function(conn){
            conn.send(json);
        });
    }
});

app.on("ready", startServer);

// all windows closed; quit
app.on("window-all-closed", function(){
    // account for standard macOS operation
    if(process.platform !== "darwin"){
        app.quit();
    }
});

app.on("activate", function(){
    // more mac specific stuff
    if(win == null){
        start();
    }
});
 at SyntaxError: 'return' outside of function (19:41)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$1.parseReturnStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:831:12)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:699:34)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:698:30)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
    at Parser.parse (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:516:17)
    at Object.parse (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:3098:39)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
