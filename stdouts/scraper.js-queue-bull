/root/Targets/scraper.js-queue-bull
└─┬ scraper.js-queue-bull@4.0.8 
  ├── bluebird@3.5.0 
  ├─┬ bull@3.2.0 
  │ ├─┬ cron-parser@2.4.1 
  │ │ ├─┬ is-nan@1.2.1 
  │ │ │ └─┬ define-properties@1.1.2 
  │ │ │   ├── foreach@2.0.5 
  │ │ │   └── object-keys@1.0.11 
  │ │ └─┬ moment-timezone@0.5.13 
  │ │   └── moment@2.18.1 
  │ ├── debuglog@1.0.1 
  │ ├─┬ ioredis@3.1.4 
  │ │ ├── cluster-key-slot@1.0.8 
  │ │ ├─┬ debug@2.6.9 
  │ │ │ └── ms@2.0.0 
  │ │ ├── denque@1.2.2 
  │ │ ├── flexbuffer@0.0.6 
  │ │ ├── lodash.assign@4.2.0 
  │ │ ├── lodash.bind@4.2.1 
  │ │ ├── lodash.clone@4.5.0 
  │ │ ├── lodash.clonedeep@4.5.0 
  │ │ ├── lodash.defaults@4.2.0 
  │ │ ├── lodash.difference@4.5.0 
  │ │ ├── lodash.flatten@4.4.0 
  │ │ ├── lodash.foreach@4.5.0 
  │ │ ├── lodash.isempty@4.4.0 
  │ │ ├── lodash.keys@4.2.0 
  │ │ ├── lodash.noop@3.0.1 
  │ │ ├── lodash.partial@4.2.1 
  │ │ ├── lodash.pick@4.4.0 
  │ │ ├── lodash.sample@4.2.1 
  │ │ ├── lodash.shuffle@4.2.0 
  │ │ └── lodash.values@4.3.0 
  │ ├── lodash@4.17.4 
  │ ├── semver@5.4.1 
  │ └── uuid@3.1.0 
  └─┬ redis@2.8.0 
    ├── double-ended-queue@2.1.0-0 
    ├── redis-commands@1.3.1 
    └── redis-parser@2.6.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/scraper.js-queue-bull/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0634 took 3.3931s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (36:10) on program const bull = require('bull');
const redis = require('redis');
const bluebird = require('bluebird');

bluebird.promisifyAll(redis.RedisClient.prototype);
bluebird.promisifyAll(redis.Multi.prototype);

const REDIS_PORT = process.env.REDIS_PORT || 6379;
const REDIS_HOST = process.env.REDIS_HOST || '127.0.0.1';

const redisClient = redis.createClient({
  host: REDIS_HOST,
  port: REDIS_PORT,
});

const KEY_PREFIX = 'scraper.js-queue-bull-url-cache';

function getKey(queueItem) {
  return `${KEY_PREFIX}:(${queueItem.url})`;
}

function removeCache(queueItem) {
  return redisClient.delAsync(getKey(queueItem));
}

function createBullQueue(name) {
  const queue = bull(name, `redis://${REDIS_HOST}:${REDIS_PORT}`);

  return {
    process(fn) {
      queue.process(job => fn(job.data, job));
    },
    empty() {
      return queue.empty();
    },
    async add(queueItem) {
      const {
        expiry = 86400000,
        priority = 10,
        attempts = 2,
        backoff = 3600000,
        removeOnComplete = true,
      } = queueItem;

      // @todo was doing: removing options paramater and combining it with the queueItem
      const key = `${KEY_PREFIX}:(${queueItem.url})`;
      const saved = await redisClient.setnxAsync(key, 'true');

      if (saved === 1) {
        await queue.add(queueItem, {
          priority,
          attempts,
          backoff,
          removeOnComplete,
        });
        await redisClient.expireAsync(key, Math.ceil(expiry / 1000));
        return true;
      }

      return false;
    },
    count() {
      return queue.count();
    },
    close() {
      return queue.close();
    },
  };
}

module.exports = {
  createQueue: createBullQueue,
  removeCache,
};
 at SyntaxError: Unexpected token (36:10)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:28)
    at Parser.pp$3.parseObj (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1973:16)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1805:19)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
