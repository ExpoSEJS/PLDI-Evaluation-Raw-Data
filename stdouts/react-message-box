/root/Targets/react-message-box
└─┬ react-message-box@1.0.6 
  ├─┬ react@15.6.2 
  │ ├── create-react-class@15.6.2 
  │ ├─┬ fbjs@0.8.16 
  │ │ ├── core-js@1.2.7 
  │ │ ├─┬ isomorphic-fetch@2.2.1 
  │ │ │ ├─┬ node-fetch@1.7.3 
  │ │ │ │ ├─┬ encoding@0.1.12 
  │ │ │ │ │ └── iconv-lite@0.4.19 
  │ │ │ │ └── is-stream@1.1.0 
  │ │ │ └── whatwg-fetch@2.0.3 
  │ │ ├─┬ promise@7.3.1 
  │ │ │ └── asap@2.0.6 
  │ │ ├── setimmediate@1.0.5 
  │ │ └── ua-parser-js@0.7.14 
  │ ├─┬ loose-envify@1.3.1 
  │ │ └── js-tokens@3.0.2 
  │ ├── object-assign@4.1.1 
  │ └── prop-types@15.6.0 
  ├─┬ react-bootstrap@0.30.10 
  │ ├─┬ babel-runtime@6.26.0 
  │ │ ├── core-js@2.5.1 
  │ │ └── regenerator-runtime@0.11.0 
  │ ├── classnames@2.2.5 
  │ ├── dom-helpers@3.2.1 
  │ ├── invariant@2.2.2 
  │ ├── keycode@2.1.9 
  │ ├── react-overlays@0.6.12 
  │ ├── react-prop-types@0.4.0 
  │ ├── uncontrollable@4.1.0 
  │ └── warning@3.0.0 
  └── react-dom@15.6.2 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/react-message-box/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0398 took 3.1432s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (70:3) on program import React from 'react';
import {Modal, Button} from 'react-bootstrap'

export default class MessageBox extends React.Component {
    constructor(props) {
		super(props);

		this.okHandler      = this.okHandler.bind(this);
		this.closeHandler   = this.closeHandler.bind(this);
		this.closeBox       = this.closeBox.bind(this);

		this.state = {
			show: false,
			confirm: false,
			title: '',
			message: '',
		}
    }

    alert(title, message) {
		this.okCb = this.closeBox();
		this.setState({title, message, show: true, confirm: false});

		return this;
    }

    confirm(title, message) {
		this.okCb = this.cancleCb = this.closeBox;
		this.setState({title, message, show: true, confirm: true});

		return this;
    }

    runCb(cb) {
		if (cb && typeof(cb) === 'function') {
			cb();
		}
    }

    closeBox() {
		this.setState({show: false});
    }

    okHandler() {
		this.runCb(this.okCb);
		this.okCb = this.closeBox;
		this.closeBox();
    }

    closeHandler() {
		this.runCb(this.cancleCb);
		this.cancleCb = this.closeBox;
		this.closeBox();
    }

    ok(cb) {
		this.okCb = cb;

		return this;
    }

    cancle(cb) {
		this.cancleCb = cb;

		return this;
    }

    render() {
		return (
			<div>
				<Modal show={this.state.show} onHide={this.closeHandler}
					container={this} aria-labelledby="contained-modal-title">

					<Modal.Header closeButton>
						<Modal.Title id="contained-modal-title">
							{this.state.title}
						</Modal.Title>
					</Modal.Header>

					<Modal.Body id="contained-modal-body">
						{this.state.message}
					</Modal.Body>

					<Modal.Footer>
						{ 
							this.state.confirm?
							(<Button onClick={this.closeHandler}>Cancle</Button>): null
						}
						<Button onClick={this.okHandler}>Ok</Button>
					</Modal.Footer>
				</Modal>
			</div>
		)
    }
}

 at SyntaxError: Unexpected token (70:3)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1822:12)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1597:21)
    at Parser.pp$3.parseParenAndDistinguishExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1861:32)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
