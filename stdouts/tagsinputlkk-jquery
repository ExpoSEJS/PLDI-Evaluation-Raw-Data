/root/Targets/tagsinputlkk-jquery
└── tagsinputlkk-jquery@1.0.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/tagsinputlkk-jquery/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0612 took 3.3108s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (1:78) on program <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>tagsInputLkk	QQ:6712817</title>
</head>
<script src="jquery.min.js"></script>
<style>
    .kk span {
        float: left;
        margin-left: 5px
    }

    #kk2 span, input {
        font-size: 12px;
        float: left;
        border: 1px solid #cccccc;
        border-radius: 5px;
        color: #cccccc;
        padding: 5px;
        height: 14px
    }

    input {
        outline: none;
        font-size: 12px
    }

    .kk3 {
        border: none;
        width: 5px
    }

    .sub {
        width: 60px;
        height: 24px;
        display: block;
        float: left;
        background: green;
        color: #ffffff;
        line-height: 24px;
        font-size: 12px;
        text-align: center;
        margin-left: 10px;
        text-decoration: none
    }
</style>
<script>
    $(function(){
        //获取文本宽度
        var textWidth = function(text){
            var sensor = $('<pre>'+ text +'</pre>').css({display: 'none'});
            $('body').append(sensor);
            var width = sensor.width();
            sensor.remove();
            return width;
        };
        $('#kk2').delegate('input','keyup',function(event){
            if($(this).attr('name')=='tag' || $(this).attr('name')=='tag2') {
                $(this).width(textWidth($(this).val()));
            }
            if($(this).val()=='' && event.keyCode==8){
                if($(this).attr('class')=='kk3'){
                    $(this).prev().prev('input').focus();
                    $(this).prev('span').remove();
                    $(this).remove();
                    return false;
                }
                if($(this).attr('name')=='tag'){

                    $(this).next('input').remove();
                    $(this).prev('input').focus();
                    $(this).remove();
                    return false;
                }
                $(this).prev('input').remove();
                $(this).prev('span').remove();
            }
            if(event.keyCode==32){
                if($(this).val()==' '){
                    $(this).val('');
                    return false;
                }
                var val = $(this).val();
                val = val.replace(' ','');
                if($(this).attr('name')=='tag'){
                    $(this).before('<span>'+val+'</span><input type="text" class="kk3" name="tag2" >');
                    $(this).next('input').remove();
                    $(this).remove();
                    return false;
                }
                if($(this).attr('name')=='tag2'){
                    $(this).before('<input type="text" class="kk3" name="tag2" ><span>'+val+'</span>');
                    $(this).val('');
                    $(this).width('5px');
                    return false;
                }
                if($(this).attr('name')=='tags'){
                    $(this).before('<span>'+val+'</span><input type="text" class="kk3" name="tag2" >');
                    $(this).val('');
                    return false;
                }
                $(this).val('');
            }

        });
        $('#kk2').delegate('input[name="tag"]','blur',function(){
            var val = $(this).val();
            if (val != '') {
                $(this).before('<span>' + val + '</span><input type="text" class="kk3" name="tag2" >');
                $(this).next('input').remove();
                $(this).remove();
            }
        });
        $('#kk2').delegate('span','click',function(){
            $('input[name="tag"]').each(function(){
                var val = $(this).val();
                $(this).before('<span>'+val+'</span>');
                $(this).remove();
            });
            var spanText = $(this).text();
            var spanWidth = $(this).width();
            $(this).after('<input type="text" name="tag" autocomplete="off" value="'+ spanText +'" style="width:'+spanWidth+'px"/>');
            $(this).remove();
            $('input[name="tag"]').focus();
        });
        $('.sub').click(function(){
            var arr = [];
            $('span').each(function(){
                arr.push($(this).text());
            });
            console.log(arr);
        });
    })

</script>
<body>
    <div id="kk2">
        <span>1111</span><input type="text" class="kk3" name="tag2">
        <span>2222</span><input type="text" class="kk3" name="tag2">
        <span>3333</span><input type="text" class="kk3" name="tag2">
        <span>4444</span><input type="text" class="kk3" name="tag2">
        <input type="text" name="tags" autocomplete="off"  placeholder="请输入标签"/>
        <a href="javascript:;" class="sub">提交</a>
    </div>


</body>
</html> at SyntaxError: Unexpected token (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1822:12)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1597:21)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
