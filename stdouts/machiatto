/root/Targets/machiatto
└─┬ machiatto@0.0.6 
  ├── async@0.9.2 
  ├── commander@2.2.0 
  ├─┬ debug@3.1.0 
  │ └── ms@2.0.0 
  ├── diff@1.0.8 
  ├─┬ glob@4.0.6 
  │ ├─┬ graceful-fs@3.0.11 
  │ │ └── natives@1.1.0 
  │ ├── inherits@2.0.3 
  │ ├─┬ minimatch@1.0.0 
  │ │ ├── lru-cache@2.7.3 
  │ │ └── sigmund@1.0.1 
  │ └─┬ once@1.4.0 
  │   └── wrappy@1.0.2 
  ├─┬ gulp@3.7.0 
  │ ├── archy@0.0.2 
  │ ├─┬ chalk@0.4.0 
  │ │ ├── ansi-styles@1.0.0 
  │ │ ├── has-color@0.1.7 
  │ │ └── strip-ansi@0.1.1 
  │ ├── deprecated@0.0.1 
  │ ├─┬ gulp-util@2.2.20 
  │ │ ├─┬ chalk@0.5.1 
  │ │ │ ├── ansi-styles@1.1.0 
  │ │ │ ├── escape-string-regexp@1.0.5 
  │ │ │ ├── has-ansi@0.1.0 
  │ │ │ ├─┬ strip-ansi@0.3.0 
  │ │ │ │ └── ansi-regex@0.2.1 
  │ │ │ └── supports-color@0.2.0 
  │ │ ├─┬ dateformat@1.0.12 
  │ │ │ ├── get-stdin@4.0.1 
  │ │ │ └─┬ meow@3.7.0 
  │ │ │   ├─┬ camelcase-keys@2.1.0 
  │ │ │   │ └── camelcase@2.1.1 
  │ │ │   ├── decamelize@1.2.0 
  │ │ │   ├─┬ loud-rejection@1.6.0 
  │ │ │   │ ├─┬ currently-unhandled@0.4.1 
  │ │ │   │ │ └── array-find-index@1.0.2 
  │ │ │   │ └── signal-exit@3.0.2 
  │ │ │   ├── map-obj@1.0.1 
  │ │ │   ├── minimist@1.2.0 
  │ │ │   ├─┬ normalize-package-data@2.4.0 
  │ │ │   │ ├── hosted-git-info@2.5.0 
  │ │ │   │ ├─┬ is-builtin-module@1.0.0 
  │ │ │   │ │ └── builtin-modules@1.1.1 
  │ │ │   │ └─┬ validate-npm-package-license@3.0.1 
  │ │ │   │   ├─┬ spdx-correct@1.0.2 
  │ │ │   │   │ └── spdx-license-ids@1.2.2 
  │ │ │   │   └── spdx-expression-parse@1.0.4 
  │ │ │   ├── object-assign@4.1.1 
  │ │ │   ├─┬ read-pkg-up@1.0.1 
  │ │ │   │ ├─┬ find-up@1.1.2 
  │ │ │   │ │ ├── path-exists@2.1.0 
  │ │ │   │ │ └─┬ pinkie-promise@2.0.1 
  │ │ │   │ │   └── pinkie@2.0.4 
  │ │ │   │ └─┬ read-pkg@1.1.0 
  │ │ │   │   ├─┬ load-json-file@1.1.0 
  │ │ │   │   │ ├── graceful-fs@4.1.11 
  │ │ │   │   │ ├─┬ parse-json@2.2.0 
  │ │ │   │   │ │ └─┬ error-ex@1.3.1 
  │ │ │   │   │ │   └── is-arrayish@0.2.1 
  │ │ │   │   │ ├── pify@2.3.0 
  │ │ │   │   │ └── strip-bom@2.0.0 
  │ │ │   │   └─┬ path-type@1.1.0 
  │ │ │   │     └── graceful-fs@4.1.11 
  │ │ │   ├─┬ redent@1.0.0 
  │ │ │   │ ├─┬ indent-string@2.1.0 
  │ │ │   │ │ └─┬ repeating@2.0.1 
  │ │ │   │ │   └─┬ is-finite@1.0.2 
  │ │ │   │ │     └── number-is-nan@1.0.1 
  │ │ │   │ └── strip-indent@1.0.1 
  │ │ │   └── trim-newlines@1.0.0 
  │ │ ├── lodash._reinterpolate@2.4.1 
  │ │ ├─┬ lodash.template@2.4.1 
  │ │ │ ├── lodash._escapestringchar@2.4.1 
  │ │ │ ├─┬ lodash.defaults@2.4.1 
  │ │ │ │ └── lodash._objecttypes@2.4.1 
  │ │ │ ├─┬ lodash.escape@2.4.1 
  │ │ │ │ ├─┬ lodash._escapehtmlchar@2.4.1 
  │ │ │ │ │ └── lodash._htmlescapes@2.4.1 
  │ │ │ │ └── lodash._reunescapedhtml@2.4.1 
  │ │ │ ├─┬ lodash.keys@2.4.1 
  │ │ │ │ ├── lodash._isnative@2.4.1 
  │ │ │ │ ├── lodash._shimkeys@2.4.1 
  │ │ │ │ └── lodash.isobject@2.4.1 
  │ │ │ ├── lodash.templatesettings@2.4.1 
  │ │ │ └── lodash.values@2.4.1 
  │ │ ├── minimist@0.2.0 
  │ │ ├─┬ multipipe@0.1.2 
  │ │ │ └─┬ duplexer2@0.0.2 
  │ │ │   └── readable-stream@1.1.14 
  │ │ ├─┬ through2@0.5.1 
  │ │ │ ├─┬ readable-stream@1.0.34 
  │ │ │ │ ├── core-util-is@1.0.2 
  │ │ │ │ ├── isarray@0.0.1 
  │ │ │ │ └── string_decoder@0.10.31 
  │ │ │ └── xtend@3.0.0 
  │ │ └─┬ vinyl@0.2.3 
  │ │   └── clone-stats@0.0.1 
  │ ├── interpret@0.3.10 
  │ ├─┬ liftoff@0.11.3 
  │ │ ├── extend@1.2.1 
  │ │ ├─┬ findup-sync@0.1.3 
  │ │ │ ├─┬ glob@3.2.11 
  │ │ │ │ └── minimatch@0.3.0 
  │ │ │ └── lodash@2.4.2 
  │ │ └── resolve@0.7.4 
  │ ├── minimist@0.1.0 
  │ ├─┬ orchestrator@0.3.8 
  │ │ ├─┬ end-of-stream@0.1.5 
  │ │ │ └── once@1.3.3 
  │ │ ├── sequencify@0.0.7 
  │ │ └── stream-consume@0.1.0 
  │ ├── pretty-hrtime@0.2.2 
  │ ├── semver@2.3.2 
  │ ├── tildify@0.2.0 
  │ └─┬ vinyl-fs@0.2.1 
  │   ├─┬ glob-stream@3.1.18 
  │   │ ├─┬ glob@4.5.3 
  │   │ │ └── inflight@1.0.6 
  │   │ ├─┬ glob2base@0.0.12 
  │   │ │ └── find-index@0.1.1 
  │   │ ├─┬ minimatch@2.0.10 
  │   │ │ └─┬ brace-expansion@1.1.8 
  │   │ │   ├── balanced-match@1.0.0 
  │   │ │   └── concat-map@0.0.1 
  │   │ ├── ordered-read-streams@0.1.0 
  │   │ ├─┬ through2@0.6.5 
  │   │ │ ├── readable-stream@1.0.34 
  │   │ │ └── xtend@4.0.1 
  │   │ └── unique-stream@1.0.0 
  │   ├─┬ glob-watcher@0.0.6 
  │   │ └─┬ gaze@0.5.2 
  │   │   └─┬ globule@0.1.0 
  │   │     ├─┬ glob@3.1.21 
  │   │     │ ├── graceful-fs@1.2.3 
  │   │     │ └── inherits@1.0.2 
  │   │     ├── lodash@1.0.2 
  │   │     └── minimatch@0.2.14 
  │   ├── map-stream@0.1.0 
  │   ├─┬ mkdirp@0.5.1 
  │   │ └── minimist@0.0.8 
  │   └─┬ strip-bom@0.3.1 
  │     ├── first-chunk-stream@0.1.0 
  │     └── is-utf8@0.2.1 
  └─┬ jade@0.26.3 
    ├── commander@0.6.1 
    └── mkdirp@0.3.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/machiatto/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 28.999999999999996% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0644 took 3.672s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (168:7) on program var async = require('async');
var tree = require('./tree');

function noop() {}
var roots = {};

function test(fn, name, spec) {
	return {
		fn: fn,

		title: name,

		slow: function () {
			return 100;
		},

		fullTitle: function () {
			return spec + ' - ' + name;
		}
	};
}

function prepareContext(path, callback) {
	var empty = {data: {}, name: ''};

	async.eachSeries(path, runPathFunction, function (err) {
		callback(err, empty);
	});

	function runPathFunction(node, callback) {
		var type = node.model && node.model.type;
		var name = node.model && node.model.name;
		var fn = node.model && node.model.fn;

		if (name && fn && fn !== noop) {
			empty.name += type + ' ' + name + ' ';
			fn = fn.length === 2 ? fn : asyncWrap(fn);

			return fn(empty.data, callback);
		}

		callback(null);
	}

	function asyncWrap(fn) {
		return function (context, callback) {
			fn(context);
			process.nextTick(callback);
		};
	}
}

function assertRunner(assert, suite, skipped, only) {
	return {
		suite: suite,

		only: only,

		run: function (runner, callback) {
			if (!assert.run) {
				var path = assert.path({includeSelf: false});

				return prepareContext(path, function (err, context) {
					if (err) {
						return callback(err);
					}

					run(context, assert, runner, suite);

					callback(null);
				});
			}

			callback(null);
		}
	};

	function run(context, assert, runner, suite) {
		var name = context.name + 'it should ' + assert.model.name;
		var running = test(assert.model.fn, name, suite);

		assert.run = true;

		if (assert.model.fn === noop || skipped) {
			return runner.emit('pending', running);
		}

		try {
			assert.model.fn(context.data);
		} catch (err) {
			return runner.emit('fail', running, err);
		}

		runner.emit('pass', running);
		runner.emit('test end', running);

		return running;
	}
}

function context(suite) {
	var asserts = [];
	var root = tree();
	var curr = null;

	var cache = roots[suite] = roots[suite] || [];
	cache.push(root);

	var skipped = false;
	var only = false;

	return {
		lookup: function (name) {
			var pred = function (node) {
				return node.model && node.model.name === name && node.model.fn !== noop;
			};

			for(var i = 0; i < roots[suite].length; i++) {
				var found = roots[suite][i].find(pred);

				if (found) {
					return found.model.fn;
				}
			}
		},

		reusable: function (name, fn) {
			fn = fn || this.lookup(name);

			if (!fn) {
				throw new Error('missing function for ' + name);
			}

			return fn;
		},

		establish: function (name, fn) {
			if (typeof fn === 'string' && fn === 'noop') {
				fn = noop;
			}

			fn = this.reusable(name, fn);
			curr = root.add({type: 'when', name: name, fn: fn});

			return this;
		},

		arrange: function (name, fn) {
			if (typeof fn === 'string' && fn === 'noop') {
				fn = noop;
			}

			if (!curr) {
				throw new Error('context in not established, make sure `.when()` is called before');
			}

			fn = this.reusable(name, fn);
			curr = curr.add({type: 'and', name: name, fn: fn});

			return this;
		},

		assert: function (name, fn) {
			if (typeof fn === 'string' && fn === 'noop') {
				fn = noop;
			}

			var assert = curr.add({type: 'assert', name: name, fn: fn});
			asserts.push(assert);

			return this;
		},

		skip: function () {
			skipped = true;
			return this;
		},

		only: function () {
			only = true;
			return this;
		},

		asserts: function () {
			return asserts.map(function (assert) {
				return assertRunner(assert, suite, skipped, only);
			});
		}
	};
}

module.exports = context;
 at SyntaxError: Unexpected token (168:7)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/machiatto/node_modules/machiatto/source/machiatto.js. Coverage (Term): 9% Coverage (LOC): 13%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
