
> ws@0.4.32 install /root/Targets/imhacker/node_modules/ws
> (node-gyp rebuild 2> builderror.log) || (exit 0)

make: Entering directory '/root/Targets/imhacker/node_modules/ws/build'
  CXX(target) Release/obj.target/bufferutil/src/bufferutil.o
bufferutil.target.mk:96: recipe for target 'Release/obj.target/bufferutil/src/bufferutil.o' failed
make: Leaving directory '/root/Targets/imhacker/node_modules/ws/build'
/root/Targets/imhacker
└─┬ imhacker@0.1.0 
  ├─┬ async-cache@1.1.0 
  │ └─┬ lru-cache@4.1.1 
  │   ├── pseudomap@1.0.2 
  │   └── yallist@2.1.2 
  ├── micro-location@0.1.5 
  ├── micro-strptime@0.2.2 
  ├── routes@0.1.1 
  ├─┬ socket.io@0.9.19 
  │ ├── base64id@0.1.0 
  │ ├── policyfile@0.0.4 
  │ ├── redis@0.7.3 
  │ └─┬ socket.io-client@0.9.16 
  │   ├─┬ active-x-obfuscator@0.0.1 
  │   │ └── zeparser@0.0.5 
  │   ├── uglify-js@1.2.5 
  │   ├─┬ ws@0.4.32 
  │   │ ├── commander@2.1.0 
  │   │ ├── nan@1.0.0 
  │   │ ├── options@0.0.6 
  │   │ └── tinycolor@0.0.1 
  │   └── xmlhttprequest@1.4.2 
  └─┬ st@1.2.0 
    ├─┬ bl@1.1.2 
    │ └─┬ readable-stream@2.0.6 
    │   ├── core-util-is@1.0.2 
    │   ├── inherits@2.0.3 
    │   ├── isarray@1.0.0 
    │   ├── process-nextick-args@1.0.7 
    │   ├── string_decoder@0.10.31 
    │   └── util-deprecate@1.0.2 
    ├── fd@0.0.2 
    ├── graceful-fs@4.1.11 
    ├── mime@1.3.6 
    └── negotiator@0.6.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/imhacker/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0638 took 5.0181s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node

var http    = require('http');
var path    = require('path');
var router  = new require('routes').Router();
var st      = require('st');
var url     = require('url');
var root    = __dirname;

var wscreen = require('./lib/watch_screen');
var config  = require('./lib/config');

var server = http.createServer(function (req, res) {
	try {
		var pathname = url.parse(req.url).pathname;
		var route = router.match(pathname);
		if (!route) throw { code : 404 };
		route.fn(req, res);
	} catch (e) {
		var code = e.code || 500;
		res.writeHead(code);
		res.end(code + "\n" + String(e), 'utf-8');
	}
});

var io     = require('socket.io').listen(server);

router.addRoute(new RegExp('/(js|css|images|bootstrap)'), serve('/', path.join(root, 'static')));
router.addRoute('/', serve('/', path.join(root, 'views')));

router.addRoute('/in', function (req, res) {
	var query  = url.parse(req.url, true).query;
	var target = query.name;
	req.setEncoding('utf-8');
	req.on('data', function (data) {
		io.sockets.emit('log', { target : target, line : data });
	});
});

io.sockets.on('connection', function (socket) {
	var watching = {};
	socket.on('watch', function (data) {
		try {
			if (!watching[data.window]) watching[data.window] = wscreen.watchScreenWindow(data.window, function (line) {
				socket.emit('log', { target: data.window, line : line });
			});
		} catch (e) {
			console.log(e);
		}
	});
	socket.on('unwatch', function (data) {
		if (watching[data.window]) {
			watching[data.window].unwatch();
			delete watching[data.window];
		}
	});

	socket.on('disconnect', function () {
		for (var key in watching) if (watching.hasOwnProperty(key)) {
			watching[key].unwatch();
		}
	});
});

console.log('Open http://localhost:' + config.port + '/');
server.listen(config.port);

process.on('SIGINT', function () {
	for (var key in io.sockets.sockets) if (io.sockets.sockets.hasOwnProperty(key)) {
		io.sockets.sockets[key].disconnect();
	}
	process.exit();
});

process.on('SIGTERM', function () {
	for (var key in io.sockets.sockets) if (io.sockets.sockets.hasOwnProperty(key)) {
		io.sockets.sockets[key].disconnect();
	}
	process.exit();
});

function serve (url, path) {
	return function (req, res) {
		if (!st({ path : path, url : url, index: 'index.html' })(req, res)) throw { code : 404 };
	};
}
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
