/root/Targets/ive
└─┬ ive@0.2.4 
  ├── batch@0.5.3 
  ├── extend.js@0.0.2 
  ├─┬ rube@0.0.8 
  │ ├─┬ invalid@0.0.2 
  │ │ └── component-type@1.2.1 
  │ ├─┬ step.js@2.0.5 
  │ │ └── co@3.1.0 
  │ ├── type-component@0.0.1 
  │ ├── typecast@0.0.1 
  │ └── wrap-fn@0.1.5 
  └── squares@0.2.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/ive/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 26% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0477 took 8.904s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (7:4) on program /**
 * Module dependencies
 */

var fmt = require('./utils/format');
var type = require('./utils/type');
var assert = require('assert');
var wrap = require('wrap-fn');

/**
 * Export `Assert`
 */

module.exports = Assert;

/**
 * Assert a value. Cannot be `undefined`.
 */

function Assert(expected, msg) {
  if ('function' == typeof expected) return func(expected);

  var fn = compile(expected, msg);

  return function(value) {
    try {
      fn(value);
    } catch (e) {
      return e;
    }
  }
}

/**
 * Compile the assertion
 */

function compile(expected, msg) {
  switch(type(expected)) {
    case 'regexp': return regex(expected, msg);
    case 'object':
    case 'array':
      return object(expected, msg)
    default:
      return misc(expected, msg);
  }
}

function func(fn) {
  return function(value, done) {
    wrap(fn, function(err, v) {
      try {
        if (err) throw err;
        assert(v);
        done()
      } catch (e) {
        done(e);
      }
    })(value);
  }
}

/**
 * Regex assertion
 */

function regex(expected, msg) {
  return function(value) {
    msg = msg || fmt('"%s" does not match "%s"', value, expected);
    assert(expected.test(value), msg);
  }
}

/**
 * Deep equality on objects and arrays
 */

function object(expected, msg) {
  return function(value) {
    assert.deepEqual(value, expected, msg);
  }
}

/**
 * Equality on everything else
 */

function misc(expected, msg) {
  return function(value) {
    assert.equal(value, expected, msg);
  }
}
 at SyntaxError: Unexpected token (7:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/ive/node_modules/ive/index.js. Coverage (Term): 15% Coverage (LOC): 21%
*- File /root/Targets/ive/node_modules/ive/lib/validate.js. Coverage (Term): 16% Coverage (LOC): 22%
*- File /root/Targets/ive/node_modules/squares/index.js. Coverage (Term): 9% Coverage (LOC): 15%
*- File /root/Targets/ive/node_modules/batch/index.js. Coverage (Term): 15% Coverage (LOC): 22%
*- File /root/Targets/ive/node_modules/extend.js/index.js. Coverage (Term): 24% Coverage (LOC): 33%
*- File /root/Targets/ive/node_modules/ive/lib/form.js. Coverage (Term): 11% Coverage (LOC): 16%
*- File /root/Targets/ive/node_modules/ive/lib/only.js. Coverage (Term): 25% Coverage (LOC): 36%
*- File /root/Targets/ive/node_modules/rube/index.js. Coverage (Term): 34% Coverage (LOC): 46%
*- File /root/Targets/ive/node_modules/step.js/index.js. Coverage (Term): 13% Coverage (LOC): 23%
*- File /root/Targets/ive/node_modules/co/index.js. Coverage (Term): 6% Coverage (LOC): 10%
*- File /root/Targets/ive/node_modules/rube/lib/default.js. Coverage (Term): 47% Coverage (LOC): 50%
*- File /root/Targets/ive/node_modules/rube/lib/utils/type.js. Coverage (Term): 25% Coverage (LOC): 23%
*- File /root/Targets/ive/node_modules/type-component/index.js. Coverage (Term): 24% Coverage (LOC): 22%
*- File /root/Targets/ive/node_modules/rube/lib/required.js. Coverage (Term): 36% Coverage (LOC): 42%
*- File /root/Targets/ive/node_modules/rube/lib/between.js. Coverage (Term): 43% Coverage (LOC): 73%
*- File /root/Targets/ive/node_modules/rube/lib/utils/format.js. Coverage (Term): 86% Coverage (LOC): 100%
*- File /root/Targets/ive/node_modules/rube/lib/format.js. Coverage (Term): 18% Coverage (LOC): 31%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
