/root/Targets/schet
└── schet@0.0.14 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/schet/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 27% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","parseInt","captureStackTrace","cwd","max","getFileName","getLineNumber","getColumnNumber","isEval","getFunctionName","create","Int32Array","call","RegExp","reduce","charCodeAt","abs","getOwnPropertyNames","getOwnPropertyDescriptor","isArray","Array","parseFloat","isNaN","isFinite","pow","random","toString","bound dir","bound warn"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0454 took 118.4179s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (4:4) on program "use strict";

var util = require("util");
var assert = require("assert");
var moment = require("moment");
var lang = require("env-lang");

// Formats

var ISO_DATE = "YYYY-MM-DD";
var ISO_DATE_TIME = "YYYY-MM-DD[T]HH:mm[Z]";

var RE_ISO_DATE = /^\d{4}-\d{2}-\d{2}$/; // 1936-02-06
var RE_ISO_DATE_RANGE = /^\d{4}-\d{2}-\d{2}\/\d{4}-\d{2}-\d{2}$/; // 1936-02-06/1936-02-07
var RE_ISO_DATE_TIME = /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}Z$/; // 1936-02-06T00:00Z
var RE_ISO_DATE_TIME_RANGE = /^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}Z\/\d{4}-\d{2}-\d{2}T\d{2}:\d{2}Z$/; // 1936-02-06T00:00Z/1936-02-06T00:01Z

var PRETTY_DATE = "YYYY/MM/DD(ddd)";
var PRETTY_DATE_OMIT_YEAR = "MM/DD(ddd)";
var PRETTY_DATE_TIME = "YYYY/MM/DD(ddd) HH:mm";
var PRETTY_DATE_TIME_OMIT_YEAR = "MM/DD(ddd) HH:mm";
var PRETTY_DATE_TIME_OMIT_DATE = "HH:mm";

var RE_PRETTY_DATE = /^\d{4}\/\d{2}\/\d{2}$/; // 1999/01/01
var RE_PRETTY_DATE_RANGE = /^\d{4}\/\d{2}\/\d{2} - \d{4}\/\d{2}\/\d{2}$/; // 1999/12/31 - 2000/01/01
var RE_PRETTY_DATE_RANGE_OMIT_YEAR = /^\d{4}\/\d{2}\/\d{2} - \d{2}\/\d{2}$/; // 1999/01/01 - 12/31
var RE_PRETTY_DATE_TIME = /^\d{4}\/\d{2}\/\d{2} \d{2}:\d{2}$/; // 2000/01/01 09:00
var RE_PRETTY_DATE_TIME_RANGE = /^\d{4}\/\d{2}\/\d{2} \d{2}:\d{2} - \d{4}\/\d{2}\/\d{2} \d{2}:\d{2}$/; // 1999/01/01 09:00 - 2000/12/31 10:00
var RE_PRETTY_DATE_TIME_RANGE_OMIT_DATE = /^\d{4}\/\d{2}\/\d{2} \d{2}:\d{2} - \d{2}:\d{2}$/; // 2000/01/01 09:00 - 10:00
var RE_PRETTY_DATE_TIME_RANGE_OMIT_YEAR = /^\d{4}\/\d{2}\/\d{2} \d{2}:\d{2} - \d{2}\/\d{2} \d{2}:\d{2}$/; // 2000/01/01 09:00 - 12/31 10:00

// Set up Lang

switch (lang) {
  case "ja":
    moment.locale("ja", {
      weekdays: ["日曜日", "月曜日", "火曜日", "水曜日", "木曜日", "金曜日", "土曜日"],
      weekdaysShort: ["日", "月", "火", "水", "木", "金", "土"]
    });
}

// Utility
var split = function (str, splitter) {
  var start = undefined,
      end = undefined;
  if (str.indexOf(splitter) === -1) {
    start = moment.utc(str);
    end = moment.utc(str);
  } else {
    start = moment.utc(str.split(splitter)[0]);
    end = moment.utc(str.split(splitter)[1]);
  }

  return { start: start, end: end };
};

var width = function (range) {
  var unit = arguments[1] === undefined ? "minutes" : arguments[1];

  return range.end.diff(range.start, unit);
};

// Compare

/**
 * Compare ISO8601 date time string and range string.
 *
 * @param {String} a
 * @param {String} b
 * @returns {Number}
 */
var compare = function (a, b) {
  a = split(a, "/");
  b = split(b, "/");

  return a.start.diff(b.start) || a.end.diff(b.end);
};

// Normalize

/**
 * Normalize the date time string from pretty format.
 *
 * input formats:
 * 1999/01/01
 * 1999/01/01 - 12/31
 * 1999/12/31 - 2000/01/01
 * 2000/01/01 00:00
 * 2000/01/01 00:00 - 11:00
 * 2000/01/01 00:00 - 01/02 11:00
 * 2000/01/01 00:00 - 2000/01/01 11:00
 *
 * output formats:
 * 1999-01-01
 * 1999-01-01/1999-12-31
 * 2000-01-01T00:00Z
 * 2000-01-01T00:00Z/2000-01-01T11:00Z
 *
 * @param {String} str
 * @param {Number} offset
 * @returns {String}
 */
var normalize = function (str) {
  var offset = arguments[1] === undefined ? 0 : arguments[1];

  str = str.trim();
  str = str.replace(/\s+/g, " ");
  str = str.replace(/(\d)-(\d)/, "$1 - $2");

  var start = undefined,
      end = undefined;
  if (str.indexOf(" - ") !== -1) {
    start = str.split(" - ")[0];
    end = str.split(" - ")[1];
  }

  // 1999/01/01 -> 1999-01-01
  if (RE_PRETTY_DATE.test(str)) {
    var val = moment(str, PRETTY_DATE);

    assert(val.isValid());

    return val.format(ISO_DATE);
  }

  // 1999/12/31 - 2000/01/01 -> 1999-12-31/2000-01-01
  if (RE_PRETTY_DATE_RANGE.test(str)) {
    start = moment(start, PRETTY_DATE);
    end = moment(end, PRETTY_DATE);

    assert(0 < end.diff(start));
    assert(start.isValid());
    assert(end.isValid());

    return start.format(ISO_DATE) + "/" + end.format(ISO_DATE);
  }

  // 1999/01/01 - 12/31 -> 1999-01-01/1999-12-31
  if (RE_PRETTY_DATE_RANGE_OMIT_YEAR.test(str)) {
    start = moment(start, PRETTY_DATE);
    end = moment(end, PRETTY_DATE_OMIT_YEAR);

    end.year(start.year());

    assert(0 < end.diff(start));
    assert(start.isValid());
    assert(end.isValid());

    return start.format(ISO_DATE) + "/" + end.format(ISO_DATE);
  }

  // 2000/01/01 09:00 -> 2000-01-01T00:00Z (when offset == +9)
  if (RE_PRETTY_DATE_TIME.test(str)) {
    var val = moment(str, PRETTY_DATE_TIME);

    assert(val.isValid());

    return val.subtract(offset, "minutes").format(ISO_DATE_TIME);
  }

  // 1999/01/01 09:00 - 2000/12/31 10:00 -> 1999-01-01T00:00Z/2000-12-31T01:00Z
  if (RE_PRETTY_DATE_TIME_RANGE.test(str)) {
    start = moment(start, PRETTY_DATE_TIME);
    end = moment(end, PRETTY_DATE_TIME);

    start.subtract(offset, "minutes");
    end.subtract(offset, "minutes");

    assert(0 < end.diff(start));
    assert(start.isValid());
    assert(end.isValid());

    return start.format(ISO_DATE_TIME) + "/" + end.format(ISO_DATE_TIME);
  }

  // 2000/01/01 09:00 - 10:00 -> 2000-01-01T00:00Z/2000-01-01T01:00Z (when offset == +9)
  if (RE_PRETTY_DATE_TIME_RANGE_OMIT_DATE.test(str)) {
    start = moment(start, PRETTY_DATE_TIME);
    end = moment(end, PRETTY_DATE_TIME_OMIT_DATE);

    end.year(start.year());
    end.month(start.month());
    end.date(start.date());

    start.subtract(offset, "minutes");
    end.subtract(offset, "minutes");

    assert(0 < end.diff(start));
    assert(start.isValid());
    assert(end.isValid());

    return start.format(ISO_DATE_TIME) + "/" + end.format(ISO_DATE_TIME);
  }

  // 2000/01/01 09:00 - 12/31 10:00 -> 2000-01-01T00:00Z/2000-12-31T01:00Z (when offset == +9)
  if (RE_PRETTY_DATE_TIME_RANGE_OMIT_YEAR.test(str)) {
    start = moment(start, PRETTY_DATE_TIME);
    end = moment(end, PRETTY_DATE_TIME_OMIT_YEAR);

    end.year(start.year());

    start.subtract(offset, "minutes");
    end.subtract(offset, "minutes");

    assert(0 < end.diff(start));
    assert(start.isValid());
    assert(end.isValid());

    return start.format(ISO_DATE_TIME) + "/" + end.format(ISO_DATE_TIME);
  }

  throw new Error("failed to parse: " + str);
};

// Simplify

/**
 * Prettify the date time string from ISO8601 format.
 *
 * input formats:
 * 1999-01-01/1999-12-31
 *
 * output formats:
 * 1999/01/01 - 12/31
 * 1999/12/31 - 2000/01/01
 *
 * @param {String} str
 * @returns {String}
 */
var prettifyDateRange = function (str) {
  var range = split(str, "/");

  if (width(range, "years")) {
    return range.start.format(PRETTY_DATE) + " - " + range.end.format(PRETTY_DATE);
  }

  return range.start.format(PRETTY_DATE) + " - " + range.end.format(PRETTY_DATE_OMIT_YEAR);
};

/**
 * Prettify the date time string from ISO8601 format.
 *
 * input formats:
 * 2000-01-01T00:00Z/2000-01-01T11:00Z
 *
 * output formats:
 * 2000/01/01 00:00 - 11:00
 * 2000/01/01 00:00 - 01/02 11:00
 * 2000/01/01 00:00 - 2000/01/01 11:00
 *
 * @param {String} str
 * @param {Number} offset
 * @returns {String}
 */
var prettifyDateTimeRange = function (str) {
  var offset = arguments[1] === undefined ? 0 : arguments[1];

  var range = split(str, "/");

  range.start.add(offset, "minutes");
  range.end.add(offset, "minutes");

  if (width(range, "years")) {
    return range.start.format(PRETTY_DATE_TIME) + " - " + range.end.format(PRETTY_DATE_TIME);
  }

  if (width(range, "day")) {
    return range.start.format(PRETTY_DATE_TIME) + " - " + range.end.format(PRETTY_DATE_TIME_OMIT_YEAR);
  }

  return range.start.format(PRETTY_DATE_TIME) + " - " + range.end.format(PRETTY_DATE_TIME_OMIT_DATE);
};

/**
 * Prettify the date time string from ISO8601 format.
 *
 * input formats:
 * 1999-01-01
 * 1999-01-01/1999-12-31
 * 2000-01-01T00:00Z
 * 2000-01-01T00:00Z/2000-01-01T11:00Z
 *
 * output formats:
 * 1999/01/01
 * 1999/01/01 - 12/31
 * 1999/12/31 - 2000/01/01
 * 2000/01/01 00:00
 * 2000/01/01 00:00 - 11:00
 * 2000/01/01 00:00 - 01/02 11:00
 * 2000/01/01 00:00 - 2000/01/01 11:00
 *
 * @param {String} str
 * @param {Number} offset - offset in minutes
 * @returns {String}
 */
var prettify = function (str) {
  var offset = arguments[1] === undefined ? 0 : arguments[1];

  str = str.trim();

  if (RE_ISO_DATE.test(str)) {
    return moment.utc(str).format(PRETTY_DATE);
  } else if (RE_ISO_DATE_TIME.test(str)) {
    return moment.utc(str).add(offset, "minutes").format(PRETTY_DATE_TIME);
  } else if (RE_ISO_DATE_RANGE.test(str)) {
    return prettifyDateRange(str);
  } else if (RE_ISO_DATE_TIME_RANGE.test(str)) {
    return prettifyDateTimeRange(str, offset);
  } else {
    throw new Error();
  }
};

// export

module.exports = {
  compare: compare,
  normalize: normalize,
  prettify: prettify
}; at SyntaxError: Unexpected token (4:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
    at Parser.parse (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:516:17)
    at Object.parse (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:3098:39)
    at convert (/root/ExpoSE/lib/Tropigate/bin/main.js:50:18)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/schet/node_modules/schet/build/src/app.js. Coverage (Term): 50% Coverage (LOC): 57%
*- File /root/Targets/schet/node_modules/express/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/schet/node_modules/express/lib/express.js. Coverage (Term): 85% Coverage (LOC): 97%
*- File /root/Targets/schet/node_modules/merge-descriptors/index.js. Coverage (Term): 83% Coverage (LOC): 82%
*- File /root/Targets/schet/node_modules/express/lib/application.js. Coverage (Term): 47% Coverage (LOC): 55%
*- File /root/Targets/schet/node_modules/finalhandler/index.js. Coverage (Term): 16% Coverage (LOC): 19%
*- File /root/Targets/schet/node_modules/debug/node.js. Coverage (Term): 30% Coverage (LOC): 41%
*- File /root/Targets/schet/node_modules/debug/debug.js. Coverage (Term): 35% Coverage (LOC): 42%
*- File /root/Targets/schet/node_modules/ms/index.js. Coverage (Term): 13% Coverage (LOC): 17%
*- File /root/Targets/schet/node_modules/escape-html/index.js. Coverage (Term): 35% Coverage (LOC): 80%
*- File /root/Targets/schet/node_modules/finalhandler/node_modules/on-finished/index.js. Coverage (Term): 12% Coverage (LOC): 16%
*- File /root/Targets/schet/node_modules/finalhandler/node_modules/ee-first/index.js. Coverage (Term): 7% Coverage (LOC): 11%
*- File /root/Targets/schet/node_modules/express/lib/utils.js. Coverage (Term): 42% Coverage (LOC): 55%
*- File /root/Targets/schet/node_modules/content-disposition/index.js. Coverage (Term): 12% Coverage (LOC): 20%
*- File /root/Targets/schet/node_modules/content-type/index.js. Coverage (Term): 12% Coverage (LOC): 18%
*- File /root/Targets/schet/node_modules/express/node_modules/depd/index.js. Coverage (Term): 32% Coverage (LOC): 34%
*- File /root/Targets/schet/node_modules/express/node_modules/depd/lib/compat/index.js. Coverage (Term): 81% Coverage (LOC): 94%
*- File /root/Targets/schet/node_modules/send/index.js. Coverage (Term): 15% Coverage (LOC): 19%
*- File /root/Targets/schet/node_modules/send/node_modules/depd/index.js. Coverage (Term): 32% Coverage (LOC): 34%
*- File /root/Targets/schet/node_modules/send/node_modules/depd/lib/compat/index.js. Coverage (Term): 81% Coverage (LOC): 94%
*- File /root/Targets/schet/node_modules/destroy/index.js. Coverage (Term): 30% Coverage (LOC): 31%
*- File /root/Targets/schet/node_modules/range-parser/index.js. Coverage (Term): 12% Coverage (LOC): 19%
*- File /root/Targets/schet/node_modules/mime/mime.js. Coverage (Term): 56% Coverage (LOC): 75%
*- File /root/Targets/schet/node_modules/fresh/index.js. Coverage (Term): 14% Coverage (LOC): 16%
*- File /root/Targets/schet/node_modules/etag/index.js. Coverage (Term): 17% Coverage (LOC): 28%
*- File /root/Targets/schet/node_modules/crc/lib/index.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/schet/node_modules/crc/lib/crc1.js. Coverage (Term): 32% Coverage (LOC): 35%
*- File /root/Targets/schet/node_modules/crc/lib/create.js. Coverage (Term): 72% Coverage (LOC): 90%
*- File /root/Targets/schet/node_modules/crc/lib/crc8.js. Coverage (Term): 83% Coverage (LOC): 97%
*- File /root/Targets/schet/node_modules/crc/lib/crc8_1wire.js. Coverage (Term): 83% Coverage (LOC): 97%
*- File /root/Targets/schet/node_modules/crc/lib/crc16.js. Coverage (Term): 82% Coverage (LOC): 97%
*- File /root/Targets/schet/node_modules/crc/lib/crc16_ccitt.js. Coverage (Term): 80% Coverage (LOC): 97%
*- File /root/Targets/schet/node_modules/crc/lib/crc16_modbus.js. Coverage (Term): 80% Coverage (LOC): 97%
*- File /root/Targets/schet/node_modules/crc/lib/crc24.js. Coverage (Term): 80% Coverage (LOC): 97%
*- File /root/Targets/schet/node_modules/crc/lib/crc32.js. Coverage (Term): 80% Coverage (LOC): 97%
*- File /root/Targets/schet/node_modules/send/node_modules/on-finished/index.js. Coverage (Term): 12% Coverage (LOC): 16%
*- File /root/Targets/schet/node_modules/send/node_modules/ee-first/index.js. Coverage (Term): 7% Coverage (LOC): 11%
*- File eval. Coverage (Term): 41% Coverage (LOC): 50%
*- File /root/Targets/schet/node_modules/proxy-addr/index.js. Coverage (Term): 21% Coverage (LOC): 30%
*- File /root/Targets/schet/node_modules/forwarded/index.js. Coverage (Term): 14% Coverage (LOC): 18%
*- File /root/Targets/schet/node_modules/ipaddr.js/lib/ipaddr.js. Coverage (Term): 31% Coverage (LOC): 57%
*- File /root/Targets/schet/node_modules/express/node_modules/qs/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/schet/node_modules/express/node_modules/qs/lib/index.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/schet/node_modules/express/node_modules/qs/lib/stringify.js. Coverage (Term): 10% Coverage (LOC): 22%
*- File /root/Targets/schet/node_modules/express/node_modules/qs/lib/utils.js. Coverage (Term): 10% Coverage (LOC): 19%
*- File /root/Targets/schet/node_modules/express/node_modules/qs/lib/parse.js. Coverage (Term): 7% Coverage (LOC): 18%
*- File /root/Targets/schet/node_modules/express/lib/router/index.js. Coverage (Term): 17% Coverage (LOC): 23%
*- File /root/Targets/schet/node_modules/express/lib/router/route.js. Coverage (Term): 16% Coverage (LOC): 22%
*- File /root/Targets/schet/node_modules/express/lib/router/layer.js. Coverage (Term): 31% Coverage (LOC): 33%
*- File /root/Targets/schet/node_modules/path-to-regexp/index.js. Coverage (Term): 50% Coverage (LOC): 56%
*- File /root/Targets/schet/node_modules/methods/index.js. Coverage (Term): 59% Coverage (LOC): 27%
*- File /root/Targets/schet/node_modules/utils-merge/index.js. Coverage (Term): 71% Coverage (LOC): 70%
*- File /root/Targets/schet/node_modules/parseurl/index.js. Coverage (Term): 15% Coverage (LOC): 18%
*- File /root/Targets/schet/node_modules/express/lib/middleware/init.js. Coverage (Term): 30% Coverage (LOC): 36%
*- File /root/Targets/schet/node_modules/express/lib/middleware/query.js. Coverage (Term): 63% Coverage (LOC): 71%
*- File /root/Targets/schet/node_modules/express/lib/view.js. Coverage (Term): 24% Coverage (LOC): 34%
*- File /root/Targets/schet/node_modules/express/lib/request.js. Coverage (Term): 28% Coverage (LOC): 45%
*- File /root/Targets/schet/node_modules/accepts/index.js. Coverage (Term): 16% Coverage (LOC): 23%
*- File /root/Targets/schet/node_modules/negotiator/index.js. Coverage (Term): 47% Coverage (LOC): 67%
*- File /root/Targets/schet/node_modules/negotiator/lib/charset.js. Coverage (Term): 8% Coverage (LOC): 15%
*- File /root/Targets/schet/node_modules/negotiator/lib/encoding.js. Coverage (Term): 7% Coverage (LOC): 13%
*- File /root/Targets/schet/node_modules/negotiator/lib/language.js. Coverage (Term): 7% Coverage (LOC): 13%
*- File /root/Targets/schet/node_modules/negotiator/lib/mediaType.js. Coverage (Term): 5% Coverage (LOC): 11%
*- File /root/Targets/schet/node_modules/accepts/node_modules/mime-types/index.js. Coverage (Term): 48% Coverage (LOC): 51%
*- File /root/Targets/schet/node_modules/accepts/node_modules/mime-db/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/schet/node_modules/express/node_modules/type-is/index.js. Coverage (Term): 13% Coverage (LOC): 20%
*- File /root/Targets/schet/node_modules/media-typer/index.js. Coverage (Term): 11% Coverage (LOC): 16%
*- File /root/Targets/schet/node_modules/express/node_modules/mime-types/index.js. Coverage (Term): 48% Coverage (LOC): 51%
*- File /root/Targets/schet/node_modules/express/node_modules/mime-db/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/schet/node_modules/express/lib/response.js. Coverage (Term): 10% Coverage (LOC): 15%
*- File /root/Targets/schet/node_modules/express/node_modules/on-finished/index.js. Coverage (Term): 12% Coverage (LOC): 16%
*- File /root/Targets/schet/node_modules/express/node_modules/ee-first/index.js. Coverage (Term): 7% Coverage (LOC): 11%
*- File /root/Targets/schet/node_modules/cookie-signature/index.js. Coverage (Term): 19% Coverage (LOC): 40%
*- File /root/Targets/schet/node_modules/cookie/index.js. Coverage (Term): 14% Coverage (LOC): 16%
*- File /root/Targets/schet/node_modules/vary/index.js. Coverage (Term): 12% Coverage (LOC): 20%
*- File /root/Targets/schet/node_modules/serve-static/index.js. Coverage (Term): 33% Coverage (LOC): 39%
*- File /root/Targets/schet/node_modules/body-parser/index.js. Coverage (Term): 59% Coverage (LOC): 62%
*- File /root/Targets/schet/node_modules/depd/index.js. Coverage (Term): 32% Coverage (LOC): 35%
*- File /root/Targets/schet/node_modules/depd/lib/compat/index.js. Coverage (Term): 81% Coverage (LOC): 94%
*- File /root/Targets/schet/node_modules/method-override/index.js. Coverage (Term): 31% Coverage (LOC): 43%
*- File /root/Targets/schet/node_modules/method-override/node_modules/debug/src/index.js. Coverage (Term): 81% Coverage (LOC): 83%
*- File /root/Targets/schet/node_modules/method-override/node_modules/debug/src/node.js. Coverage (Term): 35% Coverage (LOC): 44%
*- File /root/Targets/schet/node_modules/method-override/node_modules/debug/src/debug.js. Coverage (Term): 44% Coverage (LOC): 48%
*- File /root/Targets/schet/node_modules/method-override/node_modules/ms/index.js. Coverage (Term): 12% Coverage (LOC): 15%
*- File /root/Targets/schet/node_modules/method-override/node_modules/vary/index.js. Coverage (Term): 14% Coverage (LOC): 21%
*- File /root/Targets/schet/node_modules/body-parser/lib/types/json.js. Coverage (Term): 42% Coverage (LOC): 40%
*- File /root/Targets/schet/node_modules/bytes/index.js. Coverage (Term): 37% Coverage (LOC): 58%
*- File /root/Targets/schet/node_modules/body-parser/lib/read.js. Coverage (Term): 15% Coverage (LOC): 14%
*- File /root/Targets/schet/node_modules/raw-body/index.js. Coverage (Term): 6% Coverage (LOC): 8%
*- File /root/Targets/schet/node_modules/iconv-lite/lib/index.js. Coverage (Term): 27% Coverage (LOC): 33%
*- File /root/Targets/schet/node_modules/iconv-lite/lib/streams.js. Coverage (Term): 24% Coverage (LOC): 34%
*- File /root/Targets/schet/node_modules/iconv-lite/lib/extend-node.js. Coverage (Term): 4% Coverage (LOC): 6%
*- File /root/Targets/schet/node_modules/on-finished/index.js. Coverage (Term): 18% Coverage (LOC): 20%
*- File /root/Targets/schet/node_modules/ee-first/index.js. Coverage (Term): 8% Coverage (LOC): 13%
*- File /root/Targets/schet/node_modules/type-is/index.js. Coverage (Term): 11% Coverage (LOC): 18%
*- File /root/Targets/schet/node_modules/mime-types/index.js. Coverage (Term): 35% Coverage (LOC): 42%
*- File /root/Targets/schet/node_modules/mime-db/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/schet/node_modules/body-parser/lib/types/urlencoded.js. Coverage (Term): 41% Coverage (LOC): 40%
*- File /root/Targets/schet/node_modules/schet/build/src/routes/events.js. Coverage (Term): 8% Coverage (LOC): 9%
*- File /root/Targets/schet/node_modules/schet/build/src/errors.js. Coverage (Term): 92% Coverage (LOC): 96%
*- File /root/Targets/schet/node_modules/schet/build/src/models/events.js. Coverage (Term): 6% Coverage (LOC): 10%
*- File /root/Targets/schet/node_modules/schet/build/src/models/mongo.js. Coverage (Term): 9% Coverage (LOC): 12%
*- File /root/Targets/schet/node_modules/async/lib/async.js. Coverage (Term): 10% Coverage (LOC): 14%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/index.js. Coverage (Term): 95% Coverage (LOC): 96%
*- File /root/Targets/schet/node_modules/bson/lib/bson/index.js. Coverage (Term): 40% Coverage (LOC): 38%
*- File /root/Targets/schet/node_modules/bson/lib/bson/bson.js. Coverage (Term): 9% Coverage (LOC): 33%
*- File /root/Targets/schet/node_modules/bson/lib/bson/long.js. Coverage (Term): 29% Coverage (LOC): 36%
*- File /root/Targets/schet/node_modules/bson/lib/bson/double.js. Coverage (Term): 45% Coverage (LOC): 60%
*- File /root/Targets/schet/node_modules/bson/lib/bson/timestamp.js. Coverage (Term): 17% Coverage (LOC): 28%
*- File /root/Targets/schet/node_modules/bson/lib/bson/objectid.js. Coverage (Term): 23% Coverage (LOC): 38%
*- File /root/Targets/schet/node_modules/bson/lib/bson/binary_parser.js. Coverage (Term): 8% Coverage (LOC): 30%
*- File /root/Targets/schet/node_modules/bson/lib/bson/symbol.js. Coverage (Term): 44% Coverage (LOC): 62%
*- File /root/Targets/schet/node_modules/bson/lib/bson/code.js. Coverage (Term): 39% Coverage (LOC): 47%
*- File /root/Targets/schet/node_modules/bson/lib/bson/min_key.js. Coverage (Term): 56% Coverage (LOC): 63%
*- File /root/Targets/schet/node_modules/bson/lib/bson/max_key.js. Coverage (Term): 56% Coverage (LOC): 63%
*- File /root/Targets/schet/node_modules/bson/lib/bson/db_ref.js. Coverage (Term): 34% Coverage (LOC): 41%
*- File /root/Targets/schet/node_modules/bson/lib/bson/binary.js. Coverage (Term): 10% Coverage (LOC): 20%
*- File /root/Targets/schet/node_modules/bson/lib/bson/float_parser.js. Coverage (Term): 5% Coverage (LOC): 11%
*- File /root/Targets/schet/node_modules/bson/ext/index.js. Coverage (Term): 86% Coverage (LOC): 94%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/commands/base_command.js. Coverage (Term): 60% Coverage (LOC): 80%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/admin.js. Coverage (Term): 4% Coverage (LOC): 3%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/collection.js. Coverage (Term): 64% Coverage (LOC): 76%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/commands/insert_command.js. Coverage (Term): 7% Coverage (LOC): 11%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/commands/query_command.js. Coverage (Term): 7% Coverage (LOC): 10%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/commands/delete_command.js. Coverage (Term): 8% Coverage (LOC): 12%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/commands/update_command.js. Coverage (Term): 6% Coverage (LOC): 9%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/commands/db_command.js. Coverage (Term): 24% Coverage (LOC): 40%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/utils.js. Coverage (Term): 12% Coverage (LOC): 26%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/cursor.js. Coverage (Term): 7% Coverage (LOC): 9%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/commands/get_more_command.js. Coverage (Term): 10% Coverage (LOC): 16%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/commands/kill_cursor_command.js. Coverage (Term): 11% Coverage (LOC): 15%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/connection/read_preference.js. Coverage (Term): 31% Coverage (LOC): 54%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/cursorstream.js. Coverage (Term): 22% Coverage (LOC): 28%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/collection/shared.js. Coverage (Term): 10% Coverage (LOC): 15%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/collection/core.js. Coverage (Term): 4% Coverage (LOC): 4%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/collection/query.js. Coverage (Term): 11% Coverage (LOC): 23%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/command_cursor.js. Coverage (Term): 6% Coverage (LOC): 4%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/scope.js. Coverage (Term): 18% Coverage (LOC): 12%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/collection/index.js. Coverage (Term): 18% Coverage (LOC): 26%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/collection/geo.js. Coverage (Term): 16% Coverage (LOC): 16%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/collection/commands.js. Coverage (Term): 14% Coverage (LOC): 15%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/collection/aggregation.js. Coverage (Term): 7% Coverage (LOC): 6%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/aggregation_cursor.js. Coverage (Term): 11% Coverage (LOC): 7%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js. Coverage (Term): 5% Coverage (LOC): 2%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/collection/batch/common.js. Coverage (Term): 11% Coverage (LOC): 13%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js. Coverage (Term): 6% Coverage (LOC): 2%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/connection/connection.js. Coverage (Term): 8% Coverage (LOC): 8%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/connection/connection_utils.js. Coverage (Term): 14% Coverage (LOC): 35%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/connection/server.js. Coverage (Term): 10% Coverage (LOC): 15%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/responses/mongo_reply.js. Coverage (Term): 10% Coverage (LOC): 27%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/connection/connection_pool.js. Coverage (Term): 14% Coverage (LOC): 17%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/connection/server_capabilities.js. Coverage (Term): 15% Coverage (LOC): 13%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/connection/base.js. Coverage (Term): 11% Coverage (LOC): 13%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/auth/mongodb_cr.js. Coverage (Term): 14% Coverage (LOC): 10%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/auth/mongodb_gssapi.js. Coverage (Term): 11% Coverage (LOC): 13%
*- File /root/Targets/schet/node_modules/kerberos/index.js. Coverage (Term): 53% Coverage (LOC): 100%
*- File /root/Targets/schet/node_modules/kerberos/lib/kerberos.js. Coverage (Term): 5% Coverage (LOC): 6%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/auth/mongodb_sspi.js. Coverage (Term): 10% Coverage (LOC): 10%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/auth/mongodb_plain.js. Coverage (Term): 18% Coverage (LOC): 11%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/auth/mongodb_x509.js. Coverage (Term): 19% Coverage (LOC): 12%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/auth/mongodb_scram.js. Coverage (Term): 7% Coverage (LOC): 5%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/connection/mongos.js. Coverage (Term): 9% Coverage (LOC): 12%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set.js. Coverage (Term): 11% Coverage (LOC): 15%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/connection/repl_set/strategies/ping_strategy.js. Coverage (Term): 4% Coverage (LOC): 6%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/connection/repl_set/strategies/statistics_strategy.js. Coverage (Term): 9% Coverage (LOC): 17%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/connection/repl_set/options.js. Coverage (Term): 9% Coverage (LOC): 11%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/connection/repl_set/repl_set_state.js. Coverage (Term): 16% Coverage (LOC): 27%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/connection/repl_set/ha.js. Coverage (Term): 5% Coverage (LOC): 6%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/mongo_client.js. Coverage (Term): 8% Coverage (LOC): 6%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/db.js. Coverage (Term): 6% Coverage (LOC): 8%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/connection/url_parser.js. Coverage (Term): 3% Coverage (LOC): 3%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/gridfs/grid.js. Coverage (Term): 14% Coverage (LOC): 22%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/gridfs/gridstore.js. Coverage (Term): 7% Coverage (LOC): 12%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/gridfs/chunk.js. Coverage (Term): 14% Coverage (LOC): 24%
*- File /root/Targets/schet/node_modules/mongodb/lib/mongodb/gridfs/readstream.js. Coverage (Term): 14% Coverage (LOC): 15%
*- File /root/Targets/schet/node_modules/schet/build/src/util/form.js. Coverage (Term): 10% Coverage (LOC): 21%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
