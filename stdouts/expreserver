/root/Targets/expreserver
└─┬ expreserver@1.2.3 
  └── commander@2.11.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/expreserver/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0351 took 3.6711s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #! /usr/bin/env node


var fs = require('fs');

var path = require('path');

var childProcess = require('child_process');

var commander = require('commander');

var version = '0.1.1';

var pathCommand = {
    comm : '-p, --path [path]',
    desc : 'the path project be created'
};

var typeCommand = {
    comm : '-t, --type [type]',
    desc : 'the type of project, such as : \'web\' or \'api\''
};

commander
    .version(version)
    .option(pathCommand.comm, pathCommand.desc)
    .option(typeCommand.comm, typeCommand.desc)
    .parse(process.argv);


var projectPath = commander.path || './';

var projectType = commander.type || 'web';

var contentPath = path.join(__dirname, 'contents', projectType, '/');

projectPath = path.join(projectPath, '/');

if(!fs.existsSync(contentPath)){
    return console.log('指定正确的项目类型，项目类型有 web || api');
}

var npmCommand = 'npm';

var whichCNPM = childProcess.spawnSync('which', ['cnpm'], {encoding : 'utf8'});

if(whichCNPM.stdout){
    npmCommand = 'cnpm';
}

var cp = childProcess.spawnSync('cp', ['-r', contentPath, projectPath], {encoding : 'utf8'});

if(!cp.error){

    console.log('project create success !');

}else{
    console.error(cp.stderr);
}
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
