
> spawn-sync@1.0.15 postinstall /root/Targets/gulp-standard-bundle/node_modules/spawn-sync
> node postinstall

/root/Targets/gulp-standard-bundle
└─┬ gulp-standard-bundle@0.2.6 
  ├── app-root-path@2.0.1 
  ├── colors@1.1.2 
  ├─┬ gulp-util@3.0.8 
  │ ├── array-differ@1.0.0 
  │ ├── array-uniq@1.0.3 
  │ ├── beeper@1.1.1 
  │ ├─┬ chalk@1.1.3 
  │ │ ├── ansi-styles@2.2.1 
  │ │ ├── escape-string-regexp@1.0.5 
  │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ └── ansi-regex@2.1.1 
  │ │ ├── strip-ansi@3.0.1 
  │ │ └── supports-color@2.0.0 
  │ ├── dateformat@2.2.0 
  │ ├─┬ fancy-log@1.3.0 
  │ │ └── time-stamp@1.1.0 
  │ ├─┬ gulplog@1.0.0 
  │ │ └── glogg@1.0.0 
  │ ├─┬ has-gulplog@0.1.0 
  │ │ └── sparkles@1.0.0 
  │ ├── lodash._reescape@3.0.0 
  │ ├── lodash._reevaluate@3.0.0 
  │ ├── lodash._reinterpolate@3.0.0 
  │ ├─┬ lodash.template@3.6.2 
  │ │ ├── lodash._basecopy@3.0.1 
  │ │ ├── lodash._basetostring@3.0.1 
  │ │ ├── lodash._basevalues@3.0.0 
  │ │ ├── lodash._isiterateecall@3.0.9 
  │ │ ├─┬ lodash.escape@3.2.0 
  │ │ │ └── lodash._root@3.0.1 
  │ │ ├─┬ lodash.keys@3.1.2 
  │ │ │ ├── lodash._getnative@3.9.1 
  │ │ │ ├── lodash.isarguments@3.1.0 
  │ │ │ └── lodash.isarray@3.0.4 
  │ │ ├── lodash.restparam@3.6.1 
  │ │ └── lodash.templatesettings@3.1.1 
  │ ├── minimist@1.2.0 
  │ ├─┬ multipipe@0.1.2 
  │ │ └─┬ duplexer2@0.0.2 
  │ │   └─┬ readable-stream@1.1.14 
  │ │     ├── isarray@0.0.1 
  │ │     └── string_decoder@0.10.31 
  │ ├── object-assign@3.0.0 
  │ ├── replace-ext@0.0.1 
  │ └─┬ vinyl@0.5.3 
  │   ├── clone@1.0.2 
  │   └── clone-stats@0.0.1 
  ├── lodash@4.17.4 
  ├── log-symbols@1.0.2 
  ├─┬ standard@8.6.0 
  │ ├─┬ eslint@3.10.2 
  │ │ ├─┬ babel-code-frame@6.26.0 
  │ │ │ └── js-tokens@3.0.2 
  │ │ ├─┬ concat-stream@1.6.0 
  │ │ │ ├─┬ readable-stream@2.3.3 
  │ │ │ │ ├── isarray@1.0.0 
  │ │ │ │ └── string_decoder@1.0.3 
  │ │ │ └── typedarray@0.0.6 
  │ │ ├─┬ debug@2.6.9 
  │ │ │ └── ms@2.0.0 
  │ │ ├─┬ doctrine@1.5.0 
  │ │ │ └── isarray@1.0.0 
  │ │ ├─┬ escope@3.6.0 
  │ │ │ ├─┬ es6-map@0.1.5 
  │ │ │ │ ├── d@1.0.0 
  │ │ │ │ ├── es5-ext@0.10.30 
  │ │ │ │ ├── es6-iterator@2.0.1 
  │ │ │ │ ├── es6-set@0.1.5 
  │ │ │ │ ├── es6-symbol@3.1.1 
  │ │ │ │ └── event-emitter@0.3.5 
  │ │ │ ├── es6-weak-map@2.0.2 
  │ │ │ └─┬ esrecurse@4.2.0 
  │ │ │   └── object-assign@4.1.1 
  │ │ ├─┬ espree@3.5.1 
  │ │ │ ├── acorn@5.1.2 
  │ │ │ └─┬ acorn-jsx@3.0.1 
  │ │ │   └── acorn@3.3.0 
  │ │ ├── estraverse@4.2.0 
  │ │ ├── esutils@2.0.2 
  │ │ ├─┬ file-entry-cache@2.0.0 
  │ │ │ ├─┬ flat-cache@1.3.0 
  │ │ │ │ ├── circular-json@0.3.3 
  │ │ │ │ ├─┬ del@2.2.2 
  │ │ │ │ │ ├─┬ globby@5.0.0 
  │ │ │ │ │ │ ├── array-union@1.0.2 
  │ │ │ │ │ │ ├── arrify@1.0.1 
  │ │ │ │ │ │ └── object-assign@4.1.1 
  │ │ │ │ │ ├── is-path-cwd@1.0.0 
  │ │ │ │ │ ├─┬ is-path-in-cwd@1.0.0 
  │ │ │ │ │ │ └── is-path-inside@1.0.0 
  │ │ │ │ │ ├── object-assign@4.1.1 
  │ │ │ │ │ ├── pify@2.3.0 
  │ │ │ │ │ ├─┬ pinkie-promise@2.0.1 
  │ │ │ │ │ │ └── pinkie@2.0.4 
  │ │ │ │ │ └── rimraf@2.6.2 
  │ │ │ │ ├── graceful-fs@4.1.11 
  │ │ │ │ └── write@0.2.1 
  │ │ │ └── object-assign@4.1.1 
  │ │ ├─┬ glob@7.1.2 
  │ │ │ ├── fs.realpath@1.0.0 
  │ │ │ ├─┬ inflight@1.0.6 
  │ │ │ │ └── wrappy@1.0.2 
  │ │ │ ├─┬ minimatch@3.0.4 
  │ │ │ │ └─┬ brace-expansion@1.1.8 
  │ │ │ │   ├── balanced-match@1.0.0 
  │ │ │ │   └── concat-map@0.0.1 
  │ │ │ ├── once@1.4.0 
  │ │ │ └── path-is-absolute@1.0.1 
  │ │ ├── globals@9.18.0 
  │ │ ├── ignore@3.3.5 
  │ │ ├── imurmurhash@0.1.4 
  │ │ ├─┬ inquirer@0.12.0 
  │ │ │ ├── ansi-escapes@1.4.0 
  │ │ │ ├─┬ cli-cursor@1.0.2 
  │ │ │ │ └─┬ restore-cursor@1.0.1 
  │ │ │ │   ├── exit-hook@1.1.1 
  │ │ │ │   └── onetime@1.1.0 
  │ │ │ ├── cli-width@2.2.0 
  │ │ │ ├─┬ figures@1.7.0 
  │ │ │ │ └── object-assign@4.1.1 
  │ │ │ ├─┬ readline2@1.0.1 
  │ │ │ │ ├── code-point-at@1.1.0 
  │ │ │ │ ├─┬ is-fullwidth-code-point@1.0.0 
  │ │ │ │ │ └── number-is-nan@1.0.1 
  │ │ │ │ └── mute-stream@0.0.5 
  │ │ │ ├── run-async@0.1.0 
  │ │ │ ├── rx-lite@3.1.2 
  │ │ │ ├── string-width@1.0.2 
  │ │ │ └── through@2.3.8 
  │ │ ├─┬ is-my-json-valid@2.16.1 
  │ │ │ ├── generate-function@2.0.0 
  │ │ │ ├─┬ generate-object-property@1.2.0 
  │ │ │ │ └── is-property@1.0.2 
  │ │ │ └── jsonpointer@4.0.1 
  │ │ ├─┬ is-resolvable@1.0.0 
  │ │ │ └── tryit@1.0.3 
  │ │ ├─┬ js-yaml@3.10.0 
  │ │ │ ├─┬ argparse@1.0.9 
  │ │ │ │ └── sprintf-js@1.0.3 
  │ │ │ └── esprima@4.0.0 
  │ │ ├─┬ json-stable-stringify@1.0.1 
  │ │ │ └── jsonify@0.0.0 
  │ │ ├─┬ levn@0.3.0 
  │ │ │ ├── prelude-ls@1.1.2 
  │ │ │ └── type-check@0.3.2 
  │ │ ├─┬ mkdirp@0.5.1 
  │ │ │ └── minimist@0.0.8 
  │ │ ├── natural-compare@1.4.0 
  │ │ ├─┬ optionator@0.8.2 
  │ │ │ ├── deep-is@0.1.3 
  │ │ │ ├── fast-levenshtein@2.0.6 
  │ │ │ └── wordwrap@1.0.0 
  │ │ ├── path-is-inside@1.0.2 
  │ │ ├── pluralize@1.2.1 
  │ │ ├── progress@1.1.8 
  │ │ ├─┬ require-uncached@1.0.3 
  │ │ │ ├─┬ caller-path@0.1.0 
  │ │ │ │ └── callsites@0.2.0 
  │ │ │ └── resolve-from@1.0.1 
  │ │ ├─┬ shelljs@0.7.8 
  │ │ │ ├── interpret@1.0.4 
  │ │ │ └── rechoir@0.6.2 
  │ │ ├── strip-bom@3.0.0 
  │ │ ├── strip-json-comments@1.0.4 
  │ │ ├─┬ table@3.8.3 
  │ │ │ ├─┬ ajv@4.11.8 
  │ │ │ │ └── co@4.6.0 
  │ │ │ ├── ajv-keywords@1.5.1 
  │ │ │ ├── slice-ansi@0.0.4 
  │ │ │ └─┬ string-width@2.1.1 
  │ │ │   ├── is-fullwidth-code-point@2.0.0 
  │ │ │   └─┬ strip-ansi@4.0.0 
  │ │ │     └── ansi-regex@3.0.0 
  │ │ ├── text-table@0.2.0 
  │ │ └─┬ user-home@2.0.0 
  │ │   └── os-homedir@1.0.2 
  │ ├── eslint-config-standard@6.2.1 
  │ ├── eslint-config-standard-jsx@3.2.0 
  │ ├── eslint-plugin-promise@3.4.2 
  │ ├─┬ eslint-plugin-react@6.7.1 
  │ │ └── jsx-ast-utils@1.4.1 
  │ ├── eslint-plugin-standard@2.0.1 
  │ └─┬ standard-engine@5.2.0 
  │   ├── deglob@2.1.0 
  │   ├── find-root@1.1.0 
  │   ├── get-stdin@5.0.1 
  │   ├─┬ home-or-tmp@2.0.0 
  │   │ └── os-tmpdir@1.0.2 
  │   └─┬ pkg-config@1.1.1 
  │     └── debug-log@1.0.1 
  ├─┬ standard-format@2.2.4 
  │ ├─┬ deglob@1.1.2 
  │ │ ├── run-parallel@1.1.6 
  │ │ └── uniq@1.0.1 
  │ ├─┬ esformatter@0.9.6 
  │ │ ├── acorn-to-esprima@2.0.8 
  │ │ ├─┬ babel-traverse@6.26.0 
  │ │ │ ├── babel-messages@6.23.0 
  │ │ │ ├─┬ babel-runtime@6.26.0 
  │ │ │ │ ├── core-js@2.5.1 
  │ │ │ │ └── regenerator-runtime@0.11.0 
  │ │ │ ├─┬ babel-types@6.26.0 
  │ │ │ │ └── to-fast-properties@1.0.3 
  │ │ │ ├── babylon@6.18.0 
  │ │ │ └─┬ invariant@2.2.2 
  │ │ │   └── loose-envify@1.3.1 
  │ │ ├── debug@0.7.4 
  │ │ ├─┬ disparity@2.0.0 
  │ │ │ └── diff@1.4.0 
  │ │ ├── esformatter-parser@1.0.0 
  │ │ ├── glob@5.0.15 
  │ │ ├── mout@1.0.0 
  │ │ ├─┬ npm-run@2.0.0 
  │ │ │ ├─┬ npm-path@1.1.0 
  │ │ │ │ └─┬ which@1.3.0 
  │ │ │ │   └── isexe@2.0.0 
  │ │ │ ├─┬ npm-which@2.0.0 
  │ │ │ │ └── commander@2.11.0 
  │ │ │ ├─┬ serializerr@1.0.3 
  │ │ │ │ └── protochain@1.0.5 
  │ │ │ ├─┬ spawn-sync@1.0.15 
  │ │ │ │ └── os-shim@0.1.3 
  │ │ │ └── sync-exec@0.5.0 
  │ │ ├─┬ resolve@1.4.0 
  │ │ │ └── path-parse@1.0.5 
  │ │ ├─┬ rocambole@0.7.0 
  │ │ │ └── esprima@2.7.3 
  │ │ ├─┬ rocambole-indent@2.0.4 
  │ │ │ └── mout@0.11.1 
  │ │ ├─┬ rocambole-linebreak@1.0.2 
  │ │ │ └── semver@4.3.6 
  │ │ ├── rocambole-node@1.0.0 
  │ │ ├── rocambole-token@1.2.1 
  │ │ ├─┬ rocambole-whitespace@1.0.0 
  │ │ │ └── repeat-string@1.6.1 
  │ │ ├── strip-json-comments@0.1.3 
  │ │ └── supports-color@1.3.1 
  │ ├─┬ esformatter-eol-last@1.0.0 
  │ │ └── string.prototype.endswith@0.2.0 
  │ ├─┬ esformatter-jsx@7.4.1 
  │ │ ├── babylon@6.14.1 
  │ │ ├── esformatter-ignore@0.1.3 
  │ │ ├── extend@3.0.0 
  │ │ └─┬ js-beautify@1.6.4 
  │ │   ├─┬ config-chain@1.1.11 
  │ │   │ ├── ini@1.3.4 
  │ │   │ └── proto-list@1.2.4 
  │ │   ├─┬ editorconfig@0.13.3 
  │ │   │ ├── bluebird@3.5.0 
  │ │   │ ├─┬ lru-cache@3.2.0 
  │ │   │ │ └── pseudomap@1.0.2 
  │ │   │ ├── semver@5.4.1 
  │ │   │ └── sigmund@1.0.1 
  │ │   └─┬ nopt@3.0.6 
  │ │     └── abbrev@1.1.1 
  │ ├─┬ esformatter-literal-notation@1.0.1 
  │ │ └─┬ rocambole@0.3.6 
  │ │   └── esprima@1.0.4 
  │ ├── esformatter-quotes@1.1.0 
  │ ├── esformatter-remove-trailing-commas@1.0.1 
  │ ├── esformatter-semicolon-first@1.2.0 
  │ ├── esformatter-spaced-lined-comment@2.0.1 
  │ └── stdin@0.0.1 
  └─┬ through2@2.0.3 
    ├─┬ readable-stream@2.3.3 
    │ ├── core-util-is@1.0.2 
    │ ├── inherits@2.0.3 
    │ ├── isarray@1.0.0 
    │ ├── process-nextick-args@1.0.7 
    │ ├── safe-buffer@5.1.1 
    │ ├── string_decoder@1.0.3 
    │ └── util-deprecate@1.0.2 
    └── xtend@4.0.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/gulp-standard-bundle/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 31% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","call","RegExp","join","binding","Object","WeakMap","create","Set","Array","ArrayBuffer","DataView","Map","resolve","max","now","apply"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.059 took 30.5854s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node

module.exports = Cli

var minimist = require('minimist')
var getStdin = require('get-stdin')

function Cli (opts) {
  var standard = require('../').linter(opts)

  opts = Object.assign({
    cmd: 'standard-engine',
    tagline: 'JavaScript Custom Style',
    version: require('../package.json').version
  }, opts)

  var argv = minimist(process.argv.slice(2), {
    alias: {
      global: 'globals',
      plugin: 'plugins',
      env: 'envs',
      help: 'h',
      verbose: 'v'
    },
    boolean: [
      'fix',
      'help',
      'stdin',
      'verbose',
      'version'
    ],
    string: [
      'global',
      'plugin',
      'parser',
      'env'
    ]
  })

  // Unix convention: Command line argument `-` is a shorthand for `--stdin`
  if (argv._[0] === '-') {
    argv.stdin = true
    argv._.shift()
  }

  if (argv.help) {
    if (opts.tagline) console.log('%s - %s (%s)', opts.cmd, opts.tagline, opts.homepage)
    console.log(`
Usage:
    ${opts.cmd} <flags> [FILES...]

    If FILES is omitted, then all JavaScript source files (*.js, *.jsx) in the current
    working directory are checked, recursively.

    Certain paths (node_modules/, .git/, coverage/, *.min.js, bundle.js, vendor/) are
    automatically ignored.

Flags:
        --fix       Automatically fix problems
    -v, --verbose   Show rule names for errors (to ignore specific rules)
        --version   Show current version
    -h, --help      Show usage information

Flags (advanced):
        --stdin     Read file text from stdin
        --global    Declare global variable
        --plugin    Use custom eslint plugin
        --env       Use custom eslint environment
        --parser    Use custom js parser (e.g. babel-eslint)
    `)
    process.exitCode = 0
    return
  }

  if (argv.version) {
    console.log(opts.version)
    process.exitCode = 0
    return
  }

  var lintOpts = {
    fix: argv.fix,
    globals: argv.global,
    plugins: argv.plugin,
    envs: argv.env,
    parser: argv.parser
  }

  var stdinText

  if (argv.stdin) {
    getStdin().then(function (text) {
      stdinText = text
      standard.lintText(text, lintOpts, onResult)
    })
  } else {
    standard.lintFiles(argv._, lintOpts, onResult)
  }

  function onResult (err, result) {
    if (err) return onError(err)

    if (argv.stdin && argv.fix) {
      if (result.results[0].output) {
        // Code contained fixable errors, so print the fixed code
        process.stdout.write(result.results[0].output)
      } else {
        // Code did not contain fixable errors, so print original code
        process.stdout.write(stdinText)
      }
    }

    if (!result.errorCount && !result.warningCount) {
      process.exitCode = 0
      return
    }

    console.error('%s: %s (%s)', opts.cmd, opts.tagline, opts.homepage)

    // Are any fixable rules present?
    var isFixable = result.results.some(function (result) {
      return result.messages.some(function (message) {
        return !!message.fix
      })
    })

    if (isFixable) {
      console.error(
        '%s: %s',
        opts.cmd,
        'Run `' + opts.cmd + ' --fix` to automatically fix some problems.'
      )
    }

    result.results.forEach(function (result) {
      result.messages.forEach(function (message) {
        log(
          '  %s:%d:%d: %s%s',
          result.filePath, message.line || 0, message.column || 0, message.message,
          argv.verbose ? ' (' + message.ruleId + ')' : ''
        )
      })
    })

    process.exitCode = result.errorCount ? 1 : 0
    return
  }

  function onError (err) {
    console.error(opts.cmd + ': Unexpected linter output:\n')
    console.error(err.stack || err.message || err)
    console.error(
      '\nIf you think this is a bug in `%s`, open an issue: %s',
      opts.cmd, opts.bugs
    )
    process.exitCode = 1
    return
  }

  /**
   * Print lint errors to stdout -- this is expected output from `standard-engine`.
   * Note: When fixing code from stdin (`standard --stdin --fix`), the transformed
   * code is printed to stdout, so print lint errors to stderr in this case.
   */
  function log () {
    if (argv.stdin && argv.fix) {
      arguments[0] = opts.cmd + ': ' + arguments[0]
      console.error.apply(console, arguments)
    } else {
      console.log.apply(console, arguments)
    }
  }
}
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/gulp-standard-bundle/node_modules/gulp-standard-bundle/index.js. Coverage (Term): 8% Coverage (LOC): 9%
*- File /root/Targets/gulp-standard-bundle/node_modules/lodash/lodash.js. Coverage (Term): 22% Coverage (LOC): 35%
*- File /root/Targets/gulp-standard-bundle/node_modules/through2/through2.js. Coverage (Term): 24% Coverage (LOC): 26%
*- File /root/Targets/gulp-standard-bundle/node_modules/through2/node_modules/readable-stream/transform.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/gulp-standard-bundle/node_modules/through2/node_modules/readable-stream/readable.js. Coverage (Term): 61% Coverage (LOC): 60%
*- File /root/Targets/gulp-standard-bundle/node_modules/through2/node_modules/readable-stream/lib/_stream_readable.js. Coverage (Term): 8% Coverage (LOC): 14%
*- File /root/Targets/gulp-standard-bundle/node_modules/process-nextick-args/index.js. Coverage (Term): 22% Coverage (LOC): 19%
*- File /root/Targets/gulp-standard-bundle/node_modules/through2/node_modules/isarray/index.js. Coverage (Term): 62% Coverage (LOC): 83%
*- File /root/Targets/gulp-standard-bundle/node_modules/through2/node_modules/readable-stream/lib/internal/streams/stream.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/gulp-standard-bundle/node_modules/safe-buffer/index.js. Coverage (Term): 36% Coverage (LOC): 44%
*- File /root/Targets/gulp-standard-bundle/node_modules/core-util-is/lib/util.js. Coverage (Term): 33% Coverage (LOC): 64%
*- File /root/Targets/gulp-standard-bundle/node_modules/inherits/inherits.js. Coverage (Term): 74% Coverage (LOC): 88%
*- File /root/Targets/gulp-standard-bundle/node_modules/through2/node_modules/readable-stream/lib/internal/streams/BufferList.js. Coverage (Term): 19% Coverage (LOC): 29%
*- File /root/Targets/gulp-standard-bundle/node_modules/through2/node_modules/readable-stream/lib/internal/streams/destroy.js. Coverage (Term): 15% Coverage (LOC): 21%
*- File /root/Targets/gulp-standard-bundle/node_modules/through2/node_modules/readable-stream/lib/_stream_writable.js. Coverage (Term): 14% Coverage (LOC): 19%
*- File /root/Targets/gulp-standard-bundle/node_modules/util-deprecate/node.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/gulp-standard-bundle/node_modules/through2/node_modules/readable-stream/lib/_stream_duplex.js. Coverage (Term): 35% Coverage (LOC): 44%
*- File /root/Targets/gulp-standard-bundle/node_modules/through2/node_modules/readable-stream/lib/_stream_transform.js. Coverage (Term): 14% Coverage (LOC): 22%
*- File /root/Targets/gulp-standard-bundle/node_modules/through2/node_modules/readable-stream/lib/_stream_passthrough.js. Coverage (Term): 59% Coverage (LOC): 73%
*- File /root/Targets/gulp-standard-bundle/node_modules/xtend/immutable.js. Coverage (Term): 32% Coverage (LOC): 33%
*- File /root/Targets/gulp-standard-bundle/node_modules/standard/index.js. Coverage (Term): 52% Coverage (LOC): 80%
*- File /root/Targets/gulp-standard-bundle/node_modules/standard-engine/index.js. Coverage (Term): 4% Coverage (LOC): 4%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
