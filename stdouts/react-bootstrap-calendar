/root/Targets/react-bootstrap-calendar
├── UNMET PEER DEPENDENCY react@~0.11.2
└─┬ react-bootstrap-calendar@0.0.3 
  ├── moment@2.8.4 
  └── moment-range@1.0.9 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/react-bootstrap-calendar/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0777 took 4.5254s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (55:10) on program /**
 * @jsx React.DOM
 */

var React = require('react'),
    moment = require('moment');

require('moment-range');

var Calendar = module.exports = React.createClass({
  getInitialState: function() {
    var today = new Date();
    return {
      month: today,
      today: today,
      selectedDate: this.props.selectedDate
    };
  },
  prevMonth: function(ev) {
    this.setState({
      month: moment(this.state.month).add(-1, 'months').toDate()
    });
  },
  nextMonth: function(ev) {
    this.setState({
      month: moment(this.state.month).add(1, 'months').toDate()
    });
  },
  render: function() {
    var start = moment(this.state.month).startOf('month').startOf('isoWeek'),
        m = moment(this.state.month),
        stop = moment(this.state.month).endOf('month').endOf('isoWeek'),
        month = [],
        self = this;

    moment().range(start, stop).by('weeks', function(w) {
      var week = [];
      month.push(week);
      moment().range(w, moment(w).endOf('isoWeek')).by('days', function(d) {
        week.push(d);
      });
    });

    var dayCallback = function(m) {
      return function(ev) {
        self.setState({
          selectedDate: m
        });
        self.props.onDaySelected && self.props.onDaySelected(m);
      };
    };


    return (
          <table className="rbc-calendar table">
            <thead>
              <tr>
                <th onClick={this.prevMonth}><i className="fa fa-arrow-left icon-arrow-left glyphicon glyphicon-arrow-left"></i></th>
                <th colSpan="5">{m.get('month')+1} / {m.get('year')}</th>
                <th onClick={this.nextMonth}><i className="fa fa-arrow-right icon-arrow-right glyphicon glyphicon-arrow-right"></i></th>
              </tr>
              <tr>
                <th>Mo</th>
                <th>Tu</th>
                <th>We</th>
                <th>Th</th>
                <th>Fr</th>
                <th>Sa</th>
                <th>Su</th>
              </tr>
            </thead>
            <tbody>
            { month.map(function(w) {
                return (
                <tr key={w[0].get('week')}>
                { w.map(function(d) {
                    var cls = d.isSame(self.state.today, 'day') ? 'rbc-today' : '';
                    if (self.state.selectedDate && d.isSame(self.state.selectedDate, 'day')) cls += ' rbc-selected-date';
                    return <td className={cls} key={d.get('date')} onClick={dayCallback(d)}>{ d.get('date') }</td>;
                  }) }
                </tr>
                  );
              }) }
            </tbody>
          </table>
       );

  }
});
 at SyntaxError: Unexpected token (55:10)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1822:12)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1597:21)
    at Parser.pp$3.parseParenAndDistinguishExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1861:32)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/react-bootstrap-calendar/node_modules/react-bootstrap-calendar/index.js. Coverage (Term): 35% Coverage (LOC): 57%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
