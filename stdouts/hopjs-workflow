/root/Targets/hopjs-workflow
└─┬ hopjs-workflow@0.1.0 
  ├── colors@0.6.2 
  ├─┬ hopjs-remote@0.0.35 
  │ ├── hopjs-common@0.0.9 
  │ ├── optimist@0.3.7 
  │ ├─┬ request@2.27.0 
  │ │ ├── aws-sign@0.3.0 
  │ │ └── cookie-jar@0.3.0 
  │ └─┬ wd@0.2.27 
  │   ├─┬ archiver@0.10.1 
  │   │ ├── buffer-crc32@0.2.13 
  │   │ ├─┬ file-utils@0.2.2 
  │   │ │ ├─┬ findup-sync@0.2.1 
  │   │ │ │ └── glob@4.3.5 
  │   │ │ ├─┬ glob@4.5.3 
  │   │ │ │ ├─┬ inflight@1.0.6 
  │   │ │ │ │ └── wrappy@1.0.2 
  │   │ │ │ └── once@1.4.0 
  │   │ │ ├── iconv-lite@0.4.19 
  │   │ │ ├── isbinaryfile@2.0.4 
  │   │ │ ├─┬ minimatch@2.0.10 
  │   │ │ │ └─┬ brace-expansion@1.1.8 
  │   │ │ │   ├── balanced-match@1.0.0 
  │   │ │ │   └── concat-map@0.0.1 
  │   │ │ └─┬ rimraf@2.6.2 
  │   │ │   └─┬ glob@7.1.2 
  │   │ │     ├── fs.realpath@1.0.0 
  │   │ │     ├── minimatch@3.0.4 
  │   │ │     └── path-is-absolute@1.0.1 
  │   │ ├── lazystream@0.1.0 
  │   │ ├─┬ readable-stream@1.0.34 
  │   │ │ ├── core-util-is@1.0.2 
  │   │ │ ├── inherits@2.0.3 
  │   │ │ ├── isarray@0.0.1 
  │   │ │ └── string_decoder@0.10.31 
  │   │ ├─┬ tar-stream@0.4.7 
  │   │ │ ├── bl@0.9.5 
  │   │ │ ├── end-of-stream@1.4.0 
  │   │ │ └── xtend@4.0.1 
  │   │ └─┬ zip-stream@0.3.7 
  │   │   ├── crc32-stream@0.2.0 
  │   │   ├─┬ debug@1.0.5 
  │   │   │ └── ms@2.0.0 
  │   │   └── deflate-crc32-stream@0.1.2 
  │   ├── async@0.9.2 
  │   ├── lodash@2.4.2 
  │   ├── q@1.0.1 
  │   ├─┬ request@2.36.0 
  │   │ └── tunnel-agent@0.4.3 
  │   ├── underscore.string@2.3.3 
  │   └── vargs@0.1.0 
  ├─┬ optimist@0.6.1 
  │ ├── minimist@0.0.10 
  │ └── wordwrap@0.0.3 
  └─┬ request@2.34.0 
    ├── aws-sign2@0.5.0 
    ├── forever-agent@0.5.2 
    ├─┬ form-data@0.1.4 
    │ └─┬ combined-stream@0.0.7 
    │   └── delayed-stream@0.0.5 
    ├─┬ hawk@1.0.0 
    │ ├── boom@0.4.2 
    │ ├── cryptiles@0.2.2 
    │ ├── hoek@0.9.1 
    │ └── sntp@0.2.4 
    ├─┬ http-signature@0.10.1 
    │ ├── asn1@0.1.11 
    │ ├── assert-plus@0.1.5 
    │ └── ctype@0.5.3 
    ├── json-stringify-safe@5.0.1 
    ├── mime@1.2.11 
    ├── node-uuid@1.4.8 
    ├── oauth-sign@0.3.0 
    ├── qs@0.6.6 
    ├─┬ tough-cookie@2.3.3 
    │ └── punycode@1.4.1 
    └── tunnel-agent@0.3.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/hopjs-workflow/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 30% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","create"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0385 took 5.8356s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: 'with' in strict mode (18:6) on program 
Workflow.Context=function(){
  this.stack=[];
  this.values={};
  this.asyncGroups={};
  this.api={};
  this.depth=0;
};

Workflow.Context.prototype.saveValue=function(name,value){
  this.values[name]=value;
  return value;
};

Workflow.Context.prototype.loadValue=function(name){
  if(typeof name=="string"){
    if(typeof this.values!="undefined"){
      with(this.values){
        try {
          return eval(name);
        } catch(e){
          return undefined;
        }
      }
    }
  }
  return undefined;
};

Workflow.Context.prototype._onStartTask=function(task){
  this.tasks++;
  this.onStartTask(task);
};

Workflow.Context.prototype._do=function(method,input,onComplete){
  this.onTaskInput(input);
  this.do(method,input,onComplete);
}; 

Workflow.Context.prototype._onCompleteTask=function(task,err,result,testResults){
  var self=this;
  if(testResults){
    testResults.results.forEach(function(result){
      if(result.result===true){
        self.pass++;
      } else {
        self.fail++; 
      } 
    });
  }
  this.onCompleteTask(task,err,result,testResults);
};

Workflow.Context.prototype.summarize=function(){
  return { tasks: this.tasks, fail: this.fail, pass: this.pass, duration: this.finishTime-this.startTime };
};

Workflow.Context.prototype.setStepper=function(stepper){
  this.stepper = stepper;
};

Workflow.Context.prototype.run=function(script,onComplete){
  var self = this;
  if(this.depth===0){
    this.startTime = Date.now();
    this.tasks=0;
    this.pass=0;
    this.fail=0;

    script.validate(this);

  }
  var tasks = script.tasks;
  var step = 0;
  var stepper = this.stepper||function(step){ step(); };

  this.depth++;

  var next=function(){
    if(step < tasks.length){
      tasks[step].run(self,function(){
        step++;
        stepper(next); 
      });
    } else {
      self.depth--;
      self.finishTime = Date.now();
      var summary = self.summarize();
      if(self.depth===0)
        self.log("("+script.name+")","tasks:",summary.tasks,"pass",summary.pass,"fail",summary.fail);
      onComplete(null,self.summarize());
    }
  };
  stepper(next);
};

Workflow.Context.prototype.get=function(url,onComplete){
  throw new Error("Not implemented");
};

Workflow.Context.prototype.post=function(url,input,onComplete){
  throw new Error("Not implemented");
};

Workflow.Context.prototype.put=function(url,input,onComplete){
  throw new Error("Not implemented");
};

Workflow.Context.prototype.delete=function(url,input,onComplete){
  throw new Error("Not implemented");
};

Workflow.Context.prototype.use=function(url,onComplete){
  throw new Error("Not implemented");
};

Workflow.Context.prototype.do=function(method,input,onComplete){
  throw new Error("Not implemented");
};

Workflow.Context.prototype.onStartTask=function(task){
  this.currentTask = { task: task.toString() };
  this.logTaskStart(task.toString());
  this.log("");
};

Workflow.Context.prototype.log=function(){
  var args = Array.prototype.slice.call(arguments);
  
  var str = "";
  for(var i=0;i<this.depth;i++) str+="\t";

  args.unshift(str);

  console.log.apply(console,args);
};

Workflow.Context.prototype.logTaskStart=Workflow.Context.prototype.log;

Workflow.Context.prototype.logFail=Workflow.Context.prototype.log;

Workflow.Context.prototype.logPass=Workflow.Context.prototype.log;

Workflow.Context.prototype.onTaskInput=function(input){
  this.log("\tInput:",JSON.stringify(input));
};

Workflow.Context.prototype.intermediateResult=function(task,err,res){
  if(typeof err=="undefined" && typeof res=="undefined") return;
  this.log("\t(Error:",err,"Result:",JSON.stringify(res),")");
};

Workflow.Context.prototype.onCompleteTask=function(task,err,result,testResults){
  var self=this;

  this.log("\tError",err);
  this.log("\tOutput",JSON.stringify(result));
  this.log("");

  if(testResults){
    testResults.results.forEach(function(result){
      if(result.result){
        self.logPass("\t\t",result.msg);
      } else { 
        self.logFail("\t\t",result.msg);
      } 
    });
  }
  this.log("");
};

 at SyntaxError: 'with' in strict mode (18:6)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$1.parseWithStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:932:27)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:708:32)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:698:30)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/hopjs-workflow/node_modules/hopjs-workflow/index.js. Coverage (Term): 66% Coverage (LOC): 78%
*- File /root/Targets/hopjs-workflow/node_modules/hopjs-workflow/lib/core.js. Coverage (Term): 11% Coverage (LOC): 21%
*- File /root/Targets/hopjs-workflow/node_modules/hopjs-workflow/lib/script.js. Coverage (Term): 19% Coverage (LOC): 32%
*- File /root/Targets/hopjs-workflow/node_modules/hopjs-workflow/lib/task.js. Coverage (Term): 21% Coverage (LOC): 29%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
