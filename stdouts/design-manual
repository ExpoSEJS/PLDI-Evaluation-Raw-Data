
> node-sass@4.5.3 install /root/Targets/design-manual/node_modules/node-sass
> node scripts/install.js

Cached binary found at /root/.npm/node-sass/4.5.3/linux-x64-51_binding.node

> electron@1.7.6 postinstall /root/Targets/design-manual/node_modules/electron
> node install.js


> node-sass@4.5.3 postinstall /root/Targets/design-manual/node_modules/node-sass
> node scripts/build.js

Binary found at /root/Targets/design-manual/node_modules/node-sass/vendor/linux-x64-51/binding.node
Testing binary
Binary is fine
/root/Targets/design-manual
└─┬ design-manual@0.35.0 
  ├── async@1.5.2 
  ├─┬ autoprefixer@6.7.7 
  │ ├─┬ browserslist@1.7.7 
  │ │ └── electron-to-chromium@1.3.21 
  │ ├── caniuse-db@1.0.30000733 
  │ ├── normalize-range@0.1.2 
  │ ├── num2fraction@1.2.2 
  │ └── postcss-value-parser@3.3.0 
  ├─┬ browserify@11.2.0 
  │ ├── assert@1.3.0 
  │ ├─┬ browser-pack@5.0.1 
  │ │ ├─┬ combine-source-map@0.6.1 
  │ │ │ ├─┬ inline-source-map@0.5.0 
  │ │ │ │ └── source-map@0.4.4 
  │ │ │ ├── lodash.memoize@3.0.4 
  │ │ │ └── source-map@0.4.4 
  │ │ └── umd@3.0.1 
  │ ├─┬ browser-resolve@1.11.2 
  │ │ └── resolve@1.1.7 
  │ ├─┬ browserify-zlib@0.1.4 
  │ │ └── pako@0.2.9 
  │ ├─┬ buffer@3.6.0 
  │ │ ├── base64-js@0.0.8 
  │ │ ├── ieee754@1.1.8 
  │ │ └── isarray@1.0.0 
  │ ├── builtins@0.0.7 
  │ ├── commondir@0.0.1 
  │ ├─┬ concat-stream@1.4.10 
  │ │ ├── readable-stream@1.1.14 
  │ │ └── typedarray@0.0.6 
  │ ├─┬ console-browserify@1.1.0 
  │ │ └── date-now@0.1.4 
  │ ├── constants-browserify@0.0.1 
  │ ├─┬ crypto-browserify@3.11.1 
  │ │ ├─┬ browserify-cipher@1.0.0 
  │ │ │ ├─┬ browserify-aes@1.0.8 
  │ │ │ │ └── buffer-xor@1.0.3 
  │ │ │ ├─┬ browserify-des@1.0.0 
  │ │ │ │ └── des.js@1.0.0 
  │ │ │ └─┬ evp_bytestokey@1.0.3 
  │ │ │   └─┬ md5.js@1.3.4 
  │ │ │     └── hash-base@3.0.4 
  │ │ ├─┬ browserify-sign@4.0.4 
  │ │ │ ├── bn.js@4.11.8 
  │ │ │ ├── browserify-rsa@4.0.1 
  │ │ │ ├─┬ elliptic@6.4.0 
  │ │ │ │ ├── brorand@1.1.0 
  │ │ │ │ ├── hash.js@1.1.3 
  │ │ │ │ ├── hmac-drbg@1.0.1 
  │ │ │ │ ├── minimalistic-assert@1.0.0 
  │ │ │ │ └── minimalistic-crypto-utils@1.0.1 
  │ │ │ └─┬ parse-asn1@5.1.0 
  │ │ │   └── asn1.js@4.9.1 
  │ │ ├── create-ecdh@4.0.0 
  │ │ ├─┬ create-hash@1.1.3 
  │ │ │ ├── cipher-base@1.0.4 
  │ │ │ └─┬ ripemd160@2.0.1 
  │ │ │   └── hash-base@2.0.2 
  │ │ ├── create-hmac@1.1.6 
  │ │ ├─┬ diffie-hellman@5.0.2 
  │ │ │ └── miller-rabin@4.0.0 
  │ │ ├── pbkdf2@3.0.14 
  │ │ ├── public-encrypt@4.0.0 
  │ │ └── randombytes@2.0.5 
  │ ├── defined@1.0.0 
  │ ├── deps-sort@1.3.9 
  │ ├── domain-browser@1.1.7 
  │ ├─┬ duplexer2@0.0.2 
  │ │ └── readable-stream@1.1.14 
  │ ├── events@1.0.2 
  │ ├─┬ glob@4.5.3 
  │ │ ├─┬ inflight@1.0.6 
  │ │ │ └── wrappy@1.0.2 
  │ │ ├── minimatch@2.0.10 
  │ │ └── once@1.4.0 
  │ ├─┬ has@1.0.1 
  │ │ └── function-bind@1.1.1 
  │ ├── htmlescape@1.1.1 
  │ ├── https-browserify@0.0.1 
  │ ├── inherits@2.0.3 
  │ ├─┬ insert-module-globals@6.6.3 
  │ │ ├── is-buffer@1.1.5 
  │ │ └─┬ lexical-scope@1.2.0 
  │ │   └── astw@2.2.0 
  │ ├── isarray@0.0.1 
  │ ├─┬ JSONStream@1.3.1 
  │ │ └── jsonparse@1.3.1 
  │ ├─┬ labeled-stream-splicer@1.0.2 
  │ │ └─┬ stream-splicer@1.3.2 
  │ │   └── readable-stream@1.1.14 
  │ ├─┬ module-deps@3.9.1 
  │ │ ├── detective@4.5.0 
  │ │ ├── readable-stream@1.1.14 
  │ │ └─┬ stream-combiner2@1.0.2 
  │ │   └─┬ through2@0.5.1 
  │ │     ├── readable-stream@1.0.34 
  │ │     └── xtend@3.0.0 
  │ ├── os-browserify@0.1.2 
  │ ├─┬ parents@1.0.1 
  │ │ └── path-platform@0.11.15 
  │ ├── path-browserify@0.0.0 
  │ ├── process@0.11.10 
  │ ├── punycode@1.4.1 
  │ ├── querystring-es3@0.2.1 
  │ ├─┬ read-only-stream@1.1.1 
  │ │ ├── readable-stream@1.1.14 
  │ │ └─┬ readable-wrap@1.0.0 
  │ │   └── readable-stream@1.1.14 
  │ ├─┬ readable-stream@2.3.3 
  │ │ ├── core-util-is@1.0.2 
  │ │ ├── isarray@1.0.0 
  │ │ ├── process-nextick-args@1.0.7 
  │ │ ├── safe-buffer@5.1.1 
  │ │ ├── string_decoder@1.0.3 
  │ │ └── util-deprecate@1.0.2 
  │ ├─┬ resolve@1.4.0 
  │ │ └── path-parse@1.0.5 
  │ ├─┬ shasum@1.0.2 
  │ │ ├─┬ json-stable-stringify@0.0.1 
  │ │ │ └── jsonify@0.0.0 
  │ │ └── sha.js@2.4.8 
  │ ├── shell-quote@0.0.1 
  │ ├── stream-browserify@2.0.1 
  │ ├─┬ stream-http@1.7.1 
  │ │ ├── builtin-status-codes@1.0.0 
  │ │ ├── foreach@2.0.5 
  │ │ ├── indexof@0.0.1 
  │ │ └── object-keys@1.0.11 
  │ ├── string_decoder@0.10.31 
  │ ├── subarg@1.0.0 
  │ ├─┬ syntax-error@1.3.0 
  │ │ └── acorn@4.0.13 
  │ ├─┬ through2@1.1.1 
  │ │ └── readable-stream@1.1.14 
  │ ├── timers-browserify@1.4.2 
  │ ├── tty-browserify@0.0.0 
  │ ├─┬ url@0.10.3 
  │ │ ├── punycode@1.3.2 
  │ │ └── querystring@0.2.0 
  │ ├─┬ util@0.10.3 
  │ │ └── inherits@2.0.1 
  │ ├── vm-browserify@0.0.4 
  │ └── xtend@4.0.1 
  ├─┬ clean-css@3.4.28 
  │ ├─┬ commander@2.8.1 
  │ │ └── graceful-readlink@1.0.1 
  │ └─┬ source-map@0.4.4 
  │   └── amdefine@1.0.1 
  ├── cssmin@0.4.3 
  ├─┬ delegate-events@1.1.1 
  │ ├─┬ closest@0.0.1 
  │ │ └── matches-selector@0.0.1 
  │ └── component-event@0.2.0 
  ├─┬ electron@1.7.6 
  │ ├── @types/node@7.0.43 
  │ ├─┬ electron-download@3.3.0 
  │ │ ├─┬ fs-extra@0.30.0 
  │ │ │ ├── jsonfile@2.4.0 
  │ │ │ └── klaw@1.3.1 
  │ │ ├── home-path@1.0.5 
  │ │ ├─┬ nugget@2.0.1 
  │ │ │ ├── pretty-bytes@1.0.4 
  │ │ │ ├─┬ progress-stream@1.2.0 
  │ │ │ │ ├── speedometer@0.1.4 
  │ │ │ │ └─┬ through2@0.2.3 
  │ │ │ │   ├── readable-stream@1.1.14 
  │ │ │ │   └─┬ xtend@2.1.2 
  │ │ │ │     └── object-keys@0.4.0 
  │ │ │ ├── single-line-log@1.1.2 
  │ │ │ └── throttleit@0.0.2 
  │ │ ├─┬ path-exists@2.1.0 
  │ │ │ └─┬ pinkie-promise@2.0.1 
  │ │ │   └── pinkie@2.0.4 
  │ │ ├─┬ rc@1.2.1 
  │ │ │ ├── deep-extend@0.4.2 
  │ │ │ ├── ini@1.3.4 
  │ │ │ └── strip-json-comments@2.0.1 
  │ │ ├── semver@5.4.1 
  │ │ └─┬ sumchecker@1.3.1 
  │ │   └── es6-promise@4.1.1 
  │ └─┬ extract-zip@1.6.5 
  │   ├── concat-stream@1.6.0 
  │   ├─┬ debug@2.2.0 
  │   │ └── ms@0.7.1 
  │   ├─┬ mkdirp@0.5.0 
  │   │ └── minimist@0.0.8 
  │   └─┬ yauzl@2.4.1 
  │     └─┬ fd-slicer@1.0.1 
  │       └── pend@1.2.0 
  ├── events@1.1.1 
  ├─┬ finalhandler@1.0.5 
  │ ├─┬ debug@2.6.8 
  │ │ └── ms@2.0.0 
  │ ├── encodeurl@1.0.1 
  │ ├── escape-html@1.0.3 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── parseurl@1.3.2 
  │ ├── statuses@1.3.1 
  │ └── unpipe@1.0.0 
  ├── html@1.0.0 
  ├── interact.js@1.2.8 
  ├── killable@1.0.0 
  ├── marked@0.3.6 
  ├── minimist@1.2.0 
  ├─┬ mkdirp@0.5.1 
  │ └── minimist@0.0.8 
  ├─┬ node-sass@4.5.3 
  │ ├── async-foreach@0.1.3 
  │ ├─┬ chalk@1.1.3 
  │ │ ├── ansi-styles@2.2.1 
  │ │ ├── escape-string-regexp@1.0.5 
  │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ └── ansi-regex@2.1.1 
  │ │ ├── strip-ansi@3.0.1 
  │ │ └── supports-color@2.0.0 
  │ ├─┬ cross-spawn@3.0.1 
  │ │ ├─┬ lru-cache@4.1.1 
  │ │ │ ├── pseudomap@1.0.2 
  │ │ │ └── yallist@2.1.2 
  │ │ └─┬ which@1.3.0 
  │ │   └── isexe@2.0.0 
  │ ├─┬ gaze@1.1.2 
  │ │ └─┬ globule@1.2.0 
  │ │   ├── glob@7.1.2 
  │ │   └── minimatch@3.0.4 
  │ ├── get-stdin@4.0.1 
  │ ├─┬ glob@7.1.2 
  │ │ ├── fs.realpath@1.0.0 
  │ │ ├── minimatch@3.0.4 
  │ │ └── path-is-absolute@1.0.1 
  │ ├── in-publish@2.0.0 
  │ ├── lodash.assign@4.2.0 
  │ ├── lodash.clonedeep@4.5.0 
  │ ├── lodash.mergewith@4.6.0 
  │ ├─┬ meow@3.7.0 
  │ │ ├─┬ camelcase-keys@2.1.0 
  │ │ │ └── camelcase@2.1.1 
  │ │ ├── decamelize@1.2.0 
  │ │ ├─┬ loud-rejection@1.6.0 
  │ │ │ ├─┬ currently-unhandled@0.4.1 
  │ │ │ │ └── array-find-index@1.0.2 
  │ │ │ └── signal-exit@3.0.2 
  │ │ ├── map-obj@1.0.1 
  │ │ ├─┬ normalize-package-data@2.4.0 
  │ │ │ ├── hosted-git-info@2.5.0 
  │ │ │ ├─┬ is-builtin-module@1.0.0 
  │ │ │ │ └── builtin-modules@1.1.1 
  │ │ │ └─┬ validate-npm-package-license@3.0.1 
  │ │ │   ├─┬ spdx-correct@1.0.2 
  │ │ │   │ └── spdx-license-ids@1.2.2 
  │ │ │   └── spdx-expression-parse@1.0.4 
  │ │ ├─┬ read-pkg-up@1.0.1 
  │ │ │ ├── find-up@1.1.2 
  │ │ │ └─┬ read-pkg@1.1.0 
  │ │ │   ├─┬ load-json-file@1.1.0 
  │ │ │   │ ├─┬ parse-json@2.2.0 
  │ │ │   │ │ └─┬ error-ex@1.3.1 
  │ │ │   │ │   └── is-arrayish@0.2.1 
  │ │ │   │ ├── pify@2.3.0 
  │ │ │   │ └─┬ strip-bom@2.0.0 
  │ │ │   │   └── is-utf8@0.2.1 
  │ │ │   └── path-type@1.1.0 
  │ │ ├─┬ redent@1.0.0 
  │ │ │ ├─┬ indent-string@2.1.0 
  │ │ │ │ └─┬ repeating@2.0.1 
  │ │ │ │   └── is-finite@1.0.2 
  │ │ │ └── strip-indent@1.0.1 
  │ │ └── trim-newlines@1.0.0 
  │ ├── nan@2.7.0 
  │ ├─┬ node-gyp@3.6.2 
  │ │ ├── fstream@1.0.11 
  │ │ ├── glob@7.1.2 
  │ │ ├── graceful-fs@4.1.11 
  │ │ ├── minimatch@3.0.4 
  │ │ ├─┬ nopt@3.0.6 
  │ │ │ └── abbrev@1.1.0 
  │ │ ├─┬ osenv@0.1.4 
  │ │ │ ├── os-homedir@1.0.2 
  │ │ │ └── os-tmpdir@1.0.2 
  │ │ ├── semver@5.3.0 
  │ │ └─┬ tar@2.2.1 
  │ │   └── block-stream@0.0.9 
  │ ├─┬ npmlog@4.1.2 
  │ │ ├─┬ are-we-there-yet@1.1.4 
  │ │ │ └── delegates@1.0.0 
  │ │ ├── console-control-strings@1.1.0 
  │ │ ├─┬ gauge@2.7.4 
  │ │ │ ├── aproba@1.2.0 
  │ │ │ ├── has-unicode@2.0.1 
  │ │ │ ├─┬ string-width@1.0.2 
  │ │ │ │ ├── code-point-at@1.1.0 
  │ │ │ │ └─┬ is-fullwidth-code-point@1.0.0 
  │ │ │ │   └── number-is-nan@1.0.1 
  │ │ │ └── wide-align@1.1.2 
  │ │ └── set-blocking@2.0.0 
  │ ├─┬ request@2.82.0 
  │ │ ├── aws-sign2@0.7.0 
  │ │ ├── aws4@1.6.0 
  │ │ ├── caseless@0.12.0 
  │ │ ├─┬ combined-stream@1.0.5 
  │ │ │ └── delayed-stream@1.0.0 
  │ │ ├── extend@3.0.1 
  │ │ ├── forever-agent@0.6.1 
  │ │ ├─┬ form-data@2.3.1 
  │ │ │ └── asynckit@0.4.0 
  │ │ ├─┬ har-validator@5.0.3 
  │ │ │ ├─┬ ajv@5.2.2 
  │ │ │ │ ├── co@4.6.0 
  │ │ │ │ ├── fast-deep-equal@1.0.0 
  │ │ │ │ ├── json-schema-traverse@0.3.1 
  │ │ │ │ └── json-stable-stringify@1.0.1 
  │ │ │ └── har-schema@2.0.0 
  │ │ ├─┬ hawk@6.0.2 
  │ │ │ ├── boom@4.3.1 
  │ │ │ ├─┬ cryptiles@3.1.2 
  │ │ │ │ └── boom@5.2.0 
  │ │ │ ├── hoek@4.2.0 
  │ │ │ └── sntp@2.0.2 
  │ │ ├─┬ http-signature@1.2.0 
  │ │ │ ├── assert-plus@1.0.0 
  │ │ │ ├─┬ jsprim@1.4.1 
  │ │ │ │ ├── extsprintf@1.3.0 
  │ │ │ │ ├── json-schema@0.2.3 
  │ │ │ │ └── verror@1.10.0 
  │ │ │ └─┬ sshpk@1.13.1 
  │ │ │   ├── asn1@0.2.3 
  │ │ │   ├── bcrypt-pbkdf@1.0.1 
  │ │ │   ├── dashdash@1.14.1 
  │ │ │   ├── ecc-jsbn@0.1.1 
  │ │ │   ├── getpass@0.1.7 
  │ │ │   ├── jsbn@0.1.1 
  │ │ │   └── tweetnacl@0.14.5 
  │ │ ├── is-typedarray@1.0.0 
  │ │ ├── isstream@0.1.2 
  │ │ ├── json-stringify-safe@5.0.1 
  │ │ ├─┬ mime-types@2.1.17 
  │ │ │ └── mime-db@1.30.0 
  │ │ ├── oauth-sign@0.8.2 
  │ │ ├── performance-now@2.1.0 
  │ │ ├── qs@6.5.1 
  │ │ ├── stringstream@0.0.5 
  │ │ ├── tough-cookie@2.3.3 
  │ │ ├── tunnel-agent@0.6.0 
  │ │ └── uuid@3.1.0 
  │ ├─┬ sass-graph@2.2.4 
  │ │ ├─┬ glob@7.1.2 
  │ │ │ └── minimatch@3.0.4 
  │ │ ├── lodash@4.17.4 
  │ │ ├─┬ scss-tokenizer@0.2.3 
  │ │ │ └── source-map@0.4.4 
  │ │ └─┬ yargs@7.1.0 
  │ │   ├── camelcase@3.0.0 
  │ │   ├─┬ cliui@3.2.0 
  │ │   │ └── wrap-ansi@2.1.0 
  │ │   ├── get-caller-file@1.0.2 
  │ │   ├─┬ os-locale@1.4.0 
  │ │   │ └─┬ lcid@1.0.0 
  │ │   │   └── invert-kv@1.0.0 
  │ │   ├── require-directory@2.1.1 
  │ │   ├── require-main-filename@1.0.1 
  │ │   ├── which-module@1.0.0 
  │ │   ├── y18n@3.2.1 
  │ │   └─┬ yargs-parser@5.0.0 
  │ │     └── camelcase@3.0.0 
  │ └── stdout-stream@1.4.0 
  ├── object-assign@4.1.1 
  ├─┬ postcss@5.2.17 
  │ ├── js-base64@2.3.2 
  │ ├── source-map@0.5.7 
  │ └─┬ supports-color@3.2.3 
  │   └── has-flag@1.0.0 
  ├─┬ pretty@1.0.0 
  │ └─┬ js-beautify@1.5.10 
  │   └─┬ config-chain@1.1.11 
  │     └── proto-list@1.2.4 
  ├─┬ pug@2.0.0-rc.4 
  │ ├─┬ pug-code-gen@2.0.0 
  │ │ ├─┬ constantinople@3.1.0 
  │ │ │ ├── acorn@3.3.0 
  │ │ │ └─┬ is-expression@2.1.0 
  │ │ │   └── acorn@3.3.0 
  │ │ ├── doctypes@1.1.0 
  │ │ ├── js-stringify@1.0.2 
  │ │ ├── pug-attrs@2.0.2 
  │ │ ├── pug-error@1.3.2 
  │ │ ├── void-elements@2.0.1 
  │ │ └─┬ with@5.1.1 
  │ │   ├── acorn@3.3.0 
  │ │   └── acorn-globals@3.1.0 
  │ ├─┬ pug-filters@2.1.5 
  │ │ ├─┬ jstransformer@1.0.0 
  │ │ │ ├── is-promise@2.1.0 
  │ │ │ └─┬ promise@7.3.1 
  │ │ │   └── asap@2.0.6 
  │ │ └── pug-walk@1.1.5 
  │ ├─┬ pug-lexer@3.1.0 
  │ │ ├─┬ character-parser@2.2.0 
  │ │ │ └── is-regex@1.0.4 
  │ │ └── is-expression@3.0.0 
  │ ├── pug-linker@3.0.3 
  │ ├── pug-load@2.0.9 
  │ ├─┬ pug-parser@4.0.0 
  │ │ └── token-stream@0.0.1 
  │ ├── pug-runtime@2.0.3 
  │ └── pug-strip-comments@1.0.2 
  ├─┬ recursive-readdir@2.2.1 
  │ └─┬ minimatch@3.0.3 
  │   └─┬ brace-expansion@1.1.8 
  │     ├── balanced-match@1.0.0 
  │     └── concat-map@0.0.1 
  ├─┬ rimraf@2.6.2 
  │ └─┬ glob@7.1.2 
  │   └── minimatch@3.0.4 
  ├─┬ serve-static@1.12.4 
  │ └─┬ send@0.15.4 
  │   ├── depd@1.1.1 
  │   ├── destroy@1.0.4 
  │   ├── etag@1.8.1 
  │   ├── fresh@0.5.0 
  │   ├─┬ http-errors@1.6.2 
  │   │ └── setprototypeof@1.0.3 
  │   ├── mime@1.3.4 
  │   └── range-parser@1.2.0 
  ├─┬ slug@0.9.1 
  │ └── unicode@10.0.0 
  ├─┬ to-sentence-case@1.0.0 
  │ └── to-no-case@1.0.2 
  ├─┬ uglifyify@3.0.4 
  │ ├── convert-source-map@1.1.3 
  │ ├── extend@1.3.0 
  │ ├── minimatch@3.0.4 
  │ ├── through@2.3.8 
  │ └─┬ uglify-js@2.8.29 
  │   ├── uglify-to-browserify@1.0.2 
  │   └─┬ yargs@3.10.0 
  │     ├── camelcase@1.2.1 
  │     ├─┬ cliui@2.1.0 
  │     │ ├─┬ center-align@0.1.3 
  │     │ │ ├─┬ align-text@0.1.4 
  │     │ │ │ ├── kind-of@3.2.2 
  │     │ │ │ ├── longest@1.0.1 
  │     │ │ │ └── repeat-string@1.6.1 
  │     │ │ └── lazy-cache@1.0.4 
  │     │ ├── right-align@0.1.3 
  │     │ └── wordwrap@0.0.2 
  │     └── window-size@0.1.0 
  └── vanilla-lazyload@5.1.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/design-manual/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 32% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","getOwnPropertyNames","fromCharCode","join","assign","call","RegExp","bind","defineProperties","create","setPrototypeOf","charCodeAt","sort","parseFloat","reduce"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.1146 took 126.2437s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: 'return' outside of function (32:2) on program // Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


var isWindows = process.platform === 'win32';
var util = require('util');

var _path = require('path');

// we are new enough we already have this from the system, just export the
// system then
if (_path.posix) {
  module.exports = _path;
  return;
}

// resolves . and .. elements in a path array with directory names there
// must be no slashes or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  var res = [];
  for (var i = 0; i < parts.length; i++) {
    var p = parts[i];

    // ignore empty parts
    if (!p || p === '.')
      continue;

    if (p === '..') {
      if (res.length && res[res.length - 1] !== '..') {
        res.pop();
      } else if (allowAboveRoot) {
        res.push('..');
      }
    } else {
      res.push(p);
    }
  }

  return res;
}

// Regex to split a windows path into three parts: [*, device, slash,
// tail] windows-only
var splitDeviceRe =
    /^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?([\\\/])?([\s\S]*?)$/;

// Regex to split the tail part of the above into [*, dir, basename, ext]
var splitTailRe =
    /^([\s\S]*?)((?:\.{1,2}|[^\\\/]+?|)(\.[^.\/\\]*|))(?:[\\\/]*)$/;

var win32 = {};

// Function to split a filename into [root, dir, basename, ext]
function win32SplitPath(filename) {
  // Separate device+slash from tail
  var result = splitDeviceRe.exec(filename),
      device = (result[1] || '') + (result[2] || ''),
      tail = result[3] || '';
  // Split the tail into dir, basename and extension
  var result2 = splitTailRe.exec(tail),
      dir = result2[1],
      basename = result2[2],
      ext = result2[3];
  return [device, dir, basename, ext];
}

var normalizeUNCRoot = function(device) {
  return '\\\\' + device.replace(/^[\\\/]+/, '').replace(/[\\\/]+/g, '\\');
};

// path.resolve([from ...], to)
win32.resolve = function() {
  var resolvedDevice = '',
      resolvedTail = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1; i--) {
    var path;
    if (i >= 0) {
      path = arguments[i];
    } else if (!resolvedDevice) {
      path = process.cwd();
    } else {
      // Windows has the concept of drive-specific current working
      // directories. If we've resolved a drive letter but not yet an
      // absolute path, get cwd for that drive. We're sure the device is not
      // an unc path at this points, because unc paths are always absolute.
      path = process.env['=' + resolvedDevice];
      // Verify that a drive-local cwd was found and that it actually points
      // to our drive. If not, default to the drive's root.
      if (!path || path.substr(0, 3).toLowerCase() !==
          resolvedDevice.toLowerCase() + '\\') {
        path = resolvedDevice + '\\';
      }
    }

    // Skip empty and invalid entries
    if (!util.isString(path)) {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    var result = splitDeviceRe.exec(path),
        device = result[1] || '',
        isUnc = device && device.charAt(1) !== ':',
        isAbsolute = win32.isAbsolute(path),
        tail = result[3];

    if (device &&
        resolvedDevice &&
        device.toLowerCase() !== resolvedDevice.toLowerCase()) {
      // This path points to another device so it is not applicable
      continue;
    }

    if (!resolvedDevice) {
      resolvedDevice = device;
    }
    if (!resolvedAbsolute) {
      resolvedTail = tail + '\\' + resolvedTail;
      resolvedAbsolute = isAbsolute;
    }

    if (resolvedDevice && resolvedAbsolute) {
      break;
    }
  }

  // Convert slashes to backslashes when `resolvedDevice` points to an UNC
  // root. Also squash multiple slashes into a single one where appropriate.
  if (isUnc) {
    resolvedDevice = normalizeUNCRoot(resolvedDevice);
  }

  // At this point the path should be resolved to a full absolute path,
  // but handle relative paths to be safe (might happen when process.cwd()
  // fails)

  // Normalize the tail path
  resolvedTail = normalizeArray(resolvedTail.split(/[\\\/]+/),
                                !resolvedAbsolute).join('\\');

  // If device is a drive letter, we'll normalize to lower case.
  if (resolvedDevice && resolvedDevice.charAt(1) === ':') {
    resolvedDevice = resolvedDevice[0].toLowerCase() +
        resolvedDevice.substr(1);
  }

  return (resolvedDevice + (resolvedAbsolute ? '\\' : '') + resolvedTail) ||
         '.';
};


win32.normalize = function(path) {
  var result = splitDeviceRe.exec(path),
      device = result[1] || '',
      isUnc = device && device.charAt(1) !== ':',
      isAbsolute = win32.isAbsolute(path),
      tail = result[3],
      trailingSlash = /[\\\/]$/.test(tail);

  // If device is a drive letter, we'll normalize to lower case.
  if (device && device.charAt(1) === ':') {
    device = device[0].toLowerCase() + device.substr(1);
  }

  // Normalize the tail path
  tail = normalizeArray(tail.split(/[\\\/]+/), !isAbsolute).join('\\');

  if (!tail && !isAbsolute) {
    tail = '.';
  }
  if (tail && trailingSlash) {
    tail += '\\';
  }

  // Convert slashes to backslashes when `device` points to an UNC root.
  // Also squash multiple slashes into a single one where appropriate.
  if (isUnc) {
    device = normalizeUNCRoot(device);
  }

  return device + (isAbsolute ? '\\' : '') + tail;
};


win32.isAbsolute = function(path) {
  var result = splitDeviceRe.exec(path),
      device = result[1] || '',
      isUnc = !!device && device.charAt(1) !== ':';
  // UNC paths are always absolute
  return !!result[2] || isUnc;
};

win32.join = function() {
  function f(p) {
    if (!util.isString(p)) {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }

  var paths = Array.prototype.filter.call(arguments, f);
  var joined = paths.join('\\');

  // Make sure that the joined path doesn't start with two slashes, because
  // normalize() will mistake it for an UNC path then.
  //
  // This step is skipped when it is very clear that the user actually
  // intended to point at an UNC path. This is assumed when the first
  // non-empty string arguments starts with exactly two slashes followed by
  // at least one more non-slash character.
  //
  // Note that for normalize() to treat a path as an UNC path it needs to
  // have at least 2 components, so we don't filter for that here.
  // This means that the user can use join to construct UNC paths from
  // a server name and a share name; for example:
  //   path.join('//server', 'share') -> '\\\\server\\share\')
  if (!/^[\\\/]{2}[^\\\/]/.test(paths[0])) {
    joined = joined.replace(/^[\\\/]{2,}/, '\\');
  }

  return win32.normalize(joined);
};


// path.relative(from, to)
// it will solve the relative path from 'from' to 'to', for instance:
// from = 'C:\\orandea\\test\\aaa'
// to = 'C:\\orandea\\impl\\bbb'
// The output of the function should be: '..\\..\\impl\\bbb'
win32.relative = function(from, to) {
  from = win32.resolve(from);
  to = win32.resolve(to);

  // windows is not case sensitive
  var lowerFrom = from.toLowerCase();
  var lowerTo = to.toLowerCase();

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end + 1);
  }

  var toParts = trim(to.split('\\'));

  var lowerFromParts = trim(lowerFrom.split('\\'));
  var lowerToParts = trim(lowerTo.split('\\'));

  var length = Math.min(lowerFromParts.length, lowerToParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (lowerFromParts[i] !== lowerToParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  if (samePartsLength == 0) {
    return to;
  }

  var outputParts = [];
  for (var i = samePartsLength; i < lowerFromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('\\');
};


win32._makeLong = function(path) {
  // Note: this will *probably* throw somewhere.
  if (!util.isString(path))
    return path;

  if (!path) {
    return '';
  }

  var resolvedPath = win32.resolve(path);

  if (/^[a-zA-Z]\:\\/.test(resolvedPath)) {
    // path is local filesystem path, which needs to be converted
    // to long UNC path.
    return '\\\\?\\' + resolvedPath;
  } else if (/^\\\\[^?.]/.test(resolvedPath)) {
    // path is network UNC path, which needs to be converted
    // to long UNC path.
    return '\\\\?\\UNC\\' + resolvedPath.substring(2);
  }

  return path;
};


win32.dirname = function(path) {
  var result = win32SplitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


win32.basename = function(path, ext) {
  var f = win32SplitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


win32.extname = function(path) {
  return win32SplitPath(path)[3];
};


win32.format = function(pathObject) {
  if (!util.isObject(pathObject)) {
    throw new TypeError(
        "Parameter 'pathObject' must be an object, not " + typeof pathObject
    );
  }

  var root = pathObject.root || '';

  if (!util.isString(root)) {
    throw new TypeError(
        "'pathObject.root' must be a string or undefined, not " +
        typeof pathObject.root
    );
  }

  var dir = pathObject.dir;
  var base = pathObject.base || '';
  if (dir.slice(dir.length - 1, dir.length) === win32.sep) {
    return dir + base;
  }

  if (dir) {
    return dir + win32.sep + base;
  }

  return base;
};


win32.parse = function(pathString) {
  if (!util.isString(pathString)) {
    throw new TypeError(
        "Parameter 'pathString' must be a string, not " + typeof pathString
    );
  }
  var allParts = win32SplitPath(pathString);
  if (!allParts || allParts.length !== 4) {
    throw new TypeError("Invalid path '" + pathString + "'");
  }
  return {
    root: allParts[0],
    dir: allParts[0] + allParts[1].slice(0, allParts[1].length - 1),
    base: allParts[2],
    ext: allParts[3],
    name: allParts[2].slice(0, allParts[2].length - allParts[3].length)
  };
};


win32.sep = '\\';
win32.delimiter = ';';


// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var posix = {};


function posixSplitPath(filename) {
  return splitPathRe.exec(filename).slice(1);
}


// path.resolve([from ...], to)
// posix version
posix.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (!util.isString(path)) {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(resolvedPath.split('/'),
                                !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
posix.normalize = function(path) {
  var isAbsolute = posix.isAbsolute(path),
      trailingSlash = path.substr(-1) === '/';

  // Normalize the path
  path = normalizeArray(path.split('/'), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
posix.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
posix.join = function() {
  var path = '';
  for (var i = 0; i < arguments.length; i++) {
    var segment = arguments[i];
    if (!util.isString(segment)) {
      throw new TypeError('Arguments to path.join must be strings');
    }
    if (segment) {
      if (!path) {
        path += segment;
      } else {
        path += '/' + segment;
      }
    }
  }
  return posix.normalize(path);
};


// path.relative(from, to)
// posix version
posix.relative = function(from, to) {
  from = posix.resolve(from).substr(1);
  to = posix.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};


posix._makeLong = function(path) {
  return path;
};


posix.dirname = function(path) {
  var result = posixSplitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


posix.basename = function(path, ext) {
  var f = posixSplitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


posix.extname = function(path) {
  return posixSplitPath(path)[3];
};


posix.format = function(pathObject) {
  if (!util.isObject(pathObject)) {
    throw new TypeError(
        "Parameter 'pathObject' must be an object, not " + typeof pathObject
    );
  }

  var root = pathObject.root || '';

  if (!util.isString(root)) {
    throw new TypeError(
        "'pathObject.root' must be a string or undefined, not " +
        typeof pathObject.root
    );
  }

  var dir = pathObject.dir ? pathObject.dir + posix.sep : '';
  var base = pathObject.base || '';
  return dir + base;
};


posix.parse = function(pathString) {
  if (!util.isString(pathString)) {
    throw new TypeError(
        "Parameter 'pathString' must be a string, not " + typeof pathString
    );
  }
  var allParts = posixSplitPath(pathString);
  if (!allParts || allParts.length !== 4) {
    throw new TypeError("Invalid path '" + pathString + "'");
  }
  allParts[1] = allParts[1] || '';
  allParts[2] = allParts[2] || '';
  allParts[3] = allParts[3] || '';

  return {
    root: allParts[0],
    dir: allParts[0] + allParts[1].slice(0, allParts[1].length - 1),
    base: allParts[2],
    ext: allParts[3],
    name: allParts[2].slice(0, allParts[2].length - allParts[3].length)
  };
};


posix.sep = '/';
posix.delimiter = ':';


if (isWindows)
  module.exports = win32;
else /* posix */
  module.exports = posix;

module.exports.posix = posix;
module.exports.win32 = win32;
 at SyntaxError: 'return' outside of function (32:2)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$1.parseReturnStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:831:12)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:699:34)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:698:30)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/design-manual/node_modules/design-manual/index.js. Coverage (Term): 28% Coverage (LOC): 20%
*- File /root/Targets/design-manual/node_modules/object-assign/index.js. Coverage (Term): 54% Coverage (LOC): 53%
*- File /root/Targets/design-manual/node_modules/design-manual/lib/generate.js. Coverage (Term): 4% Coverage (LOC): 7%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/autoprefixer.js. Coverage (Term): 21% Coverage (LOC): 27%
*- File /root/Targets/design-manual/node_modules/browserslist/index.js. Coverage (Term): 16% Coverage (LOC): 31%
*- File /root/Targets/design-manual/node_modules/electron-to-chromium/versions.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/design-manual/node_modules/postcss/lib/postcss.js. Coverage (Term): 57% Coverage (LOC): 73%
*- File /root/Targets/design-manual/node_modules/postcss/lib/declaration.js. Coverage (Term): 57% Coverage (LOC): 74%
*- File /root/Targets/design-manual/node_modules/postcss/lib/warn-once.js. Coverage (Term): 52% Coverage (LOC): 62%
*- File /root/Targets/design-manual/node_modules/postcss/lib/node.js. Coverage (Term): 21% Coverage (LOC): 35%
*- File /root/Targets/design-manual/node_modules/postcss/lib/css-syntax-error.js. Coverage (Term): 33% Coverage (LOC): 40%
*- File /root/Targets/design-manual/node_modules/supports-color/index.js. Coverage (Term): 49% Coverage (LOC): 40%
*- File /root/Targets/design-manual/node_modules/has-flag/index.js. Coverage (Term): 83% Coverage (LOC): 100%
*- File /root/Targets/design-manual/node_modules/chalk/index.js. Coverage (Term): 55% Coverage (LOC): 64%
*- File /root/Targets/design-manual/node_modules/escape-string-regexp/index.js. Coverage (Term): 85% Coverage (LOC): 90%
*- File /root/Targets/design-manual/node_modules/ansi-styles/index.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/design-manual/node_modules/strip-ansi/index.js. Coverage (Term): 57% Coverage (LOC): 86%
*- File /root/Targets/design-manual/node_modules/ansi-regex/index.js. Coverage (Term): 93% Coverage (LOC): 100%
*- File /root/Targets/design-manual/node_modules/has-ansi/index.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/design-manual/node_modules/chalk/node_modules/supports-color/index.js. Coverage (Term): 63% Coverage (LOC): 56%
*- File /root/Targets/design-manual/node_modules/postcss/lib/terminal-highlight.js. Coverage (Term): 46% Coverage (LOC): 58%
*- File /root/Targets/design-manual/node_modules/postcss/lib/tokenize.js. Coverage (Term): 10% Coverage (LOC): 10%
*- File /root/Targets/design-manual/node_modules/postcss/lib/input.js. Coverage (Term): 35% Coverage (LOC): 41%
*- File /root/Targets/design-manual/node_modules/postcss/lib/previous-map.js. Coverage (Term): 22% Coverage (LOC): 33%
*- File /root/Targets/design-manual/node_modules/js-base64/base64.js. Coverage (Term): 24% Coverage (LOC): 46%
*- File /root/Targets/design-manual/node_modules/source-map/source-map.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/design-manual/node_modules/source-map/lib/source-map-generator.js. Coverage (Term): 8% Coverage (LOC): 11%
*- File /root/Targets/design-manual/node_modules/source-map/lib/base64-vlq.js. Coverage (Term): 20% Coverage (LOC): 30%
*- File /root/Targets/design-manual/node_modules/source-map/lib/base64.js. Coverage (Term): 17% Coverage (LOC): 19%
*- File /root/Targets/design-manual/node_modules/source-map/lib/util.js. Coverage (Term): 11% Coverage (LOC): 14%
*- File /root/Targets/design-manual/node_modules/source-map/lib/array-set.js. Coverage (Term): 20% Coverage (LOC): 34%
*- File /root/Targets/design-manual/node_modules/source-map/lib/mapping-list.js. Coverage (Term): 23% Coverage (LOC): 34%
*- File /root/Targets/design-manual/node_modules/source-map/lib/source-map-consumer.js. Coverage (Term): 9% Coverage (LOC): 15%
*- File /root/Targets/design-manual/node_modules/source-map/lib/binary-search.js. Coverage (Term): 12% Coverage (LOC): 18%
*- File /root/Targets/design-manual/node_modules/source-map/lib/quick-sort.js. Coverage (Term): 12% Coverage (LOC): 25%
*- File /root/Targets/design-manual/node_modules/source-map/lib/source-node.js. Coverage (Term): 8% Coverage (LOC): 12%
*- File /root/Targets/design-manual/node_modules/postcss/lib/stringifier.js. Coverage (Term): 11% Coverage (LOC): 21%
*- File /root/Targets/design-manual/node_modules/postcss/lib/stringify.js. Coverage (Term): 74% Coverage (LOC): 85%
*- File /root/Targets/design-manual/node_modules/postcss/lib/processor.js. Coverage (Term): 25% Coverage (LOC): 39%
*- File /root/Targets/design-manual/node_modules/postcss/lib/lazy-result.js. Coverage (Term): 24% Coverage (LOC): 36%
*- File /root/Targets/design-manual/node_modules/postcss/lib/map-generator.js. Coverage (Term): 13% Coverage (LOC): 18%
*- File /root/Targets/design-manual/node_modules/postcss/lib/result.js. Coverage (Term): 51% Coverage (LOC): 63%
*- File /root/Targets/design-manual/node_modules/postcss/lib/warning.js. Coverage (Term): 26% Coverage (LOC): 32%
*- File /root/Targets/design-manual/node_modules/postcss/lib/parse.js. Coverage (Term): 39% Coverage (LOC): 41%
*- File /root/Targets/design-manual/node_modules/postcss/lib/parser.js. Coverage (Term): 11% Coverage (LOC): 17%
*- File /root/Targets/design-manual/node_modules/postcss/lib/comment.js. Coverage (Term): 57% Coverage (LOC): 74%
*- File /root/Targets/design-manual/node_modules/postcss/lib/at-rule.js. Coverage (Term): 45% Coverage (LOC): 65%
*- File /root/Targets/design-manual/node_modules/postcss/lib/container.js. Coverage (Term): 15% Coverage (LOC): 24%
*- File /root/Targets/design-manual/node_modules/postcss/lib/root.js. Coverage (Term): 31% Coverage (LOC): 44%
*- File /root/Targets/design-manual/node_modules/postcss/lib/rule.js. Coverage (Term): 54% Coverage (LOC): 73%
*- File /root/Targets/design-manual/node_modules/postcss/lib/list.js. Coverage (Term): 14% Coverage (LOC): 18%
*- File /root/Targets/design-manual/node_modules/postcss/lib/vendor.js. Coverage (Term): 48% Coverage (LOC): 60%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/browsers.js. Coverage (Term): 21% Coverage (LOC): 32%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/utils.js. Coverage (Term): 16% Coverage (LOC): 28%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/prefixes.js. Coverage (Term): 24% Coverage (LOC): 27%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/declaration.js. Coverage (Term): 24% Coverage (LOC): 37%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/prefixer.js. Coverage (Term): 25% Coverage (LOC): 33%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/resolution.js. Coverage (Term): 28% Coverage (LOC): 40%
*- File /root/Targets/design-manual/node_modules/num2fraction/index.js. Coverage (Term): 21% Coverage (LOC): 33%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/transition.js. Coverage (Term): 9% Coverage (LOC): 16%
*- File /root/Targets/design-manual/node_modules/postcss-value-parser/lib/index.js. Coverage (Term): 51% Coverage (LOC): 64%
*- File /root/Targets/design-manual/node_modules/postcss-value-parser/lib/parse.js. Coverage (Term): 9% Coverage (LOC): 7%
*- File /root/Targets/design-manual/node_modules/postcss-value-parser/lib/walk.js. Coverage (Term): 18% Coverage (LOC): 25%
*- File /root/Targets/design-manual/node_modules/postcss-value-parser/lib/stringify.js. Coverage (Term): 9% Coverage (LOC): 15%
*- File /root/Targets/design-manual/node_modules/postcss-value-parser/lib/unit.js. Coverage (Term): 25% Coverage (LOC): 21%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/processor.js. Coverage (Term): 7% Coverage (LOC): 13%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/value.js. Coverage (Term): 33% Coverage (LOC): 43%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/old-value.js. Coverage (Term): 40% Coverage (LOC): 50%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/supports.js. Coverage (Term): 16% Coverage (LOC): 27%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/brackets.js. Coverage (Term): 17% Coverage (LOC): 24%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/selector.js. Coverage (Term): 33% Coverage (LOC): 43%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/old-selector.js. Coverage (Term): 15% Coverage (LOC): 19%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/at-rule.js. Coverage (Term): 46% Coverage (LOC): 55%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/fullscreen.js. Coverage (Term): 72% Coverage (LOC): 77%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/placeholder.js. Coverage (Term): 64% Coverage (LOC): 74%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/flex.js. Coverage (Term): 46% Coverage (LOC): 64%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/flex-spec.js. Coverage (Term): 35% Coverage (LOC): 42%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/order.js. Coverage (Term): 51% Coverage (LOC): 68%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/filter.js. Coverage (Term): 69% Coverage (LOC): 88%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/grid-end.js. Coverage (Term): 57% Coverage (LOC): 76%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/flex-flow.js. Coverage (Term): 35% Coverage (LOC): 45%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/flex-grow.js. Coverage (Term): 63% Coverage (LOC): 76%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/flex-wrap.js. Coverage (Term): 73% Coverage (LOC): 83%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/grid-start.js. Coverage (Term): 42% Coverage (LOC): 58%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/align-self.js. Coverage (Term): 54% Coverage (LOC): 71%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/flex-basis.js. Coverage (Term): 56% Coverage (LOC): 74%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/mask-border.js. Coverage (Term): 69% Coverage (LOC): 86%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/align-items.js. Coverage (Term): 53% Coverage (LOC): 71%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/flex-shrink.js. Coverage (Term): 56% Coverage (LOC): 74%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/break-props.js. Coverage (Term): 45% Coverage (LOC): 61%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/writing-mode.js. Coverage (Term): 68% Coverage (LOC): 82%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/border-image.js. Coverage (Term): 74% Coverage (LOC): 88%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/justify-items.js. Coverage (Term): 75% Coverage (LOC): 90%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/align-content.js. Coverage (Term): 54% Coverage (LOC): 73%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/border-radius.js. Coverage (Term): 80% Coverage (LOC): 88%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/block-logical.js. Coverage (Term): 65% Coverage (LOC): 86%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/grid-template.js. Coverage (Term): 40% Coverage (LOC): 51%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/inline-logical.js. Coverage (Term): 75% Coverage (LOC): 93%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/grid-row-align.js. Coverage (Term): 70% Coverage (LOC): 87%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/transform-decl.js. Coverage (Term): 42% Coverage (LOC): 55%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/flex-direction.js. Coverage (Term): 35% Coverage (LOC): 47%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/image-rendering.js. Coverage (Term): 57% Coverage (LOC): 71%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/justify-content.js. Coverage (Term): 50% Coverage (LOC): 67%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/background-size.js. Coverage (Term): 63% Coverage (LOC): 79%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/text-emphasis-position.js. Coverage (Term): 68% Coverage (LOC): 79%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/stretch.js. Coverage (Term): 58% Coverage (LOC): 70%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/gradient.js. Coverage (Term): 15% Coverage (LOC): 27%
*- File /root/Targets/design-manual/node_modules/normalize-range/index.js. Coverage (Term): 15% Coverage (LOC): 47%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/pixelated.js. Coverage (Term): 57% Coverage (LOC): 67%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/image-set.js. Coverage (Term): 71% Coverage (LOC): 83%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/cross-fade.js. Coverage (Term): 46% Coverage (LOC): 58%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/flex-values.js. Coverage (Term): 67% Coverage (LOC): 89%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/display-flex.js. Coverage (Term): 52% Coverage (LOC): 74%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/display-grid.js. Coverage (Term): 75% Coverage (LOC): 85%
*- File /root/Targets/design-manual/node_modules/autoprefixer/lib/hacks/filter-value.js. Coverage (Term): 47% Coverage (LOC): 60%
*- File /root/Targets/design-manual/node_modules/autoprefixer/data/prefixes.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/design-manual/node_modules/browserify/index.js. Coverage (Term): 1% Coverage (LOC): 1%
*- File /root/Targets/design-manual/node_modules/module-deps/index.js. Coverage (Term): 3% Coverage (LOC): 3%
*- File /root/Targets/design-manual/node_modules/browser-resolve/index.js. Coverage (Term): 5% Coverage (LOC): 8%
*- File /root/Targets/design-manual/node_modules/browser-resolve/node_modules/resolve/index.js. Coverage (Term): 78% Coverage (LOC): 89%
*- File /root/Targets/design-manual/node_modules/browser-resolve/node_modules/resolve/lib/core.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/design-manual/node_modules/browser-resolve/node_modules/resolve/lib/async.js. Coverage (Term): 5% Coverage (LOC): 6%
*- File /root/Targets/design-manual/node_modules/browser-resolve/node_modules/resolve/lib/caller.js. Coverage (Term): 30% Coverage (LOC): 36%
*- File /root/Targets/design-manual/node_modules/browser-resolve/node_modules/resolve/lib/node-modules-paths.js. Coverage (Term): 12% Coverage (LOC): 19%
*- File /root/Targets/design-manual/node_modules/browser-resolve/node_modules/resolve/lib/sync.js. Coverage (Term): 11% Coverage (LOC): 12%
*- File /root/Targets/design-manual/node_modules/resolve/index.js. Coverage (Term): 79% Coverage (LOC): 91%
*- File /root/Targets/design-manual/node_modules/resolve/lib/core.js. Coverage (Term): 92% Coverage (LOC): 95%
*- File /root/Targets/design-manual/node_modules/resolve/lib/async.js. Coverage (Term): 4% Coverage (LOC): 5%
*- File /root/Targets/design-manual/node_modules/resolve/lib/caller.js. Coverage (Term): 30% Coverage (LOC): 36%
*- File /root/Targets/design-manual/node_modules/resolve/lib/node-modules-paths.js. Coverage (Term): 18% Coverage (LOC): 21%
*- File /root/Targets/design-manual/node_modules/resolve/lib/sync.js. Coverage (Term): 10% Coverage (LOC): 11%
*- File /root/Targets/design-manual/node_modules/detective/index.js. Coverage (Term): 14% Coverage (LOC): 17%
*- File /root/Targets/design-manual/node_modules/acorn/dist/acorn.js. Coverage (Term): 13% Coverage (LOC): 35%
*- File /root/Targets/design-manual/node_modules/acorn/dist/walk.js. Coverage (Term): 17% Coverage (LOC): 37%
*- File /root/Targets/design-manual/node_modules/defined/index.js. Coverage (Term): 35% Coverage (LOC): 50%
*- File /root/Targets/design-manual/node_modules/through2/through2.js. Coverage (Term): 24% Coverage (LOC): 26%
*- File /root/Targets/design-manual/node_modules/through2/node_modules/readable-stream/transform.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/design-manual/node_modules/through2/node_modules/readable-stream/lib/_stream_transform.js. Coverage (Term): 15% Coverage (LOC): 23%
*- File /root/Targets/design-manual/node_modules/through2/node_modules/readable-stream/lib/_stream_duplex.js. Coverage (Term): 49% Coverage (LOC): 51%
*- File /root/Targets/design-manual/node_modules/core-util-is/lib/util.js. Coverage (Term): 33% Coverage (LOC): 64%
*- File /root/Targets/design-manual/node_modules/inherits/inherits.js. Coverage (Term): 74% Coverage (LOC): 88%
*- File /root/Targets/design-manual/node_modules/through2/node_modules/readable-stream/lib/_stream_readable.js. Coverage (Term): 7% Coverage (LOC): 11%
*- File /root/Targets/design-manual/node_modules/isarray/index.js. Coverage (Term): 53% Coverage (LOC): 80%
*- File /root/Targets/design-manual/node_modules/through2/node_modules/readable-stream/lib/_stream_writable.js. Coverage (Term): 9% Coverage (LOC): 16%
*- File /root/Targets/design-manual/node_modules/xtend/immutable.js. Coverage (Term): 32% Coverage (LOC): 33%
*- File /root/Targets/design-manual/node_modules/concat-stream/index.js. Coverage (Term): 11% Coverage (LOC): 18%
*- File /root/Targets/design-manual/node_modules/concat-stream/node_modules/readable-stream/readable.js. Coverage (Term): 90% Coverage (LOC): 92%
*- File /root/Targets/design-manual/node_modules/concat-stream/node_modules/readable-stream/lib/_stream_readable.js. Coverage (Term): 7% Coverage (LOC): 11%
*- File /root/Targets/design-manual/node_modules/concat-stream/node_modules/readable-stream/lib/_stream_writable.js. Coverage (Term): 9% Coverage (LOC): 16%
*- File /root/Targets/design-manual/node_modules/concat-stream/node_modules/readable-stream/lib/_stream_duplex.js. Coverage (Term): 49% Coverage (LOC): 51%
*- File /root/Targets/design-manual/node_modules/concat-stream/node_modules/readable-stream/lib/_stream_transform.js. Coverage (Term): 15% Coverage (LOC): 23%
*- File /root/Targets/design-manual/node_modules/concat-stream/node_modules/readable-stream/lib/_stream_passthrough.js. Coverage (Term): 58% Coverage (LOC): 71%
*- File /root/Targets/design-manual/node_modules/parents/index.js. Coverage (Term): 6% Coverage (LOC): 11%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
