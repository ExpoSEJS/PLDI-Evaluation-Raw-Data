
> phantomjs@1.9.20 install /root/Targets/grunt-monkeytestjs/node_modules/phantomjs
> node install.js

PhantomJS not found on PATH
Downloading https://github.com/Medium/phantomjs/releases/download/v1.9.19/phantomjs-1.9.8-linux-x86_64.tar.bz2
Saving to /root/Targets/grunt-monkeytestjs/node_modules/phantomjs/phantomjs/phantomjs-1.9.8-linux-x86_64.tar.bz2
Receiving...

Received 12854K total.
Extracting tar contents (via spawned process)
Removing /root/Targets/grunt-monkeytestjs/node_modules/phantomjs/lib/phantom
Copying extracted folder /root/Targets/grunt-monkeytestjs/node_modules/phantomjs/phantomjs/phantomjs-1.9.8-linux-x86_64.tar.bz2-extract-1506541525093/phantomjs-1.9.8-linux-x86_64 -> /root/Targets/grunt-monkeytestjs/node_modules/phantomjs/lib/phantom
Writing location.js file
Done. Phantomjs binary available at /root/Targets/grunt-monkeytestjs/node_modules/phantomjs/lib/phantom/bin/phantomjs
/root/Targets/grunt-monkeytestjs
├── UNMET PEER DEPENDENCY grunt@~0.4.0
└─┬ grunt-monkeytestjs@0.0.10 
  ├─┬ grunt-lib-phantomjs@0.7.1 
  │ ├── eventemitter2@0.4.14 
  │ ├─┬ phantomjs@1.9.20 
  │ │ ├─┬ extract-zip@1.5.0 
  │ │ │ ├─┬ concat-stream@1.5.0 
  │ │ │ │ ├── inherits@2.0.3 
  │ │ │ │ ├─┬ readable-stream@2.0.6 
  │ │ │ │ │ ├── core-util-is@1.0.2 
  │ │ │ │ │ ├── isarray@1.0.0 
  │ │ │ │ │ ├── process-nextick-args@1.0.7 
  │ │ │ │ │ ├── string_decoder@0.10.31 
  │ │ │ │ │ └── util-deprecate@1.0.2 
  │ │ │ │ └── typedarray@0.0.6 
  │ │ │ ├── debug@0.7.4 
  │ │ │ ├─┬ mkdirp@0.5.0 
  │ │ │ │ └── minimist@0.0.8 
  │ │ │ └─┬ yauzl@2.4.1 
  │ │ │   └─┬ fd-slicer@1.0.1 
  │ │ │     └── pend@1.2.0 
  │ │ ├─┬ fs-extra@0.26.7 
  │ │ │ ├── graceful-fs@4.1.11 
  │ │ │ ├── jsonfile@2.4.0 
  │ │ │ ├── klaw@1.3.1 
  │ │ │ ├── path-is-absolute@1.0.1 
  │ │ │ └─┬ rimraf@2.6.2 
  │ │ │   └─┬ glob@7.1.2 
  │ │ │     ├── fs.realpath@1.0.0 
  │ │ │     ├─┬ inflight@1.0.6 
  │ │ │     │ └── wrappy@1.0.2 
  │ │ │     ├─┬ minimatch@3.0.4 
  │ │ │     │ └─┬ brace-expansion@1.1.8 
  │ │ │     │   ├── balanced-match@1.0.0 
  │ │ │     │   └── concat-map@0.0.1 
  │ │ │     └── once@1.4.0 
  │ │ ├─┬ hasha@2.2.0 
  │ │ │ ├── is-stream@1.1.0 
  │ │ │ └─┬ pinkie-promise@2.0.1 
  │ │ │   └── pinkie@2.0.4 
  │ │ ├── kew@0.7.0 
  │ │ ├── progress@1.1.8 
  │ │ ├─┬ request@2.67.0 
  │ │ │ ├── aws-sign2@0.6.0 
  │ │ │ ├── bl@1.0.3 
  │ │ │ ├── caseless@0.11.0 
  │ │ │ ├─┬ combined-stream@1.0.5 
  │ │ │ │ └── delayed-stream@1.0.0 
  │ │ │ ├── extend@3.0.1 
  │ │ │ ├── forever-agent@0.6.1 
  │ │ │ ├─┬ form-data@1.0.1 
  │ │ │ │ └─┬ async@2.5.0 
  │ │ │ │   └── lodash@4.17.4 
  │ │ │ ├─┬ har-validator@2.0.6 
  │ │ │ │ ├─┬ chalk@1.1.3 
  │ │ │ │ │ ├── ansi-styles@2.2.1 
  │ │ │ │ │ ├── escape-string-regexp@1.0.5 
  │ │ │ │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ │ │ │ └── ansi-regex@2.1.1 
  │ │ │ │ │ ├── strip-ansi@3.0.1 
  │ │ │ │ │ └── supports-color@2.0.0 
  │ │ │ │ ├── commander@2.11.0 
  │ │ │ │ └─┬ is-my-json-valid@2.16.1 
  │ │ │ │   ├── generate-function@2.0.0 
  │ │ │ │   ├─┬ generate-object-property@1.2.0 
  │ │ │ │   │ └── is-property@1.0.2 
  │ │ │ │   ├── jsonpointer@4.0.1 
  │ │ │ │   └── xtend@4.0.1 
  │ │ │ ├─┬ hawk@3.1.3 
  │ │ │ │ ├── boom@2.10.1 
  │ │ │ │ ├── cryptiles@2.0.5 
  │ │ │ │ ├── hoek@2.16.3 
  │ │ │ │ └── sntp@1.0.9 
  │ │ │ ├─┬ http-signature@1.1.1 
  │ │ │ │ ├── assert-plus@0.2.0 
  │ │ │ │ ├─┬ jsprim@1.4.1 
  │ │ │ │ │ ├── assert-plus@1.0.0 
  │ │ │ │ │ ├── extsprintf@1.3.0 
  │ │ │ │ │ ├── json-schema@0.2.3 
  │ │ │ │ │ └─┬ verror@1.10.0 
  │ │ │ │ │   └── assert-plus@1.0.0 
  │ │ │ │ └─┬ sshpk@1.13.1 
  │ │ │ │   ├── asn1@0.2.3 
  │ │ │ │   ├── assert-plus@1.0.0 
  │ │ │ │   ├── bcrypt-pbkdf@1.0.1 
  │ │ │ │   ├─┬ dashdash@1.14.1 
  │ │ │ │   │ └── assert-plus@1.0.0 
  │ │ │ │   ├── ecc-jsbn@0.1.1 
  │ │ │ │   ├─┬ getpass@0.1.7 
  │ │ │ │   │ └── assert-plus@1.0.0 
  │ │ │ │   ├── jsbn@0.1.1 
  │ │ │ │   └── tweetnacl@0.14.5 
  │ │ │ ├── is-typedarray@1.0.0 
  │ │ │ ├── isstream@0.1.2 
  │ │ │ ├─┬ mime-types@2.1.17 
  │ │ │ │ └── mime-db@1.30.0 
  │ │ │ ├── oauth-sign@0.8.2 
  │ │ │ ├── qs@5.2.1 
  │ │ │ ├── stringstream@0.0.5 
  │ │ │ ├── tough-cookie@2.2.2 
  │ │ │ └── tunnel-agent@0.4.3 
  │ │ ├─┬ request-progress@2.0.1 
  │ │ │ └── throttleit@1.0.0 
  │ │ └─┬ which@1.2.14 
  │ │   └── isexe@2.0.0 
  │ ├── semver@4.3.6 
  │ └─┬ temporary@0.0.8 
  │   └── package@1.0.1 
  └─┬ request@2.25.0 
    ├── aws-sign@0.3.0 
    ├── cookie-jar@0.3.0 
    ├── forever-agent@0.5.2 
    ├─┬ form-data@0.1.4 
    │ ├── async@0.9.2 
    │ └─┬ combined-stream@0.0.7 
    │   └── delayed-stream@0.0.5 
    ├─┬ hawk@1.0.0 
    │ ├── boom@0.4.2 
    │ ├── cryptiles@0.2.2 
    │ ├── hoek@0.9.1 
    │ └── sntp@0.2.4 
    ├─┬ http-signature@0.10.1 
    │ ├── asn1@0.1.11 
    │ ├── assert-plus@0.1.5 
    │ └── ctype@0.5.3 
    ├── json-stringify-safe@5.0.1 
    ├── mime@1.2.11 
    ├── node-uuid@1.4.8 
    ├── oauth-sign@0.3.0 
    ├── qs@0.6.6 
    └── tunnel-agent@0.3.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/grunt-monkeytestjs/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 1 running / 0 errors / 35% coverage ] ****** [1 done /0 queued / 1 running / 0 errors / 35% coverage ] ****** [2 done /0 queued / 1 running / 1 errors / 40% coverage ] ****** [2 done /0 queued / 1 running / 1 errors / 40% coverage ] ****** [3 done /0 queued / 1 running / 2 errors / 40% coverage ] ****** [3 done /0 queued / 1 running / 2 errors / 40% coverage ] ****** [4 done /0 queued / 1 running / 3 errors / 16% coverage ] ****** [4 done /0 queued / 1 running / 3 errors / 16% coverage ] ****** [5 done /0 queued / 1 running / 4 errors / 16% coverage ] ****** [5 done /0 queued / 1 running / 4 errors / 16% coverage ] ****** [6 done /1 queued / 1 running / 5 errors / 16% coverage ] ****** [6 done /0 queued / 2 running / 5 errors / 16% coverage ] ****** [6 done /0 queued / 2 running / 5 errors / 16% coverage ] ****** [7 done /0 queued / 1 running / 6 errors / 16% coverage ] ****** [8 done /1 queued / 1 running / 7 errors / 16% coverage ] ****** [8 done /0 queued / 2 running / 7 errors / 16% coverage ] ****** [8 done /0 queued / 2 running / 7 errors / 16% coverage ] ****** [9 done /2 queued / 2 running / 8 errors / 16% coverage ] ****** [9 done /1 queued / 3 running / 8 errors / 16% coverage ] ****** [9 done /0 queued / 4 running / 8 errors / 16% coverage ] ****** [9 done /0 queued / 4 running / 8 errors / 16% coverage ] ****** [10 done /1 queued / 4 running / 9 errors / 16% coverage ] ****** [10 done /0 queued / 5 running / 9 errors / 16% coverage ] ****** [10 done /0 queued / 5 running / 9 errors / 16% coverage ] ****** [11 done /1 queued / 5 running / 10 errors / 16% coverage ] ****** [11 done /0 queued / 6 running / 10 errors / 16% coverage ] ****** [11 done /0 queued / 6 running / 10 errors / 16% coverage ] ****** [12 done /1 queued / 6 running / 11 errors / 16% coverage ] ****** [12 done /0 queued / 7 running / 11 errors / 16% coverage ] ****** [12 done /0 queued / 7 running / 11 errors / 16% coverage ] ****** [13 done /1 queued / 7 running / 12 errors / 16% coverage ] ****** [13 done /0 queued / 8 running / 12 errors / 16% coverage ] ****** [13 done /0 queued / 8 running / 12 errors / 16% coverage ] ****** [14 done /1 queued / 8 running / 13 errors / 16% coverage ] ****** [14 done /0 queued / 9 running / 13 errors / 16% coverage ] ****** [14 done /0 queued / 9 running / 13 errors / 16% coverage ] ****** [15 done /0 queued / 9 running / 14 errors / 16% coverage ] ****** [15 done /0 queued / 9 running / 14 errors / 16% coverage ] ****** [16 done /1 queued / 9 running / 15 errors / 16% coverage ] ****** [16 done /0 queued / 10 running / 15 errors / 16% coverage ] ****** [16 done /0 queued / 10 running / 15 errors / 16% coverage ] ****** [17 done /1 queued / 10 running / 16 errors / 16% coverage ] ****** [17 done /0 queued / 11 running / 16 errors / 16% coverage ] ****** [17 done /0 queued / 11 running / 16 errors / 16% coverage ] ****** [18 done /1 queued / 11 running / 17 errors / 16% coverage ] ****** [18 done /0 queued / 12 running / 17 errors / 16% coverage ] ****** [18 done /0 queued / 12 running / 17 errors / 16% coverage ] ****** [19 done /1 queued / 12 running / 18 errors / 16% coverage ] ****** [19 done /0 queued / 13 running / 18 errors / 16% coverage ] ****** [19 done /0 queued / 13 running / 18 errors / 16% coverage ] ****** [20 done /1 queued / 13 running / 19 errors / 16% coverage ] ****** [20 done /0 queued / 14 running / 19 errors / 16% coverage ] ****** [20 done /0 queued / 14 running / 19 errors / 16% coverage ] ****** [21 done /1 queued / 14 running / 20 errors / 16% coverage ] ****** [21 done /0 queued / 15 running / 20 errors / 16% coverage ] ****** [21 done /0 queued / 15 running / 20 errors / 16% coverage ] ****** [22 done /2 queued / 15 running / 21 errors / 16% coverage ] ****** [22 done /1 queued / 16 running / 21 errors / 16% coverage ] ****** [22 done /1 queued / 16 running / 21 errors / 16% coverage ] ****** [23 done /2 queued / 16 running / 22 errors / 16% coverage ] ****** [23 done /2 queued / 16 running / 22 errors / 16% coverage ] ****** [24 done /3 queued / 16 running / 23 errors / 16% coverage ] ****** [24 done /3 queued / 16 running / 23 errors / 16% coverage ] ****** [25 done /4 queued / 16 running / 24 errors / 16% coverage ] ****** [25 done /4 queued / 16 running / 24 errors / 16% coverage ] ****** [26 done /5 queued / 16 running / 25 errors / 16% coverage ] ****** [26 done /5 queued / 16 running / 25 errors / 16% coverage ] ****** [27 done /6 queued / 16 running / 26 errors / 16% coverage ] ****** [27 done /6 queued / 16 running / 26 errors / 16% coverage ] ****** [28 done /9 queued / 16 running / 27 errors / 16% coverage ] ****** [28 done /9 queued / 16 running / 27 errors / 16% coverage ] ****** [29 done /10 queued / 16 running / 28 errors / 16% coverage ] ****** [29 done /10 queued / 16 running / 28 errors / 16% coverage ] ****** [30 done /11 queued / 16 running / 29 errors / 16% coverage ] ****** [30 done /11 queued / 16 running / 29 errors / 16% coverage ] ****** [31 done /12 queued / 16 running / 30 errors / 16% coverage ] ****** [31 done /12 queued / 16 running / 30 errors / 16% coverage ] ****** [32 done /14 queued / 16 running / 31 errors / 16% coverage ] ****** [32 done /14 queued / 16 running / 31 errors / 16% coverage ] ****** [33 done /15 queued / 16 running / 32 errors / 16% coverage ] ****** [33 done /15 queued / 16 running / 32 errors / 16% coverage ] ****** [34 done /15 queued / 16 running / 33 errors / 16% coverage ] ****** [34 done /15 queued / 16 running / 33 errors / 16% coverage ] ****** [35 done /16 queued / 16 running / 34 errors / 16% coverage ] ****** [35 done /16 queued / 16 running / 34 errors / 16% coverage ] ****** [36 done /17 queued / 16 running / 35 errors / 16% coverage ] ****** [36 done /17 queued / 16 running / 35 errors / 16% coverage ] ****** [37 done /18 queued / 16 running / 36 errors / 16% coverage ] ****** [37 done /18 queued / 16 running / 36 errors / 16% coverage ] ****** [38 done /19 queued / 16 running / 37 errors / 16% coverage ] ****** [38 done /19 queued / 16 running / 37 errors / 16% coverage ] ****** [39 done /20 queued / 16 running / 38 errors / 16% coverage ] ****** [39 done /20 queued / 16 running / 38 errors / 16% coverage ] ****** [40 done /22 queued / 16 running / 39 errors / 16% coverage ] ****** [40 done /22 queued / 16 running / 39 errors / 16% coverage ] ****** [41 done /24 queued / 16 running / 40 errors / 16% coverage ] ****** [41 done /24 queued / 16 running / 40 errors / 16% coverage ] ****** [42 done /25 queued / 16 running / 41 errors / 16% coverage ] ****** [42 done /25 queued / 16 running / 41 errors / 16% coverage ] ****** [43 done /27 queued / 16 running / 42 errors / 16% coverage ] ****** [43 done /27 queued / 16 running / 42 errors / 16% coverage ] ****** [44 done /27 queued / 16 running / 43 errors / 16% coverage ] ****** [44 done /27 queued / 16 running / 43 errors / 16% coverage ] ****** [45 done /27 queued / 16 running / 44 errors / 16% coverage ] ****** [45 done /27 queued / 16 running / 44 errors / 16% coverage ] ****** [46 done /28 queued / 16 running / 45 errors / 16% coverage ] ****** [46 done /28 queued / 16 running / 45 errors / 16% coverage ] ****** [47 done /30 queued / 16 running / 46 errors / 16% coverage ] ****** [47 done /30 queued / 16 running / 46 errors / 16% coverage ] ****** [48 done /31 queued / 16 running / 47 errors / 16% coverage ] ****** [48 done /31 queued / 16 running / 47 errors / 16% coverage ] ****** [49 done /32 queued / 16 running / 48 errors / 16% coverage ] ****** [49 done /32 queued / 16 running / 48 errors / 16% coverage ] ****** [50 done /35 queued / 16 running / 49 errors / 16% coverage ] ****** [50 done /35 queued / 16 running / 49 errors / 16% coverage ] ****** [51 done /39 queued / 16 running / 50 errors / 16% coverage ] ****** [51 done /39 queued / 16 running / 50 errors / 16% coverage ] ****** [52 done /40 queued / 16 running / 51 errors / 16% coverage ] ****** [52 done /40 queued / 16 running / 51 errors / 16% coverage ] ****** [53 done /43 queued / 16 running / 52 errors / 16% coverage ] ****** [53 done /43 queued / 16 running / 52 errors / 16% coverage ] ****** [54 done /44 queued / 16 running / 53 errors / 16% coverage ] ****** [54 done /44 queued / 16 running / 53 errors / 16% coverage ] ****** [55 done /44 queued / 16 running / 54 errors / 16% coverage ] ****** [55 done /44 queued / 16 running / 54 errors / 16% coverage ] ****** [56 done /45 queued / 16 running / 55 errors / 16% coverage ] ****** [56 done /45 queued / 16 running / 55 errors / 16% coverage ] ****** [57 done /45 queued / 16 running / 56 errors / 16% coverage ] ****** [57 done /45 queued / 16 running / 56 errors / 16% coverage ] ****** [58 done /45 queued / 16 running / 57 errors / 16% coverage ] ****** [58 done /45 queued / 16 running / 57 errors / 16% coverage ] ****** [59 done /46 queued / 16 running / 58 errors / 16% coverage ] ****** [59 done /46 queued / 16 running / 58 errors / 16% coverage ] ****** [60 done /47 queued / 16 running / 59 errors / 16% coverage ] ****** [60 done /47 queued / 16 running / 59 errors / 16% coverage ] ****** [61 done /48 queued / 16 running / 60 errors / 16% coverage ] ****** [61 done /48 queued / 16 running / 60 errors / 16% coverage ] ****** [62 done /48 queued / 16 running / 61 errors / 16% coverage ] ****** [62 done /48 queued / 16 running / 61 errors / 16% coverage ] ****** [63 done /48 queued / 16 running / 62 errors / 16% coverage ] ****** [63 done /48 queued / 16 running / 62 errors / 16% coverage ] ****** [64 done /49 queued / 16 running / 63 errors / 16% coverage ] ****** [64 done /49 queued / 16 running / 63 errors / 16% coverage ] ****** [65 done /50 queued / 16 running / 64 errors / 16% coverage ] ****** [65 done /50 queued / 16 running / 64 errors / 16% coverage ] ****** [66 done /51 queued / 16 running / 65 errors / 16% coverage ] ****** [66 done /51 queued / 16 running / 65 errors / 16% coverage ] ****** [67 done /51 queued / 16 running / 66 errors / 16% coverage ] ****** [67 done /51 queued / 16 running / 66 errors / 16% coverage ] ****** [68 done /52 queued / 16 running / 67 errors / 16% coverage ] ****** [68 done /52 queued / 16 running / 67 errors / 16% coverage ] ****** [69 done /52 queued / 16 running / 68 errors / 16% coverage ] ****** [69 done /52 queued / 16 running / 68 errors / 16% coverage ] ****** [70 done /53 queued / 16 running / 69 errors / 16% coverage ] ****** [70 done /53 queued / 16 running / 69 errors / 16% coverage ] ****** [71 done /53 queued / 16 running / 70 errors / 16% coverage ] ****** [71 done /53 queued / 16 running / 70 errors / 16% coverage ] ****** [72 done /54 queued / 16 running / 71 errors / 16% coverage ] ****** [72 done /54 queued / 16 running / 71 errors / 16% coverage ] ****** [73 done /55 queued / 16 running / 72 errors / 16% coverage ] ****** [73 done /55 queued / 16 running / 72 errors / 16% coverage ] ****** [74 done /55 queued / 16 running / 73 errors / 16% coverage ] ****** [74 done /55 queued / 16 running / 73 errors / 16% coverage ] ****** [75 done /55 queued / 16 running / 74 errors / 16% coverage ] ****** [75 done /55 queued / 16 running / 74 errors / 16% coverage ] ****** [76 done /55 queued / 16 running / 75 errors / 16% coverage ] ****** [76 done /55 queued / 16 running / 75 errors / 16% coverage ] ****** [77 done /56 queued / 16 running / 76 errors / 16% coverage ] ****** [77 done /56 queued / 16 running / 76 errors / 16% coverage ] ****** [78 done /56 queued / 16 running / 77 errors / 16% coverage ] ****** [78 done /56 queued / 16 running / 77 errors / 16% coverage ] ****** [79 done /57 queued / 16 running / 78 errors / 16% coverage ] ****** [79 done /57 queued / 16 running / 78 errors / 16% coverage ] ****** [80 done /58 queued / 16 running / 79 errors / 16% coverage ] ****** [80 done /58 queued / 16 running / 79 errors / 16% coverage ] ****** [81 done /59 queued / 16 running / 80 errors / 16% coverage ] ****** [81 done /59 queued / 16 running / 80 errors / 16% coverage ] ****** [82 done /60 queued / 16 running / 81 errors / 16% coverage ] ****** [82 done /60 queued / 16 running / 81 errors / 16% coverage ] ****** [83 done /62 queued / 16 running / 82 errors / 16% coverage ] ****** [83 done /62 queued / 16 running / 82 errors / 16% coverage ] ****** [84 done /63 queued / 16 running / 83 errors / 16% coverage ] ****** [84 done /63 queued / 16 running / 83 errors / 16% coverage ] ****** [85 done /65 queued / 16 running / 84 errors / 16% coverage ] ****** [85 done /65 queued / 16 running / 84 errors / 16% coverage ] ****** [86 done /66 queued / 16 running / 85 errors / 16% coverage ] ****** [86 done /66 queued / 16 running / 85 errors / 16% coverage ] ****** [87 done /68 queued / 16 running / 86 errors / 16% coverage ] ****** [87 done /68 queued / 16 running / 86 errors / 16% coverage ] ****** [88 done /69 queued / 16 running / 87 errors / 16% coverage ] ****** [88 done /69 queued / 16 running / 87 errors / 16% coverage ] ****** [89 done /70 queued / 16 running / 88 errors / 16% coverage ] ****** [89 done /70 queued / 16 running / 88 errors / 16% coverage ] ****** [90 done /71 queued / 16 running / 89 errors / 16% coverage ] ****** [90 done /71 queued / 16 running / 89 errors / 16% coverage ] ****** [91 done /72 queued / 16 running / 90 errors / 16% coverage ] ****** [91 done /72 queued / 16 running / 90 errors / 16% coverage ] ****** [92 done /74 queued / 16 running / 91 errors / 16% coverage ] ****** [92 done /74 queued / 16 running / 91 errors / 16% coverage ] ****** [93 done /75 queued / 16 running / 92 errors / 16% coverage ] ****** [93 done /75 queued / 16 running / 92 errors / 16% coverage ] ****** [94 done /76 queued / 16 running / 93 errors / 16% coverage ] ****** [94 done /76 queued / 16 running / 93 errors / 16% coverage ] ****** [95 done /80 queued / 16 running / 94 errors / 16% coverage ] ****** [95 done /80 queued / 16 running / 94 errors / 16% coverage ] ****** [96 done /81 queued / 16 running / 95 errors / 16% coverage ] ****** [96 done /81 queued / 16 running / 95 errors / 16% coverage ] ****** [97 done /82 queued / 16 running / 96 errors / 16% coverage ] ****** [97 done /82 queued / 16 running / 96 errors / 16% coverage ] ****** [98 done /82 queued / 16 running / 97 errors / 16% coverage ] ****** [98 done /82 queued / 16 running / 97 errors / 16% coverage ] ****** [99 done /83 queued / 16 running / 98 errors / 16% coverage ] ****** [99 done /83 queued / 16 running / 98 errors / 16% coverage ] ****** [100 done /84 queued / 16 running / 99 errors / 16% coverage ] ****** [100 done /84 queued / 16 running / 99 errors / 16% coverage ] ****** [101 done /86 queued / 16 running / 100 errors / 16% coverage ] ****** [101 done /86 queued / 16 running / 100 errors / 16% coverage ] ****** [102 done /86 queued / 16 running / 101 errors / 16% coverage ] ****** [102 done /86 queued / 16 running / 101 errors / 16% coverage ] ****** [103 done /88 queued / 16 running / 102 errors / 16% coverage ] ****** [103 done /88 queued / 16 running / 102 errors / 16% coverage ] ****** [104 done /89 queued / 16 running / 103 errors / 16% coverage ] ****** [104 done /89 queued / 16 running / 103 errors / 16% coverage ] ****** [105 done /90 queued / 16 running / 104 errors / 16% coverage ] ****** [105 done /90 queued / 16 running / 104 errors / 16% coverage ] ****** [106 done /90 queued / 16 running / 105 errors / 16% coverage ] ****** [106 done /90 queued / 16 running / 105 errors / 16% coverage ] ****** [107 done /90 queued / 16 running / 106 errors / 16% coverage ] ****** [107 done /90 queued / 16 running / 106 errors / 16% coverage ] ****** [108 done /92 queued / 16 running / 107 errors / 16% coverage ] ****** [108 done /92 queued / 16 running / 107 errors / 16% coverage ] ****** [109 done /93 queued / 16 running / 108 errors / 16% coverage ] ****** [109 done /93 queued / 16 running / 108 errors / 16% coverage ] ****** [110 done /94 queued / 16 running / 109 errors / 16% coverage ] ****** [110 done /94 queued / 16 running / 109 errors / 16% coverage ] ****** [111 done /94 queued / 16 running / 110 errors / 16% coverage ] ****** [111 done /94 queued / 16 running / 110 errors / 16% coverage ] ****** [112 done /95 queued / 16 running / 111 errors / 16% coverage ] ****** [112 done /95 queued / 16 running / 111 errors / 16% coverage ] ****** [113 done /98 queued / 16 running / 112 errors / 16% coverage ] ****** [113 done /98 queued / 16 running / 112 errors / 16% coverage ] ****** [114 done /99 queued / 16 running / 113 errors / 16% coverage ] ****** [114 done /99 queued / 16 running / 113 errors / 16% coverage ] ****** [115 done /100 queued / 16 running / 114 errors / 16% coverage ] ****** [115 done /100 queued / 16 running / 114 errors / 16% coverage ] ****** [116 done /100 queued / 16 running / 115 errors / 16% coverage ] ****** [116 done /100 queued / 16 running / 115 errors / 16% coverage ] ****** [117 done /100 queued / 16 running / 116 errors / 16% coverage ] ****** [117 done /100 queued / 16 running / 116 errors / 16% coverage ] ****** [118 done /101 queued / 16 running / 117 errors / 16% coverage ] ****** [118 done /101 queued / 16 running / 117 errors / 16% coverage ] ****** [119 done /102 queued / 16 running / 118 errors / 16% coverage ] ****** [119 done /102 queued / 16 running / 118 errors / 16% coverage ] ****** [120 done /102 queued / 16 running / 119 errors / 16% coverage ] ****** [120 done /102 queued / 16 running / 119 errors / 16% coverage ] ****** [121 done /103 queued / 16 running / 120 errors / 16% coverage ] ****** [121 done /103 queued / 16 running / 120 errors / 16% coverage ] ****** [122 done /105 queued / 16 running / 121 errors / 16% coverage ] ****** [122 done /105 queued / 16 running / 121 errors / 16% coverage ] ****** [123 done /106 queued / 16 running / 122 errors / 16% coverage ] ****** [123 done /106 queued / 16 running / 122 errors / 16% coverage ] ****** [124 done /106 queued / 16 running / 123 errors / 16% coverage ] ****** [124 done /106 queued / 16 running / 123 errors / 16% coverage ] ****** [125 done /108 queued / 16 running / 124 errors / 16% coverage ] ****** [125 done /108 queued / 16 running / 124 errors / 16% coverage ] ****** [126 done /110 queued / 16 running / 125 errors / 16% coverage ] ****** [126 done /110 queued / 16 running / 125 errors / 16% coverage ] ****** [127 done /112 queued / 16 running / 126 errors / 16% coverage ] ****** [127 done /112 queued / 16 running / 126 errors / 16% coverage ] ****** [128 done /114 queued / 16 running / 127 errors / 16% coverage ] ****** [128 done /114 queued / 16 running / 127 errors / 16% coverage ] ****** [129 done /115 queued / 16 running / 128 errors / 16% coverage ] ****** [129 done /115 queued / 16 running / 128 errors / 16% coverage ] ****** [130 done /116 queued / 16 running / 129 errors / 16% coverage ] ****** [130 done /116 queued / 16 running / 129 errors / 16% coverage ] ****** [131 done /117 queued / 16 running / 130 errors / 16% coverage ] ****** [131 done /117 queued / 16 running / 130 errors / 16% coverage ] ****** [132 done /118 queued / 16 running / 131 errors / 16% coverage ] ****** [132 done /118 queued / 16 running / 131 errors / 16% coverage ] ****** [133 done /119 queued / 16 running / 132 errors / 16% coverage ] ****** [133 done /119 queued / 16 running / 132 errors / 16% coverage ] ****** [134 done /121 queued / 16 running / 133 errors / 16% coverage ] ****** [134 done /121 queued / 16 running / 133 errors / 16% coverage ] ****** [135 done /122 queued / 16 running / 134 errors / 16% coverage ] ****** [135 done /122 queued / 16 running / 134 errors / 16% coverage ] ****** [136 done /123 queued / 16 running / 135 errors / 16% coverage ] ****** [136 done /123 queued / 16 running / 135 errors / 16% coverage ] ****** [137 done /124 queued / 16 running / 136 errors / 16% coverage ] ****** [137 done /124 queued / 16 running / 136 errors / 16% coverage ] ****** [138 done /124 queued / 16 running / 137 errors / 16% coverage ] ****** [138 done /124 queued / 16 running / 137 errors / 16% coverage ] ****** [139 done /125 queued / 16 running / 138 errors / 16% coverage ] ****** [139 done /125 queued / 16 running / 138 errors / 16% coverage ] ****** [140 done /126 queued / 16 running / 139 errors / 16% coverage ] ****** [140 done /126 queued / 16 running / 139 errors / 16% coverage ] ****** [141 done /127 queued / 16 running / 140 errors / 16% coverage ] ****** [141 done /127 queued / 16 running / 140 errors / 16% coverage ] ****** [142 done /127 queued / 16 running / 141 errors / 16% coverage ] ****** [142 done /127 queued / 16 running / 141 errors / 16% coverage ] ****** [143 done /129 queued / 16 running / 142 errors / 16% coverage ] ****** [143 done /129 queued / 16 running / 142 errors / 16% coverage ] ****** [144 done /129 queued / 16 running / 143 errors / 16% coverage ] ****** [144 done /129 queued / 16 running / 143 errors / 16% coverage ] ****** [145 done /131 queued / 16 running / 144 errors / 16% coverage ] ****** [145 done /131 queued / 16 running / 144 errors / 16% coverage ] ****** [146 done /133 queued / 16 running / 145 errors / 16% coverage ] ****** [146 done /133 queued / 16 running / 145 errors / 16% coverage ] ****** [147 done /133 queued / 16 running / 146 errors / 16% coverage ] ****** [147 done /133 queued / 16 running / 146 errors / 16% coverage ] ****** [148 done /134 queued / 16 running / 147 errors / 16% coverage ] ****** [148 done /134 queued / 16 running / 147 errors / 16% coverage ] ****** [149 done /135 queued / 16 running / 148 errors / 16% coverage ] ****** [149 done /135 queued / 16 running / 148 errors / 16% coverage ] ****** [150 done /135 queued / 16 running / 149 errors / 16% coverage ] ****** [150 done /135 queued / 16 running / 149 errors / 16% coverage ] ****** [151 done /138 queued / 16 running / 150 errors / 16% coverage ] ****** [151 done /138 queued / 16 running / 150 errors / 16% coverage ] ****** [152 done /139 queued / 16 running / 151 errors / 16% coverage ] ****** [152 done /139 queued / 16 running / 151 errors / 16% coverage ] ****** [153 done /141 queued / 16 running / 152 errors / 16% coverage ] ****** [153 done /141 queued / 16 running / 152 errors / 16% coverage ] ****** [154 done /142 queued / 16 running / 153 errors / 16% coverage ] ****** [154 done /142 queued / 16 running / 153 errors / 16% coverage ] ****** [155 done /143 queued / 16 running / 154 errors / 16% coverage ] ****** [155 done /143 queued / 16 running / 154 errors / 16% coverage ] ****** [156 done /144 queued / 16 running / 155 errors / 16% coverage ] ****** [156 done /144 queued / 16 running / 155 errors / 16% coverage ] ****** [157 done /145 queued / 16 running / 156 errors / 16% coverage ] ****** [157 done /145 queued / 16 running / 156 errors / 16% coverage ] ****** [158 done /145 queued / 16 running / 157 errors / 16% coverage ] ****** [158 done /145 queued / 16 running / 157 errors / 16% coverage ] ****** [159 done /147 queued / 16 running / 158 errors / 16% coverage ] ****** [159 done /147 queued / 16 running / 158 errors / 16% coverage ] ****** [160 done /148 queued / 16 running / 159 errors / 16% coverage ] ****** [160 done /148 queued / 16 running / 159 errors / 16% coverage ] ****** [161 done /150 queued / 16 running / 160 errors / 16% coverage ] ****** [161 done /150 queued / 16 running / 160 errors / 16% coverage ] ****** [162 done /150 queued / 16 running / 161 errors / 16% coverage ] ****** [162 done /150 queued / 16 running / 161 errors / 16% coverage ] ****** [163 done /151 queued / 16 running / 162 errors / 16% coverage ] ****** [163 done /151 queued / 16 running / 162 errors / 16% coverage ] ****** [164 done /152 queued / 16 running / 163 errors / 16% coverage ] ****** [164 done /152 queued / 16 running / 163 errors / 16% coverage ] ****** [165 done /153 queued / 16 running / 164 errors / 16% coverage ] ****** [165 done /153 queued / 16 running / 164 errors / 16% coverage ] ****** [166 done /154 queued / 16 running / 165 errors / 16% coverage ] ****** [166 done /154 queued / 16 running / 165 errors / 16% coverage ] ****** [167 done /155 queued / 16 running / 166 errors / 16% coverage ] ****** [167 done /155 queued / 16 running / 166 errors / 16% coverage ] ****** [168 done /156 queued / 16 running / 167 errors / 16% coverage ] ****** [168 done /156 queued / 16 running / 167 errors / 16% coverage ] ****** [169 done /157 queued / 16 running / 168 errors / 16% coverage ] ****** [169 done /157 queued / 16 running / 168 errors / 16% coverage ] ****** [170 done /157 queued / 16 running / 169 errors / 16% coverage ] ****** [170 done /157 queued / 16 running / 169 errors / 16% coverage ] ****** [171 done /157 queued / 16 running / 170 errors / 16% coverage ] ****** [171 done /157 queued / 16 running / 170 errors / 16% coverage ] ****** [172 done /161 queued / 16 running / 171 errors / 16% coverage ] ****** [172 done /161 queued / 16 running / 171 errors / 16% coverage ] ****** [173 done /161 queued / 16 running / 172 errors / 16% coverage ] ****** [173 done /161 queued / 16 running / 172 errors / 16% coverage ] ****** [174 done /162 queued / 16 running / 173 errors / 16% coverage ] ****** [174 done /162 queued / 16 running / 173 errors / 16% coverage ] ****** [175 done /163 queued / 16 running / 174 errors / 16% coverage ] ****** [175 done /163 queued / 16 running / 174 errors / 16% coverage ] ****** [176 done /164 queued / 16 running / 175 errors / 16% coverage ] ****** [176 done /164 queued / 16 running / 175 errors / 16% coverage ] ****** [177 done /164 queued / 16 running / 176 errors / 16% coverage ] ****** [177 done /164 queued / 16 running / 176 errors / 16% coverage ] ****** [178 done /165 queued / 16 running / 177 errors / 16% coverage ] ****** [178 done /165 queued / 16 running / 177 errors / 16% coverage ] ****** [179 done /166 queued / 16 running / 178 errors / 16% coverage ] ****** [179 done /166 queued / 16 running / 178 errors / 16% coverage ] ****** [180 done /167 queued / 16 running / 179 errors / 16% coverage ] ****** [180 done /167 queued / 16 running / 179 errors / 16% coverage ] ****** [181 done /168 queued / 16 running / 180 errors / 16% coverage ] ****** [181 done /168 queued / 16 running / 180 errors / 16% coverage ] ****** [182 done /169 queued / 16 running / 181 errors / 16% coverage ] ****** [182 done /169 queued / 16 running / 181 errors / 16% coverage ] ****** [183 done /170 queued / 16 running / 182 errors / 16% coverage ] ****** [183 done /170 queued / 16 running / 182 errors / 16% coverage ] ****** [184 done /171 queued / 16 running / 183 errors / 16% coverage ] ****** [184 done /171 queued / 16 running / 183 errors / 16% coverage ] ****** [185 done /172 queued / 16 running / 184 errors / 16% coverage ] ****** [185 done /172 queued / 16 running / 184 errors / 16% coverage ] ****** [186 done /173 queued / 16 running / 185 errors / 16% coverage ] ****** [186 done /173 queued / 16 running / 185 errors / 16% coverage ] ****** [187 done /174 queued / 16 running / 186 errors / 16% coverage ] ****** [187 done /174 queued / 16 running / 186 errors / 16% coverage ] ****** [188 done /174 queued / 16 running / 187 errors / 16% coverage ] ****** [188 done /174 queued / 16 running / 187 errors / 16% coverage ] ****** [189 done /175 queued / 16 running / 188 errors / 16% coverage ] ****** [189 done /175 queued / 16 running / 188 errors / 16% coverage ] ****** [190 done /179 queued / 16 running / 189 errors / 16% coverage ] ****** [190 done /179 queued / 16 running / 189 errors / 16% coverage ] ****** [191 done /179 queued / 16 running / 190 errors / 16% coverage ] ****** [191 done /179 queued / 16 running / 190 errors / 16% coverage ] ****** [192 done /182 queued / 16 running / 191 errors / 16% coverage ] ****** [192 done /182 queued / 16 running / 191 errors / 16% coverage ] ****** [193 done /184 queued / 16 running / 192 errors / 16% coverage ] ****** [193 done /184 queued / 16 running / 192 errors / 16% coverage ] ****** [194 done /185 queued / 16 running / 193 errors / 16% coverage ] ****** [194 done /185 queued / 16 running / 193 errors / 16% coverage ] ****** [195 done /189 queued / 16 running / 194 errors / 16% coverage ] ****** [195 done /189 queued / 16 running / 194 errors / 16% coverage ] ****** [196 done /189 queued / 16 running / 195 errors / 16% coverage ] ****** [196 done /189 queued / 16 running / 195 errors / 16% coverage ] ****** [197 done /190 queued / 16 running / 196 errors / 16% coverage ] ****** [197 done /190 queued / 16 running / 196 errors / 16% coverage ] ****** [198 done /193 queued / 16 running / 197 errors / 16% coverage ] ****** [198 done /193 queued / 16 running / 197 errors / 16% coverage ] ****** [199 done /194 queued / 16 running / 198 errors / 16% coverage ] ****** [199 done /194 queued / 16 running / 198 errors / 16% coverage ] ****** [200 done /195 queued / 16 running / 199 errors / 16% coverage ] ****** [200 done /195 queued / 16 running / 199 errors / 16% coverage ] ****** [201 done /196 queued / 16 running / 200 errors / 16% coverage ] ****** [201 done /196 queued / 16 running / 200 errors / 16% coverage ] ****** [202 done /197 queued / 16 running / 201 errors / 16% coverage ] ****** [202 done /197 queued / 16 running / 201 errors / 16% coverage ] ****** [203 done /198 queued / 16 running / 202 errors / 16% coverage ] ****** [203 done /198 queued / 16 running / 202 errors / 16% coverage ] ****** [204 done /198 queued / 16 running / 203 errors / 16% coverage ] ****** [204 done /198 queued / 16 running / 203 errors / 16% coverage ] ****** [205 done /199 queued / 16 running / 204 errors / 16% coverage ] ****** [205 done /199 queued / 16 running / 204 errors / 16% coverage ] ****** [206 done /200 queued / 16 running / 205 errors / 16% coverage ] ****** [206 done /200 queued / 16 running / 205 errors / 16% coverage ] ****** [207 done /201 queued / 16 running / 206 errors / 16% coverage ] ****** [207 done /201 queued / 16 running / 206 errors / 16% coverage ] ****** [208 done /201 queued / 16 running / 207 errors / 16% coverage ] ****** [208 done /201 queued / 16 running / 207 errors / 16% coverage ] ****** [209 done /201 queued / 16 running / 208 errors / 16% coverage ] ****** [209 done /201 queued / 16 running / 208 errors / 16% coverage ] ****** [210 done /202 queued / 16 running / 209 errors / 16% coverage ] ****** [210 done /202 queued / 16 running / 209 errors / 16% coverage ] ****** [211 done /202 queued / 16 running / 210 errors / 16% coverage ] ****** [211 done /202 queued / 16 running / 210 errors / 16% coverage ] ****** [212 done /203 queued / 16 running / 211 errors / 16% coverage ] ****** [212 done /203 queued / 16 running / 211 errors / 16% coverage ] ****** [213 done /203 queued / 16 running / 212 errors / 16% coverage ] ****** [213 done /203 queued / 16 running / 212 errors / 16% coverage ] ****** [214 done /203 queued / 16 running / 213 errors / 16% coverage ] ****** [214 done /203 queued / 16 running / 213 errors / 16% coverage ] ****** [215 done /203 queued / 16 running / 214 errors / 16% coverage ] ****** [215 done /203 queued / 16 running / 214 errors / 16% coverage ] ****** [216 done /204 queued / 16 running / 215 errors / 16% coverage ] ****** [216 done /204 queued / 16 running / 215 errors / 16% coverage ] ****** [217 done /206 queued / 16 running / 216 errors / 16% coverage ] ****** [217 done /206 queued / 16 running / 216 errors / 16% coverage ] ****** [218 done /207 queued / 16 running / 217 errors / 16% coverage ] ****** [218 done /207 queued / 16 running / 217 errors / 16% coverage ] ****** [219 done /207 queued / 16 running / 218 errors / 16% coverage ] ****** [219 done /207 queued / 16 running / 218 errors / 16% coverage ] ****** [220 done /209 queued / 16 running / 219 errors / 16% coverage ] ****** [220 done /209 queued / 16 running / 219 errors / 16% coverage ] ****** [221 done /209 queued / 16 running / 220 errors / 16% coverage ] ****** [221 done /209 queued / 16 running / 220 errors / 16% coverage ] ****** [222 done /212 queued / 16 running / 221 errors / 16% coverage ] ****** [222 done /212 queued / 16 running / 221 errors / 16% coverage ] ****** [223 done /212 queued / 16 running / 222 errors / 16% coverage ] ****** [223 done /212 queued / 16 running / 222 errors / 16% coverage ] ****** [224 done /212 queued / 16 running / 223 errors / 16% coverage ] ****** [224 done /212 queued / 16 running / 223 errors / 16% coverage ] ****** [225 done /216 queued / 16 running / 224 errors / 16% coverage ] ****** [225 done /216 queued / 16 running / 224 errors / 16% coverage ] ****** [226 done /218 queued / 16 running / 225 errors / 16% coverage ] ****** [226 done /218 queued / 16 running / 225 errors / 16% coverage ] ****** [227 done /219 queued / 16 running / 226 errors / 16% coverage ] ****** [227 done /219 queued / 16 running / 226 errors / 16% coverage ] ****** [228 done /220 queued / 16 running / 227 errors / 16% coverage ] ****** [228 done /220 queued / 16 running / 227 errors / 16% coverage ] ****** [229 done /222 queued / 16 running / 228 errors / 16% coverage ] ****** [229 done /222 queued / 16 running / 228 errors / 16% coverage ] ****** [230 done /225 queued / 16 running / 229 errors / 16% coverage ] ****** [230 done /225 queued / 16 running / 229 errors / 16% coverage ] ****** [231 done /226 queued / 16 running / 230 errors / 16% coverage ] ****** [231 done /226 queued / 16 running / 230 errors / 16% coverage ] ****** [232 done /227 queued / 16 running / 231 errors / 16% coverage ] ****** [232 done /227 queued / 16 running / 231 errors / 16% coverage ] ****** [233 done /227 queued / 16 running / 232 errors / 16% coverage ] ****** [233 done /227 queued / 16 running / 232 errors / 16% coverage ] ****** [234 done /228 queued / 16 running / 233 errors / 16% coverage ] ****** [234 done /228 queued / 16 running / 233 errors / 16% coverage ] ****** [235 done /229 queued / 16 running / 234 errors / 16% coverage ] ****** [235 done /229 queued / 16 running / 234 errors / 16% coverage ] ****** [236 done /229 queued / 16 running / 235 errors / 16% coverage ] ****** [236 done /229 queued / 16 running / 235 errors / 16% coverage ] ****** [237 done /230 queued / 16 running / 236 errors / 16% coverage ] ****** [237 done /230 queued / 16 running / 236 errors / 16% coverage ] ****** [238 done /231 queued / 16 running / 237 errors / 16% coverage ] ****** [238 done /231 queued / 16 running / 237 errors / 16% coverage ] ****** [239 done /231 queued / 16 running / 238 errors / 16% coverage ] ****** [239 done /231 queued / 16 running / 238 errors / 16% coverage ] ****** [240 done /231 queued / 16 running / 239 errors / 16% coverage ] ****** [240 done /231 queued / 16 running / 239 errors / 16% coverage ] ****** [241 done /231 queued / 16 running / 240 errors / 16% coverage ] ****** [241 done /231 queued / 16 running / 240 errors / 16% coverage ] ****** [242 done /231 queued / 16 running / 241 errors / 16% coverage ] ****** [242 done /231 queued / 16 running / 241 errors / 16% coverage ] ****** [243 done /232 queued / 16 running / 242 errors / 16% coverage ] ****** [243 done /232 queued / 16 running / 242 errors / 16% coverage ] ****** [244 done /234 queued / 16 running / 243 errors / 16% coverage ] ****** [244 done /234 queued / 16 running / 243 errors / 16% coverage ] ****** [245 done /234 queued / 16 running / 244 errors / 16% coverage ] ****** [245 done /234 queued / 16 running / 244 errors / 16% coverage ] ****** [246 done /235 queued / 16 running / 245 errors / 16% coverage ] ****** [246 done /235 queued / 16 running / 245 errors / 16% coverage ] ****** [247 done /235 queued / 16 running / 246 errors / 16% coverage ] ****** [247 done /235 queued / 16 running / 246 errors / 16% coverage ] ****** [248 done /235 queued / 16 running / 247 errors / 16% coverage ] ****** [248 done /235 queued / 16 running / 247 errors / 16% coverage ] ****** [249 done /236 queued / 16 running / 248 errors / 16% coverage ] ****** [249 done /236 queued / 16 running / 248 errors / 16% coverage ] ****** [250 done /237 queued / 16 running / 249 errors / 16% coverage ] ****** [250 done /237 queued / 16 running / 249 errors / 16% coverage ] ****** [251 done /237 queued / 16 running / 250 errors / 16% coverage ] ****** [251 done /237 queued / 16 running / 250 errors / 16% coverage ] ****** [252 done /238 queued / 16 running / 251 errors / 16% coverage ] ****** [252 done /238 queued / 16 running / 251 errors / 16% coverage ] ****** [253 done /239 queued / 16 running / 252 errors / 16% coverage ] ****** [253 done /239 queued / 16 running / 252 errors / 16% coverage ] ****** [254 done /239 queued / 16 running / 253 errors / 16% coverage ] ****** [254 done /239 queued / 16 running / 253 errors / 16% coverage ] ****** [255 done /240 queued / 16 running / 254 errors / 16% coverage ] ****** [255 done /240 queued / 16 running / 254 errors / 16% coverage ] ****** [256 done /241 queued / 16 running / 255 errors / 16% coverage ] ****** [256 done /241 queued / 16 running / 255 errors / 16% coverage ] ****** [257 done /245 queued / 16 running / 256 errors / 16% coverage ] ****** [257 done /245 queued / 16 running / 256 errors / 16% coverage ] ****** [258 done /246 queued / 16 running / 257 errors / 16% coverage ] ****** [258 done /246 queued / 16 running / 257 errors / 16% coverage ] ****** [259 done /247 queued / 16 running / 258 errors / 16% coverage ] ****** [259 done /247 queued / 16 running / 258 errors / 16% coverage ] ****** [260 done /247 queued / 16 running / 259 errors / 16% coverage ] ****** [260 done /247 queued / 16 running / 259 errors / 16% coverage ] ****** [261 done /249 queued / 16 running / 260 errors / 16% coverage ] ****** [261 done /249 queued / 16 running / 260 errors / 16% coverage ] ****** [262 done /250 queued / 16 running / 261 errors / 16% coverage ] ****** [262 done /250 queued / 16 running / 261 errors / 16% coverage ] ****** [263 done /254 queued / 16 running / 262 errors / 16% coverage ] ****** [263 done /254 queued / 16 running / 262 errors / 16% coverage ] ****** [264 done /255 queued / 16 running / 263 errors / 16% coverage ] ****** [264 done /255 queued / 16 running / 263 errors / 16% coverage ] ****** [265 done /256 queued / 16 running / 264 errors / 16% coverage ] ****** [265 done /256 queued / 16 running / 264 errors / 16% coverage ] ****** [266 done /258 queued / 16 running / 265 errors / 16% coverage ] ****** [266 done /258 queued / 16 running / 265 errors / 16% coverage ] ****** [267 done /259 queued / 16 running / 266 errors / 16% coverage ] ****** [267 done /259 queued / 16 running / 266 errors / 16% coverage ] ****** [268 done /260 queued / 16 running / 267 errors / 16% coverage ] ****** [268 done /260 queued / 16 running / 267 errors / 16% coverage ] ****** [269 done /260 queued / 16 running / 268 errors / 16% coverage ] ****** [269 done /260 queued / 16 running / 268 errors / 16% coverage ] ****** [270 done /264 queued / 16 running / 269 errors / 16% coverage ] ****** [270 done /264 queued / 16 running / 269 errors / 16% coverage ] ****** [271 done /268 queued / 16 running / 270 errors / 16% coverage ] ****** [271 done /268 queued / 16 running / 270 errors / 16% coverage ] ****** [272 done /269 queued / 16 running / 271 errors / 16% coverage ] ****** [272 done /269 queued / 16 running / 271 errors / 16% coverage ] ****** [273 done /270 queued / 16 running / 272 errors / 16% coverage ] ****** [273 done /270 queued / 16 running / 272 errors / 16% coverage ] ****** [274 done /274 queued / 16 running / 273 errors / 16% coverage ] ****** [274 done /274 queued / 16 running / 273 errors / 16% coverage ] ****** [275 done /275 queued / 16 running / 274 errors / 16% coverage ] ****** [275 done /275 queued / 16 running / 274 errors / 16% coverage ] ****** [276 done /275 queued / 16 running / 275 errors / 16% coverage ] ****** [276 done /275 queued / 16 running / 275 errors / 16% coverage ] ****** [277 done /275 queued / 16 running / 276 errors / 16% coverage ] ****** [277 done /275 queued / 16 running / 276 errors / 16% coverage ] ****** [278 done /275 queued / 16 running / 277 errors / 16% coverage ] ****** [278 done /275 queued / 16 running / 277 errors / 16% coverage ] ****** [279 done /275 queued / 16 running / 278 errors / 16% coverage ] ****** [279 done /275 queued / 16 running / 278 errors / 16% coverage ] ****** [280 done /279 queued / 16 running / 279 errors / 16% coverage ] ****** [280 done /279 queued / 16 running / 279 errors / 16% coverage ] ****** [281 done /279 queued / 16 running / 280 errors / 16% coverage ] ****** [281 done /279 queued / 16 running / 280 errors / 16% coverage ] ****** [282 done /279 queued / 16 running / 281 errors / 16% coverage ] ****** [282 done /279 queued / 16 running / 281 errors / 16% coverage ] ****** [283 done /280 queued / 16 running / 282 errors / 16% coverage ] ****** [283 done /280 queued / 16 running / 282 errors / 16% coverage ] ****** [284 done /284 queued / 16 running / 283 errors / 16% coverage ] ****** [284 done /284 queued / 16 running / 283 errors / 16% coverage ] ****** [285 done /284 queued / 16 running / 284 errors / 16% coverage ] ****** [285 done /284 queued / 16 running / 284 errors / 16% coverage ] ****** [286 done /284 queued / 16 running / 285 errors / 16% coverage ] ****** [286 done /284 queued / 16 running / 285 errors / 16% coverage ] ****** [287 done /285 queued / 16 running / 286 errors / 16% coverage ] ****** [287 done /285 queued / 16 running / 286 errors / 16% coverage ] ****** [288 done /286 queued / 16 running / 287 errors / 16% coverage ] ****** [288 done /286 queued / 16 running / 287 errors / 16% coverage ] ****** [289 done /286 queued / 16 running / 288 errors / 16% coverage ] ****** [289 done /286 queued / 16 running / 288 errors / 16% coverage ] ****** [290 done /287 queued / 16 running / 289 errors / 16% coverage ] ****** [290 done /287 queued / 16 running / 289 errors / 16% coverage ] ****** [291 done /287 queued / 16 running / 290 errors / 16% coverage ] ****** [291 done /287 queued / 16 running / 290 errors / 16% coverage ] ****** [292 done /288 queued / 16 running / 291 errors / 16% coverage ] ****** [292 done /288 queued / 16 running / 291 errors / 16% coverage ] ****** [293 done /288 queued / 16 running / 292 errors / 16% coverage ] ****** [293 done /288 queued / 16 running / 292 errors / 16% coverage ] ****** [294 done /288 queued / 16 running / 293 errors / 16% coverage ] ****** [294 done /288 queued / 16 running / 293 errors / 16% coverage ] ****** [295 done /288 queued / 16 running / 294 errors / 16% coverage ] ****** [295 done /288 queued / 16 running / 294 errors / 16% coverage ] ****** [296 done /289 queued / 16 running / 295 errors / 16% coverage ] ****** [296 done /289 queued / 16 running / 295 errors / 16% coverage ] ****** [297 done /289 queued / 16 running / 296 errors / 16% coverage ] ****** [297 done /289 queued / 16 running / 296 errors / 16% coverage ] ****** [298 done /289 queued / 16 running / 297 errors / 16% coverage ] ****** [298 done /289 queued / 16 running / 297 errors / 16% coverage ] ****** [299 done /291 queued / 16 running / 298 errors / 16% coverage ] ****** [299 done /291 queued / 16 running / 298 errors / 16% coverage ] ****** [300 done /292 queued / 16 running / 299 errors / 16% coverage ] ****** [300 done /292 queued / 16 running / 299 errors / 16% coverage ] ****** [301 done /292 queued / 16 running / 300 errors / 16% coverage ] ****** [301 done /292 queued / 16 running / 300 errors / 16% coverage ] ****** [302 done /293 queued / 16 running / 301 errors / 16% coverage ] ****** [302 done /293 queued / 16 running / 301 errors / 16% coverage ] ****** [303 done /294 queued / 16 running / 302 errors / 16% coverage ] ****** [303 done /294 queued / 16 running / 302 errors / 16% coverage ] ****** [304 done /296 queued / 16 running / 303 errors / 16% coverage ] ****** [304 done /296 queued / 16 running / 303 errors / 16% coverage ] ****** [305 done /296 queued / 16 running / 304 errors / 16% coverage ] ****** [305 done /296 queued / 16 running / 304 errors / 16% coverage ] ****** [306 done /296 queued / 16 running / 305 errors / 16% coverage ] ****** [306 done /296 queued / 16 running / 305 errors / 16% coverage ] ****** [307 done /297 queued / 16 running / 306 errors / 16% coverage ] ****** [307 done /297 queued / 16 running / 306 errors / 16% coverage ] ****** [308 done /299 queued / 16 running / 307 errors / 16% coverage ] ****** [308 done /299 queued / 16 running / 307 errors / 16% coverage ] ****** [309 done /300 queued / 16 running / 308 errors / 16% coverage ] ****** [309 done /300 queued / 16 running / 308 errors / 16% coverage ] ****** [310 done /301 queued / 16 running / 309 errors / 16% coverage ] ****** [310 done /301 queued / 16 running / 309 errors / 16% coverage ] ****** [311 done /303 queued / 16 running / 310 errors / 16% coverage ] ****** [311 done /303 queued / 16 running / 310 errors / 16% coverage ] ****** [312 done /305 queued / 16 running / 311 errors / 16% coverage ] ****** [312 done /305 queued / 16 running / 311 errors / 16% coverage ] ****** [313 done /306 queued / 16 running / 312 errors / 16% coverage ] ****** [313 done /306 queued / 16 running / 312 errors / 16% coverage ] ****** [314 done /307 queued / 16 running / 313 errors / 16% coverage ] ****** [314 done /307 queued / 16 running / 313 errors / 16% coverage ] ****** [315 done /309 queued / 16 running / 314 errors / 16% coverage ] ****** [315 done /309 queued / 16 running / 314 errors / 16% coverage ] ****** [316 done /310 queued / 16 running / 315 errors / 16% coverage ] ****** [316 done /310 queued / 16 running / 315 errors / 16% coverage ] ****** [317 done /312 queued / 16 running / 316 errors / 16% coverage ] ****** [317 done /312 queued / 16 running / 316 errors / 16% coverage ] ****** [318 done /313 queued / 16 running / 317 errors / 16% coverage ] ****** [318 done /313 queued / 16 running / 317 errors / 16% coverage ] ****** [319 done /314 queued / 16 running / 318 errors / 16% coverage ] ****** [319 done /314 queued / 16 running / 318 errors / 16% coverage ] ****** [320 done /314 queued / 16 running / 319 errors / 16% coverage ] ****** [320 done /314 queued / 16 running / 319 errors / 16% coverage ] ****** [321 done /317 queued / 16 running / 320 errors / 16% coverage ] ****** [321 done /317 queued / 16 running / 320 errors / 16% coverage ] ****** [322 done /318 queued / 16 running / 321 errors / 16% coverage ] ****** [322 done /318 queued / 16 running / 321 errors / 16% coverage ] ****** [323 done /319 queued / 16 running / 322 errors / 16% coverage ] ****** [323 done /319 queued / 16 running / 322 errors / 16% coverage ] ****** [324 done /319 queued / 16 running / 323 errors / 16% coverage ] ****** [324 done /319 queued / 16 running / 323 errors / 16% coverage ] ****** [325 done /320 queued / 16 running / 324 errors / 16% coverage ] ****** [325 done /320 queued / 16 running / 324 errors / 16% coverage ] ****** [326 done /322 queued / 16 running / 325 errors / 16% coverage ] ****** [326 done /322 queued / 16 running / 325 errors / 16% coverage ] ****** [327 done /323 queued / 16 running / 326 errors / 16% coverage ] ****** [327 done /323 queued / 16 running / 326 errors / 16% coverage ] ****** [328 done /326 queued / 16 running / 327 errors / 16% coverage ] ****** [328 done /326 queued / 16 running / 327 errors / 16% coverage ] ****** [329 done /327 queued / 16 running / 328 errors / 16% coverage ] ****** [329 done /327 queued / 16 running / 328 errors / 16% coverage ] ****** [330 done /329 queued / 16 running / 329 errors / 16% coverage ] ****** [330 done /329 queued / 16 running / 329 errors / 16% coverage ] ****** [331 done /333 queued / 16 running / 330 errors / 16% coverage ] ****** [331 done /333 queued / 16 running / 330 errors / 16% coverage ] ****** [332 done /335 queued / 16 running / 331 errors / 16% coverage ] ****** [332 done /335 queued / 16 running / 331 errors / 16% coverage ] ****** [333 done /336 queued / 16 running / 332 errors / 16% coverage ] ****** [333 done /336 queued / 16 running / 332 errors / 16% coverage ] ****** [334 done /341 queued / 16 running / 333 errors / 16% coverage ] ****** [334 done /341 queued / 16 running / 333 errors / 16% coverage ] ****** [335 done /341 queued / 16 running / 334 errors / 16% coverage ] ****** [335 done /341 queued / 16 running / 334 errors / 16% coverage ] ****** [336 done /342 queued / 16 running / 335 errors / 16% coverage ] ****** [336 done /342 queued / 16 running / 335 errors / 16% coverage ] ****** [337 done /344 queued / 16 running / 336 errors / 16% coverage ] ****** [337 done /344 queued / 16 running / 336 errors / 16% coverage ] ****** [338 done /345 queued / 16 running / 337 errors / 16% coverage ] ****** [338 done /345 queued / 16 running / 337 errors / 16% coverage ] ****** [339 done /346 queued / 16 running / 338 errors / 16% coverage ] ****** [339 done /346 queued / 16 running / 338 errors / 16% coverage ] ****** [340 done /349 queued / 16 running / 339 errors / 16% coverage ] ****** [340 done /349 queued / 16 running / 339 errors / 16% coverage ] ****** [341 done /349 queued / 16 running / 340 errors / 16% coverage ] ****** [341 done /349 queued / 16 running / 340 errors / 16% coverage ] ****** [342 done /351 queued / 16 running / 341 errors / 16% coverage ] ****** [342 done /351 queued / 16 running / 341 errors / 16% coverage ] ****** [343 done /352 queued / 16 running / 342 errors / 16% coverage ] ****** [343 done /352 queued / 16 running / 342 errors / 16% coverage ] ****** [344 done /353 queued / 16 running / 343 errors / 16% coverage ] ****** [344 done /353 queued / 16 running / 343 errors / 16% coverage ] ****** [345 done /353 queued / 16 running / 344 errors / 16% coverage ] ****** [345 done /353 queued / 16 running / 344 errors / 16% coverage ] ****** [346 done /354 queued / 16 running / 345 errors / 16% coverage ] ****** [346 done /354 queued / 16 running / 345 errors / 16% coverage ] ****** [347 done /356 queued / 16 running / 346 errors / 16% coverage ] ****** [347 done /356 queued / 16 running / 346 errors / 16% coverage ] ****** [348 done /356 queued / 16 running / 347 errors / 16% coverage ] ****** [348 done /356 queued / 16 running / 347 errors / 16% coverage ] ****** [349 done /357 queued / 16 running / 348 errors / 16% coverage ] ****** [349 done /357 queued / 16 running / 348 errors / 16% coverage ] ****** [350 done /358 queued / 16 running / 349 errors / 16% coverage ] ****** [350 done /358 queued / 16 running / 349 errors / 16% coverage ] ****** [351 done /360 queued / 16 running / 350 errors / 16% coverage ] ****** [351 done /360 queued / 16 running / 350 errors / 16% coverage ] ****** [352 done /361 queued / 16 running / 351 errors / 16% coverage ] ****** [352 done /361 queued / 16 running / 351 errors / 16% coverage ] ****** [353 done /362 queued / 16 running / 352 errors / 16% coverage ] ****** [353 done /362 queued / 16 running / 352 errors / 16% coverage ] ****** [354 done /362 queued / 16 running / 353 errors / 16% coverage ] ****** [354 done /362 queued / 16 running / 353 errors / 16% coverage ] ****** [355 done /363 queued / 16 running / 354 errors / 16% coverage ] ****** [355 done /363 queued / 16 running / 354 errors / 16% coverage ] ****** [356 done /364 queued / 16 running / 355 errors / 16% coverage ] ****** [356 done /364 queued / 16 running / 355 errors / 16% coverage ] ****** [357 done /366 queued / 16 running / 356 errors / 16% coverage ] ****** [357 done /366 queued / 16 running / 356 errors / 16% coverage ] ****** [358 done /366 queued / 16 running / 357 errors / 16% coverage ] ****** [358 done /366 queued / 16 running / 357 errors / 16% coverage ] ****** [359 done /367 queued / 16 running / 358 errors / 16% coverage ] ****** [359 done /367 queued / 16 running / 358 errors / 16% coverage ] ****** [360 done /368 queued / 16 running / 359 errors / 16% coverage ] ****** [360 done /368 queued / 16 running / 359 errors / 16% coverage ] ****** [361 done /370 queued / 16 running / 360 errors / 16% coverage ] ****** [361 done /370 queued / 16 running / 360 errors / 16% coverage ] ****** [362 done /371 queued / 16 running / 361 errors / 16% coverage ] ****** [362 done /371 queued / 16 running / 361 errors / 16% coverage ] ****** [363 done /373 queued / 16 running / 362 errors / 16% coverage ] ****** [363 done /373 queued / 16 running / 362 errors / 16% coverage ] ****** [364 done /374 queued / 16 running / 363 errors / 16% coverage ] ****** [364 done /374 queued / 16 running / 363 errors / 16% coverage ] ****** [365 done /376 queued / 16 running / 364 errors / 16% coverage ] ****** [365 done /376 queued / 16 running / 364 errors / 16% coverage ] ****** [366 done /377 queued / 16 running / 365 errors / 16% coverage ] ****** [366 done /377 queued / 16 running / 365 errors / 16% coverage ] ****** [367 done /379 queued / 16 running / 366 errors / 16% coverage ] ****** [367 done /379 queued / 16 running / 366 errors / 16% coverage ] ****** [368 done /380 queued / 16 running / 367 errors / 16% coverage ] ****** [368 done /380 queued / 16 running / 367 errors / 16% coverage ] ****** [369 done /381 queued / 16 running / 368 errors / 16% coverage ] ****** [369 done /381 queued / 16 running / 368 errors / 16% coverage ] ****** [370 done /382 queued / 16 running / 369 errors / 16% coverage ] ****** [370 done /382 queued / 16 running / 369 errors / 16% coverage ] ****** [371 done /382 queued / 16 running / 370 errors / 16% coverage ] ****** [371 done /382 queued / 16 running / 370 errors / 16% coverage ] ****** [372 done /383 queued / 16 running / 371 errors / 16% coverage ] ****** [372 done /383 queued / 16 running / 371 errors / 16% coverage ] ****** [373 done /385 queued / 16 running / 372 errors / 16% coverage ] ****** [373 done /385 queued / 16 running / 372 errors / 16% coverage ] ****** [374 done /386 queued / 16 running / 373 errors / 16% coverage ] ****** [374 done /386 queued / 16 running / 373 errors / 16% coverage ] ****** [375 done /387 queued / 16 running / 374 errors / 16% coverage ] ****** [375 done /387 queued / 16 running / 374 errors / 16% coverage ] ****** [376 done /389 queued / 16 running / 375 errors / 16% coverage ] ****** [376 done /389 queued / 16 running / 375 errors / 16% coverage ] ****** [377 done /389 queued / 16 running / 376 errors / 16% coverage ] ****** [377 done /389 queued / 16 running / 376 errors / 16% coverage ] ****** [378 done /391 queued / 16 running / 377 errors / 16% coverage ] ****** [378 done /391 queued / 16 running / 377 errors / 16% coverage ] ****** [379 done /391 queued / 16 running / 378 errors / 16% coverage ] ****** [379 done /391 queued / 16 running / 378 errors / 16% coverage ] ****** [380 done /392 queued / 16 running / 379 errors / 16% coverage ] ****** [380 done /392 queued / 16 running / 379 errors / 16% coverage ] ****** [381 done /393 queued / 16 running / 380 errors / 16% coverage ] ****** [381 done /393 queued / 16 running / 380 errors / 16% coverage ] ****** [382 done /393 queued / 16 running / 381 errors / 16% coverage ] ****** [382 done /393 queued / 16 running / 381 errors / 16% coverage ] ****** [383 done /394 queued / 16 running / 382 errors / 16% coverage ] ****** [383 done /394 queued / 16 running / 382 errors / 16% coverage ] ****** [384 done /395 queued / 16 running / 383 errors / 16% coverage ] ****** [384 done /395 queued / 16 running / 383 errors / 16% coverage ] ****** [385 done /396 queued / 16 running / 384 errors / 16% coverage ] ****** [385 done /396 queued / 16 running / 384 errors / 16% coverage ] ****** [386 done /397 queued / 16 running / 385 errors / 16% coverage ] ****** [386 done /397 queued / 16 running / 385 errors / 16% coverage ] ****** [387 done /399 queued / 16 running / 386 errors / 16% coverage ] ****** [387 done /399 queued / 16 running / 386 errors / 16% coverage ] ****** [388 done /404 queued / 16 running / 387 errors / 16% coverage ] ****** [388 done /404 queued / 16 running / 387 errors / 16% coverage ] ****** [389 done /406 queued / 16 running / 388 errors / 16% coverage ] ****** [389 done /406 queued / 16 running / 388 errors / 16% coverage ] ****** [390 done /407 queued / 16 running / 389 errors / 16% coverage ] ****** [390 done /407 queued / 16 running / 389 errors / 16% coverage ] ****** [391 done /407 queued / 16 running / 390 errors / 16% coverage ] ****** [391 done /407 queued / 16 running / 390 errors / 16% coverage ] ****** [392 done /408 queued / 16 running / 391 errors / 16% coverage ] ****** [392 done /408 queued / 16 running / 391 errors / 16% coverage ] ****** [393 done /411 queued / 16 running / 392 errors / 16% coverage ] ****** [393 done /411 queued / 16 running / 392 errors / 16% coverage ] ****** [394 done /412 queued / 16 running / 393 errors / 16% coverage ] ****** [394 done /412 queued / 16 running / 393 errors / 16% coverage ] ****** [395 done /414 queued / 16 running / 394 errors / 16% coverage ] ****** [395 done /414 queued / 16 running / 394 errors / 16% coverage ] ****** [396 done /415 queued / 16 running / 395 errors / 16% coverage ] ****** [396 done /415 queued / 16 running / 395 errors / 16% coverage ] ****** [397 done /417 queued / 16 running / 396 errors / 16% coverage ] ****** [397 done /417 queued / 16 running / 396 errors / 16% coverage ] ****** [398 done /418 queued / 16 running / 397 errors / 16% coverage ] ****** [398 done /418 queued / 16 running / 397 errors / 16% coverage ] ****** [399 done /420 queued / 16 running / 398 errors / 16% coverage ] ****** [399 done /420 queued / 16 running / 398 errors / 16% coverage ] ****** [400 done /421 queued / 16 running / 399 errors / 16% coverage ] ****** [400 done /421 queued / 16 running / 399 errors / 16% coverage ] ****** [401 done /425 queued / 16 running / 400 errors / 16% coverage ] ****** [401 done /425 queued / 16 running / 400 errors / 16% coverage ] ****** [402 done /427 queued / 16 running / 401 errors / 16% coverage ] ****** [402 done /427 queued / 16 running / 401 errors / 16% coverage ] ****** [403 done /428 queued / 16 running / 402 errors / 16% coverage ] ****** [403 done /428 queued / 16 running / 402 errors / 16% coverage ] ****** [404 done /429 queued / 16 running / 403 errors / 16% coverage ] ****** [404 done /429 queued / 16 running / 403 errors / 16% coverage ] ****** [405 done /430 queued / 16 running / 404 errors / 16% coverage ] ****** [405 done /430 queued / 16 running / 404 errors / 16% coverage ] ****** [406 done /431 queued / 16 running / 405 errors / 16% coverage ] ****** [406 done /431 queued / 16 running / 405 errors / 16% coverage ] ****** [407 done /432 queued / 16 running / 406 errors / 16% coverage ] ****** [407 done /432 queued / 16 running / 406 errors / 16% coverage ] ****** [408 done /433 queued / 16 running / 407 errors / 16% coverage ] ****** [408 done /433 queued / 16 running / 407 errors / 16% coverage ] ****** [409 done /435 queued / 16 running / 408 errors / 16% coverage ] ****** [409 done /435 queued / 16 running / 408 errors / 16% coverage ] ****** [410 done /435 queued / 16 running / 409 errors / 16% coverage ] ****** [410 done /435 queued / 16 running / 409 errors / 16% coverage ] ****** [411 done /438 queued / 16 running / 410 errors / 16% coverage ] ****** [411 done /438 queued / 16 running / 410 errors / 16% coverage ] ****** [412 done /438 queued / 16 running / 411 errors / 16% coverage ] ****** [412 done /438 queued / 16 running / 411 errors / 16% coverage ] ****** [413 done /440 queued / 16 running / 412 errors / 16% coverage ] ****** [413 done /440 queued / 16 running / 412 errors / 16% coverage ] ****** [414 done /443 queued / 16 running / 413 errors / 16% coverage ] ****** [414 done /443 queued / 16 running / 413 errors / 16% coverage ] ****** [415 done /443 queued / 16 running / 414 errors / 16% coverage ] ****** [415 done /443 queued / 16 running / 414 errors / 16% coverage ] ****** [416 done /444 queued / 16 running / 415 errors / 16% coverage ] ****** [416 done /444 queued / 16 running / 415 errors / 16% coverage ] ****** [417 done /445 queued / 16 running / 416 errors / 16% coverage ] ****** [417 done /445 queued / 16 running / 416 errors / 16% coverage ] ****** [418 done /446 queued / 16 running / 417 errors / 16% coverage ] ****** [418 done /446 queued / 16 running / 417 errors / 16% coverage ] ****** [419 done /446 queued / 16 running / 418 errors / 16% coverage ] ****** [419 done /446 queued / 16 running / 418 errors / 16% coverage ] ****** [420 done /447 queued / 16 running / 419 errors / 16% coverage ] ****** [420 done /447 queued / 16 running / 419 errors / 16% coverage ] ****** [421 done /448 queued / 16 running / 420 errors / 16% coverage ] ****** [421 done /448 queued / 16 running / 420 errors / 16% coverage ] ****** [422 done /448 queued / 16 running / 421 errors / 16% coverage ] ****** [422 done /448 queued / 16 running / 421 errors / 16% coverage ] ****** [423 done /449 queued / 16 running / 422 errors / 16% coverage ] ****** [423 done /449 queued / 16 running / 422 errors / 16% coverage ] ****** [424 done /449 queued / 16 running / 423 errors / 16% coverage ] ****** [424 done /449 queued / 16 running / 423 errors / 16% coverage ] ****** [425 done /449 queued / 16 running / 424 errors / 16% coverage ] ****** [425 done /449 queued / 16 running / 424 errors / 16% coverage ] ****** [426 done /454 queued / 16 running / 425 errors / 16% coverage ] ****** [426 done /454 queued / 16 running / 425 errors / 16% coverage ] ****** [427 done /455 queued / 16 running / 426 errors / 16% coverage ] ****** [427 done /455 queued / 16 running / 426 errors / 16% coverage ] ****** [428 done /455 queued / 16 running / 427 errors / 16% coverage ] ****** [428 done /455 queued / 16 running / 427 errors / 16% coverage ] ****** [429 done /455 queued / 16 running / 428 errors / 16% coverage ] ****** [429 done /455 queued / 16 running / 428 errors / 16% coverage ] ****** [430 done /457 queued / 16 running / 429 errors / 16% coverage ] ****** [430 done /457 queued / 16 running / 429 errors / 16% coverage ] ****** [431 done /460 queued / 16 running / 430 errors / 16% coverage ] ****** [431 done /460 queued / 16 running / 430 errors / 16% coverage ] ****** [432 done /460 queued / 16 running / 431 errors / 16% coverage ] ****** [432 done /460 queued / 16 running / 431 errors / 16% coverage ] ****** [433 done /461 queued / 16 running / 432 errors / 16% coverage ] ****** [433 done /461 queued / 16 running / 432 errors / 16% coverage ] ****** [434 done /462 queued / 16 running / 433 errors / 16% coverage ] ****** [434 done /462 queued / 16 running / 433 errors / 16% coverage ] ****** [435 done /463 queued / 16 running / 434 errors / 16% coverage ] ****** [435 done /463 queued / 16 running / 434 errors / 16% coverage ] ****** [436 done /465 queued / 16 running / 435 errors / 16% coverage ] ****** [436 done /465 queued / 16 running / 435 errors / 16% coverage ] ****** [437 done /469 queued / 16 running / 436 errors / 16% coverage ] ****** [437 done /469 queued / 16 running / 436 errors / 16% coverage ] ****** [438 done /470 queued / 16 running / 437 errors / 16% coverage ] ****** [438 done /470 queued / 16 running / 437 errors / 16% coverage ] ****** [439 done /471 queued / 16 running / 438 errors / 16% coverage ] ****** [439 done /471 queued / 16 running / 438 errors / 16% coverage ] ****** [440 done /472 queued / 16 running / 439 errors / 16% coverage ] ****** [440 done /472 queued / 16 running / 439 errors / 16% coverage ] ****** [441 done /473 queued / 16 running / 440 errors / 16% coverage ] ****** [441 done /473 queued / 16 running / 440 errors / 16% coverage ] ****** [442 done /474 queued / 16 running / 441 errors / 16% coverage ] ****** [442 done /474 queued / 16 running / 441 errors / 16% coverage ] ****** [443 done /475 queued / 16 running / 442 errors / 16% coverage ] ****** [443 done /475 queued / 16 running / 442 errors / 16% coverage ] ****** [444 done /475 queued / 16 running / 443 errors / 16% coverage ] ****** [444 done /475 queued / 16 running / 443 errors / 16% coverage ] ****** [445 done /476 queued / 16 running / 444 errors / 16% coverage ] ****** [445 done /476 queued / 16 running / 444 errors / 16% coverage ] ****** [446 done /477 queued / 16 running / 445 errors / 16% coverage ] ****** [446 done /477 queued / 16 running / 445 errors / 16% coverage ] ****** [447 done /478 queued / 16 running / 446 errors / 16% coverage ] ****** [447 done /478 queued / 16 running / 446 errors / 16% coverage ] ****** [448 done /478 queued / 16 running / 447 errors / 16% coverage ] ****** [448 done /478 queued / 16 running / 447 errors / 16% coverage ] ****** [449 done /479 queued / 16 running / 448 errors / 16% coverage ] ****** [449 done /479 queued / 16 running / 448 errors / 16% coverage ] ****** [450 done /480 queued / 16 running / 449 errors / 16% coverage ] ****** [450 done /480 queued / 16 running / 449 errors / 16% coverage ] ****** [451 done /481 queued / 16 running / 450 errors / 16% coverage ] ****** [451 done /481 queued / 16 running / 450 errors / 16% coverage ] ****** [452 done /482 queued / 16 running / 451 errors / 16% coverage ] ****** [452 done /482 queued / 16 running / 451 errors / 16% coverage ] ****** [453 done /483 queued / 16 running / 452 errors / 16% coverage ] ****** [453 done /483 queued / 16 running / 452 errors / 16% coverage ] ****** [454 done /484 queued / 16 running / 453 errors / 16% coverage ] ****** [454 done /484 queued / 16 running / 453 errors / 16% coverage ] ****** [455 done /486 queued / 16 running / 454 errors / 16% coverage ] ****** [455 done /486 queued / 16 running / 454 errors / 16% coverage ] ****** [456 done /489 queued / 16 running / 455 errors / 16% coverage ] ****** [456 done /489 queued / 16 running / 455 errors / 16% coverage ] ****** [457 done /490 queued / 16 running / 456 errors / 16% coverage ] ****** [457 done /490 queued / 16 running / 456 errors / 16% coverage ] ****** [458 done /492 queued / 16 running / 457 errors / 16% coverage ] ****** [458 done /492 queued / 16 running / 457 errors / 16% coverage ] ****** [459 done /493 queued / 16 running / 458 errors / 16% coverage ] ****** [459 done /493 queued / 16 running / 458 errors / 16% coverage ] ****** [460 done /497 queued / 16 running / 459 errors / 16% coverage ] ****** [460 done /497 queued / 16 running / 459 errors / 16% coverage ] ****** [461 done /501 queued / 16 running / 460 errors / 16% coverage ] ****** [461 done /501 queued / 16 running / 460 errors / 16% coverage ] ****** [462 done /505 queued / 16 running / 461 errors / 16% coverage ] ****** [462 done /505 queued / 16 running / 461 errors / 16% coverage ] ****** [463 done /506 queued / 16 running / 462 errors / 16% coverage ] ****** [463 done /506 queued / 16 running / 462 errors / 16% coverage ] ****** [464 done /507 queued / 16 running / 463 errors / 16% coverage ] ****** [464 done /507 queued / 16 running / 463 errors / 16% coverage ] ****** [465 done /508 queued / 16 running / 464 errors / 16% coverage ] ****** [465 done /508 queued / 16 running / 464 errors / 16% coverage ] ****** [466 done /511 queued / 16 running / 465 errors / 16% coverage ] ****** [466 done /511 queued / 16 running / 465 errors / 16% coverage ] ****** [467 done /512 queued / 16 running / 466 errors / 16% coverage ] ****** [467 done /512 queued / 16 running / 466 errors / 16% coverage ] ****** [468 done /513 queued / 16 running / 467 errors / 16% coverage ] ****** [468 done /513 queued / 16 running / 467 errors / 16% coverage ] ****** [469 done /517 queued / 16 running / 468 errors / 16% coverage ] ****** [469 done /517 queued / 16 running / 468 errors / 16% coverage ] ****** [470 done /519 queued / 16 running / 469 errors / 16% coverage ] ****** [470 done /519 queued / 16 running / 469 errors / 16% coverage ] ****** [471 done /520 queued / 16 running / 470 errors / 16% coverage ] ****** [471 done /520 queued / 16 running / 470 errors / 16% coverage ] ****** [472 done /522 queued / 16 running / 471 errors / 16% coverage ] ****** [472 done /522 queued / 16 running / 471 errors / 16% coverage ] ****** [473 done /522 queued / 16 running / 472 errors / 16% coverage ] ****** [473 done /522 queued / 16 running / 472 errors / 16% coverage ] ****** [474 done /522 queued / 16 running / 473 errors / 16% coverage ] ****** [474 done /522 queued / 16 running / 473 errors / 16% coverage ] ****** [475 done /522 queued / 16 running / 474 errors / 16% coverage ] ****** [475 done /522 queued / 16 running / 474 errors / 16% coverage ] ****** [476 done /522 queued / 16 running / 475 errors / 16% coverage ] ****** [476 done /522 queued / 16 running / 475 errors / 16% coverage ] ****** [477 done /522 queued / 16 running / 476 errors / 16% coverage ] ****** [477 done /522 queued / 16 running / 476 errors / 16% coverage ] ****** [478 done /522 queued / 16 running / 477 errors / 16% coverage ] ****** [478 done /522 queued / 16 running / 477 errors / 16% coverage ] ****** [479 done /523 queued / 16 running / 478 errors / 16% coverage ] ****** [479 done /523 queued / 16 running / 478 errors / 16% coverage ] ****** [480 done /524 queued / 16 running / 479 errors / 16% coverage ] ****** [480 done /524 queued / 16 running / 479 errors / 16% coverage ] ****** [481 done /525 queued / 16 running / 480 errors / 16% coverage ] ****** [481 done /525 queued / 16 running / 480 errors / 16% coverage ] ****** [482 done /525 queued / 16 running / 481 errors / 16% coverage ] ****** [482 done /525 queued / 16 running / 481 errors / 16% coverage ] ****** [483 done /526 queued / 16 running / 482 errors / 16% coverage ] ****** [483 done /526 queued / 16 running / 482 errors / 16% coverage ] ****** [484 done /526 queued / 16 running / 483 errors / 16% coverage ] ****** [484 done /526 queued / 16 running / 483 errors / 16% coverage ] ****** [485 done /527 queued / 16 running / 484 errors / 16% coverage ] ****** [485 done /527 queued / 16 running / 484 errors / 16% coverage ] ****** [486 done /528 queued / 16 running / 485 errors / 16% coverage ] ****** [486 done /528 queued / 16 running / 485 errors / 16% coverage ] ****** [487 done /528 queued / 16 running / 486 errors / 16% coverage ] ****** [487 done /528 queued / 16 running / 486 errors / 16% coverage ] ****** [488 done /528 queued / 16 running / 487 errors / 16% coverage ] ****** [488 done /528 queued / 16 running / 487 errors / 16% coverage ] ****** [489 done /529 queued / 16 running / 488 errors / 16% coverage ] ****** [489 done /529 queued / 16 running / 488 errors / 16% coverage ] ****** [490 done /529 queued / 16 running / 489 errors / 16% coverage ] ****** [490 done /529 queued / 16 running / 489 errors / 16% coverage ] ****** [491 done /529 queued / 16 running / 490 errors / 16% coverage ] ****** [491 done /529 queued / 16 running / 490 errors / 16% coverage ] ****** [492 done /529 queued / 16 running / 491 errors / 16% coverage ] ****** [492 done /529 queued / 16 running / 491 errors / 16% coverage ] ****** [493 done /529 queued / 16 running / 492 errors / 16% coverage ] ****** [493 done /529 queued / 16 running / 492 errors / 16% coverage ] ****** [494 done /529 queued / 16 running / 493 errors / 16% coverage ] ****** [494 done /529 queued / 16 running / 493 errors / 16% coverage ] ****** [495 done /529 queued / 16 running / 494 errors / 16% coverage ] ****** [495 done /529 queued / 16 running / 494 errors / 16% coverage ] ****** [496 done /530 queued / 16 running / 495 errors / 16% coverage ] ****** [496 done /530 queued / 16 running / 495 errors / 16% coverage ] ****** [497 done /530 queued / 16 running / 496 errors / 16% coverage ] ****** [497 done /530 queued / 16 running / 496 errors / 16% coverage ] ****** [498 done /534 queued / 16 running / 497 errors / 16% coverage ] ****** [498 done /534 queued / 16 running / 497 errors / 16% coverage ] ****** [499 done /534 queued / 16 running / 498 errors / 16% coverage ] ****** [499 done /534 queued / 16 running / 498 errors / 16% coverage ] ****** [500 done /535 queued / 16 running / 499 errors / 16% coverage ] ****** [500 done /535 queued / 16 running / 499 errors / 16% coverage ] ****** [501 done /538 queued / 16 running / 500 errors / 16% coverage ] ****** [501 done /538 queued / 16 running / 500 errors / 16% coverage ] ****** [502 done /539 queued / 16 running / 501 errors / 16% coverage ] ****** [502 done /539 queued / 16 running / 501 errors / 16% coverage ] ****** [503 done /540 queued / 16 running / 502 errors / 16% coverage ] ****** [503 done /540 queued / 16 running / 502 errors / 16% coverage ] ****** [504 done /543 queued / 16 running / 503 errors / 16% coverage ] ****** [504 done /543 queued / 16 running / 503 errors / 16% coverage ] ****** [505 done /544 queued / 16 running / 504 errors / 16% coverage ] ****** [505 done /544 queued / 16 running / 504 errors / 16% coverage ] ****** [506 done /545 queued / 16 running / 505 errors / 16% coverage ] ****** [506 done /545 queued / 16 running / 505 errors / 16% coverage ] ****** [507 done /548 queued / 16 running / 506 errors / 16% coverage ] ****** [507 done /548 queued / 16 running / 506 errors / 16% coverage ] ****** [508 done /550 queued / 16 running / 507 errors / 16% coverage ] ****** [508 done /550 queued / 16 running / 507 errors / 16% coverage ] ****** [509 done /551 queued / 16 running / 508 errors / 16% coverage ] ****** [509 done /551 queued / 16 running / 508 errors / 16% coverage ] ****** [510 done /552 queued / 16 running / 509 errors / 16% coverage ] ****** [510 done /552 queued / 16 running / 509 errors / 16% coverage ] ****** [511 done /554 queued / 16 running / 510 errors / 16% coverage ] ****** [511 done /554 queued / 16 running / 510 errors / 16% coverage ] ****** [512 done /555 queued / 16 running / 511 errors / 16% coverage ] ****** [512 done /555 queued / 16 running / 511 errors / 16% coverage ] ****** [513 done /555 queued / 16 running / 512 errors / 16% coverage ] ****** [513 done /555 queued / 16 running / 512 errors / 16% coverage ] ****** [514 done /556 queued / 16 running / 513 errors / 16% coverage ] ****** [514 done /556 queued / 16 running / 513 errors / 16% coverage ] ****** [515 done /556 queued / 16 running / 514 errors / 16% coverage ] ****** [515 done /556 queued / 16 running / 514 errors / 16% coverage ] ****** [516 done /558 queued / 16 running / 515 errors / 16% coverage ] ****** [516 done /558 queued / 16 running / 515 errors / 16% coverage ] ****** [517 done /559 queued / 16 running / 516 errors / 16% coverage ] ****** [517 done /559 queued / 16 running / 516 errors / 16% coverage ] ****** [518 done /559 queued / 16 running / 517 errors / 16% coverage ] ****** [518 done /559 queued / 16 running / 517 errors / 16% coverage ] ****** [519 done /559 queued / 16 running / 518 errors / 16% coverage ] ****** [519 done /559 queued / 16 running / 518 errors / 16% coverage ] ****** [520 done /559 queued / 16 running / 519 errors / 16% coverage ] ****** [520 done /559 queued / 16 running / 519 errors / 16% coverage ] ****** [521 done /559 queued / 16 running / 520 errors / 16% coverage ] ****** [521 done /559 queued / 16 running / 520 errors / 16% coverage ] ****** [522 done /559 queued / 16 running / 521 errors / 16% coverage ] ****** [522 done /559 queued / 16 running / 521 errors / 16% coverage ] ****** [523 done /561 queued / 16 running / 522 errors / 16% coverage ] ****** [523 done /561 queued / 16 running / 522 errors / 16% coverage ] ****** [524 done /562 queued / 16 running / 523 errors / 16% coverage ] ****** [524 done /562 queued / 16 running / 523 errors / 16% coverage ] ****** [525 done /562 queued / 16 running / 524 errors / 16% coverage ] ****** [525 done /562 queued / 16 running / 524 errors / 16% coverage ] ****** [526 done /563 queued / 16 running / 525 errors / 16% coverage ] ****** [526 done /563 queued / 16 running / 525 errors / 16% coverage ] ****** [527 done /564 queued / 16 running / 526 errors / 16% coverage ] ****** [527 done /564 queued / 16 running / 526 errors / 16% coverage ] ****** [528 done /565 queued / 16 running / 527 errors / 16% coverage ] ****** [528 done /565 queued / 16 running / 527 errors / 16% coverage ] ****** [529 done /569 queued / 16 running / 528 errors / 16% coverage ] ****** [529 done /569 queued / 16 running / 528 errors / 16% coverage ] ****** [530 done /569 queued / 16 running / 529 errors / 16% coverage ] ****** [530 done /569 queued / 16 running / 529 errors / 16% coverage ] ****** [531 done /572 queued / 16 running / 530 errors / 16% coverage ] ****** [531 done /572 queued / 16 running / 530 errors / 16% coverage ] ****** [532 done /574 queued / 16 running / 531 errors / 16% coverage ] ****** [532 done /574 queued / 16 running / 531 errors / 16% coverage ] ****** [533 done /575 queued / 16 running / 532 errors / 16% coverage ] ****** [533 done /575 queued / 16 running / 532 errors / 16% coverage ] ****** [534 done /575 queued / 16 running / 533 errors / 16% coverage ] ****** [534 done /575 queued / 16 running / 533 errors / 16% coverage ] ****** [535 done /578 queued / 16 running / 534 errors / 16% coverage ] ****** [535 done /578 queued / 16 running / 534 errors / 16% coverage ] ****** [536 done /580 queued / 16 running / 535 errors / 16% coverage ] ****** [536 done /580 queued / 16 running / 535 errors / 16% coverage ] ****** [537 done /581 queued / 16 running / 536 errors / 16% coverage ] ****** [537 done /581 queued / 16 running / 536 errors / 16% coverage ] ****** [538 done /582 queued / 16 running / 537 errors / 16% coverage ] ****** [538 done /582 queued / 16 running / 537 errors / 16% coverage ] ****** [539 done /583 queued / 16 running / 538 errors / 16% coverage ] ****** [539 done /583 queued / 16 running / 538 errors / 16% coverage ] ****** [540 done /584 queued / 16 running / 539 errors / 16% coverage ] ****** [540 done /584 queued / 16 running / 539 errors / 16% coverage ] ****** [541 done /585 queued / 16 running / 540 errors / 16% coverage ] ****** [541 done /585 queued / 16 running / 540 errors / 16% coverage ] ****** [542 done /585 queued / 16 running / 541 errors / 16% coverage ] ****** [542 done /585 queued / 16 running / 541 errors / 16% coverage ] ****** [543 done /586 queued / 16 running / 542 errors / 16% coverage ] ****** [543 done /586 queued / 16 running / 542 errors / 16% coverage ] ****** [544 done /588 queued / 16 running / 543 errors / 16% coverage ] ****** [544 done /588 queued / 16 running / 543 errors / 16% coverage ] ****** [545 done /589 queued / 16 running / 544 errors / 16% coverage ] ****** [545 done /589 queued / 16 running / 544 errors / 16% coverage ] ****** [546 done /590 queued / 16 running / 545 errors / 16% coverage ] ****** [546 done /590 queued / 16 running / 545 errors / 16% coverage ] ****** [547 done /590 queued / 16 running / 546 errors / 16% coverage ] ****** [547 done /590 queued / 16 running / 546 errors / 16% coverage ] ****** [548 done /592 queued / 16 running / 547 errors / 16% coverage ] ****** [548 done /592 queued / 16 running / 547 errors / 16% coverage ] ****** [549 done /593 queued / 16 running / 548 errors / 16% coverage ] ****** [549 done /593 queued / 16 running / 548 errors / 16% coverage ] ****** [550 done /594 queued / 16 running / 549 errors / 16% coverage ] ****** [550 done /594 queued / 16 running / 549 errors / 16% coverage ] ****** [551 done /594 queued / 16 running / 550 errors / 16% coverage ] ****** [551 done /594 queued / 16 running / 550 errors / 16% coverage ] ****** [552 done /595 queued / 16 running / 551 errors / 16% coverage ] ****** [552 done /595 queued / 16 running / 551 errors / 16% coverage ] ****** [553 done /596 queued / 16 running / 552 errors / 16% coverage ] ****** [553 done /596 queued / 16 running / 552 errors / 16% coverage ] ****** [554 done /598 queued / 16 running / 553 errors / 16% coverage ] ****** [554 done /598 queued / 16 running / 553 errors / 16% coverage ] ****** [555 done /599 queued / 16 running / 554 errors / 16% coverage ] ****** [555 done /599 queued / 16 running / 554 errors / 16% coverage ] ****** [556 done /600 queued / 16 running / 555 errors / 16% coverage ] ****** [556 done /600 queued / 16 running / 555 errors / 16% coverage ] ****** [557 done /600 queued / 16 running / 556 errors / 16% coverage ] ****** [557 done /600 queued / 16 running / 556 errors / 16% coverage ] ****** [558 done /600 queued / 16 running / 557 errors / 16% coverage ] ****** [558 done /600 queued / 16 running / 557 errors / 16% coverage ] ****** [559 done /602 queued / 16 running / 558 errors / 16% coverage ] ****** [559 done /602 queued / 16 running / 558 errors / 16% coverage ] ****** [560 done /603 queued / 16 running / 559 errors / 16% coverage ] ****** [560 done /603 queued / 16 running / 559 errors / 16% coverage ] ****** [561 done /605 queued / 16 running / 560 errors / 16% coverage ] ****** [561 done /605 queued / 16 running / 560 errors / 16% coverage ] ****** [562 done /606 queued / 16 running / 561 errors / 16% coverage ] ****** [562 done /606 queued / 16 running / 561 errors / 16% coverage ] ****** [563 done /609 queued / 16 running / 562 errors / 16% coverage ] ****** [563 done /609 queued / 16 running / 562 errors / 16% coverage ] ****** [564 done /613 queued / 16 running / 563 errors / 16% coverage ] ****** [564 done /613 queued / 16 running / 563 errors / 16% coverage ] ****** [565 done /614 queued / 16 running / 564 errors / 16% coverage ] ****** [565 done /614 queued / 16 running / 564 errors / 16% coverage ] ****** [566 done /614 queued / 16 running / 565 errors / 16% coverage ] ****** [566 done /614 queued / 16 running / 565 errors / 16% coverage ] ****** [567 done /616 queued / 16 running / 566 errors / 16% coverage ] ****** [567 done /616 queued / 16 running / 566 errors / 16% coverage ] ****** [568 done /617 queued / 16 running / 567 errors / 16% coverage ] ****** [568 done /617 queued / 16 running / 567 errors / 16% coverage ] ****** [569 done /618 queued / 16 running / 568 errors / 16% coverage ] ****** [569 done /618 queued / 16 running / 568 errors / 16% coverage ] ****** [570 done /619 queued / 16 running / 569 errors / 16% coverage ] ****** [570 done /619 queued / 16 running / 569 errors / 16% coverage ] ****** [571 done /620 queued / 16 running / 570 errors / 16% coverage ] ****** [571 done /620 queued / 16 running / 570 errors / 16% coverage ] ****** [572 done /621 queued / 16 running / 571 errors / 16% coverage ] ****** [572 done /621 queued / 16 running / 571 errors / 16% coverage ] ****** [573 done /622 queued / 16 running / 572 errors / 16% coverage ] ****** [573 done /622 queued / 16 running / 572 errors / 16% coverage ] ****** [574 done /624 queued / 16 running / 573 errors / 16% coverage ] ****** [574 done /624 queued / 16 running / 573 errors / 16% coverage ] ****** [575 done /626 queued / 16 running / 574 errors / 16% coverage ] ****** [575 done /626 queued / 16 running / 574 errors / 16% coverage ] ****** [576 done /627 queued / 16 running / 575 errors / 16% coverage ] ****** [576 done /627 queued / 16 running / 575 errors / 16% coverage ] ****** [577 done /628 queued / 16 running / 576 errors / 16% coverage ] ****** [577 done /628 queued / 16 running / 576 errors / 16% coverage ] ****** [578 done /629 queued / 16 running / 577 errors / 16% coverage ] ****** [578 done /629 queued / 16 running / 577 errors / 16% coverage ] ****** [579 done /630 queued / 16 running / 578 errors / 16% coverage ] ****** [579 done /630 queued / 16 running / 578 errors / 16% coverage ] ****** [580 done /630 queued / 16 running / 579 errors / 16% coverage ] ****** [580 done /630 queued / 16 running / 579 errors / 16% coverage ] ****** [581 done /630 queued / 16 running / 580 errors / 16% coverage ] ****** [581 done /630 queued / 16 running / 580 errors / 16% coverage ] ****** [582 done /630 queued / 16 running / 581 errors / 16% coverage ] ****** [582 done /630 queued / 16 running / 581 errors / 16% coverage ] ****** [583 done /630 queued / 16 running / 582 errors / 16% coverage ] ****** [583 done /630 queued / 16 running / 582 errors / 16% coverage ] ****** [584 done /632 queued / 16 running / 583 errors / 16% coverage ] ****** [584 done /632 queued / 16 running / 583 errors / 16% coverage ] ****** [585 done /634 queued / 16 running / 584 errors / 16% coverage ] ****** [585 done /634 queued / 16 running / 584 errors / 16% coverage ] ****** [586 done /635 queued / 16 running / 585 errors / 16% coverage ] ****** [586 done /635 queued / 16 running / 585 errors / 16% coverage ] ****** [587 done /635 queued / 16 running / 586 errors / 16% coverage ] ****** [587 done /635 queued / 16 running / 586 errors / 16% coverage ] ****** [588 done /637 queued / 16 running / 587 errors / 16% coverage ] ****** [588 done /637 queued / 16 running / 587 errors / 16% coverage ] ****** [589 done /637 queued / 16 running / 588 errors / 16% coverage ] ****** [589 done /637 queued / 16 running / 588 errors / 16% coverage ] ****** [590 done /638 queued / 16 running / 589 errors / 16% coverage ] ****** [590 done /638 queued / 16 running / 589 errors / 16% coverage ] ****** [591 done /638 queued / 16 running / 590 errors / 16% coverage ] ****** [591 done /638 queued / 16 running / 590 errors / 16% coverage ] ****** [592 done /639 queued / 16 running / 591 errors / 16% coverage ] ****** [592 done /639 queued / 16 running / 591 errors / 16% coverage ] ****** [593 done /640 queued / 16 running / 592 errors / 16% coverage ] ****** [593 done /640 queued / 16 running / 592 errors / 16% coverage ] ****** [594 done /644 queued / 16 running / 593 errors / 16% coverage ] ****** [594 done /644 queued / 16 running / 593 errors / 16% coverage ] ****** [595 done /646 queued / 16 running / 594 errors / 16% coverage ] ****** [595 done /646 queued / 16 running / 594 errors / 16% coverage ] ****** [596 done /647 queued / 16 running / 595 errors / 16% coverage ] ****** [596 done /647 queued / 16 running / 595 errors / 16% coverage ] ****** [597 done /650 queued / 16 running / 596 errors / 16% coverage ] ****** [597 done /650 queued / 16 running / 596 errors / 16% coverage ] ****** [598 done /651 queued / 16 running / 597 errors / 16% coverage ] ****** [598 done /651 queued / 16 running / 597 errors / 16% coverage ] ****** [599 done /652 queued / 16 running / 598 errors / 16% coverage ] ****** [599 done /652 queued / 16 running / 598 errors / 16% coverage ] ****** [600 done /653 queued / 16 running / 599 errors / 16% coverage ] ****** [600 done /653 queued / 16 running / 599 errors / 16% coverage ] ****** [601 done /654 queued / 16 running / 600 errors / 16% coverage ] ****** [601 done /654 queued / 16 running / 600 errors / 16% coverage ] ****** [602 done /654 queued / 16 running / 601 errors / 16% coverage ] ****** [602 done /654 queued / 16 running / 601 errors / 16% coverage ] ****** [603 done /655 queued / 16 running / 602 errors / 16% coverage ] ****** [603 done /655 queued / 16 running / 602 errors / 16% coverage ] ****** [604 done /655 queued / 16 running / 603 errors / 16% coverage ] ****** [604 done /655 queued / 16 running / 603 errors / 16% coverage ] ****** [605 done /656 queued / 16 running / 604 errors / 16% coverage ] ****** [605 done /656 queued / 16 running / 604 errors / 16% coverage ] ****** [606 done /657 queued / 16 running / 605 errors / 16% coverage ] ****** [606 done /657 queued / 16 running / 605 errors / 16% coverage ] ****** [607 done /658 queued / 16 running / 606 errors / 16% coverage ] ****** [607 done /658 queued / 16 running / 606 errors / 16% coverage ] ****** [608 done /658 queued / 16 running / 607 errors / 16% coverage ] ****** [608 done /658 queued / 16 running / 607 errors / 16% coverage ] ****** [609 done /659 queued / 16 running / 608 errors / 16% coverage ] ****** [609 done /659 queued / 16 running / 608 errors / 16% coverage ] ****** [610 done /660 queued / 16 running / 609 errors / 16% coverage ] ****** [610 done /660 queued / 16 running / 609 errors / 16% coverage ] ****** [611 done /661 queued / 16 running / 610 errors / 16% coverage ] ****** [611 done /661 queued / 16 running / 610 errors / 16% coverage ] ****** [612 done /662 queued / 16 running / 611 errors / 16% coverage ] ****** [612 done /662 queued / 16 running / 611 errors / 16% coverage ] ****** [613 done /664 queued / 16 running / 612 errors / 16% coverage ] ****** [613 done /664 queued / 16 running / 612 errors / 16% coverage ] ****** [614 done /666 queued / 16 running / 613 errors / 16% coverage ] ****** [614 done /666 queued / 16 running / 613 errors / 16% coverage ] ****** [615 done /666 queued / 16 running / 614 errors / 16% coverage ] ****** [615 done /666 queued / 16 running / 614 errors / 16% coverage ] ****** [616 done /666 queued / 16 running / 615 errors / 16% coverage ] ****** [616 done /666 queued / 16 running / 615 errors / 16% coverage ] ****** [617 done /667 queued / 16 running / 616 errors / 16% coverage ] ****** [617 done /667 queued / 16 running / 616 errors / 16% coverage ] ****** [618 done /670 queued / 16 running / 617 errors / 16% coverage ] ****** [618 done /670 queued / 16 running / 617 errors / 16% coverage ] ****** [619 done /671 queued / 16 running / 618 errors / 16% coverage ] ****** [619 done /671 queued / 16 running / 618 errors / 16% coverage ] ****** [620 done /671 queued / 16 running / 619 errors / 16% coverage ] ****** [620 done /671 queued / 16 running / 619 errors / 16% coverage ] ****** [621 done /672 queued / 16 running / 620 errors / 16% coverage ] ****** [621 done /672 queued / 16 running / 620 errors / 16% coverage ] ****** [622 done /673 queued / 16 running / 621 errors / 16% coverage ] ****** [622 done /673 queued / 16 running / 621 errors / 16% coverage ] ****** [623 done /675 queued / 16 running / 622 errors / 16% coverage ] ****** [623 done /675 queued / 16 running / 622 errors / 16% coverage ] ****** [624 done /676 queued / 16 running / 623 errors / 16% coverage ] ****** [624 done /676 queued / 16 running / 623 errors / 16% coverage ] ****** [625 done /677 queued / 16 running / 624 errors / 16% coverage ] ****** [625 done /677 queued / 16 running / 624 errors / 16% coverage ] ****** [626 done /678 queued / 16 running / 625 errors / 16% coverage ] ****** [626 done /678 queued / 16 running / 625 errors / 16% coverage ] ****** [627 done /679 queued / 16 running / 626 errors / 16% coverage ] ****** [627 done /679 queued / 16 running / 626 errors / 16% coverage ] ****** [628 done /680 queued / 16 running / 627 errors / 16% coverage ] ****** [628 done /680 queued / 16 running / 627 errors / 16% coverage ] ****** [629 done /681 queued / 16 running / 628 errors / 16% coverage ] ****** [629 done /681 queued / 16 running / 628 errors / 16% coverage ] ****** [630 done /682 queued / 16 running / 629 errors / 16% coverage ] ****** [630 done /682 queued / 16 running / 629 errors / 16% coverage ] ****** [631 done /682 queued / 16 running / 630 errors / 16% coverage ] ****** [631 done /682 queued / 16 running / 630 errors / 16% coverage ] ****** [632 done /683 queued / 16 running / 631 errors / 16% coverage ] ****** [632 done /683 queued / 16 running / 631 errors / 16% coverage ] ****** [633 done /683 queued / 16 running / 632 errors / 16% coverage ] ****** [633 done /683 queued / 16 running / 632 errors / 16% coverage ] ****** [634 done /685 queued / 16 running / 633 errors / 16% coverage ] ****** [634 done /685 queued / 16 running / 633 errors / 16% coverage ] ****** [635 done /686 queued / 16 running / 634 errors / 16% coverage ] ****** [635 done /686 queued / 16 running / 634 errors / 16% coverage ] ****** [636 done /688 queued / 16 running / 635 errors / 16% coverage ] ****** [636 done /688 queued / 16 running / 635 errors / 16% coverage ] ****** [637 done /689 queued / 16 running / 636 errors / 16% coverage ] ****** [637 done /689 queued / 16 running / 636 errors / 16% coverage ] ****** [638 done /689 queued / 16 running / 637 errors / 16% coverage ] ****** [638 done /689 queued / 16 running / 637 errors / 16% coverage ] ****** [639 done /690 queued / 16 running / 638 errors / 16% coverage ] ****** [639 done /690 queued / 16 running / 638 errors / 16% coverage ] ****** [640 done /694 queued / 16 running / 639 errors / 16% coverage ] ****** [640 done /694 queued / 16 running / 639 errors / 16% coverage ] ****** [641 done /696 queued / 16 running / 640 errors / 16% coverage ] ****** [641 done /696 queued / 16 running / 640 errors / 16% coverage ] ****** [642 done /696 queued / 16 running / 641 errors / 16% coverage ] ****** [642 done /696 queued / 16 running / 641 errors / 16% coverage ] ****** [643 done /697 queued / 16 running / 642 errors / 16% coverage ] ****** [643 done /697 queued / 16 running / 642 errors / 16% coverage ] ****** [644 done /698 queued / 16 running / 643 errors / 16% coverage ] ****** [644 done /698 queued / 16 running / 643 errors / 16% coverage ] ****** [645 done /699 queued / 16 running / 644 errors / 16% coverage ] ****** [645 done /699 queued / 16 running / 644 errors / 16% coverage ] ****** [646 done /700 queued / 16 running / 645 errors / 16% coverage ] ****** [646 done /700 queued / 16 running / 645 errors / 16% coverage ] ****** [647 done /701 queued / 16 running / 646 errors / 16% coverage ] ****** [647 done /701 queued / 16 running / 646 errors / 16% coverage ] ****** [648 done /703 queued / 16 running / 647 errors / 16% coverage ] ****** [648 done /703 queued / 16 running / 647 errors / 16% coverage ] ****** [649 done /705 queued / 16 running / 648 errors / 16% coverage ] ****** [649 done /705 queued / 16 running / 648 errors / 16% coverage ] ****** [650 done /707 queued / 16 running / 649 errors / 16% coverage ] ****** [650 done /707 queued / 16 running / 649 errors / 16% coverage ] ****** [651 done /710 queued / 16 running / 650 errors / 16% coverage ] ****** [651 done /710 queued / 16 running / 650 errors / 16% coverage ] ****** [652 done /712 queued / 16 running / 651 errors / 16% coverage ] ****** [652 done /712 queued / 16 running / 651 errors / 16% coverage ] ****** [653 done /712 queued / 16 running / 652 errors / 16% coverage ] ****** [653 done /712 queued / 16 running / 652 errors / 16% coverage ] ****** [654 done /713 queued / 16 running / 653 errors / 16% coverage ] ****** [654 done /713 queued / 16 running / 653 errors / 16% coverage ] ****** [655 done /714 queued / 16 running / 654 errors / 16% coverage ] ****** [655 done /714 queued / 16 running / 654 errors / 16% coverage ] ****** [656 done /715 queued / 16 running / 655 errors / 16% coverage ] ****** [656 done /715 queued / 16 running / 655 errors / 16% coverage ] ****** [657 done /715 queued / 16 running / 656 errors / 16% coverage ] ****** [657 done /715 queued / 16 running / 656 errors / 16% coverage ] ****** [658 done /715 queued / 16 running / 657 errors / 16% coverage ] ****** [658 done /715 queued / 16 running / 657 errors / 16% coverage ] ****** [659 done /715 queued / 16 running / 658 errors / 16% coverage ] ****** [659 done /715 queued / 16 running / 658 errors / 16% coverage ] ****** [660 done /715 queued / 16 running / 659 errors / 16% coverage ] ****** [660 done /715 queued / 16 running / 659 errors / 16% coverage ] ****** [661 done /715 queued / 16 running / 660 errors / 16% coverage ] ****** [661 done /715 queued / 16 running / 660 errors / 16% coverage ] ****** [662 done /715 queued / 16 running / 661 errors / 16% coverage ] ****** [662 done /715 queued / 16 running / 661 errors / 16% coverage ] ****** [663 done /718 queued / 16 running / 662 errors / 16% coverage ] ****** [663 done /718 queued / 16 running / 662 errors / 16% coverage ] ****** [664 done /719 queued / 16 running / 663 errors / 16% coverage ] ****** [664 done /719 queued / 16 running / 663 errors / 16% coverage ] ****** [665 done /720 queued / 16 running / 664 errors / 16% coverage ] ****** [665 done /720 queued / 16 running / 664 errors / 16% coverage ] ****** [666 done /720 queued / 16 running / 665 errors / 16% coverage ] ****** [666 done /720 queued / 16 running / 665 errors / 16% coverage ] ****** [667 done /721 queued / 16 running / 666 errors / 16% coverage ] ****** [667 done /721 queued / 16 running / 666 errors / 16% coverage ] ****** [668 done /723 queued / 16 running / 667 errors / 16% coverage ] ****** [668 done /723 queued / 16 running / 667 errors / 16% coverage ] ****** [669 done /724 queued / 16 running / 668 errors / 16% coverage ] ****** [669 done /724 queued / 16 running / 668 errors / 16% coverage ] ****** [670 done /725 queued / 16 running / 669 errors / 16% coverage ] ****** [670 done /725 queued / 16 running / 669 errors / 16% coverage ] ****** [671 done /728 queued / 16 running / 670 errors / 16% coverage ] ****** [671 done /728 queued / 16 running / 670 errors / 16% coverage ] ****** [672 done /729 queued / 16 running / 671 errors / 16% coverage ] ****** [672 done /729 queued / 16 running / 671 errors / 16% coverage ] ****** [673 done /730 queued / 16 running / 672 errors / 16% coverage ] ****** [673 done /730 queued / 16 running / 672 errors / 16% coverage ] ****** [674 done /730 queued / 16 running / 673 errors / 16% coverage ] ****** [674 done /730 queued / 16 running / 673 errors / 16% coverage ] ****** [675 done /731 queued / 16 running / 674 errors / 16% coverage ] ****** [675 done /731 queued / 16 running / 674 errors / 16% coverage ] ****** [676 done /733 queued / 16 running / 675 errors / 16% coverage ] ****** [676 done /733 queued / 16 running / 675 errors / 16% coverage ] ****** [677 done /734 queued / 16 running / 676 errors / 16% coverage ] ****** [677 done /734 queued / 16 running / 676 errors / 16% coverage ] ****** [678 done /734 queued / 16 running / 677 errors / 16% coverage ] ****** [678 done /734 queued / 16 running / 677 errors / 16% coverage ] ****** [679 done /734 queued / 16 running / 678 errors / 16% coverage ] ****** [679 done /734 queued / 16 running / 678 errors / 16% coverage ] ****** [680 done /735 queued / 16 running / 679 errors / 16% coverage ] ****** [680 done /735 queued / 16 running / 679 errors / 16% coverage ] ****** [681 done /736 queued / 16 running / 680 errors / 16% coverage ] ****** [681 done /736 queued / 16 running / 680 errors / 16% coverage ] ****** [682 done /736 queued / 16 running / 681 errors / 16% coverage ] ****** [682 done /736 queued / 16 running / 681 errors / 16% coverage ] ****** [683 done /737 queued / 16 running / 682 errors / 16% coverage ] ****** [683 done /737 queued / 16 running / 682 errors / 16% coverage ] ****** [684 done /737 queued / 16 running / 683 errors / 16% coverage ] ****** [684 done /737 queued / 16 running / 683 errors / 16% coverage ] ****** [685 done /738 queued / 16 running / 684 errors / 16% coverage ] ****** [685 done /738 queued / 16 running / 684 errors / 16% coverage ] ****** [686 done /739 queued / 16 running / 685 errors / 16% coverage ] ****** [686 done /739 queued / 16 running / 685 errors / 16% coverage ] ****** [687 done /740 queued / 16 running / 686 errors / 16% coverage ] ****** [687 done /740 queued / 16 running / 686 errors / 16% coverage ] ****** [688 done /740 queued / 16 running / 687 errors / 16% coverage ] ****** [688 done /740 queued / 16 running / 687 errors / 16% coverage ] ****** [689 done /740 queued / 16 running / 688 errors / 16% coverage ] ****** [689 done /740 queued / 16 running / 688 errors / 16% coverage ] ****** [690 done /741 queued / 16 running / 689 errors / 16% coverage ] ****** [690 done /741 queued / 16 running / 689 errors / 16% coverage ] ****** [691 done /742 queued / 16 running / 690 errors / 16% coverage ] ****** [691 done /742 queued / 16 running / 690 errors / 16% coverage ] ****** [692 done /745 queued / 16 running / 691 errors / 16% coverage ] ****** [692 done /745 queued / 16 running / 691 errors / 16% coverage ] ****** [693 done /747 queued / 16 running / 692 errors / 16% coverage ] ****** [693 done /747 queued / 16 running / 692 errors / 16% coverage ] ****** [694 done /748 queued / 16 running / 693 errors / 16% coverage ] ****** [694 done /748 queued / 16 running / 693 errors / 16% coverage ] ****** [695 done /752 queued / 16 running / 694 errors / 16% coverage ] ****** [695 done /752 queued / 16 running / 694 errors / 16% coverage ] ****** [696 done /753 queued / 16 running / 695 errors / 16% coverage ] ****** [696 done /753 queued / 16 running / 695 errors / 16% coverage ] ****** [697 done /755 queued / 16 running / 696 errors / 16% coverage ] ****** [697 done /755 queued / 16 running / 696 errors / 16% coverage ] ****** [698 done /758 queued / 16 running / 697 errors / 16% coverage ] ****** [698 done /758 queued / 16 running / 697 errors / 16% coverage ] ****** [699 done /759 queued / 16 running / 698 errors / 16% coverage ] ****** [699 done /759 queued / 16 running / 698 errors / 16% coverage ] ****** [700 done /760 queued / 16 running / 699 errors / 16% coverage ] ****** [700 done /760 queued / 16 running / 699 errors / 16% coverage ] ****** [701 done /761 queued / 16 running / 700 errors / 16% coverage ] ****** [701 done /761 queued / 16 running / 700 errors / 16% coverage ] ****** [702 done /763 queued / 16 running / 701 errors / 16% coverage ] ****** [702 done /763 queued / 16 running / 701 errors / 16% coverage ] ****** [703 done /764 queued / 16 running / 702 errors / 16% coverage ] ****** [703 done /764 queued / 16 running / 702 errors / 16% coverage ] ****** [704 done /765 queued / 16 running / 703 errors / 16% coverage ] ****** [704 done /765 queued / 16 running / 703 errors / 16% coverage ] ****** [705 done /766 queued / 16 running / 704 errors / 16% coverage ] ****** [705 done /766 queued / 16 running / 704 errors / 16% coverage ] ****** [706 done /768 queued / 16 running / 705 errors / 16% coverage ] ****** [706 done /768 queued / 16 running / 705 errors / 16% coverage ] ****** [707 done /769 queued / 16 running / 706 errors / 16% coverage ] ****** [707 done /769 queued / 16 running / 706 errors / 16% coverage ] ****** [708 done /770 queued / 16 running / 707 errors / 16% coverage ] ****** [708 done /770 queued / 16 running / 707 errors / 16% coverage ] ****** [709 done /773 queued / 16 running / 708 errors / 16% coverage ] ****** [709 done /773 queued / 16 running / 708 errors / 16% coverage ] ****** [710 done /774 queued / 16 running / 709 errors / 16% coverage ] ****** [710 done /774 queued / 16 running / 709 errors / 16% coverage ] ****** [711 done /779 queued / 16 running / 710 errors / 16% coverage ] ****** [711 done /779 queued / 16 running / 710 errors / 16% coverage ] ****** [712 done /779 queued / 16 running / 711 errors / 16% coverage ] ****** [712 done /779 queued / 16 running / 711 errors / 16% coverage ] ****** [713 done /781 queued / 16 running / 712 errors / 16% coverage ] ****** [713 done /781 queued / 16 running / 712 errors / 16% coverage ] ****** [714 done /781 queued / 16 running / 713 errors / 16% coverage ] ****** [714 done /781 queued / 16 running / 713 errors / 16% coverage ] ****** [715 done /782 queued / 16 running / 714 errors / 16% coverage ] ****** [715 done /782 queued / 16 running / 714 errors / 16% coverage ] ****** [716 done /782 queued / 16 running / 715 errors / 16% coverage ] ****** [716 done /782 queued / 16 running / 715 errors / 16% coverage ] ****** [717 done /782 queued / 16 running / 716 errors / 16% coverage ] ****** [717 done /782 queued / 16 running / 716 errors / 16% coverage ] ****** [718 done /786 queued / 16 running / 717 errors / 16% coverage ] ****** [718 done /786 queued / 16 running / 717 errors / 16% coverage ] ****** [719 done /786 queued / 16 running / 718 errors / 16% coverage ] ****** [719 done /786 queued / 16 running / 718 errors / 16% coverage ] ****** [720 done /789 queued / 16 running / 719 errors / 16% coverage ] ****** [720 done /789 queued / 16 running / 719 errors / 16% coverage ] ****** [721 done /792 queued / 16 running / 720 errors / 16% coverage ] ****** [721 done /792 queued / 16 running / 720 errors / 16% coverage ] ****** [722 done /793 queued / 16 running / 721 errors / 16% coverage ] ****** [722 done /793 queued / 16 running / 721 errors / 16% coverage ] ****** [723 done /795 queued / 16 running / 722 errors / 16% coverage ] ****** [723 done /795 queued / 16 running / 722 errors / 16% coverage ] ****** [724 done /797 queued / 16 running / 723 errors / 16% coverage ] ****** [724 done /797 queued / 16 running / 723 errors / 16% coverage ] ****** [725 done /797 queued / 16 running / 724 errors / 16% coverage ] ****** [725 done /797 queued / 16 running / 724 errors / 16% coverage ] ****** [726 done /800 queued / 16 running / 725 errors / 16% coverage ] ****** [726 done /800 queued / 16 running / 725 errors / 16% coverage ] ****** [727 done /802 queued / 16 running / 726 errors / 16% coverage ] ****** [727 done /802 queued / 16 running / 726 errors / 16% coverage ] ****** [728 done /802 queued / 16 running / 727 errors / 16% coverage ] ****** [728 done /802 queued / 16 running / 727 errors / 16% coverage ] ****** [729 done /803 queued / 16 running / 728 errors / 16% coverage ] ****** [729 done /803 queued / 16 running / 728 errors / 16% coverage ] ****** [730 done /804 queued / 16 running / 729 errors / 16% coverage ] ****** [730 done /804 queued / 16 running / 729 errors / 16% coverage ] ****** [731 done /805 queued / 16 running / 730 errors / 16% coverage ] ****** [731 done /805 queued / 16 running / 730 errors / 16% coverage ] ****** [732 done /807 queued / 16 running / 731 errors / 16% coverage ] ****** [732 done /807 queued / 16 running / 731 errors / 16% coverage ] ****** [733 done /808 queued / 16 running / 732 errors / 16% coverage ] ****** [733 done /808 queued / 16 running / 732 errors / 16% coverage ] ****** [734 done /809 queued / 16 running / 733 errors / 16% coverage ] ****** [734 done /809 queued / 16 running / 733 errors / 16% coverage ] ****** [735 done /810 queued / 16 running / 734 errors / 16% coverage ] ****** [735 done /810 queued / 16 running / 734 errors / 16% coverage ] ****** [736 done /811 queued / 16 running / 735 errors / 16% coverage ] ****** [736 done /811 queued / 16 running / 735 errors / 16% coverage ] ****** [737 done /812 queued / 16 running / 736 errors / 16% coverage ] ****** [737 done /812 queued / 16 running / 736 errors / 16% coverage ] ****** [738 done /813 queued / 16 running / 737 errors / 16% coverage ] ****** [738 done /813 queued / 16 running / 737 errors / 16% coverage ] ****** [739 done /814 queued / 16 running / 738 errors / 16% coverage ] ****** [739 done /814 queued / 16 running / 738 errors / 16% coverage ] ****** [740 done /815 queued / 16 running / 739 errors / 16% coverage ] ****** [740 done /815 queued / 16 running / 739 errors / 16% coverage ] ****** [741 done /815 queued / 16 running / 740 errors / 16% coverage ] ****** [741 done /815 queued / 16 running / 740 errors / 16% coverage ] ****** [742 done /815 queued / 16 running / 741 errors / 16% coverage ] ****** [742 done /815 queued / 16 running / 741 errors / 16% coverage ] ****** [743 done /817 queued / 16 running / 742 errors / 16% coverage ] ****** [743 done /817 queued / 16 running / 742 errors / 16% coverage ] ****** [744 done /819 queued / 16 running / 743 errors / 16% coverage ] ****** [744 done /819 queued / 16 running / 743 errors / 16% coverage ] ****** [745 done /819 queued / 16 running / 744 errors / 16% coverage ] ****** [745 done /819 queued / 16 running / 744 errors / 16% coverage ] ****** [746 done /823 queued / 16 running / 745 errors / 16% coverage ] ****** [746 done /823 queued / 16 running / 745 errors / 16% coverage ] ****** [747 done /824 queued / 16 running / 746 errors / 16% coverage ] ****** [747 done /824 queued / 16 running / 746 errors / 16% coverage ] ****** [748 done /825 queued / 16 running / 747 errors / 16% coverage ] ****** [748 done /825 queued / 16 running / 747 errors / 16% coverage ] ****** [749 done /826 queued / 16 running / 748 errors / 16% coverage ] ****** [749 done /826 queued / 16 running / 748 errors / 16% coverage ] ****** [750 done /827 queued / 16 running / 749 errors / 16% coverage ] ****** [750 done /827 queued / 16 running / 749 errors / 16% coverage ] ****** [751 done /828 queued / 16 running / 750 errors / 16% coverage ] ****** [751 done /828 queued / 16 running / 750 errors / 16% coverage ] ****** [752 done /829 queued / 16 running / 751 errors / 16% coverage ] ****** [752 done /829 queued / 16 running / 751 errors / 16% coverage ] ****** [753 done /833 queued / 16 running / 752 errors / 16% coverage ] ****** [753 done /833 queued / 16 running / 752 errors / 16% coverage ] ****** [754 done /834 queued / 16 running / 753 errors / 16% coverage ] ****** [754 done /834 queued / 16 running / 753 errors / 16% coverage ] ****** [755 done /835 queued / 16 running / 754 errors / 16% coverage ] ****** [755 done /835 queued / 16 running / 754 errors / 16% coverage ] ****** [756 done /836 queued / 16 running / 755 errors / 16% coverage ] ****** [756 done /836 queued / 16 running / 755 errors / 16% coverage ] ****** [757 done /837 queued / 16 running / 756 errors / 16% coverage ] ****** [757 done /837 queued / 16 running / 756 errors / 16% coverage ] ****** [758 done /838 queued / 16 running / 757 errors / 16% coverage ] ****** [758 done /838 queued / 16 running / 757 errors / 16% coverage ] ****** [759 done /839 queued / 16 running / 758 errors / 16% coverage ] ****** [759 done /839 queued / 16 running / 758 errors / 16% coverage ] ****** [760 done /840 queued / 16 running / 759 errors / 16% coverage ] ****** [760 done /840 queued / 16 running / 759 errors / 16% coverage ] ****** [761 done /842 queued / 16 running / 760 errors / 16% coverage ] ****** [761 done /842 queued / 16 running / 760 errors / 16% coverage ] ****** [762 done /843 queued / 16 running / 761 errors / 16% coverage ] ****** [762 done /843 queued / 16 running / 761 errors / 16% coverage ] ****** [763 done /843 queued / 16 running / 762 errors / 16% coverage ] ****** [763 done /843 queued / 16 running / 762 errors / 16% coverage ] ****** [764 done /843 queued / 16 running / 763 errors / 16% coverage ] ****** [764 done /843 queued / 16 running / 763 errors / 16% coverage ] ****** [765 done /844 queued / 16 running / 764 errors / 16% coverage ] ****** [765 done /844 queued / 16 running / 764 errors / 16% coverage ] ****** [766 done /846 queued / 16 running / 765 errors / 16% coverage ] ****** [766 done /846 queued / 16 running / 765 errors / 16% coverage ] ****** [767 done /846 queued / 16 running / 766 errors / 16% coverage ] ****** [767 done /846 queued / 16 running / 766 errors / 16% coverage ] ****** [768 done /849 queued / 16 running / 767 errors / 16% coverage ] ****** [768 done /849 queued / 16 running / 767 errors / 16% coverage ] ****** [769 done /852 queued / 16 running / 768 errors / 16% coverage ] ****** [769 done /852 queued / 16 running / 768 errors / 16% coverage ] ****** [770 done /852 queued / 16 running / 769 errors / 16% coverage ] ****** [770 done /852 queued / 16 running / 769 errors / 16% coverage ] ****** [771 done /853 queued / 16 running / 770 errors / 16% coverage ] ****** [771 done /853 queued / 16 running / 770 errors / 16% coverage ] ****** [772 done /855 queued / 16 running / 771 errors / 16% coverage ] ****** [772 done /855 queued / 16 running / 771 errors / 16% coverage ] ****** [773 done /855 queued / 16 running / 772 errors / 16% coverage ] ****** [773 done /855 queued / 16 running / 772 errors / 16% coverage ] ****** [774 done /856 queued / 16 running / 773 errors / 16% coverage ] ****** [774 done /856 queued / 16 running / 773 errors / 16% coverage ] ****** [775 done /858 queued / 16 running / 774 errors / 16% coverage ] ****** [775 done /858 queued / 16 running / 774 errors / 16% coverage ] ****** [776 done /862 queued / 16 running / 775 errors / 16% coverage ] ****** [776 done /862 queued / 16 running / 775 errors / 16% coverage ] ****** [777 done /862 queued / 16 running / 776 errors / 16% coverage ] ****** [777 done /862 queued / 16 running / 776 errors / 16% coverage ] ****** [778 done /862 queued / 16 running / 777 errors / 16% coverage ] ****** [778 done /862 queued / 16 running / 777 errors / 16% coverage ] ****** [779 done /864 queued / 16 running / 778 errors / 16% coverage ] ****** [779 done /864 queued / 16 running / 778 errors / 16% coverage ] ****** [780 done /864 queued / 16 running / 779 errors / 16% coverage ] ****** [780 done /864 queued / 16 running / 779 errors / 16% coverage ] ****** [781 done /868 queued / 16 running / 780 errors / 16% coverage ] ****** [781 done /868 queued / 16 running / 780 errors / 16% coverage ] ****** [782 done /870 queued / 16 running / 781 errors / 16% coverage ] ****** [782 done /870 queued / 16 running / 781 errors / 16% coverage ] ****** [783 done /875 queued / 16 running / 782 errors / 16% coverage ] ****** [783 done /875 queued / 16 running / 782 errors / 16% coverage ] ****** [784 done /875 queued / 16 running / 783 errors / 16% coverage ] ****** [784 done /875 queued / 16 running / 783 errors / 16% coverage ] ****** [785 done /877 queued / 16 running / 784 errors / 16% coverage ] ****** [785 done /877 queued / 16 running / 784 errors / 16% coverage ] ****** [786 done /878 queued / 16 running / 785 errors / 16% coverage ] ****** [786 done /878 queued / 16 running / 785 errors / 16% coverage ] ****** [787 done /878 queued / 16 running / 786 errors / 16% coverage ] ****** [787 done /878 queued / 16 running / 786 errors / 16% coverage ] ****** [788 done /879 queued / 16 running / 787 errors / 16% coverage ] ****** [788 done /879 queued / 16 running / 787 errors / 16% coverage ] ****** [789 done /879 queued / 16 running / 788 errors / 16% coverage ] ****** [789 done /879 queued / 16 running / 788 errors / 16% coverage ] ****** [790 done /879 queued / 16 running / 789 errors / 16% coverage ] ****** [790 done /879 queued / 16 running / 789 errors / 16% coverage ] ****** [791 done /879 queued / 16 running / 790 errors / 16% coverage ] ****** [791 done /879 queued / 16 running / 790 errors / 16% coverage ] ****** [792 done /880 queued / 16 running / 791 errors / 16% coverage ] ****** [792 done /880 queued / 16 running / 791 errors / 16% coverage ] ****** [793 done /880 queued / 16 running / 792 errors / 16% coverage ] ****** [793 done /880 queued / 16 running / 792 errors / 16% coverage ] ****** [794 done /883 queued / 16 running / 793 errors / 16% coverage ] ****** [794 done /883 queued / 16 running / 793 errors / 16% coverage ] ****** [795 done /884 queued / 16 running / 794 errors / 16% coverage ] ****** [795 done /884 queued / 16 running / 794 errors / 16% coverage ] ****** [796 done /885 queued / 16 running / 795 errors / 16% coverage ] ****** [796 done /885 queued / 16 running / 795 errors / 16% coverage ] ****** [797 done /885 queued / 16 running / 796 errors / 16% coverage ] ****** [797 done /885 queued / 16 running / 796 errors / 16% coverage ] ****** [798 done /886 queued / 16 running / 797 errors / 16% coverage ] ****** [798 done /886 queued / 16 running / 797 errors / 16% coverage ] ****** [799 done /886 queued / 16 running / 798 errors / 16% coverage ] ****** [799 done /886 queued / 16 running / 798 errors / 16% coverage ] ****** [800 done /887 queued / 16 running / 799 errors / 16% coverage ] ****** [800 done /887 queued / 16 running / 799 errors / 16% coverage ] ****** [801 done /889 queued / 16 running / 800 errors / 16% coverage ] ****** [801 done /889 queued / 16 running / 800 errors / 16% coverage ] ****** [802 done /889 queued / 16 running / 801 errors / 16% coverage ] ****** [802 done /889 queued / 16 running / 801 errors / 16% coverage ] ****** [803 done /890 queued / 16 running / 802 errors / 16% coverage ] ****** [803 done /890 queued / 16 running / 802 errors / 16% coverage ] ****** [804 done /890 queued / 16 running / 803 errors / 16% coverage ] ****** [804 done /890 queued / 16 running / 803 errors / 16% coverage ] ****** [805 done /891 queued / 16 running / 804 errors / 16% coverage ] ****** [805 done /891 queued / 16 running / 804 errors / 16% coverage ] ****** [806 done /892 queued / 16 running / 805 errors / 16% coverage ] ****** [806 done /892 queued / 16 running / 805 errors / 16% coverage ] ****** [807 done /893 queued / 16 running / 806 errors / 16% coverage ] ****** [807 done /893 queued / 16 running / 806 errors / 16% coverage ] ****** [808 done /894 queued / 16 running / 807 errors / 16% coverage ] ****** [808 done /894 queued / 16 running / 807 errors / 16% coverage ] ****** [809 done /894 queued / 16 running / 808 errors / 16% coverage ] ****** [809 done /894 queued / 16 running / 808 errors / 16% coverage ] ****** [810 done /894 queued / 16 running / 809 errors / 16% coverage ] ****** [810 done /894 queued / 16 running / 809 errors / 16% coverage ] ****** [811 done /895 queued / 16 running / 810 errors / 16% coverage ] ****** [811 done /895 queued / 16 running / 810 errors / 16% coverage ] ****** [812 done /895 queued / 16 running / 811 errors / 16% coverage ] ****** [812 done /895 queued / 16 running / 811 errors / 16% coverage ] ****** [813 done /896 queued / 16 running / 812 errors / 16% coverage ] ****** [813 done /896 queued / 16 running / 812 errors / 16% coverage ] ****** [814 done /896 queued / 16 running / 813 errors / 16% coverage ] ****** [814 done /896 queued / 16 running / 813 errors / 16% coverage ] ****** [815 done /896 queued / 16 running / 814 errors / 16% coverage ] ****** [815 done /896 queued / 16 running / 814 errors / 16% coverage ] ****** [816 done /897 queued / 16 running / 815 errors / 16% coverage ] ****** [816 done /897 queued / 16 running / 815 errors / 16% coverage ] ****** [817 done /898 queued / 16 running / 816 errors / 16% coverage ] ****** [817 done /898 queued / 16 running / 816 errors / 16% coverage ] ****** [818 done /899 queued / 16 running / 817 errors / 16% coverage ] ****** [818 done /899 queued / 16 running / 817 errors / 16% coverage ] ****** [819 done /900 queued / 16 running / 818 errors / 16% coverage ] ****** [819 done /900 queued / 16 running / 818 errors / 16% coverage ] ****** [820 done /901 queued / 16 running / 819 errors / 16% coverage ] ****** [820 done /901 queued / 16 running / 819 errors / 16% coverage ] ****** [821 done /902 queued / 16 running / 820 errors / 16% coverage ] ****** [821 done /902 queued / 16 running / 820 errors / 16% coverage ] ****** [822 done /903 queued / 16 running / 821 errors / 16% coverage ] ****** [822 done /903 queued / 16 running / 821 errors / 16% coverage ] ****** [823 done /904 queued / 16 running / 822 errors / 16% coverage ] ****** [823 done /904 queued / 16 running / 822 errors / 16% coverage ] ****** [824 done /905 queued / 16 running / 823 errors / 16% coverage ] ****** [824 done /905 queued / 16 running / 823 errors / 16% coverage ] ****** [825 done /908 queued / 16 running / 824 errors / 16% coverage ] ****** [825 done /908 queued / 16 running / 824 errors / 16% coverage ] ****** [826 done /909 queued / 16 running / 825 errors / 16% coverage ] ****** [826 done /909 queued / 16 running / 825 errors / 16% coverage ] ****** [827 done /910 queued / 16 running / 826 errors / 16% coverage ] ****** [827 done /910 queued / 16 running / 826 errors / 16% coverage ] ****** [828 done /912 queued / 16 running / 827 errors / 16% coverage ] ****** [828 done /912 queued / 16 running / 827 errors / 16% coverage ] ****** [829 done /914 queued / 16 running / 828 errors / 16% coverage ] ****** [829 done /914 queued / 16 running / 828 errors / 16% coverage ] ****** [830 done /915 queued / 16 running / 829 errors / 16% coverage ] ****** [830 done /915 queued / 16 running / 829 errors / 16% coverage ] ****** [831 done /916 queued / 16 running / 830 errors / 16% coverage ] ****** [831 done /916 queued / 16 running / 830 errors / 16% coverage ] ****** [832 done /917 queued / 16 running / 831 errors / 16% coverage ] ****** [832 done /917 queued / 16 running / 831 errors / 16% coverage ] ****** [833 done /921 queued / 16 running / 832 errors / 16% coverage ] ****** [833 done /921 queued / 16 running / 832 errors / 16% coverage ] ****** [834 done /924 queued / 16 running / 833 errors / 16% coverage ] ****** [834 done /924 queued / 16 running / 833 errors / 16% coverage ] ****** [835 done /926 queued / 16 running / 834 errors / 16% coverage ] ****** [835 done /926 queued / 16 running / 834 errors / 16% coverage ] ****** [836 done /927 queued / 16 running / 835 errors / 16% coverage ] ****** [836 done /927 queued / 16 running / 835 errors / 16% coverage ] ****** [837 done /930 queued / 16 running / 836 errors / 16% coverage ] ****** [837 done /930 queued / 16 running / 836 errors / 16% coverage ] ****** [838 done /932 queued / 16 running / 837 errors / 16% coverage ] ****** [838 done /932 queued / 16 running / 837 errors / 16% coverage ] ****** [839 done /933 queued / 16 running / 838 errors / 16% coverage ] ****** [839 done /933 queued / 16 running / 838 errors / 16% coverage ] ****** [840 done /936 queued / 16 running / 839 errors / 16% coverage ] ****** [840 done /936 queued / 16 running / 839 errors / 16% coverage ] ****** [841 done /940 queued / 16 running / 840 errors / 16% coverage ] ****** [841 done /940 queued / 16 running / 840 errors / 16% coverage ] ****** [842 done /940 queued / 16 running / 841 errors / 16% coverage ] ****** [842 done /940 queued / 16 running / 841 errors / 16% coverage ] ****** [843 done /941 queued / 16 running / 842 errors / 16% coverage ] ****** [843 done /941 queued / 16 running / 842 errors / 16% coverage ] ****** [844 done /942 queued / 16 running / 843 errors / 16% coverage ] ****** [844 done /942 queued / 16 running / 843 errors / 16% coverage ] ****** [845 done /944 queued / 16 running / 844 errors / 16% coverage ] ****** [845 done /944 queued / 16 running / 844 errors / 16% coverage ] ****** [846 done /946 queued / 16 running / 845 errors / 16% coverage ] ****** [846 done /946 queued / 16 running / 845 errors / 16% coverage ] ****** [847 done /947 queued / 16 running / 846 errors / 16% coverage ] ****** [847 done /947 queued / 16 running / 846 errors / 16% coverage ] ****** [848 done /951 queued / 16 running / 847 errors / 16% coverage ] ****** [848 done /951 queued / 16 running / 847 errors / 16% coverage ] ****** [849 done /952 queued / 16 running / 848 errors / 16% coverage ] ****** [849 done /952 queued / 16 running / 848 errors / 16% coverage ] ****** [850 done /953 queued / 16 running / 849 errors / 16% coverage ] ****** [850 done /953 queued / 16 running / 849 errors / 16% coverage ] ****** [851 done /953 queued / 16 running / 850 errors / 16% coverage ] ****** [851 done /953 queued / 16 running / 850 errors / 16% coverage ] ****** [852 done /953 queued / 16 running / 851 errors / 16% coverage ] ****** [852 done /953 queued / 16 running / 851 errors / 16% coverage ] ****** [853 done /954 queued / 16 running / 852 errors / 16% coverage ] ****** [853 done /954 queued / 16 running / 852 errors / 16% coverage ] ****** [854 done /954 queued / 16 running / 853 errors / 16% coverage ] ****** [854 done /954 queued / 16 running / 853 errors / 16% coverage ] ****** [855 done /954 queued / 16 running / 854 errors / 16% coverage ] ****** [855 done /954 queued / 16 running / 854 errors / 16% coverage ] ****** [856 done /954 queued / 16 running / 855 errors / 16% coverage ] ****** [856 done /954 queued / 16 running / 855 errors / 16% coverage ] ****** [857 done /956 queued / 16 running / 856 errors / 16% coverage ] ****** [857 done /956 queued / 16 running / 856 errors / 16% coverage ] ****** [858 done /956 queued / 16 running / 857 errors / 16% coverage ] ****** [858 done /956 queued / 16 running / 857 errors / 16% coverage ] ****** [859 done /956 queued / 16 running / 858 errors / 16% coverage ] ****** [859 done /956 queued / 16 running / 858 errors / 16% coverage ] ****** [860 done /957 queued / 16 running / 859 errors / 16% coverage ] ****** [860 done /957 queued / 16 running / 859 errors / 16% coverage ] ****** [861 done /959 queued / 16 running / 860 errors / 16% coverage ] ****** [861 done /959 queued / 16 running / 860 errors / 16% coverage ] ****** [862 done /961 queued / 16 running / 861 errors / 16% coverage ] ****** [862 done /961 queued / 16 running / 861 errors / 16% coverage ] ****** [863 done /962 queued / 16 running / 862 errors / 16% coverage ] ****** [863 done /962 queued / 16 running / 862 errors / 16% coverage ] ****** [864 done /964 queued / 16 running / 863 errors / 16% coverage ] ****** [864 done /964 queued / 16 running / 863 errors / 16% coverage ] ****** [865 done /965 queued / 16 running / 864 errors / 16% coverage ] ****** [865 done /965 queued / 16 running / 864 errors / 16% coverage ] ****** [866 done /965 queued / 16 running / 865 errors / 16% coverage ] ****** [866 done /965 queued / 16 running / 865 errors / 16% coverage ] ****** [867 done /967 queued / 16 running / 866 errors / 16% coverage ] ****** [867 done /967 queued / 16 running / 866 errors / 16% coverage ] ****** [868 done /968 queued / 16 running / 867 errors / 16% coverage ] ****** [868 done /968 queued / 16 running / 867 errors / 16% coverage ] ****** [869 done /969 queued / 16 running / 868 errors / 16% coverage ] ****** [869 done /969 queued / 16 running / 868 errors / 16% coverage ] ****** [870 done /970 queued / 16 running / 869 errors / 16% coverage ] ****** [870 done /970 queued / 16 running / 869 errors / 16% coverage ] ****** [871 done /972 queued / 16 running / 870 errors / 16% coverage ] ****** [871 done /972 queued / 16 running / 870 errors / 16% coverage ] ****** [872 done /973 queued / 16 running / 871 errors / 16% coverage ] ****** [872 done /973 queued / 16 running / 871 errors / 16% coverage ] ****** [873 done /974 queued / 16 running / 872 errors / 16% coverage ] ****** [873 done /974 queued / 16 running / 872 errors / 16% coverage ] ****** [874 done /974 queued / 16 running / 873 errors / 16% coverage ] ****** [874 done /974 queued / 16 running / 873 errors / 16% coverage ] ****** [875 done /975 queued / 16 running / 874 errors / 16% coverage ] ****** [875 done /975 queued / 16 running / 874 errors / 16% coverage ] ****** [876 done /977 queued / 16 running / 875 errors / 16% coverage ] ****** [876 done /977 queued / 16 running / 875 errors / 16% coverage ] ****** [877 done /977 queued / 16 running / 876 errors / 16% coverage ] ****** [877 done /977 queued / 16 running / 876 errors / 16% coverage ] ****** [878 done /978 queued / 16 running / 877 errors / 16% coverage ] ****** [878 done /978 queued / 16 running / 877 errors / 16% coverage ] ****** [879 done /978 queued / 16 running / 878 errors / 16% coverage ] ****** [879 done /978 queued / 16 running / 878 errors / 16% coverage ] ****** [880 done /979 queued / 16 running / 879 errors / 16% coverage ] ****** [880 done /979 queued / 16 running / 879 errors / 16% coverage ] ****** [881 done /980 queued / 16 running / 880 errors / 16% coverage ] ****** [881 done /980 queued / 16 running / 880 errors / 16% coverage ] ****** [882 done /982 queued / 16 running / 881 errors / 16% coverage ] ****** [882 done /982 queued / 16 running / 881 errors / 16% coverage ] ****** [883 done /983 queued / 16 running / 882 errors / 16% coverage ] ****** [883 done /983 queued / 16 running / 882 errors / 16% coverage ] ****** [884 done /984 queued / 16 running / 883 errors / 16% coverage ] ****** [884 done /984 queued / 16 running / 883 errors / 16% coverage ] ****** [885 done /985 queued / 16 running / 884 errors / 16% coverage ] ****** [885 done /985 queued / 16 running / 884 errors / 16% coverage ] ****** [886 done /985 queued / 16 running / 885 errors / 16% coverage ] ****** [886 done /985 queued / 16 running / 885 errors / 16% coverage ] ****** [887 done /987 queued / 16 running / 886 errors / 16% coverage ] ****** [887 done /987 queued / 16 running / 886 errors / 16% coverage ] ****** [888 done /987 queued / 16 running / 887 errors / 16% coverage ] ****** [888 done /987 queued / 16 running / 887 errors / 16% coverage ] ****** [889 done /988 queued / 16 running / 888 errors / 16% coverage ] ****** [889 done /988 queued / 16 running / 888 errors / 16% coverage ] ****** [890 done /988 queued / 16 running / 889 errors / 16% coverage ] ****** [890 done /988 queued / 16 running / 889 errors / 16% coverage ] ****** [891 done /989 queued / 16 running / 890 errors / 16% coverage ] ****** [891 done /989 queued / 16 running / 890 errors / 16% coverage ] ****** [892 done /993 queued / 16 running / 891 errors / 16% coverage ] ****** [892 done /993 queued / 16 running / 891 errors / 16% coverage ] ****** [893 done /994 queued / 16 running / 892 errors / 16% coverage ] ****** [893 done /994 queued / 16 running / 892 errors / 16% coverage ] ****** [894 done /995 queued / 16 running / 893 errors / 16% coverage ] ****** [894 done /995 queued / 16 running / 893 errors / 16% coverage ] ****** [895 done /997 queued / 16 running / 894 errors / 16% coverage ] ****** [895 done /997 queued / 16 running / 894 errors / 16% coverage ] ****** [896 done /998 queued / 16 running / 895 errors / 16% coverage ] ****** [896 done /998 queued / 16 running / 895 errors / 16% coverage ] ****** [897 done /999 queued / 16 running / 896 errors / 16% coverage ] ****** [897 done /999 queued / 16 running / 896 errors / 16% coverage ] ****** [898 done /1000 queued / 16 running / 897 errors / 16% coverage ] ****** [898 done /1000 queued / 16 running / 897 errors / 16% coverage ] ****** [899 done /1004 queued / 16 running / 898 errors / 16% coverage ] ****** [899 done /1004 queued / 16 running / 898 errors / 16% coverage ] ****** [900 done /1005 queued / 16 running / 899 errors / 16% coverage ] ****** [900 done /1005 queued / 16 running / 899 errors / 16% coverage ] ****** [901 done /1006 queued / 16 running / 900 errors / 16% coverage ] ****** [901 done /1006 queued / 16 running / 900 errors / 16% coverage ] ****** [902 done /1007 queued / 16 running / 901 errors / 16% coverage ] ****** [902 done /1007 queued / 16 running / 901 errors / 16% coverage ] ****** [903 done /1008 queued / 16 running / 902 errors / 16% coverage ] ****** [903 done /1008 queued / 16 running / 902 errors / 16% coverage ] ****** [904 done /1009 queued / 16 running / 903 errors / 16% coverage ] ****** [904 done /1009 queued / 16 running / 903 errors / 16% coverage ] ****** [905 done /1011 queued / 16 running / 904 errors / 16% coverage ] ****** [905 done /1011 queued / 16 running / 904 errors / 16% coverage ] ****** [906 done /1013 queued / 16 running / 905 errors / 16% coverage ] ****** [906 done /1013 queued / 16 running / 905 errors / 16% coverage ] ****** [907 done /1013 queued / 16 running / 906 errors / 16% coverage ] ****** [907 done /1013 queued / 16 running / 906 errors / 16% coverage ] ****** [908 done /1014 queued / 16 running / 907 errors / 16% coverage ] ****** [908 done /1014 queued / 16 running / 907 errors / 16% coverage ] ****** [909 done /1015 queued / 16 running / 908 errors / 16% coverage ] ****** [909 done /1015 queued / 16 running / 908 errors / 16% coverage ] ****** [910 done /1019 queued / 16 running / 909 errors / 16% coverage ] ****** [910 done /1019 queued / 16 running / 909 errors / 16% coverage ] ****** [911 done /1019 queued / 16 running / 910 errors / 16% coverage ] ****** [911 done /1019 queued / 16 running / 910 errors / 16% coverage ] ****** [912 done /1020 queued / 16 running / 911 errors / 16% coverage ] ****** [912 done /1020 queued / 16 running / 911 errors / 16% coverage ] ****** [913 done /1020 queued / 16 running / 912 errors / 16% coverage ] ****** [913 done /1020 queued / 16 running / 912 errors / 16% coverage ] ****** [914 done /1021 queued / 16 running / 913 errors / 16% coverage ] ****** [914 done /1021 queued / 16 running / 913 errors / 16% coverage ] ****** [915 done /1024 queued / 16 running / 914 errors / 16% coverage ] ****** [915 done /1024 queued / 16 running / 914 errors / 16% coverage ] ****** [916 done /1024 queued / 16 running / 915 errors / 16% coverage ] ****** [916 done /1024 queued / 16 running / 915 errors / 16% coverage ] ****** [917 done /1024 queued / 16 running / 916 errors / 16% coverage ] ****** [917 done /1024 queued / 16 running / 916 errors / 16% coverage ] ****** [918 done /1024 queued / 16 running / 917 errors / 16% coverage ] ****** [918 done /1024 queued / 16 running / 917 errors / 16% coverage ] ****** [919 done /1025 queued / 16 running / 918 errors / 16% coverage ] ****** [919 done /1025 queued / 16 running / 918 errors / 16% coverage ] ****** [920 done /1026 queued / 16 running / 919 errors / 16% coverage ] ****** [920 done /1026 queued / 16 running / 919 errors / 16% coverage ] ****** [921 done /1028 queued / 16 running / 920 errors / 16% coverage ] ****** [921 done /1028 queued / 16 running / 920 errors / 16% coverage ] ****** [922 done /1028 queued / 16 running / 921 errors / 16% coverage ] ****** [922 done /1028 queued / 16 running / 921 errors / 16% coverage ] ****** [923 done /1032 queued / 16 running / 922 errors / 16% coverage ] ****** [923 done /1032 queued / 16 running / 922 errors / 16% coverage ] ****** [924 done /1033 queued / 16 running / 923 errors / 16% coverage ] ****** [924 done /1033 queued / 16 running / 923 errors / 16% coverage ] ****** [925 done /1033 queued / 16 running / 924 errors / 16% coverage ] ****** [925 done /1033 queued / 16 running / 924 errors / 16% coverage ] ****** [926 done /1034 queued / 16 running / 925 errors / 16% coverage ] ****** [926 done /1034 queued / 16 running / 925 errors / 16% coverage ] ****** [927 done /1035 queued / 16 running / 926 errors / 16% coverage ] ****** [927 done /1035 queued / 16 running / 926 errors / 16% coverage ] ****** [928 done /1036 queued / 16 running / 927 errors / 16% coverage ] ****** [928 done /1036 queued / 16 running / 927 errors / 16% coverage ] ****** [929 done /1036 queued / 16 running / 928 errors / 16% coverage ] ****** [929 done /1036 queued / 16 running / 928 errors / 16% coverage ] ****** [930 done /1036 queued / 16 running / 929 errors / 16% coverage ] ****** [930 done /1036 queued / 16 running / 929 errors / 16% coverage ] ****** [931 done /1037 queued / 16 running / 930 errors / 16% coverage ] ****** [931 done /1037 queued / 16 running / 930 errors / 16% coverage ] ****** [932 done /1039 queued / 16 running / 931 errors / 16% coverage ] ****** [932 done /1039 queued / 16 running / 931 errors / 16% coverage ] ****** [933 done /1040 queued / 16 running / 932 errors / 16% coverage ] ****** [933 done /1040 queued / 16 running / 932 errors / 16% coverage ] ****** [934 done /1042 queued / 16 running / 933 errors / 16% coverage ] ****** [934 done /1042 queued / 16 running / 933 errors / 16% coverage ] ****** [935 done /1047 queued / 16 running / 934 errors / 16% coverage ] ****** [935 done /1047 queued / 16 running / 934 errors / 16% coverage ] ****** [936 done /1049 queued / 16 running / 935 errors / 16% coverage ] ****** [936 done /1049 queued / 16 running / 935 errors / 16% coverage ] ****** [937 done /1051 queued / 16 running / 936 errors / 16% coverage ] ****** [937 done /1051 queued / 16 running / 936 errors / 16% coverage ] ****** [938 done /1051 queued / 16 running / 937 errors / 16% coverage ] ****** [938 done /1051 queued / 16 running / 937 errors / 16% coverage ] ****** [939 done /1051 queued / 16 running / 938 errors / 16% coverage ] ****** [939 done /1051 queued / 16 running / 938 errors / 16% coverage ] ****** [940 done /1051 queued / 16 running / 939 errors / 16% coverage ] ****** [940 done /1051 queued / 16 running / 939 errors / 16% coverage ] ****** [941 done /1053 queued / 16 running / 940 errors / 16% coverage ] ****** [941 done /1053 queued / 16 running / 940 errors / 16% coverage ] ****** [942 done /1056 queued / 16 running / 941 errors / 16% coverage ] ****** [942 done /1056 queued / 16 running / 941 errors / 16% coverage ] ****** [943 done /1056 queued / 16 running / 942 errors / 16% coverage ] ****** [943 done /1056 queued / 16 running / 942 errors / 16% coverage ] ****** [944 done /1057 queued / 16 running / 943 errors / 16% coverage ] ****** [944 done /1057 queued / 16 running / 943 errors / 16% coverage ] ****** [945 done /1058 queued / 16 running / 944 errors / 16% coverage ] ****** [945 done /1058 queued / 16 running / 944 errors / 16% coverage ] ****** [946 done /1058 queued / 16 running / 945 errors / 16% coverage ] ****** [946 done /1058 queued / 16 running / 945 errors / 16% coverage ] ****** [947 done /1060 queued / 16 running / 946 errors / 16% coverage ] ****** [947 done /1060 queued / 16 running / 946 errors / 16% coverage ] ****** [948 done /1061 queued / 16 running / 947 errors / 16% coverage ] ****** [948 done /1061 queued / 16 running / 947 errors / 16% coverage ] ****** [949 done /1063 queued / 16 running / 948 errors / 16% coverage ] ****** [949 done /1063 queued / 16 running / 948 errors / 16% coverage ] ****** [950 done /1064 queued / 16 running / 949 errors / 16% coverage ] ****** [950 done /1064 queued / 16 running / 949 errors / 16% coverage ] ****** [951 done /1066 queued / 16 running / 950 errors / 16% coverage ] ****** [951 done /1066 queued / 16 running / 950 errors / 16% coverage ] ****** [952 done /1068 queued / 16 running / 951 errors / 16% coverage ] ****** [952 done /1068 queued / 16 running / 951 errors / 16% coverage ] ****** [953 done /1069 queued / 16 running / 952 errors / 16% coverage ] ****** [953 done /1069 queued / 16 running / 952 errors / 16% coverage ] ****** [954 done /1070 queued / 16 running / 953 errors / 16% coverage ] ****** [954 done /1070 queued / 16 running / 953 errors / 16% coverage ] ****** [955 done /1071 queued / 16 running / 954 errors / 16% coverage ] ****** [955 done /1071 queued / 16 running / 954 errors / 16% coverage ] ****** [956 done /1072 queued / 16 running / 955 errors / 16% coverage ] ****** [956 done /1072 queued / 16 running / 955 errors / 16% coverage ] ****** [957 done /1072 queued / 16 running / 956 errors / 16% coverage ] ****** [957 done /1072 queued / 16 running / 956 errors / 16% coverage ] ****** [958 done /1072 queued / 16 running / 957 errors / 16% coverage ] ****** [958 done /1072 queued / 16 running / 957 errors / 16% coverage ] ****** [959 done /1072 queued / 16 running / 958 errors / 16% coverage ] ****** [959 done /1072 queued / 16 running / 958 errors / 16% coverage ] ****** [960 done /1072 queued / 16 running / 959 errors / 16% coverage ] ****** [960 done /1072 queued / 16 running / 959 errors / 16% coverage ] ****** [961 done /1074 queued / 16 running / 960 errors / 16% coverage ] ****** [961 done /1074 queued / 16 running / 960 errors / 16% coverage ] ****** [962 done /1075 queued / 16 running / 961 errors / 16% coverage ] ****** [962 done /1075 queued / 16 running / 961 errors / 16% coverage ] ****** [963 done /1075 queued / 16 running / 962 errors / 16% coverage ] ****** [963 done /1075 queued / 16 running / 962 errors / 16% coverage ] ****** [964 done /1076 queued / 16 running / 963 errors / 16% coverage ] ****** [964 done /1076 queued / 16 running / 963 errors / 16% coverage ] ****** [965 done /1077 queued / 16 running / 964 errors / 16% coverage ] ****** [965 done /1077 queued / 16 running / 964 errors / 16% coverage ] ****** [966 done /1078 queued / 16 running / 965 errors / 16% coverage ] ****** [966 done /1078 queued / 16 running / 965 errors / 16% coverage ] ****** [967 done /1078 queued / 16 running / 966 errors / 16% coverage ] ****** [967 done /1078 queued / 16 running / 966 errors / 16% coverage ] ****** [968 done /1079 queued / 16 running / 967 errors / 16% coverage ] ****** [968 done /1079 queued / 16 running / 967 errors / 16% coverage ] ****** [969 done /1080 queued / 16 running / 968 errors / 16% coverage ] ****** [969 done /1080 queued / 16 running / 968 errors / 16% coverage ] ****** [970 done /1081 queued / 16 running / 969 errors / 16% coverage ] ****** [970 done /1081 queued / 16 running / 969 errors / 16% coverage ] ****** [971 done /1082 queued / 16 running / 970 errors / 16% coverage ] ****** [971 done /1082 queued / 16 running / 970 errors / 16% coverage ] ****** [972 done /1082 queued / 16 running / 971 errors / 16% coverage ] ****** [972 done /1082 queued / 16 running / 971 errors / 16% coverage ] ****** [973 done /1083 queued / 16 running / 972 errors / 16% coverage ] ****** [973 done /1083 queued / 16 running / 972 errors / 16% coverage ] ****** [974 done /1084 queued / 16 running / 973 errors / 16% coverage ] ****** [974 done /1084 queued / 16 running / 973 errors / 16% coverage ] ****** [975 done /1088 queued / 16 running / 974 errors / 16% coverage ] ****** [975 done /1088 queued / 16 running / 974 errors / 16% coverage ] ****** [976 done /1089 queued / 16 running / 975 errors / 16% coverage ] ****** [976 done /1089 queued / 16 running / 975 errors / 16% coverage ] ****** [977 done /1090 queued / 16 running / 976 errors / 16% coverage ] ****** [977 done /1090 queued / 16 running / 976 errors / 16% coverage ] ****** [978 done /1091 queued / 16 running / 977 errors / 16% coverage ] ****** [978 done /1091 queued / 16 running / 977 errors / 16% coverage ] ****** [979 done /1092 queued / 16 running / 978 errors / 16% coverage ] ****** [979 done /1092 queued / 16 running / 978 errors / 16% coverage ] ****** [980 done /1094 queued / 16 running / 979 errors / 16% coverage ] ****** [980 done /1094 queued / 16 running / 979 errors / 16% coverage ] ****** [981 done /1095 queued / 16 running / 980 errors / 16% coverage ] ****** [981 done /1095 queued / 16 running / 980 errors / 16% coverage ] ****** [982 done /1097 queued / 16 running / 981 errors / 16% coverage ] ****** [982 done /1097 queued / 16 running / 981 errors / 16% coverage ] ****** [983 done /1098 queued / 16 running / 982 errors / 16% coverage ] ****** [983 done /1098 queued / 16 running / 982 errors / 16% coverage ] ****** [984 done /1099 queued / 16 running / 983 errors / 16% coverage ] ****** [984 done /1099 queued / 16 running / 983 errors / 16% coverage ] ****** [985 done /1101 queued / 16 running / 984 errors / 16% coverage ] ****** [985 done /1101 queued / 16 running / 984 errors / 16% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","toString","apply","bound "]
*-- Stat Module Done --*
*-- Test Case {"_bound":0,"Switcher":false,"Target_Switch_Base":0} start 0.0394 took 2.942s
*-- Test Case {"Switcher":true,"Target_Switch_Base":0,"_bound":1,"ExpansionArg_type":0} start 3.0524 took 3.0758s
*-- Errors occured in test {"Switcher":true,"Target_Switch_Base":0,"_bound":1,"ExpansionArg_type":0}
* Error: TypeError: Cannot read property 'initConfig' of undefined
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"Target_Switch_Base":0,"_bound":1}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":1,"_bound":2} start 6.1456 took 3.3731s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":1,"_bound":2}
* Error: TypeError: Cannot read property 'initConfig' of null
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":1,"_bound":2}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":2,"_bound":3,"ExpansionArg_int":0} start 9.5547 took 10.7216s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":2,"_bound":3,"ExpansionArg_int":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');



///--- Globals

var Algorithms = {
  'rsa-sha1': true,
  'rsa-sha256': true,
  'rsa-sha512': true,
  'dsa-sha1': true,
  'hmac-sha1': true,
  'hmac-sha256': true,
  'hmac-sha512': true
};

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};



///--- Specific Errors

function HttpSignatureError(message, caller) {
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, caller || HttpSignatureError);

  this.message = message;
  this.name = caller.name;
}
util.inherits(HttpSignatureError, Error);

function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);



///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "content-md5"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }

    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    if (!Algorithms[parsed.params.algorithm])
      throw new InvalidParamsError(parsed.params.algorithm +
                                   ' is not supported');

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h !== 'request-line') {
        var value = request.headers[h];
        if (!value)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      } else {
        parsed.signingString +=
          request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":2,"_bound":3}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":3,"ExpansionArg_int":0,"_bound":4,"ExpansionArg_string":"PureString"} start 20.3758 took 13.012s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":3,"ExpansionArg_int":0,"_bound":4,"ExpansionArg_string":"PureString"}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');



///--- Globals

var Algorithms = {
  'rsa-sha1': true,
  'rsa-sha256': true,
  'rsa-sha512': true,
  'dsa-sha1': true,
  'hmac-sha1': true,
  'hmac-sha256': true,
  'hmac-sha512': true
};

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};



///--- Specific Errors

function HttpSignatureError(message, caller) {
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, caller || HttpSignatureError);

  this.message = message;
  this.name = caller.name;
}
util.inherits(HttpSignatureError, Error);

function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);



///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "content-md5"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }

    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    if (!Algorithms[parsed.params.algorithm])
      throw new InvalidParamsError(parsed.params.algorithm +
                                   ' is not supported');

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h !== 'request-line') {
        var value = request.headers[h];
        if (!value)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      } else {
        parsed.signingString +=
          request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":3,"ExpansionArg_int":0,"_bound":4}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_string":"","_bound":5,"ExpansionArg_array_length":0} start 33.4677 took 12.0912s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_string":"","_bound":5,"ExpansionArg_array_length":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');



///--- Globals

var Algorithms = {
  'rsa-sha1': true,
  'rsa-sha256': true,
  'rsa-sha512': true,
  'dsa-sha1': true,
  'hmac-sha1': true,
  'hmac-sha256': true,
  'hmac-sha512': true
};

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};



///--- Specific Errors

function HttpSignatureError(message, caller) {
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, caller || HttpSignatureError);

  this.message = message;
  this.name = caller.name;
}
util.inherits(HttpSignatureError, Error);

function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);



///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "content-md5"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }

    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    if (!Algorithms[parsed.params.algorithm])
      throw new InvalidParamsError(parsed.params.algorithm +
                                   ' is not supported');

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h !== 'request-line') {
        var value = request.headers[h];
        if (!value)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      } else {
        parsed.signingString +=
          request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_string":"","_bound":5}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"_bound":6,"ExpansionArg_bool":false} start 45.7328 took 11.2433s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"_bound":6,"ExpansionArg_bool":false}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');



///--- Globals

var Algorithms = {
  'rsa-sha1': true,
  'rsa-sha256': true,
  'rsa-sha512': true,
  'dsa-sha1': true,
  'hmac-sha1': true,
  'hmac-sha256': true,
  'hmac-sha512': true
};

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};



///--- Specific Errors

function HttpSignatureError(message, caller) {
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, caller || HttpSignatureError);

  this.message = message;
  this.name = caller.name;
}
util.inherits(HttpSignatureError, Error);

function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);



///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "content-md5"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }

    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    if (!Algorithms[parsed.params.algorithm])
      throw new InvalidParamsError(parsed.params.algorithm +
                                   ' is not supported');

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h !== 'request-line') {
        var value = request.headers[h];
        if (!value)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      } else {
        parsed.signingString +=
          request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"_bound":6}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"_bound":7,"ExpansionArg_array_element_0_type":0} start 45.661 took 12.4949s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"_bound":7,"ExpansionArg_array_element_0_type":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');



///--- Globals

var Algorithms = {
  'rsa-sha1': true,
  'rsa-sha256': true,
  'rsa-sha512': true,
  'dsa-sha1': true,
  'hmac-sha1': true,
  'hmac-sha256': true,
  'hmac-sha512': true
};

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};



///--- Specific Errors

function HttpSignatureError(message, caller) {
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, caller || HttpSignatureError);

  this.message = message;
  this.name = caller.name;
}
util.inherits(HttpSignatureError, Error);

function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);



///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "content-md5"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }

    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    if (!Algorithms[parsed.params.algorithm])
      throw new InvalidParamsError(parsed.params.algorithm +
                                   ' is not supported');

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h !== 'request-line') {
        var value = request.headers[h];
        if (!value)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      } else {
        parsed.signingString +=
          request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"_bound":7}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":8,"ExpansionArg_array_element_0_int":0} start 58.3212 took 11.6528s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":8,"ExpansionArg_array_element_0_int":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');



///--- Globals

var Algorithms = {
  'rsa-sha1': true,
  'rsa-sha256': true,
  'rsa-sha512': true,
  'dsa-sha1': true,
  'hmac-sha1': true,
  'hmac-sha256': true,
  'hmac-sha512': true
};

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};



///--- Specific Errors

function HttpSignatureError(message, caller) {
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, caller || HttpSignatureError);

  this.message = message;
  this.name = caller.name;
}
util.inherits(HttpSignatureError, Error);

function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);



///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "content-md5"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }

    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    if (!Algorithms[parsed.params.algorithm])
      throw new InvalidParamsError(parsed.params.algorithm +
                                   ' is not supported');

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h !== 'request-line') {
        var value = request.headers[h];
        if (!value)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      } else {
        parsed.signingString +=
          request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":8}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":9,"ExpansionArg_array_element_1_type":0} start 58.2945 took 13.0952s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":9,"ExpansionArg_array_element_1_type":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');



///--- Globals

var Algorithms = {
  'rsa-sha1': true,
  'rsa-sha256': true,
  'rsa-sha512': true,
  'dsa-sha1': true,
  'hmac-sha1': true,
  'hmac-sha256': true,
  'hmac-sha512': true
};

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};



///--- Specific Errors

function HttpSignatureError(message, caller) {
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, caller || HttpSignatureError);

  this.message = message;
  this.name = caller.name;
}
util.inherits(HttpSignatureError, Error);

function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);



///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "content-md5"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }

    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    if (!Algorithms[parsed.params.algorithm])
      throw new InvalidParamsError(parsed.params.algorithm +
                                   ' is not supported');

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h !== 'request-line') {
        var value = request.headers[h];
        if (!value)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      } else {
        parsed.signingString +=
          request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":9}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"_bound":11,"ExpansionArg_array_element_2_type":0} start 71.4993 took 9.0728s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"_bound":11,"ExpansionArg_array_element_2_type":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');



///--- Globals

var Algorithms = {
  'rsa-sha1': true,
  'rsa-sha256': true,
  'rsa-sha512': true,
  'dsa-sha1': true,
  'hmac-sha1': true,
  'hmac-sha256': true,
  'hmac-sha512': true
};

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};



///--- Specific Errors

function HttpSignatureError(message, caller) {
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, caller || HttpSignatureError);

  this.message = message;
  this.name = caller.name;
}
util.inherits(HttpSignatureError, Error);

function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);



///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "content-md5"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }

    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    if (!Algorithms[parsed.params.algorithm])
      throw new InvalidParamsError(parsed.params.algorithm +
                                   ' is not supported');

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h !== 'request-line') {
        var value = request.headers[h];
        if (!value)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      } else {
        parsed.signingString +=
          request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"_bound":11}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"_bound":10,"ExpansionArg_array_element_0_string":"PureString"} start 70.1086 took 11.2831s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"_bound":10,"ExpansionArg_array_element_0_string":"PureString"}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');



///--- Globals

var Algorithms = {
  'rsa-sha1': true,
  'rsa-sha256': true,
  'rsa-sha512': true,
  'dsa-sha1': true,
  'hmac-sha1': true,
  'hmac-sha256': true,
  'hmac-sha512': true
};

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};



///--- Specific Errors

function HttpSignatureError(message, caller) {
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, caller || HttpSignatureError);

  this.message = message;
  this.name = caller.name;
}
util.inherits(HttpSignatureError, Error);

function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);



///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "content-md5"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }

    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    if (!Algorithms[parsed.params.algorithm])
      throw new InvalidParamsError(parsed.params.algorithm +
                                   ' is not supported');

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h !== 'request-line') {
        var value = request.headers[h];
        if (!value)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      } else {
        parsed.signingString +=
          request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"_bound":10}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"_bound":11,"ExpansionArg_array_element_1_type":0} start 70.1502 took 12.2705s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"_bound":11,"ExpansionArg_array_element_1_type":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');



///--- Globals

var Algorithms = {
  'rsa-sha1': true,
  'rsa-sha256': true,
  'rsa-sha512': true,
  'dsa-sha1': true,
  'hmac-sha1': true,
  'hmac-sha256': true,
  'hmac-sha512': true
};

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};



///--- Specific Errors

function HttpSignatureError(message, caller) {
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, caller || HttpSignatureError);

  this.message = message;
  this.name = caller.name;
}
util.inherits(HttpSignatureError, Error);

function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);



///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "content-md5"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }

    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    if (!Algorithms[parsed.params.algorithm])
      throw new InvalidParamsError(parsed.params.algorithm +
                                   ' is not supported');

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h !== 'request-line') {
        var value = request.headers[h];
        if (!value)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      } else {
        parsed.signingString +=
          request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"_bound":11}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":10} start 71.5478 took 11.9996s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":10}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');



///--- Globals

var Algorithms = {
  'rsa-sha1': true,
  'rsa-sha256': true,
  'rsa-sha512': true,
  'dsa-sha1': true,
  'hmac-sha1': true,
  'hmac-sha256': true,
  'hmac-sha512': true
};

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};



///--- Specific Errors

function HttpSignatureError(message, caller) {
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, caller || HttpSignatureError);

  this.message = message;
  this.name = caller.name;
}
util.inherits(HttpSignatureError, Error);

function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);



///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "content-md5"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }

    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    if (!Algorithms[parsed.params.algorithm])
      throw new InvalidParamsError(parsed.params.algorithm +
                                   ' is not supported');

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h !== 'request-line') {
        var value = request.headers[h];
        if (!value)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      } else {
        parsed.signingString +=
          request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":10}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":9} start 70.0569 took 13.6721s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":9}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');



///--- Globals

var Algorithms = {
  'rsa-sha1': true,
  'rsa-sha256': true,
  'rsa-sha512': true,
  'dsa-sha1': true,
  'hmac-sha1': true,
  'hmac-sha256': true,
  'hmac-sha512': true
};

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};



///--- Specific Errors

function HttpSignatureError(message, caller) {
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, caller || HttpSignatureError);

  this.message = message;
  this.name = caller.name;
}
util.inherits(HttpSignatureError, Error);

function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);



///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "content-md5"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }

    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    if (!Algorithms[parsed.params.algorithm])
      throw new InvalidParamsError(parsed.params.algorithm +
                                   ' is not supported');

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h !== 'request-line') {
        var value = request.headers[h];
        if (!value)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      } else {
        parsed.signingString +=
          request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":9}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"_bound":12} start 80.6551 took 11.6072s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"_bound":12}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');



///--- Globals

var Algorithms = {
  'rsa-sha1': true,
  'rsa-sha256': true,
  'rsa-sha512': true,
  'dsa-sha1': true,
  'hmac-sha1': true,
  'hmac-sha256': true,
  'hmac-sha512': true
};

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};



///--- Specific Errors

function HttpSignatureError(message, caller) {
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, caller || HttpSignatureError);

  this.message = message;
  this.name = caller.name;
}
util.inherits(HttpSignatureError, Error);

function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);



///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "content-md5"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }

    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    if (!Algorithms[parsed.params.algorithm])
      throw new InvalidParamsError(parsed.params.algorithm +
                                   ' is not supported');

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h !== 'request-line') {
        var value = request.headers[h];
        if (!value)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      } else {
        parsed.signingString +=
          request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"_bound":12}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":12,"ExpansionArg_array_element_2_type":0} start 83.6589 took 9.8039s
