/root/Targets/idoc
└─┬ idoc@0.3.0 
  ├─┬ autoprefixer-stylus@0.13.0 
  │ ├─┬ autoprefixer@6.6.1 
  │ │ ├── browserslist@1.5.2 
  │ │ ├── caniuse-db@1.0.30000738 
  │ │ ├── normalize-range@0.1.2 
  │ │ ├── num2fraction@1.2.2 
  │ │ └── postcss-value-parser@3.3.0 
  │ ├─┬ multi-stage-sourcemap@0.2.1 
  │ │ └── source-map@0.1.43 
  │ └─┬ postcss@5.2.8 
  │   ├─┬ chalk@1.1.3 
  │   │ ├── ansi-styles@2.2.1 
  │   │ ├─┬ has-ansi@2.0.0 
  │   │ │ └── ansi-regex@2.1.1 
  │   │ ├── strip-ansi@3.0.1 
  │   │ └── supports-color@2.0.0 
  │   ├── js-base64@2.3.2 
  │   ├── source-map@0.5.7 
  │   └─┬ supports-color@3.2.3 
  │     └── has-flag@1.0.0 
  ├─┬ cheerio@0.22.0 
  │ ├─┬ css-select@1.2.0 
  │ │ ├── boolbase@1.0.0 
  │ │ ├── css-what@2.1.0 
  │ │ ├── domutils@1.5.1 
  │ │ └── nth-check@1.0.1 
  │ ├─┬ dom-serializer@0.1.0 
  │ │ └── domelementtype@1.1.3 
  │ ├── entities@1.1.1 
  │ ├─┬ htmlparser2@3.9.2 
  │ │ ├── domelementtype@1.3.0 
  │ │ ├── domhandler@2.4.1 
  │ │ └─┬ readable-stream@2.3.3 
  │ │   ├── core-util-is@1.0.2 
  │ │   ├── isarray@1.0.0 
  │ │   ├── process-nextick-args@1.0.7 
  │ │   ├── safe-buffer@5.1.1 
  │ │   ├── string_decoder@1.0.3 
  │ │   └── util-deprecate@1.0.2 
  │ ├── lodash.assignin@4.2.0 
  │ ├── lodash.bind@4.2.1 
  │ ├── lodash.defaults@4.2.0 
  │ ├── lodash.filter@4.6.0 
  │ ├── lodash.flatten@4.4.0 
  │ ├── lodash.foreach@4.5.0 
  │ ├── lodash.map@4.6.0 
  │ ├── lodash.merge@4.6.0 
  │ ├── lodash.pick@4.4.0 
  │ ├── lodash.reduce@4.6.0 
  │ ├── lodash.reject@4.6.0 
  │ └── lodash.some@4.6.0 
  ├─┬ chokidar@1.7.0 
  │ ├─┬ anymatch@1.3.2 
  │ │ ├─┬ micromatch@2.3.11 
  │ │ │ ├─┬ arr-diff@2.0.0 
  │ │ │ │ └── arr-flatten@1.1.0 
  │ │ │ ├── array-unique@0.2.1 
  │ │ │ ├─┬ braces@1.8.5 
  │ │ │ │ ├─┬ expand-range@1.8.2 
  │ │ │ │ │ └─┬ fill-range@2.2.3 
  │ │ │ │ │   ├── is-number@2.1.0 
  │ │ │ │ │   ├── isobject@2.1.0 
  │ │ │ │ │   ├─┬ randomatic@1.1.7 
  │ │ │ │ │   │ ├─┬ is-number@3.0.0 
  │ │ │ │ │   │ │ └── kind-of@3.2.2 
  │ │ │ │ │   │ └── kind-of@4.0.0 
  │ │ │ │ │   └── repeat-string@1.6.1 
  │ │ │ │ ├── preserve@0.2.0 
  │ │ │ │ └── repeat-element@1.1.2 
  │ │ │ ├─┬ expand-brackets@0.1.5 
  │ │ │ │ └── is-posix-bracket@0.1.1 
  │ │ │ ├── extglob@0.3.2 
  │ │ │ ├── filename-regex@2.0.1 
  │ │ │ ├─┬ kind-of@3.2.2 
  │ │ │ │ └── is-buffer@1.1.5 
  │ │ │ ├─┬ object.omit@2.0.1 
  │ │ │ │ ├─┬ for-own@0.1.5 
  │ │ │ │ │ └── for-in@1.0.2 
  │ │ │ │ └── is-extendable@0.1.1 
  │ │ │ ├─┬ parse-glob@3.0.4 
  │ │ │ │ ├── glob-base@0.3.0 
  │ │ │ │ └── is-dotfile@1.0.3 
  │ │ │ └─┬ regex-cache@0.4.4 
  │ │ │   └─┬ is-equal-shallow@0.1.3 
  │ │ │     └── is-primitive@2.0.0 
  │ │ └─┬ normalize-path@2.1.1 
  │ │   └── remove-trailing-separator@1.1.0 
  │ ├── async-each@1.0.1 
  │ ├── glob-parent@2.0.0 
  │ ├── inherits@2.0.3 
  │ ├─┬ is-binary-path@1.0.1 
  │ │ └── binary-extensions@1.10.0 
  │ ├─┬ is-glob@2.0.1 
  │ │ └── is-extglob@1.0.0 
  │ ├── path-is-absolute@1.0.1 
  │ └─┬ readdirp@2.1.0 
  │   ├── graceful-fs@4.1.11 
  │   ├─┬ minimatch@3.0.4 
  │   │ └─┬ brace-expansion@1.1.8 
  │   │   ├── balanced-match@1.0.0 
  │   │   └── concat-map@0.0.1 
  │   └── set-immediate-shim@1.0.1 
  ├── colors-cli@1.0.9 
  ├── commander@2.11.0 
  ├── ejs@2.5.7 
  ├── highlight.js@9.12.0 
  ├─┬ inquirer@3.3.0 
  │ ├── ansi-escapes@3.0.0 
  │ ├─┬ chalk@2.1.0 
  │ │ ├─┬ ansi-styles@3.2.0 
  │ │ │ └─┬ color-convert@1.9.0 
  │ │ │   └── color-name@1.1.3 
  │ │ └─┬ supports-color@4.4.0 
  │ │   └── has-flag@2.0.0 
  │ ├─┬ cli-cursor@2.1.0 
  │ │ └─┬ restore-cursor@2.0.0 
  │ │   ├─┬ onetime@2.0.1 
  │ │   │ └── mimic-fn@1.1.0 
  │ │   └── signal-exit@3.0.2 
  │ ├── cli-width@2.2.0 
  │ ├─┬ external-editor@2.0.5 
  │ │ ├── jschardet@1.5.1 
  │ │ └─┬ tmp@0.0.33 
  │ │   └── os-tmpdir@1.0.2 
  │ ├─┬ figures@2.0.0 
  │ │ └── escape-string-regexp@1.0.5 
  │ ├── lodash@4.17.4 
  │ ├── mute-stream@0.0.7 
  │ ├─┬ run-async@2.3.0 
  │ │ └── is-promise@2.1.0 
  │ ├── rx-lite@4.0.8 
  │ ├── rx-lite-aggregates@4.0.8 
  │ ├─┬ string-width@2.1.1 
  │ │ ├── is-fullwidth-code-point@2.0.0 
  │ │ └─┬ strip-ansi@4.0.0 
  │ │   └── ansi-regex@3.0.0 
  │ ├─┬ strip-ansi@4.0.0 
  │ │ └── ansi-regex@3.0.0 
  │ └── through@2.3.8 
  ├── marked@0.3.6 
  ├── semver@5.4.1 
  ├─┬ shelljs@0.7.8 
  │ ├─┬ glob@7.1.2 
  │ │ ├── fs.realpath@1.0.0 
  │ │ ├─┬ inflight@1.0.6 
  │ │ │ └── wrappy@1.0.2 
  │ │ └── once@1.4.0 
  │ ├── interpret@1.0.4 
  │ └─┬ rechoir@0.6.2 
  │   └─┬ resolve@1.4.0 
  │     └── path-parse@1.0.5 
  ├─┬ ssr@1.1.1 
  │ ├── iconv-lite@0.4.19 
  │ └─┬ yargs@3.32.0 
  │   ├── camelcase@2.1.1 
  │   ├─┬ cliui@3.2.0 
  │   │ ├─┬ string-width@1.0.2 
  │   │ │ └── is-fullwidth-code-point@1.0.0 
  │   │ └─┬ wrap-ansi@2.1.0 
  │   │   └─┬ string-width@1.0.2 
  │   │     └── is-fullwidth-code-point@1.0.0 
  │   ├── decamelize@1.2.0 
  │   ├─┬ os-locale@1.4.0 
  │   │ └─┬ lcid@1.0.0 
  │   │   └── invert-kv@1.0.0 
  │   ├─┬ string-width@1.0.2 
  │   │ ├── code-point-at@1.1.0 
  │   │ └─┬ is-fullwidth-code-point@1.0.0 
  │   │   └── number-is-nan@1.0.1 
  │   ├── window-size@0.1.4 
  │   └── y18n@3.2.1 
  ├─┬ stylus@0.54.5 
  │ ├── css-parse@1.7.0 
  │ ├─┬ debug@3.0.1 
  │ │ └── ms@2.0.0 
  │ ├── glob@7.0.6 
  │ ├─┬ mkdirp@0.5.1 
  │ │ └── minimist@0.0.8 
  │ ├── sax@0.5.8 
  │ └─┬ source-map@0.1.43 
  │   └── amdefine@1.0.1 
  └── underscore@1.8.3 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/idoc/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 28.999999999999996% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0534 took 5.088s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node
var fs = require('fs');
var path = require('path');
var inquirer = require('inquirer');
var semver = require('semver');
var _ = require('underscore');
var color = require('colors-cli')
var copy = require('./copy');
var file = require('./file');
var theme  = require('./theme');
var menu_json = require('./menu_json');
var log = console.log;

var template = path.dirname(__dirname);
var default_package = {}
/**
 * 这里执行 init 任务
 */
function runTask(commander){
    if(commander.Create) file.mkdirsSync(commander.Create,0777);
    inquirer.prompt([
        {
            type: 'input',
            name: 'name',
            message: 'Package name',
            validate: function(input) {
                //检测只准输入小写字母，数字，横线或者英文句号
                if (/^[A-z][A-z0-9\-\.]*$/.test(input)) {
                    return true;
                }
                return 'Must be only lowercase letters, numbers, dashes or dots, and start with lowercase letter.';
            }
        },{
            type: 'input',
            name: 'version',
            message: 'Version',
            default: '1.0.0',
            validate: function(input){
                //分析版本是否正确或者null
                if (!semver.valid(input)) {
                    return 'Must be a valid semantic version (semver.org).';
                }
                return true;
            }
        },{
            message: 'Description',
            name: 'description'
        },{
            type: "input",
            name: 'keywords',
            message: 'keywords'
        },{
            type: "list",
            name: 'licenses',
            message: 'Licenses',
            default: ["MIT"],
            choices: ["MIT", "Apache", "GPL", "Artistic", "BSD", "Affero", "LGPL", "EPL", "LGPL", "MPL"]
        },{
            type: "list",
            name: "idoctheme",
            message: "Choose a theme.",
            choices: theme.themeList()
        },{
            message: 'Author',
            name: 'author',
            //获取我的git上的名字和邮箱
            default: require('./whoami')
        }
    ]).then(function(answers){
        if(typeof(answers) === "string") answers = JSON.parse(answers);

        var pk = require('./pk.json');
        var todir = ''
        //关键词、关键字
        answers.keywords = answers.keywords.split(',');
        answers.idoc = {}
        // console.log("该行代码所在的目录::",__dirname);
        // console.log("返回一个路径的目录名称::",path.dirname(__dirname));
        // console.log("命令传进来的目录::",commander.Create);
        // console.log("当前目录名字::",path.basename(process.cwd()));
        // console.log("当前目录::",process.cwd());
        //指定生成的目录位置
        if(commander.Create){
            todir = commander.Create;
        }else{
            //记录当前目录位置
            todir = process.cwd();
        }

        // 处理指定目录路径
        if(!/\/$/.test(todir)) todir = todir + '/';

        // 记录皮肤名字
        if(answers.idoctheme){
            answers.idoc.theme = answers.idoctheme;
            delete answers.idoctheme;
        }

        //需要生成的md文件路径
        if(commander.init){
            var mdurl = path.normalize(todir + '/md');
            // 判断md 目录存在不生成目录
            if( !file.exists(mdurl) ) file.mkdirsSync(mdurl,0777);

            if(commander.args.length>0){
                // 判断是否指定某个目录里面 md 拷贝到当前项目目录下
                commander.args.forEach(function(item,idx){
                    copy(path.resolve(item),todir+'md/',{
                        filter:function(_file){
                            if(/\.(md)$/.test(_file)) return true;
                            else false;
                        }
                    },function(err,_file){
                        if(err) return console.log(err);
                        // console.log("复制成功！:",_file);
                    })
                })
            }

            //移动根目录的md文件到md目录中，并解决冲突
            _.filter(file.currentFile(todir),function(_filename){
                if(/README\.(md)$/.test(_filename))return false;
                return /\.(md)$/.test(_filename)
            }).forEach(function(_fname){
                var pt = todir+'md/'+_fname;
                var _nname = "";
                if(file.exists(pt)) _nname = path.basename(pt, '.md') + parseInt(Math.random()*1000000) + '.md';
                else _nname = _fname;

                //复制到指定目录更改名字
                fs.renameSync(todir+_fname,todir+'md/'+_nname);
            })

            //递归获取 md 下面所有的md文件 返回json
            answers.idoc.md = menu_json(todir + 'md/');
        }

        //package.json合并输出
        default_package = _.extend(pk,answers);

        // 生成目录
        file.write(todir + 'package.json',JSON.stringify(default_package, null, 4));

        // 皮肤路径
        var themeurl = template + '/theme/' + default_package.idoc.theme;

        // 初始化到指定目录或者当前目录
        var todir = default_package.idoc.todir?default_package.idoc.todir:__dirname;

        log()
        log(color.green('Initialization is successful! Please run "idoc build" command!'));
        log()

    })
    return;
}

function init(commander){
    if(fs.existsSync(template + '/theme/default/')){
        runTask(commander);
    }else{
        log(color.red("Initialization failed!"));
    }
}

module.exports = init;
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/idoc/node_modules/idoc/index.js. Coverage (Term): 11% Coverage (LOC): 8%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
