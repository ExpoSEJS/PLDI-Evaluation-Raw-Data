/root/Targets/html5-chase
└─┬ html5-chase@0.3.9 
  ├── async@0.1.22 
  ├── bench@0.3.6 
  ├─┬ jsdom@11.2.0 
  │ ├── abab@1.0.4 
  │ ├── acorn@4.0.13 
  │ ├── acorn-globals@3.1.0 
  │ ├── array-equal@1.0.0 
  │ ├── content-type-parser@1.0.1 
  │ ├── cssom@0.3.2 
  │ ├── cssstyle@0.2.37 
  │ ├─┬ escodegen@1.9.0 
  │ │ ├── esprima@3.1.3 
  │ │ ├── estraverse@4.2.0 
  │ │ ├── esutils@2.0.2 
  │ │ ├─┬ optionator@0.8.2 
  │ │ │ ├── deep-is@0.1.3 
  │ │ │ ├── fast-levenshtein@2.0.6 
  │ │ │ ├── levn@0.3.0 
  │ │ │ ├── prelude-ls@1.1.2 
  │ │ │ ├── type-check@0.3.2 
  │ │ │ └── wordwrap@1.0.0 
  │ │ └── source-map@0.5.7 
  │ ├── html-encoding-sniffer@1.0.1 
  │ ├── nwmatcher@1.4.1 
  │ ├─┬ parse5@3.0.2 
  │ │ └── @types/node@6.0.88 
  │ ├── pn@1.0.0 
  │ ├─┬ request@2.82.0 
  │ │ ├── aws-sign2@0.7.0 
  │ │ ├── aws4@1.6.0 
  │ │ ├── caseless@0.12.0 
  │ │ ├─┬ combined-stream@1.0.5 
  │ │ │ └── delayed-stream@1.0.0 
  │ │ ├── extend@3.0.1 
  │ │ ├── forever-agent@0.6.1 
  │ │ ├─┬ form-data@2.3.1 
  │ │ │ └── asynckit@0.4.0 
  │ │ ├─┬ har-validator@5.0.3 
  │ │ │ ├─┬ ajv@5.2.2 
  │ │ │ │ ├── co@4.6.0 
  │ │ │ │ ├── fast-deep-equal@1.0.0 
  │ │ │ │ ├── json-schema-traverse@0.3.1 
  │ │ │ │ └─┬ json-stable-stringify@1.0.1 
  │ │ │ │   └── jsonify@0.0.0 
  │ │ │ └── har-schema@2.0.0 
  │ │ ├─┬ hawk@6.0.2 
  │ │ │ ├── boom@4.3.1 
  │ │ │ ├─┬ cryptiles@3.1.2 
  │ │ │ │ └── boom@5.2.0 
  │ │ │ ├── hoek@4.2.0 
  │ │ │ └── sntp@2.0.2 
  │ │ ├─┬ http-signature@1.2.0 
  │ │ │ ├── assert-plus@1.0.0 
  │ │ │ ├─┬ jsprim@1.4.1 
  │ │ │ │ ├── extsprintf@1.3.0 
  │ │ │ │ ├── json-schema@0.2.3 
  │ │ │ │ └─┬ verror@1.10.0 
  │ │ │ │   └── core-util-is@1.0.2 
  │ │ │ └─┬ sshpk@1.13.1 
  │ │ │   ├── asn1@0.2.3 
  │ │ │   ├── bcrypt-pbkdf@1.0.1 
  │ │ │   ├── dashdash@1.14.1 
  │ │ │   ├── ecc-jsbn@0.1.1 
  │ │ │   ├── getpass@0.1.7 
  │ │ │   ├── jsbn@0.1.1 
  │ │ │   └── tweetnacl@0.14.5 
  │ │ ├── is-typedarray@1.0.0 
  │ │ ├── isstream@0.1.2 
  │ │ ├── json-stringify-safe@5.0.1 
  │ │ ├─┬ mime-types@2.1.17 
  │ │ │ └── mime-db@1.30.0 
  │ │ ├── oauth-sign@0.8.2 
  │ │ ├── performance-now@2.1.0 
  │ │ ├── qs@6.5.1 
  │ │ ├── safe-buffer@5.1.1 
  │ │ ├── stringstream@0.0.5 
  │ │ ├── tunnel-agent@0.6.0 
  │ │ └── uuid@3.1.0 
  │ ├─┬ request-promise-native@1.0.4 
  │ │ ├─┬ request-promise-core@1.1.1 
  │ │ │ └── lodash@4.17.4 
  │ │ └── stealthy-require@1.1.1 
  │ ├── sax@1.2.4 
  │ ├── symbol-tree@3.2.2 
  │ ├─┬ tough-cookie@2.3.2 
  │ │ └── punycode@1.4.1 
  │ ├── webidl-conversions@4.0.2 
  │ ├─┬ whatwg-encoding@1.0.1 
  │ │ └── iconv-lite@0.4.13 
  │ ├─┬ whatwg-url@6.2.1 
  │ │ ├── lodash.sortby@4.7.0 
  │ │ └─┬ tr46@1.0.1 
  │ │   └── punycode@2.1.0 
  │ └── xml-name-validator@2.0.1 
  ├── opts@1.2.6 
  └─┬ tap@0.1.4 
    ├── inherits@1.0.0 
    ├─┬ runforcover@0.0.2 
    │ └─┬ bunker@0.1.2 
    │   └─┬ burrito@0.2.12 
    │     ├── traverse@0.5.2 
    │     └── uglify-js@1.1.1 
    ├── slide@1.1.6 
    ├─┬ tap-consumer@0.0.1 
    │ ├── inherits@2.0.3 
    │ ├─┬ tap-results@0.0.2 
    │ │ └── inherits@1.0.2 
    │ └── yamlish@0.0.7 
    └── yamlish@0.0.2 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/html5-chase/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 90% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","toUpperCase","RegExp"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0534 took 9.0094s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (2:4) on program var HTML5 = require('../parser').HTML5;
var assert = require('assert');

exports.Phase = function Phase(parser, tree) {
	this.tree = tree;
	this.parser = parser;
	this.end_tag_handlers = {"-default": 'endTagOther'};
	this.start_tag_handlers = {"-default": 'startTagOther'};
}

exports.Phase.prototype = {
	parse_error: function(code, options) {
		this.parser.parse_error(code, options);
	},
	processEOF: function() {
		this.tree.generateImpliedEndTags();
		if(this.tree.open_elements.length > 2) {
			this.parse_error('expected-closing-tag-but-got-eof');
		} else if(this.tree.open_elements.length == 2
			&& this.tree.open_elements[1].tagName.toLowerCase() != 'body') {
			// This happens for framesets or something?
			this.parse_error('expected-closing-tag-but-got-eof');
		} else if(this.parser.inner_html && this.tree.open_elements.length > 1) {
			// XXX This is not what the specification says. Not sure what to do here.
			this.parse_error('eof-in-innerhtml');
		}
	},
	processComment: function(data) {
		// For most phases the following is correct. Where it's not it will be 
		// overridden.
		this.tree.insert_comment(data, this.tree.open_elements.last());
	},
	processDoctype: function(name, publicId, systemId, correct) {
		this.parse_error('unexpected-doctype');
	},
	processSpaceCharacters: function(data) {
		this.tree.insert_text(data);
	},
	processStartTag: function(name, attributes, self_closing) {
		if(this[this.start_tag_handlers[name]]) {
			this[this.start_tag_handlers[name]](name, attributes, self_closing);
		} else if(this[this.start_tag_handlers["-default"]]) {
			this[this.start_tag_handlers["-default"]](name, attributes, self_closing);
		} else {
			throw(new Error("No handler found for "+name));
		}
	},
	processEndTag: function(name) {
		if(this[this.end_tag_handlers[name]]) {
			this[this.end_tag_handlers[name]](name);
		} else if(this[this.end_tag_handlers["-default"]]) {
			this[this.end_tag_handlers["-default"]](name);
		} else {
			throw(new Error("No handler found for "+name));
		}
	},
	inScope: function(name, scopingElements) {
		var tree = this.tree;
		if(!scopingElements) scopingElements = HTML5.SCOPING_ELEMENTS;
		if(tree.open_elements.length == 0) return false
		for(var i = tree.open_elements.length - 1; i >= 0; i--) {
			if (tree.open_elements[i].tagName == undefined) return false;
			if(tree.open_elements[i].tagName.toLowerCase() == name) return true;
			if(scopingElements.indexOf(tree.open_elements[i].tagName.toLowerCase()) != -1) return false;
		}
		return false; 
	},
	startTagHtml: function(name, attributes) {
		if(this.parser.first_start_tag == false && name == 'html') {
			this.parse_error('non-html-root')
		}
		// XXX Need a check here to see if the first start tag token emitted is this token. . . if it's not, invoke parse_error.
		for(var i = 0; i < attributes.length; i++) {
			if(!this.tree.open_elements[0].getAttribute(attributes[i].nodeName)) {
				this.tree.open_elements[0].setAttribute(attributes[i].nodeName, attributes[i].nodeValue)
			}
		}
		this.parser.first_start_tag = false;
	},
	adjust_mathml_attributes: function(attributes) {
		return attributes.map(function(a) {
			if(a[0] =='definitionurl') {
				return ['definitionURL', a[1]]
			} else {
				return a;
			}
		});
	},
	adjust_svg_attributes: function(attributes) {
		return attributes.map(function(a) {
			return SVGAttributeMap[a] ? SVGAttributeMap[a] : a;
		});
	},
	adjust_foreign_attributes: function (attributes) {
		for(var i = 0; i < attributes.length; i++) {
			if(attributes[i].nodeName.indexOf(':') != -1) {
				var t = attributes[i].nodeName.split(/:/);
				attributes[i].namespace = t[0];
				attributes[i].nodeName = t[1];
			}
		}
		return attributes;
	}
}

var SVGAttributeMap = {
	attributename:	'attributeName',
	attributetype:	'attributeType',
	basefrequency:	'baseFrequency',
	baseprofile:	'baseProfile',
	calcmode:	'calcMode',
	clippathunits:	'clipPathUnits',
	contentscripttype:	'contentScriptType',
	contentstyletype:	'contentStyleType',
	diffuseconstant:	'diffuseConstant',
	edgemode:	'edgeMode',
	externalresourcesrequired:	'externalResourcesRequired',
	filterres:	'filterRes',
	filterunits:	'filterUnits',
	glyphref:	'glyphRef',
	gradienttransform:	'gradientTransform',
	gradientunits:	'gradientUnits',
	kernelmatrix:	'kernelMatrix',
	kernelunitlength:	'kernelUnitLength',
	keypoints:	'keyPoints',
	keysplines:	'keySplines',
	keytimes:	'keyTimes',
	lengthadjust:	'lengthAdjust',
	limitingconeangle:	'limitingConeAngle',
	markerheight:	'markerHeight',
	markerunits:	'markerUnits',
	markerwidth:	'markerWidth',
	maskcontentunits:	'maskContentUnits',
	maskunits:	'maskUnits',
	numoctaves:	'numOctaves',
	pathlength:	'pathLength',
	patterncontentunits:	'patternContentUnits',
	patterntransform:	'patternTransform',
	patternunits:	'patternUnits',
	pointsatx:	'pointsAtX',
	pointsaty:	'pointsAtY',
	pointsatz:	'pointsAtZ',
	preservealpha:	'preserveAlpha',
	preserveaspectratio:	'preserveAspectRatio',
	primitiveunits:	'primitiveUnits',
	refx:	'refX',
	refy:	'refY',
	repeatcount:	'repeatCount',
	repeatdur:	'repeatDur',
	requiredextensions:	'requiredExtensions',
	requiredfeatures:	'requiredFeatures',
	specularconstant:	'specularConstant',
	specularexponent:	'specularExponent',
	spreadmethod:	'spreadMethod',
	startoffset:	'startOffset',
	stddeviation:	'stdDeviation',
	stitchtiles:	'stitchTiles',
	surfacescale:	'surfaceScale',
	systemlanguage:	'systemLanguage',
	tablevalues:	'tableValues',
	targetx:	'targetX',
	targety:	'targetY',
	textlength:	'textLength',
	viewbox:	'viewBox',
	viewtarget:	'viewTarget',
	xchannelselector:	'xChannelSelector',
	ychannelselector:	'yChannelSelector',
	zoomandpan:	'zoomAndPan'
};
 at SyntaxError: Unexpected token (2:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/html5-chase/node_modules/html5-chase/lib/html5/index.js. Coverage (Term): 47% Coverage (LOC): 55%
*- File /root/Targets/html5-chase/node_modules/html5-chase/lib/html5/constants.js. Coverage (Term): 96% Coverage (LOC): 99%
*- File /root/Targets/html5-chase/node_modules/html5-chase/lib/html5/parser/initial_phase.js. Coverage (Term): 5% Coverage (LOC): 3%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
