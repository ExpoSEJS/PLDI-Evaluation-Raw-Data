/root/Targets/generator-loopback-vue
└─┬ generator-loopback-vue@2.1.4 
  ├── UNMET PEER DEPENDENCY babel-plugin-transform-runtime@^6.1.2
  ├── UNMET PEER DEPENDENCY babel-preset-es2015@^6.1.2
  ├─┬ compression@1.7.0 
  │ ├─┬ accepts@1.3.4 
  │ │ ├── mime-types@2.1.17 
  │ │ └── negotiator@0.6.1 
  │ ├── bytes@2.5.0 
  │ ├─┬ compressible@2.0.11 
  │ │ └── mime-db@1.30.0 
  │ ├── debug@2.6.8 
  │ ├── on-headers@1.0.1 
  │ ├── safe-buffer@5.1.1 
  │ └── vary@1.1.2 
  ├─┬ cors@2.8.4 
  │ └── object-assign@4.1.1 
  ├─┬ loopback@2.38.3 
  │ ├─┬ async@2.5.0 
  │ │ └── lodash@4.17.4 
  │ ├── bcryptjs@2.4.3 
  │ ├─┬ body-parser@1.18.2 
  │ │ ├── bytes@3.0.0 
  │ │ ├── content-type@1.0.4 
  │ │ ├── debug@2.6.9 
  │ │ ├─┬ http-errors@1.6.2 
  │ │ │ └── inherits@2.0.3 
  │ │ ├── iconv-lite@0.4.19 
  │ │ ├─┬ on-finished@2.3.0 
  │ │ │ └── ee-first@1.1.1 
  │ │ ├── qs@6.5.1 
  │ │ ├─┬ raw-body@2.3.2 
  │ │ │ ├── bytes@3.0.0 
  │ │ │ └── unpipe@1.0.0 
  │ │ └─┬ type-is@1.6.15 
  │ │   └── media-typer@0.3.0 
  │ ├── canonical-json@0.0.4 
  │ ├─┬ cookie-parser@1.4.3 
  │ │ ├── cookie@0.3.1 
  │ │ └── cookie-signature@1.0.6 
  │ ├── depd@1.1.1 
  │ ├── ejs@2.5.7 
  │ ├─┬ errorhandler@1.5.0 
  │ │ └── escape-html@1.0.3 
  │ ├─┬ express@4.15.5 
  │ │ ├── array-flatten@1.1.1 
  │ │ ├── content-disposition@0.5.2 
  │ │ ├── debug@2.6.9 
  │ │ ├── encodeurl@1.0.1 
  │ │ ├─┬ finalhandler@1.0.6 
  │ │ │ └── debug@2.6.9 
  │ │ ├── fresh@0.5.2 
  │ │ ├── merge-descriptors@1.0.1 
  │ │ ├── methods@1.1.2 
  │ │ ├── path-to-regexp@0.1.7 
  │ │ ├─┬ proxy-addr@1.1.5 
  │ │ │ ├── forwarded@0.1.2 
  │ │ │ └── ipaddr.js@1.4.0 
  │ │ ├── qs@6.5.0 
  │ │ ├── range-parser@1.2.0 
  │ │ ├─┬ send@0.15.6 
  │ │ │ ├── debug@2.6.9 
  │ │ │ ├── destroy@1.0.4 
  │ │ │ └── mime@1.3.4 
  │ │ ├── serve-static@1.12.6 
  │ │ ├── setprototypeof@1.0.3 
  │ │ ├── statuses@1.3.1 
  │ │ └── utils-merge@1.0.0 
  │ ├── inflection@1.12.0 
  │ ├── isemail@1.2.0 
  │ ├── loopback-connector-remote@1.3.3 
  │ ├─┬ loopback-context@1.0.0 
  │ │ └─┬ continuation-local-storage@3.2.0 
  │ │   ├─┬ async-listener@0.6.8 
  │ │   │ ├── semver@5.4.1 
  │ │   │ └── shimmer@1.1.0 
  │ │   └─┬ emitter-listener@1.0.1 
  │ │     └── shimmer@1.0.0 
  │ ├─┬ loopback-phase@1.4.1 
  │ │ └── async@0.9.2 
  │ ├─┬ nodemailer@2.7.2 
  │ │ ├─┬ libmime@3.0.0 
  │ │ │ ├── iconv-lite@0.4.15 
  │ │ │ ├── libbase64@0.1.0 
  │ │ │ └── libqp@1.1.0 
  │ │ ├─┬ mailcomposer@4.0.1 
  │ │ │ └─┬ buildmail@4.0.1 
  │ │ │   ├── addressparser@1.0.1 
  │ │ │   └── punycode@1.4.1 
  │ │ ├─┬ nodemailer-direct-transport@3.3.2 
  │ │ │ └─┬ smtp-connection@2.12.0 
  │ │ │   └─┬ httpntlm@1.6.1 
  │ │ │     ├── httpreq@0.4.24 
  │ │ │     └── underscore@1.7.0 
  │ │ ├─┬ nodemailer-shared@1.1.0 
  │ │ │ └── nodemailer-fetch@1.6.0 
  │ │ ├─┬ nodemailer-smtp-pool@2.8.2 
  │ │ │ └── nodemailer-wellknown@0.1.10 
  │ │ ├── nodemailer-smtp-transport@2.7.2 
  │ │ └─┬ socks@1.1.9 
  │ │   ├── ip@1.1.5 
  │ │   └── smart-buffer@1.1.15 
  │ ├── nodemailer-stub-transport@1.1.0 
  │ ├── stable@0.1.6 
  │ ├─┬ strong-globalize@2.8.5 
  │ │ ├── async@1.5.2 
  │ │ ├── esprima@3.1.3 
  │ │ ├── estraverse@4.2.0 
  │ │ ├─┬ g11n-pipeline@1.5.1 
  │ │ │ └─┬ swagger-client@2.1.32 
  │ │ │   ├── btoa@1.1.2 
  │ │ │   ├── cookiejar@2.1.1 
  │ │ │   ├─┬ js-yaml@3.10.0 
  │ │ │   │ └── esprima@4.0.0 
  │ │ │   ├── lodash-compat@3.10.2 
  │ │ │   ├── q@1.5.0 
  │ │ │   └─┬ superagent@2.3.0 
  │ │ │     ├── component-emitter@1.2.1 
  │ │ │     ├─┬ form-data@1.0.0-rc4 
  │ │ │     │ └── async@1.5.2 
  │ │ │     └── formidable@1.1.1 
  │ │ ├─┬ htmlparser2@3.9.2 
  │ │ │ ├── domelementtype@1.3.0 
  │ │ │ ├── domhandler@2.4.1 
  │ │ │ ├─┬ domutils@1.6.2 
  │ │ │ │ └─┬ dom-serializer@0.1.0 
  │ │ │ │   └── domelementtype@1.1.3 
  │ │ │ ├── entities@1.1.1 
  │ │ │ └── readable-stream@2.3.3 
  │ │ ├─┬ md5@2.2.1 
  │ │ │ ├── charenc@0.0.2 
  │ │ │ ├── crypt@0.0.2 
  │ │ │ └── is-buffer@1.1.5 
  │ │ ├─┬ mkdirp@0.5.1 
  │ │ │ └── minimist@0.0.8 
  │ │ ├─┬ mktmpdir@0.1.1 
  │ │ │ └── rimraf@2.2.8 
  │ │ ├── optional@0.1.4 
  │ │ ├─┬ os-locale@1.4.0 
  │ │ │ └─┬ lcid@1.0.0 
  │ │ │   └── invert-kv@1.0.0 
  │ │ ├── posix-getopt@1.2.0 
  │ │ ├── word-count@0.2.2 
  │ │ ├── xtend@4.0.1 
  │ │ └─┬ yamljs@0.2.10 
  │ │   ├── argparse@1.0.9 
  │ │   └─┬ glob@7.1.2 
  │ │     ├── fs.realpath@1.0.0 
  │ │     ├─┬ inflight@1.0.6 
  │ │     │ └── wrappy@1.0.2 
  │ │     └── once@1.4.0 
  │ ├─┬ strong-remoting@2.33.0 
  │ │ ├── eventemitter2@2.2.2 
  │ │ ├─┬ jayson@1.2.2 
  │ │ │ ├─┬ commander@1.3.2 
  │ │ │ │ └── keypress@0.1.0 
  │ │ │ ├── eyes@0.1.8 
  │ │ │ ├─┬ JSONStream@1.0.3 
  │ │ │ │ └── jsonparse@1.0.0 
  │ │ │ └── lodash@3.6.0 
  │ │ ├── js2xmlparser@1.0.0 
  │ │ ├─┬ mux-demux@3.7.9 
  │ │ │ ├── duplex@1.0.0 
  │ │ │ ├── json-buffer@2.0.11 
  │ │ │ ├─┬ msgpack-stream@0.0.12 
  │ │ │ │ ├─┬ bops@0.0.6 
  │ │ │ │ │ ├── base64-js@0.0.2 
  │ │ │ │ │ └── to-utf8@0.0.1 
  │ │ │ │ ├── msgpack-js@0.3.0 
  │ │ │ │ └── through@2.3.4 
  │ │ │ ├─┬ stream-combiner@0.0.2 
  │ │ │ │ └── duplexer@0.0.4 
  │ │ │ ├── stream-serializer@1.1.2 
  │ │ │ └── xtend@1.0.3 
  │ │ ├─┬ request@2.82.0 
  │ │ │ ├── aws-sign2@0.7.0 
  │ │ │ ├── aws4@1.6.0 
  │ │ │ ├── caseless@0.12.0 
  │ │ │ ├─┬ combined-stream@1.0.5 
  │ │ │ │ └── delayed-stream@1.0.0 
  │ │ │ ├── extend@3.0.1 
  │ │ │ ├── forever-agent@0.6.1 
  │ │ │ ├─┬ form-data@2.3.1 
  │ │ │ │ └── asynckit@0.4.0 
  │ │ │ ├─┬ har-validator@5.0.3 
  │ │ │ │ ├─┬ ajv@5.2.3 
  │ │ │ │ │ ├── co@4.6.0 
  │ │ │ │ │ ├── fast-deep-equal@1.0.0 
  │ │ │ │ │ ├── json-schema-traverse@0.3.1 
  │ │ │ │ │ └─┬ json-stable-stringify@1.0.1 
  │ │ │ │ │   └── jsonify@0.0.0 
  │ │ │ │ └── har-schema@2.0.0 
  │ │ │ ├─┬ hawk@6.0.2 
  │ │ │ │ ├── boom@4.3.1 
  │ │ │ │ ├─┬ cryptiles@3.1.2 
  │ │ │ │ │ └── boom@5.2.0 
  │ │ │ │ ├── hoek@4.2.0 
  │ │ │ │ └── sntp@2.0.2 
  │ │ │ ├─┬ http-signature@1.2.0 
  │ │ │ │ ├── assert-plus@1.0.0 
  │ │ │ │ ├─┬ jsprim@1.4.1 
  │ │ │ │ │ ├── extsprintf@1.3.0 
  │ │ │ │ │ ├── json-schema@0.2.3 
  │ │ │ │ │ └── verror@1.10.0 
  │ │ │ │ └─┬ sshpk@1.13.1 
  │ │ │ │   ├── asn1@0.2.3 
  │ │ │ │   ├── bcrypt-pbkdf@1.0.1 
  │ │ │ │   ├── dashdash@1.14.1 
  │ │ │ │   ├── ecc-jsbn@0.1.1 
  │ │ │ │   ├── getpass@0.1.7 
  │ │ │ │   ├── jsbn@0.1.1 
  │ │ │ │   └── tweetnacl@0.14.5 
  │ │ │ ├── is-typedarray@1.0.0 
  │ │ │ ├── isstream@0.1.2 
  │ │ │ ├── json-stringify-safe@5.0.1 
  │ │ │ ├── oauth-sign@0.8.2 
  │ │ │ ├── performance-now@2.1.0 
  │ │ │ ├── stringstream@0.0.5 
  │ │ │ ├── tough-cookie@2.3.3 
  │ │ │ └── tunnel-agent@0.6.0 
  │ │ ├─┬ sse@0.0.6 
  │ │ │ └── options@0.0.6 
  │ │ └─┬ xml2js@0.4.19 
  │ │   ├── sax@1.2.4 
  │ │   └── xmlbuilder@9.0.4 
  │ ├── uid2@0.0.3 
  │ └─┬ underscore.string@3.3.4 
  │   ├── sprintf-js@1.0.3 
  │   └── util-deprecate@1.0.2 
  ├─┬ loopback-boot@2.26.2 
  │ ├── async@0.9.2 
  │ ├── commondir@0.0.1 
  │ ├── lodash@3.10.1 
  │ ├── semver@4.3.6 
  │ └── toposort@0.2.12 
  ├─┬ loopback-component-explorer@2.7.0 
  │ ├── lodash@3.10.1 
  │ ├─┬ loopback-swagger@2.9.0 
  │ │ ├── async@1.5.2 
  │ │ ├── lodash@3.10.1 
  │ │ └── underscore.string@2.3.3 
  │ └── strong-swagger-ui@21.0.2 
  ├─┬ loopback-connector-mongodb@1.18.1 
  │ ├── async@1.5.2 
  │ ├─┬ loopback-connector@2.7.1 
  │ │ ├── async@1.5.2 
  │ │ ├── bluebird@3.5.0 
  │ │ └─┬ msgpack5@3.5.1 
  │ │   └── bl@1.2.1 
  │ └─┬ mongodb@2.2.31 
  │   ├─┬ mongodb-core@2.1.15 
  │   │ ├── bson@1.0.4 
  │   │ └─┬ require_optional@1.0.1 
  │   │   └── resolve-from@2.0.0 
  │   └─┬ readable-stream@2.2.7 
  │     ├── buffer-shims@1.0.0 
  │     ├── core-util-is@1.0.2 
  │     ├── isarray@1.0.0 
  │     ├── process-nextick-args@1.0.7 
  │     └── string_decoder@1.0.3 
  ├─┬ loopback-datasource-juggler@2.55.2 
  │ ├── async@1.0.0 
  │ ├─┬ minimatch@3.0.4 
  │ │ └─┬ brace-expansion@1.1.8 
  │ │   ├── balanced-match@1.0.0 
  │ │   └── concat-map@0.0.1 
  │ ├── qs@3.1.0 
  │ ├── shortid@2.2.8 
  │ ├── traverse@0.6.6 
  │ └── uuid@3.1.0 
  ├─┬ serve-favicon@2.4.4 
  │ ├── etag@1.8.1 
  │ ├── fresh@0.5.1 
  │ ├── ms@2.0.0 
  │ └── parseurl@1.3.2 
  ├── UNMET PEER DEPENDENCY vue@^1.0.26
  ├── UNMET PEER DEPENDENCY vue-hot-reload-api@^1.2.0
  ├── vue-pagenav@1.5.0 
  ├── vue-resource@0.1.17 
  ├── vue-router@0.7.13 
  ├─┬ vueify@6.0.1 
  │ ├─┬ autoprefixer@6.7.7 
  │ │ ├─┬ browserslist@1.7.7 
  │ │ │ └── electron-to-chromium@1.3.22 
  │ │ ├── caniuse-db@1.0.30000738 
  │ │ ├── normalize-range@0.1.2 
  │ │ ├── num2fraction@1.2.2 
  │ │ └── postcss-value-parser@3.3.0 
  │ ├─┬ babel-core@6.26.0 
  │ │ ├─┬ babel-code-frame@6.26.0 
  │ │ │ ├── esutils@2.0.2 
  │ │ │ └── js-tokens@3.0.2 
  │ │ ├─┬ babel-generator@6.26.0 
  │ │ │ ├─┬ detect-indent@4.0.0 
  │ │ │ │ └─┬ repeating@2.0.1 
  │ │ │ │   └─┬ is-finite@1.0.2 
  │ │ │ │     └── number-is-nan@1.0.1 
  │ │ │ ├── jsesc@1.3.0 
  │ │ │ └── trim-right@1.0.1 
  │ │ ├── babel-helpers@6.24.1 
  │ │ ├── babel-messages@6.23.0 
  │ │ ├─┬ babel-register@6.26.0 
  │ │ │ ├── core-js@2.5.1 
  │ │ │ ├─┬ home-or-tmp@2.0.0 
  │ │ │ │ ├── os-homedir@1.0.2 
  │ │ │ │ └── os-tmpdir@1.0.2 
  │ │ │ └── source-map-support@0.4.18 
  │ │ ├─┬ babel-runtime@6.26.0 
  │ │ │ └── regenerator-runtime@0.11.0 
  │ │ ├── babel-template@6.26.0 
  │ │ ├─┬ babel-traverse@6.26.0 
  │ │ │ ├── globals@9.18.0 
  │ │ │ └─┬ invariant@2.2.2 
  │ │ │   └── loose-envify@1.3.1 
  │ │ ├─┬ babel-types@6.26.0 
  │ │ │ └── to-fast-properties@1.0.3 
  │ │ ├── babylon@6.18.0 
  │ │ ├── convert-source-map@1.5.0 
  │ │ ├── json5@0.5.1 
  │ │ ├── path-is-absolute@1.0.1 
  │ │ ├── private@0.1.7 
  │ │ ├── slash@1.0.0 
  │ │ └── source-map@0.5.7 
  │ ├─┬ cssnano@3.10.0 
  │ │ ├── decamelize@1.2.0 
  │ │ ├── defined@1.0.0 
  │ │ ├─┬ has@1.0.1 
  │ │ │ └── function-bind@1.1.1 
  │ │ ├─┬ postcss-calc@5.3.1 
  │ │ │ ├── postcss-message-helpers@2.0.0 
  │ │ │ └─┬ reduce-css-calc@1.3.0 
  │ │ │   ├── balanced-match@0.4.2 
  │ │ │   ├── math-expression-evaluator@1.2.17 
  │ │ │   └─┬ reduce-function-call@1.0.2 
  │ │ │     └── balanced-match@0.4.2 
  │ │ ├─┬ postcss-colormin@2.2.2 
  │ │ │ └─┬ colormin@1.1.2 
  │ │ │   ├─┬ color@0.11.4 
  │ │ │   │ ├── clone@1.0.2 
  │ │ │   │ ├─┬ color-convert@1.9.0 
  │ │ │   │ │ └── color-name@1.1.3 
  │ │ │   │ └── color-string@0.3.0 
  │ │ │   └── css-color-names@0.0.4 
  │ │ ├── postcss-convert-values@2.6.1 
  │ │ ├── postcss-discard-comments@2.0.4 
  │ │ ├── postcss-discard-duplicates@2.1.0 
  │ │ ├── postcss-discard-empty@2.1.0 
  │ │ ├── postcss-discard-overridden@0.1.1 
  │ │ ├─┬ postcss-discard-unused@2.2.3 
  │ │ │ └── uniqs@2.0.0 
  │ │ ├─┬ postcss-filter-plugins@2.0.2 
  │ │ │ └─┬ uniqid@4.1.1 
  │ │ │   └── macaddress@0.2.8 
  │ │ ├── postcss-merge-idents@2.1.7 
  │ │ ├── postcss-merge-longhand@2.0.2 
  │ │ ├─┬ postcss-merge-rules@2.1.2 
  │ │ │ ├─┬ caniuse-api@1.6.1 
  │ │ │ │ ├── lodash.memoize@4.1.2 
  │ │ │ │ └── lodash.uniq@4.5.0 
  │ │ │ ├── postcss-selector-parser@2.2.3 
  │ │ │ └── vendors@1.0.1 
  │ │ ├── postcss-minify-font-values@1.0.5 
  │ │ ├── postcss-minify-gradients@1.0.5 
  │ │ ├─┬ postcss-minify-params@1.2.2 
  │ │ │ └── alphanum-sort@1.0.2 
  │ │ ├─┬ postcss-minify-selectors@2.1.1 
  │ │ │ └── postcss-selector-parser@2.2.3 
  │ │ ├── postcss-normalize-charset@1.1.1 
  │ │ ├─┬ postcss-normalize-url@3.0.8 
  │ │ │ ├── is-absolute-url@2.1.0 
  │ │ │ └─┬ normalize-url@1.9.1 
  │ │ │   ├── prepend-http@1.0.4 
  │ │ │   ├─┬ query-string@4.3.4 
  │ │ │   │ └── strict-uri-encode@1.1.0 
  │ │ │   └─┬ sort-keys@1.1.2 
  │ │ │     └── is-plain-obj@1.1.0 
  │ │ ├── postcss-ordered-values@2.2.3 
  │ │ ├── postcss-reduce-idents@2.4.0 
  │ │ ├── postcss-reduce-initial@1.0.1 
  │ │ ├── postcss-reduce-transforms@1.0.4 
  │ │ ├─┬ postcss-svgo@2.1.6 
  │ │ │ ├─┬ is-svg@2.1.0 
  │ │ │ │ └── html-comment-regex@1.1.1 
  │ │ │ └─┬ svgo@0.7.2 
  │ │ │   ├── coa@1.0.4 
  │ │ │   ├── colors@1.1.2 
  │ │ │   ├─┬ csso@2.3.2 
  │ │ │   │ └── clap@1.2.3 
  │ │ │   ├─┬ js-yaml@3.7.0 
  │ │ │   │ └── esprima@2.7.3 
  │ │ │   └── whet.extend@0.9.9 
  │ │ ├── postcss-unique-selectors@2.0.2 
  │ │ └── postcss-zindex@2.2.0 
  │ ├── es6-promise@3.2.1 
  │ ├── hash-sum@1.0.2 
  │ ├─┬ html-minifier@0.8.0 
  │ │ ├─┬ change-case@2.3.1 
  │ │ │ ├── camel-case@1.2.2 
  │ │ │ ├── constant-case@1.1.2 
  │ │ │ ├── dot-case@1.1.2 
  │ │ │ ├── is-lower-case@1.1.3 
  │ │ │ ├── is-upper-case@1.1.2 
  │ │ │ ├── lower-case@1.1.4 
  │ │ │ ├── lower-case-first@1.0.2 
  │ │ │ ├── param-case@1.1.2 
  │ │ │ ├── pascal-case@1.1.2 
  │ │ │ ├── path-case@1.1.2 
  │ │ │ ├── sentence-case@1.1.3 
  │ │ │ ├── snake-case@1.1.2 
  │ │ │ ├── swap-case@1.1.2 
  │ │ │ ├── title-case@1.1.2 
  │ │ │ ├── upper-case@1.1.3 
  │ │ │ └── upper-case-first@1.1.2 
  │ │ ├─┬ clean-css@3.4.28 
  │ │ │ ├─┬ commander@2.8.1 
  │ │ │ │ └── graceful-readlink@1.0.1 
  │ │ │ └─┬ source-map@0.4.4 
  │ │ │   └── amdefine@1.0.1 
  │ │ ├─┬ cli@0.10.0 
  │ │ │ ├── exit@0.1.2 
  │ │ │ └── glob@5.0.15 
  │ │ ├─┬ concat-stream@1.5.2 
  │ │ │ ├─┬ readable-stream@2.0.6 
  │ │ │ │ └── string_decoder@0.10.31 
  │ │ │ └── typedarray@0.0.6 
  │ │ ├── relateurl@0.2.7 
  │ │ └─┬ uglify-js@2.4.24 
  │ │   ├── async@0.2.10 
  │ │   ├── source-map@0.1.34 
  │ │   ├── uglify-to-browserify@1.0.2 
  │ │   └─┬ yargs@3.5.4 
  │ │     ├── camelcase@1.2.1 
  │ │     ├── window-size@0.1.0 
  │ │     └── wordwrap@0.0.2 
  │ ├── lru-cache@2.7.3 
  │ ├── parse5@1.5.1 
  │ ├─┬ postcss@5.2.17 
  │ │ ├─┬ chalk@1.1.3 
  │ │ │ ├── ansi-styles@2.2.1 
  │ │ │ ├── escape-string-regexp@1.0.5 
  │ │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ │ └── ansi-regex@2.1.1 
  │ │ │ ├── strip-ansi@3.0.1 
  │ │ │ └── supports-color@2.0.0 
  │ │ ├── js-base64@2.3.2 
  │ │ └─┬ supports-color@3.2.3 
  │ │   └── has-flag@1.0.0 
  │ ├─┬ postcss-selector-parser@1.3.3 
  │ │ ├── flatten@1.0.2 
  │ │ ├── indexes-of@1.0.1 
  │ │ └── uniq@1.0.1 
  │ └── through@2.3.8 
  └── UNMET PEER DEPENDENCY vueify-insert-css@^1.0.0

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/generator-loopback-vue/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 21% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0663 took 4.7571s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (9:4) on program // Copyright IBM Corp. 2015,2016. All Rights Reserved.
// Node module: strong-globalize
// This file is licensed under the Artistic License 2.0.
// License text available at https://opensource.org/licenses/Artistic-2.0

'use strict';

var Globalize = require('../deps/globalize');
var assert = require('assert');
var debug = require('debug')('strong-globalize');
var fs = require('fs');
var helper = require('./helper');
var osLocale = require('os-locale');
var MapCache = require('lodash/_MapCache');
var md5 = require('md5');
var memoize = require('lodash/memoize');
var pathUtil = require('path');
var translate = require('./translate');
var util = require('util');
var YAML = require('yamljs');

exports.setDefaultLanguage = setDefaultLanguage;
exports.setRootDir = helper.setRootDir;
exports.setPersistentLogging = setPersistentLogging;

exports.formatCurrency = exports.c = formatCurrency;
exports.formatDate = exports.d = formatDate;
exports.formatNumber = exports.n = formatNumber;
exports.formatMessage = exports.t = exports.m = formatMessage;
exports.formatJson = formatJson;

exports.rfc5424 = rfc5424;
exports.Error = myError;

exports.packMessage = packMessage;
exports.loadGlobalize = loadGlobalize;
exports.consoleEnabled = consoleEnabled;
exports.logPersistent = logPersistent;

/**
 * StrongLoop Defaults
 */

var SL_DEFAULT_DATETIME = {datetime: 'medium'};
var SL_DEFAULT_NUMBER = {round: 'floor'};
var SL_DEFAULT_CURRENCY = {style: 'name'};

var OS_LANG = osLanguage();
var MY_APP_LANG = process.env.STRONGLOOP_GLOBALIZE_APP_LANGUAGE;
MY_APP_LANG = helper.isSupportedLanguage(MY_APP_LANG) ? MY_APP_LANG : null;

function osLanguage() {
  var locale = osLocale.sync();
  var lang = locale.substring(0, 2);
  if (helper.isSupportedLanguage(lang)) return lang;
  if (lang === 'zh') {
    var region = locale.substring(3);
    if (region === 'CN') return 'zh-Hans';
    if (region === 'TW') return 'zh-Hant';
    if (region === 'Hans') return 'zh-Hans';
    if (region === 'Hant') return 'zh-Hant';
  }
}

/**
 * setDefaultLanguage
 *
 * @param {string} (optional, default: `'en'`) Language ID.
 *     It tries to use OS language, then falls back to 'en'
 */
function setDefaultLanguage(lang) {
  lang = helper.isSupportedLanguage(lang) ? lang : null;
  lang = lang || MY_APP_LANG || OS_LANG || helper.ENGLISH;
  loadGlobalize(lang);
  if (lang !== helper.ENGLISH) {
    loadGlobalize(helper.ENGLISH);
  }
  global.STRONGLOOP_GLB.locale(lang);
  global.STRONGLOOP_GLB.DEFAULT_LANG = lang;
  return lang;
}

/**
 * Globalize.formatMessage wrapper returns a string.
 *
 * @param {string} path The message key
 * @param {object} variables List of placeholder key and content value pair.
 * @param {string} variables.<phXXX> The placeholder key.
 * @param {string} variables.<string> The content value.
 *     If the system locale is undefined, falls back to 'en'
 */
function formatMessage(path, variables, lang) {
  assert(path);
  if (!global.STRONGLOOP_GLB) setDefaultLanguage();
  var message = path;
  if (helper.hashKeys(path)) {
    if (!global.STRONGLOOP_GLB.getHash) {
      global.STRONGLOOP_GLB.getHash = memoize(md5);
    }
    path = global.STRONGLOOP_GLB.getHash(path);
  }
  lang = lang || global.STRONGLOOP_GLB.DEFAULT_LANG;
  debug('~~~ lang = %s %s %j %s', lang, path, variables, __filename);
  var trailer = helper.getTrailerAfterDot(path);
  if (trailer === 'json' || trailer === 'yml' || trailer === 'yaml') {
    var fullPath = pathUtil.join(helper.getRootDir(), path);
    return formatJson(fullPath, JSON.parse(variables), lang);
  }
  function formatMsgInline(lang) {
    var g = global.STRONGLOOP_GLB.bundles[lang];
    if (!global.STRONGLOOP_GLB.formatters) {
      global.STRONGLOOP_GLB.formatters = new MapCache();
    }
    var allFormatters = global.STRONGLOOP_GLB.formatters;
    var langFormatters;
    if (allFormatters.has(lang)) {
      langFormatters = allFormatters.get(lang);
    } else {
      langFormatters = new MapCache();
      allFormatters.set(lang, langFormatters);
    }
    if (langFormatters.has(path))
      return langFormatters.get(path)(variables || {});
    var format = g.messageFormatter(path);
    langFormatters.set(path, format);
    return format(variables || {});
  }
  try {
    message = formatMsgInline(lang);
  } catch (e) {
    if (lang === helper.ENGLISH) {
      message = sanitizeMsg(message, variables);
      debug(
        '*** %s not found for %s. Fall back to: "%s" ***  %s',
        path, lang, message, e);
    } else {
      debug(
        '*** %s for %s not localized. Fall back to English. ***  %s',
      path, lang, e);
      try {
        message = formatMsgInline(helper.ENGLISH);
      } catch (e) {
        message = sanitizeMsg(message, variables);
        debug(
          '*** %s not found for %s. Fall back to: "%s" ***  %s',
          path, lang, message, e);
      };
    }
  };
  if (global.STRONGLOOP_GLB.PSEUDO_LOC_PREAMBLE) {
    message = global.STRONGLOOP_GLB.PSEUDO_LOC_PREAMBLE + message;
  }
  return message;
}

function formatJson(fullPath, variables, lang) {
  assert(fullPath === pathUtil.resolve(helper.getRootDir(), fullPath),
    '*** full path is required to format json/yaml file: ' + fullPath);
  var fileType = helper.getTrailerAfterDot(fullPath);
  try {
    var contentStr = fs.readFileSync(fullPath, 'utf8');
    var jsonData = null;
    if (fileType === 'json') jsonData = JSON.parse(contentStr);
    if (fileType === 'yml' || fileType === 'yaml')
      jsonData = YAML.parse(contentStr);
  } catch (_e) {
    return '*** read failure: ' + fullPath;
  }
  var msges = helper.scanJson(variables, jsonData);
  var transMsges = [];
  msges.forEach(function(msg) {
    var transMsg = formatMessage(msg, null, lang);
    transMsges.push(transMsg);
  });
  helper.replaceJson(variables, jsonData, transMsges);
  return jsonData;
}

function sanitizeMsg(message, variables) {
  message = message
    .replace(/}}/g, '')
    .replace(/{{/g, '');
  if (typeof variables === 'string' ||
      (Array.isArray(variables) && variables.length > 0)) {
    var sanitizedMsg = message
      .replace(/%[sdj]/g, '%s');
    message = util.format.apply(util, [sanitizedMsg].concat(variables));
  }
  return message;
}

function packMessage(args, fn, withOriginalMsg, lang) {
  var path = args[0];
  var percentInKey = helper.percent(path);
  var txtWithTwoOrMoreArgs =
    (helper.getTrailerAfterDot(path) === 'txt' && args.length > 2);
  // If it comes from *.txt, there are no percent in the path,
  // but there can be one or more %s in the message value.
  var variables = percentInKey ? helper.mapArgs(path, args) :
    txtWithTwoOrMoreArgs ? helper.repackArgs(args, 1) : args[1];
  var message = formatMessage(path, variables, lang);
  if (withOriginalMsg) message = {
    language: lang,
    message: message,
    orig: path,
    vars: variables,
  };
  if (fn) return fn(message);
  return message;
}

/* RFC 5424 Syslog Message Severities
 * 0 Emergency: system is unusable
 * 1 Alert: action must be taken immediately
 * 2 Critical: critical conditions
 * 3 Error: error conditions
 * 4 Warning: warning conditions
 * 5 Notice: normal but significant condition
 * 6 Informational: informational messages
 * 7 Debug: debug-level messages
 */

function rfc5424(level, args, console, lang) {
  return packMessage(args, function(msg) {
    logPersistent(level, msg);
    if (consoleEnabled()) console(msg.message);
  }, true, lang);
}

function myError() {
  var msg = packMessage(arguments, null, true);
  logPersistent('error', msg);
  return Error(msg.message);
}

// RFC 5424 Syslog Message Severities
exports.emergency = emergency;
exports.alert = alert;
exports.critical = critical;
exports.error = error;
exports.warning = warning;
exports.notice = notice;
exports.informational = informational;
exports.debug = myDebug;

exports.warn = warn;
exports.info = info;
exports.log = log;

exports.help = help;
exports.data = data;
exports.prompt = prompt;
exports.verbose = verbose;
exports.input = input;
exports.silly = silly;

function emergency() {
  return rfc5424('emergency', arguments, console.error);
}
function alert() { return rfc5424('alert', arguments, console.error); }
function critical() { return rfc5424('critical', arguments, console.error); }
function error() { return rfc5424('error', arguments, console.error); }
function warning() { return rfc5424('warning', arguments, console.error); }
function notice() { return rfc5424('notice', arguments, console.log); }
function informational() {
  return rfc5424('informational', arguments, console.log);
}
function myDebug() { return rfc5424('debug', arguments, console.log); }

function warn() { return rfc5424('warn', arguments, console.error); }
function info() { return rfc5424('info', arguments, console.log); }
function log() { return rfc5424('log', arguments, console.log); }

function help() { return rfc5424('help', arguments, console.log); }
function data() { return rfc5424('data', arguments, console.log); }
function prompt() { return rfc5424('prompt', arguments, console.log); }
function verbose() { return rfc5424('verbose', arguments, console.log); }
function input() { return rfc5424('input', arguments, console.log); }
function silly() { return rfc5424('silly', arguments, console.log); }

/**
 * Globalize.formatNumber wrapper returns a string.
 *
 * @param {value} integer or float
 * @param {object} The options (optional); if null, use the StrongLoop default.
 *     Strongly recommended to set NO options and let strong-globalize use
 *     the StrongLoop default for consistency across StrongLoop products.
 *     See https://www.npmjs.com/package/globalize#number-module
 */
function formatNumber(value, options, lang) {
  assert(value);
  if (!global.STRONGLOOP_GLB) setDefaultLanguage(lang);
  lang = lang || global.STRONGLOOP_GLB.DEFAULT_LANG;
  options = options || SL_DEFAULT_NUMBER;
  var G = global.STRONGLOOP_GLB.bundles[lang];
  var msg = null;
  try {
    msg = G.formatNumber(value, options);
  } catch (e) {
    msg = value.toString();
    debug('*** formatNumber error: value:%s', msg);
  }
  return msg;
}

/**
 * Globalize.formatDate wrapper returns a string.
 *
 * @param {Date object} such as new Date()
 * @param {object} The options (optional); if null, use the StrongLoop default.
 *     Strongly recommended to set NO options and let strong-globalize use
 *     the StrongLoop default for consistency across StrongLoop products.
 *     See https://www.npmjs.com/package/globalize#date-module
 */
function formatDate(value, options, lang) {
  assert(value);
  if (!global.STRONGLOOP_GLB) setDefaultLanguage(lang);
  lang = lang || global.STRONGLOOP_GLB.DEFAULT_LANG;
  options = options || SL_DEFAULT_DATETIME;
  var G = global.STRONGLOOP_GLB.bundles[lang];
  var msg = null;
  try {
    msg = G.formatDate(value, options);
  } catch (e) {
    msg = value.toString();
    debug('*** formatDate error: value:%s', msg);
  }
  return msg;
}

/**
 * Globalize.formatCurrency wrapper returns a string.
 *
 * @param {value} integer or float
 * @param {string} three-letter currency symbol, ISO 4217 Currency Code
 * @param {object} The options (optional); if null, use the StrongLoop default.
 *     Strongly recommended to set NO options and let strong-globalize use
 *     the StrongLoop default for consistency across StrongLoop products.
 *     See https://www.npmjs.com/package/globalize#curency-module
 */
function formatCurrency(value, currencySymbol, options, lang) {
  assert(value && currencySymbol);
  if (!global.STRONGLOOP_GLB) setDefaultLanguage(lang);
  lang = lang || global.STRONGLOOP_GLB.DEFAULT_LANG;
  options = options || SL_DEFAULT_CURRENCY;
  var G = global.STRONGLOOP_GLB.bundles[lang];
  var msg = null;
  try {
    msg = G.formatCurrency(value, currencySymbol, options);
  } catch (e) {
    msg = currencySymbol.toString() + value.toString();
    debug('*** formatCurrency error: value:%s, currencySymbol:%s',
      value, currencySymbol);
  }
  return msg;
}

function loadGlobalize(lang, enumerateNodeModules) {
  assert(helper.isSupportedLanguage(lang), 'Not supported: ' + lang);
  if (!global.STRONGLOOP_GLB) {
    var versionSG = helper.getPackageVersion(
      pathUtil.join(__dirname, '..'));
    var versionG = helper.getPackageVersion(
      pathUtil.join(__dirname, '..', 'node_modules', 'globalize'));
    global.STRONGLOOP_GLB = {
      versionSG: versionSG,
      versionG: versionG,
      bundles: {},
      formatters: new MapCache(),
      getHash: memoize(md5),
      load: Globalize.load,
      locale: Globalize.locale,
      loadMessages: Globalize.loadMessages,
      DEFAULT_LANG: helper.ENGLISH,
      LOG_FN: null,
      DISABLE_CONSOLE: false,
      MASTER_ROOT_DIR: helper.getRootDir(),
      MSG_RES_LOADED: [],
      AUTO_MSG_LOADING: helper.AML_DEFAULT,
      PSEUDO_LOC_PREAMBLE:
        process.env.STRONG_GLOBALIZE_PSEUDO_LOC_PREAMBLE || '',
    };
    loadCldr(helper.ENGLISH);
    global.STRONGLOOP_GLB.bundles[helper.ENGLISH] =
      new Globalize(helper.ENGLISH);
    global.STRONGLOOP_GLB.locale(helper.ENGLISH);
    translate.loadMsgFromFile(
      helper.ENGLISH, helper.getRootDir(), enumerateNodeModules);
  }
  if (!(lang in global.STRONGLOOP_GLB.bundles)) {
    loadCldr(lang);
    global.STRONGLOOP_GLB.bundles[lang] = new Globalize(lang);
    global.STRONGLOOP_GLB.locale(lang);
    translate.loadMsgFromFile(lang, helper.getRootDir(), enumerateNodeModules);
  }
  return global.STRONGLOOP_GLB.bundles[lang];
}

function loadCldr(lang) {
  assert(global.STRONGLOOP_GLB && (!global.STRONGLOOP_GLB.bundles ||
    !global.STRONGLOOP_GLB.bundles[lang]), 'CLDR already loaded for ' + lang);
  var cldrDir = pathUtil.join(__dirname, '..', 'cldr');
  helper.enumerateFilesSync(cldrDir, null, ['json'], false, false,
    function(content, filePath) {
      var cldr = null;
      try {
        cldr = JSON.parse(content);
      } catch (e) {
        throw new Error('*** CLDR read error on ' + process.platform);
      }
      var cldrMain = {main: {}};
      cldrMain.main[lang] = cldr.main[lang];
      global.STRONGLOOP_GLB.load(cldrMain);
      if (lang === helper.ENGLISH) {
        var cldrSupplemental = {supplemental: cldr.supplemental};
        global.STRONGLOOP_GLB.load(cldrSupplemental);
      }
    });
}

/**
 *
 * Persistent logging
 *
 */

// var syslogLevels = { // RFC5424
//   emerg: 0,
//   alert: 1,
//   crit: 2,
//   error: 3,
//   warning: 4,
//   notice: 5,
//   info: 6,
//   debug: 7,
// };

// var npmLevels = {
//   error: 0,
//   warn: 1,
//   info: 2,
//   verbose: 3,
//   debug: 4,
//   silly: 5,
// };

function consoleEnabled() {
  if (!global.STRONGLOOP_GLB) setDefaultLanguage();
  return !global.STRONGLOOP_GLB.DISABLE_CONSOLE;
}

/**
 *
 */
function setPersistentLogging(logFn, disableConsole) {
  assert(logFn);
  assert(typeof logFn === 'function');
  if (!global.STRONGLOOP_GLB) setDefaultLanguage();
  global.STRONGLOOP_GLB.DISABLE_CONSOLE = !!disableConsole;
  try {
    var message = 'StrongGlobalize persistent logging started at '
        + (new Date()).toString();
    logFn('info', {
      language: helper.ENGLISH,
      message: message,
      orig: message,
      vars: [],
    });
    global.STRONGLOOP_GLB.LOG_FN = logFn;
  } catch (e) {
    global.STRONGLOOP_GLB.LOG_FN = null;
  }
}

function logPersistent(level, message) {
  if (!global.STRONGLOOP_GLB) setDefaultLanguage();
  if (!global.STRONGLOOP_GLB.LOG_FN) return;
  level = level || 'info';
  if (typeof global.STRONGLOOP_GLB.LOG_FN === 'function') {
    global.STRONGLOOP_GLB.LOG_FN(level, message);
  };
}
 at SyntaxError: Unexpected token (9:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/generator-loopback-vue/node_modules/generator-loopback-vue/server/server.js. Coverage (Term): 13% Coverage (LOC): 13%
*- File /root/Targets/generator-loopback-vue/node_modules/loopback/index.js. Coverage (Term): 23% Coverage (LOC): 33%
*- File /root/Targets/generator-loopback-vue/node_modules/strong-globalize/index.js. Coverage (Term): 2% Coverage (LOC): 4%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
