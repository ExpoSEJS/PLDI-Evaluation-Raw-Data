/root/Targets/tempath
└─┬ tempath@0.2.0 
  ├── cursive@0.3.0 
  ├─┬ jison@0.4.13 
  │ ├── cjson@0.2.1 
  │ ├── ebnf-parser@0.1.10 
  │ ├─┬ escodegen@0.0.21 
  │ │ ├── estraverse@0.0.4 
  │ │ └── source-map@0.5.7 
  │ ├── esprima@1.0.4 
  │ ├── jison-lex@0.2.1 
  │ ├── JSONSelect@0.4.0 
  │ ├── lex-parser@0.1.4 
  │ └─┬ nomnom@1.5.2 
  │   ├── colors@0.5.1 
  │   └── underscore@1.1.7 
  ├─┬ jison-lex@0.3.4 
  │ └── nomnom@1.5.2 
  └─┬ nomnom@1.8.1 
    ├─┬ chalk@0.4.0 
    │ ├── ansi-styles@1.0.0 
    │ ├── has-color@0.1.7 
    │ └── strip-ansi@0.1.1 
    └── underscore@1.6.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/tempath/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 80% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","call","apply","RegExp","join","stringify"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0933 took 12.3757s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (2:0) on program ({
,
options: {},
performAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {
var YYSTATE=YY_START;
switch($avoiding_name_collisions) {
case 0:                              /* pass */
break;
case 1:                              /* pass */
break;
case 2:                              return ','
break;
case 3:                              return 'AND'
break;
case 4:                              return 'AS'
break;
case 5:                              return 'DEF'
break;
case 6:                              return 'ELSE'
break;
case 7:                              return 'END'
break;
case 8:                              return 'FOR'
break;
case 9:                              return 'IF'
break;
case 10:                              return 'IMPORT'
break;
case 11:                              return 'IN'
break;
case 12:                              return 'NOT'
break;
case 13:                              return 'OR'
break;
case 14:                              return 'PROP'
break;
case 15:                              return 'SET'
break;
case 16:                              return 'DEFAULT'
break;
case 17:                              return 'SYMBOL'
break;
case 18:                              return 'LVALUE'
break;
case 19:                              return 'NUMBER'
break;
case 20:                              return 'STRING'
break;
case 21:                              return '~'
break;
case 22:                              return '('
break;
case 23:                              return ')'
break;
case 24:                              return '+'
break;
case 25:                              return '-'
break;
case 26:                              return '*'
break;
case 27:                              return '/'
break;
case 28:                              return '%'
break;
case 29:                              return '<='
break;
case 30:                              return '>='
break;
case 31:                              return '<'
break;
case 32:                              return '>'
break;
case 33:                              return '='
break;
}
},
rules: [/^(?:#.*(?=\r?\n|$))/,/^(?:[\s]+)/,/^(?:,)/,/^(?:\b(and)\b)/,/^(?:\b(as)\b)/,/^(?:\b(def)\b)/,/^(?:\b(else)\b)/,/^(?:\b(end)\b)/,/^(?:\b(for)\b)/,/^(?:\b(if)\b)/,/^(?:\b(import)\b)/,/^(?:\b(in)\b)/,/^(?:\b(not)\b)/,/^(?:\b(or)\b)/,/^(?:\b(prop)\b)/,/^(?:\b(set)\b)/,/^(?:\b(default)\b)/,/^(?:[_A-Za-z]+)/,/^(?:\$[_A-Za-z][_0-9A-Za-z]*)/,/^(?:[\-+]?\d+(?:\.\d+)?)/,/^(?:"([^\\\\"]|\\\\.)*"|'([^\\\\']|\\\\.)*')/,/^(?:~)/,/^(?:\()/,/^(?:\))/,/^(?:\+)/,/^(?:-)/,/^(?:\*)/,/^(?:\/)/,/^(?:%)/,/^(?:<=)/,/^(?:>=)/,/^(?:<)/,/^(?:>)/,/^(?:=)/],
conditions: {"INITIAL":{"rules":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"inclusive":true}}
}) at SyntaxError: Unexpected token (2:0)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$3.parseIdent (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2189:12)
    at Parser.pp$3.parsePropertyName (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2052:101)
    at Parser.pp$3.parseObj (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1988:14)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1805:19)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/tempath/node_modules/tempath/tempath.js. Coverage (Term): 2% Coverage (LOC): 3%
*- File /root/Targets/tempath/node_modules/tempath/bin/tempath.parser.js. Coverage (Term): 62% Coverage (LOC): 87%
*- File /root/Targets/tempath/node_modules/jison-lex/regexp-lexer.js. Coverage (Term): 24% Coverage (LOC): 30%
*- File /root/Targets/tempath/node_modules/lex-parser/lex-parser.js. Coverage (Term): 53% Coverage (LOC): 85%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
