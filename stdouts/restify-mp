
> dtrace-provider@0.2.8 install /root/Targets/restify-mp/node_modules/dtrace-provider
> node-gyp rebuild

make: Entering directory '/root/Targets/restify-mp/node_modules/dtrace-provider/build'
  TOUCH Release/obj.target/DTraceProviderStub.stamp
make: Leaving directory '/root/Targets/restify-mp/node_modules/dtrace-provider/build'

> kerberos@0.0.3 install /root/Targets/restify-mp/node_modules/kerberos
> (node-gyp rebuild 2> builderror.log) || (exit 0)

make: Entering directory '/root/Targets/restify-mp/node_modules/kerberos/build'
  SOLINK_MODULE(target) Release/obj.target/kerberos.node
  COPY Release/kerberos.node
make: Leaving directory '/root/Targets/restify-mp/node_modules/kerberos/build'

> bson@0.2.3 install /root/Targets/restify-mp/node_modules/bson
> (node-gyp rebuild 2> builderror.log) || (exit 0)

make: Entering directory '/root/Targets/restify-mp/node_modules/bson/build'
  CXX(target) Release/obj.target/bson/ext/bson.o
bson.target.mk:92: recipe for target 'Release/obj.target/bson/ext/bson.o' failed
make: Leaving directory '/root/Targets/restify-mp/node_modules/bson/build'

> dtrace-provider@0.8.5 install /root/Targets/restify-mp/node_modules/restify/node_modules/dtrace-provider
> node scripts/install.js

/root/Targets/restify-mp
└─┬ restify-mp@0.0.1 
  ├── assert-plus@0.1.2 
  ├─┬ bunyan@0.21.1 
  │ ├── dtrace-provider@0.2.8 
  │ └── mv@0.0.5 
  ├── moment@2.5.1 
  ├─┬ mongodb@1.3.20 
  │ ├─┬ bson@0.2.3 
  │ │ └── nan@0.4.4 
  │ └── kerberos@0.0.3 
  ├─┬ mysql@2.0.1 
  │ ├── bignumber.js@1.0.1 
  │ ├─┬ readable-stream@1.1.14 
  │ │ ├── core-util-is@1.0.2 
  │ │ ├── inherits@2.0.3 
  │ │ ├── isarray@0.0.1 
  │ │ └── string_decoder@0.10.31 
  │ └── require-all@0.0.3 
  ├── oauth2-provider@1.3.0 
  ├── posix-getopt@1.0.0 
  ├─┬ restify@6.0.1  (git://github.com/mcavage/node-restify.git#a9118d834c8c16e608de5ae50aca5f7b29450ee6)
  │ ├── assert-plus@1.0.0 
  │ ├─┬ bunyan@1.8.12 
  │ │ ├── moment@2.18.1 
  │ │ └─┬ mv@2.1.1 
  │ │   ├─┬ mkdirp@0.5.1 
  │ │   │ └── minimist@0.0.8 
  │ │   ├── ncp@2.0.0 
  │ │   └─┬ rimraf@2.4.5 
  │ │     └─┬ glob@6.0.4 
  │ │       ├── inflight@1.0.6 
  │ │       ├─┬ minimatch@3.0.4 
  │ │       │ └─┬ brace-expansion@1.1.8 
  │ │       │   ├── balanced-match@1.0.0 
  │ │       │   └── concat-map@0.0.1 
  │ │       └── path-is-absolute@1.0.1 
  │ ├─┬ clone-regexp@1.0.0 
  │ │ ├── is-regexp@1.0.0 
  │ │ └── is-supported-regexp-flag@1.0.0 
  │ ├─┬ csv@1.1.1 
  │ │ ├── csv-generate@1.0.0 
  │ │ ├── csv-parse@1.2.2 
  │ │ ├─┬ csv-stringify@1.0.4 
  │ │ │ └── lodash.get@4.4.2 
  │ │ └── stream-transform@0.1.2 
  │ ├─┬ dtrace-provider@0.8.5 
  │ │ └── nan@2.7.0 
  │ ├── escape-regexp-component@1.0.2 
  │ ├─┬ ewma@2.0.1 
  │ │ └── assert-plus@1.0.0 
  │ ├── formidable@1.1.1 
  │ ├─┬ http-signature@1.2.0 
  │ │ ├── assert-plus@1.0.0 
  │ │ ├─┬ jsprim@1.4.1 
  │ │ │ ├── assert-plus@1.0.0 
  │ │ │ └── json-schema@0.2.3 
  │ │ └─┬ sshpk@1.13.1 
  │ │   ├── asn1@0.2.3 
  │ │   ├── assert-plus@1.0.0 
  │ │   ├── bcrypt-pbkdf@1.0.1 
  │ │   ├─┬ dashdash@1.14.1 
  │ │   │ └── assert-plus@1.0.0 
  │ │   ├── ecc-jsbn@0.1.1 
  │ │   ├─┬ getpass@0.1.7 
  │ │   │ └── assert-plus@1.0.0 
  │ │   ├── jsbn@0.1.1 
  │ │   └── tweetnacl@0.14.5 
  │ ├── lodash@4.17.4 
  │ ├─┬ lru-cache@4.1.1 
  │ │ ├── pseudomap@1.0.2 
  │ │ └── yallist@2.1.2 
  │ ├── mime@1.4.0 
  │ ├── negotiator@0.6.1 
  │ ├─┬ once@1.4.0 
  │ │ └── wrappy@1.0.2 
  │ ├── pidusage@1.1.6 
  │ ├── qs@6.5.1 
  │ ├─┬ restify-errors@5.0.0 
  │ │ ├── assert-plus@1.0.0 
  │ │ └── safe-json-stringify@1.0.4 
  │ ├── semver@5.4.1 
  │ ├─┬ spdy@3.4.7 
  │ │ ├─┬ debug@2.6.8 
  │ │ │ └── ms@2.0.0 
  │ │ ├── handle-thing@1.2.5 
  │ │ ├── http-deceiver@1.2.7 
  │ │ ├── safe-buffer@5.1.1 
  │ │ ├── select-hose@2.0.0 
  │ │ └─┬ spdy-transport@2.0.20 
  │ │   ├── detect-node@2.0.3 
  │ │   ├─┬ hpack.js@2.1.6 
  │ │   │ └─┬ readable-stream@2.3.3 
  │ │   │   ├── isarray@1.0.0 
  │ │   │   └── string_decoder@1.0.3 
  │ │   ├── obuf@1.1.1 
  │ │   ├─┬ readable-stream@2.3.3 
  │ │   │ ├── isarray@1.0.0 
  │ │   │ ├── process-nextick-args@1.0.7 
  │ │   │ ├── string_decoder@1.0.3 
  │ │   │ └── util-deprecate@1.0.2 
  │ │   └─┬ wbuf@1.7.2 
  │ │     └── minimalistic-assert@1.0.0 
  │ ├── uuid@3.1.0 
  │ ├─┬ vasync@1.6.4 
  │ │ └─┬ verror@1.6.0 
  │ │   └── extsprintf@1.2.0 
  │ └─┬ verror@1.10.0 
  │   ├── assert-plus@1.0.0 
  │   └── extsprintf@1.3.0 
  ├─┬ seq@0.3.5 
  │ ├─┬ chainsaw@0.0.9 
  │ │ └── traverse@0.3.9 
  │ └── hashish@0.0.4 
  └── serializer@0.0.3 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/restify-mp/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0509 took 3.7454s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (7:4) on program // Copyright (c) 2012 Mark Cavage. All rights reserved.

var fs = require('fs');
var path = require('path');
var util = require('util');

var assert = require('assert-plus');
var bunyan = require('bunyan');
var getopt = require('posix-getopt');
var restify = require('restify');

var todo = require('./lib');


///--- Globals

var NAME = 'todoapp';

// In true UNIX fashion, debug messages go to stderr, and audit records go
// to stdout, so you can split them as you like in the shell
var LOG = bunyan.createLogger({
    name: NAME,
    streams: [
        {
            level: (process.env.LOG_LEVEL || 'info'),
            stream: process.stderr
        },
        {
            // This ensures that if we get a WARN or above all debug records
            // related to that request are spewed to stderr - makes it nice
            // filter out debug messages in prod, but still dump on user
            // errors so you can debug problems
            level: 'debug',
            type: 'raw',
            stream: new restify.bunyan.RequestCaptureStream({
                level: bunyan.WARN,
                maxRecords: 100,
                maxRequestIds: 1000,
                stream: process.stderr
            })
        }
    ],
    serializers: restify.bunyan.serializers
});


///--- Helpers

/**
 * Standard POSIX getopt-style options parser.
 *
 * Some options, like directory/user/port are pretty cut and dry, but note
 * the 'verbose' or '-v' option afflicts the log level, repeatedly. So you
 * can run something like:
 *
 * node main.js -p 80 -vv 2>&1 | bunyan
 *
 * And the log level will be set to TRACE.
 */
function parseOptions() {
    var option;
    var opts = {}
    var parser = new getopt.BasicParser('hvd:p:u:z:', process.argv);

    while ((option = parser.getopt()) !== undefined) {
        switch (option.option) {
            case 'd':
                opts.directory = path.normalize(option.optarg);
                break;

            case 'h':
                usage();
                break;

            case 'p':
                opts.port = parseInt(option.optarg, 10);
                break;

            case 'u':
                opts.user = option.optarg;
                break;

            case 'v':
                // Allows us to set -vvv -> this little hackery
                // just ensures that we're never < TRACE
                LOG.level(Math.max(bunyan.TRACE, (LOG.level() - 10)));
                if (LOG.level() <= bunyan.DEBUG)
                    LOG = LOG.child({src: true});
                break;

            case 'z':
                opts.password = option.optarg;
                break;

            default:
                usage('invalid option: ' + option.option);
                break;
        }
    }

    return (opts);
}


function usage(msg) {
    if (msg)
        console.error(msg);

    var str = 'usage: ' +
        NAME +
        ' [-v] [-d dir] [-p port] [-u user] [-z password]';
    console.error(str);
    process.exit(msg ? 1 : 0);
}


///--- Mainline

(function main() {
    var options = parseOptions();

    LOG.debug(options, 'command line arguments parsed');

    // First setup our 'database'
    var dir = path.normalize((options.directory || '/tmp') + '/todos');
    try {
        fs.mkdirSync(dir);
    } catch (e) {
        if (e.code !== 'EEXIST') {
            LOG.fatal(e, 'unable to create "database" %s', dir);
            process.exit(1);
        }
    }

    var server = todo.createServer({
        directory: dir,
        log: LOG 
    });

    // At last, let's rock and roll
    server.listen((options.port || 8080), function onListening() {
        LOG.info('listening at %s', server.url);
    });
})(); at SyntaxError: Unexpected token (7:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
