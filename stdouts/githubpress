/root/Targets/githubpress
└─┬ githubpress@0.0.38 
  ├─┬ cheerio@0.18.0 
  │ ├─┬ CSSselect@0.4.1 
  │ │ ├── CSSwhat@0.4.7 
  │ │ └── domutils@1.4.3 
  │ ├─┬ dom-serializer@0.0.1 
  │ │ └── domelementtype@1.1.3 
  │ ├── entities@1.1.1 
  │ ├─┬ htmlparser2@3.8.3 
  │ │ ├── domelementtype@1.3.0 
  │ │ ├── domhandler@2.3.0 
  │ │ ├── domutils@1.5.1 
  │ │ ├── entities@1.0.0 
  │ │ └─┬ readable-stream@1.1.14 
  │ │   ├── core-util-is@1.0.2 
  │ │   ├── inherits@2.0.3 
  │ │   ├── isarray@0.0.1 
  │ │   └── string_decoder@0.10.31 
  │ └── lodash@2.4.2 
  ├── colors@1.1.2 
  ├─┬ dateformat@1.0.12 
  │ ├── get-stdin@4.0.1 
  │ └─┬ meow@3.7.0 
  │   ├─┬ camelcase-keys@2.1.0 
  │   │ └── camelcase@2.1.1 
  │   ├── decamelize@1.2.0 
  │   ├─┬ loud-rejection@1.6.0 
  │   │ ├─┬ currently-unhandled@0.4.1 
  │   │ │ └── array-find-index@1.0.2 
  │   │ └── signal-exit@3.0.2 
  │   ├── map-obj@1.0.1 
  │   ├─┬ normalize-package-data@2.4.0 
  │   │ ├── hosted-git-info@2.5.0 
  │   │ ├─┬ is-builtin-module@1.0.0 
  │   │ │ └── builtin-modules@1.1.1 
  │   │ ├── semver@5.4.1 
  │   │ └─┬ validate-npm-package-license@3.0.1 
  │   │   ├─┬ spdx-correct@1.0.2 
  │   │   │ └── spdx-license-ids@1.2.2 
  │   │   └── spdx-expression-parse@1.0.4 
  │   ├── object-assign@4.1.1 
  │   ├─┬ read-pkg-up@1.0.1 
  │   │ ├─┬ find-up@1.1.2 
  │   │ │ ├── path-exists@2.1.0 
  │   │ │ └─┬ pinkie-promise@2.0.1 
  │   │ │   └── pinkie@2.0.4 
  │   │ └─┬ read-pkg@1.1.0 
  │   │   ├─┬ load-json-file@1.1.0 
  │   │   │ ├─┬ parse-json@2.2.0 
  │   │   │ │ └─┬ error-ex@1.3.1 
  │   │   │ │   └── is-arrayish@0.2.1 
  │   │   │ ├── pify@2.3.0 
  │   │   │ └─┬ strip-bom@2.0.0 
  │   │   │   └── is-utf8@0.2.1 
  │   │   └── path-type@1.1.0 
  │   ├─┬ redent@1.0.0 
  │   │ ├─┬ indent-string@2.1.0 
  │   │ │ └─┬ repeating@2.0.1 
  │   │ │   └─┬ is-finite@1.0.2 
  │   │ │     └── number-is-nan@1.0.1 
  │   │ └── strip-indent@1.0.1 
  │   └── trim-newlines@1.0.0 
  ├─┬ fs-extra@0.12.0 
  │ ├─┬ jsonfile@2.4.0 
  │ │ └── graceful-fs@4.1.11 
  │ ├─┬ mkdirp@0.5.1 
  │ │ └── minimist@0.0.8 
  │ ├── ncp@0.6.0 
  │ └─┬ rimraf@2.6.2 
  │   └─┬ glob@7.1.2 
  │     ├── fs.realpath@1.0.0 
  │     ├─┬ inflight@1.0.6 
  │     │ └── wrappy@1.0.2 
  │     ├─┬ minimatch@3.0.4 
  │     │ └─┬ brace-expansion@1.1.8 
  │     │   ├── balanced-match@1.0.0 
  │     │   └── concat-map@0.0.1 
  │     ├── once@1.4.0 
  │     └── path-is-absolute@1.0.1 
  ├── highlight.js@8.9.1 
  ├── jschardet@1.5.1 
  ├── marked@0.3.6 
  ├── minimist@1.2.0 
  └─┬ request@2.83.0 
    ├── aws-sign2@0.7.0 
    ├── aws4@1.6.0 
    ├── caseless@0.12.0 
    ├─┬ combined-stream@1.0.5 
    │ └── delayed-stream@1.0.0 
    ├── extend@3.0.1 
    ├── forever-agent@0.6.1 
    ├─┬ form-data@2.3.1 
    │ └── asynckit@0.4.0 
    ├─┬ har-validator@5.0.3 
    │ ├─┬ ajv@5.2.3 
    │ │ ├── co@4.6.0 
    │ │ ├── fast-deep-equal@1.0.0 
    │ │ ├── json-schema-traverse@0.3.1 
    │ │ └─┬ json-stable-stringify@1.0.1 
    │ │   └── jsonify@0.0.0 
    │ └── har-schema@2.0.0 
    ├─┬ hawk@6.0.2 
    │ ├── boom@4.3.1 
    │ ├─┬ cryptiles@3.1.2 
    │ │ └── boom@5.2.0 
    │ ├── hoek@4.2.0 
    │ └── sntp@2.0.2 
    ├─┬ http-signature@1.2.0 
    │ ├── assert-plus@1.0.0 
    │ ├─┬ jsprim@1.4.1 
    │ │ ├── extsprintf@1.3.0 
    │ │ ├── json-schema@0.2.3 
    │ │ └── verror@1.10.0 
    │ └─┬ sshpk@1.13.1 
    │   ├── asn1@0.2.3 
    │   ├── bcrypt-pbkdf@1.0.1 
    │   ├── dashdash@1.14.1 
    │   ├── ecc-jsbn@0.1.1 
    │   ├── getpass@0.1.7 
    │   ├── jsbn@0.1.1 
    │   └── tweetnacl@0.14.5 
    ├── is-typedarray@1.0.0 
    ├── isstream@0.1.2 
    ├── json-stringify-safe@5.0.1 
    ├─┬ mime-types@2.1.17 
    │ └── mime-db@1.30.0 
    ├── oauth-sign@0.8.2 
    ├── performance-now@2.1.0 
    ├── qs@6.5.1 
    ├── safe-buffer@5.1.1 
    ├── stringstream@0.0.5 
    ├─┬ tough-cookie@2.3.3 
    │ └── punycode@1.4.1 
    ├── tunnel-agent@0.6.0 
    └── uuid@3.1.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/githubpress/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0965 took 3.3402s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node
var argv = require('minimist')(process.argv.slice(2)),
	Model = require('./lib/model/model.js'),
	request = require("request"),
	marked = require('marked'),
	dateFormat = require('dateformat'),
	hljs = require('highlight.js'),
	config = require('./config.json'),
	cheerio = require('cheerio'),
	cwd = process.cwd(),
	fs = require('fs-extra'),
	exec = require('child_process').exec,
	colors = require('colors'),
	cmd_process = require('./lib/cmd/cmd.js'),
	cmd_init = require('./lib/cmd/init.js'),
	cmd_new = require('./lib/cmd/new.js'),
	cmd_list = require('./lib/cmd/list.js');
var runtime = {
	cwd:cwd,
	argv:argv,
	dirname:__dirname
}
cmd_process(runtime);




/**
 * 将生成的文件push到github中
 **/
function gitPush (){
	//检查参数
	var githubURL	= config.github,
		branch		= config.branch,
		github_user	= config.github_user,
		github_pwd	= config.github_pwd;
	if(githubURL == ""){
		console.log("未配置Github Repository地址，请在config.json中配置github项".yellow);
		return;
	}
	exec("git",
	  function (error, stdout, stderr) {
	    if (stderr) {
	      console.log("错误：可能未安装git\r\n"+stderr);
	      return;
	    }
	    //判断是否存在.github/.git目录
	    if(fs.existsSync(cwd+"/.github/.git")){
	    	var cmd = "git rm -r .";
		    exec(cmd,{cwd:cwd+"/.github"},function(error, stdout, stderr){
		    	console.log(stderr);
		    	fs.move(cwd+'/dist', cwd+'/.github', function(err){
				  if (err) {
				  	console.log(err);
				  	return;
				  }
				  	var cmd = "git add . --all";
		    		exec(cmd,{cwd:cwd+"/.github"},function(error, stdout, stderr){
		    			console.log(stderr);
		    			var cmd = "git commit -m 'sad'";
			    		exec(cmd,{cwd:cwd+"/.github"},function(error, stdout, stderr){
			    			console.log(stderr);
			    			var cmd = "git push";
				    		exec(cmd,{cwd:cwd+"/.github"},function(error, stdout, stderr){
				    			console.log(stderr);
				    		});
			    		});
		    		});
					
				});
		    });
	    	return;
	    }else{
	    	var cmd = "git clone "+githubURL+" ./.github";
			exec(cmd,
			  function (error, stdout, stderr) {
			    console.log(stderr);
			    var cmd = "git rm -r .";
			    exec(cmd,{cwd:cwd+"/.github"},function(error, stdout, stderr){
			    	console.log(stderr);
			    	fs.move(cwd+'/dist', cwd+'/.github', function(err){
					  if (err) {
					  	console.log(err);
					  	return;
					  }
						var cmd = "git add . --all";
			    		exec(cmd,{cwd:cwd+"/.github"},function(error, stdout, stderr){
			    			console.log(stderr);
			    			var cmd = "git commit -m 'sad'";
				    		exec(cmd,{cwd:cwd+"/.github"},function(error, stdout, stderr){
				    			console.log(stderr);
				    			var cmd = "git push";
					    		exec(cmd,{cwd:cwd+"/.github"},function(error, stdout, stderr){
					    			console.log(stderr);
					    		});
				    		});
			    		});
					});
			    });
			});
	    	return;
	    }
	    
	});
	
}
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
