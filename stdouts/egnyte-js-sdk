+ egnyte-js-sdk@2.7.0
updated 1 package in 8.285s
Setup Done exists, not setting up
:../FeatureTester/libs/:/home/pbai002/Targets/egnyte-js-sdk/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /home/pbai002/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /2 queued / 1 running / 1 errors / 64% coverage ] ****** [1 done /1 queued / 2 running / 1 errors / 64% coverage ] ****** [1 done /0 queued / 3 running / 1 errors / 64% coverage ] ****** [1 done /0 queued / 3 running / 1 errors / 64% coverage ] ****** [2 done /2 queued / 3 running / 1 errors / 64% coverage ] ****** [2 done /1 queued / 4 running / 1 errors / 64% coverage ] ****** [2 done /0 queued / 5 running / 1 errors / 64% coverage ] ****** [2 done /0 queued / 5 running / 1 errors / 64% coverage ] ****** [3 done /2 queued / 5 running / 1 errors / 64% coverage ] ****** [3 done /1 queued / 6 running / 1 errors / 64% coverage ] ****** [3 done /0 queued / 7 running / 1 errors / 64% coverage ] ****** [3 done /0 queued / 7 running / 1 errors / 64% coverage ] ****** [4 done /1 queued / 7 running / 1 errors / 64% coverage ] ****** [4 done /0 queued / 8 running / 1 errors / 64% coverage ] ****** [4 done /0 queued / 8 running / 1 errors / 64% coverage ] ****** [5 done /0 queued / 7 running / 1 errors / 64% coverage ] ****** [6 done /0 queued / 7 running / 1 errors / 64% coverage ] ****** [6 done /0 queued / 7 running / 1 errors / 64% coverage ] ****** [7 done /1 queued / 7 running / 1 errors / 64% coverage ] ****** [7 done /0 queued / 8 running / 1 errors / 64% coverage ] ****** [7 done /0 queued / 8 running / 1 errors / 64% coverage ] ****** [8 done /0 queued / 7 running / 1 errors / 64% coverage ] ****** [9 done /0 queued / 7 running / 2 errors / 64% coverage ] ****** [9 done /0 queued / 7 running / 2 errors / 64% coverage ] ****** [10 done /0 queued / 7 running / 2 errors / 64% coverage ] ****** [10 done /0 queued / 7 running / 2 errors / 64% coverage ] ****** [11 done /2 queued / 7 running / 2 errors / 64% coverage ] ****** [11 done /1 queued / 8 running / 2 errors / 64% coverage ] ****** [11 done /0 queued / 9 running / 2 errors / 64% coverage ] ****** [11 done /0 queued / 9 running / 2 errors / 64% coverage ] ****** [12 done /1 queued / 9 running / 3 errors / 64% coverage ] ****** [12 done /0 queued / 10 running / 3 errors / 64% coverage ] ****** [12 done /0 queued / 10 running / 3 errors / 64% coverage ] ****** [13 done /4 queued / 10 running / 3 errors / 65% coverage ] ****** [13 done /3 queued / 11 running / 3 errors / 65% coverage ] ****** [13 done /2 queued / 12 running / 3 errors / 65% coverage ] ****** [13 done /1 queued / 13 running / 3 errors / 65% coverage ] ****** [13 done /0 queued / 14 running / 3 errors / 65% coverage ] ****** [13 done /0 queued / 14 running / 3 errors / 65% coverage ] ****** [14 done /1 queued / 14 running / 3 errors / 65% coverage ] ****** [14 done /0 queued / 15 running / 3 errors / 65% coverage ] ****** [14 done /0 queued / 15 running / 3 errors / 65% coverage ] ****** [15 done /2 queued / 15 running / 3 errors / 65% coverage ] ****** [15 done /1 queued / 16 running / 3 errors / 65% coverage ] ****** [15 done /1 queued / 16 running / 3 errors / 65% coverage ] ****** [16 done /0 queued / 16 running / 3 errors / 65% coverage ] ****** [16 done /0 queued / 16 running / 3 errors / 65% coverage ] ****** [17 done /0 queued / 15 running / 3 errors / 65% coverage ] ****** [18 done /1 queued / 15 running / 3 errors / 65% coverage ] ****** [18 done /0 queued / 16 running / 3 errors / 65% coverage ] ****** [18 done /0 queued / 16 running / 3 errors / 65% coverage ] ****** [19 done /1 queued / 16 running / 3 errors / 65% coverage ] ****** [19 done /1 queued / 16 running / 3 errors / 65% coverage ] ****** [20 done /0 queued / 16 running / 3 errors / 65% coverage ] ****** [20 done /0 queued / 16 running / 3 errors / 65% coverage ] ****** [21 done /0 queued / 15 running / 3 errors / 65% coverage ] ****** [22 done /0 queued / 14 running / 3 errors / 65% coverage ] ****** [23 done /1 queued / 14 running / 3 errors / 65% coverage ] ****** [23 done /0 queued / 15 running / 3 errors / 65% coverage ] ****** [23 done /0 queued / 15 running / 3 errors / 65% coverage ] ****** [24 done /0 queued / 15 running / 3 errors / 65% coverage ] ****** [24 done /0 queued / 15 running / 3 errors / 65% coverage ] ****** [25 done /0 queued / 15 running / 3 errors / 65% coverage ] ****** [25 done /0 queued / 15 running / 3 errors / 65% coverage ] ****** [26 done /2 queued / 15 running / 3 errors / 65% coverage ] ****** [26 done /1 queued / 16 running / 3 errors / 65% coverage ] ****** [26 done /1 queued / 16 running / 3 errors / 65% coverage ] ****** [27 done /0 queued / 16 running / 3 errors / 65% coverage ] ****** [27 done /0 queued / 16 running / 3 errors / 65% coverage ] ****** [28 done /0 queued / 15 running / 3 errors / 65% coverage ] ****** [29 done /3 queued / 15 running / 3 errors / 65% coverage ] ****** [29 done /2 queued / 16 running / 3 errors / 65% coverage ] ****** [29 done /2 queued / 16 running / 3 errors / 65% coverage ] ****** [30 done /1 queued / 16 running / 3 errors / 65% coverage ] ****** [30 done /1 queued / 16 running / 3 errors / 65% coverage ] ****** [31 done /2 queued / 16 running / 3 errors / 65% coverage ] ****** [31 done /2 queued / 16 running / 3 errors / 65% coverage ] ****** [32 done /3 queued / 16 running / 3 errors / 65% coverage ] ****** [32 done /3 queued / 16 running / 3 errors / 65% coverage ] ****** [33 done /2 queued / 16 running / 3 errors / 65% coverage ] ****** [33 done /2 queued / 16 running / 3 errors / 65% coverage ] ****** [34 done /4 queued / 16 running / 3 errors / 65% coverage ] ****** [34 done /4 queued / 16 running / 3 errors / 65% coverage ] ****** [35 done /5 queued / 16 running / 3 errors / 65% coverage ] ****** [35 done /5 queued / 16 running / 3 errors / 65% coverage ] ****** [36 done /8 queued / 16 running / 3 errors / 65% coverage ] ****** [36 done /8 queued / 16 running / 3 errors / 65% coverage ] ****** [37 done /10 queued / 16 running / 3 errors / 65% coverage ] ****** [37 done /10 queued / 16 running / 3 errors / 65% coverage ] ****** [38 done /11 queued / 16 running / 3 errors / 65% coverage ] ****** [38 done /11 queued / 16 running / 3 errors / 65% coverage ] ****** [39 done /12 queued / 16 running / 3 errors / 65% coverage ] ****** [39 done /12 queued / 16 running / 3 errors / 65% coverage ] ****** [40 done /13 queued / 16 running / 4 errors / 65% coverage ] ****** [40 done /13 queued / 16 running / 4 errors / 65% coverage ] ****** [41 done /16 queued / 16 running / 4 errors / 65% coverage ] ****** [41 done /16 queued / 16 running / 4 errors / 65% coverage ] ****** [42 done /16 queued / 16 running / 4 errors / 65% coverage ] ****** [42 done /16 queued / 16 running / 4 errors / 65% coverage ] ****** [43 done /15 queued / 16 running / 4 errors / 65% coverage ] ****** [43 done /15 queued / 16 running / 4 errors / 65% coverage ] ****** [44 done /14 queued / 16 running / 4 errors / 65% coverage ] ****** [44 done /14 queued / 16 running / 4 errors / 65% coverage ] ****** [45 done /16 queued / 16 running / 5 errors / 65% coverage ] ****** [45 done /16 queued / 16 running / 5 errors / 65% coverage ] ****** [46 done /17 queued / 16 running / 5 errors / 65% coverage ] ****** [46 done /17 queued / 16 running / 5 errors / 65% coverage ] ****** [47 done /19 queued / 16 running / 6 errors / 65% coverage ] ****** [47 done /19 queued / 16 running / 6 errors / 65% coverage ] ****** [48 done /18 queued / 16 running / 6 errors / 65% coverage ] ****** [48 done /18 queued / 16 running / 6 errors / 65% coverage ] ****** [49 done /19 queued / 16 running / 6 errors / 65% coverage ] ****** [49 done /19 queued / 16 running / 6 errors / 65% coverage ] ****** [50 done /21 queued / 16 running / 6 errors / 65% coverage ] ****** [50 done /21 queued / 16 running / 6 errors / 65% coverage ] ****** [51 done /21 queued / 16 running / 6 errors / 65% coverage ] ****** [51 done /21 queued / 16 running / 6 errors / 65% coverage ] ****** [52 done /22 queued / 16 running / 6 errors / 65% coverage ] ****** [52 done /22 queued / 16 running / 6 errors / 65% coverage ] ****** [53 done /21 queued / 16 running / 6 errors / 65% coverage ] ****** [53 done /21 queued / 16 running / 6 errors / 65% coverage ] ****** [54 done /22 queued / 16 running / 6 errors / 65% coverage ] ****** [54 done /22 queued / 16 running / 6 errors / 65% coverage ] ****** [55 done /21 queued / 16 running / 6 errors / 65% coverage ] ****** [55 done /21 queued / 16 running / 6 errors / 65% coverage ] ****** [56 done /23 queued / 16 running / 6 errors / 65% coverage ] ****** [56 done /23 queued / 16 running / 6 errors / 65% coverage ] ****** [57 done /23 queued / 16 running / 6 errors / 65% coverage ] ****** [57 done /23 queued / 16 running / 6 errors / 65% coverage ] ****** [58 done /22 queued / 16 running / 6 errors / 65% coverage ] ****** [58 done /22 queued / 16 running / 6 errors / 65% coverage ] ****** [59 done /24 queued / 16 running / 6 errors / 65% coverage ] ****** [59 done /24 queued / 16 running / 6 errors / 65% coverage ] ****** [60 done /23 queued / 16 running / 7 errors / 65% coverage ] ****** [60 done /23 queued / 16 running / 7 errors / 65% coverage ] ****** [61 done /24 queued / 16 running / 7 errors / 65% coverage ] ****** [61 done /24 queued / 16 running / 7 errors / 65% coverage ] ****** [62 done /23 queued / 16 running / 7 errors / 65% coverage ] ****** [62 done /23 queued / 16 running / 7 errors / 65% coverage ] ****** [63 done /25 queued / 16 running / 7 errors / 65% coverage ] ****** [63 done /25 queued / 16 running / 7 errors / 65% coverage ] ****** [64 done /26 queued / 16 running / 7 errors / 65% coverage ] ****** [64 done /26 queued / 16 running / 7 errors / 65% coverage ] ****** [65 done /26 queued / 16 running / 7 errors / 65% coverage ] ****** [65 done /26 queued / 16 running / 7 errors / 65% coverage ] ****** [66 done /25 queued / 16 running / 7 errors / 65% coverage ] ****** [66 done /25 queued / 16 running / 7 errors / 65% coverage ] ****** [67 done /25 queued / 16 running / 7 errors / 65% coverage ] ****** [67 done /25 queued / 16 running / 7 errors / 65% coverage ] ****** [68 done /26 queued / 16 running / 7 errors / 65% coverage ] ****** [68 done /26 queued / 16 running / 7 errors / 65% coverage ] ****** [69 done /27 queued / 16 running / 7 errors / 65% coverage ] ****** [69 done /27 queued / 16 running / 7 errors / 65% coverage ] ****** [70 done /29 queued / 16 running / 7 errors / 65% coverage ] ****** [70 done /29 queued / 16 running / 7 errors / 65% coverage ] ****** [71 done /31 queued / 16 running / 7 errors / 65% coverage ] ****** [71 done /31 queued / 16 running / 7 errors / 65% coverage ] ****** [72 done /32 queued / 16 running / 7 errors / 65% coverage ] ****** [72 done /32 queued / 16 running / 7 errors / 65% coverage ] ****** [73 done /35 queued / 16 running / 7 errors / 65% coverage ] ****** [73 done /35 queued / 16 running / 7 errors / 65% coverage ] ****** [74 done /36 queued / 16 running / 7 errors / 65% coverage ] ****** [74 done /36 queued / 16 running / 7 errors / 65% coverage ] ****** [75 done /38 queued / 16 running / 7 errors / 65% coverage ] ****** [75 done /38 queued / 16 running / 7 errors / 65% coverage ] ****** [76 done /39 queued / 16 running / 7 errors / 65% coverage ] ****** [76 done /39 queued / 16 running / 7 errors / 65% coverage ] ****** [77 done /39 queued / 16 running / 7 errors / 65% coverage ] ****** [77 done /39 queued / 16 running / 7 errors / 65% coverage ] ****** [78 done /40 queued / 16 running / 7 errors / 65% coverage ] ****** [78 done /40 queued / 16 running / 7 errors / 65% coverage ] ****** [79 done /44 queued / 16 running / 7 errors / 65% coverage ] ****** [79 done /44 queued / 16 running / 7 errors / 65% coverage ] ****** [80 done /45 queued / 16 running / 7 errors / 65% coverage ] ****** [80 done /45 queued / 16 running / 7 errors / 65% coverage ] ****** [81 done /44 queued / 16 running / 8 errors / 65% coverage ] ****** [81 done /44 queued / 16 running / 8 errors / 65% coverage ] ****** [82 done /46 queued / 16 running / 8 errors / 65% coverage ] ****** [82 done /46 queued / 16 running / 8 errors / 65% coverage ] ****** [83 done /46 queued / 16 running / 8 errors / 65% coverage ] ****** [83 done /46 queued / 16 running / 8 errors / 65% coverage ] ****** [84 done /45 queued / 16 running / 9 errors / 65% coverage ] ****** [84 done /45 queued / 16 running / 9 errors / 65% coverage ] ****** [85 done /45 queued / 16 running / 9 errors / 65% coverage ] ****** [85 done /45 queued / 16 running / 9 errors / 65% coverage ] ****** [86 done /45 queued / 16 running / 9 errors / 65% coverage ] ****** [86 done /45 queued / 16 running / 9 errors / 65% coverage ] ****** [87 done /46 queued / 16 running / 9 errors / 65% coverage ] ****** [87 done /46 queued / 16 running / 9 errors / 65% coverage ] ****** [88 done /46 queued / 16 running / 9 errors / 65% coverage ] ****** [88 done /46 queued / 16 running / 9 errors / 65% coverage ] ****** [89 done /45 queued / 16 running / 10 errors / 65% coverage ] ****** [89 done /45 queued / 16 running / 10 errors / 65% coverage ] ****** [90 done /45 queued / 16 running / 10 errors / 65% coverage ] ****** [90 done /45 queued / 16 running / 10 errors / 65% coverage ] ****** [91 done /46 queued / 16 running / 10 errors / 65% coverage ] ****** [91 done /46 queued / 16 running / 10 errors / 65% coverage ] ****** [92 done /47 queued / 16 running / 10 errors / 65% coverage ] ****** [92 done /47 queued / 16 running / 10 errors / 65% coverage ] ****** [93 done /46 queued / 16 running / 10 errors / 65% coverage ] ****** [93 done /46 queued / 16 running / 10 errors / 65% coverage ] ****** [94 done /45 queued / 16 running / 10 errors / 65% coverage ] ****** [94 done /45 queued / 16 running / 10 errors / 65% coverage ] ****** [95 done /45 queued / 16 running / 10 errors / 65% coverage ] ****** [95 done /45 queued / 16 running / 10 errors / 65% coverage ] ****** [96 done /46 queued / 16 running / 11 errors / 65% coverage ] ****** [96 done /46 queued / 16 running / 11 errors / 65% coverage ] ****** [97 done /46 queued / 16 running / 11 errors / 65% coverage ] ****** [97 done /46 queued / 16 running / 11 errors / 65% coverage ] ****** [98 done /46 queued / 16 running / 11 errors / 65% coverage ] ****** [98 done /46 queued / 16 running / 11 errors / 65% coverage ] ****** [99 done /47 queued / 16 running / 11 errors / 65% coverage ] ****** [99 done /47 queued / 16 running / 11 errors / 65% coverage ] ****** [100 done /49 queued / 16 running / 12 errors / 65% coverage ] ****** [100 done /49 queued / 16 running / 12 errors / 65% coverage ] ****** [101 done /50 queued / 16 running / 12 errors / 65% coverage ] ****** [101 done /50 queued / 16 running / 12 errors / 65% coverage ] ****** [102 done /50 queued / 16 running / 12 errors / 65% coverage ] ****** [102 done /50 queued / 16 running / 12 errors / 65% coverage ] ****** [103 done /54 queued / 16 running / 12 errors / 65% coverage ] ****** [103 done /54 queued / 16 running / 12 errors / 65% coverage ] ****** [104 done /55 queued / 16 running / 12 errors / 65% coverage ] ****** [104 done /55 queued / 16 running / 12 errors / 65% coverage ] ****** [105 done /58 queued / 16 running / 12 errors / 65% coverage ] ****** [105 done /58 queued / 16 running / 12 errors / 65% coverage ] ****** [106 done /59 queued / 16 running / 13 errors / 65% coverage ] ****** [106 done /59 queued / 16 running / 13 errors / 65% coverage ] ****** [107 done /60 queued / 16 running / 13 errors / 65% coverage ] ****** [107 done /60 queued / 16 running / 13 errors / 65% coverage ] ****** [108 done /62 queued / 16 running / 13 errors / 65% coverage ] ****** [108 done /62 queued / 16 running / 13 errors / 65% coverage ] ****** [109 done /64 queued / 16 running / 13 errors / 65% coverage ] ****** [109 done /64 queued / 16 running / 13 errors / 65% coverage ] ****** [110 done /68 queued / 16 running / 13 errors / 65% coverage ] ****** [110 done /68 queued / 16 running / 13 errors / 65% coverage ] ****** [111 done /71 queued / 16 running / 13 errors / 65% coverage ] ****** [111 done /71 queued / 16 running / 13 errors / 65% coverage ] ****** [112 done /73 queued / 16 running / 13 errors / 65% coverage ] ****** [112 done /73 queued / 16 running / 13 errors / 65% coverage ] ****** [113 done /74 queued / 16 running / 13 errors / 65% coverage ] ****** [113 done /74 queued / 16 running / 13 errors / 65% coverage ] ****** [114 done /76 queued / 16 running / 14 errors / 65% coverage ] ****** [114 done /76 queued / 16 running / 14 errors / 65% coverage ] ****** [115 done /77 queued / 16 running / 14 errors / 65% coverage ] ****** [115 done /77 queued / 16 running / 14 errors / 65% coverage ] ****** [116 done /79 queued / 16 running / 14 errors / 65% coverage ] ****** [116 done /79 queued / 16 running / 14 errors / 65% coverage ] ****** [117 done /80 queued / 16 running / 14 errors / 65% coverage ] ****** [117 done /80 queued / 16 running / 14 errors / 65% coverage ] ****** [118 done /80 queued / 16 running / 14 errors / 65% coverage ] ****** [118 done /80 queued / 16 running / 14 errors / 65% coverage ] ****** [119 done /80 queued / 16 running / 14 errors / 65% coverage ] ****** [119 done /80 queued / 16 running / 14 errors / 65% coverage ] ****** [120 done /81 queued / 16 running / 14 errors / 65% coverage ] ****** [120 done /81 queued / 16 running / 14 errors / 65% coverage ] ****** [121 done /85 queued / 16 running / 15 errors / 65% coverage ] ****** [121 done /85 queued / 16 running / 15 errors / 65% coverage ] ****** [122 done /86 queued / 16 running / 15 errors / 65% coverage ] ****** [122 done /86 queued / 16 running / 15 errors / 65% coverage ] ****** [123 done /86 queued / 16 running / 15 errors / 65% coverage ] ****** [123 done /86 queued / 16 running / 15 errors / 65% coverage ] ****** [124 done /87 queued / 16 running / 15 errors / 65% coverage ] ****** [124 done /87 queued / 16 running / 15 errors / 65% coverage ] ****** [125 done /87 queued / 16 running / 15 errors / 65% coverage ] ****** [125 done /87 queued / 16 running / 15 errors / 65% coverage ] ****** [126 done /89 queued / 16 running / 15 errors / 65% coverage ] ****** [126 done /89 queued / 16 running / 15 errors / 65% coverage ] ****** [127 done /90 queued / 16 running / 15 errors / 65% coverage ] ****** [127 done /90 queued / 16 running / 15 errors / 65% coverage ] ****** [128 done /89 queued / 16 running / 16 errors / 65% coverage ] ****** [128 done /89 queued / 16 running / 16 errors / 65% coverage ] ****** [129 done /89 queued / 16 running / 16 errors / 65% coverage ] ****** [129 done /89 queued / 16 running / 16 errors / 65% coverage ] ****** [130 done /89 queued / 16 running / 16 errors / 65% coverage ] ****** [130 done /89 queued / 16 running / 16 errors / 65% coverage ] ****** [131 done /88 queued / 16 running / 16 errors / 65% coverage ] ****** [131 done /88 queued / 16 running / 16 errors / 65% coverage ] ****** [132 done /87 queued / 16 running / 17 errors / 65% coverage ] ****** [132 done /87 queued / 16 running / 17 errors / 65% coverage ] ****** [133 done /88 queued / 16 running / 18 errors / 65% coverage ] ****** [133 done /88 queued / 16 running / 18 errors / 65% coverage ] ****** [134 done /87 queued / 16 running / 19 errors / 65% coverage ] ****** [134 done /87 queued / 16 running / 19 errors / 65% coverage ] ****** [135 done /88 queued / 16 running / 19 errors / 65% coverage ] ****** [135 done /88 queued / 16 running / 19 errors / 65% coverage ] ****** [136 done /87 queued / 16 running / 19 errors / 65% coverage ] ****** [136 done /87 queued / 16 running / 19 errors / 65% coverage ] ****** [137 done /87 queued / 16 running / 19 errors / 65% coverage ] ****** [137 done /87 queued / 16 running / 19 errors / 65% coverage ] ****** [138 done /86 queued / 16 running / 20 errors / 65% coverage ] ****** [138 done /86 queued / 16 running / 20 errors / 65% coverage ] ****** [139 done /86 queued / 16 running / 20 errors / 65% coverage ] ****** [139 done /86 queued / 16 running / 20 errors / 65% coverage ] ****** [140 done /87 queued / 16 running / 21 errors / 65% coverage ] ****** [140 done /87 queued / 16 running / 21 errors / 65% coverage ] ****** [141 done /87 queued / 16 running / 21 errors / 65% coverage ] ****** [141 done /87 queued / 16 running / 21 errors / 65% coverage ] ****** [142 done /88 queued / 16 running / 21 errors / 65% coverage ] ****** [142 done /88 queued / 16 running / 21 errors / 65% coverage ] ****** [143 done /90 queued / 16 running / 21 errors / 65% coverage ] ****** [143 done /90 queued / 16 running / 21 errors / 65% coverage ] ****** [144 done /92 queued / 16 running / 21 errors / 65% coverage ] ****** [144 done /92 queued / 16 running / 21 errors / 65% coverage ] ****** [145 done /95 queued / 16 running / 21 errors / 65% coverage ] ****** [145 done /95 queued / 16 running / 21 errors / 65% coverage ] ****** [146 done /96 queued / 16 running / 21 errors / 65% coverage ] ****** [146 done /96 queued / 16 running / 21 errors / 65% coverage ] ****** [147 done /97 queued / 16 running / 22 errors / 65% coverage ] ****** [147 done /97 queued / 16 running / 22 errors / 65% coverage ] ****** [148 done /101 queued / 16 running / 22 errors / 65% coverage ] ****** [148 done /101 queued / 16 running / 22 errors / 65% coverage ] ****** [149 done /103 queued / 16 running / 22 errors / 65% coverage ] ****** [149 done /103 queued / 16 running / 22 errors / 65% coverage ] ****** [150 done /106 queued / 16 running / 22 errors / 65% coverage ] ****** [150 done /106 queued / 16 running / 22 errors / 65% coverage ] ****** [151 done /108 queued / 16 running / 22 errors / 65% coverage ] ****** [151 done /108 queued / 16 running / 22 errors / 65% coverage ] ****** [152 done /109 queued / 16 running / 22 errors / 65% coverage ] ****** [152 done /109 queued / 16 running / 22 errors / 65% coverage ] ****** [153 done /110 queued / 16 running / 22 errors / 65% coverage ] ****** [153 done /110 queued / 16 running / 22 errors / 65% coverage ] ****** [154 done /111 queued / 16 running / 22 errors / 65% coverage ] ****** [154 done /111 queued / 16 running / 22 errors / 65% coverage ] ****** [155 done /112 queued / 16 running / 23 errors / 65% coverage ] ****** [155 done /112 queued / 16 running / 23 errors / 65% coverage ] ****** [156 done /111 queued / 16 running / 23 errors / 65% coverage ] ****** [156 done /111 queued / 16 running / 23 errors / 65% coverage ] ****** [157 done /111 queued / 16 running / 24 errors / 65% coverage ] ****** [157 done /111 queued / 16 running / 24 errors / 65% coverage ] ****** [158 done /111 queued / 16 running / 25 errors / 65% coverage ] ****** [158 done /111 queued / 16 running / 25 errors / 65% coverage ] ****** [159 done /110 queued / 16 running / 26 errors / 65% coverage ] ****** [159 done /110 queued / 16 running / 26 errors / 65% coverage ] ****** [160 done /109 queued / 16 running / 26 errors / 65% coverage ] ****** [160 done /109 queued / 16 running / 26 errors / 65% coverage ] ****** [161 done /109 queued / 16 running / 26 errors / 65% coverage ] ****** [161 done /109 queued / 16 running / 26 errors / 65% coverage ] ****** [162 done /111 queued / 16 running / 26 errors / 65% coverage ] ****** [162 done /111 queued / 16 running / 26 errors / 65% coverage ] ****** [163 done /113 queued / 16 running / 26 errors / 65% coverage ] ****** [163 done /113 queued / 16 running / 26 errors / 65% coverage ] ****** [164 done /112 queued / 16 running / 26 errors / 65% coverage ] ****** [164 done /112 queued / 16 running / 26 errors / 65% coverage ] ****** [165 done /114 queued / 16 running / 27 errors / 65% coverage ] ****** [165 done /114 queued / 16 running / 27 errors / 65% coverage ] ****** [166 done /113 queued / 16 running / 27 errors / 65% coverage ] ****** [166 done /113 queued / 16 running / 27 errors / 65% coverage ] ****** [167 done /112 queued / 16 running / 27 errors / 65% coverage ] ****** [167 done /112 queued / 16 running / 27 errors / 65% coverage ] ****** [168 done /113 queued / 16 running / 27 errors / 65% coverage ] ****** [168 done /113 queued / 16 running / 27 errors / 65% coverage ] ****** [169 done /112 queued / 16 running / 28 errors / 65% coverage ] ****** [169 done /112 queued / 16 running / 28 errors / 65% coverage ] ****** [170 done /111 queued / 16 running / 29 errors / 65% coverage ] ****** [170 done /111 queued / 16 running / 29 errors / 65% coverage ] ****** [171 done /111 queued / 16 running / 30 errors / 65% coverage ] ****** [171 done /111 queued / 16 running / 30 errors / 65% coverage ] ****** [172 done /110 queued / 16 running / 31 errors / 65% coverage ] ****** [172 done /110 queued / 16 running / 31 errors / 65% coverage ] ****** [173 done /111 queued / 16 running / 31 errors / 65% coverage ] ****** [173 done /111 queued / 16 running / 31 errors / 65% coverage ] ****** [174 done /111 queued / 16 running / 31 errors / 65% coverage ] ****** [174 done /111 queued / 16 running / 31 errors / 65% coverage ] ****** [175 done /112 queued / 16 running / 31 errors / 65% coverage ] ****** [175 done /112 queued / 16 running / 31 errors / 65% coverage ] ****** [176 done /114 queued / 16 running / 31 errors / 65% coverage ] ****** [176 done /114 queued / 16 running / 31 errors / 65% coverage ] ****** [177 done /114 queued / 16 running / 31 errors / 65% coverage ] ****** [177 done /114 queued / 16 running / 31 errors / 65% coverage ] ****** [178 done /114 queued / 16 running / 32 errors / 65% coverage ] ****** [178 done /114 queued / 16 running / 32 errors / 65% coverage ] ****** [179 done /113 queued / 16 running / 33 errors / 65% coverage ] ****** [179 done /113 queued / 16 running / 33 errors / 65% coverage ] ****** [180 done /114 queued / 16 running / 33 errors / 65% coverage ] ****** [180 done /114 queued / 16 running / 33 errors / 65% coverage ] ****** [181 done /115 queued / 16 running / 33 errors / 65% coverage ] ****** [181 done /115 queued / 16 running / 33 errors / 65% coverage ] ****** [182 done /118 queued / 16 running / 33 errors / 65% coverage ] ****** [182 done /118 queued / 16 running / 33 errors / 65% coverage ] ****** [183 done /118 queued / 16 running / 33 errors / 65% coverage ] ****** [183 done /118 queued / 16 running / 33 errors / 65% coverage ] ****** [184 done /120 queued / 16 running / 33 errors / 65% coverage ] ****** [184 done /120 queued / 16 running / 33 errors / 65% coverage ] ****** [185 done /124 queued / 16 running / 33 errors / 65% coverage ] ****** [185 done /124 queued / 16 running / 33 errors / 65% coverage ] ****** [186 done /126 queued / 16 running / 33 errors / 65% coverage ] ****** [186 done /126 queued / 16 running / 33 errors / 65% coverage ] ****** [187 done /127 queued / 16 running / 33 errors / 65% coverage ] ****** [187 done /127 queued / 16 running / 33 errors / 65% coverage ] ****** [188 done /126 queued / 16 running / 33 errors / 65% coverage ] ****** [188 done /126 queued / 16 running / 33 errors / 65% coverage ] ****** [189 done /127 queued / 16 running / 33 errors / 65% coverage ] ****** [189 done /127 queued / 16 running / 33 errors / 65% coverage ] ****** [190 done /128 queued / 16 running / 33 errors / 65% coverage ] ****** [190 done /128 queued / 16 running / 33 errors / 65% coverage ] ****** [191 done /128 queued / 16 running / 33 errors / 65% coverage ] ****** [191 done /128 queued / 16 running / 33 errors / 65% coverage ] ****** [192 done /132 queued / 16 running / 33 errors / 65% coverage ] ****** [192 done /132 queued / 16 running / 33 errors / 65% coverage ] ****** [193 done /134 queued / 16 running / 33 errors / 65% coverage ] ****** [193 done /134 queued / 16 running / 33 errors / 65% coverage ] ****** [194 done /135 queued / 16 running / 33 errors / 65% coverage ] ****** [194 done /135 queued / 16 running / 33 errors / 65% coverage ] ****** [195 done /135 queued / 16 running / 33 errors / 65% coverage ] ****** [195 done /135 queued / 16 running / 33 errors / 65% coverage ] ****** [196 done /135 queued / 16 running / 33 errors / 65% coverage ] ****** [196 done /135 queued / 16 running / 33 errors / 65% coverage ] ****** [197 done /136 queued / 16 running / 33 errors / 65% coverage ] ****** [197 done /136 queued / 16 running / 33 errors / 65% coverage ] ****** [198 done /138 queued / 16 running / 33 errors / 65% coverage ] ****** [198 done /138 queued / 16 running / 33 errors / 65% coverage ] ****** [199 done /138 queued / 16 running / 33 errors / 65% coverage ] ****** [199 done /138 queued / 16 running / 33 errors / 65% coverage ] ****** [200 done /138 queued / 16 running / 33 errors / 65% coverage ] ****** [200 done /138 queued / 16 running / 33 errors / 65% coverage ] ****** [201 done /138 queued / 16 running / 34 errors / 65% coverage ] ****** [201 done /138 queued / 16 running / 34 errors / 65% coverage ] ****** [202 done /137 queued / 16 running / 34 errors / 65% coverage ] ****** [202 done /137 queued / 16 running / 34 errors / 65% coverage ] ****** [203 done /137 queued / 16 running / 34 errors / 65% coverage ] ****** [203 done /137 queued / 16 running / 34 errors / 65% coverage ] ****** [204 done /138 queued / 16 running / 34 errors / 65% coverage ] ****** [204 done /138 queued / 16 running / 34 errors / 65% coverage ] ****** [205 done /139 queued / 16 running / 34 errors / 65% coverage ] ****** [205 done /139 queued / 16 running / 34 errors / 65% coverage ] ****** [206 done /139 queued / 16 running / 34 errors / 65% coverage ] ****** [206 done /139 queued / 16 running / 34 errors / 65% coverage ] ****** [207 done /139 queued / 16 running / 34 errors / 65% coverage ] ****** [207 done /139 queued / 16 running / 34 errors / 65% coverage ] ****** [208 done /140 queued / 16 running / 35 errors / 65% coverage ] ****** [208 done /140 queued / 16 running / 35 errors / 65% coverage ] ****** [209 done /140 queued / 16 running / 35 errors / 65% coverage ] ****** [209 done /140 queued / 16 running / 35 errors / 65% coverage ] ****** [210 done /141 queued / 16 running / 35 errors / 65% coverage ] ****** [210 done /141 queued / 16 running / 35 errors / 65% coverage ] ****** [211 done /142 queued / 16 running / 35 errors / 65% coverage ] ****** [211 done /142 queued / 16 running / 35 errors / 65% coverage ] ****** [212 done /143 queued / 16 running / 35 errors / 65% coverage ] ****** [212 done /143 queued / 16 running / 35 errors / 65% coverage ] ****** [213 done /143 queued / 16 running / 35 errors / 65% coverage ] ****** [213 done /143 queued / 16 running / 35 errors / 65% coverage ] ****** [214 done /142 queued / 16 running / 36 errors / 65% coverage ] ****** [214 done /142 queued / 16 running / 36 errors / 65% coverage ] ****** [215 done /142 queued / 16 running / 36 errors / 65% coverage ] ****** [215 done /142 queued / 16 running / 36 errors / 65% coverage ] ****** [216 done /141 queued / 16 running / 37 errors / 65% coverage ] ****** [216 done /141 queued / 16 running / 37 errors / 65% coverage ] ****** [217 done /140 queued / 16 running / 37 errors / 65% coverage ] ****** [217 done /140 queued / 16 running / 37 errors / 65% coverage ] ****** [218 done /142 queued / 16 running / 37 errors / 65% coverage ] ****** [218 done /142 queued / 16 running / 37 errors / 65% coverage ] ****** [219 done /145 queued / 16 running / 37 errors / 65% coverage ] ****** [219 done /145 queued / 16 running / 37 errors / 65% coverage ] ****** [220 done /145 queued / 16 running / 37 errors / 65% coverage ] ****** [220 done /145 queued / 16 running / 37 errors / 65% coverage ] ****** [221 done /144 queued / 16 running / 38 errors / 65% coverage ] ****** [221 done /144 queued / 16 running / 38 errors / 65% coverage ] ****** [222 done /146 queued / 16 running / 38 errors / 65% coverage ] ****** [222 done /146 queued / 16 running / 38 errors / 65% coverage ] ****** [223 done /147 queued / 16 running / 38 errors / 65% coverage ] ****** [223 done /147 queued / 16 running / 38 errors / 65% coverage ] ****** [224 done /146 queued / 16 running / 39 errors / 65% coverage ] ****** [224 done /146 queued / 16 running / 39 errors / 65% coverage ] ****** [225 done /150 queued / 16 running / 39 errors / 65% coverage ] ****** [225 done /150 queued / 16 running / 39 errors / 65% coverage ] ****** [226 done /150 queued / 16 running / 39 errors / 65% coverage ] ****** [226 done /150 queued / 16 running / 39 errors / 65% coverage ] ****** [227 done /151 queued / 16 running / 39 errors / 65% coverage ] ****** [227 done /151 queued / 16 running / 39 errors / 65% coverage ] ****** [228 done /152 queued / 16 running / 39 errors / 65% coverage ] ****** [228 done /152 queued / 16 running / 39 errors / 65% coverage ] ****** [229 done /153 queued / 16 running / 39 errors / 65% coverage ] ****** [229 done /153 queued / 16 running / 39 errors / 65% coverage ] ****** [230 done /154 queued / 16 running / 39 errors / 65% coverage ] ****** [230 done /154 queued / 16 running / 39 errors / 65% coverage ] ****** [231 done /155 queued / 16 running / 39 errors / 65% coverage ] ****** [231 done /155 queued / 16 running / 39 errors / 65% coverage ] ****** [232 done /157 queued / 16 running / 39 errors / 65% coverage ] ****** [232 done /157 queued / 16 running / 39 errors / 65% coverage ] ****** [233 done /157 queued / 16 running / 39 errors / 65% coverage ] ****** [233 done /157 queued / 16 running / 39 errors / 65% coverage ] ****** [234 done /158 queued / 16 running / 39 errors / 65% coverage ] ****** [234 done /158 queued / 16 running / 39 errors / 65% coverage ] ****** [235 done /157 queued / 16 running / 39 errors / 65% coverage ] ****** [235 done /157 queued / 16 running / 39 errors / 65% coverage ] ****** [236 done /156 queued / 16 running / 39 errors / 65% coverage ] ****** [236 done /156 queued / 16 running / 39 errors / 65% coverage ] ****** [237 done /155 queued / 16 running / 39 errors / 65% coverage ] ****** [237 done /155 queued / 16 running / 39 errors / 65% coverage ] ****** [238 done /157 queued / 16 running / 39 errors / 65% coverage ] ****** [238 done /157 queued / 16 running / 39 errors / 65% coverage ] ****** [239 done /157 queued / 16 running / 39 errors / 65% coverage ] ****** [239 done /157 queued / 16 running / 39 errors / 65% coverage ] ****** [240 done /157 queued / 16 running / 39 errors / 65% coverage ] ****** [240 done /157 queued / 16 running / 39 errors / 65% coverage ] ****** [241 done /158 queued / 16 running / 39 errors / 65% coverage ] ****** [241 done /158 queued / 16 running / 39 errors / 65% coverage ] ****** [242 done /158 queued / 16 running / 39 errors / 65% coverage ] ****** [242 done /158 queued / 16 running / 39 errors / 65% coverage ] ****** [243 done /157 queued / 16 running / 39 errors / 65% coverage ] ****** [243 done /157 queued / 16 running / 39 errors / 65% coverage ] ****** [244 done /157 queued / 16 running / 39 errors / 65% coverage ] ****** [244 done /157 queued / 16 running / 39 errors / 65% coverage ] ****** [245 done /158 queued / 16 running / 39 errors / 65% coverage ] ****** [245 done /158 queued / 16 running / 39 errors / 65% coverage ] ****** [246 done /159 queued / 16 running / 39 errors / 65% coverage ] ****** [246 done /159 queued / 16 running / 39 errors / 65% coverage ] ****** [247 done /162 queued / 16 running / 39 errors / 65% coverage ] ****** [247 done /162 queued / 16 running / 39 errors / 65% coverage ] ****** [248 done /165 queued / 16 running / 39 errors / 65% coverage ] ****** [248 done /165 queued / 16 running / 39 errors / 65% coverage ] ****** [249 done /169 queued / 16 running / 39 errors / 65% coverage ] ****** [249 done /169 queued / 16 running / 39 errors / 65% coverage ] ****** [250 done /169 queued / 16 running / 39 errors / 65% coverage ] ****** [250 done /169 queued / 16 running / 39 errors / 65% coverage ] ****** [251 done /169 queued / 16 running / 39 errors / 65% coverage ] ****** [251 done /169 queued / 16 running / 39 errors / 65% coverage ] ****** [252 done /171 queued / 16 running / 39 errors / 65% coverage ] ****** [252 done /171 queued / 16 running / 39 errors / 65% coverage ] ****** [253 done /171 queued / 16 running / 40 errors / 65% coverage ] ****** [253 done /171 queued / 16 running / 40 errors / 65% coverage ] ****** [254 done /172 queued / 16 running / 40 errors / 65% coverage ] ****** [254 done /172 queued / 16 running / 40 errors / 65% coverage ] ****** [255 done /172 queued / 16 running / 40 errors / 65% coverage ] ****** [255 done /172 queued / 16 running / 40 errors / 65% coverage ] ****** [256 done /173 queued / 16 running / 40 errors / 65% coverage ] ****** [256 done /173 queued / 16 running / 40 errors / 65% coverage ] ****** [257 done /176 queued / 16 running / 40 errors / 65% coverage ] ****** [257 done /176 queued / 16 running / 40 errors / 65% coverage ] ****** [258 done /178 queued / 16 running / 40 errors / 65% coverage ] ****** [258 done /178 queued / 16 running / 40 errors / 65% coverage ] ****** [259 done /179 queued / 16 running / 40 errors / 65% coverage ] ****** [259 done /179 queued / 16 running / 40 errors / 65% coverage ] ****** [260 done /179 queued / 16 running / 40 errors / 65% coverage ] ****** [260 done /179 queued / 16 running / 40 errors / 65% coverage ] ****** [261 done /180 queued / 16 running / 40 errors / 65% coverage ] ****** [261 done /180 queued / 16 running / 40 errors / 65% coverage ] ****** [262 done /179 queued / 16 running / 40 errors / 65% coverage ] ****** [262 done /179 queued / 16 running / 40 errors / 65% coverage ] ****** [263 done /179 queued / 16 running / 40 errors / 65% coverage ] ****** [263 done /179 queued / 16 running / 40 errors / 65% coverage ] ****** [264 done /178 queued / 16 running / 40 errors / 65% coverage ] ****** [264 done /178 queued / 16 running / 40 errors / 65% coverage ] ****** [265 done /177 queued / 16 running / 40 errors / 65% coverage ] ****** [265 done /177 queued / 16 running / 40 errors / 65% coverage ] ****** [266 done /177 queued / 16 running / 40 errors / 65% coverage ] ****** [266 done /177 queued / 16 running / 40 errors / 65% coverage ] ****** [267 done /177 queued / 16 running / 40 errors / 65% coverage ] ****** [267 done /177 queued / 16 running / 40 errors / 65% coverage ] ****** [268 done /178 queued / 16 running / 40 errors / 65% coverage ] ****** [268 done /178 queued / 16 running / 40 errors / 65% coverage ] ****** [269 done /177 queued / 16 running / 41 errors / 65% coverage ] ****** [269 done /177 queued / 16 running / 41 errors / 65% coverage ] ****** [270 done /178 queued / 16 running / 41 errors / 65% coverage ] ****** [270 done /178 queued / 16 running / 41 errors / 65% coverage ] ****** [271 done /178 queued / 16 running / 41 errors / 65% coverage ] ****** [271 done /178 queued / 16 running / 41 errors / 65% coverage ] ****** [272 done /177 queued / 16 running / 41 errors / 65% coverage ] ****** [272 done /177 queued / 16 running / 41 errors / 65% coverage ] ****** [273 done /176 queued / 16 running / 41 errors / 65% coverage ] ****** [273 done /176 queued / 16 running / 41 errors / 65% coverage ] ****** [274 done /175 queued / 16 running / 41 errors / 65% coverage ] ****** [274 done /175 queued / 16 running / 41 errors / 65% coverage ] ****** [275 done /175 queued / 16 running / 41 errors / 65% coverage ] ****** [275 done /175 queued / 16 running / 41 errors / 65% coverage ] ****** [276 done /175 queued / 16 running / 41 errors / 65% coverage ] ****** [276 done /175 queued / 16 running / 41 errors / 65% coverage ] ****** [277 done /176 queued / 16 running / 41 errors / 65% coverage ] ****** [277 done /176 queued / 16 running / 41 errors / 65% coverage ] ****** [278 done /176 queued / 16 running / 41 errors / 65% coverage ] ****** [278 done /176 queued / 16 running / 41 errors / 65% coverage ] ****** [279 done /177 queued / 16 running / 41 errors / 65% coverage ] ****** [279 done /177 queued / 16 running / 41 errors / 65% coverage ] ****** [280 done /182 queued / 16 running / 41 errors / 65% coverage ] ****** [280 done /182 queued / 16 running / 41 errors / 65% coverage ] ****** [281 done /185 queued / 16 running / 41 errors / 65% coverage ] ****** [281 done /185 queued / 16 running / 41 errors / 65% coverage ] ****** [282 done /189 queued / 16 running / 42 errors / 65% coverage ] ****** [282 done /189 queued / 16 running / 42 errors / 65% coverage ] ****** [283 done /192 queued / 16 running / 42 errors / 65% coverage ] ****** [283 done /192 queued / 16 running / 42 errors / 65% coverage ] ****** [284 done /196 queued / 16 running / 42 errors / 65% coverage ] ****** [284 done /196 queued / 16 running / 42 errors / 65% coverage ] ****** [285 done /197 queued / 16 running / 42 errors / 65% coverage ] ****** [285 done /197 queued / 16 running / 42 errors / 65% coverage ] ****** [286 done /199 queued / 16 running / 42 errors / 65% coverage ] ****** [286 done /199 queued / 16 running / 42 errors / 65% coverage ] ****** [287 done /200 queued / 16 running / 42 errors / 65% coverage ] ****** [287 done /200 queued / 16 running / 42 errors / 65% coverage ] ****** [288 done /202 queued / 16 running / 42 errors / 65% coverage ] ****** [288 done /202 queued / 16 running / 42 errors / 65% coverage ] ****** [289 done /203 queued / 16 running / 42 errors / 65% coverage ] ****** [289 done /203 queued / 16 running / 42 errors / 65% coverage ] ****** [290 done /208 queued / 16 running / 43 errors / 65% coverage ] ****** [290 done /208 queued / 16 running / 43 errors / 65% coverage ] ****** [291 done /209 queued / 16 running / 43 errors / 65% coverage ] ****** [291 done /209 queued / 16 running / 43 errors / 65% coverage ] ****** [292 done /210 queued / 16 running / 43 errors / 65% coverage ] ****** [292 done /210 queued / 16 running / 43 errors / 65% coverage ] ****** [293 done /211 queued / 16 running / 43 errors / 65% coverage ] ****** [293 done /211 queued / 16 running / 43 errors / 65% coverage ] ****** [294 done /213 queued / 16 running / 43 errors / 65% coverage ] ****** [294 done /213 queued / 16 running / 43 errors / 65% coverage ] ****** [295 done /212 queued / 16 running / 44 errors / 65% coverage ] ****** [295 done /212 queued / 16 running / 44 errors / 65% coverage ] ****** [296 done /214 queued / 16 running / 44 errors / 65% coverage ] ****** [296 done /214 queued / 16 running / 44 errors / 65% coverage ] ****** [297 done /215 queued / 16 running / 44 errors / 65% coverage ] ****** [297 done /215 queued / 16 running / 44 errors / 65% coverage ] ****** [298 done /216 queued / 16 running / 44 errors / 65% coverage ] ****** [298 done /216 queued / 16 running / 44 errors / 65% coverage ] ****** [299 done /215 queued / 16 running / 44 errors / 65% coverage ] ****** [299 done /215 queued / 16 running / 44 errors / 65% coverage ] ****** [300 done /215 queued / 16 running / 45 errors / 65% coverage ] ****** [300 done /215 queued / 16 running / 45 errors / 65% coverage ] ****** [301 done /214 queued / 16 running / 46 errors / 65% coverage ] ****** [301 done /214 queued / 16 running / 46 errors / 65% coverage ] ****** [302 done /214 queued / 16 running / 46 errors / 65% coverage ] ****** [302 done /214 queued / 16 running / 46 errors / 65% coverage ] ****** [303 done /213 queued / 16 running / 46 errors / 65% coverage ] ****** [303 done /213 queued / 16 running / 46 errors / 65% coverage ] ****** [304 done /213 queued / 16 running / 46 errors / 65% coverage ] ****** [304 done /213 queued / 16 running / 46 errors / 65% coverage ] ****** [305 done /215 queued / 16 running / 46 errors / 65% coverage ] ****** [305 done /215 queued / 16 running / 46 errors / 65% coverage ] ****** [306 done /216 queued / 16 running / 46 errors / 65% coverage ] ****** [306 done /216 queued / 16 running / 46 errors / 65% coverage ] ****** [307 done /217 queued / 16 running / 46 errors / 65% coverage ] ****** [307 done /217 queued / 16 running / 46 errors / 65% coverage ] ****** [308 done /217 queued / 16 running / 46 errors / 65% coverage ] ****** [308 done /217 queued / 16 running / 46 errors / 65% coverage ] ****** [309 done /219 queued / 16 running / 46 errors / 65% coverage ] ****** [309 done /219 queued / 16 running / 46 errors / 65% coverage ] ****** [310 done /219 queued / 16 running / 46 errors / 65% coverage ] ****** [310 done /219 queued / 16 running / 46 errors / 65% coverage ] ****** [311 done /219 queued / 16 running / 46 errors / 65% coverage ] ****** [311 done /219 queued / 16 running / 46 errors / 65% coverage ] ****** [312 done /219 queued / 16 running / 47 errors / 65% coverage ] ****** [312 done /219 queued / 16 running / 47 errors / 65% coverage ] ****** [313 done /218 queued / 16 running / 47 errors / 65% coverage ] ****** [313 done /218 queued / 16 running / 47 errors / 65% coverage ] ****** [314 done /217 queued / 16 running / 48 errors / 65% coverage ] ****** [314 done /217 queued / 16 running / 48 errors / 65% coverage ] ****** [315 done /216 queued / 16 running / 48 errors / 65% coverage ] ****** [315 done /216 queued / 16 running / 48 errors / 65% coverage ] ****** [316 done /215 queued / 16 running / 48 errors / 65% coverage ] ****** [316 done /215 queued / 16 running / 48 errors / 65% coverage ] ****** [317 done /216 queued / 16 running / 48 errors / 65% coverage ] ****** [317 done /216 queued / 16 running / 48 errors / 65% coverage ] ****** [318 done /216 queued / 16 running / 49 errors / 65% coverage ] ****** [318 done /216 queued / 16 running / 49 errors / 65% coverage ] ****** [319 done /215 queued / 16 running / 49 errors / 65% coverage ] ****** [319 done /215 queued / 16 running / 49 errors / 65% coverage ] ****** [320 done /215 queued / 16 running / 49 errors / 65% coverage ] ****** [320 done /215 queued / 16 running / 49 errors / 65% coverage ] ****** [321 done /215 queued / 16 running / 49 errors / 65% coverage ] ****** [321 done /215 queued / 16 running / 49 errors / 65% coverage ] ****** [322 done /215 queued / 16 running / 49 errors / 65% coverage ] ****** [322 done /215 queued / 16 running / 49 errors / 65% coverage ] ****** [323 done /214 queued / 16 running / 49 errors / 65% coverage ] ****** [323 done /214 queued / 16 running / 49 errors / 65% coverage ] ****** [324 done /214 queued / 16 running / 49 errors / 65% coverage ] ****** [324 done /214 queued / 16 running / 49 errors / 65% coverage ] ****** [325 done /213 queued / 16 running / 49 errors / 65% coverage ] ****** [325 done /213 queued / 16 running / 49 errors / 65% coverage ] ****** [326 done /216 queued / 16 running / 49 errors / 65% coverage ] ****** [326 done /216 queued / 16 running / 49 errors / 65% coverage ] ****** [327 done /215 queued / 16 running / 50 errors / 65% coverage ] ****** [327 done /215 queued / 16 running / 50 errors / 65% coverage ] ****** [328 done /214 queued / 16 running / 50 errors / 65% coverage ] ****** [328 done /214 queued / 16 running / 50 errors / 65% coverage ] ****** [329 done /216 queued / 16 running / 50 errors / 65% coverage ] ****** [329 done /216 queued / 16 running / 50 errors / 65% coverage ] ****** [330 done /215 queued / 16 running / 51 errors / 65% coverage ] ****** [330 done /215 queued / 16 running / 51 errors / 65% coverage ] ****** [331 done /217 queued / 16 running / 51 errors / 65% coverage ] ****** [331 done /217 queued / 16 running / 51 errors / 65% coverage ] ****** [332 done /217 queued / 16 running / 51 errors / 65% coverage ] ****** [332 done /217 queued / 16 running / 51 errors / 65% coverage ] ****** [333 done /217 queued / 16 running / 51 errors / 65% coverage ] ****** [333 done /217 queued / 16 running / 51 errors / 65% coverage ] ****** [334 done /218 queued / 16 running / 51 errors / 65% coverage ] ****** [334 done /218 queued / 16 running / 51 errors / 65% coverage ] ****** [335 done /217 queued / 16 running / 51 errors / 65% coverage ] ****** [335 done /217 queued / 16 running / 51 errors / 65% coverage ] ****** [336 done /217 queued / 16 running / 51 errors / 65% coverage ] ****** [336 done /217 queued / 16 running / 51 errors / 65% coverage ] ****** [337 done /221 queued / 16 running / 51 errors / 65% coverage ] ****** [337 done /221 queued / 16 running / 51 errors / 65% coverage ] ****** [338 done /220 queued / 16 running / 51 errors / 65% coverage ] ****** [338 done /220 queued / 16 running / 51 errors / 65% coverage ] ****** [339 done /222 queued / 16 running / 51 errors / 65% coverage ] ****** [339 done /222 queued / 16 running / 51 errors / 65% coverage ] ****** [340 done /222 queued / 16 running / 51 errors / 65% coverage ] ****** [340 done /222 queued / 16 running / 51 errors / 65% coverage ] ****** [341 done /221 queued / 16 running / 51 errors / 65% coverage ] ****** [341 done /221 queued / 16 running / 51 errors / 65% coverage ] ****** [342 done /223 queued / 16 running / 51 errors / 65% coverage ] ****** [342 done /223 queued / 16 running / 51 errors / 65% coverage ] ****** [343 done /224 queued / 16 running / 51 errors / 65% coverage ] ****** [343 done /224 queued / 16 running / 51 errors / 65% coverage ] ****** [344 done /224 queued / 16 running / 52 errors / 65% coverage ] ****** [344 done /224 queued / 16 running / 52 errors / 65% coverage ] ****** [345 done /224 queued / 16 running / 52 errors / 65% coverage ] ****** [345 done /224 queued / 16 running / 52 errors / 65% coverage ] ****** [346 done /225 queued / 16 running / 52 errors / 65% coverage ] ****** [346 done /225 queued / 16 running / 52 errors / 65% coverage ] ****** [347 done /224 queued / 16 running / 52 errors / 65% coverage ] ****** [347 done /224 queued / 16 running / 52 errors / 65% coverage ] ****** [348 done /225 queued / 16 running / 53 errors / 65% coverage ] ****** [348 done /225 queued / 16 running / 53 errors / 65% coverage ] ****** [349 done /230 queued / 16 running / 53 errors / 65% coverage ] ****** [349 done /230 queued / 16 running / 53 errors / 65% coverage ] ****** [350 done /231 queued / 16 running / 54 errors / 65% coverage ] ****** [350 done /231 queued / 16 running / 54 errors / 65% coverage ] ****** [351 done /235 queued / 16 running / 54 errors / 65% coverage ] ****** [351 done /235 queued / 16 running / 54 errors / 65% coverage ] ****** [352 done /236 queued / 16 running / 55 errors / 65% coverage ] ****** [352 done /236 queued / 16 running / 55 errors / 65% coverage ] ****** [353 done /236 queued / 16 running / 55 errors / 65% coverage ] ****** [353 done /236 queued / 16 running / 55 errors / 65% coverage ] ****** [354 done /237 queued / 16 running / 55 errors / 65% coverage ] ****** [354 done /237 queued / 16 running / 55 errors / 65% coverage ] ****** [355 done /237 queued / 16 running / 55 errors / 65% coverage ] ****** [355 done /237 queued / 16 running / 55 errors / 65% coverage ] ****** [356 done /237 queued / 16 running / 55 errors / 65% coverage ] ****** [356 done /237 queued / 16 running / 55 errors / 65% coverage ] ****** [357 done /240 queued / 16 running / 55 errors / 65% coverage ] ****** [357 done /240 queued / 16 running / 55 errors / 65% coverage ] ****** [358 done /242 queued / 16 running / 55 errors / 65% coverage ] ****** [358 done /242 queued / 16 running / 55 errors / 65% coverage ] ****** [359 done /243 queued / 16 running / 55 errors / 65% coverage ] ****** [359 done /243 queued / 16 running / 55 errors / 65% coverage ] ****** [360 done /244 queued / 16 running / 55 errors / 65% coverage ] ****** [360 done /244 queued / 16 running / 55 errors / 65% coverage ] ****** [361 done /245 queued / 16 running / 55 errors / 65% coverage ] ****** [361 done /245 queued / 16 running / 55 errors / 65% coverage ] ****** [362 done /246 queued / 16 running / 55 errors / 65% coverage ] ****** [362 done /246 queued / 16 running / 55 errors / 65% coverage ] ****** [363 done /247 queued / 16 running / 55 errors / 65% coverage ] ****** [363 done /247 queued / 16 running / 55 errors / 65% coverage ] ****** [364 done /249 queued / 16 running / 55 errors / 65% coverage ] ****** [364 done /249 queued / 16 running / 55 errors / 65% coverage ] ****** [365 done /249 queued / 16 running / 55 errors / 65% coverage ] ****** [365 done /249 queued / 16 running / 55 errors / 65% coverage ] ****** [366 done /250 queued / 16 running / 55 errors / 65% coverage ] ****** [366 done /250 queued / 16 running / 55 errors / 65% coverage ] ****** [367 done /251 queued / 16 running / 55 errors / 65% coverage ] ****** [367 done /251 queued / 16 running / 55 errors / 65% coverage ] ****** [368 done /252 queued / 16 running / 55 errors / 65% coverage ] ****** [368 done /252 queued / 16 running / 55 errors / 65% coverage ] ****** [369 done /254 queued / 16 running / 55 errors / 65% coverage ] ****** [369 done /254 queued / 16 running / 55 errors / 65% coverage ] ****** [370 done /255 queued / 16 running / 55 errors / 65% coverage ] ****** [370 done /255 queued / 16 running / 55 errors / 65% coverage ] ****** [371 done /258 queued / 16 running / 55 errors / 65% coverage ] ****** [371 done /258 queued / 16 running / 55 errors / 65% coverage ] ****** [372 done /257 queued / 16 running / 55 errors / 65% coverage ] ****** [372 done /257 queued / 16 running / 55 errors / 65% coverage ] ****** [373 done /257 queued / 16 running / 55 errors / 65% coverage ] ****** [373 done /257 queued / 16 running / 55 errors / 65% coverage ] ****** [374 done /259 queued / 16 running / 55 errors / 65% coverage ] ****** [374 done /259 queued / 16 running / 55 errors / 65% coverage ] ****** [375 done /258 queued / 16 running / 56 errors / 65% coverage ] ****** [375 done /258 queued / 16 running / 56 errors / 65% coverage ] ****** [376 done /257 queued / 16 running / 56 errors / 65% coverage ] ****** [376 done /257 queued / 16 running / 56 errors / 65% coverage ] ****** [377 done /260 queued / 16 running / 56 errors / 65% coverage ] ****** [377 done /260 queued / 16 running / 56 errors / 65% coverage ] ****** [378 done /262 queued / 16 running / 56 errors / 65% coverage ] ****** [378 done /262 queued / 16 running / 56 errors / 65% coverage ] ****** [379 done /267 queued / 16 running / 57 errors / 65% coverage ] ****** [379 done /267 queued / 16 running / 57 errors / 65% coverage ] ****** [380 done /267 queued / 16 running / 58 errors / 65% coverage ] ****** [380 done /267 queued / 16 running / 58 errors / 65% coverage ] ****** [381 done /266 queued / 16 running / 59 errors / 65% coverage ] ****** [381 done /266 queued / 16 running / 59 errors / 65% coverage ] ****** [382 done /265 queued / 16 running / 60 errors / 65% coverage ] ****** [382 done /265 queued / 16 running / 60 errors / 65% coverage ] ****** [383 done /265 queued / 16 running / 61 errors / 65% coverage ] ****** [383 done /265 queued / 16 running / 61 errors / 65% coverage ] ****** [384 done /269 queued / 16 running / 61 errors / 65% coverage ] ****** [384 done /269 queued / 16 running / 61 errors / 65% coverage ] ****** [385 done /269 queued / 16 running / 62 errors / 65% coverage ] ****** [385 done /269 queued / 16 running / 62 errors / 65% coverage ] ****** [386 done /270 queued / 16 running / 62 errors / 65% coverage ] ****** [386 done /270 queued / 16 running / 62 errors / 65% coverage ] ****** [387 done /272 queued / 16 running / 62 errors / 65% coverage ] ****** [387 done /272 queued / 16 running / 62 errors / 65% coverage ] ****** [388 done /271 queued / 16 running / 63 errors / 65% coverage ] ****** [388 done /271 queued / 16 running / 63 errors / 65% coverage ] ****** [389 done /274 queued / 16 running / 63 errors / 65% coverage ] ****** [389 done /274 queued / 16 running / 63 errors / 65% coverage ] ****** [390 done /275 queued / 16 running / 63 errors / 65% coverage ] ****** [390 done /275 queued / 16 running / 63 errors / 65% coverage ] ****** [391 done /277 queued / 16 running / 63 errors / 65% coverage ] ****** [391 done /277 queued / 16 running / 63 errors / 65% coverage ] ****** [392 done /278 queued / 16 running / 63 errors / 65% coverage ] ****** [392 done /278 queued / 16 running / 63 errors / 65% coverage ] ****** [393 done /277 queued / 16 running / 63 errors / 65% coverage ] ****** [393 done /277 queued / 16 running / 63 errors / 65% coverage ] ****** [394 done /276 queued / 16 running / 63 errors / 65% coverage ] ****** [394 done /276 queued / 16 running / 63 errors / 65% coverage ] ****** [395 done /275 queued / 16 running / 64 errors / 65% coverage ] ****** [395 done /275 queued / 16 running / 64 errors / 65% coverage ] ****** [396 done /274 queued / 16 running / 64 errors / 65% coverage ] ****** [396 done /274 queued / 16 running / 64 errors / 65% coverage ] ****** [397 done /274 queued / 16 running / 64 errors / 65% coverage ] ****** [397 done /274 queued / 16 running / 64 errors / 65% coverage ] ****** [398 done /274 queued / 16 running / 64 errors / 65% coverage ] ****** [398 done /274 queued / 16 running / 64 errors / 65% coverage ] ****** [399 done /274 queued / 16 running / 64 errors / 65% coverage ] ****** [399 done /274 queued / 16 running / 64 errors / 65% coverage ] ****** [400 done /273 queued / 16 running / 64 errors / 65% coverage ] ****** [400 done /273 queued / 16 running / 64 errors / 65% coverage ] ****** [401 done /273 queued / 16 running / 64 errors / 65% coverage ] ****** [401 done /273 queued / 16 running / 64 errors / 65% coverage ] ****** [402 done /272 queued / 16 running / 64 errors / 65% coverage ] ****** [402 done /272 queued / 16 running / 64 errors / 65% coverage ] ****** [403 done /271 queued / 16 running / 64 errors / 65% coverage ] ****** [403 done /271 queued / 16 running / 64 errors / 65% coverage ] ****** [404 done /271 queued / 16 running / 64 errors / 65% coverage ] ****** [404 done /271 queued / 16 running / 64 errors / 65% coverage ] ****** [405 done /272 queued / 16 running / 64 errors / 65% coverage ] ****** [405 done /272 queued / 16 running / 64 errors / 65% coverage ] ****** [406 done /273 queued / 16 running / 64 errors / 65% coverage ] ****** [406 done /273 queued / 16 running / 64 errors / 65% coverage ] ****** [407 done /273 queued / 16 running / 64 errors / 65% coverage ] ****** [407 done /273 queued / 16 running / 64 errors / 65% coverage ] ****** [408 done /275 queued / 16 running / 64 errors / 65% coverage ] ****** [408 done /275 queued / 16 running / 64 errors / 65% coverage ] ****** [409 done /274 queued / 16 running / 64 errors / 65% coverage ] ****** [409 done /274 queued / 16 running / 64 errors / 65% coverage ] ****** [410 done /274 queued / 16 running / 64 errors / 65% coverage ] ****** [410 done /274 queued / 16 running / 64 errors / 65% coverage ] ****** [411 done /274 queued / 16 running / 65 errors / 65% coverage ] ****** [411 done /274 queued / 16 running / 65 errors / 65% coverage ] ****** [412 done /276 queued / 16 running / 66 errors / 65% coverage ] ****** [412 done /276 queued / 16 running / 66 errors / 65% coverage ] ****** [413 done /277 queued / 16 running / 66 errors / 65% coverage ] ****** [413 done /277 queued / 16 running / 66 errors / 65% coverage ] ****** [414 done /280 queued / 16 running / 66 errors / 65% coverage ] ****** [414 done /280 queued / 16 running / 66 errors / 65% coverage ] ****** [415 done /279 queued / 16 running / 67 errors / 65% coverage ] ****** [415 done /279 queued / 16 running / 67 errors / 65% coverage ] ****** [416 done /281 queued / 16 running / 67 errors / 65% coverage ] ****** [416 done /281 queued / 16 running / 67 errors / 65% coverage ] ****** [417 done /283 queued / 16 running / 67 errors / 65% coverage ] ****** [417 done /283 queued / 16 running / 67 errors / 65% coverage ] ****** [418 done /286 queued / 16 running / 67 errors / 65% coverage ] ****** [418 done /286 queued / 16 running / 67 errors / 65% coverage ] ****** [419 done /285 queued / 16 running / 67 errors / 65% coverage ] ****** [419 done /285 queued / 16 running / 67 errors / 65% coverage ] ****** [420 done /284 queued / 16 running / 68 errors / 65% coverage ] ****** [420 done /284 queued / 16 running / 68 errors / 65% coverage ] ****** [421 done /285 queued / 16 running / 69 errors / 65% coverage ] ****** [421 done /285 queued / 16 running / 69 errors / 65% coverage ] ****** [422 done /284 queued / 16 running / 70 errors / 65% coverage ] ****** [422 done /284 queued / 16 running / 70 errors / 65% coverage ] ****** [423 done /286 queued / 16 running / 70 errors / 65% coverage ] ****** [423 done /286 queued / 16 running / 70 errors / 65% coverage ] ****** [424 done /287 queued / 16 running / 71 errors / 65% coverage ] ****** [424 done /287 queued / 16 running / 71 errors / 65% coverage ] ****** [425 done /288 queued / 16 running / 72 errors / 65% coverage ] ****** [425 done /288 queued / 16 running / 72 errors / 65% coverage ] ****** [426 done /289 queued / 16 running / 72 errors / 65% coverage ] ****** [426 done /289 queued / 16 running / 72 errors / 65% coverage ] ****** [427 done /288 queued / 16 running / 73 errors / 65% coverage ] ****** [427 done /288 queued / 16 running / 73 errors / 65% coverage ] ****** [428 done /290 queued / 16 running / 73 errors / 65% coverage ] ****** [428 done /290 queued / 16 running / 73 errors / 65% coverage ] ****** [429 done /290 queued / 16 running / 74 errors / 65% coverage ] ****** [429 done /290 queued / 16 running / 74 errors / 65% coverage ] ****** [430 done /290 queued / 16 running / 74 errors / 65% coverage ] ****** [430 done /290 queued / 16 running / 74 errors / 65% coverage ] ****** [431 done /291 queued / 16 running / 74 errors / 65% coverage ] ****** [431 done /291 queued / 16 running / 74 errors / 65% coverage ] ****** [432 done /290 queued / 16 running / 74 errors / 65% coverage ] ****** [432 done /290 queued / 16 running / 74 errors / 65% coverage ] ****** [433 done /290 queued / 16 running / 74 errors / 65% coverage ] ****** [433 done /290 queued / 16 running / 74 errors / 65% coverage ] ****** [434 done /290 queued / 16 running / 74 errors / 65% coverage ] ****** [434 done /290 queued / 16 running / 74 errors / 65% coverage ] ****** [435 done /289 queued / 16 running / 74 errors / 65% coverage ] ****** [435 done /289 queued / 16 running / 74 errors / 65% coverage ] ****** [436 done /288 queued / 16 running / 74 errors / 65% coverage ] ****** [436 done /288 queued / 16 running / 74 errors / 65% coverage ] ****** [437 done /287 queued / 16 running / 75 errors / 65% coverage ] ****** [437 done /287 queued / 16 running / 75 errors / 65% coverage ] ****** [438 done /286 queued / 16 running / 75 errors / 65% coverage ] ****** [438 done /286 queued / 16 running / 75 errors / 65% coverage ] ****** [439 done /285 queued / 16 running / 76 errors / 65% coverage ] ****** [439 done /285 queued / 16 running / 76 errors / 65% coverage ] ****** [440 done /285 queued / 16 running / 76 errors / 65% coverage ] ****** [440 done /285 queued / 16 running / 76 errors / 65% coverage ] ****** [441 done /284 queued / 16 running / 77 errors / 65% coverage ] ****** [441 done /284 queued / 16 running / 77 errors / 65% coverage ] ****** [442 done /283 queued / 16 running / 77 errors / 65% coverage ] ****** [442 done /283 queued / 16 running / 77 errors / 65% coverage ] ****** [443 done /283 queued / 16 running / 77 errors / 65% coverage ] ****** [443 done /283 queued / 16 running / 77 errors / 65% coverage ] ****** [444 done /282 queued / 16 running / 78 errors / 65% coverage ] ****** [444 done /282 queued / 16 running / 78 errors / 65% coverage ] ****** [445 done /286 queued / 16 running / 78 errors / 65% coverage ] ****** [445 done /286 queued / 16 running / 78 errors / 65% coverage ] ****** [446 done /287 queued / 16 running / 78 errors / 65% coverage ] ****** [446 done /287 queued / 16 running / 78 errors / 65% coverage ] ****** [447 done /288 queued / 16 running / 78 errors / 65% coverage ] ****** [447 done /288 queued / 16 running / 78 errors / 65% coverage ] ****** [448 done /287 queued / 16 running / 78 errors / 65% coverage ] ****** [448 done /287 queued / 16 running / 78 errors / 65% coverage ] ****** [449 done /286 queued / 16 running / 78 errors / 65% coverage ] ****** [449 done /286 queued / 16 running / 78 errors / 65% coverage ] ****** [450 done /289 queued / 16 running / 78 errors / 65% coverage ] ****** [450 done /289 queued / 16 running / 78 errors / 65% coverage ] ****** [451 done /290 queued / 16 running / 78 errors / 65% coverage ] ****** [451 done /290 queued / 16 running / 78 errors / 65% coverage ] ****** [452 done /292 queued / 16 running / 78 errors / 65% coverage ] ****** [452 done /292 queued / 16 running / 78 errors / 65% coverage ] ****** [453 done /294 queued / 16 running / 78 errors / 65% coverage ] ****** [453 done /294 queued / 16 running / 78 errors / 65% coverage ] ****** [454 done /296 queued / 16 running / 78 errors / 65% coverage ] ****** [454 done /296 queued / 16 running / 78 errors / 65% coverage ] ****** [455 done /297 queued / 16 running / 78 errors / 65% coverage ] ****** [455 done /297 queued / 16 running / 78 errors / 65% coverage ] ****** [456 done /298 queued / 16 running / 78 errors / 65% coverage ] ****** [456 done /298 queued / 16 running / 78 errors / 65% coverage ] ****** [457 done /298 queued / 16 running / 78 errors / 65% coverage ] ****** [457 done /298 queued / 16 running / 78 errors / 65% coverage ] ****** [458 done /301 queued / 16 running / 78 errors / 65% coverage ] ****** [458 done /301 queued / 16 running / 78 errors / 65% coverage ] ****** [459 done /301 queued / 16 running / 78 errors / 65% coverage ] ****** [459 done /301 queued / 16 running / 78 errors / 65% coverage ] ****** [460 done /301 queued / 16 running / 78 errors / 65% coverage ] ****** [460 done /301 queued / 16 running / 78 errors / 65% coverage ] ****** [461 done /301 queued / 16 running / 78 errors / 65% coverage ] ****** [461 done /301 queued / 16 running / 78 errors / 65% coverage ] ****** [462 done /302 queued / 16 running / 78 errors / 65% coverage ] ****** [462 done /302 queued / 16 running / 78 errors / 65% coverage ] ****** [463 done /305 queued / 16 running / 78 errors / 65% coverage ] ****** [463 done /305 queued / 16 running / 78 errors / 65% coverage ] ****** [464 done /305 queued / 16 running / 78 errors / 65% coverage ] ****** [464 done /305 queued / 16 running / 78 errors / 65% coverage ] ****** [465 done /304 queued / 16 running / 78 errors / 65% coverage ] ****** [465 done /304 queued / 16 running / 78 errors / 65% coverage ] ****** [466 done /303 queued / 16 running / 78 errors / 65% coverage ] ****** [466 done /303 queued / 16 running / 78 errors / 65% coverage ] ****** [467 done /303 queued / 16 running / 79 errors / 65% coverage ] ****** [467 done /303 queued / 16 running / 79 errors / 65% coverage ] ****** [468 done /302 queued / 16 running / 79 errors / 65% coverage ] ****** [468 done /302 queued / 16 running / 79 errors / 65% coverage ] ****** [469 done /302 queued / 16 running / 79 errors / 65% coverage ] ****** [469 done /302 queued / 16 running / 79 errors / 65% coverage ] ****** [470 done /302 queued / 16 running / 80 errors / 65% coverage ] ****** [470 done /302 queued / 16 running / 80 errors / 65% coverage ] ****** [471 done /301 queued / 16 running / 80 errors / 65% coverage ] ****** [471 done /301 queued / 16 running / 80 errors / 65% coverage ] ****** [472 done /300 queued / 16 running / 80 errors / 65% coverage ] ****** [472 done /300 queued / 16 running / 80 errors / 65% coverage ] ****** [473 done /301 queued / 16 running / 80 errors / 65% coverage ] ****** [473 done /301 queued / 16 running / 80 errors / 65% coverage ] ****** [474 done /302 queued / 16 running / 80 errors / 65% coverage ] ****** [474 done /302 queued / 16 running / 80 errors / 65% coverage ] ****** [475 done /302 queued / 16 running / 80 errors / 65% coverage ] ****** [475 done /302 queued / 16 running / 80 errors / 65% coverage ] ****** [476 done /302 queued / 16 running / 80 errors / 65% coverage ] ****** [476 done /302 queued / 16 running / 80 errors / 65% coverage ] ****** [477 done /303 queued / 16 running / 80 errors / 65% coverage ] ****** [477 done /303 queued / 16 running / 80 errors / 65% coverage ] ****** [478 done /306 queued / 16 running / 80 errors / 65% coverage ] ****** [478 done /306 queued / 16 running / 80 errors / 65% coverage ] ****** [479 done /306 queued / 16 running / 80 errors / 65% coverage ] ****** [479 done /306 queued / 16 running / 80 errors / 65% coverage ] ****** [480 done /306 queued / 16 running / 80 errors / 65% coverage ] ****** [480 done /306 queued / 16 running / 80 errors / 65% coverage ] ****** [481 done /311 queued / 16 running / 80 errors / 65% coverage ] ****** [481 done /311 queued / 16 running / 80 errors / 65% coverage ] ****** [482 done /312 queued / 16 running / 80 errors / 65% coverage ] ****** [482 done /312 queued / 16 running / 80 errors / 65% coverage ] ****** [483 done /311 queued / 16 running / 81 errors / 65% coverage ] ****** [483 done /311 queued / 16 running / 81 errors / 65% coverage ] ****** [484 done /311 queued / 16 running / 81 errors / 65% coverage ] ****** [484 done /311 queued / 16 running / 81 errors / 65% coverage ] ****** [485 done /312 queued / 16 running / 81 errors / 65% coverage ] ****** [485 done /312 queued / 16 running / 81 errors / 65% coverage ] ****** [486 done /316 queued / 16 running / 81 errors / 65% coverage ] ****** [486 done /316 queued / 16 running / 81 errors / 65% coverage ] ****** [487 done /318 queued / 16 running / 81 errors / 65% coverage ] ****** [487 done /318 queued / 16 running / 81 errors / 65% coverage ] ****** [488 done /317 queued / 16 running / 82 errors / 65% coverage ] ****** [488 done /317 queued / 16 running / 82 errors / 65% coverage ] ****** [489 done /318 queued / 16 running / 82 errors / 65% coverage ] ****** [489 done /318 queued / 16 running / 82 errors / 65% coverage ] ****** [490 done /319 queued / 16 running / 82 errors / 65% coverage ] ****** [490 done /319 queued / 16 running / 82 errors / 65% coverage ] ****** [491 done /320 queued / 16 running / 82 errors / 65% coverage ] ****** [491 done /320 queued / 16 running / 82 errors / 65% coverage ] ****** [492 done /319 queued / 16 running / 82 errors / 65% coverage ] ****** [492 done /319 queued / 16 running / 82 errors / 65% coverage ] ****** [493 done /322 queued / 16 running / 82 errors / 65% coverage ] ****** [493 done /322 queued / 16 running / 82 errors / 65% coverage ] ****** [494 done /322 queued / 16 running / 82 errors / 65% coverage ] ****** [494 done /322 queued / 16 running / 82 errors / 65% coverage ] ****** [495 done /322 queued / 16 running / 82 errors / 65% coverage ] ****** [495 done /322 queued / 16 running / 82 errors / 65% coverage ] ****** [496 done /323 queued / 16 running / 82 errors / 65% coverage ] ****** [496 done /323 queued / 16 running / 82 errors / 65% coverage ] ****** [497 done /324 queued / 16 running / 82 errors / 65% coverage ] ****** [497 done /324 queued / 16 running / 82 errors / 65% coverage ] ****** [498 done /326 queued / 16 running / 82 errors / 65% coverage ] ****** [498 done /326 queued / 16 running / 82 errors / 65% coverage ] ****** [499 done /327 queued / 16 running / 82 errors / 65% coverage ] ****** [499 done /327 queued / 16 running / 82 errors / 65% coverage ] ****** [500 done /326 queued / 16 running / 82 errors / 65% coverage ] ****** [500 done /326 queued / 16 running / 82 errors / 65% coverage ] ****** [501 done /327 queued / 16 running / 82 errors / 65% coverage ] ****** [501 done /327 queued / 16 running / 82 errors / 65% coverage ] ****** [502 done /327 queued / 16 running / 82 errors / 65% coverage ] ****** [502 done /327 queued / 16 running / 82 errors / 65% coverage ] ****** [503 done /327 queued / 16 running / 82 errors / 65% coverage ] ****** [503 done /327 queued / 16 running / 82 errors / 65% coverage ] ****** [504 done /327 queued / 16 running / 82 errors / 65% coverage ] ****** [504 done /327 queued / 16 running / 82 errors / 65% coverage ] ****** [505 done /328 queued / 16 running / 82 errors / 65% coverage ] ****** [505 done /328 queued / 16 running / 82 errors / 65% coverage ] ****** [506 done /329 queued / 16 running / 82 errors / 65% coverage ] ****** [506 done /329 queued / 16 running / 82 errors / 65% coverage ] ****** [507 done /329 queued / 16 running / 82 errors / 65% coverage ] ****** [507 done /329 queued / 16 running / 82 errors / 65% coverage ] ****** [508 done /330 queued / 16 running / 82 errors / 65% coverage ] ****** [508 done /330 queued / 16 running / 82 errors / 65% coverage ] ****** [509 done /331 queued / 16 running / 82 errors / 65% coverage ] ****** [509 done /331 queued / 16 running / 82 errors / 65% coverage ] ****** [510 done /330 queued / 16 running / 82 errors / 65% coverage ] ****** [510 done /330 queued / 16 running / 82 errors / 65% coverage ] ****** [511 done /330 queued / 16 running / 82 errors / 65% coverage ] ****** [511 done /330 queued / 16 running / 82 errors / 65% coverage ] ****** [512 done /333 queued / 16 running / 82 errors / 65% coverage ] ****** [512 done /333 queued / 16 running / 82 errors / 65% coverage ] ****** [513 done /335 queued / 16 running / 82 errors / 65% coverage ] ****** [513 done /335 queued / 16 running / 82 errors / 65% coverage ] ****** [514 done /336 queued / 16 running / 82 errors / 65% coverage ] ****** [514 done /336 queued / 16 running / 82 errors / 65% coverage ] ****** [515 done /340 queued / 16 running / 82 errors / 65% coverage ] ****** [515 done /340 queued / 16 running / 82 errors / 65% coverage ] ****** [516 done /344 queued / 16 running / 82 errors / 65% coverage ] ****** [516 done /344 queued / 16 running / 82 errors / 65% coverage ] ****** [517 done /348 queued / 16 running / 82 errors / 65% coverage ] ****** [517 done /348 queued / 16 running / 82 errors / 65% coverage ] ****** [518 done /349 queued / 16 running / 82 errors / 65% coverage ] ****** [518 done /349 queued / 16 running / 82 errors / 65% coverage ] ****** [519 done /351 queued / 16 running / 82 errors / 65% coverage ] ****** [519 done /351 queued / 16 running / 82 errors / 65% coverage ] ****** [520 done /352 queued / 16 running / 82 errors / 65% coverage ] ****** [520 done /352 queued / 16 running / 82 errors / 65% coverage ] ****** [521 done /352 queued / 16 running / 82 errors / 65% coverage ] ****** [521 done /352 queued / 16 running / 82 errors / 65% coverage ] ****** [522 done /351 queued / 16 running / 82 errors / 65% coverage ] ****** [522 done /351 queued / 16 running / 82 errors / 65% coverage ] ****** [523 done /354 queued / 16 running / 82 errors / 65% coverage ] ****** [523 done /354 queued / 16 running / 82 errors / 65% coverage ] ****** [524 done /355 queued / 16 running / 82 errors / 65% coverage ] ****** [524 done /355 queued / 16 running / 82 errors / 65% coverage ] ****** [525 done /359 queued / 16 running / 82 errors / 65% coverage ] ****** [525 done /359 queued / 16 running / 82 errors / 65% coverage ] ****** [526 done /361 queued / 16 running / 82 errors / 65% coverage ] ****** [526 done /361 queued / 16 running / 82 errors / 65% coverage ] ****** [527 done /362 queued / 16 running / 82 errors / 65% coverage ] ****** [527 done /362 queued / 16 running / 82 errors / 65% coverage ] ****** [528 done /362 queued / 16 running / 82 errors / 65% coverage ] ****** [528 done /362 queued / 16 running / 82 errors / 65% coverage ] ****** [529 done /361 queued / 16 running / 82 errors / 65% coverage ] ****** [529 done /361 queued / 16 running / 82 errors / 65% coverage ] ****** [530 done /360 queued / 16 running / 82 errors / 65% coverage ] ****** [530 done /360 queued / 16 running / 82 errors / 65% coverage ] ****** [531 done /361 queued / 16 running / 82 errors / 65% coverage ] ****** [531 done /361 queued / 16 running / 82 errors / 65% coverage ] ****** [532 done /361 queued / 16 running / 82 errors / 65% coverage ] ****** [532 done /361 queued / 16 running / 82 errors / 65% coverage ] ****** [533 done /361 queued / 16 running / 82 errors / 65% coverage ] ****** [533 done /361 queued / 16 running / 82 errors / 65% coverage ] ****** [534 done /360 queued / 16 running / 82 errors / 65% coverage ] ****** [534 done /360 queued / 16 running / 82 errors / 65% coverage ] ****** [535 done /360 queued / 16 running / 82 errors / 65% coverage ] ****** [535 done /360 queued / 16 running / 82 errors / 65% coverage ] ****** [536 done /361 queued / 16 running / 82 errors / 65% coverage ] ****** [536 done /361 queued / 16 running / 82 errors / 65% coverage ] ****** [537 done /362 queued / 16 running / 82 errors / 65% coverage ] ****** [537 done /362 queued / 16 running / 82 errors / 65% coverage ] ****** [538 done /362 queued / 16 running / 82 errors / 65% coverage ] ****** [538 done /362 queued / 16 running / 82 errors / 65% coverage ] ****** [539 done /363 queued / 16 running / 82 errors / 65% coverage ] ****** [539 done /363 queued / 16 running / 82 errors / 65% coverage ] ****** [540 done /363 queued / 16 running / 82 errors / 65% coverage ] ****** [540 done /363 queued / 16 running / 82 errors / 65% coverage ] ****** [541 done /363 queued / 16 running / 82 errors / 65% coverage ] ****** [541 done /363 queued / 16 running / 82 errors / 65% coverage ] ****** [542 done /363 queued / 16 running / 82 errors / 65% coverage ] ****** [542 done /363 queued / 16 running / 82 errors / 65% coverage ] ****** [543 done /363 queued / 16 running / 82 errors / 65% coverage ] ****** [543 done /363 queued / 16 running / 82 errors / 65% coverage ] ****** [544 done /363 queued / 16 running / 82 errors / 65% coverage ] ****** [544 done /363 queued / 16 running / 82 errors / 65% coverage ] ****** [545 done /363 queued / 16 running / 82 errors / 65% coverage ] ****** [545 done /363 queued / 16 running / 82 errors / 65% coverage ] ****** [546 done /363 queued / 16 running / 82 errors / 65% coverage ] ****** [546 done /363 queued / 16 running / 82 errors / 65% coverage ] ****** [547 done /364 queued / 16 running / 82 errors / 65% coverage ] ****** [547 done /364 queued / 16 running / 82 errors / 65% coverage ] ****** [548 done /364 queued / 16 running / 82 errors / 65% coverage ] ****** [548 done /364 queued / 16 running / 82 errors / 65% coverage ] ****** [549 done /367 queued / 16 running / 82 errors / 65% coverage ] ****** [549 done /367 queued / 16 running / 82 errors / 65% coverage ] ****** [550 done /366 queued / 16 running / 82 errors / 65% coverage ] ****** [550 done /366 queued / 16 running / 82 errors / 65% coverage ] ****** [551 done /365 queued / 16 running / 82 errors / 65% coverage ] ****** [551 done /365 queued / 16 running / 82 errors / 65% coverage ] ****** [552 done /367 queued / 16 running / 82 errors / 65% coverage ] ****** [552 done /367 queued / 16 running / 82 errors / 65% coverage ] ****** [553 done /368 queued / 16 running / 82 errors / 65% coverage ] ****** [553 done /368 queued / 16 running / 82 errors / 65% coverage ] ****** [554 done /369 queued / 16 running / 82 errors / 65% coverage ] ****** [554 done /369 queued / 16 running / 82 errors / 65% coverage ] ****** [555 done /371 queued / 16 running / 82 errors / 65% coverage ] ****** [555 done /371 queued / 16 running / 82 errors / 65% coverage ] ****** [556 done /372 queued / 16 running / 82 errors / 65% coverage ] ****** [556 done /372 queued / 16 running / 82 errors / 65% coverage ] ****** [557 done /373 queued / 16 running / 82 errors / 65% coverage ] ****** [557 done /373 queued / 16 running / 82 errors / 65% coverage ] ****** [558 done /377 queued / 16 running / 82 errors / 65% coverage ] ****** [558 done /377 queued / 16 running / 82 errors / 65% coverage ] ****** [559 done /378 queued / 16 running / 82 errors / 65% coverage ] ****** [559 done /378 queued / 16 running / 82 errors / 65% coverage ] ****** [560 done /381 queued / 16 running / 82 errors / 65% coverage ] ****** [560 done /381 queued / 16 running / 82 errors / 65% coverage ] ****** [561 done /382 queued / 16 running / 82 errors / 65% coverage ] ****** [561 done /382 queued / 16 running / 82 errors / 65% coverage ] ****** [562 done /382 queued / 16 running / 82 errors / 65% coverage ] ****** [562 done /382 queued / 16 running / 82 errors / 65% coverage ] ****** [563 done /385 queued / 16 running / 82 errors / 65% coverage ] ****** [563 done /385 queued / 16 running / 82 errors / 65% coverage ] ****** [564 done /388 queued / 16 running / 82 errors / 65% coverage ] ****** [564 done /388 queued / 16 running / 82 errors / 65% coverage ] ****** [565 done /389 queued / 16 running / 82 errors / 65% coverage ] ****** [565 done /389 queued / 16 running / 82 errors / 65% coverage ] ****** [566 done /393 queued / 16 running / 82 errors / 65% coverage ] ****** [566 done /393 queued / 16 running / 82 errors / 65% coverage ] ****** [567 done /395 queued / 16 running / 82 errors / 65% coverage ] ****** [567 done /395 queued / 16 running / 82 errors / 65% coverage ] ****** [568 done /397 queued / 16 running / 82 errors / 65% coverage ] ****** [568 done /397 queued / 16 running / 82 errors / 65% coverage ] ****** [569 done /397 queued / 16 running / 82 errors / 65% coverage ] ****** [569 done /397 queued / 16 running / 82 errors / 65% coverage ] ****** [570 done /399 queued / 16 running / 82 errors / 65% coverage ] ****** [570 done /399 queued / 16 running / 82 errors / 65% coverage ] ****** [571 done /398 queued / 16 running / 82 errors / 65% coverage ] ****** [571 done /398 queued / 16 running / 82 errors / 65% coverage ] ****** [572 done /399 queued / 16 running / 82 errors / 65% coverage ] ****** [572 done /399 queued / 16 running / 82 errors / 65% coverage ] ****** [573 done /401 queued / 16 running / 82 errors / 65% coverage ] ****** [573 done /401 queued / 16 running / 82 errors / 65% coverage ] ****** [574 done /402 queued / 16 running / 82 errors / 65% coverage ] ****** [574 done /402 queued / 16 running / 82 errors / 65% coverage ] ****** [575 done /403 queued / 16 running / 82 errors / 65% coverage ] ****** [575 done /403 queued / 16 running / 82 errors / 65% coverage ] ****** [576 done /403 queued / 16 running / 82 errors / 65% coverage ] ****** [576 done /403 queued / 16 running / 82 errors / 65% coverage ] ****** [577 done /403 queued / 16 running / 82 errors / 65% coverage ] ****** [577 done /403 queued / 16 running / 82 errors / 65% coverage ] ****** [578 done /406 queued / 16 running / 82 errors / 65% coverage ] ****** [578 done /406 queued / 16 running / 82 errors / 65% coverage ] ****** [579 done /406 queued / 16 running / 82 errors / 65% coverage ] ****** [579 done /406 queued / 16 running / 82 errors / 65% coverage ] ****** [580 done /407 queued / 16 running / 82 errors / 65% coverage ] ****** [580 done /407 queued / 16 running / 82 errors / 65% coverage ] ****** [581 done /408 queued / 16 running / 82 errors / 65% coverage ] ****** [581 done /408 queued / 16 running / 82 errors / 65% coverage ] ****** [582 done /409 queued / 16 running / 83 errors / 65% coverage ] ****** [582 done /409 queued / 16 running / 83 errors / 65% coverage ] ****** [583 done /409 queued / 16 running / 83 errors / 65% coverage ] ****** [583 done /409 queued / 16 running / 83 errors / 65% coverage ] ****** [584 done /411 queued / 16 running / 83 errors / 65% coverage ] ****** [584 done /411 queued / 16 running / 83 errors / 65% coverage ] ****** [585 done /411 queued / 16 running / 83 errors / 65% coverage ] ****** [585 done /411 queued / 16 running / 83 errors / 65% coverage ] ****** [586 done /411 queued / 16 running / 83 errors / 65% coverage ] ****** [586 done /411 queued / 16 running / 83 errors / 65% coverage ] ****** [587 done /411 queued / 16 running / 83 errors / 65% coverage ] ****** [587 done /411 queued / 16 running / 83 errors / 65% coverage ] ****** [588 done /412 queued / 16 running / 84 errors / 65% coverage ] ****** [588 done /412 queued / 16 running / 84 errors / 65% coverage ] ****** [589 done /414 queued / 16 running / 84 errors / 65% coverage ] ****** [589 done /414 queued / 16 running / 84 errors / 65% coverage ] ****** [590 done /414 queued / 16 running / 84 errors / 65% coverage ] ****** [590 done /414 queued / 16 running / 84 errors / 65% coverage ] ****** [591 done /417 queued / 16 running / 84 errors / 65% coverage ] ****** [591 done /417 queued / 16 running / 84 errors / 65% coverage ] ****** [592 done /419 queued / 16 running / 84 errors / 65% coverage ] ****** [592 done /419 queued / 16 running / 84 errors / 65% coverage ] ****** [593 done /420 queued / 16 running / 84 errors / 65% coverage ] ****** [593 done /420 queued / 16 running / 84 errors / 65% coverage ] ****** [594 done /422 queued / 16 running / 84 errors / 65% coverage ] ****** [594 done /422 queued / 16 running / 84 errors / 65% coverage ] ****** [595 done /426 queued / 16 running / 84 errors / 65% coverage ] ****** [595 done /426 queued / 16 running / 84 errors / 65% coverage ] ****** [596 done /427 queued / 16 running / 84 errors / 65% coverage ] ****** [596 done /427 queued / 16 running / 84 errors / 65% coverage ] ****** [597 done /429 queued / 16 running / 84 errors / 65% coverage ] ****** [597 done /429 queued / 16 running / 84 errors / 65% coverage ] ****** [598 done /430 queued / 16 running / 84 errors / 65% coverage ] ****** [598 done /430 queued / 16 running / 84 errors / 65% coverage ] ****** [599 done /431 queued / 16 running / 84 errors / 65% coverage ] ****** [599 done /431 queued / 16 running / 84 errors / 65% coverage ] ****** [600 done /431 queued / 16 running / 84 errors / 65% coverage ] ****** [600 done /431 queued / 16 running / 84 errors / 65% coverage ] ****** [601 done /433 queued / 16 running / 84 errors / 65% coverage ] ****** [601 done /433 queued / 16 running / 84 errors / 65% coverage ] ****** [602 done /438 queued / 16 running / 84 errors / 65% coverage ] ****** [602 done /438 queued / 16 running / 84 errors / 65% coverage ] ****** [603 done /439 queued / 16 running / 84 errors / 65% coverage ] ****** [603 done /439 queued / 16 running / 84 errors / 65% coverage ] ****** [604 done /441 queued / 16 running / 84 errors / 65% coverage ] ****** [604 done /441 queued / 16 running / 84 errors / 65% coverage ] ****** [605 done /445 queued / 16 running / 84 errors / 65% coverage ] ****** [605 done /445 queued / 16 running / 84 errors / 65% coverage ] ****** [606 done /445 queued / 16 running / 84 errors / 65% coverage ] ****** [606 done /445 queued / 16 running / 84 errors / 65% coverage ] ****** [607 done /444 queued / 16 running / 84 errors / 65% coverage ] ****** [607 done /444 queued / 16 running / 84 errors / 65% coverage ] ****** [608 done /443 queued / 16 running / 84 errors / 65% coverage ] ****** [608 done /443 queued / 16 running / 84 errors / 65% coverage ] ****** [609 done /442 queued / 16 running / 84 errors / 65% coverage ] ****** [609 done /442 queued / 16 running / 84 errors / 65% coverage ] ****** [610 done /442 queued / 16 running / 84 errors / 65% coverage ] ****** [610 done /442 queued / 16 running / 84 errors / 65% coverage ] ****** [611 done /442 queued / 16 running / 84 errors / 65% coverage ] ****** [611 done /442 queued / 16 running / 84 errors / 65% coverage ] ****** [612 done /442 queued / 16 running / 84 errors / 65% coverage ] ****** [612 done /442 queued / 16 running / 84 errors / 65% coverage ] ****** [613 done /443 queued / 16 running / 84 errors / 65% coverage ] ****** [613 done /443 queued / 16 running / 84 errors / 65% coverage ] ****** [614 done /442 queued / 16 running / 84 errors / 65% coverage ] ****** [614 done /442 queued / 16 running / 84 errors / 65% coverage ] ****** [615 done /441 queued / 16 running / 84 errors / 65% coverage ] ****** [615 done /441 queued / 16 running / 84 errors / 65% coverage ] ****** [616 done /441 queued / 16 running / 84 errors / 65% coverage ] ****** [616 done /441 queued / 16 running / 84 errors / 65% coverage ] ****** [617 done /443 queued / 16 running / 84 errors / 65% coverage ] ****** [617 done /443 queued / 16 running / 84 errors / 65% coverage ] ****** [618 done /443 queued / 16 running / 84 errors / 65% coverage ] ****** [618 done /443 queued / 16 running / 84 errors / 65% coverage ] ****** [619 done /444 queued / 16 running / 84 errors / 65% coverage ] ****** [619 done /444 queued / 16 running / 84 errors / 65% coverage ] ****** [620 done /445 queued / 16 running / 84 errors / 65% coverage ] ****** [620 done /445 queued / 16 running / 84 errors / 65% coverage ] ****** [621 done /446 queued / 16 running / 84 errors / 65% coverage ] ****** [621 done /446 queued / 16 running / 84 errors / 65% coverage ] ****** [622 done /446 queued / 16 running / 84 errors / 65% coverage ] ****** [622 done /446 queued / 16 running / 84 errors / 65% coverage ] ****** [623 done /446 queued / 16 running / 84 errors / 65% coverage ] ****** [623 done /446 queued / 16 running / 84 errors / 65% coverage ] ****** [624 done /448 queued / 16 running / 84 errors / 65% coverage ] ****** [624 done /448 queued / 16 running / 84 errors / 65% coverage ] ****** [625 done /449 queued / 16 running / 84 errors / 65% coverage ] ****** [625 done /449 queued / 16 running / 84 errors / 65% coverage ] ****** [626 done /449 queued / 16 running / 84 errors / 65% coverage ] ****** [626 done /449 queued / 16 running / 84 errors / 65% coverage ] ****** [627 done /451 queued / 16 running / 84 errors / 65% coverage ] ****** [627 done /451 queued / 16 running / 84 errors / 65% coverage ] ****** [628 done /451 queued / 16 running / 84 errors / 65% coverage ] ****** [628 done /451 queued / 16 running / 84 errors / 65% coverage ] ****** [629 done /451 queued / 16 running / 84 errors / 65% coverage ] ****** [629 done /451 queued / 16 running / 84 errors / 65% coverage ] ****** [630 done /452 queued / 16 running / 84 errors / 65% coverage ] ****** [630 done /452 queued / 16 running / 84 errors / 65% coverage ] ****** [631 done /453 queued / 16 running / 84 errors / 65% coverage ] ****** [631 done /453 queued / 16 running / 84 errors / 65% coverage ] ****** [632 done /453 queued / 16 running / 84 errors / 65% coverage ] ****** [632 done /453 queued / 16 running / 84 errors / 65% coverage ] ****** [633 done /453 queued / 16 running / 84 errors / 65% coverage ] ****** [633 done /453 queued / 16 running / 84 errors / 65% coverage ] ****** [634 done /454 queued / 16 running / 84 errors / 65% coverage ] ****** [634 done /454 queued / 16 running / 84 errors / 65% coverage ] ****** [635 done /455 queued / 16 running / 84 errors / 65% coverage ] ****** [635 done /455 queued / 16 running / 84 errors / 65% coverage ] ****** [636 done /458 queued / 16 running / 84 errors / 65% coverage ] ****** [636 done /458 queued / 16 running / 84 errors / 65% coverage ] ****** [637 done /459 queued / 16 running / 84 errors / 65% coverage ] ****** [637 done /459 queued / 16 running / 84 errors / 65% coverage ] ****** [638 done /461 queued / 16 running / 84 errors / 65% coverage ] ****** [638 done /461 queued / 16 running / 84 errors / 65% coverage ] ****** [639 done /463 queued / 16 running / 84 errors / 65% coverage ] ****** [639 done /463 queued / 16 running / 84 errors / 65% coverage ] ****** [640 done /466 queued / 16 running / 84 errors / 65% coverage ] ****** [640 done /466 queued / 16 running / 84 errors / 65% coverage ] ****** [641 done /467 queued / 16 running / 84 errors / 65% coverage ] ****** [641 done /467 queued / 16 running / 84 errors / 65% coverage ] ****** [642 done /467 queued / 16 running / 84 errors / 65% coverage ] ****** [642 done /467 queued / 16 running / 84 errors / 65% coverage ] ****** [643 done /470 queued / 16 running / 84 errors / 65% coverage ] ****** [643 done /470 queued / 16 running / 84 errors / 65% coverage ] ****** [644 done /473 queued / 16 running / 84 errors / 65% coverage ] ****** [644 done /473 queued / 16 running / 84 errors / 65% coverage ] ****** [645 done /474 queued / 16 running / 84 errors / 65% coverage ] ****** [645 done /474 queued / 16 running / 84 errors / 65% coverage ] ****** [646 done /475 queued / 16 running / 84 errors / 65% coverage ] ****** [646 done /475 queued / 16 running / 84 errors / 65% coverage ] ****** [647 done /478 queued / 16 running / 84 errors / 65% coverage ] ****** [647 done /478 queued / 16 running / 84 errors / 65% coverage ] ****** [648 done /481 queued / 16 running / 84 errors / 65% coverage ] ****** [648 done /481 queued / 16 running / 84 errors / 65% coverage ] ****** [649 done /482 queued / 16 running / 84 errors / 65% coverage ] ****** [649 done /482 queued / 16 running / 84 errors / 65% coverage ] ****** [650 done /481 queued / 16 running / 84 errors / 65% coverage ] ****** [650 done /481 queued / 16 running / 84 errors / 65% coverage ] ****** [651 done /483 queued / 16 running / 84 errors / 65% coverage ] ****** [651 done /483 queued / 16 running / 84 errors / 65% coverage ] ****** [652 done /483 queued / 16 running / 84 errors / 65% coverage ] ****** [652 done /483 queued / 16 running / 84 errors / 65% coverage ] ****** [653 done /485 queued / 16 running / 84 errors / 65% coverage ] ****** [653 done /485 queued / 16 running / 84 errors / 65% coverage ] ****** [654 done /485 queued / 16 running / 84 errors / 65% coverage ] ****** [654 done /485 queued / 16 running / 84 errors / 65% coverage ] ****** [655 done /484 queued / 16 running / 84 errors / 65% coverage ] ****** [655 done /484 queued / 16 running / 84 errors / 65% coverage ] ****** [656 done /483 queued / 16 running / 84 errors / 65% coverage ] ****** [656 done /483 queued / 16 running / 84 errors / 65% coverage ] ****** [657 done /483 queued / 16 running / 84 errors / 65% coverage ] ****** [657 done /483 queued / 16 running / 84 errors / 65% coverage ] ****** [658 done /482 queued / 16 running / 84 errors / 65% coverage ] ****** [658 done /482 queued / 16 running / 84 errors / 65% coverage ] ****** [659 done /481 queued / 16 running / 84 errors / 65% coverage ] ****** [659 done /481 queued / 16 running / 84 errors / 65% coverage ] ****** [660 done /480 queued / 16 running / 84 errors / 65% coverage ] ****** [660 done /480 queued / 16 running / 84 errors / 65% coverage ] ****** [661 done /479 queued / 16 running / 84 errors / 65% coverage ] ****** [661 done /479 queued / 16 running / 84 errors / 65% coverage ] ****** [662 done /478 queued / 16 running / 84 errors / 65% coverage ] ****** [662 done /478 queued / 16 running / 84 errors / 65% coverage ] ****** [663 done /477 queued / 16 running / 84 errors / 65% coverage ] ****** [663 done /477 queued / 16 running / 84 errors / 65% coverage ] ****** [664 done /477 queued / 16 running / 84 errors / 65% coverage ] ****** [664 done /477 queued / 16 running / 84 errors / 65% coverage ] ****** [665 done /476 queued / 16 running / 84 errors / 65% coverage ] ****** [665 done /476 queued / 16 running / 84 errors / 65% coverage ] ****** [666 done /475 queued / 16 running / 84 errors / 65% coverage ] ****** [666 done /475 queued / 16 running / 84 errors / 65% coverage ] ****** [667 done /475 queued / 16 running / 84 errors / 65% coverage ] ****** [667 done /475 queued / 16 running / 84 errors / 65% coverage ] ****** [668 done /474 queued / 16 running / 84 errors / 65% coverage ] ****** [668 done /474 queued / 16 running / 84 errors / 65% coverage ] ****** [669 done /474 queued / 16 running / 84 errors / 65% coverage ] ****** [669 done /474 queued / 16 running / 84 errors / 65% coverage ] ****** [670 done /473 queued / 16 running / 84 errors / 65% coverage ] ****** [670 done /473 queued / 16 running / 84 errors / 65% coverage ] ****** [671 done /472 queued / 16 running / 84 errors / 65% coverage ] ****** [671 done /472 queued / 16 running / 84 errors / 65% coverage ] ****** [672 done /471 queued / 16 running / 84 errors / 65% coverage ] ****** [672 done /471 queued / 16 running / 84 errors / 65% coverage ] ****** [673 done /471 queued / 16 running / 84 errors / 65% coverage ] ****** [673 done /471 queued / 16 running / 84 errors / 65% coverage ] ****** [674 done /471 queued / 16 running / 84 errors / 65% coverage ] ****** [674 done /471 queued / 16 running / 84 errors / 65% coverage ] ****** [675 done /471 queued / 16 running / 84 errors / 65% coverage ] ****** [675 done /471 queued / 16 running / 84 errors / 65% coverage ] ****** [676 done /470 queued / 16 running / 84 errors / 65% coverage ] ****** [676 done /470 queued / 16 running / 84 errors / 65% coverage ] ****** [677 done /472 queued / 16 running / 84 errors / 65% coverage ] ****** [677 done /472 queued / 16 running / 84 errors / 65% coverage ] ****** [678 done /471 queued / 16 running / 84 errors / 65% coverage ] ****** [678 done /471 queued / 16 running / 84 errors / 65% coverage ] ****** [679 done /470 queued / 16 running / 84 errors / 65% coverage ] ****** [679 done /470 queued / 16 running / 84 errors / 65% coverage ] ****** [680 done /471 queued / 16 running / 84 errors / 65% coverage ] ****** [680 done /471 queued / 16 running / 84 errors / 65% coverage ] ****** [681 done /473 queued / 16 running / 85 errors / 65% coverage ] ****** [681 done /473 queued / 16 running / 85 errors / 65% coverage ] ****** [682 done /475 queued / 16 running / 85 errors / 65% coverage ] ****** [682 done /475 queued / 16 running / 85 errors / 65% coverage ] ****** [683 done /478 queued / 16 running / 85 errors / 65% coverage ] ****** [683 done /478 queued / 16 running / 85 errors / 65% coverage ] ****** [684 done /479 queued / 16 running / 85 errors / 65% coverage ] ****** [684 done /479 queued / 16 running / 85 errors / 65% coverage ] ****** [685 done /478 queued / 16 running / 85 errors / 65% coverage ] ****** [685 done /478 queued / 16 running / 85 errors / 65% coverage ] ****** [686 done /482 queued / 16 running / 85 errors / 65% coverage ] ****** [686 done /482 queued / 16 running / 85 errors / 65% coverage ] ****** [687 done /485 queued / 16 running / 85 errors / 65% coverage ] ****** [687 done /485 queued / 16 running / 85 errors / 65% coverage ] ****** [688 done /488 queued / 16 running / 85 errors / 65% coverage ] ****** [688 done /488 queued / 16 running / 85 errors / 65% coverage ] ****** [689 done /490 queued / 16 running / 85 errors / 65% coverage ] ****** [689 done /490 queued / 16 running / 85 errors / 65% coverage ] ****** [690 done /490 queued / 16 running / 85 errors / 65% coverage ] ****** [690 done /490 queued / 16 running / 85 errors / 65% coverage ] ****** [691 done /491 queued / 16 running / 85 errors / 65% coverage ] ****** [691 done /491 queued / 16 running / 85 errors / 65% coverage ] ****** [692 done /492 queued / 16 running / 85 errors / 65% coverage ] ****** [692 done /492 queued / 16 running / 85 errors / 65% coverage ] ****** [693 done /493 queued / 16 running / 85 errors / 65% coverage ] ****** [693 done /493 queued / 16 running / 85 errors / 65% coverage ] ****** [694 done /495 queued / 16 running / 85 errors / 65% coverage ] ****** [694 done /495 queued / 16 running / 85 errors / 65% coverage ] ****** [695 done /498 queued / 16 running / 85 errors / 65% coverage ] ****** [695 done /498 queued / 16 running / 85 errors / 65% coverage ] ****** [696 done /500 queued / 16 running / 85 errors / 65% coverage ] ****** [696 done /500 queued / 16 running / 85 errors / 65% coverage ] ****** [697 done /501 queued / 16 running / 85 errors / 65% coverage ] ****** [697 done /501 queued / 16 running / 85 errors / 65% coverage ] ****** [698 done /500 queued / 16 running / 86 errors / 65% coverage ] ****** [698 done /500 queued / 16 running / 86 errors / 65% coverage ] ****** [699 done /501 queued / 16 running / 86 errors / 65% coverage ] ****** [699 done /501 queued / 16 running / 86 errors / 65% coverage ] ****** [700 done /503 queued / 16 running / 86 errors / 65% coverage ] ****** [700 done /503 queued / 16 running / 86 errors / 65% coverage ] ****** [701 done /506 queued / 16 running / 86 errors / 65% coverage ] ****** [701 done /506 queued / 16 running / 86 errors / 65% coverage ] ****** [702 done /507 queued / 16 running / 86 errors / 65% coverage ] ****** [702 done /507 queued / 16 running / 86 errors / 65% coverage ] ****** [703 done /509 queued / 16 running / 86 errors / 65% coverage ] ****** [703 done /509 queued / 16 running / 86 errors / 65% coverage ] ****** [704 done /512 queued / 16 running / 86 errors / 65% coverage ] ****** [704 done /512 queued / 16 running / 86 errors / 65% coverage ] ****** [705 done /513 queued / 16 running / 86 errors / 65% coverage ] ****** [705 done /513 queued / 16 running / 86 errors / 65% coverage ] ****** [706 done /513 queued / 16 running / 86 errors / 65% coverage ] ****** [706 done /513 queued / 16 running / 86 errors / 65% coverage ] ****** [707 done /513 queued / 16 running / 86 errors / 65% coverage ] ****** [707 done /513 queued / 16 running / 86 errors / 65% coverage ] ****** [708 done /515 queued / 16 running / 86 errors / 65% coverage ] ****** [708 done /515 queued / 16 running / 86 errors / 65% coverage ] ****** [709 done /515 queued / 16 running / 86 errors / 65% coverage ] ****** [709 done /515 queued / 16 running / 86 errors / 65% coverage ] ****** [710 done /515 queued / 16 running / 86 errors / 65% coverage ] ****** [710 done /515 queued / 16 running / 86 errors / 65% coverage ] ****** [711 done /516 queued / 16 running / 86 errors / 65% coverage ] ****** [711 done /516 queued / 16 running / 86 errors / 65% coverage ] ****** [712 done /517 queued / 16 running / 86 errors / 65% coverage ] ****** [712 done /517 queued / 16 running / 86 errors / 65% coverage ] ****** [713 done /517 queued / 16 running / 86 errors / 65% coverage ] ****** [713 done /517 queued / 16 running / 86 errors / 65% coverage ] ****** [714 done /516 queued / 16 running / 86 errors / 65% coverage ] ****** [714 done /516 queued / 16 running / 86 errors / 65% coverage ] ****** [715 done /516 queued / 16 running / 86 errors / 65% coverage ] ****** [715 done /516 queued / 16 running / 86 errors / 65% coverage ] ****** [716 done /517 queued / 16 running / 86 errors / 65% coverage ] ****** [716 done /517 queued / 16 running / 86 errors / 65% coverage ] ****** [717 done /518 queued / 16 running / 86 errors / 65% coverage ] ****** [717 done /518 queued / 16 running / 86 errors / 65% coverage ] ****** [718 done /517 queued / 16 running / 86 errors / 65% coverage ] ****** [718 done /517 queued / 16 running / 86 errors / 65% coverage ] ****** [719 done /519 queued / 16 running / 86 errors / 65% coverage ] ****** [719 done /519 queued / 16 running / 86 errors / 65% coverage ] ****** [720 done /520 queued / 16 running / 86 errors / 65% coverage ] ****** [720 done /520 queued / 16 running / 86 errors / 65% coverage ] ****** [721 done /521 queued / 16 running / 86 errors / 65% coverage ] ****** [721 done /521 queued / 16 running / 86 errors / 65% coverage ] ****** [722 done /523 queued / 16 running / 86 errors / 65% coverage ] ****** [722 done /523 queued / 16 running / 86 errors / 65% coverage ] ****** [723 done /522 queued / 16 running / 86 errors / 65% coverage ] ****** [723 done /522 queued / 16 running / 86 errors / 65% coverage ] ****** [724 done /523 queued / 16 running / 86 errors / 65% coverage ] ****** [724 done /523 queued / 16 running / 86 errors / 65% coverage ] ****** [725 done /522 queued / 16 running / 86 errors / 65% coverage ] ****** [725 done /522 queued / 16 running / 86 errors / 65% coverage ] ****** [726 done /523 queued / 16 running / 86 errors / 65% coverage ] ****** [726 done /523 queued / 16 running / 86 errors / 65% coverage ] ****** [727 done /523 queued / 16 running / 86 errors / 65% coverage ] ****** [727 done /523 queued / 16 running / 86 errors / 65% coverage ] ****** [728 done /524 queued / 16 running / 86 errors / 65% coverage ] ****** [728 done /524 queued / 16 running / 86 errors / 65% coverage ] ****** [729 done /527 queued / 16 running / 86 errors / 65% coverage ] ****** [729 done /527 queued / 16 running / 86 errors / 65% coverage ] ****** [730 done /527 queued / 16 running / 86 errors / 65% coverage ] ****** [730 done /527 queued / 16 running / 86 errors / 65% coverage ] ****** [731 done /530 queued / 16 running / 86 errors / 65% coverage ] ****** [731 done /530 queued / 16 running / 86 errors / 65% coverage ] ****** [732 done /530 queued / 16 running / 86 errors / 65% coverage ] ****** [732 done /530 queued / 16 running / 86 errors / 65% coverage ] ****** [733 done /529 queued / 16 running / 86 errors / 65% coverage ] ****** [733 done /529 queued / 16 running / 86 errors / 65% coverage ] ****** [734 done /529 queued / 16 running / 86 errors / 65% coverage ] ****** [734 done /529 queued / 16 running / 86 errors / 65% coverage ] ****** [735 done /533 queued / 16 running / 86 errors / 65% coverage ] ****** [735 done /533 queued / 16 running / 86 errors / 65% coverage ] ****** [736 done /533 queued / 16 running / 86 errors / 65% coverage ] ****** [736 done /533 queued / 16 running / 86 errors / 65% coverage ] ****** [737 done /532 queued / 16 running / 86 errors / 65% coverage ] ****** [737 done /532 queued / 16 running / 86 errors / 65% coverage ] ****** [738 done /533 queued / 16 running / 86 errors / 65% coverage ] ****** [738 done /533 queued / 16 running / 86 errors / 65% coverage ] ****** [739 done /537 queued / 16 running / 86 errors / 65% coverage ] ****** [739 done /537 queued / 16 running / 86 errors / 65% coverage ] ****** [740 done /540 queued / 16 running / 86 errors / 65% coverage ] ****** [740 done /540 queued / 16 running / 86 errors / 65% coverage ] ****** [741 done /541 queued / 16 running / 86 errors / 65% coverage ] ****** [741 done /541 queued / 16 running / 86 errors / 65% coverage ] ****** [742 done /542 queued / 16 running / 86 errors / 65% coverage ] ****** [742 done /542 queued / 16 running / 86 errors / 65% coverage ] ****** [743 done /543 queued / 16 running / 86 errors / 65% coverage ] ****** [743 done /543 queued / 16 running / 86 errors / 65% coverage ] ****** [744 done /542 queued / 16 running / 86 errors / 65% coverage ] ****** [744 done /542 queued / 16 running / 86 errors / 65% coverage ] ****** [745 done /543 queued / 16 running / 86 errors / 65% coverage ] ****** [745 done /543 queued / 16 running / 86 errors / 65% coverage ] ****** [746 done /542 queued / 16 running / 86 errors / 65% coverage ] ****** [746 done /542 queued / 16 running / 86 errors / 65% coverage ] ****** [747 done /542 queued / 16 running / 86 errors / 65% coverage ] ****** [747 done /542 queued / 16 running / 86 errors / 65% coverage ] ****** [748 done /543 queued / 16 running / 86 errors / 65% coverage ] ****** [748 done /543 queued / 16 running / 86 errors / 65% coverage ] ****** [749 done /543 queued / 16 running / 86 errors / 65% coverage ] ****** [749 done /543 queued / 16 running / 86 errors / 65% coverage ] ****** [750 done /543 queued / 16 running / 86 errors / 65% coverage ] ****** [750 done /543 queued / 16 running / 86 errors / 65% coverage ] ****** [751 done /543 queued / 16 running / 86 errors / 65% coverage ] ****** [751 done /543 queued / 16 running / 86 errors / 65% coverage ] ****** [752 done /543 queued / 16 running / 86 errors / 65% coverage ] ****** [752 done /543 queued / 16 running / 86 errors / 65% coverage ] ****** [753 done /542 queued / 16 running / 86 errors / 65% coverage ] ****** [753 done /542 queued / 16 running / 86 errors / 65% coverage ] ****** [754 done /542 queued / 16 running / 86 errors / 65% coverage ] ****** [754 done /542 queued / 16 running / 86 errors / 65% coverage ] ****** [755 done /542 queued / 16 running / 86 errors / 65% coverage ] ****** [755 done /542 queued / 16 running / 86 errors / 65% coverage ] ****** [756 done /541 queued / 16 running / 86 errors / 65% coverage ] ****** [756 done /541 queued / 16 running / 86 errors / 65% coverage ] ****** [757 done /542 queued / 16 running / 86 errors / 65% coverage ] ****** [757 done /542 queued / 16 running / 86 errors / 65% coverage ] ****** [758 done /542 queued / 16 running / 86 errors / 65% coverage ] ****** [758 done /542 queued / 16 running / 86 errors / 65% coverage ] ****** [759 done /543 queued / 16 running / 86 errors / 65% coverage ] ****** [759 done /543 queued / 16 running / 86 errors / 65% coverage ] ****** [760 done /543 queued / 16 running / 86 errors / 65% coverage ] ****** [760 done /543 queued / 16 running / 86 errors / 65% coverage ] ****** [761 done /542 queued / 16 running / 86 errors / 65% coverage ] ****** [761 done /542 queued / 16 running / 86 errors / 65% coverage ] ****** [762 done /541 queued / 16 running / 86 errors / 65% coverage ] ****** [762 done /541 queued / 16 running / 86 errors / 65% coverage ] ****** [763 done /541 queued / 16 running / 86 errors / 65% coverage ] ****** [763 done /541 queued / 16 running / 86 errors / 65% coverage ] ****** [764 done /541 queued / 16 running / 86 errors / 65% coverage ] ****** [764 done /541 queued / 16 running / 86 errors / 65% coverage ] ****** [765 done /544 queued / 16 running / 86 errors / 65% coverage ] ****** [765 done /544 queued / 16 running / 86 errors / 65% coverage ] ****** [766 done /547 queued / 16 running / 86 errors / 65% coverage ] ****** [766 done /547 queued / 16 running / 86 errors / 65% coverage ] ****** [767 done /548 queued / 16 running / 86 errors / 65% coverage ] ****** [767 done /548 queued / 16 running / 86 errors / 65% coverage ] ****** [768 done /549 queued / 16 running / 86 errors / 65% coverage ] ****** [768 done /549 queued / 16 running / 86 errors / 65% coverage ] ****** [769 done /551 queued / 16 running / 86 errors / 65% coverage ] ****** [769 done /551 queued / 16 running / 86 errors / 65% coverage ] ****** [770 done /554 queued / 16 running / 86 errors / 65% coverage ] ****** [770 done /554 queued / 16 running / 86 errors / 65% coverage ] ****** [771 done /556 queued / 16 running / 86 errors / 65% coverage ] ****** [771 done /556 queued / 16 running / 86 errors / 65% coverage ] ****** [772 done /557 queued / 16 running / 86 errors / 65% coverage ] ****** [772 done /557 queued / 16 running / 86 errors / 65% coverage ] ****** [773 done /559 queued / 16 running / 86 errors / 65% coverage ] ****** [773 done /559 queued / 16 running / 86 errors / 65% coverage ] ****** [774 done /562 queued / 16 running / 86 errors / 65% coverage ] ****** [774 done /562 queued / 16 running / 86 errors / 65% coverage ] ****** [775 done /564 queued / 16 running / 86 errors / 65% coverage ] ****** [775 done /564 queued / 16 running / 86 errors / 65% coverage ] ****** [776 done /566 queued / 16 running / 86 errors / 65% coverage ] ****** [776 done /566 queued / 16 running / 86 errors / 65% coverage ] ****** [777 done /567 queued / 16 running / 86 errors / 65% coverage ] ****** [777 done /567 queued / 16 running / 86 errors / 65% coverage ] ****** [778 done /568 queued / 16 running / 86 errors / 65% coverage ] ****** [778 done /568 queued / 16 running / 86 errors / 65% coverage ] ****** [779 done /570 queued / 16 running / 86 errors / 65% coverage ] ****** [779 done /570 queued / 16 running / 86 errors / 65% coverage ] ****** [780 done /573 queued / 16 running / 86 errors / 65% coverage ] ****** [780 done /573 queued / 16 running / 86 errors / 65% coverage ] ****** [781 done /573 queued / 16 running / 86 errors / 65% coverage ] ****** [781 done /573 queued / 16 running / 86 errors / 65% coverage ] ****** [782 done /572 queued / 16 running / 86 errors / 65% coverage ] ****** [782 done /572 queued / 16 running / 86 errors / 65% coverage ] ****** [783 done /571 queued / 16 running / 86 errors / 65% coverage ] ****** [783 done /571 queued / 16 running / 86 errors / 65% coverage ] ****** [784 done /570 queued / 16 running / 86 errors / 65% coverage ] ****** [784 done /570 queued / 16 running / 86 errors / 65% coverage ] ****** [785 done /570 queued / 16 running / 86 errors / 65% coverage ] ****** [785 done /570 queued / 16 running / 86 errors / 65% coverage ] ****** [786 done /569 queued / 16 running / 86 errors / 65% coverage ] ****** [786 done /569 queued / 16 running / 86 errors / 65% coverage ] ****** [787 done /569 queued / 16 running / 86 errors / 65% coverage ] ****** [787 done /569 queued / 16 running / 86 errors / 65% coverage ] ****** [788 done /568 queued / 16 running / 86 errors / 65% coverage ] ****** [788 done /568 queued / 16 running / 86 errors / 65% coverage ] ****** [789 done /567 queued / 16 running / 86 errors / 65% coverage ] ****** [789 done /567 queued / 16 running / 86 errors / 65% coverage ] ****** [790 done /567 queued / 16 running / 86 errors / 65% coverage ] ****** [790 done /567 queued / 16 running / 86 errors / 65% coverage ] ****** [791 done /566 queued / 16 running / 86 errors / 65% coverage ] ****** [791 done /566 queued / 16 running / 86 errors / 65% coverage ] ****** [792 done /565 queued / 16 running / 86 errors / 65% coverage ] ****** [792 done /565 queued / 16 running / 86 errors / 65% coverage ] ****** [793 done /564 queued / 16 running / 86 errors / 65% coverage ] ****** [793 done /564 queued / 16 running / 86 errors / 65% coverage ] ****** [794 done /563 queued / 16 running / 86 errors / 65% coverage ] ****** [794 done /563 queued / 16 running / 86 errors / 65% coverage ] ****** [795 done /562 queued / 16 running / 86 errors / 65% coverage ] ****** [795 done /562 queued / 16 running / 86 errors / 65% coverage ] ****** [796 done /562 queued / 16 running / 86 errors / 65% coverage ] ****** [796 done /562 queued / 16 running / 86 errors / 65% coverage ] ****** [797 done /561 queued / 16 running / 86 errors / 65% coverage ] ****** [797 done /561 queued / 16 running / 86 errors / 65% coverage ] ****** [798 done /560 queued / 16 running / 86 errors / 65% coverage ] ****** [798 done /560 queued / 16 running / 86 errors / 65% coverage ] ****** [799 done /560 queued / 16 running / 86 errors / 65% coverage ] ****** [799 done /560 queued / 16 running / 86 errors / 65% coverage ] ****** [800 done /559 queued / 16 running / 86 errors / 65% coverage ] ****** [800 done /559 queued / 16 running / 86 errors / 65% coverage ] ****** [801 done /558 queued / 16 running / 86 errors / 65% coverage ] ****** [801 done /558 queued / 16 running / 86 errors / 65% coverage ] ****** [802 done /558 queued / 16 running / 86 errors / 65% coverage ] ****** [802 done /558 queued / 16 running / 86 errors / 65% coverage ] ****** [803 done /557 queued / 16 running / 86 errors / 65% coverage ] ****** [803 done /557 queued / 16 running / 86 errors / 65% coverage ] ****** [804 done /556 queued / 16 running / 86 errors / 65% coverage ] ****** [804 done /556 queued / 16 running / 86 errors / 65% coverage ] ****** [805 done /555 queued / 16 running / 86 errors / 65% coverage ] ****** [805 done /555 queued / 16 running / 86 errors / 65% coverage ] ****** [806 done /555 queued / 16 running / 86 errors / 65% coverage ] ****** [806 done /555 queued / 16 running / 86 errors / 65% coverage ] ****** [807 done /559 queued / 16 running / 86 errors / 65% coverage ] ****** [807 done /559 queued / 16 running / 86 errors / 65% coverage ] ****** [808 done /561 queued / 16 running / 86 errors / 65% coverage ] ****** [808 done /561 queued / 16 running / 86 errors / 65% coverage ] ****** [809 done /562 queued / 16 running / 86 errors / 65% coverage ] ****** [809 done /562 queued / 16 running / 86 errors / 65% coverage ] ****** [810 done /565 queued / 16 running / 86 errors / 65% coverage ] ****** [810 done /565 queued / 16 running / 86 errors / 65% coverage ] ****** [811 done /567 queued / 16 running / 86 errors / 65% coverage ] ****** [811 done /567 queued / 16 running / 86 errors / 65% coverage ] ****** [812 done /568 queued / 16 running / 86 errors / 65% coverage ] ****** [812 done /568 queued / 16 running / 86 errors / 65% coverage ] ****** [813 done /572 queued / 16 running / 86 errors / 65% coverage ] ****** [813 done /572 queued / 16 running / 86 errors / 65% coverage ] ****** [814 done /573 queued / 16 running / 86 errors / 65% coverage ] ****** [814 done /573 queued / 16 running / 86 errors / 65% coverage ] ****** [815 done /573 queued / 16 running / 86 errors / 65% coverage ] ****** [815 done /573 queued / 16 running / 86 errors / 65% coverage ] ****** [816 done /575 queued / 16 running / 86 errors / 65% coverage ] ****** [816 done /575 queued / 16 running / 86 errors / 65% coverage ] ****** [817 done /576 queued / 16 running / 86 errors / 65% coverage ] ****** [817 done /576 queued / 16 running / 86 errors / 65% coverage ] ****** [818 done /576 queued / 16 running / 86 errors / 65% coverage ] ****** [818 done /576 queued / 16 running / 86 errors / 65% coverage ] ****** [819 done /578 queued / 16 running / 87 errors / 65% coverage ] ****** [819 done /578 queued / 16 running / 87 errors / 65% coverage ] ****** [820 done /580 queued / 16 running / 87 errors / 65% coverage ] ****** [820 done /580 queued / 16 running / 87 errors / 65% coverage ] ****** [821 done /581 queued / 16 running / 87 errors / 65% coverage ] ****** [821 done /581 queued / 16 running / 87 errors / 65% coverage ] ****** [822 done /583 queued / 16 running / 87 errors / 65% coverage ] ****** [822 done /583 queued / 16 running / 87 errors / 65% coverage ] ****** [823 done /583 queued / 16 running / 87 errors / 65% coverage ] ****** [823 done /583 queued / 16 running / 87 errors / 65% coverage ] ****** [824 done /584 queued / 16 running / 87 errors / 65% coverage ] ****** [824 done /584 queued / 16 running / 87 errors / 65% coverage ] ****** [825 done /584 queued / 16 running / 87 errors / 65% coverage ] ****** [825 done /584 queued / 16 running / 87 errors / 65% coverage ] ****** [826 done /584 queued / 16 running / 87 errors / 65% coverage ] ****** [826 done /584 queued / 16 running / 87 errors / 65% coverage ] ****** [827 done /586 queued / 16 running / 87 errors / 65% coverage ] ****** [827 done /586 queued / 16 running / 87 errors / 65% coverage ] ****** [828 done /588 queued / 16 running / 87 errors / 65% coverage ] ****** [828 done /588 queued / 16 running / 87 errors / 65% coverage ] ****** [829 done /589 queued / 16 running / 87 errors / 65% coverage ] ****** [829 done /589 queued / 16 running / 87 errors / 65% coverage ] ****** [830 done /589 queued / 16 running / 87 errors / 65% coverage ] ****** [830 done /589 queued / 16 running / 87 errors / 65% coverage ] ****** [831 done /591 queued / 16 running / 87 errors / 65% coverage ] ****** [831 done /591 queued / 16 running / 87 errors / 65% coverage ] ****** [832 done /592 queued / 16 running / 87 errors / 65% coverage ] ****** [832 done /592 queued / 16 running / 87 errors / 65% coverage ] ****** [833 done /592 queued / 16 running / 87 errors / 65% coverage ] ****** [833 done /592 queued / 16 running / 87 errors / 65% coverage ] ****** [834 done /594 queued / 16 running / 87 errors / 65% coverage ] ****** [834 done /594 queued / 16 running / 87 errors / 65% coverage ] ****** [835 done /593 queued / 16 running / 88 errors / 65% coverage ] ****** [835 done /593 queued / 16 running / 88 errors / 65% coverage ] ****** [836 done /592 queued / 16 running / 89 errors / 65% coverage ] ****** [836 done /592 queued / 16 running / 89 errors / 65% coverage ] ****** [837 done /591 queued / 16 running / 89 errors / 65% coverage ] ****** [837 done /591 queued / 16 running / 89 errors / 65% coverage ] ****** [838 done /590 queued / 16 running / 89 errors / 65% coverage ] ****** [838 done /590 queued / 16 running / 89 errors / 65% coverage ] ****** [839 done /590 queued / 16 running / 89 errors / 65% coverage ] ****** [839 done /590 queued / 16 running / 89 errors / 65% coverage ] ****** [840 done /593 queued / 16 running / 90 errors / 65% coverage ] ****** [840 done /593 queued / 16 running / 90 errors / 65% coverage ] ****** [841 done /594 queued / 16 running / 90 errors / 65% coverage ] ****** [841 done /594 queued / 16 running / 90 errors / 65% coverage ] ****** [842 done /595 queued / 16 running / 91 errors / 65% coverage ] ****** [842 done /595 queued / 16 running / 91 errors / 65% coverage ] ****** [843 done /597 queued / 16 running / 91 errors / 65% coverage ] ****** [843 done /597 queued / 16 running / 91 errors / 65% coverage ] ****** [844 done /598 queued / 16 running / 91 errors / 65% coverage ] ****** [844 done /598 queued / 16 running / 91 errors / 65% coverage ] ****** [845 done /598 queued / 16 running / 91 errors / 65% coverage ] ****** [845 done /598 queued / 16 running / 91 errors / 65% coverage ] ****** [846 done /599 queued / 16 running / 91 errors / 65% coverage ] ****** [846 done /599 queued / 16 running / 91 errors / 65% coverage ] ****** [847 done /601 queued / 16 running / 91 errors / 65% coverage ] ****** [847 done /601 queued / 16 running / 91 errors / 65% coverage ] ****** [848 done /604 queued / 16 running / 91 errors / 65% coverage ] ****** [848 done /604 queued / 16 running / 91 errors / 65% coverage ] ****** [849 done /609 queued / 16 running / 91 errors / 65% coverage ] ****** [849 done /609 queued / 16 running / 91 errors / 65% coverage ] ****** [850 done /609 queued / 16 running / 91 errors / 65% coverage ] ****** [850 done /609 queued / 16 running / 91 errors / 65% coverage ] ****** [851 done /610 queued / 16 running / 91 errors / 65% coverage ] ****** [851 done /610 queued / 16 running / 91 errors / 65% coverage ] ****** [852 done /611 queued / 16 running / 91 errors / 65% coverage ] ****** [852 done /611 queued / 16 running / 91 errors / 65% coverage ] ****** [853 done /612 queued / 16 running / 91 errors / 65% coverage ] ****** [853 done /612 queued / 16 running / 91 errors / 65% coverage ] ****** [854 done /612 queued / 16 running / 91 errors / 65% coverage ] ****** [854 done /612 queued / 16 running / 91 errors / 65% coverage ] ****** [855 done /613 queued / 16 running / 91 errors / 65% coverage ] ****** [855 done /613 queued / 16 running / 91 errors / 65% coverage ] ****** [856 done /614 queued / 16 running / 92 errors / 65% coverage ] ****** [856 done /614 queued / 16 running / 92 errors / 65% coverage ] ****** [857 done /615 queued / 16 running / 93 errors / 65% coverage ] ****** [857 done /615 queued / 16 running / 93 errors / 65% coverage ] ****** [858 done /617 queued / 16 running / 94 errors / 65% coverage ] ****** [858 done /617 queued / 16 running / 94 errors / 65% coverage ] ****** [859 done /616 queued / 16 running / 95 errors / 65% coverage ] ****** [859 done /616 queued / 16 running / 95 errors / 65% coverage ] ****** [860 done /619 queued / 16 running / 95 errors / 65% coverage ] ****** [860 done /619 queued / 16 running / 95 errors / 65% coverage ] ****** [861 done /620 queued / 16 running / 95 errors / 65% coverage ] ****** [861 done /620 queued / 16 running / 95 errors / 65% coverage ] ****** [862 done /621 queued / 16 running / 95 errors / 65% coverage ] ****** [862 done /621 queued / 16 running / 95 errors / 65% coverage ] ****** [863 done /624 queued / 16 running / 95 errors / 65% coverage ] ****** [863 done /624 queued / 16 running / 95 errors / 65% coverage ] ****** [864 done /626 queued / 16 running / 95 errors / 65% coverage ] ****** [864 done /626 queued / 16 running / 95 errors / 65% coverage ] ****** [865 done /627 queued / 16 running / 95 errors / 65% coverage ] ****** [865 done /627 queued / 16 running / 95 errors / 65% coverage ] ****** [866 done /629 queued / 16 running / 95 errors / 65% coverage ] ****** [866 done /629 queued / 16 running / 95 errors / 65% coverage ] ****** [867 done /630 queued / 16 running / 95 errors / 65% coverage ] ****** [867 done /630 queued / 16 running / 95 errors / 65% coverage ] ****** [868 done /631 queued / 16 running / 95 errors / 65% coverage ] ****** [868 done /631 queued / 16 running / 95 errors / 65% coverage ] ****** [869 done /631 queued / 16 running / 95 errors / 65% coverage ] ****** [869 done /631 queued / 16 running / 95 errors / 65% coverage ] ****** [870 done /632 queued / 16 running / 95 errors / 65% coverage ] ****** [870 done /632 queued / 16 running / 95 errors / 65% coverage ] ****** [871 done /631 queued / 16 running / 95 errors / 65% coverage ] ****** [871 done /631 queued / 16 running / 95 errors / 65% coverage ] ****** [872 done /632 queued / 16 running / 95 errors / 65% coverage ] ****** [872 done /632 queued / 16 running / 95 errors / 65% coverage ] ****** [873 done /631 queued / 16 running / 96 errors / 65% coverage ] ****** [873 done /631 queued / 16 running / 96 errors / 65% coverage ] ****** [874 done /631 queued / 16 running / 97 errors / 65% coverage ] ****** [874 done /631 queued / 16 running / 97 errors / 65% coverage ] ****** [875 done /630 queued / 16 running / 97 errors / 65% coverage ] ****** [875 done /630 queued / 16 running / 97 errors / 65% coverage ] ****** [876 done /632 queued / 16 running / 98 errors / 65% coverage ] ****** [876 done /632 queued / 16 running / 98 errors / 65% coverage ] ****** [877 done /631 queued / 16 running / 98 errors / 65% coverage ] ****** [877 done /631 queued / 16 running / 98 errors / 65% coverage ] ****** [878 done /631 queued / 16 running / 98 errors / 65% coverage ] ****** [878 done /631 queued / 16 running / 98 errors / 65% coverage ] ****** [879 done /630 queued / 16 running / 98 errors / 65% coverage ] ****** [879 done /630 queued / 16 running / 98 errors / 65% coverage ] ****** [880 done /629 queued / 16 running / 98 errors / 65% coverage ] ****** [880 done /629 queued / 16 running / 98 errors / 65% coverage ] ****** [881 done /631 queued / 16 running / 98 errors / 65% coverage ] ****** [881 done /631 queued / 16 running / 98 errors / 65% coverage ] ****** [882 done /631 queued / 16 running / 98 errors / 65% coverage ] ****** [882 done /631 queued / 16 running / 98 errors / 65% coverage ] ****** [883 done /630 queued / 16 running / 98 errors / 65% coverage ] ****** [883 done /630 queued / 16 running / 98 errors / 65% coverage ] ****** [884 done /629 queued / 16 running / 98 errors / 65% coverage ] ****** [884 done /629 queued / 16 running / 98 errors / 65% coverage ] ****** [885 done /633 queued / 16 running / 98 errors / 65% coverage ] ****** [885 done /633 queued / 16 running / 98 errors / 65% coverage ] ****** [886 done /633 queued / 16 running / 98 errors / 65% coverage ] ****** [886 done /633 queued / 16 running / 98 errors / 65% coverage ] ****** [887 done /637 queued / 16 running / 98 errors / 65% coverage ] ****** [887 done /637 queued / 16 running / 98 errors / 65% coverage ] ****** [888 done /642 queued / 16 running / 98 errors / 65% coverage ] ****** [888 done /642 queued / 16 running / 98 errors / 65% coverage ] ****** [889 done /643 queued / 16 running / 98 errors / 65% coverage ] ****** [889 done /643 queued / 16 running / 98 errors / 65% coverage ] ****** [890 done /644 queued / 16 running / 98 errors / 65% coverage ] ****** [890 done /644 queued / 16 running / 98 errors / 65% coverage ] ****** [891 done /645 queued / 16 running / 98 errors / 65% coverage ] ****** [891 done /645 queued / 16 running / 98 errors / 65% coverage ] ****** [892 done /647 queued / 16 running / 99 errors / 65% coverage ] ****** [892 done /647 queued / 16 running / 99 errors / 65% coverage ] ****** [893 done /649 queued / 16 running / 99 errors / 65% coverage ] ****** [893 done /649 queued / 16 running / 99 errors / 65% coverage ] ****** [894 done /652 queued / 16 running / 99 errors / 65% coverage ] ****** [894 done /652 queued / 16 running / 99 errors / 65% coverage ] ****** [895 done /654 queued / 16 running / 99 errors / 65% coverage ] ****** [895 done /654 queued / 16 running / 99 errors / 65% coverage ] ****** [896 done /655 queued / 16 running / 99 errors / 65% coverage ] ****** [896 done /655 queued / 16 running / 99 errors / 65% coverage ] ****** [897 done /657 queued / 16 running / 99 errors / 65% coverage ] ****** [897 done /657 queued / 16 running / 99 errors / 65% coverage ] ****** [898 done /658 queued / 16 running / 99 errors / 65% coverage ] ****** [898 done /658 queued / 16 running / 99 errors / 65% coverage ] ****** [899 done /658 queued / 16 running / 99 errors / 65% coverage ] ****** [899 done /658 queued / 16 running / 99 errors / 65% coverage ] ****** [900 done /663 queued / 16 running / 99 errors / 65% coverage ] ****** [900 done /663 queued / 16 running / 99 errors / 65% coverage ] ****** [901 done /664 queued / 16 running / 99 errors / 65% coverage ] ****** [901 done /664 queued / 16 running / 99 errors / 65% coverage ] ****** [902 done /664 queued / 16 running / 99 errors / 65% coverage ] ****** [902 done /664 queued / 16 running / 99 errors / 65% coverage ] ****** [903 done /664 queued / 16 running / 99 errors / 65% coverage ] ****** [903 done /664 queued / 16 running / 99 errors / 65% coverage ] ****** [904 done /665 queued / 16 running / 99 errors / 65% coverage ] ****** [904 done /665 queued / 16 running / 99 errors / 65% coverage ] ****** [905 done /667 queued / 16 running / 99 errors / 65% coverage ] ****** [905 done /667 queued / 16 running / 99 errors / 65% coverage ] ****** [906 done /667 queued / 16 running / 99 errors / 65% coverage ] ****** [906 done /667 queued / 16 running / 99 errors / 65% coverage ] ****** [907 done /668 queued / 16 running / 99 errors / 65% coverage ] ****** [907 done /668 queued / 16 running / 99 errors / 65% coverage ] ****** [908 done /668 queued / 16 running / 99 errors / 65% coverage ] ****** [908 done /668 queued / 16 running / 99 errors / 65% coverage ] ****** [909 done /668 queued / 16 running / 99 errors / 65% coverage ] ****** [909 done /668 queued / 16 running / 99 errors / 65% coverage ] ****** [910 done /668 queued / 16 running / 99 errors / 65% coverage ] ****** [910 done /668 queued / 16 running / 99 errors / 65% coverage ] ****** [911 done /667 queued / 16 running / 99 errors / 65% coverage ] ****** [911 done /667 queued / 16 running / 99 errors / 65% coverage ] ****** [912 done /668 queued / 16 running / 99 errors / 65% coverage ] ****** [912 done /668 queued / 16 running / 99 errors / 65% coverage ] ****** [913 done /669 queued / 16 running / 99 errors / 65% coverage ] ****** [913 done /669 queued / 16 running / 99 errors / 65% coverage ] ****** [914 done /670 queued / 16 running / 99 errors / 65% coverage ] ****** [914 done /670 queued / 16 running / 99 errors / 65% coverage ] ****** [915 done /673 queued / 16 running / 99 errors / 65% coverage ] ****** [915 done /673 queued / 16 running / 99 errors / 65% coverage ] ****** [916 done /674 queued / 16 running / 99 errors / 65% coverage ] ****** [916 done /674 queued / 16 running / 99 errors / 65% coverage ] ****** [917 done /675 queued / 16 running / 99 errors / 65% coverage ] ****** [917 done /675 queued / 16 running / 99 errors / 65% coverage ] ****** [918 done /677 queued / 16 running / 99 errors / 65% coverage ] ****** [918 done /677 queued / 16 running / 99 errors / 65% coverage ] ****** [919 done /678 queued / 16 running / 99 errors / 65% coverage ] ****** [919 done /678 queued / 16 running / 99 errors / 65% coverage ] ****** [920 done /679 queued / 16 running / 99 errors / 65% coverage ] ****** [920 done /679 queued / 16 running / 99 errors / 65% coverage ] ****** [921 done /680 queued / 16 running / 99 errors / 65% coverage ] ****** [921 done /680 queued / 16 running / 99 errors / 65% coverage ] ****** [922 done /681 queued / 16 running / 99 errors / 65% coverage ] ****** [922 done /681 queued / 16 running / 99 errors / 65% coverage ] ****** [923 done /685 queued / 16 running / 99 errors / 65% coverage ] ****** [923 done /685 queued / 16 running / 99 errors / 65% coverage ] ****** [924 done /689 queued / 16 running / 99 errors / 65% coverage ] ****** [924 done /689 queued / 16 running / 99 errors / 65% coverage ] ****** [925 done /693 queued / 16 running / 99 errors / 65% coverage ] ****** [925 done /693 queued / 16 running / 99 errors / 65% coverage ] ****** [926 done /697 queued / 16 running / 99 errors / 65% coverage ] ****** [926 done /697 queued / 16 running / 99 errors / 65% coverage ] ****** [927 done /698 queued / 16 running / 99 errors / 65% coverage ] ****** [927 done /698 queued / 16 running / 99 errors / 65% coverage ] ****** [928 done /698 queued / 16 running / 99 errors / 65% coverage ] ****** [928 done /698 queued / 16 running / 99 errors / 65% coverage ] ****** [929 done /697 queued / 16 running / 99 errors / 65% coverage ] ****** [929 done /697 queued / 16 running / 99 errors / 65% coverage ] ****** [930 done /698 queued / 16 running / 99 errors / 65% coverage ] ****** [930 done /698 queued / 16 running / 99 errors / 65% coverage ] ****** [931 done /699 queued / 16 running / 99 errors / 65% coverage ] ****** [931 done /699 queued / 16 running / 99 errors / 65% coverage ] ****** [932 done /704 queued / 16 running / 99 errors / 65% coverage ] ****** [932 done /704 queued / 16 running / 99 errors / 65% coverage ] ****** [933 done /707 queued / 16 running / 99 errors / 65% coverage ] ****** [933 done /707 queued / 16 running / 99 errors / 65% coverage ] ****** [934 done /709 queued / 16 running / 99 errors / 65% coverage ] ****** [934 done /709 queued / 16 running / 99 errors / 65% coverage ] ****** [935 done /711 queued / 16 running / 99 errors / 65% coverage ] ****** [935 done /711 queued / 16 running / 99 errors / 65% coverage ] ****** [936 done /714 queued / 16 running / 99 errors / 65% coverage ] ****** [936 done /714 queued / 16 running / 99 errors / 65% coverage ] ****** [937 done /715 queued / 16 running / 99 errors / 65% coverage ] ****** [937 done /715 queued / 16 running / 99 errors / 65% coverage ] ****** [938 done /718 queued / 16 running / 99 errors / 65% coverage ] ****** [938 done /718 queued / 16 running / 99 errors / 65% coverage ] ****** [939 done /718 queued / 16 running / 99 errors / 65% coverage ] ****** [939 done /718 queued / 16 running / 99 errors / 65% coverage ] ****** [940 done /718 queued / 16 running / 99 errors / 65% coverage ] ****** [940 done /718 queued / 16 running / 99 errors / 65% coverage ] ****** [941 done /718 queued / 16 running / 99 errors / 65% coverage ] ****** [941 done /718 queued / 16 running / 99 errors / 65% coverage ] ****** [942 done /718 queued / 16 running / 99 errors / 65% coverage ] ****** [942 done /718 queued / 16 running / 99 errors / 65% coverage ] ****** [943 done /718 queued / 16 running / 99 errors / 65% coverage ] ****** [943 done /718 queued / 16 running / 99 errors / 65% coverage ] ****** [944 done /718 queued / 16 running / 99 errors / 65% coverage ] ****** [944 done /718 queued / 16 running / 99 errors / 65% coverage ] ****** [945 done /718 queued / 16 running / 99 errors / 65% coverage ] ****** [945 done /718 queued / 16 running / 99 errors / 65% coverage ] ****** [946 done /719 queued / 16 running / 99 errors / 65% coverage ] ****** [946 done /719 queued / 16 running / 99 errors / 65% coverage ] ****** [947 done /719 queued / 16 running / 99 errors / 65% coverage ] ****** [947 done /719 queued / 16 running / 99 errors / 65% coverage ] ****** [948 done /719 queued / 16 running / 99 errors / 65% coverage ] ****** [948 done /719 queued / 16 running / 99 errors / 65% coverage ] ****** [949 done /721 queued / 16 running / 99 errors / 65% coverage ] ****** [949 done /721 queued / 16 running / 99 errors / 65% coverage ] ****** [950 done /721 queued / 16 running / 99 errors / 65% coverage ] ****** [950 done /721 queued / 16 running / 99 errors / 65% coverage ] ****** [951 done /721 queued / 16 running / 99 errors / 65% coverage ] ****** [951 done /721 queued / 16 running / 99 errors / 65% coverage ] ****** [952 done /722 queued / 16 running / 99 errors / 65% coverage ] ****** [952 done /722 queued / 16 running / 99 errors / 65% coverage ] ****** [953 done /723 queued / 16 running / 99 errors / 65% coverage ] ****** [953 done /723 queued / 16 running / 99 errors / 65% coverage ] ****** [954 done /723 queued / 16 running / 99 errors / 65% coverage ] ****** [954 done /723 queued / 16 running / 99 errors / 65% coverage ] ****** [955 done /723 queued / 16 running / 99 errors / 65% coverage ] ****** [955 done /723 queued / 16 running / 99 errors / 65% coverage ] ****** [956 done /723 queued / 16 running / 99 errors / 65% coverage ] ****** [956 done /723 queued / 16 running / 99 errors / 65% coverage ] ****** [957 done /722 queued / 16 running / 99 errors / 65% coverage ] ****** [957 done /722 queued / 16 running / 99 errors / 65% coverage ] ****** [958 done /721 queued / 16 running / 99 errors / 65% coverage ] ****** [958 done /721 queued / 16 running / 99 errors / 65% coverage ] ****** [959 done /722 queued / 16 running / 99 errors / 65% coverage ] ****** [959 done /722 queued / 16 running / 99 errors / 65% coverage ] ****** [960 done /722 queued / 16 running / 99 errors / 65% coverage ] ****** [960 done /722 queued / 16 running / 99 errors / 65% coverage ] ****** [961 done /721 queued / 16 running / 99 errors / 65% coverage ] ****** [961 done /721 queued / 16 running / 99 errors / 65% coverage ] ****** [962 done /721 queued / 16 running / 99 errors / 65% coverage ] ****** [962 done /721 queued / 16 running / 99 errors / 65% coverage ] ****** [963 done /723 queued / 16 running / 99 errors / 65% coverage ] ****** [963 done /723 queued / 16 running / 99 errors / 65% coverage ] ****** [964 done /722 queued / 16 running / 99 errors / 65% coverage ] ****** [964 done /722 queued / 16 running / 99 errors / 65% coverage ] ****** [965 done /721 queued / 16 running / 99 errors / 65% coverage ] ****** [965 done /721 queued / 16 running / 99 errors / 65% coverage ] ****** [966 done /720 queued / 16 running / 99 errors / 65% coverage ] ****** [966 done /720 queued / 16 running / 99 errors / 65% coverage ] ****** [967 done /723 queued / 16 running / 99 errors / 65% coverage ] ****** [967 done /723 queued / 16 running / 99 errors / 65% coverage ] ****** [968 done /722 queued / 16 running / 99 errors / 65% coverage ] ****** [968 done /722 queued / 16 running / 99 errors / 65% coverage ] ****** [969 done /721 queued / 16 running / 99 errors / 65% coverage ] ****** [969 done /721 queued / 16 running / 99 errors / 65% coverage ] ****** [970 done /724 queued / 16 running / 99 errors / 65% coverage ] ****** [970 done /724 queued / 16 running / 99 errors / 65% coverage ] ****** [971 done /723 queued / 16 running / 99 errors / 65% coverage ] ****** [971 done /723 queued / 16 running / 99 errors / 65% coverage ] ****** [972 done /722 queued / 16 running / 99 errors / 65% coverage ] ****** [972 done /722 queued / 16 running / 99 errors / 65% coverage ] ****** [973 done /723 queued / 16 running / 99 errors / 65% coverage ] ****** [973 done /723 queued / 16 running / 99 errors / 65% coverage ] ****** [974 done /726 queued / 16 running / 99 errors / 65% coverage ] ****** [974 done /726 queued / 16 running / 99 errors / 65% coverage ] ****** [975 done /726 queued / 16 running / 99 errors / 65% coverage ] ****** [975 done /726 queued / 16 running / 99 errors / 65% coverage ] ****** [976 done /727 queued / 16 running / 99 errors / 65% coverage ] ****** [976 done /727 queued / 16 running / 99 errors / 65% coverage ] ****** [977 done /730 queued / 16 running / 99 errors / 65% coverage ] ****** [977 done /730 queued / 16 running / 99 errors / 65% coverage ] ****** [978 done /729 queued / 16 running / 99 errors / 65% coverage ] ****** [978 done /729 queued / 16 running / 99 errors / 65% coverage ] ****** [979 done /730 queued / 16 running / 99 errors / 65% coverage ] ****** [979 done /730 queued / 16 running / 99 errors / 65% coverage ] ****** [980 done /731 queued / 16 running / 99 errors / 65% coverage ] ****** [980 done /731 queued / 16 running / 99 errors / 65% coverage ] ****** [981 done /735 queued / 16 running / 99 errors / 65% coverage ] ****** [981 done /735 queued / 16 running / 99 errors / 65% coverage ] ****** [982 done /736 queued / 16 running / 99 errors / 65% coverage ] ****** [982 done /736 queued / 16 running / 99 errors / 65% coverage ] ****** [983 done /739 queued / 16 running / 99 errors / 65% coverage ] ****** [983 done /739 queued / 16 running / 99 errors / 65% coverage ] ****** [984 done /743 queued / 16 running / 99 errors / 65% coverage ] ****** [984 done /743 queued / 16 running / 99 errors / 65% coverage ] ****** [985 done /744 queued / 16 running / 99 errors / 65% coverage ] ****** [985 done /744 queued / 16 running / 99 errors / 65% coverage ] ****** [986 done /747 queued / 16 running / 99 errors / 65% coverage ] ****** [986 done /747 queued / 16 running / 99 errors / 65% coverage ] ****** [987 done /748 queued / 16 running / 99 errors / 65% coverage ] ****** [987 done /748 queued / 16 running / 99 errors / 65% coverage ] ****** [988 done /749 queued / 16 running / 99 errors / 65% coverage ] ****** [988 done /749 queued / 16 running / 99 errors / 65% coverage ] ****** [989 done /750 queued / 16 running / 99 errors / 65% coverage ] ****** [989 done /750 queued / 16 running / 99 errors / 65% coverage ] ****** [990 done /749 queued / 16 running / 99 errors / 65% coverage ] ****** [990 done /749 queued / 16 running / 99 errors / 65% coverage ] ****** [991 done /748 queued / 16 running / 99 errors / 65% coverage ] ****** [991 done /748 queued / 16 running / 99 errors / 65% coverage ] ****** [992 done /748 queued / 16 running / 99 errors / 65% coverage ] ****** [992 done /748 queued / 16 running / 99 errors / 65% coverage ] ****** [993 done /747 queued / 16 running / 99 errors / 65% coverage ] ****** [993 done /747 queued / 16 running / 99 errors / 65% coverage ] ****** [994 done /748 queued / 16 running / 99 errors / 65% coverage ] ****** [994 done /748 queued / 16 running / 99 errors / 65% coverage ] ****** [995 done /748 queued / 16 running / 99 errors / 65% coverage ] ****** [995 done /748 queued / 16 running / 99 errors / 65% coverage ] ****** [996 done /747 queued / 16 running / 99 errors / 65% coverage ] ****** [996 done /747 queued / 16 running / 99 errors / 65% coverage ] ****** [997 done /747 queued / 16 running / 99 errors / 65% coverage ] ****** [997 done /747 queued / 16 running / 99 errors / 65% coverage ] ****** [998 done /746 queued / 16 running / 99 errors / 65% coverage ] ****** [998 done /746 queued / 16 running / 99 errors / 65% coverage ] ****** [999 done /746 queued / 16 running / 99 errors / 65% coverage ] ****** [999 done /746 queued / 16 running / 99 errors / 65% coverage ] ****** [1000 done /746 queued / 16 running / 99 errors / 65% coverage ] ****** [1000 done /746 queued / 16 running / 99 errors / 65% coverage ] ****** [1001 done /747 queued / 16 running / 99 errors / 65% coverage ] ****** [1001 done /747 queued / 16 running / 99 errors / 65% coverage ] ****** [1002 done /747 queued / 16 running / 99 errors / 65% coverage ] ****** [1002 done /747 queued / 16 running / 99 errors / 65% coverage ] ****** [1003 done /748 queued / 16 running / 99 errors / 65% coverage ] ****** [1003 done /748 queued / 16 running / 99 errors / 65% coverage ] ****** [1004 done /748 queued / 16 running / 99 errors / 65% coverage ] ****** [1004 done /748 queued / 16 running / 99 errors / 65% coverage ] ****** [1005 done /747 queued / 16 running / 99 errors / 65% coverage ] ****** [1005 done /747 queued / 16 running / 99 errors / 65% coverage ] ****** [1006 done /751 queued / 16 running / 99 errors / 65% coverage ] ****** [1006 done /751 queued / 16 running / 99 errors / 65% coverage ] ****** [1007 done /753 queued / 16 running / 99 errors / 65% coverage ] ****** [1007 done /753 queued / 16 running / 99 errors / 65% coverage ] ****** [1008 done /755 queued / 16 running / 99 errors / 65% coverage ] ****** [1008 done /755 queued / 16 running / 99 errors / 65% coverage ] ****** [1009 done /755 queued / 16 running / 99 errors / 65% coverage ] ****** [1009 done /755 queued / 16 running / 99 errors / 65% coverage ] ****** [1010 done /757 queued / 16 running / 99 errors / 65% coverage ] ****** [1010 done /757 queued / 16 running / 99 errors / 65% coverage ] ****** [1011 done /759 queued / 16 running / 99 errors / 65% coverage ] ****** [1011 done /759 queued / 16 running / 99 errors / 65% coverage ] ****** [1012 done /762 queued / 16 running / 99 errors / 65% coverage ] ****** [1012 done /762 queued / 16 running / 99 errors / 65% coverage ] ****** [1013 done /763 queued / 16 running / 99 errors / 65% coverage ] ****** [1013 done /763 queued / 16 running / 99 errors / 65% coverage ] ****** [1014 done /764 queued / 16 running / 99 errors / 65% coverage ] ****** [1014 done /764 queued / 16 running / 99 errors / 65% coverage ] ****** [1015 done /763 queued / 16 running / 99 errors / 65% coverage ] ****** [1015 done /763 queued / 16 running / 99 errors / 65% coverage ] ****** [1016 done /764 queued / 16 running / 99 errors / 65% coverage ] ****** [1016 done /764 queued / 16 running / 99 errors / 65% coverage ] ****** [1017 done /767 queued / 16 running / 99 errors / 65% coverage ] ****** [1017 done /767 queued / 16 running / 99 errors / 65% coverage ] ****** [1018 done /771 queued / 16 running / 99 errors / 65% coverage ] ****** [1018 done /771 queued / 16 running / 99 errors / 65% coverage ] ****** [1019 done /772 queued / 16 running / 99 errors / 65% coverage ] ****** [1019 done /772 queued / 16 running / 99 errors / 65% coverage ] ****** [1020 done /773 queued / 16 running / 99 errors / 65% coverage ] ****** [1020 done /773 queued / 16 running / 99 errors / 65% coverage ] ****** [1021 done /774 queued / 16 running / 99 errors / 65% coverage ] ****** [1021 done /774 queued / 16 running / 99 errors / 65% coverage ] ****** [1022 done /776 queued / 16 running / 99 errors / 65% coverage ] ****** [1022 done /776 queued / 16 running / 99 errors / 65% coverage ] ****** [1023 done /778 queued / 16 running / 99 errors / 65% coverage ] ****** [1023 done /778 queued / 16 running / 99 errors / 65% coverage ] ****** [1024 done /779 queued / 16 running / 99 errors / 65% coverage ] ****** [1024 done /779 queued / 16 running / 99 errors / 65% coverage ] ****** [1025 done /780 queued / 16 running / 99 errors / 65% coverage ] ****** [1025 done /780 queued / 16 running / 99 errors / 65% coverage ] ****** [1026 done /784 queued / 16 running / 99 errors / 65% coverage ] ****** [1026 done /784 queued / 16 running / 99 errors / 65% coverage ] ****** [1027 done /783 queued / 16 running / 99 errors / 65% coverage ] ****** [1027 done /783 queued / 16 running / 99 errors / 65% coverage ] ****** [1028 done /782 queued / 16 running / 99 errors / 65% coverage ] ****** [1028 done /782 queued / 16 running / 99 errors / 65% coverage ] ****** [1029 done /782 queued / 16 running / 99 errors / 65% coverage ] ****** [1029 done /782 queued / 16 running / 99 errors / 65% coverage ] ****** [1030 done /782 queued / 16 running / 99 errors / 65% coverage ] ****** [1030 done /782 queued / 16 running / 99 errors / 65% coverage ] ****** [1031 done /783 queued / 16 running / 99 errors / 65% coverage ] ****** [1031 done /783 queued / 16 running / 99 errors / 65% coverage ] ****** [1032 done /783 queued / 16 running / 99 errors / 65% coverage ] ****** [1032 done /783 queued / 16 running / 99 errors / 65% coverage ] ****** [1033 done /782 queued / 16 running / 99 errors / 65% coverage ] ****** [1033 done /782 queued / 16 running / 99 errors / 65% coverage ] ****** [1034 done /782 queued / 16 running / 99 errors / 65% coverage ] ****** [1034 done /782 queued / 16 running / 99 errors / 65% coverage ] ****** [1035 done /781 queued / 16 running / 99 errors / 65% coverage ] ****** [1035 done /781 queued / 16 running / 99 errors / 65% coverage ] ****** [1036 done /781 queued / 16 running / 99 errors / 65% coverage ] ****** [1036 done /781 queued / 16 running / 99 errors / 65% coverage ] ****** [1037 done /780 queued / 16 running / 99 errors / 65% coverage ] ****** [1037 done /780 queued / 16 running / 99 errors / 65% coverage ] ****** [1038 done /782 queued / 16 running / 99 errors / 65% coverage ] ****** [1038 done /782 queued / 16 running / 99 errors / 65% coverage ] ****** [1039 done /783 queued / 16 running / 99 errors / 65% coverage ] ****** [1039 done /783 queued / 16 running / 99 errors / 65% coverage ] ****** [1040 done /782 queued / 16 running / 99 errors / 65% coverage ] ****** [1040 done /782 queued / 16 running / 99 errors / 65% coverage ] ****** [1041 done /781 queued / 16 running / 99 errors / 65% coverage ] ****** [1041 done /781 queued / 16 running / 99 errors / 65% coverage ] ****** [1042 done /781 queued / 16 running / 99 errors / 65% coverage ] ****** [1042 done /781 queued / 16 running / 99 errors / 65% coverage ] ****** [1043 done /783 queued / 16 running / 99 errors / 65% coverage ] ****** [1043 done /783 queued / 16 running / 99 errors / 65% coverage ] ****** [1044 done /784 queued / 16 running / 99 errors / 65% coverage ] ****** [1044 done /784 queued / 16 running / 99 errors / 65% coverage ] ****** [1045 done /784 queued / 16 running / 99 errors / 65% coverage ] ****** [1045 done /784 queued / 16 running / 99 errors / 65% coverage ] ****** [1046 done /784 queued / 16 running / 99 errors / 65% coverage ] ****** [1046 done /784 queued / 16 running / 99 errors / 65% coverage ] ****** [1047 done /786 queued / 16 running / 99 errors / 65% coverage ] ****** [1047 done /786 queued / 16 running / 99 errors / 65% coverage ] ****** [1048 done /787 queued / 16 running / 99 errors / 65% coverage ] ****** [1048 done /787 queued / 16 running / 99 errors / 65% coverage ] ****** [1049 done /788 queued / 16 running / 99 errors / 65% coverage ] ****** [1049 done /788 queued / 16 running / 99 errors / 65% coverage ] ****** [1050 done /791 queued / 16 running / 99 errors / 65% coverage ] ****** [1050 done /791 queued / 16 running / 99 errors / 65% coverage ] ****** [1051 done /792 queued / 16 running / 99 errors / 65% coverage ] ****** [1051 done /792 queued / 16 running / 99 errors / 65% coverage ] ****** [1052 done /796 queued / 16 running / 99 errors / 65% coverage ] ****** [1052 done /796 queued / 16 running / 99 errors / 65% coverage ] ****** [1053 done /797 queued / 16 running / 99 errors / 65% coverage ] ****** [1053 done /797 queued / 16 running / 99 errors / 65% coverage ] ****** [1054 done /800 queued / 16 running / 99 errors / 65% coverage ] ****** [1054 done /800 queued / 16 running / 99 errors / 65% coverage ] ****** [1055 done /801 queued / 16 running / 99 errors / 65% coverage ] ****** [1055 done /801 queued / 16 running / 99 errors / 65% coverage ] ****** [1056 done /803 queued / 16 running / 99 errors / 65% coverage ] ****** [1056 done /803 queued / 16 running / 99 errors / 65% coverage ] ****** [1057 done /805 queued / 16 running / 99 errors / 65% coverage ] ****** [1057 done /805 queued / 16 running / 99 errors / 65% coverage ] ****** [1058 done /805 queued / 16 running / 99 errors / 65% coverage ] ****** [1058 done /805 queued / 16 running / 99 errors / 65% coverage ] ****** [1059 done /808 queued / 16 running / 99 errors / 65% coverage ] ****** [1059 done /808 queued / 16 running / 99 errors / 65% coverage ] ****** [1060 done /810 queued / 16 running / 99 errors / 65% coverage ] ****** [1060 done /810 queued / 16 running / 99 errors / 65% coverage ] ****** [1061 done /811 queued / 16 running / 99 errors / 65% coverage ] ****** [1061 done /811 queued / 16 running / 99 errors / 65% coverage ] ****** [1062 done /813 queued / 16 running / 99 errors / 65% coverage ] ****** [1062 done /813 queued / 16 running / 99 errors / 65% coverage ] ****** [1063 done /816 queued / 16 running / 99 errors / 65% coverage ] ****** [1063 done /816 queued / 16 running / 99 errors / 65% coverage ] ****** [1064 done /816 queued / 16 running / 99 errors / 65% coverage ] ****** [1064 done /816 queued / 16 running / 99 errors / 65% coverage ] ****** [1065 done /818 queued / 16 running / 99 errors / 65% coverage ] ****** [1065 done /818 queued / 16 running / 99 errors / 65% coverage ] ****** [1066 done /819 queued / 16 running / 99 errors / 65% coverage ] ****** [1066 done /819 queued / 16 running / 99 errors / 65% coverage ] ****** [1067 done /819 queued / 16 running / 99 errors / 65% coverage ] ****** [1067 done /819 queued / 16 running / 99 errors / 65% coverage ] ****** [1068 done /820 queued / 16 running / 99 errors / 65% coverage ] ****** [1068 done /820 queued / 16 running / 99 errors / 65% coverage ] ****** [1069 done /820 queued / 16 running / 99 errors / 65% coverage ] ****** [1069 done /820 queued / 16 running / 99 errors / 65% coverage ] ****** [1070 done /820 queued / 16 running / 99 errors / 65% coverage ] ****** [1070 done /820 queued / 16 running / 99 errors / 65% coverage ] ****** [1071 done /820 queued / 16 running / 99 errors / 65% coverage ] ****** [1071 done /820 queued / 16 running / 99 errors / 65% coverage ] ****** [1072 done /820 queued / 16 running / 99 errors / 65% coverage ] ****** [1072 done /820 queued / 16 running / 99 errors / 65% coverage ] ****** [1073 done /820 queued / 16 running / 99 errors / 65% coverage ] ****** [1073 done /820 queued / 16 running / 99 errors / 65% coverage ] ****** [1074 done /820 queued / 16 running / 99 errors / 65% coverage ] ****** [1074 done /820 queued / 16 running / 99 errors / 65% coverage ] ****** [1075 done /819 queued / 16 running / 99 errors / 65% coverage ] ****** [1075 done /819 queued / 16 running / 99 errors / 65% coverage ] ****** [1076 done /818 queued / 16 running / 99 errors / 65% coverage ] ****** [1076 done /818 queued / 16 running / 99 errors / 65% coverage ] ****** [1077 done /820 queued / 16 running / 99 errors / 65% coverage ] ****** [1077 done /820 queued / 16 running / 99 errors / 65% coverage ] ****** [1078 done /819 queued / 16 running / 99 errors / 65% coverage ] ****** [1078 done /819 queued / 16 running / 99 errors / 65% coverage ] ****** [1079 done /819 queued / 16 running / 99 errors / 65% coverage ] ****** [1079 done /819 queued / 16 running / 99 errors / 65% coverage ] ****** [1080 done /820 queued / 16 running / 99 errors / 65% coverage ] ****** [1080 done /820 queued / 16 running / 99 errors / 65% coverage ] ****** [1081 done /820 queued / 16 running / 99 errors / 65% coverage ] ****** [1081 done /820 queued / 16 running / 99 errors / 65% coverage ] ****** [1082 done /821 queued / 16 running / 99 errors / 65% coverage ] ****** [1082 done /821 queued / 16 running / 99 errors / 65% coverage ] ****** [1083 done /821 queued / 16 running / 99 errors / 65% coverage ] ****** [1083 done /821 queued / 16 running / 99 errors / 65% coverage ] ****** [1084 done /824 queued / 16 running / 99 errors / 65% coverage ] ****** [1084 done /824 queued / 16 running / 99 errors / 65% coverage ] ****** [1085 done /823 queued / 16 running / 99 errors / 65% coverage ] ****** [1085 done /823 queued / 16 running / 99 errors / 65% coverage ] ****** [1086 done /824 queued / 16 running / 99 errors / 65% coverage ] ****** [1086 done /824 queued / 16 running / 99 errors / 65% coverage ] ****** [1087 done /823 queued / 16 running / 99 errors / 65% coverage ] ****** [1087 done /823 queued / 16 running / 99 errors / 65% coverage ] ****** [1088 done /822 queued / 16 running / 99 errors / 65% coverage ] ****** [1088 done /822 queued / 16 running / 99 errors / 65% coverage ] ****** [1089 done /824 queued / 16 running / 99 errors / 65% coverage ] ****** [1089 done /824 queued / 16 running / 99 errors / 65% coverage ] ****** [1090 done /825 queued / 16 running / 99 errors / 65% coverage ] ****** [1090 done /825 queued / 16 running / 99 errors / 65% coverage ] ****** [1091 done /828 queued / 16 running / 99 errors / 65% coverage ] ****** [1091 done /828 queued / 16 running / 99 errors / 65% coverage ] ****** [1092 done /829 queued / 16 running / 99 errors / 65% coverage ] ****** [1092 done /829 queued / 16 running / 99 errors / 65% coverage ] ****** [1093 done /830 queued / 16 running / 99 errors / 65% coverage ] ****** [1093 done /830 queued / 16 running / 99 errors / 65% coverage ] ****** [1094 done /830 queued / 16 running / 99 errors / 65% coverage ] ****** [1094 done /830 queued / 16 running / 99 errors / 65% coverage ] ****** [1095 done /833 queued / 16 running / 99 errors / 65% coverage ] ****** [1095 done /833 queued / 16 running / 99 errors / 65% coverage ] ****** [1096 done /835 queued / 16 running / 99 errors / 65% coverage ] ****** [1096 done /835 queued / 16 running / 99 errors / 65% coverage ] ****** [1097 done /836 queued / 16 running / 99 errors / 65% coverage ] ****** [1097 done /836 queued / 16 running / 99 errors / 65% coverage ] ****** [1098 done /837 queued / 16 running / 99 errors / 65% coverage ] ****** [1098 done /837 queued / 16 running / 99 errors / 65% coverage ] ****** [1099 done /840 queued / 16 running / 99 errors / 65% coverage ] ****** [1099 done /840 queued / 16 running / 99 errors / 65% coverage ] ****** [1100 done /841 queued / 16 running / 99 errors / 65% coverage ] ****** [1100 done /841 queued / 16 running / 99 errors / 65% coverage ] ****** [1101 done /842 queued / 16 running / 99 errors / 65% coverage ] ****** [1101 done /842 queued / 16 running / 99 errors / 65% coverage ] ****** [1102 done /844 queued / 16 running / 99 errors / 65% coverage ] ****** [1102 done /844 queued / 16 running / 99 errors / 65% coverage ] ****** [1103 done /845 queued / 16 running / 99 errors / 65% coverage ] ****** [1103 done /845 queued / 16 running / 99 errors / 65% coverage ] ****** [1104 done /846 queued / 16 running / 99 errors / 65% coverage ] ****** [1104 done /846 queued / 16 running / 99 errors / 65% coverage ] ****** [1105 done /846 queued / 16 running / 99 errors / 65% coverage ] ****** [1105 done /846 queued / 16 running / 99 errors / 65% coverage ] ****** [1106 done /848 queued / 16 running / 99 errors / 65% coverage ] ****** [1106 done /848 queued / 16 running / 99 errors / 65% coverage ] ****** [1107 done /851 queued / 16 running / 99 errors / 65% coverage ] ****** [1107 done /851 queued / 16 running / 99 errors / 65% coverage ] ****** [1108 done /852 queued / 16 running / 99 errors / 65% coverage ] ****** [1108 done /852 queued / 16 running / 99 errors / 65% coverage ] ****** [1109 done /851 queued / 16 running / 99 errors / 65% coverage ] ****** [1109 done /851 queued / 16 running / 99 errors / 65% coverage ] ****** [1110 done /852 queued / 16 running / 99 errors / 65% coverage ] ****** [1110 done /852 queued / 16 running / 99 errors / 65% coverage ] ****** [1111 done /852 queued / 16 running / 99 errors / 65% coverage ] ****** [1111 done /852 queued / 16 running / 99 errors / 65% coverage ] ****** [1112 done /852 queued / 16 running / 99 errors / 65% coverage ] ****** [1112 done /852 queued / 16 running / 99 errors / 65% coverage ] ****** [1113 done /851 queued / 16 running / 99 errors / 65% coverage ] ****** [1113 done /851 queued / 16 running / 99 errors / 65% coverage ] ****** [1114 done /850 queued / 16 running / 99 errors / 65% coverage ] ****** [1114 done /850 queued / 16 running / 99 errors / 65% coverage ] ****** [1115 done /850 queued / 16 running / 99 errors / 65% coverage ] ****** [1115 done /850 queued / 16 running / 99 errors / 65% coverage ] ****** [1116 done /849 queued / 16 running / 99 errors / 65% coverage ] ****** [1116 done /849 queued / 16 running / 99 errors / 65% coverage ] ****** [1117 done /848 queued / 16 running / 99 errors / 65% coverage ] ****** [1117 done /848 queued / 16 running / 99 errors / 65% coverage ] ****** [1118 done /847 queued / 16 running / 99 errors / 65% coverage ] ****** [1118 done /847 queued / 16 running / 99 errors / 65% coverage ] ****** [1119 done /846 queued / 16 running / 99 errors / 65% coverage ] ****** [1119 done /846 queued / 16 running / 99 errors / 65% coverage ] ****** [1120 done /845 queued / 16 running / 99 errors / 65% coverage ] ****** [1120 done /845 queued / 16 running / 99 errors / 65% coverage ] ****** [1121 done /847 queued / 16 running / 99 errors / 65% coverage ] ****** [1121 done /847 queued / 16 running / 99 errors / 65% coverage ] ****** [1122 done /848 queued / 16 running / 99 errors / 65% coverage ] ****** [1122 done /848 queued / 16 running / 99 errors / 65% coverage ] ****** [1123 done /850 queued / 16 running / 99 errors / 65% coverage ] ****** [1123 done /850 queued / 16 running / 99 errors / 65% coverage ] ****** [1124 done /851 queued / 16 running / 99 errors / 65% coverage ] ****** [1124 done /851 queued / 16 running / 99 errors / 65% coverage ] ****** [1125 done /850 queued / 16 running / 99 errors / 65% coverage ] ****** [1125 done /850 queued / 16 running / 99 errors / 65% coverage ] ****** [1126 done /850 queued / 16 running / 99 errors / 65% coverage ] ****** [1126 done /850 queued / 16 running / 99 errors / 65% coverage ] ****** [1127 done /850 queued / 16 running / 99 errors / 65% coverage ] ****** [1127 done /850 queued / 16 running / 99 errors / 65% coverage ] ****** [1128 done /851 queued / 16 running / 99 errors / 65% coverage ] ****** [1128 done /851 queued / 16 running / 99 errors / 65% coverage ] ****** [1129 done /851 queued / 16 running / 99 errors / 65% coverage ] ****** [1129 done /851 queued / 16 running / 99 errors / 65% coverage ] ****** [1130 done /856 queued / 16 running / 99 errors / 65% coverage ] ****** [1130 done /856 queued / 16 running / 99 errors / 65% coverage ] ****** [1131 done /855 queued / 16 running / 99 errors / 65% coverage ] ****** [1131 done /855 queued / 16 running / 99 errors / 65% coverage ] ****** [1132 done /856 queued / 16 running / 99 errors / 65% coverage ] ****** [1132 done /856 queued / 16 running / 99 errors / 65% coverage ] ****** [1133 done /855 queued / 16 running / 99 errors / 65% coverage ] ****** [1133 done /855 queued / 16 running / 99 errors / 65% coverage ] ****** [1134 done /856 queued / 16 running / 99 errors / 65% coverage ] ****** [1134 done /856 queued / 16 running / 99 errors / 65% coverage ] ****** [1135 done /858 queued / 16 running / 99 errors / 65% coverage ] ****** [1135 done /858 queued / 16 running / 99 errors / 65% coverage ] ****** [1136 done /859 queued / 16 running / 99 errors / 65% coverage ] ****** [1136 done /859 queued / 16 running / 99 errors / 65% coverage ] ****** [1137 done /858 queued / 16 running / 99 errors / 65% coverage ] ****** [1137 done /858 queued / 16 running / 99 errors / 65% coverage ] ****** [1138 done /857 queued / 16 running / 99 errors / 65% coverage ] ****** [1138 done /857 queued / 16 running / 99 errors / 65% coverage ] ****** [1139 done /857 queued / 16 running / 99 errors / 65% coverage ] ****** [1139 done /857 queued / 16 running / 99 errors / 65% coverage ] ****** [1140 done /859 queued / 16 running / 99 errors / 65% coverage ] ****** [1140 done /859 queued / 16 running / 99 errors / 65% coverage ] ****** [1141 done /861 queued / 16 running / 99 errors / 65% coverage ] ****** [1141 done /861 queued / 16 running / 99 errors / 65% coverage ] ****** [1142 done /862 queued / 16 running / 99 errors / 65% coverage ] ****** [1142 done /862 queued / 16 running / 99 errors / 65% coverage ] ****** [1143 done /861 queued / 16 running / 99 errors / 65% coverage ] ****** [1143 done /861 queued / 16 running / 99 errors / 65% coverage ] ****** [1144 done /861 queued / 16 running / 99 errors / 65% coverage ] ****** [1144 done /861 queued / 16 running / 99 errors / 65% coverage ] ****** [1145 done /862 queued / 16 running / 99 errors / 65% coverage ] ****** [1145 done /862 queued / 16 running / 99 errors / 65% coverage ] ****** [1146 done /864 queued / 16 running / 99 errors / 65% coverage ] ****** [1146 done /864 queued / 16 running / 99 errors / 65% coverage ] ****** [1147 done /864 queued / 16 running / 99 errors / 65% coverage ] ****** [1147 done /864 queued / 16 running / 99 errors / 65% coverage ] ****** [1148 done /865 queued / 16 running / 99 errors / 65% coverage ] ****** [1148 done /865 queued / 16 running / 99 errors / 65% coverage ] ****** [1149 done /866 queued / 16 running / 99 errors / 65% coverage ] ****** [1149 done /866 queued / 16 running / 99 errors / 65% coverage ] ****** [1150 done /865 queued / 16 running / 99 errors / 65% coverage ] ****** [1150 done /865 queued / 16 running / 99 errors / 65% coverage ] ****** [1151 done /869 queued / 16 running / 99 errors / 65% coverage ] ****** [1151 done /869 queued / 16 running / 99 errors / 65% coverage ] ****** [1152 done /871 queued / 16 running / 99 errors / 65% coverage ] ****** [1152 done /871 queued / 16 running / 99 errors / 65% coverage ] ****** [1153 done /871 queued / 16 running / 99 errors / 65% coverage ] ****** [1153 done /871 queued / 16 running / 99 errors / 65% coverage ] ****** [1154 done /871 queued / 16 running / 99 errors / 65% coverage ] ****** [1154 done /871 queued / 16 running / 99 errors / 65% coverage ] ****** [1155 done /870 queued / 16 running / 99 errors / 65% coverage ] ****** [1155 done /870 queued / 16 running / 99 errors / 65% coverage ] ****** [1156 done /869 queued / 16 running / 99 errors / 65% coverage ] ****** [1156 done /869 queued / 16 running / 99 errors / 65% coverage ] ****** [1157 done /870 queued / 16 running / 99 errors / 65% coverage ] ****** [1157 done /870 queued / 16 running / 99 errors / 65% coverage ] ****** [1158 done /871 queued / 16 running / 99 errors / 65% coverage ] ****** [1158 done /871 queued / 16 running / 99 errors / 65% coverage ] ****** [1159 done /871 queued / 16 running / 99 errors / 65% coverage ] ****** [1159 done /871 queued / 16 running / 99 errors / 65% coverage ] ****** [1160 done /872 queued / 16 running / 99 errors / 65% coverage ] ****** [1160 done /872 queued / 16 running / 99 errors / 65% coverage ] ****** [1161 done /873 queued / 16 running / 99 errors / 65% coverage ] ****** [1161 done /873 queued / 16 running / 99 errors / 65% coverage ] ****** [1162 done /874 queued / 16 running / 99 errors / 65% coverage ] ****** [1162 done /874 queued / 16 running / 99 errors / 65% coverage ] ****** [1163 done /878 queued / 16 running / 99 errors / 65% coverage ] ****** [1163 done /878 queued / 16 running / 99 errors / 65% coverage ] ****** [1164 done /881 queued / 16 running / 99 errors / 65% coverage ] ****** [1164 done /881 queued / 16 running / 99 errors / 65% coverage ] ****** [1165 done /883 queued / 16 running / 100 errors / 65% coverage ] ****** [1165 done /883 queued / 16 running / 100 errors / 65% coverage ] ****** [1166 done /882 queued / 16 running / 100 errors / 65% coverage ] ****** [1166 done /882 queued / 16 running / 100 errors / 65% coverage ] ****** [1167 done /883 queued / 16 running / 100 errors / 65% coverage ] ****** [1167 done /883 queued / 16 running / 100 errors / 65% coverage ] ****** [1168 done /884 queued / 16 running / 100 errors / 65% coverage ] ****** [1168 done /884 queued / 16 running / 100 errors / 65% coverage ] ****** [1169 done /884 queued / 16 running / 100 errors / 65% coverage ] ****** [1169 done /884 queued / 16 running / 100 errors / 65% coverage ] ****** [1170 done /884 queued / 16 running / 100 errors / 65% coverage ] ****** [1170 done /884 queued / 16 running / 100 errors / 65% coverage ] ****** [1171 done /886 queued / 16 running / 100 errors / 65% coverage ] ****** [1171 done /886 queued / 16 running / 100 errors / 65% coverage ] ****** [1172 done /885 queued / 16 running / 100 errors / 65% coverage ] ****** [1172 done /885 queued / 16 running / 100 errors / 65% coverage ] ****** [1173 done /890 queued / 16 running / 100 errors / 65% coverage ] ****** [1173 done /890 queued / 16 running / 100 errors / 65% coverage ] ****** [1174 done /892 queued / 16 running / 100 errors / 65% coverage ] ****** [1174 done /892 queued / 16 running / 100 errors / 65% coverage ] ****** [1175 done /892 queued / 16 running / 100 errors / 65% coverage ] ****** [1175 done /892 queued / 16 running / 100 errors / 65% coverage ] ****** [1176 done /896 queued / 16 running / 100 errors / 65% coverage ] ****** [1176 done /896 queued / 16 running / 100 errors / 65% coverage ] ****** [1177 done /897 queued / 16 running / 100 errors / 65% coverage ] ****** [1177 done /897 queued / 16 running / 100 errors / 65% coverage ] ****** [1178 done /898 queued / 16 running / 100 errors / 65% coverage ] ****** [1178 done /898 queued / 16 running / 100 errors / 65% coverage ] ****** [1179 done /898 queued / 16 running / 100 errors / 65% coverage ] ****** [1179 done /898 queued / 16 running / 100 errors / 65% coverage ] ****** [1180 done /898 queued / 16 running / 100 errors / 65% coverage ] ****** [1180 done /898 queued / 16 running / 100 errors / 65% coverage ] ****** [1181 done /898 queued / 16 running / 100 errors / 65% coverage ] ****** [1181 done /898 queued / 16 running / 100 errors / 65% coverage ] ****** [1182 done /900 queued / 16 running / 101 errors / 65% coverage ] ****** [1182 done /900 queued / 16 running / 101 errors / 65% coverage ] ****** [1183 done /900 queued / 16 running / 101 errors / 65% coverage ] ****** [1183 done /900 queued / 16 running / 101 errors / 65% coverage ] ****** [1184 done /900 queued / 16 running / 101 errors / 65% coverage ] ****** [1184 done /900 queued / 16 running / 101 errors / 65% coverage ] ****** [1185 done /900 queued / 16 running / 101 errors / 65% coverage ] ****** [1185 done /900 queued / 16 running / 101 errors / 65% coverage ] ****** [1186 done /901 queued / 16 running / 101 errors / 65% coverage ] ****** [1186 done /901 queued / 16 running / 101 errors / 65% coverage ] ****** [1187 done /903 queued / 16 running / 101 errors / 65% coverage ] ****** [1187 done /903 queued / 16 running / 101 errors / 65% coverage ] ****** [1188 done /904 queued / 16 running / 101 errors / 65% coverage ] ****** [1188 done /904 queued / 16 running / 101 errors / 65% coverage ] ****** [1189 done /904 queued / 16 running / 101 errors / 65% coverage ] ****** [1189 done /904 queued / 16 running / 101 errors / 65% coverage ] ****** [1190 done /906 queued / 16 running / 101 errors / 65% coverage ] ****** [1190 done /906 queued / 16 running / 101 errors / 65% coverage ] ****** [1191 done /907 queued / 16 running / 101 errors / 65% coverage ] ****** [1191 done /907 queued / 16 running / 101 errors / 65% coverage ] ****** [1192 done /908 queued / 16 running / 101 errors / 65% coverage ] ****** [1192 done /908 queued / 16 running / 101 errors / 65% coverage ] ****** [1193 done /910 queued / 16 running / 101 errors / 65% coverage ] ****** [1193 done /910 queued / 16 running / 101 errors / 65% coverage ] ****** [1194 done /911 queued / 16 running / 101 errors / 65% coverage ] ****** [1194 done /911 queued / 16 running / 101 errors / 65% coverage ] ****** [1195 done /913 queued / 16 running / 101 errors / 65% coverage ] ****** [1195 done /913 queued / 16 running / 101 errors / 65% coverage ] ****** [1196 done /913 queued / 16 running / 101 errors / 65% coverage ] ****** [1196 done /913 queued / 16 running / 101 errors / 65% coverage ] ****** [1197 done /915 queued / 16 running / 101 errors / 65% coverage ] ****** [1197 done /915 queued / 16 running / 101 errors / 65% coverage ] ****** [1198 done /915 queued / 16 running / 101 errors / 65% coverage ] ****** [1198 done /915 queued / 16 running / 101 errors / 65% coverage ] ****** [1199 done /917 queued / 16 running / 101 errors / 65% coverage ] ****** [1199 done /917 queued / 16 running / 101 errors / 65% coverage ] ****** [1200 done /918 queued / 16 running / 101 errors / 65% coverage ] ****** [1200 done /918 queued / 16 running / 101 errors / 65% coverage ] ****** [1201 done /919 queued / 16 running / 101 errors / 65% coverage ] ****** [1201 done /919 queued / 16 running / 101 errors / 65% coverage ] ****** [1202 done /919 queued / 16 running / 101 errors / 65% coverage ] ****** [1202 done /919 queued / 16 running / 101 errors / 65% coverage ] ****** [1203 done /920 queued / 16 running / 101 errors / 65% coverage ] ****** [1203 done /920 queued / 16 running / 101 errors / 65% coverage ] ****** [1204 done /923 queued / 16 running / 101 errors / 65% coverage ] ****** [1204 done /923 queued / 16 running / 101 errors / 65% coverage ] ****** [1205 done /924 queued / 16 running / 101 errors / 65% coverage ] ****** [1205 done /924 queued / 16 running / 101 errors / 65% coverage ] ****** [1206 done /929 queued / 16 running / 101 errors / 65% coverage ] ****** [1206 done /929 queued / 16 running / 101 errors / 65% coverage ] ****** [1207 done /933 queued / 16 running / 101 errors / 65% coverage ] ****** [1207 done /933 queued / 16 running / 101 errors / 65% coverage ] ****** [1208 done /935 queued / 16 running / 101 errors / 65% coverage ] ****** [1208 done /935 queued / 16 running / 101 errors / 65% coverage ] ****** [1209 done /938 queued / 16 running / 101 errors / 65% coverage ] ****** [1209 done /938 queued / 16 running / 101 errors / 65% coverage ] ****** [1210 done /939 queued / 16 running / 101 errors / 65% coverage ] ****** [1210 done /939 queued / 16 running / 101 errors / 65% coverage ] ****** [1211 done /939 queued / 16 running / 102 errors / 65% coverage ] ****** [1211 done /939 queued / 16 running / 102 errors / 65% coverage ] ****** [1212 done /939 queued / 16 running / 102 errors / 65% coverage ] ****** [1212 done /939 queued / 16 running / 102 errors / 65% coverage ] ****** [1213 done /944 queued / 16 running / 102 errors / 65% coverage ] ****** [1213 done /944 queued / 16 running / 102 errors / 65% coverage ] ****** [1214 done /947 queued / 16 running / 102 errors / 65% coverage ] ****** [1214 done /947 queued / 16 running / 102 errors / 65% coverage ] ****** [1215 done /946 queued / 16 running / 102 errors / 65% coverage ] ****** [1215 done /946 queued / 16 running / 102 errors / 65% coverage ] ****** [1216 done /946 queued / 16 running / 102 errors / 65% coverage ] ****** [1216 done /946 queued / 16 running / 102 errors / 65% coverage ] ****** [1217 done /947 queued / 16 running / 103 errors / 65% coverage ] ****** [1217 done /947 queued / 16 running / 103 errors / 65% coverage ] ****** [1218 done /946 queued / 16 running / 103 errors / 65% coverage ] ****** [1218 done /946 queued / 16 running / 103 errors / 65% coverage ] ****** [1219 done /947 queued / 16 running / 103 errors / 65% coverage ] ****** [1219 done /947 queued / 16 running / 103 errors / 65% coverage ] ****** [1220 done /948 queued / 16 running / 104 errors / 65% coverage ] ****** [1220 done /948 queued / 16 running / 104 errors / 65% coverage ] ****** [1221 done /948 queued / 16 running / 104 errors / 65% coverage ] ****** [1221 done /948 queued / 16 running / 104 errors / 65% coverage ] ****** [1222 done /948 queued / 16 running / 104 errors / 65% coverage ] ****** [1222 done /948 queued / 16 running / 104 errors / 65% coverage ] ****** [1223 done /948 queued / 16 running / 104 errors / 65% coverage ] ****** [1223 done /948 queued / 16 running / 104 errors / 65% coverage ] ****** [1224 done /947 queued / 16 running / 104 errors / 65% coverage ] ****** [1224 done /947 queued / 16 running / 104 errors / 65% coverage ] ****** [1225 done /946 queued / 16 running / 104 errors / 65% coverage ] ****** [1225 done /946 queued / 16 running / 104 errors / 65% coverage ] ****** [1226 done /947 queued / 16 running / 104 errors / 65% coverage ] ****** [1226 done /947 queued / 16 running / 104 errors / 65% coverage ] ****** [1227 done /949 queued / 16 running / 104 errors / 65% coverage ] ****** [1227 done /949 queued / 16 running / 104 errors / 65% coverage ] ****** [1228 done /951 queued / 16 running / 104 errors / 65% coverage ] ****** [1228 done /951 queued / 16 running / 104 errors / 65% coverage ] ****** [1229 done /952 queued / 16 running / 104 errors / 65% coverage ] ****** [1229 done /952 queued / 16 running / 104 errors / 65% coverage ] ****** [1230 done /951 queued / 16 running / 104 errors / 65% coverage ] ****** [1230 done /951 queued / 16 running / 104 errors / 65% coverage ] ****** [1231 done /950 queued / 16 running / 104 errors / 65% coverage ] ****** [1231 done /950 queued / 16 running / 104 errors / 65% coverage ] ****** [1232 done /951 queued / 16 running / 104 errors / 65% coverage ] ****** [1232 done /951 queued / 16 running / 104 errors / 65% coverage ] ****** [1233 done /951 queued / 16 running / 105 errors / 65% coverage ] ****** [1233 done /951 queued / 16 running / 105 errors / 65% coverage ] ****** [1234 done /953 queued / 16 running / 105 errors / 65% coverage ] ****** [1234 done /953 queued / 16 running / 105 errors / 65% coverage ] ****** [1235 done /953 queued / 16 running / 105 errors / 65% coverage ] ****** [1235 done /953 queued / 16 running / 105 errors / 65% coverage ] ****** [1236 done /955 queued / 16 running / 106 errors / 65% coverage ] ****** [1236 done /955 queued / 16 running / 106 errors / 65% coverage ] ****** [1237 done /956 queued / 16 running / 106 errors / 65% coverage ] ****** [1237 done /956 queued / 16 running / 106 errors / 65% coverage ] ****** [1238 done /957 queued / 16 running / 106 errors / 65% coverage ] ****** [1238 done /957 queued / 16 running / 106 errors / 65% coverage ] ****** [1239 done /957 queued / 16 running / 106 errors / 65% coverage ] ****** [1239 done /957 queued / 16 running / 106 errors / 65% coverage ] ****** [1240 done /957 queued / 16 running / 106 errors / 65% coverage ] ****** [1240 done /957 queued / 16 running / 106 errors / 65% coverage ] ****** [1241 done /956 queued / 16 running / 106 errors / 65% coverage ] ****** [1241 done /956 queued / 16 running / 106 errors / 65% coverage ] ****** [1242 done /955 queued / 16 running / 106 errors / 65% coverage ] ****** [1242 done /955 queued / 16 running / 106 errors / 65% coverage ] ****** [1243 done /959 queued / 16 running / 107 errors / 65% coverage ] ****** [1243 done /959 queued / 16 running / 107 errors / 65% coverage ] ****** [1244 done /964 queued / 16 running / 107 errors / 65% coverage ] ****** [1244 done /964 queued / 16 running / 107 errors / 65% coverage ] ****** [1245 done /965 queued / 16 running / 107 errors / 65% coverage ] ****** [1245 done /965 queued / 16 running / 107 errors / 65% coverage ] ****** [1246 done /966 queued / 16 running / 107 errors / 65% coverage ] ****** [1246 done /966 queued / 16 running / 107 errors / 65% coverage ] ****** [1247 done /966 queued / 16 running / 107 errors / 65% coverage ] ****** [1247 done /966 queued / 16 running / 107 errors / 65% coverage ] ****** [1248 done /967 queued / 16 running / 107 errors / 65% coverage ] ****** [1248 done /967 queued / 16 running / 107 errors / 65% coverage ] ****** [1249 done /968 queued / 16 running / 107 errors / 65% coverage ] ****** [1249 done /968 queued / 16 running / 107 errors / 65% coverage ] ****** [1250 done /969 queued / 16 running / 107 errors / 65% coverage ] ****** [1250 done /969 queued / 16 running / 107 errors / 65% coverage ] ****** [1251 done /970 queued / 16 running / 107 errors / 65% coverage ] ****** [1251 done /970 queued / 16 running / 107 errors / 65% coverage ] ****** [1252 done /975 queued / 16 running / 107 errors / 65% coverage ] ****** [1252 done /975 queued / 16 running / 107 errors / 65% coverage ] ****** [1253 done /977 queued / 16 running / 107 errors / 65% coverage ] ****** [1253 done /977 queued / 16 running / 107 errors / 65% coverage ] ****** [1254 done /980 queued / 16 running / 107 errors / 65% coverage ] ****** [1254 done /980 queued / 16 running / 107 errors / 65% coverage ] ****** [1255 done /979 queued / 16 running / 108 errors / 65% coverage ] ****** [1255 done /979 queued / 16 running / 108 errors / 65% coverage ] ****** [1256 done /978 queued / 16 running / 108 errors / 65% coverage ] ****** [1256 done /978 queued / 16 running / 108 errors / 65% coverage ] ****** [1257 done /979 queued / 16 running / 108 errors / 65% coverage ] ****** [1257 done /979 queued / 16 running / 108 errors / 65% coverage ] ****** [1258 done /981 queued / 16 running / 108 errors / 65% coverage ] ****** [1258 done /981 queued / 16 running / 108 errors / 65% coverage ] ****** [1259 done /982 queued / 16 running / 108 errors / 65% coverage ] ****** [1259 done /982 queued / 16 running / 108 errors / 65% coverage ] ****** [1260 done /981 queued / 16 running / 108 errors / 65% coverage ] ****** [1260 done /981 queued / 16 running / 108 errors / 65% coverage ] ****** [1261 done /982 queued / 16 running / 108 errors / 65% coverage ] ****** [1261 done /982 queued / 16 running / 108 errors / 65% coverage ] ****** [1262 done /985 queued / 16 running / 108 errors / 65% coverage ] ****** [1262 done /985 queued / 16 running / 108 errors / 65% coverage ] ****** [1263 done /986 queued / 16 running / 109 errors / 65% coverage ] ****** [1263 done /986 queued / 16 running / 109 errors / 65% coverage ] ****** [1264 done /986 queued / 16 running / 109 errors / 65% coverage ] ****** [1264 done /986 queued / 16 running / 109 errors / 65% coverage ] ****** [1265 done /988 queued / 16 running / 109 errors / 65% coverage ] ****** [1265 done /988 queued / 16 running / 109 errors / 65% coverage ] ****** [1266 done /990 queued / 16 running / 109 errors / 65% coverage ] ****** [1266 done /990 queued / 16 running / 109 errors / 65% coverage ] ****** [1267 done /991 queued / 16 running / 110 errors / 65% coverage ] ****** [1267 done /991 queued / 16 running / 110 errors / 65% coverage ] ****** [1268 done /993 queued / 16 running / 110 errors / 65% coverage ] ****** [1268 done /993 queued / 16 running / 110 errors / 65% coverage ] ****** [1269 done /995 queued / 16 running / 110 errors / 65% coverage ] ****** [1269 done /995 queued / 16 running / 110 errors / 65% coverage ] ****** [1270 done /997 queued / 16 running / 110 errors / 65% coverage ] ****** [1270 done /997 queued / 16 running / 110 errors / 65% coverage ] ****** [1271 done /998 queued / 16 running / 110 errors / 65% coverage ] ****** [1271 done /998 queued / 16 running / 110 errors / 65% coverage ] ****** [1272 done /999 queued / 16 running / 110 errors / 65% coverage ] ****** [1272 done /999 queued / 16 running / 110 errors / 65% coverage ] ****** [1273 done /998 queued / 16 running / 111 errors / 65% coverage ] ****** [1273 done /998 queued / 16 running / 111 errors / 65% coverage ] ****** [1274 done /1001 queued / 16 running / 111 errors / 65% coverage ] ****** [1274 done /1001 queued / 16 running / 111 errors / 65% coverage ] ****** [1275 done /1004 queued / 16 running / 111 errors / 65% coverage ] ****** [1275 done /1004 queued / 16 running / 111 errors / 65% coverage ] ****** [1276 done /1004 queued / 16 running / 111 errors / 65% coverage ] ****** [1276 done /1004 queued / 16 running / 111 errors / 65% coverage ] ****** [1277 done /1007 queued / 16 running / 111 errors / 65% coverage ] ****** [1277 done /1007 queued / 16 running / 111 errors / 65% coverage ] ****** [1278 done /1009 queued / 16 running / 111 errors / 65% coverage ] ****** [1278 done /1009 queued / 16 running / 111 errors / 65% coverage ] ****** [1279 done /1011 queued / 16 running / 111 errors / 65% coverage ] ****** [1279 done /1011 queued / 16 running / 111 errors / 65% coverage ] ****** [1280 done /1013 queued / 16 running / 111 errors / 65% coverage ] ****** [1280 done /1013 queued / 16 running / 111 errors / 65% coverage ] ****** [1281 done /1014 queued / 16 running / 111 errors / 65% coverage ] ****** [1281 done /1014 queued / 16 running / 111 errors / 65% coverage ] ****** [1282 done /1016 queued / 16 running / 111 errors / 65% coverage ] ****** [1282 done /1016 queued / 16 running / 111 errors / 65% coverage ] ****** [1283 done /1017 queued / 16 running / 112 errors / 65% coverage ] ****** [1283 done /1017 queued / 16 running / 112 errors / 65% coverage ] ****** [1284 done /1018 queued / 16 running / 113 errors / 65% coverage ] ****** [1284 done /1018 queued / 16 running / 113 errors / 65% coverage ] ****** [1285 done /1023 queued / 16 running / 113 errors / 65% coverage ] ****** [1285 done /1023 queued / 16 running / 113 errors / 65% coverage ] ****** [1286 done /1025 queued / 16 running / 113 errors / 65% coverage ] ****** [1286 done /1025 queued / 16 running / 113 errors / 65% coverage ] ****** [1287 done /1025 queued / 16 running / 113 errors / 65% coverage ] ****** [1287 done /1025 queued / 16 running / 113 errors / 65% coverage ] ****** [1288 done /1024 queued / 16 running / 113 errors / 65% coverage ] ****** [1288 done /1024 queued / 16 running / 113 errors / 65% coverage ] ****** [1289 done /1026 queued / 16 running / 114 errors / 65% coverage ] ****** [1289 done /1026 queued / 16 running / 114 errors / 65% coverage ] ****** [1290 done /1026 queued / 16 running / 114 errors / 65% coverage ] ****** [1290 done /1026 queued / 16 running / 114 errors / 65% coverage ] ****** [1291 done /1025 queued / 16 running / 114 errors / 65% coverage ] ****** [1291 done /1025 queued / 16 running / 114 errors / 65% coverage ] ****** [1292 done /1027 queued / 16 running / 114 errors / 65% coverage ] ****** [1292 done /1027 queued / 16 running / 114 errors / 65% coverage ] ****** [1293 done /1026 queued / 16 running / 114 errors / 65% coverage ] ****** [1293 done /1026 queued / 16 running / 114 errors / 65% coverage ] ****** [1294 done /1026 queued / 16 running / 114 errors / 65% coverage ] ****** [1294 done /1026 queued / 16 running / 114 errors / 65% coverage ] ****** [1295 done /1028 queued / 16 running / 114 errors / 65% coverage ] ****** [1295 done /1028 queued / 16 running / 114 errors / 65% coverage ] ****** [1296 done /1030 queued / 16 running / 114 errors / 65% coverage ] ****** [1296 done /1030 queued / 16 running / 114 errors / 65% coverage ] ****** [1297 done /1029 queued / 16 running / 115 errors / 65% coverage ] ****** [1297 done /1029 queued / 16 running / 115 errors / 65% coverage ] ****** [1298 done /1028 queued / 16 running / 116 errors / 65% coverage ] ****** [1298 done /1028 queued / 16 running / 116 errors / 65% coverage ] ****** [1299 done /1030 queued / 16 running / 116 errors / 65% coverage ] ****** [1299 done /1030 queued / 16 running / 116 errors / 65% coverage ] ****** [1300 done /1029 queued / 16 running / 116 errors / 65% coverage ] ****** [1300 done /1029 queued / 16 running / 116 errors / 65% coverage ] ****** [1301 done /1030 queued / 16 running / 116 errors / 65% coverage ] ****** [1301 done /1030 queued / 16 running / 116 errors / 65% coverage ] ****** [1302 done /1031 queued / 16 running / 116 errors / 65% coverage ] ****** [1302 done /1031 queued / 16 running / 116 errors / 65% coverage ] ****** [1303 done /1030 queued / 16 running / 117 errors / 65% coverage ] ****** [1303 done /1030 queued / 16 running / 117 errors / 65% coverage ] ****** [1304 done /1031 queued / 16 running / 118 errors / 65% coverage ] ****** [1304 done /1031 queued / 16 running / 118 errors / 65% coverage ] ****** [1305 done /1031 queued / 16 running / 118 errors / 65% coverage ] ****** [1305 done /1031 queued / 16 running / 118 errors / 65% coverage ] ****** [1306 done /1032 queued / 16 running / 118 errors / 65% coverage ] ****** [1306 done /1032 queued / 16 running / 118 errors / 65% coverage ] ****** [1307 done /1032 queued / 16 running / 118 errors / 65% coverage ] ****** [1307 done /1032 queued / 16 running / 118 errors / 65% coverage ] ****** [1308 done /1032 queued / 16 running / 118 errors / 65% coverage ] ****** [1308 done /1032 queued / 16 running / 118 errors / 65% coverage ] ****** [1309 done /1033 queued / 16 running / 119 errors / 65% coverage ] ****** [1309 done /1033 queued / 16 running / 119 errors / 65% coverage ] ****** [1310 done /1034 queued / 16 running / 119 errors / 65% coverage ] ****** [1310 done /1034 queued / 16 running / 119 errors / 65% coverage ] ****** [1311 done /1035 queued / 16 running / 119 errors / 65% coverage ] ****** [1311 done /1035 queued / 16 running / 119 errors / 65% coverage ] ****** [1312 done /1036 queued / 16 running / 119 errors / 65% coverage ] ****** [1312 done /1036 queued / 16 running / 119 errors / 65% coverage ] ****** [1313 done /1038 queued / 16 running / 119 errors / 65% coverage ] ****** [1313 done /1038 queued / 16 running / 119 errors / 65% coverage ] ****** [1314 done /1037 queued / 16 running / 119 errors / 65% coverage ] ****** [1314 done /1037 queued / 16 running / 119 errors / 65% coverage ] ****** [1315 done /1037 queued / 16 running / 119 errors / 65% coverage ] ****** [1315 done /1037 queued / 16 running / 119 errors / 65% coverage ] ****** [1316 done /1039 queued / 16 running / 119 errors / 65% coverage ] ****** [1316 done /1039 queued / 16 running / 119 errors / 65% coverage ] ****** [1317 done /1040 queued / 16 running / 119 errors / 65% coverage ] ****** [1317 done /1040 queued / 16 running / 119 errors / 65% coverage ] ****** [1318 done /1043 queued / 16 running / 119 errors / 65% coverage ] ****** [1318 done /1043 queued / 16 running / 119 errors / 65% coverage ] ****** [1319 done /1046 queued / 16 running / 119 errors / 65% coverage ] ****** [1319 done /1046 queued / 16 running / 119 errors / 65% coverage ] ****** [1320 done /1046 queued / 16 running / 119 errors / 65% coverage ] ****** [1320 done /1046 queued / 16 running / 119 errors / 65% coverage ] ****** [1321 done /1048 queued / 16 running / 119 errors / 65% coverage ] ****** [1321 done /1048 queued / 16 running / 119 errors / 65% coverage ] ****** [1322 done /1049 queued / 16 running / 120 errors / 65% coverage ] ****** [1322 done /1049 queued / 16 running / 120 errors / 65% coverage ] ****** [1323 done /1054 queued / 16 running / 120 errors / 65% coverage ] ****** [1323 done /1054 queued / 16 running / 120 errors / 65% coverage ] ****** [1324 done /1058 queued / 16 running / 120 errors / 65% coverage ] ****** [1324 done /1058 queued / 16 running / 120 errors / 65% coverage ] ****** [1325 done /1061 queued / 16 running / 120 errors / 65% coverage ] ****** [1325 done /1061 queued / 16 running / 120 errors / 65% coverage ] ****** [1326 done /1062 queued / 16 running / 120 errors / 65% coverage ] ****** [1326 done /1062 queued / 16 running / 120 errors / 65% coverage ] ****** [1327 done /1064 queued / 16 running / 120 errors / 65% coverage ] ****** [1327 done /1064 queued / 16 running / 120 errors / 65% coverage ] ****** [1328 done /1065 queued / 16 running / 120 errors / 65% coverage ] ****** [1328 done /1065 queued / 16 running / 120 errors / 65% coverage ] ****** [1329 done /1067 queued / 16 running / 120 errors / 65% coverage ] ****** [1329 done /1067 queued / 16 running / 120 errors / 65% coverage ] ****** [1330 done /1068 queued / 16 running / 120 errors / 65% coverage ] ****** [1330 done /1068 queued / 16 running / 120 errors / 65% coverage ] ****** [1331 done /1070 queued / 16 running / 120 errors / 65% coverage ] ****** [1331 done /1070 queued / 16 running / 120 errors / 65% coverage ] ****** [1332 done /1073 queued / 16 running / 120 errors / 65% coverage ] ****** [1332 done /1073 queued / 16 running / 120 errors / 65% coverage ] ****** [1333 done /1072 queued / 16 running / 120 errors / 65% coverage ] ****** [1333 done /1072 queued / 16 running / 120 errors / 65% coverage ] ****** [1334 done /1072 queued / 16 running / 120 errors / 65% coverage ] ****** [1334 done /1072 queued / 16 running / 120 errors / 65% coverage ] ****** [1335 done /1072 queued / 16 running / 120 errors / 65% coverage ] ****** [1335 done /1072 queued / 16 running / 120 errors / 65% coverage ] ****** [1336 done /1071 queued / 16 running / 120 errors / 65% coverage ] ****** [1336 done /1071 queued / 16 running / 120 errors / 65% coverage ] ****** [1337 done /1073 queued / 16 running / 121 errors / 65% coverage ] ****** [1337 done /1073 queued / 16 running / 121 errors / 65% coverage ] ****** [1338 done /1072 queued / 16 running / 121 errors / 65% coverage ] ****** [1338 done /1072 queued / 16 running / 121 errors / 65% coverage ] ****** [1339 done /1071 queued / 16 running / 121 errors / 65% coverage ] ****** [1339 done /1071 queued / 16 running / 121 errors / 65% coverage ] ****** [1340 done /1071 queued / 16 running / 121 errors / 65% coverage ] ****** [1340 done /1071 queued / 16 running / 121 errors / 65% coverage ] ****** [1341 done /1071 queued / 16 running / 121 errors / 65% coverage ] ****** [1341 done /1071 queued / 16 running / 121 errors / 65% coverage ] ****** [1342 done /1071 queued / 16 running / 121 errors / 65% coverage ] ****** [1342 done /1071 queued / 16 running / 121 errors / 65% coverage ] ****** [1343 done /1070 queued / 16 running / 121 errors / 65% coverage ] ****** [1343 done /1070 queued / 16 running / 121 errors / 65% coverage ] ****** [1344 done /1071 queued / 16 running / 121 errors / 65% coverage ] ****** [1344 done /1071 queued / 16 running / 121 errors / 65% coverage ] ****** [1345 done /1072 queued / 16 running / 121 errors / 65% coverage ] ****** [1345 done /1072 queued / 16 running / 121 errors / 65% coverage ] ****** [1346 done /1071 queued / 16 running / 121 errors / 65% coverage ] ****** [1346 done /1071 queued / 16 running / 121 errors / 65% coverage ] ****** [1347 done /1072 queued / 16 running / 121 errors / 65% coverage ] ****** [1347 done /1072 queued / 16 running / 121 errors / 65% coverage ] ****** [1348 done /1072 queued / 16 running / 121 errors / 65% coverage ] ****** [1348 done /1072 queued / 16 running / 121 errors / 65% coverage ] ****** [1349 done /1074 queued / 16 running / 121 errors / 65% coverage ] ****** [1349 done /1074 queued / 16 running / 121 errors / 65% coverage ] ****** [1350 done /1075 queued / 16 running / 121 errors / 65% coverage ] ****** [1350 done /1075 queued / 16 running / 121 errors / 65% coverage ] ****** [1351 done /1074 queued / 16 running / 122 errors / 65% coverage ] ****** [1351 done /1074 queued / 16 running / 122 errors / 65% coverage ] ****** [1352 done /1073 queued / 16 running / 122 errors / 65% coverage ] ****** [1352 done /1073 queued / 16 running / 122 errors / 65% coverage ] ****** [1353 done /1076 queued / 16 running / 122 errors / 65% coverage ] ****** [1353 done /1076 queued / 16 running / 122 errors / 65% coverage ] ****** [1354 done /1077 queued / 16 running / 122 errors / 65% coverage ] ****** [1354 done /1077 queued / 16 running / 122 errors / 65% coverage ] ****** [1355 done /1079 queued / 16 running / 122 errors / 65% coverage ] ****** [1355 done /1079 queued / 16 running / 122 errors / 65% coverage ] ****** [1356 done /1078 queued / 16 running / 122 errors / 65% coverage ] ****** [1356 done /1078 queued / 16 running / 122 errors / 65% coverage ] ****** [1357 done /1078 queued / 16 running / 122 errors / 65% coverage ] ****** [1357 done /1078 queued / 16 running / 122 errors / 65% coverage ] ****** [1358 done /1079 queued / 16 running / 122 errors / 65% coverage ] ****** [1358 done /1079 queued / 16 running / 122 errors / 65% coverage ] ****** [1359 done /1080 queued / 16 running / 122 errors / 65% coverage ] ****** [1359 done /1080 queued / 16 running / 122 errors / 65% coverage ] ****** [1360 done /1081 queued / 16 running / 122 errors / 65% coverage ] ****** [1360 done /1081 queued / 16 running / 122 errors / 65% coverage ] ****** [1361 done /1080 queued / 16 running / 122 errors / 65% coverage ] ****** [1361 done /1080 queued / 16 running / 122 errors / 65% coverage ] ****** [1362 done /1081 queued / 16 running / 122 errors / 65% coverage ] ****** [1362 done /1081 queued / 16 running / 122 errors / 65% coverage ] ****** [1363 done /1082 queued / 16 running / 122 errors / 65% coverage ] ****** [1363 done /1082 queued / 16 running / 122 errors / 65% coverage ] ****** [1364 done /1081 queued / 16 running / 122 errors / 65% coverage ] ****** [1364 done /1081 queued / 16 running / 122 errors / 65% coverage ] ****** [1365 done /1081 queued / 16 running / 122 errors / 65% coverage ] ****** [1365 done /1081 queued / 16 running / 122 errors / 65% coverage ] ****** [1366 done /1082 queued / 16 running / 122 errors / 65% coverage ] ****** [1366 done /1082 queued / 16 running / 122 errors / 65% coverage ] ****** [1367 done /1083 queued / 16 running / 122 errors / 65% coverage ] ****** [1367 done /1083 queued / 16 running / 122 errors / 65% coverage ] ****** [1368 done /1085 queued / 16 running / 122 errors / 65% coverage ] ****** [1368 done /1085 queued / 16 running / 122 errors / 65% coverage ] ****** [1369 done /1085 queued / 16 running / 122 errors / 65% coverage ] ****** [1369 done /1085 queued / 16 running / 122 errors / 65% coverage ] ****** [1370 done /1084 queued / 16 running / 122 errors / 65% coverage ] ****** [1370 done /1084 queued / 16 running / 122 errors / 65% coverage ] ****** [1371 done /1085 queued / 16 running / 122 errors / 65% coverage ] ****** [1371 done /1085 queued / 16 running / 122 errors / 65% coverage ] ****** [1372 done /1086 queued / 16 running / 122 errors / 65% coverage ] ****** [1372 done /1086 queued / 16 running / 122 errors / 65% coverage ] ****** [1373 done /1090 queued / 16 running / 122 errors / 65% coverage ] ****** [1373 done /1090 queued / 16 running / 122 errors / 65% coverage ] ****** [1374 done /1091 queued / 16 running / 122 errors / 65% coverage ] ****** [1374 done /1091 queued / 16 running / 122 errors / 65% coverage ] ****** [1375 done /1094 queued / 16 running / 122 errors / 65% coverage ] ****** [1375 done /1094 queued / 16 running / 122 errors / 65% coverage ] ****** [1376 done /1096 queued / 16 running / 122 errors / 65% coverage ] ****** [1376 done /1096 queued / 16 running / 122 errors / 65% coverage ] ****** [1377 done /1095 queued / 16 running / 122 errors / 65% coverage ] ****** [1377 done /1095 queued / 16 running / 122 errors / 65% coverage ] ****** [1378 done /1098 queued / 16 running / 122 errors / 65% coverage ] ****** [1378 done /1098 queued / 16 running / 122 errors / 65% coverage ] ****** [1379 done /1097 queued / 16 running / 122 errors / 65% coverage ] ****** [1379 done /1097 queued / 16 running / 122 errors / 65% coverage ] ****** [1380 done /1098 queued / 16 running / 122 errors / 65% coverage ] ****** [1380 done /1098 queued / 16 running / 122 errors / 65% coverage ] ****** [1381 done /1102 queued / 16 running / 122 errors / 65% coverage ] ****** [1381 done /1102 queued / 16 running / 122 errors / 65% coverage ] ****** [1382 done /1103 queued / 16 running / 122 errors / 65% coverage ] ****** [1382 done /1103 queued / 16 running / 122 errors / 65% coverage ] ****** [1383 done /1106 queued / 16 running / 122 errors / 65% coverage ] ****** [1383 done /1106 queued / 16 running / 122 errors / 65% coverage ] ****** [1384 done /1108 queued / 16 running / 122 errors / 65% coverage ] ****** [1384 done /1108 queued / 16 running / 122 errors / 65% coverage ] ****** [1385 done /1109 queued / 16 running / 122 errors / 65% coverage ] ****** [1385 done /1109 queued / 16 running / 122 errors / 65% coverage ] ****** [1386 done /1113 queued / 16 running / 122 errors / 65% coverage ] ****** [1386 done /1113 queued / 16 running / 122 errors / 65% coverage ] ****** [1387 done /1114 queued / 16 running / 122 errors / 65% coverage ] ****** [1387 done /1114 queued / 16 running / 122 errors / 65% coverage ] ****** [1388 done /1118 queued / 16 running / 122 errors / 65% coverage ] ****** [1388 done /1118 queued / 16 running / 122 errors / 65% coverage ] ****** [1389 done /1118 queued / 16 running / 122 errors / 65% coverage ] ****** [1389 done /1118 queued / 16 running / 122 errors / 65% coverage ] ****** [1390 done /1119 queued / 16 running / 122 errors / 65% coverage ] ****** [1390 done /1119 queued / 16 running / 122 errors / 65% coverage ] ****** [1391 done /1119 queued / 16 running / 122 errors / 65% coverage ] ****** [1391 done /1119 queued / 16 running / 122 errors / 65% coverage ] ****** [1392 done /1118 queued / 16 running / 122 errors / 65% coverage ] ****** [1392 done /1118 queued / 16 running / 122 errors / 65% coverage ] ****** [1393 done /1118 queued / 16 running / 122 errors / 65% coverage ] ****** [1393 done /1118 queued / 16 running / 122 errors / 65% coverage ] ****** [1394 done /1118 queued / 16 running / 122 errors / 65% coverage ] ****** [1394 done /1118 queued / 16 running / 122 errors / 65% coverage ] ****** [1395 done /1117 queued / 16 running / 122 errors / 65% coverage ] ****** [1395 done /1117 queued / 16 running / 122 errors / 65% coverage ] ****** [1396 done /1119 queued / 16 running / 122 errors / 65% coverage ] ****** [1396 done /1119 queued / 16 running / 122 errors / 65% coverage ] ****** [1397 done /1120 queued / 16 running / 122 errors / 65% coverage ] ****** [1397 done /1120 queued / 16 running / 122 errors / 65% coverage ] ****** [1398 done /1121 queued / 16 running / 122 errors / 65% coverage ] ****** [1398 done /1121 queued / 16 running / 122 errors / 65% coverage ] ****** [1399 done /1121 queued / 16 running / 122 errors / 65% coverage ] ****** [1399 done /1121 queued / 16 running / 122 errors / 65% coverage ] ****** [1400 done /1121 queued / 16 running / 122 errors / 65% coverage ] ****** [1400 done /1121 queued / 16 running / 122 errors / 65% coverage ] ****** [1401 done /1122 queued / 16 running / 122 errors / 65% coverage ] ****** [1401 done /1122 queued / 16 running / 122 errors / 65% coverage ] ****** [1402 done /1122 queued / 16 running / 122 errors / 65% coverage ] ****** [1402 done /1122 queued / 16 running / 122 errors / 65% coverage ] ****** [1403 done /1122 queued / 16 running / 122 errors / 65% coverage ] ****** [1403 done /1122 queued / 16 running / 122 errors / 65% coverage ] ****** [1404 done /1122 queued / 16 running / 122 errors / 65% coverage ] ****** [1404 done /1122 queued / 16 running / 122 errors / 65% coverage ] ****** [1405 done /1122 queued / 16 running / 122 errors / 65% coverage ] ****** [1405 done /1122 queued / 16 running / 122 errors / 65% coverage ] ****** [1406 done /1123 queued / 16 running / 122 errors / 65% coverage ] ****** [1406 done /1123 queued / 16 running / 122 errors / 65% coverage ] ****** [1407 done /1123 queued / 16 running / 122 errors / 65% coverage ] ****** [1407 done /1123 queued / 16 running / 122 errors / 65% coverage ] ****** [1408 done /1124 queued / 16 running / 122 errors / 65% coverage ] ****** [1408 done /1124 queued / 16 running / 122 errors / 65% coverage ] ****** [1409 done /1124 queued / 16 running / 122 errors / 65% coverage ] ****** [1409 done /1124 queued / 16 running / 122 errors / 65% coverage ] ****** [1410 done /1124 queued / 16 running / 122 errors / 65% coverage ] ****** [1410 done /1124 queued / 16 running / 122 errors / 65% coverage ] ****** [1411 done /1124 queued / 16 running / 122 errors / 65% coverage ] ****** [1411 done /1124 queued / 16 running / 122 errors / 65% coverage ] ****** [1412 done /1125 queued / 16 running / 122 errors / 65% coverage ] ****** [1412 done /1125 queued / 16 running / 122 errors / 65% coverage ] ****** [1413 done /1126 queued / 16 running / 122 errors / 65% coverage ] ****** [1413 done /1126 queued / 16 running / 122 errors / 65% coverage ] ****** [1414 done /1126 queued / 16 running / 122 errors / 65% coverage ] ****** [1414 done /1126 queued / 16 running / 122 errors / 65% coverage ] ****** [1415 done /1126 queued / 16 running / 122 errors / 65% coverage ] ****** [1415 done /1126 queued / 16 running / 122 errors / 65% coverage ] ****** [1416 done /1126 queued / 16 running / 122 errors / 65% coverage ] ****** [1416 done /1126 queued / 16 running / 122 errors / 65% coverage ] ****** [1417 done /1126 queued / 16 running / 122 errors / 65% coverage ] ****** [1417 done /1126 queued / 16 running / 122 errors / 65% coverage ] ****** [1418 done /1126 queued / 16 running / 122 errors / 65% coverage ] ****** [1418 done /1126 queued / 16 running / 122 errors / 65% coverage ] ****** [1419 done /1125 queued / 16 running / 122 errors / 65% coverage ] ****** [1419 done /1125 queued / 16 running / 122 errors / 65% coverage ] ****** [1420 done /1126 queued / 16 running / 122 errors / 65% coverage ] ****** [1420 done /1126 queued / 16 running / 122 errors / 65% coverage ] ****** [1421 done /1126 queued / 16 running / 122 errors / 65% coverage ] ****** [1421 done /1126 queued / 16 running / 122 errors / 65% coverage ] ****** [1422 done /1128 queued / 16 running / 122 errors / 65% coverage ] ****** [1422 done /1128 queued / 16 running / 122 errors / 65% coverage ] ****** [1423 done /1130 queued / 16 running / 122 errors / 65% coverage ] ****** [1423 done /1130 queued / 16 running / 122 errors / 65% coverage ] ****** [1424 done /1131 queued / 16 running / 122 errors / 65% coverage ] ****** [1424 done /1131 queued / 16 running / 122 errors / 65% coverage ] ****** [1425 done /1132 queued / 16 running / 122 errors / 65% coverage ] ****** [1425 done /1132 queued / 16 running / 122 errors / 65% coverage ] ****** [1426 done /1135 queued / 16 running / 122 errors / 65% coverage ] ****** [1426 done /1135 queued / 16 running / 122 errors / 65% coverage ] ****** [1427 done /1136 queued / 16 running / 122 errors / 65% coverage ] ****** [1427 done /1136 queued / 16 running / 122 errors / 65% coverage ] ****** [1428 done /1138 queued / 16 running / 122 errors / 65% coverage ] ****** [1428 done /1138 queued / 16 running / 122 errors / 65% coverage ] ****** [1429 done /1139 queued / 16 running / 122 errors / 65% coverage ] ****** [1429 done /1139 queued / 16 running / 122 errors / 65% coverage ] ****** [1430 done /1142 queued / 16 running / 122 errors / 65% coverage ] ****** [1430 done /1142 queued / 16 running / 122 errors / 65% coverage ] ****** [1431 done /1143 queued / 16 running / 122 errors / 65% coverage ] ****** [1431 done /1143 queued / 16 running / 122 errors / 65% coverage ] ****** [1432 done /1145 queued / 16 running / 122 errors / 65% coverage ] ****** [1432 done /1145 queued / 16 running / 122 errors / 65% coverage ] ****** [1433 done /1147 queued / 16 running / 122 errors / 65% coverage ] ****** [1433 done /1147 queued / 16 running / 122 errors / 65% coverage ] ****** [1434 done /1148 queued / 16 running / 122 errors / 65% coverage ] ****** [1434 done /1148 queued / 16 running / 122 errors / 65% coverage ] ****** [1435 done /1152 queued / 16 running / 122 errors / 65% coverage ] ****** [1435 done /1152 queued / 16 running / 122 errors / 65% coverage ] ****** [1436 done /1151 queued / 16 running / 122 errors / 65% coverage ] ****** [1436 done /1151 queued / 16 running / 122 errors / 65% coverage ] ****** [1437 done /1151 queued / 16 running / 122 errors / 65% coverage ] ****** [1437 done /1151 queued / 16 running / 122 errors / 65% coverage ] ****** [1438 done /1153 queued / 16 running / 122 errors / 65% coverage ] ****** [1438 done /1153 queued / 16 running / 122 errors / 65% coverage ] ****** [1439 done /1153 queued / 16 running / 122 errors / 65% coverage ] ****** [1439 done /1153 queued / 16 running / 122 errors / 65% coverage ] ****** [1440 done /1156 queued / 16 running / 122 errors / 65% coverage ] ****** [1440 done /1156 queued / 16 running / 122 errors / 65% coverage ] ****** [1441 done /1161 queued / 16 running / 122 errors / 65% coverage ] ****** [1441 done /1161 queued / 16 running / 122 errors / 65% coverage ] ****** [1442 done /1162 queued / 16 running / 122 errors / 65% coverage ] ****** [1442 done /1162 queued / 16 running / 122 errors / 65% coverage ] ****** [1443 done /1164 queued / 16 running / 122 errors / 65% coverage ] ****** [1443 done /1164 queued / 16 running / 122 errors / 65% coverage ] ****** [1444 done /1165 queued / 16 running / 122 errors / 65% coverage ] ****** [1444 done /1165 queued / 16 running / 122 errors / 65% coverage ] ****** [1445 done /1168 queued / 16 running / 122 errors / 65% coverage ] ****** [1445 done /1168 queued / 16 running / 122 errors / 65% coverage ] ****** [1446 done /1169 queued / 16 running / 122 errors / 65% coverage ] ****** [1446 done /1169 queued / 16 running / 122 errors / 65% coverage ] ****** [1447 done /1170 queued / 16 running / 122 errors / 65% coverage ] ****** [1447 done /1170 queued / 16 running / 122 errors / 65% coverage ] ****** [1448 done /1171 queued / 16 running / 122 errors / 65% coverage ] ****** [1448 done /1171 queued / 16 running / 122 errors / 65% coverage ] ****** [1449 done /1175 queued / 16 running / 122 errors / 65% coverage ] ****** [1449 done /1175 queued / 16 running / 122 errors / 65% coverage ] ****** [1450 done /1174 queued / 16 running / 122 errors / 65% coverage ] ****** [1450 done /1174 queued / 16 running / 122 errors / 65% coverage ] ****** [1451 done /1176 queued / 16 running / 122 errors / 65% coverage ] ****** [1451 done /1176 queued / 16 running / 122 errors / 65% coverage ] ****** [1452 done /1176 queued / 16 running / 122 errors / 65% coverage ] ****** [1452 done /1176 queued / 16 running / 122 errors / 65% coverage ] ****** [1453 done /1180 queued / 16 running / 122 errors / 65% coverage ] ****** [1453 done /1180 queued / 16 running / 122 errors / 65% coverage ] ****** [1454 done /1180 queued / 16 running / 122 errors / 65% coverage ] ****** [1454 done /1180 queued / 16 running / 122 errors / 65% coverage ] ****** [1455 done /1181 queued / 16 running / 122 errors / 65% coverage ] ****** [1455 done /1181 queued / 16 running / 122 errors / 65% coverage ] ****** [1456 done /1182 queued / 16 running / 122 errors / 65% coverage ] ****** [1456 done /1182 queued / 16 running / 122 errors / 65% coverage ] ****** [1457 done /1182 queued / 16 running / 122 errors / 65% coverage ] ****** [1457 done /1182 queued / 16 running / 122 errors / 65% coverage ] ****** [1458 done /1184 queued / 16 running / 122 errors / 65% coverage ] ****** [1458 done /1184 queued / 16 running / 122 errors / 65% coverage ] ****** [1459 done /1185 queued / 16 running / 122 errors / 65% coverage ] ****** [1459 done /1185 queued / 16 running / 122 errors / 65% coverage ] ****** [1460 done /1186 queued / 16 running / 122 errors / 65% coverage ] ****** [1460 done /1186 queued / 16 running / 122 errors / 65% coverage ] ****** [1461 done /1188 queued / 16 running / 122 errors / 65% coverage ] ****** [1461 done /1188 queued / 16 running / 122 errors / 65% coverage ] ****** [1462 done /1190 queued / 16 running / 122 errors / 65% coverage ] ****** [1462 done /1190 queued / 16 running / 122 errors / 65% coverage ] ****** [1463 done /1189 queued / 16 running / 122 errors / 65% coverage ] ****** [1463 done /1189 queued / 16 running / 122 errors / 65% coverage ] ****** [1464 done /1190 queued / 16 running / 122 errors / 65% coverage ] ****** [1464 done /1190 queued / 16 running / 122 errors / 65% coverage ] ****** [1465 done /1190 queued / 16 running / 122 errors / 65% coverage ] ****** [1465 done /1190 queued / 16 running / 122 errors / 65% coverage ] ****** [1466 done /1191 queued / 16 running / 122 errors / 65% coverage ] ****** [1466 done /1191 queued / 16 running / 122 errors / 65% coverage ] ****** [1467 done /1191 queued / 16 running / 122 errors / 65% coverage ] ****** [1467 done /1191 queued / 16 running / 122 errors / 65% coverage ] ****** [1468 done /1191 queued / 16 running / 122 errors / 65% coverage ] ****** [1468 done /1191 queued / 16 running / 122 errors / 65% coverage ] ****** [1469 done /1194 queued / 16 running / 122 errors / 65% coverage ] ****** [1469 done /1194 queued / 16 running / 122 errors / 65% coverage ] ****** [1470 done /1196 queued / 16 running / 122 errors / 65% coverage ] ****** [1470 done /1196 queued / 16 running / 122 errors / 65% coverage ] ****** [1471 done /1197 queued / 16 running / 122 errors / 65% coverage ] ****** [1471 done /1197 queued / 16 running / 122 errors / 65% coverage ] ****** [1472 done /1198 queued / 16 running / 122 errors / 65% coverage ] ****** [1472 done /1198 queued / 16 running / 122 errors / 65% coverage ] ****** [1473 done /1201 queued / 16 running / 122 errors / 65% coverage ] ****** [1473 done /1201 queued / 16 running / 122 errors / 65% coverage ] ****** [1474 done /1202 queued / 16 running / 122 errors / 65% coverage ] ****** [1474 done /1202 queued / 16 running / 122 errors / 65% coverage ] ****** [1475 done /1204 queued / 16 running / 122 errors / 65% coverage ] ****** [1475 done /1204 queued / 16 running / 122 errors / 65% coverage ] ****** [1476 done /1204 queued / 16 running / 122 errors / 65% coverage ] ****** [1476 done /1204 queued / 16 running / 122 errors / 65% coverage ] ****** [1477 done /1206 queued / 16 running / 122 errors / 65% coverage ] ****** [1477 done /1206 queued / 16 running / 122 errors / 65% coverage ] ****** [1478 done /1206 queued / 16 running / 122 errors / 65% coverage ] ****** [1478 done /1206 queued / 16 running / 122 errors / 65% coverage ] ****** [1479 done /1207 queued / 16 running / 122 errors / 65% coverage ] ****** [1479 done /1207 queued / 16 running / 122 errors / 65% coverage ] ****** [1480 done /1208 queued / 16 running / 122 errors / 65% coverage ] ****** [1480 done /1208 queued / 16 running / 122 errors / 65% coverage ] ****** [1481 done /1208 queued / 16 running / 122 errors / 65% coverage ] ****** [1481 done /1208 queued / 16 running / 122 errors / 65% coverage ] ****** [1482 done /1212 queued / 16 running / 122 errors / 65% coverage ] ****** [1482 done /1212 queued / 16 running / 122 errors / 65% coverage ] ****** [1483 done /1215 queued / 16 running / 122 errors / 65% coverage ] ****** [1483 done /1215 queued / 16 running / 122 errors / 65% coverage ] ****** [1484 done /1217 queued / 16 running / 122 errors / 65% coverage ] ****** [1484 done /1217 queued / 16 running / 122 errors / 65% coverage ] ****** [1485 done /1218 queued / 16 running / 122 errors / 65% coverage ] ****** [1485 done /1218 queued / 16 running / 122 errors / 65% coverage ] ****** [1486 done /1221 queued / 16 running / 122 errors / 65% coverage ] ****** [1486 done /1221 queued / 16 running / 122 errors / 65% coverage ] ****** [1487 done /1222 queued / 16 running / 122 errors / 65% coverage ] ****** [1487 done /1222 queued / 16 running / 122 errors / 65% coverage ] ****** [1488 done /1222 queued / 16 running / 122 errors / 65% coverage ] ****** [1488 done /1222 queued / 16 running / 122 errors / 65% coverage ] ****** [1489 done /1221 queued / 16 running / 122 errors / 65% coverage ] ****** [1489 done /1221 queued / 16 running / 122 errors / 65% coverage ] ****** [1490 done /1221 queued / 16 running / 122 errors / 65% coverage ] ****** [1490 done /1221 queued / 16 running / 122 errors / 65% coverage ] ****** [1491 done /1222 queued / 16 running / 122 errors / 65% coverage ] ****** [1491 done /1222 queued / 16 running / 122 errors / 65% coverage ] ****** [1492 done /1222 queued / 16 running / 122 errors / 65% coverage ] ****** [1492 done /1222 queued / 16 running / 122 errors / 65% coverage ] ****** [1493 done /1226 queued / 16 running / 122 errors / 65% coverage ] ****** [1493 done /1226 queued / 16 running / 122 errors / 65% coverage ] ****** [1494 done /1227 queued / 16 running / 122 errors / 65% coverage ] ****** [1494 done /1227 queued / 16 running / 122 errors / 65% coverage ] ****** [1495 done /1228 queued / 16 running / 122 errors / 65% coverage ] ****** [1495 done /1228 queued / 16 running / 122 errors / 65% coverage ] ****** [1496 done /1231 queued / 16 running / 122 errors / 65% coverage ] ****** [1496 done /1231 queued / 16 running / 122 errors / 65% coverage ] ****** [1497 done /1230 queued / 16 running / 122 errors / 65% coverage ] ****** [1497 done /1230 queued / 16 running / 122 errors / 65% coverage ] ****** [1498 done /1232 queued / 16 running / 122 errors / 65% coverage ] ****** [1498 done /1232 queued / 16 running / 122 errors / 65% coverage ] ****** [1499 done /1232 queued / 16 running / 122 errors / 65% coverage ] ****** [1499 done /1232 queued / 16 running / 122 errors / 65% coverage ] ****** [1500 done /1232 queued / 16 running / 122 errors / 65% coverage ] ****** [1500 done /1232 queued / 16 running / 122 errors / 65% coverage ] ****** [1501 done /1232 queued / 16 running / 122 errors / 65% coverage ] ****** [1501 done /1232 queued / 16 running / 122 errors / 65% coverage ] ****** [1502 done /1233 queued / 16 running / 122 errors / 65% coverage ] ****** [1502 done /1233 queued / 16 running / 122 errors / 65% coverage ] ****** [1503 done /1233 queued / 16 running / 122 errors / 65% coverage ] ****** [1503 done /1233 queued / 16 running / 122 errors / 65% coverage ] ****** [1504 done /1233 queued / 16 running / 122 errors / 65% coverage ] ****** [1504 done /1233 queued / 16 running / 122 errors / 65% coverage ] ****** [1505 done /1232 queued / 16 running / 122 errors / 65% coverage ] ****** [1505 done /1232 queued / 16 running / 122 errors / 65% coverage ] ****** [1506 done /1233 queued / 16 running / 122 errors / 65% coverage ] ****** [1506 done /1233 queued / 16 running / 122 errors / 65% coverage ] ****** [1507 done /1234 queued / 16 running / 122 errors / 65% coverage ] ****** [1507 done /1234 queued / 16 running / 122 errors / 65% coverage ] ****** [1508 done /1234 queued / 16 running / 122 errors / 65% coverage ] ****** [1508 done /1234 queued / 16 running / 122 errors / 65% coverage ] ****** [1509 done /1235 queued / 16 running / 122 errors / 65% coverage ] ****** [1509 done /1235 queued / 16 running / 122 errors / 65% coverage ] ****** [1510 done /1235 queued / 16 running / 122 errors / 65% coverage ] ****** [1510 done /1235 queued / 16 running / 122 errors / 65% coverage ] ****** [1511 done /1234 queued / 16 running / 122 errors / 65% coverage ] ****** [1511 done /1234 queued / 16 running / 122 errors / 65% coverage ] ****** [1512 done /1234 queued / 16 running / 122 errors / 65% coverage ] ****** [1512 done /1234 queued / 16 running / 122 errors / 65% coverage ] ****** [1513 done /1234 queued / 16 running / 122 errors / 65% coverage ] ****** [1513 done /1234 queued / 16 running / 122 errors / 65% coverage ] ****** [1514 done /1233 queued / 16 running / 122 errors / 65% coverage ] ****** [1514 done /1233 queued / 16 running / 122 errors / 65% coverage ] ****** [1515 done /1232 queued / 16 running / 122 errors / 65% coverage ] ****** [1515 done /1232 queued / 16 running / 122 errors / 65% coverage ] ****** [1516 done /1231 queued / 16 running / 122 errors / 65% coverage ] ****** [1516 done /1231 queued / 16 running / 122 errors / 65% coverage ] ****** [1517 done /1230 queued / 16 running / 122 errors / 65% coverage ] ****** [1517 done /1230 queued / 16 running / 122 errors / 65% coverage ] ****** [1518 done /1231 queued / 16 running / 122 errors / 65% coverage ] ****** [1518 done /1231 queued / 16 running / 122 errors / 65% coverage ] ****** [1519 done /1231 queued / 16 running / 122 errors / 65% coverage ] ****** [1519 done /1231 queued / 16 running / 122 errors / 65% coverage ] ****** [1520 done /1236 queued / 16 running / 122 errors / 65% coverage ] ****** [1520 done /1236 queued / 16 running / 122 errors / 65% coverage ] ****** [1521 done /1235 queued / 16 running / 122 errors / 65% coverage ] ****** [1521 done /1235 queued / 16 running / 122 errors / 65% coverage ] ****** [1522 done /1237 queued / 16 running / 122 errors / 65% coverage ] ****** [1522 done /1237 queued / 16 running / 122 errors / 65% coverage ] ****** [1523 done /1239 queued / 16 running / 122 errors / 65% coverage ] ****** [1523 done /1239 queued / 16 running / 122 errors / 65% coverage ] ****** [1524 done /1239 queued / 16 running / 122 errors / 65% coverage ] ****** [1524 done /1239 queued / 16 running / 122 errors / 65% coverage ] ****** [1525 done /1241 queued / 16 running / 122 errors / 65% coverage ] ****** [1525 done /1241 queued / 16 running / 122 errors / 65% coverage ] ****** [1526 done /1244 queued / 16 running / 122 errors / 65% coverage ] ****** [1526 done /1244 queued / 16 running / 122 errors / 65% coverage ] ****** [1527 done /1246 queued / 16 running / 122 errors / 65% coverage ] ****** [1527 done /1246 queued / 16 running / 122 errors / 65% coverage ] ****** [1528 done /1248 queued / 16 running / 122 errors / 65% coverage ] ****** [1528 done /1248 queued / 16 running / 122 errors / 65% coverage ] ****** [1529 done /1250 queued / 16 running / 122 errors / 65% coverage ] ****** [1529 done /1250 queued / 16 running / 122 errors / 65% coverage ] ****** [1530 done /1253 queued / 16 running / 123 errors / 65% coverage ] ****** [1530 done /1253 queued / 16 running / 123 errors / 65% coverage ] ****** [1531 done /1255 queued / 16 running / 123 errors / 65% coverage ] ****** [1531 done /1255 queued / 16 running / 123 errors / 65% coverage ] ****** [1532 done /1257 queued / 16 running / 123 errors / 65% coverage ] ****** [1532 done /1257 queued / 16 running / 123 errors / 65% coverage ] ****** [1533 done /1261 queued / 16 running / 123 errors / 65% coverage ] ****** [1533 done /1261 queued / 16 running / 123 errors / 65% coverage ] ****** [1534 done /1263 queued / 16 running / 123 errors / 65% coverage ] ****** [1534 done /1263 queued / 16 running / 123 errors / 65% coverage ] ****** [1535 done /1267 queued / 16 running / 123 errors / 65% coverage ] ****** [1535 done /1267 queued / 16 running / 123 errors / 65% coverage ] ****** [1536 done /1268 queued / 16 running / 123 errors / 65% coverage ] ****** [1536 done /1268 queued / 16 running / 123 errors / 65% coverage ] ****** [1537 done /1270 queued / 16 running / 123 errors / 65% coverage ] ****** [1537 done /1270 queued / 16 running / 123 errors / 65% coverage ] ****** [1538 done /1271 queued / 16 running / 123 errors / 65% coverage ] ****** [1538 done /1271 queued / 16 running / 123 errors / 65% coverage ] ****** [1539 done /1271 queued / 16 running / 123 errors / 65% coverage ] ****** [1539 done /1271 queued / 16 running / 123 errors / 65% coverage ] ****** [1540 done /1272 queued / 16 running / 123 errors / 65% coverage ] ****** [1540 done /1272 queued / 16 running / 123 errors / 65% coverage ] ****** [1541 done /1275 queued / 16 running / 123 errors / 65% coverage ] ****** [1541 done /1275 queued / 16 running / 123 errors / 65% coverage ] ****** [1542 done /1276 queued / 16 running / 123 errors / 65% coverage ] ****** [1542 done /1276 queued / 16 running / 123 errors / 65% coverage ] ****** [1543 done /1278 queued / 16 running / 123 errors / 65% coverage ] ****** [1543 done /1278 queued / 16 running / 123 errors / 65% coverage ] ****** [1544 done /1279 queued / 16 running / 123 errors / 65% coverage ] ****** [1544 done /1279 queued / 16 running / 123 errors / 65% coverage ] ****** [1545 done /1279 queued / 16 running / 123 errors / 65% coverage ] ****** [1545 done /1279 queued / 16 running / 123 errors / 65% coverage ] ****** [1546 done /1278 queued / 16 running / 124 errors / 65% coverage ] ****** [1546 done /1278 queued / 16 running / 124 errors / 65% coverage ] ****** [1547 done /1279 queued / 16 running / 125 errors / 65% coverage ] ****** [1547 done /1279 queued / 16 running / 125 errors / 65% coverage ] ****** [1548 done /1278 queued / 16 running / 125 errors / 65% coverage ] ****** [1548 done /1278 queued / 16 running / 125 errors / 65% coverage ] ****** [1549 done /1278 queued / 16 running / 126 errors / 65% coverage ] ****** [1549 done /1278 queued / 16 running / 126 errors / 65% coverage ] ****** [1550 done /1279 queued / 16 running / 126 errors / 65% coverage ] ****** [1550 done /1279 queued / 16 running / 126 errors / 65% coverage ] ****** [1551 done /1279 queued / 16 running / 126 errors / 65% coverage ] ****** [1551 done /1279 queued / 16 running / 126 errors / 65% coverage ] ****** [1552 done /1278 queued / 16 running / 126 errors / 65% coverage ] ****** [1552 done /1278 queued / 16 running / 126 errors / 65% coverage ] ****** [1553 done /1278 queued / 16 running / 126 errors / 65% coverage ] ****** [1553 done /1278 queued / 16 running / 126 errors / 65% coverage ] ****** [1554 done /1279 queued / 16 running / 126 errors / 65% coverage ] ****** [1554 done /1279 queued / 16 running / 126 errors / 65% coverage ] ****** [1555 done /1278 queued / 16 running / 126 errors / 65% coverage ] ****** [1555 done /1278 queued / 16 running / 126 errors / 65% coverage ] ****** [1556 done /1277 queued / 16 running / 127 errors / 65% coverage ] ****** [1556 done /1277 queued / 16 running / 127 errors / 65% coverage ] ****** [1557 done /1277 queued / 16 running / 127 errors / 65% coverage ] ****** [1557 done /1277 queued / 16 running / 127 errors / 65% coverage ] ****** [1558 done /1277 queued / 16 running / 127 errors / 65% coverage ] ****** [1558 done /1277 queued / 16 running / 127 errors / 65% coverage ] ****** [1559 done /1277 queued / 16 running / 127 errors / 65% coverage ] ****** [1559 done /1277 queued / 16 running / 127 errors / 65% coverage ] ****** [1560 done /1276 queued / 16 running / 127 errors / 65% coverage ] ****** [1560 done /1276 queued / 16 running / 127 errors / 65% coverage ] ****** [1561 done /1276 queued / 16 running / 127 errors / 65% coverage ] ****** [1561 done /1276 queued / 16 running / 127 errors / 65% coverage ] ****** [1562 done /1275 queued / 16 running / 127 errors / 65% coverage ] ****** [1562 done /1275 queued / 16 running / 127 errors / 65% coverage ] ****** [1563 done /1274 queued / 16 running / 128 errors / 65% coverage ] ****** [1563 done /1274 queued / 16 running / 128 errors / 65% coverage ] ****** [1564 done /1274 queued / 16 running / 129 errors / 65% coverage ] ****** [1564 done /1274 queued / 16 running / 129 errors / 65% coverage ] ****** [1565 done /1273 queued / 16 running / 130 errors / 65% coverage ] ****** [1565 done /1273 queued / 16 running / 130 errors / 65% coverage ] ****** [1566 done /1273 queued / 16 running / 130 errors / 65% coverage ] ****** [1566 done /1273 queued / 16 running / 130 errors / 65% coverage ] ****** [1567 done /1273 queued / 16 running / 130 errors / 65% coverage ] ****** [1567 done /1273 queued / 16 running / 130 errors / 65% coverage ] ****** [1568 done /1273 queued / 16 running / 130 errors / 65% coverage ] ****** [1568 done /1273 queued / 16 running / 130 errors / 65% coverage ] ****** [1569 done /1273 queued / 16 running / 130 errors / 65% coverage ] ****** [1569 done /1273 queued / 16 running / 130 errors / 65% coverage ] ****** [1570 done /1272 queued / 16 running / 130 errors / 65% coverage ] ****** [1570 done /1272 queued / 16 running / 130 errors / 65% coverage ] ****** [1571 done /1274 queued / 16 running / 131 errors / 65% coverage ] ****** [1571 done /1274 queued / 16 running / 131 errors / 65% coverage ] ****** [1572 done /1274 queued / 16 running / 131 errors / 65% coverage ] ****** [1572 done /1274 queued / 16 running / 131 errors / 65% coverage ] ****** [1573 done /1275 queued / 16 running / 131 errors / 65% coverage ] ****** [1573 done /1275 queued / 16 running / 131 errors / 65% coverage ] ****** [1574 done /1277 queued / 16 running / 131 errors / 65% coverage ] ****** [1574 done /1277 queued / 16 running / 131 errors / 65% coverage ] ****** [1575 done /1278 queued / 16 running / 131 errors / 65% coverage ] ****** [1575 done /1278 queued / 16 running / 131 errors / 65% coverage ] ****** [1576 done /1280 queued / 16 running / 131 errors / 65% coverage ] ****** [1576 done /1280 queued / 16 running / 131 errors / 65% coverage ] ****** [1577 done /1284 queued / 16 running / 132 errors / 65% coverage ] ****** [1577 done /1284 queued / 16 running / 132 errors / 65% coverage ] ****** [1578 done /1286 queued / 16 running / 132 errors / 65% coverage ] ****** [1578 done /1286 queued / 16 running / 132 errors / 65% coverage ] ****** [1579 done /1288 queued / 16 running / 132 errors / 65% coverage ] ****** [1579 done /1288 queued / 16 running / 132 errors / 65% coverage ] ****** [1580 done /1287 queued / 16 running / 132 errors / 65% coverage ] ****** [1580 done /1287 queued / 16 running / 132 errors / 65% coverage ] ****** [1581 done /1289 queued / 16 running / 132 errors / 65% coverage ] ****** [1581 done /1289 queued / 16 running / 132 errors / 65% coverage ] ****** [1582 done /1292 queued / 16 running / 132 errors / 65% coverage ] ****** [1582 done /1292 queued / 16 running / 132 errors / 65% coverage ] ****** [1583 done /1292 queued / 16 running / 132 errors / 65% coverage ] ****** [1583 done /1292 queued / 16 running / 132 errors / 65% coverage ] ****** [1584 done /1295 queued / 16 running / 132 errors / 65% coverage ] ****** [1584 done /1295 queued / 16 running / 132 errors / 65% coverage ] ****** [1585 done /1297 queued / 16 running / 132 errors / 65% coverage ] ****** [1585 done /1297 queued / 16 running / 132 errors / 65% coverage ] ****** [1586 done /1298 queued / 16 running / 132 errors / 65% coverage ] ****** [1586 done /1298 queued / 16 running / 132 errors / 65% coverage ] ****** [1587 done /1297 queued / 16 running / 133 errors / 65% coverage ] ****** [1587 done /1297 queued / 16 running / 133 errors / 65% coverage ] ****** [1588 done /1298 queued / 16 running / 134 errors / 65% coverage ] ****** [1588 done /1298 queued / 16 running / 134 errors / 65% coverage ] ****** [1589 done /1297 queued / 16 running / 135 errors / 65% coverage ] ****** [1589 done /1297 queued / 16 running / 135 errors / 65% coverage ] ****** [1590 done /1300 queued / 16 running / 135 errors / 65% coverage ] ****** [1590 done /1300 queued / 16 running / 135 errors / 65% coverage ] ****** [1591 done /1301 queued / 16 running / 135 errors / 65% coverage ] ****** [1591 done /1301 queued / 16 running / 135 errors / 65% coverage ] ****** [1592 done /1300 queued / 16 running / 136 errors / 65% coverage ] ****** [1592 done /1300 queued / 16 running / 136 errors / 65% coverage ] ****** [1593 done /1303 queued / 16 running / 136 errors / 65% coverage ] ****** [1593 done /1303 queued / 16 running / 136 errors / 65% coverage ] ****** [1594 done /1303 queued / 16 running / 137 errors / 65% coverage ] ****** [1594 done /1303 queued / 16 running / 137 errors / 65% coverage ] ****** [1595 done /1303 queued / 16 running / 138 errors / 65% coverage ] ****** [1595 done /1303 queued / 16 running / 138 errors / 65% coverage ] ****** [1596 done /1303 queued / 16 running / 138 errors / 65% coverage ] ****** [1596 done /1303 queued / 16 running / 138 errors / 65% coverage ] ****** [1597 done /1302 queued / 16 running / 138 errors / 65% coverage ] ****** [1597 done /1302 queued / 16 running / 138 errors / 65% coverage ] ****** [1598 done /1301 queued / 16 running / 138 errors / 65% coverage ] ****** [1598 done /1301 queued / 16 running / 138 errors / 65% coverage ] ****** [1599 done /1301 queued / 16 running / 138 errors / 65% coverage ] ****** [1599 done /1301 queued / 16 running / 138 errors / 65% coverage ] ****** [1600 done /1301 queued / 16 running / 139 errors / 65% coverage ] ****** [1600 done /1301 queued / 16 running / 139 errors / 65% coverage ] ****** [1601 done /1302 queued / 16 running / 139 errors / 65% coverage ] ****** [1601 done /1302 queued / 16 running / 139 errors / 65% coverage ] ****** [1602 done /1301 queued / 16 running / 140 errors / 65% coverage ] ****** [1602 done /1301 queued / 16 running / 140 errors / 65% coverage ] ****** [1603 done /1300 queued / 16 running / 141 errors / 65% coverage ] ****** [1603 done /1300 queued / 16 running / 141 errors / 65% coverage ] ****** [1604 done /1300 queued / 16 running / 141 errors / 65% coverage ] ****** [1604 done /1300 queued / 16 running / 141 errors / 65% coverage ] ****** [1605 done /1300 queued / 16 running / 141 errors / 65% coverage ] ****** [1605 done /1300 queued / 16 running / 141 errors / 65% coverage ] ****** [1606 done /1301 queued / 16 running / 141 errors / 65% coverage ] ****** [1606 done /1301 queued / 16 running / 141 errors / 65% coverage ] ****** [1607 done /1300 queued / 16 running / 141 errors / 65% coverage ] ****** [1607 done /1300 queued / 16 running / 141 errors / 65% coverage ] ****** [1608 done /1299 queued / 16 running / 141 errors / 65% coverage ] ****** [1608 done /1299 queued / 16 running / 141 errors / 65% coverage ] ****** [1609 done /1299 queued / 16 running / 141 errors / 65% coverage ] ****** [1609 done /1299 queued / 16 running / 141 errors / 65% coverage ] ****** [1610 done /1298 queued / 16 running / 142 errors / 65% coverage ] ****** [1610 done /1298 queued / 16 running / 142 errors / 65% coverage ] ****** [1611 done /1297 queued / 16 running / 143 errors / 65% coverage ] ****** [1611 done /1297 queued / 16 running / 143 errors / 65% coverage ] ****** [1612 done /1298 queued / 16 running / 143 errors / 65% coverage ] ****** [1612 done /1298 queued / 16 running / 143 errors / 65% coverage ] ****** [1613 done /1298 queued / 16 running / 143 errors / 65% coverage ] ****** [1613 done /1298 queued / 16 running / 143 errors / 65% coverage ] ****** [1614 done /1298 queued / 16 running / 143 errors / 65% coverage ] ****** [1614 done /1298 queued / 16 running / 143 errors / 65% coverage ] ****** [1615 done /1298 queued / 16 running / 143 errors / 65% coverage ] ****** [1615 done /1298 queued / 16 running / 143 errors / 65% coverage ] ****** [1616 done /1299 queued / 16 running / 143 errors / 65% coverage ] ****** [1616 done /1299 queued / 16 running / 143 errors / 65% coverage ] ****** [1617 done /1298 queued / 16 running / 143 errors / 65% coverage ] ****** [1617 done /1298 queued / 16 running / 143 errors / 65% coverage ] ****** [1618 done /1299 queued / 16 running / 144 errors / 65% coverage ] ****** [1618 done /1299 queued / 16 running / 144 errors / 65% coverage ] ****** [1619 done /1302 queued / 16 running / 144 errors / 65% coverage ] ****** [1619 done /1302 queued / 16 running / 144 errors / 65% coverage ] ****** [1620 done /1303 queued / 16 running / 144 errors / 65% coverage ] ****** [1620 done /1303 queued / 16 running / 144 errors / 65% coverage ] ****** [1621 done /1306 queued / 16 running / 144 errors / 65% coverage ] ****** [1621 done /1306 queued / 16 running / 144 errors / 65% coverage ] ****** [1622 done /1307 queued / 16 running / 144 errors / 65% coverage ] ****** [1622 done /1307 queued / 16 running / 144 errors / 65% coverage ] ****** [1623 done /1310 queued / 16 running / 144 errors / 65% coverage ] ****** [1623 done /1310 queued / 16 running / 144 errors / 65% coverage ] ****** [1624 done /1311 queued / 16 running / 144 errors / 65% coverage ] ****** [1624 done /1311 queued / 16 running / 144 errors / 65% coverage ] ****** [1625 done /1313 queued / 16 running / 144 errors / 65% coverage ] ****** [1625 done /1313 queued / 16 running / 144 errors / 65% coverage ] ****** [1626 done /1315 queued / 16 running / 144 errors / 65% coverage ] ****** [1626 done /1315 queued / 16 running / 144 errors / 65% coverage ] ****** [1627 done /1319 queued / 16 running / 145 errors / 65% coverage ] ****** [1627 done /1319 queued / 16 running / 145 errors / 65% coverage ] ****** [1628 done /1320 queued / 16 running / 145 errors / 65% coverage ] ****** [1628 done /1320 queued / 16 running / 145 errors / 65% coverage ] ****** [1629 done /1323 queued / 16 running / 145 errors / 65% coverage ] ****** [1629 done /1323 queued / 16 running / 145 errors / 65% coverage ] ****** [1630 done /1324 queued / 16 running / 145 errors / 65% coverage ] ****** [1630 done /1324 queued / 16 running / 145 errors / 65% coverage ] ****** [1631 done /1327 queued / 16 running / 145 errors / 65% coverage ] ****** [1631 done /1327 queued / 16 running / 145 errors / 65% coverage ] ****** [1632 done /1327 queued / 16 running / 145 errors / 65% coverage ] ****** [1632 done /1327 queued / 16 running / 145 errors / 65% coverage ] ****** [1633 done /1326 queued / 16 running / 145 errors / 65% coverage ] ****** [1633 done /1326 queued / 16 running / 145 errors / 65% coverage ] ****** [1634 done /1325 queued / 16 running / 146 errors / 65% coverage ] ****** [1634 done /1325 queued / 16 running / 146 errors / 65% coverage ] ****** [1635 done /1325 queued / 16 running / 147 errors / 65% coverage ] ****** [1635 done /1325 queued / 16 running / 147 errors / 65% coverage ] ****** [1636 done /1324 queued / 16 running / 147 errors / 65% coverage ] ****** [1636 done /1324 queued / 16 running / 147 errors / 65% coverage ] ****** [1637 done /1323 queued / 16 running / 147 errors / 65% coverage ] ****** [1637 done /1323 queued / 16 running / 147 errors / 65% coverage ] ****** [1638 done /1323 queued / 16 running / 147 errors / 65% coverage ] ****** [1638 done /1323 queued / 16 running / 147 errors / 65% coverage ] ****** [1639 done /1322 queued / 16 running / 147 errors / 65% coverage ] ****** [1639 done /1322 queued / 16 running / 147 errors / 65% coverage ] ****** [1640 done /1321 queued / 16 running / 147 errors / 65% coverage ] ****** [1640 done /1321 queued / 16 running / 147 errors / 65% coverage ] ****** [1641 done /1321 queued / 16 running / 147 errors / 65% coverage ] ****** [1641 done /1321 queued / 16 running / 147 errors / 65% coverage ] ****** [1642 done /1320 queued / 16 running / 147 errors / 65% coverage ] ****** [1642 done /1320 queued / 16 running / 147 errors / 65% coverage ] ****** [1643 done /1319 queued / 16 running / 148 errors / 65% coverage ] ****** [1643 done /1319 queued / 16 running / 148 errors / 65% coverage ] ****** [1644 done /1319 queued / 16 running / 149 errors / 65% coverage ] ****** [1644 done /1319 queued / 16 running / 149 errors / 65% coverage ] ****** [1645 done /1318 queued / 16 running / 149 errors / 65% coverage ] ****** [1645 done /1318 queued / 16 running / 149 errors / 65% coverage ] ****** [1646 done /1317 queued / 16 running / 149 errors / 65% coverage ] ****** [1646 done /1317 queued / 16 running / 149 errors / 65% coverage ] ****** [1647 done /1317 queued / 16 running / 149 errors / 65% coverage ] ****** [1647 done /1317 queued / 16 running / 149 errors / 65% coverage ] ****** [1648 done /1317 queued / 16 running / 149 errors / 65% coverage ] ****** [1648 done /1317 queued / 16 running / 149 errors / 65% coverage ] ****** [1649 done /1316 queued / 16 running / 149 errors / 65% coverage ] ****** [1649 done /1316 queued / 16 running / 149 errors / 65% coverage ] ****** [1650 done /1316 queued / 16 running / 149 errors / 65% coverage ] ****** [1650 done /1316 queued / 16 running / 149 errors / 65% coverage ] ****** [1651 done /1316 queued / 16 running / 150 errors / 65% coverage ] ****** [1651 done /1316 queued / 16 running / 150 errors / 65% coverage ] ****** [1652 done /1315 queued / 16 running / 151 errors / 65% coverage ] ****** [1652 done /1315 queued / 16 running / 151 errors / 65% coverage ] ****** [1653 done /1314 queued / 16 running / 151 errors / 65% coverage ] ****** [1653 done /1314 queued / 16 running / 151 errors / 65% coverage ] ****** [1654 done /1314 queued / 16 running / 152 errors / 65% coverage ] ****** [1654 done /1314 queued / 16 running / 152 errors / 65% coverage ] ****** [1655 done /1317 queued / 16 running / 152 errors / 65% coverage ] ****** [1655 done /1317 queued / 16 running / 152 errors / 65% coverage ] ****** [1656 done /1318 queued / 16 running / 152 errors / 65% coverage ] ****** [1656 done /1318 queued / 16 running / 152 errors / 65% coverage ] ****** [1657 done /1317 queued / 16 running / 152 errors / 65% coverage ] ****** [1657 done /1317 queued / 16 running / 152 errors / 65% coverage ] ****** [1658 done /1316 queued / 16 running / 152 errors / 65% coverage ] ****** [1658 done /1316 queued / 16 running / 152 errors / 65% coverage ] ****** [1659 done /1315 queued / 16 running / 152 errors / 65% coverage ] ****** [1659 done /1315 queued / 16 running / 152 errors / 65% coverage ] ****** [1660 done /1314 queued / 16 running / 153 errors / 65% coverage ] ****** [1660 done /1314 queued / 16 running / 153 errors / 65% coverage ] ****** [1661 done /1317 queued / 16 running / 153 errors / 65% coverage ] ****** [1661 done /1317 queued / 16 running / 153 errors / 65% coverage ] ****** [1662 done /1321 queued / 16 running / 153 errors / 65% coverage ] ****** [1662 done /1321 queued / 16 running / 153 errors / 65% coverage ] ****** [1663 done /1323 queued / 16 running / 154 errors / 65% coverage ] ****** [1663 done /1323 queued / 16 running / 154 errors / 65% coverage ] ****** [1664 done /1322 queued / 16 running / 155 errors / 65% coverage ] ****** [1664 done /1322 queued / 16 running / 155 errors / 65% coverage ] ****** [1665 done /1323 queued / 16 running / 155 errors / 65% coverage ] ****** [1665 done /1323 queued / 16 running / 155 errors / 65% coverage ] ****** [1666 done /1327 queued / 16 running / 155 errors / 65% coverage ] ****** [1666 done /1327 queued / 16 running / 155 errors / 65% coverage ] ****** [1667 done /1327 queued / 16 running / 155 errors / 65% coverage ] ****** [1667 done /1327 queued / 16 running / 155 errors / 65% coverage ] ****** [1668 done /1328 queued / 16 running / 155 errors / 65% coverage ] ****** [1668 done /1328 queued / 16 running / 155 errors / 65% coverage ] ****** [1669 done /1329 queued / 16 running / 155 errors / 65% coverage ] ****** [1669 done /1329 queued / 16 running / 155 errors / 65% coverage ] ****** [1670 done /1331 queued / 16 running / 155 errors / 65% coverage ] ****** [1670 done /1331 queued / 16 running / 155 errors / 65% coverage ] ****** [1671 done /1331 queued / 16 running / 155 errors / 65% coverage ] ****** [1671 done /1331 queued / 16 running / 155 errors / 65% coverage ] ****** [1672 done /1330 queued / 16 running / 155 errors / 65% coverage ] ****** [1672 done /1330 queued / 16 running / 155 errors / 65% coverage ] ****** [1673 done /1329 queued / 16 running / 155 errors / 65% coverage ] ****** [1673 done /1329 queued / 16 running / 155 errors / 65% coverage ] ****** [1674 done /1328 queued / 16 running / 155 errors / 65% coverage ] ****** [1674 done /1328 queued / 16 running / 155 errors / 65% coverage ] ****** [1675 done /1327 queued / 16 running / 155 errors / 65% coverage ] ****** [1675 done /1327 queued / 16 running / 155 errors / 65% coverage ] ****** [1676 done /1328 queued / 16 running / 155 errors / 65% coverage ] ****** [1676 done /1328 queued / 16 running / 155 errors / 65% coverage ] ****** [1677 done /1329 queued / 16 running / 155 errors / 65% coverage ] ****** [1677 done /1329 queued / 16 running / 155 errors / 65% coverage ] ****** [1678 done /1328 queued / 16 running / 155 errors / 65% coverage ] ****** [1678 done /1328 queued / 16 running / 155 errors / 65% coverage ] ****** [1679 done /1327 queued / 16 running / 156 errors / 65% coverage ] ****** [1679 done /1327 queued / 16 running / 156 errors / 65% coverage ] ****** [1680 done /1328 queued / 16 running / 156 errors / 65% coverage ] ****** [1680 done /1328 queued / 16 running / 156 errors / 65% coverage ] ****** [1681 done /1327 queued / 16 running / 156 errors / 65% coverage ] ****** [1681 done /1327 queued / 16 running / 156 errors / 65% coverage ] ****** [1682 done /1327 queued / 16 running / 156 errors / 65% coverage ] ****** [1682 done /1327 queued / 16 running / 156 errors / 65% coverage ] ****** [1683 done /1326 queued / 16 running / 157 errors / 65% coverage ] ****** [1683 done /1326 queued / 16 running / 157 errors / 65% coverage ] ****** [1684 done /1326 queued / 16 running / 157 errors / 65% coverage ] ****** [1684 done /1326 queued / 16 running / 157 errors / 65% coverage ] ****** [1685 done /1326 queued / 16 running / 157 errors / 65% coverage ] ****** [1685 done /1326 queued / 16 running / 157 errors / 65% coverage ] ****** [1686 done /1326 queued / 16 running / 157 errors / 65% coverage ] ****** [1686 done /1326 queued / 16 running / 157 errors / 65% coverage ] ****** [1687 done /1327 queued / 16 running / 158 errors / 65% coverage ] ****** [1687 done /1327 queued / 16 running / 158 errors / 65% coverage ] ****** [1688 done /1327 queued / 16 running / 158 errors / 65% coverage ] ****** [1688 done /1327 queued / 16 running / 158 errors / 65% coverage ] ****** [1689 done /1328 queued / 16 running / 158 errors / 65% coverage ] ****** [1689 done /1328 queued / 16 running / 158 errors / 65% coverage ] ****** [1690 done /1328 queued / 16 running / 158 errors / 65% coverage ] ****** [1690 done /1328 queued / 16 running / 158 errors / 65% coverage ] ****** [1691 done /1328 queued / 16 running / 158 errors / 65% coverage ] ****** [1691 done /1328 queued / 16 running / 158 errors / 65% coverage ] ****** [1692 done /1331 queued / 16 running / 158 errors / 65% coverage ] ****** [1692 done /1331 queued / 16 running / 158 errors / 65% coverage ] ****** [1693 done /1336 queued / 16 running / 158 errors / 65% coverage ] ****** [1693 done /1336 queued / 16 running / 158 errors / 65% coverage ] ****** [1694 done /1337 queued / 16 running / 158 errors / 65% coverage ] ****** [1694 done /1337 queued / 16 running / 158 errors / 65% coverage ] ****** [1695 done /1340 queued / 16 running / 158 errors / 65% coverage ] ****** [1695 done /1340 queued / 16 running / 158 errors / 65% coverage ] ****** [1696 done /1344 queued / 16 running / 158 errors / 65% coverage ] ****** [1696 done /1344 queued / 16 running / 158 errors / 65% coverage ] ****** [1697 done /1345 queued / 16 running / 158 errors / 65% coverage ] ****** [1697 done /1345 queued / 16 running / 158 errors / 65% coverage ] ****** [1698 done /1346 queued / 16 running / 158 errors / 65% coverage ] ****** [1698 done /1346 queued / 16 running / 158 errors / 65% coverage ] ****** [1699 done /1347 queued / 16 running / 158 errors / 65% coverage ] ****** [1699 done /1347 queued / 16 running / 158 errors / 65% coverage ] ****** [1700 done /1350 queued / 16 running / 158 errors / 65% coverage ] ****** [1700 done /1350 queued / 16 running / 158 errors / 65% coverage ] ****** [1701 done /1353 queued / 16 running / 158 errors / 65% coverage ] ****** [1701 done /1353 queued / 16 running / 158 errors / 65% coverage ] ****** [1702 done /1354 queued / 16 running / 159 errors / 65% coverage ] ****** [1702 done /1354 queued / 16 running / 159 errors / 65% coverage ] ****** [1703 done /1357 queued / 16 running / 159 errors / 65% coverage ] ****** [1703 done /1357 queued / 16 running / 159 errors / 65% coverage ] ****** [1704 done /1356 queued / 16 running / 160 errors / 65% coverage ] ****** [1704 done /1356 queued / 16 running / 160 errors / 65% coverage ] ****** [1705 done /1358 queued / 16 running / 160 errors / 65% coverage ] ****** [1705 done /1358 queued / 16 running / 160 errors / 65% coverage ] ****** [1706 done /1357 queued / 16 running / 160 errors / 65% coverage ] ****** [1706 done /1357 queued / 16 running / 160 errors / 65% coverage ] ****** [1707 done /1359 queued / 16 running / 160 errors / 65% coverage ] ****** [1707 done /1359 queued / 16 running / 160 errors / 65% coverage ] ****** [1708 done /1361 queued / 16 running / 160 errors / 65% coverage ] ****** [1708 done /1361 queued / 16 running / 160 errors / 65% coverage ] ****** [1709 done /1360 queued / 16 running / 160 errors / 65% coverage ] ****** [1709 done /1360 queued / 16 running / 160 errors / 65% coverage ] ****** [1710 done /1362 queued / 16 running / 160 errors / 65% coverage ] ****** [1710 done /1362 queued / 16 running / 160 errors / 65% coverage ] ****** [1711 done /1361 queued / 16 running / 160 errors / 65% coverage ] ****** [1711 done /1361 queued / 16 running / 160 errors / 65% coverage ] ****** [1712 done /1360 queued / 16 running / 160 errors / 65% coverage ] ****** [1712 done /1360 queued / 16 running / 160 errors / 65% coverage ] ****** [1713 done /1361 queued / 16 running / 160 errors / 65% coverage ] ****** [1713 done /1361 queued / 16 running / 160 errors / 65% coverage ] ****** [1714 done /1361 queued / 16 running / 160 errors / 65% coverage ] ****** [1714 done /1361 queued / 16 running / 160 errors / 65% coverage ] ****** [1715 done /1360 queued / 16 running / 160 errors / 65% coverage ] ****** [1715 done /1360 queued / 16 running / 160 errors / 65% coverage ] ****** [1716 done /1360 queued / 16 running / 160 errors / 65% coverage ] ****** [1716 done /1360 queued / 16 running / 160 errors / 65% coverage ] ****** [1717 done /1360 queued / 16 running / 160 errors / 65% coverage ] ****** [1717 done /1360 queued / 16 running / 160 errors / 65% coverage ] ****** [1718 done /1361 queued / 16 running / 160 errors / 65% coverage ] ****** [1718 done /1361 queued / 16 running / 160 errors / 65% coverage ] ****** [1719 done /1360 queued / 16 running / 161 errors / 65% coverage ] ****** [1719 done /1360 queued / 16 running / 161 errors / 65% coverage ] ****** [1720 done /1359 queued / 16 running / 161 errors / 65% coverage ] ****** [1720 done /1359 queued / 16 running / 161 errors / 65% coverage ] ****** [1721 done /1360 queued / 16 running / 161 errors / 65% coverage ] ****** [1721 done /1360 queued / 16 running / 161 errors / 65% coverage ] ****** [1722 done /1360 queued / 16 running / 161 errors / 65% coverage ] ****** [1722 done /1360 queued / 16 running / 161 errors / 65% coverage ] ****** [1723 done /1360 queued / 16 running / 161 errors / 65% coverage ] ****** [1723 done /1360 queued / 16 running / 161 errors / 65% coverage ] ****** [1724 done /1361 queued / 16 running / 161 errors / 65% coverage ] ****** [1724 done /1361 queued / 16 running / 161 errors / 65% coverage ] ****** [1725 done /1361 queued / 16 running / 162 errors / 65% coverage ] ****** [1725 done /1361 queued / 16 running / 162 errors / 65% coverage ] ****** [1726 done /1361 queued / 16 running / 162 errors / 65% coverage ] ****** [1726 done /1361 queued / 16 running / 162 errors / 65% coverage ] ****** [1727 done /1362 queued / 16 running / 162 errors / 65% coverage ] ****** [1727 done /1362 queued / 16 running / 162 errors / 65% coverage ] ****** [1728 done /1362 queued / 16 running / 162 errors / 65% coverage ] ****** [1728 done /1362 queued / 16 running / 162 errors / 65% coverage ] ****** [1729 done /1363 queued / 16 running / 162 errors / 65% coverage ] ****** [1729 done /1363 queued / 16 running / 162 errors / 65% coverage ] ****** [1730 done /1363 queued / 16 running / 162 errors / 65% coverage ] ****** [1730 done /1363 queued / 16 running / 162 errors / 65% coverage ] ****** [1731 done /1363 queued / 16 running / 162 errors / 65% coverage ] ****** [1731 done /1363 queued / 16 running / 162 errors / 65% coverage ] ****** [1732 done /1364 queued / 16 running / 162 errors / 65% coverage ] ****** [1732 done /1364 queued / 16 running / 162 errors / 65% coverage ] ****** [1733 done /1364 queued / 16 running / 162 errors / 65% coverage ] ****** [1733 done /1364 queued / 16 running / 162 errors / 65% coverage ] ****** [1734 done /1365 queued / 16 running / 162 errors / 65% coverage ] ****** [1734 done /1365 queued / 16 running / 162 errors / 65% coverage ] ****** [1735 done /1367 queued / 16 running / 162 errors / 65% coverage ] ****** [1735 done /1367 queued / 16 running / 162 errors / 65% coverage ] ****** [1736 done /1369 queued / 16 running / 162 errors / 65% coverage ] ****** [1736 done /1369 queued / 16 running / 162 errors / 65% coverage ] ****** [1737 done /1370 queued / 16 running / 162 errors / 65% coverage ] ****** [1737 done /1370 queued / 16 running / 162 errors / 65% coverage ] ****** [1738 done /1371 queued / 16 running / 162 errors / 65% coverage ] ****** [1738 done /1371 queued / 16 running / 162 errors / 65% coverage ] ****** [1739 done /1374 queued / 16 running / 162 errors / 65% coverage ] ****** [1739 done /1374 queued / 16 running / 162 errors / 65% coverage ] ****** [1740 done /1376 queued / 16 running / 163 errors / 65% coverage ] ****** [1740 done /1376 queued / 16 running / 163 errors / 65% coverage ] ****** [1741 done /1377 queued / 16 running / 163 errors / 65% coverage ] ****** [1741 done /1377 queued / 16 running / 163 errors / 65% coverage ] ****** [1742 done /1378 queued / 16 running / 163 errors / 65% coverage ] ****** [1742 done /1378 queued / 16 running / 163 errors / 65% coverage ] ****** [1743 done /1380 queued / 16 running / 163 errors / 65% coverage ] ****** [1743 done /1380 queued / 16 running / 163 errors / 65% coverage ] ****** [1744 done /1383 queued / 16 running / 163 errors / 65% coverage ] ****** [1744 done /1383 queued / 16 running / 163 errors / 65% coverage ] ****** [1745 done /1384 queued / 16 running / 163 errors / 65% coverage ] ****** [1745 done /1384 queued / 16 running / 163 errors / 65% coverage ] ****** [1746 done /1387 queued / 16 running / 163 errors / 65% coverage ] ****** [1746 done /1387 queued / 16 running / 163 errors / 65% coverage ] ****** [1747 done /1388 queued / 16 running / 163 errors / 65% coverage ] ****** [1747 done /1388 queued / 16 running / 163 errors / 65% coverage ] ****** [1748 done /1389 queued / 16 running / 163 errors / 65% coverage ] ****** [1748 done /1389 queued / 16 running / 163 errors / 65% coverage ] ****** [1749 done /1392 queued / 16 running / 163 errors / 65% coverage ] ****** [1749 done /1392 queued / 16 running / 163 errors / 65% coverage ] ****** [1750 done /1393 queued / 16 running / 163 errors / 65% coverage ] ****** [1750 done /1393 queued / 16 running / 163 errors / 65% coverage ] ****** [1751 done /1395 queued / 16 running / 163 errors / 65% coverage ] ****** [1751 done /1395 queued / 16 running / 163 errors / 65% coverage ] ****** [1752 done /1398 queued / 16 running / 163 errors / 65% coverage ] ****** [1752 done /1398 queued / 16 running / 163 errors / 65% coverage ] ****** [1753 done /1398 queued / 16 running / 163 errors / 65% coverage ] ****** [1753 done /1398 queued / 16 running / 163 errors / 65% coverage ] ****** [1754 done /1397 queued / 16 running / 163 errors / 65% coverage ] ****** [1754 done /1397 queued / 16 running / 163 errors / 65% coverage ] ****** [1755 done /1397 queued / 16 running / 163 errors / 65% coverage ] ****** [1755 done /1397 queued / 16 running / 163 errors / 65% coverage ] ****** [1756 done /1396 queued / 16 running / 163 errors / 65% coverage ] ****** [1756 done /1396 queued / 16 running / 163 errors / 65% coverage ] ****** [1757 done /1395 queued / 16 running / 163 errors / 65% coverage ] ****** [1757 done /1395 queued / 16 running / 163 errors / 65% coverage ] ****** [1758 done /1394 queued / 16 running / 163 errors / 65% coverage ] ****** [1758 done /1394 queued / 16 running / 163 errors / 65% coverage ] ****** [1759 done /1394 queued / 16 running / 163 errors / 65% coverage ] ****** [1759 done /1394 queued / 16 running / 163 errors / 65% coverage ] ****** [1760 done /1393 queued / 16 running / 163 errors / 65% coverage ] ****** [1760 done /1393 queued / 16 running / 163 errors / 65% coverage ] ****** [1761 done /1392 queued / 16 running / 163 errors / 65% coverage ] ****** [1761 done /1392 queued / 16 running / 163 errors / 65% coverage ] ****** [1762 done /1393 queued / 16 running / 163 errors / 65% coverage ] ****** [1762 done /1393 queued / 16 running / 163 errors / 65% coverage ] ****** [1763 done /1392 queued / 16 running / 163 errors / 65% coverage ] ****** [1763 done /1392 queued / 16 running / 163 errors / 65% coverage ] ****** [1764 done /1392 queued / 16 running / 163 errors / 65% coverage ] ****** [1764 done /1392 queued / 16 running / 163 errors / 65% coverage ] ****** [1765 done /1391 queued / 16 running / 163 errors / 65% coverage ] ****** [1765 done /1391 queued / 16 running / 163 errors / 65% coverage ] ****** [1766 done /1390 queued / 16 running / 163 errors / 65% coverage ] ****** [1766 done /1390 queued / 16 running / 163 errors / 65% coverage ] ****** [1767 done /1389 queued / 16 running / 163 errors / 65% coverage ] ****** [1767 done /1389 queued / 16 running / 163 errors / 65% coverage ] ****** [1768 done /1388 queued / 16 running / 163 errors / 65% coverage ] ****** [1768 done /1388 queued / 16 running / 163 errors / 65% coverage ] ****** [1769 done /1388 queued / 16 running / 163 errors / 65% coverage ] ****** [1769 done /1388 queued / 16 running / 163 errors / 65% coverage ] ****** [1770 done /1390 queued / 16 running / 163 errors / 65% coverage ] ****** [1770 done /1390 queued / 16 running / 163 errors / 65% coverage ] ****** [1771 done /1389 queued / 16 running / 163 errors / 65% coverage ] ****** [1771 done /1389 queued / 16 running / 163 errors / 65% coverage ] ****** [1772 done /1388 queued / 16 running / 163 errors / 65% coverage ] ****** [1772 done /1388 queued / 16 running / 163 errors / 65% coverage ] ****** [1773 done /1387 queued / 16 running / 163 errors / 65% coverage ] ****** [1773 done /1387 queued / 16 running / 163 errors / 65% coverage ] ****** [1774 done /1386 queued / 16 running / 163 errors / 65% coverage ] ****** [1774 done /1386 queued / 16 running / 163 errors / 65% coverage ] ****** [1775 done /1385 queued / 16 running / 163 errors / 65% coverage ] ****** [1775 done /1385 queued / 16 running / 163 errors / 65% coverage ] ****** [1776 done /1384 queued / 16 running / 163 errors / 65% coverage ] ****** [1776 done /1384 queued / 16 running / 163 errors / 65% coverage ] ****** [1777 done /1384 queued / 16 running / 163 errors / 65% coverage ] ****** [1777 done /1384 queued / 16 running / 163 errors / 65% coverage ] ****** [1778 done /1385 queued / 16 running / 163 errors / 65% coverage ] ****** [1778 done /1385 queued / 16 running / 163 errors / 65% coverage ] ****** [1779 done /1387 queued / 16 running / 164 errors / 65% coverage ] ****** [1779 done /1387 queued / 16 running / 164 errors / 65% coverage ] ****** [1780 done /1387 queued / 16 running / 164 errors / 65% coverage ] ****** [1780 done /1387 queued / 16 running / 164 errors / 65% coverage ] ****** [1781 done /1391 queued / 16 running / 164 errors / 65% coverage ] ****** [1781 done /1391 queued / 16 running / 164 errors / 65% coverage ] ****** [1782 done /1392 queued / 16 running / 164 errors / 65% coverage ] ****** [1782 done /1392 queued / 16 running / 164 errors / 65% coverage ] ****** [1783 done /1395 queued / 16 running / 164 errors / 65% coverage ] ****** [1783 done /1395 queued / 16 running / 164 errors / 65% coverage ] ****** [1784 done /1396 queued / 16 running / 164 errors / 65% coverage ] ****** [1784 done /1396 queued / 16 running / 164 errors / 65% coverage ] ****** [1785 done /1397 queued / 16 running / 164 errors / 65% coverage ] ****** [1785 done /1397 queued / 16 running / 164 errors / 65% coverage ] ****** [1786 done /1398 queued / 16 running / 164 errors / 65% coverage ] ****** [1786 done /1398 queued / 16 running / 164 errors / 65% coverage ] ****** [1787 done /1399 queued / 16 running / 164 errors / 65% coverage ] ****** [1787 done /1399 queued / 16 running / 164 errors / 65% coverage ] ****** [1788 done /1403 queued / 16 running / 164 errors / 65% coverage ] ****** [1788 done /1403 queued / 16 running / 164 errors / 65% coverage ] ****** [1789 done /1404 queued / 16 running / 164 errors / 65% coverage ] ****** [1789 done /1404 queued / 16 running / 164 errors / 65% coverage ] ****** [1790 done /1408 queued / 16 running / 164 errors / 65% coverage ] ****** [1790 done /1408 queued / 16 running / 164 errors / 65% coverage ] ****** [1791 done /1409 queued / 16 running / 164 errors / 65% coverage ] ****** [1791 done /1409 queued / 16 running / 164 errors / 65% coverage ] ****** [1792 done /1412 queued / 16 running / 164 errors / 65% coverage ] ****** [1792 done /1412 queued / 16 running / 164 errors / 65% coverage ] ****** [1793 done /1414 queued / 16 running / 164 errors / 65% coverage ] ****** [1793 done /1414 queued / 16 running / 164 errors / 65% coverage ] ****** [1794 done /1414 queued / 16 running / 164 errors / 65% coverage ] ****** [1794 done /1414 queued / 16 running / 164 errors / 65% coverage ] ****** [1795 done /1413 queued / 16 running / 165 errors / 65% coverage ] ****** [1795 done /1413 queued / 16 running / 165 errors / 65% coverage ] ****** [1796 done /1413 queued / 16 running / 165 errors / 65% coverage ] ****** [1796 done /1413 queued / 16 running / 165 errors / 65% coverage ] ****** [1797 done /1413 queued / 16 running / 165 errors / 65% coverage ] ****** [1797 done /1413 queued / 16 running / 165 errors / 65% coverage ] ****** [1798 done /1413 queued / 16 running / 165 errors / 65% coverage ] ****** [1798 done /1413 queued / 16 running / 165 errors / 65% coverage ] ****** [1799 done /1413 queued / 16 running / 165 errors / 65% coverage ] ****** [1799 done /1413 queued / 16 running / 165 errors / 65% coverage ] ****** [1800 done /1414 queued / 16 running / 165 errors / 65% coverage ] ****** [1800 done /1414 queued / 16 running / 165 errors / 65% coverage ] ****** [1801 done /1415 queued / 16 running / 165 errors / 65% coverage ] ****** [1801 done /1415 queued / 16 running / 165 errors / 65% coverage ] ****** [1802 done /1414 queued / 16 running / 165 errors / 65% coverage ] ****** [1802 done /1414 queued / 16 running / 165 errors / 65% coverage ] ****** [1803 done /1415 queued / 16 running / 165 errors / 65% coverage ] ****** [1803 done /1415 queued / 16 running / 165 errors / 65% coverage ] ****** [1804 done /1416 queued / 16 running / 165 errors / 65% coverage ] ****** [1804 done /1416 queued / 16 running / 165 errors / 65% coverage ] ****** [1805 done /1416 queued / 16 running / 165 errors / 65% coverage ] ****** [1805 done /1416 queued / 16 running / 165 errors / 65% coverage ] ****** [1806 done /1416 queued / 16 running / 165 errors / 65% coverage ] ****** [1806 done /1416 queued / 16 running / 165 errors / 65% coverage ] ****** [1807 done /1417 queued / 16 running / 165 errors / 65% coverage ] ****** [1807 done /1417 queued / 16 running / 165 errors / 65% coverage ] ****** [1808 done /1417 queued / 16 running / 165 errors / 65% coverage ] ****** [1808 done /1417 queued / 16 running / 165 errors / 65% coverage ] ****** [1809 done /1416 queued / 16 running / 165 errors / 65% coverage ] ****** [1809 done /1416 queued / 16 running / 165 errors / 65% coverage ] ****** [1810 done /1415 queued / 16 running / 165 errors / 65% coverage ] ****** [1810 done /1415 queued / 16 running / 165 errors / 65% coverage ] ****** [1811 done /1416 queued / 16 running / 165 errors / 65% coverage ] ****** [1811 done /1416 queued / 16 running / 165 errors / 65% coverage ] ****** [1812 done /1416 queued / 16 running / 165 errors / 65% coverage ] ****** [1812 done /1416 queued / 16 running / 165 errors / 65% coverage ] ****** [1813 done /1416 queued / 16 running / 165 errors / 65% coverage ] ****** [1813 done /1416 queued / 16 running / 165 errors / 65% coverage ] ****** [1814 done /1416 queued / 16 running / 165 errors / 65% coverage ] ****** [1814 done /1416 queued / 16 running / 165 errors / 65% coverage ] ****** [1815 done /1415 queued / 16 running / 165 errors / 65% coverage ] ****** [1815 done /1415 queued / 16 running / 165 errors / 65% coverage ] ****** [1816 done /1415 queued / 16 running / 165 errors / 65% coverage ] ****** [1816 done /1415 queued / 16 running / 165 errors / 65% coverage ] ****** [1817 done /1414 queued / 16 running / 165 errors / 65% coverage ] ****** [1817 done /1414 queued / 16 running / 165 errors / 65% coverage ] ****** [1818 done /1415 queued / 16 running / 165 errors / 65% coverage ] ****** [1818 done /1415 queued / 16 running / 165 errors / 65% coverage ] ****** [1819 done /1414 queued / 16 running / 165 errors / 65% coverage ] ****** [1819 done /1414 queued / 16 running / 165 errors / 65% coverage ] ****** [1820 done /1414 queued / 16 running / 165 errors / 65% coverage ] ****** [1820 done /1414 queued / 16 running / 165 errors / 65% coverage ] ****** [1821 done /1413 queued / 16 running / 165 errors / 65% coverage ] ****** [1821 done /1413 queued / 16 running / 165 errors / 65% coverage ] ****** [1822 done /1412 queued / 16 running / 165 errors / 65% coverage ] ****** [1822 done /1412 queued / 16 running / 165 errors / 65% coverage ] ****** [1823 done /1412 queued / 16 running / 165 errors / 65% coverage ] ****** [1823 done /1412 queued / 16 running / 165 errors / 65% coverage ] ****** [1824 done /1413 queued / 16 running / 165 errors / 65% coverage ] ****** [1824 done /1413 queued / 16 running / 165 errors / 65% coverage ] ****** [1825 done /1413 queued / 16 running / 165 errors / 65% coverage ] ****** [1825 done /1413 queued / 16 running / 165 errors / 65% coverage ] ****** [1826 done /1413 queued / 16 running / 165 errors / 65% coverage ] ****** [1826 done /1413 queued / 16 running / 165 errors / 65% coverage ] ****** [1827 done /1413 queued / 16 running / 165 errors / 65% coverage ] ****** [1827 done /1413 queued / 16 running / 165 errors / 65% coverage ] ****** [1828 done /1415 queued / 16 running / 165 errors / 65% coverage ] ****** [1828 done /1415 queued / 16 running / 165 errors / 65% coverage ] ****** [1829 done /1418 queued / 16 running / 165 errors / 65% coverage ] ****** [1829 done /1418 queued / 16 running / 165 errors / 65% coverage ] ****** [1830 done /1417 queued / 16 running / 165 errors / 65% coverage ] ****** [1830 done /1417 queued / 16 running / 165 errors / 65% coverage ] ****** [1831 done /1419 queued / 16 running / 165 errors / 65% coverage ] ****** [1831 done /1419 queued / 16 running / 165 errors / 65% coverage ] ****** [1832 done /1420 queued / 16 running / 165 errors / 65% coverage ] ****** [1832 done /1420 queued / 16 running / 165 errors / 65% coverage ] ****** [1833 done /1419 queued / 16 running / 165 errors / 65% coverage ] ****** [1833 done /1419 queued / 16 running / 165 errors / 65% coverage ] ****** [1834 done /1420 queued / 16 running / 165 errors / 65% coverage ] ****** [1834 done /1420 queued / 16 running / 165 errors / 65% coverage ] ****** [1835 done /1421 queued / 16 running / 165 errors / 65% coverage ] ****** [1835 done /1421 queued / 16 running / 165 errors / 65% coverage ] ****** [1836 done /1423 queued / 16 running / 165 errors / 65% coverage ] ****** [1836 done /1423 queued / 16 running / 165 errors / 65% coverage ] ****** [1837 done /1425 queued / 16 running / 165 errors / 65% coverage ] ****** [1837 done /1425 queued / 16 running / 165 errors / 65% coverage ] ****** [1838 done /1427 queued / 16 running / 165 errors / 65% coverage ] ****** [1838 done /1427 queued / 16 running / 165 errors / 65% coverage ] ****** [1839 done /1431 queued / 16 running / 165 errors / 65% coverage ] ****** [1839 done /1431 queued / 16 running / 165 errors / 65% coverage ] ****** [1840 done /1432 queued / 16 running / 165 errors / 65% coverage ] ****** [1840 done /1432 queued / 16 running / 165 errors / 65% coverage ] ****** [1841 done /1432 queued / 16 running / 165 errors / 65% coverage ] ****** [1841 done /1432 queued / 16 running / 165 errors / 65% coverage ] ****** [1842 done /1436 queued / 16 running / 165 errors / 65% coverage ] ****** [1842 done /1436 queued / 16 running / 165 errors / 65% coverage ] ****** [1843 done /1439 queued / 16 running / 165 errors / 65% coverage ] ****** [1843 done /1439 queued / 16 running / 165 errors / 65% coverage ] ****** [1844 done /1439 queued / 16 running / 165 errors / 65% coverage ] ****** [1844 done /1439 queued / 16 running / 165 errors / 65% coverage ] ****** [1845 done /1440 queued / 16 running / 165 errors / 65% coverage ] ****** [1845 done /1440 queued / 16 running / 165 errors / 65% coverage ] ****** [1846 done /1442 queued / 16 running / 165 errors / 65% coverage ] ****** [1846 done /1442 queued / 16 running / 165 errors / 65% coverage ] ****** [1847 done /1441 queued / 16 running / 165 errors / 65% coverage ] ****** [1847 done /1441 queued / 16 running / 165 errors / 65% coverage ] ****** [1848 done /1441 queued / 16 running / 165 errors / 65% coverage ] ****** [1848 done /1441 queued / 16 running / 165 errors / 65% coverage ] ****** [1849 done /1440 queued / 16 running / 165 errors / 65% coverage ] ****** [1849 done /1440 queued / 16 running / 165 errors / 65% coverage ] ****** [1850 done /1439 queued / 16 running / 165 errors / 65% coverage ] ****** [1850 done /1439 queued / 16 running / 165 errors / 65% coverage ] ****** [1851 done /1438 queued / 16 running / 165 errors / 65% coverage ] ****** [1851 done /1438 queued / 16 running / 165 errors / 65% coverage ] ****** [1852 done /1439 queued / 16 running / 165 errors / 65% coverage ] ****** [1852 done /1439 queued / 16 running / 165 errors / 65% coverage ] ****** [1853 done /1438 queued / 16 running / 165 errors / 65% coverage ] ****** [1853 done /1438 queued / 16 running / 165 errors / 65% coverage ] ****** [1854 done /1438 queued / 16 running / 165 errors / 65% coverage ] ****** [1854 done /1438 queued / 16 running / 165 errors / 65% coverage ] ****** [1855 done /1439 queued / 16 running / 165 errors / 65% coverage ] ****** [1855 done /1439 queued / 16 running / 165 errors / 65% coverage ] ****** [1856 done /1439 queued / 16 running / 165 errors / 65% coverage ] ****** [1856 done /1439 queued / 16 running / 165 errors / 65% coverage ] ****** [1857 done /1439 queued / 16 running / 165 errors / 65% coverage ] ****** [1857 done /1439 queued / 16 running / 165 errors / 65% coverage ] ****** [1858 done /1439 queued / 16 running / 165 errors / 65% coverage ] ****** [1858 done /1439 queued / 16 running / 165 errors / 65% coverage ] ****** [1859 done /1439 queued / 16 running / 165 errors / 65% coverage ] ****** [1859 done /1439 queued / 16 running / 165 errors / 65% coverage ] ****** [1860 done /1439 queued / 16 running / 165 errors / 65% coverage ] ****** [1860 done /1439 queued / 16 running / 165 errors / 65% coverage ] ****** [1861 done /1440 queued / 16 running / 165 errors / 65% coverage ] ****** [1861 done /1440 queued / 16 running / 165 errors / 65% coverage ] ****** [1862 done /1441 queued / 16 running / 165 errors / 65% coverage ] ****** [1862 done /1441 queued / 16 running / 165 errors / 65% coverage ] ****** [1863 done /1441 queued / 16 running / 165 errors / 65% coverage ] ****** [1863 done /1441 queued / 16 running / 165 errors / 65% coverage ] ****** [1864 done /1440 queued / 16 running / 165 errors / 65% coverage ] ****** [1864 done /1440 queued / 16 running / 165 errors / 65% coverage ] ****** [1865 done /1440 queued / 16 running / 165 errors / 65% coverage ] ****** [1865 done /1440 queued / 16 running / 165 errors / 65% coverage ] ****** [1866 done /1440 queued / 16 running / 165 errors / 65% coverage ] ****** [1866 done /1440 queued / 16 running / 165 errors / 65% coverage ] ****** [1867 done /1439 queued / 16 running / 165 errors / 65% coverage ] ****** [1867 done /1439 queued / 16 running / 165 errors / 65% coverage ] ****** [1868 done /1438 queued / 16 running / 165 errors / 65% coverage ] ****** [1868 done /1438 queued / 16 running / 165 errors / 65% coverage ] ****** [1869 done /1442 queued / 16 running / 165 errors / 65% coverage ] ****** [1869 done /1442 queued / 16 running / 165 errors / 65% coverage ] ****** [1870 done /1442 queued / 16 running / 165 errors / 65% coverage ] ****** [1870 done /1442 queued / 16 running / 165 errors / 65% coverage ] ****** [1871 done /1444 queued / 16 running / 165 errors / 65% coverage ] ****** [1871 done /1444 queued / 16 running / 165 errors / 65% coverage ] ****** [1872 done /1445 queued / 16 running / 165 errors / 65% coverage ] ****** [1872 done /1445 queued / 16 running / 165 errors / 65% coverage ] ****** [1873 done /1446 queued / 16 running / 165 errors / 65% coverage ] ****** [1873 done /1446 queued / 16 running / 165 errors / 65% coverage ] ****** [1874 done /1447 queued / 16 running / 165 errors / 65% coverage ] ****** [1874 done /1447 queued / 16 running / 165 errors / 65% coverage ] ****** [1875 done /1451 queued / 16 running / 165 errors / 65% coverage ] ****** [1875 done /1451 queued / 16 running / 165 errors / 65% coverage ] ****** [1876 done /1453 queued / 16 running / 165 errors / 65% coverage ] ****** [1876 done /1453 queued / 16 running / 165 errors / 65% coverage ] ****** [1877 done /1454 queued / 16 running / 165 errors / 65% coverage ] ****** [1877 done /1454 queued / 16 running / 165 errors / 65% coverage ] ****** [1878 done /1457 queued / 16 running / 165 errors / 65% coverage ] ****** [1878 done /1457 queued / 16 running / 165 errors / 65% coverage ] ****** [1879 done /1459 queued / 16 running / 165 errors / 65% coverage ] ****** [1879 done /1459 queued / 16 running / 165 errors / 65% coverage ] ****** [1880 done /1460 queued / 16 running / 165 errors / 65% coverage ] ****** [1880 done /1460 queued / 16 running / 165 errors / 65% coverage ] ****** [1881 done /1464 queued / 16 running / 165 errors / 65% coverage ] ****** [1881 done /1464 queued / 16 running / 165 errors / 65% coverage ] ****** [1882 done /1465 queued / 16 running / 165 errors / 65% coverage ] ****** [1882 done /1465 queued / 16 running / 165 errors / 65% coverage ] ****** [1883 done /1466 queued / 16 running / 165 errors / 65% coverage ] ****** [1883 done /1466 queued / 16 running / 165 errors / 65% coverage ] ****** [1884 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1884 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1885 done /1468 queued / 16 running / 165 errors / 65% coverage ] ****** [1885 done /1468 queued / 16 running / 165 errors / 65% coverage ] ****** [1886 done /1468 queued / 16 running / 165 errors / 65% coverage ] ****** [1886 done /1468 queued / 16 running / 165 errors / 65% coverage ] ****** [1887 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1887 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1888 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1888 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1889 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1889 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1890 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1890 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1891 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1891 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1892 done /1468 queued / 16 running / 165 errors / 65% coverage ] ****** [1892 done /1468 queued / 16 running / 165 errors / 65% coverage ] ****** [1893 done /1468 queued / 16 running / 165 errors / 65% coverage ] ****** [1893 done /1468 queued / 16 running / 165 errors / 65% coverage ] ****** [1894 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1894 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1895 done /1468 queued / 16 running / 165 errors / 65% coverage ] ****** [1895 done /1468 queued / 16 running / 165 errors / 65% coverage ] ****** [1896 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1896 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1897 done /1466 queued / 16 running / 165 errors / 65% coverage ] ****** [1897 done /1466 queued / 16 running / 165 errors / 65% coverage ] ****** [1898 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1898 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1899 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1899 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1900 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1900 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1901 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1901 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1902 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1902 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1903 done /1468 queued / 16 running / 165 errors / 65% coverage ] ****** [1903 done /1468 queued / 16 running / 165 errors / 65% coverage ] ****** [1904 done /1468 queued / 16 running / 165 errors / 65% coverage ] ****** [1904 done /1468 queued / 16 running / 165 errors / 65% coverage ] ****** [1905 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1905 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1906 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1906 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1907 done /1466 queued / 16 running / 165 errors / 65% coverage ] ****** [1907 done /1466 queued / 16 running / 165 errors / 65% coverage ] ****** [1908 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1908 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1909 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1909 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1910 done /1466 queued / 16 running / 165 errors / 65% coverage ] ****** [1910 done /1466 queued / 16 running / 165 errors / 65% coverage ] ****** [1911 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1911 done /1467 queued / 16 running / 165 errors / 65% coverage ] ****** [1912 done /1472 queued / 16 running / 165 errors / 65% coverage ] ****** [1912 done /1472 queued / 16 running / 165 errors / 65% coverage ] ****** [1913 done /1473 queued / 16 running / 165 errors / 65% coverage ] ****** [1913 done /1473 queued / 16 running / 165 errors / 65% coverage ] ****** [1914 done /1474 queued / 16 running / 165 errors / 65% coverage ] ****** [1914 done /1474 queued / 16 running / 165 errors / 65% coverage ] ****** [1915 done /1475 queued / 16 running / 165 errors / 65% coverage ] ****** [1915 done /1475 queued / 16 running / 165 errors / 65% coverage ] ****** [1916 done /1478 queued / 16 running / 165 errors / 65% coverage ] ****** [1916 done /1478 queued / 16 running / 165 errors / 65% coverage ] ****** [1917 done /1479 queued / 16 running / 165 errors / 65% coverage ] ****** [1917 done /1479 queued / 16 running / 165 errors / 65% coverage ] ****** [1918 done /1480 queued / 16 running / 165 errors / 65% coverage ] ****** [1918 done /1480 queued / 16 running / 165 errors / 65% coverage ] ****** [1919 done /1480 queued / 16 running / 165 errors / 65% coverage ] ****** [1919 done /1480 queued / 16 running / 165 errors / 65% coverage ] ****** [1920 done /1479 queued / 16 running / 165 errors / 65% coverage ] ****** [1920 done /1479 queued / 16 running / 165 errors / 65% coverage ] ****** [1921 done /1481 queued / 16 running / 165 errors / 65% coverage ] ****** [1921 done /1481 queued / 16 running / 165 errors / 65% coverage ] ****** [1922 done /1485 queued / 16 running / 165 errors / 65% coverage ] ****** [1922 done /1485 queued / 16 running / 165 errors / 65% coverage ] ****** [1923 done /1489 queued / 16 running / 165 errors / 65% coverage ] ****** [1923 done /1489 queued / 16 running / 165 errors / 65% coverage ] ****** [1924 done /1488 queued / 16 running / 165 errors / 65% coverage ] ****** [1924 done /1488 queued / 16 running / 165 errors / 65% coverage ] ****** [1925 done /1488 queued / 16 running / 165 errors / 65% coverage ] ****** [1925 done /1488 queued / 16 running / 165 errors / 65% coverage ] ****** [1926 done /1493 queued / 16 running / 165 errors / 65% coverage ] ****** [1926 done /1493 queued / 16 running / 165 errors / 65% coverage ] ****** [1927 done /1494 queued / 16 running / 165 errors / 65% coverage ] ****** [1927 done /1494 queued / 16 running / 165 errors / 65% coverage ] ****** [1928 done /1495 queued / 16 running / 165 errors / 65% coverage ] ****** [1928 done /1495 queued / 16 running / 165 errors / 65% coverage ] ****** [1929 done /1496 queued / 16 running / 165 errors / 65% coverage ] ****** [1929 done /1496 queued / 16 running / 165 errors / 65% coverage ] ****** [1930 done /1497 queued / 16 running / 165 errors / 65% coverage ] ****** [1930 done /1497 queued / 16 running / 165 errors / 65% coverage ] ****** [1931 done /1499 queued / 16 running / 165 errors / 65% coverage ] ****** [1931 done /1499 queued / 16 running / 165 errors / 65% coverage ] ****** [1932 done /1500 queued / 16 running / 165 errors / 65% coverage ] ****** [1932 done /1500 queued / 16 running / 165 errors / 65% coverage ] ****** [1933 done /1502 queued / 16 running / 165 errors / 65% coverage ] ****** [1933 done /1502 queued / 16 running / 165 errors / 65% coverage ] ****** [1934 done /1503 queued / 16 running / 165 errors / 65% coverage ] ****** [1934 done /1503 queued / 16 running / 165 errors / 65% coverage ] ****** [1935 done /1502 queued / 16 running / 165 errors / 65% coverage ] ****** [1935 done /1502 queued / 16 running / 165 errors / 65% coverage ] ****** [1936 done /1501 queued / 16 running / 165 errors / 65% coverage ] ****** [1936 done /1501 queued / 16 running / 165 errors / 65% coverage ] ****** [1937 done /1502 queued / 16 running / 165 errors / 65% coverage ] ****** [1937 done /1502 queued / 16 running / 165 errors / 65% coverage ] ****** [1938 done /1501 queued / 16 running / 165 errors / 65% coverage ] ****** [1938 done /1501 queued / 16 running / 165 errors / 65% coverage ] ****** [1939 done /1502 queued / 16 running / 165 errors / 65% coverage ] ****** [1939 done /1502 queued / 16 running / 165 errors / 65% coverage ] ****** [1940 done /1503 queued / 16 running / 165 errors / 65% coverage ] ****** [1940 done /1503 queued / 16 running / 165 errors / 65% coverage ] ****** [1941 done /1503 queued / 16 running / 165 errors / 65% coverage ] ****** [1941 done /1503 queued / 16 running / 165 errors / 65% coverage ] ****** [1942 done /1503 queued / 16 running / 165 errors / 65% coverage ] ****** [1942 done /1503 queued / 16 running / 165 errors / 65% coverage ] ****** [1943 done /1503 queued / 16 running / 165 errors / 65% coverage ] ****** [1943 done /1503 queued / 16 running / 165 errors / 65% coverage ] ****** [1944 done /1506 queued / 16 running / 165 errors / 65% coverage ] ****** [1944 done /1506 queued / 16 running / 165 errors / 65% coverage ] ****** [1945 done /1506 queued / 16 running / 165 errors / 65% coverage ] ****** [1945 done /1506 queued / 16 running / 165 errors / 65% coverage ] ****** [1946 done /1507 queued / 16 running / 165 errors / 65% coverage ] ****** [1946 done /1507 queued / 16 running / 165 errors / 65% coverage ] ****** [1947 done /1510 queued / 16 running / 165 errors / 65% coverage ] ****** [1947 done /1510 queued / 16 running / 165 errors / 65% coverage ] ****** [1948 done /1512 queued / 16 running / 165 errors / 65% coverage ] ****** [1948 done /1512 queued / 16 running / 165 errors / 65% coverage ] ****** [1949 done /1512 queued / 16 running / 165 errors / 65% coverage ] ****** [1949 done /1512 queued / 16 running / 165 errors / 65% coverage ] ****** [1950 done /1512 queued / 16 running / 165 errors / 65% coverage ] ****** [1950 done /1512 queued / 16 running / 165 errors / 65% coverage ] ****** [1951 done /1512 queued / 16 running / 165 errors / 65% coverage ] ****** [1951 done /1512 queued / 16 running / 165 errors / 65% coverage ] ****** [1952 done /1514 queued / 16 running / 165 errors / 65% coverage ] ****** [1952 done /1514 queued / 16 running / 165 errors / 65% coverage ] ****** [1953 done /1514 queued / 16 running / 165 errors / 65% coverage ] ****** [1953 done /1514 queued / 16 running / 165 errors / 65% coverage ] ****** [1954 done /1516 queued / 16 running / 165 errors / 65% coverage ] ****** [1954 done /1516 queued / 16 running / 165 errors / 65% coverage ] ****** [1955 done /1518 queued / 16 running / 165 errors / 65% coverage ] ****** [1955 done /1518 queued / 16 running / 165 errors / 65% coverage ] ****** [1956 done /1519 queued / 16 running / 165 errors / 65% coverage ] ****** [1956 done /1519 queued / 16 running / 165 errors / 65% coverage ] ****** [1957 done /1519 queued / 16 running / 165 errors / 65% coverage ] ****** [1957 done /1519 queued / 16 running / 165 errors / 65% coverage ] ****** [1958 done /1520 queued / 16 running / 165 errors / 65% coverage ] ****** [1958 done /1520 queued / 16 running / 165 errors / 65% coverage ] ****** [1959 done /1521 queued / 16 running / 165 errors / 65% coverage ] ****** [1959 done /1521 queued / 16 running / 165 errors / 65% coverage ] ****** [1960 done /1524 queued / 16 running / 165 errors / 65% coverage ] ****** [1960 done /1524 queued / 16 running / 165 errors / 65% coverage ] ****** [1961 done /1525 queued / 16 running / 165 errors / 65% coverage ] ****** [1961 done /1525 queued / 16 running / 165 errors / 65% coverage ] ****** [1962 done /1529 queued / 16 running / 165 errors / 65% coverage ] ****** [1962 done /1529 queued / 16 running / 165 errors / 65% coverage ] ****** [1963 done /1530 queued / 16 running / 165 errors / 65% coverage ] ****** [1963 done /1530 queued / 16 running / 165 errors / 65% coverage ] ****** [1964 done /1529 queued / 16 running / 165 errors / 65% coverage ] ****** [1964 done /1529 queued / 16 running / 165 errors / 65% coverage ] ****** [1965 done /1530 queued / 16 running / 165 errors / 65% coverage ] ****** [1965 done /1530 queued / 16 running / 165 errors / 65% coverage ] ****** [1966 done /1530 queued / 16 running / 165 errors / 65% coverage ] ****** [1966 done /1530 queued / 16 running / 165 errors / 65% coverage ] ****** [1967 done /1532 queued / 16 running / 165 errors / 65% coverage ] ****** [1967 done /1532 queued / 16 running / 165 errors / 65% coverage ] ****** [1968 done /1532 queued / 16 running / 165 errors / 65% coverage ] ****** [1968 done /1532 queued / 16 running / 165 errors / 65% coverage ] ****** [1969 done /1534 queued / 16 running / 165 errors / 65% coverage ] ****** [1969 done /1534 queued / 16 running / 165 errors / 65% coverage ] ****** [1970 done /1533 queued / 16 running / 165 errors / 65% coverage ] ****** [1970 done /1533 queued / 16 running / 165 errors / 65% coverage ] ****** [1971 done /1532 queued / 16 running / 165 errors / 65% coverage ] ****** [1971 done /1532 queued / 16 running / 165 errors / 65% coverage ] ****** [1972 done /1534 queued / 16 running / 165 errors / 65% coverage ] ****** [1972 done /1534 queued / 16 running / 165 errors / 65% coverage ] ****** [1973 done /1538 queued / 16 running / 165 errors / 65% coverage ] ****** [1973 done /1538 queued / 16 running / 165 errors / 65% coverage ] ****** [1974 done /1542 queued / 16 running / 165 errors / 65% coverage ] ****** [1974 done /1542 queued / 16 running / 165 errors / 65% coverage ] ****** [1975 done /1542 queued / 16 running / 165 errors / 65% coverage ] ****** [1975 done /1542 queued / 16 running / 165 errors / 65% coverage ] ****** [1976 done /1543 queued / 16 running / 165 errors / 65% coverage ] ****** [1976 done /1543 queued / 16 running / 165 errors / 65% coverage ] ****** [1977 done /1545 queued / 16 running / 165 errors / 65% coverage ] ****** [1977 done /1545 queued / 16 running / 165 errors / 65% coverage ] ****** [1978 done /1546 queued / 16 running / 165 errors / 65% coverage ] ****** [1978 done /1546 queued / 16 running / 165 errors / 65% coverage ] ****** [1979 done /1547 queued / 16 running / 165 errors / 65% coverage ] ****** [1979 done /1547 queued / 16 running / 165 errors / 65% coverage ] ****** [1980 done /1549 queued / 16 running / 165 errors / 65% coverage ] ****** [1980 done /1549 queued / 16 running / 165 errors / 65% coverage ] ****** [1981 done /1550 queued / 16 running / 165 errors / 65% coverage ] ****** [1981 done /1550 queued / 16 running / 165 errors / 65% coverage ] ****** [1982 done /1554 queued / 16 running / 165 errors / 65% coverage ] ****** [1982 done /1554 queued / 16 running / 165 errors / 65% coverage ] ****** [1983 done /1556 queued / 16 running / 165 errors / 65% coverage ] ****** [1983 done /1556 queued / 16 running / 165 errors / 65% coverage ] ****** [1984 done /1557 queued / 16 running / 165 errors / 65% coverage ] ****** [1984 done /1557 queued / 16 running / 165 errors / 65% coverage ] ****** [1985 done /1559 queued / 16 running / 165 errors / 65% coverage ] ****** [1985 done /1559 queued / 16 running / 165 errors / 65% coverage ] ****** [1986 done /1560 queued / 16 running / 165 errors / 65% coverage ] ****** [1986 done /1560 queued / 16 running / 165 errors / 65% coverage ] ****** [1987 done /1562 queued / 16 running / 165 errors / 65% coverage ] ****** [1987 done /1562 queued / 16 running / 165 errors / 65% coverage ] ****** [1988 done /1565 queued / 16 running / 165 errors / 65% coverage ] ****** [1988 done /1565 queued / 16 running / 165 errors / 65% coverage ] ****** [1989 done /1565 queued / 16 running / 165 errors / 65% coverage ] ****** [1989 done /1565 queued / 16 running / 165 errors / 65% coverage ] ****** [1990 done /1566 queued / 16 running / 165 errors / 65% coverage ] ****** [1990 done /1566 queued / 16 running / 165 errors / 65% coverage ] ****** [1991 done /1567 queued / 16 running / 165 errors / 65% coverage ] ****** [1991 done /1567 queued / 16 running / 165 errors / 65% coverage ] ****** [1992 done /1567 queued / 16 running / 165 errors / 65% coverage ] ****** [1992 done /1567 queued / 16 running / 165 errors / 65% coverage ] ****** [1993 done /1569 queued / 16 running / 165 errors / 65% coverage ] ****** [1993 done /1569 queued / 16 running / 165 errors / 65% coverage ] ****** [1994 done /1569 queued / 16 running / 165 errors / 65% coverage ] ****** [1994 done /1569 queued / 16 running / 165 errors / 65% coverage ] ****** [1995 done /1569 queued / 16 running / 165 errors / 65% coverage ] ****** [1995 done /1569 queued / 16 running / 165 errors / 65% coverage ] ****** [1996 done /1569 queued / 16 running / 165 errors / 65% coverage ] ****** [1996 done /1569 queued / 16 running / 165 errors / 65% coverage ] ****** [1997 done /1569 queued / 16 running / 165 errors / 65% coverage ] ****** [1997 done /1569 queued / 16 running / 165 errors / 65% coverage ] ****** [1998 done /1570 queued / 16 running / 165 errors / 65% coverage ] ****** [1998 done /1570 queued / 16 running / 165 errors / 65% coverage ] ****** [1999 done /1570 queued / 16 running / 165 errors / 65% coverage ] ****** [1999 done /1570 queued / 16 running / 165 errors / 65% coverage ] ****** [2000 done /1572 queued / 16 running / 165 errors / 65% coverage ] ****** [2000 done /1572 queued / 16 running / 165 errors / 65% coverage ] ****** [2001 done /1572 queued / 16 running / 165 errors / 65% coverage ] ****** [2001 done /1572 queued / 16 running / 165 errors / 65% coverage ] ****** [2002 done /1572 queued / 16 running / 165 errors / 65% coverage ] ****** [2002 done /1572 queued / 16 running / 165 errors / 65% coverage ] ****** [2003 done /1574 queued / 16 running / 165 errors / 65% coverage ] ****** [2003 done /1574 queued / 16 running / 165 errors / 65% coverage ] ****** [2004 done /1574 queued / 16 running / 165 errors / 65% coverage ] ****** [2004 done /1574 queued / 16 running / 165 errors / 65% coverage ] ****** [2005 done /1574 queued / 16 running / 165 errors / 65% coverage ] ****** [2005 done /1574 queued / 16 running / 165 errors / 65% coverage ] ****** [2006 done /1574 queued / 16 running / 165 errors / 65% coverage ] ****** [2006 done /1574 queued / 16 running / 165 errors / 65% coverage ] ****** [2007 done /1574 queued / 16 running / 165 errors / 65% coverage ] ****** [2007 done /1574 queued / 16 running / 165 errors / 65% coverage ] ****** [2008 done /1575 queued / 16 running / 165 errors / 65% coverage ] ****** [2008 done /1575 queued / 16 running / 165 errors / 65% coverage ] ****** [2009 done /1576 queued / 16 running / 165 errors / 65% coverage ] ****** [2009 done /1576 queued / 16 running / 165 errors / 65% coverage ] ****** [2010 done /1576 queued / 16 running / 165 errors / 65% coverage ] ****** [2010 done /1576 queued / 16 running / 165 errors / 65% coverage ] ****** [2011 done /1577 queued / 16 running / 165 errors / 65% coverage ] ****** [2011 done /1577 queued / 16 running / 165 errors / 65% coverage ] ****** [2012 done /1580 queued / 16 running / 165 errors / 65% coverage ] ****** [2012 done /1580 queued / 16 running / 165 errors / 65% coverage ] ****** [2013 done /1581 queued / 16 running / 165 errors / 65% coverage ] ****** [2013 done /1581 queued / 16 running / 165 errors / 65% coverage ] ****** [2014 done /1582 queued / 16 running / 165 errors / 65% coverage ] ****** [2014 done /1582 queued / 16 running / 165 errors / 65% coverage ] ****** [2015 done /1584 queued / 16 running / 165 errors / 65% coverage ] ****** [2015 done /1584 queued / 16 running / 165 errors / 65% coverage ] ****** [2016 done /1587 queued / 16 running / 165 errors / 65% coverage ] ****** [2016 done /1587 queued / 16 running / 165 errors / 65% coverage ] ****** [2017 done /1587 queued / 16 running / 165 errors / 65% coverage ] ****** [2017 done /1587 queued / 16 running / 165 errors / 65% coverage ] ****** [2018 done /1590 queued / 16 running / 165 errors / 65% coverage ] ****** [2018 done /1590 queued / 16 running / 165 errors / 65% coverage ] ****** [2019 done /1592 queued / 16 running / 165 errors / 65% coverage ] ****** [2019 done /1592 queued / 16 running / 165 errors / 65% coverage ] ****** [2020 done /1593 queued / 16 running / 165 errors / 65% coverage ] ****** [2020 done /1593 queued / 16 running / 165 errors / 65% coverage ] ****** [2021 done /1594 queued / 16 running / 165 errors / 65% coverage ] ****** [2021 done /1594 queued / 16 running / 165 errors / 65% coverage ] ****** [2022 done /1598 queued / 16 running / 165 errors / 65% coverage ] ****** [2022 done /1598 queued / 16 running / 165 errors / 65% coverage ] ****** [2023 done /1600 queued / 16 running / 165 errors / 65% coverage ] ****** [2023 done /1600 queued / 16 running / 165 errors / 65% coverage ] ****** [2024 done /1601 queued / 16 running / 165 errors / 65% coverage ] ****** [2024 done /1601 queued / 16 running / 165 errors / 65% coverage ] ****** [2025 done /1602 queued / 16 running / 165 errors / 65% coverage ] ****** [2025 done /1602 queued / 16 running / 165 errors / 65% coverage ] ****** [2026 done /1605 queued / 16 running / 165 errors / 65% coverage ] ****** [2026 done /1605 queued / 16 running / 165 errors / 65% coverage ] ****** [2027 done /1608 queued / 16 running / 165 errors / 65% coverage ] ****** [2027 done /1608 queued / 16 running / 165 errors / 65% coverage ] ****** [2028 done /1607 queued / 16 running / 165 errors / 65% coverage ] ****** [2028 done /1607 queued / 16 running / 165 errors / 65% coverage ] ****** [2029 done /1608 queued / 16 running / 165 errors / 65% coverage ] ****** [2029 done /1608 queued / 16 running / 165 errors / 65% coverage ] ****** [2030 done /1608 queued / 16 running / 165 errors / 65% coverage ] ****** [2030 done /1608 queued / 16 running / 165 errors / 65% coverage ] ****** [2031 done /1609 queued / 16 running / 165 errors / 65% coverage ] ****** [2031 done /1609 queued / 16 running / 165 errors / 65% coverage ] ****** [2032 done /1612 queued / 16 running / 165 errors / 65% coverage ] ****** [2032 done /1612 queued / 16 running / 165 errors / 65% coverage ] ****** [2033 done /1614 queued / 16 running / 165 errors / 65% coverage ] ****** [2033 done /1614 queued / 16 running / 165 errors / 65% coverage ] ****** [2034 done /1613 queued / 16 running / 165 errors / 65% coverage ] ****** [2034 done /1613 queued / 16 running / 165 errors / 65% coverage ] ****** [2035 done /1613 queued / 16 running / 165 errors / 65% coverage ] ****** [2035 done /1613 queued / 16 running / 165 errors / 65% coverage ] ****** [2036 done /1612 queued / 16 running / 165 errors / 65% coverage ] ****** [2036 done /1612 queued / 16 running / 165 errors / 65% coverage ] ****** [2037 done /1613 queued / 16 running / 165 errors / 65% coverage ] ****** [2037 done /1613 queued / 16 running / 165 errors / 65% coverage ] ****** [2038 done /1613 queued / 16 running / 165 errors / 65% coverage ] ****** [2038 done /1613 queued / 16 running / 165 errors / 65% coverage ] ****** [2039 done /1614 queued / 16 running / 165 errors / 65% coverage ] ****** [2039 done /1614 queued / 16 running / 165 errors / 65% coverage ] ****** [2040 done /1615 queued / 16 running / 165 errors / 65% coverage ] ****** [2040 done /1615 queued / 16 running / 165 errors / 65% coverage ] ****** [2041 done /1616 queued / 16 running / 165 errors / 65% coverage ] ****** [2041 done /1616 queued / 16 running / 165 errors / 65% coverage ] ****** [2042 done /1615 queued / 16 running / 165 errors / 65% coverage ] ****** [2042 done /1615 queued / 16 running / 165 errors / 65% coverage ] ****** [2043 done /1615 queued / 16 running / 165 errors / 65% coverage ] ****** [2043 done /1615 queued / 16 running / 165 errors / 65% coverage ] ****** [2044 done /1616 queued / 16 running / 165 errors / 65% coverage ] ****** [2044 done /1616 queued / 16 running / 165 errors / 65% coverage ] ****** [2045 done /1615 queued / 16 running / 165 errors / 65% coverage ] ****** [2045 done /1615 queued / 16 running / 165 errors / 65% coverage ] ****** [2046 done /1617 queued / 16 running / 165 errors / 65% coverage ] ****** [2046 done /1617 queued / 16 running / 165 errors / 65% coverage ] ****** [2047 done /1618 queued / 16 running / 165 errors / 65% coverage ] ****** [2047 done /1618 queued / 16 running / 165 errors / 65% coverage ] ****** [2048 done /1617 queued / 16 running / 165 errors / 65% coverage ] ****** [2048 done /1617 queued / 16 running / 165 errors / 65% coverage ] ****** [2049 done /1619 queued / 16 running / 165 errors / 65% coverage ] ****** [2049 done /1619 queued / 16 running / 165 errors / 65% coverage ] ****** [2050 done /1619 queued / 16 running / 165 errors / 65% coverage ] ****** [2050 done /1619 queued / 16 running / 165 errors / 65% coverage ] ****** [2051 done /1619 queued / 16 running / 165 errors / 65% coverage ] ****** [2051 done /1619 queued / 16 running / 165 errors / 65% coverage ] ****** [2052 done /1618 queued / 16 running / 165 errors / 65% coverage ] ****** [2052 done /1618 queued / 16 running / 165 errors / 65% coverage ] ****** [2053 done /1619 queued / 16 running / 165 errors / 65% coverage ] ****** [2053 done /1619 queued / 16 running / 165 errors / 65% coverage ] ****** [2054 done /1618 queued / 16 running / 165 errors / 65% coverage ] ****** [2054 done /1618 queued / 16 running / 165 errors / 65% coverage ] ****** [2055 done /1620 queued / 16 running / 165 errors / 65% coverage ] ****** [2055 done /1620 queued / 16 running / 165 errors / 65% coverage ] ****** [2056 done /1623 queued / 16 running / 165 errors / 65% coverage ] ****** [2056 done /1623 queued / 16 running / 165 errors / 65% coverage ] ****** [2057 done /1622 queued / 16 running / 165 errors / 65% coverage ] ****** [2057 done /1622 queued / 16 running / 165 errors / 65% coverage ] ****** [2058 done /1622 queued / 16 running / 165 errors / 65% coverage ] ****** [2058 done /1622 queued / 16 running / 165 errors / 65% coverage ] ****** [2059 done /1622 queued / 16 running / 165 errors / 65% coverage ] ****** [2059 done /1622 queued / 16 running / 165 errors / 65% coverage ] ****** [2060 done /1621 queued / 16 running / 165 errors / 65% coverage ] ****** [2060 done /1621 queued / 16 running / 165 errors / 65% coverage ] ****** [2061 done /1625 queued / 16 running / 165 errors / 65% coverage ] ****** [2061 done /1625 queued / 16 running / 165 errors / 65% coverage ] ****** [2062 done /1626 queued / 16 running / 165 errors / 65% coverage ] ****** [2062 done /1626 queued / 16 running / 165 errors / 65% coverage ] ****** [2063 done /1629 queued / 16 running / 165 errors / 65% coverage ] ****** [2063 done /1629 queued / 16 running / 165 errors / 65% coverage ] ****** [2064 done /1631 queued / 16 running / 165 errors / 65% coverage ] ****** [2064 done /1631 queued / 16 running / 165 errors / 65% coverage ] ****** [2065 done /1631 queued / 16 running / 165 errors / 65% coverage ] ****** [2065 done /1631 queued / 16 running / 165 errors / 65% coverage ] ****** [2066 done /1632 queued / 16 running / 165 errors / 65% coverage ] ****** [2066 done /1632 queued / 16 running / 165 errors / 65% coverage ] ****** [2067 done /1633 queued / 16 running / 165 errors / 65% coverage ] ****** [2067 done /1633 queued / 16 running / 165 errors / 65% coverage ] ****** [2068 done /1634 queued / 16 running / 165 errors / 65% coverage ] ****** [2068 done /1634 queued / 16 running / 165 errors / 65% coverage ] ****** [2069 done /1638 queued / 16 running / 165 errors / 65% coverage ] ****** [2069 done /1638 queued / 16 running / 165 errors / 65% coverage ] ****** [2070 done /1639 queued / 16 running / 165 errors / 65% coverage ] ****** [2070 done /1639 queued / 16 running / 165 errors / 65% coverage ] ****** [2071 done /1640 queued / 16 running / 165 errors / 65% coverage ] ****** [2071 done /1640 queued / 16 running / 165 errors / 65% coverage ] ****** [2072 done /1642 queued / 16 running / 165 errors / 65% coverage ] ****** [2072 done /1642 queued / 16 running / 165 errors / 65% coverage ] ****** [2073 done /1644 queued / 16 running / 165 errors / 65% coverage ] ****** [2073 done /1644 queued / 16 running / 165 errors / 65% coverage ] ****** [2074 done /1648 queued / 16 running / 165 errors / 65% coverage ] ****** [2074 done /1648 queued / 16 running / 165 errors / 65% coverage ] ****** [2075 done /1650 queued / 16 running / 165 errors / 65% coverage ] ****** [2075 done /1650 queued / 16 running / 165 errors / 65% coverage ] ****** [2076 done /1651 queued / 16 running / 165 errors / 65% coverage ] ****** [2076 done /1651 queued / 16 running / 165 errors / 65% coverage ] ****** [2077 done /1651 queued / 16 running / 165 errors / 65% coverage ] ****** [2077 done /1651 queued / 16 running / 165 errors / 65% coverage ] ****** [2078 done /1652 queued / 16 running / 165 errors / 65% coverage ] ****** [2078 done /1652 queued / 16 running / 165 errors / 65% coverage ] ****** [2079 done /1651 queued / 16 running / 165 errors / 65% coverage ] ****** [2079 done /1651 queued / 16 running / 165 errors / 65% coverage ] ****** [2080 done /1650 queued / 16 running / 165 errors / 65% coverage ] ****** [2080 done /1650 queued / 16 running / 165 errors / 65% coverage ] ****** [2081 done /1651 queued / 16 running / 165 errors / 65% coverage ] ****** [2081 done /1651 queued / 16 running / 165 errors / 65% coverage ] ****** [2082 done /1651 queued / 16 running / 165 errors / 65% coverage ] ****** [2082 done /1651 queued / 16 running / 165 errors / 65% coverage ] ****** [2083 done /1651 queued / 16 running / 165 errors / 65% coverage ] ****** [2083 done /1651 queued / 16 running / 165 errors / 65% coverage ] ****** [2084 done /1652 queued / 16 running / 165 errors / 65% coverage ] ****** [2084 done /1652 queued / 16 running / 165 errors / 65% coverage ] ****** [2085 done /1652 queued / 16 running / 165 errors / 65% coverage ] ****** [2085 done /1652 queued / 16 running / 165 errors / 65% coverage ] ****** [2086 done /1652 queued / 16 running / 165 errors / 65% coverage ] ****** [2086 done /1652 queued / 16 running / 165 errors / 65% coverage ] ****** [2087 done /1651 queued / 16 running / 165 errors / 65% coverage ] ****** [2087 done /1651 queued / 16 running / 165 errors / 65% coverage ] ****** [2088 done /1651 queued / 16 running / 165 errors / 65% coverage ] ****** [2088 done /1651 queued / 16 running / 165 errors / 65% coverage ] ****** [2089 done /1650 queued / 16 running / 165 errors / 65% coverage ] ****** [2089 done /1650 queued / 16 running / 165 errors / 65% coverage ] ****** [2090 done /1651 queued / 16 running / 165 errors / 65% coverage ] ****** [2090 done /1651 queued / 16 running / 165 errors / 65% coverage ] ****** [2091 done /1653 queued / 16 running / 165 errors / 65% coverage ] ****** [2091 done /1653 queued / 16 running / 165 errors / 65% coverage ] ****** [2092 done /1653 queued / 16 running / 165 errors / 65% coverage ] ****** [2092 done /1653 queued / 16 running / 165 errors / 65% coverage ] ****** [2093 done /1652 queued / 16 running / 165 errors / 65% coverage ] ****** [2093 done /1652 queued / 16 running / 165 errors / 65% coverage ] ****** [2094 done /1653 queued / 16 running / 165 errors / 65% coverage ] ****** [2094 done /1653 queued / 16 running / 165 errors / 65% coverage ] ****** [2095 done /1653 queued / 16 running / 165 errors / 65% coverage ] ****** [2095 done /1653 queued / 16 running / 165 errors / 65% coverage ] ****** [2096 done /1654 queued / 16 running / 165 errors / 65% coverage ] ****** [2096 done /1654 queued / 16 running / 165 errors / 65% coverage ] ****** [2097 done /1654 queued / 16 running / 165 errors / 65% coverage ] ****** [2097 done /1654 queued / 16 running / 165 errors / 65% coverage ] ****** [2098 done /1654 queued / 16 running / 165 errors / 65% coverage ] ****** [2098 done /1654 queued / 16 running / 165 errors / 65% coverage ] ****** [2099 done /1653 queued / 16 running / 165 errors / 65% coverage ] ****** [2099 done /1653 queued / 16 running / 165 errors / 65% coverage ] ****** [2100 done /1654 queued / 16 running / 165 errors / 65% coverage ] ****** [2100 done /1654 queued / 16 running / 165 errors / 65% coverage ] ****** [2101 done /1655 queued / 16 running / 165 errors / 65% coverage ] ****** [2101 done /1655 queued / 16 running / 165 errors / 65% coverage ] ****** [2102 done /1654 queued / 16 running / 165 errors / 65% coverage ] ****** [2102 done /1654 queued / 16 running / 165 errors / 65% coverage ] ****** [2103 done /1654 queued / 16 running / 165 errors / 65% coverage ] ****** [2103 done /1654 queued / 16 running / 165 errors / 65% coverage ] ****** [2104 done /1654 queued / 16 running / 165 errors / 65% coverage ] ****** [2104 done /1654 queued / 16 running / 165 errors / 65% coverage ] ****** [2105 done /1657 queued / 16 running / 165 errors / 65% coverage ] ****** [2105 done /1657 queued / 16 running / 165 errors / 65% coverage ] ****** [2106 done /1657 queued / 16 running / 165 errors / 65% coverage ] ****** [2106 done /1657 queued / 16 running / 165 errors / 65% coverage ] ****** [2107 done /1658 queued / 16 running / 165 errors / 65% coverage ] ****** [2107 done /1658 queued / 16 running / 165 errors / 65% coverage ] ****** [2108 done /1657 queued / 16 running / 165 errors / 65% coverage ] ****** [2108 done /1657 queued / 16 running / 165 errors / 65% coverage ] ****** [2109 done /1657 queued / 16 running / 165 errors / 65% coverage ] ****** [2109 done /1657 queued / 16 running / 165 errors / 65% coverage ] ****** [2110 done /1656 queued / 16 running / 165 errors / 65% coverage ] ****** [2110 done /1656 queued / 16 running / 165 errors / 65% coverage ] ****** [2111 done /1656 queued / 16 running / 165 errors / 65% coverage ] ****** [2111 done /1656 queued / 16 running / 165 errors / 65% coverage ] ****** [2112 done /1657 queued / 16 running / 165 errors / 65% coverage ] ****** [2112 done /1657 queued / 16 running / 165 errors / 65% coverage ] ****** [2113 done /1658 queued / 16 running / 165 errors / 65% coverage ] ****** [2113 done /1658 queued / 16 running / 165 errors / 65% coverage ] ****** [2114 done /1659 queued / 16 running / 165 errors / 65% coverage ] ****** [2114 done /1659 queued / 16 running / 165 errors / 65% coverage ] ****** [2115 done /1661 queued / 16 running / 165 errors / 65% coverage ] ****** [2115 done /1661 queued / 16 running / 165 errors / 65% coverage ] ****** [2116 done /1660 queued / 16 running / 165 errors / 65% coverage ] ****** [2116 done /1660 queued / 16 running / 165 errors / 65% coverage ] ****** [2117 done /1661 queued / 16 running / 165 errors / 65% coverage ] ****** [2117 done /1661 queued / 16 running / 165 errors / 65% coverage ] ****** [2118 done /1663 queued / 16 running / 165 errors / 65% coverage ] ****** [2118 done /1663 queued / 16 running / 165 errors / 65% coverage ] ****** [2119 done /1666 queued / 16 running / 165 errors / 65% coverage ] ****** [2119 done /1666 queued / 16 running / 165 errors / 65% coverage ] ****** [2120 done /1670 queued / 16 running / 165 errors / 65% coverage ] ****** [2120 done /1670 queued / 16 running / 165 errors / 65% coverage ] ****** [2121 done /1670 queued / 16 running / 165 errors / 65% coverage ] ****** [2121 done /1670 queued / 16 running / 165 errors / 65% coverage ] ****** [2122 done /1669 queued / 16 running / 165 errors / 65% coverage ] ****** [2122 done /1669 queued / 16 running / 165 errors / 65% coverage ] ****** [2123 done /1668 queued / 16 running / 165 errors / 65% coverage ] ****** [2123 done /1668 queued / 16 running / 165 errors / 65% coverage ] ****** [2124 done /1671 queued / 16 running / 165 errors / 65% coverage ] ****** [2124 done /1671 queued / 16 running / 165 errors / 65% coverage ] ****** [2125 done /1673 queued / 16 running / 165 errors / 65% coverage ] ****** [2125 done /1673 queued / 16 running / 165 errors / 65% coverage ] ****** [2126 done /1674 queued / 16 running / 165 errors / 65% coverage ] ****** [2126 done /1674 queued / 16 running / 165 errors / 65% coverage ] ****** [2127 done /1673 queued / 16 running / 165 errors / 65% coverage ] ****** [2127 done /1673 queued / 16 running / 165 errors / 65% coverage ] ****** [2128 done /1678 queued / 16 running / 165 errors / 65% coverage ] ****** [2128 done /1678 queued / 16 running / 165 errors / 65% coverage ] ****** [2129 done /1679 queued / 16 running / 165 errors / 65% coverage ] ****** [2129 done /1679 queued / 16 running / 165 errors / 65% coverage ] ****** [2130 done /1680 queued / 16 running / 165 errors / 65% coverage ] ****** [2130 done /1680 queued / 16 running / 165 errors / 65% coverage ] ****** [2131 done /1679 queued / 16 running / 165 errors / 65% coverage ] ****** [2131 done /1679 queued / 16 running / 165 errors / 65% coverage ] ****** [2132 done /1682 queued / 16 running / 165 errors / 65% coverage ] ****** [2132 done /1682 queued / 16 running / 165 errors / 65% coverage ] ****** [2133 done /1682 queued / 16 running / 165 errors / 65% coverage ] ****** [2133 done /1682 queued / 16 running / 165 errors / 65% coverage ] ****** [2134 done /1681 queued / 16 running / 165 errors / 65% coverage ] ****** [2134 done /1681 queued / 16 running / 165 errors / 65% coverage ] ****** [2135 done /1681 queued / 16 running / 165 errors / 65% coverage ] ****** [2135 done /1681 queued / 16 running / 165 errors / 65% coverage ] ****** [2136 done /1680 queued / 16 running / 165 errors / 65% coverage ] ****** [2136 done /1680 queued / 16 running / 165 errors / 65% coverage ] ****** [2137 done /1680 queued / 16 running / 165 errors / 65% coverage ] ****** [2137 done /1680 queued / 16 running / 165 errors / 65% coverage ] ****** [2138 done /1679 queued / 16 running / 165 errors / 65% coverage ] ****** [2138 done /1679 queued / 16 running / 165 errors / 65% coverage ] ****** [2139 done /1678 queued / 16 running / 165 errors / 65% coverage ] ****** [2139 done /1678 queued / 16 running / 165 errors / 65% coverage ] ****** [2140 done /1681 queued / 16 running / 165 errors / 65% coverage ] ****** [2140 done /1681 queued / 16 running / 165 errors / 65% coverage ] ****** [2141 done /1681 queued / 16 running / 165 errors / 65% coverage ] ****** [2141 done /1681 queued / 16 running / 165 errors / 65% coverage ] ****** [2142 done /1683 queued / 16 running / 165 errors / 65% coverage ] ****** [2142 done /1683 queued / 16 running / 165 errors / 65% coverage ] ****** [2143 done /1684 queued / 16 running / 165 errors / 65% coverage ] ****** [2143 done /1684 queued / 16 running / 165 errors / 65% coverage ] ****** [2144 done /1685 queued / 16 running / 165 errors / 65% coverage ] ****** [2144 done /1685 queued / 16 running / 165 errors / 65% coverage ] ****** [2145 done /1686 queued / 16 running / 165 errors / 65% coverage ] ****** [2145 done /1686 queued / 16 running / 165 errors / 65% coverage ] ****** [2146 done /1685 queued / 16 running / 165 errors / 65% coverage ] ****** [2146 done /1685 queued / 16 running / 165 errors / 65% coverage ] ****** [2147 done /1684 queued / 16 running / 165 errors / 65% coverage ] ****** [2147 done /1684 queued / 16 running / 165 errors / 65% coverage ] ****** [2148 done /1683 queued / 16 running / 165 errors / 65% coverage ] ****** [2148 done /1683 queued / 16 running / 165 errors / 65% coverage ] ****** [2149 done /1684 queued / 16 running / 165 errors / 65% coverage ] ****** [2149 done /1684 queued / 16 running / 165 errors / 65% coverage ] ****** [2150 done /1685 queued / 16 running / 165 errors / 65% coverage ] ****** [2150 done /1685 queued / 16 running / 165 errors / 65% coverage ] ****** [2151 done /1687 queued / 16 running / 165 errors / 65% coverage ] ****** [2151 done /1687 queued / 16 running / 165 errors / 65% coverage ] ****** [2152 done /1687 queued / 16 running / 165 errors / 65% coverage ] ****** [2152 done /1687 queued / 16 running / 165 errors / 65% coverage ] ****** [2153 done /1688 queued / 16 running / 165 errors / 65% coverage ] ****** [2153 done /1688 queued / 16 running / 165 errors / 65% coverage ] ****** [2154 done /1688 queued / 16 running / 165 errors / 65% coverage ] ****** [2154 done /1688 queued / 16 running / 165 errors / 65% coverage ] ****** [2155 done /1688 queued / 16 running / 165 errors / 65% coverage ] ****** [2155 done /1688 queued / 16 running / 165 errors / 65% coverage ] ****** [2156 done /1690 queued / 16 running / 165 errors / 65% coverage ] ****** [2156 done /1690 queued / 16 running / 165 errors / 65% coverage ] ****** [2157 done /1691 queued / 16 running / 165 errors / 65% coverage ] ****** [2157 done /1691 queued / 16 running / 165 errors / 65% coverage ] ****** [2158 done /1691 queued / 16 running / 165 errors / 65% coverage ] ****** [2158 done /1691 queued / 16 running / 165 errors / 65% coverage ] ****** [2159 done /1694 queued / 16 running / 165 errors / 65% coverage ] ****** [2159 done /1694 queued / 16 running / 165 errors / 65% coverage ] ****** [2160 done /1695 queued / 16 running / 165 errors / 65% coverage ] ****** [2160 done /1695 queued / 16 running / 165 errors / 65% coverage ] ****** [2161 done /1697 queued / 16 running / 165 errors / 65% coverage ] ****** [2161 done /1697 queued / 16 running / 165 errors / 65% coverage ] ****** [2162 done /1698 queued / 16 running / 165 errors / 65% coverage ] ****** [2162 done /1698 queued / 16 running / 165 errors / 65% coverage ] ****** [2163 done /1699 queued / 16 running / 165 errors / 65% coverage ] ****** [2163 done /1699 queued / 16 running / 165 errors / 65% coverage ] ****** [2164 done /1703 queued / 16 running / 165 errors / 65% coverage ] ****** [2164 done /1703 queued / 16 running / 165 errors / 65% coverage ] ****** [2165 done /1706 queued / 16 running / 165 errors / 65% coverage ] ****** [2165 done /1706 queued / 16 running / 165 errors / 65% coverage ] ****** [2166 done /1707 queued / 16 running / 165 errors / 65% coverage ] ****** [2166 done /1707 queued / 16 running / 165 errors / 65% coverage ] ****** [2167 done /1708 queued / 16 running / 165 errors / 65% coverage ] ****** [2167 done /1708 queued / 16 running / 165 errors / 65% coverage ] ****** [2168 done /1707 queued / 16 running / 165 errors / 65% coverage ] ****** [2168 done /1707 queued / 16 running / 165 errors / 65% coverage ] ****** [2169 done /1710 queued / 16 running / 165 errors / 65% coverage ] ****** [2169 done /1710 queued / 16 running / 165 errors / 65% coverage ] ****** [2170 done /1710 queued / 16 running / 165 errors / 65% coverage ] ****** [2170 done /1710 queued / 16 running / 165 errors / 65% coverage ] ****** [2171 done /1711 queued / 16 running / 165 errors / 65% coverage ] ****** [2171 done /1711 queued / 16 running / 165 errors / 65% coverage ] ****** [2172 done /1712 queued / 16 running / 165 errors / 65% coverage ] ****** [2172 done /1712 queued / 16 running / 165 errors / 65% coverage ] ****** [2173 done /1715 queued / 16 running / 165 errors / 65% coverage ] ****** [2173 done /1715 queued / 16 running / 165 errors / 65% coverage ] ****** [2174 done /1718 queued / 16 running / 165 errors / 65% coverage ] ****** [2174 done /1718 queued / 16 running / 165 errors / 65% coverage ] ****** [2175 done /1717 queued / 16 running / 165 errors / 65% coverage ] ****** [2175 done /1717 queued / 16 running / 165 errors / 65% coverage ] ****** [2176 done /1716 queued / 16 running / 165 errors / 65% coverage ] ****** [2176 done /1716 queued / 16 running / 165 errors / 65% coverage ] ****** [2177 done /1716 queued / 16 running / 165 errors / 65% coverage ] ****** [2177 done /1716 queued / 16 running / 165 errors / 65% coverage ] ****** [2178 done /1715 queued / 16 running / 165 errors / 65% coverage ] ****** [2178 done /1715 queued / 16 running / 165 errors / 65% coverage ] ****** [2179 done /1717 queued / 16 running / 165 errors / 65% coverage ] ****** [2179 done /1717 queued / 16 running / 165 errors / 65% coverage ] ****** [2180 done /1716 queued / 16 running / 165 errors / 65% coverage ] ****** [2180 done /1716 queued / 16 running / 165 errors / 65% coverage ] ****** [2181 done /1717 queued / 16 running / 165 errors / 65% coverage ] ****** [2181 done /1717 queued / 16 running / 165 errors / 65% coverage ] ****** [2182 done /1716 queued / 16 running / 165 errors / 65% coverage ] ****** [2182 done /1716 queued / 16 running / 165 errors / 65% coverage ] ****** [2183 done /1715 queued / 16 running / 165 errors / 65% coverage ] ****** [2183 done /1715 queued / 16 running / 165 errors / 65% coverage ] ****** [2184 done /1714 queued / 16 running / 165 errors / 65% coverage ] ****** [2184 done /1714 queued / 16 running / 165 errors / 65% coverage ] ****** [2185 done /1714 queued / 16 running / 165 errors / 65% coverage ] ****** [2185 done /1714 queued / 16 running / 165 errors / 65% coverage ] ****** [2186 done /1713 queued / 16 running / 165 errors / 65% coverage ] ****** [2186 done /1713 queued / 16 running / 165 errors / 65% coverage ] ****** [2187 done /1712 queued / 16 running / 165 errors / 65% coverage ] ****** [2187 done /1712 queued / 16 running / 165 errors / 65% coverage ] ****** [2188 done /1712 queued / 16 running / 165 errors / 65% coverage ] ****** [2188 done /1712 queued / 16 running / 165 errors / 65% coverage ] ****** [2189 done /1711 queued / 16 running / 165 errors / 65% coverage ] ****** [2189 done /1711 queued / 16 running / 165 errors / 65% coverage ] ****** [2190 done /1711 queued / 16 running / 165 errors / 65% coverage ] ****** [2190 done /1711 queued / 16 running / 165 errors / 65% coverage ] ****** [2191 done /1711 queued / 16 running / 165 errors / 65% coverage ] ****** [2191 done /1711 queued / 16 running / 165 errors / 65% coverage ] ****** [2192 done /1711 queued / 16 running / 165 errors / 65% coverage ] ****** [2192 done /1711 queued / 16 running / 165 errors / 65% coverage ] ****** [2193 done /1710 queued / 16 running / 165 errors / 65% coverage ] ****** [2193 done /1710 queued / 16 running / 165 errors / 65% coverage ] ****** [2194 done /1710 queued / 16 running / 165 errors / 65% coverage ] ****** [2194 done /1710 queued / 16 running / 165 errors / 65% coverage ] ****** [2195 done /1711 queued / 16 running / 165 errors / 65% coverage ] ****** [2195 done /1711 queued / 16 running / 165 errors / 65% coverage ] ****** [2196 done /1710 queued / 16 running / 165 errors / 65% coverage ] ****** [2196 done /1710 queued / 16 running / 165 errors / 65% coverage ] ****** [2197 done /1711 queued / 16 running / 165 errors / 65% coverage ] ****** [2197 done /1711 queued / 16 running / 165 errors / 65% coverage ] ****** [2198 done /1714 queued / 16 running / 165 errors / 65% coverage ] ****** [2198 done /1714 queued / 16 running / 165 errors / 65% coverage ] ****** [2199 done /1718 queued / 16 running / 165 errors / 65% coverage ] ****** [2199 done /1718 queued / 16 running / 165 errors / 65% coverage ] ****** [2200 done /1719 queued / 16 running / 165 errors / 65% coverage ] ****** [2200 done /1719 queued / 16 running / 165 errors / 65% coverage ] ****** [2201 done /1719 queued / 16 running / 165 errors / 65% coverage ] ****** [2201 done /1719 queued / 16 running / 165 errors / 65% coverage ] ****** [2202 done /1721 queued / 16 running / 165 errors / 65% coverage ] ****** [2202 done /1721 queued / 16 running / 165 errors / 65% coverage ] ****** [2203 done /1725 queued / 16 running / 165 errors / 65% coverage ] ****** [2203 done /1725 queued / 16 running / 165 errors / 65% coverage ] ****** [2204 done /1726 queued / 16 running / 165 errors / 65% coverage ] ****** [2204 done /1726 queued / 16 running / 165 errors / 65% coverage ] ****** [2205 done /1728 queued / 16 running / 165 errors / 65% coverage ] ****** [2205 done /1728 queued / 16 running / 165 errors / 65% coverage ] ****** [2206 done /1730 queued / 16 running / 165 errors / 65% coverage ] ****** [2206 done /1730 queued / 16 running / 165 errors / 65% coverage ] ****** [2207 done /1734 queued / 16 running / 165 errors / 65% coverage ] ****** [2207 done /1734 queued / 16 running / 165 errors / 65% coverage ] ****** [2208 done /1737 queued / 16 running / 165 errors / 65% coverage ] ****** [2208 done /1737 queued / 16 running / 165 errors / 65% coverage ] ****** [2209 done /1739 queued / 16 running / 165 errors / 65% coverage ] ****** [2209 done /1739 queued / 16 running / 165 errors / 65% coverage ] ****** [2210 done /1740 queued / 16 running / 165 errors / 65% coverage ] ****** [2210 done /1740 queued / 16 running / 165 errors / 65% coverage ] ****** [2211 done /1741 queued / 16 running / 165 errors / 65% coverage ] ****** [2211 done /1741 queued / 16 running / 165 errors / 65% coverage ] ****** [2212 done /1742 queued / 16 running / 165 errors / 65% coverage ] ****** [2212 done /1742 queued / 16 running / 165 errors / 65% coverage ] ****** [2213 done /1743 queued / 16 running / 165 errors / 65% coverage ] ****** [2213 done /1743 queued / 16 running / 165 errors / 65% coverage ] ****** [2214 done /1743 queued / 16 running / 165 errors / 65% coverage ] ****** [2214 done /1743 queued / 16 running / 165 errors / 65% coverage ] ****** [2215 done /1748 queued / 16 running / 165 errors / 65% coverage ] ****** [2215 done /1748 queued / 16 running / 165 errors / 65% coverage ] ****** [2216 done /1750 queued / 16 running / 165 errors / 65% coverage ] ****** [2216 done /1750 queued / 16 running / 165 errors / 65% coverage ] ****** [2217 done /1750 queued / 16 running / 165 errors / 65% coverage ] ****** [2217 done /1750 queued / 16 running / 165 errors / 65% coverage ] ****** [2218 done /1750 queued / 16 running / 165 errors / 65% coverage ] ****** [2218 done /1750 queued / 16 running / 165 errors / 65% coverage ] ****** [2219 done /1750 queued / 16 running / 165 errors / 65% coverage ] ****** [2219 done /1750 queued / 16 running / 165 errors / 65% coverage ] ****** [2220 done /1750 queued / 16 running / 165 errors / 65% coverage ] ****** [2220 done /1750 queued / 16 running / 165 errors / 65% coverage ] ****** [2221 done /1750 queued / 16 running / 165 errors / 65% coverage ] ****** [2221 done /1750 queued / 16 running / 165 errors / 65% coverage ] ****** [2222 done /1751 queued / 16 running / 165 errors / 65% coverage ] ****** [2222 done /1751 queued / 16 running / 165 errors / 65% coverage ] ****** [2223 done /1752 queued / 16 running / 165 errors / 65% coverage ] ****** [2223 done /1752 queued / 16 running / 165 errors / 65% coverage ] ****** [2224 done /1752 queued / 16 running / 165 errors / 65% coverage ] ****** [2224 done /1752 queued / 16 running / 165 errors / 65% coverage ] ****** [2225 done /1752 queued / 16 running / 165 errors / 65% coverage ] ****** [2225 done /1752 queued / 16 running / 165 errors / 65% coverage ] ****** [2226 done /1752 queued / 16 running / 165 errors / 65% coverage ] ****** [2226 done /1752 queued / 16 running / 165 errors / 65% coverage ] ****** [2227 done /1753 queued / 16 running / 165 errors / 65% coverage ] ****** [2227 done /1753 queued / 16 running / 165 errors / 65% coverage ] ****** [2228 done /1752 queued / 16 running / 165 errors / 65% coverage ] ****** [2228 done /1752 queued / 16 running / 165 errors / 65% coverage ] ****** [2229 done /1753 queued / 16 running / 165 errors / 65% coverage ] ****** [2229 done /1753 queued / 16 running / 165 errors / 65% coverage ] ****** [2230 done /1752 queued / 16 running / 165 errors / 65% coverage ] ****** [2230 done /1752 queued / 16 running / 165 errors / 65% coverage ] ****** [2231 done /1754 queued / 16 running / 165 errors / 65% coverage ] ****** [2231 done /1754 queued / 16 running / 165 errors / 65% coverage ] ****** [2232 done /1753 queued / 16 running / 165 errors / 65% coverage ] ****** [2232 done /1753 queued / 16 running / 165 errors / 65% coverage ] ****** [2233 done /1752 queued / 16 running / 165 errors / 65% coverage ] ****** [2233 done /1752 queued / 16 running / 165 errors / 65% coverage ] ****** [2234 done /1752 queued / 16 running / 165 errors / 65% coverage ] ****** [2234 done /1752 queued / 16 running / 165 errors / 65% coverage ] ****** [2235 done /1752 queued / 16 running / 165 errors / 65% coverage ] ****** [2235 done /1752 queued / 16 running / 165 errors / 65% coverage ] ****** [2236 done /1751 queued / 16 running / 165 errors / 65% coverage ] ****** [2236 done /1751 queued / 16 running / 165 errors / 65% coverage ] ****** [2237 done /1751 queued / 16 running / 165 errors / 65% coverage ] ****** [2237 done /1751 queued / 16 running / 165 errors / 65% coverage ] ****** [2238 done /1751 queued / 16 running / 165 errors / 65% coverage ] ****** [2238 done /1751 queued / 16 running / 165 errors / 65% coverage ] ****** [2239 done /1750 queued / 16 running / 165 errors / 65% coverage ] ****** [2239 done /1750 queued / 16 running / 165 errors / 65% coverage ] ****** [2240 done /1750 queued / 16 running / 165 errors / 65% coverage ] ****** [2240 done /1750 queued / 16 running / 165 errors / 65% coverage ] ****** [2241 done /1749 queued / 16 running / 165 errors / 65% coverage ] ****** [2241 done /1749 queued / 16 running / 165 errors / 65% coverage ] ****** [2242 done /1750 queued / 16 running / 165 errors / 65% coverage ] ****** [2242 done /1750 queued / 16 running / 165 errors / 65% coverage ] ****** [2243 done /1750 queued / 16 running / 165 errors / 65% coverage ] ****** [2243 done /1750 queued / 16 running / 165 errors / 65% coverage ] ****** [2244 done /1752 queued / 16 running / 165 errors / 65% coverage ] ****** [2244 done /1752 queued / 16 running / 165 errors / 65% coverage ] ****** [2245 done /1752 queued / 16 running / 165 errors / 65% coverage ] ****** [2245 done /1752 queued / 16 running / 165 errors / 65% coverage ] ****** [2246 done /1754 queued / 16 running / 165 errors / 65% coverage ] ****** [2246 done /1754 queued / 16 running / 165 errors / 65% coverage ] ****** [2247 done /1755 queued / 16 running / 165 errors / 65% coverage ] ****** [2247 done /1755 queued / 16 running / 165 errors / 65% coverage ] ****** [2248 done /1756 queued / 16 running / 165 errors / 65% coverage ] ****** [2248 done /1756 queued / 16 running / 165 errors / 65% coverage ] ****** [2249 done /1758 queued / 16 running / 165 errors / 65% coverage ] ****** [2249 done /1758 queued / 16 running / 165 errors / 65% coverage ] ****** [2250 done /1759 queued / 16 running / 165 errors / 65% coverage ] ****** [2250 done /1759 queued / 16 running / 165 errors / 65% coverage ] ****** [2251 done /1763 queued / 16 running / 165 errors / 65% coverage ] ****** [2251 done /1763 queued / 16 running / 165 errors / 65% coverage ] ****** [2252 done /1764 queued / 16 running / 165 errors / 65% coverage ] ****** [2252 done /1764 queued / 16 running / 165 errors / 65% coverage ] ****** [2253 done /1765 queued / 16 running / 165 errors / 65% coverage ] ****** [2253 done /1765 queued / 16 running / 165 errors / 65% coverage ] ****** [2254 done /1765 queued / 16 running / 165 errors / 65% coverage ] ****** [2254 done /1765 queued / 16 running / 165 errors / 65% coverage ] ****** [2255 done /1766 queued / 16 running / 165 errors / 65% coverage ] ****** [2255 done /1766 queued / 16 running / 165 errors / 65% coverage ] ****** [2256 done /1768 queued / 16 running / 165 errors / 65% coverage ] ****** [2256 done /1768 queued / 16 running / 165 errors / 65% coverage ] ****** [2257 done /1770 queued / 16 running / 165 errors / 65% coverage ] ****** [2257 done /1770 queued / 16 running / 165 errors / 65% coverage ] ****** [2258 done /1771 queued / 16 running / 165 errors / 65% coverage ] ****** [2258 done /1771 queued / 16 running / 165 errors / 65% coverage ] ****** [2259 done /1772 queued / 16 running / 165 errors / 65% coverage ] ****** [2259 done /1772 queued / 16 running / 165 errors / 65% coverage ] ****** [2260 done /1773 queued / 16 running / 165 errors / 65% coverage ] ****** [2260 done /1773 queued / 16 running / 165 errors / 65% coverage ] ****** [2261 done /1773 queued / 16 running / 165 errors / 65% coverage ] ****** [2261 done /1773 queued / 16 running / 165 errors / 65% coverage ] ****** [2262 done /1773 queued / 16 running / 165 errors / 65% coverage ] ****** [2262 done /1773 queued / 16 running / 165 errors / 65% coverage ] ****** [2263 done /1772 queued / 16 running / 165 errors / 65% coverage ] ****** [2263 done /1772 queued / 16 running / 165 errors / 65% coverage ] ****** [2264 done /1771 queued / 16 running / 165 errors / 65% coverage ] ****** [2264 done /1771 queued / 16 running / 165 errors / 65% coverage ] ****** [2265 done /1770 queued / 16 running / 165 errors / 65% coverage ] ****** [2265 done /1770 queued / 16 running / 165 errors / 65% coverage ] ****** [2266 done /1772 queued / 16 running / 165 errors / 65% coverage ] ****** [2266 done /1772 queued / 16 running / 165 errors / 65% coverage ] ****** [2267 done /1773 queued / 16 running / 165 errors / 65% coverage ] ****** [2267 done /1773 queued / 16 running / 165 errors / 65% coverage ] ****** [2268 done /1773 queued / 16 running / 165 errors / 65% coverage ] ****** [2268 done /1773 queued / 16 running / 165 errors / 65% coverage ] ****** [2269 done /1774 queued / 16 running / 165 errors / 65% coverage ] ****** [2269 done /1774 queued / 16 running / 165 errors / 65% coverage ] ****** [2270 done /1773 queued / 16 running / 165 errors / 65% coverage ] ****** [2270 done /1773 queued / 16 running / 165 errors / 65% coverage ] ****** [2271 done /1778 queued / 16 running / 165 errors / 65% coverage ] ****** [2271 done /1778 queued / 16 running / 165 errors / 65% coverage ] ****** [2272 done /1779 queued / 16 running / 165 errors / 65% coverage ] ****** [2272 done /1779 queued / 16 running / 165 errors / 65% coverage ] ****** [2273 done /1780 queued / 16 running / 165 errors / 65% coverage ] ****** [2273 done /1780 queued / 16 running / 165 errors / 65% coverage ] ****** [2274 done /1783 queued / 16 running / 165 errors / 65% coverage ] ****** [2274 done /1783 queued / 16 running / 165 errors / 65% coverage ] ****** [2275 done /1784 queued / 16 running / 165 errors / 65% coverage ] ****** [2275 done /1784 queued / 16 running / 165 errors / 65% coverage ] ****** [2276 done /1788 queued / 16 running / 165 errors / 65% coverage ] ****** [2276 done /1788 queued / 16 running / 165 errors / 65% coverage ] ****** [2277 done /1788 queued / 16 running / 165 errors / 65% coverage ] ****** [2277 done /1788 queued / 16 running / 165 errors / 65% coverage ] ****** [2278 done /1791 queued / 16 running / 165 errors / 65% coverage ] ****** [2278 done /1791 queued / 16 running / 165 errors / 65% coverage ] ****** [2279 done /1793 queued / 16 running / 165 errors / 65% coverage ] ****** [2279 done /1793 queued / 16 running / 165 errors / 65% coverage ] ****** [2280 done /1796 queued / 16 running / 165 errors / 65% coverage ] ****** [2280 done /1796 queued / 16 running / 165 errors / 65% coverage ] ****** [2281 done /1800 queued / 16 running / 165 errors / 65% coverage ] ****** [2281 done /1800 queued / 16 running / 165 errors / 65% coverage ] ****** [2282 done /1802 queued / 16 running / 165 errors / 65% coverage ] ****** [2282 done /1802 queued / 16 running / 165 errors / 65% coverage ] ****** [2283 done /1802 queued / 16 running / 165 errors / 65% coverage ] ****** [2283 done /1802 queued / 16 running / 165 errors / 65% coverage ] ****** [2284 done /1803 queued / 16 running / 165 errors / 65% coverage ] ****** [2284 done /1803 queued / 16 running / 165 errors / 65% coverage ] ****** [2285 done /1806 queued / 16 running / 165 errors / 65% coverage ] ****** [2285 done /1806 queued / 16 running / 165 errors / 65% coverage ] ****** [2286 done /1809 queued / 16 running / 165 errors / 65% coverage ] ****** [2286 done /1809 queued / 16 running / 165 errors / 65% coverage ] ****** [2287 done /1810 queued / 16 running / 165 errors / 65% coverage ] ****** [2287 done /1810 queued / 16 running / 165 errors / 65% coverage ] ****** [2288 done /1812 queued / 16 running / 165 errors / 65% coverage ] ****** [2288 done /1812 queued / 16 running / 165 errors / 65% coverage ] ****** [2289 done /1813 queued / 16 running / 165 errors / 65% coverage ] ****** [2289 done /1813 queued / 16 running / 165 errors / 65% coverage ] ****** [2290 done /1812 queued / 16 running / 165 errors / 65% coverage ] ****** [2290 done /1812 queued / 16 running / 165 errors / 65% coverage ] ****** [2291 done /1813 queued / 16 running / 165 errors / 65% coverage ] ****** [2291 done /1813 queued / 16 running / 165 errors / 65% coverage ] ****** [2292 done /1814 queued / 16 running / 165 errors / 65% coverage ] ****** [2292 done /1814 queued / 16 running / 165 errors / 65% coverage ] ****** [2293 done /1814 queued / 16 running / 165 errors / 65% coverage ] ****** [2293 done /1814 queued / 16 running / 165 errors / 65% coverage ] ****** [2294 done /1813 queued / 16 running / 165 errors / 65% coverage ] ****** [2294 done /1813 queued / 16 running / 165 errors / 65% coverage ] ****** [2295 done /1812 queued / 16 running / 165 errors / 65% coverage ] ****** [2295 done /1812 queued / 16 running / 165 errors / 65% coverage ] ****** [2296 done /1811 queued / 16 running / 165 errors / 65% coverage ] ****** [2296 done /1811 queued / 16 running / 165 errors / 65% coverage ] ****** [2297 done /1811 queued / 16 running / 165 errors / 65% coverage ] ****** [2297 done /1811 queued / 16 running / 165 errors / 65% coverage ] ****** [2298 done /1813 queued / 16 running / 165 errors / 65% coverage ] ****** [2298 done /1813 queued / 16 running / 165 errors / 65% coverage ] ****** [2299 done /1812 queued / 16 running / 165 errors / 65% coverage ] ****** [2299 done /1812 queued / 16 running / 165 errors / 65% coverage ] ****** [2300 done /1812 queued / 16 running / 165 errors / 65% coverage ] ****** [2300 done /1812 queued / 16 running / 165 errors / 65% coverage ] ****** [2301 done /1811 queued / 16 running / 165 errors / 65% coverage ] ****** [2301 done /1811 queued / 16 running / 165 errors / 65% coverage ] ****** [2302 done /1811 queued / 16 running / 165 errors / 65% coverage ] ****** [2302 done /1811 queued / 16 running / 165 errors / 65% coverage ] ****** [2303 done /1810 queued / 16 running / 165 errors / 65% coverage ] ****** [2303 done /1810 queued / 16 running / 165 errors / 65% coverage ] ****** [2304 done /1810 queued / 16 running / 165 errors / 65% coverage ] ****** [2304 done /1810 queued / 16 running / 165 errors / 65% coverage ] ****** [2305 done /1809 queued / 16 running / 165 errors / 65% coverage ] ****** [2305 done /1809 queued / 16 running / 165 errors / 65% coverage ] ****** [2306 done /1808 queued / 16 running / 165 errors / 65% coverage ] ****** [2306 done /1808 queued / 16 running / 165 errors / 65% coverage ] ****** [2307 done /1808 queued / 16 running / 165 errors / 65% coverage ] ****** [2307 done /1808 queued / 16 running / 165 errors / 65% coverage ] ****** [2308 done /1808 queued / 16 running / 165 errors / 65% coverage ] ****** [2308 done /1808 queued / 16 running / 165 errors / 65% coverage ] ****** [2309 done /1808 queued / 16 running / 165 errors / 65% coverage ] ****** [2309 done /1808 queued / 16 running / 165 errors / 65% coverage ] ****** [2310 done /1807 queued / 16 running / 165 errors / 65% coverage ] ****** [2310 done /1807 queued / 16 running / 165 errors / 65% coverage ] ****** [2311 done /1807 queued / 16 running / 165 errors / 65% coverage ] ****** [2311 done /1807 queued / 16 running / 165 errors / 65% coverage ] ****** [2312 done /1808 queued / 16 running / 165 errors / 65% coverage ] ****** [2312 done /1808 queued / 16 running / 165 errors / 65% coverage ] ****** [2313 done /1808 queued / 16 running / 165 errors / 65% coverage ] ****** [2313 done /1808 queued / 16 running / 165 errors / 65% coverage ] ****** [2314 done /1808 queued / 16 running / 165 errors / 65% coverage ] ****** [2314 done /1808 queued / 16 running / 165 errors / 65% coverage ] ****** [2315 done /1807 queued / 16 running / 165 errors / 65% coverage ] ****** [2315 done /1807 queued / 16 running / 165 errors / 65% coverage ] ****** [2316 done /1810 queued / 16 running / 165 errors / 65% coverage ] ****** [2316 done /1810 queued / 16 running / 165 errors / 65% coverage ] ****** [2317 done /1810 queued / 16 running / 165 errors / 65% coverage ] ****** [2317 done /1810 queued / 16 running / 165 errors / 65% coverage ] ****** [2318 done /1809 queued / 16 running / 165 errors / 65% coverage ] ****** [2318 done /1809 queued / 16 running / 165 errors / 65% coverage ] ****** [2319 done /1810 queued / 16 running / 165 errors / 65% coverage ] ****** [2319 done /1810 queued / 16 running / 165 errors / 65% coverage ] ****** [2320 done /1811 queued / 16 running / 165 errors / 65% coverage ] ****** [2320 done /1811 queued / 16 running / 165 errors / 65% coverage ] ****** [2321 done /1814 queued / 16 running / 165 errors / 65% coverage ] ****** [2321 done /1814 queued / 16 running / 165 errors / 65% coverage ] ****** [2322 done /1817 queued / 16 running / 165 errors / 65% coverage ] ****** [2322 done /1817 queued / 16 running / 165 errors / 65% coverage ] ****** [2323 done /1816 queued / 16 running / 165 errors / 65% coverage ] ****** [2323 done /1816 queued / 16 running / 165 errors / 65% coverage ] ****** [2324 done /1815 queued / 16 running / 165 errors / 65% coverage ] ****** [2324 done /1815 queued / 16 running / 165 errors / 65% coverage ] ****** [2325 done /1814 queued / 16 running / 165 errors / 65% coverage ] ****** [2325 done /1814 queued / 16 running / 165 errors / 65% coverage ] ****** [2326 done /1816 queued / 16 running / 165 errors / 65% coverage ] ****** [2326 done /1816 queued / 16 running / 165 errors / 65% coverage ] ****** [2327 done /1817 queued / 16 running / 165 errors / 65% coverage ] ****** [2327 done /1817 queued / 16 running / 165 errors / 65% coverage ] ****** [2328 done /1818 queued / 16 running / 165 errors / 65% coverage ] ****** [2328 done /1818 queued / 16 running / 165 errors / 65% coverage ] ****** [2329 done /1819 queued / 16 running / 165 errors / 65% coverage ] ****** [2329 done /1819 queued / 16 running / 165 errors / 65% coverage ] ****** [2330 done /1820 queued / 16 running / 165 errors / 65% coverage ] ****** [2330 done /1820 queued / 16 running / 165 errors / 65% coverage ] ****** [2331 done /1820 queued / 16 running / 165 errors / 65% coverage ] ****** [2331 done /1820 queued / 16 running / 165 errors / 65% coverage ] ****** [2332 done /1819 queued / 16 running / 165 errors / 65% coverage ] ****** [2332 done /1819 queued / 16 running / 165 errors / 65% coverage ] ****** [2333 done /1819 queued / 16 running / 165 errors / 65% coverage ] ****** [2333 done /1819 queued / 16 running / 165 errors / 65% coverage ] ****** [2334 done /1822 queued / 16 running / 165 errors / 65% coverage ] ****** [2334 done /1822 queued / 16 running / 165 errors / 65% coverage ] ****** [2335 done /1821 queued / 16 running / 165 errors / 65% coverage ] ****** [2335 done /1821 queued / 16 running / 165 errors / 65% coverage ] ****** [2336 done /1820 queued / 16 running / 165 errors / 65% coverage ] ****** [2336 done /1820 queued / 16 running / 165 errors / 65% coverage ] ****** [2337 done /1819 queued / 16 running / 165 errors / 65% coverage ] ****** [2337 done /1819 queued / 16 running / 165 errors / 65% coverage ] ****** [2338 done /1818 queued / 16 running / 165 errors / 65% coverage ] ****** [2338 done /1818 queued / 16 running / 165 errors / 65% coverage ] ****** [2339 done /1817 queued / 16 running / 165 errors / 65% coverage ] ****** [2339 done /1817 queued / 16 running / 165 errors / 65% coverage ] ****** [2340 done /1816 queued / 16 running / 165 errors / 65% coverage ] ****** [2340 done /1816 queued / 16 running / 165 errors / 65% coverage ] ****** [2341 done /1816 queued / 16 running / 165 errors / 65% coverage ] ****** [2341 done /1816 queued / 16 running / 165 errors / 65% coverage ] ****** [2342 done /1815 queued / 16 running / 165 errors / 65% coverage ] ****** [2342 done /1815 queued / 16 running / 165 errors / 65% coverage ] ****** [2343 done /1817 queued / 16 running / 165 errors / 65% coverage ] ****** [2343 done /1817 queued / 16 running / 165 errors / 65% coverage ] ****** [2344 done /1816 queued / 16 running / 165 errors / 65% coverage ] ****** [2344 done /1816 queued / 16 running / 165 errors / 65% coverage ] ****** [2345 done /1819 queued / 16 running / 165 errors / 65% coverage ] ****** [2345 done /1819 queued / 16 running / 165 errors / 65% coverage ] ****** [2346 done /1822 queued / 16 running / 165 errors / 65% coverage ] ****** [2346 done /1822 queued / 16 running / 165 errors / 65% coverage ] ****** [2347 done /1824 queued / 16 running / 165 errors / 65% coverage ] ****** [2347 done /1824 queued / 16 running / 165 errors / 65% coverage ] ****** [2348 done /1824 queued / 16 running / 165 errors / 65% coverage ] ****** [2348 done /1824 queued / 16 running / 165 errors / 65% coverage ] ****** [2349 done /1824 queued / 16 running / 165 errors / 65% coverage ] ****** [2349 done /1824 queued / 16 running / 165 errors / 65% coverage ] ****** [2350 done /1823 queued / 16 running / 165 errors / 65% coverage ] ****** [2350 done /1823 queued / 16 running / 165 errors / 65% coverage ] ****** [2351 done /1822 queued / 16 running / 165 errors / 65% coverage ] ****** [2351 done /1822 queued / 16 running / 165 errors / 65% coverage ] ****** [2352 done /1821 queued / 16 running / 165 errors / 65% coverage ] ****** [2352 done /1821 queued / 16 running / 165 errors / 65% coverage ] ****** [2353 done /1825 queued / 16 running / 165 errors / 65% coverage ] ****** [2353 done /1825 queued / 16 running / 165 errors / 65% coverage ] ****** [2354 done /1826 queued / 16 running / 165 errors / 65% coverage ] ****** [2354 done /1826 queued / 16 running / 165 errors / 65% coverage ] ****** [2355 done /1828 queued / 16 running / 165 errors / 65% coverage ] ****** [2355 done /1828 queued / 16 running / 165 errors / 65% coverage ] ****** [2356 done /1829 queued / 16 running / 165 errors / 65% coverage ] ****** [2356 done /1829 queued / 16 running / 165 errors / 65% coverage ] ****** [2357 done /1832 queued / 16 running / 165 errors / 65% coverage ] ****** [2357 done /1832 queued / 16 running / 165 errors / 65% coverage ] ****** [2358 done /1833 queued / 16 running / 165 errors / 65% coverage ] ****** [2358 done /1833 queued / 16 running / 165 errors / 65% coverage ] ****** [2359 done /1836 queued / 16 running / 165 errors / 65% coverage ] ****** [2359 done /1836 queued / 16 running / 165 errors / 65% coverage ] ****** [2360 done /1839 queued / 16 running / 165 errors / 65% coverage ] ****** [2360 done /1839 queued / 16 running / 165 errors / 65% coverage ] ****** [2361 done /1838 queued / 16 running / 165 errors / 65% coverage ] ****** [2361 done /1838 queued / 16 running / 165 errors / 65% coverage ] ****** [2362 done /1837 queued / 16 running / 165 errors / 65% coverage ] ****** [2362 done /1837 queued / 16 running / 165 errors / 65% coverage ] ****** [2363 done /1837 queued / 16 running / 165 errors / 65% coverage ] ****** [2363 done /1837 queued / 16 running / 165 errors / 65% coverage ] ****** [2364 done /1839 queued / 16 running / 165 errors / 65% coverage ] ****** [2364 done /1839 queued / 16 running / 165 errors / 65% coverage ] ****** [2365 done /1838 queued / 16 running / 165 errors / 65% coverage ] ****** [2365 done /1838 queued / 16 running / 165 errors / 65% coverage ] ****** [2366 done /1841 queued / 16 running / 165 errors / 65% coverage ] ****** [2366 done /1841 queued / 16 running / 165 errors / 65% coverage ] ****** [2367 done /1843 queued / 16 running / 165 errors / 65% coverage ] ****** [2367 done /1843 queued / 16 running / 165 errors / 65% coverage ] ****** [2368 done /1843 queued / 16 running / 165 errors / 65% coverage ] ****** [2368 done /1843 queued / 16 running / 165 errors / 65% coverage ] ****** [2369 done /1843 queued / 16 running / 165 errors / 65% coverage ] ****** [2369 done /1843 queued / 16 running / 165 errors / 65% coverage ] ****** [2370 done /1845 queued / 16 running / 165 errors / 65% coverage ] ****** [2370 done /1845 queued / 16 running / 165 errors / 65% coverage ] ****** [2371 done /1845 queued / 16 running / 165 errors / 65% coverage ] ****** [2371 done /1845 queued / 16 running / 165 errors / 65% coverage ] ****** [2372 done /1844 queued / 16 running / 165 errors / 65% coverage ] ****** [2372 done /1844 queued / 16 running / 165 errors / 65% coverage ] ****** [2373 done /1844 queued / 16 running / 165 errors / 65% coverage ] ****** [2373 done /1844 queued / 16 running / 165 errors / 65% coverage ] ****** [2374 done /1845 queued / 16 running / 165 errors / 65% coverage ] ****** [2374 done /1845 queued / 16 running / 165 errors / 65% coverage ] ****** [2375 done /1848 queued / 16 running / 166 errors / 65% coverage ] ****** [2375 done /1848 queued / 16 running / 166 errors / 65% coverage ] ****** [2376 done /1847 queued / 16 running / 166 errors / 65% coverage ] ****** [2376 done /1847 queued / 16 running / 166 errors / 65% coverage ] ****** [2377 done /1846 queued / 16 running / 166 errors / 65% coverage ] ****** [2377 done /1846 queued / 16 running / 166 errors / 65% coverage ] ****** [2378 done /1846 queued / 16 running / 166 errors / 65% coverage ] ****** [2378 done /1846 queued / 16 running / 166 errors / 65% coverage ] ****** [2379 done /1846 queued / 16 running / 166 errors / 65% coverage ] ****** [2379 done /1846 queued / 16 running / 166 errors / 65% coverage ] ****** [2380 done /1845 queued / 16 running / 166 errors / 65% coverage ] ****** [2380 done /1845 queued / 16 running / 166 errors / 65% coverage ] ****** [2381 done /1844 queued / 16 running / 166 errors / 65% coverage ] ****** [2381 done /1844 queued / 16 running / 166 errors / 65% coverage ] ****** [2382 done /1843 queued / 16 running / 166 errors / 65% coverage ] ****** [2382 done /1843 queued / 16 running / 166 errors / 65% coverage ] ****** [2383 done /1842 queued / 16 running / 166 errors / 65% coverage ] ****** [2383 done /1842 queued / 16 running / 166 errors / 65% coverage ] ****** [2384 done /1842 queued / 16 running / 166 errors / 65% coverage ] ****** [2384 done /1842 queued / 16 running / 166 errors / 65% coverage ] ****** [2385 done /1841 queued / 16 running / 166 errors / 65% coverage ] ****** [2385 done /1841 queued / 16 running / 166 errors / 65% coverage ] ****** [2386 done /1842 queued / 16 running / 166 errors / 65% coverage ] ****** [2386 done /1842 queued / 16 running / 166 errors / 65% coverage ] ****** [2387 done /1841 queued / 16 running / 166 errors / 65% coverage ] ****** [2387 done /1841 queued / 16 running / 166 errors / 65% coverage ] ****** [2388 done /1841 queued / 16 running / 166 errors / 65% coverage ] ****** [2388 done /1841 queued / 16 running / 166 errors / 65% coverage ] ****** [2389 done /1840 queued / 16 running / 166 errors / 65% coverage ] ****** [2389 done /1840 queued / 16 running / 166 errors / 65% coverage ] ****** [2390 done /1839 queued / 16 running / 166 errors / 65% coverage ] ****** [2390 done /1839 queued / 16 running / 166 errors / 65% coverage ] ****** [2391 done /1839 queued / 16 running / 166 errors / 65% coverage ] ****** [2391 done /1839 queued / 16 running / 166 errors / 65% coverage ] ****** [2392 done /1841 queued / 16 running / 166 errors / 65% coverage ] ****** [2392 done /1841 queued / 16 running / 166 errors / 65% coverage ] ****** [2393 done /1843 queued / 16 running / 166 errors / 65% coverage ] ****** [2393 done /1843 queued / 16 running / 166 errors / 65% coverage ] ****** [2394 done /1846 queued / 16 running / 166 errors / 65% coverage ] ****** [2394 done /1846 queued / 16 running / 166 errors / 65% coverage ] ****** [2395 done /1850 queued / 16 running / 166 errors / 65% coverage ] ****** [2395 done /1850 queued / 16 running / 166 errors / 65% coverage ] ****** [2396 done /1851 queued / 16 running / 166 errors / 65% coverage ] ****** [2396 done /1851 queued / 16 running / 166 errors / 65% coverage ] ****** [2397 done /1854 queued / 16 running / 166 errors / 65% coverage ] ****** [2397 done /1854 queued / 16 running / 166 errors / 65% coverage ] ****** [2398 done /1856 queued / 16 running / 166 errors / 65% coverage ] ****** [2398 done /1856 queued / 16 running / 166 errors / 65% coverage ] ****** [2399 done /1857 queued / 16 running / 166 errors / 65% coverage ] ****** [2399 done /1857 queued / 16 running / 166 errors / 65% coverage ] ****** [2400 done /1860 queued / 16 running / 166 errors / 65% coverage ] ****** [2400 done /1860 queued / 16 running / 166 errors / 65% coverage ] ****** [2401 done /1860 queued / 16 running / 166 errors / 65% coverage ] ****** [2401 done /1860 queued / 16 running / 166 errors / 65% coverage ] ****** [2402 done /1863 queued / 16 running / 166 errors / 65% coverage ] ****** [2402 done /1863 queued / 16 running / 166 errors / 65% coverage ] ****** [2403 done /1865 queued / 16 running / 166 errors / 65% coverage ] ****** [2403 done /1865 queued / 16 running / 166 errors / 65% coverage ] ****** [2404 done /1866 queued / 16 running / 166 errors / 65% coverage ] ****** [2404 done /1866 queued / 16 running / 166 errors / 65% coverage ] ****** [2405 done /1867 queued / 16 running / 166 errors / 65% coverage ] ****** [2405 done /1867 queued / 16 running / 166 errors / 65% coverage ] ****** [2406 done /1867 queued / 16 running / 166 errors / 65% coverage ] ****** [2406 done /1867 queued / 16 running / 166 errors / 65% coverage ] ****** [2407 done /1867 queued / 16 running / 166 errors / 65% coverage ] ****** [2407 done /1867 queued / 16 running / 166 errors / 65% coverage ] ****** [2408 done /1869 queued / 16 running / 166 errors / 65% coverage ] ****** [2408 done /1869 queued / 16 running / 166 errors / 65% coverage ] ****** [2409 done /1868 queued / 16 running / 166 errors / 65% coverage ] ****** [2409 done /1868 queued / 16 running / 166 errors / 65% coverage ] ****** [2410 done /1868 queued / 16 running / 166 errors / 65% coverage ] ****** [2410 done /1868 queued / 16 running / 166 errors / 65% coverage ] ****** [2411 done /1870 queued / 16 running / 166 errors / 65% coverage ] ****** [2411 done /1870 queued / 16 running / 166 errors / 65% coverage ] ****** [2412 done /1869 queued / 16 running / 166 errors / 65% coverage ] ****** [2412 done /1869 queued / 16 running / 166 errors / 65% coverage ] ****** [2413 done /1870 queued / 16 running / 166 errors / 65% coverage ] ****** [2413 done /1870 queued / 16 running / 166 errors / 65% coverage ] ****** [2414 done /1869 queued / 16 running / 166 errors / 65% coverage ] ****** [2414 done /1869 queued / 16 running / 166 errors / 65% coverage ] ****** [2415 done /1870 queued / 16 running / 166 errors / 65% coverage ] ****** [2415 done /1870 queued / 16 running / 166 errors / 65% coverage ] ****** [2416 done /1870 queued / 16 running / 166 errors / 65% coverage ] ****** [2416 done /1870 queued / 16 running / 166 errors / 65% coverage ] ****** [2417 done /1869 queued / 16 running / 167 errors / 65% coverage ] ****** [2417 done /1869 queued / 16 running / 167 errors / 65% coverage ] ****** [2418 done /1868 queued / 16 running / 167 errors / 65% coverage ] ****** [2418 done /1868 queued / 16 running / 167 errors / 65% coverage ] ****** [2419 done /1868 queued / 16 running / 167 errors / 65% coverage ] ****** [2419 done /1868 queued / 16 running / 167 errors / 65% coverage ] ****** [2420 done /1867 queued / 16 running / 167 errors / 65% coverage ] ****** [2420 done /1867 queued / 16 running / 167 errors / 65% coverage ] ****** [2421 done /1866 queued / 16 running / 167 errors / 65% coverage ] ****** [2421 done /1866 queued / 16 running / 167 errors / 65% coverage ] ****** [2422 done /1865 queued / 16 running / 167 errors / 65% coverage ] ****** [2422 done /1865 queued / 16 running / 167 errors / 65% coverage ] ****** [2423 done /1864 queued / 16 running / 167 errors / 65% coverage ] ****** [2423 done /1864 queued / 16 running / 167 errors / 65% coverage ] ****** [2424 done /1863 queued / 16 running / 167 errors / 65% coverage ] ****** [2424 done /1863 queued / 16 running / 167 errors / 65% coverage ] ****** [2425 done /1864 queued / 16 running / 168 errors / 65% coverage ] ****** [2425 done /1864 queued / 16 running / 168 errors / 65% coverage ] ****** [2426 done /1866 queued / 16 running / 168 errors / 65% coverage ] ****** [2426 done /1866 queued / 16 running / 168 errors / 65% coverage ] ****** [2427 done /1869 queued / 16 running / 169 errors / 65% coverage ] ****** [2427 done /1869 queued / 16 running / 169 errors / 65% coverage ] ****** [2428 done /1868 queued / 16 running / 169 errors / 65% coverage ] ****** [2428 done /1868 queued / 16 running / 169 errors / 65% coverage ] ****** [2429 done /1869 queued / 16 running / 169 errors / 65% coverage ] ****** [2429 done /1869 queued / 16 running / 169 errors / 65% coverage ] ****** [2430 done /1869 queued / 16 running / 169 errors / 65% coverage ] ****** [2430 done /1869 queued / 16 running / 169 errors / 65% coverage ] ****** [2431 done /1868 queued / 16 running / 169 errors / 65% coverage ] ****** [2431 done /1868 queued / 16 running / 169 errors / 65% coverage ] ****** [2432 done /1867 queued / 16 running / 169 errors / 65% coverage ] ****** [2432 done /1867 queued / 16 running / 169 errors / 65% coverage ] ****** [2433 done /1868 queued / 16 running / 169 errors / 65% coverage ] ****** [2433 done /1868 queued / 16 running / 169 errors / 65% coverage ] ****** [2434 done /1871 queued / 16 running / 169 errors / 65% coverage ] ****** [2434 done /1871 queued / 16 running / 169 errors / 65% coverage ] ****** [2435 done /1871 queued / 16 running / 169 errors / 65% coverage ] ****** [2435 done /1871 queued / 16 running / 169 errors / 65% coverage ] ****** [2436 done /1874 queued / 16 running / 169 errors / 65% coverage ] ****** [2436 done /1874 queued / 16 running / 169 errors / 65% coverage ] ****** [2437 done /1873 queued / 16 running / 169 errors / 65% coverage ] ****** [2437 done /1873 queued / 16 running / 169 errors / 65% coverage ] ****** [2438 done /1878 queued / 16 running / 169 errors / 65% coverage ] ****** [2438 done /1878 queued / 16 running / 169 errors / 65% coverage ] ****** [2439 done /1881 queued / 16 running / 169 errors / 65% coverage ] ****** [2439 done /1881 queued / 16 running / 169 errors / 65% coverage ] ****** [2440 done /1880 queued / 16 running / 169 errors / 65% coverage ] ****** [2440 done /1880 queued / 16 running / 169 errors / 65% coverage ] ****** [2441 done /1883 queued / 16 running / 169 errors / 65% coverage ] ****** [2441 done /1883 queued / 16 running / 169 errors / 65% coverage ] ****** [2442 done /1883 queued / 16 running / 169 errors / 65% coverage ] ****** [2442 done /1883 queued / 16 running / 169 errors / 65% coverage ] ****** [2443 done /1885 queued / 16 running / 169 errors / 65% coverage ] ****** [2443 done /1885 queued / 16 running / 169 errors / 65% coverage ] ****** [2444 done /1886 queued / 16 running / 169 errors / 65% coverage ] ****** [2444 done /1886 queued / 16 running / 169 errors / 65% coverage ] ****** [2445 done /1887 queued / 16 running / 169 errors / 65% coverage ] ****** [2445 done /1887 queued / 16 running / 169 errors / 65% coverage ] ****** [2446 done /1887 queued / 16 running / 169 errors / 65% coverage ] ****** [2446 done /1887 queued / 16 running / 169 errors / 65% coverage ] ****** [2447 done /1886 queued / 16 running / 169 errors / 65% coverage ] ****** [2447 done /1886 queued / 16 running / 169 errors / 65% coverage ] ****** [2448 done /1885 queued / 16 running / 169 errors / 65% coverage ] ****** [2448 done /1885 queued / 16 running / 169 errors / 65% coverage ] ****** [2449 done /1884 queued / 16 running / 169 errors / 65% coverage ] ****** [2449 done /1884 queued / 16 running / 169 errors / 65% coverage ] ****** [2450 done /1885 queued / 16 running / 169 errors / 65% coverage ] ****** [2450 done /1885 queued / 16 running / 169 errors / 65% coverage ] ****** [2451 done /1888 queued / 16 running / 169 errors / 65% coverage ] ****** [2451 done /1888 queued / 16 running / 169 errors / 65% coverage ] ****** [2452 done /1889 queued / 16 running / 169 errors / 65% coverage ] ****** [2452 done /1889 queued / 16 running / 169 errors / 65% coverage ] ****** [2453 done /1888 queued / 16 running / 169 errors / 65% coverage ] ****** [2453 done /1888 queued / 16 running / 169 errors / 65% coverage ] ****** [2454 done /1888 queued / 16 running / 169 errors / 65% coverage ] ****** [2454 done /1888 queued / 16 running / 169 errors / 65% coverage ] ****** [2455 done /1887 queued / 16 running / 169 errors / 65% coverage ] ****** [2455 done /1887 queued / 16 running / 169 errors / 65% coverage ] ****** [2456 done /1886 queued / 16 running / 169 errors / 65% coverage ] ****** [2456 done /1886 queued / 16 running / 169 errors / 65% coverage ] ****** [2457 done /1887 queued / 16 running / 169 errors / 65% coverage ] ****** [2457 done /1887 queued / 16 running / 169 errors / 65% coverage ] ****** [2458 done /1889 queued / 16 running / 169 errors / 65% coverage ] ****** [2458 done /1889 queued / 16 running / 169 errors / 65% coverage ] ****** [2459 done /1890 queued / 16 running / 169 errors / 65% coverage ] ****** [2459 done /1890 queued / 16 running / 169 errors / 65% coverage ] ****** [2460 done /1891 queued / 16 running / 169 errors / 65% coverage ] ****** [2460 done /1891 queued / 16 running / 169 errors / 65% coverage ] ****** [2461 done /1892 queued / 16 running / 169 errors / 65% coverage ] ****** [2461 done /1892 queued / 16 running / 169 errors / 65% coverage ] ****** [2462 done /1894 queued / 16 running / 169 errors / 65% coverage ] ****** [2462 done /1894 queued / 16 running / 169 errors / 65% coverage ] ****** [2463 done /1893 queued / 16 running / 170 errors / 65% coverage ] ****** [2463 done /1893 queued / 16 running / 170 errors / 65% coverage ] ****** [2464 done /1895 queued / 16 running / 170 errors / 65% coverage ] ****** [2464 done /1895 queued / 16 running / 170 errors / 65% coverage ] ****** [2465 done /1896 queued / 16 running / 170 errors / 65% coverage ] ****** [2465 done /1896 queued / 16 running / 170 errors / 65% coverage ] ****** [2466 done /1898 queued / 16 running / 170 errors / 65% coverage ] ****** [2466 done /1898 queued / 16 running / 170 errors / 65% coverage ] ****** [2467 done /1899 queued / 16 running / 171 errors / 65% coverage ] ****** [2467 done /1899 queued / 16 running / 171 errors / 65% coverage ] ****** [2468 done /1901 queued / 16 running / 172 errors / 65% coverage ] ****** [2468 done /1901 queued / 16 running / 172 errors / 65% coverage ] ****** [2469 done /1903 queued / 16 running / 172 errors / 65% coverage ] ****** [2469 done /1903 queued / 16 running / 172 errors / 65% coverage ] ****** [2470 done /1907 queued / 16 running / 172 errors / 65% coverage ] ****** [2470 done /1907 queued / 16 running / 172 errors / 65% coverage ] ****** [2471 done /1906 queued / 16 running / 173 errors / 65% coverage ] ****** [2471 done /1906 queued / 16 running / 173 errors / 65% coverage ] ****** [2472 done /1908 queued / 16 running / 173 errors / 65% coverage ] ****** [2472 done /1908 queued / 16 running / 173 errors / 65% coverage ] ****** [2473 done /1910 queued / 16 running / 173 errors / 65% coverage ] ****** [2473 done /1910 queued / 16 running / 173 errors / 65% coverage ] ****** [2474 done /1912 queued / 16 running / 173 errors / 65% coverage ] ****** [2474 done /1912 queued / 16 running / 173 errors / 65% coverage ] ****** [2475 done /1914 queued / 16 running / 173 errors / 65% coverage ] ****** [2475 done /1914 queued / 16 running / 173 errors / 65% coverage ] ****** [2476 done /1916 queued / 16 running / 173 errors / 65% coverage ] ****** [2476 done /1916 queued / 16 running / 173 errors / 65% coverage ] ****** [2477 done /1915 queued / 16 running / 173 errors / 65% coverage ] ****** [2477 done /1915 queued / 16 running / 173 errors / 65% coverage ] ****** [2478 done /1915 queued / 16 running / 173 errors / 65% coverage ] ****** [2478 done /1915 queued / 16 running / 173 errors / 65% coverage ] ****** [2479 done /1914 queued / 16 running / 173 errors / 65% coverage ] ****** [2479 done /1914 queued / 16 running / 173 errors / 65% coverage ] ****** [2480 done /1915 queued / 16 running / 173 errors / 65% coverage ] ****** [2480 done /1915 queued / 16 running / 173 errors / 65% coverage ] ****** [2481 done /1914 queued / 16 running / 173 errors / 65% coverage ] ****** [2481 done /1914 queued / 16 running / 173 errors / 65% coverage ] ****** [2482 done /1915 queued / 16 running / 173 errors / 65% coverage ] ****** [2482 done /1915 queued / 16 running / 173 errors / 65% coverage ] ****** [2483 done /1917 queued / 16 running / 173 errors / 65% coverage ] ****** [2483 done /1917 queued / 16 running / 173 errors / 65% coverage ] ****** [2484 done /1918 queued / 16 running / 173 errors / 65% coverage ] ****** [2484 done /1918 queued / 16 running / 173 errors / 65% coverage ] ****** [2485 done /1920 queued / 16 running / 173 errors / 65% coverage ] ****** [2485 done /1920 queued / 16 running / 173 errors / 65% coverage ] ****** [2486 done /1921 queued / 16 running / 173 errors / 65% coverage ] ****** [2486 done /1921 queued / 16 running / 173 errors / 65% coverage ] ****** [2487 done /1921 queued / 16 running / 173 errors / 65% coverage ] ****** [2487 done /1921 queued / 16 running / 173 errors / 65% coverage ] ****** [2488 done /1921 queued / 16 running / 173 errors / 65% coverage ] ****** [2488 done /1921 queued / 16 running / 173 errors / 65% coverage ] ****** [2489 done /1921 queued / 16 running / 173 errors / 65% coverage ] ****** [2489 done /1921 queued / 16 running / 173 errors / 65% coverage ] ****** [2490 done /1923 queued / 16 running / 173 errors / 65% coverage ] ****** [2490 done /1923 queued / 16 running / 173 errors / 65% coverage ] ****** [2491 done /1922 queued / 16 running / 173 errors / 65% coverage ] ****** [2491 done /1922 queued / 16 running / 173 errors / 65% coverage ] ****** [2492 done /1922 queued / 16 running / 173 errors / 65% coverage ] ****** [2492 done /1922 queued / 16 running / 173 errors / 65% coverage ] ****** [2493 done /1921 queued / 16 running / 173 errors / 65% coverage ] ****** [2493 done /1921 queued / 16 running / 173 errors / 65% coverage ] ****** [2494 done /1921 queued / 16 running / 173 errors / 65% coverage ] ****** [2494 done /1921 queued / 16 running / 173 errors / 65% coverage ] ****** [2495 done /1920 queued / 16 running / 173 errors / 65% coverage ] ****** [2495 done /1920 queued / 16 running / 173 errors / 65% coverage ] ****** [2496 done /1919 queued / 16 running / 173 errors / 65% coverage ] ****** [2496 done /1919 queued / 16 running / 173 errors / 65% coverage ] ****** [2497 done /1919 queued / 16 running / 173 errors / 65% coverage ] ****** [2497 done /1919 queued / 16 running / 173 errors / 65% coverage ] ****** [2498 done /1918 queued / 16 running / 173 errors / 65% coverage ] ****** [2498 done /1918 queued / 16 running / 173 errors / 65% coverage ] ****** [2499 done /1920 queued / 16 running / 173 errors / 65% coverage ] ****** [2499 done /1920 queued / 16 running / 173 errors / 65% coverage ] ****** [2500 done /1920 queued / 16 running / 173 errors / 65% coverage ] ****** [2500 done /1920 queued / 16 running / 173 errors / 65% coverage ] ****** [2501 done /1920 queued / 16 running / 173 errors / 65% coverage ] ****** [2501 done /1920 queued / 16 running / 173 errors / 65% coverage ] ****** [2502 done /1920 queued / 16 running / 173 errors / 65% coverage ] ****** [2502 done /1920 queued / 16 running / 173 errors / 65% coverage ] ****** [2503 done /1920 queued / 16 running / 173 errors / 65% coverage ] ****** [2503 done /1920 queued / 16 running / 173 errors / 65% coverage ] ****** [2504 done /1919 queued / 16 running / 173 errors / 65% coverage ] ****** [2504 done /1919 queued / 16 running / 173 errors / 65% coverage ] ****** [2505 done /1918 queued / 16 running / 173 errors / 65% coverage ] ****** [2505 done /1918 queued / 16 running / 173 errors / 65% coverage ] ****** [2506 done /1919 queued / 16 running / 173 errors / 65% coverage ] ****** [2506 done /1919 queued / 16 running / 173 errors / 65% coverage ] ****** [2507 done /1918 queued / 16 running / 173 errors / 65% coverage ] ****** [2507 done /1918 queued / 16 running / 173 errors / 65% coverage ] ****** [2508 done /1919 queued / 16 running / 173 errors / 65% coverage ] ****** [2508 done /1919 queued / 16 running / 173 errors / 65% coverage ] ****** [2509 done /1921 queued / 16 running / 173 errors / 65% coverage ] ****** [2509 done /1921 queued / 16 running / 173 errors / 65% coverage ] ****** [2510 done /1923 queued / 16 running / 173 errors / 65% coverage ] ****** [2510 done /1923 queued / 16 running / 173 errors / 65% coverage ] ****** [2511 done /1922 queued / 16 running / 174 errors / 65% coverage ] ****** [2511 done /1922 queued / 16 running / 174 errors / 65% coverage ] ****** [2512 done /1922 queued / 16 running / 174 errors / 65% coverage ] ****** [2512 done /1922 queued / 16 running / 174 errors / 65% coverage ] ****** [2513 done /1925 queued / 16 running / 174 errors / 65% coverage ] ****** [2513 done /1925 queued / 16 running / 174 errors / 65% coverage ] ****** [2514 done /1924 queued / 16 running / 175 errors / 65% coverage ] ****** [2514 done /1924 queued / 16 running / 175 errors / 65% coverage ] ****** [2515 done /1927 queued / 16 running / 175 errors / 65% coverage ] ****** [2515 done /1927 queued / 16 running / 175 errors / 65% coverage ] ****** [2516 done /1927 queued / 16 running / 175 errors / 65% coverage ] ****** [2516 done /1927 queued / 16 running / 175 errors / 65% coverage ] ****** [2517 done /1933 queued / 16 running / 175 errors / 65% coverage ] ****** [2517 done /1933 queued / 16 running / 175 errors / 65% coverage ] ****** [2518 done /1936 queued / 16 running / 175 errors / 65% coverage ] ****** [2518 done /1936 queued / 16 running / 175 errors / 65% coverage ] ****** [2519 done /1937 queued / 16 running / 175 errors / 65% coverage ] ****** [2519 done /1937 queued / 16 running / 175 errors / 65% coverage ] ****** [2520 done /1938 queued / 16 running / 175 errors / 65% coverage ] ****** [2520 done /1938 queued / 16 running / 175 errors / 65% coverage ] ****** [2521 done /1942 queued / 16 running / 175 errors / 65% coverage ] ****** [2521 done /1942 queued / 16 running / 175 errors / 65% coverage ] ****** [2522 done /1944 queued / 16 running / 175 errors / 65% coverage ] ****** [2522 done /1944 queued / 16 running / 175 errors / 65% coverage ] ****** [2523 done /1946 queued / 16 running / 175 errors / 65% coverage ] ****** [2523 done /1946 queued / 16 running / 175 errors / 65% coverage ] ****** [2524 done /1949 queued / 16 running / 175 errors / 65% coverage ] ****** [2524 done /1949 queued / 16 running / 175 errors / 65% coverage ] ****** [2525 done /1952 queued / 16 running / 175 errors / 65% coverage ] ****** [2525 done /1952 queued / 16 running / 175 errors / 65% coverage ] ****** [2526 done /1955 queued / 16 running / 175 errors / 65% coverage ] ****** [2526 done /1955 queued / 16 running / 175 errors / 65% coverage ] ****** [2527 done /1956 queued / 16 running / 175 errors / 65% coverage ] ****** [2527 done /1956 queued / 16 running / 175 errors / 65% coverage ] ****** [2528 done /1956 queued / 16 running / 175 errors / 65% coverage ] ****** [2528 done /1956 queued / 16 running / 175 errors / 65% coverage ] ****** [2529 done /1957 queued / 16 running / 175 errors / 65% coverage ] ****** [2529 done /1957 queued / 16 running / 175 errors / 65% coverage ] ****** [2530 done /1956 queued / 16 running / 175 errors / 65% coverage ] ****** [2530 done /1956 queued / 16 running / 175 errors / 65% coverage ] ****** [2531 done /1955 queued / 16 running / 175 errors / 65% coverage ] ****** [2531 done /1955 queued / 16 running / 175 errors / 65% coverage ] ****** [2532 done /1955 queued / 16 running / 175 errors / 65% coverage ] ****** [2532 done /1955 queued / 16 running / 175 errors / 65% coverage ] ****** [2533 done /1957 queued / 16 running / 175 errors / 65% coverage ] ****** [2533 done /1957 queued / 16 running / 175 errors / 65% coverage ] ****** [2534 done /1956 queued / 16 running / 175 errors / 65% coverage ] ****** [2534 done /1956 queued / 16 running / 175 errors / 65% coverage ] ****** [2535 done /1956 queued / 16 running / 175 errors / 65% coverage ] ****** [2535 done /1956 queued / 16 running / 175 errors / 65% coverage ] ****** [2536 done /1955 queued / 16 running / 175 errors / 65% coverage ] ****** [2536 done /1955 queued / 16 running / 175 errors / 65% coverage ] ****** [2537 done /1954 queued / 16 running / 175 errors / 65% coverage ] ****** [2537 done /1954 queued / 16 running / 175 errors / 65% coverage ] ****** [2538 done /1954 queued / 16 running / 175 errors / 65% coverage ] ****** [2538 done /1954 queued / 16 running / 175 errors / 65% coverage ] ****** [2539 done /1957 queued / 16 running / 175 errors / 65% coverage ] ****** [2539 done /1957 queued / 16 running / 175 errors / 65% coverage ] ****** [2540 done /1956 queued / 16 running / 175 errors / 65% coverage ] ****** [2540 done /1956 queued / 16 running / 175 errors / 65% coverage ] ****** [2541 done /1955 queued / 16 running / 175 errors / 65% coverage ] ****** [2541 done /1955 queued / 16 running / 175 errors / 65% coverage ] ****** [2542 done /1957 queued / 16 running / 175 errors / 65% coverage ] ****** [2542 done /1957 queued / 16 running / 175 errors / 65% coverage ] ****** [2543 done /1956 queued / 16 running / 175 errors / 65% coverage ] ****** [2543 done /1956 queued / 16 running / 175 errors / 65% coverage ] ****** [2544 done /1955 queued / 16 running / 175 errors / 65% coverage ] ****** [2544 done /1955 queued / 16 running / 175 errors / 65% coverage ] ****** [2545 done /1957 queued / 16 running / 175 errors / 65% coverage ] ****** [2545 done /1957 queued / 16 running / 175 errors / 65% coverage ] ****** [2546 done /1959 queued / 16 running / 175 errors / 65% coverage ] ****** [2546 done /1959 queued / 16 running / 175 errors / 65% coverage ] ****** [2547 done /1959 queued / 16 running / 175 errors / 65% coverage ] ****** [2547 done /1959 queued / 16 running / 175 errors / 65% coverage ] ****** [2548 done /1958 queued / 16 running / 175 errors / 65% coverage ] ****** [2548 done /1958 queued / 16 running / 175 errors / 65% coverage ] ****** [2549 done /1960 queued / 16 running / 175 errors / 65% coverage ] ****** [2549 done /1960 queued / 16 running / 175 errors / 65% coverage ] ****** [2550 done /1960 queued / 16 running / 175 errors / 65% coverage ] ****** [2550 done /1960 queued / 16 running / 175 errors / 65% coverage ] ****** [2551 done /1959 queued / 16 running / 175 errors / 65% coverage ] ****** [2551 done /1959 queued / 16 running / 175 errors / 65% coverage ] ****** [2552 done /1960 queued / 16 running / 175 errors / 65% coverage ] ****** [2552 done /1960 queued / 16 running / 175 errors / 65% coverage ] ****** [2553 done /1960 queued / 16 running / 175 errors / 65% coverage ] ****** [2553 done /1960 queued / 16 running / 175 errors / 65% coverage ] ****** [2554 done /1963 queued / 16 running / 175 errors / 65% coverage ] ****** [2554 done /1963 queued / 16 running / 175 errors / 65% coverage ] ****** [2555 done /1962 queued / 16 running / 175 errors / 65% coverage ] ****** [2555 done /1962 queued / 16 running / 175 errors / 65% coverage ] ****** [2556 done /1961 queued / 16 running / 175 errors / 65% coverage ] ****** [2556 done /1961 queued / 16 running / 175 errors / 65% coverage ] ****** [2557 done /1962 queued / 16 running / 175 errors / 65% coverage ] ****** [2557 done /1962 queued / 16 running / 175 errors / 65% coverage ] ****** [2558 done /1964 queued / 16 running / 175 errors / 65% coverage ] ****** [2558 done /1964 queued / 16 running / 175 errors / 65% coverage ] ****** [2559 done /1965 queued / 16 running / 175 errors / 65% coverage ] ****** [2559 done /1965 queued / 16 running / 175 errors / 65% coverage ] ****** [2560 done /1968 queued / 16 running / 175 errors / 65% coverage ] ****** [2560 done /1968 queued / 16 running / 175 errors / 65% coverage ] ****** [2561 done /1970 queued / 16 running / 175 errors / 65% coverage ] ****** [2561 done /1970 queued / 16 running / 175 errors / 65% coverage ] ****** [2562 done /1973 queued / 16 running / 175 errors / 65% coverage ] ****** [2562 done /1973 queued / 16 running / 175 errors / 65% coverage ] ****** [2563 done /1974 queued / 16 running / 175 errors / 65% coverage ] ****** [2563 done /1974 queued / 16 running / 175 errors / 65% coverage ] ****** [2564 done /1974 queued / 16 running / 175 errors / 65% coverage ] ****** [2564 done /1974 queued / 16 running / 175 errors / 65% coverage ] ****** [2565 done /1975 queued / 16 running / 175 errors / 65% coverage ] ****** [2565 done /1975 queued / 16 running / 175 errors / 65% coverage ] ****** [2566 done /1976 queued / 16 running / 175 errors / 65% coverage ] ****** [2566 done /1976 queued / 16 running / 175 errors / 65% coverage ] ****** [2567 done /1980 queued / 16 running / 175 errors / 65% coverage ] ****** [2567 done /1980 queued / 16 running / 175 errors / 65% coverage ] ****** [2568 done /1983 queued / 16 running / 175 errors / 65% coverage ] ****** [2568 done /1983 queued / 16 running / 175 errors / 65% coverage ] ****** [2569 done /1982 queued / 16 running / 175 errors / 65% coverage ] ****** [2569 done /1982 queued / 16 running / 175 errors / 65% coverage ] ****** [2570 done /1982 queued / 16 running / 175 errors / 65% coverage ] ****** [2570 done /1982 queued / 16 running / 175 errors / 65% coverage ] ****** [2571 done /1981 queued / 16 running / 175 errors / 65% coverage ] ****** [2571 done /1981 queued / 16 running / 175 errors / 65% coverage ] ****** [2572 done /1981 queued / 16 running / 175 errors / 65% coverage ] ****** [2572 done /1981 queued / 16 running / 175 errors / 65% coverage ] ****** [2573 done /1980 queued / 16 running / 175 errors / 65% coverage ] ****** [2573 done /1980 queued / 16 running / 175 errors / 65% coverage ] ****** [2574 done /1981 queued / 16 running / 175 errors / 65% coverage ] ****** [2574 done /1981 queued / 16 running / 175 errors / 65% coverage ] ****** [2575 done /1983 queued / 16 running / 175 errors / 65% coverage ] ****** [2575 done /1983 queued / 16 running / 175 errors / 65% coverage ] ****** [2576 done /1982 queued / 16 running / 175 errors / 65% coverage ] ****** [2576 done /1982 queued / 16 running / 175 errors / 65% coverage ] ****** [2577 done /1981 queued / 16 running / 175 errors / 65% coverage ] ****** [2577 done /1981 queued / 16 running / 175 errors / 65% coverage ] ****** [2578 done /1981 queued / 16 running / 175 errors / 65% coverage ] ****** [2578 done /1981 queued / 16 running / 175 errors / 65% coverage ] ****** [2579 done /1980 queued / 16 running / 175 errors / 65% coverage ] ****** [2579 done /1980 queued / 16 running / 175 errors / 65% coverage ] ****** [2580 done /1979 queued / 16 running / 175 errors / 65% coverage ] ****** [2580 done /1979 queued / 16 running / 175 errors / 65% coverage ] ****** [2581 done /1979 queued / 16 running / 175 errors / 65% coverage ] ****** [2581 done /1979 queued / 16 running / 175 errors / 65% coverage ] ****** [2582 done /1978 queued / 16 running / 175 errors / 65% coverage ] ****** [2582 done /1978 queued / 16 running / 175 errors / 65% coverage ] ****** [2583 done /1979 queued / 16 running / 175 errors / 65% coverage ] ****** [2583 done /1979 queued / 16 running / 175 errors / 65% coverage ] ****** [2584 done /1978 queued / 16 running / 175 errors / 65% coverage ] ****** [2584 done /1978 queued / 16 running / 175 errors / 65% coverage ] ****** [2585 done /1978 queued / 16 running / 175 errors / 65% coverage ] ****** [2585 done /1978 queued / 16 running / 175 errors / 65% coverage ] ****** [2586 done /1977 queued / 16 running / 175 errors / 65% coverage ] ****** [2586 done /1977 queued / 16 running / 175 errors / 65% coverage ] ****** [2587 done /1977 queued / 16 running / 175 errors / 65% coverage ] ****** [2587 done /1977 queued / 16 running / 175 errors / 65% coverage ] ****** [2588 done /1977 queued / 16 running / 175 errors / 65% coverage ] ****** [2588 done /1977 queued / 16 running / 175 errors / 65% coverage ] ****** [2589 done /1977 queued / 16 running / 175 errors / 65% coverage ] ****** [2589 done /1977 queued / 16 running / 175 errors / 65% coverage ] ****** [2590 done /1976 queued / 16 running / 175 errors / 65% coverage ] ****** [2590 done /1976 queued / 16 running / 175 errors / 65% coverage ] ****** [2591 done /1977 queued / 16 running / 175 errors / 65% coverage ] ****** [2591 done /1977 queued / 16 running / 175 errors / 65% coverage ] ****** [2592 done /1978 queued / 16 running / 175 errors / 65% coverage ] ****** [2592 done /1978 queued / 16 running / 175 errors / 65% coverage ] ****** [2593 done /1978 queued / 16 running / 175 errors / 65% coverage ] ****** [2593 done /1978 queued / 16 running / 175 errors / 65% coverage ] ****** [2594 done /1977 queued / 16 running / 175 errors / 65% coverage ] ****** [2594 done /1977 queued / 16 running / 175 errors / 65% coverage ] ****** [2595 done /1981 queued / 16 running / 175 errors / 65% coverage ] ****** [2595 done /1981 queued / 16 running / 175 errors / 65% coverage ] ****** [2596 done /1985 queued / 16 running / 175 errors / 65% coverage ] ****** [2596 done /1985 queued / 16 running / 175 errors / 65% coverage ] ****** [2597 done /1987 queued / 16 running / 176 errors / 65% coverage ] ****** [2597 done /1987 queued / 16 running / 176 errors / 65% coverage ] ****** [2598 done /1988 queued / 16 running / 176 errors / 65% coverage ] ****** [2598 done /1988 queued / 16 running / 176 errors / 65% coverage ] ****** [2599 done /1993 queued / 16 running / 176 errors / 65% coverage ] ****** [2599 done /1993 queued / 16 running / 176 errors / 65% coverage ] ****** [2600 done /1995 queued / 16 running / 176 errors / 65% coverage ] ****** [2600 done /1995 queued / 16 running / 176 errors / 65% coverage ] ****** [2601 done /1997 queued / 16 running / 176 errors / 65% coverage ] ****** [2601 done /1997 queued / 16 running / 176 errors / 65% coverage ] ****** [2602 done /2000 queued / 16 running / 176 errors / 65% coverage ] ****** [2602 done /2000 queued / 16 running / 176 errors / 65% coverage ] ****** [2603 done /2003 queued / 16 running / 176 errors / 65% coverage ] ****** [2603 done /2003 queued / 16 running / 176 errors / 65% coverage ] ****** [2604 done /2004 queued / 16 running / 176 errors / 65% coverage ] ****** [2604 done /2004 queued / 16 running / 176 errors / 65% coverage ] ****** [2605 done /2003 queued / 16 running / 176 errors / 65% coverage ] ****** [2605 done /2003 queued / 16 running / 176 errors / 65% coverage ] ****** [2606 done /2003 queued / 16 running / 176 errors / 65% coverage ] ****** [2606 done /2003 queued / 16 running / 176 errors / 65% coverage ] ****** [2607 done /2004 queued / 16 running / 176 errors / 65% coverage ] ****** [2607 done /2004 queued / 16 running / 176 errors / 65% coverage ] ****** [2608 done /2006 queued / 16 running / 176 errors / 65% coverage ] ****** [2608 done /2006 queued / 16 running / 176 errors / 65% coverage ] ****** [2609 done /2007 queued / 16 running / 176 errors / 65% coverage ] ****** [2609 done /2007 queued / 16 running / 176 errors / 65% coverage ] ****** [2610 done /2009 queued / 16 running / 176 errors / 65% coverage ] ****** [2610 done /2009 queued / 16 running / 176 errors / 65% coverage ] ****** [2611 done /2009 queued / 16 running / 176 errors / 65% coverage ] ****** [2611 done /2009 queued / 16 running / 176 errors / 65% coverage ] ****** [2612 done /2010 queued / 16 running / 176 errors / 65% coverage ] ****** [2612 done /2010 queued / 16 running / 176 errors / 65% coverage ] ****** [2613 done /2010 queued / 16 running / 177 errors / 65% coverage ] ****** [2613 done /2010 queued / 16 running / 177 errors / 65% coverage ] ****** [2614 done /2012 queued / 16 running / 177 errors / 65% coverage ] ****** [2614 done /2012 queued / 16 running / 177 errors / 65% coverage ] ****** [2615 done /2013 queued / 16 running / 178 errors / 65% coverage ] ****** [2615 done /2013 queued / 16 running / 178 errors / 65% coverage ] ****** [2616 done /2014 queued / 16 running / 178 errors / 65% coverage ] ****** [2616 done /2014 queued / 16 running / 178 errors / 65% coverage ] ****** [2617 done /2014 queued / 16 running / 178 errors / 65% coverage ] ****** [2617 done /2014 queued / 16 running / 178 errors / 65% coverage ] ****** [2618 done /2013 queued / 16 running / 178 errors / 65% coverage ] ****** [2618 done /2013 queued / 16 running / 178 errors / 65% coverage ] ****** [2619 done /2014 queued / 16 running / 178 errors / 65% coverage ] ****** [2619 done /2014 queued / 16 running / 178 errors / 65% coverage ] ****** [2620 done /2015 queued / 16 running / 178 errors / 65% coverage ] ****** [2620 done /2015 queued / 16 running / 178 errors / 65% coverage ] ****** [2621 done /2015 queued / 16 running / 178 errors / 65% coverage ] ****** [2621 done /2015 queued / 16 running / 178 errors / 65% coverage ] ****** [2622 done /2016 queued / 16 running / 178 errors / 65% coverage ] ****** [2622 done /2016 queued / 16 running / 178 errors / 65% coverage ] ****** [2623 done /2017 queued / 16 running / 179 errors / 65% coverage ] ****** [2623 done /2017 queued / 16 running / 179 errors / 65% coverage ] ****** [2624 done /2017 queued / 16 running / 179 errors / 65% coverage ] ****** [2624 done /2017 queued / 16 running / 179 errors / 65% coverage ] ****** [2625 done /2018 queued / 16 running / 180 errors / 65% coverage ] ****** [2625 done /2018 queued / 16 running / 180 errors / 65% coverage ] ****** [2626 done /2020 queued / 16 running / 180 errors / 65% coverage ] ****** [2626 done /2020 queued / 16 running / 180 errors / 65% coverage ] ****** [2627 done /2020 queued / 16 running / 180 errors / 65% coverage ] ****** [2627 done /2020 queued / 16 running / 180 errors / 65% coverage ] ****** [2628 done /2019 queued / 16 running / 180 errors / 65% coverage ] ****** [2628 done /2019 queued / 16 running / 180 errors / 65% coverage ] ****** [2629 done /2019 queued / 16 running / 180 errors / 65% coverage ] ****** [2629 done /2019 queued / 16 running / 180 errors / 65% coverage ] ****** [2630 done /2018 queued / 16 running / 180 errors / 65% coverage ] ****** [2630 done /2018 queued / 16 running / 180 errors / 65% coverage ] ****** [2631 done /2023 queued / 16 running / 180 errors / 65% coverage ] ****** [2631 done /2023 queued / 16 running / 180 errors / 65% coverage ] ****** [2632 done /2025 queued / 16 running / 180 errors / 65% coverage ] ****** [2632 done /2025 queued / 16 running / 180 errors / 65% coverage ] ****** [2633 done /2024 queued / 16 running / 180 errors / 65% coverage ] ****** [2633 done /2024 queued / 16 running / 180 errors / 65% coverage ] ****** [2634 done /2027 queued / 16 running / 180 errors / 65% coverage ] ****** [2634 done /2027 queued / 16 running / 180 errors / 65% coverage ] ****** [2635 done /2029 queued / 16 running / 180 errors / 65% coverage ] ****** [2635 done /2029 queued / 16 running / 180 errors / 65% coverage ] ****** [2636 done /2033 queued / 16 running / 180 errors / 65% coverage ] ****** [2636 done /2033 queued / 16 running / 180 errors / 65% coverage ] ****** [2637 done /2034 queued / 16 running / 180 errors / 65% coverage ] ****** [2637 done /2034 queued / 16 running / 180 errors / 65% coverage ] ****** [2638 done /2037 queued / 16 running / 180 errors / 65% coverage ] ****** [2638 done /2037 queued / 16 running / 180 errors / 65% coverage ] ****** [2639 done /2036 queued / 16 running / 180 errors / 65% coverage ] ****** [2639 done /2036 queued / 16 running / 180 errors / 65% coverage ] ****** [2640 done /2039 queued / 16 running / 180 errors / 65% coverage ] ****** [2640 done /2039 queued / 16 running / 180 errors / 65% coverage ] ****** [2641 done /2040 queued / 16 running / 181 errors / 65% coverage ] ****** [2641 done /2040 queued / 16 running / 181 errors / 65% coverage ] ****** [2642 done /2042 queued / 16 running / 181 errors / 65% coverage ] ****** [2642 done /2042 queued / 16 running / 181 errors / 65% coverage ] ****** [2643 done /2042 queued / 16 running / 181 errors / 65% coverage ] ****** [2643 done /2042 queued / 16 running / 181 errors / 65% coverage ] ****** [2644 done /2043 queued / 16 running / 181 errors / 65% coverage ] ****** [2644 done /2043 queued / 16 running / 181 errors / 65% coverage ] ****** [2645 done /2043 queued / 16 running / 181 errors / 65% coverage ] ****** [2645 done /2043 queued / 16 running / 181 errors / 65% coverage ] ****** [2646 done /2045 queued / 16 running / 181 errors / 65% coverage ] ****** [2646 done /2045 queued / 16 running / 181 errors / 65% coverage ] ****** [2647 done /2046 queued / 16 running / 181 errors / 65% coverage ] ****** [2647 done /2046 queued / 16 running / 181 errors / 65% coverage ] ****** [2648 done /2047 queued / 16 running / 181 errors / 65% coverage ] ****** [2648 done /2047 queued / 16 running / 181 errors / 65% coverage ] ****** [2649 done /2048 queued / 16 running / 181 errors / 65% coverage ] ****** [2649 done /2048 queued / 16 running / 181 errors / 65% coverage ] ****** [2650 done /2048 queued / 16 running / 181 errors / 65% coverage ] ****** [2650 done /2048 queued / 16 running / 181 errors / 65% coverage ] ****** [2651 done /2047 queued / 16 running / 181 errors / 65% coverage ] ****** [2651 done /2047 queued / 16 running / 181 errors / 65% coverage ] ****** [2652 done /2046 queued / 16 running / 181 errors / 65% coverage ] ****** [2652 done /2046 queued / 16 running / 181 errors / 65% coverage ] ****** [2653 done /2048 queued / 16 running / 181 errors / 65% coverage ] ****** [2653 done /2048 queued / 16 running / 181 errors / 65% coverage ] ****** [2654 done /2049 queued / 16 running / 181 errors / 65% coverage ] ****** [2654 done /2049 queued / 16 running / 181 errors / 65% coverage ] ****** [2655 done /2050 queued / 16 running / 181 errors / 65% coverage ] ****** [2655 done /2050 queued / 16 running / 181 errors / 65% coverage ] ****** [2656 done /2051 queued / 16 running / 181 errors / 65% coverage ] ****** [2656 done /2051 queued / 16 running / 181 errors / 65% coverage ] ****** [2657 done /2053 queued / 16 running / 181 errors / 65% coverage ] ****** [2657 done /2053 queued / 16 running / 181 errors / 65% coverage ] ****** [2658 done /2053 queued / 16 running / 181 errors / 65% coverage ] ****** [2658 done /2053 queued / 16 running / 181 errors / 65% coverage ] ****** [2659 done /2053 queued / 16 running / 181 errors / 65% coverage ] ****** [2659 done /2053 queued / 16 running / 181 errors / 65% coverage ] ****** [2660 done /2052 queued / 16 running / 181 errors / 65% coverage ] ****** [2660 done /2052 queued / 16 running / 181 errors / 65% coverage ] ****** [2661 done /2052 queued / 16 running / 181 errors / 65% coverage ] ****** [2661 done /2052 queued / 16 running / 181 errors / 65% coverage ] ****** [2662 done /2051 queued / 16 running / 181 errors / 65% coverage ] ****** [2662 done /2051 queued / 16 running / 181 errors / 65% coverage ] ****** [2663 done /2052 queued / 16 running / 182 errors / 65% coverage ] ****** [2663 done /2052 queued / 16 running / 182 errors / 65% coverage ] ****** [2664 done /2051 queued / 16 running / 182 errors / 65% coverage ] ****** [2664 done /2051 queued / 16 running / 182 errors / 65% coverage ] ****** [2665 done /2052 queued / 16 running / 182 errors / 65% coverage ] ****** [2665 done /2052 queued / 16 running / 182 errors / 65% coverage ] ****** [2666 done /2052 queued / 16 running / 182 errors / 65% coverage ] ****** [2666 done /2052 queued / 16 running / 182 errors / 65% coverage ] ****** [2667 done /2051 queued / 16 running / 182 errors / 65% coverage ] ****** [2667 done /2051 queued / 16 running / 182 errors / 65% coverage ] ****** [2668 done /2054 queued / 16 running / 182 errors / 65% coverage ] ****** [2668 done /2054 queued / 16 running / 182 errors / 65% coverage ] ****** [2669 done /2055 queued / 16 running / 182 errors / 65% coverage ] ****** [2669 done /2055 queued / 16 running / 182 errors / 65% coverage ] ****** [2670 done /2056 queued / 16 running / 182 errors / 65% coverage ] ****** [2670 done /2056 queued / 16 running / 182 errors / 65% coverage ] ****** [2671 done /2058 queued / 16 running / 182 errors / 65% coverage ] ****** [2671 done /2058 queued / 16 running / 182 errors / 65% coverage ] ****** [2672 done /2058 queued / 16 running / 182 errors / 65% coverage ] ****** [2672 done /2058 queued / 16 running / 182 errors / 65% coverage ] ****** [2673 done /2060 queued / 16 running / 182 errors / 65% coverage ] ****** [2673 done /2060 queued / 16 running / 182 errors / 65% coverage ] ****** [2674 done /2061 queued / 16 running / 182 errors / 65% coverage ] ****** [2674 done /2061 queued / 16 running / 182 errors / 65% coverage ] ****** [2675 done /2064 queued / 16 running / 182 errors / 65% coverage ] ****** [2675 done /2064 queued / 16 running / 182 errors / 65% coverage ] ****** [2676 done /2067 queued / 16 running / 182 errors / 65% coverage ] ****** [2676 done /2067 queued / 16 running / 182 errors / 65% coverage ] ****** [2677 done /2068 queued / 16 running / 182 errors / 65% coverage ] ****** [2677 done /2068 queued / 16 running / 182 errors / 65% coverage ] ****** [2678 done /2071 queued / 16 running / 182 errors / 65% coverage ] ****** [2678 done /2071 queued / 16 running / 182 errors / 65% coverage ] ****** [2679 done /2074 queued / 16 running / 182 errors / 65% coverage ] ****** [2679 done /2074 queued / 16 running / 182 errors / 65% coverage ] ****** [2680 done /2076 queued / 16 running / 182 errors / 65% coverage ] ****** [2680 done /2076 queued / 16 running / 182 errors / 65% coverage ] ****** [2681 done /2077 queued / 16 running / 182 errors / 65% coverage ] ****** [2681 done /2077 queued / 16 running / 182 errors / 65% coverage ] ****** [2682 done /2081 queued / 16 running / 182 errors / 65% coverage ] ****** [2682 done /2081 queued / 16 running / 182 errors / 65% coverage ] ****** [2683 done /2082 queued / 16 running / 182 errors / 65% coverage ] ****** [2683 done /2082 queued / 16 running / 182 errors / 65% coverage ] ****** [2684 done /2081 queued / 16 running / 182 errors / 65% coverage ] ****** [2684 done /2081 queued / 16 running / 182 errors / 65% coverage ] ****** [2685 done /2081 queued / 16 running / 182 errors / 65% coverage ] ****** [2685 done /2081 queued / 16 running / 182 errors / 65% coverage ] ****** [2686 done /2080 queued / 16 running / 182 errors / 65% coverage ] ****** [2686 done /2080 queued / 16 running / 182 errors / 65% coverage ] ****** [2687 done /2081 queued / 16 running / 182 errors / 65% coverage ] ****** [2687 done /2081 queued / 16 running / 182 errors / 65% coverage ] ****** [2688 done /2080 queued / 16 running / 182 errors / 65% coverage ] ****** [2688 done /2080 queued / 16 running / 182 errors / 65% coverage ] ****** [2689 done /2081 queued / 16 running / 182 errors / 65% coverage ] ****** [2689 done /2081 queued / 16 running / 182 errors / 65% coverage ] ****** [2690 done /2082 queued / 16 running / 182 errors / 65% coverage ] ****** [2690 done /2082 queued / 16 running / 182 errors / 65% coverage ] ****** [2691 done /2082 queued / 16 running / 182 errors / 65% coverage ] ****** [2691 done /2082 queued / 16 running / 182 errors / 65% coverage ] ****** [2692 done /2082 queued / 16 running / 182 errors / 65% coverage ] ****** [2692 done /2082 queued / 16 running / 182 errors / 65% coverage ] ****** [2693 done /2083 queued / 16 running / 182 errors / 65% coverage ] ****** [2693 done /2083 queued / 16 running / 182 errors / 65% coverage ] ****** [2694 done /2083 queued / 16 running / 182 errors / 65% coverage ] ****** [2694 done /2083 queued / 16 running / 182 errors / 65% coverage ] ****** [2695 done /2082 queued / 16 running / 182 errors / 65% coverage ] ****** [2695 done /2082 queued / 16 running / 182 errors / 65% coverage ] ****** [2696 done /2082 queued / 16 running / 182 errors / 65% coverage ] ****** [2696 done /2082 queued / 16 running / 182 errors / 65% coverage ] ****** [2697 done /2081 queued / 16 running / 182 errors / 65% coverage ] ****** [2697 done /2081 queued / 16 running / 182 errors / 65% coverage ] ****** [2698 done /2082 queued / 16 running / 182 errors / 65% coverage ] ****** [2698 done /2082 queued / 16 running / 182 errors / 65% coverage ] ****** [2699 done /2083 queued / 16 running / 182 errors / 65% coverage ] ****** [2699 done /2083 queued / 16 running / 182 errors / 65% coverage ] ****** [2700 done /2082 queued / 16 running / 182 errors / 65% coverage ] ****** [2700 done /2082 queued / 16 running / 182 errors / 65% coverage ] ****** [2701 done /2082 queued / 16 running / 182 errors / 65% coverage ] ****** [2701 done /2082 queued / 16 running / 182 errors / 65% coverage ] ****** [2702 done /2082 queued / 16 running / 182 errors / 65% coverage ] ****** [2702 done /2082 queued / 16 running / 182 errors / 65% coverage ] ****** [2703 done /2081 queued / 16 running / 182 errors / 65% coverage ] ****** [2703 done /2081 queued / 16 running / 182 errors / 65% coverage ] ****** [2704 done /2081 queued / 16 running / 182 errors / 65% coverage ] ****** [2704 done /2081 queued / 16 running / 182 errors / 65% coverage ] ****** [2705 done /2080 queued / 16 running / 182 errors / 65% coverage ] ****** [2705 done /2080 queued / 16 running / 182 errors / 65% coverage ] ****** [2706 done /2079 queued / 16 running / 182 errors / 65% coverage ] ****** [2706 done /2079 queued / 16 running / 182 errors / 65% coverage ] ****** [2707 done /2079 queued / 16 running / 182 errors / 65% coverage ] ****** [2707 done /2079 queued / 16 running / 182 errors / 65% coverage ] ****** [2708 done /2079 queued / 16 running / 182 errors / 65% coverage ] ****** [2708 done /2079 queued / 16 running / 182 errors / 65% coverage ] ****** [2709 done /2080 queued / 16 running / 182 errors / 65% coverage ] ****** [2709 done /2080 queued / 16 running / 182 errors / 65% coverage ] ****** [2710 done /2079 queued / 16 running / 182 errors / 65% coverage ] ****** [2710 done /2079 queued / 16 running / 182 errors / 65% coverage ] ****** [2711 done /2079 queued / 16 running / 182 errors / 65% coverage ] ****** [2711 done /2079 queued / 16 running / 182 errors / 65% coverage ] ****** [2712 done /2083 queued / 16 running / 182 errors / 65% coverage ] ****** [2712 done /2083 queued / 16 running / 182 errors / 65% coverage ] ****** [2713 done /2087 queued / 16 running / 182 errors / 65% coverage ] ****** [2713 done /2087 queued / 16 running / 182 errors / 65% coverage ] ****** [2714 done /2088 queued / 16 running / 182 errors / 65% coverage ] ****** [2714 done /2088 queued / 16 running / 182 errors / 65% coverage ] ****** [2715 done /2091 queued / 16 running / 182 errors / 65% coverage ] ****** [2715 done /2091 queued / 16 running / 182 errors / 65% coverage ] ****** [2716 done /2092 queued / 16 running / 182 errors / 65% coverage ] ****** [2716 done /2092 queued / 16 running / 182 errors / 65% coverage ] ****** [2717 done /2093 queued / 16 running / 182 errors / 65% coverage ] ****** [2717 done /2093 queued / 16 running / 182 errors / 65% coverage ] ****** [2718 done /2094 queued / 16 running / 182 errors / 65% coverage ] ****** [2718 done /2094 queued / 16 running / 182 errors / 65% coverage ] ****** [2719 done /2097 queued / 16 running / 182 errors / 65% coverage ] ****** [2719 done /2097 queued / 16 running / 182 errors / 65% coverage ] ****** [2720 done /2097 queued / 16 running / 182 errors / 65% coverage ] ****** [2720 done /2097 queued / 16 running / 182 errors / 65% coverage ] ****** [2721 done /2098 queued / 16 running / 182 errors / 65% coverage ] ****** [2721 done /2098 queued / 16 running / 182 errors / 65% coverage ] ****** [2722 done /2101 queued / 16 running / 182 errors / 65% coverage ] ****** [2722 done /2101 queued / 16 running / 182 errors / 65% coverage ] ****** [2723 done /2103 queued / 16 running / 182 errors / 65% coverage ] ****** [2723 done /2103 queued / 16 running / 182 errors / 65% coverage ] ****** [2724 done /2104 queued / 16 running / 182 errors / 65% coverage ] ****** [2724 done /2104 queued / 16 running / 182 errors / 65% coverage ] ****** [2725 done /2105 queued / 16 running / 182 errors / 65% coverage ] ****** [2725 done /2105 queued / 16 running / 182 errors / 65% coverage ] ****** [2726 done /2108 queued / 16 running / 182 errors / 65% coverage ] ****** [2726 done /2108 queued / 16 running / 182 errors / 65% coverage ] ****** [2727 done /2109 queued / 16 running / 182 errors / 65% coverage ] ****** [2727 done /2109 queued / 16 running / 182 errors / 65% coverage ] ****** [2728 done /2109 queued / 16 running / 182 errors / 65% coverage ] ****** [2728 done /2109 queued / 16 running / 182 errors / 65% coverage ] ****** [2729 done /2111 queued / 16 running / 182 errors / 65% coverage ] ****** [2729 done /2111 queued / 16 running / 182 errors / 65% coverage ] ****** [2730 done /2111 queued / 16 running / 182 errors / 65% coverage ] ****** [2730 done /2111 queued / 16 running / 182 errors / 65% coverage ] ****** [2731 done /2112 queued / 16 running / 182 errors / 65% coverage ] ****** [2731 done /2112 queued / 16 running / 182 errors / 65% coverage ] ****** [2732 done /2113 queued / 16 running / 182 errors / 65% coverage ] ****** [2732 done /2113 queued / 16 running / 182 errors / 65% coverage ] ****** [2733 done /2113 queued / 16 running / 182 errors / 65% coverage ] ****** [2733 done /2113 queued / 16 running / 182 errors / 65% coverage ] ****** [2734 done /2116 queued / 16 running / 182 errors / 65% coverage ] ****** [2734 done /2116 queued / 16 running / 182 errors / 65% coverage ] ****** [2735 done /2118 queued / 16 running / 182 errors / 65% coverage ] ****** [2735 done /2118 queued / 16 running / 182 errors / 65% coverage ] ****** [2736 done /2118 queued / 16 running / 182 errors / 65% coverage ] ****** [2736 done /2118 queued / 16 running / 182 errors / 65% coverage ] ****** [2737 done /2118 queued / 16 running / 182 errors / 65% coverage ] ****** [2737 done /2118 queued / 16 running / 182 errors / 65% coverage ] ****** [2738 done /2118 queued / 16 running / 182 errors / 65% coverage ] ****** [2738 done /2118 queued / 16 running / 182 errors / 65% coverage ] ****** [2739 done /2121 queued / 16 running / 182 errors / 65% coverage ] ****** [2739 done /2121 queued / 16 running / 182 errors / 65% coverage ] ****** [2740 done /2121 queued / 16 running / 182 errors / 65% coverage ] ****** [2740 done /2121 queued / 16 running / 182 errors / 65% coverage ] ****** [2741 done /2122 queued / 16 running / 182 errors / 65% coverage ] ****** [2741 done /2122 queued / 16 running / 182 errors / 65% coverage ] ****** [2742 done /2123 queued / 16 running / 182 errors / 65% coverage ] ****** [2742 done /2123 queued / 16 running / 182 errors / 65% coverage ] ****** [2743 done /2123 queued / 16 running / 182 errors / 65% coverage ] ****** [2743 done /2123 queued / 16 running / 182 errors / 65% coverage ] ****** [2744 done /2124 queued / 16 running / 182 errors / 65% coverage ] ****** [2744 done /2124 queued / 16 running / 182 errors / 65% coverage ] ****** [2745 done /2123 queued / 16 running / 182 errors / 65% coverage ] ****** [2745 done /2123 queued / 16 running / 182 errors / 65% coverage ] ****** [2746 done /2123 queued / 16 running / 182 errors / 65% coverage ] ****** [2746 done /2123 queued / 16 running / 182 errors / 65% coverage ] ****** [2747 done /2124 queued / 16 running / 182 errors / 65% coverage ] ****** [2747 done /2124 queued / 16 running / 182 errors / 65% coverage ] ****** [2748 done /2125 queued / 16 running / 182 errors / 65% coverage ] ****** [2748 done /2125 queued / 16 running / 182 errors / 65% coverage ] ****** [2749 done /2128 queued / 16 running / 182 errors / 65% coverage ] ****** [2749 done /2128 queued / 16 running / 182 errors / 65% coverage ] ****** [2750 done /2129 queued / 16 running / 182 errors / 65% coverage ] ****** [2750 done /2129 queued / 16 running / 182 errors / 65% coverage ] ****** [2751 done /2129 queued / 16 running / 182 errors / 65% coverage ] ****** [2751 done /2129 queued / 16 running / 182 errors / 65% coverage ] ****** [2752 done /2131 queued / 16 running / 182 errors / 65% coverage ] ****** [2752 done /2131 queued / 16 running / 182 errors / 65% coverage ] ****** [2753 done /2135 queued / 16 running / 182 errors / 65% coverage ] ****** [2753 done /2135 queued / 16 running / 182 errors / 65% coverage ] ****** [2754 done /2137 queued / 16 running / 182 errors / 65% coverage ] ****** [2754 done /2137 queued / 16 running / 182 errors / 65% coverage ] ****** [2755 done /2138 queued / 16 running / 182 errors / 65% coverage ] ****** [2755 done /2138 queued / 16 running / 182 errors / 65% coverage ] ****** [2756 done /2139 queued / 16 running / 182 errors / 65% coverage ] ****** [2756 done /2139 queued / 16 running / 182 errors / 65% coverage ] ****** [2757 done /2141 queued / 16 running / 182 errors / 65% coverage ] ****** [2757 done /2141 queued / 16 running / 182 errors / 65% coverage ] ****** [2758 done /2142 queued / 16 running / 182 errors / 65% coverage ] ****** [2758 done /2142 queued / 16 running / 182 errors / 65% coverage ] ****** [2759 done /2144 queued / 16 running / 182 errors / 65% coverage ] ****** [2759 done /2144 queued / 16 running / 182 errors / 65% coverage ] ****** [2760 done /2145 queued / 16 running / 182 errors / 65% coverage ] ****** [2760 done /2145 queued / 16 running / 182 errors / 65% coverage ] ****** [2761 done /2147 queued / 16 running / 182 errors / 65% coverage ] ****** [2761 done /2147 queued / 16 running / 182 errors / 65% coverage ] ****** [2762 done /2148 queued / 16 running / 182 errors / 65% coverage ] ****** [2762 done /2148 queued / 16 running / 182 errors / 65% coverage ] ****** [2763 done /2151 queued / 16 running / 182 errors / 65% coverage ] ****** [2763 done /2151 queued / 16 running / 182 errors / 65% coverage ] ****** [2764 done /2153 queued / 16 running / 182 errors / 65% coverage ] ****** [2764 done /2153 queued / 16 running / 182 errors / 65% coverage ] ****** [2765 done /2156 queued / 16 running / 182 errors / 65% coverage ] ****** [2765 done /2156 queued / 16 running / 182 errors / 65% coverage ] ****** [2766 done /2157 queued / 16 running / 182 errors / 65% coverage ] ****** [2766 done /2157 queued / 16 running / 182 errors / 65% coverage ] ****** [2767 done /2157 queued / 16 running / 182 errors / 65% coverage ] ****** [2767 done /2157 queued / 16 running / 182 errors / 65% coverage ] ****** [2768 done /2157 queued / 16 running / 182 errors / 65% coverage ] ****** [2768 done /2157 queued / 16 running / 182 errors / 65% coverage ] ****** [2769 done /2159 queued / 16 running / 182 errors / 65% coverage ] ****** [2769 done /2159 queued / 16 running / 182 errors / 65% coverage ] ****** [2770 done /2160 queued / 16 running / 182 errors / 65% coverage ] ****** [2770 done /2160 queued / 16 running / 182 errors / 65% coverage ] ****** [2771 done /2160 queued / 16 running / 182 errors / 65% coverage ] ****** [2771 done /2160 queued / 16 running / 182 errors / 65% coverage ] ****** [2772 done /2160 queued / 16 running / 182 errors / 65% coverage ] ****** [2772 done /2160 queued / 16 running / 182 errors / 65% coverage ] ****** [2773 done /2159 queued / 16 running / 182 errors / 65% coverage ] ****** [2773 done /2159 queued / 16 running / 182 errors / 65% coverage ] ****** [2774 done /2158 queued / 16 running / 182 errors / 65% coverage ] ****** [2774 done /2158 queued / 16 running / 182 errors / 65% coverage ] ****** [2775 done /2157 queued / 16 running / 182 errors / 65% coverage ] ****** [2775 done /2157 queued / 16 running / 182 errors / 65% coverage ] ****** [2776 done /2158 queued / 16 running / 182 errors / 65% coverage ] ****** [2776 done /2158 queued / 16 running / 182 errors / 65% coverage ] ****** [2777 done /2158 queued / 16 running / 182 errors / 65% coverage ] ****** [2777 done /2158 queued / 16 running / 182 errors / 65% coverage ] ****** [2778 done /2158 queued / 16 running / 182 errors / 65% coverage ] ****** [2778 done /2158 queued / 16 running / 182 errors / 65% coverage ] ****** [2779 done /2157 queued / 16 running / 182 errors / 65% coverage ] ****** [2779 done /2157 queued / 16 running / 182 errors / 65% coverage ] ****** [2780 done /2157 queued / 16 running / 182 errors / 65% coverage ] ****** [2780 done /2157 queued / 16 running / 182 errors / 65% coverage ] ****** [2781 done /2156 queued / 16 running / 182 errors / 65% coverage ] ****** [2781 done /2156 queued / 16 running / 182 errors / 65% coverage ] ****** [2782 done /2157 queued / 16 running / 182 errors / 65% coverage ] ****** [2782 done /2157 queued / 16 running / 182 errors / 65% coverage ] ****** [2783 done /2156 queued / 16 running / 182 errors / 65% coverage ] ****** [2783 done /2156 queued / 16 running / 182 errors / 65% coverage ] ****** [2784 done /2158 queued / 16 running / 182 errors / 65% coverage ] ****** [2784 done /2158 queued / 16 running / 182 errors / 65% coverage ] ****** [2785 done /2160 queued / 16 running / 182 errors / 65% coverage ] ****** [2785 done /2160 queued / 16 running / 182 errors / 65% coverage ] ****** [2786 done /2165 queued / 16 running / 182 errors / 65% coverage ] ****** [2786 done /2165 queued / 16 running / 182 errors / 65% coverage ] ****** [2787 done /2165 queued / 16 running / 182 errors / 65% coverage ] ****** [2787 done /2165 queued / 16 running / 182 errors / 65% coverage ] ****** [2788 done /2166 queued / 16 running / 182 errors / 65% coverage ] ****** [2788 done /2166 queued / 16 running / 182 errors / 65% coverage ] ****** [2789 done /2168 queued / 16 running / 182 errors / 65% coverage ] ****** [2789 done /2168 queued / 16 running / 182 errors / 65% coverage ] ****** [2790 done /2169 queued / 16 running / 182 errors / 65% coverage ] ****** [2790 done /2169 queued / 16 running / 182 errors / 65% coverage ] ****** [2791 done /2172 queued / 16 running / 182 errors / 65% coverage ] ****** [2791 done /2172 queued / 16 running / 182 errors / 65% coverage ] ****** [2792 done /2173 queued / 16 running / 182 errors / 65% coverage ] ****** [2792 done /2173 queued / 16 running / 182 errors / 65% coverage ] ****** [2793 done /2174 queued / 16 running / 182 errors / 65% coverage ] ****** [2793 done /2174 queued / 16 running / 182 errors / 65% coverage ] ****** [2794 done /2174 queued / 16 running / 182 errors / 65% coverage ] ****** [2794 done /2174 queued / 16 running / 182 errors / 65% coverage ] ****** [2795 done /2177 queued / 16 running / 182 errors / 65% coverage ] ****** [2795 done /2177 queued / 16 running / 182 errors / 65% coverage ] ****** [2796 done /2180 queued / 16 running / 182 errors / 65% coverage ] ****** [2796 done /2180 queued / 16 running / 182 errors / 65% coverage ] ****** [2797 done /2185 queued / 16 running / 182 errors / 65% coverage ] ****** [2797 done /2185 queued / 16 running / 182 errors / 65% coverage ] ****** [2798 done /2184 queued / 16 running / 182 errors / 65% coverage ] ****** [2798 done /2184 queued / 16 running / 182 errors / 65% coverage ] ****** [2799 done /2184 queued / 16 running / 182 errors / 65% coverage ] ****** [2799 done /2184 queued / 16 running / 182 errors / 65% coverage ] ****** [2800 done /2185 queued / 16 running / 182 errors / 65% coverage ] ****** [2800 done /2185 queued / 16 running / 182 errors / 65% coverage ] ****** [2801 done /2186 queued / 16 running / 182 errors / 65% coverage ] ****** [2801 done /2186 queued / 16 running / 182 errors / 65% coverage ] ****** [2802 done /2186 queued / 16 running / 182 errors / 65% coverage ] ****** [2802 done /2186 queued / 16 running / 182 errors / 65% coverage ] ****** [2803 done /2187 queued / 16 running / 182 errors / 65% coverage ] ****** [2803 done /2187 queued / 16 running / 182 errors / 65% coverage ] ****** [2804 done /2187 queued / 16 running / 182 errors / 65% coverage ] ****** [2804 done /2187 queued / 16 running / 182 errors / 65% coverage ] ****** [2805 done /2189 queued / 16 running / 182 errors / 65% coverage ] ****** [2805 done /2189 queued / 16 running / 182 errors / 65% coverage ] ****** [2806 done /2191 queued / 16 running / 182 errors / 65% coverage ] ****** [2806 done /2191 queued / 16 running / 182 errors / 65% coverage ] ****** [2807 done /2192 queued / 16 running / 182 errors / 65% coverage ] ****** [2807 done /2192 queued / 16 running / 182 errors / 65% coverage ] ****** [2808 done /2193 queued / 16 running / 182 errors / 65% coverage ] ****** [2808 done /2193 queued / 16 running / 182 errors / 65% coverage ] ****** [2809 done /2194 queued / 16 running / 182 errors / 65% coverage ] ****** [2809 done /2194 queued / 16 running / 182 errors / 65% coverage ] ****** [2810 done /2193 queued / 16 running / 182 errors / 65% coverage ] ****** [2810 done /2193 queued / 16 running / 182 errors / 65% coverage ] ****** [2811 done /2192 queued / 16 running / 182 errors / 65% coverage ] ****** [2811 done /2192 queued / 16 running / 182 errors / 65% coverage ] ****** [2812 done /2191 queued / 16 running / 182 errors / 65% coverage ] ****** [2812 done /2191 queued / 16 running / 182 errors / 65% coverage ] ****** [2813 done /2193 queued / 16 running / 182 errors / 65% coverage ] ****** [2813 done /2193 queued / 16 running / 182 errors / 65% coverage ] ****** [2814 done /2193 queued / 16 running / 182 errors / 65% coverage ] ****** [2814 done /2193 queued / 16 running / 182 errors / 65% coverage ] ****** [2815 done /2194 queued / 16 running / 182 errors / 65% coverage ] ****** [2815 done /2194 queued / 16 running / 182 errors / 65% coverage ] ****** [2816 done /2195 queued / 16 running / 182 errors / 65% coverage ] ****** [2816 done /2195 queued / 16 running / 182 errors / 65% coverage ] ****** [2817 done /2196 queued / 16 running / 182 errors / 65% coverage ] ****** [2817 done /2196 queued / 16 running / 182 errors / 65% coverage ] ****** [2818 done /2197 queued / 16 running / 182 errors / 65% coverage ] ****** [2818 done /2197 queued / 16 running / 182 errors / 65% coverage ] ****** [2819 done /2198 queued / 16 running / 182 errors / 65% coverage ] ****** [2819 done /2198 queued / 16 running / 182 errors / 65% coverage ] ****** [2820 done /2200 queued / 16 running / 182 errors / 65% coverage ] ****** [2820 done /2200 queued / 16 running / 182 errors / 65% coverage ] ****** [2821 done /2199 queued / 16 running / 182 errors / 65% coverage ] ****** [2821 done /2199 queued / 16 running / 182 errors / 65% coverage ] ****** [2822 done /2200 queued / 16 running / 182 errors / 65% coverage ] ****** [2822 done /2200 queued / 16 running / 182 errors / 65% coverage ] ****** [2823 done /2203 queued / 16 running / 182 errors / 65% coverage ] ****** [2823 done /2203 queued / 16 running / 182 errors / 65% coverage ] ****** [2824 done /2203 queued / 16 running / 182 errors / 65% coverage ] ****** [2824 done /2203 queued / 16 running / 182 errors / 65% coverage ] ****** [2825 done /2202 queued / 16 running / 182 errors / 65% coverage ] ****** [2825 done /2202 queued / 16 running / 182 errors / 65% coverage ] ****** [2826 done /2202 queued / 16 running / 182 errors / 65% coverage ] ****** [2826 done /2202 queued / 16 running / 182 errors / 65% coverage ] ****** [2827 done /2206 queued / 16 running / 182 errors / 65% coverage ] ****** [2827 done /2206 queued / 16 running / 182 errors / 65% coverage ] ****** [2828 done /2209 queued / 16 running / 182 errors / 65% coverage ] ****** [2828 done /2209 queued / 16 running / 182 errors / 65% coverage ] ****** [2829 done /2212 queued / 16 running / 182 errors / 65% coverage ] ****** [2829 done /2212 queued / 16 running / 182 errors / 65% coverage ] ****** [2830 done /2213 queued / 16 running / 182 errors / 65% coverage ] ****** [2830 done /2213 queued / 16 running / 182 errors / 65% coverage ] ****** [2831 done /2215 queued / 16 running / 182 errors / 65% coverage ] ****** [2831 done /2215 queued / 16 running / 182 errors / 65% coverage ] ****** [2832 done /2218 queued / 16 running / 182 errors / 65% coverage ] ****** [2832 done /2218 queued / 16 running / 182 errors / 65% coverage ] ****** [2833 done /2220 queued / 16 running / 182 errors / 65% coverage ] ****** [2833 done /2220 queued / 16 running / 182 errors / 65% coverage ] ****** [2834 done /2221 queued / 16 running / 182 errors / 65% coverage ] ****** [2834 done /2221 queued / 16 running / 182 errors / 65% coverage ] ****** [2835 done /2222 queued / 16 running / 182 errors / 65% coverage ] ****** [2835 done /2222 queued / 16 running / 182 errors / 65% coverage ] ****** [2836 done /2223 queued / 16 running / 182 errors / 65% coverage ] ****** [2836 done /2223 queued / 16 running / 182 errors / 65% coverage ] ****** [2837 done /2224 queued / 16 running / 182 errors / 65% coverage ] ****** [2837 done /2224 queued / 16 running / 182 errors / 65% coverage ] ****** [2838 done /2226 queued / 16 running / 182 errors / 65% coverage ] ****** [2838 done /2226 queued / 16 running / 182 errors / 65% coverage ] ****** [2839 done /2225 queued / 16 running / 182 errors / 65% coverage ] ****** [2839 done /2225 queued / 16 running / 182 errors / 65% coverage ] ****** [2840 done /2225 queued / 16 running / 182 errors / 65% coverage ] ****** [2840 done /2225 queued / 16 running / 182 errors / 65% coverage ] ****** [2841 done /2224 queued / 16 running / 182 errors / 65% coverage ] ****** [2841 done /2224 queued / 16 running / 182 errors / 65% coverage ] ****** [2842 done /2223 queued / 16 running / 182 errors / 65% coverage ] ****** [2842 done /2223 queued / 16 running / 182 errors / 65% coverage ] ****** [2843 done /2223 queued / 16 running / 182 errors / 65% coverage ] ****** [2843 done /2223 queued / 16 running / 182 errors / 65% coverage ] ****** [2844 done /2223 queued / 16 running / 182 errors / 65% coverage ] ****** [2844 done /2223 queued / 16 running / 182 errors / 65% coverage ] ****** [2845 done /2222 queued / 16 running / 182 errors / 65% coverage ] ****** [2845 done /2222 queued / 16 running / 182 errors / 65% coverage ] ****** [2846 done /2222 queued / 16 running / 182 errors / 65% coverage ] ****** [2846 done /2222 queued / 16 running / 182 errors / 65% coverage ] ****** [2847 done /2222 queued / 16 running / 182 errors / 65% coverage ] ****** [2847 done /2222 queued / 16 running / 182 errors / 65% coverage ] ****** [2848 done /2221 queued / 16 running / 182 errors / 65% coverage ] ****** [2848 done /2221 queued / 16 running / 182 errors / 65% coverage ] ****** [2849 done /2220 queued / 16 running / 182 errors / 65% coverage ] ****** [2849 done /2220 queued / 16 running / 182 errors / 65% coverage ] ****** [2850 done /2219 queued / 16 running / 182 errors / 65% coverage ] ****** [2850 done /2219 queued / 16 running / 182 errors / 65% coverage ] ****** [2851 done /2218 queued / 16 running / 182 errors / 65% coverage ] ****** [2851 done /2218 queued / 16 running / 182 errors / 65% coverage ] ****** [2852 done /2219 queued / 16 running / 182 errors / 65% coverage ] ****** [2852 done /2219 queued / 16 running / 182 errors / 65% coverage ] ****** [2853 done /2221 queued / 16 running / 182 errors / 65% coverage ] ****** [2853 done /2221 queued / 16 running / 182 errors / 65% coverage ] ****** [2854 done /2220 queued / 16 running / 182 errors / 65% coverage ] ****** [2854 done /2220 queued / 16 running / 182 errors / 65% coverage ] ****** [2855 done /2220 queued / 16 running / 182 errors / 65% coverage ] ****** [2855 done /2220 queued / 16 running / 182 errors / 65% coverage ] ****** [2856 done /2220 queued / 16 running / 182 errors / 65% coverage ] ****** [2856 done /2220 queued / 16 running / 182 errors / 65% coverage ] ****** [2857 done /2220 queued / 16 running / 182 errors / 65% coverage ] ****** [2857 done /2220 queued / 16 running / 182 errors / 65% coverage ] ****** [2858 done /2221 queued / 16 running / 182 errors / 65% coverage ] ****** [2858 done /2221 queued / 16 running / 182 errors / 65% coverage ] ****** [2859 done /2220 queued / 16 running / 182 errors / 65% coverage ] ****** [2859 done /2220 queued / 16 running / 182 errors / 65% coverage ] ****** [2860 done /2221 queued / 16 running / 182 errors / 65% coverage ] ****** [2860 done /2221 queued / 16 running / 182 errors / 65% coverage ] ****** [2861 done /2223 queued / 16 running / 182 errors / 65% coverage ] ****** [2861 done /2223 queued / 16 running / 182 errors / 65% coverage ] ****** [2862 done /2224 queued / 16 running / 182 errors / 65% coverage ] ****** [2862 done /2224 queued / 16 running / 182 errors / 65% coverage ] ****** [2863 done /2225 queued / 16 running / 182 errors / 65% coverage ] ****** [2863 done /2225 queued / 16 running / 182 errors / 65% coverage ] ****** [2864 done /2226 queued / 16 running / 182 errors / 65% coverage ] ****** [2864 done /2226 queued / 16 running / 182 errors / 65% coverage ] ****** [2865 done /2227 queued / 16 running / 182 errors / 65% coverage ] ****** [2865 done /2227 queued / 16 running / 182 errors / 65% coverage ] ****** [2866 done /2230 queued / 16 running / 182 errors / 65% coverage ] ****** [2866 done /2230 queued / 16 running / 182 errors / 65% coverage ] ****** [2867 done /2231 queued / 16 running / 182 errors / 65% coverage ] ****** [2867 done /2231 queued / 16 running / 182 errors / 65% coverage ] ****** [2868 done /2232 queued / 16 running / 182 errors / 65% coverage ] ****** [2868 done /2232 queued / 16 running / 182 errors / 65% coverage ] ****** [2869 done /2233 queued / 16 running / 182 errors / 65% coverage ] ****** [2869 done /2233 queued / 16 running / 182 errors / 65% coverage ] ****** [2870 done /2234 queued / 16 running / 182 errors / 65% coverage ] ****** [2870 done /2234 queued / 16 running / 182 errors / 65% coverage ] ****** [2871 done /2237 queued / 16 running / 182 errors / 65% coverage ] ****** [2871 done /2237 queued / 16 running / 182 errors / 65% coverage ] ****** [2872 done /2237 queued / 16 running / 182 errors / 65% coverage ] ****** [2872 done /2237 queued / 16 running / 182 errors / 65% coverage ] ****** [2873 done /2238 queued / 16 running / 182 errors / 65% coverage ] ****** [2873 done /2238 queued / 16 running / 182 errors / 65% coverage ] ****** [2874 done /2239 queued / 16 running / 182 errors / 65% coverage ] ****** [2874 done /2239 queued / 16 running / 182 errors / 65% coverage ] ****** [2875 done /2240 queued / 16 running / 182 errors / 65% coverage ] ****** [2875 done /2240 queued / 16 running / 182 errors / 65% coverage ] ****** [2876 done /2241 queued / 16 running / 182 errors / 65% coverage ] ****** [2876 done /2241 queued / 16 running / 182 errors / 65% coverage ] ****** [2877 done /2240 queued / 16 running / 182 errors / 65% coverage ] ****** [2877 done /2240 queued / 16 running / 182 errors / 65% coverage ] ****** [2878 done /2241 queued / 16 running / 182 errors / 65% coverage ] ****** [2878 done /2241 queued / 16 running / 182 errors / 65% coverage ] ****** [2879 done /2242 queued / 16 running / 182 errors / 65% coverage ] ****** [2879 done /2242 queued / 16 running / 182 errors / 65% coverage ] ****** [2880 done /2241 queued / 16 running / 182 errors / 65% coverage ] ****** [2880 done /2241 queued / 16 running / 182 errors / 65% coverage ] ****** [2881 done /2241 queued / 16 running / 182 errors / 65% coverage ] ****** [2881 done /2241 queued / 16 running / 182 errors / 65% coverage ] ****** [2882 done /2240 queued / 16 running / 182 errors / 65% coverage ] ****** [2882 done /2240 queued / 16 running / 182 errors / 65% coverage ] ****** [2883 done /2239 queued / 16 running / 182 errors / 65% coverage ] ****** [2883 done /2239 queued / 16 running / 182 errors / 65% coverage ] ****** [2884 done /2239 queued / 16 running / 182 errors / 65% coverage ] ****** [2884 done /2239 queued / 16 running / 182 errors / 65% coverage ] ****** [2885 done /2240 queued / 16 running / 182 errors / 65% coverage ] ****** [2885 done /2240 queued / 16 running / 182 errors / 65% coverage ] ****** [2886 done /2239 queued / 16 running / 182 errors / 65% coverage ] ****** [2886 done /2239 queued / 16 running / 182 errors / 65% coverage ] ****** [2887 done /2238 queued / 16 running / 182 errors / 65% coverage ] ****** [2887 done /2238 queued / 16 running / 182 errors / 65% coverage ] ****** [2888 done /2238 queued / 16 running / 182 errors / 65% coverage ] ****** [2888 done /2238 queued / 16 running / 182 errors / 65% coverage ] ****** [2889 done /2239 queued / 16 running / 182 errors / 65% coverage ] ****** [2889 done /2239 queued / 16 running / 182 errors / 65% coverage ] ****** [2890 done /2238 queued / 16 running / 182 errors / 65% coverage ] ****** [2890 done /2238 queued / 16 running / 182 errors / 65% coverage ] ****** [2891 done /2238 queued / 16 running / 182 errors / 65% coverage ] ****** [2891 done /2238 queued / 16 running / 182 errors / 65% coverage ] ****** [2892 done /2237 queued / 16 running / 182 errors / 65% coverage ] ****** [2892 done /2237 queued / 16 running / 182 errors / 65% coverage ] ****** [2893 done /2237 queued / 16 running / 182 errors / 65% coverage ] ****** [2893 done /2237 queued / 16 running / 182 errors / 65% coverage ] ****** [2894 done /2236 queued / 16 running / 182 errors / 65% coverage ] ****** [2894 done /2236 queued / 16 running / 182 errors / 65% coverage ] ****** [2895 done /2236 queued / 16 running / 182 errors / 65% coverage ] ****** [2895 done /2236 queued / 16 running / 182 errors / 65% coverage ] ****** [2896 done /2235 queued / 16 running / 182 errors / 65% coverage ] ****** [2896 done /2235 queued / 16 running / 182 errors / 65% coverage ] ****** [2897 done /2236 queued / 16 running / 182 errors / 65% coverage ] ****** [2897 done /2236 queued / 16 running / 182 errors / 65% coverage ] ****** [2898 done /2235 queued / 16 running / 182 errors / 65% coverage ] ****** [2898 done /2235 queued / 16 running / 182 errors / 65% coverage ] ****** [2899 done /2234 queued / 16 running / 182 errors / 65% coverage ] ****** [2899 done /2234 queued / 16 running / 182 errors / 65% coverage ] ****** [2900 done /2233 queued / 16 running / 182 errors / 65% coverage ] ****** [2900 done /2233 queued / 16 running / 182 errors / 65% coverage ] ****** [2901 done /2232 queued / 16 running / 182 errors / 65% coverage ] ****** [2901 done /2232 queued / 16 running / 182 errors / 65% coverage ] ****** [2902 done /2232 queued / 16 running / 182 errors / 65% coverage ] ****** [2902 done /2232 queued / 16 running / 182 errors / 65% coverage ] ****** [2903 done /2231 queued / 16 running / 182 errors / 65% coverage ] ****** [2903 done /2231 queued / 16 running / 182 errors / 65% coverage ] ****** [2904 done /2232 queued / 16 running / 182 errors / 65% coverage ] ****** [2904 done /2232 queued / 16 running / 182 errors / 65% coverage ] ****** [2905 done /2234 queued / 16 running / 182 errors / 65% coverage ] ****** [2905 done /2234 queued / 16 running / 182 errors / 65% coverage ] ****** [2906 done /2236 queued / 16 running / 182 errors / 65% coverage ] ****** [2906 done /2236 queued / 16 running / 182 errors / 65% coverage ] ****** [2907 done /2235 queued / 16 running / 182 errors / 65% coverage ] ****** [2907 done /2235 queued / 16 running / 182 errors / 65% coverage ] ****** [2908 done /2235 queued / 16 running / 182 errors / 65% coverage ] ****** [2908 done /2235 queued / 16 running / 182 errors / 65% coverage ] ****** [2909 done /2236 queued / 16 running / 182 errors / 65% coverage ] ****** [2909 done /2236 queued / 16 running / 182 errors / 65% coverage ] ****** [2910 done /2241 queued / 16 running / 182 errors / 65% coverage ] ****** [2910 done /2241 queued / 16 running / 182 errors / 65% coverage ] ****** [2911 done /2242 queued / 16 running / 182 errors / 65% coverage ] ****** [2911 done /2242 queued / 16 running / 182 errors / 65% coverage ] ****** [2912 done /2242 queued / 16 running / 182 errors / 65% coverage ] ****** [2912 done /2242 queued / 16 running / 182 errors / 65% coverage ] ****** [2913 done /2244 queued / 16 running / 182 errors / 65% coverage ] ****** [2913 done /2244 queued / 16 running / 182 errors / 65% coverage ] ****** [2914 done /2243 queued / 16 running / 182 errors / 65% coverage ] ****** [2914 done /2243 queued / 16 running / 182 errors / 65% coverage ] ****** [2915 done /2245 queued / 16 running / 182 errors / 65% coverage ] ****** [2915 done /2245 queued / 16 running / 182 errors / 65% coverage ] ****** [2916 done /2247 queued / 16 running / 182 errors / 65% coverage ] ****** [2916 done /2247 queued / 16 running / 182 errors / 65% coverage ] ****** [2917 done /2249 queued / 16 running / 182 errors / 65% coverage ] ****** [2917 done /2249 queued / 16 running / 182 errors / 65% coverage ] ****** [2918 done /2250 queued / 16 running / 182 errors / 65% coverage ] ****** [2918 done /2250 queued / 16 running / 182 errors / 65% coverage ] ****** [2919 done /2251 queued / 16 running / 182 errors / 65% coverage ] ****** [2919 done /2251 queued / 16 running / 182 errors / 65% coverage ] ****** [2920 done /2250 queued / 16 running / 182 errors / 65% coverage ] ****** [2920 done /2250 queued / 16 running / 182 errors / 65% coverage ] ****** [2921 done /2254 queued / 16 running / 182 errors / 65% coverage ] ****** [2921 done /2254 queued / 16 running / 182 errors / 65% coverage ] ****** [2922 done /2254 queued / 16 running / 182 errors / 65% coverage ] ****** [2922 done /2254 queued / 16 running / 182 errors / 65% coverage ] ****** [2923 done /2255 queued / 16 running / 182 errors / 65% coverage ] ****** [2923 done /2255 queued / 16 running / 182 errors / 65% coverage ] ****** [2924 done /2256 queued / 16 running / 182 errors / 65% coverage ] ****** [2924 done /2256 queued / 16 running / 182 errors / 65% coverage ] ****** [2925 done /2259 queued / 16 running / 182 errors / 65% coverage ] ****** [2925 done /2259 queued / 16 running / 182 errors / 65% coverage ] ****** [2926 done /2261 queued / 16 running / 182 errors / 65% coverage ] ****** [2926 done /2261 queued / 16 running / 182 errors / 65% coverage ] ****** [2927 done /2262 queued / 16 running / 182 errors / 65% coverage ] ****** [2927 done /2262 queued / 16 running / 182 errors / 65% coverage ] ****** [2928 done /2263 queued / 16 running / 182 errors / 65% coverage ] ****** [2928 done /2263 queued / 16 running / 182 errors / 65% coverage ] ****** [2929 done /2264 queued / 16 running / 182 errors / 65% coverage ] ****** [2929 done /2264 queued / 16 running / 182 errors / 65% coverage ] ****** [2930 done /2265 queued / 16 running / 182 errors / 65% coverage ] ****** [2930 done /2265 queued / 16 running / 182 errors / 65% coverage ] ****** [2931 done /2265 queued / 16 running / 182 errors / 65% coverage ] ****** [2931 done /2265 queued / 16 running / 182 errors / 65% coverage ] ****** [2932 done /2267 queued / 16 running / 182 errors / 65% coverage ] ****** [2932 done /2267 queued / 16 running / 182 errors / 65% coverage ] ****** [2933 done /2269 queued / 16 running / 182 errors / 65% coverage ] ****** [2933 done /2269 queued / 16 running / 182 errors / 65% coverage ] ****** [2934 done /2269 queued / 16 running / 182 errors / 65% coverage ] ****** [2934 done /2269 queued / 16 running / 182 errors / 65% coverage ] ****** [2935 done /2269 queued / 16 running / 182 errors / 65% coverage ] ****** [2935 done /2269 queued / 16 running / 182 errors / 65% coverage ] ****** [2936 done /2268 queued / 16 running / 182 errors / 65% coverage ] ****** [2936 done /2268 queued / 16 running / 182 errors / 65% coverage ] ****** [2937 done /2269 queued / 16 running / 182 errors / 65% coverage ] ****** [2937 done /2269 queued / 16 running / 182 errors / 65% coverage ] ****** [2938 done /2269 queued / 16 running / 182 errors / 65% coverage ] ****** [2938 done /2269 queued / 16 running / 182 errors / 65% coverage ] ****** [2939 done /2269 queued / 16 running / 182 errors / 65% coverage ] ****** [2939 done /2269 queued / 16 running / 182 errors / 65% coverage ] ****** [2940 done /2272 queued / 16 running / 182 errors / 65% coverage ] ****** [2940 done /2272 queued / 16 running / 182 errors / 65% coverage ] ****** [2941 done /2272 queued / 16 running / 182 errors / 65% coverage ] ****** [2941 done /2272 queued / 16 running / 182 errors / 65% coverage ] ****** [2942 done /2275 queued / 16 running / 182 errors / 65% coverage ] ****** [2942 done /2275 queued / 16 running / 182 errors / 65% coverage ] ****** [2943 done /2276 queued / 16 running / 182 errors / 65% coverage ] ****** [2943 done /2276 queued / 16 running / 182 errors / 65% coverage ] ****** [2944 done /2277 queued / 16 running / 182 errors / 65% coverage ] ****** [2944 done /2277 queued / 16 running / 182 errors / 65% coverage ] ****** [2945 done /2281 queued / 16 running / 182 errors / 65% coverage ] ****** [2945 done /2281 queued / 16 running / 182 errors / 65% coverage ] ****** [2946 done /2282 queued / 16 running / 182 errors / 65% coverage ] ****** [2946 done /2282 queued / 16 running / 182 errors / 65% coverage ] ****** [2947 done /2286 queued / 16 running / 182 errors / 65% coverage ] ****** [2947 done /2286 queued / 16 running / 182 errors / 65% coverage ] ****** [2948 done /2291 queued / 16 running / 182 errors / 65% coverage ] ****** [2948 done /2291 queued / 16 running / 182 errors / 65% coverage ] ****** [2949 done /2291 queued / 16 running / 182 errors / 65% coverage ] ****** [2949 done /2291 queued / 16 running / 182 errors / 65% coverage ] ****** [2950 done /2291 queued / 16 running / 182 errors / 65% coverage ] ****** [2950 done /2291 queued / 16 running / 182 errors / 65% coverage ] ****** [2951 done /2292 queued / 16 running / 182 errors / 65% coverage ] ****** [2951 done /2292 queued / 16 running / 182 errors / 65% coverage ] ****** [2952 done /2293 queued / 16 running / 182 errors / 65% coverage ] ****** [2952 done /2293 queued / 16 running / 182 errors / 65% coverage ] ****** [2953 done /2293 queued / 16 running / 182 errors / 65% coverage ] ****** [2953 done /2293 queued / 16 running / 182 errors / 65% coverage ] ****** [2954 done /2297 queued / 16 running / 182 errors / 65% coverage ] ****** [2954 done /2297 queued / 16 running / 182 errors / 65% coverage ] ****** [2955 done /2299 queued / 16 running / 182 errors / 65% coverage ] ****** [2955 done /2299 queued / 16 running / 182 errors / 65% coverage ] ****** [2956 done /2300 queued / 16 running / 182 errors / 65% coverage ] ****** [2956 done /2300 queued / 16 running / 182 errors / 65% coverage ] ****** [2957 done /2301 queued / 16 running / 182 errors / 65% coverage ] ****** [2957 done /2301 queued / 16 running / 182 errors / 65% coverage ] ****** [2958 done /2303 queued / 16 running / 182 errors / 65% coverage ] ****** [2958 done /2303 queued / 16 running / 182 errors / 65% coverage ] ****** [2959 done /2302 queued / 16 running / 182 errors / 65% coverage ] ****** [2959 done /2302 queued / 16 running / 182 errors / 65% coverage ] ****** [2960 done /2305 queued / 16 running / 182 errors / 65% coverage ] ****** [2960 done /2305 queued / 16 running / 182 errors / 65% coverage ] ****** [2961 done /2306 queued / 16 running / 182 errors / 65% coverage ] ****** [2961 done /2306 queued / 16 running / 182 errors / 65% coverage ] ****** [2962 done /2306 queued / 16 running / 182 errors / 65% coverage ] ****** [2962 done /2306 queued / 16 running / 182 errors / 65% coverage ] ****** [2963 done /2306 queued / 16 running / 182 errors / 65% coverage ] ****** [2963 done /2306 queued / 16 running / 182 errors / 65% coverage ] ****** [2964 done /2307 queued / 16 running / 182 errors / 65% coverage ] ****** [2964 done /2307 queued / 16 running / 182 errors / 65% coverage ] ****** [2965 done /2307 queued / 16 running / 182 errors / 65% coverage ] ****** [2965 done /2307 queued / 16 running / 182 errors / 65% coverage ] ****** [2966 done /2308 queued / 16 running / 182 errors / 65% coverage ] ****** [2966 done /2308 queued / 16 running / 182 errors / 65% coverage ] ****** [2967 done /2309 queued / 16 running / 182 errors / 65% coverage ] ****** [2967 done /2309 queued / 16 running / 182 errors / 65% coverage ] ****** [2968 done /2309 queued / 16 running / 182 errors / 65% coverage ] ****** [2968 done /2309 queued / 16 running / 182 errors / 65% coverage ] ****** [2969 done /2309 queued / 16 running / 182 errors / 65% coverage ] ****** [2969 done /2309 queued / 16 running / 182 errors / 65% coverage ] ****** [2970 done /2309 queued / 16 running / 182 errors / 65% coverage ] ****** [2970 done /2309 queued / 16 running / 182 errors / 65% coverage ] ****** [2971 done /2310 queued / 16 running / 182 errors / 65% coverage ] ****** [2971 done /2310 queued / 16 running / 182 errors / 65% coverage ] ****** [2972 done /2310 queued / 16 running / 182 errors / 65% coverage ] ****** [2972 done /2310 queued / 16 running / 182 errors / 65% coverage ] ****** [2973 done /2310 queued / 16 running / 182 errors / 65% coverage ] ****** [2973 done /2310 queued / 16 running / 182 errors / 65% coverage ] ****** [2974 done /2311 queued / 16 running / 182 errors / 65% coverage ] ****** [2974 done /2311 queued / 16 running / 182 errors / 65% coverage ] ****** [2975 done /2311 queued / 16 running / 182 errors / 65% coverage ] ****** [2975 done /2311 queued / 16 running / 182 errors / 65% coverage ] ****** [2976 done /2312 queued / 16 running / 182 errors / 65% coverage ] ****** [2976 done /2312 queued / 16 running / 182 errors / 65% coverage ] ****** [2977 done /2314 queued / 16 running / 182 errors / 65% coverage ] ****** [2977 done /2314 queued / 16 running / 182 errors / 65% coverage ] ****** [2978 done /2315 queued / 16 running / 182 errors / 65% coverage ] ****** [2978 done /2315 queued / 16 running / 182 errors / 65% coverage ] ****** [2979 done /2317 queued / 16 running / 182 errors / 65% coverage ] ****** [2979 done /2317 queued / 16 running / 182 errors / 65% coverage ] ****** [2980 done /2317 queued / 16 running / 182 errors / 65% coverage ] ****** [2980 done /2317 queued / 16 running / 182 errors / 65% coverage ] ****** [2981 done /2320 queued / 16 running / 182 errors / 65% coverage ] ****** [2981 done /2320 queued / 16 running / 182 errors / 65% coverage ] ****** [2982 done /2319 queued / 16 running / 182 errors / 65% coverage ] ****** [2982 done /2319 queued / 16 running / 182 errors / 65% coverage ] ****** [2983 done /2319 queued / 16 running / 182 errors / 65% coverage ] ****** [2983 done /2319 queued / 16 running / 182 errors / 65% coverage ] ****** [2984 done /2320 queued / 16 running / 182 errors / 65% coverage ] ****** [2984 done /2320 queued / 16 running / 182 errors / 65% coverage ] ****** [2985 done /2323 queued / 16 running / 182 errors / 65% coverage ] ****** [2985 done /2323 queued / 16 running / 182 errors / 65% coverage ] ****** [2986 done /2324 queued / 16 running / 182 errors / 65% coverage ] ****** [2986 done /2324 queued / 16 running / 182 errors / 65% coverage ] ****** [2987 done /2325 queued / 16 running / 182 errors / 65% coverage ] ****** [2987 done /2325 queued / 16 running / 182 errors / 65% coverage ] ****** [2988 done /2326 queued / 16 running / 182 errors / 65% coverage ] ****** [2988 done /2326 queued / 16 running / 182 errors / 65% coverage ] ****** [2989 done /2327 queued / 16 running / 182 errors / 65% coverage ] ****** [2989 done /2327 queued / 16 running / 182 errors / 65% coverage ] ****** [2990 done /2333 queued / 16 running / 182 errors / 65% coverage ] ****** [2990 done /2333 queued / 16 running / 182 errors / 65% coverage ] ****** [2991 done /2334 queued / 16 running / 182 errors / 65% coverage ] ****** [2991 done /2334 queued / 16 running / 182 errors / 65% coverage ] ****** [2992 done /2335 queued / 16 running / 182 errors / 65% coverage ] ****** [2992 done /2335 queued / 16 running / 182 errors / 65% coverage ] ****** [2993 done /2336 queued / 16 running / 182 errors / 65% coverage ] ****** [2993 done /2336 queued / 16 running / 182 errors / 65% coverage ] ****** [2994 done /2339 queued / 16 running / 182 errors / 65% coverage ] ****** [2994 done /2339 queued / 16 running / 182 errors / 65% coverage ] ****** [2995 done /2340 queued / 16 running / 182 errors / 65% coverage ] ****** [2995 done /2340 queued / 16 running / 182 errors / 65% coverage ] ****** [2996 done /2343 queued / 16 running / 182 errors / 65% coverage ] ****** [2996 done /2343 queued / 16 running / 182 errors / 65% coverage ] ****** [2997 done /2345 queued / 16 running / 182 errors / 65% coverage ] ****** [2997 done /2345 queued / 16 running / 182 errors / 65% coverage ] ****** [2998 done /2346 queued / 16 running / 182 errors / 65% coverage ] ****** [2998 done /2346 queued / 16 running / 182 errors / 65% coverage ] ****** [2999 done /2351 queued / 16 running / 182 errors / 65% coverage ] ****** [2999 done /2351 queued / 16 running / 182 errors / 65% coverage ] ****** [3000 done /2352 queued / 16 running / 182 errors / 65% coverage ] ****** [3000 done /2352 queued / 16 running / 182 errors / 65% coverage ] ****** [3001 done /2352 queued / 16 running / 182 errors / 65% coverage ] ****** [3001 done /2352 queued / 16 running / 182 errors / 65% coverage ] ****** [3002 done /2351 queued / 16 running / 182 errors / 65% coverage ] ****** [3002 done /2351 queued / 16 running / 182 errors / 65% coverage ] ****** [3003 done /2350 queued / 16 running / 182 errors / 65% coverage ] ****** [3003 done /2350 queued / 16 running / 182 errors / 65% coverage ] ****** [3004 done /2349 queued / 16 running / 182 errors / 65% coverage ] ****** [3004 done /2349 queued / 16 running / 182 errors / 65% coverage ] ****** [3005 done /2348 queued / 16 running / 182 errors / 65% coverage ] ****** [3005 done /2348 queued / 16 running / 182 errors / 65% coverage ] ****** [3006 done /2350 queued / 16 running / 182 errors / 65% coverage ] ****** [3006 done /2350 queued / 16 running / 182 errors / 65% coverage ] ****** [3007 done /2352 queued / 16 running / 182 errors / 65% coverage ] ****** [3007 done /2352 queued / 16 running / 182 errors / 65% coverage ] ****** [3008 done /2355 queued / 16 running / 182 errors / 65% coverage ] ****** [3008 done /2355 queued / 16 running / 182 errors / 65% coverage ] ****** [3009 done /2354 queued / 16 running / 182 errors / 65% coverage ] ****** [3009 done /2354 queued / 16 running / 182 errors / 65% coverage ] ****** [3010 done /2353 queued / 16 running / 182 errors / 65% coverage ] ****** [3010 done /2353 queued / 16 running / 182 errors / 65% coverage ] ****** [3011 done /2353 queued / 16 running / 182 errors / 65% coverage ] ****** [3011 done /2353 queued / 16 running / 182 errors / 65% coverage ] ****** [3012 done /2354 queued / 16 running / 182 errors / 65% coverage ] ****** [3012 done /2354 queued / 16 running / 182 errors / 65% coverage ] ****** [3013 done /2353 queued / 16 running / 182 errors / 65% coverage ] ****** [3013 done /2353 queued / 16 running / 182 errors / 65% coverage ] ****** [3014 done /2355 queued / 16 running / 182 errors / 65% coverage ] ****** [3014 done /2355 queued / 16 running / 182 errors / 65% coverage ] ****** [3015 done /2355 queued / 16 running / 182 errors / 65% coverage ] ****** [3015 done /2355 queued / 16 running / 182 errors / 65% coverage ] ****** [3016 done /2356 queued / 16 running / 182 errors / 65% coverage ] ****** [3016 done /2356 queued / 16 running / 182 errors / 65% coverage ] ****** [3017 done /2355 queued / 16 running / 182 errors / 65% coverage ] ****** [3017 done /2355 queued / 16 running / 182 errors / 65% coverage ] ****** [3018 done /2356 queued / 16 running / 182 errors / 65% coverage ] ****** [3018 done /2356 queued / 16 running / 182 errors / 65% coverage ] ****** [3019 done /2357 queued / 16 running / 182 errors / 65% coverage ] ****** [3019 done /2357 queued / 16 running / 182 errors / 65% coverage ] ****** [3020 done /2359 queued / 16 running / 182 errors / 65% coverage ] ****** [3020 done /2359 queued / 16 running / 182 errors / 65% coverage ] ****** [3021 done /2360 queued / 16 running / 182 errors / 65% coverage ] ****** [3021 done /2360 queued / 16 running / 182 errors / 65% coverage ] ****** [3022 done /2361 queued / 16 running / 182 errors / 65% coverage ] ****** [3022 done /2361 queued / 16 running / 182 errors / 65% coverage ] ****** [3023 done /2363 queued / 16 running / 182 errors / 65% coverage ] ****** [3023 done /2363 queued / 16 running / 182 errors / 65% coverage ] ****** [3024 done /2364 queued / 16 running / 182 errors / 65% coverage ] ****** [3024 done /2364 queued / 16 running / 182 errors / 65% coverage ] ****** [3025 done /2369 queued / 16 running / 182 errors / 65% coverage ] ****** [3025 done /2369 queued / 16 running / 182 errors / 65% coverage ] ****** [3026 done /2368 queued / 16 running / 182 errors / 65% coverage ] ****** [3026 done /2368 queued / 16 running / 182 errors / 65% coverage ] ****** [3027 done /2369 queued / 16 running / 182 errors / 65% coverage ] ****** [3027 done /2369 queued / 16 running / 182 errors / 65% coverage ] ****** [3028 done /2371 queued / 16 running / 182 errors / 65% coverage ] ****** [3028 done /2371 queued / 16 running / 182 errors / 65% coverage ] ****** [3029 done /2374 queued / 16 running / 182 errors / 65% coverage ] ****** [3029 done /2374 queued / 16 running / 182 errors / 65% coverage ] ****** [3030 done /2378 queued / 16 running / 182 errors / 65% coverage ] ****** [3030 done /2378 queued / 16 running / 182 errors / 65% coverage ] ****** [3031 done /2381 queued / 16 running / 182 errors / 65% coverage ] ****** [3031 done /2381 queued / 16 running / 182 errors / 65% coverage ] ****** [3032 done /2384 queued / 16 running / 182 errors / 65% coverage ] ****** [3032 done /2384 queued / 16 running / 182 errors / 65% coverage ] ****** [3033 done /2385 queued / 16 running / 182 errors / 65% coverage ] ****** [3033 done /2385 queued / 16 running / 182 errors / 65% coverage ] ****** [3034 done /2390 queued / 16 running / 182 errors / 65% coverage ] ****** [3034 done /2390 queued / 16 running / 182 errors / 65% coverage ] ****** [3035 done /2393 queued / 16 running / 182 errors / 65% coverage ] ****** [3035 done /2393 queued / 16 running / 182 errors / 65% coverage ] ****** [3036 done /2392 queued / 16 running / 182 errors / 65% coverage ] ****** [3036 done /2392 queued / 16 running / 182 errors / 65% coverage ] ****** [3037 done /2393 queued / 16 running / 182 errors / 65% coverage ] ****** [3037 done /2393 queued / 16 running / 182 errors / 65% coverage ] ****** [3038 done /2393 queued / 16 running / 182 errors / 65% coverage ] ****** [3038 done /2393 queued / 16 running / 182 errors / 65% coverage ] ****** [3039 done /2392 queued / 16 running / 182 errors / 65% coverage ] ****** [3039 done /2392 queued / 16 running / 182 errors / 65% coverage ] ****** [3040 done /2394 queued / 16 running / 182 errors / 65% coverage ] ****** [3040 done /2394 queued / 16 running / 182 errors / 65% coverage ] ****** [3041 done /2395 queued / 16 running / 182 errors / 65% coverage ] ****** [3041 done /2395 queued / 16 running / 182 errors / 65% coverage ] ****** [3042 done /2396 queued / 16 running / 182 errors / 65% coverage ] ****** [3042 done /2396 queued / 16 running / 182 errors / 65% coverage ] ****** [3043 done /2397 queued / 16 running / 182 errors / 65% coverage ] ****** [3043 done /2397 queued / 16 running / 182 errors / 65% coverage ] ****** [3044 done /2396 queued / 16 running / 182 errors / 65% coverage ] ****** [3044 done /2396 queued / 16 running / 182 errors / 65% coverage ] ****** [3045 done /2396 queued / 16 running / 182 errors / 65% coverage ] ****** [3045 done /2396 queued / 16 running / 182 errors / 65% coverage ] ****** [3046 done /2396 queued / 16 running / 182 errors / 65% coverage ] ****** [3046 done /2396 queued / 16 running / 182 errors / 65% coverage ] ****** [3047 done /2395 queued / 16 running / 182 errors / 65% coverage ] ****** [3047 done /2395 queued / 16 running / 182 errors / 65% coverage ] ****** [3048 done /2394 queued / 16 running / 182 errors / 65% coverage ] ****** [3048 done /2394 queued / 16 running / 182 errors / 65% coverage ] ****** [3049 done /2395 queued / 16 running / 182 errors / 65% coverage ] ****** [3049 done /2395 queued / 16 running / 182 errors / 65% coverage ] ****** [3050 done /2394 queued / 16 running / 182 errors / 65% coverage ] ****** [3050 done /2394 queued / 16 running / 182 errors / 65% coverage ] ****** [3051 done /2396 queued / 16 running / 182 errors / 65% coverage ] ****** [3051 done /2396 queued / 16 running / 182 errors / 65% coverage ] ****** [3052 done /2396 queued / 16 running / 182 errors / 65% coverage ] ****** [3052 done /2396 queued / 16 running / 182 errors / 65% coverage ] ****** [3053 done /2395 queued / 16 running / 182 errors / 65% coverage ] ****** [3053 done /2395 queued / 16 running / 182 errors / 65% coverage ] ****** [3054 done /2396 queued / 16 running / 182 errors / 65% coverage ] ****** [3054 done /2396 queued / 16 running / 182 errors / 65% coverage ] ****** [3055 done /2397 queued / 16 running / 182 errors / 65% coverage ] ****** [3055 done /2397 queued / 16 running / 182 errors / 65% coverage ] ****** [3056 done /2397 queued / 16 running / 182 errors / 65% coverage ] ****** [3056 done /2397 queued / 16 running / 182 errors / 65% coverage ] ****** [3057 done /2396 queued / 16 running / 182 errors / 65% coverage ] ****** [3057 done /2396 queued / 16 running / 182 errors / 65% coverage ] ****** [3058 done /2395 queued / 16 running / 182 errors / 65% coverage ] ****** [3058 done /2395 queued / 16 running / 182 errors / 65% coverage ] ****** [3059 done /2396 queued / 16 running / 182 errors / 65% coverage ] ****** [3059 done /2396 queued / 16 running / 182 errors / 65% coverage ] ****** [3060 done /2396 queued / 16 running / 182 errors / 65% coverage ] ****** [3060 done /2396 queued / 16 running / 182 errors / 65% coverage ] ****** [3061 done /2398 queued / 16 running / 183 errors / 65% coverage ] ****** [3061 done /2398 queued / 16 running / 183 errors / 65% coverage ] ****** [3062 done /2399 queued / 16 running / 183 errors / 65% coverage ] ****** [3062 done /2399 queued / 16 running / 183 errors / 65% coverage ] ****** [3063 done /2400 queued / 16 running / 183 errors / 65% coverage ] ****** [3063 done /2400 queued / 16 running / 183 errors / 65% coverage ] ****** [3064 done /2400 queued / 16 running / 183 errors / 65% coverage ] ****** [3064 done /2400 queued / 16 running / 183 errors / 65% coverage ] ****** [3065 done /2403 queued / 16 running / 183 errors / 65% coverage ] ****** [3065 done /2403 queued / 16 running / 183 errors / 65% coverage ] ****** [3066 done /2405 queued / 16 running / 183 errors / 65% coverage ] ****** [3066 done /2405 queued / 16 running / 183 errors / 65% coverage ] ****** [3067 done /2408 queued / 16 running / 183 errors / 65% coverage ] ****** [3067 done /2408 queued / 16 running / 183 errors / 65% coverage ] ****** [3068 done /2413 queued / 16 running / 183 errors / 65% coverage ] ****** [3068 done /2413 queued / 16 running / 183 errors / 65% coverage ] ****** [3069 done /2414 queued / 16 running / 183 errors / 65% coverage ] ****** [3069 done /2414 queued / 16 running / 183 errors / 65% coverage ] ****** [3070 done /2419 queued / 16 running / 183 errors / 65% coverage ] ****** [3070 done /2419 queued / 16 running / 183 errors / 65% coverage ] ****** [3071 done /2421 queued / 16 running / 183 errors / 65% coverage ] ****** [3071 done /2421 queued / 16 running / 183 errors / 65% coverage ] ****** [3072 done /2423 queued / 16 running / 183 errors / 65% coverage ] ****** [3072 done /2423 queued / 16 running / 183 errors / 65% coverage ] ****** [3073 done /2427 queued / 16 running / 183 errors / 65% coverage ] ****** [3073 done /2427 queued / 16 running / 183 errors / 65% coverage ] ****** [3074 done /2428 queued / 16 running / 183 errors / 65% coverage ] ****** [3074 done /2428 queued / 16 running / 183 errors / 65% coverage ] ****** [3075 done /2431 queued / 16 running / 183 errors / 65% coverage ] ****** [3075 done /2431 queued / 16 running / 183 errors / 65% coverage ] ****** [3076 done /2435 queued / 16 running / 183 errors / 65% coverage ] ****** [3076 done /2435 queued / 16 running / 183 errors / 65% coverage ] ****** [3077 done /2437 queued / 16 running / 183 errors / 65% coverage ] ****** [3077 done /2437 queued / 16 running / 183 errors / 65% coverage ] ****** [3078 done /2436 queued / 16 running / 184 errors / 65% coverage ] ****** [3078 done /2436 queued / 16 running / 184 errors / 65% coverage ] ****** [3079 done /2438 queued / 16 running / 184 errors / 65% coverage ] ****** [3079 done /2438 queued / 16 running / 184 errors / 65% coverage ] ****** [3080 done /2439 queued / 16 running / 184 errors / 65% coverage ] ****** [3080 done /2439 queued / 16 running / 184 errors / 65% coverage ] ****** [3081 done /2441 queued / 16 running / 184 errors / 65% coverage ] ****** [3081 done /2441 queued / 16 running / 184 errors / 65% coverage ] ****** [3082 done /2443 queued / 16 running / 184 errors / 65% coverage ] ****** [3082 done /2443 queued / 16 running / 184 errors / 65% coverage ] ****** [3083 done /2445 queued / 16 running / 184 errors / 65% coverage ] ****** [3083 done /2445 queued / 16 running / 184 errors / 65% coverage ] ****** [3084 done /2445 queued / 16 running / 184 errors / 65% coverage ] ****** [3084 done /2445 queued / 16 running / 184 errors / 65% coverage ] ****** [3085 done /2447 queued / 16 running / 184 errors / 65% coverage ] ****** [3085 done /2447 queued / 16 running / 184 errors / 65% coverage ] ****** [3086 done /2448 queued / 16 running / 184 errors / 65% coverage ] ****** [3086 done /2448 queued / 16 running / 184 errors / 65% coverage ] ****** [3087 done /2450 queued / 16 running / 184 errors / 65% coverage ] ****** [3087 done /2450 queued / 16 running / 184 errors / 65% coverage ] ****** [3088 done /2453 queued / 16 running / 184 errors / 65% coverage ] ****** [3088 done /2453 queued / 16 running / 184 errors / 65% coverage ] ****** [3089 done /2454 queued / 16 running / 184 errors / 65% coverage ] ****** [3089 done /2454 queued / 16 running / 184 errors / 65% coverage ] ****** [3090 done /2454 queued / 16 running / 184 errors / 65% coverage ] ****** [3090 done /2454 queued / 16 running / 184 errors / 65% coverage ] ****** [3091 done /2454 queued / 16 running / 184 errors / 65% coverage ] ****** [3091 done /2454 queued / 16 running / 184 errors / 65% coverage ] ****** [3092 done /2455 queued / 16 running / 184 errors / 65% coverage ] ****** [3092 done /2455 queued / 16 running / 184 errors / 65% coverage ] ****** [3093 done /2456 queued / 16 running / 184 errors / 65% coverage ] ****** [3093 done /2456 queued / 16 running / 184 errors / 65% coverage ] ****** [3094 done /2456 queued / 16 running / 184 errors / 65% coverage ] ****** [3094 done /2456 queued / 16 running / 184 errors / 65% coverage ] ****** [3095 done /2456 queued / 16 running / 184 errors / 65% coverage ] ****** [3095 done /2456 queued / 16 running / 184 errors / 65% coverage ] ****** [3096 done /2457 queued / 16 running / 184 errors / 65% coverage ] ****** [3096 done /2457 queued / 16 running / 184 errors / 65% coverage ] ****** [3097 done /2458 queued / 16 running / 184 errors / 65% coverage ] ****** [3097 done /2458 queued / 16 running / 184 errors / 65% coverage ] ****** [3098 done /2459 queued / 16 running / 184 errors / 65% coverage ] ****** [3098 done /2459 queued / 16 running / 184 errors / 65% coverage ] ****** [3099 done /2460 queued / 16 running / 184 errors / 65% coverage ] ****** [3099 done /2460 queued / 16 running / 184 errors / 65% coverage ] ****** [3100 done /2462 queued / 16 running / 184 errors / 65% coverage ] ****** [3100 done /2462 queued / 16 running / 184 errors / 65% coverage ] ****** [3101 done /2462 queued / 16 running / 184 errors / 65% coverage ] ****** [3101 done /2462 queued / 16 running / 184 errors / 65% coverage ] ****** [3102 done /2463 queued / 16 running / 184 errors / 65% coverage ] ****** [3102 done /2463 queued / 16 running / 184 errors / 65% coverage ] ****** [3103 done /2466 queued / 16 running / 184 errors / 65% coverage ] ****** [3103 done /2466 queued / 16 running / 184 errors / 65% coverage ] ****** [3104 done /2466 queued / 16 running / 184 errors / 65% coverage ] ****** [3104 done /2466 queued / 16 running / 184 errors / 65% coverage ] ****** [3105 done /2467 queued / 16 running / 184 errors / 65% coverage ] ****** [3105 done /2467 queued / 16 running / 184 errors / 65% coverage ] ****** [3106 done /2466 queued / 16 running / 184 errors / 65% coverage ] ****** [3106 done /2466 queued / 16 running / 184 errors / 65% coverage ] ****** [3107 done /2465 queued / 16 running / 184 errors / 65% coverage ] ****** [3107 done /2465 queued / 16 running / 184 errors / 65% coverage ] ****** [3108 done /2468 queued / 16 running / 184 errors / 65% coverage ] ****** [3108 done /2468 queued / 16 running / 184 errors / 65% coverage ] ****** [3109 done /2469 queued / 16 running / 184 errors / 65% coverage ] ****** [3109 done /2469 queued / 16 running / 184 errors / 65% coverage ] ****** [3110 done /2469 queued / 16 running / 184 errors / 65% coverage ] ****** [3110 done /2469 queued / 16 running / 184 errors / 65% coverage ] ****** [3111 done /2470 queued / 16 running / 184 errors / 65% coverage ] ****** [3111 done /2470 queued / 16 running / 184 errors / 65% coverage ] ****** [3112 done /2471 queued / 16 running / 184 errors / 65% coverage ] ****** [3112 done /2471 queued / 16 running / 184 errors / 65% coverage ] ****** [3113 done /2475 queued / 16 running / 184 errors / 65% coverage ] ****** [3113 done /2475 queued / 16 running / 184 errors / 65% coverage ] ****** [3114 done /2480 queued / 16 running / 184 errors / 65% coverage ] ****** [3114 done /2480 queued / 16 running / 184 errors / 65% coverage ] ****** [3115 done /2482 queued / 16 running / 184 errors / 65% coverage ] ****** [3115 done /2482 queued / 16 running / 184 errors / 65% coverage ] ****** [3116 done /2483 queued / 16 running / 184 errors / 65% coverage ] ****** [3116 done /2483 queued / 16 running / 184 errors / 65% coverage ] ****** [3117 done /2488 queued / 16 running / 184 errors / 65% coverage ] ****** [3117 done /2488 queued / 16 running / 184 errors / 65% coverage ] ****** [3118 done /2488 queued / 16 running / 184 errors / 65% coverage ] ****** [3118 done /2488 queued / 16 running / 184 errors / 65% coverage ] ****** [3119 done /2490 queued / 16 running / 184 errors / 65% coverage ] ****** [3119 done /2490 queued / 16 running / 184 errors / 65% coverage ] ****** [3120 done /2492 queued / 16 running / 184 errors / 65% coverage ] ****** [3120 done /2492 queued / 16 running / 184 errors / 65% coverage ] ****** [3121 done /2493 queued / 16 running / 184 errors / 65% coverage ] ****** [3121 done /2493 queued / 16 running / 184 errors / 65% coverage ] ****** [3122 done /2494 queued / 16 running / 184 errors / 65% coverage ] ****** [3122 done /2494 queued / 16 running / 184 errors / 65% coverage ] ****** [3123 done /2497 queued / 16 running / 184 errors / 65% coverage ] ****** [3123 done /2497 queued / 16 running / 184 errors / 65% coverage ] ****** [3124 done /2499 queued / 16 running / 184 errors / 65% coverage ] ****** [3124 done /2499 queued / 16 running / 184 errors / 65% coverage ] ****** [3125 done /2500 queued / 16 running / 184 errors / 65% coverage ] ****** [3125 done /2500 queued / 16 running / 184 errors / 65% coverage ] ****** [3126 done /2499 queued / 16 running / 184 errors / 65% coverage ] ****** [3126 done /2499 queued / 16 running / 184 errors / 65% coverage ] ****** [3127 done /2500 queued / 16 running / 184 errors / 65% coverage ] ****** [3127 done /2500 queued / 16 running / 184 errors / 65% coverage ] ****** [3128 done /2504 queued / 16 running / 184 errors / 65% coverage ] ****** [3128 done /2504 queued / 16 running / 184 errors / 65% coverage ] ****** [3129 done /2506 queued / 16 running / 184 errors / 65% coverage ] ****** [3129 done /2506 queued / 16 running / 184 errors / 65% coverage ] ****** [3130 done /2510 queued / 16 running / 184 errors / 65% coverage ] ****** [3130 done /2510 queued / 16 running / 184 errors / 65% coverage ] ****** [3131 done /2512 queued / 16 running / 184 errors / 65% coverage ] ****** [3131 done /2512 queued / 16 running / 184 errors / 65% coverage ] ****** [3132 done /2513 queued / 16 running / 184 errors / 65% coverage ] ****** [3132 done /2513 queued / 16 running / 184 errors / 65% coverage ] ****** [3133 done /2515 queued / 16 running / 184 errors / 65% coverage ] ****** [3133 done /2515 queued / 16 running / 184 errors / 65% coverage ] ****** [3134 done /2516 queued / 16 running / 184 errors / 65% coverage ] ****** [3134 done /2516 queued / 16 running / 184 errors / 65% coverage ] ****** [3135 done /2517 queued / 16 running / 184 errors / 65% coverage ] ****** [3135 done /2517 queued / 16 running / 184 errors / 65% coverage ] ****** [3136 done /2518 queued / 16 running / 184 errors / 65% coverage ] ****** [3136 done /2518 queued / 16 running / 184 errors / 65% coverage ] ****** [3137 done /2519 queued / 16 running / 184 errors / 65% coverage ] ****** [3137 done /2519 queued / 16 running / 184 errors / 65% coverage ] ****** [3138 done /2521 queued / 16 running / 184 errors / 65% coverage ] ****** [3138 done /2521 queued / 16 running / 184 errors / 65% coverage ] ****** [3139 done /2521 queued / 16 running / 184 errors / 65% coverage ] ****** [3139 done /2521 queued / 16 running / 184 errors / 65% coverage ] ****** [3140 done /2522 queued / 16 running / 184 errors / 65% coverage ] ****** [3140 done /2522 queued / 16 running / 184 errors / 65% coverage ] ****** [3141 done /2521 queued / 16 running / 184 errors / 65% coverage ] ****** [3141 done /2521 queued / 16 running / 184 errors / 65% coverage ] ****** [3142 done /2523 queued / 16 running / 184 errors / 65% coverage ] ****** [3142 done /2523 queued / 16 running / 184 errors / 65% coverage ] ****** [3143 done /2523 queued / 16 running / 184 errors / 65% coverage ] ****** [3143 done /2523 queued / 16 running / 184 errors / 65% coverage ] ****** [3144 done /2524 queued / 16 running / 184 errors / 65% coverage ] ****** [3144 done /2524 queued / 16 running / 184 errors / 65% coverage ] ****** [3145 done /2524 queued / 16 running / 184 errors / 65% coverage ] ****** [3145 done /2524 queued / 16 running / 184 errors / 65% coverage ] ****** [3146 done /2525 queued / 16 running / 184 errors / 65% coverage ] ****** [3146 done /2525 queued / 16 running / 184 errors / 65% coverage ] ****** [3147 done /2527 queued / 16 running / 184 errors / 65% coverage ] ****** [3147 done /2527 queued / 16 running / 184 errors / 65% coverage ] ****** [3148 done /2530 queued / 16 running / 184 errors / 65% coverage ] ****** [3148 done /2530 queued / 16 running / 184 errors / 65% coverage ] ****** [3149 done /2534 queued / 16 running / 184 errors / 65% coverage ] ****** [3149 done /2534 queued / 16 running / 184 errors / 65% coverage ] ****** [3150 done /2536 queued / 16 running / 184 errors / 65% coverage ] ****** [3150 done /2536 queued / 16 running / 184 errors / 65% coverage ] ****** [3151 done /2536 queued / 16 running / 184 errors / 65% coverage ] ****** [3151 done /2536 queued / 16 running / 184 errors / 65% coverage ] ****** [3152 done /2540 queued / 16 running / 184 errors / 65% coverage ] ****** [3152 done /2540 queued / 16 running / 184 errors / 65% coverage ] ****** [3153 done /2540 queued / 16 running / 184 errors / 65% coverage ] ****** [3153 done /2540 queued / 16 running / 184 errors / 65% coverage ] ****** [3154 done /2541 queued / 16 running / 184 errors / 65% coverage ] ****** [3154 done /2541 queued / 16 running / 184 errors / 65% coverage ] ****** [3155 done /2545 queued / 16 running / 184 errors / 65% coverage ] ****** [3155 done /2545 queued / 16 running / 184 errors / 65% coverage ] ****** [3156 done /2546 queued / 16 running / 184 errors / 65% coverage ] ****** [3156 done /2546 queued / 16 running / 184 errors / 65% coverage ] ****** [3157 done /2548 queued / 16 running / 184 errors / 65% coverage ] ****** [3157 done /2548 queued / 16 running / 184 errors / 65% coverage ] ****** [3158 done /2550 queued / 16 running / 184 errors / 65% coverage ] ****** [3158 done /2550 queued / 16 running / 184 errors / 65% coverage ] ****** [3159 done /2551 queued / 16 running / 184 errors / 65% coverage ] ****** [3159 done /2551 queued / 16 running / 184 errors / 65% coverage ] ****** [3160 done /2552 queued / 16 running / 184 errors / 65% coverage ] ****** [3160 done /2552 queued / 16 running / 184 errors / 65% coverage ] ****** [3161 done /2554 queued / 16 running / 184 errors / 65% coverage ] ****** [3161 done /2554 queued / 16 running / 184 errors / 65% coverage ] ****** [3162 done /2558 queued / 16 running / 184 errors / 65% coverage ] ****** [3162 done /2558 queued / 16 running / 184 errors / 65% coverage ] ****** [3163 done /2560 queued / 16 running / 184 errors / 65% coverage ] ****** [3163 done /2560 queued / 16 running / 184 errors / 65% coverage ] ****** [3164 done /2560 queued / 16 running / 184 errors / 65% coverage ] ****** [3164 done /2560 queued / 16 running / 184 errors / 65% coverage ] ****** [3165 done /2561 queued / 16 running / 184 errors / 65% coverage ] ****** [3165 done /2561 queued / 16 running / 184 errors / 65% coverage ] ****** [3166 done /2562 queued / 16 running / 184 errors / 65% coverage ] ****** [3166 done /2562 queued / 16 running / 184 errors / 65% coverage ] ****** [3167 done /2563 queued / 16 running / 184 errors / 65% coverage ] ****** [3167 done /2563 queued / 16 running / 184 errors / 65% coverage ] ****** [3168 done /2563 queued / 16 running / 184 errors / 65% coverage ] ****** [3168 done /2563 queued / 16 running / 184 errors / 65% coverage ] ****** [3169 done /2563 queued / 16 running / 184 errors / 65% coverage ] ****** [3169 done /2563 queued / 16 running / 184 errors / 65% coverage ] ****** [3170 done /2563 queued / 16 running / 184 errors / 65% coverage ] ****** [3170 done /2563 queued / 16 running / 184 errors / 65% coverage ] ****** [3171 done /2563 queued / 16 running / 184 errors / 65% coverage ] ****** [3171 done /2563 queued / 16 running / 184 errors / 65% coverage ] ****** [3172 done /2563 queued / 16 running / 184 errors / 65% coverage ] ****** [3172 done /2563 queued / 16 running / 184 errors / 65% coverage ] ****** [3173 done /2565 queued / 16 running / 184 errors / 65% coverage ] ****** [3173 done /2565 queued / 16 running / 184 errors / 65% coverage ] ****** [3174 done /2566 queued / 16 running / 184 errors / 65% coverage ] ****** [3174 done /2566 queued / 16 running / 184 errors / 65% coverage ] ****** [3175 done /2566 queued / 16 running / 184 errors / 65% coverage ] ****** [3175 done /2566 queued / 16 running / 184 errors / 65% coverage ] ****** [3176 done /2566 queued / 16 running / 184 errors / 65% coverage ] ****** [3176 done /2566 queued / 16 running / 184 errors / 65% coverage ] ****** [3177 done /2566 queued / 16 running / 184 errors / 65% coverage ] ****** [3177 done /2566 queued / 16 running / 184 errors / 65% coverage ] ****** [3178 done /2566 queued / 16 running / 184 errors / 65% coverage ] ****** [3178 done /2566 queued / 16 running / 184 errors / 65% coverage ] ****** [3179 done /2566 queued / 16 running / 184 errors / 65% coverage ] ****** [3179 done /2566 queued / 16 running / 184 errors / 65% coverage ] ****** [3180 done /2566 queued / 16 running / 184 errors / 65% coverage ] ****** [3180 done /2566 queued / 16 running / 184 errors / 65% coverage ] ****** [3181 done /2567 queued / 16 running / 184 errors / 65% coverage ] ****** [3181 done /2567 queued / 16 running / 184 errors / 65% coverage ] ****** [3182 done /2568 queued / 16 running / 184 errors / 65% coverage ] ****** [3182 done /2568 queued / 16 running / 184 errors / 65% coverage ] ****** [3183 done /2570 queued / 16 running / 184 errors / 65% coverage ] ****** [3183 done /2570 queued / 16 running / 184 errors / 65% coverage ] ****** [3184 done /2570 queued / 16 running / 184 errors / 65% coverage ] ****** [3184 done /2570 queued / 16 running / 184 errors / 65% coverage ] ****** [3185 done /2571 queued / 16 running / 184 errors / 65% coverage ] ****** [3185 done /2571 queued / 16 running / 184 errors / 65% coverage ] ****** [3186 done /2571 queued / 16 running / 184 errors / 65% coverage ] ****** [3186 done /2571 queued / 16 running / 184 errors / 65% coverage ] ****** [3187 done /2576 queued / 16 running / 184 errors / 65% coverage ] ****** [3187 done /2576 queued / 16 running / 184 errors / 65% coverage ] ****** [3188 done /2576 queued / 16 running / 184 errors / 65% coverage ] ****** [3188 done /2576 queued / 16 running / 184 errors / 65% coverage ] ****** [3189 done /2577 queued / 16 running / 184 errors / 65% coverage ] ****** [3189 done /2577 queued / 16 running / 184 errors / 65% coverage ] ****** [3190 done /2577 queued / 16 running / 184 errors / 65% coverage ] ****** [3190 done /2577 queued / 16 running / 184 errors / 65% coverage ] ****** [3191 done /2578 queued / 16 running / 184 errors / 65% coverage ] ****** [3191 done /2578 queued / 16 running / 184 errors / 65% coverage ] ****** [3192 done /2579 queued / 16 running / 184 errors / 65% coverage ] ****** [3192 done /2579 queued / 16 running / 184 errors / 65% coverage ] ****** [3193 done /2581 queued / 16 running / 184 errors / 65% coverage ] ****** [3193 done /2581 queued / 16 running / 184 errors / 65% coverage ] ****** [3194 done /2584 queued / 16 running / 184 errors / 65% coverage ] ****** [3194 done /2584 queued / 16 running / 184 errors / 65% coverage ] ****** [3195 done /2586 queued / 16 running / 184 errors / 65% coverage ] ****** [3195 done /2586 queued / 16 running / 184 errors / 65% coverage ] ****** [3196 done /2590 queued / 16 running / 184 errors / 65% coverage ] ****** [3196 done /2590 queued / 16 running / 184 errors / 65% coverage ] ****** [3197 done /2591 queued / 16 running / 184 errors / 65% coverage ] ****** [3197 done /2591 queued / 16 running / 184 errors / 65% coverage ] ****** [3198 done /2593 queued / 16 running / 184 errors / 65% coverage ] ****** [3198 done /2593 queued / 16 running / 184 errors / 65% coverage ] ****** [3199 done /2594 queued / 16 running / 184 errors / 65% coverage ] ****** [3199 done /2594 queued / 16 running / 184 errors / 65% coverage ] ****** [3200 done /2594 queued / 16 running / 184 errors / 65% coverage ] ****** [3200 done /2594 queued / 16 running / 184 errors / 65% coverage ] ****** [3201 done /2597 queued / 16 running / 184 errors / 65% coverage ] ****** [3201 done /2597 queued / 16 running / 184 errors / 65% coverage ] ****** [3202 done /2598 queued / 16 running / 184 errors / 65% coverage ] ****** [3202 done /2598 queued / 16 running / 184 errors / 65% coverage ] ****** [3203 done /2600 queued / 16 running / 184 errors / 65% coverage ] ****** [3203 done /2600 queued / 16 running / 184 errors / 65% coverage ] ****** [3204 done /2601 queued / 16 running / 184 errors / 65% coverage ] ****** [3204 done /2601 queued / 16 running / 184 errors / 65% coverage ] ****** [3205 done /2602 queued / 16 running / 184 errors / 65% coverage ] ****** [3205 done /2602 queued / 16 running / 184 errors / 65% coverage ] ****** [3206 done /2603 queued / 16 running / 184 errors / 65% coverage ] ****** [3206 done /2603 queued / 16 running / 184 errors / 65% coverage ] ****** [3207 done /2606 queued / 16 running / 184 errors / 65% coverage ] ****** [3207 done /2606 queued / 16 running / 184 errors / 65% coverage ] ****** [3208 done /2607 queued / 16 running / 184 errors / 65% coverage ] ****** [3208 done /2607 queued / 16 running / 184 errors / 65% coverage ] ****** [3209 done /2607 queued / 16 running / 184 errors / 65% coverage ] ****** [3209 done /2607 queued / 16 running / 184 errors / 65% coverage ] ****** [3210 done /2607 queued / 16 running / 184 errors / 65% coverage ] ****** [3210 done /2607 queued / 16 running / 184 errors / 65% coverage ] ****** [3211 done /2609 queued / 16 running / 184 errors / 65% coverage ] ****** [3211 done /2609 queued / 16 running / 184 errors / 65% coverage ] ****** [3212 done /2611 queued / 16 running / 184 errors / 65% coverage ] ****** [3212 done /2611 queued / 16 running / 184 errors / 65% coverage ] ****** [3213 done /2610 queued / 16 running / 184 errors / 65% coverage ] ****** [3213 done /2610 queued / 16 running / 184 errors / 65% coverage ] ****** [3214 done /2610 queued / 16 running / 184 errors / 65% coverage ] ****** [3214 done /2610 queued / 16 running / 184 errors / 65% coverage ] ****** [3215 done /2609 queued / 16 running / 184 errors / 65% coverage ] ****** [3215 done /2609 queued / 16 running / 184 errors / 65% coverage ] ****** [3216 done /2609 queued / 16 running / 184 errors / 65% coverage ] ****** [3216 done /2609 queued / 16 running / 184 errors / 65% coverage ] ****** [3217 done /2608 queued / 16 running / 184 errors / 65% coverage ] ****** [3217 done /2608 queued / 16 running / 184 errors / 65% coverage ] ****** [3218 done /2609 queued / 16 running / 184 errors / 65% coverage ] ****** [3218 done /2609 queued / 16 running / 184 errors / 65% coverage ] ****** [3219 done /2610 queued / 16 running / 184 errors / 65% coverage ] ****** [3219 done /2610 queued / 16 running / 184 errors / 65% coverage ] ****** [3220 done /2609 queued / 16 running / 184 errors / 65% coverage ] ****** [3220 done /2609 queued / 16 running / 184 errors / 65% coverage ] ****** [3221 done /2611 queued / 16 running / 184 errors / 65% coverage ] ****** [3221 done /2611 queued / 16 running / 184 errors / 65% coverage ] ****** [3222 done /2611 queued / 16 running / 184 errors / 65% coverage ] ****** [3222 done /2611 queued / 16 running / 184 errors / 65% coverage ] ****** [3223 done /2612 queued / 16 running / 184 errors / 65% coverage ] ****** [3223 done /2612 queued / 16 running / 184 errors / 65% coverage ] ****** [3224 done /2612 queued / 16 running / 184 errors / 65% coverage ] ****** [3224 done /2612 queued / 16 running / 184 errors / 65% coverage ] ****** [3225 done /2612 queued / 16 running / 184 errors / 65% coverage ] ****** [3225 done /2612 queued / 16 running / 184 errors / 65% coverage ] ****** [3226 done /2612 queued / 16 running / 184 errors / 65% coverage ] ****** [3226 done /2612 queued / 16 running / 184 errors / 65% coverage ] ****** [3227 done /2613 queued / 16 running / 184 errors / 65% coverage ] ****** [3227 done /2613 queued / 16 running / 184 errors / 65% coverage ] ****** [3228 done /2613 queued / 16 running / 184 errors / 65% coverage ] ****** [3228 done /2613 queued / 16 running / 184 errors / 65% coverage ] ****** [3229 done /2613 queued / 16 running / 184 errors / 65% coverage ] ****** [3229 done /2613 queued / 16 running / 184 errors / 65% coverage ] ****** [3230 done /2614 queued / 16 running / 184 errors / 65% coverage ] ****** [3230 done /2614 queued / 16 running / 184 errors / 65% coverage ] ****** [3231 done /2617 queued / 16 running / 184 errors / 65% coverage ] ****** [3231 done /2617 queued / 16 running / 184 errors / 65% coverage ] ****** [3232 done /2619 queued / 16 running / 184 errors / 65% coverage ] ****** [3232 done /2619 queued / 16 running / 184 errors / 65% coverage ] ****** [3233 done /2624 queued / 16 running / 184 errors / 65% coverage ] ****** [3233 done /2624 queued / 16 running / 184 errors / 65% coverage ] ****** [3234 done /2624 queued / 16 running / 184 errors / 65% coverage ] ****** [3234 done /2624 queued / 16 running / 184 errors / 65% coverage ] ****** [3235 done /2627 queued / 16 running / 184 errors / 65% coverage ] ****** [3235 done /2627 queued / 16 running / 184 errors / 65% coverage ] ****** [3236 done /2628 queued / 16 running / 184 errors / 65% coverage ] ****** [3236 done /2628 queued / 16 running / 184 errors / 65% coverage ] ****** [3237 done /2631 queued / 16 running / 184 errors / 65% coverage ] ****** [3237 done /2631 queued / 16 running / 184 errors / 65% coverage ] ****** [3238 done /2633 queued / 16 running / 184 errors / 65% coverage ] ****** [3238 done /2633 queued / 16 running / 184 errors / 65% coverage ] ****** [3239 done /2634 queued / 16 running / 184 errors / 65% coverage ] ****** [3239 done /2634 queued / 16 running / 184 errors / 65% coverage ] ****** [3240 done /2635 queued / 16 running / 184 errors / 65% coverage ] ****** [3240 done /2635 queued / 16 running / 184 errors / 65% coverage ] ****** [3241 done /2635 queued / 16 running / 184 errors / 65% coverage ] ****** [3241 done /2635 queued / 16 running / 184 errors / 65% coverage ] ****** [3242 done /2638 queued / 16 running / 184 errors / 65% coverage ] ****** [3242 done /2638 queued / 16 running / 184 errors / 65% coverage ] ****** [3243 done /2641 queued / 16 running / 184 errors / 65% coverage ] ****** [3243 done /2641 queued / 16 running / 184 errors / 65% coverage ] ****** [3244 done /2643 queued / 16 running / 184 errors / 65% coverage ] ****** [3244 done /2643 queued / 16 running / 184 errors / 65% coverage ] ****** [3245 done /2646 queued / 16 running / 184 errors / 65% coverage ] ****** [3245 done /2646 queued / 16 running / 184 errors / 65% coverage ] ****** [3246 done /2650 queued / 16 running / 184 errors / 65% coverage ] ****** [3246 done /2650 queued / 16 running / 184 errors / 65% coverage ] ****** [3247 done /2649 queued / 16 running / 184 errors / 65% coverage ] ****** [3247 done /2649 queued / 16 running / 184 errors / 65% coverage ] ****** [3248 done /2649 queued / 16 running / 184 errors / 65% coverage ] ****** [3248 done /2649 queued / 16 running / 184 errors / 65% coverage ] ****** [3249 done /2648 queued / 16 running / 184 errors / 65% coverage ] ****** [3249 done /2648 queued / 16 running / 184 errors / 65% coverage ] ****** [3250 done /2649 queued / 16 running / 184 errors / 65% coverage ] ****** [3250 done /2649 queued / 16 running / 184 errors / 65% coverage ] ****** [3251 done /2648 queued / 16 running / 184 errors / 65% coverage ] ****** [3251 done /2648 queued / 16 running / 184 errors / 65% coverage ] ****** [3252 done /2648 queued / 16 running / 184 errors / 65% coverage ] ****** [3252 done /2648 queued / 16 running / 184 errors / 65% coverage ] ****** [3253 done /2650 queued / 16 running / 184 errors / 65% coverage ] ****** [3253 done /2650 queued / 16 running / 184 errors / 65% coverage ] ****** [3254 done /2649 queued / 16 running / 184 errors / 65% coverage ] ****** [3254 done /2649 queued / 16 running / 184 errors / 65% coverage ] ****** [3255 done /2648 queued / 16 running / 184 errors / 65% coverage ] ****** [3255 done /2648 queued / 16 running / 184 errors / 65% coverage ] ****** [3256 done /2650 queued / 16 running / 184 errors / 65% coverage ] ****** [3256 done /2650 queued / 16 running / 184 errors / 65% coverage ] ****** [3257 done /2649 queued / 16 running / 184 errors / 65% coverage ] ****** [3257 done /2649 queued / 16 running / 184 errors / 65% coverage ] ****** [3258 done /2650 queued / 16 running / 184 errors / 65% coverage ] ****** [3258 done /2650 queued / 16 running / 184 errors / 65% coverage ] ****** [3259 done /2651 queued / 16 running / 184 errors / 65% coverage ] ****** [3259 done /2651 queued / 16 running / 184 errors / 65% coverage ] ****** [3260 done /2650 queued / 16 running / 184 errors / 65% coverage ] ****** [3260 done /2650 queued / 16 running / 184 errors / 65% coverage ] ****** [3261 done /2649 queued / 16 running / 184 errors / 65% coverage ] ****** [3261 done /2649 queued / 16 running / 184 errors / 65% coverage ] ****** [3262 done /2649 queued / 16 running / 184 errors / 65% coverage ] ****** [3262 done /2649 queued / 16 running / 184 errors / 65% coverage ] ****** [3263 done /2649 queued / 16 running / 184 errors / 65% coverage ] ****** [3263 done /2649 queued / 16 running / 184 errors / 65% coverage ] ****** [3264 done /2648 queued / 16 running / 184 errors / 65% coverage ] ****** [3264 done /2648 queued / 16 running / 184 errors / 65% coverage ] ****** [3265 done /2648 queued / 16 running / 184 errors / 65% coverage ] ****** [3265 done /2648 queued / 16 running / 184 errors / 65% coverage ] ****** [3266 done /2647 queued / 16 running / 184 errors / 65% coverage ] ****** [3266 done /2647 queued / 16 running / 184 errors / 65% coverage ] ****** [3267 done /2646 queued / 16 running / 184 errors / 65% coverage ] ****** [3267 done /2646 queued / 16 running / 184 errors / 65% coverage ] ****** [3268 done /2647 queued / 16 running / 184 errors / 65% coverage ] ****** [3268 done /2647 queued / 16 running / 184 errors / 65% coverage ] ****** [3269 done /2646 queued / 16 running / 184 errors / 65% coverage ] ****** [3269 done /2646 queued / 16 running / 184 errors / 65% coverage ] ****** [3270 done /2646 queued / 16 running / 184 errors / 65% coverage ] ****** [3270 done /2646 queued / 16 running / 184 errors / 65% coverage ] ****** [3271 done /2645 queued / 16 running / 184 errors / 65% coverage ] ****** [3271 done /2645 queued / 16 running / 184 errors / 65% coverage ] ****** [3272 done /2646 queued / 16 running / 184 errors / 65% coverage ] ****** [3272 done /2646 queued / 16 running / 184 errors / 65% coverage ] ****** [3273 done /2645 queued / 16 running / 184 errors / 65% coverage ] ****** [3273 done /2645 queued / 16 running / 184 errors / 65% coverage ] ****** [3274 done /2644 queued / 16 running / 184 errors / 65% coverage ] ****** [3274 done /2644 queued / 16 running / 184 errors / 65% coverage ] ****** [3275 done /2648 queued / 16 running / 184 errors / 65% coverage ] ****** [3275 done /2648 queued / 16 running / 184 errors / 65% coverage ] ****** [3276 done /2650 queued / 16 running / 184 errors / 65% coverage ] ****** [3276 done /2650 queued / 16 running / 184 errors / 65% coverage ] ****** [3277 done /2652 queued / 16 running / 185 errors / 65% coverage ] ****** [3277 done /2652 queued / 16 running / 185 errors / 65% coverage ] ****** [3278 done /2654 queued / 16 running / 185 errors / 65% coverage ] ****** [3278 done /2654 queued / 16 running / 185 errors / 65% coverage ] ****** [3279 done /2657 queued / 16 running / 185 errors / 65% coverage ] ****** [3279 done /2657 queued / 16 running / 185 errors / 65% coverage ] ****** [3280 done /2658 queued / 16 running / 185 errors / 65% coverage ] ****** [3280 done /2658 queued / 16 running / 185 errors / 65% coverage ] ****** [3281 done /2660 queued / 16 running / 185 errors / 65% coverage ] ****** [3281 done /2660 queued / 16 running / 185 errors / 65% coverage ] ****** [3282 done /2662 queued / 16 running / 185 errors / 65% coverage ] ****** [3282 done /2662 queued / 16 running / 185 errors / 65% coverage ] ****** [3283 done /2663 queued / 16 running / 185 errors / 65% coverage ] ****** [3283 done /2663 queued / 16 running / 185 errors / 65% coverage ] ****** [3284 done /2665 queued / 16 running / 185 errors / 65% coverage ] ****** [3284 done /2665 queued / 16 running / 185 errors / 65% coverage ] ****** [3285 done /2669 queued / 16 running / 185 errors / 65% coverage ] ****** [3285 done /2669 queued / 16 running / 185 errors / 65% coverage ] ****** [3286 done /2670 queued / 16 running / 185 errors / 65% coverage ] ****** [3286 done /2670 queued / 16 running / 185 errors / 65% coverage ] ****** [3287 done /2670 queued / 16 running / 186 errors / 65% coverage ] ****** [3287 done /2670 queued / 16 running / 186 errors / 65% coverage ] ****** [3288 done /2671 queued / 16 running / 186 errors / 65% coverage ] ****** [3288 done /2671 queued / 16 running / 186 errors / 65% coverage ] ****** [3289 done /2673 queued / 16 running / 186 errors / 65% coverage ] ****** [3289 done /2673 queued / 16 running / 186 errors / 65% coverage ] ****** [3290 done /2675 queued / 16 running / 186 errors / 65% coverage ] ****** [3290 done /2675 queued / 16 running / 186 errors / 65% coverage ] ****** [3291 done /2675 queued / 16 running / 186 errors / 65% coverage ] ****** [3291 done /2675 queued / 16 running / 186 errors / 65% coverage ] ****** [3292 done /2678 queued / 16 running / 187 errors / 65% coverage ] ****** [3292 done /2678 queued / 16 running / 187 errors / 65% coverage ] ****** [3293 done /2678 queued / 16 running / 187 errors / 65% coverage ] ****** [3293 done /2678 queued / 16 running / 187 errors / 65% coverage ] ****** [3294 done /2677 queued / 16 running / 187 errors / 65% coverage ] ****** [3294 done /2677 queued / 16 running / 187 errors / 65% coverage ] ****** [3295 done /2678 queued / 16 running / 187 errors / 65% coverage ] ****** [3295 done /2678 queued / 16 running / 187 errors / 65% coverage ] ****** [3296 done /2678 queued / 16 running / 187 errors / 65% coverage ] ****** [3296 done /2678 queued / 16 running / 187 errors / 65% coverage ] ****** [3297 done /2678 queued / 16 running / 187 errors / 65% coverage ] ****** [3297 done /2678 queued / 16 running / 187 errors / 65% coverage ] ****** [3298 done /2677 queued / 16 running / 187 errors / 65% coverage ] ****** [3298 done /2677 queued / 16 running / 187 errors / 65% coverage ] ****** [3299 done /2679 queued / 16 running / 187 errors / 65% coverage ] ****** [3299 done /2679 queued / 16 running / 187 errors / 65% coverage ] ****** [3300 done /2681 queued / 16 running / 187 errors / 65% coverage ] ****** [3300 done /2681 queued / 16 running / 187 errors / 65% coverage ] ****** [3301 done /2682 queued / 16 running / 187 errors / 65% coverage ] ****** [3301 done /2682 queued / 16 running / 187 errors / 65% coverage ] ****** [3302 done /2683 queued / 16 running / 187 errors / 65% coverage ] ****** [3302 done /2683 queued / 16 running / 187 errors / 65% coverage ] ****** [3303 done /2685 queued / 16 running / 188 errors / 65% coverage ] ****** [3303 done /2685 queued / 16 running / 188 errors / 65% coverage ] ****** [3304 done /2684 queued / 16 running / 188 errors / 65% coverage ] ****** [3304 done /2684 queued / 16 running / 188 errors / 65% coverage ] ****** [3305 done /2686 queued / 16 running / 188 errors / 65% coverage ] ****** [3305 done /2686 queued / 16 running / 188 errors / 65% coverage ] ****** [3306 done /2685 queued / 16 running / 188 errors / 65% coverage ] ****** [3306 done /2685 queued / 16 running / 188 errors / 65% coverage ] ****** [3307 done /2686 queued / 16 running / 189 errors / 65% coverage ] ****** [3307 done /2686 queued / 16 running / 189 errors / 65% coverage ] ****** [3308 done /2686 queued / 16 running / 189 errors / 65% coverage ] ****** [3308 done /2686 queued / 16 running / 189 errors / 65% coverage ] ****** [3309 done /2689 queued / 16 running / 189 errors / 65% coverage ] ****** [3309 done /2689 queued / 16 running / 189 errors / 65% coverage ] ****** [3310 done /2691 queued / 16 running / 190 errors / 65% coverage ] ****** [3310 done /2691 queued / 16 running / 190 errors / 65% coverage ] ****** [3311 done /2695 queued / 16 running / 190 errors / 65% coverage ] ****** [3311 done /2695 queued / 16 running / 190 errors / 65% coverage ] ****** [3312 done /2696 queued / 16 running / 190 errors / 65% coverage ] ****** [3312 done /2696 queued / 16 running / 190 errors / 65% coverage ] ****** [3313 done /2696 queued / 16 running / 190 errors / 65% coverage ] ****** [3313 done /2696 queued / 16 running / 190 errors / 65% coverage ] ****** [3314 done /2697 queued / 16 running / 190 errors / 65% coverage ] ****** [3314 done /2697 queued / 16 running / 190 errors / 65% coverage ] ****** [3315 done /2698 queued / 16 running / 190 errors / 65% coverage ] ****** [3315 done /2698 queued / 16 running / 190 errors / 65% coverage ] ****** [3316 done /2702 queued / 16 running / 190 errors / 65% coverage ] ****** [3316 done /2702 queued / 16 running / 190 errors / 65% coverage ] ****** [3317 done /2705 queued / 16 running / 190 errors / 65% coverage ] ****** [3317 done /2705 queued / 16 running / 190 errors / 65% coverage ] ****** [3318 done /2704 queued / 16 running / 191 errors / 65% coverage ] ****** [3318 done /2704 queued / 16 running / 191 errors / 65% coverage ] ****** [3319 done /2704 queued / 16 running / 192 errors / 65% coverage ] ****** [3319 done /2704 queued / 16 running / 192 errors / 65% coverage ] ****** [3320 done /2705 queued / 16 running / 193 errors / 65% coverage ] ****** [3320 done /2705 queued / 16 running / 193 errors / 65% coverage ] ****** [3321 done /2706 queued / 16 running / 193 errors / 65% coverage ] ****** [3321 done /2706 queued / 16 running / 193 errors / 65% coverage ] ****** [3322 done /2708 queued / 16 running / 193 errors / 65% coverage ] ****** [3322 done /2708 queued / 16 running / 193 errors / 65% coverage ] ****** [3323 done /2708 queued / 16 running / 193 errors / 65% coverage ] ****** [3323 done /2708 queued / 16 running / 193 errors / 65% coverage ] ****** [3324 done /2708 queued / 16 running / 193 errors / 65% coverage ] ****** [3324 done /2708 queued / 16 running / 193 errors / 65% coverage ] ****** [3325 done /2708 queued / 16 running / 193 errors / 65% coverage ] ****** [3325 done /2708 queued / 16 running / 193 errors / 65% coverage ] ****** [3326 done /2709 queued / 16 running / 193 errors / 65% coverage ] ****** [3326 done /2709 queued / 16 running / 193 errors / 65% coverage ] ****** [3327 done /2709 queued / 16 running / 193 errors / 65% coverage ] ****** [3327 done /2709 queued / 16 running / 193 errors / 65% coverage ] ****** [3328 done /2710 queued / 16 running / 193 errors / 65% coverage ] ****** [3328 done /2710 queued / 16 running / 193 errors / 65% coverage ] ****** [3329 done /2712 queued / 16 running / 194 errors / 65% coverage ] ****** [3329 done /2712 queued / 16 running / 194 errors / 65% coverage ] ****** [3330 done /2712 queued / 16 running / 194 errors / 65% coverage ] ****** [3330 done /2712 queued / 16 running / 194 errors / 65% coverage ] ****** [3331 done /2712 queued / 16 running / 194 errors / 65% coverage ] ****** [3331 done /2712 queued / 16 running / 194 errors / 65% coverage ] ****** [3332 done /2713 queued / 16 running / 194 errors / 65% coverage ] ****** [3332 done /2713 queued / 16 running / 194 errors / 65% coverage ] ****** [3333 done /2713 queued / 16 running / 194 errors / 65% coverage ] ****** [3333 done /2713 queued / 16 running / 194 errors / 65% coverage ] ****** [3334 done /2712 queued / 16 running / 195 errors / 65% coverage ] ****** [3334 done /2712 queued / 16 running / 195 errors / 65% coverage ] ****** [3335 done /2711 queued / 16 running / 196 errors / 65% coverage ] ****** [3335 done /2711 queued / 16 running / 196 errors / 65% coverage ] ****** [3336 done /2711 queued / 16 running / 196 errors / 65% coverage ] ****** [3336 done /2711 queued / 16 running / 196 errors / 65% coverage ] ****** [3337 done /2713 queued / 16 running / 196 errors / 65% coverage ] ****** [3337 done /2713 queued / 16 running / 196 errors / 65% coverage ] ****** [3338 done /2713 queued / 16 running / 196 errors / 65% coverage ] ****** [3338 done /2713 queued / 16 running / 196 errors / 65% coverage ] ****** [3339 done /2713 queued / 16 running / 197 errors / 65% coverage ] ****** [3339 done /2713 queued / 16 running / 197 errors / 65% coverage ] ****** [3340 done /2718 queued / 16 running / 198 errors / 65% coverage ] ****** [3340 done /2718 queued / 16 running / 198 errors / 65% coverage ] ****** [3341 done /2718 queued / 16 running / 198 errors / 65% coverage ] ****** [3341 done /2718 queued / 16 running / 198 errors / 65% coverage ] ****** [3342 done /2719 queued / 16 running / 198 errors / 65% coverage ] ****** [3342 done /2719 queued / 16 running / 198 errors / 65% coverage ] ****** [3343 done /2720 queued / 16 running / 198 errors / 65% coverage ] ****** [3343 done /2720 queued / 16 running / 198 errors / 65% coverage ] ****** [3344 done /2720 queued / 16 running / 198 errors / 65% coverage ] ****** [3344 done /2720 queued / 16 running / 198 errors / 65% coverage ] ****** [3345 done /2721 queued / 16 running / 198 errors / 65% coverage ] ****** [3345 done /2721 queued / 16 running / 198 errors / 65% coverage ] ****** [3346 done /2725 queued / 16 running / 198 errors / 65% coverage ] ****** [3346 done /2725 queued / 16 running / 198 errors / 65% coverage ] ****** [3347 done /2726 queued / 16 running / 198 errors / 65% coverage ] ****** [3347 done /2726 queued / 16 running / 198 errors / 65% coverage ] ****** [3348 done /2730 queued / 16 running / 198 errors / 65% coverage ] ****** [3348 done /2730 queued / 16 running / 198 errors / 65% coverage ] ****** [3349 done /2733 queued / 16 running / 198 errors / 65% coverage ] ****** [3349 done /2733 queued / 16 running / 198 errors / 65% coverage ] ****** [3350 done /2734 queued / 16 running / 198 errors / 65% coverage ] ****** [3350 done /2734 queued / 16 running / 198 errors / 65% coverage ] ****** [3351 done /2738 queued / 16 running / 198 errors / 65% coverage ] ****** [3351 done /2738 queued / 16 running / 198 errors / 65% coverage ] ****** [3352 done /2742 queued / 16 running / 198 errors / 65% coverage ] ****** [3352 done /2742 queued / 16 running / 198 errors / 65% coverage ] ****** [3353 done /2742 queued / 16 running / 198 errors / 65% coverage ] ****** [3353 done /2742 queued / 16 running / 198 errors / 65% coverage ] ****** [3354 done /2744 queued / 16 running / 198 errors / 65% coverage ] ****** [3354 done /2744 queued / 16 running / 198 errors / 65% coverage ] ****** [3355 done /2745 queued / 16 running / 198 errors / 65% coverage ] ****** [3355 done /2745 queued / 16 running / 198 errors / 65% coverage ] ****** [3356 done /2744 queued / 16 running / 199 errors / 65% coverage ] ****** [3356 done /2744 queued / 16 running / 199 errors / 65% coverage ] ****** [3357 done /2745 queued / 16 running / 199 errors / 65% coverage ] ****** [3357 done /2745 queued / 16 running / 199 errors / 65% coverage ] ****** [3358 done /2745 queued / 16 running / 199 errors / 65% coverage ] ****** [3358 done /2745 queued / 16 running / 199 errors / 65% coverage ] ****** [3359 done /2745 queued / 16 running / 199 errors / 65% coverage ] ****** [3359 done /2745 queued / 16 running / 199 errors / 65% coverage ] ****** [3360 done /2746 queued / 16 running / 199 errors / 65% coverage ] ****** [3360 done /2746 queued / 16 running / 199 errors / 65% coverage ] ****** [3361 done /2746 queued / 16 running / 199 errors / 65% coverage ] ****** [3361 done /2746 queued / 16 running / 199 errors / 65% coverage ] ****** [3362 done /2746 queued / 16 running / 199 errors / 65% coverage ] ****** [3362 done /2746 queued / 16 running / 199 errors / 65% coverage ] ****** [3363 done /2746 queued / 16 running / 199 errors / 65% coverage ] ****** [3363 done /2746 queued / 16 running / 199 errors / 65% coverage ] ****** [3364 done /2747 queued / 16 running / 199 errors / 65% coverage ] ****** [3364 done /2747 queued / 16 running / 199 errors / 65% coverage ] ****** [3365 done /2748 queued / 16 running / 199 errors / 65% coverage ] ****** [3365 done /2748 queued / 16 running / 199 errors / 65% coverage ] ****** [3366 done /2748 queued / 16 running / 199 errors / 65% coverage ] ****** [3366 done /2748 queued / 16 running / 199 errors / 65% coverage ] ****** [3367 done /2748 queued / 16 running / 199 errors / 65% coverage ] ****** [3367 done /2748 queued / 16 running / 199 errors / 65% coverage ] ****** [3368 done /2750 queued / 16 running / 199 errors / 65% coverage ] ****** [3368 done /2750 queued / 16 running / 199 errors / 65% coverage ] ****** [3369 done /2751 queued / 16 running / 199 errors / 65% coverage ] ****** [3369 done /2751 queued / 16 running / 199 errors / 65% coverage ] ****** [3370 done /2752 queued / 16 running / 199 errors / 65% coverage ] ****** [3370 done /2752 queued / 16 running / 199 errors / 65% coverage ] ****** [3371 done /2753 queued / 16 running / 199 errors / 65% coverage ] ****** [3371 done /2753 queued / 16 running / 199 errors / 65% coverage ] ****** [3372 done /2754 queued / 16 running / 199 errors / 65% coverage ] ****** [3372 done /2754 queued / 16 running / 199 errors / 65% coverage ] ****** [3373 done /2754 queued / 16 running / 199 errors / 65% coverage ] ****** [3373 done /2754 queued / 16 running / 199 errors / 65% coverage ] ****** [3374 done /2755 queued / 16 running / 199 errors / 65% coverage ] ****** [3374 done /2755 queued / 16 running / 199 errors / 65% coverage ] ****** [3375 done /2755 queued / 16 running / 199 errors / 65% coverage ] ****** [3375 done /2755 queued / 16 running / 199 errors / 65% coverage ] ****** [3376 done /2756 queued / 16 running / 199 errors / 65% coverage ] ****** [3376 done /2756 queued / 16 running / 199 errors / 65% coverage ] ****** [3377 done /2756 queued / 16 running / 199 errors / 65% coverage ] ****** [3377 done /2756 queued / 16 running / 199 errors / 65% coverage ] ****** [3378 done /2760 queued / 16 running / 199 errors / 65% coverage ] ****** [3378 done /2760 queued / 16 running / 199 errors / 65% coverage ] ****** [3379 done /2760 queued / 16 running / 199 errors / 65% coverage ] ****** [3379 done /2760 queued / 16 running / 199 errors / 65% coverage ] ****** [3380 done /2762 queued / 16 running / 199 errors / 65% coverage ] ****** [3380 done /2762 queued / 16 running / 199 errors / 65% coverage ] ****** [3381 done /2763 queued / 16 running / 200 errors / 65% coverage ] ****** [3381 done /2763 queued / 16 running / 200 errors / 65% coverage ] ****** [3382 done /2764 queued / 16 running / 200 errors / 65% coverage ] ****** [3382 done /2764 queued / 16 running / 200 errors / 65% coverage ] ****** [3383 done /2767 queued / 16 running / 200 errors / 65% coverage ] ****** [3383 done /2767 queued / 16 running / 200 errors / 65% coverage ] ****** [3384 done /2768 queued / 16 running / 201 errors / 65% coverage ] ****** [3384 done /2768 queued / 16 running / 201 errors / 65% coverage ] ****** [3385 done /2768 queued / 16 running / 201 errors / 65% coverage ] ****** [3385 done /2768 queued / 16 running / 201 errors / 65% coverage ] ****** [3386 done /2769 queued / 16 running / 201 errors / 65% coverage ] ****** [3386 done /2769 queued / 16 running / 201 errors / 65% coverage ] ****** [3387 done /2771 queued / 16 running / 202 errors / 65% coverage ] ****** [3387 done /2771 queued / 16 running / 202 errors / 65% coverage ] ****** [3388 done /2772 queued / 16 running / 203 errors / 65% coverage ] ****** [3388 done /2772 queued / 16 running / 203 errors / 65% coverage ] ****** [3389 done /2777 queued / 16 running / 203 errors / 65% coverage ] ****** [3389 done /2777 queued / 16 running / 203 errors / 65% coverage ] ****** [3390 done /2779 queued / 16 running / 203 errors / 65% coverage ] ****** [3390 done /2779 queued / 16 running / 203 errors / 65% coverage ] ****** [3391 done /2780 queued / 16 running / 203 errors / 65% coverage ] ****** [3391 done /2780 queued / 16 running / 203 errors / 65% coverage ] ****** [3392 done /2781 queued / 16 running / 203 errors / 65% coverage ] ****** [3392 done /2781 queued / 16 running / 203 errors / 65% coverage ] ****** [3393 done /2784 queued / 16 running / 203 errors / 65% coverage ] ****** [3393 done /2784 queued / 16 running / 203 errors / 65% coverage ] ****** [3394 done /2784 queued / 16 running / 203 errors / 65% coverage ] ****** [3394 done /2784 queued / 16 running / 203 errors / 65% coverage ] ****** [3395 done /2785 queued / 16 running / 203 errors / 65% coverage ] ****** [3395 done /2785 queued / 16 running / 203 errors / 65% coverage ] ****** [3396 done /2785 queued / 16 running / 203 errors / 65% coverage ] ****** [3396 done /2785 queued / 16 running / 203 errors / 65% coverage ] ****** [3397 done /2784 queued / 16 running / 204 errors / 65% coverage ] ****** [3397 done /2784 queued / 16 running / 204 errors / 65% coverage ] ****** [3398 done /2786 queued / 16 running / 204 errors / 65% coverage ] ****** [3398 done /2786 queued / 16 running / 204 errors / 65% coverage ] ****** [3399 done /2785 queued / 16 running / 205 errors / 65% coverage ] ****** [3399 done /2785 queued / 16 running / 205 errors / 65% coverage ] ****** [3400 done /2785 queued / 16 running / 205 errors / 65% coverage ] ****** [3400 done /2785 queued / 16 running / 205 errors / 65% coverage ] ****** [3401 done /2786 queued / 16 running / 205 errors / 65% coverage ] ****** [3401 done /2786 queued / 16 running / 205 errors / 65% coverage ] ****** [3402 done /2787 queued / 16 running / 205 errors / 65% coverage ] ****** [3402 done /2787 queued / 16 running / 205 errors / 65% coverage ] ****** [3403 done /2786 queued / 16 running / 206 errors / 65% coverage ] ****** [3403 done /2786 queued / 16 running / 206 errors / 65% coverage ] ****** [3404 done /2785 queued / 16 running / 207 errors / 65% coverage ] ****** [3404 done /2785 queued / 16 running / 207 errors / 65% coverage ] ****** [3405 done /2786 queued / 16 running / 207 errors / 65% coverage ] ****** [3405 done /2786 queued / 16 running / 207 errors / 65% coverage ] ****** [3406 done /2787 queued / 16 running / 207 errors / 65% coverage ] ****** [3406 done /2787 queued / 16 running / 207 errors / 65% coverage ] ****** [3407 done /2789 queued / 16 running / 207 errors / 65% coverage ] ****** [3407 done /2789 queued / 16 running / 207 errors / 65% coverage ] ****** [3408 done /2790 queued / 16 running / 207 errors / 65% coverage ] ****** [3408 done /2790 queued / 16 running / 207 errors / 65% coverage ] ****** [3409 done /2790 queued / 16 running / 207 errors / 65% coverage ] ****** [3409 done /2790 queued / 16 running / 207 errors / 65% coverage ] ****** [3410 done /2791 queued / 16 running / 207 errors / 65% coverage ] ****** [3410 done /2791 queued / 16 running / 207 errors / 65% coverage ] ****** [3411 done /2791 queued / 16 running / 207 errors / 65% coverage ] ****** [3411 done /2791 queued / 16 running / 207 errors / 65% coverage ] ****** [3412 done /2793 queued / 16 running / 207 errors / 65% coverage ] ****** [3412 done /2793 queued / 16 running / 207 errors / 65% coverage ] ****** [3413 done /2795 queued / 16 running / 207 errors / 65% coverage ] ****** [3413 done /2795 queued / 16 running / 207 errors / 65% coverage ] ****** [3414 done /2796 queued / 16 running / 207 errors / 65% coverage ] ****** [3414 done /2796 queued / 16 running / 207 errors / 65% coverage ] ****** [3415 done /2796 queued / 16 running / 207 errors / 65% coverage ] ****** [3415 done /2796 queued / 16 running / 207 errors / 65% coverage ] ****** [3416 done /2797 queued / 16 running / 207 errors / 65% coverage ] ****** [3416 done /2797 queued / 16 running / 207 errors / 65% coverage ] ****** [3417 done /2798 queued / 16 running / 207 errors / 65% coverage ] ****** [3417 done /2798 queued / 16 running / 207 errors / 65% coverage ] ****** [3418 done /2799 queued / 16 running / 207 errors / 65% coverage ] ****** [3418 done /2799 queued / 16 running / 207 errors / 65% coverage ] ****** [3419 done /2803 queued / 16 running / 207 errors / 65% coverage ] ****** [3419 done /2803 queued / 16 running / 207 errors / 65% coverage ] ****** [3420 done /2806 queued / 16 running / 207 errors / 65% coverage ] ****** [3420 done /2806 queued / 16 running / 207 errors / 65% coverage ] ****** [3421 done /2810 queued / 16 running / 207 errors / 65% coverage ] ****** [3421 done /2810 queued / 16 running / 207 errors / 65% coverage ] ****** [3422 done /2811 queued / 16 running / 207 errors / 65% coverage ] ****** [3422 done /2811 queued / 16 running / 207 errors / 65% coverage ] ****** [3423 done /2812 queued / 16 running / 207 errors / 65% coverage ] ****** [3423 done /2812 queued / 16 running / 207 errors / 65% coverage ] ****** [3424 done /2812 queued / 16 running / 207 errors / 65% coverage ] ****** [3424 done /2812 queued / 16 running / 207 errors / 65% coverage ] ****** [3425 done /2813 queued / 16 running / 207 errors / 65% coverage ] ****** [3425 done /2813 queued / 16 running / 207 errors / 65% coverage ] ****** [3426 done /2817 queued / 16 running / 207 errors / 65% coverage ] ****** [3426 done /2817 queued / 16 running / 207 errors / 65% coverage ] ****** [3427 done /2821 queued / 16 running / 207 errors / 65% coverage ] ****** [3427 done /2821 queued / 16 running / 207 errors / 65% coverage ] ****** [3428 done /2823 queued / 16 running / 207 errors / 65% coverage ] ****** [3428 done /2823 queued / 16 running / 207 errors / 65% coverage ] ****** [3429 done /2827 queued / 16 running / 207 errors / 65% coverage ] ****** [3429 done /2827 queued / 16 running / 207 errors / 65% coverage ] ****** [3430 done /2831 queued / 16 running / 207 errors / 65% coverage ] ****** [3430 done /2831 queued / 16 running / 207 errors / 65% coverage ] ****** [3431 done /2832 queued / 16 running / 207 errors / 65% coverage ] ****** [3431 done /2832 queued / 16 running / 207 errors / 65% coverage ] ****** [3432 done /2831 queued / 16 running / 207 errors / 65% coverage ] ****** [3432 done /2831 queued / 16 running / 207 errors / 65% coverage ] ****** [3433 done /2831 queued / 16 running / 207 errors / 65% coverage ] ****** [3433 done /2831 queued / 16 running / 207 errors / 65% coverage ] ****** [3434 done /2831 queued / 16 running / 207 errors / 65% coverage ] ****** [3434 done /2831 queued / 16 running / 207 errors / 65% coverage ] ****** [3435 done /2832 queued / 16 running / 207 errors / 65% coverage ] ****** [3435 done /2832 queued / 16 running / 207 errors / 65% coverage ] ****** [3436 done /2832 queued / 16 running / 207 errors / 65% coverage ] ****** [3436 done /2832 queued / 16 running / 207 errors / 65% coverage ] ****** [3437 done /2833 queued / 16 running / 207 errors / 65% coverage ] ****** [3437 done /2833 queued / 16 running / 207 errors / 65% coverage ] ****** [3438 done /2834 queued / 16 running / 207 errors / 65% coverage ] ****** [3438 done /2834 queued / 16 running / 207 errors / 65% coverage ] ****** [3439 done /2834 queued / 16 running / 207 errors / 65% coverage ] ****** [3439 done /2834 queued / 16 running / 207 errors / 65% coverage ] ****** [3440 done /2834 queued / 16 running / 207 errors / 65% coverage ] ****** [3440 done /2834 queued / 16 running / 207 errors / 65% coverage ] ****** [3441 done /2834 queued / 16 running / 207 errors / 65% coverage ] ****** [3441 done /2834 queued / 16 running / 207 errors / 65% coverage ] ****** [3442 done /2835 queued / 16 running / 207 errors / 65% coverage ] ****** [3442 done /2835 queued / 16 running / 207 errors / 65% coverage ] ****** [3443 done /2836 queued / 16 running / 207 errors / 65% coverage ] ****** [3443 done /2836 queued / 16 running / 207 errors / 65% coverage ] ****** [3444 done /2836 queued / 16 running / 207 errors / 65% coverage ] ****** [3444 done /2836 queued / 16 running / 207 errors / 65% coverage ] ****** [3445 done /2837 queued / 16 running / 207 errors / 65% coverage ] ****** [3445 done /2837 queued / 16 running / 207 errors / 65% coverage ] ****** [3446 done /2838 queued / 16 running / 207 errors / 65% coverage ] ****** [3446 done /2838 queued / 16 running / 207 errors / 65% coverage ] ****** [3447 done /2838 queued / 16 running / 207 errors / 65% coverage ] ****** [3447 done /2838 queued / 16 running / 207 errors / 65% coverage ] ****** [3448 done /2838 queued / 16 running / 207 errors / 65% coverage ] ****** [3448 done /2838 queued / 16 running / 207 errors / 65% coverage ] ****** [3449 done /2838 queued / 16 running / 207 errors / 65% coverage ] ****** [3449 done /2838 queued / 16 running / 207 errors / 65% coverage ] ****** [3450 done /2838 queued / 16 running / 207 errors / 65% coverage ] ****** [3450 done /2838 queued / 16 running / 207 errors / 65% coverage ] ****** [3451 done /2838 queued / 16 running / 207 errors / 65% coverage ] ****** [3451 done /2838 queued / 16 running / 207 errors / 65% coverage ] ****** [3452 done /2838 queued / 16 running / 207 errors / 65% coverage ] ****** [3452 done /2838 queued / 16 running / 207 errors / 65% coverage ] ****** [3453 done /2838 queued / 16 running / 207 errors / 65% coverage ] ****** [3453 done /2838 queued / 16 running / 207 errors / 65% coverage ] ****** [3454 done /2838 queued / 16 running / 207 errors / 65% coverage ] ****** [3454 done /2838 queued / 16 running / 207 errors / 65% coverage ] ****** [3455 done /2838 queued / 16 running / 207 errors / 65% coverage ] ****** [3455 done /2838 queued / 16 running / 207 errors / 65% coverage ] ****** [3456 done /2838 queued / 16 running / 207 errors / 65% coverage ] ****** [3456 done /2838 queued / 16 running / 207 errors / 65% coverage ] ****** [3457 done /2838 queued / 16 running / 207 errors / 65% coverage ] ****** [3457 done /2838 queued / 16 running / 207 errors / 65% coverage ] ****** [3458 done /2839 queued / 16 running / 207 errors / 65% coverage ] ****** [3458 done /2839 queued / 16 running / 207 errors / 65% coverage ] ****** [3459 done /2839 queued / 16 running / 207 errors / 65% coverage ] ****** [3459 done /2839 queued / 16 running / 207 errors / 65% coverage ] ****** [3460 done /2840 queued / 16 running / 207 errors / 65% coverage ] ****** [3460 done /2840 queued / 16 running / 207 errors / 65% coverage ] ****** [3461 done /2840 queued / 16 running / 207 errors / 65% coverage ] ****** [3461 done /2840 queued / 16 running / 207 errors / 65% coverage ] ****** [3462 done /2840 queued / 16 running / 207 errors / 65% coverage ] ****** [3462 done /2840 queued / 16 running / 207 errors / 65% coverage ] ****** [3463 done /2841 queued / 16 running / 207 errors / 65% coverage ] ****** [3463 done /2841 queued / 16 running / 207 errors / 65% coverage ] ****** [3464 done /2841 queued / 16 running / 207 errors / 65% coverage ] ****** [3464 done /2841 queued / 16 running / 207 errors / 65% coverage ] ****** [3465 done /2843 queued / 16 running / 207 errors / 65% coverage ] ****** [3465 done /2843 queued / 16 running / 207 errors / 65% coverage ] ****** [3466 done /2847 queued / 16 running / 207 errors / 65% coverage ] ****** [3466 done /2847 queued / 16 running / 207 errors / 65% coverage ] ****** [3467 done /2851 queued / 16 running / 207 errors / 65% coverage ] ****** [3467 done /2851 queued / 16 running / 207 errors / 65% coverage ] ****** [3468 done /2852 queued / 16 running / 207 errors / 65% coverage ] ****** [3468 done /2852 queued / 16 running / 207 errors / 65% coverage ] ****** [3469 done /2857 queued / 16 running / 207 errors / 65% coverage ] ****** [3469 done /2857 queued / 16 running / 207 errors / 65% coverage ] ****** [3470 done /2858 queued / 16 running / 207 errors / 65% coverage ] ****** [3470 done /2858 queued / 16 running / 207 errors / 65% coverage ] ****** [3471 done /2859 queued / 16 running / 207 errors / 65% coverage ] ****** [3471 done /2859 queued / 16 running / 207 errors / 65% coverage ] ****** [3472 done /2863 queued / 16 running / 207 errors / 65% coverage ] ****** [3472 done /2863 queued / 16 running / 207 errors / 65% coverage ] ****** [3473 done /2866 queued / 16 running / 207 errors / 65% coverage ] ****** [3473 done /2866 queued / 16 running / 207 errors / 65% coverage ] ****** [3474 done /2867 queued / 16 running / 207 errors / 65% coverage ] ****** [3474 done /2867 queued / 16 running / 207 errors / 65% coverage ] ****** [3475 done /2868 queued / 16 running / 207 errors / 65% coverage ] ****** [3475 done /2868 queued / 16 running / 207 errors / 65% coverage ] ****** [3476 done /2870 queued / 16 running / 207 errors / 65% coverage ] ****** [3476 done /2870 queued / 16 running / 207 errors / 65% coverage ] ****** [3477 done /2872 queued / 16 running / 207 errors / 65% coverage ] ****** [3477 done /2872 queued / 16 running / 207 errors / 65% coverage ] ****** [3478 done /2872 queued / 16 running / 207 errors / 65% coverage ] ****** [3478 done /2872 queued / 16 running / 207 errors / 65% coverage ] ****** [3479 done /2873 queued / 16 running / 207 errors / 65% coverage ] ****** [3479 done /2873 queued / 16 running / 207 errors / 65% coverage ] ****** [3480 done /2875 queued / 16 running / 207 errors / 65% coverage ] ****** [3480 done /2875 queued / 16 running / 207 errors / 65% coverage ] ****** [3481 done /2879 queued / 16 running / 207 errors / 65% coverage ] ****** [3481 done /2879 queued / 16 running / 207 errors / 65% coverage ] ****** [3482 done /2879 queued / 16 running / 207 errors / 65% coverage ] ****** [3482 done /2879 queued / 16 running / 207 errors / 65% coverage ] ****** [3483 done /2879 queued / 16 running / 207 errors / 65% coverage ] ****** [3483 done /2879 queued / 16 running / 207 errors / 65% coverage ] ****** [3484 done /2880 queued / 16 running / 207 errors / 65% coverage ] ****** [3484 done /2880 queued / 16 running / 207 errors / 65% coverage ] ****** [3485 done /2880 queued / 16 running / 207 errors / 65% coverage ] ****** [3485 done /2880 queued / 16 running / 207 errors / 65% coverage ] ****** [3486 done /2880 queued / 16 running / 207 errors / 65% coverage ] ****** [3486 done /2880 queued / 16 running / 207 errors / 65% coverage ] ****** [3487 done /2881 queued / 16 running / 207 errors / 65% coverage ] ****** [3487 done /2881 queued / 16 running / 207 errors / 65% coverage ] ****** [3488 done /2882 queued / 16 running / 207 errors / 65% coverage ] ****** [3488 done /2882 queued / 16 running / 207 errors / 65% coverage ] ****** [3489 done /2882 queued / 16 running / 207 errors / 65% coverage ] ****** [3489 done /2882 queued / 16 running / 207 errors / 65% coverage ] ****** [3490 done /2882 queued / 16 running / 207 errors / 65% coverage ] ****** [3490 done /2882 queued / 16 running / 207 errors / 65% coverage ] ****** [3491 done /2884 queued / 16 running / 207 errors / 65% coverage ] ****** [3491 done /2884 queued / 16 running / 207 errors / 65% coverage ] ****** [3492 done /2884 queued / 16 running / 207 errors / 65% coverage ] ****** [3492 done /2884 queued / 16 running / 207 errors / 65% coverage ] ****** [3493 done /2884 queued / 16 running / 207 errors / 65% coverage ] ****** [3493 done /2884 queued / 16 running / 207 errors / 65% coverage ] ****** [3494 done /2886 queued / 16 running / 207 errors / 65% coverage ] ****** [3494 done /2886 queued / 16 running / 207 errors / 65% coverage ] ****** [3495 done /2887 queued / 16 running / 207 errors / 65% coverage ] ****** [3495 done /2887 queued / 16 running / 207 errors / 65% coverage ] ****** [3496 done /2888 queued / 16 running / 207 errors / 65% coverage ] ****** [3496 done /2888 queued / 16 running / 207 errors / 65% coverage ] ****** [3497 done /2888 queued / 16 running / 207 errors / 65% coverage ] ****** [3497 done /2888 queued / 16 running / 207 errors / 65% coverage ] ****** [3498 done /2888 queued / 16 running / 207 errors / 65% coverage ] ****** [3498 done /2888 queued / 16 running / 207 errors / 65% coverage ] ****** [3499 done /2888 queued / 16 running / 207 errors / 65% coverage ] ****** [3499 done /2888 queued / 16 running / 207 errors / 65% coverage ] ****** [3500 done /2889 queued / 16 running / 207 errors / 65% coverage ] ****** [3500 done /2889 queued / 16 running / 207 errors / 65% coverage ] ****** [3501 done /2888 queued / 16 running / 207 errors / 65% coverage ] ****** [3501 done /2888 queued / 16 running / 207 errors / 65% coverage ] ****** [3502 done /2887 queued / 16 running / 207 errors / 65% coverage ] ****** [3502 done /2887 queued / 16 running / 207 errors / 65% coverage ] ****** [3503 done /2886 queued / 16 running / 207 errors / 65% coverage ] ****** [3503 done /2886 queued / 16 running / 207 errors / 65% coverage ] ****** [3504 done /2886 queued / 16 running / 207 errors / 65% coverage ] ****** [3504 done /2886 queued / 16 running / 207 errors / 65% coverage ] ****** [3505 done /2887 queued / 16 running / 207 errors / 65% coverage ] ****** [3505 done /2887 queued / 16 running / 207 errors / 65% coverage ] ****** [3506 done /2887 queued / 16 running / 207 errors / 65% coverage ] ****** [3506 done /2887 queued / 16 running / 207 errors / 65% coverage ] ****** [3507 done /2887 queued / 16 running / 207 errors / 65% coverage ] ****** [3507 done /2887 queued / 16 running / 207 errors / 65% coverage ] ****** [3508 done /2890 queued / 16 running / 207 errors / 65% coverage ] ****** [3508 done /2890 queued / 16 running / 207 errors / 65% coverage ] ****** [3509 done /2890 queued / 16 running / 207 errors / 65% coverage ] ****** [3509 done /2890 queued / 16 running / 207 errors / 65% coverage ] ****** [3510 done /2891 queued / 16 running / 207 errors / 65% coverage ] ****** [3510 done /2891 queued / 16 running / 207 errors / 65% coverage ] ****** [3511 done /2891 queued / 16 running / 207 errors / 65% coverage ] ****** [3511 done /2891 queued / 16 running / 207 errors / 65% coverage ] ****** [3512 done /2893 queued / 16 running / 207 errors / 65% coverage ] ****** [3512 done /2893 queued / 16 running / 207 errors / 65% coverage ] ****** [3513 done /2895 queued / 16 running / 207 errors / 65% coverage ] ****** [3513 done /2895 queued / 16 running / 207 errors / 65% coverage ] ****** [3514 done /2897 queued / 16 running / 207 errors / 65% coverage ] ****** [3514 done /2897 queued / 16 running / 207 errors / 65% coverage ] ****** [3515 done /2898 queued / 16 running / 207 errors / 65% coverage ] ****** [3515 done /2898 queued / 16 running / 207 errors / 65% coverage ] ****** [3516 done /2902 queued / 16 running / 207 errors / 65% coverage ] ****** [3516 done /2902 queued / 16 running / 207 errors / 65% coverage ] ****** [3517 done /2903 queued / 16 running / 207 errors / 65% coverage ] ****** [3517 done /2903 queued / 16 running / 207 errors / 65% coverage ] ****** [3518 done /2904 queued / 16 running / 207 errors / 65% coverage ] ****** [3518 done /2904 queued / 16 running / 207 errors / 65% coverage ] ****** [3519 done /2907 queued / 16 running / 207 errors / 65% coverage ] ****** [3519 done /2907 queued / 16 running / 207 errors / 65% coverage ] ****** [3520 done /2909 queued / 16 running / 207 errors / 65% coverage ] ****** [3520 done /2909 queued / 16 running / 207 errors / 65% coverage ] ****** [3521 done /2911 queued / 16 running / 207 errors / 65% coverage ] ****** [3521 done /2911 queued / 16 running / 207 errors / 65% coverage ] ****** [3522 done /2915 queued / 16 running / 207 errors / 65% coverage ] ****** [3522 done /2915 queued / 16 running / 207 errors / 65% coverage ] ****** [3523 done /2917 queued / 16 running / 207 errors / 65% coverage ] ****** [3523 done /2917 queued / 16 running / 207 errors / 65% coverage ] ****** [3524 done /2916 queued / 16 running / 207 errors / 65% coverage ] ****** [3524 done /2916 queued / 16 running / 207 errors / 65% coverage ] ****** [3525 done /2915 queued / 16 running / 207 errors / 65% coverage ] ****** [3525 done /2915 queued / 16 running / 207 errors / 65% coverage ] ****** [3526 done /2915 queued / 16 running / 207 errors / 65% coverage ] ****** [3526 done /2915 queued / 16 running / 207 errors / 65% coverage ] ****** [3527 done /2914 queued / 16 running / 207 errors / 65% coverage ] ****** [3527 done /2914 queued / 16 running / 207 errors / 65% coverage ] ****** [3528 done /2915 queued / 16 running / 207 errors / 65% coverage ] ****** [3528 done /2915 queued / 16 running / 207 errors / 65% coverage ] ****** [3529 done /2914 queued / 16 running / 207 errors / 65% coverage ] ****** [3529 done /2914 queued / 16 running / 207 errors / 65% coverage ] ****** [3530 done /2913 queued / 16 running / 207 errors / 65% coverage ] ****** [3530 done /2913 queued / 16 running / 207 errors / 65% coverage ] ****** [3531 done /2913 queued / 16 running / 207 errors / 65% coverage ] ****** [3531 done /2913 queued / 16 running / 207 errors / 65% coverage ] ****** [3532 done /2913 queued / 16 running / 207 errors / 65% coverage ] ****** [3532 done /2913 queued / 16 running / 207 errors / 65% coverage ] ****** [3533 done /2913 queued / 16 running / 207 errors / 65% coverage ] ****** [3533 done /2913 queued / 16 running / 207 errors / 65% coverage ] ****** [3534 done /2913 queued / 16 running / 207 errors / 65% coverage ] ****** [3534 done /2913 queued / 16 running / 207 errors / 65% coverage ] ****** [3535 done /2914 queued / 16 running / 207 errors / 65% coverage ] ****** [3535 done /2914 queued / 16 running / 207 errors / 65% coverage ] ****** [3536 done /2914 queued / 16 running / 207 errors / 65% coverage ] ****** [3536 done /2914 queued / 16 running / 207 errors / 65% coverage ] ****** [3537 done /2914 queued / 16 running / 207 errors / 65% coverage ] ****** [3537 done /2914 queued / 16 running / 207 errors / 65% coverage ] ****** [3538 done /2914 queued / 16 running / 207 errors / 65% coverage ] ****** [3538 done /2914 queued / 16 running / 207 errors / 65% coverage ] ****** [3539 done /2915 queued / 16 running / 207 errors / 65% coverage ] ****** [3539 done /2915 queued / 16 running / 207 errors / 65% coverage ] ****** [3540 done /2916 queued / 16 running / 207 errors / 65% coverage ] ****** [3540 done /2916 queued / 16 running / 207 errors / 65% coverage ] ****** [3541 done /2916 queued / 16 running / 207 errors / 65% coverage ] ****** [3541 done /2916 queued / 16 running / 207 errors / 65% coverage ] ****** [3542 done /2916 queued / 16 running / 207 errors / 65% coverage ] ****** [3542 done /2916 queued / 16 running / 207 errors / 65% coverage ] ****** [3543 done /2916 queued / 16 running / 207 errors / 65% coverage ] ****** [3543 done /2916 queued / 16 running / 207 errors / 65% coverage ] ****** [3544 done /2918 queued / 16 running / 207 errors / 65% coverage ] ****** [3544 done /2918 queued / 16 running / 207 errors / 65% coverage ] ****** [3545 done /2919 queued / 16 running / 207 errors / 65% coverage ] ****** [3545 done /2919 queued / 16 running / 207 errors / 65% coverage ] ****** [3546 done /2919 queued / 16 running / 207 errors / 65% coverage ] ****** [3546 done /2919 queued / 16 running / 207 errors / 65% coverage ] ****** [3547 done /2923 queued / 16 running / 207 errors / 65% coverage ] ****** [3547 done /2923 queued / 16 running / 207 errors / 65% coverage ] ****** [3548 done /2925 queued / 16 running / 207 errors / 65% coverage ] ****** [3548 done /2925 queued / 16 running / 207 errors / 65% coverage ] ****** [3549 done /2926 queued / 16 running / 207 errors / 65% coverage ] ****** [3549 done /2926 queued / 16 running / 207 errors / 65% coverage ] ****** [3550 done /2929 queued / 16 running / 207 errors / 65% coverage ] ****** [3550 done /2929 queued / 16 running / 207 errors / 65% coverage ] ****** [3551 done /2931 queued / 16 running / 207 errors / 65% coverage ] ****** [3551 done /2931 queued / 16 running / 207 errors / 65% coverage ] ****** [3552 done /2932 queued / 16 running / 207 errors / 65% coverage ] ****** [3552 done /2932 queued / 16 running / 207 errors / 65% coverage ] ****** [3553 done /2936 queued / 16 running / 207 errors / 65% coverage ] ****** [3553 done /2936 queued / 16 running / 207 errors / 65% coverage ] ****** [3554 done /2937 queued / 16 running / 207 errors / 65% coverage ] ****** [3554 done /2937 queued / 16 running / 207 errors / 65% coverage ] ****** [3555 done /2942 queued / 16 running / 207 errors / 65% coverage ] ****** [3555 done /2942 queued / 16 running / 207 errors / 65% coverage ] ****** [3556 done /2943 queued / 16 running / 207 errors / 65% coverage ] ****** [3556 done /2943 queued / 16 running / 207 errors / 65% coverage ] ****** [3557 done /2944 queued / 16 running / 207 errors / 65% coverage ] ****** [3557 done /2944 queued / 16 running / 207 errors / 65% coverage ] ****** [3558 done /2947 queued / 16 running / 207 errors / 65% coverage ] ****** [3558 done /2947 queued / 16 running / 207 errors / 65% coverage ] ****** [3559 done /2946 queued / 16 running / 207 errors / 65% coverage ] ****** [3559 done /2946 queued / 16 running / 207 errors / 65% coverage ] ****** [3560 done /2949 queued / 16 running / 207 errors / 65% coverage ] ****** [3560 done /2949 queued / 16 running / 207 errors / 65% coverage ] ****** [3561 done /2949 queued / 16 running / 207 errors / 65% coverage ] ****** [3561 done /2949 queued / 16 running / 207 errors / 65% coverage ] ****** [3562 done /2948 queued / 16 running / 207 errors / 65% coverage ] ****** [3562 done /2948 queued / 16 running / 207 errors / 65% coverage ] ****** [3563 done /2948 queued / 16 running / 207 errors / 65% coverage ] ****** [3563 done /2948 queued / 16 running / 207 errors / 65% coverage ] ****** [3564 done /2949 queued / 16 running / 207 errors / 65% coverage ] ****** [3564 done /2949 queued / 16 running / 207 errors / 65% coverage ] ****** [3565 done /2948 queued / 16 running / 207 errors / 65% coverage ] ****** [3565 done /2948 queued / 16 running / 207 errors / 65% coverage ] ****** [3566 done /2948 queued / 16 running / 207 errors / 65% coverage ] ****** [3566 done /2948 queued / 16 running / 207 errors / 65% coverage ] ****** [3567 done /2947 queued / 16 running / 207 errors / 65% coverage ] ****** [3567 done /2947 queued / 16 running / 207 errors / 65% coverage ] ****** [3568 done /2948 queued / 16 running / 207 errors / 65% coverage ] ****** [3568 done /2948 queued / 16 running / 207 errors / 65% coverage ] ****** [3569 done /2948 queued / 16 running / 207 errors / 65% coverage ] ****** [3569 done /2948 queued / 16 running / 207 errors / 65% coverage ] ****** [3570 done /2948 queued / 16 running / 207 errors / 65% coverage ] ****** [3570 done /2948 queued / 16 running / 207 errors / 65% coverage ] ****** [3571 done /2950 queued / 16 running / 207 errors / 65% coverage ] ****** [3571 done /2950 queued / 16 running / 207 errors / 65% coverage ] ****** [3572 done /2951 queued / 16 running / 207 errors / 65% coverage ] ****** [3572 done /2951 queued / 16 running / 207 errors / 65% coverage ] ****** [3573 done /2951 queued / 16 running / 207 errors / 65% coverage ] ****** [3573 done /2951 queued / 16 running / 207 errors / 65% coverage ] ****** [3574 done /2951 queued / 16 running / 207 errors / 65% coverage ] ****** [3574 done /2951 queued / 16 running / 207 errors / 65% coverage ] ****** [3575 done /2952 queued / 16 running / 207 errors / 65% coverage ] ****** [3575 done /2952 queued / 16 running / 207 errors / 65% coverage ] ****** [3576 done /2952 queued / 16 running / 207 errors / 65% coverage ] ****** [3576 done /2952 queued / 16 running / 207 errors / 65% coverage ] ****** [3577 done /2951 queued / 16 running / 207 errors / 65% coverage ] ****** [3577 done /2951 queued / 16 running / 207 errors / 65% coverage ] ****** [3578 done /2951 queued / 16 running / 207 errors / 65% coverage ] ****** [3578 done /2951 queued / 16 running / 207 errors / 65% coverage ] ****** [3579 done /2950 queued / 16 running / 207 errors / 65% coverage ] ****** [3579 done /2950 queued / 16 running / 207 errors / 65% coverage ] ****** [3580 done /2951 queued / 16 running / 207 errors / 65% coverage ] ****** [3580 done /2951 queued / 16 running / 207 errors / 65% coverage ] ****** [3581 done /2951 queued / 16 running / 207 errors / 65% coverage ] ****** [3581 done /2951 queued / 16 running / 207 errors / 65% coverage ] ****** [3582 done /2951 queued / 16 running / 207 errors / 65% coverage ] ****** [3582 done /2951 queued / 16 running / 207 errors / 65% coverage ] ****** [3583 done /2950 queued / 16 running / 207 errors / 65% coverage ] ****** [3583 done /2950 queued / 16 running / 207 errors / 65% coverage ] ****** [3584 done /2949 queued / 16 running / 207 errors / 65% coverage ] ****** [3584 done /2949 queued / 16 running / 207 errors / 65% coverage ] ****** [3585 done /2949 queued / 16 running / 207 errors / 65% coverage ] ****** [3585 done /2949 queued / 16 running / 207 errors / 65% coverage ] ****** [3586 done /2949 queued / 16 running / 207 errors / 65% coverage ] ****** [3586 done /2949 queued / 16 running / 207 errors / 65% coverage ] ****** [3587 done /2950 queued / 16 running / 207 errors / 65% coverage ] ****** [3587 done /2950 queued / 16 running / 207 errors / 65% coverage ] ****** [3588 done /2949 queued / 16 running / 207 errors / 65% coverage ] ****** [3588 done /2949 queued / 16 running / 207 errors / 65% coverage ] ****** [3589 done /2949 queued / 16 running / 207 errors / 65% coverage ] ****** [3589 done /2949 queued / 16 running / 207 errors / 65% coverage ] ****** [3590 done /2948 queued / 16 running / 207 errors / 65% coverage ] ****** [3590 done /2948 queued / 16 running / 207 errors / 65% coverage ] ****** [3591 done /2952 queued / 16 running / 207 errors / 65% coverage ] ****** [3591 done /2952 queued / 16 running / 207 errors / 65% coverage ] ****** [3592 done /2953 queued / 16 running / 207 errors / 65% coverage ] ****** [3592 done /2953 queued / 16 running / 207 errors / 65% coverage ] ****** [3593 done /2954 queued / 16 running / 207 errors / 65% coverage ] ****** [3593 done /2954 queued / 16 running / 207 errors / 65% coverage ] ****** [3594 done /2955 queued / 16 running / 207 errors / 65% coverage ] ****** [3594 done /2955 queued / 16 running / 207 errors / 65% coverage ] ****** [3595 done /2956 queued / 16 running / 207 errors / 65% coverage ] ****** [3595 done /2956 queued / 16 running / 207 errors / 65% coverage ] ****** [3596 done /2958 queued / 16 running / 207 errors / 65% coverage ] ****** [3596 done /2958 queued / 16 running / 207 errors / 65% coverage ] ****** [3597 done /2960 queued / 16 running / 207 errors / 65% coverage ] ****** [3597 done /2960 queued / 16 running / 207 errors / 65% coverage ] ****** [3598 done /2962 queued / 16 running / 207 errors / 65% coverage ] ****** [3598 done /2962 queued / 16 running / 207 errors / 65% coverage ] ****** [3599 done /2963 queued / 16 running / 207 errors / 65% coverage ] ****** [3599 done /2963 queued / 16 running / 207 errors / 65% coverage ] ****** [3600 done /2964 queued / 16 running / 207 errors / 65% coverage ] ****** [3600 done /2964 queued / 16 running / 207 errors / 65% coverage ] ****** [3601 done /2966 queued / 16 running / 207 errors / 65% coverage ] ****** [3601 done /2966 queued / 16 running / 207 errors / 65% coverage ] ****** [3602 done /2967 queued / 16 running / 207 errors / 65% coverage ] ****** [3602 done /2967 queued / 16 running / 207 errors / 65% coverage ] ****** [3603 done /2970 queued / 16 running / 207 errors / 65% coverage ] ****** [3603 done /2970 queued / 16 running / 207 errors / 65% coverage ] ****** [3604 done /2974 queued / 16 running / 207 errors / 65% coverage ] ****** [3604 done /2974 queued / 16 running / 207 errors / 65% coverage ] ****** [3605 done /2976 queued / 16 running / 207 errors / 65% coverage ] ****** [3605 done /2976 queued / 16 running / 207 errors / 65% coverage ] ****** [3606 done /2979 queued / 16 running / 207 errors / 65% coverage ] ****** [3606 done /2979 queued / 16 running / 207 errors / 65% coverage ] ****** [3607 done /2981 queued / 16 running / 207 errors / 65% coverage ] ****** [3607 done /2981 queued / 16 running / 207 errors / 65% coverage ] ****** [3608 done /2982 queued / 16 running / 207 errors / 65% coverage ] ****** [3608 done /2982 queued / 16 running / 207 errors / 65% coverage ] ****** [3609 done /2984 queued / 16 running / 207 errors / 65% coverage ] ****** [3609 done /2984 queued / 16 running / 207 errors / 65% coverage ] ****** [3610 done /2985 queued / 16 running / 207 errors / 65% coverage ] ****** [3610 done /2985 queued / 16 running / 207 errors / 65% coverage ] ****** [3611 done /2984 queued / 16 running / 207 errors / 65% coverage ] ****** [3611 done /2984 queued / 16 running / 207 errors / 65% coverage ] ****** [3612 done /2985 queued / 16 running / 207 errors / 65% coverage ] ****** [3612 done /2985 queued / 16 running / 207 errors / 65% coverage ] ****** [3613 done /2987 queued / 16 running / 207 errors / 65% coverage ] ****** [3613 done /2987 queued / 16 running / 207 errors / 65% coverage ] ****** [3614 done /2986 queued / 16 running / 207 errors / 65% coverage ] ****** [3614 done /2986 queued / 16 running / 207 errors / 65% coverage ] ****** [3615 done /2986 queued / 16 running / 207 errors / 65% coverage ] ****** [3615 done /2986 queued / 16 running / 207 errors / 65% coverage ] ****** [3616 done /2986 queued / 16 running / 207 errors / 65% coverage ] ****** [3616 done /2986 queued / 16 running / 207 errors / 65% coverage ] ****** [3617 done /2985 queued / 16 running / 207 errors / 65% coverage ] ****** [3617 done /2985 queued / 16 running / 207 errors / 65% coverage ] ****** [3618 done /2985 queued / 16 running / 207 errors / 65% coverage ] ****** [3618 done /2985 queued / 16 running / 207 errors / 65% coverage ] ****** [3619 done /2986 queued / 16 running / 207 errors / 65% coverage ] ****** [3619 done /2986 queued / 16 running / 207 errors / 65% coverage ] ****** [3620 done /2985 queued / 16 running / 207 errors / 65% coverage ] ****** [3620 done /2985 queued / 16 running / 207 errors / 65% coverage ] ****** [3621 done /2985 queued / 16 running / 207 errors / 65% coverage ] ****** [3621 done /2985 queued / 16 running / 207 errors / 65% coverage ] ****** [3622 done /2984 queued / 16 running / 207 errors / 65% coverage ] ****** [3622 done /2984 queued / 16 running / 207 errors / 65% coverage ] ****** [3623 done /2984 queued / 16 running / 207 errors / 65% coverage ] ****** [3623 done /2984 queued / 16 running / 207 errors / 65% coverage ] ****** [3624 done /2984 queued / 16 running / 207 errors / 65% coverage ] ****** [3624 done /2984 queued / 16 running / 207 errors / 65% coverage ] ****** [3625 done /2986 queued / 16 running / 207 errors / 65% coverage ] ****** [3625 done /2986 queued / 16 running / 207 errors / 65% coverage ] ****** [3626 done /2985 queued / 16 running / 207 errors / 65% coverage ] ****** [3626 done /2985 queued / 16 running / 207 errors / 65% coverage ] ****** [3627 done /2985 queued / 16 running / 207 errors / 65% coverage ] ****** [3627 done /2985 queued / 16 running / 207 errors / 65% coverage ] ****** [3628 done /2984 queued / 16 running / 207 errors / 65% coverage ] ****** [3628 done /2984 queued / 16 running / 207 errors / 65% coverage ] ****** [3629 done /2985 queued / 16 running / 207 errors / 65% coverage ] ****** [3629 done /2985 queued / 16 running / 207 errors / 65% coverage ] ****** [3630 done /2985 queued / 16 running / 207 errors / 65% coverage ] ****** [3630 done /2985 queued / 16 running / 207 errors / 65% coverage ] ****** [3631 done /2985 queued / 16 running / 207 errors / 65% coverage ] ****** [3631 done /2985 queued / 16 running / 207 errors / 65% coverage ] ****** [3632 done /2985 queued / 16 running / 207 errors / 65% coverage ] ****** [3632 done /2985 queued / 16 running / 207 errors / 65% coverage ] ****** [3633 done /2986 queued / 16 running / 207 errors / 65% coverage ] ****** [3633 done /2986 queued / 16 running / 207 errors / 65% coverage ] ****** [3634 done /2991 queued / 16 running / 207 errors / 65% coverage ] ****** [3634 done /2991 queued / 16 running / 207 errors / 65% coverage ] ****** [3635 done /2992 queued / 16 running / 207 errors / 65% coverage ] ****** [3635 done /2992 queued / 16 running / 207 errors / 65% coverage ] ****** [3636 done /2995 queued / 16 running / 207 errors / 65% coverage ] ****** [3636 done /2995 queued / 16 running / 207 errors / 65% coverage ] ****** [3637 done /2996 queued / 16 running / 207 errors / 65% coverage ] ****** [3637 done /2996 queued / 16 running / 207 errors / 65% coverage ] ****** [3638 done /3000 queued / 16 running / 207 errors / 65% coverage ] ****** [3638 done /3000 queued / 16 running / 207 errors / 65% coverage ] ****** [3639 done /3004 queued / 16 running / 207 errors / 65% coverage ] ****** [3639 done /3004 queued / 16 running / 207 errors / 65% coverage ] ****** [3640 done /3005 queued / 16 running / 207 errors / 65% coverage ] ****** [3640 done /3005 queued / 16 running / 207 errors / 65% coverage ] ****** [3641 done /3007 queued / 16 running / 207 errors / 65% coverage ] ****** [3641 done /3007 queued / 16 running / 207 errors / 65% coverage ] ****** [3642 done /3008 queued / 16 running / 207 errors / 65% coverage ] ****** [3642 done /3008 queued / 16 running / 207 errors / 65% coverage ] ****** [3643 done /3010 queued / 16 running / 207 errors / 65% coverage ] ****** [3643 done /3010 queued / 16 running / 207 errors / 65% coverage ] ****** [3644 done /3011 queued / 16 running / 207 errors / 65% coverage ] ****** [3644 done /3011 queued / 16 running / 207 errors / 65% coverage ] ****** [3645 done /3013 queued / 16 running / 207 errors / 65% coverage ] ****** [3645 done /3013 queued / 16 running / 207 errors / 65% coverage ] ****** [3646 done /3016 queued / 16 running / 207 errors / 65% coverage ] ****** [3646 done /3016 queued / 16 running / 207 errors / 65% coverage ] ****** [3647 done /3019 queued / 16 running / 207 errors / 65% coverage ] ****** [3647 done /3019 queued / 16 running / 207 errors / 65% coverage ] ****** [3648 done /3020 queued / 16 running / 207 errors / 65% coverage ] ****** [3648 done /3020 queued / 16 running / 207 errors / 65% coverage ] ****** [3649 done /3021 queued / 16 running / 207 errors / 65% coverage ] ****** [3649 done /3021 queued / 16 running / 207 errors / 65% coverage ] ****** [3650 done /3020 queued / 16 running / 207 errors / 65% coverage ] ****** [3650 done /3020 queued / 16 running / 207 errors / 65% coverage ] ****** [3651 done /3023 queued / 16 running / 207 errors / 65% coverage ] ****** [3651 done /3023 queued / 16 running / 207 errors / 65% coverage ] ****** [3652 done /3026 queued / 16 running / 207 errors / 65% coverage ] ****** [3652 done /3026 queued / 16 running / 207 errors / 65% coverage ] ****** [3653 done /3028 queued / 16 running / 207 errors / 65% coverage ] ****** [3653 done /3028 queued / 16 running / 207 errors / 65% coverage ] ****** [3654 done /3029 queued / 16 running / 207 errors / 65% coverage ] ****** [3654 done /3029 queued / 16 running / 207 errors / 65% coverage ] ****** [3655 done /3030 queued / 16 running / 207 errors / 65% coverage ] ****** [3655 done /3030 queued / 16 running / 207 errors / 65% coverage ] ****** [3656 done /3030 queued / 16 running / 207 errors / 65% coverage ] ****** [3656 done /3030 queued / 16 running / 207 errors / 65% coverage ] ****** [3657 done /3030 queued / 16 running / 207 errors / 65% coverage ] ****** [3657 done /3030 queued / 16 running / 207 errors / 65% coverage ] ****** [3658 done /3030 queued / 16 running / 207 errors / 65% coverage ] ****** [3658 done /3030 queued / 16 running / 207 errors / 65% coverage ] ****** [3659 done /3032 queued / 16 running / 207 errors / 65% coverage ] ****** [3659 done /3032 queued / 16 running / 207 errors / 65% coverage ] ****** [3660 done /3032 queued / 16 running / 207 errors / 65% coverage ] ****** [3660 done /3032 queued / 16 running / 207 errors / 65% coverage ] ****** [3661 done /3033 queued / 16 running / 207 errors / 65% coverage ] ****** [3661 done /3033 queued / 16 running / 207 errors / 65% coverage ] ****** [3662 done /3033 queued / 16 running / 207 errors / 65% coverage ] ****** [3662 done /3033 queued / 16 running / 207 errors / 65% coverage ] ****** [3663 done /3033 queued / 16 running / 207 errors / 65% coverage ] ****** [3663 done /3033 queued / 16 running / 207 errors / 65% coverage ] ****** [3664 done /3033 queued / 16 running / 207 errors / 65% coverage ] ****** [3664 done /3033 queued / 16 running / 207 errors / 65% coverage ] ****** [3665 done /3032 queued / 16 running / 207 errors / 65% coverage ] ****** [3665 done /3032 queued / 16 running / 207 errors / 65% coverage ] ****** [3666 done /3031 queued / 16 running / 207 errors / 65% coverage ] ****** [3666 done /3031 queued / 16 running / 207 errors / 65% coverage ] ****** [3667 done /3030 queued / 16 running / 207 errors / 65% coverage ] ****** [3667 done /3030 queued / 16 running / 207 errors / 65% coverage ] ****** [3668 done /3030 queued / 16 running / 207 errors / 65% coverage ] ****** [3668 done /3030 queued / 16 running / 207 errors / 65% coverage ] ****** [3669 done /3030 queued / 16 running / 207 errors / 65% coverage ] ****** [3669 done /3030 queued / 16 running / 207 errors / 65% coverage ] ****** [3670 done /3030 queued / 16 running / 207 errors / 65% coverage ] ****** [3670 done /3030 queued / 16 running / 207 errors / 65% coverage ] ****** [3671 done /3029 queued / 16 running / 207 errors / 65% coverage ] ****** [3671 done /3029 queued / 16 running / 207 errors / 65% coverage ] ****** [3672 done /3028 queued / 16 running / 207 errors / 65% coverage ] ****** [3672 done /3028 queued / 16 running / 207 errors / 65% coverage ] ****** [3673 done /3027 queued / 16 running / 207 errors / 65% coverage ] ****** [3673 done /3027 queued / 16 running / 207 errors / 65% coverage ] ****** [3674 done /3027 queued / 16 running / 207 errors / 65% coverage ] ****** [3674 done /3027 queued / 16 running / 207 errors / 65% coverage ] ****** [3675 done /3030 queued / 16 running / 207 errors / 65% coverage ] ****** [3675 done /3030 queued / 16 running / 207 errors / 65% coverage ] ****** [3676 done /3029 queued / 16 running / 207 errors / 65% coverage ] ****** [3676 done /3029 queued / 16 running / 207 errors / 65% coverage ] ****** [3677 done /3029 queued / 16 running / 207 errors / 65% coverage ] ****** [3677 done /3029 queued / 16 running / 207 errors / 65% coverage ] ****** [3678 done /3028 queued / 16 running / 207 errors / 65% coverage ] ****** [3678 done /3028 queued / 16 running / 207 errors / 65% coverage ] ****** [3679 done /3027 queued / 16 running / 207 errors / 65% coverage ] ****** [3679 done /3027 queued / 16 running / 207 errors / 65% coverage ] ****** [3680 done /3029 queued / 16 running / 207 errors / 65% coverage ] ****** [3680 done /3029 queued / 16 running / 207 errors / 65% coverage ] ****** [3681 done /3028 queued / 16 running / 207 errors / 65% coverage ] ****** [3681 done /3028 queued / 16 running / 207 errors / 65% coverage ] ****** [3682 done /3033 queued / 16 running / 207 errors / 65% coverage ] ****** [3682 done /3033 queued / 16 running / 207 errors / 65% coverage ] ****** [3683 done /3032 queued / 16 running / 207 errors / 65% coverage ] ****** [3683 done /3032 queued / 16 running / 207 errors / 65% coverage ] ****** [3684 done /3034 queued / 16 running / 207 errors / 65% coverage ] ****** [3684 done /3034 queued / 16 running / 207 errors / 65% coverage ] ****** [3685 done /3034 queued / 16 running / 207 errors / 65% coverage ] ****** [3685 done /3034 queued / 16 running / 207 errors / 65% coverage ] ****** [3686 done /3035 queued / 16 running / 207 errors / 65% coverage ] ****** [3686 done /3035 queued / 16 running / 207 errors / 65% coverage ] ****** [3687 done /3036 queued / 16 running / 207 errors / 65% coverage ] ****** [3687 done /3036 queued / 16 running / 207 errors / 65% coverage ] ****** [3688 done /3039 queued / 16 running / 207 errors / 65% coverage ] ****** [3688 done /3039 queued / 16 running / 207 errors / 65% coverage ] ****** [3689 done /3042 queued / 16 running / 207 errors / 65% coverage ] ****** [3689 done /3042 queued / 16 running / 207 errors / 65% coverage ] ****** [3690 done /3043 queued / 16 running / 207 errors / 65% coverage ] ****** [3690 done /3043 queued / 16 running / 207 errors / 65% coverage ] ****** [3691 done /3047 queued / 16 running / 207 errors / 65% coverage ] ****** [3691 done /3047 queued / 16 running / 207 errors / 65% coverage ] ****** [3692 done /3048 queued / 16 running / 207 errors / 65% coverage ] ****** [3692 done /3048 queued / 16 running / 207 errors / 65% coverage ] ****** [3693 done /3053 queued / 16 running / 207 errors / 65% coverage ] ****** [3693 done /3053 queued / 16 running / 207 errors / 65% coverage ] ****** [3694 done /3055 queued / 16 running / 207 errors / 65% coverage ] ****** [3694 done /3055 queued / 16 running / 207 errors / 65% coverage ] ****** [3695 done /3056 queued / 16 running / 207 errors / 65% coverage ] ****** [3695 done /3056 queued / 16 running / 207 errors / 65% coverage ] ****** [3696 done /3057 queued / 16 running / 207 errors / 65% coverage ] ****** [3696 done /3057 queued / 16 running / 207 errors / 65% coverage ] ****** [3697 done /3063 queued / 16 running / 207 errors / 65% coverage ] ****** [3697 done /3063 queued / 16 running / 207 errors / 65% coverage ] ****** [3698 done /3064 queued / 16 running / 207 errors / 65% coverage ] ****** [3698 done /3064 queued / 16 running / 207 errors / 65% coverage ] ****** [3699 done /3065 queued / 16 running / 207 errors / 65% coverage ] ****** [3699 done /3065 queued / 16 running / 207 errors / 65% coverage ] ****** [3700 done /3066 queued / 16 running / 207 errors / 65% coverage ] ****** [3700 done /3066 queued / 16 running / 207 errors / 65% coverage ] ****** [3701 done /3068 queued / 16 running / 207 errors / 65% coverage ] ****** [3701 done /3068 queued / 16 running / 207 errors / 65% coverage ] ****** [3702 done /3068 queued / 16 running / 207 errors / 65% coverage ] ****** [3702 done /3068 queued / 16 running / 207 errors / 65% coverage ] ****** [3703 done /3070 queued / 16 running / 207 errors / 65% coverage ] ****** [3703 done /3070 queued / 16 running / 207 errors / 65% coverage ] ****** [3704 done /3070 queued / 16 running / 207 errors / 65% coverage ] ****** [3704 done /3070 queued / 16 running / 207 errors / 65% coverage ] ****** [3705 done /3069 queued / 16 running / 207 errors / 65% coverage ] ****** [3705 done /3069 queued / 16 running / 207 errors / 65% coverage ] ****** [3706 done /3068 queued / 16 running / 207 errors / 65% coverage ] ****** [3706 done /3068 queued / 16 running / 207 errors / 65% coverage ] ****** [3707 done /3067 queued / 16 running / 207 errors / 65% coverage ] ****** [3707 done /3067 queued / 16 running / 207 errors / 65% coverage ] ****** [3708 done /3067 queued / 16 running / 207 errors / 65% coverage ] ****** [3708 done /3067 queued / 16 running / 207 errors / 65% coverage ] ****** [3709 done /3067 queued / 16 running / 207 errors / 65% coverage ] ****** [3709 done /3067 queued / 16 running / 207 errors / 65% coverage ] ****** [3710 done /3066 queued / 16 running / 207 errors / 65% coverage ] ****** [3710 done /3066 queued / 16 running / 207 errors / 65% coverage ] ****** [3711 done /3065 queued / 16 running / 207 errors / 65% coverage ] ****** [3711 done /3065 queued / 16 running / 207 errors / 65% coverage ] ****** [3712 done /3066 queued / 16 running / 207 errors / 65% coverage ] ****** [3712 done /3066 queued / 16 running / 207 errors / 65% coverage ] ****** [3713 done /3066 queued / 16 running / 207 errors / 65% coverage ] ****** [3713 done /3066 queued / 16 running / 207 errors / 65% coverage ] ****** [3714 done /3066 queued / 16 running / 207 errors / 65% coverage ] ****** [3714 done /3066 queued / 16 running / 207 errors / 65% coverage ] ****** [3715 done /3067 queued / 16 running / 207 errors / 65% coverage ] ****** [3715 done /3067 queued / 16 running / 207 errors / 65% coverage ] ****** [3716 done /3066 queued / 16 running / 207 errors / 65% coverage ] ****** [3716 done /3066 queued / 16 running / 207 errors / 65% coverage ] ****** [3717 done /3066 queued / 16 running / 207 errors / 65% coverage ] ****** [3717 done /3066 queued / 16 running / 207 errors / 65% coverage ] ****** [3718 done /3065 queued / 16 running / 207 errors / 65% coverage ] ****** [3718 done /3065 queued / 16 running / 207 errors / 65% coverage ] ****** [3719 done /3066 queued / 16 running / 207 errors / 65% coverage ] ****** [3719 done /3066 queued / 16 running / 207 errors / 65% coverage ] ****** [3720 done /3067 queued / 16 running / 207 errors / 65% coverage ] ****** [3720 done /3067 queued / 16 running / 207 errors / 65% coverage ] ****** [3721 done /3070 queued / 16 running / 207 errors / 65% coverage ] ****** [3721 done /3070 queued / 16 running / 207 errors / 65% coverage ] ****** [3722 done /3072 queued / 16 running / 207 errors / 65% coverage ] ****** [3722 done /3072 queued / 16 running / 207 errors / 65% coverage ] ****** [3723 done /3071 queued / 16 running / 207 errors / 65% coverage ] ****** [3723 done /3071 queued / 16 running / 207 errors / 65% coverage ] ****** [3724 done /3073 queued / 16 running / 207 errors / 65% coverage ] ****** [3724 done /3073 queued / 16 running / 207 errors / 65% coverage ] ****** [3725 done /3075 queued / 16 running / 207 errors / 65% coverage ] ****** [3725 done /3075 queued / 16 running / 207 errors / 65% coverage ] ****** [3726 done /3076 queued / 16 running / 207 errors / 65% coverage ] ****** [3726 done /3076 queued / 16 running / 207 errors / 65% coverage ] ****** [3727 done /3077 queued / 16 running / 207 errors / 65% coverage ] ****** [3727 done /3077 queued / 16 running / 207 errors / 65% coverage ] ****** [3728 done /3078 queued / 16 running / 207 errors / 65% coverage ] ****** [3728 done /3078 queued / 16 running / 207 errors / 65% coverage ] ****** [3729 done /3079 queued / 16 running / 207 errors / 65% coverage ] ****** [3729 done /3079 queued / 16 running / 207 errors / 65% coverage ] ****** [3730 done /3081 queued / 16 running / 207 errors / 65% coverage ] ****** [3730 done /3081 queued / 16 running / 207 errors / 65% coverage ] ****** [3731 done /3082 queued / 16 running / 207 errors / 65% coverage ] ****** [3731 done /3082 queued / 16 running / 207 errors / 65% coverage ] ****** [3732 done /3083 queued / 16 running / 207 errors / 65% coverage ] ****** [3732 done /3083 queued / 16 running / 207 errors / 65% coverage ] ****** [3733 done /3085 queued / 16 running / 207 errors / 65% coverage ] ****** [3733 done /3085 queued / 16 running / 207 errors / 65% coverage ] ****** [3734 done /3086 queued / 16 running / 207 errors / 65% coverage ] ****** [3734 done /3086 queued / 16 running / 207 errors / 65% coverage ] ****** [3735 done /3085 queued / 16 running / 207 errors / 65% coverage ] ****** [3735 done /3085 queued / 16 running / 207 errors / 65% coverage ] ****** [3736 done /3089 queued / 16 running / 207 errors / 65% coverage ] ****** [3736 done /3089 queued / 16 running / 207 errors / 65% coverage ] ****** [3737 done /3089 queued / 16 running / 207 errors / 65% coverage ] ****** [3737 done /3089 queued / 16 running / 207 errors / 65% coverage ] ****** [3738 done /3091 queued / 16 running / 207 errors / 65% coverage ] ****** [3738 done /3091 queued / 16 running / 207 errors / 65% coverage ] ****** [3739 done /3092 queued / 16 running / 207 errors / 65% coverage ] ****** [3739 done /3092 queued / 16 running / 207 errors / 65% coverage ] ****** [3740 done /3097 queued / 16 running / 207 errors / 65% coverage ] ****** [3740 done /3097 queued / 16 running / 207 errors / 65% coverage ] ****** [3741 done /3098 queued / 16 running / 207 errors / 65% coverage ] ****** [3741 done /3098 queued / 16 running / 207 errors / 65% coverage ] ****** [3742 done /3101 queued / 16 running / 207 errors / 65% coverage ] ****** [3742 done /3101 queued / 16 running / 207 errors / 65% coverage ] ****** [3743 done /3105 queued / 16 running / 207 errors / 65% coverage ] ****** [3743 done /3105 queued / 16 running / 207 errors / 65% coverage ] ****** [3744 done /3108 queued / 16 running / 207 errors / 65% coverage ] ****** [3744 done /3108 queued / 16 running / 207 errors / 65% coverage ] ****** [3745 done /3107 queued / 16 running / 207 errors / 65% coverage ] ****** [3745 done /3107 queued / 16 running / 207 errors / 65% coverage ] ****** [3746 done /3107 queued / 16 running / 207 errors / 65% coverage ] ****** [3746 done /3107 queued / 16 running / 207 errors / 65% coverage ] ****** [3747 done /3106 queued / 16 running / 207 errors / 65% coverage ] ****** [3747 done /3106 queued / 16 running / 207 errors / 65% coverage ] ****** [3748 done /3107 queued / 16 running / 207 errors / 65% coverage ] ****** [3748 done /3107 queued / 16 running / 207 errors / 65% coverage ] ****** [3749 done /3109 queued / 16 running / 207 errors / 65% coverage ] ****** [3749 done /3109 queued / 16 running / 207 errors / 65% coverage ] ****** [3750 done /3110 queued / 16 running / 207 errors / 65% coverage ] ****** [3750 done /3110 queued / 16 running / 207 errors / 65% coverage ] ****** [3751 done /3112 queued / 16 running / 207 errors / 65% coverage ] ****** [3751 done /3112 queued / 16 running / 207 errors / 65% coverage ] ****** [3752 done /3113 queued / 16 running / 207 errors / 65% coverage ] ****** [3752 done /3113 queued / 16 running / 207 errors / 65% coverage ] ****** [3753 done /3115 queued / 16 running / 207 errors / 65% coverage ] ****** [3753 done /3115 queued / 16 running / 207 errors / 65% coverage ] ****** [3754 done /3119 queued / 16 running / 207 errors / 65% coverage ] ****** [3754 done /3119 queued / 16 running / 207 errors / 65% coverage ] ****** [3755 done /3121 queued / 16 running / 207 errors / 65% coverage ] ****** [3755 done /3121 queued / 16 running / 207 errors / 65% coverage ] ****** [3756 done /3122 queued / 16 running / 207 errors / 65% coverage ] ****** [3756 done /3122 queued / 16 running / 207 errors / 65% coverage ] ****** [3757 done /3121 queued / 16 running / 207 errors / 65% coverage ] ****** [3757 done /3121 queued / 16 running / 207 errors / 65% coverage ] ****** [3758 done /3122 queued / 16 running / 207 errors / 65% coverage ] ****** [3758 done /3122 queued / 16 running / 207 errors / 65% coverage ] ****** [3759 done /3121 queued / 16 running / 207 errors / 65% coverage ] ****** [3759 done /3121 queued / 16 running / 207 errors / 65% coverage ] ****** [3760 done /3120 queued / 16 running / 207 errors / 65% coverage ] ****** [3760 done /3120 queued / 16 running / 207 errors / 65% coverage ] ****** [3761 done /3120 queued / 16 running / 207 errors / 65% coverage ] ****** [3761 done /3120 queued / 16 running / 207 errors / 65% coverage ] ****** [3762 done /3120 queued / 16 running / 207 errors / 65% coverage ] ****** [3762 done /3120 queued / 16 running / 207 errors / 65% coverage ] ****** [3763 done /3121 queued / 16 running / 207 errors / 65% coverage ] ****** [3763 done /3121 queued / 16 running / 207 errors / 65% coverage ] ****** [3764 done /3121 queued / 16 running / 207 errors / 65% coverage ] ****** [3764 done /3121 queued / 16 running / 207 errors / 65% coverage ] ****** [3765 done /3122 queued / 16 running / 207 errors / 65% coverage ] ****** [3765 done /3122 queued / 16 running / 207 errors / 65% coverage ] ****** [3766 done /3121 queued / 16 running / 207 errors / 65% coverage ] ****** [3766 done /3121 queued / 16 running / 207 errors / 65% coverage ] ****** [3767 done /3122 queued / 16 running / 207 errors / 65% coverage ] ****** [3767 done /3122 queued / 16 running / 207 errors / 65% coverage ] ****** [3768 done /3122 queued / 16 running / 207 errors / 65% coverage ] ****** [3768 done /3122 queued / 16 running / 207 errors / 65% coverage ] ****** [3769 done /3121 queued / 16 running / 207 errors / 65% coverage ] ****** [3769 done /3121 queued / 16 running / 207 errors / 65% coverage ] ****** [3770 done /3121 queued / 16 running / 207 errors / 65% coverage ] ****** [3770 done /3121 queued / 16 running / 207 errors / 65% coverage ] ****** [3771 done /3121 queued / 16 running / 207 errors / 65% coverage ] ****** [3771 done /3121 queued / 16 running / 207 errors / 65% coverage ] ****** [3772 done /3121 queued / 16 running / 207 errors / 65% coverage ] ****** [3772 done /3121 queued / 16 running / 207 errors / 65% coverage ] ****** [3773 done /3120 queued / 16 running / 207 errors / 65% coverage ] ****** [3773 done /3120 queued / 16 running / 207 errors / 65% coverage ] ****** [3774 done /3120 queued / 16 running / 207 errors / 65% coverage ] ****** [3774 done /3120 queued / 16 running / 207 errors / 65% coverage ] ****** [3775 done /3120 queued / 16 running / 207 errors / 65% coverage ] ****** [3775 done /3120 queued / 16 running / 207 errors / 65% coverage ] ****** [3776 done /3122 queued / 16 running / 207 errors / 65% coverage ] ****** [3776 done /3122 queued / 16 running / 207 errors / 65% coverage ] ****** [3777 done /3121 queued / 16 running / 207 errors / 65% coverage ] ****** [3777 done /3121 queued / 16 running / 207 errors / 65% coverage ] ****** [3778 done /3122 queued / 16 running / 207 errors / 65% coverage ] ****** [3778 done /3122 queued / 16 running / 207 errors / 65% coverage ] ****** [3779 done /3126 queued / 16 running / 207 errors / 65% coverage ] ****** [3779 done /3126 queued / 16 running / 207 errors / 65% coverage ] ****** [3780 done /3128 queued / 16 running / 207 errors / 65% coverage ] ****** [3780 done /3128 queued / 16 running / 207 errors / 65% coverage ] ****** [3781 done /3129 queued / 16 running / 207 errors / 65% coverage ] ****** [3781 done /3129 queued / 16 running / 207 errors / 65% coverage ] ****** [3782 done /3131 queued / 16 running / 207 errors / 65% coverage ] ****** [3782 done /3131 queued / 16 running / 207 errors / 65% coverage ] ****** [3783 done /3131 queued / 16 running / 207 errors / 65% coverage ] ****** [3783 done /3131 queued / 16 running / 207 errors / 65% coverage ] ****** [3784 done /3132 queued / 16 running / 207 errors / 65% coverage ] ****** [3784 done /3132 queued / 16 running / 207 errors / 65% coverage ] ****** [3785 done /3133 queued / 16 running / 207 errors / 65% coverage ] ****** [3785 done /3133 queued / 16 running / 207 errors / 65% coverage ] ****** [3786 done /3135 queued / 16 running / 207 errors / 65% coverage ] ****** [3786 done /3135 queued / 16 running / 207 errors / 65% coverage ] ****** [3787 done /3140 queued / 16 running / 207 errors / 65% coverage ] ****** [3787 done /3140 queued / 16 running / 207 errors / 65% coverage ] ****** [3788 done /3144 queued / 16 running / 207 errors / 65% coverage ] ****** [3788 done /3144 queued / 16 running / 207 errors / 65% coverage ] ****** [3789 done /3146 queued / 16 running / 207 errors / 65% coverage ] ****** [3789 done /3146 queued / 16 running / 207 errors / 65% coverage ] ****** [3790 done /3148 queued / 16 running / 207 errors / 65% coverage ] ****** [3790 done /3148 queued / 16 running / 207 errors / 65% coverage ] ****** [3791 done /3150 queued / 16 running / 207 errors / 65% coverage ] ****** [3791 done /3150 queued / 16 running / 207 errors / 65% coverage ] ****** [3792 done /3155 queued / 16 running / 207 errors / 65% coverage ] ****** [3792 done /3155 queued / 16 running / 207 errors / 65% coverage ] ****** [3793 done /3158 queued / 16 running / 207 errors / 65% coverage ] ****** [3793 done /3158 queued / 16 running / 207 errors / 65% coverage ] ****** [3794 done /3161 queued / 16 running / 207 errors / 65% coverage ] ****** [3794 done /3161 queued / 16 running / 207 errors / 65% coverage ] ****** [3795 done /3162 queued / 16 running / 207 errors / 65% coverage ] ****** [3795 done /3162 queued / 16 running / 207 errors / 65% coverage ] ****** [3796 done /3162 queued / 16 running / 207 errors / 65% coverage ] ****** [3796 done /3162 queued / 16 running / 207 errors / 65% coverage ] ****** [3797 done /3162 queued / 16 running / 207 errors / 65% coverage ] ****** [3797 done /3162 queued / 16 running / 207 errors / 65% coverage ] ****** [3798 done /3163 queued / 16 running / 207 errors / 65% coverage ] ****** [3798 done /3163 queued / 16 running / 207 errors / 65% coverage ] ****** [3799 done /3163 queued / 16 running / 207 errors / 65% coverage ] ****** [3799 done /3163 queued / 16 running / 207 errors / 65% coverage ] ****** [3800 done /3163 queued / 16 running / 207 errors / 65% coverage ] ****** [3800 done /3163 queued / 16 running / 207 errors / 65% coverage ] ****** [3801 done /3165 queued / 16 running / 208 errors / 65% coverage ] ****** [3801 done /3165 queued / 16 running / 208 errors / 65% coverage ] ****** [3802 done /3166 queued / 16 running / 208 errors / 65% coverage ] ****** [3802 done /3166 queued / 16 running / 208 errors / 65% coverage ] ****** [3803 done /3167 queued / 16 running / 208 errors / 65% coverage ] ****** [3803 done /3167 queued / 16 running / 208 errors / 65% coverage ] ****** [3804 done /3167 queued / 16 running / 208 errors / 65% coverage ] ****** [3804 done /3167 queued / 16 running / 208 errors / 65% coverage ] ****** [3805 done /3168 queued / 16 running / 208 errors / 65% coverage ] ****** [3805 done /3168 queued / 16 running / 208 errors / 65% coverage ] ****** [3806 done /3169 queued / 16 running / 208 errors / 65% coverage ] ****** [3806 done /3169 queued / 16 running / 208 errors / 65% coverage ] ****** [3807 done /3169 queued / 16 running / 208 errors / 65% coverage ] ****** [3807 done /3169 queued / 16 running / 208 errors / 65% coverage ] ****** [3808 done /3169 queued / 16 running / 208 errors / 65% coverage ] ****** [3808 done /3169 queued / 16 running / 208 errors / 65% coverage ] ****** [3809 done /3169 queued / 16 running / 208 errors / 65% coverage ] ****** [3809 done /3169 queued / 16 running / 208 errors / 65% coverage ] ****** [3810 done /3171 queued / 16 running / 208 errors / 65% coverage ] ****** [3810 done /3171 queued / 16 running / 208 errors / 65% coverage ] ****** [3811 done /3173 queued / 16 running / 208 errors / 65% coverage ] ****** [3811 done /3173 queued / 16 running / 208 errors / 65% coverage ] ****** [3812 done /3173 queued / 16 running / 208 errors / 65% coverage ] ****** [3812 done /3173 queued / 16 running / 208 errors / 65% coverage ] ****** [3813 done /3174 queued / 16 running / 208 errors / 65% coverage ] ****** [3813 done /3174 queued / 16 running / 208 errors / 65% coverage ] ****** [3814 done /3175 queued / 16 running / 208 errors / 65% coverage ] ****** [3814 done /3175 queued / 16 running / 208 errors / 65% coverage ] ****** [3815 done /3176 queued / 16 running / 208 errors / 65% coverage ] ****** [3815 done /3176 queued / 16 running / 208 errors / 65% coverage ] ****** [3816 done /3178 queued / 16 running / 208 errors / 65% coverage ] ****** [3816 done /3178 queued / 16 running / 208 errors / 65% coverage ] ****** [3817 done /3177 queued / 16 running / 208 errors / 65% coverage ] ****** [3817 done /3177 queued / 16 running / 208 errors / 65% coverage ] ****** [3818 done /3178 queued / 16 running / 208 errors / 65% coverage ] ****** [3818 done /3178 queued / 16 running / 208 errors / 65% coverage ] ****** [3819 done /3178 queued / 16 running / 208 errors / 65% coverage ] ****** [3819 done /3178 queued / 16 running / 208 errors / 65% coverage ] ****** [3820 done /3177 queued / 16 running / 208 errors / 65% coverage ] ****** [3820 done /3177 queued / 16 running / 208 errors / 65% coverage ] ****** [3821 done /3178 queued / 16 running / 208 errors / 65% coverage ] ****** [3821 done /3178 queued / 16 running / 208 errors / 65% coverage ] ****** [3822 done /3179 queued / 16 running / 208 errors / 65% coverage ] ****** [3822 done /3179 queued / 16 running / 208 errors / 65% coverage ] ****** [3823 done /3180 queued / 16 running / 208 errors / 65% coverage ] ****** [3823 done /3180 queued / 16 running / 208 errors / 65% coverage ] ****** [3824 done /3182 queued / 16 running / 208 errors / 65% coverage ] ****** [3824 done /3182 queued / 16 running / 208 errors / 65% coverage ] ****** [3825 done /3181 queued / 16 running / 208 errors / 65% coverage ] ****** [3825 done /3181 queued / 16 running / 208 errors / 65% coverage ] ****** [3826 done /3183 queued / 16 running / 208 errors / 65% coverage ] ****** [3826 done /3183 queued / 16 running / 208 errors / 65% coverage ] ****** [3827 done /3183 queued / 16 running / 208 errors / 65% coverage ] ****** [3827 done /3183 queued / 16 running / 208 errors / 65% coverage ] ****** [3828 done /3184 queued / 16 running / 208 errors / 65% coverage ] ****** [3828 done /3184 queued / 16 running / 208 errors / 65% coverage ] ****** [3829 done /3188 queued / 16 running / 208 errors / 65% coverage ] ****** [3829 done /3188 queued / 16 running / 208 errors / 65% coverage ] ****** [3830 done /3191 queued / 16 running / 208 errors / 65% coverage ] ****** [3830 done /3191 queued / 16 running / 208 errors / 65% coverage ] ****** [3831 done /3192 queued / 16 running / 208 errors / 65% coverage ] ****** [3831 done /3192 queued / 16 running / 208 errors / 65% coverage ] ****** [3832 done /3196 queued / 16 running / 208 errors / 65% coverage ] ****** [3832 done /3196 queued / 16 running / 208 errors / 65% coverage ] ****** [3833 done /3197 queued / 16 running / 208 errors / 65% coverage ] ****** [3833 done /3197 queued / 16 running / 208 errors / 65% coverage ] ****** [3834 done /3200 queued / 16 running / 208 errors / 65% coverage ] ****** [3834 done /3200 queued / 16 running / 208 errors / 65% coverage ] ****** [3835 done /3201 queued / 16 running / 208 errors / 65% coverage ] ****** [3835 done /3201 queued / 16 running / 208 errors / 65% coverage ] ****** [3836 done /3205 queued / 16 running / 208 errors / 65% coverage ] ****** [3836 done /3205 queued / 16 running / 208 errors / 65% coverage ] ****** [3837 done /3208 queued / 16 running / 208 errors / 65% coverage ] ****** [3837 done /3208 queued / 16 running / 208 errors / 65% coverage ] ****** [3838 done /3209 queued / 16 running / 208 errors / 65% coverage ] ****** [3838 done /3209 queued / 16 running / 208 errors / 65% coverage ] ****** [3839 done /3210 queued / 16 running / 208 errors / 65% coverage ] ****** [3839 done /3210 queued / 16 running / 208 errors / 65% coverage ] ****** [3840 done /3212 queued / 16 running / 208 errors / 65% coverage ] ****** [3840 done /3212 queued / 16 running / 208 errors / 65% coverage ] ****** [3841 done /3214 queued / 16 running / 208 errors / 65% coverage ] ****** [3841 done /3214 queued / 16 running / 208 errors / 65% coverage ] ****** [3842 done /3214 queued / 16 running / 208 errors / 65% coverage ] ****** [3842 done /3214 queued / 16 running / 208 errors / 65% coverage ] ****** [3843 done /3216 queued / 16 running / 208 errors / 65% coverage ] ****** [3843 done /3216 queued / 16 running / 208 errors / 65% coverage ] ****** [3844 done /3217 queued / 16 running / 208 errors / 65% coverage ] ****** [3844 done /3217 queued / 16 running / 208 errors / 65% coverage ] ****** [3845 done /3221 queued / 16 running / 208 errors / 65% coverage ] ****** [3845 done /3221 queued / 16 running / 208 errors / 65% coverage ] ****** [3846 done /3222 queued / 16 running / 208 errors / 65% coverage ] ****** [3846 done /3222 queued / 16 running / 208 errors / 65% coverage ] ****** [3847 done /3224 queued / 16 running / 208 errors / 65% coverage ] ****** [3847 done /3224 queued / 16 running / 208 errors / 65% coverage ] ****** [3848 done /3225 queued / 16 running / 208 errors / 65% coverage ] ****** [3848 done /3225 queued / 16 running / 208 errors / 65% coverage ] ****** [3849 done /3225 queued / 16 running / 208 errors / 65% coverage ] ****** [3849 done /3225 queued / 16 running / 208 errors / 65% coverage ] ****** [3850 done /3227 queued / 16 running / 208 errors / 65% coverage ] ****** [3850 done /3227 queued / 16 running / 208 errors / 65% coverage ] ****** [3851 done /3227 queued / 16 running / 208 errors / 65% coverage ] ****** [3851 done /3227 queued / 16 running / 208 errors / 65% coverage ] ****** [3852 done /3228 queued / 16 running / 208 errors / 65% coverage ] ****** [3852 done /3228 queued / 16 running / 208 errors / 65% coverage ] ****** [3853 done /3228 queued / 16 running / 208 errors / 65% coverage ] ****** [3853 done /3228 queued / 16 running / 208 errors / 65% coverage ] ****** [3854 done /3229 queued / 16 running / 208 errors / 65% coverage ] ****** [3854 done /3229 queued / 16 running / 208 errors / 65% coverage ] ****** [3855 done /3229 queued / 16 running / 208 errors / 65% coverage ] ****** [3855 done /3229 queued / 16 running / 208 errors / 65% coverage ] ****** [3856 done /3230 queued / 16 running / 208 errors / 65% coverage ] ****** [3856 done /3230 queued / 16 running / 208 errors / 65% coverage ] ****** [3857 done /3230 queued / 16 running / 208 errors / 65% coverage ] ****** [3857 done /3230 queued / 16 running / 208 errors / 65% coverage ] ****** [3858 done /3230 queued / 16 running / 208 errors / 65% coverage ] ****** [3858 done /3230 queued / 16 running / 208 errors / 65% coverage ] ****** [3859 done /3230 queued / 16 running / 208 errors / 65% coverage ] ****** [3859 done /3230 queued / 16 running / 208 errors / 65% coverage ] ****** [3860 done /3231 queued / 16 running / 208 errors / 65% coverage ] ****** [3860 done /3231 queued / 16 running / 208 errors / 65% coverage ] ****** [3861 done /3231 queued / 16 running / 208 errors / 65% coverage ] ****** [3861 done /3231 queued / 16 running / 208 errors / 65% coverage ] ****** [3862 done /3232 queued / 16 running / 208 errors / 65% coverage ] ****** [3862 done /3232 queued / 16 running / 208 errors / 65% coverage ] ****** [3863 done /3234 queued / 16 running / 208 errors / 65% coverage ] ****** [3863 done /3234 queued / 16 running / 208 errors / 65% coverage ] ****** [3864 done /3235 queued / 16 running / 208 errors / 65% coverage ] ****** [3864 done /3235 queued / 16 running / 208 errors / 65% coverage ] ****** [3865 done /3235 queued / 16 running / 208 errors / 65% coverage ] ****** [3865 done /3235 queued / 16 running / 208 errors / 65% coverage ] ****** [3866 done /3237 queued / 16 running / 208 errors / 65% coverage ] ****** [3866 done /3237 queued / 16 running / 208 errors / 65% coverage ] ****** [3867 done /3239 queued / 16 running / 208 errors / 65% coverage ] ****** [3867 done /3239 queued / 16 running / 208 errors / 65% coverage ] ****** [3868 done /3239 queued / 16 running / 208 errors / 65% coverage ] ****** [3868 done /3239 queued / 16 running / 208 errors / 65% coverage ] ****** [3869 done /3238 queued / 16 running / 208 errors / 65% coverage ] ****** [3869 done /3238 queued / 16 running / 208 errors / 65% coverage ] ****** [3870 done /3240 queued / 16 running / 208 errors / 65% coverage ] ****** [3870 done /3240 queued / 16 running / 208 errors / 65% coverage ] ****** [3871 done /3242 queued / 16 running / 208 errors / 65% coverage ] ****** [3871 done /3242 queued / 16 running / 208 errors / 65% coverage ] ****** [3872 done /3243 queued / 16 running / 208 errors / 65% coverage ] ****** [3872 done /3243 queued / 16 running / 208 errors / 65% coverage ] ****** [3873 done /3245 queued / 16 running / 208 errors / 65% coverage ] ****** [3873 done /3245 queued / 16 running / 208 errors / 65% coverage ] ****** [3874 done /3250 queued / 16 running / 208 errors / 65% coverage ] ****** [3874 done /3250 queued / 16 running / 208 errors / 65% coverage ] ****** [3875 done /3251 queued / 16 running / 208 errors / 65% coverage ] ****** [3875 done /3251 queued / 16 running / 208 errors / 65% coverage ] ****** [3876 done /3254 queued / 16 running / 208 errors / 65% coverage ] ****** [3876 done /3254 queued / 16 running / 208 errors / 65% coverage ] ****** [3877 done /3258 queued / 16 running / 208 errors / 65% coverage ] ****** [3877 done /3258 queued / 16 running / 208 errors / 65% coverage ] ****** [3878 done /3259 queued / 16 running / 208 errors / 65% coverage ] ****** [3878 done /3259 queued / 16 running / 208 errors / 65% coverage ] ****** [3879 done /3261 queued / 16 running / 209 errors / 65% coverage ] ****** [3879 done /3261 queued / 16 running / 209 errors / 65% coverage ] ****** [3880 done /3265 queued / 16 running / 209 errors / 65% coverage ] ****** [3880 done /3265 queued / 16 running / 209 errors / 65% coverage ] ****** [3881 done /3267 queued / 16 running / 209 errors / 65% coverage ] ****** [3881 done /3267 queued / 16 running / 209 errors / 65% coverage ] ****** [3882 done /3268 queued / 16 running / 209 errors / 65% coverage ] ****** [3882 done /3268 queued / 16 running / 209 errors / 65% coverage ] ****** [3883 done /3270 queued / 16 running / 209 errors / 65% coverage ] ****** [3883 done /3270 queued / 16 running / 209 errors / 65% coverage ] ****** [3884 done /3270 queued / 16 running / 209 errors / 65% coverage ] ****** [3884 done /3270 queued / 16 running / 209 errors / 65% coverage ] ****** [3885 done /3274 queued / 16 running / 209 errors / 65% coverage ] ****** [3885 done /3274 queued / 16 running / 209 errors / 65% coverage ] ****** [3886 done /3277 queued / 16 running / 209 errors / 65% coverage ] ****** [3886 done /3277 queued / 16 running / 209 errors / 65% coverage ] ****** [3887 done /3278 queued / 16 running / 209 errors / 65% coverage ] ****** [3887 done /3278 queued / 16 running / 209 errors / 65% coverage ] ****** [3888 done /3279 queued / 16 running / 209 errors / 65% coverage ] ****** [3888 done /3279 queued / 16 running / 209 errors / 65% coverage ] ****** [3889 done /3279 queued / 16 running / 209 errors / 65% coverage ] ****** [3889 done /3279 queued / 16 running / 209 errors / 65% coverage ] ****** [3890 done /3281 queued / 16 running / 209 errors / 65% coverage ] ****** [3890 done /3281 queued / 16 running / 209 errors / 65% coverage ] ****** [3891 done /3283 queued / 16 running / 209 errors / 65% coverage ] ****** [3891 done /3283 queued / 16 running / 209 errors / 65% coverage ] ****** [3892 done /3283 queued / 16 running / 209 errors / 65% coverage ] ****** [3892 done /3283 queued / 16 running / 209 errors / 65% coverage ] ****** [3893 done /3284 queued / 16 running / 209 errors / 65% coverage ] ****** [3893 done /3284 queued / 16 running / 209 errors / 65% coverage ] ****** [3894 done /3284 queued / 16 running / 209 errors / 65% coverage ] ****** [3894 done /3284 queued / 16 running / 209 errors / 65% coverage ] ****** [3895 done /3285 queued / 16 running / 209 errors / 65% coverage ] ****** [3895 done /3285 queued / 16 running / 209 errors / 65% coverage ] ****** [3896 done /3285 queued / 16 running / 209 errors / 65% coverage ] ****** [3896 done /3285 queued / 16 running / 209 errors / 65% coverage ] ****** [3897 done /3285 queued / 16 running / 209 errors / 65% coverage ] ****** [3897 done /3285 queued / 16 running / 209 errors / 65% coverage ] ****** [3898 done /3286 queued / 16 running / 209 errors / 65% coverage ] ****** [3898 done /3286 queued / 16 running / 209 errors / 65% coverage ] ****** [3899 done /3286 queued / 16 running / 209 errors / 65% coverage ] ****** [3899 done /3286 queued / 16 running / 209 errors / 65% coverage ] ****** [3900 done /3289 queued / 16 running / 209 errors / 65% coverage ] ****** [3900 done /3289 queued / 16 running / 209 errors / 65% coverage ] ****** [3901 done /3289 queued / 16 running / 209 errors / 65% coverage ] ****** [3901 done /3289 queued / 16 running / 209 errors / 65% coverage ] ****** [3902 done /3290 queued / 16 running / 209 errors / 65% coverage ] ****** [3902 done /3290 queued / 16 running / 209 errors / 65% coverage ] ****** [3903 done /3292 queued / 16 running / 209 errors / 65% coverage ] ****** [3903 done /3292 queued / 16 running / 209 errors / 65% coverage ] ****** [3904 done /3292 queued / 16 running / 209 errors / 65% coverage ] ****** [3904 done /3292 queued / 16 running / 209 errors / 65% coverage ] ****** [3905 done /3292 queued / 16 running / 209 errors / 65% coverage ] ****** [3905 done /3292 queued / 16 running / 209 errors / 65% coverage ] ****** [3906 done /3292 queued / 16 running / 209 errors / 65% coverage ] ****** [3906 done /3292 queued / 16 running / 209 errors / 65% coverage ] ****** [3907 done /3292 queued / 16 running / 209 errors / 65% coverage ] ****** [3907 done /3292 queued / 16 running / 209 errors / 65% coverage ] ****** [3908 done /3293 queued / 16 running / 209 errors / 65% coverage ] ****** [3908 done /3293 queued / 16 running / 209 errors / 65% coverage ] ****** [3909 done /3293 queued / 16 running / 209 errors / 65% coverage ] ****** [3909 done /3293 queued / 16 running / 209 errors / 65% coverage ] ****** [3910 done /3294 queued / 16 running / 209 errors / 65% coverage ] ****** [3910 done /3294 queued / 16 running / 209 errors / 65% coverage ] ****** [3911 done /3294 queued / 16 running / 209 errors / 65% coverage ] ****** [3911 done /3294 queued / 16 running / 209 errors / 65% coverage ] ****** [3912 done /3294 queued / 16 running / 209 errors / 65% coverage ] ****** [3912 done /3294 queued / 16 running / 209 errors / 65% coverage ] ****** [3913 done /3296 queued / 16 running / 209 errors / 65% coverage ] ****** [3913 done /3296 queued / 16 running / 209 errors / 65% coverage ] ****** [3914 done /3297 queued / 16 running / 209 errors / 65% coverage ] ****** [3914 done /3297 queued / 16 running / 209 errors / 65% coverage ] ****** [3915 done /3301 queued / 16 running / 209 errors / 65% coverage ] ****** [3915 done /3301 queued / 16 running / 209 errors / 65% coverage ] ****** [3916 done /3304 queued / 16 running / 209 errors / 65% coverage ] ****** [3916 done /3304 queued / 16 running / 209 errors / 65% coverage ] ****** [3917 done /3306 queued / 16 running / 210 errors / 65% coverage ] ****** [3917 done /3306 queued / 16 running / 210 errors / 65% coverage ] ****** [3918 done /3310 queued / 16 running / 210 errors / 65% coverage ] ****** [3918 done /3310 queued / 16 running / 210 errors / 65% coverage ] ****** [3919 done /3311 queued / 16 running / 210 errors / 65% coverage ] ****** [3919 done /3311 queued / 16 running / 210 errors / 65% coverage ] ****** [3920 done /3311 queued / 16 running / 210 errors / 65% coverage ] ****** [3920 done /3311 queued / 16 running / 210 errors / 65% coverage ] ****** [3921 done /3313 queued / 16 running / 210 errors / 65% coverage ] ****** [3921 done /3313 queued / 16 running / 210 errors / 65% coverage ] ****** [3922 done /3313 queued / 16 running / 210 errors / 65% coverage ] ****** [3922 done /3313 queued / 16 running / 210 errors / 65% coverage ] ****** [3923 done /3318 queued / 16 running / 210 errors / 65% coverage ] ****** [3923 done /3318 queued / 16 running / 210 errors / 65% coverage ] ****** [3924 done /3319 queued / 16 running / 210 errors / 65% coverage ] ****** [3924 done /3319 queued / 16 running / 210 errors / 65% coverage ] ****** [3925 done /3320 queued / 16 running / 210 errors / 65% coverage ] ****** [3925 done /3320 queued / 16 running / 210 errors / 65% coverage ] ****** [3926 done /3324 queued / 16 running / 210 errors / 65% coverage ] ****** [3926 done /3324 queued / 16 running / 210 errors / 65% coverage ] ****** [3927 done /3327 queued / 16 running / 210 errors / 65% coverage ] ****** [3927 done /3327 queued / 16 running / 210 errors / 65% coverage ] ****** [3928 done /3329 queued / 16 running / 210 errors / 65% coverage ] ****** [3928 done /3329 queued / 16 running / 210 errors / 65% coverage ] ****** [3929 done /3329 queued / 16 running / 210 errors / 65% coverage ] ****** [3929 done /3329 queued / 16 running / 210 errors / 65% coverage ] ****** [3930 done /3328 queued / 16 running / 210 errors / 65% coverage ] ****** [3930 done /3328 queued / 16 running / 210 errors / 65% coverage ] ****** [3931 done /3327 queued / 16 running / 210 errors / 65% coverage ] ****** [3931 done /3327 queued / 16 running / 210 errors / 65% coverage ] ****** [3932 done /3327 queued / 16 running / 210 errors / 65% coverage ] ****** [3932 done /3327 queued / 16 running / 210 errors / 65% coverage ] ****** [3933 done /3327 queued / 16 running / 210 errors / 65% coverage ] ****** [3933 done /3327 queued / 16 running / 210 errors / 65% coverage ] ****** [3934 done /3328 queued / 16 running / 210 errors / 65% coverage ] ****** [3934 done /3328 queued / 16 running / 210 errors / 65% coverage ] ****** [3935 done /3329 queued / 16 running / 210 errors / 65% coverage ] ****** [3935 done /3329 queued / 16 running / 210 errors / 65% coverage ] ****** [3936 done /3329 queued / 16 running / 210 errors / 65% coverage ] ****** [3936 done /3329 queued / 16 running / 210 errors / 65% coverage ] ****** [3937 done /3328 queued / 16 running / 210 errors / 65% coverage ] ****** [3937 done /3328 queued / 16 running / 210 errors / 65% coverage ] ****** [3938 done /3329 queued / 16 running / 210 errors / 65% coverage ] ****** [3938 done /3329 queued / 16 running / 210 errors / 65% coverage ] ****** [3939 done /3330 queued / 16 running / 210 errors / 65% coverage ] ****** [3939 done /3330 queued / 16 running / 210 errors / 65% coverage ] ****** [3940 done /3331 queued / 16 running / 210 errors / 65% coverage ] ****** [3940 done /3331 queued / 16 running / 210 errors / 65% coverage ] ****** [3941 done /3333 queued / 16 running / 210 errors / 65% coverage ] ****** [3941 done /3333 queued / 16 running / 210 errors / 65% coverage ] ****** [3942 done /3335 queued / 16 running / 210 errors / 65% coverage ] ****** [3942 done /3335 queued / 16 running / 210 errors / 65% coverage ] ****** [3943 done /3335 queued / 16 running / 210 errors / 65% coverage ] ****** [3943 done /3335 queued / 16 running / 210 errors / 65% coverage ] ****** [3944 done /3336 queued / 16 running / 210 errors / 65% coverage ] ****** [3944 done /3336 queued / 16 running / 210 errors / 65% coverage ] ****** [3945 done /3336 queued / 16 running / 210 errors / 65% coverage ] ****** [3945 done /3336 queued / 16 running / 210 errors / 65% coverage ] ****** [3946 done /3336 queued / 16 running / 210 errors / 65% coverage ] ****** [3946 done /3336 queued / 16 running / 210 errors / 65% coverage ] ****** [3947 done /3335 queued / 16 running / 210 errors / 65% coverage ] ****** [3947 done /3335 queued / 16 running / 210 errors / 65% coverage ] ****** [3948 done /3335 queued / 16 running / 210 errors / 65% coverage ] ****** [3948 done /3335 queued / 16 running / 210 errors / 65% coverage ] ****** [3949 done /3335 queued / 16 running / 210 errors / 65% coverage ] ****** [3949 done /3335 queued / 16 running / 210 errors / 65% coverage ] ****** [3950 done /3336 queued / 16 running / 210 errors / 65% coverage ] ****** [3950 done /3336 queued / 16 running / 210 errors / 65% coverage ] ****** [3951 done /3335 queued / 16 running / 210 errors / 65% coverage ] ****** [3951 done /3335 queued / 16 running / 210 errors / 65% coverage ] ****** [3952 done /3334 queued / 16 running / 210 errors / 65% coverage ] ****** [3952 done /3334 queued / 16 running / 210 errors / 65% coverage ] ****** [3953 done /3336 queued / 16 running / 210 errors / 65% coverage ] ****** [3953 done /3336 queued / 16 running / 210 errors / 65% coverage ] ****** [3954 done /3336 queued / 16 running / 210 errors / 65% coverage ] ****** [3954 done /3336 queued / 16 running / 210 errors / 65% coverage ] ****** [3955 done /3335 queued / 16 running / 210 errors / 65% coverage ] ****** [3955 done /3335 queued / 16 running / 210 errors / 65% coverage ] ****** [3956 done /3339 queued / 16 running / 210 errors / 65% coverage ] ****** [3956 done /3339 queued / 16 running / 210 errors / 65% coverage ] ****** [3957 done /3342 queued / 16 running / 210 errors / 65% coverage ] ****** [3957 done /3342 queued / 16 running / 210 errors / 65% coverage ] ****** [3958 done /3344 queued / 16 running / 210 errors / 65% coverage ] ****** [3958 done /3344 queued / 16 running / 210 errors / 65% coverage ] ****** [3959 done /3346 queued / 16 running / 210 errors / 65% coverage ] ****** [3959 done /3346 queued / 16 running / 210 errors / 65% coverage ] ****** [3960 done /3348 queued / 16 running / 210 errors / 65% coverage ] ****** [3960 done /3348 queued / 16 running / 210 errors / 65% coverage ] ****** [3961 done /3352 queued / 16 running / 210 errors / 65% coverage ] ****** [3961 done /3352 queued / 16 running / 210 errors / 65% coverage ] ****** [3962 done /3354 queued / 16 running / 210 errors / 65% coverage ] ****** [3962 done /3354 queued / 16 running / 210 errors / 65% coverage ] ****** [3963 done /3356 queued / 16 running / 210 errors / 65% coverage ] ****** [3963 done /3356 queued / 16 running / 210 errors / 65% coverage ] ****** [3964 done /3356 queued / 16 running / 210 errors / 65% coverage ] ****** [3964 done /3356 queued / 16 running / 210 errors / 65% coverage ] ****** [3965 done /3358 queued / 16 running / 210 errors / 65% coverage ] ****** [3965 done /3358 queued / 16 running / 210 errors / 65% coverage ] ****** [3966 done /3363 queued / 16 running / 210 errors / 65% coverage ] ****** [3966 done /3363 queued / 16 running / 210 errors / 65% coverage ] ****** [3967 done /3364 queued / 16 running / 211 errors / 65% coverage ] ****** [3967 done /3364 queued / 16 running / 211 errors / 65% coverage ] ****** [3968 done /3366 queued / 16 running / 211 errors / 65% coverage ] ****** [3968 done /3366 queued / 16 running / 211 errors / 65% coverage ] ****** [3969 done /3370 queued / 16 running / 211 errors / 65% coverage ] ****** [3969 done /3370 queued / 16 running / 211 errors / 65% coverage ] ****** [3970 done /3375 queued / 16 running / 211 errors / 65% coverage ] ****** [3970 done /3375 queued / 16 running / 211 errors / 65% coverage ] ****** [3971 done /3378 queued / 16 running / 211 errors / 65% coverage ] ****** [3971 done /3378 queued / 16 running / 211 errors / 65% coverage ] ****** [3972 done /3379 queued / 16 running / 211 errors / 65% coverage ] ****** [3972 done /3379 queued / 16 running / 211 errors / 65% coverage ] ****** [3973 done /3379 queued / 16 running / 211 errors / 65% coverage ] ****** [3973 done /3379 queued / 16 running / 211 errors / 65% coverage ] ****** [3974 done /3379 queued / 16 running / 211 errors / 65% coverage ] ****** [3974 done /3379 queued / 16 running / 211 errors / 65% coverage ] ****** [3975 done /3379 queued / 16 running / 211 errors / 65% coverage ] ****** [3975 done /3379 queued / 16 running / 211 errors / 65% coverage ] ****** [3976 done /3379 queued / 16 running / 211 errors / 65% coverage ] ****** [3976 done /3379 queued / 16 running / 211 errors / 65% coverage ] ****** [3977 done /3380 queued / 16 running / 211 errors / 65% coverage ] ****** [3977 done /3380 queued / 16 running / 211 errors / 65% coverage ] ****** [3978 done /3380 queued / 16 running / 211 errors / 65% coverage ] ****** [3978 done /3380 queued / 16 running / 211 errors / 65% coverage ] ****** [3979 done /3380 queued / 16 running / 211 errors / 65% coverage ] ****** [3979 done /3380 queued / 16 running / 211 errors / 65% coverage ] ****** [3980 done /3380 queued / 16 running / 211 errors / 65% coverage ] ****** [3980 done /3380 queued / 16 running / 211 errors / 65% coverage ] ****** [3981 done /3382 queued / 16 running / 211 errors / 65% coverage ] ****** [3981 done /3382 queued / 16 running / 211 errors / 65% coverage ] ****** [3982 done /3383 queued / 16 running / 211 errors / 65% coverage ] ****** [3982 done /3383 queued / 16 running / 211 errors / 65% coverage ] ****** [3983 done /3385 queued / 16 running / 211 errors / 65% coverage ] ****** [3983 done /3385 queued / 16 running / 211 errors / 65% coverage ] ****** [3984 done /3386 queued / 16 running / 211 errors / 65% coverage ] ****** [3984 done /3386 queued / 16 running / 211 errors / 65% coverage ] ****** [3985 done /3388 queued / 16 running / 211 errors / 65% coverage ] ****** [3985 done /3388 queued / 16 running / 211 errors / 65% coverage ] ****** [3986 done /3389 queued / 16 running / 211 errors / 65% coverage ] ****** [3986 done /3389 queued / 16 running / 211 errors / 65% coverage ] ****** [3987 done /3389 queued / 16 running / 211 errors / 65% coverage ] ****** [3987 done /3389 queued / 16 running / 211 errors / 65% coverage ] ****** [3988 done /3390 queued / 16 running / 211 errors / 65% coverage ] ****** [3988 done /3390 queued / 16 running / 211 errors / 65% coverage ] ****** [3989 done /3389 queued / 16 running / 211 errors / 65% coverage ] ****** [3989 done /3389 queued / 16 running / 211 errors / 65% coverage ] ****** [3990 done /3391 queued / 16 running / 211 errors / 65% coverage ] ****** [3990 done /3391 queued / 16 running / 211 errors / 65% coverage ] ****** [3991 done /3391 queued / 16 running / 211 errors / 65% coverage ] ****** [3991 done /3391 queued / 16 running / 211 errors / 65% coverage ] ****** [3992 done /3392 queued / 16 running / 211 errors / 65% coverage ] ****** [3992 done /3392 queued / 16 running / 211 errors / 65% coverage ] ****** [3993 done /3392 queued / 16 running / 211 errors / 65% coverage ] ****** [3993 done /3392 queued / 16 running / 211 errors / 65% coverage ] ****** [3994 done /3393 queued / 16 running / 211 errors / 65% coverage ] ****** [3994 done /3393 queued / 16 running / 211 errors / 65% coverage ] ****** [3995 done /3393 queued / 16 running / 211 errors / 65% coverage ] ****** [3995 done /3393 queued / 16 running / 211 errors / 65% coverage ] ****** [3996 done /3392 queued / 16 running / 211 errors / 65% coverage ] ****** [3996 done /3392 queued / 16 running / 211 errors / 65% coverage ] ****** [3997 done /3392 queued / 16 running / 211 errors / 65% coverage ] ****** [3997 done /3392 queued / 16 running / 211 errors / 65% coverage ] ****** [3998 done /3391 queued / 16 running / 211 errors / 65% coverage ] ****** [3998 done /3391 queued / 16 running / 211 errors / 65% coverage ] ****** [3999 done /3392 queued / 16 running / 211 errors / 65% coverage ] ****** [3999 done /3392 queued / 16 running / 211 errors / 65% coverage ] ****** [4000 done /3393 queued / 16 running / 211 errors / 65% coverage ] ****** [4000 done /3393 queued / 16 running / 211 errors / 65% coverage ] ****** [4001 done /3397 queued / 16 running / 211 errors / 65% coverage ] ****** [4001 done /3397 queued / 16 running / 211 errors / 65% coverage ] ****** [4002 done /3398 queued / 16 running / 211 errors / 65% coverage ] ****** [4002 done /3398 queued / 16 running / 211 errors / 65% coverage ] ****** [4003 done /3400 queued / 16 running / 211 errors / 65% coverage ] ****** [4003 done /3400 queued / 16 running / 211 errors / 65% coverage ] ****** [4004 done /3401 queued / 16 running / 211 errors / 65% coverage ] ****** [4004 done /3401 queued / 16 running / 211 errors / 65% coverage ] ****** [4005 done /3402 queued / 16 running / 211 errors / 65% coverage ] ****** [4005 done /3402 queued / 16 running / 211 errors / 65% coverage ] ****** [4006 done /3404 queued / 16 running / 212 errors / 65% coverage ] ****** [4006 done /3404 queued / 16 running / 212 errors / 65% coverage ] ****** [4007 done /3404 queued / 16 running / 212 errors / 65% coverage ] ****** [4007 done /3404 queued / 16 running / 212 errors / 65% coverage ] ****** [4008 done /3404 queued / 16 running / 212 errors / 65% coverage ] ****** [4008 done /3404 queued / 16 running / 212 errors / 65% coverage ] ****** [4009 done /3405 queued / 16 running / 212 errors / 65% coverage ] ****** [4009 done /3405 queued / 16 running / 212 errors / 65% coverage ] ****** [4010 done /3407 queued / 16 running / 212 errors / 65% coverage ] ****** [4010 done /3407 queued / 16 running / 212 errors / 65% coverage ] ****** [4011 done /3409 queued / 16 running / 212 errors / 65% coverage ] ****** [4011 done /3409 queued / 16 running / 212 errors / 65% coverage ] ****** [4012 done /3410 queued / 16 running / 212 errors / 65% coverage ] ****** [4012 done /3410 queued / 16 running / 212 errors / 65% coverage ] ****** [4013 done /3411 queued / 16 running / 212 errors / 65% coverage ] ****** [4013 done /3411 queued / 16 running / 212 errors / 65% coverage ] ****** [4014 done /3415 queued / 16 running / 212 errors / 65% coverage ] ****** [4014 done /3415 queued / 16 running / 212 errors / 65% coverage ] ****** [4015 done /3419 queued / 16 running / 212 errors / 65% coverage ] ****** [4015 done /3419 queued / 16 running / 212 errors / 65% coverage ] ****** [4016 done /3422 queued / 16 running / 212 errors / 65% coverage ] ****** [4016 done /3422 queued / 16 running / 212 errors / 65% coverage ] ****** [4017 done /3422 queued / 16 running / 212 errors / 65% coverage ] ****** [4017 done /3422 queued / 16 running / 212 errors / 65% coverage ] ****** [4018 done /3422 queued / 16 running / 212 errors / 65% coverage ] ****** [4018 done /3422 queued / 16 running / 212 errors / 65% coverage ] ****** [4019 done /3423 queued / 16 running / 212 errors / 65% coverage ] ****** [4019 done /3423 queued / 16 running / 212 errors / 65% coverage ] ****** [4020 done /3423 queued / 16 running / 212 errors / 65% coverage ] ****** [4020 done /3423 queued / 16 running / 212 errors / 65% coverage ] ****** [4021 done /3425 queued / 16 running / 212 errors / 65% coverage ] ****** [4021 done /3425 queued / 16 running / 212 errors / 65% coverage ] ****** [4022 done /3427 queued / 16 running / 212 errors / 65% coverage ] ****** [4022 done /3427 queued / 16 running / 212 errors / 65% coverage ] ****** [4023 done /3428 queued / 16 running / 212 errors / 65% coverage ] ****** [4023 done /3428 queued / 16 running / 212 errors / 65% coverage ] ****** [4024 done /3432 queued / 16 running / 212 errors / 65% coverage ] ****** [4024 done /3432 queued / 16 running / 212 errors / 65% coverage ] ****** [4025 done /3431 queued / 16 running / 212 errors / 65% coverage ] ****** [4025 done /3431 queued / 16 running / 212 errors / 65% coverage ] ****** [4026 done /3430 queued / 16 running / 212 errors / 65% coverage ] ****** [4026 done /3430 queued / 16 running / 212 errors / 65% coverage ] ****** [4027 done /3432 queued / 16 running / 213 errors / 65% coverage ] ****** [4027 done /3432 queued / 16 running / 213 errors / 65% coverage ] ****** [4028 done /3432 queued / 16 running / 213 errors / 65% coverage ] ****** [4028 done /3432 queued / 16 running / 213 errors / 65% coverage ] ****** [4029 done /3431 queued / 16 running / 213 errors / 65% coverage ] ****** [4029 done /3431 queued / 16 running / 213 errors / 65% coverage ] ****** [4030 done /3430 queued / 16 running / 213 errors / 65% coverage ] ****** [4030 done /3430 queued / 16 running / 213 errors / 65% coverage ] ****** [4031 done /3431 queued / 16 running / 213 errors / 65% coverage ] ****** [4031 done /3431 queued / 16 running / 213 errors / 65% coverage ] ****** [4032 done /3431 queued / 16 running / 213 errors / 65% coverage ] ****** [4032 done /3431 queued / 16 running / 213 errors / 65% coverage ] ****** [4033 done /3431 queued / 16 running / 213 errors / 65% coverage ] ****** [4033 done /3431 queued / 16 running / 213 errors / 65% coverage ] ****** [4034 done /3432 queued / 16 running / 213 errors / 65% coverage ] ****** [4034 done /3432 queued / 16 running / 213 errors / 65% coverage ] ****** [4035 done /3432 queued / 16 running / 213 errors / 65% coverage ] ****** [4035 done /3432 queued / 16 running / 213 errors / 65% coverage ] ****** [4036 done /3432 queued / 16 running / 213 errors / 65% coverage ] ****** [4036 done /3432 queued / 16 running / 213 errors / 65% coverage ] ****** [4037 done /3432 queued / 16 running / 213 errors / 65% coverage ] ****** [4037 done /3432 queued / 16 running / 213 errors / 65% coverage ] ****** [4038 done /3431 queued / 16 running / 213 errors / 65% coverage ] ****** [4038 done /3431 queued / 16 running / 213 errors / 65% coverage ] ****** [4039 done /3430 queued / 16 running / 213 errors / 65% coverage ] ****** [4039 done /3430 queued / 16 running / 213 errors / 65% coverage ] ****** [4040 done /3430 queued / 16 running / 213 errors / 65% coverage ] ****** [4040 done /3430 queued / 16 running / 213 errors / 65% coverage ] ****** [4041 done /3430 queued / 16 running / 213 errors / 65% coverage ] ****** [4041 done /3430 queued / 16 running / 213 errors / 65% coverage ] ****** [4042 done /3430 queued / 16 running / 213 errors / 65% coverage ] ****** [4042 done /3430 queued / 16 running / 213 errors / 65% coverage ] ****** [4043 done /3431 queued / 16 running / 213 errors / 65% coverage ] ****** [4043 done /3431 queued / 16 running / 213 errors / 65% coverage ] ****** [4044 done /3431 queued / 16 running / 213 errors / 65% coverage ] ****** [4044 done /3431 queued / 16 running / 213 errors / 65% coverage ] ****** [4045 done /3430 queued / 16 running / 213 errors / 65% coverage ] ****** [4045 done /3430 queued / 16 running / 213 errors / 65% coverage ] ****** [4046 done /3429 queued / 16 running / 213 errors / 65% coverage ] ****** [4046 done /3429 queued / 16 running / 213 errors / 65% coverage ] ****** [4047 done /3429 queued / 16 running / 213 errors / 65% coverage ] ****** [4047 done /3429 queued / 16 running / 213 errors / 65% coverage ] ****** [4048 done /3429 queued / 16 running / 213 errors / 65% coverage ] ****** [4048 done /3429 queued / 16 running / 213 errors / 65% coverage ] ****** [4049 done /3429 queued / 16 running / 213 errors / 65% coverage ] ****** [4049 done /3429 queued / 16 running / 213 errors / 65% coverage ] ****** [4050 done /3431 queued / 16 running / 213 errors / 65% coverage ] ****** [4050 done /3431 queued / 16 running / 213 errors / 65% coverage ] ****** [4051 done /3430 queued / 16 running / 213 errors / 65% coverage ] ****** [4051 done /3430 queued / 16 running / 213 errors / 65% coverage ] ****** [4052 done /3431 queued / 16 running / 213 errors / 65% coverage ] ****** [4052 done /3431 queued / 16 running / 213 errors / 65% coverage ] ****** [4053 done /3431 queued / 16 running / 213 errors / 65% coverage ] ****** [4053 done /3431 queued / 16 running / 213 errors / 65% coverage ] ****** [4054 done /3433 queued / 16 running / 213 errors / 65% coverage ] ****** [4054 done /3433 queued / 16 running / 213 errors / 65% coverage ] ****** [4055 done /3435 queued / 16 running / 213 errors / 65% coverage ] ****** [4055 done /3435 queued / 16 running / 213 errors / 65% coverage ] ****** [4056 done /3438 queued / 16 running / 213 errors / 65% coverage ] ****** [4056 done /3438 queued / 16 running / 213 errors / 65% coverage ] ****** [4057 done /3438 queued / 16 running / 213 errors / 65% coverage ] ****** [4057 done /3438 queued / 16 running / 213 errors / 65% coverage ] ****** [4058 done /3441 queued / 16 running / 214 errors / 65% coverage ] ****** [4058 done /3441 queued / 16 running / 214 errors / 65% coverage ] ****** [4059 done /3445 queued / 16 running / 214 errors / 65% coverage ] ****** [4059 done /3445 queued / 16 running / 214 errors / 65% coverage ] ****** [4060 done /3448 queued / 16 running / 214 errors / 65% coverage ] ****** [4060 done /3448 queued / 16 running / 214 errors / 65% coverage ] ****** [4061 done /3452 queued / 16 running / 214 errors / 65% coverage ] ****** [4061 done /3452 queued / 16 running / 214 errors / 65% coverage ] ****** [4062 done /3456 queued / 16 running / 214 errors / 65% coverage ] ****** [4062 done /3456 queued / 16 running / 214 errors / 65% coverage ] ****** [4063 done /3459 queued / 16 running / 214 errors / 65% coverage ] ****** [4063 done /3459 queued / 16 running / 214 errors / 65% coverage ] ****** [4064 done /3462 queued / 16 running / 214 errors / 65% coverage ] ****** [4064 done /3462 queued / 16 running / 214 errors / 65% coverage ] ****** [4065 done /3462 queued / 16 running / 214 errors / 65% coverage ] ****** [4065 done /3462 queued / 16 running / 214 errors / 65% coverage ] ****** [4066 done /3465 queued / 16 running / 214 errors / 65% coverage ] ****** [4066 done /3465 queued / 16 running / 214 errors / 65% coverage ] ****** [4067 done /3467 queued / 16 running / 214 errors / 65% coverage ] ****** [4067 done /3467 queued / 16 running / 214 errors / 65% coverage ] ****** [4068 done /3468 queued / 16 running / 214 errors / 65% coverage ] ****** [4068 done /3468 queued / 16 running / 214 errors / 65% coverage ] ****** [4069 done /3469 queued / 16 running / 214 errors / 65% coverage ] ****** [4069 done /3469 queued / 16 running / 214 errors / 65% coverage ] ****** [4070 done /3468 queued / 16 running / 214 errors / 65% coverage ] ****** [4070 done /3468 queued / 16 running / 214 errors / 65% coverage ] ****** [4071 done /3471 queued / 16 running / 214 errors / 65% coverage ] ****** [4071 done /3471 queued / 16 running / 214 errors / 65% coverage ] ****** [4072 done /3472 queued / 16 running / 214 errors / 65% coverage ] ****** [4072 done /3472 queued / 16 running / 214 errors / 65% coverage ] ****** [4073 done /3472 queued / 16 running / 214 errors / 65% coverage ] ****** [4073 done /3472 queued / 16 running / 214 errors / 65% coverage ] ****** [4074 done /3471 queued / 16 running / 214 errors / 65% coverage ] ****** [4074 done /3471 queued / 16 running / 214 errors / 65% coverage ] ****** [4075 done /3472 queued / 16 running / 214 errors / 65% coverage ] ****** [4075 done /3472 queued / 16 running / 214 errors / 65% coverage ] ****** [4076 done /3472 queued / 16 running / 214 errors / 65% coverage ] ****** [4076 done /3472 queued / 16 running / 214 errors / 65% coverage ] ****** [4077 done /3472 queued / 16 running / 214 errors / 65% coverage ] ****** [4077 done /3472 queued / 16 running / 214 errors / 65% coverage ] ****** [4078 done /3472 queued / 16 running / 214 errors / 65% coverage ] ****** [4078 done /3472 queued / 16 running / 214 errors / 65% coverage ] ****** [4079 done /3473 queued / 16 running / 214 errors / 65% coverage ] ****** [4079 done /3473 queued / 16 running / 214 errors / 65% coverage ] ****** [4080 done /3473 queued / 16 running / 214 errors / 65% coverage ] ****** [4080 done /3473 queued / 16 running / 214 errors / 65% coverage ] ****** [4081 done /3472 queued / 16 running / 214 errors / 65% coverage ] ****** [4081 done /3472 queued / 16 running / 214 errors / 65% coverage ] ****** [4082 done /3472 queued / 16 running / 214 errors / 65% coverage ] ****** [4082 done /3472 queued / 16 running / 214 errors / 65% coverage ] ****** [4083 done /3472 queued / 16 running / 214 errors / 65% coverage ] ****** [4083 done /3472 queued / 16 running / 214 errors / 65% coverage ] ****** [4084 done /3471 queued / 16 running / 214 errors / 65% coverage ] ****** [4084 done /3471 queued / 16 running / 214 errors / 65% coverage ] ****** [4085 done /3472 queued / 16 running / 214 errors / 65% coverage ] ****** [4085 done /3472 queued / 16 running / 214 errors / 65% coverage ] ****** [4086 done /3472 queued / 16 running / 214 errors / 65% coverage ] ****** [4086 done /3472 queued / 16 running / 214 errors / 65% coverage ] ****** [4087 done /3472 queued / 16 running / 214 errors / 65% coverage ] ****** [4087 done /3472 queued / 16 running / 214 errors / 65% coverage ] ****** [4088 done /3471 queued / 16 running / 214 errors / 65% coverage ] ****** [4088 done /3471 queued / 16 running / 214 errors / 65% coverage ] ****** [4089 done /3471 queued / 16 running / 214 errors / 65% coverage ] ****** [4089 done /3471 queued / 16 running / 214 errors / 65% coverage ] ****** [4090 done /3470 queued / 16 running / 214 errors / 65% coverage ] ****** [4090 done /3470 queued / 16 running / 214 errors / 65% coverage ] ****** [4091 done /3470 queued / 16 running / 214 errors / 65% coverage ] ****** [4091 done /3470 queued / 16 running / 214 errors / 65% coverage ] ****** [4092 done /3470 queued / 16 running / 214 errors / 65% coverage ] ****** [4092 done /3470 queued / 16 running / 214 errors / 65% coverage ] ****** [4093 done /3469 queued / 16 running / 214 errors / 65% coverage ] ****** [4093 done /3469 queued / 16 running / 214 errors / 65% coverage ] ****** [4094 done /3468 queued / 16 running / 214 errors / 65% coverage ] ****** [4094 done /3468 queued / 16 running / 214 errors / 65% coverage ] ****** [4095 done /3467 queued / 16 running / 214 errors / 65% coverage ] ****** [4095 done /3467 queued / 16 running / 214 errors / 65% coverage ] ****** [4096 done /3466 queued / 16 running / 214 errors / 65% coverage ] ****** [4096 done /3466 queued / 16 running / 214 errors / 65% coverage ] ****** [4097 done /3470 queued / 16 running / 214 errors / 65% coverage ] ****** [4097 done /3470 queued / 16 running / 214 errors / 65% coverage ] ****** [4098 done /3474 queued / 16 running / 214 errors / 65% coverage ] ****** [4098 done /3474 queued / 16 running / 214 errors / 65% coverage ] ****** [4099 done /3475 queued / 16 running / 214 errors / 65% coverage ] ****** [4099 done /3475 queued / 16 running / 214 errors / 65% coverage ] ****** [4100 done /3477 queued / 16 running / 214 errors / 65% coverage ] ****** [4100 done /3477 queued / 16 running / 214 errors / 65% coverage ] ****** [4101 done /3476 queued / 16 running / 214 errors / 65% coverage ] ****** [4101 done /3476 queued / 16 running / 214 errors / 65% coverage ] ****** [4102 done /3477 queued / 16 running / 214 errors / 65% coverage ] ****** [4102 done /3477 queued / 16 running / 214 errors / 65% coverage ] ****** [4103 done /3476 queued / 16 running / 214 errors / 65% coverage ] ****** [4103 done /3476 queued / 16 running / 214 errors / 65% coverage ] ****** [4104 done /3476 queued / 16 running / 214 errors / 65% coverage ] ****** [4104 done /3476 queued / 16 running / 214 errors / 65% coverage ] ****** [4105 done /3478 queued / 16 running / 214 errors / 65% coverage ] ****** [4105 done /3478 queued / 16 running / 214 errors / 65% coverage ] ****** [4106 done /3480 queued / 16 running / 214 errors / 65% coverage ] ****** [4106 done /3480 queued / 16 running / 214 errors / 65% coverage ] ****** [4107 done /3485 queued / 16 running / 214 errors / 65% coverage ] ****** [4107 done /3485 queued / 16 running / 214 errors / 65% coverage ] ****** [4108 done /3486 queued / 16 running / 214 errors / 65% coverage ] ****** [4108 done /3486 queued / 16 running / 214 errors / 65% coverage ] ****** [4109 done /3488 queued / 16 running / 214 errors / 65% coverage ] ****** [4109 done /3488 queued / 16 running / 214 errors / 65% coverage ] ****** [4110 done /3492 queued / 16 running / 214 errors / 65% coverage ] ****** [4110 done /3492 queued / 16 running / 214 errors / 65% coverage ] ****** [4111 done /3493 queued / 16 running / 214 errors / 65% coverage ] ****** [4111 done /3493 queued / 16 running / 214 errors / 65% coverage ] ****** [4112 done /3495 queued / 16 running / 214 errors / 65% coverage ] ****** [4112 done /3495 queued / 16 running / 214 errors / 65% coverage ] ****** [4113 done /3495 queued / 16 running / 214 errors / 65% coverage ] ****** [4113 done /3495 queued / 16 running / 214 errors / 65% coverage ] ****** [4114 done /3495 queued / 16 running / 214 errors / 65% coverage ] ****** [4114 done /3495 queued / 16 running / 214 errors / 65% coverage ] ****** [4115 done /3496 queued / 16 running / 214 errors / 65% coverage ] ****** [4115 done /3496 queued / 16 running / 214 errors / 65% coverage ] ****** [4116 done /3496 queued / 16 running / 214 errors / 65% coverage ] ****** [4116 done /3496 queued / 16 running / 214 errors / 65% coverage ] ****** [4117 done /3496 queued / 16 running / 214 errors / 65% coverage ] ****** [4117 done /3496 queued / 16 running / 214 errors / 65% coverage ] ****** [4118 done /3496 queued / 16 running / 214 errors / 65% coverage ] ****** [4118 done /3496 queued / 16 running / 214 errors / 65% coverage ] ****** [4119 done /3497 queued / 16 running / 214 errors / 65% coverage ] ****** [4119 done /3497 queued / 16 running / 214 errors / 65% coverage ] ****** [4120 done /3498 queued / 16 running / 214 errors / 65% coverage ] ****** [4120 done /3498 queued / 16 running / 214 errors / 65% coverage ] ****** [4121 done /3500 queued / 16 running / 214 errors / 65% coverage ] ****** [4121 done /3500 queued / 16 running / 214 errors / 65% coverage ] ****** [4122 done /3500 queued / 16 running / 214 errors / 65% coverage ] ****** [4122 done /3500 queued / 16 running / 214 errors / 65% coverage ] ****** [4123 done /3501 queued / 16 running / 214 errors / 65% coverage ] ****** [4123 done /3501 queued / 16 running / 214 errors / 65% coverage ] ****** [4124 done /3503 queued / 16 running / 214 errors / 65% coverage ] ****** [4124 done /3503 queued / 16 running / 214 errors / 65% coverage ] ****** [4125 done /3503 queued / 16 running / 214 errors / 65% coverage ] ****** [4125 done /3503 queued / 16 running / 214 errors / 65% coverage ] ****** [4126 done /3505 queued / 16 running / 214 errors / 65% coverage ] ****** [4126 done /3505 queued / 16 running / 214 errors / 65% coverage ] ****** [4127 done /3507 queued / 16 running / 214 errors / 65% coverage ] ****** [4127 done /3507 queued / 16 running / 214 errors / 65% coverage ] ****** [4128 done /3508 queued / 16 running / 214 errors / 65% coverage ] ****** [4128 done /3508 queued / 16 running / 214 errors / 65% coverage ] ****** [4129 done /3509 queued / 16 running / 214 errors / 65% coverage ] ****** [4129 done /3509 queued / 16 running / 214 errors / 65% coverage ] ****** [4130 done /3510 queued / 16 running / 214 errors / 65% coverage ] ****** [4130 done /3510 queued / 16 running / 214 errors / 65% coverage ] ****** [4131 done /3510 queued / 16 running / 214 errors / 65% coverage ] ****** [4131 done /3510 queued / 16 running / 214 errors / 65% coverage ] ****** [4132 done /3511 queued / 16 running / 214 errors / 65% coverage ] ****** [4132 done /3511 queued / 16 running / 214 errors / 65% coverage ] ****** [4133 done /3514 queued / 16 running / 214 errors / 65% coverage ] ****** [4133 done /3514 queued / 16 running / 214 errors / 65% coverage ] ****** [4134 done /3515 queued / 16 running / 214 errors / 65% coverage ] ****** [4134 done /3515 queued / 16 running / 214 errors / 65% coverage ] ****** [4135 done /3519 queued / 16 running / 214 errors / 65% coverage ] ****** [4135 done /3519 queued / 16 running / 214 errors / 65% coverage ] ****** [4136 done /3521 queued / 16 running / 214 errors / 65% coverage ] ****** [4136 done /3521 queued / 16 running / 214 errors / 65% coverage ] ****** [4137 done /3522 queued / 16 running / 214 errors / 65% coverage ] ****** [4137 done /3522 queued / 16 running / 214 errors / 65% coverage ] ****** [4138 done /3528 queued / 16 running / 214 errors / 65% coverage ] ****** [4138 done /3528 queued / 16 running / 214 errors / 65% coverage ] ****** [4139 done /3529 queued / 16 running / 214 errors / 65% coverage ] ****** [4139 done /3529 queued / 16 running / 214 errors / 65% coverage ] ****** [4140 done /3532 queued / 16 running / 214 errors / 65% coverage ] ****** [4140 done /3532 queued / 16 running / 214 errors / 65% coverage ] ****** [4141 done /3532 queued / 16 running / 214 errors / 65% coverage ] ****** [4141 done /3532 queued / 16 running / 214 errors / 65% coverage ] ****** [4142 done /3534 queued / 16 running / 214 errors / 65% coverage ] ****** [4142 done /3534 queued / 16 running / 214 errors / 65% coverage ] ****** [4143 done /3535 queued / 16 running / 214 errors / 65% coverage ] ****** [4143 done /3535 queued / 16 running / 214 errors / 65% coverage ] ****** [4144 done /3537 queued / 16 running / 214 errors / 65% coverage ] ****** [4144 done /3537 queued / 16 running / 214 errors / 65% coverage ] ****** [4145 done /3540 queued / 16 running / 214 errors / 65% coverage ] ****** [4145 done /3540 queued / 16 running / 214 errors / 65% coverage ] ****** [4146 done /3541 queued / 16 running / 214 errors / 65% coverage ] ****** [4146 done /3541 queued / 16 running / 214 errors / 65% coverage ] ****** [4147 done /3546 queued / 16 running / 214 errors / 65% coverage ] ****** [4147 done /3546 queued / 16 running / 214 errors / 65% coverage ] ****** [4148 done /3548 queued / 16 running / 214 errors / 65% coverage ] ****** [4148 done /3548 queued / 16 running / 214 errors / 65% coverage ] ****** [4149 done /3547 queued / 16 running / 214 errors / 65% coverage ] ****** [4149 done /3547 queued / 16 running / 214 errors / 65% coverage ] ****** [4150 done /3547 queued / 16 running / 214 errors / 65% coverage ] ****** [4150 done /3547 queued / 16 running / 214 errors / 65% coverage ] ****** [4151 done /3546 queued / 16 running / 214 errors / 65% coverage ] ****** [4151 done /3546 queued / 16 running / 214 errors / 65% coverage ] ****** [4152 done /3547 queued / 16 running / 214 errors / 65% coverage ] ****** [4152 done /3547 queued / 16 running / 214 errors / 65% coverage ] ****** [4153 done /3547 queued / 16 running / 214 errors / 65% coverage ] ****** [4153 done /3547 queued / 16 running / 214 errors / 65% coverage ] ****** [4154 done /3546 queued / 16 running / 214 errors / 65% coverage ] ****** [4154 done /3546 queued / 16 running / 214 errors / 65% coverage ] ****** [4155 done /3548 queued / 16 running / 214 errors / 65% coverage ] ****** [4155 done /3548 queued / 16 running / 214 errors / 65% coverage ] ****** [4156 done /3547 queued / 16 running / 214 errors / 65% coverage ] ****** [4156 done /3547 queued / 16 running / 214 errors / 65% coverage ] ****** [4157 done /3547 queued / 16 running / 214 errors / 65% coverage ] ****** [4157 done /3547 queued / 16 running / 214 errors / 65% coverage ] ****** [4158 done /3546 queued / 16 running / 214 errors / 65% coverage ] ****** [4158 done /3546 queued / 16 running / 214 errors / 65% coverage ] ****** [4159 done /3549 queued / 16 running / 214 errors / 65% coverage ] ****** [4159 done /3549 queued / 16 running / 214 errors / 65% coverage ] ****** [4160 done /3548 queued / 16 running / 214 errors / 65% coverage ] ****** [4160 done /3548 queued / 16 running / 214 errors / 65% coverage ] ****** [4161 done /3549 queued / 16 running / 214 errors / 65% coverage ] ****** [4161 done /3549 queued / 16 running / 214 errors / 65% coverage ] ****** [4162 done /3549 queued / 16 running / 214 errors / 65% coverage ] ****** [4162 done /3549 queued / 16 running / 214 errors / 65% coverage ] ****** [4163 done /3551 queued / 16 running / 214 errors / 65% coverage ] ****** [4163 done /3551 queued / 16 running / 214 errors / 65% coverage ] ****** [4164 done /3553 queued / 16 running / 214 errors / 65% coverage ] ****** [4164 done /3553 queued / 16 running / 214 errors / 65% coverage ] ****** [4165 done /3556 queued / 16 running / 214 errors / 65% coverage ] ****** [4165 done /3556 queued / 16 running / 214 errors / 65% coverage ] ****** [4166 done /3556 queued / 16 running / 214 errors / 65% coverage ] ****** [4166 done /3556 queued / 16 running / 214 errors / 65% coverage ] ****** [4167 done /3558 queued / 16 running / 214 errors / 65% coverage ] ****** [4167 done /3558 queued / 16 running / 214 errors / 65% coverage ] ****** [4168 done /3559 queued / 16 running / 214 errors / 65% coverage ] ****** [4168 done /3559 queued / 16 running / 214 errors / 65% coverage ] ****** [4169 done /3560 queued / 16 running / 214 errors / 65% coverage ] ****** [4169 done /3560 queued / 16 running / 214 errors / 65% coverage ] ****** [4170 done /3562 queued / 16 running / 214 errors / 65% coverage ] ****** [4170 done /3562 queued / 16 running / 214 errors / 65% coverage ] ****** [4171 done /3566 queued / 16 running / 214 errors / 65% coverage ] ****** [4171 done /3566 queued / 16 running / 214 errors / 65% coverage ] ****** [4172 done /3566 queued / 16 running / 214 errors / 65% coverage ] ****** [4172 done /3566 queued / 16 running / 214 errors / 65% coverage ] ****** [4173 done /3568 queued / 16 running / 214 errors / 65% coverage ] ****** [4173 done /3568 queued / 16 running / 214 errors / 65% coverage ] ****** [4174 done /3570 queued / 16 running / 214 errors / 65% coverage ] ****** [4174 done /3570 queued / 16 running / 214 errors / 65% coverage ] ****** [4175 done /3572 queued / 16 running / 214 errors / 65% coverage ] ****** [4175 done /3572 queued / 16 running / 214 errors / 65% coverage ] ****** [4176 done /3573 queued / 16 running / 214 errors / 65% coverage ] ****** [4176 done /3573 queued / 16 running / 214 errors / 65% coverage ] ****** [4177 done /3577 queued / 16 running / 214 errors / 65% coverage ] ****** [4177 done /3577 queued / 16 running / 214 errors / 65% coverage ] ****** [4178 done /3578 queued / 16 running / 214 errors / 65% coverage ] ****** [4178 done /3578 queued / 16 running / 214 errors / 65% coverage ] ****** [4179 done /3579 queued / 16 running / 214 errors / 65% coverage ] ****** [4179 done /3579 queued / 16 running / 214 errors / 65% coverage ] ****** [4180 done /3581 queued / 16 running / 214 errors / 65% coverage ] ****** [4180 done /3581 queued / 16 running / 214 errors / 65% coverage ] ****** [4181 done /3584 queued / 16 running / 214 errors / 65% coverage ] ****** [4181 done /3584 queued / 16 running / 214 errors / 65% coverage ] ****** [4182 done /3584 queued / 16 running / 214 errors / 65% coverage ] ****** [4182 done /3584 queued / 16 running / 214 errors / 65% coverage ] ****** [4183 done /3585 queued / 16 running / 214 errors / 65% coverage ] ****** [4183 done /3585 queued / 16 running / 214 errors / 65% coverage ] ****** [4184 done /3587 queued / 16 running / 214 errors / 65% coverage ] ****** [4184 done /3587 queued / 16 running / 214 errors / 65% coverage ] ****** [4185 done /3589 queued / 16 running / 214 errors / 65% coverage ] ****** [4185 done /3589 queued / 16 running / 214 errors / 65% coverage ] ****** [4186 done /3591 queued / 16 running / 214 errors / 65% coverage ] ****** [4186 done /3591 queued / 16 running / 214 errors / 65% coverage ] ****** [4187 done /3593 queued / 16 running / 214 errors / 65% coverage ] ****** [4187 done /3593 queued / 16 running / 214 errors / 65% coverage ] ****** [4188 done /3594 queued / 16 running / 214 errors / 65% coverage ] ****** [4188 done /3594 queued / 16 running / 214 errors / 65% coverage ] ****** [4189 done /3595 queued / 16 running / 214 errors / 65% coverage ] ****** [4189 done /3595 queued / 16 running / 214 errors / 65% coverage ] ****** [4190 done /3598 queued / 16 running / 214 errors / 65% coverage ] ****** [4190 done /3598 queued / 16 running / 214 errors / 65% coverage ] ****** [4191 done /3597 queued / 16 running / 214 errors / 65% coverage ] ****** [4191 done /3597 queued / 16 running / 214 errors / 65% coverage ] ****** [4192 done /3597 queued / 16 running / 214 errors / 65% coverage ] ****** [4192 done /3597 queued / 16 running / 214 errors / 65% coverage ] ****** [4193 done /3598 queued / 16 running / 214 errors / 65% coverage ] ****** [4193 done /3598 queued / 16 running / 214 errors / 65% coverage ] ****** [4194 done /3599 queued / 16 running / 214 errors / 65% coverage ] ****** [4194 done /3599 queued / 16 running / 214 errors / 65% coverage ] ****** [4195 done /3601 queued / 16 running / 214 errors / 65% coverage ] ****** [4195 done /3601 queued / 16 running / 214 errors / 65% coverage ] ****** [4196 done /3601 queued / 16 running / 214 errors / 65% coverage ] ****** [4196 done /3601 queued / 16 running / 214 errors / 65% coverage ] ****** [4197 done /3600 queued / 16 running / 214 errors / 65% coverage ] ****** [4197 done /3600 queued / 16 running / 214 errors / 65% coverage ] ****** [4198 done /3599 queued / 16 running / 214 errors / 65% coverage ] ****** [4198 done /3599 queued / 16 running / 214 errors / 65% coverage ] ****** [4199 done /3598 queued / 16 running / 214 errors / 65% coverage ] ****** [4199 done /3598 queued / 16 running / 214 errors / 65% coverage ] ****** [4200 done /3599 queued / 16 running / 214 errors / 65% coverage ] ****** [4200 done /3599 queued / 16 running / 214 errors / 65% coverage ] ****** [4201 done /3600 queued / 16 running / 214 errors / 65% coverage ] ****** [4201 done /3600 queued / 16 running / 214 errors / 65% coverage ] ****** [4202 done /3600 queued / 16 running / 214 errors / 65% coverage ] ****** [4202 done /3600 queued / 16 running / 214 errors / 65% coverage ] ****** [4203 done /3603 queued / 16 running / 214 errors / 65% coverage ] ****** [4203 done /3603 queued / 16 running / 214 errors / 65% coverage ] ****** [4204 done /3605 queued / 16 running / 214 errors / 65% coverage ] ****** [4204 done /3605 queued / 16 running / 214 errors / 65% coverage ] ****** [4205 done /3606 queued / 16 running / 214 errors / 65% coverage ] ****** [4205 done /3606 queued / 16 running / 214 errors / 65% coverage ] ****** [4206 done /3609 queued / 16 running / 214 errors / 65% coverage ] ****** [4206 done /3609 queued / 16 running / 214 errors / 65% coverage ] ****** [4207 done /3610 queued / 16 running / 214 errors / 65% coverage ] ****** [4207 done /3610 queued / 16 running / 214 errors / 65% coverage ] ****** [4208 done /3612 queued / 16 running / 214 errors / 65% coverage ] ****** [4208 done /3612 queued / 16 running / 214 errors / 65% coverage ] ****** [4209 done /3612 queued / 16 running / 214 errors / 65% coverage ] ****** [4209 done /3612 queued / 16 running / 214 errors / 65% coverage ] ****** [4210 done /3613 queued / 16 running / 214 errors / 65% coverage ] ****** [4210 done /3613 queued / 16 running / 214 errors / 65% coverage ] ****** [4211 done /3615 queued / 16 running / 214 errors / 65% coverage ] ****** [4211 done /3615 queued / 16 running / 214 errors / 65% coverage ] ****** [4212 done /3615 queued / 16 running / 214 errors / 65% coverage ] ****** [4212 done /3615 queued / 16 running / 214 errors / 65% coverage ] ****** [4213 done /3618 queued / 16 running / 214 errors / 65% coverage ] ****** [4213 done /3618 queued / 16 running / 214 errors / 65% coverage ] ****** [4214 done /3620 queued / 16 running / 214 errors / 65% coverage ] ****** [4214 done /3620 queued / 16 running / 214 errors / 65% coverage ] ****** [4215 done /3624 queued / 16 running / 214 errors / 65% coverage ] ****** [4215 done /3624 queued / 16 running / 214 errors / 65% coverage ] ****** [4216 done /3626 queued / 16 running / 214 errors / 65% coverage ] ****** [4216 done /3626 queued / 16 running / 214 errors / 65% coverage ] ****** [4217 done /3627 queued / 16 running / 214 errors / 65% coverage ] ****** [4217 done /3627 queued / 16 running / 214 errors / 65% coverage ] ****** [4218 done /3630 queued / 16 running / 214 errors / 65% coverage ] ****** [4218 done /3630 queued / 16 running / 214 errors / 65% coverage ] ****** [4219 done /3629 queued / 16 running / 214 errors / 65% coverage ] ****** [4219 done /3629 queued / 16 running / 214 errors / 65% coverage ] ****** [4220 done /3628 queued / 16 running / 214 errors / 65% coverage ] ****** [4220 done /3628 queued / 16 running / 214 errors / 65% coverage ] ****** [4221 done /3627 queued / 16 running / 214 errors / 65% coverage ] ****** [4221 done /3627 queued / 16 running / 214 errors / 65% coverage ] ****** [4222 done /3628 queued / 16 running / 214 errors / 65% coverage ] ****** [4222 done /3628 queued / 16 running / 214 errors / 65% coverage ] ****** [4223 done /3630 queued / 16 running / 214 errors / 65% coverage ] ****** [4223 done /3630 queued / 16 running / 214 errors / 65% coverage ] ****** [4224 done /3632 queued / 16 running / 214 errors / 65% coverage ] ****** [4224 done /3632 queued / 16 running / 214 errors / 65% coverage ] ****** [4225 done /3632 queued / 16 running / 214 errors / 65% coverage ] ****** [4225 done /3632 queued / 16 running / 214 errors / 65% coverage ] ****** [4226 done /3633 queued / 16 running / 214 errors / 65% coverage ] ****** [4226 done /3633 queued / 16 running / 214 errors / 65% coverage ] ****** [4227 done /3633 queued / 16 running / 214 errors / 65% coverage ] ****** [4227 done /3633 queued / 16 running / 214 errors / 65% coverage ] ****** [4228 done /3632 queued / 16 running / 214 errors / 65% coverage ] ****** [4228 done /3632 queued / 16 running / 214 errors / 65% coverage ] ****** [4229 done /3632 queued / 16 running / 214 errors / 65% coverage ] ****** [4229 done /3632 queued / 16 running / 214 errors / 65% coverage ] ****** [4230 done /3633 queued / 16 running / 214 errors / 65% coverage ] ****** [4230 done /3633 queued / 16 running / 214 errors / 65% coverage ] ****** [4231 done /3634 queued / 16 running / 214 errors / 65% coverage ] ****** [4231 done /3634 queued / 16 running / 214 errors / 65% coverage ] ****** [4232 done /3634 queued / 16 running / 214 errors / 65% coverage ] ****** [4232 done /3634 queued / 16 running / 214 errors / 65% coverage ] ****** [4233 done /3634 queued / 16 running / 214 errors / 65% coverage ] ****** [4233 done /3634 queued / 16 running / 214 errors / 65% coverage ] ****** [4234 done /3634 queued / 16 running / 214 errors / 65% coverage ] ****** [4234 done /3634 queued / 16 running / 214 errors / 65% coverage ] ****** [4235 done /3633 queued / 16 running / 214 errors / 65% coverage ] ****** [4235 done /3633 queued / 16 running / 214 errors / 65% coverage ] ****** [4236 done /3632 queued / 16 running / 214 errors / 65% coverage ] ****** [4236 done /3632 queued / 16 running / 214 errors / 65% coverage ] ****** [4237 done /3632 queued / 16 running / 214 errors / 65% coverage ] ****** [4237 done /3632 queued / 16 running / 214 errors / 65% coverage ] ****** [4238 done /3631 queued / 16 running / 214 errors / 65% coverage ] ****** [4238 done /3631 queued / 16 running / 214 errors / 65% coverage ] ****** [4239 done /3634 queued / 16 running / 214 errors / 65% coverage ] ****** [4239 done /3634 queued / 16 running / 214 errors / 65% coverage ] ****** [4240 done /3635 queued / 16 running / 214 errors / 65% coverage ] ****** [4240 done /3635 queued / 16 running / 214 errors / 65% coverage ] ****** [4241 done /3635 queued / 16 running / 214 errors / 65% coverage ] ****** [4241 done /3635 queued / 16 running / 214 errors / 65% coverage ] ****** [4242 done /3634 queued / 16 running / 214 errors / 65% coverage ] ****** [4242 done /3634 queued / 16 running / 214 errors / 65% coverage ] ****** [4243 done /3634 queued / 16 running / 214 errors / 65% coverage ] ****** [4243 done /3634 queued / 16 running / 214 errors / 65% coverage ] ****** [4244 done /3636 queued / 16 running / 214 errors / 65% coverage ] ****** [4244 done /3636 queued / 16 running / 214 errors / 65% coverage ] ****** [4245 done /3638 queued / 16 running / 214 errors / 65% coverage ] ****** [4245 done /3638 queued / 16 running / 214 errors / 65% coverage ] ****** [4246 done /3639 queued / 16 running / 214 errors / 65% coverage ] ****** [4246 done /3639 queued / 16 running / 214 errors / 65% coverage ] ****** [4247 done /3642 queued / 16 running / 214 errors / 65% coverage ] ****** [4247 done /3642 queued / 16 running / 214 errors / 65% coverage ] ****** [4248 done /3642 queued / 16 running / 214 errors / 65% coverage ] ****** [4248 done /3642 queued / 16 running / 214 errors / 65% coverage ] ****** [4249 done /3644 queued / 16 running / 214 errors / 65% coverage ] ****** [4249 done /3644 queued / 16 running / 214 errors / 65% coverage ] ****** [4250 done /3646 queued / 16 running / 214 errors / 65% coverage ] ****** [4250 done /3646 queued / 16 running / 214 errors / 65% coverage ] ****** [4251 done /3647 queued / 16 running / 214 errors / 65% coverage ] ****** [4251 done /3647 queued / 16 running / 214 errors / 65% coverage ] ****** [4252 done /3649 queued / 16 running / 214 errors / 65% coverage ] ****** [4252 done /3649 queued / 16 running / 214 errors / 65% coverage ] ****** [4253 done /3651 queued / 16 running / 214 errors / 65% coverage ] ****** [4253 done /3651 queued / 16 running / 214 errors / 65% coverage ] ****** [4254 done /3652 queued / 16 running / 214 errors / 65% coverage ] ****** [4254 done /3652 queued / 16 running / 214 errors / 65% coverage ] ****** [4255 done /3655 queued / 16 running / 214 errors / 65% coverage ] ****** [4255 done /3655 queued / 16 running / 214 errors / 65% coverage ] ****** [4256 done /3661 queued / 16 running / 214 errors / 65% coverage ] ****** [4256 done /3661 queued / 16 running / 214 errors / 65% coverage ] ****** [4257 done /3663 queued / 16 running / 214 errors / 65% coverage ] ****** [4257 done /3663 queued / 16 running / 214 errors / 65% coverage ] ****** [4258 done /3664 queued / 16 running / 214 errors / 65% coverage ] ****** [4258 done /3664 queued / 16 running / 214 errors / 65% coverage ] ****** [4259 done /3666 queued / 16 running / 214 errors / 65% coverage ] ****** [4259 done /3666 queued / 16 running / 214 errors / 65% coverage ] ****** [4260 done /3667 queued / 16 running / 214 errors / 65% coverage ] ****** [4260 done /3667 queued / 16 running / 214 errors / 65% coverage ] ****** [4261 done /3666 queued / 16 running / 214 errors / 65% coverage ] ****** [4261 done /3666 queued / 16 running / 214 errors / 65% coverage ] ****** [4262 done /3665 queued / 16 running / 214 errors / 65% coverage ] ****** [4262 done /3665 queued / 16 running / 214 errors / 65% coverage ] ****** [4263 done /3666 queued / 16 running / 214 errors / 65% coverage ] ****** [4263 done /3666 queued / 16 running / 214 errors / 65% coverage ] ****** [4264 done /3666 queued / 16 running / 214 errors / 65% coverage ] ****** [4264 done /3666 queued / 16 running / 214 errors / 65% coverage ] ****** [4265 done /3665 queued / 16 running / 214 errors / 65% coverage ] ****** [4265 done /3665 queued / 16 running / 214 errors / 65% coverage ] ****** [4266 done /3665 queued / 16 running / 214 errors / 65% coverage ] ****** [4266 done /3665 queued / 16 running / 214 errors / 65% coverage ] ****** [4267 done /3664 queued / 16 running / 214 errors / 65% coverage ] ****** [4267 done /3664 queued / 16 running / 214 errors / 65% coverage ] ****** [4268 done /3664 queued / 16 running / 214 errors / 65% coverage ] ****** [4268 done /3664 queued / 16 running / 214 errors / 65% coverage ] ****** [4269 done /3666 queued / 16 running / 214 errors / 65% coverage ] ****** [4269 done /3666 queued / 16 running / 214 errors / 65% coverage ] ****** [4270 done /3666 queued / 16 running / 214 errors / 65% coverage ] ****** [4270 done /3666 queued / 16 running / 214 errors / 65% coverage ] ****** [4271 done /3665 queued / 16 running / 214 errors / 65% coverage ] ****** [4271 done /3665 queued / 16 running / 214 errors / 65% coverage ] ****** [4272 done /3668 queued / 16 running / 214 errors / 65% coverage ] ****** [4272 done /3668 queued / 16 running / 214 errors / 65% coverage ] ****** [4273 done /3667 queued / 16 running / 214 errors / 65% coverage ] ****** [4273 done /3667 queued / 16 running / 214 errors / 65% coverage ] ****** [4274 done /3666 queued / 16 running / 214 errors / 65% coverage ] ****** [4274 done /3666 queued / 16 running / 214 errors / 65% coverage ] ****** [4275 done /3665 queued / 16 running / 214 errors / 65% coverage ] ****** [4275 done /3665 queued / 16 running / 214 errors / 65% coverage ] ****** [4276 done /3665 queued / 16 running / 214 errors / 65% coverage ] ****** [4276 done /3665 queued / 16 running / 214 errors / 65% coverage ] ****** [4277 done /3667 queued / 16 running / 214 errors / 65% coverage ] ****** [4277 done /3667 queued / 16 running / 214 errors / 65% coverage ] ****** [4278 done /3669 queued / 16 running / 214 errors / 65% coverage ] ****** [4278 done /3669 queued / 16 running / 214 errors / 65% coverage ] ****** [4279 done /3669 queued / 16 running / 214 errors / 65% coverage ] ****** [4279 done /3669 queued / 16 running / 214 errors / 65% coverage ] ****** [4280 done /3670 queued / 16 running / 214 errors / 65% coverage ] ****** [4280 done /3670 queued / 16 running / 214 errors / 65% coverage ] ****** [4281 done /3672 queued / 16 running / 214 errors / 65% coverage ] ****** [4281 done /3672 queued / 16 running / 214 errors / 65% coverage ] ****** [4282 done /3672 queued / 16 running / 214 errors / 65% coverage ] ****** [4282 done /3672 queued / 16 running / 214 errors / 65% coverage ] ****** [4283 done /3674 queued / 16 running / 214 errors / 65% coverage ] ****** [4283 done /3674 queued / 16 running / 214 errors / 65% coverage ] ****** [4284 done /3673 queued / 16 running / 214 errors / 65% coverage ] ****** [4284 done /3673 queued / 16 running / 214 errors / 65% coverage ] ****** [4285 done /3673 queued / 16 running / 214 errors / 65% coverage ] ****** [4285 done /3673 queued / 16 running / 214 errors / 65% coverage ] ****** [4286 done /3673 queued / 16 running / 214 errors / 65% coverage ] ****** [4286 done /3673 queued / 16 running / 214 errors / 65% coverage ] ****** [4287 done /3676 queued / 16 running / 214 errors / 65% coverage ] ****** [4287 done /3676 queued / 16 running / 214 errors / 65% coverage ] ****** [4288 done /3677 queued / 16 running / 214 errors / 65% coverage ] ****** [4288 done /3677 queued / 16 running / 214 errors / 65% coverage ] ****** [4289 done /3678 queued / 16 running / 214 errors / 65% coverage ] ****** [4289 done /3678 queued / 16 running / 214 errors / 65% coverage ] ****** [4290 done /3681 queued / 16 running / 214 errors / 65% coverage ] ****** [4290 done /3681 queued / 16 running / 214 errors / 65% coverage ] ****** [4291 done /3686 queued / 16 running / 214 errors / 65% coverage ] ****** [4291 done /3686 queued / 16 running / 214 errors / 65% coverage ] ****** [4292 done /3689 queued / 16 running / 214 errors / 65% coverage ] ****** [4292 done /3689 queued / 16 running / 214 errors / 65% coverage ] ****** [4293 done /3690 queued / 16 running / 214 errors / 65% coverage ] ****** [4293 done /3690 queued / 16 running / 214 errors / 65% coverage ] ****** [4294 done /3693 queued / 16 running / 214 errors / 65% coverage ] ****** [4294 done /3693 queued / 16 running / 214 errors / 65% coverage ] ****** [4295 done /3694 queued / 16 running / 214 errors / 65% coverage ] ****** [4295 done /3694 queued / 16 running / 214 errors / 65% coverage ] ****** [4296 done /3694 queued / 16 running / 214 errors / 65% coverage ] ****** [4296 done /3694 queued / 16 running / 214 errors / 65% coverage ] ****** [4297 done /3695 queued / 16 running / 214 errors / 65% coverage ] ****** [4297 done /3695 queued / 16 running / 214 errors / 65% coverage ] ****** [4298 done /3695 queued / 16 running / 214 errors / 65% coverage ] ****** [4298 done /3695 queued / 16 running / 214 errors / 65% coverage ] ****** [4299 done /3696 queued / 16 running / 214 errors / 65% coverage ] ****** [4299 done /3696 queued / 16 running / 214 errors / 65% coverage ] ****** [4300 done /3697 queued / 16 running / 214 errors / 65% coverage ] ****** [4300 done /3697 queued / 16 running / 214 errors / 65% coverage ] ****** [4301 done /3698 queued / 16 running / 214 errors / 65% coverage ] ****** [4301 done /3698 queued / 16 running / 214 errors / 65% coverage ] ****** [4302 done /3702 queued / 16 running / 214 errors / 65% coverage ] ****** [4302 done /3702 queued / 16 running / 214 errors / 65% coverage ] ****** [4303 done /3701 queued / 16 running / 214 errors / 65% coverage ] ****** [4303 done /3701 queued / 16 running / 214 errors / 65% coverage ] ****** [4304 done /3700 queued / 16 running / 214 errors / 65% coverage ] ****** [4304 done /3700 queued / 16 running / 214 errors / 65% coverage ] ****** [4305 done /3699 queued / 16 running / 214 errors / 65% coverage ] ****** [4305 done /3699 queued / 16 running / 214 errors / 65% coverage ] ****** [4306 done /3700 queued / 16 running / 214 errors / 65% coverage ] ****** [4306 done /3700 queued / 16 running / 214 errors / 65% coverage ] ****** [4307 done /3699 queued / 16 running / 214 errors / 65% coverage ] ****** [4307 done /3699 queued / 16 running / 214 errors / 65% coverage ] ****** [4308 done /3698 queued / 16 running / 214 errors / 65% coverage ] ****** [4308 done /3698 queued / 16 running / 214 errors / 65% coverage ] ****** [4309 done /3697 queued / 16 running / 214 errors / 65% coverage ] ****** [4309 done /3697 queued / 16 running / 214 errors / 65% coverage ] ****** [4310 done /3696 queued / 16 running / 214 errors / 65% coverage ] ****** [4310 done /3696 queued / 16 running / 214 errors / 65% coverage ] ****** [4311 done /3696 queued / 16 running / 214 errors / 65% coverage ] ****** [4311 done /3696 queued / 16 running / 214 errors / 65% coverage ] ****** [4312 done /3695 queued / 16 running / 214 errors / 65% coverage ] ****** [4312 done /3695 queued / 16 running / 214 errors / 65% coverage ] ****** [4313 done /3695 queued / 16 running / 214 errors / 65% coverage ] ****** [4313 done /3695 queued / 16 running / 214 errors / 65% coverage ] ****** [4314 done /3695 queued / 16 running / 214 errors / 65% coverage ] ****** [4314 done /3695 queued / 16 running / 214 errors / 65% coverage ] ****** [4315 done /3694 queued / 16 running / 214 errors / 65% coverage ] ****** [4315 done /3694 queued / 16 running / 214 errors / 65% coverage ] ****** [4316 done /3695 queued / 16 running / 214 errors / 65% coverage ] ****** [4316 done /3695 queued / 16 running / 214 errors / 65% coverage ] ****** [4317 done /3697 queued / 16 running / 214 errors / 65% coverage ] ****** [4317 done /3697 queued / 16 running / 214 errors / 65% coverage ] ****** [4318 done /3698 queued / 16 running / 214 errors / 65% coverage ] ****** [4318 done /3698 queued / 16 running / 214 errors / 65% coverage ] ****** [4319 done /3697 queued / 16 running / 214 errors / 65% coverage ] ****** [4319 done /3697 queued / 16 running / 214 errors / 65% coverage ] ****** [4320 done /3697 queued / 16 running / 214 errors / 65% coverage ] ****** [4320 done /3697 queued / 16 running / 214 errors / 65% coverage ] ****** [4321 done /3696 queued / 16 running / 214 errors / 65% coverage ] ****** [4321 done /3696 queued / 16 running / 214 errors / 65% coverage ] ****** [4322 done /3695 queued / 16 running / 214 errors / 65% coverage ] ****** [4322 done /3695 queued / 16 running / 214 errors / 65% coverage ] ****** [4323 done /3695 queued / 16 running / 214 errors / 65% coverage ] ****** [4323 done /3695 queued / 16 running / 214 errors / 65% coverage ] ****** [4324 done /3696 queued / 16 running / 214 errors / 65% coverage ] ****** [4324 done /3696 queued / 16 running / 214 errors / 65% coverage ] ****** [4325 done /3697 queued / 16 running / 214 errors / 65% coverage ] ****** [4325 done /3697 queued / 16 running / 214 errors / 65% coverage ] ****** [4326 done /3699 queued / 16 running / 214 errors / 65% coverage ] ****** [4326 done /3699 queued / 16 running / 214 errors / 65% coverage ] ****** [4327 done /3699 queued / 16 running / 214 errors / 65% coverage ] ****** [4327 done /3699 queued / 16 running / 214 errors / 65% coverage ] ****** [4328 done /3702 queued / 16 running / 214 errors / 65% coverage ] ****** [4328 done /3702 queued / 16 running / 214 errors / 65% coverage ] ****** [4329 done /3702 queued / 16 running / 214 errors / 65% coverage ] ****** [4329 done /3702 queued / 16 running / 214 errors / 65% coverage ] ****** [4330 done /3705 queued / 16 running / 214 errors / 65% coverage ] ****** [4330 done /3705 queued / 16 running / 214 errors / 65% coverage ] ****** [4331 done /3707 queued / 16 running / 214 errors / 65% coverage ] ****** [4331 done /3707 queued / 16 running / 214 errors / 65% coverage ] ****** [4332 done /3706 queued / 16 running / 214 errors / 65% coverage ] ****** [4332 done /3706 queued / 16 running / 214 errors / 65% coverage ] ****** [4333 done /3707 queued / 16 running / 214 errors / 65% coverage ] ****** [4333 done /3707 queued / 16 running / 214 errors / 65% coverage ] ****** [4334 done /3710 queued / 16 running / 214 errors / 65% coverage ] ****** [4334 done /3710 queued / 16 running / 214 errors / 65% coverage ] ****** [4335 done /3712 queued / 16 running / 214 errors / 65% coverage ] ****** [4335 done /3712 queued / 16 running / 214 errors / 65% coverage ] ****** [4336 done /3715 queued / 16 running / 214 errors / 65% coverage ] ****** [4336 done /3715 queued / 16 running / 214 errors / 65% coverage ] ****** [4337 done /3718 queued / 16 running / 214 errors / 65% coverage ] ****** [4337 done /3718 queued / 16 running / 214 errors / 65% coverage ] ****** [4338 done /3720 queued / 16 running / 214 errors / 65% coverage ] ****** [4338 done /3720 queued / 16 running / 214 errors / 65% coverage ] ****** [4339 done /3723 queued / 16 running / 214 errors / 65% coverage ] ****** [4339 done /3723 queued / 16 running / 214 errors / 65% coverage ] ****** [4340 done /3724 queued / 16 running / 214 errors / 65% coverage ] ****** [4340 done /3724 queued / 16 running / 214 errors / 65% coverage ] ****** [4341 done /3723 queued / 16 running / 214 errors / 65% coverage ] ****** [4341 done /3723 queued / 16 running / 214 errors / 65% coverage ] ****** [4342 done /3723 queued / 16 running / 214 errors / 65% coverage ] ****** [4342 done /3723 queued / 16 running / 214 errors / 65% coverage ] ****** [4343 done /3723 queued / 16 running / 214 errors / 65% coverage ] ****** [4343 done /3723 queued / 16 running / 214 errors / 65% coverage ] ****** [4344 done /3723 queued / 16 running / 214 errors / 65% coverage ] ****** [4344 done /3723 queued / 16 running / 214 errors / 65% coverage ] ****** [4345 done /3722 queued / 16 running / 214 errors / 65% coverage ] ****** [4345 done /3722 queued / 16 running / 214 errors / 65% coverage ] ****** [4346 done /3721 queued / 16 running / 214 errors / 65% coverage ] ****** [4346 done /3721 queued / 16 running / 214 errors / 65% coverage ] ****** [4347 done /3720 queued / 16 running / 214 errors / 65% coverage ] ****** [4347 done /3720 queued / 16 running / 214 errors / 65% coverage ] ****** [4348 done /3721 queued / 16 running / 214 errors / 65% coverage ] ****** [4348 done /3721 queued / 16 running / 214 errors / 65% coverage ] ****** [4349 done /3722 queued / 16 running / 214 errors / 65% coverage ] ****** [4349 done /3722 queued / 16 running / 214 errors / 65% coverage ] ****** [4350 done /3722 queued / 16 running / 214 errors / 65% coverage ] ****** [4350 done /3722 queued / 16 running / 214 errors / 65% coverage ] ****** [4351 done /3721 queued / 16 running / 214 errors / 65% coverage ] ****** [4351 done /3721 queued / 16 running / 214 errors / 65% coverage ] ****** [4352 done /3720 queued / 16 running / 214 errors / 65% coverage ] ****** [4352 done /3720 queued / 16 running / 214 errors / 65% coverage ] ****** [4353 done /3720 queued / 16 running / 214 errors / 65% coverage ] ****** [4353 done /3720 queued / 16 running / 214 errors / 65% coverage ] ****** [4354 done /3719 queued / 16 running / 214 errors / 65% coverage ] ****** [4354 done /3719 queued / 16 running / 214 errors / 65% coverage ] ****** [4355 done /3718 queued / 16 running / 214 errors / 65% coverage ] ****** [4355 done /3718 queued / 16 running / 214 errors / 65% coverage ] ****** [4356 done /3717 queued / 16 running / 214 errors / 65% coverage ] ****** [4356 done /3717 queued / 16 running / 214 errors / 65% coverage ] ****** [4357 done /3716 queued / 16 running / 214 errors / 65% coverage ] ****** [4357 done /3716 queued / 16 running / 214 errors / 65% coverage ] ****** [4358 done /3715 queued / 16 running / 214 errors / 65% coverage ] ****** [4358 done /3715 queued / 16 running / 214 errors / 65% coverage ] ****** [4359 done /3715 queued / 16 running / 214 errors / 65% coverage ] ****** [4359 done /3715 queued / 16 running / 214 errors / 65% coverage ] ****** [4360 done /3714 queued / 16 running / 214 errors / 65% coverage ] ****** [4360 done /3714 queued / 16 running / 214 errors / 65% coverage ] ****** [4361 done /3715 queued / 16 running / 214 errors / 65% coverage ] ****** [4361 done /3715 queued / 16 running / 214 errors / 65% coverage ] ****** [4362 done /3714 queued / 16 running / 214 errors / 65% coverage ] ****** [4362 done /3714 queued / 16 running / 214 errors / 65% coverage ] ****** [4363 done /3715 queued / 16 running / 214 errors / 65% coverage ] ****** [4363 done /3715 queued / 16 running / 214 errors / 65% coverage ] ****** [4364 done /3714 queued / 16 running / 214 errors / 65% coverage ] ****** [4364 done /3714 queued / 16 running / 214 errors / 65% coverage ] ****** [4365 done /3715 queued / 16 running / 214 errors / 65% coverage ] ****** [4365 done /3715 queued / 16 running / 214 errors / 65% coverage ] ****** [4366 done /3716 queued / 16 running / 214 errors / 65% coverage ] ****** [4366 done /3716 queued / 16 running / 214 errors / 65% coverage ] ****** [4367 done /3717 queued / 16 running / 214 errors / 65% coverage ] ****** [4367 done /3717 queued / 16 running / 214 errors / 65% coverage ] ****** [4368 done /3718 queued / 16 running / 214 errors / 65% coverage ] ****** [4368 done /3718 queued / 16 running / 214 errors / 65% coverage ] ****** [4369 done /3721 queued / 16 running / 214 errors / 65% coverage ] ****** [4369 done /3721 queued / 16 running / 214 errors / 65% coverage ] ****** [4370 done /3725 queued / 16 running / 214 errors / 65% coverage ] ****** [4370 done /3725 queued / 16 running / 214 errors / 65% coverage ] ****** [4371 done /3730 queued / 16 running / 214 errors / 65% coverage ] ****** [4371 done /3730 queued / 16 running / 214 errors / 65% coverage ] ****** [4372 done /3733 queued / 16 running / 214 errors / 65% coverage ] ****** [4372 done /3733 queued / 16 running / 214 errors / 65% coverage ] ****** [4373 done /3734 queued / 16 running / 214 errors / 65% coverage ] ****** [4373 done /3734 queued / 16 running / 214 errors / 65% coverage ] ****** [4374 done /3735 queued / 16 running / 214 errors / 65% coverage ] ****** [4374 done /3735 queued / 16 running / 214 errors / 65% coverage ] ****** [4375 done /3738 queued / 16 running / 214 errors / 65% coverage ] ****** [4375 done /3738 queued / 16 running / 214 errors / 65% coverage ] ****** [4376 done /3739 queued / 16 running / 214 errors / 65% coverage ] ****** [4376 done /3739 queued / 16 running / 214 errors / 65% coverage ] ****** [4377 done /3740 queued / 16 running / 214 errors / 65% coverage ] ****** [4377 done /3740 queued / 16 running / 214 errors / 65% coverage ] ****** [4378 done /3741 queued / 16 running / 214 errors / 65% coverage ] ****** [4378 done /3741 queued / 16 running / 214 errors / 65% coverage ] ****** [4379 done /3743 queued / 16 running / 214 errors / 65% coverage ] ****** [4379 done /3743 queued / 16 running / 214 errors / 65% coverage ] ****** [4380 done /3744 queued / 16 running / 214 errors / 65% coverage ] ****** [4380 done /3744 queued / 16 running / 214 errors / 65% coverage ] ****** [4381 done /3744 queued / 16 running / 214 errors / 65% coverage ] ****** [4381 done /3744 queued / 16 running / 214 errors / 65% coverage ] ****** [4382 done /3745 queued / 16 running / 214 errors / 65% coverage ] ****** [4382 done /3745 queued / 16 running / 214 errors / 65% coverage ] ****** [4383 done /3744 queued / 16 running / 214 errors / 65% coverage ] ****** [4383 done /3744 queued / 16 running / 214 errors / 65% coverage ] ****** [4384 done /3743 queued / 16 running / 214 errors / 65% coverage ] ****** [4384 done /3743 queued / 16 running / 214 errors / 65% coverage ] ****** [4385 done /3742 queued / 16 running / 214 errors / 65% coverage ] ****** [4385 done /3742 queued / 16 running / 214 errors / 65% coverage ] ****** [4386 done /3742 queued / 16 running / 214 errors / 65% coverage ] ****** [4386 done /3742 queued / 16 running / 214 errors / 65% coverage ] ****** [4387 done /3741 queued / 16 running / 214 errors / 65% coverage ] ****** [4387 done /3741 queued / 16 running / 214 errors / 65% coverage ] ****** [4388 done /3741 queued / 16 running / 214 errors / 65% coverage ] ****** [4388 done /3741 queued / 16 running / 214 errors / 65% coverage ] ****** [4389 done /3741 queued / 16 running / 214 errors / 65% coverage ] ****** [4389 done /3741 queued / 16 running / 214 errors / 65% coverage ] ****** [4390 done /3742 queued / 16 running / 214 errors / 65% coverage ] ****** [4390 done /3742 queued / 16 running / 214 errors / 65% coverage ] ****** [4391 done /3743 queued / 16 running / 214 errors / 65% coverage ] ****** [4391 done /3743 queued / 16 running / 214 errors / 65% coverage ] ****** [4392 done /3742 queued / 16 running / 214 errors / 65% coverage ] ****** [4392 done /3742 queued / 16 running / 214 errors / 65% coverage ] ****** [4393 done /3743 queued / 16 running / 214 errors / 65% coverage ] ****** [4393 done /3743 queued / 16 running / 214 errors / 65% coverage ] ****** [4394 done /3743 queued / 16 running / 214 errors / 65% coverage ] ****** [4394 done /3743 queued / 16 running / 214 errors / 65% coverage ] ****** [4395 done /3742 queued / 16 running / 214 errors / 65% coverage ] ****** [4395 done /3742 queued / 16 running / 214 errors / 65% coverage ] ****** [4396 done /3743 queued / 16 running / 214 errors / 65% coverage ] ****** [4396 done /3743 queued / 16 running / 214 errors / 65% coverage ] ****** [4397 done /3742 queued / 16 running / 214 errors / 65% coverage ] ****** [4397 done /3742 queued / 16 running / 214 errors / 65% coverage ] ****** [4398 done /3742 queued / 16 running / 214 errors / 65% coverage ] ****** [4398 done /3742 queued / 16 running / 214 errors / 65% coverage ] ****** [4399 done /3743 queued / 16 running / 214 errors / 65% coverage ] ****** [4399 done /3743 queued / 16 running / 214 errors / 65% coverage ] ****** [4400 done /3744 queued / 16 running / 214 errors / 65% coverage ] ****** [4400 done /3744 queued / 16 running / 214 errors / 65% coverage ] ****** [4401 done /3746 queued / 16 running / 214 errors / 65% coverage ] ****** [4401 done /3746 queued / 16 running / 214 errors / 65% coverage ] ****** [4402 done /3745 queued / 16 running / 214 errors / 65% coverage ] ****** [4402 done /3745 queued / 16 running / 214 errors / 65% coverage ] ****** [4403 done /3745 queued / 16 running / 214 errors / 65% coverage ] ****** [4403 done /3745 queued / 16 running / 214 errors / 65% coverage ] ****** [4404 done /3747 queued / 16 running / 214 errors / 65% coverage ] ****** [4404 done /3747 queued / 16 running / 214 errors / 65% coverage ] ****** [4405 done /3747 queued / 16 running / 214 errors / 65% coverage ] ****** [4405 done /3747 queued / 16 running / 214 errors / 65% coverage ] ****** [4406 done /3746 queued / 16 running / 214 errors / 65% coverage ] ****** [4406 done /3746 queued / 16 running / 214 errors / 65% coverage ] ****** [4407 done /3745 queued / 16 running / 214 errors / 65% coverage ] ****** [4407 done /3745 queued / 16 running / 214 errors / 65% coverage ] ****** [4408 done /3750 queued / 16 running / 214 errors / 65% coverage ] ****** [4408 done /3750 queued / 16 running / 214 errors / 65% coverage ] ****** [4409 done /3751 queued / 16 running / 214 errors / 65% coverage ] ****** [4409 done /3751 queued / 16 running / 214 errors / 65% coverage ] ****** [4410 done /3754 queued / 16 running / 214 errors / 65% coverage ] ****** [4410 done /3754 queued / 16 running / 214 errors / 65% coverage ] ****** [4411 done /3755 queued / 16 running / 214 errors / 65% coverage ] ****** [4411 done /3755 queued / 16 running / 214 errors / 65% coverage ] ****** [4412 done /3758 queued / 16 running / 214 errors / 65% coverage ] ****** [4412 done /3758 queued / 16 running / 214 errors / 65% coverage ] ****** [4413 done /3761 queued / 16 running / 214 errors / 65% coverage ] ****** [4413 done /3761 queued / 16 running / 214 errors / 65% coverage ] ****** [4414 done /3764 queued / 16 running / 214 errors / 65% coverage ] ****** [4414 done /3764 queued / 16 running / 214 errors / 65% coverage ] ****** [4415 done /3766 queued / 16 running / 214 errors / 65% coverage ] ****** [4415 done /3766 queued / 16 running / 214 errors / 65% coverage ] ****** [4416 done /3767 queued / 16 running / 214 errors / 65% coverage ] ****** [4416 done /3767 queued / 16 running / 214 errors / 65% coverage ] ****** [4417 done /3769 queued / 16 running / 214 errors / 65% coverage ] ****** [4417 done /3769 queued / 16 running / 214 errors / 65% coverage ] ****** [4418 done /3770 queued / 16 running / 214 errors / 65% coverage ] ****** [4418 done /3770 queued / 16 running / 214 errors / 65% coverage ] ****** [4419 done /3770 queued / 16 running / 214 errors / 65% coverage ] ****** [4419 done /3770 queued / 16 running / 214 errors / 65% coverage ] ****** [4420 done /3772 queued / 16 running / 214 errors / 65% coverage ] ****** [4420 done /3772 queued / 16 running / 214 errors / 65% coverage ] ****** [4421 done /3774 queued / 16 running / 214 errors / 65% coverage ] ****** [4421 done /3774 queued / 16 running / 214 errors / 65% coverage ] ****** [4422 done /3776 queued / 16 running / 214 errors / 65% coverage ] ****** [4422 done /3776 queued / 16 running / 214 errors / 65% coverage ] ****** [4423 done /3778 queued / 16 running / 214 errors / 65% coverage ] ****** [4423 done /3778 queued / 16 running / 214 errors / 65% coverage ] ****** [4424 done /3779 queued / 16 running / 214 errors / 65% coverage ] ****** [4424 done /3779 queued / 16 running / 214 errors / 65% coverage ] ****** [4425 done /3780 queued / 16 running / 214 errors / 65% coverage ] ****** [4425 done /3780 queued / 16 running / 214 errors / 65% coverage ] ****** [4426 done /3782 queued / 16 running / 214 errors / 65% coverage ] ****** [4426 done /3782 queued / 16 running / 214 errors / 65% coverage ] ****** [4427 done /3782 queued / 16 running / 214 errors / 65% coverage ] ****** [4427 done /3782 queued / 16 running / 214 errors / 65% coverage ] ****** [4428 done /3781 queued / 16 running / 214 errors / 65% coverage ] ****** [4428 done /3781 queued / 16 running / 214 errors / 65% coverage ] ****** [4429 done /3782 queued / 16 running / 214 errors / 65% coverage ] ****** [4429 done /3782 queued / 16 running / 214 errors / 65% coverage ] ****** [4430 done /3781 queued / 16 running / 214 errors / 65% coverage ] ****** [4430 done /3781 queued / 16 running / 214 errors / 65% coverage ] ****** [4431 done /3780 queued / 16 running / 214 errors / 65% coverage ] ****** [4431 done /3780 queued / 16 running / 214 errors / 65% coverage ] ****** [4432 done /3779 queued / 16 running / 214 errors / 65% coverage ] ****** [4432 done /3779 queued / 16 running / 214 errors / 65% coverage ] ****** [4433 done /3780 queued / 16 running / 214 errors / 65% coverage ] ****** [4433 done /3780 queued / 16 running / 214 errors / 65% coverage ] ****** [4434 done /3780 queued / 16 running / 214 errors / 65% coverage ] ****** [4434 done /3780 queued / 16 running / 214 errors / 65% coverage ] ****** [4435 done /3780 queued / 16 running / 214 errors / 65% coverage ] ****** [4435 done /3780 queued / 16 running / 214 errors / 65% coverage ] ****** [4436 done /3780 queued / 16 running / 214 errors / 65% coverage ] ****** [4436 done /3780 queued / 16 running / 214 errors / 65% coverage ] ****** [4437 done /3782 queued / 16 running / 214 errors / 65% coverage ] ****** [4437 done /3782 queued / 16 running / 214 errors / 65% coverage ] ****** [4438 done /3781 queued / 16 running / 214 errors / 65% coverage ] ****** [4438 done /3781 queued / 16 running / 214 errors / 65% coverage ] ****** [4439 done /3782 queued / 16 running / 214 errors / 65% coverage ] ****** [4439 done /3782 queued / 16 running / 214 errors / 65% coverage ] ****** [4440 done /3781 queued / 16 running / 214 errors / 65% coverage ] ****** [4440 done /3781 queued / 16 running / 214 errors / 65% coverage ] ****** [4441 done /3780 queued / 16 running / 214 errors / 65% coverage ] ****** [4441 done /3780 queued / 16 running / 214 errors / 65% coverage ] ****** [4442 done /3779 queued / 16 running / 214 errors / 65% coverage ] ****** [4442 done /3779 queued / 16 running / 214 errors / 65% coverage ] ****** [4443 done /3782 queued / 16 running / 214 errors / 65% coverage ] ****** [4443 done /3782 queued / 16 running / 214 errors / 65% coverage ] ****** [4444 done /3782 queued / 16 running / 214 errors / 65% coverage ] ****** [4444 done /3782 queued / 16 running / 214 errors / 65% coverage ] ****** [4445 done /3781 queued / 16 running / 214 errors / 65% coverage ] ****** [4445 done /3781 queued / 16 running / 214 errors / 65% coverage ] ****** [4446 done /3780 queued / 16 running / 214 errors / 65% coverage ] ****** [4446 done /3780 queued / 16 running / 214 errors / 65% coverage ] ****** [4447 done /3780 queued / 16 running / 214 errors / 65% coverage ] ****** [4447 done /3780 queued / 16 running / 214 errors / 65% coverage ] ****** [4448 done /3779 queued / 16 running / 214 errors / 65% coverage ] ****** [4448 done /3779 queued / 16 running / 214 errors / 65% coverage ] ****** [4449 done /3779 queued / 16 running / 214 errors / 65% coverage ] ****** [4449 done /3779 queued / 16 running / 214 errors / 65% coverage ] ****** [4450 done /3778 queued / 16 running / 214 errors / 65% coverage ] ****** [4450 done /3778 queued / 16 running / 214 errors / 65% coverage ] ****** [4451 done /3777 queued / 16 running / 214 errors / 65% coverage ] ****** [4451 done /3777 queued / 16 running / 214 errors / 65% coverage ] ****** [4452 done /3777 queued / 16 running / 214 errors / 65% coverage ] ****** [4452 done /3777 queued / 16 running / 214 errors / 65% coverage ] ****** [4453 done /3776 queued / 16 running / 214 errors / 65% coverage ] ****** [4453 done /3776 queued / 16 running / 214 errors / 65% coverage ] ****** [4454 done /3778 queued / 16 running / 214 errors / 65% coverage ] ****** [4454 done /3778 queued / 16 running / 214 errors / 65% coverage ] ****** [4455 done /3782 queued / 16 running / 214 errors / 65% coverage ] ****** [4455 done /3782 queued / 16 running / 214 errors / 65% coverage ] ****** [4456 done /3784 queued / 16 running / 214 errors / 65% coverage ] ****** [4456 done /3784 queued / 16 running / 214 errors / 65% coverage ] ****** [4457 done /3787 queued / 16 running / 214 errors / 65% coverage ] ****** [4457 done /3787 queued / 16 running / 214 errors / 65% coverage ] ****** [4458 done /3788 queued / 16 running / 214 errors / 65% coverage ] ****** [4458 done /3788 queued / 16 running / 214 errors / 65% coverage ] ****** [4459 done /3793 queued / 16 running / 214 errors / 65% coverage ] ****** [4459 done /3793 queued / 16 running / 214 errors / 65% coverage ] ****** [4460 done /3794 queued / 16 running / 214 errors / 65% coverage ] ****** [4460 done /3794 queued / 16 running / 214 errors / 65% coverage ] ****** [4461 done /3794 queued / 16 running / 214 errors / 65% coverage ] ****** [4461 done /3794 queued / 16 running / 214 errors / 65% coverage ] ****** [4462 done /3794 queued / 16 running / 214 errors / 65% coverage ] ****** [4462 done /3794 queued / 16 running / 214 errors / 65% coverage ] ****** [4463 done /3795 queued / 16 running / 214 errors / 65% coverage ] ****** [4463 done /3795 queued / 16 running / 214 errors / 65% coverage ] ****** [4464 done /3796 queued / 16 running / 214 errors / 65% coverage ] ****** [4464 done /3796 queued / 16 running / 214 errors / 65% coverage ] ****** [4465 done /3797 queued / 16 running / 214 errors / 65% coverage ] ****** [4465 done /3797 queued / 16 running / 214 errors / 65% coverage ] ****** [4466 done /3798 queued / 16 running / 214 errors / 65% coverage ] ****** [4466 done /3798 queued / 16 running / 214 errors / 65% coverage ] ****** [4467 done /3800 queued / 16 running / 214 errors / 65% coverage ] ****** [4467 done /3800 queued / 16 running / 214 errors / 65% coverage ] ****** [4468 done /3801 queued / 16 running / 214 errors / 65% coverage ] ****** [4468 done /3801 queued / 16 running / 214 errors / 65% coverage ] ****** [4469 done /3802 queued / 16 running / 214 errors / 65% coverage ] ****** [4469 done /3802 queued / 16 running / 214 errors / 65% coverage ] ****** [4470 done /3802 queued / 16 running / 214 errors / 65% coverage ] ****** [4470 done /3802 queued / 16 running / 214 errors / 65% coverage ] ****** [4471 done /3803 queued / 16 running / 214 errors / 65% coverage ] ****** [4471 done /3803 queued / 16 running / 214 errors / 65% coverage ] ****** [4472 done /3806 queued / 16 running / 214 errors / 65% coverage ] ****** [4472 done /3806 queued / 16 running / 214 errors / 65% coverage ] ****** [4473 done /3805 queued / 16 running / 214 errors / 65% coverage ] ****** [4473 done /3805 queued / 16 running / 214 errors / 65% coverage ] ****** [4474 done /3804 queued / 16 running / 214 errors / 65% coverage ] ****** [4474 done /3804 queued / 16 running / 214 errors / 65% coverage ] ****** [4475 done /3805 queued / 16 running / 214 errors / 65% coverage ] ****** [4475 done /3805 queued / 16 running / 214 errors / 65% coverage ] ****** [4476 done /3807 queued / 16 running / 214 errors / 65% coverage ] ****** [4476 done /3807 queued / 16 running / 214 errors / 65% coverage ] ****** [4477 done /3808 queued / 16 running / 214 errors / 65% coverage ] ****** [4477 done /3808 queued / 16 running / 214 errors / 65% coverage ] ****** [4478 done /3808 queued / 16 running / 214 errors / 65% coverage ] ****** [4478 done /3808 queued / 16 running / 214 errors / 65% coverage ] ****** [4479 done /3807 queued / 16 running / 214 errors / 65% coverage ] ****** [4479 done /3807 queued / 16 running / 214 errors / 65% coverage ] ****** [4480 done /3807 queued / 16 running / 214 errors / 65% coverage ] ****** [4480 done /3807 queued / 16 running / 214 errors / 65% coverage ] ****** [4481 done /3807 queued / 16 running / 214 errors / 65% coverage ] ****** [4481 done /3807 queued / 16 running / 214 errors / 65% coverage ] ****** [4482 done /3806 queued / 16 running / 214 errors / 65% coverage ] ****** [4482 done /3806 queued / 16 running / 214 errors / 65% coverage ] ****** [4483 done /3807 queued / 16 running / 214 errors / 65% coverage ] ****** [4483 done /3807 queued / 16 running / 214 errors / 65% coverage ] ****** [4484 done /3806 queued / 16 running / 214 errors / 65% coverage ] ****** [4484 done /3806 queued / 16 running / 214 errors / 65% coverage ] ****** [4485 done /3806 queued / 16 running / 214 errors / 65% coverage ] ****** [4485 done /3806 queued / 16 running / 214 errors / 65% coverage ] ****** [4486 done /3805 queued / 16 running / 214 errors / 65% coverage ] ****** [4486 done /3805 queued / 16 running / 214 errors / 65% coverage ] ****** [4487 done /3805 queued / 16 running / 214 errors / 65% coverage ] ****** [4487 done /3805 queued / 16 running / 214 errors / 65% coverage ] ****** [4488 done /3806 queued / 16 running / 214 errors / 65% coverage ] ****** [4488 done /3806 queued / 16 running / 214 errors / 65% coverage ] ****** [4489 done /3811 queued / 16 running / 214 errors / 65% coverage ] ****** [4489 done /3811 queued / 16 running / 214 errors / 65% coverage ] ****** [4490 done /3810 queued / 16 running / 214 errors / 65% coverage ] ****** [4490 done /3810 queued / 16 running / 214 errors / 65% coverage ] ****** [4491 done /3809 queued / 16 running / 214 errors / 65% coverage ] ****** [4491 done /3809 queued / 16 running / 214 errors / 65% coverage ] ****** [4492 done /3808 queued / 16 running / 214 errors / 65% coverage ] ****** [4492 done /3808 queued / 16 running / 214 errors / 65% coverage ] ****** [4493 done /3811 queued / 16 running / 214 errors / 65% coverage ] ****** [4493 done /3811 queued / 16 running / 214 errors / 65% coverage ] ****** [4494 done /3813 queued / 16 running / 214 errors / 65% coverage ] ****** [4494 done /3813 queued / 16 running / 214 errors / 65% coverage ] ****** [4495 done /3814 queued / 16 running / 214 errors / 65% coverage ] ****** [4495 done /3814 queued / 16 running / 214 errors / 65% coverage ] ****** [4496 done /3816 queued / 16 running / 214 errors / 65% coverage ] ****** [4496 done /3816 queued / 16 running / 214 errors / 65% coverage ] ****** [4497 done /3820 queued / 16 running / 214 errors / 65% coverage ] ****** [4497 done /3820 queued / 16 running / 214 errors / 65% coverage ] ****** [4498 done /3824 queued / 16 running / 214 errors / 65% coverage ] ****** [4498 done /3824 queued / 16 running / 214 errors / 65% coverage ] ****** [4499 done /3827 queued / 16 running / 214 errors / 65% coverage ] ****** [4499 done /3827 queued / 16 running / 214 errors / 65% coverage ] ****** [4500 done /3832 queued / 16 running / 214 errors / 65% coverage ] ****** [4500 done /3832 queued / 16 running / 214 errors / 65% coverage ] ****** [4501 done /3832 queued / 16 running / 214 errors / 65% coverage ] ****** [4501 done /3832 queued / 16 running / 214 errors / 65% coverage ] ****** [4502 done /3834 queued / 16 running / 214 errors / 65% coverage ] ****** [4502 done /3834 queued / 16 running / 214 errors / 65% coverage ] ****** [4503 done /3835 queued / 16 running / 214 errors / 65% coverage ] ****** [4503 done /3835 queued / 16 running / 214 errors / 65% coverage ] ****** [4504 done /3834 queued / 16 running / 214 errors / 65% coverage ] ****** [4504 done /3834 queued / 16 running / 214 errors / 65% coverage ] ****** [4505 done /3836 queued / 16 running / 214 errors / 65% coverage ] ****** [4505 done /3836 queued / 16 running / 214 errors / 65% coverage ] ****** [4506 done /3839 queued / 16 running / 214 errors / 65% coverage ] ****** [4506 done /3839 queued / 16 running / 214 errors / 65% coverage ] ****** [4507 done /3841 queued / 16 running / 214 errors / 65% coverage ] ****** [4507 done /3841 queued / 16 running / 214 errors / 65% coverage ] ****** [4508 done /3841 queued / 16 running / 214 errors / 65% coverage ] ****** [4508 done /3841 queued / 16 running / 214 errors / 65% coverage ] ****** [4509 done /3844 queued / 16 running / 214 errors / 65% coverage ] ****** [4509 done /3844 queued / 16 running / 214 errors / 65% coverage ] ****** [4510 done /3846 queued / 16 running / 214 errors / 65% coverage ] ****** [4510 done /3846 queued / 16 running / 214 errors / 65% coverage ] ****** [4511 done /3847 queued / 16 running / 214 errors / 65% coverage ] ****** [4511 done /3847 queued / 16 running / 214 errors / 65% coverage ] ****** [4512 done /3847 queued / 16 running / 214 errors / 65% coverage ] ****** [4512 done /3847 queued / 16 running / 214 errors / 65% coverage ] ****** [4513 done /3847 queued / 16 running / 214 errors / 65% coverage ] ****** [4513 done /3847 queued / 16 running / 214 errors / 65% coverage ] ****** [4514 done /3848 queued / 16 running / 214 errors / 65% coverage ] ****** [4514 done /3848 queued / 16 running / 214 errors / 65% coverage ] ****** [4515 done /3852 queued / 16 running / 214 errors / 65% coverage ] ****** [4515 done /3852 queued / 16 running / 214 errors / 65% coverage ] ****** [4516 done /3854 queued / 16 running / 214 errors / 65% coverage ] ****** [4516 done /3854 queued / 16 running / 214 errors / 65% coverage ] ****** [4517 done /3855 queued / 16 running / 214 errors / 65% coverage ] ****** [4517 done /3855 queued / 16 running / 214 errors / 65% coverage ] ****** [4518 done /3855 queued / 16 running / 214 errors / 65% coverage ] ****** [4518 done /3855 queued / 16 running / 214 errors / 65% coverage ] ****** [4519 done /3855 queued / 16 running / 214 errors / 65% coverage ] ****** [4519 done /3855 queued / 16 running / 214 errors / 65% coverage ] ****** [4520 done /3854 queued / 16 running / 214 errors / 65% coverage ] ****** [4520 done /3854 queued / 16 running / 214 errors / 65% coverage ] ****** [4521 done /3857 queued / 16 running / 214 errors / 65% coverage ] ****** [4521 done /3857 queued / 16 running / 214 errors / 65% coverage ] ****** [4522 done /3859 queued / 16 running / 214 errors / 65% coverage ] ****** [4522 done /3859 queued / 16 running / 214 errors / 65% coverage ] ****** [4523 done /3862 queued / 16 running / 214 errors / 65% coverage ] ****** [4523 done /3862 queued / 16 running / 214 errors / 65% coverage ] ****** [4524 done /3861 queued / 16 running / 214 errors / 65% coverage ] ****** [4524 done /3861 queued / 16 running / 214 errors / 65% coverage ] ****** [4525 done /3861 queued / 16 running / 214 errors / 65% coverage ] ****** [4525 done /3861 queued / 16 running / 214 errors / 65% coverage ] ****** [4526 done /3862 queued / 16 running / 214 errors / 65% coverage ] ****** [4526 done /3862 queued / 16 running / 214 errors / 65% coverage ] ****** [4527 done /3862 queued / 16 running / 214 errors / 65% coverage ] ****** [4527 done /3862 queued / 16 running / 214 errors / 65% coverage ] ****** [4528 done /3865 queued / 16 running / 214 errors / 65% coverage ] ****** [4528 done /3865 queued / 16 running / 214 errors / 65% coverage ] ****** [4529 done /3866 queued / 16 running / 214 errors / 65% coverage ] ****** [4529 done /3866 queued / 16 running / 214 errors / 65% coverage ] ****** [4530 done /3870 queued / 16 running / 214 errors / 65% coverage ] ****** [4530 done /3870 queued / 16 running / 214 errors / 65% coverage ] ****** [4531 done /3872 queued / 16 running / 214 errors / 65% coverage ] ****** [4531 done /3872 queued / 16 running / 214 errors / 65% coverage ] ****** [4532 done /3874 queued / 16 running / 214 errors / 65% coverage ] ****** [4532 done /3874 queued / 16 running / 214 errors / 65% coverage ] ****** [4533 done /3875 queued / 16 running / 214 errors / 65% coverage ] ****** [4533 done /3875 queued / 16 running / 214 errors / 65% coverage ] ****** [4534 done /3877 queued / 16 running / 214 errors / 65% coverage ] ****** [4534 done /3877 queued / 16 running / 214 errors / 65% coverage ] ****** [4535 done /3878 queued / 16 running / 214 errors / 65% coverage ] ****** [4535 done /3878 queued / 16 running / 214 errors / 65% coverage ] ****** [4536 done /3878 queued / 16 running / 214 errors / 65% coverage ] ****** [4536 done /3878 queued / 16 running / 214 errors / 65% coverage ] ****** [4537 done /3879 queued / 16 running / 214 errors / 65% coverage ] ****** [4537 done /3879 queued / 16 running / 214 errors / 65% coverage ] ****** [4538 done /3881 queued / 16 running / 214 errors / 65% coverage ] ****** [4538 done /3881 queued / 16 running / 214 errors / 65% coverage ] ****** [4539 done /3884 queued / 16 running / 214 errors / 65% coverage ] ****** [4539 done /3884 queued / 16 running / 214 errors / 65% coverage ] ****** [4540 done /3886 queued / 16 running / 214 errors / 65% coverage ] ****** [4540 done /3886 queued / 16 running / 214 errors / 65% coverage ] ****** [4541 done /3887 queued / 16 running / 214 errors / 65% coverage ] ****** [4541 done /3887 queued / 16 running / 214 errors / 65% coverage ] ****** [4542 done /3888 queued / 16 running / 214 errors / 65% coverage ] ****** [4542 done /3888 queued / 16 running / 214 errors / 65% coverage ] ****** [4543 done /3892 queued / 16 running / 214 errors / 65% coverage ] ****** [4543 done /3892 queued / 16 running / 214 errors / 65% coverage ] ****** [4544 done /3895 queued / 16 running / 214 errors / 65% coverage ] ****** [4544 done /3895 queued / 16 running / 214 errors / 65% coverage ] ****** [4545 done /3898 queued / 16 running / 214 errors / 65% coverage ] ****** [4545 done /3898 queued / 16 running / 214 errors / 65% coverage ] ****** [4546 done /3902 queued / 16 running / 214 errors / 65% coverage ] ****** [4546 done /3902 queued / 16 running / 214 errors / 65% coverage ] ****** [4547 done /3905 queued / 16 running / 214 errors / 65% coverage ] ****** [4547 done /3905 queued / 16 running / 214 errors / 65% coverage ] ****** [4548 done /3906 queued / 16 running / 214 errors / 65% coverage ] ****** [4548 done /3906 queued / 16 running / 214 errors / 65% coverage ] ****** [4549 done /3909 queued / 16 running / 214 errors / 65% coverage ] ****** [4549 done /3909 queued / 16 running / 214 errors / 65% coverage ] ****** [4550 done /3908 queued / 16 running / 214 errors / 65% coverage ] ****** [4550 done /3908 queued / 16 running / 214 errors / 65% coverage ] ****** [4551 done /3907 queued / 16 running / 214 errors / 65% coverage ] ****** [4551 done /3907 queued / 16 running / 214 errors / 65% coverage ] ****** [4552 done /3907 queued / 16 running / 214 errors / 65% coverage ] ****** [4552 done /3907 queued / 16 running / 214 errors / 65% coverage ] ****** [4553 done /3906 queued / 16 running / 214 errors / 65% coverage ] ****** [4553 done /3906 queued / 16 running / 214 errors / 65% coverage ] ****** [4554 done /3906 queued / 16 running / 214 errors / 65% coverage ] ****** [4554 done /3906 queued / 16 running / 214 errors / 65% coverage ] ****** [4555 done /3905 queued / 16 running / 214 errors / 65% coverage ] ****** [4555 done /3905 queued / 16 running / 214 errors / 65% coverage ] ****** [4556 done /3905 queued / 16 running / 214 errors / 65% coverage ] ****** [4556 done /3905 queued / 16 running / 214 errors / 65% coverage ] ****** [4557 done /3905 queued / 16 running / 214 errors / 65% coverage ] ****** [4557 done /3905 queued / 16 running / 214 errors / 65% coverage ] ****** [4558 done /3904 queued / 16 running / 214 errors / 65% coverage ] ****** [4558 done /3904 queued / 16 running / 214 errors / 65% coverage ] ****** [4559 done /3905 queued / 16 running / 214 errors / 65% coverage ] ****** [4559 done /3905 queued / 16 running / 214 errors / 65% coverage ] ****** [4560 done /3904 queued / 16 running / 214 errors / 65% coverage ] ****** [4560 done /3904 queued / 16 running / 214 errors / 65% coverage ] ****** [4561 done /3903 queued / 16 running / 214 errors / 65% coverage ] ****** [4561 done /3903 queued / 16 running / 214 errors / 65% coverage ] ****** [4562 done /3903 queued / 16 running / 214 errors / 65% coverage ] ****** [4562 done /3903 queued / 16 running / 214 errors / 65% coverage ] ****** [4563 done /3902 queued / 16 running / 214 errors / 65% coverage ] ****** [4563 done /3902 queued / 16 running / 214 errors / 65% coverage ] ****** [4564 done /3901 queued / 16 running / 214 errors / 65% coverage ] ****** [4564 done /3901 queued / 16 running / 214 errors / 65% coverage ] ****** [4565 done /3900 queued / 16 running / 214 errors / 65% coverage ] ****** [4565 done /3900 queued / 16 running / 214 errors / 65% coverage ] ****** [4566 done /3900 queued / 16 running / 214 errors / 65% coverage ] ****** [4566 done /3900 queued / 16 running / 214 errors / 65% coverage ] ****** [4567 done /3900 queued / 16 running / 214 errors / 65% coverage ] ****** [4567 done /3900 queued / 16 running / 214 errors / 65% coverage ] ****** [4568 done /3900 queued / 16 running / 214 errors / 65% coverage ] ****** [4568 done /3900 queued / 16 running / 214 errors / 65% coverage ] ****** [4569 done /3900 queued / 16 running / 214 errors / 65% coverage ] ****** [4569 done /3900 queued / 16 running / 214 errors / 65% coverage ] ****** [4570 done /3900 queued / 16 running / 214 errors / 65% coverage ] ****** [4570 done /3900 queued / 16 running / 214 errors / 65% coverage ] ****** [4571 done /3899 queued / 16 running / 214 errors / 65% coverage ] ****** [4571 done /3899 queued / 16 running / 214 errors / 65% coverage ] ****** [4572 done /3898 queued / 16 running / 214 errors / 65% coverage ] ****** [4572 done /3898 queued / 16 running / 214 errors / 65% coverage ] ****** [4573 done /3897 queued / 16 running / 214 errors / 65% coverage ] ****** [4573 done /3897 queued / 16 running / 214 errors / 65% coverage ] ****** [4574 done /3897 queued / 16 running / 214 errors / 65% coverage ] ****** [4574 done /3897 queued / 16 running / 214 errors / 65% coverage ] ****** [4575 done /3897 queued / 16 running / 214 errors / 65% coverage ] ****** [4575 done /3897 queued / 16 running / 214 errors / 65% coverage ] ****** [4576 done /3896 queued / 16 running / 214 errors / 65% coverage ] ****** [4576 done /3896 queued / 16 running / 214 errors / 65% coverage ] ****** [4577 done /3895 queued / 16 running / 214 errors / 65% coverage ] ****** [4577 done /3895 queued / 16 running / 214 errors / 65% coverage ] ****** [4578 done /3896 queued / 16 running / 214 errors / 65% coverage ] ****** [4578 done /3896 queued / 16 running / 214 errors / 65% coverage ] ****** [4579 done /3897 queued / 16 running / 214 errors / 65% coverage ] ****** [4579 done /3897 queued / 16 running / 214 errors / 65% coverage ] ****** [4580 done /3900 queued / 16 running / 214 errors / 65% coverage ] ****** [4580 done /3900 queued / 16 running / 214 errors / 65% coverage ] ****** [4581 done /3899 queued / 16 running / 214 errors / 65% coverage ] ****** [4581 done /3899 queued / 16 running / 214 errors / 65% coverage ] ****** [4582 done /3898 queued / 16 running / 214 errors / 65% coverage ] ****** [4582 done /3898 queued / 16 running / 214 errors / 65% coverage ] ****** [4583 done /3902 queued / 16 running / 214 errors / 65% coverage ] ****** [4583 done /3902 queued / 16 running / 214 errors / 65% coverage ] ****** [4584 done /3901 queued / 16 running / 214 errors / 65% coverage ] ****** [4584 done /3901 queued / 16 running / 214 errors / 65% coverage ] ****** [4585 done /3901 queued / 16 running / 214 errors / 65% coverage ] ****** [4585 done /3901 queued / 16 running / 214 errors / 65% coverage ] ****** [4586 done /3902 queued / 16 running / 214 errors / 65% coverage ] ****** [4586 done /3902 queued / 16 running / 214 errors / 65% coverage ] ****** [4587 done /3905 queued / 16 running / 214 errors / 65% coverage ] ****** [4587 done /3905 queued / 16 running / 214 errors / 65% coverage ] ****** [4588 done /3909 queued / 16 running / 214 errors / 65% coverage ] ****** [4588 done /3909 queued / 16 running / 214 errors / 65% coverage ] ****** [4589 done /3911 queued / 16 running / 214 errors / 65% coverage ] ****** [4589 done /3911 queued / 16 running / 214 errors / 65% coverage ] ****** [4590 done /3912 queued / 16 running / 214 errors / 65% coverage ] ****** [4590 done /3912 queued / 16 running / 214 errors / 65% coverage ] ****** [4591 done /3913 queued / 16 running / 214 errors / 65% coverage ] ****** [4591 done /3913 queued / 16 running / 214 errors / 65% coverage ] ****** [4592 done /3917 queued / 16 running / 214 errors / 65% coverage ] ****** [4592 done /3917 queued / 16 running / 214 errors / 65% coverage ] ****** [4593 done /3921 queued / 16 running / 214 errors / 65% coverage ] ****** [4593 done /3921 queued / 16 running / 214 errors / 65% coverage ] ****** [4594 done /3924 queued / 16 running / 214 errors / 65% coverage ] ****** [4594 done /3924 queued / 16 running / 214 errors / 65% coverage ] ****** [4595 done /3929 queued / 16 running / 214 errors / 65% coverage ] ****** [4595 done /3929 queued / 16 running / 214 errors / 65% coverage ] ****** [4596 done /3928 queued / 16 running / 214 errors / 65% coverage ] ****** [4596 done /3928 queued / 16 running / 214 errors / 65% coverage ] ****** [4597 done /3928 queued / 16 running / 214 errors / 65% coverage ] ****** [4597 done /3928 queued / 16 running / 214 errors / 65% coverage ] ****** [4598 done /3927 queued / 16 running / 214 errors / 65% coverage ] ****** [4598 done /3927 queued / 16 running / 214 errors / 65% coverage ] ****** [4599 done /3926 queued / 16 running / 214 errors / 65% coverage ] ****** [4599 done /3926 queued / 16 running / 214 errors / 65% coverage ] ****** [4600 done /3926 queued / 16 running / 214 errors / 65% coverage ] ****** [4600 done /3926 queued / 16 running / 214 errors / 65% coverage ] ****** [4601 done /3926 queued / 16 running / 214 errors / 65% coverage ] ****** [4601 done /3926 queued / 16 running / 214 errors / 65% coverage ] ****** [4602 done /3927 queued / 16 running / 214 errors / 65% coverage ] ****** [4602 done /3927 queued / 16 running / 214 errors / 65% coverage ] ****** [4603 done /3927 queued / 16 running / 214 errors / 65% coverage ] ****** [4603 done /3927 queued / 16 running / 214 errors / 65% coverage ] ****** [4604 done /3927 queued / 16 running / 214 errors / 65% coverage ] ****** [4604 done /3927 queued / 16 running / 214 errors / 65% coverage ] ****** [4605 done /3928 queued / 16 running / 214 errors / 65% coverage ] ****** [4605 done /3928 queued / 16 running / 214 errors / 65% coverage ] ****** [4606 done /3927 queued / 16 running / 214 errors / 65% coverage ] ****** [4606 done /3927 queued / 16 running / 214 errors / 65% coverage ] ****** [4607 done /3927 queued / 16 running / 214 errors / 65% coverage ] ****** [4607 done /3927 queued / 16 running / 214 errors / 65% coverage ] ****** [4608 done /3927 queued / 16 running / 214 errors / 65% coverage ] ****** [4608 done /3927 queued / 16 running / 214 errors / 65% coverage ] ****** [4609 done /3928 queued / 16 running / 214 errors / 65% coverage ] ****** [4609 done /3928 queued / 16 running / 214 errors / 65% coverage ] ****** [4610 done /3928 queued / 16 running / 214 errors / 65% coverage ] ****** [4610 done /3928 queued / 16 running / 214 errors / 65% coverage ] ****** [4611 done /3929 queued / 16 running / 214 errors / 65% coverage ] ****** [4611 done /3929 queued / 16 running / 214 errors / 65% coverage ] ****** [4612 done /3929 queued / 16 running / 214 errors / 65% coverage ] ****** [4612 done /3929 queued / 16 running / 214 errors / 65% coverage ] ****** [4613 done /3929 queued / 16 running / 214 errors / 65% coverage ] ****** [4613 done /3929 queued / 16 running / 214 errors / 65% coverage ] ****** [4614 done /3930 queued / 16 running / 214 errors / 65% coverage ] ****** [4614 done /3930 queued / 16 running / 214 errors / 65% coverage ] ****** [4615 done /3930 queued / 16 running / 214 errors / 65% coverage ] ****** [4615 done /3930 queued / 16 running / 214 errors / 65% coverage ] ****** [4616 done /3930 queued / 16 running / 214 errors / 65% coverage ] ****** [4616 done /3930 queued / 16 running / 214 errors / 65% coverage ] ****** [4617 done /3931 queued / 16 running / 214 errors / 65% coverage ] ****** [4617 done /3931 queued / 16 running / 214 errors / 65% coverage ] ****** [4618 done /3933 queued / 16 running / 214 errors / 65% coverage ] ****** [4618 done /3933 queued / 16 running / 214 errors / 65% coverage ] ****** [4619 done /3933 queued / 16 running / 214 errors / 65% coverage ] ****** [4619 done /3933 queued / 16 running / 214 errors / 65% coverage ] ****** [4620 done /3937 queued / 16 running / 214 errors / 65% coverage ] ****** [4620 done /3937 queued / 16 running / 214 errors / 65% coverage ] ****** [4621 done /3938 queued / 16 running / 214 errors / 65% coverage ] ****** [4621 done /3938 queued / 16 running / 214 errors / 65% coverage ] ****** [4622 done /3940 queued / 16 running / 214 errors / 65% coverage ] ****** [4622 done /3940 queued / 16 running / 214 errors / 65% coverage ] ****** [4623 done /3940 queued / 16 running / 214 errors / 65% coverage ] ****** [4623 done /3940 queued / 16 running / 214 errors / 65% coverage ] ****** [4624 done /3941 queued / 16 running / 214 errors / 65% coverage ] ****** [4624 done /3941 queued / 16 running / 214 errors / 65% coverage ] ****** [4625 done /3945 queued / 16 running / 214 errors / 65% coverage ] ****** [4625 done /3945 queued / 16 running / 214 errors / 65% coverage ] ****** [4626 done /3949 queued / 16 running / 214 errors / 65% coverage ] ****** [4626 done /3949 queued / 16 running / 214 errors / 65% coverage ] ****** [4627 done /3950 queued / 16 running / 214 errors / 65% coverage ] ****** [4627 done /3950 queued / 16 running / 214 errors / 65% coverage ] ****** [4628 done /3952 queued / 16 running / 214 errors / 65% coverage ] ****** [4628 done /3952 queued / 16 running / 214 errors / 65% coverage ] ****** [4629 done /3953 queued / 16 running / 214 errors / 65% coverage ] ****** [4629 done /3953 queued / 16 running / 214 errors / 65% coverage ] ****** [4630 done /3954 queued / 16 running / 214 errors / 65% coverage ] ****** [4630 done /3954 queued / 16 running / 214 errors / 65% coverage ] ****** [4631 done /3955 queued / 16 running / 214 errors / 65% coverage ] ****** [4631 done /3955 queued / 16 running / 214 errors / 65% coverage ] ****** [4632 done /3957 queued / 16 running / 214 errors / 65% coverage ] ****** [4632 done /3957 queued / 16 running / 214 errors / 65% coverage ] ****** [4633 done /3960 queued / 16 running / 214 errors / 65% coverage ] ****** [4633 done /3960 queued / 16 running / 214 errors / 65% coverage ] ****** [4634 done /3962 queued / 16 running / 214 errors / 65% coverage ] ****** [4634 done /3962 queued / 16 running / 214 errors / 65% coverage ] ****** [4635 done /3965 queued / 16 running / 214 errors / 65% coverage ] ****** [4635 done /3965 queued / 16 running / 214 errors / 65% coverage ] ****** [4636 done /3966 queued / 16 running / 214 errors / 65% coverage ] ****** [4636 done /3966 queued / 16 running / 214 errors / 65% coverage ] ****** [4637 done /3966 queued / 16 running / 214 errors / 65% coverage ] ****** [4637 done /3966 queued / 16 running / 214 errors / 65% coverage ] ****** [4638 done /3966 queued / 16 running / 214 errors / 65% coverage ] ****** [4638 done /3966 queued / 16 running / 214 errors / 65% coverage ] ****** [4639 done /3966 queued / 16 running / 214 errors / 65% coverage ] ****** [4639 done /3966 queued / 16 running / 214 errors / 65% coverage ] ****** [4640 done /3966 queued / 16 running / 214 errors / 65% coverage ] ****** [4640 done /3966 queued / 16 running / 214 errors / 65% coverage ] ****** [4641 done /3966 queued / 16 running / 214 errors / 65% coverage ] ****** [4641 done /3966 queued / 16 running / 214 errors / 65% coverage ] ****** [4642 done /3966 queued / 16 running / 214 errors / 65% coverage ] ****** [4642 done /3966 queued / 16 running / 214 errors / 65% coverage ] ****** [4643 done /3966 queued / 16 running / 214 errors / 65% coverage ] ****** [4643 done /3966 queued / 16 running / 214 errors / 65% coverage ] ****** [4644 done /3967 queued / 16 running / 214 errors / 65% coverage ] ****** [4644 done /3967 queued / 16 running / 214 errors / 65% coverage ] ****** [4645 done /3967 queued / 16 running / 214 errors / 65% coverage ] ****** [4645 done /3967 queued / 16 running / 214 errors / 65% coverage ] ****** [4646 done /3967 queued / 16 running / 214 errors / 65% coverage ] ****** [4646 done /3967 queued / 16 running / 214 errors / 65% coverage ] ****** [4647 done /3968 queued / 16 running / 214 errors / 65% coverage ] ****** [4647 done /3968 queued / 16 running / 214 errors / 65% coverage ] ****** [4648 done /3967 queued / 16 running / 214 errors / 65% coverage ] ****** [4648 done /3967 queued / 16 running / 214 errors / 65% coverage ] ****** [4649 done /3966 queued / 16 running / 214 errors / 65% coverage ] ****** [4649 done /3966 queued / 16 running / 214 errors / 65% coverage ] ****** [4650 done /3965 queued / 16 running / 214 errors / 65% coverage ] ****** [4650 done /3965 queued / 16 running / 214 errors / 65% coverage ] ****** [4651 done /3965 queued / 16 running / 214 errors / 65% coverage ] ****** [4651 done /3965 queued / 16 running / 214 errors / 65% coverage ] ****** [4652 done /3964 queued / 16 running / 214 errors / 65% coverage ] ****** [4652 done /3964 queued / 16 running / 214 errors / 65% coverage ] ****** [4653 done /3964 queued / 16 running / 214 errors / 65% coverage ] ****** [4653 done /3964 queued / 16 running / 214 errors / 65% coverage ] ****** [4654 done /3964 queued / 16 running / 214 errors / 65% coverage ] ****** [4654 done /3964 queued / 16 running / 214 errors / 65% coverage ] ****** [4655 done /3964 queued / 16 running / 214 errors / 65% coverage ] ****** [4655 done /3964 queued / 16 running / 214 errors / 65% coverage ] ****** [4656 done /3963 queued / 16 running / 214 errors / 65% coverage ] ****** [4656 done /3963 queued / 16 running / 214 errors / 65% coverage ] ****** [4657 done /3962 queued / 16 running / 214 errors / 65% coverage ] ****** [4657 done /3962 queued / 16 running / 214 errors / 65% coverage ] ****** [4658 done /3963 queued / 16 running / 214 errors / 65% coverage ] ****** [4658 done /3963 queued / 16 running / 214 errors / 65% coverage ] ****** [4659 done /3964 queued / 16 running / 214 errors / 65% coverage ] ****** [4659 done /3964 queued / 16 running / 214 errors / 65% coverage ] ****** [4660 done /3969 queued / 16 running / 214 errors / 65% coverage ] ****** [4660 done /3969 queued / 16 running / 214 errors / 65% coverage ] ****** [4661 done /3972 queued / 16 running / 214 errors / 65% coverage ] ****** [4661 done /3972 queued / 16 running / 214 errors / 65% coverage ] ****** [4662 done /3973 queued / 16 running / 214 errors / 65% coverage ] ****** [4662 done /3973 queued / 16 running / 214 errors / 65% coverage ] ****** [4663 done /3974 queued / 16 running / 214 errors / 65% coverage ] ****** [4663 done /3974 queued / 16 running / 214 errors / 65% coverage ] ****** [4664 done /3975 queued / 16 running / 214 errors / 65% coverage ] ****** [4664 done /3975 queued / 16 running / 214 errors / 65% coverage ] ****** [4665 done /3977 queued / 16 running / 214 errors / 65% coverage ] ****** [4665 done /3977 queued / 16 running / 214 errors / 65% coverage ] ****** [4666 done /3978 queued / 16 running / 214 errors / 65% coverage ] ****** [4666 done /3978 queued / 16 running / 214 errors / 65% coverage ] ****** [4667 done /3980 queued / 16 running / 214 errors / 65% coverage ] ****** [4667 done /3980 queued / 16 running / 214 errors / 65% coverage ] ****** [4668 done /3984 queued / 16 running / 214 errors / 65% coverage ] ****** [4668 done /3984 queued / 16 running / 214 errors / 65% coverage ] ****** [4669 done /3984 queued / 16 running / 214 errors / 65% coverage ] ****** [4669 done /3984 queued / 16 running / 214 errors / 65% coverage ] ****** [4670 done /3987 queued / 16 running / 214 errors / 65% coverage ] ****** [4670 done /3987 queued / 16 running / 214 errors / 65% coverage ] ****** [4671 done /3987 queued / 16 running / 214 errors / 65% coverage ] ****** [4671 done /3987 queued / 16 running / 214 errors / 65% coverage ] ****** [4672 done /3988 queued / 16 running / 214 errors / 65% coverage ] ****** [4672 done /3988 queued / 16 running / 214 errors / 65% coverage ] ****** [4673 done /3989 queued / 16 running / 214 errors / 65% coverage ] ****** [4673 done /3989 queued / 16 running / 214 errors / 65% coverage ] ****** [4674 done /3991 queued / 16 running / 214 errors / 65% coverage ] ****** [4674 done /3991 queued / 16 running / 214 errors / 65% coverage ] ****** [4675 done /3995 queued / 16 running / 214 errors / 65% coverage ] ****** [4675 done /3995 queued / 16 running / 214 errors / 65% coverage ] ****** [4676 done /3998 queued / 16 running / 214 errors / 65% coverage ] ****** [4676 done /3998 queued / 16 running / 214 errors / 65% coverage ] ****** [4677 done /3999 queued / 16 running / 214 errors / 65% coverage ] ****** [4677 done /3999 queued / 16 running / 214 errors / 65% coverage ] ****** [4678 done /4001 queued / 16 running / 214 errors / 65% coverage ] ****** [4678 done /4001 queued / 16 running / 214 errors / 65% coverage ] ****** [4679 done /4003 queued / 16 running / 214 errors / 65% coverage ] ****** [4679 done /4003 queued / 16 running / 214 errors / 65% coverage ] ****** [4680 done /4005 queued / 16 running / 214 errors / 65% coverage ] ****** [4680 done /4005 queued / 16 running / 214 errors / 65% coverage ] ****** [4681 done /4004 queued / 16 running / 214 errors / 65% coverage ] ****** [4681 done /4004 queued / 16 running / 214 errors / 65% coverage ] ****** [4682 done /4005 queued / 16 running / 214 errors / 65% coverage ] ****** [4682 done /4005 queued / 16 running / 214 errors / 65% coverage ] ****** [4683 done /4006 queued / 16 running / 214 errors / 65% coverage ] ****** [4683 done /4006 queued / 16 running / 214 errors / 65% coverage ] ****** [4684 done /4007 queued / 16 running / 214 errors / 65% coverage ] ****** [4684 done /4007 queued / 16 running / 214 errors / 65% coverage ] ****** [4685 done /4008 queued / 16 running / 214 errors / 65% coverage ] ****** [4685 done /4008 queued / 16 running / 214 errors / 65% coverage ] ****** [4686 done /4007 queued / 16 running / 214 errors / 65% coverage ] ****** [4686 done /4007 queued / 16 running / 214 errors / 65% coverage ] ****** [4687 done /4007 queued / 16 running / 214 errors / 65% coverage ] ****** [4687 done /4007 queued / 16 running / 214 errors / 65% coverage ] ****** [4688 done /4009 queued / 16 running / 214 errors / 65% coverage ] ****** [4688 done /4009 queued / 16 running / 214 errors / 65% coverage ] ****** [4689 done /4009 queued / 16 running / 214 errors / 65% coverage ] ****** [4689 done /4009 queued / 16 running / 214 errors / 65% coverage ] ****** [4690 done /4009 queued / 16 running / 214 errors / 65% coverage ] ****** [4690 done /4009 queued / 16 running / 214 errors / 65% coverage ] ****** [4691 done /4011 queued / 16 running / 214 errors / 65% coverage ] ****** [4691 done /4011 queued / 16 running / 214 errors / 65% coverage ] ****** [4692 done /4012 queued / 16 running / 214 errors / 65% coverage ] ****** [4692 done /4012 queued / 16 running / 214 errors / 65% coverage ] ****** [4693 done /4012 queued / 16 running / 214 errors / 65% coverage ] ****** [4693 done /4012 queued / 16 running / 214 errors / 65% coverage ] ****** [4694 done /4015 queued / 16 running / 214 errors / 65% coverage ] ****** [4694 done /4015 queued / 16 running / 214 errors / 65% coverage ] ****** [4695 done /4014 queued / 16 running / 214 errors / 65% coverage ] ****** [4695 done /4014 queued / 16 running / 214 errors / 65% coverage ] ****** [4696 done /4014 queued / 16 running / 214 errors / 65% coverage ] ****** [4696 done /4014 queued / 16 running / 214 errors / 65% coverage ] ****** [4697 done /4013 queued / 16 running / 214 errors / 65% coverage ] ****** [4697 done /4013 queued / 16 running / 214 errors / 65% coverage ] ****** [4698 done /4013 queued / 16 running / 214 errors / 65% coverage ] ****** [4698 done /4013 queued / 16 running / 214 errors / 65% coverage ] ****** [4699 done /4013 queued / 16 running / 214 errors / 65% coverage ] ****** [4699 done /4013 queued / 16 running / 214 errors / 65% coverage ] ****** [4700 done /4012 queued / 16 running / 214 errors / 65% coverage ] ****** [4700 done /4012 queued / 16 running / 214 errors / 65% coverage ] ****** [4701 done /4014 queued / 16 running / 214 errors / 65% coverage ] ****** [4701 done /4014 queued / 16 running / 214 errors / 65% coverage ] ****** [4702 done /4016 queued / 16 running / 214 errors / 65% coverage ] ****** [4702 done /4016 queued / 16 running / 214 errors / 65% coverage ] ****** [4703 done /4018 queued / 16 running / 214 errors / 65% coverage ] ****** [4703 done /4018 queued / 16 running / 214 errors / 65% coverage ] ****** [4704 done /4019 queued / 16 running / 214 errors / 65% coverage ] ****** [4704 done /4019 queued / 16 running / 214 errors / 65% coverage ] ****** [4705 done /4021 queued / 16 running / 214 errors / 65% coverage ] ****** [4705 done /4021 queued / 16 running / 214 errors / 65% coverage ] ****** [4706 done /4023 queued / 16 running / 214 errors / 65% coverage ] ****** [4706 done /4023 queued / 16 running / 214 errors / 65% coverage ] ****** [4707 done /4024 queued / 16 running / 214 errors / 65% coverage ] ****** [4707 done /4024 queued / 16 running / 214 errors / 65% coverage ] ****** [4708 done /4024 queued / 16 running / 214 errors / 65% coverage ] ****** [4708 done /4024 queued / 16 running / 214 errors / 65% coverage ] ****** [4709 done /4027 queued / 16 running / 214 errors / 65% coverage ] ****** [4709 done /4027 queued / 16 running / 214 errors / 65% coverage ] ****** [4710 done /4028 queued / 16 running / 214 errors / 65% coverage ] ****** [4710 done /4028 queued / 16 running / 214 errors / 65% coverage ] ****** [4711 done /4031 queued / 16 running / 214 errors / 65% coverage ] ****** [4711 done /4031 queued / 16 running / 214 errors / 65% coverage ] ****** [4712 done /4032 queued / 16 running / 214 errors / 65% coverage ] ****** [4712 done /4032 queued / 16 running / 214 errors / 65% coverage ] ****** [4713 done /4036 queued / 16 running / 214 errors / 65% coverage ] ****** [4713 done /4036 queued / 16 running / 214 errors / 65% coverage ] ****** [4714 done /4037 queued / 16 running / 214 errors / 65% coverage ] ****** [4714 done /4037 queued / 16 running / 214 errors / 65% coverage ] ****** [4715 done /4041 queued / 16 running / 214 errors / 65% coverage ] ****** [4715 done /4041 queued / 16 running / 214 errors / 65% coverage ] ****** [4716 done /4041 queued / 16 running / 214 errors / 65% coverage ] ****** [4716 done /4041 queued / 16 running / 214 errors / 65% coverage ] ****** [4717 done /4040 queued / 16 running / 214 errors / 65% coverage ] ****** [4717 done /4040 queued / 16 running / 214 errors / 65% coverage ] ****** [4718 done /4039 queued / 16 running / 214 errors / 65% coverage ] ****** [4718 done /4039 queued / 16 running / 214 errors / 65% coverage ] ****** [4719 done /4038 queued / 16 running / 214 errors / 65% coverage ] ****** [4719 done /4038 queued / 16 running / 214 errors / 65% coverage ] ****** [4720 done /4037 queued / 16 running / 214 errors / 65% coverage ] ****** [4720 done /4037 queued / 16 running / 214 errors / 65% coverage ] ****** [4721 done /4036 queued / 16 running / 214 errors / 65% coverage ] ****** [4721 done /4036 queued / 16 running / 214 errors / 65% coverage ] ****** [4722 done /4036 queued / 16 running / 214 errors / 65% coverage ] ****** [4722 done /4036 queued / 16 running / 214 errors / 65% coverage ] ****** [4723 done /4036 queued / 16 running / 214 errors / 65% coverage ] ****** [4723 done /4036 queued / 16 running / 214 errors / 65% coverage ] ****** [4724 done /4035 queued / 16 running / 214 errors / 65% coverage ] ****** [4724 done /4035 queued / 16 running / 214 errors / 65% coverage ] ****** [4725 done /4035 queued / 16 running / 214 errors / 65% coverage ] ****** [4725 done /4035 queued / 16 running / 214 errors / 65% coverage ] ****** [4726 done /4034 queued / 16 running / 214 errors / 65% coverage ] ****** [4726 done /4034 queued / 16 running / 214 errors / 65% coverage ] ****** [4727 done /4036 queued / 16 running / 214 errors / 65% coverage ] ****** [4727 done /4036 queued / 16 running / 214 errors / 65% coverage ] ****** [4728 done /4037 queued / 16 running / 214 errors / 65% coverage ] ****** [4728 done /4037 queued / 16 running / 214 errors / 65% coverage ] ****** [4729 done /4038 queued / 16 running / 214 errors / 65% coverage ] ****** [4729 done /4038 queued / 16 running / 214 errors / 65% coverage ] ****** [4730 done /4038 queued / 16 running / 214 errors / 65% coverage ] ****** [4730 done /4038 queued / 16 running / 214 errors / 65% coverage ] ****** [4731 done /4039 queued / 16 running / 214 errors / 65% coverage ] ****** [4731 done /4039 queued / 16 running / 214 errors / 65% coverage ] ****** [4732 done /4038 queued / 16 running / 214 errors / 65% coverage ] ****** [4732 done /4038 queued / 16 running / 214 errors / 65% coverage ] ****** [4733 done /4038 queued / 16 running / 214 errors / 65% coverage ] ****** [4733 done /4038 queued / 16 running / 214 errors / 65% coverage ] ****** [4734 done /4037 queued / 16 running / 214 errors / 65% coverage ] ****** [4734 done /4037 queued / 16 running / 214 errors / 65% coverage ] ****** [4735 done /4037 queued / 16 running / 214 errors / 65% coverage ] ****** [4735 done /4037 queued / 16 running / 214 errors / 65% coverage ] ****** [4736 done /4039 queued / 16 running / 214 errors / 65% coverage ] ****** [4736 done /4039 queued / 16 running / 214 errors / 65% coverage ] ****** [4737 done /4039 queued / 16 running / 214 errors / 65% coverage ] ****** [4737 done /4039 queued / 16 running / 214 errors / 65% coverage ] ****** [4738 done /4042 queued / 16 running / 214 errors / 65% coverage ] ****** [4738 done /4042 queued / 16 running / 214 errors / 65% coverage ] ****** [4739 done /4042 queued / 16 running / 214 errors / 65% coverage ] ****** [4739 done /4042 queued / 16 running / 214 errors / 65% coverage ] ****** [4740 done /4045 queued / 16 running / 215 errors / 65% coverage ] ****** [4740 done /4045 queued / 16 running / 215 errors / 65% coverage ] ****** [4741 done /4045 queued / 16 running / 215 errors / 65% coverage ] ****** [4741 done /4045 queued / 16 running / 215 errors / 65% coverage ] ****** [4742 done /4046 queued / 16 running / 216 errors / 65% coverage ] ****** [4742 done /4046 queued / 16 running / 216 errors / 65% coverage ] ****** [4743 done /4048 queued / 16 running / 216 errors / 65% coverage ] ****** [4743 done /4048 queued / 16 running / 216 errors / 65% coverage ] ****** [4744 done /4050 queued / 16 running / 216 errors / 65% coverage ] ****** [4744 done /4050 queued / 16 running / 216 errors / 65% coverage ] ****** [4745 done /4052 queued / 16 running / 216 errors / 65% coverage ] ****** [4745 done /4052 queued / 16 running / 216 errors / 65% coverage ] ****** [4746 done /4054 queued / 16 running / 216 errors / 65% coverage ] ****** [4746 done /4054 queued / 16 running / 216 errors / 65% coverage ] ****** [4747 done /4057 queued / 16 running / 216 errors / 65% coverage ] ****** [4747 done /4057 queued / 16 running / 216 errors / 65% coverage ] ****** [4748 done /4059 queued / 16 running / 216 errors / 65% coverage ] ****** [4748 done /4059 queued / 16 running / 216 errors / 65% coverage ] ****** [4749 done /4061 queued / 16 running / 216 errors / 65% coverage ] ****** [4749 done /4061 queued / 16 running / 216 errors / 65% coverage ] ****** [4750 done /4064 queued / 16 running / 216 errors / 65% coverage ] ****** [4750 done /4064 queued / 16 running / 216 errors / 65% coverage ] ****** [4751 done /4065 queued / 16 running / 216 errors / 65% coverage ] ****** [4751 done /4065 queued / 16 running / 216 errors / 65% coverage ] ****** [4752 done /4069 queued / 16 running / 216 errors / 65% coverage ] ****** [4752 done /4069 queued / 16 running / 216 errors / 65% coverage ] ****** [4753 done /4070 queued / 16 running / 216 errors / 65% coverage ] ****** [4753 done /4070 queued / 16 running / 216 errors / 65% coverage ] ****** [4754 done /4073 queued / 16 running / 216 errors / 65% coverage ] ****** [4754 done /4073 queued / 16 running / 216 errors / 65% coverage ] ****** [4755 done /4074 queued / 16 running / 216 errors / 65% coverage ] ****** [4755 done /4074 queued / 16 running / 216 errors / 65% coverage ] ****** [4756 done /4074 queued / 16 running / 216 errors / 65% coverage ] ****** [4756 done /4074 queued / 16 running / 216 errors / 65% coverage ] ****** [4757 done /4073 queued / 16 running / 216 errors / 65% coverage ] ****** [4757 done /4073 queued / 16 running / 216 errors / 65% coverage ] ****** [4758 done /4075 queued / 16 running / 216 errors / 65% coverage ] ****** [4758 done /4075 queued / 16 running / 216 errors / 65% coverage ] ****** [4759 done /4074 queued / 16 running / 216 errors / 65% coverage ] ****** [4759 done /4074 queued / 16 running / 216 errors / 65% coverage ] ****** [4760 done /4074 queued / 16 running / 216 errors / 65% coverage ] ****** [4760 done /4074 queued / 16 running / 216 errors / 65% coverage ] ****** [4761 done /4074 queued / 16 running / 216 errors / 65% coverage ] ****** [4761 done /4074 queued / 16 running / 216 errors / 65% coverage ] ****** [4762 done /4073 queued / 16 running / 216 errors / 65% coverage ] ****** [4762 done /4073 queued / 16 running / 216 errors / 65% coverage ] ****** [4763 done /4073 queued / 16 running / 216 errors / 65% coverage ] ****** [4763 done /4073 queued / 16 running / 216 errors / 65% coverage ] ****** [4764 done /4073 queued / 16 running / 216 errors / 65% coverage ] ****** [4764 done /4073 queued / 16 running / 216 errors / 65% coverage ] ****** [4765 done /4074 queued / 16 running / 216 errors / 65% coverage ] ****** [4765 done /4074 queued / 16 running / 216 errors / 65% coverage ] ****** [4766 done /4076 queued / 16 running / 216 errors / 65% coverage ] ****** [4766 done /4076 queued / 16 running / 216 errors / 65% coverage ] ****** [4767 done /4075 queued / 16 running / 216 errors / 65% coverage ] ****** [4767 done /4075 queued / 16 running / 216 errors / 65% coverage ] ****** [4768 done /4074 queued / 16 running / 216 errors / 65% coverage ] ****** [4768 done /4074 queued / 16 running / 216 errors / 65% coverage ] ****** [4769 done /4073 queued / 16 running / 216 errors / 65% coverage ] ****** [4769 done /4073 queued / 16 running / 216 errors / 65% coverage ] ****** [4770 done /4073 queued / 16 running / 216 errors / 65% coverage ] ****** [4770 done /4073 queued / 16 running / 216 errors / 65% coverage ] ****** [4771 done /4073 queued / 16 running / 216 errors / 65% coverage ] ****** [4771 done /4073 queued / 16 running / 216 errors / 65% coverage ] ****** [4772 done /4074 queued / 16 running / 216 errors / 65% coverage ] ****** [4772 done /4074 queued / 16 running / 216 errors / 65% coverage ] ****** [4773 done /4074 queued / 16 running / 216 errors / 65% coverage ] ****** [4773 done /4074 queued / 16 running / 216 errors / 65% coverage ] ****** [4774 done /4074 queued / 16 running / 216 errors / 65% coverage ] ****** [4774 done /4074 queued / 16 running / 216 errors / 65% coverage ] ****** [4775 done /4073 queued / 16 running / 216 errors / 65% coverage ] ****** [4775 done /4073 queued / 16 running / 216 errors / 65% coverage ] ****** [4776 done /4076 queued / 16 running / 216 errors / 65% coverage ] ****** [4776 done /4076 queued / 16 running / 216 errors / 65% coverage ] ****** [4777 done /4079 queued / 16 running / 216 errors / 65% coverage ] ****** [4777 done /4079 queued / 16 running / 216 errors / 65% coverage ] ****** [4778 done /4083 queued / 16 running / 216 errors / 65% coverage ] ****** [4778 done /4083 queued / 16 running / 216 errors / 65% coverage ] ****** [4779 done /4083 queued / 16 running / 217 errors / 65% coverage ] ****** [4779 done /4083 queued / 16 running / 217 errors / 65% coverage ] ****** [4780 done /4084 queued / 16 running / 217 errors / 65% coverage ] ****** [4780 done /4084 queued / 16 running / 217 errors / 65% coverage ] ****** [4781 done /4083 queued / 16 running / 217 errors / 65% coverage ] ****** [4781 done /4083 queued / 16 running / 217 errors / 65% coverage ] ****** [4782 done /4084 queued / 16 running / 218 errors / 65% coverage ] ****** [4782 done /4084 queued / 16 running / 218 errors / 65% coverage ] ****** [4783 done /4085 queued / 16 running / 218 errors / 65% coverage ] ****** [4783 done /4085 queued / 16 running / 218 errors / 65% coverage ] ****** [4784 done /4089 queued / 16 running / 218 errors / 65% coverage ] ****** [4784 done /4089 queued / 16 running / 218 errors / 65% coverage ] ****** [4785 done /4091 queued / 16 running / 219 errors / 65% coverage ] ****** [4785 done /4091 queued / 16 running / 219 errors / 65% coverage ] ****** [4786 done /4091 queued / 16 running / 220 errors / 65% coverage ] ****** [4786 done /4091 queued / 16 running / 220 errors / 65% coverage ] ****** [4787 done /4094 queued / 16 running / 220 errors / 65% coverage ] ****** [4787 done /4094 queued / 16 running / 220 errors / 65% coverage ] ****** [4788 done /4099 queued / 16 running / 220 errors / 65% coverage ] ****** [4788 done /4099 queued / 16 running / 220 errors / 65% coverage ] ****** [4789 done /4101 queued / 16 running / 220 errors / 65% coverage ] ****** [4789 done /4101 queued / 16 running / 220 errors / 65% coverage ] ****** [4790 done /4102 queued / 16 running / 220 errors / 65% coverage ] ****** [4790 done /4102 queued / 16 running / 220 errors / 65% coverage ] ****** [4791 done /4101 queued / 16 running / 220 errors / 65% coverage ] ****** [4791 done /4101 queued / 16 running / 220 errors / 65% coverage ] ****** [4792 done /4102 queued / 16 running / 220 errors / 65% coverage ] ****** [4792 done /4102 queued / 16 running / 220 errors / 65% coverage ] ****** [4793 done /4102 queued / 16 running / 220 errors / 65% coverage ] ****** [4793 done /4102 queued / 16 running / 220 errors / 65% coverage ] ****** [4794 done /4101 queued / 16 running / 220 errors / 65% coverage ] ****** [4794 done /4101 queued / 16 running / 220 errors / 65% coverage ] ****** [4795 done /4101 queued / 16 running / 220 errors / 65% coverage ] ****** [4795 done /4101 queued / 16 running / 220 errors / 65% coverage ] ****** [4796 done /4100 queued / 16 running / 220 errors / 65% coverage ] ****** [4796 done /4100 queued / 16 running / 220 errors / 65% coverage ] ****** [4797 done /4101 queued / 16 running / 220 errors / 65% coverage ] ****** [4797 done /4101 queued / 16 running / 220 errors / 65% coverage ] ****** [4798 done /4101 queued / 16 running / 220 errors / 65% coverage ] ****** [4798 done /4101 queued / 16 running / 220 errors / 65% coverage ] ****** [4799 done /4102 queued / 16 running / 220 errors / 65% coverage ] ****** [4799 done /4102 queued / 16 running / 220 errors / 65% coverage ] ****** [4800 done /4103 queued / 16 running / 220 errors / 65% coverage ] ****** [4800 done /4103 queued / 16 running / 220 errors / 65% coverage ] ****** [4801 done /4102 queued / 16 running / 220 errors / 65% coverage ] ****** [4801 done /4102 queued / 16 running / 220 errors / 65% coverage ] ****** [4802 done /4102 queued / 16 running / 220 errors / 65% coverage ] ****** [4802 done /4102 queued / 16 running / 220 errors / 65% coverage ] ****** [4803 done /4103 queued / 16 running / 220 errors / 65% coverage ] ****** [4803 done /4103 queued / 16 running / 220 errors / 65% coverage ] ****** [4804 done /4105 queued / 16 running / 220 errors / 65% coverage ] ****** [4804 done /4105 queued / 16 running / 220 errors / 65% coverage ] ****** [4805 done /4104 queued / 16 running / 220 errors / 65% coverage ] ****** [4805 done /4104 queued / 16 running / 220 errors / 65% coverage ] ****** [4806 done /4103 queued / 16 running / 220 errors / 65% coverage ] ****** [4806 done /4103 queued / 16 running / 220 errors / 65% coverage ] ****** [4807 done /4103 queued / 16 running / 220 errors / 65% coverage ] ****** [4807 done /4103 queued / 16 running / 220 errors / 65% coverage ] ****** [4808 done /4105 queued / 16 running / 220 errors / 65% coverage ] ****** [4808 done /4105 queued / 16 running / 220 errors / 65% coverage ] ****** [4809 done /4106 queued / 16 running / 220 errors / 65% coverage ] ****** [4809 done /4106 queued / 16 running / 220 errors / 65% coverage ] ****** [4810 done /4108 queued / 16 running / 220 errors / 65% coverage ] ****** [4810 done /4108 queued / 16 running / 220 errors / 65% coverage ] ****** [4811 done /4111 queued / 16 running / 220 errors / 65% coverage ] ****** [4811 done /4111 queued / 16 running / 220 errors / 65% coverage ] ****** [4812 done /4112 queued / 16 running / 220 errors / 65% coverage ] ****** [4812 done /4112 queued / 16 running / 220 errors / 65% coverage ] ****** [4813 done /4113 queued / 16 running / 220 errors / 65% coverage ] ****** [4813 done /4113 queued / 16 running / 220 errors / 65% coverage ] ****** [4814 done /4117 queued / 16 running / 220 errors / 65% coverage ] ****** [4814 done /4117 queued / 16 running / 220 errors / 65% coverage ] ****** [4815 done /4119 queued / 16 running / 220 errors / 65% coverage ] ****** [4815 done /4119 queued / 16 running / 220 errors / 65% coverage ] ****** [4816 done /4120 queued / 16 running / 220 errors / 65% coverage ] ****** [4816 done /4120 queued / 16 running / 220 errors / 65% coverage ] ****** [4817 done /4122 queued / 16 running / 220 errors / 65% coverage ] ****** [4817 done /4122 queued / 16 running / 220 errors / 65% coverage ] ****** [4818 done /4124 queued / 16 running / 220 errors / 65% coverage ] ****** [4818 done /4124 queued / 16 running / 220 errors / 65% coverage ] ****** [4819 done /4125 queued / 16 running / 220 errors / 65% coverage ] ****** [4819 done /4125 queued / 16 running / 220 errors / 65% coverage ] ****** [4820 done /4126 queued / 16 running / 220 errors / 65% coverage ] ****** [4820 done /4126 queued / 16 running / 220 errors / 65% coverage ] ****** [4821 done /4130 queued / 16 running / 220 errors / 65% coverage ] ****** [4821 done /4130 queued / 16 running / 220 errors / 65% coverage ] ****** [4822 done /4131 queued / 16 running / 221 errors / 65% coverage ] ****** [4822 done /4131 queued / 16 running / 221 errors / 65% coverage ] ****** [4823 done /4135 queued / 16 running / 221 errors / 65% coverage ] ****** [4823 done /4135 queued / 16 running / 221 errors / 65% coverage ] ****** [4824 done /4139 queued / 16 running / 221 errors / 65% coverage ] ****** [4824 done /4139 queued / 16 running / 221 errors / 65% coverage ] ****** [4825 done /4139 queued / 16 running / 222 errors / 65% coverage ] ****** [4825 done /4139 queued / 16 running / 222 errors / 65% coverage ] ****** [4826 done /4140 queued / 16 running / 222 errors / 65% coverage ] ****** [4826 done /4140 queued / 16 running / 222 errors / 65% coverage ] ****** [4827 done /4140 queued / 16 running / 222 errors / 65% coverage ] ****** [4827 done /4140 queued / 16 running / 222 errors / 65% coverage ] ****** [4828 done /4140 queued / 16 running / 222 errors / 65% coverage ] ****** [4828 done /4140 queued / 16 running / 222 errors / 65% coverage ] ****** [4829 done /4140 queued / 16 running / 222 errors / 65% coverage ] ****** [4829 done /4140 queued / 16 running / 222 errors / 65% coverage ] ****** [4830 done /4141 queued / 16 running / 222 errors / 65% coverage ] ****** [4830 done /4141 queued / 16 running / 222 errors / 65% coverage ] ****** [4831 done /4141 queued / 16 running / 222 errors / 65% coverage ] ****** [4831 done /4141 queued / 16 running / 222 errors / 65% coverage ] ****** [4832 done /4141 queued / 16 running / 222 errors / 65% coverage ] ****** [4832 done /4141 queued / 16 running / 222 errors / 65% coverage ] ****** [4833 done /4140 queued / 16 running / 222 errors / 65% coverage ] ****** [4833 done /4140 queued / 16 running / 222 errors / 65% coverage ] ****** [4834 done /4141 queued / 16 running / 223 errors / 65% coverage ] ****** [4834 done /4141 queued / 16 running / 223 errors / 65% coverage ] ****** [4835 done /4140 queued / 16 running / 223 errors / 65% coverage ] ****** [4835 done /4140 queued / 16 running / 223 errors / 65% coverage ] ****** [4836 done /4140 queued / 16 running / 223 errors / 65% coverage ] ****** [4836 done /4140 queued / 16 running / 223 errors / 65% coverage ] ****** [4837 done /4140 queued / 16 running / 223 errors / 65% coverage ] ****** [4837 done /4140 queued / 16 running / 223 errors / 65% coverage ] ****** [4838 done /4141 queued / 16 running / 223 errors / 65% coverage ] ****** [4838 done /4141 queued / 16 running / 223 errors / 65% coverage ] ****** [4839 done /4142 queued / 16 running / 223 errors / 65% coverage ] ****** [4839 done /4142 queued / 16 running / 223 errors / 65% coverage ] ****** [4840 done /4142 queued / 16 running / 223 errors / 65% coverage ] ****** [4840 done /4142 queued / 16 running / 223 errors / 65% coverage ] ****** [4841 done /4142 queued / 16 running / 223 errors / 65% coverage ] ****** [4841 done /4142 queued / 16 running / 223 errors / 65% coverage ] ****** [4842 done /4143 queued / 16 running / 223 errors / 65% coverage ] ****** [4842 done /4143 queued / 16 running / 223 errors / 65% coverage ] ****** [4843 done /4144 queued / 16 running / 223 errors / 65% coverage ] ****** [4843 done /4144 queued / 16 running / 223 errors / 65% coverage ] ****** [4844 done /4144 queued / 16 running / 223 errors / 65% coverage ] ****** [4844 done /4144 queued / 16 running / 223 errors / 65% coverage ] ****** [4845 done /4144 queued / 16 running / 223 errors / 65% coverage ] ****** [4845 done /4144 queued / 16 running / 223 errors / 65% coverage ] ****** [4846 done /4144 queued / 16 running / 223 errors / 65% coverage ] ****** [4846 done /4144 queued / 16 running / 223 errors / 65% coverage ] ****** [4847 done /4144 queued / 16 running / 223 errors / 65% coverage ] ****** [4847 done /4144 queued / 16 running / 223 errors / 65% coverage ] ****** [4848 done /4144 queued / 16 running / 223 errors / 65% coverage ] ****** [4848 done /4144 queued / 16 running / 223 errors / 65% coverage ] ****** [4849 done /4146 queued / 16 running / 223 errors / 65% coverage ] ****** [4849 done /4146 queued / 16 running / 223 errors / 65% coverage ] ****** [4850 done /4150 queued / 16 running / 223 errors / 65% coverage ] ****** [4850 done /4150 queued / 16 running / 223 errors / 65% coverage ] ****** [4851 done /4151 queued / 16 running / 223 errors / 65% coverage ] ****** [4851 done /4151 queued / 16 running / 223 errors / 65% coverage ] ****** [4852 done /4153 queued / 16 running / 223 errors / 65% coverage ] ****** [4852 done /4153 queued / 16 running / 223 errors / 65% coverage ] ****** [4853 done /4153 queued / 16 running / 223 errors / 65% coverage ] ****** [4853 done /4153 queued / 16 running / 223 errors / 65% coverage ] ****** [4854 done /4153 queued / 16 running / 223 errors / 65% coverage ] ****** [4854 done /4153 queued / 16 running / 223 errors / 65% coverage ] ****** [4855 done /4155 queued / 16 running / 223 errors / 65% coverage ] ****** [4855 done /4155 queued / 16 running / 223 errors / 65% coverage ] ****** [4856 done /4156 queued / 16 running / 223 errors / 65% coverage ] ****** [4856 done /4156 queued / 16 running / 223 errors / 65% coverage ] ****** [4857 done /4160 queued / 16 running / 223 errors / 65% coverage ] ****** [4857 done /4160 queued / 16 running / 223 errors / 65% coverage ] ****** [4858 done /4164 queued / 16 running / 223 errors / 65% coverage ] ****** [4858 done /4164 queued / 16 running / 223 errors / 65% coverage ] ****** [4859 done /4165 queued / 16 running / 223 errors / 65% coverage ] ****** [4859 done /4165 queued / 16 running / 223 errors / 65% coverage ] ****** [4860 done /4170 queued / 16 running / 223 errors / 65% coverage ] ****** [4860 done /4170 queued / 16 running / 223 errors / 65% coverage ] ****** [4861 done /4172 queued / 16 running / 223 errors / 65% coverage ] ****** [4861 done /4172 queued / 16 running / 223 errors / 65% coverage ] ****** [4862 done /4173 queued / 16 running / 223 errors / 65% coverage ] ****** [4862 done /4173 queued / 16 running / 223 errors / 65% coverage ] ****** [4863 done /4174 queued / 16 running / 223 errors / 65% coverage ] ****** [4863 done /4174 queued / 16 running / 223 errors / 65% coverage ] ****** [4864 done /4177 queued / 16 running / 223 errors / 65% coverage ] ****** [4864 done /4177 queued / 16 running / 223 errors / 65% coverage ] ****** [4865 done /4177 queued / 16 running / 223 errors / 65% coverage ] ****** [4865 done /4177 queued / 16 running / 223 errors / 65% coverage ] ****** [4866 done /4177 queued / 16 running / 223 errors / 65% coverage ] ****** [4866 done /4177 queued / 16 running / 223 errors / 65% coverage ] ****** [4867 done /4178 queued / 16 running / 223 errors / 65% coverage ] ****** [4867 done /4178 queued / 16 running / 223 errors / 65% coverage ] ****** [4868 done /4179 queued / 16 running / 223 errors / 65% coverage ] ****** [4868 done /4179 queued / 16 running / 223 errors / 65% coverage ] ****** [4869 done /4179 queued / 16 running / 223 errors / 65% coverage ] ****** [4869 done /4179 queued / 16 running / 223 errors / 65% coverage ] ****** [4870 done /4179 queued / 16 running / 223 errors / 65% coverage ] ****** [4870 done /4179 queued / 16 running / 223 errors / 65% coverage ] ****** [4871 done /4180 queued / 16 running / 223 errors / 65% coverage ] ****** [4871 done /4180 queued / 16 running / 223 errors / 65% coverage ] ****** [4872 done /4181 queued / 16 running / 223 errors / 65% coverage ] ****** [4872 done /4181 queued / 16 running / 223 errors / 65% coverage ] ****** [4873 done /4181 queued / 16 running / 223 errors / 65% coverage ] ****** [4873 done /4181 queued / 16 running / 223 errors / 65% coverage ] ****** [4874 done /4181 queued / 16 running / 223 errors / 65% coverage ] ****** [4874 done /4181 queued / 16 running / 223 errors / 65% coverage ] ****** [4875 done /4181 queued / 16 running / 223 errors / 65% coverage ] ****** [4875 done /4181 queued / 16 running / 223 errors / 65% coverage ] ****** [4876 done /4182 queued / 16 running / 223 errors / 65% coverage ] ****** [4876 done /4182 queued / 16 running / 223 errors / 65% coverage ] ****** [4877 done /4183 queued / 16 running / 223 errors / 65% coverage ] ****** [4877 done /4183 queued / 16 running / 223 errors / 65% coverage ] ****** [4878 done /4184 queued / 16 running / 223 errors / 65% coverage ] ****** [4878 done /4184 queued / 16 running / 223 errors / 65% coverage ] ****** [4879 done /4183 queued / 16 running / 223 errors / 65% coverage ] ****** [4879 done /4183 queued / 16 running / 223 errors / 65% coverage ] ****** [4880 done /4183 queued / 16 running / 223 errors / 65% coverage ] ****** [4880 done /4183 queued / 16 running / 223 errors / 65% coverage ] ****** [4881 done /4183 queued / 16 running / 223 errors / 65% coverage ] ****** [4881 done /4183 queued / 16 running / 223 errors / 65% coverage ] ****** [4882 done /4183 queued / 16 running / 223 errors / 65% coverage ] ****** [4882 done /4183 queued / 16 running / 223 errors / 65% coverage ] ****** [4883 done /4184 queued / 16 running / 224 errors / 65% coverage ] ****** [4883 done /4184 queued / 16 running / 224 errors / 65% coverage ] ****** [4884 done /4186 queued / 16 running / 224 errors / 65% coverage ] ****** [4884 done /4186 queued / 16 running / 224 errors / 65% coverage ] ****** [4885 done /4186 queued / 16 running / 224 errors / 65% coverage ] ****** [4885 done /4186 queued / 16 running / 224 errors / 65% coverage ] ****** [4886 done /4186 queued / 16 running / 224 errors / 65% coverage ] ****** [4886 done /4186 queued / 16 running / 224 errors / 65% coverage ] ****** [4887 done /4185 queued / 16 running / 224 errors / 65% coverage ] ****** [4887 done /4185 queued / 16 running / 224 errors / 65% coverage ] ****** [4888 done /4186 queued / 16 running / 224 errors / 65% coverage ] ****** [4888 done /4186 queued / 16 running / 224 errors / 65% coverage ] ****** [4889 done /4187 queued / 16 running / 224 errors / 65% coverage ] ****** [4889 done /4187 queued / 16 running / 224 errors / 65% coverage ] ****** [4890 done /4188 queued / 16 running / 224 errors / 65% coverage ] ****** [4890 done /4188 queued / 16 running / 224 errors / 65% coverage ] ****** [4891 done /4187 queued / 16 running / 224 errors / 65% coverage ] ****** [4891 done /4187 queued / 16 running / 224 errors / 65% coverage ] ****** [4892 done /4189 queued / 16 running / 224 errors / 65% coverage ] ****** [4892 done /4189 queued / 16 running / 224 errors / 65% coverage ] ****** [4893 done /4188 queued / 16 running / 224 errors / 65% coverage ] ****** [4893 done /4188 queued / 16 running / 224 errors / 65% coverage ] ****** [4894 done /4191 queued / 16 running / 224 errors / 65% coverage ] ****** [4894 done /4191 queued / 16 running / 224 errors / 65% coverage ] ****** [4895 done /4190 queued / 16 running / 224 errors / 65% coverage ] ****** [4895 done /4190 queued / 16 running / 224 errors / 65% coverage ] ****** [4896 done /4191 queued / 16 running / 224 errors / 65% coverage ] ****** [4896 done /4191 queued / 16 running / 224 errors / 65% coverage ] ****** [4897 done /4195 queued / 16 running / 224 errors / 65% coverage ] ****** [4897 done /4195 queued / 16 running / 224 errors / 65% coverage ] ****** [4898 done /4199 queued / 16 running / 224 errors / 65% coverage ] ****** [4898 done /4199 queued / 16 running / 224 errors / 65% coverage ] ****** [4899 done /4200 queued / 16 running / 224 errors / 65% coverage ] ****** [4899 done /4200 queued / 16 running / 224 errors / 65% coverage ] ****** [4900 done /4201 queued / 16 running / 224 errors / 65% coverage ] ****** [4900 done /4201 queued / 16 running / 224 errors / 65% coverage ] ****** [4901 done /4203 queued / 16 running / 224 errors / 65% coverage ] ****** [4901 done /4203 queued / 16 running / 224 errors / 65% coverage ] ****** [4902 done /4203 queued / 16 running / 224 errors / 65% coverage ] ****** [4902 done /4203 queued / 16 running / 224 errors / 65% coverage ] ****** [4903 done /4206 queued / 16 running / 224 errors / 65% coverage ] ****** [4903 done /4206 queued / 16 running / 224 errors / 65% coverage ] ****** [4904 done /4209 queued / 16 running / 224 errors / 65% coverage ] ****** [4904 done /4209 queued / 16 running / 224 errors / 65% coverage ] ****** [4905 done /4212 queued / 16 running / 224 errors / 65% coverage ] ****** [4905 done /4212 queued / 16 running / 224 errors / 65% coverage ] ****** [4906 done /4213 queued / 16 running / 224 errors / 65% coverage ] ****** [4906 done /4213 queued / 16 running / 224 errors / 65% coverage ] ****** [4907 done /4214 queued / 16 running / 224 errors / 65% coverage ] ****** [4907 done /4214 queued / 16 running / 224 errors / 65% coverage ] ****** [4908 done /4218 queued / 16 running / 224 errors / 65% coverage ] ****** [4908 done /4218 queued / 16 running / 224 errors / 65% coverage ] ****** [4909 done /4219 queued / 16 running / 224 errors / 65% coverage ] ****** [4909 done /4219 queued / 16 running / 224 errors / 65% coverage ] ****** [4910 done /4221 queued / 16 running / 224 errors / 65% coverage ] ****** [4910 done /4221 queued / 16 running / 224 errors / 65% coverage ] ****** [4911 done /4224 queued / 16 running / 224 errors / 65% coverage ] ****** [4911 done /4224 queued / 16 running / 224 errors / 65% coverage ] ****** [4912 done /4224 queued / 16 running / 224 errors / 65% coverage ] ****** [4912 done /4224 queued / 16 running / 224 errors / 65% coverage ] ****** [4913 done /4225 queued / 16 running / 224 errors / 65% coverage ] ****** [4913 done /4225 queued / 16 running / 224 errors / 65% coverage ] ****** [4914 done /4226 queued / 16 running / 224 errors / 65% coverage ] ****** [4914 done /4226 queued / 16 running / 224 errors / 65% coverage ] ****** [4915 done /4226 queued / 16 running / 224 errors / 65% coverage ] ****** [4915 done /4226 queued / 16 running / 224 errors / 65% coverage ] ****** [4916 done /4226 queued / 16 running / 224 errors / 65% coverage ] ****** [4916 done /4226 queued / 16 running / 224 errors / 65% coverage ] ****** [4917 done /4226 queued / 16 running / 224 errors / 65% coverage ] ****** [4917 done /4226 queued / 16 running / 224 errors / 65% coverage ] ****** [4918 done /4226 queued / 16 running / 224 errors / 65% coverage ] ****** [4918 done /4226 queued / 16 running / 224 errors / 65% coverage ] ****** [4919 done /4225 queued / 16 running / 224 errors / 65% coverage ] ****** [4919 done /4225 queued / 16 running / 224 errors / 65% coverage ] ****** [4920 done /4224 queued / 16 running / 224 errors / 65% coverage ] ****** [4920 done /4224 queued / 16 running / 224 errors / 65% coverage ] ****** [4921 done /4224 queued / 16 running / 224 errors / 65% coverage ] ****** [4921 done /4224 queued / 16 running / 224 errors / 65% coverage ] ****** [4922 done /4224 queued / 16 running / 224 errors / 65% coverage ] ****** [4922 done /4224 queued / 16 running / 224 errors / 65% coverage ] ****** [4923 done /4223 queued / 16 running / 224 errors / 65% coverage ] ****** [4923 done /4223 queued / 16 running / 224 errors / 65% coverage ] ****** [4924 done /4224 queued / 16 running / 224 errors / 65% coverage ] ****** [4924 done /4224 queued / 16 running / 224 errors / 65% coverage ] ****** [4925 done /4225 queued / 16 running / 224 errors / 65% coverage ] ****** [4925 done /4225 queued / 16 running / 224 errors / 65% coverage ] ****** [4926 done /4225 queued / 16 running / 224 errors / 65% coverage ] ****** [4926 done /4225 queued / 16 running / 224 errors / 65% coverage ] ****** [4927 done /4224 queued / 16 running / 224 errors / 65% coverage ] ****** [4927 done /4224 queued / 16 running / 224 errors / 65% coverage ] ****** [4928 done /4224 queued / 16 running / 224 errors / 65% coverage ] ****** [4928 done /4224 queued / 16 running / 224 errors / 65% coverage ] ****** [4929 done /4223 queued / 16 running / 224 errors / 65% coverage ] ****** [4929 done /4223 queued / 16 running / 224 errors / 65% coverage ] ****** [4930 done /4223 queued / 16 running / 224 errors / 65% coverage ] ****** [4930 done /4223 queued / 16 running / 224 errors / 65% coverage ] ****** [4931 done /4222 queued / 16 running / 224 errors / 65% coverage ] ****** [4931 done /4222 queued / 16 running / 224 errors / 65% coverage ] ****** [4932 done /4222 queued / 16 running / 224 errors / 65% coverage ] ****** [4932 done /4222 queued / 16 running / 224 errors / 65% coverage ] ****** [4933 done /4221 queued / 16 running / 224 errors / 65% coverage ] ****** [4933 done /4221 queued / 16 running / 224 errors / 65% coverage ] ****** [4934 done /4221 queued / 16 running / 224 errors / 65% coverage ] ****** [4934 done /4221 queued / 16 running / 224 errors / 65% coverage ] ****** [4935 done /4220 queued / 16 running / 224 errors / 65% coverage ] ****** [4935 done /4220 queued / 16 running / 224 errors / 65% coverage ] ****** [4936 done /4219 queued / 16 running / 224 errors / 65% coverage ] ****** [4936 done /4219 queued / 16 running / 224 errors / 65% coverage ] ****** [4937 done /4218 queued / 16 running / 224 errors / 65% coverage ] ****** [4937 done /4218 queued / 16 running / 224 errors / 65% coverage ] ****** [4938 done /4217 queued / 16 running / 224 errors / 65% coverage ] ****** [4938 done /4217 queued / 16 running / 224 errors / 65% coverage ] ****** [4939 done /4217 queued / 16 running / 224 errors / 65% coverage ] ****** [4939 done /4217 queued / 16 running / 224 errors / 65% coverage ] ****** [4940 done /4217 queued / 16 running / 224 errors / 65% coverage ] ****** [4940 done /4217 queued / 16 running / 224 errors / 65% coverage ] ****** [4941 done /4217 queued / 16 running / 224 errors / 65% coverage ] ****** [4941 done /4217 queued / 16 running / 224 errors / 65% coverage ] ****** [4942 done /4216 queued / 16 running / 224 errors / 65% coverage ] ****** [4942 done /4216 queued / 16 running / 224 errors / 65% coverage ] ****** [4943 done /4215 queued / 16 running / 224 errors / 65% coverage ] ****** [4943 done /4215 queued / 16 running / 224 errors / 65% coverage ] ****** [4944 done /4214 queued / 16 running / 224 errors / 65% coverage ] ****** [4944 done /4214 queued / 16 running / 224 errors / 65% coverage ] ****** [4945 done /4214 queued / 16 running / 224 errors / 65% coverage ] ****** [4945 done /4214 queued / 16 running / 224 errors / 65% coverage ] ****** [4946 done /4217 queued / 16 running / 224 errors / 65% coverage ] ****** [4946 done /4217 queued / 16 running / 224 errors / 65% coverage ] ****** [4947 done /4219 queued / 16 running / 224 errors / 65% coverage ] ****** [4947 done /4219 queued / 16 running / 224 errors / 65% coverage ] ****** [4948 done /4220 queued / 16 running / 224 errors / 65% coverage ] ****** [4948 done /4220 queued / 16 running / 224 errors / 65% coverage ] ****** [4949 done /4221 queued / 16 running / 224 errors / 65% coverage ] ****** [4949 done /4221 queued / 16 running / 224 errors / 65% coverage ] ****** [4950 done /4222 queued / 16 running / 224 errors / 65% coverage ] ****** [4950 done /4222 queued / 16 running / 224 errors / 65% coverage ] ****** [4951 done /4226 queued / 16 running / 224 errors / 65% coverage ] ****** [4951 done /4226 queued / 16 running / 224 errors / 65% coverage ] ****** [4952 done /4227 queued / 16 running / 224 errors / 65% coverage ] ****** [4952 done /4227 queued / 16 running / 224 errors / 65% coverage ] ****** [4953 done /4226 queued / 16 running / 224 errors / 65% coverage ] ****** [4953 done /4226 queued / 16 running / 224 errors / 65% coverage ] ****** [4954 done /4227 queued / 16 running / 224 errors / 65% coverage ] ****** [4954 done /4227 queued / 16 running / 224 errors / 65% coverage ] ****** [4955 done /4227 queued / 16 running / 224 errors / 65% coverage ] ****** [4955 done /4227 queued / 16 running / 224 errors / 65% coverage ] ****** [4956 done /4231 queued / 16 running / 224 errors / 65% coverage ] ****** [4956 done /4231 queued / 16 running / 224 errors / 65% coverage ] ****** [4957 done /4233 queued / 16 running / 224 errors / 65% coverage ] ****** [4957 done /4233 queued / 16 running / 224 errors / 65% coverage ] ****** [4958 done /4234 queued / 16 running / 224 errors / 65% coverage ] ****** [4958 done /4234 queued / 16 running / 224 errors / 65% coverage ] ****** [4959 done /4235 queued / 16 running / 224 errors / 65% coverage ] ****** [4959 done /4235 queued / 16 running / 224 errors / 65% coverage ] ****** [4960 done /4236 queued / 16 running / 224 errors / 65% coverage ] ****** [4960 done /4236 queued / 16 running / 224 errors / 65% coverage ] ****** [4961 done /4236 queued / 16 running / 224 errors / 65% coverage ] ****** [4961 done /4236 queued / 16 running / 224 errors / 65% coverage ] ****** [4962 done /4237 queued / 16 running / 224 errors / 65% coverage ] ****** [4962 done /4237 queued / 16 running / 224 errors / 65% coverage ] ****** [4963 done /4236 queued / 16 running / 224 errors / 65% coverage ] ****** [4963 done /4236 queued / 16 running / 224 errors / 65% coverage ] ****** [4964 done /4235 queued / 16 running / 224 errors / 65% coverage ] ****** [4964 done /4235 queued / 16 running / 224 errors / 65% coverage ] ****** [4965 done /4235 queued / 16 running / 224 errors / 65% coverage ] ****** [4965 done /4235 queued / 16 running / 224 errors / 65% coverage ] ****** [4966 done /4236 queued / 16 running / 224 errors / 65% coverage ] ****** [4966 done /4236 queued / 16 running / 224 errors / 65% coverage ] ****** [4967 done /4236 queued / 16 running / 224 errors / 65% coverage ] ****** [4967 done /4236 queued / 16 running / 224 errors / 65% coverage ] ****** [4968 done /4237 queued / 16 running / 224 errors / 65% coverage ] ****** [4968 done /4237 queued / 16 running / 224 errors / 65% coverage ] ****** [4969 done /4236 queued / 16 running / 224 errors / 65% coverage ] ****** [4969 done /4236 queued / 16 running / 224 errors / 65% coverage ] ****** [4970 done /4236 queued / 16 running / 224 errors / 65% coverage ] ****** [4970 done /4236 queued / 16 running / 224 errors / 65% coverage ] ****** [4971 done /4235 queued / 16 running / 224 errors / 65% coverage ] ****** [4971 done /4235 queued / 16 running / 224 errors / 65% coverage ] ****** [4972 done /4236 queued / 16 running / 224 errors / 65% coverage ] ****** [4972 done /4236 queued / 16 running / 224 errors / 65% coverage ] ****** [4973 done /4236 queued / 16 running / 224 errors / 65% coverage ] ****** [4973 done /4236 queued / 16 running / 224 errors / 65% coverage ] ****** [4974 done /4235 queued / 16 running / 224 errors / 65% coverage ] ****** [4974 done /4235 queued / 16 running / 224 errors / 65% coverage ] ****** [4975 done /4235 queued / 16 running / 224 errors / 65% coverage ] ****** [4975 done /4235 queued / 16 running / 224 errors / 65% coverage ] ****** [4976 done /4235 queued / 16 running / 224 errors / 65% coverage ] ****** [4976 done /4235 queued / 16 running / 224 errors / 65% coverage ] ****** [4977 done /4235 queued / 16 running / 224 errors / 65% coverage ] ****** [4977 done /4235 queued / 16 running / 224 errors / 65% coverage ] ****** [4978 done /4240 queued / 16 running / 224 errors / 65% coverage ] ****** [4978 done /4240 queued / 16 running / 224 errors / 65% coverage ] ****** [4979 done /4240 queued / 16 running / 224 errors / 65% coverage ] ****** [4979 done /4240 queued / 16 running / 224 errors / 65% coverage ] ****** [4980 done /4241 queued / 16 running / 224 errors / 65% coverage ] ****** [4980 done /4241 queued / 16 running / 224 errors / 65% coverage ] ****** [4981 done /4241 queued / 16 running / 224 errors / 65% coverage ] ****** [4981 done /4241 queued / 16 running / 224 errors / 65% coverage ] ****** [4982 done /4242 queued / 16 running / 224 errors / 65% coverage ] ****** [4982 done /4242 queued / 16 running / 224 errors / 65% coverage ] ****** [4983 done /4243 queued / 16 running / 224 errors / 65% coverage ] ****** [4983 done /4243 queued / 16 running / 224 errors / 65% coverage ] ****** [4984 done /4242 queued / 16 running / 224 errors / 65% coverage ] ****** [4984 done /4242 queued / 16 running / 224 errors / 65% coverage ] ****** [4985 done /4243 queued / 16 running / 224 errors / 65% coverage ] ****** [4985 done /4243 queued / 16 running / 224 errors / 65% coverage ] ****** [4986 done /4247 queued / 16 running / 224 errors / 65% coverage ] ****** [4986 done /4247 queued / 16 running / 224 errors / 65% coverage ] ****** [4987 done /4251 queued / 16 running / 224 errors / 65% coverage ] ****** [4987 done /4251 queued / 16 running / 224 errors / 65% coverage ] ****** [4988 done /4252 queued / 16 running / 224 errors / 65% coverage ] ****** [4988 done /4252 queued / 16 running / 224 errors / 65% coverage ] ****** [4989 done /4254 queued / 16 running / 224 errors / 65% coverage ] ****** [4989 done /4254 queued / 16 running / 224 errors / 65% coverage ] ****** [4990 done /4257 queued / 16 running / 224 errors / 65% coverage ] ****** [4990 done /4257 queued / 16 running / 224 errors / 65% coverage ] ****** [4991 done /4258 queued / 16 running / 224 errors / 65% coverage ] ****** [4991 done /4258 queued / 16 running / 224 errors / 65% coverage ] ****** [4992 done /4263 queued / 16 running / 224 errors / 65% coverage ] ****** [4992 done /4263 queued / 16 running / 224 errors / 65% coverage ] ****** [4993 done /4264 queued / 16 running / 224 errors / 65% coverage ] ****** [4993 done /4264 queued / 16 running / 224 errors / 65% coverage ] ****** [4994 done /4265 queued / 16 running / 224 errors / 65% coverage ] ****** [4994 done /4265 queued / 16 running / 224 errors / 65% coverage ] ****** [4995 done /4266 queued / 16 running / 224 errors / 65% coverage ] ****** [4995 done /4266 queued / 16 running / 224 errors / 65% coverage ] ****** [4996 done /4265 queued / 16 running / 224 errors / 65% coverage ] ****** [4996 done /4265 queued / 16 running / 224 errors / 65% coverage ] ****** [4997 done /4267 queued / 16 running / 224 errors / 65% coverage ] ****** [4997 done /4267 queued / 16 running / 224 errors / 65% coverage ] ****** [4998 done /4268 queued / 16 running / 224 errors / 65% coverage ] ****** [4998 done /4268 queued / 16 running / 224 errors / 65% coverage ] ****** [4999 done /4269 queued / 16 running / 224 errors / 65% coverage ] ****** [4999 done /4269 queued / 16 running / 224 errors / 65% coverage ] ****** [5000 done /4269 queued / 16 running / 224 errors / 65% coverage ] ****** [5000 done /4269 queued / 16 running / 224 errors / 65% coverage ] ****** [5001 done /4269 queued / 16 running / 224 errors / 65% coverage ] ****** [5001 done /4269 queued / 16 running / 224 errors / 65% coverage ] ****** [5002 done /4269 queued / 16 running / 224 errors / 65% coverage ] ****** [5002 done /4269 queued / 16 running / 224 errors / 65% coverage ] ****** [5003 done /4269 queued / 16 running / 224 errors / 65% coverage ] ****** [5003 done /4269 queued / 16 running / 224 errors / 65% coverage ] ****** [5004 done /4269 queued / 16 running / 224 errors / 65% coverage ] ****** [5004 done /4269 queued / 16 running / 224 errors / 65% coverage ] ****** [5005 done /4270 queued / 16 running / 224 errors / 65% coverage ] ****** [5005 done /4270 queued / 16 running / 224 errors / 65% coverage ] ****** [5006 done /4269 queued / 16 running / 224 errors / 65% coverage ] ****** [5006 done /4269 queued / 16 running / 224 errors / 65% coverage ] ****** [5007 done /4269 queued / 16 running / 224 errors / 65% coverage ] ****** [5007 done /4269 queued / 16 running / 224 errors / 65% coverage ] ****** [5008 done /4270 queued / 16 running / 224 errors / 65% coverage ] ****** [5008 done /4270 queued / 16 running / 224 errors / 65% coverage ] ****** [5009 done /4270 queued / 16 running / 224 errors / 65% coverage ] ****** [5009 done /4270 queued / 16 running / 224 errors / 65% coverage ] ****** [5010 done /4271 queued / 16 running / 224 errors / 65% coverage ] ****** [5010 done /4271 queued / 16 running / 224 errors / 65% coverage ] ****** [5011 done /4270 queued / 16 running / 224 errors / 65% coverage ] ****** [5011 done /4270 queued / 16 running / 224 errors / 65% coverage ] ****** [5012 done /4269 queued / 16 running / 224 errors / 65% coverage ] ****** [5012 done /4269 queued / 16 running / 224 errors / 65% coverage ] ****** [5013 done /4269 queued / 16 running / 224 errors / 65% coverage ] ****** [5013 done /4269 queued / 16 running / 224 errors / 65% coverage ] ****** [5014 done /4268 queued / 16 running / 224 errors / 65% coverage ] ****** [5014 done /4268 queued / 16 running / 224 errors / 65% coverage ] ****** [5015 done /4269 queued / 16 running / 224 errors / 65% coverage ] ****** [5015 done /4269 queued / 16 running / 224 errors / 65% coverage ] ****** [5016 done /4271 queued / 16 running / 224 errors / 65% coverage ] ****** [5016 done /4271 queued / 16 running / 224 errors / 65% coverage ] ****** [5017 done /4271 queued / 16 running / 224 errors / 65% coverage ] ****** [5017 done /4271 queued / 16 running / 224 errors / 65% coverage ] ****** [5018 done /4271 queued / 16 running / 224 errors / 65% coverage ] ****** [5018 done /4271 queued / 16 running / 224 errors / 65% coverage ] ****** [5019 done /4273 queued / 16 running / 224 errors / 65% coverage ] ****** [5019 done /4273 queued / 16 running / 224 errors / 65% coverage ] ****** [5020 done /4273 queued / 16 running / 224 errors / 65% coverage ] ****** [5020 done /4273 queued / 16 running / 224 errors / 65% coverage ] ****** [5021 done /4274 queued / 16 running / 224 errors / 65% coverage ] ****** [5021 done /4274 queued / 16 running / 224 errors / 65% coverage ] ****** [5022 done /4274 queued / 16 running / 224 errors / 65% coverage ] ****** [5022 done /4274 queued / 16 running / 224 errors / 65% coverage ] ****** [5023 done /4276 queued / 16 running / 224 errors / 65% coverage ] ****** [5023 done /4276 queued / 16 running / 224 errors / 65% coverage ] ****** [5024 done /4275 queued / 16 running / 224 errors / 65% coverage ] ****** [5024 done /4275 queued / 16 running / 224 errors / 65% coverage ] ****** [5025 done /4276 queued / 16 running / 224 errors / 65% coverage ] ****** [5025 done /4276 queued / 16 running / 224 errors / 65% coverage ] ****** [5026 done /4279 queued / 16 running / 224 errors / 65% coverage ] ****** [5026 done /4279 queued / 16 running / 224 errors / 65% coverage ] ****** [5027 done /4285 queued / 16 running / 224 errors / 65% coverage ] ****** [5027 done /4285 queued / 16 running / 224 errors / 65% coverage ] ****** [5028 done /4289 queued / 16 running / 224 errors / 65% coverage ] ****** [5028 done /4289 queued / 16 running / 224 errors / 65% coverage ] ****** [5029 done /4292 queued / 16 running / 224 errors / 65% coverage ] ****** [5029 done /4292 queued / 16 running / 224 errors / 65% coverage ] ****** [5030 done /4293 queued / 16 running / 224 errors / 65% coverage ] ****** [5030 done /4293 queued / 16 running / 224 errors / 65% coverage ] ****** [5031 done /4295 queued / 16 running / 224 errors / 65% coverage ] ****** [5031 done /4295 queued / 16 running / 224 errors / 65% coverage ] ****** [5032 done /4296 queued / 16 running / 224 errors / 65% coverage ] ****** [5032 done /4296 queued / 16 running / 224 errors / 65% coverage ] ****** [5033 done /4299 queued / 16 running / 224 errors / 65% coverage ] ****** [5033 done /4299 queued / 16 running / 224 errors / 65% coverage ] ****** [5034 done /4302 queued / 16 running / 224 errors / 65% coverage ] ****** [5034 done /4302 queued / 16 running / 224 errors / 65% coverage ] ****** [5035 done /4303 queued / 16 running / 224 errors / 65% coverage ] ****** [5035 done /4303 queued / 16 running / 224 errors / 65% coverage ] ****** [5036 done /4303 queued / 16 running / 224 errors / 65% coverage ] ****** [5036 done /4303 queued / 16 running / 224 errors / 65% coverage ] ****** [5037 done /4303 queued / 16 running / 224 errors / 65% coverage ] ****** [5037 done /4303 queued / 16 running / 224 errors / 65% coverage ] ****** [5038 done /4302 queued / 16 running / 224 errors / 65% coverage ] ****** [5038 done /4302 queued / 16 running / 224 errors / 65% coverage ] ****** [5039 done /4303 queued / 16 running / 224 errors / 65% coverage ] ****** [5039 done /4303 queued / 16 running / 224 errors / 65% coverage ] ****** [5040 done /4306 queued / 16 running / 224 errors / 65% coverage ] ****** [5040 done /4306 queued / 16 running / 224 errors / 65% coverage ] ****** [5041 done /4306 queued / 16 running / 224 errors / 65% coverage ] ****** [5041 done /4306 queued / 16 running / 224 errors / 65% coverage ] ****** [5042 done /4307 queued / 16 running / 224 errors / 65% coverage ] ****** [5042 done /4307 queued / 16 running / 224 errors / 65% coverage ] ****** [5043 done /4309 queued / 16 running / 224 errors / 65% coverage ] ****** [5043 done /4309 queued / 16 running / 224 errors / 65% coverage ] ****** [5044 done /4310 queued / 16 running / 224 errors / 65% coverage ] ****** [5044 done /4310 queued / 16 running / 224 errors / 65% coverage ] ****** [5045 done /4312 queued / 16 running / 224 errors / 65% coverage ] ****** [5045 done /4312 queued / 16 running / 224 errors / 65% coverage ] ****** [5046 done /4312 queued / 16 running / 224 errors / 65% coverage ] ****** [5046 done /4312 queued / 16 running / 224 errors / 65% coverage ] ****** [5047 done /4312 queued / 16 running / 224 errors / 65% coverage ] ****** [5047 done /4312 queued / 16 running / 224 errors / 65% coverage ] ****** [5048 done /4315 queued / 16 running / 224 errors / 65% coverage ] ****** [5048 done /4315 queued / 16 running / 224 errors / 65% coverage ] ****** [5049 done /4315 queued / 16 running / 224 errors / 65% coverage ] ****** [5049 done /4315 queued / 16 running / 224 errors / 65% coverage ] ****** [5050 done /4314 queued / 16 running / 224 errors / 65% coverage ] ****** [5050 done /4314 queued / 16 running / 224 errors / 65% coverage ] ****** [5051 done /4314 queued / 16 running / 224 errors / 65% coverage ] ****** [5051 done /4314 queued / 16 running / 224 errors / 65% coverage ] ****** [5052 done /4313 queued / 16 running / 224 errors / 65% coverage ] ****** [5052 done /4313 queued / 16 running / 224 errors / 65% coverage ] ****** [5053 done /4312 queued / 16 running / 224 errors / 65% coverage ] ****** [5053 done /4312 queued / 16 running / 224 errors / 65% coverage ] ****** [5054 done /4311 queued / 16 running / 224 errors / 65% coverage ] ****** [5054 done /4311 queued / 16 running / 224 errors / 65% coverage ] ****** [5055 done /4310 queued / 16 running / 224 errors / 65% coverage ] ****** [5055 done /4310 queued / 16 running / 224 errors / 65% coverage ] ****** [5056 done /4310 queued / 16 running / 224 errors / 65% coverage ] ****** [5056 done /4310 queued / 16 running / 224 errors / 65% coverage ] ****** [5057 done /4312 queued / 16 running / 224 errors / 65% coverage ] ****** [5057 done /4312 queued / 16 running / 224 errors / 65% coverage ] ****** [5058 done /4311 queued / 16 running / 224 errors / 65% coverage ] ****** [5058 done /4311 queued / 16 running / 224 errors / 65% coverage ] ****** [5059 done /4310 queued / 16 running / 224 errors / 65% coverage ] ****** [5059 done /4310 queued / 16 running / 224 errors / 65% coverage ] ****** [5060 done /4310 queued / 16 running / 224 errors / 65% coverage ] ****** [5060 done /4310 queued / 16 running / 224 errors / 65% coverage ] ****** [5061 done /4309 queued / 16 running / 224 errors / 65% coverage ] ****** [5061 done /4309 queued / 16 running / 224 errors / 65% coverage ] ****** [5062 done /4308 queued / 16 running / 224 errors / 65% coverage ] ****** [5062 done /4308 queued / 16 running / 224 errors / 65% coverage ] ****** [5063 done /4308 queued / 16 running / 224 errors / 65% coverage ] ****** [5063 done /4308 queued / 16 running / 224 errors / 65% coverage ] ****** [5064 done /4307 queued / 16 running / 224 errors / 65% coverage ] ****** [5064 done /4307 queued / 16 running / 224 errors / 65% coverage ] ****** [5065 done /4306 queued / 16 running / 224 errors / 65% coverage ] ****** [5065 done /4306 queued / 16 running / 224 errors / 65% coverage ] ****** [5066 done /4307 queued / 16 running / 224 errors / 65% coverage ] ****** [5066 done /4307 queued / 16 running / 224 errors / 65% coverage ] ****** [5067 done /4310 queued / 16 running / 224 errors / 65% coverage ] ****** [5067 done /4310 queued / 16 running / 224 errors / 65% coverage ] ****** [5068 done /4309 queued / 16 running / 224 errors / 65% coverage ] ****** [5068 done /4309 queued / 16 running / 224 errors / 65% coverage ] ****** [5069 done /4310 queued / 16 running / 224 errors / 65% coverage ] ****** [5069 done /4310 queued / 16 running / 224 errors / 65% coverage ] ****** [5070 done /4312 queued / 16 running / 224 errors / 65% coverage ] ****** [5070 done /4312 queued / 16 running / 224 errors / 65% coverage ] ****** [5071 done /4312 queued / 16 running / 224 errors / 65% coverage ] ****** [5071 done /4312 queued / 16 running / 224 errors / 65% coverage ] ****** [5072 done /4314 queued / 16 running / 224 errors / 65% coverage ] ****** [5072 done /4314 queued / 16 running / 224 errors / 65% coverage ] ****** [5073 done /4315 queued / 16 running / 224 errors / 65% coverage ] ****** [5073 done /4315 queued / 16 running / 224 errors / 65% coverage ] ****** [5074 done /4318 queued / 16 running / 224 errors / 65% coverage ] ****** [5074 done /4318 queued / 16 running / 224 errors / 65% coverage ] ****** [5075 done /4317 queued / 16 running / 224 errors / 65% coverage ] ****** [5075 done /4317 queued / 16 running / 224 errors / 65% coverage ] ****** [5076 done /4319 queued / 16 running / 224 errors / 65% coverage ] ****** [5076 done /4319 queued / 16 running / 224 errors / 65% coverage ] ****** [5077 done /4324 queued / 16 running / 224 errors / 65% coverage ] ****** [5077 done /4324 queued / 16 running / 224 errors / 65% coverage ] ****** [5078 done /4326 queued / 16 running / 224 errors / 65% coverage ] ****** [5078 done /4326 queued / 16 running / 224 errors / 65% coverage ] ****** [5079 done /4327 queued / 16 running / 224 errors / 65% coverage ] ****** [5079 done /4327 queued / 16 running / 224 errors / 65% coverage ] ****** [5080 done /4328 queued / 16 running / 224 errors / 65% coverage ] ****** [5080 done /4328 queued / 16 running / 224 errors / 65% coverage ] ****** [5081 done /4333 queued / 16 running / 224 errors / 65% coverage ] ****** [5081 done /4333 queued / 16 running / 224 errors / 65% coverage ] ****** [5082 done /4333 queued / 16 running / 224 errors / 65% coverage ] ****** [5082 done /4333 queued / 16 running / 224 errors / 65% coverage ] ****** [5083 done /4332 queued / 16 running / 224 errors / 65% coverage ] ****** [5083 done /4332 queued / 16 running / 224 errors / 65% coverage ] ****** [5084 done /4332 queued / 16 running / 224 errors / 65% coverage ] ****** [5084 done /4332 queued / 16 running / 224 errors / 65% coverage ] ****** [5085 done /4331 queued / 16 running / 224 errors / 65% coverage ] ****** [5085 done /4331 queued / 16 running / 224 errors / 65% coverage ] ****** [5086 done /4330 queued / 16 running / 224 errors / 65% coverage ] ****** [5086 done /4330 queued / 16 running / 224 errors / 65% coverage ] ****** [5087 done /4330 queued / 16 running / 224 errors / 65% coverage ] ****** [5087 done /4330 queued / 16 running / 224 errors / 65% coverage ] ****** [5088 done /4331 queued / 16 running / 224 errors / 65% coverage ] ****** [5088 done /4331 queued / 16 running / 224 errors / 65% coverage ] ****** [5089 done /4330 queued / 16 running / 224 errors / 65% coverage ] ****** [5089 done /4330 queued / 16 running / 224 errors / 65% coverage ] ****** [5090 done /4329 queued / 16 running / 224 errors / 65% coverage ] ****** [5090 done /4329 queued / 16 running / 224 errors / 65% coverage ] ****** [5091 done /4328 queued / 16 running / 224 errors / 65% coverage ] ****** [5091 done /4328 queued / 16 running / 224 errors / 65% coverage ] ****** [5092 done /4328 queued / 16 running / 224 errors / 65% coverage ] ****** [5092 done /4328 queued / 16 running / 224 errors / 65% coverage ] ****** [5093 done /4329 queued / 16 running / 224 errors / 65% coverage ] ****** [5093 done /4329 queued / 16 running / 224 errors / 65% coverage ] ****** [5094 done /4329 queued / 16 running / 224 errors / 65% coverage ] ****** [5094 done /4329 queued / 16 running / 224 errors / 65% coverage ] ****** [5095 done /4330 queued / 16 running / 224 errors / 65% coverage ] ****** [5095 done /4330 queued / 16 running / 224 errors / 65% coverage ] ****** [5096 done /4329 queued / 16 running / 224 errors / 65% coverage ] ****** [5096 done /4329 queued / 16 running / 224 errors / 65% coverage ] ****** [5097 done /4330 queued / 16 running / 224 errors / 65% coverage ] ****** [5097 done /4330 queued / 16 running / 224 errors / 65% coverage ] ****** [5098 done /4332 queued / 16 running / 224 errors / 65% coverage ] ****** [5098 done /4332 queued / 16 running / 224 errors / 65% coverage ] ****** [5099 done /4334 queued / 16 running / 224 errors / 65% coverage ] ****** [5099 done /4334 queued / 16 running / 224 errors / 65% coverage ] ****** [5100 done /4335 queued / 16 running / 224 errors / 65% coverage ] ****** [5100 done /4335 queued / 16 running / 224 errors / 65% coverage ] ****** [5101 done /4336 queued / 16 running / 224 errors / 65% coverage ] ****** [5101 done /4336 queued / 16 running / 224 errors / 65% coverage ] ****** [5102 done /4337 queued / 16 running / 224 errors / 65% coverage ] ****** [5102 done /4337 queued / 16 running / 224 errors / 65% coverage ] ****** [5103 done /4339 queued / 16 running / 224 errors / 65% coverage ] ****** [5103 done /4339 queued / 16 running / 224 errors / 65% coverage ] ****** [5104 done /4341 queued / 16 running / 224 errors / 65% coverage ] ****** [5104 done /4341 queued / 16 running / 224 errors / 65% coverage ] ****** [5105 done /4342 queued / 16 running / 224 errors / 65% coverage ] ****** [5105 done /4342 queued / 16 running / 224 errors / 65% coverage ] ****** [5106 done /4347 queued / 16 running / 224 errors / 65% coverage ] ****** [5106 done /4347 queued / 16 running / 224 errors / 65% coverage ] ****** [5107 done /4351 queued / 16 running / 224 errors / 65% coverage ] ****** [5107 done /4351 queued / 16 running / 224 errors / 65% coverage ] ****** [5108 done /4352 queued / 16 running / 224 errors / 65% coverage ] ****** [5108 done /4352 queued / 16 running / 224 errors / 65% coverage ] ****** [5109 done /4353 queued / 16 running / 224 errors / 65% coverage ] ****** [5109 done /4353 queued / 16 running / 224 errors / 65% coverage ] ****** [5110 done /4357 queued / 16 running / 224 errors / 65% coverage ] ****** [5110 done /4357 queued / 16 running / 224 errors / 65% coverage ] ****** [5111 done /4358 queued / 16 running / 224 errors / 65% coverage ] ****** [5111 done /4358 queued / 16 running / 224 errors / 65% coverage ] ****** [5112 done /4360 queued / 16 running / 224 errors / 65% coverage ] ****** [5112 done /4360 queued / 16 running / 224 errors / 65% coverage ] ****** [5113 done /4361 queued / 16 running / 224 errors / 65% coverage ] ****** [5113 done /4361 queued / 16 running / 224 errors / 65% coverage ] ****** [5114 done /4361 queued / 16 running / 224 errors / 65% coverage ] ****** [5114 done /4361 queued / 16 running / 224 errors / 65% coverage ] ****** [5115 done /4362 queued / 16 running / 224 errors / 65% coverage ] ****** [5115 done /4362 queued / 16 running / 224 errors / 65% coverage ] ****** [5116 done /4363 queued / 16 running / 224 errors / 65% coverage ] ****** [5116 done /4363 queued / 16 running / 224 errors / 65% coverage ] ****** [5117 done /4365 queued / 16 running / 224 errors / 65% coverage ] ****** [5117 done /4365 queued / 16 running / 224 errors / 65% coverage ] ****** [5118 done /4366 queued / 16 running / 224 errors / 65% coverage ] ****** [5118 done /4366 queued / 16 running / 224 errors / 65% coverage ] ****** [5119 done /4367 queued / 16 running / 224 errors / 65% coverage ] ****** [5119 done /4367 queued / 16 running / 224 errors / 65% coverage ] ****** [5120 done /4367 queued / 16 running / 224 errors / 65% coverage ] ****** [5120 done /4367 queued / 16 running / 224 errors / 65% coverage ] ****** [5121 done /4368 queued / 16 running / 224 errors / 65% coverage ] ****** [5121 done /4368 queued / 16 running / 224 errors / 65% coverage ] ****** [5122 done /4370 queued / 16 running / 224 errors / 65% coverage ] ****** [5122 done /4370 queued / 16 running / 224 errors / 65% coverage ] ****** [5123 done /4371 queued / 16 running / 224 errors / 65% coverage ] ****** [5123 done /4371 queued / 16 running / 224 errors / 65% coverage ] ****** [5124 done /4372 queued / 16 running / 224 errors / 65% coverage ] ****** [5124 done /4372 queued / 16 running / 224 errors / 65% coverage ] ****** [5125 done /4373 queued / 16 running / 224 errors / 65% coverage ] ****** [5125 done /4373 queued / 16 running / 224 errors / 65% coverage ] ****** [5126 done /4373 queued / 16 running / 224 errors / 65% coverage ] ****** [5126 done /4373 queued / 16 running / 224 errors / 65% coverage ] ****** [5127 done /4373 queued / 16 running / 224 errors / 65% coverage ] ****** [5127 done /4373 queued / 16 running / 224 errors / 65% coverage ] ****** [5128 done /4375 queued / 16 running / 224 errors / 65% coverage ] ****** [5128 done /4375 queued / 16 running / 224 errors / 65% coverage ] ****** [5129 done /4375 queued / 16 running / 224 errors / 65% coverage ] ****** [5129 done /4375 queued / 16 running / 224 errors / 65% coverage ] ****** [5130 done /4375 queued / 16 running / 224 errors / 65% coverage ] ****** [5130 done /4375 queued / 16 running / 224 errors / 65% coverage ] ****** [5131 done /4376 queued / 16 running / 224 errors / 65% coverage ] ****** [5131 done /4376 queued / 16 running / 224 errors / 65% coverage ] ****** [5132 done /4376 queued / 16 running / 224 errors / 65% coverage ] ****** [5132 done /4376 queued / 16 running / 224 errors / 65% coverage ] ****** [5133 done /4377 queued / 16 running / 224 errors / 65% coverage ] ****** [5133 done /4377 queued / 16 running / 224 errors / 65% coverage ] ****** [5134 done /4378 queued / 16 running / 224 errors / 65% coverage ] ****** [5134 done /4378 queued / 16 running / 224 errors / 65% coverage ] ****** [5135 done /4378 queued / 16 running / 224 errors / 65% coverage ] ****** [5135 done /4378 queued / 16 running / 224 errors / 65% coverage ] ****** [5136 done /4378 queued / 16 running / 224 errors / 65% coverage ] ****** [5136 done /4378 queued / 16 running / 224 errors / 65% coverage ] ****** [5137 done /4379 queued / 16 running / 224 errors / 65% coverage ] ****** [5137 done /4379 queued / 16 running / 224 errors / 65% coverage ] ****** [5138 done /4378 queued / 16 running / 224 errors / 65% coverage ] ****** [5138 done /4378 queued / 16 running / 224 errors / 65% coverage ] ****** [5139 done /4378 queued / 16 running / 224 errors / 65% coverage ] ****** [5139 done /4378 queued / 16 running / 224 errors / 65% coverage ] ****** [5140 done /4380 queued / 16 running / 224 errors / 65% coverage ] ****** [5140 done /4380 queued / 16 running / 224 errors / 65% coverage ] ****** [5141 done /4382 queued / 16 running / 224 errors / 65% coverage ] ****** [5141 done /4382 queued / 16 running / 224 errors / 65% coverage ] ****** [5142 done /4381 queued / 16 running / 224 errors / 65% coverage ] ****** [5142 done /4381 queued / 16 running / 224 errors / 65% coverage ] ****** [5143 done /4382 queued / 16 running / 224 errors / 65% coverage ] ****** [5143 done /4382 queued / 16 running / 224 errors / 65% coverage ] ****** [5144 done /4383 queued / 16 running / 224 errors / 65% coverage ] ****** [5144 done /4383 queued / 16 running / 224 errors / 65% coverage ] ****** [5145 done /4385 queued / 16 running / 224 errors / 65% coverage ] ****** [5145 done /4385 queued / 16 running / 224 errors / 65% coverage ] ****** [5146 done /4387 queued / 16 running / 224 errors / 65% coverage ] ****** [5146 done /4387 queued / 16 running / 224 errors / 65% coverage ] ****** [5147 done /4391 queued / 16 running / 224 errors / 65% coverage ] ****** [5147 done /4391 queued / 16 running / 224 errors / 65% coverage ] ****** [5148 done /4394 queued / 16 running / 224 errors / 65% coverage ] ****** [5148 done /4394 queued / 16 running / 224 errors / 65% coverage ] ****** [5149 done /4394 queued / 16 running / 224 errors / 65% coverage ] ****** [5149 done /4394 queued / 16 running / 224 errors / 65% coverage ] ****** [5150 done /4394 queued / 16 running / 224 errors / 65% coverage ] ****** [5150 done /4394 queued / 16 running / 224 errors / 65% coverage ] ****** [5151 done /4393 queued / 16 running / 224 errors / 65% coverage ] ****** [5151 done /4393 queued / 16 running / 224 errors / 65% coverage ] ****** [5152 done /4392 queued / 16 running / 224 errors / 65% coverage ] ****** [5152 done /4392 queued / 16 running / 224 errors / 65% coverage ] ****** [5153 done /4393 queued / 16 running / 224 errors / 65% coverage ] ****** [5153 done /4393 queued / 16 running / 224 errors / 65% coverage ] ****** [5154 done /4395 queued / 16 running / 224 errors / 65% coverage ] ****** [5154 done /4395 queued / 16 running / 224 errors / 65% coverage ] ****** [5155 done /4396 queued / 16 running / 224 errors / 65% coverage ] ****** [5155 done /4396 queued / 16 running / 224 errors / 65% coverage ] ****** [5156 done /4396 queued / 16 running / 224 errors / 65% coverage ] ****** [5156 done /4396 queued / 16 running / 224 errors / 65% coverage ] ****** [5157 done /4398 queued / 16 running / 224 errors / 65% coverage ] ****** [5157 done /4398 queued / 16 running / 224 errors / 65% coverage ] ****** [5158 done /4399 queued / 16 running / 224 errors / 65% coverage ] ****** [5158 done /4399 queued / 16 running / 224 errors / 65% coverage ] ****** [5159 done /4399 queued / 16 running / 224 errors / 65% coverage ] ****** [5159 done /4399 queued / 16 running / 224 errors / 65% coverage ] ****** [5160 done /4401 queued / 16 running / 224 errors / 65% coverage ] ****** [5160 done /4401 queued / 16 running / 224 errors / 65% coverage ] ****** [5161 done /4403 queued / 16 running / 224 errors / 65% coverage ] ****** [5161 done /4403 queued / 16 running / 224 errors / 65% coverage ] ****** [5162 done /4403 queued / 16 running / 224 errors / 65% coverage ] ****** [5162 done /4403 queued / 16 running / 224 errors / 65% coverage ] ****** [5163 done /4403 queued / 16 running / 224 errors / 65% coverage ] ****** [5163 done /4403 queued / 16 running / 224 errors / 65% coverage ] ****** [5164 done /4404 queued / 16 running / 224 errors / 65% coverage ] ****** [5164 done /4404 queued / 16 running / 224 errors / 65% coverage ] ****** [5165 done /4404 queued / 16 running / 224 errors / 65% coverage ] ****** [5165 done /4404 queued / 16 running / 224 errors / 65% coverage ] ****** [5166 done /4404 queued / 16 running / 224 errors / 65% coverage ] ****** [5166 done /4404 queued / 16 running / 224 errors / 65% coverage ] ****** [5167 done /4405 queued / 16 running / 224 errors / 65% coverage ] ****** [5167 done /4405 queued / 16 running / 224 errors / 65% coverage ] ****** [5168 done /4407 queued / 16 running / 224 errors / 65% coverage ] ****** [5168 done /4407 queued / 16 running / 224 errors / 65% coverage ] ****** [5169 done /4407 queued / 16 running / 224 errors / 65% coverage ] ****** [5169 done /4407 queued / 16 running / 224 errors / 65% coverage ] ****** [5170 done /4407 queued / 16 running / 224 errors / 65% coverage ] ****** [5170 done /4407 queued / 16 running / 224 errors / 65% coverage ] ****** [5171 done /4408 queued / 16 running / 224 errors / 65% coverage ] ****** [5171 done /4408 queued / 16 running / 224 errors / 65% coverage ] ****** [5172 done /4411 queued / 16 running / 224 errors / 65% coverage ] ****** [5172 done /4411 queued / 16 running / 224 errors / 65% coverage ] ****** [5173 done /4411 queued / 16 running / 224 errors / 65% coverage ] ****** [5173 done /4411 queued / 16 running / 224 errors / 65% coverage ] ****** [5174 done /4412 queued / 16 running / 224 errors / 65% coverage ] ****** [5174 done /4412 queued / 16 running / 224 errors / 65% coverage ] ****** [5175 done /4413 queued / 16 running / 224 errors / 65% coverage ] ****** [5175 done /4413 queued / 16 running / 224 errors / 65% coverage ] ****** [5176 done /4413 queued / 16 running / 224 errors / 65% coverage ] ****** [5176 done /4413 queued / 16 running / 224 errors / 65% coverage ] ****** [5177 done /4415 queued / 16 running / 224 errors / 65% coverage ] ****** [5177 done /4415 queued / 16 running / 224 errors / 65% coverage ] ****** [5178 done /4417 queued / 16 running / 224 errors / 65% coverage ] ****** [5178 done /4417 queued / 16 running / 224 errors / 65% coverage ] ****** [5179 done /4418 queued / 16 running / 224 errors / 65% coverage ] ****** [5179 done /4418 queued / 16 running / 224 errors / 65% coverage ] ****** [5180 done /4421 queued / 16 running / 224 errors / 65% coverage ] ****** [5180 done /4421 queued / 16 running / 224 errors / 65% coverage ] ****** [5181 done /4421 queued / 16 running / 224 errors / 65% coverage ] ****** [5181 done /4421 queued / 16 running / 224 errors / 65% coverage ] ****** [5182 done /4424 queued / 16 running / 224 errors / 65% coverage ] ****** [5182 done /4424 queued / 16 running / 224 errors / 65% coverage ] ****** [5183 done /4425 queued / 16 running / 224 errors / 65% coverage ] ****** [5183 done /4425 queued / 16 running / 224 errors / 65% coverage ] ****** [5184 done /4425 queued / 16 running / 224 errors / 65% coverage ] ****** [5184 done /4425 queued / 16 running / 224 errors / 65% coverage ] ****** [5185 done /4427 queued / 16 running / 224 errors / 65% coverage ] ****** [5185 done /4427 queued / 16 running / 224 errors / 65% coverage ] ****** [5186 done /4428 queued / 16 running / 224 errors / 65% coverage ] ****** [5186 done /4428 queued / 16 running / 224 errors / 65% coverage ] ****** [5187 done /4430 queued / 16 running / 224 errors / 65% coverage ] ****** [5187 done /4430 queued / 16 running / 224 errors / 65% coverage ] ****** [5188 done /4430 queued / 16 running / 224 errors / 65% coverage ] ****** [5188 done /4430 queued / 16 running / 224 errors / 65% coverage ] ****** [5189 done /4431 queued / 16 running / 224 errors / 65% coverage ] ****** [5189 done /4431 queued / 16 running / 224 errors / 65% coverage ] ****** [5190 done /4431 queued / 16 running / 224 errors / 65% coverage ] ****** [5190 done /4431 queued / 16 running / 224 errors / 65% coverage ] ****** [5191 done /4434 queued / 16 running / 224 errors / 65% coverage ] ****** [5191 done /4434 queued / 16 running / 224 errors / 65% coverage ] ****** [5192 done /4437 queued / 16 running / 224 errors / 65% coverage ] ****** [5192 done /4437 queued / 16 running / 224 errors / 65% coverage ] ****** [5193 done /4438 queued / 16 running / 224 errors / 65% coverage ] ****** [5193 done /4438 queued / 16 running / 224 errors / 65% coverage ] ****** [5194 done /4439 queued / 16 running / 224 errors / 65% coverage ] ****** [5194 done /4439 queued / 16 running / 224 errors / 65% coverage ] ****** [5195 done /4439 queued / 16 running / 224 errors / 65% coverage ] ****** [5195 done /4439 queued / 16 running / 224 errors / 65% coverage ] ****** [5196 done /4442 queued / 16 running / 224 errors / 65% coverage ] ****** [5196 done /4442 queued / 16 running / 224 errors / 65% coverage ] ****** [5197 done /4444 queued / 16 running / 224 errors / 65% coverage ] ****** [5197 done /4444 queued / 16 running / 224 errors / 65% coverage ] ****** [5198 done /4445 queued / 16 running / 224 errors / 65% coverage ] ****** [5198 done /4445 queued / 16 running / 224 errors / 65% coverage ] ****** [5199 done /4446 queued / 16 running / 224 errors / 65% coverage ] ****** [5199 done /4446 queued / 16 running / 224 errors / 65% coverage ] ****** [5200 done /4446 queued / 16 running / 224 errors / 65% coverage ] ****** [5200 done /4446 queued / 16 running / 224 errors / 65% coverage ] ****** [5201 done /4449 queued / 16 running / 224 errors / 65% coverage ] ****** [5201 done /4449 queued / 16 running / 224 errors / 65% coverage ] ****** [5202 done /4453 queued / 16 running / 224 errors / 65% coverage ] ****** [5202 done /4453 queued / 16 running / 224 errors / 65% coverage ] ****** [5203 done /4458 queued / 16 running / 224 errors / 65% coverage ] ****** [5203 done /4458 queued / 16 running / 224 errors / 65% coverage ] ****** [5204 done /4460 queued / 16 running / 224 errors / 65% coverage ] ****** [5204 done /4460 queued / 16 running / 224 errors / 65% coverage ] ****** [5205 done /4462 queued / 16 running / 224 errors / 65% coverage ] ****** [5205 done /4462 queued / 16 running / 224 errors / 65% coverage ] ****** [5206 done /4463 queued / 16 running / 224 errors / 65% coverage ] ****** [5206 done /4463 queued / 16 running / 224 errors / 65% coverage ] ****** [5207 done /4462 queued / 16 running / 224 errors / 65% coverage ] ****** [5207 done /4462 queued / 16 running / 224 errors / 65% coverage ] ****** [5208 done /4461 queued / 16 running / 224 errors / 65% coverage ] ****** [5208 done /4461 queued / 16 running / 224 errors / 65% coverage ] ****** [5209 done /4461 queued / 16 running / 224 errors / 65% coverage ] ****** [5209 done /4461 queued / 16 running / 224 errors / 65% coverage ] ****** [5210 done /4461 queued / 16 running / 224 errors / 65% coverage ] ****** [5210 done /4461 queued / 16 running / 224 errors / 65% coverage ] ****** [5211 done /4463 queued / 16 running / 224 errors / 65% coverage ] ****** [5211 done /4463 queued / 16 running / 224 errors / 65% coverage ] ****** [5212 done /4463 queued / 16 running / 224 errors / 65% coverage ] ****** [5212 done /4463 queued / 16 running / 224 errors / 65% coverage ] ****** [5213 done /4464 queued / 16 running / 224 errors / 65% coverage ] ****** [5213 done /4464 queued / 16 running / 224 errors / 65% coverage ] ****** [5214 done /4465 queued / 16 running / 224 errors / 65% coverage ] ****** [5214 done /4465 queued / 16 running / 224 errors / 65% coverage ] ****** [5215 done /4464 queued / 16 running / 224 errors / 65% coverage ] ****** [5215 done /4464 queued / 16 running / 224 errors / 65% coverage ] ****** [5216 done /4467 queued / 16 running / 224 errors / 65% coverage ] ****** [5216 done /4467 queued / 16 running / 224 errors / 65% coverage ] ****** [5217 done /4469 queued / 16 running / 224 errors / 65% coverage ] ****** [5217 done /4469 queued / 16 running / 224 errors / 65% coverage ] ****** [5218 done /4470 queued / 16 running / 224 errors / 65% coverage ] ****** [5218 done /4470 queued / 16 running / 224 errors / 65% coverage ] ****** [5219 done /4472 queued / 16 running / 224 errors / 65% coverage ] ****** [5219 done /4472 queued / 16 running / 224 errors / 65% coverage ] ****** [5220 done /4473 queued / 16 running / 224 errors / 65% coverage ] ****** [5220 done /4473 queued / 16 running / 224 errors / 65% coverage ] ****** [5221 done /4475 queued / 16 running / 224 errors / 65% coverage ] ****** [5221 done /4475 queued / 16 running / 224 errors / 65% coverage ] ****** [5222 done /4476 queued / 16 running / 224 errors / 65% coverage ] ****** [5222 done /4476 queued / 16 running / 224 errors / 65% coverage ] ****** [5223 done /4476 queued / 16 running / 224 errors / 65% coverage ] ****** [5223 done /4476 queued / 16 running / 224 errors / 65% coverage ] ****** [5224 done /4476 queued / 16 running / 224 errors / 65% coverage ] ****** [5224 done /4476 queued / 16 running / 224 errors / 65% coverage ] ****** [5225 done /4477 queued / 16 running / 224 errors / 65% coverage ] ****** [5225 done /4477 queued / 16 running / 224 errors / 65% coverage ] ****** [5226 done /4478 queued / 16 running / 224 errors / 65% coverage ] ****** [5226 done /4478 queued / 16 running / 224 errors / 65% coverage ] ****** [5227 done /4478 queued / 16 running / 224 errors / 65% coverage ] ****** [5227 done /4478 queued / 16 running / 224 errors / 65% coverage ] ****** [5228 done /4480 queued / 16 running / 224 errors / 65% coverage ] ****** [5228 done /4480 queued / 16 running / 224 errors / 65% coverage ] ****** [5229 done /4481 queued / 16 running / 224 errors / 65% coverage ] ****** [5229 done /4481 queued / 16 running / 224 errors / 65% coverage ] ****** [5230 done /4482 queued / 16 running / 224 errors / 65% coverage ] ****** [5230 done /4482 queued / 16 running / 224 errors / 65% coverage ] ****** [5231 done /4485 queued / 16 running / 224 errors / 65% coverage ] ****** [5231 done /4485 queued / 16 running / 224 errors / 65% coverage ] ****** [5232 done /4487 queued / 16 running / 224 errors / 65% coverage ] ****** [5232 done /4487 queued / 16 running / 224 errors / 65% coverage ] ****** [5233 done /4489 queued / 16 running / 224 errors / 65% coverage ] ****** [5233 done /4489 queued / 16 running / 224 errors / 65% coverage ] ****** [5234 done /4490 queued / 16 running / 224 errors / 65% coverage ] ****** [5234 done /4490 queued / 16 running / 224 errors / 65% coverage ] ****** [5235 done /4492 queued / 16 running / 224 errors / 65% coverage ] ****** [5235 done /4492 queued / 16 running / 224 errors / 65% coverage ] ****** [5236 done /4493 queued / 16 running / 224 errors / 65% coverage ] ****** [5236 done /4493 queued / 16 running / 224 errors / 65% coverage ] ****** [5237 done /4494 queued / 16 running / 224 errors / 65% coverage ] ****** [5237 done /4494 queued / 16 running / 224 errors / 65% coverage ] ****** [5238 done /4494 queued / 16 running / 224 errors / 65% coverage ] ****** [5238 done /4494 queued / 16 running / 224 errors / 65% coverage ] ****** [5239 done /4496 queued / 16 running / 224 errors / 65% coverage ] ****** [5239 done /4496 queued / 16 running / 224 errors / 65% coverage ] ****** [5240 done /4497 queued / 16 running / 224 errors / 65% coverage ] ****** [5240 done /4497 queued / 16 running / 224 errors / 65% coverage ] ****** [5241 done /4498 queued / 16 running / 224 errors / 65% coverage ] ****** [5241 done /4498 queued / 16 running / 224 errors / 65% coverage ] ****** [5242 done /4498 queued / 16 running / 224 errors / 65% coverage ] ****** [5242 done /4498 queued / 16 running / 224 errors / 65% coverage ] ****** [5243 done /4499 queued / 16 running / 224 errors / 65% coverage ] ****** [5243 done /4499 queued / 16 running / 224 errors / 65% coverage ] ****** [5244 done /4499 queued / 16 running / 224 errors / 65% coverage ] ****** [5244 done /4499 queued / 16 running / 224 errors / 65% coverage ] ****** [5245 done /4500 queued / 16 running / 224 errors / 65% coverage ] ****** [5245 done /4500 queued / 16 running / 224 errors / 65% coverage ] ****** [5246 done /4499 queued / 16 running / 224 errors / 65% coverage ] ****** [5246 done /4499 queued / 16 running / 224 errors / 65% coverage ] ****** [5247 done /4502 queued / 16 running / 224 errors / 65% coverage ] ****** [5247 done /4502 queued / 16 running / 224 errors / 65% coverage ] ****** [5248 done /4501 queued / 16 running / 224 errors / 65% coverage ] ****** [5248 done /4501 queued / 16 running / 224 errors / 65% coverage ] ****** [5249 done /4500 queued / 16 running / 224 errors / 65% coverage ] ****** [5249 done /4500 queued / 16 running / 224 errors / 65% coverage ] ****** [5250 done /4500 queued / 16 running / 224 errors / 65% coverage ] ****** [5250 done /4500 queued / 16 running / 224 errors / 65% coverage ] ****** [5251 done /4501 queued / 16 running / 224 errors / 65% coverage ] ****** [5251 done /4501 queued / 16 running / 224 errors / 65% coverage ] ****** [5252 done /4501 queued / 16 running / 224 errors / 65% coverage ] ****** [5252 done /4501 queued / 16 running / 224 errors / 65% coverage ] ****** [5253 done /4505 queued / 16 running / 224 errors / 65% coverage ] ****** [5253 done /4505 queued / 16 running / 224 errors / 65% coverage ] ****** [5254 done /4506 queued / 16 running / 224 errors / 65% coverage ] ****** [5254 done /4506 queued / 16 running / 224 errors / 65% coverage ] ****** [5255 done /4509 queued / 16 running / 224 errors / 65% coverage ] ****** [5255 done /4509 queued / 16 running / 224 errors / 65% coverage ] ****** [5256 done /4513 queued / 16 running / 224 errors / 65% coverage ] ****** [5256 done /4513 queued / 16 running / 224 errors / 65% coverage ] ****** [5257 done /4517 queued / 16 running / 224 errors / 65% coverage ] ****** [5257 done /4517 queued / 16 running / 224 errors / 65% coverage ] ****** [5258 done /4519 queued / 16 running / 224 errors / 65% coverage ] ****** [5258 done /4519 queued / 16 running / 224 errors / 65% coverage ] ****** [5259 done /4522 queued / 16 running / 224 errors / 65% coverage ] ****** [5259 done /4522 queued / 16 running / 224 errors / 65% coverage ] ****** [5260 done /4524 queued / 16 running / 224 errors / 65% coverage ] ****** [5260 done /4524 queued / 16 running / 224 errors / 65% coverage ] ****** [5261 done /4525 queued / 16 running / 224 errors / 65% coverage ] ****** [5261 done /4525 queued / 16 running / 224 errors / 65% coverage ] ****** [5262 done /4524 queued / 16 running / 224 errors / 65% coverage ] ****** [5262 done /4524 queued / 16 running / 224 errors / 65% coverage ] ****** [5263 done /4523 queued / 16 running / 224 errors / 65% coverage ] ****** [5263 done /4523 queued / 16 running / 224 errors / 65% coverage ] ****** [5264 done /4522 queued / 16 running / 224 errors / 65% coverage ] ****** [5264 done /4522 queued / 16 running / 224 errors / 65% coverage ] ****** [5265 done /4522 queued / 16 running / 224 errors / 65% coverage ] ****** [5265 done /4522 queued / 16 running / 224 errors / 65% coverage ] ****** [5266 done /4521 queued / 16 running / 224 errors / 65% coverage ] ****** [5266 done /4521 queued / 16 running / 224 errors / 65% coverage ] ****** [5267 done /4522 queued / 16 running / 224 errors / 65% coverage ] ****** [5267 done /4522 queued / 16 running / 224 errors / 65% coverage ] ****** [5268 done /4522 queued / 16 running / 224 errors / 65% coverage ] ****** [5268 done /4522 queued / 16 running / 224 errors / 65% coverage ] ****** [5269 done /4523 queued / 16 running / 224 errors / 65% coverage ] ****** [5269 done /4523 queued / 16 running / 224 errors / 65% coverage ] ****** [5270 done /4523 queued / 16 running / 224 errors / 65% coverage ] ****** [5270 done /4523 queued / 16 running / 224 errors / 65% coverage ] ****** [5271 done /4524 queued / 16 running / 224 errors / 65% coverage ] ****** [5271 done /4524 queued / 16 running / 224 errors / 65% coverage ] ****** [5272 done /4524 queued / 16 running / 224 errors / 65% coverage ] ****** [5272 done /4524 queued / 16 running / 224 errors / 65% coverage ] ****** [5273 done /4524 queued / 16 running / 224 errors / 65% coverage ] ****** [5273 done /4524 queued / 16 running / 224 errors / 65% coverage ] ****** [5274 done /4524 queued / 16 running / 224 errors / 65% coverage ] ****** [5274 done /4524 queued / 16 running / 224 errors / 65% coverage ] ****** [5275 done /4524 queued / 16 running / 224 errors / 65% coverage ] ****** [5275 done /4524 queued / 16 running / 224 errors / 65% coverage ] ****** [5276 done /4523 queued / 16 running / 224 errors / 65% coverage ] ****** [5276 done /4523 queued / 16 running / 224 errors / 65% coverage ] ****** [5277 done /4525 queued / 16 running / 224 errors / 65% coverage ] ****** [5277 done /4525 queued / 16 running / 224 errors / 65% coverage ] ****** [5278 done /4525 queued / 16 running / 224 errors / 65% coverage ] ****** [5278 done /4525 queued / 16 running / 224 errors / 65% coverage ] ****** [5279 done /4524 queued / 16 running / 224 errors / 65% coverage ] ****** [5279 done /4524 queued / 16 running / 224 errors / 65% coverage ] ****** [5280 done /4525 queued / 16 running / 224 errors / 65% coverage ] ****** [5280 done /4525 queued / 16 running / 224 errors / 65% coverage ] ****** [5281 done /4526 queued / 16 running / 224 errors / 65% coverage ] ****** [5281 done /4526 queued / 16 running / 224 errors / 65% coverage ] ****** [5282 done /4527 queued / 16 running / 224 errors / 65% coverage ] ****** [5282 done /4527 queued / 16 running / 224 errors / 65% coverage ] ****** [5283 done /4527 queued / 16 running / 224 errors / 65% coverage ] ****** [5283 done /4527 queued / 16 running / 224 errors / 65% coverage ] ****** [5284 done /4528 queued / 16 running / 224 errors / 65% coverage ] ****** [5284 done /4528 queued / 16 running / 224 errors / 65% coverage ] ****** [5285 done /4529 queued / 16 running / 224 errors / 65% coverage ] ****** [5285 done /4529 queued / 16 running / 224 errors / 65% coverage ] ****** [5286 done /4528 queued / 16 running / 224 errors / 65% coverage ] ****** [5286 done /4528 queued / 16 running / 224 errors / 65% coverage ] ****** [5287 done /4528 queued / 16 running / 224 errors / 65% coverage ] ****** [5287 done /4528 queued / 16 running / 224 errors / 65% coverage ] ****** [5288 done /4527 queued / 16 running / 224 errors / 65% coverage ] ****** [5288 done /4527 queued / 16 running / 224 errors / 65% coverage ] ****** [5289 done /4528 queued / 16 running / 224 errors / 65% coverage ] ****** [5289 done /4528 queued / 16 running / 224 errors / 65% coverage ] ****** [5290 done /4529 queued / 16 running / 224 errors / 65% coverage ] ****** [5290 done /4529 queued / 16 running / 224 errors / 65% coverage ] ****** [5291 done /4528 queued / 16 running / 224 errors / 65% coverage ] ****** [5291 done /4528 queued / 16 running / 224 errors / 65% coverage ] ****** [5292 done /4529 queued / 16 running / 224 errors / 65% coverage ] ****** [5292 done /4529 queued / 16 running / 224 errors / 65% coverage ] ****** [5293 done /4531 queued / 16 running / 224 errors / 65% coverage ] ****** [5293 done /4531 queued / 16 running / 224 errors / 65% coverage ] ****** [5294 done /4532 queued / 16 running / 224 errors / 65% coverage ] ****** [5294 done /4532 queued / 16 running / 224 errors / 65% coverage ] ****** [5295 done /4531 queued / 16 running / 224 errors / 65% coverage ] ****** [5295 done /4531 queued / 16 running / 224 errors / 65% coverage ] ****** [5296 done /4531 queued / 16 running / 224 errors / 65% coverage ] ****** [5296 done /4531 queued / 16 running / 224 errors / 65% coverage ] ****** [5297 done /4530 queued / 16 running / 224 errors / 65% coverage ] ****** [5297 done /4530 queued / 16 running / 224 errors / 65% coverage ] ****** [5298 done /4531 queued / 16 running / 224 errors / 65% coverage ] ****** [5298 done /4531 queued / 16 running / 224 errors / 65% coverage ] ****** [5299 done /4531 queued / 16 running / 224 errors / 65% coverage ] ****** [5299 done /4531 queued / 16 running / 224 errors / 65% coverage ] ****** [5300 done /4533 queued / 16 running / 224 errors / 65% coverage ] ****** [5300 done /4533 queued / 16 running / 224 errors / 65% coverage ] ****** [5301 done /4532 queued / 16 running / 224 errors / 65% coverage ] ****** [5301 done /4532 queued / 16 running / 224 errors / 65% coverage ] ****** [5302 done /4533 queued / 16 running / 224 errors / 65% coverage ] ****** [5302 done /4533 queued / 16 running / 224 errors / 65% coverage ] ****** [5303 done /4535 queued / 16 running / 224 errors / 65% coverage ] ****** [5303 done /4535 queued / 16 running / 224 errors / 65% coverage ] ****** [5304 done /4536 queued / 16 running / 224 errors / 65% coverage ] ****** [5304 done /4536 queued / 16 running / 224 errors / 65% coverage ] ****** [5305 done /4535 queued / 16 running / 224 errors / 65% coverage ] ****** [5305 done /4535 queued / 16 running / 224 errors / 65% coverage ] ****** [5306 done /4536 queued / 16 running / 224 errors / 65% coverage ] ****** [5306 done /4536 queued / 16 running / 224 errors / 65% coverage ] ****** [5307 done /4539 queued / 16 running / 224 errors / 65% coverage ] ****** [5307 done /4539 queued / 16 running / 224 errors / 65% coverage ] ****** [5308 done /4542 queued / 16 running / 224 errors / 65% coverage ] ****** [5308 done /4542 queued / 16 running / 224 errors / 65% coverage ] ****** [5309 done /4541 queued / 16 running / 224 errors / 65% coverage ] ****** [5309 done /4541 queued / 16 running / 224 errors / 65% coverage ] ****** [5310 done /4543 queued / 16 running / 224 errors / 65% coverage ] ****** [5310 done /4543 queued / 16 running / 224 errors / 65% coverage ] ****** [5311 done /4544 queued / 16 running / 224 errors / 65% coverage ] ****** [5311 done /4544 queued / 16 running / 224 errors / 65% coverage ] ****** [5312 done /4548 queued / 16 running / 224 errors / 65% coverage ] ****** [5312 done /4548 queued / 16 running / 224 errors / 65% coverage ] ****** [5313 done /4550 queued / 16 running / 224 errors / 65% coverage ] ****** [5313 done /4550 queued / 16 running / 224 errors / 65% coverage ] ****** [5314 done /4554 queued / 16 running / 224 errors / 65% coverage ] ****** [5314 done /4554 queued / 16 running / 224 errors / 65% coverage ] ****** [5315 done /4557 queued / 16 running / 224 errors / 65% coverage ] ****** [5315 done /4557 queued / 16 running / 224 errors / 65% coverage ] ****** [5316 done /4556 queued / 16 running / 224 errors / 65% coverage ] ****** [5316 done /4556 queued / 16 running / 224 errors / 65% coverage ] ****** [5317 done /4560 queued / 16 running / 224 errors / 65% coverage ] ****** [5317 done /4560 queued / 16 running / 224 errors / 65% coverage ] ****** [5318 done /4561 queued / 16 running / 224 errors / 65% coverage ] ****** [5318 done /4561 queued / 16 running / 224 errors / 65% coverage ] ****** [5319 done /4562 queued / 16 running / 224 errors / 65% coverage ] ****** [5319 done /4562 queued / 16 running / 224 errors / 65% coverage ] ****** [5320 done /4561 queued / 16 running / 224 errors / 65% coverage ] ****** [5320 done /4561 queued / 16 running / 224 errors / 65% coverage ] ****** [5321 done /4561 queued / 16 running / 224 errors / 65% coverage ] ****** [5321 done /4561 queued / 16 running / 224 errors / 65% coverage ] ****** [5322 done /4562 queued / 16 running / 224 errors / 65% coverage ] ****** [5322 done /4562 queued / 16 running / 224 errors / 65% coverage ] ****** [5323 done /4561 queued / 16 running / 224 errors / 65% coverage ] ****** [5323 done /4561 queued / 16 running / 224 errors / 65% coverage ] ****** [5324 done /4561 queued / 16 running / 224 errors / 65% coverage ] ****** [5324 done /4561 queued / 16 running / 224 errors / 65% coverage ] ****** [5325 done /4560 queued / 16 running / 224 errors / 65% coverage ] ****** [5325 done /4560 queued / 16 running / 224 errors / 65% coverage ] ****** [5326 done /4560 queued / 16 running / 224 errors / 65% coverage ] ****** [5326 done /4560 queued / 16 running / 224 errors / 65% coverage ] ****** [5327 done /4560 queued / 16 running / 224 errors / 65% coverage ] ****** [5327 done /4560 queued / 16 running / 224 errors / 65% coverage ] ****** [5328 done /4559 queued / 16 running / 224 errors / 65% coverage ] ****** [5328 done /4559 queued / 16 running / 224 errors / 65% coverage ] ****** [5329 done /4558 queued / 16 running / 224 errors / 65% coverage ] ****** [5329 done /4558 queued / 16 running / 224 errors / 65% coverage ] ****** [5330 done /4559 queued / 16 running / 224 errors / 65% coverage ] ****** [5330 done /4559 queued / 16 running / 224 errors / 65% coverage ] ****** [5331 done /4559 queued / 16 running / 224 errors / 65% coverage ] ****** [5331 done /4559 queued / 16 running / 224 errors / 65% coverage ] ****** [5332 done /4558 queued / 16 running / 224 errors / 65% coverage ] ****** [5332 done /4558 queued / 16 running / 224 errors / 65% coverage ] ****** [5333 done /4559 queued / 16 running / 224 errors / 65% coverage ] ****** [5333 done /4559 queued / 16 running / 224 errors / 65% coverage ] ****** [5334 done /4558 queued / 16 running / 224 errors / 65% coverage ] ****** [5334 done /4558 queued / 16 running / 224 errors / 65% coverage ] ****** [5335 done /4557 queued / 16 running / 224 errors / 65% coverage ] ****** [5335 done /4557 queued / 16 running / 224 errors / 65% coverage ] ****** [5336 done /4557 queued / 16 running / 224 errors / 65% coverage ] ****** [5336 done /4557 queued / 16 running / 224 errors / 65% coverage ] ****** [5337 done /4557 queued / 16 running / 224 errors / 65% coverage ] ****** [5337 done /4557 queued / 16 running / 224 errors / 65% coverage ] ****** [5338 done /4558 queued / 16 running / 224 errors / 65% coverage ] ****** [5338 done /4558 queued / 16 running / 224 errors / 65% coverage ] ****** [5339 done /4557 queued / 16 running / 224 errors / 65% coverage ] ****** [5339 done /4557 queued / 16 running / 224 errors / 65% coverage ] ****** [5340 done /4557 queued / 16 running / 224 errors / 65% coverage ] ****** [5340 done /4557 queued / 16 running / 224 errors / 65% coverage ] ****** [5341 done /4557 queued / 16 running / 224 errors / 65% coverage ] ****** [5341 done /4557 queued / 16 running / 224 errors / 65% coverage ] ****** [5342 done /4556 queued / 16 running / 224 errors / 65% coverage ] ****** [5342 done /4556 queued / 16 running / 224 errors / 65% coverage ] ****** [5343 done /4556 queued / 16 running / 224 errors / 65% coverage ] ****** [5343 done /4556 queued / 16 running / 224 errors / 65% coverage ] ****** [5344 done /4556 queued / 16 running / 224 errors / 65% coverage ] ****** [5344 done /4556 queued / 16 running / 224 errors / 65% coverage ] ****** [5345 done /4556 queued / 16 running / 224 errors / 65% coverage ] ****** [5345 done /4556 queued / 16 running / 224 errors / 65% coverage ] ****** [5346 done /4556 queued / 16 running / 224 errors / 65% coverage ] ****** [5346 done /4556 queued / 16 running / 224 errors / 65% coverage ] ****** [5347 done /4556 queued / 16 running / 224 errors / 65% coverage ] ****** [5347 done /4556 queued / 16 running / 224 errors / 65% coverage ] ****** [5348 done /4556 queued / 16 running / 224 errors / 65% coverage ] ****** [5348 done /4556 queued / 16 running / 224 errors / 65% coverage ] ****** [5349 done /4558 queued / 16 running / 224 errors / 65% coverage ] ****** [5349 done /4558 queued / 16 running / 224 errors / 65% coverage ] ****** [5350 done /4557 queued / 16 running / 224 errors / 65% coverage ] ****** [5350 done /4557 queued / 16 running / 224 errors / 65% coverage ] ****** [5351 done /4559 queued / 16 running / 224 errors / 65% coverage ] ****** [5351 done /4559 queued / 16 running / 224 errors / 65% coverage ] ****** [5352 done /4560 queued / 16 running / 224 errors / 65% coverage ] ****** [5352 done /4560 queued / 16 running / 224 errors / 65% coverage ] ****** [5353 done /4562 queued / 16 running / 224 errors / 65% coverage ] ****** [5353 done /4562 queued / 16 running / 224 errors / 65% coverage ] ****** [5354 done /4564 queued / 16 running / 224 errors / 65% coverage ] ****** [5354 done /4564 queued / 16 running / 224 errors / 65% coverage ] ****** [5355 done /4566 queued / 16 running / 224 errors / 65% coverage ] ****** [5355 done /4566 queued / 16 running / 224 errors / 65% coverage ] ****** [5356 done /4568 queued / 16 running / 224 errors / 65% coverage ] ****** [5356 done /4568 queued / 16 running / 224 errors / 65% coverage ] ****** [5357 done /4571 queued / 16 running / 224 errors / 65% coverage ] ****** [5357 done /4571 queued / 16 running / 224 errors / 65% coverage ] ****** [5358 done /4574 queued / 16 running / 224 errors / 65% coverage ] ****** [5358 done /4574 queued / 16 running / 224 errors / 65% coverage ] ****** [5359 done /4575 queued / 16 running / 224 errors / 65% coverage ] ****** [5359 done /4575 queued / 16 running / 224 errors / 65% coverage ] ****** [5360 done /4578 queued / 16 running / 224 errors / 65% coverage ] ****** [5360 done /4578 queued / 16 running / 224 errors / 65% coverage ] ****** [5361 done /4579 queued / 16 running / 224 errors / 65% coverage ] ****** [5361 done /4579 queued / 16 running / 224 errors / 65% coverage ] ****** [5362 done /4580 queued / 16 running / 224 errors / 65% coverage ] ****** [5362 done /4580 queued / 16 running / 224 errors / 65% coverage ] ****** [5363 done /4581 queued / 16 running / 224 errors / 65% coverage ] ****** [5363 done /4581 queued / 16 running / 224 errors / 65% coverage ] ****** [5364 done /4581 queued / 16 running / 224 errors / 65% coverage ] ****** [5364 done /4581 queued / 16 running / 224 errors / 65% coverage ] ****** [5365 done /4583 queued / 16 running / 224 errors / 65% coverage ] ****** [5365 done /4583 queued / 16 running / 224 errors / 65% coverage ] ****** [5366 done /4586 queued / 16 running / 224 errors / 65% coverage ] ****** [5366 done /4586 queued / 16 running / 224 errors / 65% coverage ] ****** [5367 done /4590 queued / 16 running / 224 errors / 65% coverage ] ****** [5367 done /4590 queued / 16 running / 224 errors / 65% coverage ] ****** [5368 done /4590 queued / 16 running / 224 errors / 65% coverage ] ****** [5368 done /4590 queued / 16 running / 224 errors / 65% coverage ] ****** [5369 done /4592 queued / 16 running / 224 errors / 65% coverage ] ****** [5369 done /4592 queued / 16 running / 224 errors / 65% coverage ] ****** [5370 done /4594 queued / 16 running / 224 errors / 65% coverage ] ****** [5370 done /4594 queued / 16 running / 224 errors / 65% coverage ] ****** [5371 done /4594 queued / 16 running / 224 errors / 65% coverage ] ****** [5371 done /4594 queued / 16 running / 224 errors / 65% coverage ] ****** [5372 done /4593 queued / 16 running / 224 errors / 65% coverage ] ****** [5372 done /4593 queued / 16 running / 224 errors / 65% coverage ] ****** [5373 done /4595 queued / 16 running / 224 errors / 65% coverage ] ****** [5373 done /4595 queued / 16 running / 224 errors / 65% coverage ] ****** [5374 done /4594 queued / 16 running / 224 errors / 65% coverage ] ****** [5374 done /4594 queued / 16 running / 224 errors / 65% coverage ] ****** [5375 done /4594 queued / 16 running / 224 errors / 65% coverage ] ****** [5375 done /4594 queued / 16 running / 224 errors / 65% coverage ] ****** [5376 done /4594 queued / 16 running / 224 errors / 65% coverage ] ****** [5376 done /4594 queued / 16 running / 224 errors / 65% coverage ] ****** [5377 done /4593 queued / 16 running / 224 errors / 65% coverage ] ****** [5377 done /4593 queued / 16 running / 224 errors / 65% coverage ] ****** [5378 done /4593 queued / 16 running / 224 errors / 65% coverage ] ****** [5378 done /4593 queued / 16 running / 224 errors / 65% coverage ] ****** [5379 done /4592 queued / 16 running / 224 errors / 65% coverage ] ****** [5379 done /4592 queued / 16 running / 224 errors / 65% coverage ] ****** [5380 done /4591 queued / 16 running / 224 errors / 65% coverage ] ****** [5380 done /4591 queued / 16 running / 224 errors / 65% coverage ] ****** [5381 done /4590 queued / 16 running / 224 errors / 65% coverage ] ****** [5381 done /4590 queued / 16 running / 224 errors / 65% coverage ] ****** [5382 done /4589 queued / 16 running / 224 errors / 65% coverage ] ****** [5382 done /4589 queued / 16 running / 224 errors / 65% coverage ] ****** [5383 done /4590 queued / 16 running / 224 errors / 65% coverage ] ****** [5383 done /4590 queued / 16 running / 224 errors / 65% coverage ] ****** [5384 done /4591 queued / 16 running / 224 errors / 65% coverage ] ****** [5384 done /4591 queued / 16 running / 224 errors / 65% coverage ] ****** [5385 done /4590 queued / 16 running / 224 errors / 65% coverage ] ****** [5385 done /4590 queued / 16 running / 224 errors / 65% coverage ] ****** [5386 done /4590 queued / 16 running / 224 errors / 65% coverage ] ****** [5386 done /4590 queued / 16 running / 224 errors / 65% coverage ] ****** [5387 done /4589 queued / 16 running / 224 errors / 65% coverage ] ****** [5387 done /4589 queued / 16 running / 224 errors / 65% coverage ] ****** [5388 done /4589 queued / 16 running / 224 errors / 65% coverage ] ****** [5388 done /4589 queued / 16 running / 224 errors / 65% coverage ] ****** [5389 done /4590 queued / 16 running / 224 errors / 65% coverage ] ****** [5389 done /4590 queued / 16 running / 224 errors / 65% coverage ] ****** [5390 done /4593 queued / 16 running / 224 errors / 65% coverage ] ****** [5390 done /4593 queued / 16 running / 224 errors / 65% coverage ] ****** [5391 done /4593 queued / 16 running / 224 errors / 65% coverage ] ****** [5391 done /4593 queued / 16 running / 224 errors / 65% coverage ] ****** [5392 done /4593 queued / 16 running / 224 errors / 65% coverage ] ****** [5392 done /4593 queued / 16 running / 224 errors / 65% coverage ] ****** [5393 done /4594 queued / 16 running / 224 errors / 65% coverage ] ****** [5393 done /4594 queued / 16 running / 224 errors / 65% coverage ] ****** [5394 done /4594 queued / 16 running / 224 errors / 65% coverage ] ****** [5394 done /4594 queued / 16 running / 224 errors / 65% coverage ] ****** [5395 done /4594 queued / 16 running / 224 errors / 65% coverage ] ****** [5395 done /4594 queued / 16 running / 224 errors / 65% coverage ] ****** [5396 done /4595 queued / 16 running / 224 errors / 65% coverage ] ****** [5396 done /4595 queued / 16 running / 224 errors / 65% coverage ] ****** [5397 done /4596 queued / 16 running / 224 errors / 65% coverage ] ****** [5397 done /4596 queued / 16 running / 224 errors / 65% coverage ] ****** [5398 done /4598 queued / 16 running / 224 errors / 65% coverage ] ****** [5398 done /4598 queued / 16 running / 224 errors / 65% coverage ] ****** [5399 done /4599 queued / 16 running / 224 errors / 65% coverage ] ****** [5399 done /4599 queued / 16 running / 224 errors / 65% coverage ] ****** [5400 done /4600 queued / 16 running / 224 errors / 65% coverage ] ****** [5400 done /4600 queued / 16 running / 224 errors / 65% coverage ] ****** [5401 done /4601 queued / 16 running / 224 errors / 65% coverage ] ****** [5401 done /4601 queued / 16 running / 224 errors / 65% coverage ] ****** [5402 done /4604 queued / 16 running / 224 errors / 65% coverage ] ****** [5402 done /4604 queued / 16 running / 224 errors / 65% coverage ] ****** [5403 done /4606 queued / 16 running / 224 errors / 65% coverage ] ****** [5403 done /4606 queued / 16 running / 224 errors / 65% coverage ] ****** [5404 done /4608 queued / 16 running / 224 errors / 65% coverage ] ****** [5404 done /4608 queued / 16 running / 224 errors / 65% coverage ] ****** [5405 done /4609 queued / 16 running / 224 errors / 65% coverage ] ****** [5405 done /4609 queued / 16 running / 224 errors / 65% coverage ] ****** [5406 done /4612 queued / 16 running / 224 errors / 65% coverage ] ****** [5406 done /4612 queued / 16 running / 224 errors / 65% coverage ] ****** [5407 done /4615 queued / 16 running / 224 errors / 65% coverage ] ****** [5407 done /4615 queued / 16 running / 224 errors / 65% coverage ] ****** [5408 done /4617 queued / 16 running / 224 errors / 65% coverage ] ****** [5408 done /4617 queued / 16 running / 224 errors / 65% coverage ] ****** [5409 done /4620 queued / 16 running / 224 errors / 65% coverage ] ****** [5409 done /4620 queued / 16 running / 224 errors / 65% coverage ] ****** [5410 done /4621 queued / 16 running / 224 errors / 65% coverage ] ****** [5410 done /4621 queued / 16 running / 224 errors / 65% coverage ] ****** [5411 done /4623 queued / 16 running / 224 errors / 65% coverage ] ****** [5411 done /4623 queued / 16 running / 224 errors / 65% coverage ] ****** [5412 done /4626 queued / 16 running / 224 errors / 65% coverage ] ****** [5412 done /4626 queued / 16 running / 224 errors / 65% coverage ] ****** [5413 done /4629 queued / 16 running / 224 errors / 65% coverage ] ****** [5413 done /4629 queued / 16 running / 224 errors / 65% coverage ] ****** [5414 done /4632 queued / 16 running / 224 errors / 65% coverage ] ****** [5414 done /4632 queued / 16 running / 224 errors / 65% coverage ] ****** [5415 done /4633 queued / 16 running / 224 errors / 65% coverage ] ****** [5415 done /4633 queued / 16 running / 224 errors / 65% coverage ] ****** [5416 done /4632 queued / 16 running / 224 errors / 65% coverage ] ****** [5416 done /4632 queued / 16 running / 224 errors / 65% coverage ] ****** [5417 done /4633 queued / 16 running / 224 errors / 65% coverage ] ****** [5417 done /4633 queued / 16 running / 224 errors / 65% coverage ] ****** [5418 done /4632 queued / 16 running / 224 errors / 65% coverage ] ****** [5418 done /4632 queued / 16 running / 224 errors / 65% coverage ] ****** [5419 done /4632 queued / 16 running / 224 errors / 65% coverage ] ****** [5419 done /4632 queued / 16 running / 224 errors / 65% coverage ] ****** [5420 done /4632 queued / 16 running / 224 errors / 65% coverage ] ****** [5420 done /4632 queued / 16 running / 224 errors / 65% coverage ] ****** [5421 done /4631 queued / 16 running / 224 errors / 65% coverage ] ****** [5421 done /4631 queued / 16 running / 224 errors / 65% coverage ] ****** [5422 done /4630 queued / 16 running / 224 errors / 65% coverage ] ****** [5422 done /4630 queued / 16 running / 224 errors / 65% coverage ] ****** [5423 done /4629 queued / 16 running / 224 errors / 65% coverage ] ****** [5423 done /4629 queued / 16 running / 224 errors / 65% coverage ] ****** [5424 done /4628 queued / 16 running / 224 errors / 65% coverage ] ****** [5424 done /4628 queued / 16 running / 224 errors / 65% coverage ] ****** [5425 done /4628 queued / 16 running / 224 errors / 65% coverage ] ****** [5425 done /4628 queued / 16 running / 224 errors / 65% coverage ] ****** [5426 done /4627 queued / 16 running / 224 errors / 65% coverage ] ****** [5426 done /4627 queued / 16 running / 224 errors / 65% coverage ] ****** [5427 done /4626 queued / 16 running / 224 errors / 65% coverage ] ****** [5427 done /4626 queued / 16 running / 224 errors / 65% coverage ] ****** [5428 done /4625 queued / 16 running / 224 errors / 65% coverage ] ****** [5428 done /4625 queued / 16 running / 224 errors / 65% coverage ] ****** [5429 done /4624 queued / 16 running / 224 errors / 65% coverage ] ****** [5429 done /4624 queued / 16 running / 224 errors / 65% coverage ] ****** [5430 done /4623 queued / 16 running / 224 errors / 65% coverage ] ****** [5430 done /4623 queued / 16 running / 224 errors / 65% coverage ] ****** [5431 done /4623 queued / 16 running / 224 errors / 65% coverage ] ****** [5431 done /4623 queued / 16 running / 224 errors / 65% coverage ] ****** [5432 done /4622 queued / 16 running / 224 errors / 65% coverage ] ****** [5432 done /4622 queued / 16 running / 224 errors / 65% coverage ] ****** [5433 done /4621 queued / 16 running / 224 errors / 65% coverage ] ****** [5433 done /4621 queued / 16 running / 224 errors / 65% coverage ] ****** [5434 done /4620 queued / 16 running / 224 errors / 65% coverage ] ****** [5434 done /4620 queued / 16 running / 224 errors / 65% coverage ] ****** [5435 done /4620 queued / 16 running / 224 errors / 65% coverage ] ****** [5435 done /4620 queued / 16 running / 224 errors / 65% coverage ] ****** [5436 done /4619 queued / 16 running / 224 errors / 65% coverage ] ****** [5436 done /4619 queued / 16 running / 224 errors / 65% coverage ] ****** [5437 done /4619 queued / 16 running / 224 errors / 65% coverage ] ****** [5437 done /4619 queued / 16 running / 224 errors / 65% coverage ] ****** [5438 done /4620 queued / 16 running / 224 errors / 65% coverage ] ****** [5438 done /4620 queued / 16 running / 224 errors / 65% coverage ] ****** [5439 done /4619 queued / 16 running / 224 errors / 65% coverage ] ****** [5439 done /4619 queued / 16 running / 224 errors / 65% coverage ] ****** [5440 done /4619 queued / 16 running / 224 errors / 65% coverage ] ****** [5440 done /4619 queued / 16 running / 224 errors / 65% coverage ] ****** [5441 done /4618 queued / 16 running / 224 errors / 65% coverage ] ****** [5441 done /4618 queued / 16 running / 224 errors / 65% coverage ] ****** [5442 done /4617 queued / 16 running / 224 errors / 65% coverage ] ****** [5442 done /4617 queued / 16 running / 224 errors / 65% coverage ] ****** [5443 done /4616 queued / 16 running / 224 errors / 65% coverage ] ****** [5443 done /4616 queued / 16 running / 224 errors / 65% coverage ] ****** [5444 done /4615 queued / 16 running / 224 errors / 65% coverage ] ****** [5444 done /4615 queued / 16 running / 224 errors / 65% coverage ] ****** [5445 done /4614 queued / 16 running / 224 errors / 65% coverage ] ****** [5445 done /4614 queued / 16 running / 224 errors / 65% coverage ] ****** [5446 done /4616 queued / 16 running / 224 errors / 65% coverage ] ****** [5446 done /4616 queued / 16 running / 224 errors / 65% coverage ] ****** [5447 done /4617 queued / 16 running / 224 errors / 65% coverage ] ****** [5447 done /4617 queued / 16 running / 224 errors / 65% coverage ] ****** [5448 done /4620 queued / 16 running / 224 errors / 65% coverage ] ****** [5448 done /4620 queued / 16 running / 224 errors / 65% coverage ] ****** [5449 done /4623 queued / 16 running / 224 errors / 65% coverage ] ****** [5449 done /4623 queued / 16 running / 224 errors / 65% coverage ] ****** [5450 done /4624 queued / 16 running / 224 errors / 65% coverage ] ****** [5450 done /4624 queued / 16 running / 224 errors / 65% coverage ] ****** [5451 done /4625 queued / 16 running / 224 errors / 65% coverage ] ****** [5451 done /4625 queued / 16 running / 224 errors / 65% coverage ] ****** [5452 done /4626 queued / 16 running / 224 errors / 65% coverage ] ****** [5452 done /4626 queued / 16 running / 224 errors / 65% coverage ] ****** [5453 done /4625 queued / 16 running / 224 errors / 65% coverage ] ****** [5453 done /4625 queued / 16 running / 224 errors / 65% coverage ] ****** [5454 done /4626 queued / 16 running / 224 errors / 65% coverage ] ****** [5454 done /4626 queued / 16 running / 224 errors / 65% coverage ] ****** [5455 done /4628 queued / 16 running / 224 errors / 65% coverage ] ****** [5455 done /4628 queued / 16 running / 224 errors / 65% coverage ] ****** [5456 done /4628 queued / 16 running / 224 errors / 65% coverage ] ****** [5456 done /4628 queued / 16 running / 224 errors / 65% coverage ] ****** [5457 done /4631 queued / 16 running / 224 errors / 65% coverage ] ****** [5457 done /4631 queued / 16 running / 224 errors / 65% coverage ] ****** [5458 done /4635 queued / 16 running / 224 errors / 65% coverage ] ****** [5458 done /4635 queued / 16 running / 224 errors / 65% coverage ] ****** [5459 done /4638 queued / 16 running / 224 errors / 65% coverage ] ****** [5459 done /4638 queued / 16 running / 224 errors / 65% coverage ] ****** [5460 done /4639 queued / 16 running / 224 errors / 65% coverage ] ****** [5460 done /4639 queued / 16 running / 224 errors / 65% coverage ] ****** [5461 done /4640 queued / 16 running / 224 errors / 65% coverage ] ****** [5461 done /4640 queued / 16 running / 224 errors / 65% coverage ] ****** [5462 done /4644 queued / 16 running / 224 errors / 65% coverage ] ****** [5462 done /4644 queued / 16 running / 224 errors / 65% coverage ] ****** [5463 done /4643 queued / 16 running / 224 errors / 65% coverage ] ****** [5463 done /4643 queued / 16 running / 224 errors / 65% coverage ] ****** [5464 done /4642 queued / 16 running / 224 errors / 65% coverage ] ****** [5464 done /4642 queued / 16 running / 224 errors / 65% coverage ] ****** [5465 done /4642 queued / 16 running / 224 errors / 65% coverage ] ****** [5465 done /4642 queued / 16 running / 224 errors / 65% coverage ] ****** [5466 done /4641 queued / 16 running / 224 errors / 65% coverage ] ****** [5466 done /4641 queued / 16 running / 224 errors / 65% coverage ] ****** [5467 done /4640 queued / 16 running / 224 errors / 65% coverage ] ****** [5467 done /4640 queued / 16 running / 224 errors / 65% coverage ] ****** [5468 done /4639 queued / 16 running / 224 errors / 65% coverage ] ****** [5468 done /4639 queued / 16 running / 224 errors / 65% coverage ] ****** [5469 done /4640 queued / 16 running / 224 errors / 65% coverage ] ****** [5469 done /4640 queued / 16 running / 224 errors / 65% coverage ] ****** [5470 done /4639 queued / 16 running / 224 errors / 65% coverage ] ****** [5470 done /4639 queued / 16 running / 224 errors / 65% coverage ] ****** [5471 done /4639 queued / 16 running / 224 errors / 65% coverage ] ****** [5471 done /4639 queued / 16 running / 224 errors / 65% coverage ] ****** [5472 done /4639 queued / 16 running / 224 errors / 65% coverage ] ****** [5472 done /4639 queued / 16 running / 224 errors / 65% coverage ] ****** [5473 done /4638 queued / 16 running / 224 errors / 65% coverage ] ****** [5473 done /4638 queued / 16 running / 224 errors / 65% coverage ] ****** [5474 done /4637 queued / 16 running / 224 errors / 65% coverage ] ****** [5474 done /4637 queued / 16 running / 224 errors / 65% coverage ] ****** [5475 done /4636 queued / 16 running / 224 errors / 65% coverage ] ****** [5475 done /4636 queued / 16 running / 224 errors / 65% coverage ] ****** [5476 done /4636 queued / 16 running / 224 errors / 65% coverage ] ****** [5476 done /4636 queued / 16 running / 224 errors / 65% coverage ] ****** [5477 done /4635 queued / 16 running / 224 errors / 65% coverage ] ****** [5477 done /4635 queued / 16 running / 224 errors / 65% coverage ] ****** [5478 done /4635 queued / 16 running / 224 errors / 65% coverage ] ****** [5478 done /4635 queued / 16 running / 224 errors / 65% coverage ] ****** [5479 done /4635 queued / 16 running / 224 errors / 65% coverage ] ****** [5479 done /4635 queued / 16 running / 224 errors / 65% coverage ] ****** [5480 done /4636 queued / 16 running / 224 errors / 65% coverage ] ****** [5480 done /4636 queued / 16 running / 224 errors / 65% coverage ] ****** [5481 done /4635 queued / 16 running / 224 errors / 65% coverage ] ****** [5481 done /4635 queued / 16 running / 224 errors / 65% coverage ] ****** [5482 done /4635 queued / 16 running / 224 errors / 65% coverage ] ****** [5482 done /4635 queued / 16 running / 224 errors / 65% coverage ] ****** [5483 done /4634 queued / 16 running / 224 errors / 65% coverage ] ****** [5483 done /4634 queued / 16 running / 224 errors / 65% coverage ] ****** [5484 done /4634 queued / 16 running / 224 errors / 65% coverage ] ****** [5484 done /4634 queued / 16 running / 224 errors / 65% coverage ] ****** [5485 done /4633 queued / 16 running / 224 errors / 65% coverage ] ****** [5485 done /4633 queued / 16 running / 224 errors / 65% coverage ] ****** [5486 done /4633 queued / 16 running / 224 errors / 65% coverage ] ****** [5486 done /4633 queued / 16 running / 224 errors / 65% coverage ] ****** [5487 done /4633 queued / 16 running / 224 errors / 65% coverage ] ****** [5487 done /4633 queued / 16 running / 224 errors / 65% coverage ] ****** [5488 done /4632 queued / 16 running / 224 errors / 65% coverage ] ****** [5488 done /4632 queued / 16 running / 224 errors / 65% coverage ] ****** [5489 done /4631 queued / 16 running / 224 errors / 65% coverage ] ****** [5489 done /4631 queued / 16 running / 224 errors / 65% coverage ] ****** [5490 done /4632 queued / 16 running / 224 errors / 65% coverage ] ****** [5490 done /4632 queued / 16 running / 224 errors / 65% coverage ] ****** [5491 done /4632 queued / 16 running / 224 errors / 65% coverage ] ****** [5491 done /4632 queued / 16 running / 224 errors / 65% coverage ] ****** [5492 done /4633 queued / 16 running / 225 errors / 65% coverage ] ****** [5492 done /4633 queued / 16 running / 225 errors / 65% coverage ] ****** [5493 done /4632 queued / 16 running / 225 errors / 65% coverage ] ****** [5493 done /4632 queued / 16 running / 225 errors / 65% coverage ] ****** [5494 done /4634 queued / 16 running / 225 errors / 65% coverage ] ****** [5494 done /4634 queued / 16 running / 225 errors / 65% coverage ] ****** [5495 done /4635 queued / 16 running / 225 errors / 65% coverage ] ****** [5495 done /4635 queued / 16 running / 225 errors / 65% coverage ] ****** [5496 done /4635 queued / 16 running / 225 errors / 65% coverage ] ****** [5496 done /4635 queued / 16 running / 225 errors / 65% coverage ] ****** [5497 done /4635 queued / 16 running / 225 errors / 65% coverage ] ****** [5497 done /4635 queued / 16 running / 225 errors / 65% coverage ] ****** [5498 done /4639 queued / 16 running / 225 errors / 65% coverage ] ****** [5498 done /4639 queued / 16 running / 225 errors / 65% coverage ] ****** [5499 done /4642 queued / 16 running / 225 errors / 65% coverage ] ****** [5499 done /4642 queued / 16 running / 225 errors / 65% coverage ] ****** [5500 done /4644 queued / 16 running / 225 errors / 65% coverage ] ****** [5500 done /4644 queued / 16 running / 225 errors / 65% coverage ] ****** [5501 done /4646 queued / 16 running / 225 errors / 65% coverage ] ****** [5501 done /4646 queued / 16 running / 225 errors / 65% coverage ] ****** [5502 done /4651 queued / 16 running / 225 errors / 65% coverage ] ****** [5502 done /4651 queued / 16 running / 225 errors / 65% coverage ] ****** [5503 done /4654 queued / 16 running / 225 errors / 65% coverage ] ****** [5503 done /4654 queued / 16 running / 225 errors / 65% coverage ] ****** [5504 done /4656 queued / 16 running / 225 errors / 65% coverage ] ****** [5504 done /4656 queued / 16 running / 225 errors / 65% coverage ] ****** [5505 done /4657 queued / 16 running / 225 errors / 65% coverage ] ****** [5505 done /4657 queued / 16 running / 225 errors / 65% coverage ] ****** [5506 done /4658 queued / 16 running / 225 errors / 65% coverage ] ****** [5506 done /4658 queued / 16 running / 225 errors / 65% coverage ] ****** [5507 done /4660 queued / 16 running / 225 errors / 65% coverage ] ****** [5507 done /4660 queued / 16 running / 225 errors / 65% coverage ] ****** [5508 done /4661 queued / 16 running / 225 errors / 65% coverage ] ****** [5508 done /4661 queued / 16 running / 225 errors / 65% coverage ] ****** [5509 done /4664 queued / 16 running / 225 errors / 65% coverage ] ****** [5509 done /4664 queued / 16 running / 225 errors / 65% coverage ] ****** [5510 done /4665 queued / 16 running / 225 errors / 65% coverage ] ****** [5510 done /4665 queued / 16 running / 225 errors / 65% coverage ] ****** [5511 done /4668 queued / 16 running / 225 errors / 65% coverage ] ****** [5511 done /4668 queued / 16 running / 225 errors / 65% coverage ] ****** [5512 done /4670 queued / 16 running / 225 errors / 65% coverage ] ****** [5512 done /4670 queued / 16 running / 225 errors / 65% coverage ] ****** [5513 done /4671 queued / 16 running / 225 errors / 65% coverage ] ****** [5513 done /4671 queued / 16 running / 225 errors / 65% coverage ] ****** [5514 done /4672 queued / 16 running / 225 errors / 65% coverage ] ****** [5514 done /4672 queued / 16 running / 225 errors / 65% coverage ] ****** [5515 done /4671 queued / 16 running / 225 errors / 65% coverage ] ****** [5515 done /4671 queued / 16 running / 225 errors / 65% coverage ] ****** [5516 done /4673 queued / 16 running / 225 errors / 65% coverage ] ****** [5516 done /4673 queued / 16 running / 225 errors / 65% coverage ] ****** [5517 done /4673 queued / 16 running / 225 errors / 65% coverage ] ****** [5517 done /4673 queued / 16 running / 225 errors / 65% coverage ] ****** [5518 done /4672 queued / 16 running / 225 errors / 65% coverage ] ****** [5518 done /4672 queued / 16 running / 225 errors / 65% coverage ] ****** [5519 done /4671 queued / 16 running / 225 errors / 65% coverage ] ****** [5519 done /4671 queued / 16 running / 225 errors / 65% coverage ] ****** [5520 done /4670 queued / 16 running / 225 errors / 65% coverage ] ****** [5520 done /4670 queued / 16 running / 225 errors / 65% coverage ] ****** [5521 done /4670 queued / 16 running / 225 errors / 65% coverage ] ****** [5521 done /4670 queued / 16 running / 225 errors / 65% coverage ] ****** [5522 done /4672 queued / 16 running / 225 errors / 65% coverage ] ****** [5522 done /4672 queued / 16 running / 225 errors / 65% coverage ] ****** [5523 done /4673 queued / 16 running / 225 errors / 65% coverage ] ****** [5523 done /4673 queued / 16 running / 225 errors / 65% coverage ] ****** [5524 done /4673 queued / 16 running / 225 errors / 65% coverage ] ****** [5524 done /4673 queued / 16 running / 225 errors / 65% coverage ] ****** [5525 done /4673 queued / 16 running / 225 errors / 65% coverage ] ****** [5525 done /4673 queued / 16 running / 225 errors / 65% coverage ] ****** [5526 done /4675 queued / 16 running / 225 errors / 65% coverage ] ****** [5526 done /4675 queued / 16 running / 225 errors / 65% coverage ] ****** [5527 done /4677 queued / 16 running / 225 errors / 65% coverage ] ****** [5527 done /4677 queued / 16 running / 225 errors / 65% coverage ] ****** [5528 done /4676 queued / 16 running / 225 errors / 65% coverage ] ****** [5528 done /4676 queued / 16 running / 225 errors / 65% coverage ] ****** [5529 done /4679 queued / 16 running / 225 errors / 65% coverage ] ****** [5529 done /4679 queued / 16 running / 225 errors / 65% coverage ] ****** [5530 done /4678 queued / 16 running / 225 errors / 65% coverage ] ****** [5530 done /4678 queued / 16 running / 225 errors / 65% coverage ] ****** [5531 done /4677 queued / 16 running / 225 errors / 65% coverage ] ****** [5531 done /4677 queued / 16 running / 225 errors / 65% coverage ] ****** [5532 done /4679 queued / 16 running / 225 errors / 65% coverage ] ****** [5532 done /4679 queued / 16 running / 225 errors / 65% coverage ] ****** [5533 done /4678 queued / 16 running / 225 errors / 65% coverage ] ****** [5533 done /4678 queued / 16 running / 225 errors / 65% coverage ] ****** [5534 done /4678 queued / 16 running / 225 errors / 65% coverage ] ****** [5534 done /4678 queued / 16 running / 225 errors / 65% coverage ] ****** [5535 done /4678 queued / 16 running / 225 errors / 65% coverage ] ****** [5535 done /4678 queued / 16 running / 225 errors / 65% coverage ] ****** [5536 done /4677 queued / 16 running / 225 errors / 65% coverage ] ****** [5536 done /4677 queued / 16 running / 225 errors / 65% coverage ] ****** [5537 done /4676 queued / 16 running / 225 errors / 65% coverage ] ****** [5537 done /4676 queued / 16 running / 225 errors / 65% coverage ] ****** [5538 done /4675 queued / 16 running / 225 errors / 65% coverage ] ****** [5538 done /4675 queued / 16 running / 225 errors / 65% coverage ] ****** [5539 done /4676 queued / 16 running / 225 errors / 65% coverage ] ****** [5539 done /4676 queued / 16 running / 225 errors / 65% coverage ] ****** [5540 done /4675 queued / 16 running / 225 errors / 65% coverage ] ****** [5540 done /4675 queued / 16 running / 225 errors / 65% coverage ] ****** [5541 done /4676 queued / 16 running / 225 errors / 65% coverage ] ****** [5541 done /4676 queued / 16 running / 225 errors / 65% coverage ] ****** [5542 done /4676 queued / 16 running / 225 errors / 65% coverage ] ****** [5542 done /4676 queued / 16 running / 225 errors / 65% coverage ] ****** [5543 done /4675 queued / 16 running / 225 errors / 65% coverage ] ****** [5543 done /4675 queued / 16 running / 225 errors / 65% coverage ] ****** [5544 done /4678 queued / 16 running / 225 errors / 65% coverage ] ****** [5544 done /4678 queued / 16 running / 225 errors / 65% coverage ] ****** [5545 done /4677 queued / 16 running / 225 errors / 65% coverage ] ****** [5545 done /4677 queued / 16 running / 225 errors / 65% coverage ] ****** [5546 done /4676 queued / 16 running / 225 errors / 65% coverage ] ****** [5546 done /4676 queued / 16 running / 225 errors / 65% coverage ] ****** [5547 done /4677 queued / 16 running / 225 errors / 65% coverage ] ****** [5547 done /4677 queued / 16 running / 225 errors / 65% coverage ] ****** [5548 done /4678 queued / 16 running / 225 errors / 65% coverage ] ****** [5548 done /4678 queued / 16 running / 225 errors / 65% coverage ] ****** [5549 done /4681 queued / 16 running / 225 errors / 65% coverage ] ****** [5549 done /4681 queued / 16 running / 225 errors / 65% coverage ] ****** [5550 done /4681 queued / 16 running / 225 errors / 65% coverage ] ****** [5550 done /4681 queued / 16 running / 225 errors / 65% coverage ] ****** [5551 done /4683 queued / 16 running / 225 errors / 65% coverage ] ****** [5551 done /4683 queued / 16 running / 225 errors / 65% coverage ] ****** [5552 done /4684 queued / 16 running / 225 errors / 65% coverage ] ****** [5552 done /4684 queued / 16 running / 225 errors / 65% coverage ] ****** [5553 done /4684 queued / 16 running / 225 errors / 65% coverage ] ****** [5553 done /4684 queued / 16 running / 225 errors / 65% coverage ] ****** [5554 done /4687 queued / 16 running / 225 errors / 65% coverage ] ****** [5554 done /4687 queued / 16 running / 225 errors / 65% coverage ] ****** [5555 done /4686 queued / 16 running / 225 errors / 65% coverage ] ****** [5555 done /4686 queued / 16 running / 225 errors / 65% coverage ] ****** [5556 done /4688 queued / 16 running / 225 errors / 65% coverage ] ****** [5556 done /4688 queued / 16 running / 225 errors / 65% coverage ] ****** [5557 done /4689 queued / 16 running / 225 errors / 65% coverage ] ****** [5557 done /4689 queued / 16 running / 225 errors / 65% coverage ] ****** [5558 done /4693 queued / 16 running / 225 errors / 65% coverage ] ****** [5558 done /4693 queued / 16 running / 225 errors / 65% coverage ] ****** [5559 done /4696 queued / 16 running / 225 errors / 65% coverage ] ****** [5559 done /4696 queued / 16 running / 225 errors / 65% coverage ] ****** [5560 done /4697 queued / 16 running / 225 errors / 65% coverage ] ****** [5560 done /4697 queued / 16 running / 225 errors / 65% coverage ] ****** [5561 done /4700 queued / 16 running / 225 errors / 65% coverage ] ****** [5561 done /4700 queued / 16 running / 225 errors / 65% coverage ] ****** [5562 done /4705 queued / 16 running / 225 errors / 65% coverage ] ****** [5562 done /4705 queued / 16 running / 225 errors / 65% coverage ] ****** [5563 done /4706 queued / 16 running / 225 errors / 65% coverage ] ****** [5563 done /4706 queued / 16 running / 225 errors / 65% coverage ] ****** [5564 done /4707 queued / 16 running / 225 errors / 65% coverage ] ****** [5564 done /4707 queued / 16 running / 225 errors / 65% coverage ] ****** [5565 done /4707 queued / 16 running / 225 errors / 65% coverage ] ****** [5565 done /4707 queued / 16 running / 225 errors / 65% coverage ] ****** [5566 done /4709 queued / 16 running / 225 errors / 65% coverage ] ****** [5566 done /4709 queued / 16 running / 225 errors / 65% coverage ] ****** [5567 done /4711 queued / 16 running / 225 errors / 65% coverage ] ****** [5567 done /4711 queued / 16 running / 225 errors / 65% coverage ] ****** [5568 done /4711 queued / 16 running / 225 errors / 65% coverage ] ****** [5568 done /4711 queued / 16 running / 225 errors / 65% coverage ] ****** [5569 done /4711 queued / 16 running / 225 errors / 65% coverage ] ****** [5569 done /4711 queued / 16 running / 225 errors / 65% coverage ] ****** [5570 done /4710 queued / 16 running / 225 errors / 65% coverage ] ****** [5570 done /4710 queued / 16 running / 225 errors / 65% coverage ] ****** [5571 done /4709 queued / 16 running / 225 errors / 65% coverage ] ****** [5571 done /4709 queued / 16 running / 225 errors / 65% coverage ] ****** [5572 done /4708 queued / 16 running / 225 errors / 65% coverage ] ****** [5572 done /4708 queued / 16 running / 225 errors / 65% coverage ] ****** [5573 done /4708 queued / 16 running / 225 errors / 65% coverage ] ****** [5573 done /4708 queued / 16 running / 225 errors / 65% coverage ] ****** [5574 done /4710 queued / 16 running / 226 errors / 65% coverage ] ****** [5574 done /4710 queued / 16 running / 226 errors / 65% coverage ] ****** [5575 done /4710 queued / 16 running / 226 errors / 65% coverage ] ****** [5575 done /4710 queued / 16 running / 226 errors / 65% coverage ] ****** [5576 done /4711 queued / 16 running / 226 errors / 65% coverage ] ****** [5576 done /4711 queued / 16 running / 226 errors / 65% coverage ] ****** [5577 done /4711 queued / 16 running / 226 errors / 65% coverage ] ****** [5577 done /4711 queued / 16 running / 226 errors / 65% coverage ] ****** [5578 done /4712 queued / 16 running / 226 errors / 65% coverage ] ****** [5578 done /4712 queued / 16 running / 226 errors / 65% coverage ] ****** [5579 done /4712 queued / 16 running / 226 errors / 65% coverage ] ****** [5579 done /4712 queued / 16 running / 226 errors / 65% coverage ] ****** [5580 done /4711 queued / 16 running / 226 errors / 65% coverage ] ****** [5580 done /4711 queued / 16 running / 226 errors / 65% coverage ] ****** [5581 done /4710 queued / 16 running / 226 errors / 65% coverage ] ****** [5581 done /4710 queued / 16 running / 226 errors / 65% coverage ] ****** [5582 done /4712 queued / 16 running / 226 errors / 65% coverage ] ****** [5582 done /4712 queued / 16 running / 226 errors / 65% coverage ] ****** [5583 done /4713 queued / 16 running / 226 errors / 65% coverage ] ****** [5583 done /4713 queued / 16 running / 226 errors / 65% coverage ] ****** [5584 done /4712 queued / 16 running / 226 errors / 65% coverage ] ****** [5584 done /4712 queued / 16 running / 226 errors / 65% coverage ] ****** [5585 done /4714 queued / 16 running / 226 errors / 65% coverage ] ****** [5585 done /4714 queued / 16 running / 226 errors / 65% coverage ] ****** [5586 done /4714 queued / 16 running / 226 errors / 65% coverage ] ****** [5586 done /4714 queued / 16 running / 226 errors / 65% coverage ] ****** [5587 done /4715 queued / 16 running / 226 errors / 65% coverage ] ****** [5587 done /4715 queued / 16 running / 226 errors / 65% coverage ] ****** [5588 done /4714 queued / 16 running / 226 errors / 65% coverage ] ****** [5588 done /4714 queued / 16 running / 226 errors / 65% coverage ] ****** [5589 done /4713 queued / 16 running / 226 errors / 65% coverage ] ****** [5589 done /4713 queued / 16 running / 226 errors / 65% coverage ] ****** [5590 done /4712 queued / 16 running / 227 errors / 65% coverage ] ****** [5590 done /4712 queued / 16 running / 227 errors / 65% coverage ] ****** [5591 done /4713 queued / 16 running / 227 errors / 65% coverage ] ****** [5591 done /4713 queued / 16 running / 227 errors / 65% coverage ] ****** [5592 done /4712 queued / 16 running / 227 errors / 65% coverage ] ****** [5592 done /4712 queued / 16 running / 227 errors / 65% coverage ] ****** [5593 done /4711 queued / 16 running / 227 errors / 65% coverage ] ****** [5593 done /4711 queued / 16 running / 227 errors / 65% coverage ] ****** [5594 done /4711 queued / 16 running / 227 errors / 65% coverage ] ****** [5594 done /4711 queued / 16 running / 227 errors / 65% coverage ] ****** [5595 done /4712 queued / 16 running / 227 errors / 65% coverage ] ****** [5595 done /4712 queued / 16 running / 227 errors / 65% coverage ] ****** [5596 done /4712 queued / 16 running / 227 errors / 65% coverage ] ****** [5596 done /4712 queued / 16 running / 227 errors / 65% coverage ] ****** [5597 done /4713 queued / 16 running / 227 errors / 65% coverage ] ****** [5597 done /4713 queued / 16 running / 227 errors / 65% coverage ] ****** [5598 done /4714 queued / 16 running / 227 errors / 65% coverage ] ****** [5598 done /4714 queued / 16 running / 227 errors / 65% coverage ] ****** [5599 done /4716 queued / 16 running / 227 errors / 65% coverage ] ****** [5599 done /4716 queued / 16 running / 227 errors / 65% coverage ] ****** [5600 done /4717 queued / 16 running / 227 errors / 65% coverage ] ****** [5600 done /4717 queued / 16 running / 227 errors / 65% coverage ] ****** [5601 done /4722 queued / 16 running / 227 errors / 65% coverage ] ****** [5601 done /4722 queued / 16 running / 227 errors / 65% coverage ] ****** [5602 done /4725 queued / 16 running / 227 errors / 65% coverage ] ****** [5602 done /4725 queued / 16 running / 227 errors / 65% coverage ] ****** [5603 done /4728 queued / 16 running / 227 errors / 65% coverage ] ****** [5603 done /4728 queued / 16 running / 227 errors / 65% coverage ] ****** [5604 done /4731 queued / 16 running / 227 errors / 65% coverage ] ****** [5604 done /4731 queued / 16 running / 227 errors / 65% coverage ] ****** [5605 done /4732 queued / 16 running / 227 errors / 65% coverage ] ****** [5605 done /4732 queued / 16 running / 227 errors / 65% coverage ] ****** [5606 done /4733 queued / 16 running / 227 errors / 65% coverage ] ****** [5606 done /4733 queued / 16 running / 227 errors / 65% coverage ] ****** [5607 done /4735 queued / 16 running / 227 errors / 65% coverage ] ****** [5607 done /4735 queued / 16 running / 227 errors / 65% coverage ] ****** [5608 done /4739 queued / 16 running / 227 errors / 65% coverage ] ****** [5608 done /4739 queued / 16 running / 227 errors / 65% coverage ] ****** [5609 done /4741 queued / 16 running / 227 errors / 65% coverage ] ****** [5609 done /4741 queued / 16 running / 227 errors / 65% coverage ] ****** [5610 done /4741 queued / 16 running / 227 errors / 65% coverage ] ****** [5610 done /4741 queued / 16 running / 227 errors / 65% coverage ] ****** [5611 done /4742 queued / 16 running / 227 errors / 65% coverage ] ****** [5611 done /4742 queued / 16 running / 227 errors / 65% coverage ] ****** [5612 done /4743 queued / 16 running / 227 errors / 65% coverage ] ****** [5612 done /4743 queued / 16 running / 227 errors / 65% coverage ] ****** [5613 done /4748 queued / 16 running / 227 errors / 65% coverage ] ****** [5613 done /4748 queued / 16 running / 227 errors / 65% coverage ] ****** [5614 done /4747 queued / 16 running / 227 errors / 65% coverage ] ****** [5614 done /4747 queued / 16 running / 227 errors / 65% coverage ] ****** [5615 done /4751 queued / 16 running / 227 errors / 65% coverage ] ****** [5615 done /4751 queued / 16 running / 227 errors / 65% coverage ] ****** [5616 done /4752 queued / 16 running / 227 errors / 65% coverage ] ****** [5616 done /4752 queued / 16 running / 227 errors / 65% coverage ] ****** [5617 done /4751 queued / 16 running / 227 errors / 65% coverage ] ****** [5617 done /4751 queued / 16 running / 227 errors / 65% coverage ] ****** [5618 done /4754 queued / 16 running / 228 errors / 65% coverage ] ****** [5618 done /4754 queued / 16 running / 228 errors / 65% coverage ] ****** [5619 done /4753 queued / 16 running / 228 errors / 65% coverage ] ****** [5619 done /4753 queued / 16 running / 228 errors / 65% coverage ] ****** [5620 done /4754 queued / 16 running / 228 errors / 65% coverage ] ****** [5620 done /4754 queued / 16 running / 228 errors / 65% coverage ] ****** [5621 done /4756 queued / 16 running / 228 errors / 65% coverage ] ****** [5621 done /4756 queued / 16 running / 228 errors / 65% coverage ] ****** [5622 done /4755 queued / 16 running / 228 errors / 65% coverage ] ****** [5622 done /4755 queued / 16 running / 228 errors / 65% coverage ] ****** [5623 done /4756 queued / 16 running / 228 errors / 65% coverage ] ****** [5623 done /4756 queued / 16 running / 228 errors / 65% coverage ] ****** [5624 done /4755 queued / 16 running / 228 errors / 65% coverage ] ****** [5624 done /4755 queued / 16 running / 228 errors / 65% coverage ] ****** [5625 done /4756 queued / 16 running / 229 errors / 65% coverage ] ****** [5625 done /4756 queued / 16 running / 229 errors / 65% coverage ] ****** [5626 done /4757 queued / 16 running / 229 errors / 65% coverage ] ****** [5626 done /4757 queued / 16 running / 229 errors / 65% coverage ] ****** [5627 done /4757 queued / 16 running / 229 errors / 65% coverage ] ****** [5627 done /4757 queued / 16 running / 229 errors / 65% coverage ] ****** [5628 done /4758 queued / 16 running / 229 errors / 65% coverage ] ****** [5628 done /4758 queued / 16 running / 229 errors / 65% coverage ] ****** [5629 done /4758 queued / 16 running / 229 errors / 65% coverage ] ****** [5629 done /4758 queued / 16 running / 229 errors / 65% coverage ] ****** [5630 done /4757 queued / 16 running / 229 errors / 65% coverage ] ****** [5630 done /4757 queued / 16 running / 229 errors / 65% coverage ] ****** [5631 done /4757 queued / 16 running / 229 errors / 65% coverage ] ****** [5631 done /4757 queued / 16 running / 229 errors / 65% coverage ] ****** [5632 done /4757 queued / 16 running / 229 errors / 65% coverage ] ****** [5632 done /4757 queued / 16 running / 229 errors / 65% coverage ] ****** [5633 done /4759 queued / 16 running / 229 errors / 65% coverage ] ****** [5633 done /4759 queued / 16 running / 229 errors / 65% coverage ] ****** [5634 done /4760 queued / 16 running / 229 errors / 65% coverage ] ****** [5634 done /4760 queued / 16 running / 229 errors / 65% coverage ] ****** [5635 done /4759 queued / 16 running / 230 errors / 65% coverage ] ****** [5635 done /4759 queued / 16 running / 230 errors / 65% coverage ] ****** [5636 done /4758 queued / 16 running / 230 errors / 65% coverage ] ****** [5636 done /4758 queued / 16 running / 230 errors / 65% coverage ] ****** [5637 done /4758 queued / 16 running / 230 errors / 65% coverage ] ****** [5637 done /4758 queued / 16 running / 230 errors / 65% coverage ] ****** [5638 done /4759 queued / 16 running / 230 errors / 65% coverage ] ****** [5638 done /4759 queued / 16 running / 230 errors / 65% coverage ] ****** [5639 done /4758 queued / 16 running / 230 errors / 65% coverage ] ****** [5639 done /4758 queued / 16 running / 230 errors / 65% coverage ] ****** [5640 done /4758 queued / 16 running / 230 errors / 65% coverage ] ****** [5640 done /4758 queued / 16 running / 230 errors / 65% coverage ] ****** [5641 done /4758 queued / 16 running / 230 errors / 65% coverage ] ****** [5641 done /4758 queued / 16 running / 230 errors / 65% coverage ] ****** [5642 done /4757 queued / 16 running / 230 errors / 65% coverage ] ****** [5642 done /4757 queued / 16 running / 230 errors / 65% coverage ] ****** [5643 done /4758 queued / 16 running / 230 errors / 65% coverage ] ****** [5643 done /4758 queued / 16 running / 230 errors / 65% coverage ] ****** [5644 done /4760 queued / 16 running / 230 errors / 65% coverage ] ****** [5644 done /4760 queued / 16 running / 230 errors / 65% coverage ] ****** [5645 done /4760 queued / 16 running / 230 errors / 65% coverage ] ****** [5645 done /4760 queued / 16 running / 230 errors / 65% coverage ] ****** [5646 done /4761 queued / 16 running / 230 errors / 65% coverage ] ****** [5646 done /4761 queued / 16 running / 230 errors / 65% coverage ] ****** [5647 done /4760 queued / 16 running / 230 errors / 65% coverage ] ****** [5647 done /4760 queued / 16 running / 230 errors / 65% coverage ] ****** [5648 done /4762 queued / 16 running / 230 errors / 65% coverage ] ****** [5648 done /4762 queued / 16 running / 230 errors / 65% coverage ] ****** [5649 done /4765 queued / 16 running / 230 errors / 65% coverage ] ****** [5649 done /4765 queued / 16 running / 230 errors / 65% coverage ] ****** [5650 done /4766 queued / 16 running / 230 errors / 65% coverage ] ****** [5650 done /4766 queued / 16 running / 230 errors / 65% coverage ] ****** [5651 done /4767 queued / 16 running / 230 errors / 65% coverage ] ****** [5651 done /4767 queued / 16 running / 230 errors / 65% coverage ] ****** [5652 done /4770 queued / 16 running / 230 errors / 65% coverage ] ****** [5652 done /4770 queued / 16 running / 230 errors / 65% coverage ] ****** [5653 done /4772 queued / 16 running / 230 errors / 65% coverage ] ****** [5653 done /4772 queued / 16 running / 230 errors / 65% coverage ] ****** [5654 done /4773 queued / 16 running / 230 errors / 65% coverage ] ****** [5654 done /4773 queued / 16 running / 230 errors / 65% coverage ] ****** [5655 done /4775 queued / 16 running / 230 errors / 65% coverage ] ****** [5655 done /4775 queued / 16 running / 230 errors / 65% coverage ] ****** [5656 done /4777 queued / 16 running / 230 errors / 65% coverage ] ****** [5656 done /4777 queued / 16 running / 230 errors / 65% coverage ] ****** [5657 done /4780 queued / 16 running / 230 errors / 65% coverage ] ****** [5657 done /4780 queued / 16 running / 230 errors / 65% coverage ] ****** [5658 done /4782 queued / 16 running / 230 errors / 65% coverage ] ****** [5658 done /4782 queued / 16 running / 230 errors / 65% coverage ] ****** [5659 done /4783 queued / 16 running / 230 errors / 65% coverage ] ****** [5659 done /4783 queued / 16 running / 230 errors / 65% coverage ] ****** [5660 done /4785 queued / 16 running / 230 errors / 65% coverage ] ****** [5660 done /4785 queued / 16 running / 230 errors / 65% coverage ] ****** [5661 done /4788 queued / 16 running / 230 errors / 65% coverage ] ****** [5661 done /4788 queued / 16 running / 230 errors / 65% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound consoleCall","Error","Number","toString","fromCharCode","apply","bound init","freeze","RegExp","toUpperCase","create","bound "]
*-- regex: 30
*-- Stat Module Done --*
*-- Test Case {"_bound":0,"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0} start 0.0074 took 4.6267s
*-- Errors occured in test {"_bound":0,"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"_bound":1,"ExpandedSwitcher":0} start 4.7551 took 1.6698s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":3,"ExpansionArg_int":0} start 6.493 took 1.4784s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpandedSwitcher":0,"_bound":4,"ExpansionArg_int":0} start 6.5147 took 1.6106s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":2} start 6.4599 took 1.7619s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":4} start 8.0173 took 1.8894s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":5,"ExpansionArg_string":"PureString"} start 8.0387 took 2.0208s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":5} start 8.1604 took 1.9982s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"_bound":3} start 4.78 took 5.4862s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"_bound":3}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"_bound":3}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":6,"ExpansionArg_string":"PureString"} start 8.1859 took 2.1796s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"ExpandedSwitcher":0,"_bound":6,"ExpansionArg_string":"PureString"} start 8.0758 took 2.2899s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"_bound":2} start 4.8123 took 5.7712s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"_bound":2}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"_bound":2}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpandedSwitcher":0,"_bound":7,"ExpansionArg_array_length":0} start 10.1243 took 1.7164s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpandedSwitcher":0,"_bound":5,"ExpansionArg_int":0} start 10.0068 took 2.0676s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":6,"ExpansionArg_array_length":0} start 10.1026 took 2.1077s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":1,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":7} start 10.5371 took 2.2904s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":8,"ExpansionArg_int_2":0} start 10.494 took 2.6664s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":7,"ExpansionArg_array_length":0} start 10.409 took 2.8069s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":9,"ExpansionArg_array_length":0} start 10.4666 took 2.9096s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_bool":false} start 11.9537 took 2.8189s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":1,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":8} start 12.0384 took 2.848s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_int":0} start 12.0063 took 2.9693s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_array_element_0_type":0} start 11.9307 took 3.0892s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":7,"ExpansionArg_string":"PureString"} start 12.1196 took 3.0327s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":7,"ExpansionArg_bool":false} start 12.5416 took 2.9297s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":8,"ExpansionArg_array_element_0_type":0} start 12.5158 took 3.0183s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":6} start 12.1565 took 3.3774s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_string_2":"PureString"} start 11.9811 took 3.5529s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":5,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_bool":false} start 12.8662 took 2.9004s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":8,"ExpansionArg_bool":false} start 13.2854 took 2.5955s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_array_element_0_type":0} start 13.3338 took 2.6592s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_array_element_0_type":0} start 13.4257 took 2.7557s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_bool":false} start 14.8397 took 2.3348s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_0_int":0} start 15.0884 took 2.5397s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_1_type":0} start 15.0641 took 2.9979s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":6,"ExpandedSwitcher":0,"_bound":8,"ExpansionArg_bool_2":false} start 15.4983 took 2.6578s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_array_element_1_type":0} start 15.5708 took 2.5852s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":8,"ExpansionArg_array_length":0} start 15.1858 took 2.9703s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":2,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_int":0} start 15.6616 took 2.945s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"_bound":4,"ExpansionArg_int":0} start 10.3185 took 8.2883s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"_bound":4,"ExpansionArg_int":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"_bound":4}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_array_element_0_int":0} start 15.6013 took 3.0054s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_length_2":0} start 15.8335 took 2.7735s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_string":"PureString"} start 15.8068 took 3.2983s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_int":0} start 15.9108 took 3.1942s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_type_2":0,"_bound":3,"ExpansionArg_int":0} start 10.678 took 8.4892s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_type_2":0,"_bound":3,"ExpansionArg_int":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_type_2":0,"_bound":3}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_array_element_1_type":0} start 16.1039 took 3.0639s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"_bound":4,"ExpansionArg_int":0} start 10.648 took 8.5197s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"_bound":4,"ExpansionArg_int":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"_bound":4}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":10} start 17.2198 took 2.5086s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_1_type":0} start 16.7502 took 3.0656s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_0_bool":false} start 17.8874 took 2.9047s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool_2":false,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_array_length":0} start 18.4043 took 2.6841s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_1_type":0} start 18.097 took 2.9912s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool_2":false,"ExpandedSwitcher":0,"_bound":9} start 18.4804 took 3.2452s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_2_type":0} start 18.6351 took 3.2535s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_bool":false} start 18.565 took 3.4199s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_array_element_2_type":0} start 19.0663 took 3.0599s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":14} start 19.132 took 2.9943s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool_2":false,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_string":"PureString"} start 19.2785 took 3.4184s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_array_element_0_string":"PureString"} start 19.1955 took 3.5892s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":3,"ExpansionArg_type_2":0,"_bound":6} start 19.3854 took 3.5313s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":3,"ExpansionArg_type_2":0,"_bound":6}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":3,"ExpansionArg_type_2":0,"_bound":6}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":10} start 19.6784 took 3.2383s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":12} start 19.8536 took 3.2277s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_array_element_1_type":0} start 19.9352 took 3.4954s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_0_array_length":0} start 21.0397 took 2.871s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_0_string":"PureString"} start 21.1766 took 3.2968s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool_2":false,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_int":0} start 21.7646 took 2.9697s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_string":"PureString"} start 21.9442 took 2.9335s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_array_element_0_type":0} start 21.654 took 3.2238s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_0_type":0} start 22.1781 took 2.8674s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_array_element_0_int":0} start 22.6497 took 2.9257s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_array_element_0_bool":false} start 22.8755 took 2.8498s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_2_type":0} start 22.9613 took 2.8533s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_array_element_0_string":"PureString"} start 23.1326 took 2.8592s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_1_type":0} start 23.4761 took 3.1205s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":3,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_string":"PureString"} start 24.5024 took 2.4578s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_2_type":0} start 23.9863 took 3.1139s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":14,"ExpansionArg_bool":false} start 24.9342 took 3.2113s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_array_element_0_string":"PureString"} start 25.6229 took 2.6903s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_1_bool":false} start 25.125 took 3.267s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_2_type":0} start 25.0112 took 3.381s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_int":3,"_bound":6} start 18.7351 took 10.0738s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_int":3,"_bound":6}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_int":3,"_bound":6}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_0_array_length":0} start 25.7672 took 3.0418s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":11} start 25.8575 took 3.0524s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpansionArg_int":3,"_bound":7} start 19.7834 took 9.2781s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpansionArg_int":3,"_bound":7}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpansionArg_int":3,"_bound":7}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_0_int":0} start 26.1386 took 3.2456s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher":0,"_bound":13} start 26.6412 took 2.8233s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_0_bool":false} start 27.0109 took 2.9119s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":16,"ExpansionArg_bool":false} start 27.4623 took 2.7522s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":5} start 22.0291 took 8.5673s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":5}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"_bound":5}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_length_2":0} start 28.2658 took 2.5359s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_0_bool":false} start 28.3409 took 3.0717s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_1_array_length":0} start 28.4657 took 3.1229s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":1,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":14} start 28.9456 took 3.307s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":15,"ExpansionArg_int":0} start 29.1182 took 3.2248s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_1_int":0} start 28.8601 took 3.4829s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":5,"ExpansionArg_string":"PureString"} start 22.7256 took 9.6172s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":5,"ExpansionArg_string":"PureString"}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":5}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_1_string":"PureString"} start 29.0258 took 3.6145s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":16} start 28.774 took 3.8664s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_3_type":0} start 29.5047 took 3.1361s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"_bound":4,"ExpansionArg_string":"PureString"} start 23.0331 took 9.6073s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"_bound":4,"ExpansionArg_string":"PureString"}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"_bound":4}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_0_array_length":0} start 29.9848 took 3.0766s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_length_2":0} start 30.2708 took 2.9018s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_array_element_1_string":"PureString"} start 30.6768 took 3.0446s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_0_type":0} start 30.874 took 3.0703s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_1_string":"PureString"} start 31.6564 took 2.5146s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":6,"ExpansionArg_string":"PureString"} start 24.8107 took 9.8899s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":6,"ExpansionArg_string":"PureString"}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"_bound":6}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_0_array_length":0} start 31.5106 took 3.2819s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":3,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_string":"PureString"} start 32.2928 took 2.5986s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_2_type":0} start 32.3872 took 2.8178s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":5,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_1_bool":false} start 32.468 took 2.8534s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_array_element_1_string":"PureString"} start 32.8334 took 2.9728s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_3_type":0} start 32.7501 took 3.1292s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_1_type":0} start 33.6407 took 2.5185s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_string":"","ExpansionArg_type_2":0,"_bound":5,"ExpansionArg_array_length":0} start 33.1018 took 3.5081s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_string":"","ExpansionArg_type_2":0,"_bound":5,"ExpansionArg_array_length":0}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_string":"","ExpansionArg_type_2":0,"_bound":5}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_1_int":0} start 33.8185 took 2.8774s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_1_bool":false} start 34.0185 took 2.8859s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_1_bool":false} start 34.6404 took 2.8506s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":15} start 34.9825 took 3.1571s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":18} start 35.8345 took 2.469s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":12} start 35.2812 took 3.0224s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"_bound":5,"ExpansionArg_string":"PureString"} start 29.4214 took 9.0936s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"_bound":5,"ExpansionArg_string":"PureString"}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"_bound":5}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_1_array_length":0} start 35.395 took 3.5914s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_1_string":"PureString"} start 35.9201 took 3.236s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_1_bool":false} start 36.2556 took 2.9915s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_1_int":0} start 36.7586 took 2.6069s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_1_array_length":0} start 36.9566 took 3.1279s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_1_array_length":0} start 37.6033 took 2.7569s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_string":"","_bound":7} start 32.6002 took 8.5822s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_string":"","_bound":7}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_string":"","_bound":7}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_1_int":0} start 38.2597 took 3.1498s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":16,"ExpansionArg_bool":false} start 38.3622 took 3.0474s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":15,"ExpansionArg_int":0} start 38.4553 took 3.093s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":4,"ExpansionArg_type_2":3,"ExpansionArg_string":"!0!","_bound":10} start 38.9534 took 2.5951s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":4,"ExpansionArg_type_2":3,"ExpansionArg_string":"!0!","_bound":10}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":4,"ExpansionArg_type_2":3,"ExpansionArg_string":"!0!","_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":6,"ExpansionArg_array_length":0} start 32.6831 took 8.8653s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":6,"ExpansionArg_array_length":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":6}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":0,"_bound":7} start 32.9704 took 9.2598s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":0,"_bound":7}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":0,"_bound":7}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_1_array_length":0} start 39.2839 took 3.0667s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":1,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":14} start 40.197 took 2.437s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":13} start 40.4315 took 2.4093s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_string":"","_bound":8} start 34.7568 took 8.2059s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_string":"","_bound":8}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_string":"","_bound":8}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_1_int":0} start 41.3215 took 2.331s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":7,"ExpansionArg_array_length":0} start 34.8551 took 8.8941s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":7,"ExpansionArg_array_length":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":7}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_length_2":0} start 41.5106 took 2.4574s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_1_type":0} start 41.5769 took 2.5899s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_1_type":0} start 41.6411 took 2.8614s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_array_element_1_type":0} start 42.2959 took 2.3484s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":5,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_bool":false} start 42.3997 took 2.392s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":2,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_int":0} start 42.665 took 2.3429s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"ExpansionArg_type_2":0,"_bound":6,"ExpansionArg_bool":false} start 36.6365 took 8.4764s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"ExpansionArg_type_2":0,"_bound":6,"ExpansionArg_bool":false}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"ExpansionArg_type_2":0,"_bound":6}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_1_string":"PureString"} start 43.0327 took 2.5585s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_2_int":0} start 42.8764 took 2.8176s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_2_int":0} start 43.7151 took 2.3134s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_0_array_element_0_type":0} start 44.4665 took 2.0526s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":2,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_int":0} start 44.0231 took 2.6751s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_1_type":0} start 44.5448 took 2.2975s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_3_type":0} start 44.7168 took 2.7488s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","_bound":7,"ExpansionArg_int_2":0} start 39.1969 took 8.3602s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","_bound":7,"ExpansionArg_int_2":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","_bound":7}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_string":"PureString"} start 44.8232 took 2.8947s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"ExpansionArg_string":"","_bound":9} start 39.0624 took 8.6557s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"ExpansionArg_string":"","_bound":9}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"ExpansionArg_string":"","_bound":9}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":1,"ExpansionArg_string":"","_bound":6} start 39.4022 took 8.7187s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":1,"ExpansionArg_string":"","_bound":6}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":1,"ExpansionArg_string":"","_bound":6}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":0,"_bound":8} start 45.1692 took 3.3782s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":0,"_bound":8}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":0,"_bound":8}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":16} start 45.055 took 3.6214s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_length_2":0} start 45.6213 took 3.1378s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_1_bool":false} start 45.7384 took 3.1966s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_int":0,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_2_bool":false} start 46.121 took 2.9306s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_int":0} start 46.5529 took 3.0733s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":8,"ExpansionArg_array_length":0} start 41.4442 took 8.1821s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":8,"ExpansionArg_array_length":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":8}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":15} start 47.1634 took 2.8261s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":13} start 46.7681 took 3.3134s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_array_element_2_int":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":14} start 47.5094 took 3.0533s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":1,"ExpansionArg_type_2":2,"ExpansionArg_int_2":0,"_bound":9} start 47.6579 took 3.0385s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":1,"ExpansionArg_type_2":2,"ExpansionArg_int_2":0,"_bound":9}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":1,"ExpansionArg_type_2":2,"ExpansionArg_int_2":0,"_bound":9}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":1,"ExpansionArg_type_2":3,"ExpansionArg_string":"","_bound":10} start 47.866 took 2.9703s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":1,"ExpansionArg_type_2":3,"ExpansionArg_string":"","_bound":10}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":1,"ExpansionArg_type_2":3,"ExpansionArg_string":"","_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":7,"ExpansionArg_bool":false} start 42.1438 took 8.7673s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":7,"ExpansionArg_bool":false}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":7}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":3,"ExpansionArg_type_2":1,"_bound":7} start 48.4903 took 2.5221s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":3,"ExpansionArg_type_2":1,"_bound":7}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":3,"ExpansionArg_type_2":1,"_bound":7}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":14} start 48.6292 took 2.4683s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_array_element_2_int":0,"ExpandedSwitcher":0,"_bound":18} start 48.7901 took 2.6021s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":5,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_bool":false} start 48.7223 took 2.9171s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_1_array_length":0} start 48.9695 took 3.1025s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_2_string":"PureString"} start 49.1699 took 3.0259s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":8,"ExpansionArg_bool":false} start 43.7945 took 8.5179s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":8,"ExpansionArg_bool":false}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":8}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":5,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"_bound":11} start 49.8007 took 2.6319s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":5,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"_bound":11}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":5,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_2_array_length":0} start 49.6984 took 2.7343s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_1_int":0} start 50.1234 took 2.9483s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_int":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_2_bool":false} start 50.6569 took 2.6886s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_string":"PureString"} start 50.7393 took 3.0727s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_array_element_0_int":0} start 50.8712 took 3.0707s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_2_bool":false} start 51.0431 took 3.094s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":3,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_string":"PureString"} start 51.4499 took 3.1328s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_1_type":0} start 51.3434 took 3.324s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_string":"PureString"} start 51.7113 took 3.1502s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_array_element_1_type":0} start 52.2511 took 2.73s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_1_type":0} start 52.4629 took 2.8896s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_length_2":0} start 52.1178 took 3.4128s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":6,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_1_bool":false} start 52.8363 took 2.8323s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type":2,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_0_int":0} start 53.1613 took 2.9522s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_2_string":"PureString"} start 53.7748 took 2.4766s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":15,"ExpansionArg_bool":false} start 53.8433 took 2.8005s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":12} start 54.0408 took 3.1429s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_0_string":"PureString"} start 54.2375 took 3.0942s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_2_array_length":0} start 54.6324 took 2.8418s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":18,"ExpansionArg_bool":false} start 54.7464 took 2.828s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_2_int":0} start 54.9434 took 2.7183s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":2,"ExpansionArg_int_2":1,"_bound":8} start 47.7623 took 9.8993s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":2,"ExpansionArg_int_2":1,"_bound":8}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":2,"ExpansionArg_int_2":1,"_bound":8}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":17,"ExpansionArg_int":0} start 55.3863 took 2.7388s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_2_string":"PureString"} start 55.3197 took 3.1473s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_2_array_length":0} start 55.6086 took 3.0197s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_array_element_1_array_length":0} start 56.0674 took 2.5609s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_element_1_string":"PureString"} start 56.2834 took 2.8225s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_1_int":0} start 56.1681 took 3.0618s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":9,"ExpansionArg_bool":false} start 50.0383 took 9.2816s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":9,"ExpansionArg_bool":false}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":9}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_length_2":0} start 57.1141 took 2.5046s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type":0,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_1_type":0} start 57.2223 took 3.029s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_0_bool":false} start 57.4384 took 2.8822s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_0_string":"PureString"} start 57.5272 took 2.9259s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_length_2":0} start 57.6264 took 2.8266s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":5,"ExpansionArg_bool":true,"_bound":8} start 50.9803 took 9.4726s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":5,"ExpansionArg_bool":true,"_bound":8}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":5,"ExpansionArg_bool":true,"_bound":8}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":17} start 58.0472 took 3.0074s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":3,"ExpansionArg_type_2":2,"ExpansionArg_int_2":1,"_bound":9} start 58.2235 took 2.9667s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":3,"ExpansionArg_type_2":2,"ExpansionArg_int_2":1,"_bound":9}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":3,"ExpansionArg_type_2":2,"ExpansionArg_int_2":1,"_bound":9}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":1,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":16} start 58.3109 took 2.9842s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_1_type":0} start 58.5547 took 3.1424s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":6,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_bool":false} start 58.666 took 3.1217s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":20} start 59.0669 took 2.8271s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_bool":true,"_bound":9} start 52.3671 took 9.5269s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_bool":true,"_bound":9}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_bool":true,"_bound":9}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_2_int":0} start 59.2808 took 2.6831s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_type_2":2,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_int":0} start 59.1842 took 2.7797s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":6,"ExpansionArg_type_2":5,"ExpansionArg_bool":false,"_bound":11} start 60.1031 took 2.6428s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":6,"ExpansionArg_type_2":5,"ExpansionArg_bool":false,"_bound":11}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":6,"ExpansionArg_type_2":5,"ExpansionArg_bool":false,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_2_bool":false} start 60.285 took 2.7931s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":16} start 60.5673 took 2.6789s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_0_array_length":0} start 60.4148 took 2.8312s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_0_bool":false} start 60.4965 took 3.1823s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_3_type":0} start 61.0098 took 2.7469s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":0,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_2_type":0} start 61.2276 took 2.6482s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_1_type":0} start 61.1183 took 2.9137s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":2,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_3_int":0} start 61.3398 took 2.7941s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_length_2":0} start 61.8592 took 2.6603s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_3_type":0} start 61.7248 took 2.8942s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":16} start 62.4124 took 2.7248s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_int":0} start 61.9291 took 3.3549s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_string":"PureString"} start 62.0127 took 3.3579s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_int":0,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_2_bool":false} start 62.4927 took 2.9723s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_array_element_2_int":0,"ExpandedSwitcher":0,"_bound":15} start 62.974 took 3.4069s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_2_int":0} start 63.6213 took 2.8898s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_array_element_2_array_length":0} start 63.2048 took 3.3818s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_element_2_string":"PureString"} start 63.2878 took 3.2988s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":17} start 63.9176 took 3.238s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_string":"PureString"} start 63.8106 took 3.3451s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_0_array_length":0} start 63.7214 took 3.4343s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_2_type":0} start 64.0813 took 3.3451s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":5,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_bool":false} start 64.1648 took 3.3598s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_0_array_element_0_type":0} start 64.5615 took 3.5951s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":6,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_0_bool":false} start 64.6539 took 3.6202s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":20} start 65.2099 took 3.1465s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":1,"ExpansionArg_array_element_3_int":0,"ExpandedSwitcher":0,"_bound":20} start 65.3146 took 3.1435s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":5,"ExpansionArg_array_element_3_int":0,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_3_bool":false} start 65.4102 took 3.1536s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":5,"ExpansionArg_bool":true,"_bound":10} start 59.3741 took 9.1898s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":5,"ExpansionArg_bool":true,"_bound":10}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":5,"ExpansionArg_bool":true,"_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_2_array_length":0} start 65.5225 took 3.1229s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_2_string":"PureString"} start 66.4311 took 2.5942s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_1_type":0} start 66.5515 took 2.6652s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":5,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_bool":false} start 66.6246 took 3.0964s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_1_type":0} start 67.1912 took 2.6167s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_array_element_1_type":0} start 67.3776 took 2.5165s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":19,"ExpansionArg_bool":false} start 67.2916 took 2.7227s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_1_type":0} start 67.4632 took 3.1413s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_string":"PureString"} start 68.4189 took 2.2949s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_length_2":0} start 68.2149 took 2.5677s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_int":0} start 67.5701 took 3.3383s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":17} start 68.4907 took 2.4178s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_0_string":"PureString"} start 68.3224 took 2.7448s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":3,"ExpansionArg_array_element_3_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_element_3_string":"PureString"} start 68.5981 took 2.5544s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_0_array_length":0} start 68.7565 took 2.7349s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":6,"ExpansionArg_type_2":5,"ExpansionArg_bool":true,"_bound":11} start 68.6924 took 2.8882s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":6,"ExpansionArg_type_2":5,"ExpansionArg_bool":true,"_bound":11}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":6,"ExpansionArg_type_2":5,"ExpansionArg_bool":true,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":4,"ExpansionArg_array_element_3_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_array_element_3_array_length":0} start 69.1382 took 2.5529s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":15} start 69.2546 took 2.8764s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_int":0} start 69.7665 took 2.5258s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":18} start 69.8544 took 2.5543s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_string":"PureString"} start 69.9301 took 2.615s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_length_2":0} start 70.0687 took 2.5926s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_0_int":0} start 70.7469 took 2.4999s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_0_type_2":0} start 70.8733 took 2.4881s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_length_2":0} start 70.672 took 2.7776s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_1_type":0} start 71.0183 took 2.5026s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_2_bool":false} start 70.9369 took 2.6859s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":2,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_3_int":0} start 71.5356 took 2.0875s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":5,"_bound":8,"ExpansionArg_bool":false} start 71.1872 took 2.9304s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":5,"_bound":8,"ExpansionArg_bool":false}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":5,"_bound":8}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":6,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_bool":false} start 71.6247 took 2.5749s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":5,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_1_bool":false} start 71.1124 took 3.1621s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_2":2,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_int":0} start 72.0556 took 2.3958s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":3,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_string":"PureString"} start 72.1743 took 2.4605s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_2_type":0} start 72.3737 took 2.5715s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":1,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_1_array_element_0_type":0} start 72.5771 took 2.5369s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_1_type":0} start 72.4897 took 2.7265s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"_bound":6,"ExpansionArg_array_length":0} start 67.0938 took 8.2508s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"_bound":6,"ExpansionArg_array_length":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"_bound":6}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_2_type":0} start 73.0485 took 2.4189s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_2_type":0} start 73.2912 took 2.5714s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_2_type":0} start 73.4053 took 2.6363s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":3,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_string":"PureString"} start 73.4792 took 2.9377s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":5,"ExpansionArg_bool":true,"_bound":13} start 74.1538 took 2.3686s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":5,"ExpansionArg_bool":true,"_bound":13}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":5,"ExpansionArg_bool":true,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":3,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_string":"PureString"} start 73.553 took 2.9333s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_array_element_2_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":16} start 73.6559 took 2.9659s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_2_string":"PureString"} start 74.0624 took 2.6554s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":18} start 74.3044 took 2.4135s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":11,"ExpansionArg_string":"PureString"} start 74.2397 took 2.9932s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":11,"ExpansionArg_string":"PureString"}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":9} start 74.6751 took 2.9541s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":9}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"_bound":9}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":21,"ExpansionArg_bool":false} start 74.9845 took 2.6448s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_string":"PureString"} start 74.5735 took 3.0559s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":17} start 75.1797 took 2.6539s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":3,"ExpansionArg_array_element_3_int":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_3_string":"PureString"} start 75.2791 took 2.6354s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":1,"ExpansionArg_array_element_3_int":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":16} start 75.7807 took 2.6095s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpansionArg_array_element_2_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_2_int":0} start 75.9227 took 3.2322s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_1_string":"PureString"} start 76.5729 took 2.7212s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_2_array_length":0} start 76.4507 took 2.8434s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_1_int":0} start 76.1268 took 3.2426s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_length_2":0} start 76.662 took 3.3226s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":12,"ExpansionArg_array_length_2":0} start 77.0653 took 2.9876s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":12,"ExpansionArg_array_length_2":0}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_int":0} start 76.7741 took 3.3693s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_string":"","_bound":12} start 77.328 took 2.8815s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_string":"","_bound":12}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_string":"","_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":18} start 77.1606 took 3.049s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":20,"ExpansionArg_int":0} start 77.6631 took 2.7051s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_1_array_length":0} start 77.7993 took 2.5694s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":10,"ExpansionArg_int":0} start 77.7311 took 2.7694s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":10,"ExpansionArg_int":0}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":1,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":19} start 77.861 took 2.6397s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":18,"ExpansionArg_bool":false} start 78.4457 took 2.6222s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_string":"PureString"} start 79.2574 took 2.0788s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_length_2":0} start 79.3952 took 2.2989s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":17,"ExpansionArg_int":0} start 80.0111 took 1.8086s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":17,"ExpansionArg_bool":false} start 80.1081 took 1.965s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":1,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":16} start 80.2374 took 1.9742s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":5,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_bool":false} start 80.4617 took 1.856s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":2,"ExpansionArg_int":1,"_bound":11} start 80.5298 took 1.883s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":2,"ExpansionArg_int":1,"_bound":11}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":2,"ExpansionArg_int":1,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":1,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":15} start 80.3273 took 2.149s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":5,"ExpansionArg_array_element_3_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_3_bool":false} start 80.398 took 2.1709s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"_bound":12} start 75.4198 took 7.1491s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"_bound":12}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_0_array_element_0_type":0} start 80.6329 took 2.0056s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_length_2":0} start 81.1069 took 1.6885s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":20,"ExpansionArg_bool":false} start 81.3928 took 1.8224s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_1_type":0} start 81.7726 took 1.773s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":16,"ExpansionArg_int":0} start 81.8809 took 1.7918s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_length_2":0} start 82.1079 took 2.4248s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":5,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_1_bool":false} start 82.2809 took 2.3884s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_int":0} start 82.4409 took 2.32s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":4,"ExpansionArg_array_element_3_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_3_array_length":0} start 82.6023 took 2.2581s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_length_2":0} start 82.3774 took 2.7889s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":17} start 82.7575 took 2.4807s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_2_type":0} start 82.5063 took 2.7977s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_0_type_2":0} start 82.8225 took 2.4816s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":1,"ExpansionArg_array_length":0,"_bound":7} start 77.9491 took 7.5201s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":1,"ExpansionArg_array_length":0,"_bound":7}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":1,"ExpansionArg_array_length":0,"_bound":7}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_length_2":0} start 83.2481 took 2.3071s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":5,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_4_type":0} start 82.6911 took 2.8641s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_string":"PureString"} start 83.5725 took 2.5992s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":10,"ExpansionArg_bool":false} start 79.3271 took 6.938s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":10,"ExpansionArg_bool":false}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":5,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_1_bool":false} start 83.9132 took 2.506s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"_bound":9,"ExpansionArg_string_2":"PureString"} start 79.4802 took 7.3373s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"_bound":9,"ExpansionArg_string_2":"PureString"}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"_bound":9}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":3,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_array_element_1_string":"PureString"} start 84.606 took 2.3304s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"ExpansionArg_array_length":0,"_bound":8,"ExpansionArg_int":0} start 80.175 took 6.8375s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"ExpansionArg_array_length":0,"_bound":8,"ExpansionArg_int":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"ExpansionArg_array_length":0,"_bound":8}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_array_element_1_string":"PureString"} start 84.7014 took 2.4009s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":24,"ExpansionArg_array_element_1_array_length":0} start 84.7991 took 2.7434s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_element_1_int":0} start 84.9021 took 2.7529s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":21} start 85.199 took 2.5455s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_array_element_0_array_element_0_type":2,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_0_array_element_0_int":0} start 85.3345 took 2.5039s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":3,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_string":"PureString"} start 85.4111 took 2.5284s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_1_type":0} start 85.6896 took 2.7668s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_1_type":0} start 85.6189 took 2.9107s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_2_type":0} start 86.2078 took 2.4765s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":15} start 87.5822 took 2.1917s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_1_string":"PureString"} start 87.6982 took 2.1948s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_1_array_length":0} start 87.8022 took 2.1555s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":17,"ExpansionArg_bool":false} start 88.0153 took 2.1035s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_array_element_0_array_element_0_type":1,"ExpansionArg_array_element_0_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":20} start 87.9039 took 2.3449s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":13} start 88.6152 took 1.7498s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_1_int":0} start 88.4956 took 1.8695s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_1_bool":false} start 88.7206 took 1.7927s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_1_int":0} start 89.9195 took 1.7714s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_array_element_0_array_element_0_type":5,"ExpansionArg_array_element_0_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_0_array_element_0_bool":false} start 89.8581 took 2.3181s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":16,"ExpansionArg_int":0} start 90.0561 took 2.206s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_length_2":0} start 90.1699 took 2.1866s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_0_array_element_0_type":0} start 90.3024 took 2.1364s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":1,"_bound":8} start 85.52 took 7.0205s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":1,"_bound":8}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":1,"_bound":8}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":1,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":15} start 90.3979 took 2.2442s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":5,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_bool":false} start 90.4703 took 2.5626s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_1_array_length":0} start 90.5433 took 2.5732s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":6,"_bound":7,"ExpansionArg_bool_2":false} start 85.2691 took 7.8474s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":6,"_bound":7,"ExpansionArg_bool_2":false}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":6,"_bound":7}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":5,"ExpansionArg_bool":true,"_bound":11} start 86.451 took 6.8646s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":5,"ExpansionArg_bool":true,"_bound":11}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":5,"ExpansionArg_bool":true,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"!1!","ExpansionArg_type_2":3,"ExpansionArg_string_2":"!0!","_bound":11} start 86.8792 took 6.7939s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"!1!","ExpansionArg_type_2":3,"ExpansionArg_string_2":"!0!","_bound":11}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"!1!","ExpansionArg_type_2":3,"ExpansionArg_string_2":"!0!","_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":5,"ExpansionArg_bool":false,"_bound":12} start 86.3125 took 7.8329s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":5,"ExpansionArg_bool":false,"_bound":12}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":5,"ExpansionArg_bool":false,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_string_2":"","_bound":10} start 86.978 took 7.27s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_string_2":"","_bound":10}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_string_2":"","_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":5,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_1_bool":false} start 91.9867 took 2.3963s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"ExpansionArg_int":1,"_bound":9} start 87.0626 took 7.3946s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"ExpansionArg_int":1,"_bound":9}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"ExpansionArg_int":1,"_bound":9}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_array_element_0_array_element_0_type":3,"ExpansionArg_array_element_0_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_element_0_array_element_0_string":"PureString"} start 92.3112 took 2.2442s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_array_element_0_array_element_0_type":4,"ExpansionArg_array_element_0_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_array_element_0_array_element_0_array_length":0} start 92.205 took 2.414s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":2,"ExpansionArg_int":0,"_bound":10} start 87.1472 took 7.4718s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":2,"ExpansionArg_int":0,"_bound":10}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":2,"ExpansionArg_int":0,"_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpansionArg_array_element_2_int":0,"ExpansionArg_type_2":5,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_bool":false} start 92.3832 took 2.2966s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_2_type":0} start 92.5069 took 2.6644s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":3,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_string":"PureString"} start 92.6757 took 2.6221s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_element_2_type":0} start 92.5861 took 2.7114s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":19} start 93.1488 took 2.367s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_string":"PureString"} start 93.0775 took 2.5415s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":6,"ExpansionArg_bool_2":false,"_bound":13} start 93.2617 took 2.4822s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":6,"ExpansionArg_bool_2":false,"_bound":13}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":6,"ExpansionArg_bool_2":false,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_int":0} start 94.2082 took 1.8132s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_length_2":0} start 94.4207 took 2.3555s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":19} start 95.1144 took 1.9501s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpansionArg_array_element_2_int":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_length_2":0} start 95.2026 took 2.0275s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpansionArg_array_element_2_int":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_string":"PureString"} start 95.4511 took 1.8563s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":23,"ExpansionArg_bool":false} start 95.374 took 2.0399s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":22,"ExpansionArg_int":0} start 95.5804 took 1.9218s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpansionArg_array_element_2_int":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_int":0} start 95.2632 took 2.2392s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_1_string":"PureString"} start 96.1044 took 2.1466s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_element_1_array_length":0} start 96.8316 took 1.7773s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":0,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_2_type":0} start 97.3532 took 2.0575s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_1_int":0} start 97.1398 took 2.3616s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_3_type":0} start 97.2615 took 2.3164s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpansionArg_array_element_2_int":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":18} start 97.5568 took 2.1193s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":24,"ExpansionArg_array_length_2":0} start 97.4507 took 2.4568s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":6,"ExpansionArg_bool_2":true,"_bound":12} start 93.3791 took 6.6527s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":6,"ExpansionArg_bool_2":true,"_bound":12}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":6,"ExpansionArg_bool_2":true,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_type_2":0,"_bound":7,"ExpansionArg_array_element_0_type":0} start 97.6197 took 2.5863s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_type_2":0,"_bound":7,"ExpansionArg_array_element_0_type":0}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_type_2":0,"_bound":7}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_type_2":2,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_int":0} start 98.3255 took 1.8803s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":3,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_3_string":"PureString"} start 98.7077 took 2.9004s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":3,"ExpansionArg_string_2":"","_bound":11} start 94.3106 took 7.5046s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":3,"ExpansionArg_string_2":"","_bound":11}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":3,"ExpansionArg_string_2":"","_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":3,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_string":"PureString"} start 99.4406 took 2.5523s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":5,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_4_type":0} start 99.5435 took 2.4496s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":6,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_bool":false} start 99.7024 took 2.4437s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":1,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":21} start 99.6382 took 2.5081s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":5,"ExpansionArg_bool":true,"_bound":12} start 94.0927 took 8.0536s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":5,"ExpansionArg_bool":true,"_bound":12}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":5,"ExpansionArg_bool":true,"_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool_2":false,"_bound":10,"ExpansionArg_string":"PureString"} start 94.5846 took 8.2602s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool_2":false,"_bound":10,"ExpansionArg_string":"PureString"}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool_2":false,"_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":2,"ExpansionArg_int":1,"_bound":10} start 94.52 took 8.1979s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":2,"ExpansionArg_int":1,"_bound":10}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":2,"ExpansionArg_int":1,"_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_2_type":0} start 99.9627 took 3.1606s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool_2":false,"_bound":9,"ExpansionArg_int":0} start 95.7861 took 7.3373s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool_2":false,"_bound":9,"ExpansionArg_int":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool_2":false,"_bound":9}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool_2":false,"_bound":11,"ExpansionArg_array_length":0} start 94.6458 took 8.4776s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool_2":false,"_bound":11,"ExpansionArg_array_length":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool_2":false,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_type_2":5,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_bool":false} start 100.5589 took 3.2229s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":6,"ExpansionArg_bool_2":true,"_bound":13} start 100.1037 took 3.678s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":6,"ExpansionArg_bool_2":true,"_bound":13}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":6,"ExpansionArg_bool_2":true,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_2_type":0} start 100.4525 took 3.3293s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool_2":false,"_bound":8} start 95.6771 took 8.5012s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool_2":false,"_bound":8}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool_2":false,"_bound":8}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":1,"ExpansionArg_array_element_3_string":"","ExpandedSwitcher":0,"_bound":19} start 101.9289 took 2.3732s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":5,"ExpansionArg_array_element_3_string":"","ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_3_bool":false} start 101.7305 took 2.5717s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":17} start 102.0346 took 2.8579s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_array_length_2":0} start 102.1825 took 2.7988s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":2,"ExpansionArg_array_element_3_string":"","ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_3_int":0} start 102.0993 took 2.9547s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":1,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":17} start 102.6811 took 2.4498s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":18,"ExpansionArg_int":0} start 102.7738 took 2.6886s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":3,"ExpansionArg_string":"!0!","_bound":12} start 103.0511 took 2.4833s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":3,"ExpansionArg_string":"!0!","_bound":12}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":3,"ExpansionArg_string":"!0!","_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":20} start 103.1674 took 2.4535s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"_bound":13} start 103.8192 took 1.9976s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"_bound":13}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_length_2":0} start 103.8905 took 2.0196s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"_bound":11} start 103.7455 took 2.2662s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"_bound":11}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_string":"PureString"} start 103.959 took 2.2694s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":19,"ExpansionArg_bool":false} start 104.3552 took 2.3564s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":1,"_bound":9} start 104.2383 took 2.5677s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":1,"_bound":9}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":1,"_bound":9}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":5,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_1_bool":false} start 104.4276 took 2.7368s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_2_type":0} start 104.9466 took 2.9842s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":4,"ExpansionArg_array_element_3_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_element_3_array_length":0} start 105.019 took 3.0261s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_string":"PureString"} start 105.0865 took 3.1114s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_int":0} start 105.4972 took 2.7668s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_bool":false,"ExpansionArg_type_2":6,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_bool":false} start 105.1748 took 3.0891s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":1,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_2_type":0} start 105.5628 took 2.8709s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":3,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_string":"PureString"} start 105.6645 took 2.7692s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_2_type":0} start 105.9785 took 2.6286s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":1,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_element_1_array_element_0_type":0} start 105.8745 took 3.2369s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_array_element_2_type":0} start 106.0453 took 3.1691s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_2_type":0} start 106.5985 took 2.7255s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_length_2":0} start 106.7449 took 2.661s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_1_string":"PureString"} start 106.8492 took 2.7335s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_1_int":0} start 107.2146 took 2.8426s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":18} start 107.9618 took 2.3078s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_1_string":"PureString"} start 108.1429 took 2.2536s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_1_array_length":0} start 108.229 took 2.2581s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":3,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_1_string":"PureString"} start 108.3346 took 2.2461s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_array_length_2":0} start 108.3976 took 2.2982s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":19,"ExpansionArg_int":0} start 108.5454 took 2.3032s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":20} start 108.4702 took 2.5014s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_int":6,"_bound":10} start 103.6227 took 7.3488s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_int":6,"_bound":10}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_int":6,"_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_string":"PureString"} start 108.6666 took 2.3738s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":20,"ExpansionArg_bool":false} start 109.1724 took 1.9578s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_string":"","_bound":11} start 102.9379 took 8.1925s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_string":"","_bound":11}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_string":"","_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_int":0} start 109.2576 took 2.1573s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":1,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":18} start 109.3603 took 2.0547s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_string":"","ExpansionArg_type_2":2,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_int":0} start 109.4435 took 2.1188s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_1_bool":false} start 109.6128 took 2.2286s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_1_int":0} start 110.1124 took 1.8802s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":14} start 110.3429 took 1.7432s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_2_type":0} start 110.4251 took 2.0772s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_1_string":"PureString"} start 110.5252 took 2.1518s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":15} start 110.6124 took 2.1602s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_1_int":0} start 110.9074 took 1.9586s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":6,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_1_bool":false} start 111.0034 took 2.3168s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_1_bool":false} start 110.8004 took 2.6645s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":2,"ExpansionArg_int":6,"_bound":11} start 111.0933 took 2.4392s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":2,"ExpansionArg_int":6,"_bound":11}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":2,"ExpansionArg_int":6,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_length_2":0} start 111.237 took 2.4052s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_array_length":0,"ExpansionArg_type_2":2,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_int":0} start 111.1611 took 2.6182s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":6,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_2_bool":false} start 111.4468 took 2.3326s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":2,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_3_int":0} start 111.519 took 2.9495s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":3,"ExpansionArg_string":"","_bound":12} start 111.3288 took 3.1398s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":3,"ExpansionArg_string":"","_bound":12}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":3,"ExpansionArg_string":"","_bound":12}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_string":"","ExpansionArg_type_2":5,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_bool":false} start 111.7998 took 2.8532s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_1_array_length":0} start 111.9484 took 2.7068s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_2_type":0} start 112.123 took 2.6686s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_string":"","ExpansionArg_type_2":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":19} start 112.0528 took 2.8743s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":1,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_1_array_element_0_type":0} start 112.5796 took 2.9569s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":18} start 112.7125 took 2.9538s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_1_int":0} start 112.8085 took 2.9575s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_1_int":0} start 113.393 took 2.5162s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_1_bool":false} start 112.9046 took 3.1425s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_1_array_length":0} start 113.5005 took 2.6576s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_1_array_length":0} start 113.7155 took 2.5894s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_array_length":0,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":21} start 114.1367 took 2.2496s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_1_string":"PureString"} start 113.5934 took 2.944s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":22} start 114.4294 took 2.7546s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":24,"ExpansionArg_array_element_2_string":"PureString"} start 114.5031 took 2.7759s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_string":"","ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_length_2":0} start 114.6869 took 2.7247s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_array_length":0,"ExpansionArg_type_2":5,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_bool":false} start 114.5994 took 2.8122s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":25,"ExpansionArg_array_element_2_array_length":0} start 114.7593 took 2.8495s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":1,"ExpansionArg_array_element_3_int":0,"ExpandedSwitcher":0,"_bound":17} start 114.864 took 2.7452s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":16} start 114.9672 took 2.6419s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":3,"ExpansionArg_array_element_3_int":0,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_3_string":"PureString"} start 115.6097 took 2.2248s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_string":"","ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_string":"PureString"} start 115.6988 took 2.2357s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_array_element_2_int":0} start 115.7947 took 2.3639s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":6,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_bool":false} start 116.013 took 2.7844s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_2_type":0} start 116.1904 took 2.7105s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_1_array_length":0} start 116.1207 took 2.9345s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_array_element_2_type":6,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_2_bool":false} start 116.3399 took 2.7796s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":5,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_1_bool":false} start 116.4567 took 2.7286s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":5,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_3_bool":false} start 117.3687 took 1.9448s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_2_type":0} start 117.138 took 2.3226s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":1,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_1_array_element_0_type":0} start 117.2272 took 2.3135s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_2_type":0} start 117.4742 took 2.1891s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":24,"ExpansionArg_array_length_2":0} start 117.5445 took 2.119s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_string":"PureString"} start 117.6512 took 2.5366s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":3,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_1_string":"PureString"} start 117.7219 took 2.5611s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":5,"ExpansionArg_array_element_3_string":"","ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_3_bool":false} start 117.8734 took 2.5021s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_array_element_0_array_element_0_type":2,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_0_array_element_0_int":0} start 117.7899 took 2.5856s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":3,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_string":"PureString"} start 118.1928 took 2.3322s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_2_type":0} start 117.9865 took 2.6624s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_length_2":0} start 118.8275 took 1.8883s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":18} start 119.0145 took 2.0386s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_int":0} start 119.0834 took 2.0393s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":25,"ExpansionArg_array_element_2_array_length":0} start 119.1475 took 2.3802s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":24,"ExpansionArg_array_element_2_string":"PureString"} start 119.2144 took 2.4182s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":16} start 119.5081 took 2.2332s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_string":"PureString"} start 119.5894 took 2.267s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_array_element_2_type":1,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":22} start 120.142 took 1.8034s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":4,"ExpansionArg_array_element_3_bool":false,"ExpandedSwitcher":0,"_bound":25,"ExpansionArg_array_element_3_array_length":0} start 119.6966 took 2.3382s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_1_array_length":0} start 120.2329 took 1.8633s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_array_element_2_type":2,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_array_element_2_int":0} start 119.4199 took 2.7405s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_1_bool":false} start 120.3315 took 1.829s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":3,"ExpansionArg_array_element_3_bool":false,"ExpandedSwitcher":0,"_bound":24,"ExpansionArg_array_element_3_string":"PureString"} start 120.4181 took 1.8874s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_1_int":0} start 120.5692 took 1.8336s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_1_int":0} start 120.4827 took 1.9202s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":1,"ExpansionArg_array_element_3_bool":false,"ExpandedSwitcher":0,"_bound":22} start 120.6818 took 1.8702s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_1_string":"PureString"} start 120.7544 took 1.7979s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":2,"ExpansionArg_array_element_3_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_array_element_3_int":0} start 121.1716 took 2.4256s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":17} start 121.6003 took 2.1033s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":4,"ExpansionArg_array_element_3_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_3_array_length":0} start 121.0871 took 2.6165s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":21,"ExpansionArg_bool":false} start 121.6989 took 2.4842s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_array_element_0_array_element_0_type":3,"ExpansionArg_array_element_0_array_element_0_int":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_0_array_element_0_string":"PureString"} start 121.7992 took 2.4984s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":1,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":19} start 122.0002 took 2.4311s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":20,"ExpansionArg_int":0} start 121.9102 took 2.5211s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":1,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_1_array_element_0_type":0} start 122.1282 took 2.4299s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_2_type":0} start 122.1912 took 2.8814s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_2_type":0} start 122.5815 took 2.6419s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_array_element_0_array_element_0_type":1,"ExpansionArg_array_element_0_array_element_0_int":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":16} start 122.3378 took 2.8858s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_array_element_0_array_element_0_type":0,"ExpansionArg_type_2":2,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_int":0} start 122.4363 took 2.9929s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_1_array_length":0} start 122.2721 took 3.1572s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_1_string":"PureString"} start 122.5148 took 3.0455s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_0_type_2":0} start 124.0316 took 1.839s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":3,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_1_string":"PureString"} start 123.6694 took 2.2883s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":0,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_2_type":0} start 124.108 took 1.9471s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_length_2":0} start 124.2252 took 1.9688s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_array_element_0_array_element_0_type":5,"ExpansionArg_array_element_0_array_element_0_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_0_array_element_0_bool":false} start 124.3965 took 2.2347s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":3,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_1_string":"PureString"} start 124.5219 took 2.22s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_2_type":0} start 124.5853 took 2.2457s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":6,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_1_bool":false} start 124.6546 took 2.2692s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_2_type":0} start 125.2662 took 2.0086s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_2_type":0} start 125.1647 took 2.4664s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_array_element_0_array_element_0_type":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_string":"PureString"} start 125.5229 took 2.2382s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_2_type":0} start 125.3943 took 2.3669s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_array_element_0_array_element_0_type":0,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":19} start 125.4584 took 2.4443s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_1_int":0} start 125.5898 took 2.3131s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_1_bool":false} start 125.9163 took 2.2638s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":17} start 126.0191 took 2.2829s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_1_bool":false} start 126.0882 took 2.2832s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":14} start 126.5463 took 1.9284s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":16} start 126.786 took 1.7672s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_array_element_0_array_element_0_type":4,"ExpansionArg_array_element_0_array_element_0_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_0_array_element_0_array_length":0} start 126.6924 took 2.2048s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_1_int":0} start 126.8892 took 2.1113s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_element_1_array_length":0} start 126.976 took 2.1203s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_1_bool":false} start 127.599 took 2.0889s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":8,"ExpansionArg_array_element_0_type":0} start 122.0621 took 7.6261s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":8,"ExpansionArg_array_element_0_type":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":8}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_1_int":0} start 127.6903 took 2.4064s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type_2":2,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_0_int":0} start 127.9992 took 2.2551s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_1_string":"PureString"} start 127.7979 took 2.7988s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":19} start 127.8669 took 2.8023s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_1_int":0} start 127.9316 took 2.7377s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":9,"ExpansionArg_array_element_0_type":0} start 122.9481 took 8.1139s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":9,"ExpansionArg_array_element_0_type":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":9}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_1_array_length":0} start 128.2667 took 3.0161s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_array_element_0_array_element_0_type":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":21,"ExpansionArg_bool":false} start 128.3319 took 3.1048s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_bool":false,"ExpansionArg_type_2":6,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_bool":false} start 128.5115 took 2.925s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpansionArg_array_element_2_int":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_3_type":0} start 128.5999 took 3.0181s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_1_array_length":0} start 128.4053 took 3.7539s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":2,"ExpansionArg_array_element_3_int":0,"ExpansionArg_type_2":3,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_string":"PureString"} start 128.9519 took 3.2768s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":6,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_1_bool":false} start 129.0386 took 3.2727s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpansionArg_array_element_2_int":0,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_3_type":0} start 129.1811 took 3.1438s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":2,"ExpansionArg_array_element_0_array_element_0_type":0,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_0_array_element_1_type":0} start 129.9888 took 2.5843s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_1_array_length":0} start 129.7378 took 2.9677s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_array_element_0_array_element_0_type":0,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_1_type":0} start 130.2089 took 2.6885s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type_2":1,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":18} start 130.5565 took 2.5171s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_array_element_2_type":2,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_2_int":0} start 130.7015 took 2.7721s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":1,"ExpansionArg_array_element_1_array_element_0_type":5,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_1_array_element_0_bool":false} start 131.0233 took 2.5584s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type_2":3,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_0_string":"PureString"} start 130.6292 took 2.9524s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_2_type":2,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_2_int":0} start 131.1151 took 2.917s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_array_element_2_type":5,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_2_bool":false} start 131.3801 took 2.6519s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_array_element_0_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_length_2":0} start 131.4809 took 2.7103s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_int":0} start 131.5725 took 2.6186s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":24,"ExpansionArg_string":"PureString"} start 132.1145 took 2.0769s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":2,"ExpansionArg_array_element_3_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":21,"ExpansionArg_int":0} start 132.2646 took 2.4729s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":25,"ExpansionArg_array_length_2":0} start 132.1952 took 2.5424s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":17} start 132.6183 took 2.283s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_1_string":"PureString"} start 132.4271 took 2.5407s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_1_array_length":0} start 132.3585 took 2.6703s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":2,"ExpansionArg_array_element_3_int":0,"ExpansionArg_type_2":1,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":20} start 132.9572 took 2.2353s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":22} start 132.7373 took 2.7446s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":2,"ExpansionArg_array_element_3_int":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":22,"ExpansionArg_bool":false} start 133.4308 took 2.2716s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_int":0,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_element_2_bool":false} start 133.5155 took 2.3035s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_1_int":0} start 133.6637 took 2.3167s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type_2":5,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_0_bool":false} start 133.7517 took 2.3599s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":1,"ExpansionArg_array_element_1_array_element_0_type":1,"ExpansionArg_array_element_1_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":22} start 134.0747 took 2.1204s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_array_element_2_array_length":0} start 134.1548 took 2.3136s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_element_2_string":"PureString"} start 134.5602 took 1.9804s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":20} start 134.6963 took 2.3216s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":1,"ExpansionArg_array_element_1_array_element_0_type":4,"ExpansionArg_array_element_1_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":25,"ExpansionArg_array_element_1_array_element_0_array_length":0} start 134.6296 took 2.5262s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":1,"ExpansionArg_array_element_1_array_element_0_type":3,"ExpansionArg_array_element_1_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":24,"ExpansionArg_array_element_1_array_element_0_string":"PureString"} start 134.838 took 2.4339s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_array_element_2_type":2,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_2_int":0} start 134.7706 took 2.5014s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_int":0,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_2_bool":false} start 135.4146 took 2.0321s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_array_element_2_type":1,"ExpansionArg_array_element_2_int":0,"ExpandedSwitcher":0,"_bound":21} start 134.9328 took 2.514s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_2_type":1,"ExpansionArg_array_element_2_int":0,"ExpandedSwitcher":0,"_bound":19} start 135.059 took 2.3878s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":1,"ExpansionArg_array_element_1_array_element_0_type":2,"ExpansionArg_array_element_1_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_array_element_1_array_element_0_int":0} start 134.9945 took 2.4524s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":0,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_2_type":0} start 135.5646 took 2.1176s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":2,"ExpansionArg_array_element_3_int":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_array_length_2":0} start 135.7552 took 2.3894s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_array_element_2_string":"PureString"} start 135.8554 took 2.4394s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":24,"ExpansionArg_array_element_2_array_length":0} start 136.0664 took 2.7741s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type_2":4,"ExpansionArg_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_0_array_length":0} start 136.1562 took 2.7659s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_string":"","ExpansionArg_type_2":5,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_bool":false} start 136.5015 took 2.7074s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":5,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_4_type":0} start 136.4228 took 2.8713s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_array_element_2_type":2,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_element_2_int":0} start 136.5874 took 2.79s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_2_type":0} start 137.1172 took 2.5934s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":3,"ExpansionArg_array_element_3_string":"","ExpansionArg_type_2":5,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_bool":false} start 137.4041 took 2.5617s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_element_2_array_length":0} start 137.566 took 2.747s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_2_string":"PureString"} start 137.4945 took 2.8186s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpansionArg_array_element_2_int":0,"ExpansionArg_type_2":5,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_bool":false} start 137.191 took 3.1221s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_type_2":5,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_bool":false} start 137.6375 took 2.8799s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":1,"ExpansionArg_type_2":2,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_int":0} start 137.3248 took 3.1927s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_0_type_2":0} start 137.7232 took 3.3814s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":5,"ExpansionArg_array_element_3_bool":false,"ExpansionArg_type_2":6,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_bool":false} start 138.2221 took 3.0664s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_array_length":0,"ExpansionArg_type_2":5,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_bool":false} start 137.9945 took 3.4369s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_element_3_type":0} start 138.8779 took 2.6969s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_string":"","ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_string":"PureString"} start 139.2598 took 2.8871s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_2_type":0} start 139.1309 took 3.1128s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_string":"","ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":24,"ExpansionArg_array_length_2":0} start 139.3371 took 3.0113s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_int":0,"ExpandedSwitcher":0,"_bound":24,"ExpansionArg_array_element_2_bool":false} start 139.6649 took 2.7739s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_array_element_2_int":0,"ExpandedSwitcher":0,"_bound":23} start 139.7714 took 2.7391s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":3,"ExpansionArg_array_element_3_string":"","ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_int":0} start 140.2579 took 2.5634s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":3,"ExpansionArg_array_element_3_string":"","ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_string":"PureString"} start 140.4208 took 2.5112s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":3,"ExpansionArg_array_element_3_string":"","ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":24,"ExpansionArg_array_length_2":0} start 140.3522 took 2.6709s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpansionArg_array_element_2_int":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_int":0} start 140.4847 took 2.6374s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":3,"ExpansionArg_array_element_3_string":"","ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":21} start 141.064 took 2.1301s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpansionArg_array_element_2_int":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_string":"PureString"} start 140.563 took 3.108s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_int":0} start 141.148 took 2.5229s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":19} start 141.3392 took 2.471s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_string":"","ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":21} start 141.473 took 2.4118s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpansionArg_array_element_2_int":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_array_length_2":0} start 141.663 took 2.3436s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpansionArg_array_element_2_int":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":20} start 142.205 took 1.9697s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_string":"","ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_int":0} start 142.3125 took 2.0145s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":26,"ExpansionArg_array_length_2":0} start 142.3987 took 1.9962s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":19} start 142.4783 took 1.9786s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_length_2":0} start 142.5456 took 2.0928s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":5,"ExpansionArg_array_element_3_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":24,"ExpansionArg_string":"PureString"} start 142.8508 took 2.2715s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_string":"PureString"} start 142.9847 took 2.3521s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":5,"ExpansionArg_array_element_3_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_int":0} start 143.083 took 2.3685s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":1,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_string":"PureString"} start 143.6221 took 1.9019s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":25,"ExpansionArg_array_element_2_string":"PureString"} start 143.1517 took 2.4774s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":5,"ExpansionArg_array_element_3_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":25,"ExpansionArg_array_length_2":0} start 143.7019 took 2.4093s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":25,"ExpansionArg_string":"PureString"} start 143.7764 took 2.4099s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_2_type":0} start 143.9168 took 2.3801s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_array_length":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":24,"ExpansionArg_int":0} start 143.8446 took 2.5393s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":5,"ExpansionArg_array_element_3_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":22} start 144.0695 took 2.4342s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":26,"ExpansionArg_array_element_2_array_length":0} start 144.2858 took 2.385s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":10,"ExpansionArg_array_element_0_type":0} start 138.3431 took 8.3278s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":10,"ExpansionArg_array_element_0_type":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/home/pbai002/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/home/pbai002/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/home/pbai002/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_3_type":0} start 144.3575 took 2.7028s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":1,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_1_array_element_0_type":0} start 144.6967 took 2.4565s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_3_type":0} start 144.4227 took 2.7987s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_array_length":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":23} start 144.4938 took 2.8009s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_array_element_0_array_element_0_type":3,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_0_array_element_0_string":"PureString"} start 145.1647 took 2.2528s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_array_element_2_type":2,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_2_int":0} start 145.3766 took 2.2295s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":3,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_1_string":"PureString"} start 145.4863 took 2.4804s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":5,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_array_element_4_type":2,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_4_int":0} start 145.6819 took 2.4336s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":1,"ExpansionArg_type_2":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":21,"ExpansionArg_bool":false} start 145.5832 took 2.6456s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":2,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_int":0} start 146.2368 took 2.1066s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":4,"ExpansionArg_array_element_3_array_length":0,"ExpansionArg_type_2":2,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_int":0} start 146.3426 took 2.0009s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_array_length":0,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_array_element_3_type":0} start 146.1492 took 2.2909s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_2_type":0} start 146.4164 took 2.8053s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type_2":3,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_0_string":"PureString"} start 146.5798 took 2.6421s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_3_type":0} start 146.9192 took 2.4774s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_string":"","ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_3_type":0} start 147.112 took 2.4685s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":3,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"_bound":13} start 147.0152 took 2.5658s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":3,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"_bound":13}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":3,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"_bound":13}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_3_type":0} start 147.3487 took 2.3843s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_array_length":1,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_element_2_array_element_0_type":0} start 147.1862 took 2.6164s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":6,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_bool":false} start 147.2563 took 2.5465s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_array_element_0_array_element_0_type":1,"ExpansionArg_array_element_0_array_element_0_string":"","ExpandedSwitcher":0,"_bound":19} start 147.453 took 2.6606s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_array_element_0_array_element_0_type":5,"ExpansionArg_array_element_0_array_element_0_string":"","ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_0_array_element_0_bool":false} start 147.6547 took 2.817s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_array_element_2_type":5,"ExpansionArg_array_element_2_int":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_2_bool":false} start 148.193 took 2.4398s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_element_1_bool":false} start 148.0124 took 3.1578s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":1,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_length_2":0} start 148.3058 took 2.9887s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_1_int":0} start 148.3987 took 2.9729s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":5,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_array_element_4_type":6,"ExpansionArg_array_element_4_int":0,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_array_element_4_bool":false} start 148.488 took 3.0569s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":5,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_array_element_4_type":1,"ExpansionArg_array_element_4_int":0,"ExpandedSwitcher":0,"_bound":22} start 148.6099 took 3.0971s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":20} start 149.2817 took 2.9815s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_array_element_2_type":1,"ExpansionArg_array_element_2_int":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":17} start 149.3497 took 3.0114s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type_2":5,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_element_0_bool":false} start 149.483 took 2.974s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":4,"ExpansionArg_array_element_3_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":24,"ExpansionArg_string":"PureString"} start 149.7677 took 2.854s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":19} start 149.9308 took 3.1259s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":24,"ExpansionArg_array_length_2":0} start 150.0474 took 3.0788s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":5,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_bool":false} start 149.8349 took 3.3974s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_array_element_0_array_element_0_type":2,"ExpansionArg_array_element_0_array_element_0_string":"","ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_0_array_element_0_int":0} start 149.6899 took 3.6116s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_string":"PureString"} start 150.4324 took 2.9917s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_array_element_0_array_element_0_type":4,"ExpansionArg_array_element_0_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_element_0_array_element_0_array_length":0} start 150.5191 took 2.9928s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_2_string":"PureString"} start 150.7058 took 2.8894s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_array_element_1_array_length":0} start 151.2039 took 2.4706s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_bool":false,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_2_array_length":0} start 151.3323 took 2.4561s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":21} start 151.4147 took 2.5363s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":5,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_array_element_4_type":4,"ExpansionArg_array_element_4_bool":false,"ExpandedSwitcher":0,"_bound":25,"ExpansionArg_array_element_4_array_length":0} start 151.6178 took 2.7995s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":4,"ExpansionArg_array_element_3_array_length":0,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":23} start 152.3218 took 2.251s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_1_type":0} start 152.4099 took 2.3449s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type_2":2,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_0_int":0} start 152.1748 took 2.5802s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type_2":4,"ExpansionArg_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_array_element_0_array_length":0} start 152.488 took 2.6673s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":5,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_bool":false} start 153.0884 took 2.1396s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":4,"ExpansionArg_array_element_3_array_length":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":25,"ExpansionArg_bool":false} start 152.6811 took 2.6555s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":3,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_1_string":"PureString"} start 153.1964 took 2.2237s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_length_2":0} start 153.2687 took 2.2324s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_string":"PureString"} start 153.3374 took 2.2472s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":5,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_array_element_4_type":3,"ExpansionArg_array_element_4_bool":false,"ExpandedSwitcher":0,"_bound":24,"ExpansionArg_array_element_4_string":"PureString"} start 153.4719 took 2.2241s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":6,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_1_bool":false} start 153.547 took 2.4379s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpansionArg_array_element_0_type_2":1,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher":0,"_bound":20} start 153.6402 took 2.4262s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_int":0} start 153.7481 took 2.4109s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_2_type":0} start 153.8289 took 2.4341s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_array_element_2_type":5,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_2_bool":false} start 154.3416 took 2.0462s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":5,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_bool":false} start 154.4552 took 2.1642s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":6,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":24,"ExpansionArg_array_element_2_type":0} start 154.6628 took 2.3709s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":0,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_2_type":0} start 155.0232 took 2.1123s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_2_type":0} start 155.1897 took 1.9459s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_string":"PureString"} start 155.3695 took 2.3922s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":1,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_0_type_2":0} start 155.1059 took 2.6559s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_int":0} start 155.2641 took 2.6229s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":4,"ExpansionArg_array_element_3_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":26,"ExpansionArg_array_length_2":0} start 155.4645 took 2.4226s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_1_bool":false} start 155.5435 took 2.4846s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_length_2":0} start 155.9497 took 2.1463s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_1_int":0} start 155.619 took 2.5888s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_1_int":0} start 156.1233 took 2.1577s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":18} start 156.0316 took 2.3722s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":18} start 156.2253 took 2.2578s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_1_string":"PureString"} start 156.3291 took 2.2343s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_array_element_2_type":2,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_2_int":0} start 156.4314 took 2.2105s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":24,"ExpansionArg_string":"PureString"} start 156.6533 took 2.5155s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_array_element_2_array_length":0} start 157.0627 took 2.262s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":25,"ExpansionArg_array_length_2":0} start 157.7252 took 1.7521s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_1_array_length":0} start 157.7899 took 1.8418s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":17} start 157.9266 took 1.8294s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":22} start 157.9892 took 1.8394s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_int":0} start 157.6596 took 2.1689s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_element_2_string":"PureString"} start 157.8522 took 2.1588s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_array_element_2_type":1,"ExpansionArg_array_element_2_bool":false,"ExpandedSwitcher":0,"_bound":20} start 158.0635 took 2.0197s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":6,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_bool":false} start 158.2427 took 1.9459s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":5,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_bool":false} start 158.1371 took 2.1698s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_1_array_length":0} start 158.4416 took 1.9366s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length_2":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_1_type":0} start 158.3665 took 2.0859s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":3,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_string":"PureString"} start 158.5939 took 1.9397s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":5,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_bool":false} start 158.516 took 2.0934s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_3_type":0} start 158.6872 took 2.0249s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_1_type":0} start 159.2189 took 1.8255s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":3,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_string":"PureString"} start 159.4129 took 1.8788s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":5,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_bool":false} start 159.5168 took 2.1426s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":3,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_string":"PureString"} start 159.7091 took 2.2393s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_array_length":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_3_type":0} start 159.7945 took 2.154s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_1_type":0} start 159.9109 took 2.1875s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":3,"ExpansionArg_array_element_2_string":"","ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_3_type":0} start 159.9765 took 2.1965s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_array_length":1,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_element_2_array_element_0_type":0} start 160.0455 took 2.26s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_array_element_0_array_element_0_type":2,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_0_array_element_0_int":0} start 160.1302 took 2.4019s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_length_2":0} start 160.2367 took 2.6204s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":20} start 160.3415 took 2.5157s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":1,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":16} start 160.5681 took 2.9298s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_int":0} start 160.4089 took 3.1804s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_array_length_2":0} start 160.4873 took 3.2026s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_string":"PureString"} start 160.7513 took 2.9387s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_array_length_2":0} start 160.6475 took 3.124s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":18,"ExpansionArg_int":0} start 161.5226 took 2.3188s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":19} start 161.0939 took 2.7475s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":19,"ExpansionArg_bool":false} start 161.6983 took 2.8831s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_string":"PureString"} start 162.0604 took 2.6209s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_int":0} start 161.9918 took 2.8429s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":17,"ExpansionArg_int":0} start 162.2078 took 2.7025s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":18} start 162.1334 took 2.8536s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_int":0} start 162.4167 took 2.6726s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_length_2":0} start 162.8071 took 2.4254s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":1,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":17} start 162.9602 took 2.4527s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":19} start 163.4604 took 2.0415s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":18,"ExpansionArg_bool":false} start 163.5544 took 2.071s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":21,"ExpansionArg_string":"PureString"} start 163.6476 took 2.0499s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_string":"PureString"} start 163.7242 took 2.1242s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":22,"ExpansionArg_bool":false} start 163.9423 took 2.0314s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_int":0} start 163.8086 took 2.2329s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":21,"ExpansionArg_int":0} start 164.013 took 2.0955s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":1,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":20} start 163.8721 took 2.3222s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_length_2":0} start 164.6282 took 1.9069s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_array_element_2_type":6,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_array_element_2_bool":false} start 164.8683 took 1.8659s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_array_element_1_string":"","ExpansionArg_array_element_2_type":2,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_2_int":0} start 164.943 took 1.8985s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_array_element_0_array_element_0_type":1,"ExpansionArg_array_element_0_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":17} start 164.7289 took 2.192s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_array_length":1,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_2_array_element_0_type":0} start 165.0463 took 1.9437s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":1,"ExpansionArg_array_element_0_array_element_0_type":3,"ExpansionArg_array_element_0_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_0_array_element_0_string":"PureString"} start 165.1445 took 1.921s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpansionArg_array_element_2_int":0,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_3_type":0} start 165.2867 took 1.8515s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":3,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_3_string":"PureString"} start 165.4618 took 1.764s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":4,"ExpansionArg_array_element_2_array_length":0,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_element_3_type":0} start 165.5508 took 1.8059s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_length_2":0} start 165.6601 took 1.8297s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_2_int":0} start 165.7248 took 1.8897s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpandedSwitcher":0,"_bound":25,"ExpansionArg_array_element_2_type":0} start 165.9394 took 1.8548s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":23,"ExpansionArg_array_length_2":0} start 166.0033 took 1.9284s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":2,"_bound":10,"ExpansionArg_int":0} start 166.1459 took 1.8789s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":2,"_bound":10,"ExpansionArg_int":0}
* Error: TypeError: Function.prototype.apply was called on undefined, which is a undefined and not a function
*-- Replay with NO_COMPILE=1 expoSE replay '/home/pbai002/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":2,"_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_2":3,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_string":"PureString"} start 166.0744 took 2.0326s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_int":0,"ExpandedSwitcher":0,"_bound":22,"ExpansionArg_array_element_2_type":0} start 166.4759 took 1.7111s
