
> hiredis@0.2.0 install /root/Targets/escrito/node_modules/hiredis
> node-gyp rebuild

make: Entering directory '/root/Targets/escrito/node_modules/hiredis/build'
  CC(target) Release/obj.target/hiredis/deps/hiredis/hiredis.o
  CC(target) Release/obj.target/hiredis/deps/hiredis/net.o
  CC(target) Release/obj.target/hiredis/deps/hiredis/sds.o
  CC(target) Release/obj.target/hiredis/deps/hiredis/async.o
  CC(target) Release/obj.target/hiredis/deps/hiredis/read.o
  AR(target) Release/obj.target/deps/hiredis.a
  COPY Release/hiredis.a
  CXX(target) Release/obj.target/hiredis/src/hiredis.o
hiredis.target.mk:106: recipe for target 'Release/obj.target/hiredis/src/hiredis.o' failed
make: Leaving directory '/root/Targets/escrito/node_modules/hiredis/build'
/root/Targets/escrito
└── escrito@0.2.3 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/escrito/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0682 took 4.3955s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env coffee

# Try also to require locally (this is a known coffeescript bug - http://github.com/jashkenas/coffee-script/issues/1035)
requireModule = (filename) ->
  try
    require(filename)
  catch error
    require("#{__dirname}/node_modules/#{filename}")


# Processing the command line parameters
opt = requireModule('optimist')
  .usage('Collaborative writing with Markdown & Textile.\nUsage: $0 [-p port -d database]')
  .options('p', {
      alias: 'port',
      default: process.env.PORT || process.env.npm_package_config_port || 3000,
      describe: 'Runs escrito on the specified port.'
  })
  .options('d', {
      alias: 'database',
      default: process.env.npm_package_config_database || 'memory',
      describe: "Uses the specified database type. Supported values are 'memory' and 'redis'."
  })
  .alias('h', 'help')

if opt.argv.h
  opt.showHelp()
  process.exit()


runServer = (argv, sharejs, connect, sys, crypto) ->
  server = connect(
    connect.favicon(__dirname + '/public/favicon.ico'),
    connect.logger(),
    connect.static(__dirname + '/public'),
    connect.router (app) ->

      editor = require './editor'
      app.get '/?', (req, res, next) ->
        uid = crypto.createHash('md5').update("" + (new Date()).getTime()).digest("hex").toString().substring(0, 9)
        res.writeHead 301, {location: "/#{uid}"}
        res.end()

      app.get '/:docName', (req, res, next) ->
        docName = req.params.docName
        editor argv.p, docName, server.model, res, next
  )

  # # If you're hosting this on Heroku and you're using RedisToGo
  # if process.env.REDISTOGO_URL
  #   rtg = require("url").parse(process.env.REDISTOGO_URL)
  #   options = { db: { type: 'redis', hostname: rtg.hostname, port: rtg.port } }

  options = { db: { type: argv.d } }
  sharejs.attach server, options
  server.listen(argv.p)

  sys.puts "Escrito is running at http://localhost:#{argv.p}/"


connect = requireModule('connect')
crypto  = requireModule('crypto')
sys     = require('sys')

try
  sharejs = requireModule('share').server
  runServer(opt.argv)
catch error
  # Build ShareJS (currently, this is not done automatically by ShareJS)
  exec = require('child_process').exec
  exec "cd #{__dirname} && cake build-dependencies", (err, stdout, stderr) ->
    throw err if err
    sharejs = requireModule('share').server
    runServer(opt.argv, sharejs, connect, sys, crypto)
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
