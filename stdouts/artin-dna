/root/Targets/artin-dna
└─┬ artin-dna@0.0.33 
  ├── bluebird@3.5.0 
  ├── commander@2.11.0 
  ├─┬ koa@2.3.0 
  │ ├─┬ accepts@1.3.4 
  │ │ └── negotiator@0.6.1 
  │ ├── content-disposition@0.5.2 
  │ ├── content-type@1.0.4 
  │ ├─┬ cookies@0.7.1 
  │ │ └── keygrip@1.0.2 
  │ ├─┬ debug@3.0.1 
  │ │ └── ms@2.0.0 
  │ ├── delegates@1.0.0 
  │ ├── depd@1.1.1 
  │ ├── destroy@1.0.4 
  │ ├── error-inject@1.0.0 
  │ ├── escape-html@1.0.3 
  │ ├── fresh@0.5.2 
  │ ├─┬ http-assert@1.3.0 
  │ │ └── deep-equal@1.0.1 
  │ ├─┬ http-errors@1.6.2 
  │ │ ├── inherits@2.0.3 
  │ │ └── setprototypeof@1.0.3 
  │ ├── is-generator-function@1.0.6 
  │ ├── koa-compose@4.0.0 
  │ ├─┬ koa-convert@1.2.0 
  │ │ ├── co@4.6.0 
  │ │ └── koa-compose@3.2.1 
  │ ├── koa-is-json@1.0.0 
  │ ├─┬ mime-types@2.1.17 
  │ │ └── mime-db@1.30.0 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── only@0.0.2 
  │ ├── parseurl@1.3.2 
  │ ├── statuses@1.3.1 
  │ ├─┬ type-is@1.6.15 
  │ │ └── media-typer@0.3.0 
  │ └── vary@1.1.1 
  ├─┬ koa-bodyparser@4.2.0 
  │ ├─┬ co-body@5.1.1 
  │ │ ├── inflation@2.0.0 
  │ │ ├── qs@6.5.1 
  │ │ └─┬ raw-body@2.3.2 
  │ │   ├── bytes@3.0.0 
  │ │   ├── iconv-lite@0.4.19 
  │ │   └── unpipe@1.0.0 
  │ └── copy-to@2.0.1 
  ├─┬ koa-router@7.2.1 
  │ ├── debug@2.6.8 
  │ ├─┬ koa-compose@3.2.1 
  │ │ └── any-promise@1.3.0 
  │ ├── methods@1.1.2 
  │ └─┬ path-to-regexp@1.7.0 
  │   └── isarray@0.0.1 
  ├─┬ koa-send@4.1.0 
  │ ├── debug@2.6.8 
  │ ├─┬ mz@2.7.0 
  │ │ ├── object-assign@4.1.1 
  │ │ └─┬ thenify-all@1.6.0 
  │ │   └── thenify@3.3.0 
  │ └─┬ resolve-path@1.3.3 
  │   ├─┬ http-errors@1.5.1 
  │   │ └── setprototypeof@1.0.2 
  │   └── path-is-absolute@1.0.1 
  ├─┬ koa-socket@4.4.0 
  │ ├── koa-compose@3.1.0 
  │ └─┬ socket.io@1.4.5 
  │   ├─┬ debug@2.2.0 
  │   │ └── ms@0.7.1 
  │   ├─┬ engine.io@1.6.8 
  │   │ ├─┬ accepts@1.1.4 
  │   │ │ ├─┬ mime-types@2.0.14 
  │   │ │ │ └── mime-db@1.12.0 
  │   │ │ └── negotiator@0.4.9 
  │   │ ├── base64id@0.1.0 
  │   │ ├─┬ debug@2.2.0 
  │   │ │ └── ms@0.7.1 
  │   │ ├─┬ engine.io-parser@1.2.4 
  │   │ │ ├── after@0.8.1 
  │   │ │ ├── arraybuffer.slice@0.0.6 
  │   │ │ ├── base64-arraybuffer@0.1.2 
  │   │ │ ├── blob@0.0.4 
  │   │ │ ├── has-binary@0.1.6 
  │   │ │ └── utf8@2.1.0 
  │   │ └─┬ ws@1.0.1 
  │   │   ├── options@0.0.6 
  │   │   └── ultron@1.0.2 
  │   ├── has-binary@0.1.7 
  │   ├─┬ socket.io-adapter@0.4.0 
  │   │ ├─┬ debug@2.2.0 
  │   │ │ └── ms@0.7.1 
  │   │ └─┬ socket.io-parser@2.2.2 
  │   │   ├── debug@0.7.4 
  │   │   └── json3@3.2.6 
  │   ├─┬ socket.io-client@1.4.5 
  │   │ ├── backo2@1.0.2 
  │   │ ├── component-bind@1.0.0 
  │   │ ├── component-emitter@1.2.0 
  │   │ ├─┬ debug@2.2.0 
  │   │ │ └── ms@0.7.1 
  │   │ ├─┬ engine.io-client@1.6.8 
  │   │ │ ├── component-inherit@0.0.3 
  │   │ │ ├─┬ debug@2.2.0 
  │   │ │ │ └── ms@0.7.1 
  │   │ │ ├── has-cors@1.1.0 
  │   │ │ ├── parsejson@0.0.1 
  │   │ │ ├── parseqs@0.0.2 
  │   │ │ ├── xmlhttprequest-ssl@1.5.1 
  │   │ │ └── yeast@0.1.2 
  │   │ ├── indexof@0.0.1 
  │   │ ├── object-component@0.0.3 
  │   │ ├─┬ parseuri@0.0.4 
  │   │ │ └─┬ better-assert@1.0.2 
  │   │ │   └── callsite@1.0.0 
  │   │ └── to-array@0.1.4 
  │   └─┬ socket.io-parser@2.2.6 
  │     ├── benchmark@1.0.0 
  │     ├── component-emitter@1.1.2 
  │     ├─┬ debug@2.2.0 
  │     │ └── ms@0.7.1 
  │     └── json3@3.3.2 
  ├─┬ koa-static@3.0.0 
  │ └─┬ koa-send@3.3.0 
  │   └── debug@2.6.8 
  ├── lodash@4.17.4 
  ├─┬ nedb@1.8.0 
  │ ├── async@0.2.10 
  │ ├── binary-search-tree@0.2.5 
  │ ├─┬ localforage@1.5.0 
  │ │ └─┬ lie@3.0.2 
  │ │   ├─┬ es3ify@0.1.4 
  │ │   │ ├── esprima-fb@3001.1.0-dev-harmony-fb 
  │ │   │ ├─┬ jstransform@3.0.0 
  │ │   │ │ ├── base62@0.1.1 
  │ │   │ │ └─┬ source-map@0.1.31 
  │ │   │ │   └── amdefine@1.0.1 
  │ │   │ └── through@2.3.8 
  │ │   ├── immediate@3.0.6 
  │ │   ├─┬ inline-process-browser@1.0.0 
  │ │   │ ├─┬ falafel@1.2.0 
  │ │   │ │ ├── acorn@1.2.2 
  │ │   │ │ ├── foreach@2.0.5 
  │ │   │ │ └── object-keys@1.0.11 
  │ │   │ └─┬ through2@0.6.5 
  │ │   │   ├─┬ readable-stream@1.0.34 
  │ │   │   │ ├── core-util-is@1.0.2 
  │ │   │   │ └── string_decoder@0.10.31 
  │ │   │   └── xtend@4.0.1 
  │ │   └─┬ unreachable-branch-transform@0.3.0 
  │ │     ├── esmangle-evaluator@1.0.1 
  │ │     └─┬ recast@0.10.43 
  │ │       ├── ast-types@0.8.15 
  │ │       ├── esprima-fb@15001.1001.0-dev-harmony-fb 
  │ │       ├── private@0.1.7 
  │ │       └── source-map@0.5.7 
  │ ├─┬ mkdirp@0.5.1 
  │ │ └── minimist@0.0.8 
  │ └── underscore@1.4.4 
  ├─┬ rxjs@5.4.3 
  │ └── symbol-observable@1.0.4 
  ├─┬ shelljs@0.7.8 
  │ ├─┬ glob@7.1.2 
  │ │ ├── fs.realpath@1.0.0 
  │ │ ├─┬ inflight@1.0.6 
  │ │ │ └── wrappy@1.0.2 
  │ │ ├─┬ minimatch@3.0.4 
  │ │ │ └─┬ brace-expansion@1.1.8 
  │ │ │   ├── balanced-match@1.0.0 
  │ │ │   └── concat-map@0.0.1 
  │ │ └── once@1.4.0 
  │ ├── interpret@1.0.4 
  │ └─┬ rechoir@0.6.2 
  │   └─┬ resolve@1.4.0 
  │     └── path-parse@1.0.5 
  ├─┬ tmp@0.0.31 
  │ └── os-tmpdir@1.0.2 
  └── validator@7.2.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/artin-dna/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0741 took 4.8715s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node


/**
 * Created by peter on 10/21/16.
 */
const Koa = require('koa');
const bodyParser = require('koa-bodyparser');
const serveStatic = require('koa-static');
const sendFile = require('koa-send');
const IO = require('koa-socket');

const restCtrl = require('./controller/restController');
const routes = require('./config/routes');

const app = new Koa();

/**
 * Socket.io
 */
const io = new IO();
io.attach(app);
io.use(socketErrorHandler);

io.on(routes.alignment.socket, require('./controller/socket/alignment').alignmentCtrl);
io.on(routes.bamConversion.socket, require('./controller/socket/bamConversion'));
io.on(routes.bamSorting.socket, require('./controller/socket/bamSorting').bamSortingCtrl);
io.on(routes.filtration.socket, require('./controller/socket/filtration').filtrationCtrl);
io.on(routes.qualityControl.socket, require('./controller/socket/qualityControl'));
io.on(routes.samConversion.socket, require('./controller/socket/samConversion').samConversionCtrl);
io.on(routes.snpCaller.socket, require('./controller/socket/snpCaller').snpCallerCtrl);
io.on(routes.pipeline.socket, require('./controller/socket/pipeline'));

/**
 * Middleware
 */
app.use(bodyParser());
app.use(restErrorHandler);

if (process.env.NODE_ENV === 'development') {
  const webpackConfig = require('./../webpack.config.dev.js');
  const middleware = require('koa-webpack');
  const compiler = require('webpack')(webpackConfig);
  app.use(middleware({ compiler: compiler }));
}

/**
 * REST
 */
app.use(restCtrl.routes());
app.use(serveStatic(__dirname + '/public'));
app.use(async ctx => await sendFile(ctx, 'dist/' + '/public/index.html'));
app.listen(8080);

async function restErrorHandler(ctx, next) {
  try {
    await next();
  } catch (err) {
    ctx.body = { message: err.message };
    ctx.status = err.status || 500;
  }
}

async function socketErrorHandler(ctx, next) {
  try {
    await next();
  } catch (err) {
    ctx.socket.emit('error', `Error occurred: ${err.message}`);
  }
} at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
