/root/Targets/sass2stylus
└── sass2stylus@1.0.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/sass2stylus/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0622 took 2.6421s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node

var exec = require('child_process').exec,
    fs = require('fs'),
    cliArg = process.argv,
    filename = cliArg[2],
    rawFilename = filename.replace(/.scss|.sass/, ''),
    sassFile = filename.replace('.scss', '.sass'),
    converter = __dirname +'/node_converter.rb',
    s2s = function() {
      exec('ruby '+ converter +' '+ sassFile, function(error, stdout, stderr) {
        console.log('Converting Sass to Stylus');
        fs.writeFileSync(rawFilename + '.styl', stdout);
        if(error !== null) {
          console.log(error);
        }
        if(sassFile.match(/.tmp/) && sassFile.match(/.tmp/).length) {
          fs.unlinkSync(sassFile);
        }
      });
    };

if(filename.match(/.scss/)) {
  // Convert SCSS to Sass
  sassFile = sassFile.replace('.sass', '.tmp.sass');
  exec('sass-convert '+ filename +' '+ sassFile, function(error, stdout, stderr) {
    s2s();
    if(error !== null) {
      console.log(error);
    }
  });
} else if(filename.match(/.sass/)) {
  s2s();
} else {
  console.log('You didn\'t pass a Sass (or SCSS) file.\nUsage: sass2stylus foo.scss');
}
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
