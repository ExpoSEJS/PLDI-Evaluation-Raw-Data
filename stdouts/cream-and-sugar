/root/Targets/cream-and-sugar
└─┬ cream-and-sugar@0.7.0 
  └── cns-lib@0.4.7 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/cream-and-sugar/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0386 took 4.023s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #! /usr/bin/env node

var compiler = require('./dist/index');
var fs = require('fs');

var compile = compiler.compile;
var compileCode = compiler.compileCode;

var args = parseArgs();

function parseArgs() {
  var out = {};
  var flagOn = false;

  typeof process !== 'undefined' &&
  Array.isArray(process.argv)    &&
  process.argv.forEach(function (arg) {
    if (arg[0] === '-') {
      flagOn = arg.slice(1);
    } else {
      if (flagOn) {
        out[flagOn] = arg;
        flagOn = false;
      }
    }
  });
  return out;
}

// If the file name to compile came in through the command line,
// compile it and write it out.
if (args.i) {
  compile(args.i, function (err, result) {
    if (err) {
      throw err;
    } else {
      if (args.o) {
        fs.writeFile(args.o, result, function (err) {
          if (err) throw err;
          console.log('Finished.');
        });
      } else {
        console.log(result);
      }
    }
  }, {finalize: true}); // Adds in library code and such
}

// Otherwise, export our compile functions so this can be required
// by other modules.
module.exports = {
  compile: compile,
  compileCode: compileCode
};
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
