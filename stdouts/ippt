/root/Targets/ippt
└── ippt@0.0.11 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/ippt/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0394 took 2.663s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node

var fs = require('fs');
var path = require('path');
var iPPT = require('../lib/iPPT');
var versions = require('../package').version;
var program = require('commander');
var ipv4 = require('ipv4');
if (process.argv[2] && process.argv[2] === '-v') {
    process.argv[2] = '-V';
}
program
    .version(versions);

program
    .command('create')
    .alias('new')
    .usage('[filename] [option]')
    .description('create a slide')
    .option('-d, --dir [path]', 'set slide file destination path')
    .action(function (filename, options) {
        if (typeof filename === 'object') {
            console.log('ERROR: please input filename！'.bold.red);
            this.outputHelp();
            return;
        }

        iPPT.create(filename, options)
    }).on('--help', function () {
        console.log('  Examples:');
        console.log();
        console.log('  iPPT create myslide');
        console.log('  iPPT create myslide -d D:/webppt');
        console.log();
    });

program
    .command('generate')
    .alias('release')
    .usage('[file_path] [save_path]')
    .description('export html file')
    .option('-a, --all [false]', 'output all style(include js,css) file', false)
    .action(function (cmd, output, options) {
        var filename = '';
        var shouldAll = false;
        if (typeof output !== 'string') {
            options = output;
            output = undefined;
        }
        if (typeof cmd === 'string') {
            filename = cmd;
            shouldAll = options.all;
        } else if (typeof cmd === 'object') {
            shouldAll = cmd.all;
            output = cmd.output;
        }
        iPPT.generate(filename, output, shouldAll, '');
    })
    .on('--help', function () {
        console.log('  Examples:');
        console.log();
        console.log('  iPPT generate D:/webppt/demo.md -o D:/output');
        console.log('  iPPT generate D:/webppt/ -o D:/output -a');
        console.log();
    });


program
    .command('start')
    .description('start local sever show slide')
    .option('-d, --dir [dir]', 'set slide path', '')
    .option('-p, --port [port]', 'set server port ', 8080)
    .option('-c, --controller [socket]', 'support websocket mutil screen controller')
    .option('-H, --host [host]', 'set host address', ipv4 || '0.0.0.0')
    .option('-w, --watch', 'livereload')
    .action(function (cmd) {
        if (typeof cmd !== 'object') {
            this.outputHelp();
            return;
        }

        iPPT.start(cmd)
    })
    .on('--help', function () {
        console.log('  Examples:');
        console.log();
        console.log('  iPPT start -d D:/webppt -p 8080');
        console.log('  iPPT start -d D:/webppt -c socket');
        console.log();
    });



program
    .command('pdf')
    .usage('[http_url] [save_path.pdf]')
    .description('export pdf file. ' + 'Deprecated'.bold.red)
    .action(function (http_url, save_path) {
        if (typeof http_url !== 'string' || typeof save_path !== 'string') {
            console.log('ERROR: pdf need a URL'.bold.red);
            this.outputHelp();
            return;
        }
        console.log('  Warning: '.bold.red + 'This command is ' + 'Deprecated'.bold.red);
        iPPT.pdf([http_url, save_path])
    })
    .on('--help', function () {
        console.log('  Examples:');
        console.log();
        console.log('  iPPT pdf http://127.0.0.1:8080/md/demo.md demo.pdf\n');
        console.log('  Warning: '.bold.red + 'This command is ' + 'Deprecated'.bold.red);
        console.log();
    });



program.parse(process.argv);


if (!program.args[0]) {
    process.stdout.write(program.helpInformation());
    program.emit('--help');
}
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
