
> contextify@0.1.15 install /root/Targets/cukestall/node_modules/contextify
> node-gyp rebuild

make: Entering directory '/root/Targets/cukestall/node_modules/contextify/build'
  CXX(target) Release/obj.target/contextify/src/contextify.o
contextify.target.mk:94: recipe for target 'Release/obj.target/contextify/src/contextify.o' failed
make: Leaving directory '/root/Targets/cukestall/node_modules/contextify/build'

> ws@0.4.32 install /root/Targets/cukestall/node_modules/ws
> (node-gyp rebuild 2> builderror.log) || (exit 0)

make: Entering directory '/root/Targets/cukestall/node_modules/ws/build'
  CXX(target) Release/obj.target/bufferutil/src/bufferutil.o
bufferutil.target.mk:96: recipe for target 'Release/obj.target/bufferutil/src/bufferutil.o' failed
make: Leaving directory '/root/Targets/cukestall/node_modules/ws/build'
/root/Targets/cukestall
├── @types/node@6.0.88 
├── abab@1.0.4 
├── abbrev@1.1.0 
├── acorn@4.0.13 
├── acorn-globals@3.1.0 
├─┬ ajv@5.2.3 
│ ├── co@4.6.0 
│ ├── fast-deep-equal@1.0.0 
│ ├── json-schema-traverse@0.3.1 
│ └─┬ json-stable-stringify@1.0.1 
│   └── jsonify@0.0.0 
├── array-equal@1.0.0 
├── asn1@0.2.3 
├── assert-plus@1.0.0 
├── asynckit@0.4.0 
├── aws-sign2@0.7.0 
├── aws4@1.6.0 
├── Base64@0.1.4 
├── base64-js@0.0.2 
├─┬ bcrypt-pbkdf@1.0.1 
│ └── tweetnacl@0.14.5 
├─┬ boom@4.3.1 
│ └── hoek@4.2.0 
├─┬ bops@0.0.6 
│ └── to-utf8@0.0.1 
├─┬ browserify@1.15.5 
│ ├── buffer-browserify@0.0.5 
│ ├── coffee-script@1.12.7 
│ ├── commondir@0.0.2 
│ ├── crypto-browserify@0.4.0 
│ ├─┬ deputy@0.0.4 
│ │ └── mkdirp@0.3.5 
│ ├─┬ detective@0.2.1 
│ │ └── esprima@0.9.9 
│ ├─┬ http-browserify@0.1.14 
│ │ └── concat-stream@1.0.1 
│ ├── nub@0.0.0 
│ ├─┬ optimist@0.3.7 
│ │ └── wordwrap@0.0.3 
│ ├── resolve@0.2.8 
│ ├── syntax-error@0.0.1 
│ └─┬ vm-browserify@0.0.4 
│   └── indexof@0.0.1 
├── caseless@0.12.0 
├─┬ combined-stream@1.0.5 
│ └── delayed-stream@1.0.0 
├── commander@2.1.0 
├─┬ connect@2.3.2 
│ ├── cookie@0.0.3 
│ ├── crc@0.2.0 
│ ├─┬ debug@3.1.0 
│ │ └── ms@2.0.0 
│ ├── formidable@1.0.9 
│ ├── mime@1.2.4 
│ └── qs@0.4.2 
├── content-type-parser@1.0.1 
├── core-util-is@1.0.2 
├─┬ cryptiles@3.1.2 
│ └── boom@5.2.0 
├── cssom@0.3.2 
├── cssstyle@0.2.37 
├─┬ cucumber@0.2.21 
│ ├── coffee-script@1.3.3 
│ ├── cucumber-html@0.2.0 
│ ├── gherkin@2.11.1 
│ ├─┬ jasmine-node@1.0.26 
│ │ ├─┬ jasmine-reporters@2.2.1 
│ │ │ ├─┬ mkdirp@0.5.1 
│ │ │ │ └── minimist@0.0.8 
│ │ │ └── xmldom@0.1.27 
│ │ └── requirejs@2.3.5 
│ ├── mkdirp@0.3.3 
│ ├── nopt@1.0.10 
│ ├─┬ rimraf@2.0.2 
│ │ └── graceful-fs@1.1.14 
│ ├── underscore@1.3.3 
│ └── walkdir@0.0.4 
└─┬ cukestall@0.1.1 
  ├── ejs@0.6.1 
  ├─┬ express@2.5.9 
  │ ├── connect@1.9.2 
  │ └── mkdirp@0.3.0 
  └─┬ kite@0.0.1 
    ├── coffee-script@1.3.3 
    ├── mime@1.2.7 
    ├── q@0.8.8 
    ├─┬ selenium-launcher@1.1.3 
    │ ├── freeport@1.0.5 
    │ ├── hash_file@0.0.8 
    │ └── request@2.9.203 
    ├── soda@0.2.5 
    └─┬ zombie@1.4.1 
      ├── eventsource@0.0.10 
      ├─┬ html5@0.3.16 
      │ ├── html5-entities@0.5.1 
      │ ├─┬ jsdom@11.2.0 
      │ │ ├─┬ escodegen@1.9.0 
      │ │ │ ├── esprima@3.1.3 
      │ │ │ ├── estraverse@4.2.0 
      │ │ │ ├── esutils@2.0.2 
      │ │ │ ├─┬ optionator@0.8.2 
      │ │ │ │ ├── deep-is@0.1.3 
      │ │ │ │ ├── fast-levenshtein@2.0.6 
      │ │ │ │ ├── levn@0.3.0 
      │ │ │ │ ├── prelude-ls@1.1.2 
      │ │ │ │ ├── type-check@0.3.2 
      │ │ │ │ └── wordwrap@1.0.0 
      │ │ │ └── source-map@0.5.7 
      │ │ ├── html-encoding-sniffer@1.0.1 
      │ │ ├── nwmatcher@1.4.2 
      │ │ ├── parse5@3.0.2 
      │ │ ├── pn@1.0.0 
      │ │ ├─┬ UNMET PEER DEPENDENCY request@2.83.0
      │ │ │ ├── extend@3.0.1 
      │ │ │ ├── forever-agent@0.6.1 
      │ │ │ ├── form-data@2.3.1 
      │ │ │ ├─┬ har-validator@5.0.3 
      │ │ │ │ └── har-schema@2.0.0 
      │ │ │ ├─┬ hawk@6.0.2 
      │ │ │ │ └── sntp@2.0.2 
      │ │ │ ├─┬ http-signature@1.2.0 
      │ │ │ │ ├─┬ jsprim@1.4.1 
      │ │ │ │ │ ├── extsprintf@1.3.0 
      │ │ │ │ │ ├── json-schema@0.2.3 
      │ │ │ │ │ └── verror@1.10.0 
      │ │ │ │ └─┬ sshpk@1.13.1 
      │ │ │ │   ├── dashdash@1.14.1 
      │ │ │ │   ├── ecc-jsbn@0.1.1 
      │ │ │ │   ├── getpass@0.1.7 
      │ │ │ │   └── jsbn@0.1.1 
      │ │ │ ├── is-typedarray@1.0.0 
      │ │ │ ├── isstream@0.1.2 
      │ │ │ ├── json-stringify-safe@5.0.1 
      │ │ │ ├─┬ mime-types@2.1.17 
      │ │ │ │ └── mime-db@1.30.0 
      │ │ │ ├── oauth-sign@0.8.2 
      │ │ │ ├── performance-now@2.1.0 
      │ │ │ ├── qs@6.5.1 
      │ │ │ ├── safe-buffer@5.1.1 
      │ │ │ ├── stringstream@0.0.5 
      │ │ │ ├── tunnel-agent@0.6.0 
      │ │ │ └── uuid@3.1.0 
      │ │ ├─┬ request-promise-native@1.0.5 
      │ │ │ ├── UNMET PEER DEPENDENCY request@^2.34
      │ │ │ ├─┬ request-promise-core@1.1.1 
      │ │ │ │ └── lodash@4.17.4 
      │ │ │ ├── stealthy-require@1.1.1 
      │ │ │ └── tough-cookie@2.3.3 
      │ │ ├── sax@1.2.4 
      │ │ ├── symbol-tree@3.2.2 
      │ │ ├── tough-cookie@2.3.3 
      │ │ ├── webidl-conversions@4.0.2 
      │ │ ├─┬ whatwg-encoding@1.0.1 
      │ │ │ └── iconv-lite@0.4.13 
      │ │ ├─┬ whatwg-url@6.3.0 
      │ │ │ ├── lodash.sortby@4.7.0 
      │ │ │ └─┬ tr46@1.0.1 
      │ │ │   └── punycode@2.1.0 
      │ │ └── xml-name-validator@2.0.1 
      │ └── opts@1.2.6 
      ├─┬ jsdom@0.2.19 
      │ ├── cssom@0.2.5 
      │ └── htmlparser@1.7.7 
      ├── mime@1.2.11 
      ├── ms@0.1.0 
      ├── request@2.10.0 
      ├─┬ tough-cookie@0.9.15 
      │ └── punycode@1.4.1 
      └─┬ ws@0.4.32 
        ├── nan@1.0.0 
        ├── options@0.0.6 
        └── tinycolor@0.0.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/cukestall/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 28.000000000000004% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0249 took 3.5605s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (15:4) on program 
/*!
 * Connect - HTTPServer
 * Copyright(c) 2010 Sencha Inc.
 * Copyright(c) 2011 TJ Holowaychuk
 * MIT Licensed
 */

/**
 * Module dependencies.
 */

var http = require('http')
  , parse = require('url').parse
  , assert = require('assert')
  , utils = require('./utils');

// environment

var env = process.env.NODE_ENV || 'development';

/**
 * Initialize a new `Server` with the given `middleware`.
 *
 * Examples:
 *
 *     var server = connect.createServer(
 *         connect.favicon()
 *       , connect.logger()
 *       , connect.static(__dirname + '/public')
 *     );
 *
 * @params {Array} middleware 
 * @return {Server}
 * @api public
 */

var Server = exports.Server = function HTTPServer(middleware) {
  this.stack = [];
  middleware.forEach(function(fn){
    this.use(fn);
  }, this);
  http.Server.call(this, this.handle);
};

/**
 * Inherit from `http.Server.prototype`.
 */

Server.prototype.__proto__ = http.Server.prototype;

/**
 * Utilize the given middleware `handle` to the given `route`,
 * defaulting to _/_. This "route" is the mount-point for the
 * middleware, when given a value other than _/_ the middleware
 * is only effective when that segment is present in the request's
 * pathname.
 *
 * For example if we were to mount a function at _/admin_, it would
 * be invoked on _/admin_, and _/admin/settings_, however it would
 * not be invoked for _/_, or _/posts_.
 *
 * This is effectively the same as passing middleware to `connect.createServer()`,
 * however provides a progressive api.
 *
 * Examples:
 *
 *      var server = connect.createServer();
 *      server.use(connect.favicon());
 *      server.use(connect.logger());
 *      server.use(connect.static(__dirname + '/public'));
 *
 * If we wanted to prefix static files with _/public_, we could
 * "mount" the `static()` middleware:
 *
 *      server.use('/public', connect.static(__dirname + '/public'));
 *
 * This api is chainable, meaning the following is valid:
 *
 *      connect.createServer()
 *        .use(connect.favicon())
 *        .use(connect.logger())
 *        .use(connect.static(__dirname + '/public'))
 *        .listen(3000);
 *
 * @param {String|Function} route or handle
 * @param {Function} handle
 * @return {Server}
 * @api public
 */

Server.prototype.use = function(route, handle){
  this.route = '/';

  // default route to '/'
  if ('string' != typeof route) {
    handle = route;
    route = '/';
  }

  // wrap sub-apps
  if ('function' == typeof handle.handle) {
    var server = handle;
    server.route = route;
    handle = function(req, res, next) {
      server.handle(req, res, next);
    };
  }

  // wrap vanilla http.Servers
  if (handle instanceof http.Server) {
    handle = handle.listeners('request')[0];
  }

  // normalize route to not trail with slash
  if ('/' == route[route.length - 1]) {
    route = route.substr(0, route.length - 1);
  }

  // add the middleware
  this.stack.push({ route: route, handle: handle });

  // allow chaining
  return this;
};

/**
 * Handle server requests, punting them down
 * the middleware stack.
 *
 * @api private
 */

Server.prototype.handle = function(req, res, out) {
  var writeHead = res.writeHead
    , stack = this.stack
    , removed = ''
    , index = 0;

  function next(err) {
    var layer, path, c;
    req.url = removed + req.url;
    req.originalUrl = req.originalUrl || req.url;
    removed = '';

    layer = stack[index++];

    // all done
    if (!layer || res.headerSent) {
      // but wait! we have a parent
      if (out) return out(err);

      // error
      if (err) {
        var msg = 'production' == env
          ? 'Internal Server Error'
          : err.stack || err.toString();

        // output to stderr in a non-test env
        if ('test' != env) console.error(err.stack || err.toString());

        // unable to respond
        if (res.headerSent) return req.socket.destroy();

        res.statusCode = 500;
        res.setHeader('Content-Type', 'text/plain');
        if ('HEAD' == req.method) return res.end();
        res.end(msg);
      } else {
        res.statusCode = 404;
        res.setHeader('Content-Type', 'text/plain');
        if ('HEAD' == req.method) return res.end();
        res.end('Cannot ' + req.method + ' ' + utils.escape(req.originalUrl));
      }
      return;
    }

    try {
      path = parse(req.url).pathname;
      if (undefined == path) path = '/';

      // skip this layer if the route doesn't match.
      if (0 != path.indexOf(layer.route)) return next(err);

      c = path[layer.route.length];
      if (c && '/' != c && '.' != c) return next(err);

      // Call the layer handler
      // Trim off the part of the url that matches the route
      removed = layer.route;
      req.url = req.url.substr(removed.length);

      // Ensure leading slash
      if ('/' != req.url[0]) req.url = '/' + req.url;

      var arity = layer.handle.length;
      if (err) {
        if (arity === 4) {
          layer.handle(err, req, res, next);
        } else {
          next(err);
        }
      } else if (arity < 4) {
        layer.handle(req, res, next);
      } else {
        next();
      }
    } catch (e) {
      if (e instanceof assert.AssertionError) {
        console.error(e.stack + '\n');
        next(e);
      } else {
        next(e);
      }
    }
  }
  next();
}; at SyntaxError: Unexpected token (15:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/cukestall/node_modules/cukestall/cukestall.js. Coverage (Term): 9% Coverage (LOC): 10%
*- File /root/Targets/cukestall/node_modules/express/index.js. Coverage (Term): 80% Coverage (LOC): 100%
*- File /root/Targets/cukestall/node_modules/express/lib/express.js. Coverage (Term): 17% Coverage (LOC): 22%
*- File /root/Targets/cukestall/node_modules/express/node_modules/connect/index.js. Coverage (Term): 80% Coverage (LOC): 100%
*- File /root/Targets/cukestall/node_modules/express/node_modules/connect/lib/connect.js. Coverage (Term): 12% Coverage (LOC): 20%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
