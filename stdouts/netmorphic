/root/Targets/netmorphic
└─┬ netmorphic@0.4.0 
  ├─┬ cluster2@0.3.6 
  │ ├── ejs@2.5.7 
  │ ├─┬ npm@5.4.2 
  │ │ ├── abbrev@1.1.0 
  │ │ ├── ansi-regex@3.0.0 
  │ │ ├── ansicolors@0.3.2 
  │ │ ├── ansistyles@0.1.3 
  │ │ ├── aproba@1.1.2 
  │ │ ├── archy@1.0.0 
  │ │ ├── bluebird@3.5.0 
  │ │ ├─┬ cacache@9.2.9 
  │ │ │ ├─┬ lru-cache@4.1.1 
  │ │ │ │ ├── pseudomap@1.0.2 
  │ │ │ │ └── yallist@2.1.2 
  │ │ │ └── y18n@3.2.1 
  │ │ ├── call-limit@1.1.0 
  │ │ ├── chownr@1.0.1 
  │ │ ├── cmd-shim@2.0.2 
  │ │ ├─┬ columnify@1.5.4 
  │ │ │ ├─┬ strip-ansi@3.0.1 
  │ │ │ │ └── ansi-regex@2.1.1 
  │ │ │ └─┬ wcwidth@1.0.1 
  │ │ │   └─┬ defaults@1.0.3 
  │ │ │     └── clone@1.0.2 
  │ │ ├─┬ config-chain@1.1.11 
  │ │ │ └── proto-list@1.2.4 
  │ │ ├── debuglog@1.0.1 
  │ │ ├── detect-indent@5.0.0 
  │ │ ├─┬ dezalgo@1.0.3 
  │ │ │ └── asap@2.0.5 
  │ │ ├── editor@1.0.0 
  │ │ ├── fs-vacuum@1.2.10 
  │ │ ├── fs-write-stream-atomic@1.0.10 
  │ │ ├─┬ glob@7.1.2 
  │ │ │ ├── fs.realpath@1.0.0 
  │ │ │ ├─┬ minimatch@3.0.4 
  │ │ │ │ └─┬ brace-expansion@1.1.8 
  │ │ │ │   ├── balanced-match@1.0.0 
  │ │ │ │   └── concat-map@0.0.1 
  │ │ │ └── path-is-absolute@1.0.1 
  │ │ ├── graceful-fs@4.1.11 
  │ │ ├── has-unicode@2.0.1 
  │ │ ├── hosted-git-info@2.5.0 
  │ │ ├── iferr@0.1.5 
  │ │ ├── imurmurhash@0.1.4 
  │ │ ├── inflight@1.0.6 
  │ │ ├── inherits@2.0.3 
  │ │ ├── ini@1.3.4 
  │ │ ├─┬ init-package-json@1.10.1 
  │ │ │ └── promzard@0.3.0 
  │ │ ├─┬ JSONStream@1.3.1 
  │ │ │ ├── jsonparse@1.3.1 
  │ │ │ └── through@2.3.8 
  │ │ ├── lazy-property@1.0.0 
  │ │ ├─┬ libnpx@9.6.0 
  │ │ │ ├── dotenv@4.0.0 
  │ │ │ ├── y18n@3.2.1 
  │ │ │ └─┬ yargs@8.0.2 
  │ │ │   ├── camelcase@4.1.0 
  │ │ │   ├─┬ cliui@3.2.0 
  │ │ │   │ ├─┬ string-width@1.0.2 
  │ │ │   │ │ ├── code-point-at@1.1.0 
  │ │ │   │ │ └─┬ is-fullwidth-code-point@1.0.0 
  │ │ │   │ │   └── number-is-nan@1.0.1 
  │ │ │   │ ├─┬ strip-ansi@3.0.1 
  │ │ │   │ │ └── ansi-regex@2.1.1 
  │ │ │   │ └── wrap-ansi@2.1.0 
  │ │ │   ├── decamelize@1.2.0 
  │ │ │   ├── get-caller-file@1.0.2 
  │ │ │   ├─┬ os-locale@2.1.0 
  │ │ │   │ ├─┬ execa@0.7.0 
  │ │ │   │ │ ├─┬ cross-spawn@5.1.0 
  │ │ │   │ │ │ └─┬ shebang-command@1.2.0 
  │ │ │   │ │ │   └── shebang-regex@1.0.0 
  │ │ │   │ │ ├── get-stream@3.0.0 
  │ │ │   │ │ ├── is-stream@1.1.0 
  │ │ │   │ │ ├─┬ npm-run-path@2.0.2 
  │ │ │   │ │ │ └── path-key@2.0.1 
  │ │ │   │ │ ├── p-finally@1.0.0 
  │ │ │   │ │ ├── signal-exit@3.0.2 
  │ │ │   │ │ └── strip-eof@1.0.0 
  │ │ │   │ ├─┬ lcid@1.0.0 
  │ │ │   │ │ └── invert-kv@1.0.0 
  │ │ │   │ └─┬ mem@1.1.0 
  │ │ │   │   └── mimic-fn@1.1.0 
  │ │ │   ├─┬ read-pkg-up@2.0.0 
  │ │ │   │ ├─┬ find-up@2.1.0 
  │ │ │   │ │ └─┬ locate-path@2.0.0 
  │ │ │   │ │   ├─┬ p-locate@2.0.0 
  │ │ │   │ │   │ └── p-limit@1.1.0 
  │ │ │   │ │   └── path-exists@3.0.0 
  │ │ │   │ └─┬ read-pkg@2.0.0 
  │ │ │   │   ├─┬ load-json-file@2.0.0 
  │ │ │   │   │ ├─┬ parse-json@2.2.0 
  │ │ │   │   │ │ └─┬ error-ex@1.3.1 
  │ │ │   │   │ │   └── is-arrayish@0.2.1 
  │ │ │   │   │ ├── pify@2.3.0 
  │ │ │   │   │ └── strip-bom@3.0.0 
  │ │ │   │   └─┬ path-type@2.0.0 
  │ │ │   │     └── pify@2.3.0 
  │ │ │   ├── require-directory@2.1.1 
  │ │ │   ├── require-main-filename@1.0.1 
  │ │ │   ├── set-blocking@2.0.0 
  │ │ │   ├─┬ string-width@2.1.1 
  │ │ │   │ └── is-fullwidth-code-point@2.0.0 
  │ │ │   ├── which-module@2.0.0 
  │ │ │   └── yargs-parser@7.0.0 
  │ │ ├── lockfile@1.0.3 
  │ │ ├── lodash._baseindexof@3.1.0 
  │ │ ├─┬ lodash._baseuniq@4.6.0 
  │ │ │ ├── lodash._createset@4.0.3 
  │ │ │ └── lodash._root@3.0.1 
  │ │ ├── lodash._bindcallback@3.0.1 
  │ │ ├── lodash._cacheindexof@3.0.2 
  │ │ ├── lodash._createcache@3.1.2 
  │ │ ├── lodash._getnative@3.9.1 
  │ │ ├── lodash.clonedeep@4.5.0 
  │ │ ├── lodash.restparam@3.6.1 
  │ │ ├── lodash.union@4.6.0 
  │ │ ├── lodash.uniq@4.5.0 
  │ │ ├── lodash.without@4.4.0 
  │ │ ├─┬ lru-cache@4.1.1 
  │ │ │ ├── pseudomap@1.0.2 
  │ │ │ └── yallist@2.1.2 
  │ │ ├── meant@1.0.0 
  │ │ ├─┬ mississippi@1.3.0 
  │ │ │ ├─┬ concat-stream@1.6.0 
  │ │ │ │ └── typedarray@0.0.6 
  │ │ │ ├─┬ duplexify@3.5.0 
  │ │ │ │ ├─┬ end-of-stream@1.0.0 
  │ │ │ │ │ └── once@1.3.3 
  │ │ │ │ └── stream-shift@1.0.0 
  │ │ │ ├── end-of-stream@1.4.0 
  │ │ │ ├── flush-write-stream@1.0.2 
  │ │ │ ├── from2@2.3.0 
  │ │ │ ├─┬ parallel-transform@1.1.0 
  │ │ │ │ └── cyclist@0.2.2 
  │ │ │ ├── pump@1.0.2 
  │ │ │ ├── pumpify@1.3.5 
  │ │ │ ├─┬ stream-each@1.2.0 
  │ │ │ │ └── stream-shift@1.0.0 
  │ │ │ └─┬ through2@2.0.3 
  │ │ │   └── xtend@4.0.1 
  │ │ ├─┬ mkdirp@0.5.1 
  │ │ │ └── minimist@0.0.8 
  │ │ ├─┬ move-concurrently@1.0.1 
  │ │ │ ├── copy-concurrently@1.0.3 
  │ │ │ └── run-queue@1.0.3 
  │ │ ├─┬ node-gyp@3.6.2 
  │ │ │ ├── fstream@1.0.11 
  │ │ │ ├─┬ minimatch@3.0.4 
  │ │ │ │ └─┬ brace-expansion@1.1.8 
  │ │ │ │   ├── balanced-match@1.0.0 
  │ │ │ │   └── concat-map@0.0.1 
  │ │ │ ├── nopt@3.0.6 
  │ │ │ ├── semver@5.3.0 
  │ │ │ └─┬ tar@2.2.1 
  │ │ │   └── block-stream@0.0.9 
  │ │ ├── nopt@4.0.1 
  │ │ ├─┬ normalize-package-data@2.4.0 
  │ │ │ └─┬ is-builtin-module@1.0.0 
  │ │ │   └── builtin-modules@1.1.1 
  │ │ ├── npm-cache-filename@1.0.2 
  │ │ ├── npm-install-checks@3.0.0 
  │ │ ├── npm-lifecycle@1.0.2 
  │ │ ├── npm-package-arg@5.1.2 
  │ │ ├─┬ npm-packlist@1.1.8 
  │ │ │ ├─┬ ignore-walk@3.0.0 
  │ │ │ │ └─┬ minimatch@3.0.4 
  │ │ │ │   └─┬ brace-expansion@1.1.8 
  │ │ │ │     ├── balanced-match@1.0.0 
  │ │ │ │     └── concat-map@0.0.1 
  │ │ │ └── npm-bundled@1.0.3 
  │ │ ├─┬ npm-registry-client@8.4.0 
  │ │ │ └─┬ concat-stream@1.6.0 
  │ │ │   └── typedarray@0.0.6 
  │ │ ├── npm-user-validate@1.0.0 
  │ │ ├─┬ npmlog@4.1.2 
  │ │ │ ├─┬ are-we-there-yet@1.1.4 
  │ │ │ │ └── delegates@1.0.0 
  │ │ │ ├── console-control-strings@1.1.0 
  │ │ │ ├─┬ gauge@2.7.4 
  │ │ │ │ ├── object-assign@4.1.1 
  │ │ │ │ ├── signal-exit@3.0.2 
  │ │ │ │ ├─┬ string-width@1.0.2 
  │ │ │ │ │ ├── code-point-at@1.1.0 
  │ │ │ │ │ └─┬ is-fullwidth-code-point@1.0.0 
  │ │ │ │ │   └── number-is-nan@1.0.1 
  │ │ │ │ ├─┬ strip-ansi@3.0.1 
  │ │ │ │ │ └── ansi-regex@2.1.1 
  │ │ │ │ └── wide-align@1.1.2 
  │ │ │ └── set-blocking@2.0.0 
  │ │ ├── once@1.4.0 
  │ │ ├── opener@1.4.3 
  │ │ ├─┬ osenv@0.1.4 
  │ │ │ ├── os-homedir@1.0.2 
  │ │ │ └── os-tmpdir@1.0.2 
  │ │ ├─┬ pacote@6.0.2 
  │ │ │ ├─┬ make-fetch-happen@2.5.0 
  │ │ │ │ ├─┬ agentkeepalive@3.3.0 
  │ │ │ │ │ └─┬ humanize-ms@1.2.1 
  │ │ │ │ │   └── ms@2.0.0 
  │ │ │ │ ├── http-cache-semantics@3.7.3 
  │ │ │ │ ├─┬ http-proxy-agent@2.0.0 
  │ │ │ │ │ ├─┬ agent-base@4.1.1 
  │ │ │ │ │ │ └─┬ es6-promisify@5.0.0 
  │ │ │ │ │ │   └── es6-promise@4.1.1 
  │ │ │ │ │ └─┬ debug@2.6.8 
  │ │ │ │ │   └── ms@2.0.0 
  │ │ │ │ ├─┬ https-proxy-agent@2.1.0 
  │ │ │ │ │ ├─┬ agent-base@4.1.1 
  │ │ │ │ │ │ └─┬ es6-promisify@5.0.0 
  │ │ │ │ │ │   └── es6-promise@4.1.1 
  │ │ │ │ │ └─┬ debug@2.6.8 
  │ │ │ │ │   └── ms@2.0.0 
  │ │ │ │ ├─┬ node-fetch-npm@2.0.2 
  │ │ │ │ │ ├─┬ encoding@0.1.12 
  │ │ │ │ │ │ └── iconv-lite@0.4.18 
  │ │ │ │ │ └── json-parse-better-errors@1.0.1 
  │ │ │ │ └─┬ socks-proxy-agent@3.0.0 
  │ │ │ │   ├─┬ agent-base@4.1.1 
  │ │ │ │   │ └─┬ es6-promisify@5.0.0 
  │ │ │ │   │   └── es6-promise@4.1.1 
  │ │ │ │   └─┬ socks@1.1.10 
  │ │ │ │     ├── ip@1.1.5 
  │ │ │ │     └── smart-buffer@1.1.15 
  │ │ │ ├─┬ minimatch@3.0.4 
  │ │ │ │ └─┬ brace-expansion@1.1.8 
  │ │ │ │   ├── balanced-match@1.0.0 
  │ │ │ │   └── concat-map@0.0.1 
  │ │ │ ├── npm-pick-manifest@1.0.4 
  │ │ │ ├─┬ promise-retry@1.1.1 
  │ │ │ │ └── err-code@1.1.2 
  │ │ │ └─┬ protoduck@4.0.0 
  │ │ │   └── genfun@4.0.1 
  │ │ ├── path-is-inside@1.0.2 
  │ │ ├── promise-inflight@1.0.1 
  │ │ ├─┬ read@1.0.7 
  │ │ │ └── mute-stream@0.0.7 
  │ │ ├── read-cmd-shim@1.0.1 
  │ │ ├─┬ read-installed@4.0.3 
  │ │ │ └── util-extend@1.0.3 
  │ │ ├─┬ read-package-json@2.0.12 
  │ │ │ ├── json-parse-better-errors@1.0.1 
  │ │ │ └── slash@1.0.0 
  │ │ ├── read-package-tree@5.1.6 
  │ │ ├─┬ readable-stream@2.3.3 
  │ │ │ ├── core-util-is@1.0.2 
  │ │ │ ├── isarray@1.0.0 
  │ │ │ ├── process-nextick-args@1.0.7 
  │ │ │ ├── string_decoder@1.0.3 
  │ │ │ └── util-deprecate@1.0.2 
  │ │ ├── readdir-scoped-modules@1.0.2 
  │ │ ├─┬ request@2.81.0 
  │ │ │ ├── aws-sign2@0.6.0 
  │ │ │ ├── aws4@1.6.0 
  │ │ │ ├── caseless@0.12.0 
  │ │ │ ├─┬ combined-stream@1.0.5 
  │ │ │ │ └── delayed-stream@1.0.0 
  │ │ │ ├── extend@3.0.1 
  │ │ │ ├── forever-agent@0.6.1 
  │ │ │ ├─┬ form-data@2.1.4 
  │ │ │ │ └── asynckit@0.4.0 
  │ │ │ ├─┬ har-validator@4.2.1 
  │ │ │ │ ├─┬ ajv@4.11.8 
  │ │ │ │ │ ├── co@4.6.0 
  │ │ │ │ │ └─┬ json-stable-stringify@1.0.1 
  │ │ │ │ │   └── jsonify@0.0.0 
  │ │ │ │ └── har-schema@1.0.5 
  │ │ │ ├─┬ hawk@3.1.3 
  │ │ │ │ ├── boom@2.10.1 
  │ │ │ │ ├── cryptiles@2.0.5 
  │ │ │ │ ├── hoek@2.16.3 
  │ │ │ │ └── sntp@1.0.9 
  │ │ │ ├─┬ http-signature@1.1.1 
  │ │ │ │ ├── assert-plus@0.2.0 
  │ │ │ │ ├─┬ jsprim@1.4.0 
  │ │ │ │ │ ├── assert-plus@1.0.0 
  │ │ │ │ │ ├── extsprintf@1.0.2 
  │ │ │ │ │ ├── json-schema@0.2.3 
  │ │ │ │ │ └── verror@1.3.6 
  │ │ │ │ └─┬ sshpk@1.13.1 
  │ │ │ │   ├── asn1@0.2.3 
  │ │ │ │   ├── assert-plus@1.0.0 
  │ │ │ │   ├── bcrypt-pbkdf@1.0.1 
  │ │ │ │   ├── dashdash@1.14.1 
  │ │ │ │   ├── ecc-jsbn@0.1.1 
  │ │ │ │   ├── getpass@0.1.7 
  │ │ │ │   ├── jsbn@0.1.1 
  │ │ │ │   └── tweetnacl@0.14.5 
  │ │ │ ├── is-typedarray@1.0.0 
  │ │ │ ├── isstream@0.1.2 
  │ │ │ ├── json-stringify-safe@5.0.1 
  │ │ │ ├─┬ mime-types@2.1.15 
  │ │ │ │ └── mime-db@1.27.0 
  │ │ │ ├── oauth-sign@0.8.2 
  │ │ │ ├── performance-now@0.2.0 
  │ │ │ ├── qs@6.4.0 
  │ │ │ ├── stringstream@0.0.5 
  │ │ │ ├─┬ tough-cookie@2.3.2 
  │ │ │ │ └── punycode@1.4.1 
  │ │ │ └── tunnel-agent@0.6.0 
  │ │ ├── retry@0.10.1 
  │ │ ├── rimraf@2.6.1 
  │ │ ├── safe-buffer@5.1.1 
  │ │ ├── semver@5.4.1 
  │ │ ├── sha@2.0.1 
  │ │ ├── slide@1.1.6 
  │ │ ├── sorted-object@2.0.1 
  │ │ ├─┬ sorted-union-stream@2.1.3 
  │ │ │ ├─┬ from2@1.3.0 
  │ │ │ │ └─┬ readable-stream@1.1.14 
  │ │ │ │   ├── core-util-is@1.0.2 
  │ │ │ │   ├── isarray@0.0.1 
  │ │ │ │   └── string_decoder@0.10.31 
  │ │ │ └─┬ stream-iterate@1.2.0 
  │ │ │   └── stream-shift@1.0.0 
  │ │ ├── ssri@4.1.6 
  │ │ ├─┬ strip-ansi@4.0.0 
  │ │ │ └── ansi-regex@3.0.0 
  │ │ ├─┬ tar@4.0.1 
  │ │ │ ├── minipass@2.2.1 
  │ │ │ ├── minizlib@1.0.3 
  │ │ │ └── yallist@3.0.2 
  │ │ ├── text-table@0.2.0 
  │ │ ├── uid-number@0.0.6 
  │ │ ├── umask@1.1.0 
  │ │ ├─┬ unique-filename@1.1.0 
  │ │ │ └── unique-slug@2.0.0 
  │ │ ├── unpipe@1.0.0 
  │ │ ├─┬ update-notifier@2.2.0 
  │ │ │ ├─┬ boxen@1.1.0 
  │ │ │ │ ├── ansi-align@2.0.0 
  │ │ │ │ ├── camelcase@4.1.0 
  │ │ │ │ ├── cli-boxes@1.0.0 
  │ │ │ │ ├─┬ string-width@2.1.0 
  │ │ │ │ │ ├── is-fullwidth-code-point@2.0.0 
  │ │ │ │ │ └── strip-ansi@4.0.0 
  │ │ │ │ ├─┬ term-size@0.1.1 
  │ │ │ │ │ └─┬ execa@0.4.0 
  │ │ │ │ │   ├── cross-spawn-async@2.2.5 
  │ │ │ │ │   ├── is-stream@1.1.0 
  │ │ │ │ │   ├── npm-run-path@1.0.0 
  │ │ │ │ │   ├── object-assign@4.1.1 
  │ │ │ │ │   ├── path-key@1.0.0 
  │ │ │ │ │   └── strip-eof@1.0.0 
  │ │ │ │ └─┬ widest-line@1.0.0 
  │ │ │ │   └─┬ string-width@1.0.2 
  │ │ │ │     ├── code-point-at@1.1.0 
  │ │ │ │     ├─┬ is-fullwidth-code-point@1.0.0 
  │ │ │ │     │ └── number-is-nan@1.0.1 
  │ │ │ │     └─┬ strip-ansi@3.0.1 
  │ │ │ │       └── ansi-regex@2.1.1 
  │ │ │ ├─┬ chalk@1.1.3 
  │ │ │ │ ├── ansi-styles@2.2.1 
  │ │ │ │ ├── escape-string-regexp@1.0.5 
  │ │ │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ │ │ └── ansi-regex@2.1.1 
  │ │ │ │ ├─┬ strip-ansi@3.0.1 
  │ │ │ │ │ └── ansi-regex@2.1.1 
  │ │ │ │ └── supports-color@2.0.0 
  │ │ │ ├─┬ configstore@3.1.0 
  │ │ │ │ ├─┬ dot-prop@4.1.1 
  │ │ │ │ │ └── is-obj@1.0.1 
  │ │ │ │ ├─┬ make-dir@1.0.0 
  │ │ │ │ │ └── pify@2.3.0 
  │ │ │ │ └─┬ unique-string@1.0.0 
  │ │ │ │   └── crypto-random-string@1.0.0 
  │ │ │ ├── import-lazy@2.1.0 
  │ │ │ ├── is-npm@1.0.0 
  │ │ │ ├─┬ latest-version@3.1.0 
  │ │ │ │ └─┬ package-json@4.0.1 
  │ │ │ │   ├─┬ got@6.7.1 
  │ │ │ │   │ ├─┬ create-error-class@3.0.2 
  │ │ │ │   │ │ └── capture-stack-trace@1.0.0 
  │ │ │ │   │ ├── duplexer3@0.1.4 
  │ │ │ │   │ ├── get-stream@3.0.0 
  │ │ │ │   │ ├── is-redirect@1.0.0 
  │ │ │ │   │ ├── is-retry-allowed@1.1.0 
  │ │ │ │   │ ├── is-stream@1.1.0 
  │ │ │ │   │ ├── lowercase-keys@1.0.0 
  │ │ │ │   │ ├── timed-out@4.0.1 
  │ │ │ │   │ ├── unzip-response@2.0.1 
  │ │ │ │   │ └─┬ url-parse-lax@1.0.0 
  │ │ │ │   │   └── prepend-http@1.0.4 
  │ │ │ │   ├─┬ registry-auth-token@3.3.1 
  │ │ │ │   │ └─┬ rc@1.2.1 
  │ │ │ │   │   ├── deep-extend@0.4.2 
  │ │ │ │   │   ├── minimist@1.2.0 
  │ │ │ │   │   └── strip-json-comments@2.0.1 
  │ │ │ │   └─┬ registry-url@3.1.0 
  │ │ │ │     └─┬ rc@1.2.1 
  │ │ │ │       ├── deep-extend@0.4.2 
  │ │ │ │       ├── minimist@1.2.0 
  │ │ │ │       └── strip-json-comments@2.0.1 
  │ │ │ ├── semver-diff@2.1.0 
  │ │ │ └── xdg-basedir@3.0.0 
  │ │ ├── uuid@3.1.0 
  │ │ ├─┬ validate-npm-package-license@3.0.1 
  │ │ │ ├─┬ spdx-correct@1.0.2 
  │ │ │ │ └── spdx-license-ids@1.2.2 
  │ │ │ └── spdx-expression-parse@1.0.4 
  │ │ ├─┬ validate-npm-package-name@3.0.0 
  │ │ │ └── builtins@1.0.3 
  │ │ ├─┬ which@1.3.0 
  │ │ │ └── isexe@2.0.0 
  │ │ ├─┬ worker-farm@1.5.0 
  │ │ │ ├─┬ errno@0.1.4 
  │ │ │ │ └── prr@0.0.0 
  │ │ │ └── xtend@4.0.1 
  │ │ ├── wrappy@1.0.2 
  │ │ └── write-file-atomic@2.1.0 
  │ └── underscore@1.8.3 
  ├─┬ connect@2.5.0 
  │ ├── bytes@0.1.0 
  │ ├── cookie@0.0.4 
  │ ├── crc@0.2.0 
  │ ├─┬ debug@3.1.0 
  │ │ └── ms@2.0.0 
  │ ├── formidable@1.0.11 
  │ ├── fresh@0.1.0 
  │ ├── pause@0.0.1 
  │ ├── qs@0.5.1 
  │ └─┬ send@0.0.4 
  │   ├── mime@1.2.6 
  │   └── range-parser@0.0.4 
  ├─┬ ecstatic@3.0.0 
  │ ├── he@1.1.1 
  │ ├── mime@1.4.1 
  │ ├── minimist@1.2.0 
  │ └── url-join@2.0.2 
  ├─┬ event-stream@3.3.4 
  │ ├── duplexer@0.1.1 
  │ ├── map-stream@0.1.0 
  │ ├── split@0.3.3 
  │ └── stream-combiner@0.0.4 
  ├─┬ express@2.5.11 
  │ ├─┬ connect@1.9.2 
  │ │ └── formidable@1.0.17 
  │ ├── mime@1.2.4 
  │ ├── mkdirp@0.3.0 
  │ └── qs@0.4.2 
  ├── filed@0.0.7 
  ├── from@0.1.7 
  ├─┬ http-proxy@0.8.3 
  │ ├── colors@0.6.2 
  │ └── pkginfo@0.2.3 
  ├── mime@1.2.7 
  ├── node-uuid@1.4.8 
  ├─┬ nodeunit@0.7.4 
  │ └─┬ tap@10.7.2 
  │   ├── bind-obj-methods@1.0.0 
  │   ├── bluebird@3.5.0 
  │   ├── clean-yaml-object@0.1.0 
  │   ├── color-support@1.1.3 
  │   ├─┬ coveralls@2.13.3 
  │   │ ├─┬ js-yaml@3.6.1 
  │   │ │ └── esprima@2.7.3 
  │   │ ├── lcov-parse@0.0.10 
  │   │ ├── log-driver@1.2.5 
  │   │ └─┬ request@2.79.0 
  │   │   ├── aws-sign2@0.6.0 
  │   │   ├── aws4@1.6.0 
  │   │   ├── caseless@0.11.0 
  │   │   ├─┬ combined-stream@1.0.5 
  │   │   │ └── delayed-stream@1.0.0 
  │   │   ├── extend@3.0.1 
  │   │   ├── forever-agent@0.6.1 
  │   │   ├─┬ form-data@2.1.4 
  │   │   │ └── asynckit@0.4.0 
  │   │   ├─┬ har-validator@2.0.6 
  │   │   │ ├─┬ chalk@1.1.3 
  │   │   │ │ ├── ansi-styles@2.2.1 
  │   │   │ │ ├── has-ansi@2.0.0 
  │   │   │ │ └── supports-color@2.0.0 
  │   │   │ ├── commander@2.11.0 
  │   │   │ ├─┬ is-my-json-valid@2.16.1 
  │   │   │ │ ├── generate-function@2.0.0 
  │   │   │ │ ├─┬ generate-object-property@1.2.0 
  │   │   │ │ │ └── is-property@1.0.2 
  │   │   │ │ ├── jsonpointer@4.0.1 
  │   │   │ │ └── xtend@4.0.1 
  │   │   │ └─┬ pinkie-promise@2.0.1 
  │   │   │   └── pinkie@2.0.4 
  │   │   ├─┬ hawk@3.1.3 
  │   │   │ ├── boom@2.10.1 
  │   │   │ ├── cryptiles@2.0.5 
  │   │   │ ├── hoek@2.16.3 
  │   │   │ └── sntp@1.0.9 
  │   │   ├─┬ http-signature@1.1.1 
  │   │   │ ├── assert-plus@0.2.0 
  │   │   │ ├─┬ jsprim@1.4.1 
  │   │   │ │ ├── assert-plus@1.0.0 
  │   │   │ │ ├── extsprintf@1.3.0 
  │   │   │ │ ├── json-schema@0.2.3 
  │   │   │ │ └─┬ verror@1.10.0 
  │   │   │ │   └── assert-plus@1.0.0 
  │   │   │ └─┬ sshpk@1.13.1 
  │   │   │   ├── asn1@0.2.3 
  │   │   │   ├── assert-plus@1.0.0 
  │   │   │   ├── bcrypt-pbkdf@1.0.1 
  │   │   │   ├─┬ dashdash@1.14.1 
  │   │   │   │ └── assert-plus@1.0.0 
  │   │   │   ├── ecc-jsbn@0.1.1 
  │   │   │   ├─┬ getpass@0.1.7 
  │   │   │   │ └── assert-plus@1.0.0 
  │   │   │   ├── jsbn@0.1.1 
  │   │   │   └── tweetnacl@0.14.5 
  │   │   ├── is-typedarray@1.0.0 
  │   │   ├── isstream@0.1.2 
  │   │   ├── json-stringify-safe@5.0.1 
  │   │   ├─┬ mime-types@2.1.17 
  │   │   │ └── mime-db@1.30.0 
  │   │   ├── oauth-sign@0.8.2 
  │   │   ├── qs@6.3.2 
  │   │   ├── stringstream@0.0.5 
  │   │   ├── tough-cookie@2.3.3 
  │   │   ├── tunnel-agent@0.4.3 
  │   │   └── uuid@3.1.0 
  │   ├─┬ foreground-child@1.5.6 
  │   │ └─┬ cross-spawn@4.0.2 
  │   │   ├─┬ lru-cache@4.1.1 
  │   │   │ ├── pseudomap@1.0.2 
  │   │   │ └── yallist@2.1.2 
  │   │   └── which@1.3.0 
  │   ├── fs-exists-cached@1.0.0 
  │   ├── function-loop@1.0.1 
  │   ├─┬ glob@7.1.2 
  │   │ ├── fs.realpath@1.0.0 
  │   │ ├─┬ inflight@1.0.6 
  │   │ │ └── wrappy@1.0.2 
  │   │ ├── inherits@2.0.3 
  │   │ ├─┬ minimatch@3.0.4 
  │   │ │ └─┬ brace-expansion@1.1.8 
  │   │ │   ├── balanced-match@1.0.0 
  │   │ │   └── concat-map@0.0.1 
  │   │ ├── once@1.4.0 
  │   │ └── path-is-absolute@1.0.1 
  │   ├── isexe@2.0.0 
  │   ├─┬ js-yaml@3.10.0 
  │   │ ├─┬ argparse@1.0.9 
  │   │ │ └── sprintf-js@1.0.3 
  │   │ └── esprima@4.0.0 
  │   ├─┬ nyc@11.2.1 
  │   │ ├── archy@1.0.0 
  │   │ ├── arrify@1.0.1 
  │   │ ├─┬ caching-transform@1.0.1 
  │   │ │ └─┬ write-file-atomic@1.3.4 
  │   │ │   ├── graceful-fs@4.1.11 
  │   │ │   ├── imurmurhash@0.1.4 
  │   │ │   └── slide@1.1.6 
  │   │ ├── convert-source-map@1.5.0 
  │   │ ├── debug-log@1.0.1 
  │   │ ├─┬ default-require-extensions@1.0.0 
  │   │ │ └─┬ strip-bom@2.0.0 
  │   │ │   └── is-utf8@0.2.1 
  │   │ ├─┬ find-cache-dir@0.1.1 
  │   │ │ ├── commondir@1.0.1 
  │   │ │ └─┬ pkg-dir@1.0.0 
  │   │ │   └─┬ find-up@1.1.2 
  │   │ │     ├── path-exists@2.1.0 
  │   │ │     └─┬ pinkie-promise@2.0.1 
  │   │ │       └── pinkie@2.0.4 
  │   │ ├─┬ find-up@2.1.0 
  │   │ │ └─┬ locate-path@2.0.0 
  │   │ │   ├─┬ p-locate@2.0.0 
  │   │ │   │ └── p-limit@1.1.0 
  │   │ │   └── path-exists@3.0.0 
  │   │ ├─┬ foreground-child@1.5.6 
  │   │ │ └─┬ cross-spawn@4.0.2 
  │   │ │   └─┬ lru-cache@4.1.1 
  │   │ │     ├── pseudomap@1.0.2 
  │   │ │     └── yallist@2.1.2 
  │   │ ├─┬ glob@7.1.2 
  │   │ │ ├── fs.realpath@1.0.0 
  │   │ │ ├─┬ inflight@1.0.6 
  │   │ │ │ └── wrappy@1.0.2 
  │   │ │ ├── inherits@2.0.3 
  │   │ │ ├─┬ minimatch@3.0.4 
  │   │ │ │ └─┬ brace-expansion@1.1.8 
  │   │ │ │   ├── balanced-match@1.0.0 
  │   │ │ │   └── concat-map@0.0.1 
  │   │ │ ├── once@1.4.0 
  │   │ │ └── path-is-absolute@1.0.1 
  │   │ ├── istanbul-lib-coverage@1.1.1 
  │   │ ├─┬ istanbul-lib-hook@1.0.7 
  │   │ │ └── append-transform@0.4.0 
  │   │ ├─┬ istanbul-lib-instrument@1.8.0 
  │   │ │ ├─┬ babel-generator@6.26.0 
  │   │ │ │ ├── babel-messages@6.23.0 
  │   │ │ │ ├─┬ babel-runtime@6.26.0 
  │   │ │ │ │ ├── core-js@2.5.1 
  │   │ │ │ │ └── regenerator-runtime@0.11.0 
  │   │ │ │ ├─┬ detect-indent@4.0.0 
  │   │ │ │ │ └─┬ repeating@2.0.1 
  │   │ │ │ │   └── is-finite@1.0.2 
  │   │ │ │ ├── jsesc@1.3.0 
  │   │ │ │ ├── lodash@4.17.4 
  │   │ │ │ └── trim-right@1.0.1 
  │   │ │ ├── babel-template@6.26.0 
  │   │ │ ├─┬ babel-traverse@6.26.0 
  │   │ │ │ ├─┬ babel-code-frame@6.26.0 
  │   │ │ │ │ ├─┬ chalk@1.1.3 
  │   │ │ │ │ │ ├── ansi-styles@2.2.1 
  │   │ │ │ │ │ ├── escape-string-regexp@1.0.5 
  │   │ │ │ │ │ ├── has-ansi@2.0.0 
  │   │ │ │ │ │ └── supports-color@2.0.0 
  │   │ │ │ │ └── js-tokens@3.0.2 
  │   │ │ │ ├── globals@9.18.0 
  │   │ │ │ └─┬ invariant@2.2.2 
  │   │ │ │   └── loose-envify@1.3.1 
  │   │ │ ├─┬ babel-types@6.26.0 
  │   │ │ │ ├── esutils@2.0.2 
  │   │ │ │ └── to-fast-properties@1.0.3 
  │   │ │ ├── babylon@6.18.0 
  │   │ │ └── semver@5.4.1 
  │   │ ├─┬ istanbul-lib-report@1.1.1 
  │   │ │ ├── path-parse@1.0.5 
  │   │ │ └─┬ supports-color@3.2.3 
  │   │ │   └── has-flag@1.0.0 
  │   │ ├─┬ istanbul-lib-source-maps@1.2.1 
  │   │ │ ├─┬ debug@2.6.8 
  │   │ │ │ └── ms@2.0.0 
  │   │ │ └── source-map@0.5.7 
  │   │ ├─┬ istanbul-reports@1.1.2 
  │   │ │ └─┬ handlebars@4.0.10 
  │   │ │   ├── async@1.5.2 
  │   │ │   ├─┬ optimist@0.6.1 
  │   │ │   │ └── wordwrap@0.0.3 
  │   │ │   ├─┬ source-map@0.4.4 
  │   │ │   │ └── amdefine@1.0.1 
  │   │ │   └─┬ uglify-js@2.8.29 
  │   │ │     ├── uglify-to-browserify@1.0.2 
  │   │ │     └─┬ yargs@3.10.0 
  │   │ │       ├── camelcase@1.2.1 
  │   │ │       ├─┬ cliui@2.1.0 
  │   │ │       │ ├─┬ center-align@0.1.3 
  │   │ │       │ │ ├─┬ align-text@0.1.4 
  │   │ │       │ │ │ └── longest@1.0.1 
  │   │ │       │ │ └── lazy-cache@1.0.4 
  │   │ │       │ ├── right-align@0.1.3 
  │   │ │       │ └── wordwrap@0.0.2 
  │   │ │       └── window-size@0.1.0 
  │   │ ├─┬ md5-hex@1.3.0 
  │   │ │ └── md5-o-matic@0.1.1 
  │   │ ├── merge-source-map@1.0.4 
  │   │ ├─┬ micromatch@2.3.11 
  │   │ │ ├─┬ arr-diff@2.0.0 
  │   │ │ │ └── arr-flatten@1.1.0 
  │   │ │ ├── array-unique@0.2.1 
  │   │ │ ├─┬ braces@1.8.5 
  │   │ │ │ ├─┬ expand-range@1.8.2 
  │   │ │ │ │ └─┬ fill-range@2.2.3 
  │   │ │ │ │   ├── is-number@2.1.0 
  │   │ │ │ │   ├─┬ isobject@2.1.0 
  │   │ │ │ │   │ └── isarray@1.0.0 
  │   │ │ │ │   ├─┬ randomatic@1.1.7 
  │   │ │ │ │   │ ├─┬ is-number@3.0.0 
  │   │ │ │ │   │ │ └── kind-of@3.2.2 
  │   │ │ │ │   │ └── kind-of@4.0.0 
  │   │ │ │ │   └── repeat-string@1.6.1 
  │   │ │ │ ├── preserve@0.2.0 
  │   │ │ │ └── repeat-element@1.1.2 
  │   │ │ ├─┬ expand-brackets@0.1.5 
  │   │ │ │ └── is-posix-bracket@0.1.1 
  │   │ │ ├── extglob@0.3.2 
  │   │ │ ├── filename-regex@2.0.1 
  │   │ │ ├── is-extglob@1.0.0 
  │   │ │ ├── is-glob@2.0.1 
  │   │ │ ├─┬ kind-of@3.2.2 
  │   │ │ │ └── is-buffer@1.1.5 
  │   │ │ ├─┬ normalize-path@2.1.1 
  │   │ │ │ └── remove-trailing-separator@1.1.0 
  │   │ │ ├─┬ object.omit@2.0.1 
  │   │ │ │ ├─┬ for-own@0.1.5 
  │   │ │ │ │ └── for-in@1.0.2 
  │   │ │ │ └── is-extendable@0.1.1 
  │   │ │ ├─┬ parse-glob@3.0.4 
  │   │ │ │ ├─┬ glob-base@0.3.0 
  │   │ │ │ │ └── glob-parent@2.0.0 
  │   │ │ │ └── is-dotfile@1.0.3 
  │   │ │ └─┬ regex-cache@0.4.4 
  │   │ │   └─┬ is-equal-shallow@0.1.3 
  │   │ │     └── is-primitive@2.0.0 
  │   │ ├─┬ mkdirp@0.5.1 
  │   │ │ └── minimist@0.0.8 
  │   │ ├── resolve-from@2.0.0 
  │   │ ├── rimraf@2.6.1 
  │   │ ├── signal-exit@3.0.2 
  │   │ ├─┬ spawn-wrap@1.3.8 
  │   │ │ ├── os-homedir@1.0.2 
  │   │ │ └─┬ which@1.3.0 
  │   │ │   └── isexe@2.0.0 
  │   │ ├─┬ test-exclude@4.1.1 
  │   │ │ ├── object-assign@4.1.1 
  │   │ │ ├─┬ read-pkg-up@1.0.1 
  │   │ │ │ ├── find-up@1.1.2 
  │   │ │ │ └─┬ read-pkg@1.1.0 
  │   │ │ │   ├─┬ load-json-file@1.1.0 
  │   │ │ │   │ ├─┬ parse-json@2.2.0 
  │   │ │ │   │ │ └─┬ error-ex@1.3.1 
  │   │ │ │   │ │   └── is-arrayish@0.2.1 
  │   │ │ │   │ └── pify@2.3.0 
  │   │ │ │   ├─┬ normalize-package-data@2.4.0 
  │   │ │ │   │ ├── hosted-git-info@2.5.0 
  │   │ │ │   │ ├─┬ is-builtin-module@1.0.0 
  │   │ │ │   │ │ └── builtin-modules@1.1.1 
  │   │ │ │   │ └─┬ validate-npm-package-license@3.0.1 
  │   │ │ │   │   ├─┬ spdx-correct@1.0.2 
  │   │ │ │   │   │ └── spdx-license-ids@1.2.2 
  │   │ │ │   │   └── spdx-expression-parse@1.0.4 
  │   │ │ │   └── path-type@1.1.0 
  │   │ │ └── require-main-filename@1.0.1 
  │   │ ├─┬ yargs@8.0.2 
  │   │ │ ├── camelcase@4.1.0 
  │   │ │ ├─┬ cliui@3.2.0 
  │   │ │ │ ├─┬ string-width@1.0.2 
  │   │ │ │ │ ├── code-point-at@1.1.0 
  │   │ │ │ │ └─┬ is-fullwidth-code-point@1.0.0 
  │   │ │ │ │   └── number-is-nan@1.0.1 
  │   │ │ │ ├─┬ strip-ansi@3.0.1 
  │   │ │ │ │ └── ansi-regex@2.1.1 
  │   │ │ │ └─┬ wrap-ansi@2.1.0 
  │   │ │ │   └── string-width@1.0.2 
  │   │ │ ├── decamelize@1.2.0 
  │   │ │ ├── get-caller-file@1.0.2 
  │   │ │ ├─┬ os-locale@2.1.0 
  │   │ │ │ ├─┬ execa@0.7.0 
  │   │ │ │ │ ├─┬ cross-spawn@5.1.0 
  │   │ │ │ │ │ └─┬ shebang-command@1.2.0 
  │   │ │ │ │ │   └── shebang-regex@1.0.0 
  │   │ │ │ │ ├── get-stream@3.0.0 
  │   │ │ │ │ ├── is-stream@1.1.0 
  │   │ │ │ │ ├─┬ npm-run-path@2.0.2 
  │   │ │ │ │ │ └── path-key@2.0.1 
  │   │ │ │ │ ├── p-finally@1.0.0 
  │   │ │ │ │ └── strip-eof@1.0.0 
  │   │ │ │ ├─┬ lcid@1.0.0 
  │   │ │ │ │ └── invert-kv@1.0.0 
  │   │ │ │ └─┬ mem@1.1.0 
  │   │ │ │   └── mimic-fn@1.1.0 
  │   │ │ ├─┬ read-pkg-up@2.0.0 
  │   │ │ │ └─┬ read-pkg@2.0.0 
  │   │ │ │   ├─┬ load-json-file@2.0.0 
  │   │ │ │   │ └── strip-bom@3.0.0 
  │   │ │ │   └── path-type@2.0.0 
  │   │ │ ├── require-directory@2.1.1 
  │   │ │ ├── set-blocking@2.0.0 
  │   │ │ ├─┬ string-width@2.1.1 
  │   │ │ │ ├── is-fullwidth-code-point@2.0.0 
  │   │ │ │ └─┬ strip-ansi@4.0.0 
  │   │ │ │   └── ansi-regex@3.0.0 
  │   │ │ ├── which-module@2.0.0 
  │   │ │ ├── y18n@3.2.1 
  │   │ │ └── yargs-parser@7.0.0 
  │   │ └─┬ yargs-parser@5.0.0 
  │   │   └── camelcase@3.0.0 
  │   ├── opener@1.4.3 
  │   ├── os-homedir@1.0.2 
  │   ├── own-or@1.0.0 
  │   ├── own-or-env@1.0.0 
  │   ├─┬ readable-stream@2.3.3 
  │   │ ├── core-util-is@1.0.2 
  │   │ ├── isarray@1.0.0 
  │   │ ├── process-nextick-args@1.0.7 
  │   │ ├── safe-buffer@5.1.1 
  │   │ ├── string_decoder@1.0.3 
  │   │ └── util-deprecate@1.0.2 
  │   ├── signal-exit@3.0.2 
  │   ├─┬ source-map-support@0.4.18 
  │   │ └── source-map@0.5.7 
  │   ├── stack-utils@1.0.1 
  │   ├─┬ tap-mocha-reporter@3.0.6 
  │   │ ├── debug@2.6.9 
  │   │ ├── diff@1.4.0 
  │   │ ├── escape-string-regexp@1.0.5 
  │   │ └─┬ unicode-length@1.0.3 
  │   │   ├── punycode@1.4.1 
  │   │   └─┬ strip-ansi@3.0.1 
  │   │     └── ansi-regex@2.1.1 
  │   ├─┬ tap-parser@5.4.0 
  │   │ └── events-to-array@1.1.2 
  │   ├── tmatch@3.1.0 
  │   ├── trivial-deferred@1.0.1 
  │   ├── tsame@1.1.2 
  │   └── yapool@1.0.0 
  ├─┬ optimist@0.3.4 
  │ └── wordwrap@0.0.3 
  ├── pause-stream@0.0.11 
  ├── router@0.6.2 
  ├─┬ scuttlebutt@5.6.15 
  │ ├── duplex@1.0.0 
  │ ├── iterate@0.1.0 
  │ ├── monotonic-timestamp@0.0.9 
  │ └── stream-serializer@1.1.2 
  ├── since-when@0.4.7 
  ├─┬ ssl-keygen@0.1.1 
  │ ├─┬ foldermap@0.1.2 
  │ │ └─┬ rimraf@2.0.3 
  │ │   └── graceful-fs@1.1.14 
  │ ├─┬ mkdirp@0.5.1 
  │ │ └── minimist@0.0.8 
  │ └── rimraf@2.6.2 
  ├── through@2.3.8 
  ├── traverse@0.6.6 
  └── underscore@1.4.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/netmorphic/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 23% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","call","isArray","parse","join","RegExp","sort","randomBytes","toString"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0709 took 27.5369s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #! /usr/bin/env node

'use strict';

const path = require('path');
const fs = require('fs');
const url = require('url');
const mime = require('mime');
const urlJoin = require('url-join');
const showDir = require('./ecstatic/show-dir');
const version = require('../package.json').version;
const status = require('./ecstatic/status-handlers');
const generateEtag = require('./ecstatic/etag');
const optsParser = require('./ecstatic/opts');

let ecstatic = null;

// See: https://github.com/jesusabdullah/node-ecstatic/issues/109
function decodePathname(pathname) {
  const pieces = pathname.replace(/\\/g, '/').split('/');

  return pieces.map((rawPiece) => {
    const piece = decodeURIComponent(rawPiece);

    if (process.platform === 'win32' && /\\/.test(piece)) {
      throw new Error('Invalid forward slash character');
    }

    return piece;
  }).join('/');
}


// Check to see if we should try to compress a file with gzip.
function shouldCompress(req) {
  const headers = req.headers;

  return headers && headers['accept-encoding'] &&
    headers['accept-encoding']
      .split(',')
      .some(el => ['*', 'compress', 'gzip', 'deflate'].indexOf(el) !== -1)
    ;
}

function hasGzipId12(gzipped, cb) {
  const stream = fs.createReadStream(gzipped, { start: 0, end: 1 });
  let buffer = Buffer('');
  let hasBeenCalled = false;

  stream.on('data', (chunk) => {
    buffer = Buffer.concat([buffer, chunk], 2);
  });

  stream.on('error', (err) => {
    if (hasBeenCalled) {
      throw err;
    }

    hasBeenCalled = true;
    cb(err);
  });

  stream.on('close', () => {
    if (hasBeenCalled) {
      return;
    }

    hasBeenCalled = true;
    cb(null, buffer[0] === 31 && buffer[1] === 139);
  });
}


module.exports = function createMiddleware(_dir, _options) {
  let dir;
  let options;

  if (typeof _dir === 'string') {
    dir = _dir;
    options = _options;
  } else {
    options = _dir;
    dir = options.root;
  }

  const root = path.join(path.resolve(dir), '/');
  const opts = optsParser(options);
  const cache = opts.cache;
  const autoIndex = opts.autoIndex;
  const baseDir = opts.baseDir;
  let defaultExt = opts.defaultExt;
  const handleError = opts.handleError;
  const headers = opts.headers;
  const serverHeader = opts.serverHeader;
  const weakEtags = opts.weakEtags;
  const handleOptionsMethod = opts.handleOptionsMethod;

  opts.root = dir;
  if (defaultExt && /^\./.test(defaultExt)) {
    defaultExt = defaultExt.replace(/^\./, '');
  }

  // Support hashes and .types files in mimeTypes @since 0.8
  if (opts.mimeTypes) {
    try {
      // You can pass a JSON blob here---useful for CLI use
      opts.mimeTypes = JSON.parse(opts.mimeTypes);
    } catch (e) {
      // swallow parse errors, treat this as a string mimetype input
    }
    if (typeof opts.mimeTypes === 'string') {
      mime.load(opts.mimeTypes);
    } else if (typeof opts.mimeTypes === 'object') {
      mime.define(opts.mimeTypes);
    }
  }

  function shouldReturn304(req, serverLastModified, serverEtag) {
    if (!req || !req.headers) {
      return false;
    }

    const clientModifiedSince = req.headers['if-modified-since'];
    const clientEtag = req.headers['if-none-match'];
    let clientModifiedDate;

    if (!clientModifiedSince && !clientEtag) {
      // Client did not provide any conditional caching headers
      return false;
    }

    if (clientModifiedSince) {
      // Catch "illegal access" dates that will crash v8
      // https://github.com/jfhbrook/node-ecstatic/pull/179
      try {
        clientModifiedDate = new Date(Date.parse(clientModifiedSince));
      } catch (err) {
        return false;
      }

      if (clientModifiedDate.toString() === 'Invalid Date') {
        return false;
      }
      // If the client's copy is older than the server's, don't return 304
      if (clientModifiedDate < new Date(serverLastModified)) {
        return false;
      }
    }

    if (clientEtag) {
      // Do a strong or weak etag comparison based on setting
      // https://www.ietf.org/rfc/rfc2616.txt Section 13.3.3
      if (opts.weakCompare && clientEtag !== serverEtag
        && clientEtag !== `W/${serverEtag}` && `W/${clientEtag}` !== serverEtag) {
        return false;
      } else if (!opts.weakCompare && (clientEtag !== serverEtag || clientEtag.indexOf('W/') === 0)) {
        return false;
      }
    }

    return true;
  }

  return function middleware(req, res, next) {
    // Figure out the path for the file from the given url
    const parsed = url.parse(req.url);
    let pathname = null;
    let file = null;
    let gzipped = null;

    // Strip any null bytes from the url
    // This was at one point necessary because of an old bug in url.parse
    //
    // See: https://github.com/jfhbrook/node-ecstatic/issues/16#issuecomment-3039914
    // See: https://github.com/jfhbrook/node-ecstatic/commit/43f7e72a31524f88f47e367c3cc3af710e67c9f4
    //
    // But this opens up a regex dos attack vector! D:
    //
    // Based on some research (ie asking #node-dev if this is still an issue),
    // it's *probably* not an issue. :)
    /*
    while (req.url.indexOf('%00') !== -1) {
      req.url = req.url.replace(/\%00/g, '');
    }
    */

    try {
      decodeURIComponent(req.url); // check validity of url
      pathname = decodePathname(parsed.pathname);
    } catch (err) {
      status[400](res, next, { error: err });
      return;
    }

    file = path.normalize(
      path.join(
        root,
        path.relative(path.join('/', baseDir), pathname)
      )
    );
    gzipped = `${file}.gz`;

    if (serverHeader !== false) {
      // Set common headers.
      res.setHeader('server', `ecstatic-${version}`);
    }

    Object.keys(headers).forEach((key) => {
      res.setHeader(key, headers[key]);
    });

    if (req.method === 'OPTIONS' && handleOptionsMethod) {
      res.end();
      return;
    }

    // TODO: This check is broken, which causes the 403 on the
    // expected 404.
    if (file.slice(0, root.length) !== root) {
      status[403](res, next);
      return;
    }

    if (req.method && (req.method !== 'GET' && req.method !== 'HEAD')) {
      status[405](res, next);
      return;
    }


    function serve(stat) {
      // Do a MIME lookup, fall back to octet-stream and handle gzip
      // special case.
      const defaultType = opts.contentType || 'application/octet-stream';
      let contentType = mime.lookup(file, defaultType);
      let charSet;
      const range = (req.headers && req.headers.range);
      const lastModified = (new Date(stat.mtime)).toUTCString();
      const etag = generateEtag(stat, weakEtags);
      let stream = null;

      if (contentType) {
        charSet = mime.charsets.lookup(contentType, 'utf-8');
        if (charSet) {
          contentType += `; charset=${charSet}`;
        }
      }

      if (file === gzipped) { // is .gz picked up
        res.setHeader('Content-Encoding', 'gzip');

        // strip gz ending and lookup mime type
        contentType = mime.lookup(path.basename(file, '.gz'), defaultType);
      }

      if (range) {
        const total = stat.size;
        const parts = range.replace(/bytes=/, '').split('-');
        const partialstart = parts[0];
        const partialend = parts[1];
        const start = parseInt(partialstart, 10);
        const end = Math.min(
          total - 1,
          partialend ? parseInt(partialend, 10) : total - 1
        );
        const chunksize = (end - start) + 1;
        let fstream = null;

        if (start > end || isNaN(start) || isNaN(end)) {
          status['416'](res, next);
          return;
        }

        fstream = fs.createReadStream(file, { start, end });
        fstream.on('error', (err) => {
          status['500'](res, next, { error: err });
        });
        res.on('close', () => {
          fstream.destroy();
        });
        res.writeHead(206, {
          'Content-Range': `bytes ${start}-${end}/${total}`,
          'Accept-Ranges': 'bytes',
          'Content-Length': chunksize,
          'Content-Type': contentType,
        });
        fstream.pipe(res);
        return;
      }

      // TODO: Helper for this, with default headers.
      res.setHeader('last-modified', lastModified);
      res.setHeader('etag', etag);

      if (typeof cache === 'function') {
        let requestSpecificCache = cache(pathname);
        if (typeof requestSpecificCache === 'number') {
          requestSpecificCache = `max-age=${requestSpecificCache}`;
        }
        res.setHeader('cache-control', requestSpecificCache);
      } else {
        res.setHeader('cache-control', cache);
      }

      // Return a 304 if necessary
      if (shouldReturn304(req, lastModified, etag)) {
        status[304](res, next);
        return;
      }

      res.setHeader('content-length', stat.size);
      res.setHeader('content-type', contentType);

      // set the response statusCode if we have a request statusCode.
      // This only can happen if we have a 404 with some kind of 404.html
      // In all other cases where we have a file we serve the 200
      res.statusCode = req.statusCode || 200;

      if (req.method === 'HEAD') {
        res.end();
        return;
      }

      stream = fs.createReadStream(file);

      stream.pipe(res);
      stream.on('error', (err) => {
        status['500'](res, next, { error: err });
      });
    }


    function statFile() {
      fs.stat(file, (err, stat) => {
        if (err && (err.code === 'ENOENT' || err.code === 'ENOTDIR')) {
          if (req.statusCode === 404) {
            // This means we're already trying ./404.html and can not find it.
            // So send plain text response with 404 status code
            status[404](res, next);
          } else if (!path.extname(parsed.pathname).length && defaultExt) {
            // If there is no file extension in the path and we have a default
            // extension try filename and default extension combination before rendering 404.html.
            middleware({
              url: `${parsed.pathname}.${defaultExt}${(parsed.search) ? parsed.search : ''}`,
              headers: req.headers,
            }, res, next);
          } else {
            // Try to serve default ./404.html
            middleware({
              url: (handleError ? `/${path.join(baseDir, `404.${defaultExt}`)}` : req.url),
              headers: req.headers,
              statusCode: 404,
            }, res, next);
          }
        } else if (err) {
          status[500](res, next, { error: err });
        } else if (stat.isDirectory()) {
          if (!autoIndex && !opts.showDir) {
            status[404](res, next);
            return;
          }

          // 302 to / if necessary
          if (!parsed.pathname.match(/\/$/)) {
            res.statusCode = 302;
            const q = parsed.query ? `?${parsed.query}` : '';
            res.setHeader('location', `${parsed.pathname}/${q}`);
            res.end();
            return;
          }

          if (autoIndex) {
            middleware({
              url: urlJoin(
                encodeURIComponent(pathname),
                `/index.${defaultExt}`
              ),
              headers: req.headers,
            }, res, (autoIndexError) => {
              if (autoIndexError) {
                status[500](res, next, { error: autoIndexError });
                return;
              }
              if (opts.showDir) {
                showDir(opts, stat)(req, res);
                return;
              }

              status[403](res, next);
            });
            return;
          }

          if (opts.showDir) {
            showDir(opts, stat)(req, res);
          }
        } else {
          serve(stat);
        }
      });
    }

    // Look for a gzipped file if this is turned on
    if (opts.gzip && shouldCompress(req)) {
      fs.stat(gzipped, (err, stat) => {
        if (!err && stat.isFile()) {
          hasGzipId12(gzipped, (gzipErr, isGzip) => {
            if (!gzipErr && isGzip) {
              file = gzipped;
              serve(stat);
            } else {
              statFile();
            }
          });
        } else {
          statFile();
        }
      });
    } else {
      statFile();
    }
  };
};


ecstatic = module.exports;
ecstatic.version = version;
ecstatic.showDir = showDir;


if (!module.parent) {
  /* eslint-disable global-require */
  /* eslint-disable no-console */
  const defaults = require('./ecstatic/defaults.json');
  const http = require('http');
  const minimist = require('minimist');
  const aliases = require('./ecstatic/aliases.json');

  const opts = minimist(process.argv.slice(2), {
    alias: aliases,
    default: defaults,
    boolean: Object.keys(defaults).filter(
      key => typeof defaults[key] === 'boolean'
    ),
  });
  const envPORT = parseInt(process.env.PORT, 10);
  const port = envPORT > 1024 && envPORT <= 65536 ? envPORT : opts.port || opts.p || 8000;
  const dir = opts.root || opts._[0] || process.cwd();

  if (opts.help || opts.h) {
    console.error('usage: ecstatic [dir] {options} --port PORT');
    console.error('see https://npm.im/ecstatic for more docs');
  } else {
    http.createServer(ecstatic(dir, opts))
      .listen(port, () => {
        console.log(`ecstatic serving ${dir} at http://0.0.0.0:${port}`);
      })
    ;
  }
}
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/netmorphic/node_modules/netmorphic/index.js. Coverage (Term): 10% Coverage (LOC): 13%
*- File /root/Targets/netmorphic/node_modules/netmorphic/lib/_proxy.js. Coverage (Term): 9% Coverage (LOC): 2%
*- File /root/Targets/netmorphic/node_modules/http-proxy/lib/node-http-proxy.js. Coverage (Term): 12% Coverage (LOC): 13%
*- File /root/Targets/netmorphic/node_modules/pkginfo/lib/pkginfo.js. Coverage (Term): 85% Coverage (LOC): 91%
*- File /root/Targets/netmorphic/node_modules/http-proxy/lib/node-http-proxy/http-proxy.js. Coverage (Term): 4% Coverage (LOC): 4%
*- File /root/Targets/netmorphic/node_modules/http-proxy/lib/node-http-proxy/proxy-table.js. Coverage (Term): 13% Coverage (LOC): 14%
*- File /root/Targets/netmorphic/node_modules/http-proxy/lib/node-http-proxy/routing-proxy.js. Coverage (Term): 11% Coverage (LOC): 15%
*- File /root/Targets/netmorphic/node_modules/netmorphic/lib/router/index.js. Coverage (Term): 13% Coverage (LOC): 25%
*- File /root/Targets/netmorphic/node_modules/netmorphic/lib/router/matcher.js. Coverage (Term): 8% Coverage (LOC): 14%
*- File /root/Targets/netmorphic/node_modules/netmorphic/lib/router/formatter.js. Coverage (Term): 17% Coverage (LOC): 30%
*- File /root/Targets/netmorphic/node_modules/scuttlebutt/model.js. Coverage (Term): 21% Coverage (LOC): 33%
*- File /root/Targets/netmorphic/node_modules/scuttlebutt/index.js. Coverage (Term): 13% Coverage (LOC): 18%
*- File /root/Targets/netmorphic/node_modules/iterate/index.js. Coverage (Term): 12% Coverage (LOC): 24%
*- File /root/Targets/netmorphic/node_modules/duplex/index.js. Coverage (Term): 5% Coverage (LOC): 4%
*- File /root/Targets/netmorphic/node_modules/stream-serializer/index.js. Coverage (Term): 15% Coverage (LOC): 20%
*- File /root/Targets/netmorphic/node_modules/scuttlebutt/util.js. Coverage (Term): 17% Coverage (LOC): 41%
*- File /root/Targets/netmorphic/node_modules/monotonic-timestamp/index.js. Coverage (Term): 39% Coverage (LOC): 42%
*- File /root/Targets/netmorphic/node_modules/netmorphic/lib/getconfig.js. Coverage (Term): 22% Coverage (LOC): 26%
*- File /root/Targets/netmorphic/node_modules/netmorphic/lib/getQuery.js. Coverage (Term): 24% Coverage (LOC): 29%
*- File /root/Targets/netmorphic/node_modules/underscore/underscore.js. Coverage (Term): 19% Coverage (LOC): 33%
*- File /root/Targets/netmorphic/node_modules/netmorphic/lib/setconfig.js. Coverage (Term): 12% Coverage (LOC): 11%
*- File /root/Targets/netmorphic/node_modules/from/index.js. Coverage (Term): 9% Coverage (LOC): 11%
*- File /root/Targets/netmorphic/node_modules/event-stream/index.js. Coverage (Term): 14% Coverage (LOC): 18%
*- File /root/Targets/netmorphic/node_modules/through/index.js. Coverage (Term): 8% Coverage (LOC): 7%
*- File /root/Targets/netmorphic/node_modules/duplexer/index.js. Coverage (Term): 16% Coverage (LOC): 26%
*- File /root/Targets/netmorphic/node_modules/map-stream/index.js. Coverage (Term): 5% Coverage (LOC): 5%
*- File /root/Targets/netmorphic/node_modules/pause-stream/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/netmorphic/node_modules/split/index.js. Coverage (Term): 14% Coverage (LOC): 15%
*- File /root/Targets/netmorphic/node_modules/stream-combiner/index.js. Coverage (Term): 14% Coverage (LOC): 22%
*- File /root/Targets/netmorphic/node_modules/netmorphic/lib/_default.js. Coverage (Term): 33% Coverage (LOC): 26%
*- File /root/Targets/netmorphic/node_modules/filed/main.js. Coverage (Term): 9% Coverage (LOC): 9%
*- File /root/Targets/netmorphic/node_modules/filed/mimetypes.js. Coverage (Term): 86% Coverage (LOC): 99%
*- File /root/Targets/netmorphic/node_modules/filed/rfc822.js. Coverage (Term): 10% Coverage (LOC): 20%
*- File /root/Targets/netmorphic/node_modules/netmorphic/lib/log-emitter.js. Coverage (Term): 11% Coverage (LOC): 6%
*- File /root/Targets/netmorphic/node_modules/netmorphic/lib/event-types.js. Coverage (Term): 99% Coverage (LOC): 100%
*- File /root/Targets/netmorphic/node_modules/node-uuid/uuid.js. Coverage (Term): 22% Coverage (LOC): 33%
*- File /root/Targets/netmorphic/node_modules/netmorphic/lib/config.server.js. Coverage (Term): 38% Coverage (LOC): 36%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
