/root/Targets/generator-clam
└─┬ generator-clam@0.1.86 
  ├─┬ abc-generator@0.0.5 
  │ ├── async@0.2.10 
  │ ├── lodash@1.2.1 
  │ └─┬ yeoman-generator@0.11.4 
  │   ├─┬ cheerio@0.10.8 
  │   │ └─┬ htmlparser2@2.6.0 
  │   │   └── domutils@1.0.1 
  │   ├─┬ cli-table@0.2.0 
  │   │ └── colors@0.3.0 
  │   ├─┬ glob@3.1.21 
  │   │ ├── graceful-fs@1.2.3 
  │   │ ├── inherits@1.0.2 
  │   │ └── minimatch@0.2.14 
  │   ├── lodash@1.1.1 
  │   ├─┬ nopt@2.1.2 
  │   │ └── abbrev@1.1.1 
  │   ├─┬ prompt@0.2.14 
  │   │ ├── pkginfo@0.4.1 
  │   │ ├─┬ read@1.0.7 
  │   │ │ └── mute-stream@0.0.7 
  │   │ ├─┬ utile@0.2.1 
  │   │ │ ├── deep-equal@1.0.1 
  │   │ │ ├── i@0.3.5 
  │   │ │ └── ncp@0.4.2 
  │   │ └─┬ winston@0.8.3 
  │   │   ├── colors@0.6.2 
  │   │   ├── cycle@1.0.3 
  │   │   ├── eyes@0.1.8 
  │   │   ├── isstream@0.1.2 
  │   │   ├── pkginfo@0.3.1 
  │   │   └── stack-trace@0.0.10 
  │   ├─┬ request@2.16.6 
  │   │ ├── aws-sign@0.2.0 
  │   │ ├── cookie-jar@0.2.0 
  │   │ ├── forever-agent@0.2.0 
  │   │ ├── form-data@0.0.10 
  │   │ ├─┬ hawk@0.10.2 
  │   │ │ ├── boom@0.3.8 
  │   │ │ ├── cryptiles@0.1.3 
  │   │ │ ├── hoek@0.7.6 
  │   │ │ └── sntp@0.1.4 
  │   │ ├── json-stringify-safe@3.0.0 
  │   │ ├── oauth-sign@0.2.0 
  │   │ ├── qs@0.5.6 
  │   │ └── tunnel-agent@0.2.0 
  │   ├── revalidator@0.1.8 
  │   └── rimraf@2.1.4 
  ├─┬ clam-util@0.1.9 
  │ ├─┬ fs-extra@0.18.4 
  │ │ ├─┬ graceful-fs@3.0.11 
  │ │ │ └── natives@1.1.0 
  │ │ ├─┬ jsonfile@2.4.0 
  │ │ │ └── graceful-fs@4.1.11 
  │ │ └─┬ rimraf@2.6.2 
  │ │   └─┬ glob@7.1.2 
  │ │     ├── fs.realpath@1.0.0 
  │ │     ├─┬ inflight@1.0.6 
  │ │     │ └── wrappy@1.0.2 
  │ │     ├── inherits@2.0.3 
  │ │     ├─┬ minimatch@3.0.4 
  │ │     │ └─┬ brace-expansion@1.1.8 
  │ │     │   ├── balanced-match@1.0.0 
  │ │     │   └── concat-map@0.0.1 
  │ │     ├── once@1.4.0 
  │ │     └── path-is-absolute@1.0.1 
  │ ├─┬ mixin-deep@1.0.1 
  │ │ ├─┬ for-own@0.1.5 
  │ │ │ └── for-in@1.0.2 
  │ │ └── is-plain-object@0.1.0 
  │ └── shelljs@0.4.0 
  ├── crypto@1.0.1 
  ├─┬ git-config@0.0.6 
  │ └── iniparser@1.0.5 
  ├─┬ promise@8.0.1 
  │ └── asap@2.0.6 
  ├─┬ rmdir@1.0.4 
  │ └─┬ node.flow@1.2.3 
  │   └─┬ node.extend@1.0.8 
  │     ├── is@0.2.7 
  │     └── object-keys@0.4.0 
  └─┬ yeoman-generator@0.13.4 
    ├─┬ chalk@0.2.1 
    │ ├── ansi-styles@0.2.0 
    │ └── has-color@0.1.7 
    ├─┬ cheerio@0.12.4 
    │ ├─┬ cheerio-select@0.0.3 
    │ │ └─┬ CSSselect@0.7.0 
    │ │   ├── boolbase@1.0.0 
    │ │   ├── CSSwhat@0.4.7 
    │ │   ├── domutils@1.4.3 
    │ │   └── nth-check@1.0.1 
    │ ├── entities@0.5.0 
    │ ├─┬ htmlparser2@3.1.4 
    │ │ ├── domelementtype@1.3.0 
    │ │ ├── domhandler@2.0.3 
    │ │ ├── domutils@1.1.6 
    │ │ └─┬ readable-stream@1.0.34 
    │ │   ├── core-util-is@1.0.2 
    │ │   ├── inherits@2.0.3 
    │ │   ├── isarray@0.0.1 
    │ │   └── string_decoder@0.10.31 
    │ └── underscore@1.4.4 
    ├── dargs@0.1.0 
    ├── debug@0.7.4 
    ├── diff@1.0.8 
    ├─┬ findup-sync@0.1.3 
    │ ├─┬ glob@3.2.11 
    │ │ ├── inherits@2.0.3 
    │ │ └── minimatch@0.3.0 
    │ └── lodash@2.4.2 
    ├─┬ glob@3.2.11 
    │ ├── inherits@2.0.3 
    │ └─┬ minimatch@0.3.0 
    │   ├── lru-cache@2.7.3 
    │   └── sigmund@1.0.1 
    ├── iconv-lite@0.2.11 
    ├─┬ inquirer@0.3.5 
    │ ├─┬ cli-color@0.2.3 
    │ │ ├── es5-ext@0.9.2 
    │ │ └─┬ memoizee@0.2.6 
    │ │   ├── event-emitter@0.2.2 
    │ │   └── next-tick@0.1.0 
    │ └── mute-stream@0.0.3 
    ├── isbinaryfile@0.1.9 
    ├── lodash@1.3.1 
    ├── mime@1.2.11 
    ├── mkdirp@0.3.5 
    ├─┬ request@2.25.0 
    │ ├── aws-sign@0.3.0 
    │ ├── cookie-jar@0.3.0 
    │ ├── forever-agent@0.5.2 
    │ ├─┬ form-data@0.1.4 
    │ │ ├── async@0.9.2 
    │ │ └─┬ combined-stream@0.0.7 
    │ │   └── delayed-stream@0.0.5 
    │ ├─┬ hawk@1.0.0 
    │ │ ├── boom@0.4.2 
    │ │ ├── cryptiles@0.2.2 
    │ │ ├── hoek@0.9.1 
    │ │ └── sntp@0.2.4 
    │ ├─┬ http-signature@0.10.1 
    │ │ ├── asn1@0.1.11 
    │ │ ├── assert-plus@0.1.5 
    │ │ └── ctype@0.5.3 
    │ ├── json-stringify-safe@5.0.1 
    │ ├── node-uuid@1.4.8 
    │ ├── oauth-sign@0.3.0 
    │ ├── qs@0.6.6 
    │ └── tunnel-agent@0.3.0 
    ├── rimraf@2.2.8 
    ├── shelljs@0.1.4 
    ├─┬ tar@0.1.20 
    │ ├─┬ block-stream@0.0.9 
    │ │ └── inherits@2.0.3 
    │ ├─┬ fstream@0.1.31 
    │ │ ├── graceful-fs@3.0.11 
    │ │ ├── inherits@2.0.3 
    │ │ └─┬ mkdirp@0.5.1 
    │ │   └── minimist@0.0.8 
    │ └── inherits@2.0.3 
    ├── text-table@0.1.1 
    └── underscore.string@2.3.3 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/generator-clam/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0395 took 3.0459s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Octal literal in strict mode (284:9) on program // 'use strict';
var util = require('util');
var path = require('path');
var yeoman = require('yeoman-generator');
var clamUtil = require('clam-util');
var ClamLogo = require('./logo').ClamLogo;
var ABC = require('abc-generator');
var crypto = require('crypto');
var md5 = crypto.createHash('md5');
var gitConfig = require('git-config'),
	curGitUser = gitConfig.sync().user,
	curUserName = curGitUser.name,
	curUserEmail = curGitUser.email;

var ClamGenerator = module.exports = function ClamGenerator(args, options, config) {
	ABC.UIBase.apply(this, arguments);
	this.pkg = JSON.parse(this.readFileAsString(path.join(__dirname, '../package.json')));

	this.on('error', function () {
	});
	this.on('end', function () {
		var cb = this.async();
		var that = this;
		this.prompt([
			{
				name   : 'npm_install',
				message: 'Install node_modules for grunt now?',
				default: 'N/y',
				warning: ''
			}
		], function (err, props) {

			if (err) {
				return this.emit('error', err);
			}

			this.npm_install = (/^y/i).test(props.npm_install);
			if (this.npm_install) {
				this.npmInstall('', {}, function (err) {

					if (err) {
						return console.log('\n' + yellow('please run "sudo npm install"\n'));
					}

					console.log(green('\n\nnpm was installed successful. \n\n'));
				});
			} else {
				console.log(yellow('\n\nplease run "npm install" or "tnpm install" before grunt\n'));
				console.log(green('\ndone!\n'));
			}
		}.bind(this));


	}.bind(this));
};

util.inherits(ClamGenerator, ABC.UIBase);

ClamGenerator.prototype.askFor = function askFor() {
	var cb = this.async();

	// welcome message
	console.log(ClamLogo(this));

	var abcJSON = {};
	try {
		abcJSON = require(path.resolve(process.cwd(), 'abc.json'));
	} catch (e) {

	}
	if (!abcJSON.author) {
		abcJSON.author = {
			name : '',
			email: ''
		}
	}
	if (!abcJSON.name) {
		abcJSON.name = 'tmp';
	}

	// have Yeoman greet the user.
	// console.log(this.yeoman);
	var folderName = path.basename(process.cwd());

	// your-mojo-name => YourMojoName
	function parseMojoName(name) {
		return name.replace(/\b(\w)|(-\w)/g, function (m) {
			return m.toUpperCase().replace('-', '');
		});
	}

	var prompts = [
		{
			name   : 'projectName',
			message: 'Name of Project?',
			default: folderName,
			warning: ''
		},
		{
			name   : 'projectDesc',
			message: 'Description of Project?',
			default: folderName,
			warning: ''
		},
		{
			name   : 'isH5',
			message: 'is A H5 Project?',
			default: 'Y/n',
			warning: ''
		},
		{
			name   : 'srcDir',
			message: 'create "src" directory?',
			default: 'Y/n',
			warning: ''
		},
		{
			name   : 'author',
			message: 'Author Name(花名):',
			default: abcJSON.author.name || curUserName,
			warning: ''
		},
		{
			name   : 'email',
			message: 'Author Email:',
			default: abcJSON.author.email || curUserEmail,
			warning: ''
		},
		{
			name   : 'groupName',
			message: 'Group Name:',
			default: 'trip',
			warning: ''
		},
		{
			name   : 'port',
			message: 'FlexCombo Server Port:',
			default: '8081',
			warning: ''
		},
		{
			name   : 'proxyPort',
			message: 'HTTP Proxy Server Port:',
			default: '8080',
			warning: ''
		},
		{
			name   : 'cssCompile',
			message: 'scss/less?',
			default: 'scss',
			warning: ''
		},
		{
			name   : 'version',
			message: 'Version:',
			default: '0.1.0',
			warning: ''
		},
		{
			name   : 'aplipayAppid',
			message: 'Alipay Appid:',
			default: '',
			warning: ''
		}
	];

	/*
	 * projectName：驼峰名称,比如 ProjectName
	 * packageName：原目录名称，比如 project-name
	 **/
	this.prompt(prompts, function (err, props) {
		if (err) {
			return this.emit('error', err);
		}

		this.packageName = props.projectName;// project-name
		this.dirName = clamUtil.awppDirName(props.projectName);
		md5.update(this.packageName);
		this.packageNameMd5 = md5.digest('hex');
		this.projectName = parseMojoName(this.packageName); //ProjectName
		this.packageDesc = props.projectDesc;
		this.author = props.author;
		this.email = props.email;
		this.isH5 = (/^y/i).test(props.isH5) ? 'true':'false';
		this.port = props.port;
		this.proxyPort = props.proxyPort;
		this.version = props.version;
		this.groupName = props.groupName;
		//this.config = 'http://g.tbcdn.cn/'+this.groupName+'/'+this.packageName+'/'+this.version+'/config.js';
		this.srcDir = (/^y/i).test(props.srcDir);
		this.cssCompile = (props.cssCompile === 'less')? 'less':'scss';
		this.combohtml = true;
		this.srcPath = '../';
		this.currentBranch = 'master';

		// alipay config
		this.aplipayAppid = props.aplipayAppid;
		this.aplipayVersion = props.version;

		if (this.srcDir) {
			this.prompt([
				{
					name   : 'modsPagesWidgets',
					message: 'Create "src/mods[widgets|pages]"?',
					default: 'Y/n',
					warning: ''
				}
			], function (err, props) {

				if (err) {
					return this.emit('error', err);
				}

				this.modsPagesWidgets = (/^y/i).test(props.modsPagesWidgets);
				if (this.modsPagesWidgets) {
					this.srcPath = '../../';
				}
				cb();
			}.bind(this));
		} else {
			cb();
		}

	}.bind(this));
};

ClamGenerator.prototype.gruntfile = function gruntfile() {
	if (this.srcDir) {
		this.copy('Gruntfile_src.js', 'Gruntfile.js');
	} else {
		this.copy('Gruntfile.js');
	}
};

ClamGenerator.prototype.packageJSON = function packageJSON() {
	this.template('_package.json', 'package.json');
};

ClamGenerator.prototype.git = function git() {
	this.copy('_gitignore', '.gitignore');
};

ClamGenerator.prototype.app = function app() {
	var that = this;
	if (this.srcDir) {
		this.mkdir('src');
		if (this.modsPagesWidgets) {
			that.mkdir('src/pages');
			that.mkdir('src/mods');
			that.mkdir('src/widgets');
		}
		this.template('config.js', 'src/config.js');
	} else {
		/*
		 this.template('index.js');
		 this.template('index.css');
		 this.template('index.html');
		 */
		this.template('config.js');
	}
	this.template('README.md');
	this.template('push.sh');
	this.template('hpmfile.json');
	this.mkdir('doc');
	this.mkdir('build');

	// proxy template
	this.mkdir('proxy');
	this.template('proxy/interface.js', 'proxy/interface.js');
	this.template('proxy/webpage.js', 'proxy/webpage.js');

	// grunt task config template
	this.directory('grunt', 'grunt');

	this.template('abc.json');
	this.copy('bowerrc', '.bowerrc');
	this.copy('htmlhintrc', '.htmlhintrc');
};

function consoleColor(str, num) {
	if (!num) {
		num = '32';
	}
	return "\033[" + num + "m" + str + "\033[0m"
}

function green(str) {
	return consoleColor(str, 32);
}

function yellow(str) {
	return consoleColor(str, 33);
}

function red(str) {
	return consoleColor(str, 31);
}

function blue(str) {
	return consoleColor(str, 34);
}
 at SyntaxError: Octal literal in strict mode (284:9)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readEscapedChar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:3023:16)
    at Parser.pp$7.readString (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2935:23)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2724:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp$1.parseReturnStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:832:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:699:34)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
