/root/Targets/magify
└─┬ magify@0.0.1 
  ├─┬ babel-loader@6.4.1 
  │ ├─┬ find-cache-dir@0.1.1 
  │ │ ├── commondir@1.0.1 
  │ │ └─┬ pkg-dir@1.0.0 
  │ │   └─┬ find-up@1.1.2 
  │ │     ├── path-exists@2.1.0 
  │ │     └─┬ pinkie-promise@2.0.1 
  │ │       └── pinkie@2.0.4 
  │ ├─┬ loader-utils@0.2.17 
  │ │ ├── big.js@3.2.0 
  │ │ ├── emojis-list@2.1.0 
  │ │ └── json5@0.5.1 
  │ ├─┬ mkdirp@0.5.1 
  │ │ └── minimist@0.0.8 
  │ └── object-assign@4.1.1 
  ├─┬ babel-register@6.26.0 
  │ ├─┬ babel-core@6.26.0 
  │ │ ├─┬ babel-code-frame@6.26.0 
  │ │ │ ├─┬ chalk@1.1.3 
  │ │ │ │ ├── ansi-styles@2.2.1 
  │ │ │ │ ├── escape-string-regexp@1.0.5 
  │ │ │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ │ │ └── ansi-regex@2.1.1 
  │ │ │ │ ├── strip-ansi@3.0.1 
  │ │ │ │ └── supports-color@2.0.0 
  │ │ │ └── esutils@2.0.2 
  │ │ ├─┬ babel-generator@6.26.0 
  │ │ │ ├─┬ detect-indent@4.0.0 
  │ │ │ │ └─┬ repeating@2.0.1 
  │ │ │ │   └─┬ is-finite@1.0.2 
  │ │ │ │     └── number-is-nan@1.0.1 
  │ │ │ ├── jsesc@1.3.0 
  │ │ │ └── trim-right@1.0.1 
  │ │ ├── babel-helpers@6.24.1 
  │ │ ├── babel-messages@6.23.0 
  │ │ ├── babel-template@6.26.0 
  │ │ ├─┬ babel-traverse@6.26.0 
  │ │ │ ├── debug@2.6.9 
  │ │ │ └── globals@9.18.0 
  │ │ ├─┬ babel-types@6.26.0 
  │ │ │ └── to-fast-properties@1.0.3 
  │ │ ├── babylon@6.18.0 
  │ │ ├── convert-source-map@1.5.0 
  │ │ ├── debug@2.6.9 
  │ │ ├─┬ minimatch@3.0.4 
  │ │ │ └─┬ brace-expansion@1.1.8 
  │ │ │   ├── balanced-match@1.0.0 
  │ │ │   └── concat-map@0.0.1 
  │ │ ├── path-is-absolute@1.0.1 
  │ │ ├── private@0.1.7 
  │ │ ├── slash@1.0.0 
  │ │ └── source-map@0.5.7 
  │ ├─┬ babel-runtime@6.26.0 
  │ │ └── regenerator-runtime@0.11.0 
  │ ├── core-js@2.5.1 
  │ ├─┬ home-or-tmp@2.0.0 
  │ │ ├── os-homedir@1.0.2 
  │ │ └── os-tmpdir@1.0.2 
  │ └── source-map-support@0.4.18 
  ├── bluebird@3.5.1 
  ├─┬ body-parser@1.15.2 
  │ ├── bytes@2.4.0 
  │ ├── content-type@1.0.4 
  │ ├── depd@1.1.1 
  │ ├─┬ http-errors@1.5.1 
  │ │ ├── inherits@2.0.3 
  │ │ └── setprototypeof@1.0.2 
  │ ├── iconv-lite@0.4.13 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── qs@6.2.0 
  │ ├─┬ raw-body@2.1.7 
  │ │ └── unpipe@1.0.0 
  │ └─┬ type-is@1.6.15 
  │   ├── media-typer@0.3.0 
  │   └─┬ mime-types@2.1.17 
  │     └── mime-db@1.30.0 
  ├─┬ cached-request@1.1.2 
  │ └── graceful-fs@4.1.11 
  ├─┬ cookie-parser@1.4.3 
  │ ├── cookie@0.3.1 
  │ └── cookie-signature@1.0.6 
  ├─┬ debug@2.2.0 
  │ └── ms@0.7.1 
  ├── ejs@2.5.7 
  ├─┬ express@4.16.1 
  │ ├─┬ accepts@1.3.4 
  │ │ └── negotiator@0.6.1 
  │ ├── array-flatten@1.1.1 
  │ ├─┬ body-parser@1.18.2 
  │ │ ├── bytes@3.0.0 
  │ │ ├─┬ http-errors@1.6.2 
  │ │ │ └── setprototypeof@1.0.3 
  │ │ ├── iconv-lite@0.4.19 
  │ │ └── raw-body@2.3.2 
  │ ├── content-disposition@0.5.2 
  │ ├── debug@2.6.9 
  │ ├── encodeurl@1.0.1 
  │ ├── escape-html@1.0.3 
  │ ├── etag@1.8.1 
  │ ├─┬ finalhandler@1.1.0 
  │ │ └── debug@2.6.9 
  │ ├── fresh@0.5.2 
  │ ├── merge-descriptors@1.0.1 
  │ ├── methods@1.1.2 
  │ ├── parseurl@1.3.2 
  │ ├── path-to-regexp@0.1.7 
  │ ├─┬ proxy-addr@2.0.2 
  │ │ ├── forwarded@0.1.2 
  │ │ └── ipaddr.js@1.5.2 
  │ ├── qs@6.5.1 
  │ ├── range-parser@1.2.0 
  │ ├── safe-buffer@5.1.1 
  │ ├─┬ send@0.16.1 
  │ │ ├── debug@2.6.9 
  │ │ ├── destroy@1.0.4 
  │ │ ├─┬ http-errors@1.6.2 
  │ │ │ └── setprototypeof@1.0.3 
  │ │ └── mime@1.4.1 
  │ ├── serve-static@1.13.1 
  │ ├── setprototypeof@1.1.0 
  │ ├── statuses@1.3.1 
  │ ├── utils-merge@1.0.1 
  │ └── vary@1.1.2 
  ├── fuse.js@2.7.4 
  ├── html-entities@1.2.1 
  ├── immutable@3.8.2 
  ├─┬ include-all@1.0.8 
  │ └── lodash@3.10.1 
  ├─┬ isomorphic-fetch@2.2.1 
  │ ├─┬ node-fetch@1.7.3 
  │ │ ├── encoding@0.1.12 
  │ │ └── is-stream@1.1.0 
  │ └── whatwg-fetch@2.0.3 
  ├── json-loader@0.5.7 
  ├─┬ less-plugin-clean-css@1.5.1 
  │ └─┬ clean-css@3.4.28 
  │   ├─┬ commander@2.8.1 
  │   │ └── graceful-readlink@1.0.1 
  │   └─┬ source-map@0.4.4 
  │     └── amdefine@1.0.1 
  ├── lodash@4.17.4 
  ├── moment@2.18.1 
  ├── money@0.2.0 
  ├─┬ mongoose@4.12.0 
  │ ├── async@2.1.4 
  │ ├── bson@1.0.4 
  │ ├── hooks-fixed@2.0.0 
  │ ├── kareem@1.5.0 
  │ ├─┬ mongodb@2.2.31 
  │ │ ├── es6-promise@3.2.1 
  │ │ ├─┬ mongodb-core@2.1.15 
  │ │ │ └─┬ require_optional@1.0.1 
  │ │ │   ├── resolve-from@2.0.0 
  │ │ │   └── semver@5.4.1 
  │ │ └─┬ readable-stream@2.2.7 
  │ │   ├── buffer-shims@1.0.0 
  │ │   ├── core-util-is@1.0.2 
  │ │   ├── isarray@1.0.0 
  │ │   ├── process-nextick-args@1.0.7 
  │ │   ├── string_decoder@1.0.3 
  │ │   └── util-deprecate@1.0.2 
  │ ├── mpath@0.3.0 
  │ ├── mpromise@0.5.5 
  │ ├─┬ mquery@2.3.2 
  │ │ ├── debug@2.6.9 
  │ │ └── sliced@0.0.5 
  │ ├── ms@2.0.0 
  │ ├── muri@1.2.2 
  │ ├── regexp-clone@0.0.1 
  │ └── sliced@1.0.1 
  ├─┬ mongoose-paginate@5.0.3 
  │ └── bluebird@3.0.5 
  ├─┬ morgan@1.7.0 
  │ ├── basic-auth@1.0.4 
  │ └── on-headers@1.0.1 
  ├── numeral@1.5.6 
  ├─┬ passport@0.3.2 
  │ ├── passport-strategy@1.0.0 
  │ └── pause@0.0.1 
  ├─┬ react@15.6.2 
  │ ├── create-react-class@15.6.2 
  │ ├─┬ fbjs@0.8.16 
  │ │ ├── core-js@1.2.7 
  │ │ ├─┬ promise@7.3.1 
  │ │ │ └── asap@2.0.6 
  │ │ ├── setimmediate@1.0.5 
  │ │ └── ua-parser-js@0.7.14 
  │ ├─┬ loose-envify@1.3.1 
  │ │ └── js-tokens@3.0.2 
  │ └── prop-types@15.6.0 
  ├── react-dom@15.6.2 
  ├─┬ react-helmet@3.3.2 
  │ ├── deep-equal@1.0.1 
  │ └─┬ react-side-effect@1.1.3 
  │   ├── exenv@1.2.2 
  │   └── shallowequal@1.0.2 
  ├─┬ react-image-fallback@4.0.1 
  │ └─┬ filter-invalid-dom-props@1.0.0 
  │   └── html-attributes@1.1.0 
  ├── react-infinite-scroller@1.0.15 
  ├─┬ react-input-field@1.2.4 
  │ ├── normalize.css@3.0.3 
  │ ├── object-assign@2.1.1 
  │ └── react-style-normalizer@1.2.8 
  ├─┬ react-js-pagination@2.3.0 
  │ ├── classnames@2.2.5 
  │ └── paginator@1.0.0 
  ├── react-progress-2@4.4.2 
  ├── react-radio-group@3.0.2 
  ├─┬ react-redux@4.4.8 
  │ ├── hoist-non-react-statics@1.2.0 
  │ └── invariant@2.2.2 
  ├─┬ react-router@2.8.1 
  │ ├─┬ history@2.1.2 
  │ │ ├─┬ query-string@3.0.3 
  │ │ │ └── strict-uri-encode@1.1.0 
  │ │ └── warning@2.1.0 
  │ └── warning@3.0.0 
  ├── react-scroll@1.5.5 
  ├─┬ react-select@1.0.0-rc.10 
  │ └── react-input-autosize@2.0.1 
  ├── react-toggle-display@2.2.0 
  ├── react-truncate@2.1.5 
  ├─┬ redux@3.7.2 
  │ ├── lodash-es@4.17.4 
  │ └── symbol-observable@1.0.4 
  ├── redux-thunk@2.2.0 
  ├── routes@2.1.0 
  ├── serve-favicon@2.4.5 
  └─┬ webpack@1.15.0 
    ├── acorn@3.3.0 
    ├── async@1.5.2 
    ├── clone@1.0.2 
    ├─┬ enhanced-resolve@0.9.1 
    │ └── memory-fs@0.2.0 
    ├── interpret@0.6.6 
    ├─┬ memory-fs@0.3.0 
    │ └─┬ errno@0.1.4 
    │   └── prr@0.0.0 
    ├─┬ node-libs-browser@0.7.0 
    │ ├── assert@1.4.1 
    │ ├─┬ browserify-zlib@0.1.4 
    │ │ └── pako@0.2.9 
    │ ├─┬ buffer@4.9.1 
    │ │ ├── base64-js@1.2.1 
    │ │ └── ieee754@1.1.8 
    │ ├─┬ console-browserify@1.1.0 
    │ │ └── date-now@0.1.4 
    │ ├── constants-browserify@1.0.0 
    │ ├─┬ crypto-browserify@3.3.0 
    │ │ ├── browserify-aes@0.4.0 
    │ │ ├── pbkdf2-compat@2.0.1 
    │ │ ├── ripemd160@0.2.0 
    │ │ └── sha.js@2.2.6 
    │ ├── domain-browser@1.1.7 
    │ ├── events@1.1.1 
    │ ├── https-browserify@0.0.1 
    │ ├── os-browserify@0.2.1 
    │ ├── path-browserify@0.0.0 
    │ ├── process@0.11.10 
    │ ├── punycode@1.4.1 
    │ ├── querystring-es3@0.2.1 
    │ ├── stream-browserify@2.0.1 
    │ ├─┬ stream-http@2.7.2 
    │ │ ├── builtin-status-codes@3.0.0 
    │ │ ├── to-arraybuffer@1.0.1 
    │ │ └── xtend@4.0.1 
    │ ├── string_decoder@0.10.31 
    │ ├── timers-browserify@2.0.4 
    │ ├── tty-browserify@0.0.0 
    │ ├─┬ url@0.11.0 
    │ │ ├── punycode@1.3.2 
    │ │ └── querystring@0.2.0 
    │ ├─┬ util@0.10.3 
    │ │ └── inherits@2.0.1 
    │ └─┬ vm-browserify@0.0.4 
    │   └── indexof@0.0.1 
    ├─┬ optimist@0.6.1 
    │ └── wordwrap@0.0.3 
    ├─┬ supports-color@3.2.3 
    │ └── has-flag@1.0.0 
    ├── tapable@0.1.10 
    ├─┬ uglify-js@2.7.5 
    │ ├── async@0.2.10 
    │ ├── uglify-to-browserify@1.0.2 
    │ └─┬ yargs@3.10.0 
    │   ├── camelcase@1.2.1 
    │   ├─┬ cliui@2.1.0 
    │   │ ├─┬ center-align@0.1.3 
    │   │ │ ├─┬ align-text@0.1.4 
    │   │ │ │ ├── longest@1.0.1 
    │   │ │ │ └── repeat-string@1.6.1 
    │   │ │ └── lazy-cache@1.0.4 
    │   │ ├── right-align@0.1.3 
    │   │ └── wordwrap@0.0.2 
    │   ├── decamelize@1.2.0 
    │   └── window-size@0.1.0 
    ├─┬ watchpack@0.2.9 
    │ ├── async@0.9.2 
    │ └─┬ chokidar@1.7.0 
    │   ├─┬ anymatch@1.3.2 
    │   │ ├─┬ micromatch@2.3.11 
    │   │ │ ├─┬ arr-diff@2.0.0 
    │   │ │ │ └── arr-flatten@1.1.0 
    │   │ │ ├── array-unique@0.2.1 
    │   │ │ ├─┬ braces@1.8.5 
    │   │ │ │ ├─┬ expand-range@1.8.2 
    │   │ │ │ │ └─┬ fill-range@2.2.3 
    │   │ │ │ │   ├── is-number@2.1.0 
    │   │ │ │ │   ├── isobject@2.1.0 
    │   │ │ │ │   └─┬ randomatic@1.1.7 
    │   │ │ │ │     ├─┬ is-number@3.0.0 
    │   │ │ │ │     │ └── kind-of@3.2.2 
    │   │ │ │ │     └── kind-of@4.0.0 
    │   │ │ │ ├── preserve@0.2.0 
    │   │ │ │ └── repeat-element@1.1.2 
    │   │ │ ├─┬ expand-brackets@0.1.5 
    │   │ │ │ └── is-posix-bracket@0.1.1 
    │   │ │ ├── extglob@0.3.2 
    │   │ │ ├── filename-regex@2.0.1 
    │   │ │ ├─┬ kind-of@3.2.2 
    │   │ │ │ └── is-buffer@1.1.5 
    │   │ │ ├─┬ object.omit@2.0.1 
    │   │ │ │ ├─┬ for-own@0.1.5 
    │   │ │ │ │ └── for-in@1.0.2 
    │   │ │ │ └── is-extendable@0.1.1 
    │   │ │ ├─┬ parse-glob@3.0.4 
    │   │ │ │ ├── glob-base@0.3.0 
    │   │ │ │ └── is-dotfile@1.0.3 
    │   │ │ └─┬ regex-cache@0.4.4 
    │   │ │   └─┬ is-equal-shallow@0.1.3 
    │   │ │     └── is-primitive@2.0.0 
    │   │ └─┬ normalize-path@2.1.1 
    │   │   └── remove-trailing-separator@1.1.0 
    │   ├── async-each@1.0.1 
    │   ├── glob-parent@2.0.0 
    │   ├─┬ is-binary-path@1.0.1 
    │   │ └── binary-extensions@1.10.0 
    │   ├─┬ is-glob@2.0.1 
    │   │ └── is-extglob@1.0.0 
    │   └─┬ readdirp@2.1.0 
    │     └── set-immediate-shim@1.0.1 
    └─┬ webpack-core@0.6.9 
      ├── source-list-map@0.1.8 
      └── source-map@0.4.4 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/magify/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0815 took 10.387s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (132:18) on program var path = require('path'),
    loader =require('include-all'),
    _ = require('lodash'),
    express = require('express'),
    db = require('./components/db'),
    favicon = require('serve-favicon'),
    mongoose = require('mongoose'),
    model = require('./components/model'),
    child_process = require("child_process"),
    app = express();


import { RouterContext, match } from 'react-router'
import { renderToString } from 'react-dom/server'
import Helmet from "react-helmet";
import React from 'react'
import thunk from 'redux-thunk';
import { Map } from 'immutable';

import { createStore, applyMiddleware } from 'redux'
import { Provider } from 'react-redux'
import texty from './templates/shop/reducers'
import {Routes} from './templates/shop/app/router'

module.exports = function(options) {
  return {
    config: {
      http:{
        port:1337,
        staticPath:'www'
      },
    },
    process:[],
    options:{},
    init: function() {
      var self = this
      options.frameworkPath=path.dirname(__filename)
      loader.aggregate({
        dirname: options.configPath,
        filter: /(.+)\.js$/,
        excludeDirs :  /^\.(git|svn)$/,
        depth: 1
      },(err,modules)=>{
        self.config = _.assign(self.config,modules,options.config)
        self.options = options
        self.setup();
        db.init(self.config,function() {
          app.listen(self.config.http.port, function () {
            console.log('Application Started at: ' +self.config.http.port);
            var gruntProcess = 'dev';
            var output = true;
            if(!_.isEmpty(process.env.APP_ENV) && process.env.APP_ENV == "prod") {
              gruntProcess = "prod"
              //output = false
            }
            self.grunt(gruntProcess, output).on("exit", function() {
              console.log('Grunt Process done.');
            })
          });
        })


      });
    },
    grunt:function(task,output) {
      var options = {
        silent: !output,
        cwd: this.options.rootPath
      };
      var child = child_process.fork(this.options.rootPath+'/node_modules/grunt-cli/bin/grunt',[task], options);
      this.process.push(child)
      return child
    },
    setup: function() {
      app.set('appOptions',this.options)
      app.set('appConfig',this.config)
      process.on('exit', this.killChild);
      this.model();
      this.middleware();
      app.use(favicon(__dirname + '/assets/images/favicon1.png'));
      this.view();
      this.route();
    },
    killChild: function(code) {
      _.forEach(this.process, function(c) {
        try {
          c.kill('SIGINT');
        } catch (e) {
          console.log("unable to kill child", e.stack)
        }

      })
    },
    model:function() {
      var self = this
      var models = require('include-all')({
        dirname     :  path.join(self.options.frameworkPath, 'models'),
        filter      :  /(.+)\.js$/,
        excludeDirs :  /^\.(git|svn)$/
      });
      _.forEach(models, function(modelObj,name){
        model(name,modelObj).init()
      })
    },
    view: function() {
      app.set('views', path.join(this.options.frameworkPath, this.config.view.template));
      app.set('view engine', this.config.view.engine);
    },
    middleware: function() {
      var self = this
      app.use(express.static(path.join(this.options.rootPath, this.config.http.staticPath)));
      _.forEach(this.config.http.order, function(value) {
        if(_.isObject(value)) {
          app.use(value.route,self.config.http.middleware[value.middleware])
        } else
          app.use(self.config.http.middleware[value])
      });
    },
    route: function() {
      var self = this
      app.use(function(req,res,done) {
        if(req.method == 'GET') {
          match({ routes:Routes, location: req.url }, (error, redirectLocation, renderProps) => {
            if (error) {
              res.status(500).send(error.message)
            } else if (redirectLocation) {
              res.redirect(302, redirectLocation.pathname + redirectLocation.search)
            } else if (renderProps) {
              res.view = (view,param)=>{
                const store = createStore(texty,res.getState(),applyMiddleware(thunk))
                const html = renderToString(
                  <Provider store={store}>
                    { <RouterContext {...renderProps}/> }
                  </Provider>
                )
                let head = Helmet.rewind();
                const initialState = store.getState()
                if(!_.isObject(param)) {
                  param = {}
                }
                if(!_.isEmpty(view)) {
                  res.render('layout/index', {reactHtml:html,preloadedState:encodeURIComponent(JSON.stringify(initialState))}, function(err,html) {
                    var newParams = Map(param).merge({reactHtml:html,header:head})
                    res.render(view,newParams, function(err,html) {
                      res.render(self.config.view.layout,Map(param).merge({body:html,header:head}))
                    })
                  })
                }
                else {
                  res.render('layout/index', {reactHtml:html,preloadedState:encodeURIComponent(JSON.stringify(initialState))}, function(err,html) {
                    var newParams = Map(param).merge({body:html}).toObject()
                    newParams['header'] = head
                    res.render(self.config.view.layout,newParams)
                  })
                }
              }
            }
            done()
          })
        }
      })
      _.map(this.config.route, function(controller,route) {
        var routeArray = _.split(route,' ',2);
        var defaultMethod = 'get';
        var routePath = routeArray[0];
        if(_.size(routeArray)>1) {
          defaultMethod = _.toLower(routeArray[0]);
          routePath = routeArray[1];
        }
        var controllerArray = _.split(controller,'.',2);
        var defaultAction = 'index';
        if(_.size(controllerArray)>1) {
          defaultAction = controllerArray[1];
        }
        var ctrl = require(path.join(options.frameworkPath,'controllers',controllerArray[0]+"Controller"));
        var func = ctrl[defaultAction]
        app[defaultMethod](routePath,func)
      });
      app.use(function(req, res, next) {
        var err = new Error('Not Found');
        err.status = 404;
        next(err);
      });

      app.use(function(err, req, res, next) {
        res.status(err.status || 500);
        res.render('error', {
          message: err.message,
          error: {}
        });
      });

    }
  }
}
/*



require('babel-register')()
require("babel-polyfill");
var path = require('path');
var app = require('./app');
app({
  configPath: path.join(path.dirname(__filename),'app/config'),
  appPath: path.join(path.dirname(__filename),'app'),
  rootPath: path.dirname(__filename)
}).init();
 at SyntaxError: Unexpected token (132:18)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1822:12)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1597:21)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2165:22)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
