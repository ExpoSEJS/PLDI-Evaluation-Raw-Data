/root/Targets/docui
└─┬ docui@1.4.1 
  ├─┬ autoprefixer@6.3.7 
  │ ├── browserslist@1.3.6 
  │ ├── caniuse-db@1.0.30000733 
  │ ├── normalize-range@0.1.2 
  │ ├── num2fraction@1.2.2 
  │ └── postcss-value-parser@3.3.0 
  ├─┬ babel-cli@6.10.1 
  │ ├─┬ babel-core@6.26.0 
  │ │ ├─┬ babel-code-frame@6.26.0 
  │ │ │ ├── esutils@2.0.2 
  │ │ │ └── js-tokens@3.0.2 
  │ │ ├─┬ babel-generator@6.26.0 
  │ │ │ ├─┬ detect-indent@4.0.0 
  │ │ │ │ └─┬ repeating@2.0.1 
  │ │ │ │   └─┬ is-finite@1.0.2 
  │ │ │ │     └── number-is-nan@1.0.1 
  │ │ │ ├── jsesc@1.3.0 
  │ │ │ └── trim-right@1.0.1 
  │ │ ├── babel-helpers@6.24.1 
  │ │ ├── babel-messages@6.23.0 
  │ │ ├── babel-template@6.26.0 
  │ │ ├─┬ babel-traverse@6.26.0 
  │ │ │ ├── globals@9.18.0 
  │ │ │ └─┬ invariant@2.2.2 
  │ │ │   └── loose-envify@1.3.1 
  │ │ ├─┬ babel-types@6.26.0 
  │ │ │ └── to-fast-properties@1.0.3 
  │ │ ├── babylon@6.18.0 
  │ │ ├─┬ debug@2.6.8 
  │ │ │ └── ms@2.0.0 
  │ │ ├── json5@0.5.1 
  │ │ ├─┬ minimatch@3.0.4 
  │ │ │ └─┬ brace-expansion@1.1.8 
  │ │ │   ├── balanced-match@1.0.0 
  │ │ │   └── concat-map@0.0.1 
  │ │ └── private@0.1.7 
  │ ├─┬ babel-polyfill@6.26.0 
  │ │ ├── core-js@2.5.1 
  │ │ └── regenerator-runtime@0.10.5 
  │ ├─┬ babel-register@6.26.0 
  │ │ ├─┬ home-or-tmp@2.0.0 
  │ │ │ ├── os-homedir@1.0.2 
  │ │ │ └── os-tmpdir@1.0.2 
  │ │ └── source-map-support@0.4.18 
  │ ├─┬ babel-runtime@6.26.0 
  │ │ └── regenerator-runtime@0.11.0 
  │ ├─┬ bin-version-check@2.1.0 
  │ │ ├─┬ bin-version@1.0.4 
  │ │ │ └─┬ find-versions@1.2.1 
  │ │ │   ├── get-stdin@4.0.1 
  │ │ │   ├─┬ meow@3.7.0 
  │ │ │   │ ├─┬ camelcase-keys@2.1.0 
  │ │ │   │ │ └── camelcase@2.1.1 
  │ │ │   │ ├── decamelize@1.2.0 
  │ │ │   │ ├─┬ loud-rejection@1.6.0 
  │ │ │   │ │ ├─┬ currently-unhandled@0.4.1 
  │ │ │   │ │ │ └── array-find-index@1.0.2 
  │ │ │   │ │ └── signal-exit@3.0.2 
  │ │ │   │ ├── map-obj@1.0.1 
  │ │ │   │ ├── minimist@1.2.0 
  │ │ │   │ ├─┬ normalize-package-data@2.4.0 
  │ │ │   │ │ ├── hosted-git-info@2.5.0 
  │ │ │   │ │ ├─┬ is-builtin-module@1.0.0 
  │ │ │   │ │ │ └── builtin-modules@1.1.1 
  │ │ │   │ │ └─┬ validate-npm-package-license@3.0.1 
  │ │ │   │ │   ├─┬ spdx-correct@1.0.2 
  │ │ │   │ │   │ └── spdx-license-ids@1.2.2 
  │ │ │   │ │   └── spdx-expression-parse@1.0.4 
  │ │ │   │ ├─┬ read-pkg-up@1.0.1 
  │ │ │   │ │ ├─┬ find-up@1.1.2 
  │ │ │   │ │ │ └── path-exists@2.1.0 
  │ │ │   │ │ └─┬ read-pkg@1.1.0 
  │ │ │   │ │   ├─┬ load-json-file@1.1.0 
  │ │ │   │ │   │ ├─┬ parse-json@2.2.0 
  │ │ │   │ │   │ │ └─┬ error-ex@1.3.1 
  │ │ │   │ │   │ │   └── is-arrayish@0.2.1 
  │ │ │   │ │   │ └─┬ strip-bom@2.0.0 
  │ │ │   │ │   │   └── is-utf8@0.2.1 
  │ │ │   │ │   └── path-type@1.1.0 
  │ │ │   │ ├─┬ redent@1.0.0 
  │ │ │   │ │ ├── indent-string@2.1.0 
  │ │ │   │ │ └── strip-indent@1.0.1 
  │ │ │   │ └── trim-newlines@1.0.0 
  │ │ │   └── semver-regex@1.0.0 
  │ │ ├── minimist@1.2.0 
  │ │ ├── semver@4.3.6 
  │ │ └── semver-truncate@1.1.2 
  │ ├─┬ chalk@1.1.1 
  │ │ └── supports-color@2.0.0 
  │ ├─┬ chokidar@1.7.0 
  │ │ ├─┬ anymatch@1.3.2 
  │ │ │ ├─┬ micromatch@2.3.11 
  │ │ │ │ ├─┬ arr-diff@2.0.0 
  │ │ │ │ │ └── arr-flatten@1.1.0 
  │ │ │ │ ├── array-unique@0.2.1 
  │ │ │ │ ├─┬ braces@1.8.5 
  │ │ │ │ │ ├─┬ expand-range@1.8.2 
  │ │ │ │ │ │ └─┬ fill-range@2.2.3 
  │ │ │ │ │ │   ├── is-number@2.1.0 
  │ │ │ │ │ │   ├── isobject@2.1.0 
  │ │ │ │ │ │   ├─┬ randomatic@1.1.7 
  │ │ │ │ │ │   │ ├─┬ is-number@3.0.0 
  │ │ │ │ │ │   │ │ └── kind-of@3.2.2 
  │ │ │ │ │ │   │ └── kind-of@4.0.0 
  │ │ │ │ │ │   └── repeat-string@1.6.1 
  │ │ │ │ │ ├── preserve@0.2.0 
  │ │ │ │ │ └── repeat-element@1.1.2 
  │ │ │ │ ├─┬ expand-brackets@0.1.5 
  │ │ │ │ │ └── is-posix-bracket@0.1.1 
  │ │ │ │ ├── extglob@0.3.2 
  │ │ │ │ ├── filename-regex@2.0.1 
  │ │ │ │ ├─┬ kind-of@3.2.2 
  │ │ │ │ │ └── is-buffer@1.1.5 
  │ │ │ │ ├─┬ object.omit@2.0.1 
  │ │ │ │ │ ├─┬ for-own@0.1.5 
  │ │ │ │ │ │ └── for-in@1.0.2 
  │ │ │ │ │ └── is-extendable@0.1.1 
  │ │ │ │ ├─┬ parse-glob@3.0.4 
  │ │ │ │ │ ├── glob-base@0.3.0 
  │ │ │ │ │ └── is-dotfile@1.0.3 
  │ │ │ │ └─┬ regex-cache@0.4.4 
  │ │ │ │   └─┬ is-equal-shallow@0.1.3 
  │ │ │ │     └── is-primitive@2.0.0 
  │ │ │ └─┬ normalize-path@2.1.1 
  │ │ │   └── remove-trailing-separator@1.1.0 
  │ │ ├── async-each@1.0.1 
  │ │ ├── glob-parent@2.0.0 
  │ │ ├── inherits@2.0.3 
  │ │ ├─┬ is-binary-path@1.0.1 
  │ │ │ └── binary-extensions@1.10.0 
  │ │ ├─┬ is-glob@2.0.1 
  │ │ │ └── is-extglob@1.0.0 
  │ │ └─┬ readdirp@2.1.0 
  │ │   ├─┬ readable-stream@2.3.3 
  │ │   │ ├── core-util-is@1.0.2 
  │ │   │ ├── isarray@1.0.0 
  │ │   │ ├── process-nextick-args@1.0.7 
  │ │   │ ├── string_decoder@1.0.3 
  │ │   │ └── util-deprecate@1.0.2 
  │ │   └── set-immediate-shim@1.0.1 
  │ ├── convert-source-map@1.5.0 
  │ ├── fs-readdir-recursive@0.1.2 
  │ ├─┬ glob@5.0.15 
  │ │ ├─┬ inflight@1.0.6 
  │ │ │ └── wrappy@1.0.2 
  │ │ └── once@1.4.0 
  │ ├── lodash@4.17.4 
  │ ├── log-symbols@1.0.2 
  │ ├─┬ output-file-sync@1.1.2 
  │ │ └── object-assign@4.1.1 
  │ ├── path-exists@1.0.0 
  │ ├── path-is-absolute@1.0.1 
  │ ├─┬ request@2.82.0 
  │ │ ├── aws-sign2@0.7.0 
  │ │ ├── aws4@1.6.0 
  │ │ ├── caseless@0.12.0 
  │ │ ├─┬ combined-stream@1.0.5 
  │ │ │ └── delayed-stream@1.0.0 
  │ │ ├── extend@3.0.1 
  │ │ ├── forever-agent@0.6.1 
  │ │ ├─┬ form-data@2.3.1 
  │ │ │ └── asynckit@0.4.0 
  │ │ ├─┬ har-validator@5.0.3 
  │ │ │ ├─┬ ajv@5.2.2 
  │ │ │ │ ├── co@4.6.0 
  │ │ │ │ ├── fast-deep-equal@1.0.0 
  │ │ │ │ ├── json-schema-traverse@0.3.1 
  │ │ │ │ └─┬ json-stable-stringify@1.0.1 
  │ │ │ │   └── jsonify@0.0.0 
  │ │ │ └── har-schema@2.0.0 
  │ │ ├─┬ hawk@6.0.2 
  │ │ │ ├── boom@4.3.1 
  │ │ │ ├─┬ cryptiles@3.1.2 
  │ │ │ │ └── boom@5.2.0 
  │ │ │ ├── hoek@4.2.0 
  │ │ │ └── sntp@2.0.2 
  │ │ ├─┬ http-signature@1.2.0 
  │ │ │ ├── assert-plus@1.0.0 
  │ │ │ ├─┬ jsprim@1.4.1 
  │ │ │ │ ├── extsprintf@1.3.0 
  │ │ │ │ ├── json-schema@0.2.3 
  │ │ │ │ └── verror@1.10.0 
  │ │ │ └─┬ sshpk@1.13.1 
  │ │ │   ├── asn1@0.2.3 
  │ │ │   ├── bcrypt-pbkdf@1.0.1 
  │ │ │   ├── dashdash@1.14.1 
  │ │ │   ├── ecc-jsbn@0.1.1 
  │ │ │   ├── getpass@0.1.7 
  │ │ │   ├── jsbn@0.1.1 
  │ │ │   └── tweetnacl@0.14.5 
  │ │ ├── is-typedarray@1.0.0 
  │ │ ├── isstream@0.1.2 
  │ │ ├── json-stringify-safe@5.0.1 
  │ │ ├─┬ mime-types@2.1.17 
  │ │ │ └── mime-db@1.30.0 
  │ │ ├── oauth-sign@0.8.2 
  │ │ ├── performance-now@2.1.0 
  │ │ ├── qs@6.5.1 
  │ │ ├── safe-buffer@5.1.1 
  │ │ ├── stringstream@0.0.5 
  │ │ ├─┬ tough-cookie@2.3.2 
  │ │ │ └── punycode@1.4.1 
  │ │ ├── tunnel-agent@0.6.0 
  │ │ └── uuid@3.1.0 
  │ ├── slash@1.0.0 
  │ ├── source-map@0.5.7 
  │ └─┬ v8flags@2.1.1 
  │   └── user-home@1.1.1 
  ├── babel-plugin-transform-runtime@6.9.0 
  ├─┬ babel-preset-es2015@6.9.0 
  │ ├── babel-plugin-check-es2015-constants@6.22.0 
  │ ├── babel-plugin-transform-es2015-arrow-functions@6.22.0 
  │ ├── babel-plugin-transform-es2015-block-scoped-functions@6.22.0 
  │ ├── babel-plugin-transform-es2015-block-scoping@6.26.0 
  │ ├─┬ babel-plugin-transform-es2015-classes@6.24.1 
  │ │ ├── babel-helper-define-map@6.26.0 
  │ │ ├── babel-helper-function-name@6.24.1 
  │ │ ├── babel-helper-optimise-call-expression@6.24.1 
  │ │ └── babel-helper-replace-supers@6.24.1 
  │ ├── babel-plugin-transform-es2015-computed-properties@6.24.1 
  │ ├── babel-plugin-transform-es2015-destructuring@6.23.0 
  │ ├── babel-plugin-transform-es2015-duplicate-keys@6.24.1 
  │ ├── babel-plugin-transform-es2015-for-of@6.23.0 
  │ ├── babel-plugin-transform-es2015-function-name@6.24.1 
  │ ├── babel-plugin-transform-es2015-literals@6.22.0 
  │ ├─┬ babel-plugin-transform-es2015-modules-commonjs@6.26.0 
  │ │ └── babel-plugin-transform-strict-mode@6.24.1 
  │ ├── babel-plugin-transform-es2015-object-super@6.24.1 
  │ ├─┬ babel-plugin-transform-es2015-parameters@6.24.1 
  │ │ ├─┬ babel-helper-call-delegate@6.24.1 
  │ │ │ └── babel-helper-hoist-variables@6.24.1 
  │ │ └── babel-helper-get-function-arity@6.24.1 
  │ ├── babel-plugin-transform-es2015-shorthand-properties@6.24.1 
  │ ├── babel-plugin-transform-es2015-spread@6.22.0 
  │ ├─┬ babel-plugin-transform-es2015-sticky-regex@6.24.1 
  │ │ └── babel-helper-regex@6.26.0 
  │ ├── babel-plugin-transform-es2015-template-literals@6.22.0 
  │ ├── babel-plugin-transform-es2015-typeof-symbol@6.23.0 
  │ ├─┬ babel-plugin-transform-es2015-unicode-regex@6.24.1 
  │ │ └─┬ regexpu-core@2.0.0 
  │ │   ├── regenerate@1.3.3 
  │ │   ├── regjsgen@0.2.0 
  │ │   └─┬ regjsparser@0.1.5 
  │ │     └── jsesc@0.5.0 
  │ └─┬ babel-plugin-transform-regenerator@6.26.0 
  │   └── regenerator-transform@0.10.1 
  ├─┬ babel-preset-stage-2@6.11.0 
  │ ├─┬ babel-plugin-transform-object-rest-spread@6.26.0 
  │ │ └── babel-plugin-syntax-object-rest-spread@6.13.0 
  │ └─┬ babel-preset-stage-3@6.24.1 
  │   ├── babel-plugin-syntax-trailing-function-commas@6.22.0 
  │   ├─┬ babel-plugin-transform-async-generator-functions@6.24.1 
  │   │ ├── babel-helper-remap-async-to-generator@6.24.1 
  │   │ └── babel-plugin-syntax-async-generators@6.13.0 
  │   ├─┬ babel-plugin-transform-async-to-generator@6.24.1 
  │   │ └── babel-plugin-syntax-async-functions@6.13.0 
  │   └─┬ babel-plugin-transform-exponentiation-operator@6.24.1 
  │     ├─┬ babel-helper-builder-binary-assignment-operator-visitor@6.24.1 
  │     │ └── babel-helper-explode-assignable-expression@6.24.1 
  │     └── babel-plugin-syntax-exponentiation-operator@6.13.0 
  ├─┬ chalk@1.1.3 
  │ ├── ansi-styles@2.2.1 
  │ ├── escape-string-regexp@1.0.5 
  │ ├─┬ has-ansi@2.0.0 
  │ │ └── ansi-regex@2.1.1 
  │ ├── strip-ansi@3.0.1 
  │ └── supports-color@2.0.0 
  ├─┬ clean-css@3.4.18 
  │ ├── commander@2.8.1 
  │ └─┬ source-map@0.4.4 
  │   └── amdefine@1.0.1 
  ├─┬ commander@2.9.0 
  │ └── graceful-readlink@1.0.1 
  ├── ejs@2.4.2 
  ├─┬ finalhandler@0.5.0 
  │ ├─┬ debug@2.2.0 
  │ │ └── ms@0.7.1 
  │ ├── escape-html@1.0.3 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── statuses@1.3.1 
  │ └── unpipe@1.0.0 
  ├─┬ fs-extra@0.30.0 
  │ ├── graceful-fs@4.1.11 
  │ ├── jsonfile@2.4.0 
  │ ├── klaw@1.3.1 
  │ └─┬ rimraf@2.6.2 
  │   └─┬ glob@7.1.2 
  │     └── fs.realpath@1.0.0 
  ├─┬ gh-pages@0.11.0 
  │ ├── async@1.5.2 
  │ ├─┬ globby@4.1.0 
  │ │ ├─┬ array-union@1.0.2 
  │ │ │ └── array-uniq@1.0.3 
  │ │ ├── arrify@1.0.1 
  │ │ ├── glob@6.0.4 
  │ │ ├── pify@2.3.0 
  │ │ └─┬ pinkie-promise@2.0.1 
  │ │   └── pinkie@2.0.4 
  │ ├── graceful-fs@4.1.2 
  │ ├── q@1.4.1 
  │ ├─┬ q-io@1.13.2 
  │ │ ├─┬ collections@0.2.2 
  │ │ │ └── weak-map@1.0.0 
  │ │ ├── mimeparse@0.1.4 
  │ │ ├── qs@1.2.2 
  │ │ └── url2@0.0.0 
  │ └── wrench@1.5.8 
  ├── http@0.0.0 
  ├─┬ less@2.7.1 
  │ ├─┬ errno@0.1.4 
  │ │ └── prr@0.0.0 
  │ ├── image-size@0.5.5 
  │ ├── mime@1.4.0 
  │ └─┬ promise@7.3.1 
  │   └── asap@2.0.6 
  ├── marked@0.3.5 
  ├─┬ mkdirp@0.5.1 
  │ └── minimist@0.0.8 
  ├── node-watch@0.3.5 
  ├─┬ postcss@5.1.0 
  │ ├── js-base64@2.3.2 
  │ └─┬ supports-color@3.2.3 
  │   └── has-flag@1.0.0 
  ├── semver@5.3.0 
  └─┬ serve-static@1.11.1 
    ├── encodeurl@1.0.1 
    ├── parseurl@1.3.2 
    └─┬ send@0.14.1 
      ├── debug@2.2.0 
      ├── depd@1.1.1 
      ├── destroy@1.0.4 
      ├── etag@1.7.0 
      ├── fresh@0.3.0 
      ├─┬ http-errors@1.5.1 
      │ └── setprototypeof@1.0.2 
      ├── mime@1.3.4 
      ├── ms@0.7.1 
      └── range-parser@1.2.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/docui/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.062 took 4.1498s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node
'use strict';

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _semver = require('semver');

var _semver2 = _interopRequireDefault(_semver);

var _nodeWatch = require('node-watch');

var _nodeWatch2 = _interopRequireDefault(_nodeWatch);

var _child_process = require('child_process');

var _logger = require('./includes/logger');

var _logger2 = _interopRequireDefault(_logger);

var _program = require('./program');

var _program2 = _interopRequireDefault(_program);

var _less = require('./lib/less');

var _less2 = _interopRequireDefault(_less);

var _doc = require('./lib/doc');

var _doc2 = _interopRequireDefault(_doc);

var _publish = require('./lib/publish');

var _publish2 = _interopRequireDefault(_publish);

var _toc = require('./lib/toc');

var _toc2 = _interopRequireDefault(_toc);

var _template = require('./lib/template');

var _template2 = _interopRequireDefault(_template);

var _scaffold = require('./lib/scaffold');

var _scaffold2 = _interopRequireDefault(_scaffold);

var _serve = require('./lib/serve');

var _serve2 = _interopRequireDefault(_serve);

var _config = require('./config');

var _utils = require('./includes/utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function processLess() {
  var version = arguments.length <= 0 || arguments[0] === undefined ? 'debug' : arguments[0];

  return (0, _less2.default)({
    src: _config.project.paths.less.src,
    dist: _path2.default.resolve(_config.project.paths.dist, 'releases', version),
    lessOptions: _config.project.style.less,
    compressOptions: _config.project.style.compress,
    autoprefixOptions: _config.project.style.compress
  });
}

function processDoc() {
  var version = arguments.length <= 0 || arguments[0] === undefined ? 'debug' : arguments[0];

  return (0, _doc2.default)({
    componentsSrc: _config.project.paths.components.src,
    dist: _path2.default.resolve(_config.project.paths.dist, 'documentation', version, 'index.html'),
    metas: (0, _assign2.default)(_config.project.metas, { version: version }),
    staticsSrc: _config.project.paths.statics.src,
    template: _path2.default.join(_config.docui.template, 'template.ejs')
  }).then(function (res) {
    return (0, _toc2.default)({
      metas: (0, _assign2.default)(_config.project.metas, { version: version }),
      template: _path2.default.join(_config.docui.template, 'toc.ejs'),
      dist: _path2.default.resolve(_config.project.paths.dist, 'index.html')
    });
  });
}

function processTemplateAssets() {
  var version = arguments.length <= 0 || arguments[0] === undefined ? 'debug' : arguments[0];

  return (0, _template2.default)({
    templateFolder: _config.docui.template,
    distFolder: _path2.default.resolve(_config.project.paths.dist, 'documentation', version, 'docui-assets'),
    lessVars: _config.project.template.options
  });
}

function processPublish() {
  var version = arguments.length <= 0 || arguments[0] === undefined ? 'debug' : arguments[0];

  var packageJson = _path2.default.resolve(_config.project.paths.root, 'package.json');
  var packg = require(packageJson);

  if (!packg.repository) {
    return _promise2.default.reject(new Error('No remote git url found in package.json'));
  }
  var repositoryUrl = packg.repository.url || packg.repository;
  return processDoc(version).then(function () {
    return processLess(version);
  }).then(function () {
    return (0, _publish2.default)({
      repositoryUrl: repositoryUrl,
      distPath: _config.project.paths.dist,
      version: version
    });
  });
}

function processServe(port) {
  return (0, _serve2.default)({ rootPath: _config.project.paths.dist, port: port });
}
// Start commander
_program2.default.parse(process.argv);

// -----------------------------------------------------------------------------
// Commander task default: displays help
if (!process.argv.slice(2).length) {
  _program2.default.help();
}

if (_program2.default.init) {
  _logger2.default.title('Scaffold sources in current directory');

  (0, _scaffold2.default)({ sources: _config.docui.scaffold, dist: _config.project.paths.root }).then(function () {
    return _logger2.default.success('Scaffolding done successfully');
  }).catch(function (err) {
    return _logger2.default.error('Scaffolding error: ' + (err.message || err));
  });
} else if (_program2.default.watch) {
  (function () {
    _logger2.default.title('Start development environment');

    var port = 8182;
    if (_program2.default.watch !== true && _program2.default.watch.match(/^\d+$/)) {
      port = _program2.default.watch;
    }

    _promise2.default.all([processTemplateAssets(), processLess(), processServe(port), processDoc()]).then(function (res) {
      _logger2.default.success('First build done');

      _logger2.default.log('Local server listening on port ' + port);
      _logger2.default.log('Press Ctrl+C to stop at anytime');

      _logger2.default.info('Start watching sources files');
      (0, _nodeWatch2.default)([_config.project.paths.less.watch, _config.project.paths.statics.watch, _config.project.paths.components.watch], { recursive: true, followSymLinks: true }, (0, _utils.watchFilter)(/\.(less|md|html)$/, function (filename) {
        _logger2.default.log('Source file "' + filename + '" changed');
        if (filename.match(/\.(md|html)/)) {
          processDoc().then(function (newFilepath) {
            return _logger2.default.success('Documentation rebuild');
          }).catch(function (err) {
            return _logger2.default.error(err.message);
          });
        } else {
          processLess().then(function (newFilepath) {
            return _logger2.default.success('Less file compiled into css => ' + newFilepath);
          }).catch(function (err) {
            return _logger2.default.error(err.message);
          });
        }
      }));
    }).catch(function (err) {
      return _logger2.default.error(err.message);
    });
  })();
} else if (_program2.default.release) {
  try {
    (function () {
      if (['major', 'minor', 'patch'].indexOf(_program2.default.release) < 0) {
        throw new Error('You must provide one of this version: minor, major or patch');
      }

      var git = (0, _utils.folderExistsSync)('.git');
      var packageJson = _path2.default.resolve(_config.project.paths.root, 'package.json');

      if (!(0, _utils.fileExistsSync)('package.json')) {
        throw new Error('You must be in a npm package');
      }

      var currentVersion = require(packageJson).version;
      var newVersion = _semver2.default.inc(currentVersion, _program2.default.release);

      // Build new version
      _logger2.default.title('Build new ' + _program2.default.release + ' version ' + newVersion);
      _promise2.default.all([processTemplateAssets(newVersion), processLess(newVersion), processDoc(newVersion)]).then(function () {
        _logger2.default.info('Build done');
        if (git) {
          _logger2.default.info('Add new release and documentation to git');
          (0, _child_process.execSync)('git add -f dist/documentation/' + newVersion);
          (0, _child_process.execSync)('git add -f dist/releases/' + newVersion);
          (0, _child_process.execSync)('git commit -m "Version ' + newVersion + ' build"');
        }
        (0, _child_process.execSync)('npm version ' + _program2.default.release);
        _logger2.default.info('Release done');
        if (git) {
          _logger2.default.info('You can now merge your new release on your remote git');
          _logger2.default.info('Do not forgot to push the new git tag with');
          _logger2.default.info('git push origin v' + newVersion);
        }
      }).catch(function (err) {
        _logger2.default.error('Error while building the version');
        console.error(err);
      });
    })();
  } catch (err) {
    _logger2.default.error(err.message);
  }
} else if (_program2.default.publish) {
  if (!(0, _utils.fileExistsSync)('package.json')) {
    throw new Error('You must be in a npm package');
  }
  var _packageJson = _path2.default.resolve(_config.project.paths.root, 'package.json');
  var _currentVersion = require(_packageJson).version;

  processPublish(_currentVersion).then(function () {
    return _logger2.default.success('version published');
  }).catch(function (err) {
    return _logger2.default.error(err);
  });
} at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
