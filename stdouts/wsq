
> weak@1.0.1 install /root/Targets/wsq/node_modules/weak
> node-gyp rebuild

make: Entering directory '/root/Targets/wsq/node_modules/weak/build'
  CXX(target) Release/obj.target/weakref/src/weakref.o
  SOLINK_MODULE(target) Release/obj.target/weakref.node
  COPY Release/weakref.node
make: Leaving directory '/root/Targets/wsq/node_modules/weak/build'
/root/Targets/wsq
└─┬ wsq@0.2.0 
  ├─┬ async@2.5.0 
  │ └── lodash@4.17.4 
  ├─┬ dnode@1.2.2 
  │ ├─┬ dnode-protocol@0.2.2 
  │ │ └── traverse@0.6.6 
  │ ├── jsonify@0.0.0 
  │ └─┬ weak@1.0.1 
  │   ├── bindings@1.3.0 
  │   └── nan@2.7.0 
  ├─┬ levelup@1.3.9 
  │ ├─┬ deferred-leveldown@1.2.2 
  │ │ └── abstract-leveldown@2.6.3 
  │ ├── level-codec@7.0.1 
  │ ├─┬ level-errors@1.0.5 
  │ │ └─┬ errno@0.1.4 
  │ │   └── prr@0.0.0 
  │ ├─┬ level-iterator-stream@1.3.1 
  │ │ └─┬ readable-stream@1.1.14 
  │ │   ├── isarray@0.0.1 
  │ │   └── string_decoder@0.10.31 
  │ ├── prr@1.0.1 
  │ ├── semver@5.4.1 
  │ └── xtend@4.0.1 
  ├─┬ multiplex@6.7.0 
  │ ├─┬ duplexify@3.5.1 
  │ │ ├─┬ readable-stream@2.3.3 
  │ │ │ ├── isarray@1.0.0 
  │ │ │ └── string_decoder@1.0.3 
  │ │ └── stream-shift@1.0.0 
  │ ├── inherits@2.0.3 
  │ ├─┬ readable-stream@2.3.3 
  │ │ ├── core-util-is@1.0.2 
  │ │ ├── isarray@1.0.0 
  │ │ ├── process-nextick-args@1.0.7 
  │ │ ├── safe-buffer@5.1.1 
  │ │ ├── string_decoder@1.0.3 
  │ │ └── util-deprecate@1.0.2 
  │ └── varint@4.0.1 
  ├─┬ pump@1.0.2 
  │ ├── end-of-stream@1.4.0 
  │ └─┬ once@1.4.0 
  │   └── wrappy@1.0.2 
  └─┬ websocket-stream@3.3.3 
    ├─┬ through2@2.0.3 
    │ └─┬ readable-stream@2.3.3 
    │   ├── isarray@1.0.0 
    │   └── string_decoder@1.0.3 
    └─┬ ws@1.1.4 
      ├── options@0.0.6 
      └── ultron@1.0.2 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/wsq/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 22% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","Object","call","binding","RegExp","join","Error","captureStackTrace","pow"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0336 took 65.1003s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (9:7) on program // Generated by CoffeeScript 1.12.1

/* Shared task implementation. */
var DB_KEYS, EventEmitter, Task, assert, randomString,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty,
  slice = [].slice;

assert = require('assert');

EventEmitter = require('events').EventEmitter;

randomString = require('./common').randomString;

DB_KEYS = ['data', 'id', 'options', 'progress', 'queue', 'retries', 'state', 'workerId', 'error', 'queueTime'];

Task = (function(superClass) {
  var defaults;

  extend(Task, superClass);

  defaults = {
    timeout: 60 * 1000,
    retries: 0,
    autoremove: false
  };

  function Task(id1, queue1, data1, options) {
    var key, ref;
    this.id = id1;
    this.queue = queue1;
    this.data = data1;
    if (options == null) {
      options = {};
    }

    /* Create new task with *@id* on *@queue* containing *@data*, see defaults for available *options*. */
    this.options = {};
    this.retries = 0;
    this.progress = 0;
    this.state = 'unknown';
    this.aborted = false;
    this._listeners = {};
    for (key in defaults) {
      this.options[key] = (ref = options[key]) != null ? ref : defaults[key];
    }
  }

  Task.prototype.updateProgress = function(percent) {

    /* Set task progress to *percent* expressed as a fraction between 0 and 1. */
    this.progress = percent;
    return this.emit('local-progress', percent);
  };

  Task.prototype.touch = function() {

    /* Send a progress update to server, refreshing the task timeout. Useful if you can't
        mesure progress but need to keep a long running task alive.
     */
    return this.emit('local-progress', this.progress);
  };

  Task.prototype._isLocal = function(event) {
    return event.slice(0, 5) === 'local' || event === 'abort';
  };

  Task.prototype._setupListener = function(event) {
    if ((this._listeners[event] != null) || this._isLocal(event)) {
      return;
    }
    assert(this.client != null, 'No client assigned');
    this._listeners[event] = (function(_this) {
      return function() {
        var extra, task;
        task = arguments[0], extra = 2 <= arguments.length ? slice.call(arguments, 1) : [];
        if (task.id === _this.id) {
          _this.emit.apply(_this, [event, task].concat(slice.call(extra)));
        }
      };
    })(this);
    return this.client.on("task " + event, this._listeners[event]);
  };

  Task.prototype.on = function(event, handler) {
    this._setupListener(event);
    return Task.__super__.on.call(this, event, handler);
  };

  Task.prototype.once = function(event, handler) {
    this._setupListener(event);
    return Task.__super__.once.call(this, event, handler);
  };

  Task.prototype.remove = function(callback) {
    return this.client.removeTask(this, callback);
  };

  Task.prototype.retry = function(callback) {
    return this.client.retryTask(this, callback);
  };

  Task.prototype.getData = function(callback) {
    return this.client.getTaskData(this, callback);
  };

  Task.prototype.toRPC = function(includeData) {
    var rv;
    if (includeData == null) {
      includeData = false;
    }

    /* Private, used to serialize the task before it is sent over the wire. */
    rv = {
      id: this.id,
      queue: this.queue,
      options: this.options,
      retries: this.retries,
      state: this.state
    };
    if (this.workerId != null) {
      rv.workerId = this.workerId;
    }
    if (this.error != null) {
      rv.error = this.error;
    }
    if (includeData) {
      rv.data = this.data;
    }
    return rv;
  };

  Task.prototype.toDB = function() {

    /* Private, used to serialize the task before storing in database. */
    var i, key, len, rv;
    rv = {};
    for (i = 0, len = DB_KEYS.length; i < len; i++) {
      key = DB_KEYS[i];
      rv[key] = this[key];
    }
    return rv;
  };

  return Task;

})(EventEmitter);

Task.create = function(queue, options, data) {

  /* Create new task on *queue* with *options* and *data*. */
  var id;
  if (arguments.length === 2) {
    data = options;
    options = {};
  }
  id = randomString(24);
  return new Task(id, queue, data, options);
};

Task.fromRPC = function(data) {

  /* Private, deserialize task comming from rpc. */
  var task;
  task = new Task(data.id, data.queue, data.data, data.options);
  if (data.workerId != null) {
    task.workerId = data.workerId;
  }
  if (data.retries != null) {
    task.retries = data.retries;
  }
  if (data.error != null) {
    task.error = data.error;
  }
  if (data.state != null) {
    task.state = data.state;
  }
  return task;
};

Task.fromDB = function(data) {

  /* Private, deserialize task comming from database. */
  var i, key, len, task;
  task = new Task;
  for (i = 0, len = DB_KEYS.length; i < len; i++) {
    key = DB_KEYS[i];
    task[key] = data[key];
  }
  return task;
};

module.exports = {
  Task: Task
};
 at SyntaxError: Unexpected token (9:7)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1822:12)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1597:21)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/wsq/node_modules/wsq/index.js. Coverage (Term): 62% Coverage (LOC): 83%
*- File /root/Targets/wsq/node_modules/wsq/lib/server.js. Coverage (Term): 3% Coverage (LOC): 2%
*- File /root/Targets/wsq/node_modules/async/dist/async.js. Coverage (Term): 23% Coverage (LOC): 32%
*- File /root/Targets/wsq/node_modules/dnode/index.js. Coverage (Term): 12% Coverage (LOC): 17%
*- File /root/Targets/wsq/node_modules/dnode/lib/dnode.js. Coverage (Term): 14% Coverage (LOC): 18%
*- File /root/Targets/wsq/node_modules/dnode-protocol/index.js. Coverage (Term): 19% Coverage (LOC): 27%
*- File /root/Targets/wsq/node_modules/dnode-protocol/lib/scrub.js. Coverage (Term): 16% Coverage (LOC): 23%
*- File /root/Targets/wsq/node_modules/traverse/index.js. Coverage (Term): 10% Coverage (LOC): 18%
*- File /root/Targets/wsq/node_modules/dnode-protocol/lib/keys.js. Coverage (Term): 44% Coverage (LOC): 50%
*- File /root/Targets/wsq/node_modules/dnode-protocol/lib/foreach.js. Coverage (Term): 29% Coverage (LOC): 44%
*- File /root/Targets/wsq/node_modules/dnode-protocol/lib/is_enum.js. Coverage (Term): 29% Coverage (LOC): 36%
*- File /root/Targets/wsq/node_modules/dnode/lib/parse_args.js. Coverage (Term): 12% Coverage (LOC): 15%
*- File /root/Targets/wsq/node_modules/levelup/lib/levelup.js. Coverage (Term): 18% Coverage (LOC): 22%
*- File /root/Targets/wsq/node_modules/xtend/immutable.js. Coverage (Term): 32% Coverage (LOC): 33%
*- File /root/Targets/wsq/node_modules/prr/prr.js. Coverage (Term): 28% Coverage (LOC): 36%
*- File /root/Targets/wsq/node_modules/deferred-leveldown/deferred-leveldown.js. Coverage (Term): 35% Coverage (LOC): 46%
*- File /root/Targets/wsq/node_modules/abstract-leveldown/index.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/wsq/node_modules/abstract-leveldown/abstract-leveldown.js. Coverage (Term): 10% Coverage (LOC): 17%
*- File /root/Targets/wsq/node_modules/abstract-leveldown/abstract-iterator.js. Coverage (Term): 16% Coverage (LOC): 22%
*- File /root/Targets/wsq/node_modules/abstract-leveldown/abstract-chained-batch.js. Coverage (Term): 16% Coverage (LOC): 26%
*- File /root/Targets/wsq/node_modules/abstract-leveldown/is-leveldown.js. Coverage (Term): 29% Coverage (LOC): 42%
*- File /root/Targets/wsq/node_modules/deferred-leveldown/deferred-iterator.js. Coverage (Term): 40% Coverage (LOC): 48%
*- File /root/Targets/wsq/node_modules/level-iterator-stream/index.js. Coverage (Term): 24% Coverage (LOC): 24%
*- File /root/Targets/wsq/node_modules/inherits/inherits.js. Coverage (Term): 74% Coverage (LOC): 88%
*- File /root/Targets/wsq/node_modules/readable-stream/readable.js. Coverage (Term): 90% Coverage (LOC): 92%
*- File /root/Targets/wsq/node_modules/readable-stream/lib/_stream_readable.js. Coverage (Term): 7% Coverage (LOC): 11%
*- File /root/Targets/wsq/node_modules/isarray/index.js. Coverage (Term): 53% Coverage (LOC): 80%
*- File /root/Targets/wsq/node_modules/core-util-is/lib/util.js. Coverage (Term): 33% Coverage (LOC): 64%
*- File /root/Targets/wsq/node_modules/readable-stream/lib/_stream_writable.js. Coverage (Term): 9% Coverage (LOC): 16%
*- File /root/Targets/wsq/node_modules/readable-stream/lib/_stream_duplex.js. Coverage (Term): 49% Coverage (LOC): 51%
*- File /root/Targets/wsq/node_modules/readable-stream/lib/_stream_transform.js. Coverage (Term): 15% Coverage (LOC): 23%
*- File /root/Targets/wsq/node_modules/readable-stream/lib/_stream_passthrough.js. Coverage (Term): 58% Coverage (LOC): 71%
*- File /root/Targets/wsq/node_modules/level-errors/errors.js. Coverage (Term): 99% Coverage (LOC): 100%
*- File /root/Targets/wsq/node_modules/errno/errno.js. Coverage (Term): 99% Coverage (LOC): 100%
*- File /root/Targets/wsq/node_modules/errno/custom.js. Coverage (Term): 73% Coverage (LOC): 89%
*- File /root/Targets/wsq/node_modules/errno/node_modules/prr/prr.js. Coverage (Term): 78% Coverage (LOC): 92%
*- File /root/Targets/wsq/node_modules/levelup/lib/batch.js. Coverage (Term): 22% Coverage (LOC): 25%
*- File /root/Targets/wsq/node_modules/levelup/lib/util.js. Coverage (Term): 37% Coverage (LOC): 65%
*- File /root/Targets/wsq/node_modules/level-codec/index.js. Coverage (Term): 19% Coverage (LOC): 41%
*- File /root/Targets/wsq/node_modules/level-codec/lib/encodings.js. Coverage (Term): 45% Coverage (LOC): 87%
*- File /root/Targets/wsq/node_modules/levelup/lib/leveldown.js. Coverage (Term): 29% Coverage (LOC): 30%
*- File /root/Targets/wsq/node_modules/multiplex/index.js. Coverage (Term): 11% Coverage (LOC): 19%
*- File /root/Targets/wsq/node_modules/multiplex/node_modules/readable-stream/readable.js. Coverage (Term): 61% Coverage (LOC): 60%
*- File /root/Targets/wsq/node_modules/multiplex/node_modules/readable-stream/lib/_stream_readable.js. Coverage (Term): 8% Coverage (LOC): 14%
*- File /root/Targets/wsq/node_modules/process-nextick-args/index.js. Coverage (Term): 22% Coverage (LOC): 19%
*- File /root/Targets/wsq/node_modules/multiplex/node_modules/isarray/index.js. Coverage (Term): 62% Coverage (LOC): 83%
*- File /root/Targets/wsq/node_modules/multiplex/node_modules/readable-stream/lib/internal/streams/stream.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/wsq/node_modules/safe-buffer/index.js. Coverage (Term): 36% Coverage (LOC): 44%
*- File /root/Targets/wsq/node_modules/multiplex/node_modules/readable-stream/lib/internal/streams/BufferList.js. Coverage (Term): 19% Coverage (LOC): 29%
*- File /root/Targets/wsq/node_modules/multiplex/node_modules/readable-stream/lib/internal/streams/destroy.js. Coverage (Term): 15% Coverage (LOC): 21%
*- File /root/Targets/wsq/node_modules/multiplex/node_modules/readable-stream/lib/_stream_writable.js. Coverage (Term): 14% Coverage (LOC): 19%
*- File /root/Targets/wsq/node_modules/util-deprecate/node.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/wsq/node_modules/multiplex/node_modules/readable-stream/lib/_stream_duplex.js. Coverage (Term): 35% Coverage (LOC): 44%
*- File /root/Targets/wsq/node_modules/multiplex/node_modules/readable-stream/lib/_stream_transform.js. Coverage (Term): 14% Coverage (LOC): 22%
*- File /root/Targets/wsq/node_modules/multiplex/node_modules/readable-stream/lib/_stream_passthrough.js. Coverage (Term): 59% Coverage (LOC): 73%
*- File /root/Targets/wsq/node_modules/varint/index.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/wsq/node_modules/varint/encode.js. Coverage (Term): 32% Coverage (LOC): 26%
*- File /root/Targets/wsq/node_modules/varint/decode.js. Coverage (Term): 22% Coverage (LOC): 29%
*- File /root/Targets/wsq/node_modules/varint/length.js. Coverage (Term): 59% Coverage (LOC): 93%
*- File /root/Targets/wsq/node_modules/duplexify/index.js. Coverage (Term): 13% Coverage (LOC): 18%
*- File /root/Targets/wsq/node_modules/duplexify/node_modules/readable-stream/readable.js. Coverage (Term): 61% Coverage (LOC): 60%
*- File /root/Targets/wsq/node_modules/duplexify/node_modules/readable-stream/lib/_stream_readable.js. Coverage (Term): 8% Coverage (LOC): 14%
*- File /root/Targets/wsq/node_modules/duplexify/node_modules/isarray/index.js. Coverage (Term): 62% Coverage (LOC): 83%
*- File /root/Targets/wsq/node_modules/duplexify/node_modules/readable-stream/lib/internal/streams/stream.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/wsq/node_modules/duplexify/node_modules/readable-stream/lib/internal/streams/BufferList.js. Coverage (Term): 19% Coverage (LOC): 29%
*- File /root/Targets/wsq/node_modules/duplexify/node_modules/readable-stream/lib/internal/streams/destroy.js. Coverage (Term): 15% Coverage (LOC): 21%
*- File /root/Targets/wsq/node_modules/duplexify/node_modules/readable-stream/lib/_stream_writable.js. Coverage (Term): 14% Coverage (LOC): 19%
*- File /root/Targets/wsq/node_modules/duplexify/node_modules/readable-stream/lib/_stream_duplex.js. Coverage (Term): 35% Coverage (LOC): 44%
*- File /root/Targets/wsq/node_modules/duplexify/node_modules/readable-stream/lib/_stream_transform.js. Coverage (Term): 14% Coverage (LOC): 22%
*- File /root/Targets/wsq/node_modules/duplexify/node_modules/readable-stream/lib/_stream_passthrough.js. Coverage (Term): 59% Coverage (LOC): 73%
*- File /root/Targets/wsq/node_modules/end-of-stream/index.js. Coverage (Term): 9% Coverage (LOC): 12%
*- File /root/Targets/wsq/node_modules/once/once.js. Coverage (Term): 31% Coverage (LOC): 34%
*- File /root/Targets/wsq/node_modules/wrappy/wrappy.js. Coverage (Term): 31% Coverage (LOC): 48%
*- File /root/Targets/wsq/node_modules/stream-shift/index.js. Coverage (Term): 24% Coverage (LOC): 31%
*- File /root/Targets/wsq/node_modules/pump/index.js. Coverage (Term): 17% Coverage (LOC): 20%
*- File /root/Targets/wsq/node_modules/websocket-stream/index.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/wsq/node_modules/websocket-stream/server.js. Coverage (Term): 35% Coverage (LOC): 33%
*- File /root/Targets/wsq/node_modules/ws/index.js. Coverage (Term): 47% Coverage (LOC): 52%
*- File /root/Targets/wsq/node_modules/ws/lib/WebSocket.js. Coverage (Term): 8% Coverage (LOC): 10%
*- File /root/Targets/wsq/node_modules/ultron/index.js. Coverage (Term): 17% Coverage (LOC): 27%
*- File /root/Targets/wsq/node_modules/options/lib/options.js. Coverage (Term): 6% Coverage (LOC): 6%
*- File /root/Targets/wsq/node_modules/ws/lib/Sender.js. Coverage (Term): 10% Coverage (LOC): 12%
*- File /root/Targets/wsq/node_modules/ws/lib/ErrorCodes.js. Coverage (Term): 46% Coverage (LOC): 94%
*- File /root/Targets/wsq/node_modules/ws/lib/BufferUtil.js. Coverage (Term): 86% Coverage (LOC): 100%
*- File /root/Targets/wsq/node_modules/ws/lib/BufferUtil.fallback.js. Coverage (Term): 6% Coverage (LOC): 15%
*- File /root/Targets/wsq/node_modules/ws/lib/PerMessageDeflate.js. Coverage (Term): 8% Coverage (LOC): 13%
*- File /root/Targets/wsq/node_modules/ws/lib/Receiver.js. Coverage (Term): 5% Coverage (LOC): 9%
*- File /root/Targets/wsq/node_modules/ws/lib/Validation.js. Coverage (Term): 88% Coverage (LOC): 100%
*- File /root/Targets/wsq/node_modules/ws/lib/Validation.fallback.js. Coverage (Term): 67% Coverage (LOC): 83%
*- File /root/Targets/wsq/node_modules/ws/lib/BufferPool.js. Coverage (Term): 12% Coverage (LOC): 17%
*- File /root/Targets/wsq/node_modules/ws/lib/Sender.hixie.js. Coverage (Term): 17% Coverage (LOC): 28%
*- File /root/Targets/wsq/node_modules/ws/lib/Receiver.hixie.js. Coverage (Term): 10% Coverage (LOC): 13%
*- File /root/Targets/wsq/node_modules/ws/lib/Extensions.js. Coverage (Term): 10% Coverage (LOC): 15%
*- File /root/Targets/wsq/node_modules/ws/lib/WebSocketServer.js. Coverage (Term): 5% Coverage (LOC): 4%
*- File /root/Targets/wsq/node_modules/websocket-stream/stream.js. Coverage (Term): 9% Coverage (LOC): 10%
*- File /root/Targets/wsq/node_modules/through2/through2.js. Coverage (Term): 24% Coverage (LOC): 26%
*- File /root/Targets/wsq/node_modules/through2/node_modules/readable-stream/transform.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/wsq/node_modules/through2/node_modules/readable-stream/readable.js. Coverage (Term): 61% Coverage (LOC): 60%
*- File /root/Targets/wsq/node_modules/through2/node_modules/readable-stream/lib/_stream_readable.js. Coverage (Term): 8% Coverage (LOC): 14%
*- File /root/Targets/wsq/node_modules/through2/node_modules/isarray/index.js. Coverage (Term): 62% Coverage (LOC): 83%
*- File /root/Targets/wsq/node_modules/through2/node_modules/readable-stream/lib/internal/streams/stream.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/wsq/node_modules/through2/node_modules/readable-stream/lib/internal/streams/BufferList.js. Coverage (Term): 19% Coverage (LOC): 29%
*- File /root/Targets/wsq/node_modules/through2/node_modules/readable-stream/lib/internal/streams/destroy.js. Coverage (Term): 15% Coverage (LOC): 21%
*- File /root/Targets/wsq/node_modules/through2/node_modules/readable-stream/lib/_stream_writable.js. Coverage (Term): 14% Coverage (LOC): 19%
*- File /root/Targets/wsq/node_modules/through2/node_modules/readable-stream/lib/_stream_duplex.js. Coverage (Term): 35% Coverage (LOC): 44%
*- File /root/Targets/wsq/node_modules/through2/node_modules/readable-stream/lib/_stream_transform.js. Coverage (Term): 14% Coverage (LOC): 22%
*- File /root/Targets/wsq/node_modules/through2/node_modules/readable-stream/lib/_stream_passthrough.js. Coverage (Term): 59% Coverage (LOC): 73%
*- File /root/Targets/wsq/node_modules/wsq/lib/common.js. Coverage (Term): 30% Coverage (LOC): 39%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
