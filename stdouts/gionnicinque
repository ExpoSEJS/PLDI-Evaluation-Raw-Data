/root/Targets/gionnicinque
└─┬ gionnicinque@0.0.3 
  ├─┬ express@4.15.5 
  │ ├─┬ accepts@1.3.4 
  │ │ ├─┬ mime-types@2.1.17 
  │ │ │ └── mime-db@1.30.0 
  │ │ └── negotiator@0.6.1 
  │ ├── array-flatten@1.1.1 
  │ ├── content-disposition@0.5.2 
  │ ├── content-type@1.0.4 
  │ ├── cookie@0.3.1 
  │ ├── cookie-signature@1.0.6 
  │ ├─┬ debug@2.6.9 
  │ │ └── ms@2.0.0 
  │ ├── depd@1.1.1 
  │ ├── encodeurl@1.0.1 
  │ ├── escape-html@1.0.3 
  │ ├── etag@1.8.1 
  │ ├─┬ finalhandler@1.0.6 
  │ │ └── unpipe@1.0.0 
  │ ├── fresh@0.5.2 
  │ ├── merge-descriptors@1.0.1 
  │ ├── methods@1.1.2 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── parseurl@1.3.2 
  │ ├── path-to-regexp@0.1.7 
  │ ├─┬ proxy-addr@1.1.5 
  │ │ ├── forwarded@0.1.2 
  │ │ └── ipaddr.js@1.4.0 
  │ ├── qs@6.5.0 
  │ ├── range-parser@1.2.0 
  │ ├─┬ send@0.15.6 
  │ │ ├── destroy@1.0.4 
  │ │ ├─┬ http-errors@1.6.2 
  │ │ │ └── inherits@2.0.3 
  │ │ └── mime@1.3.4 
  │ ├── serve-static@1.12.6 
  │ ├── setprototypeof@1.0.3 
  │ ├── statuses@1.3.1 
  │ ├─┬ type-is@1.6.15 
  │ │ └── media-typer@0.3.0 
  │ ├── utils-merge@1.0.0 
  │ └── vary@1.1.2 
  ├─┬ hostapd_switch@0.0.19 
  │ └── waitfor-promise@0.0.3 
  ├─┬ hwrestart@0.0.11 
  │ └── verbo@0.0.6 
  ├─┬ json-add@0.0.1 
  │ ├── deep-diff@0.3.8 
  │ └── verbo@0.0.7 
  ├─┬ linux-mobile-connection@0.0.35 
  │ ├── lsusbdev@0.0.3 
  │ ├── timerdaemon@0.0.2 
  │ └── wvdialjs@0.0.30 
  ├── lodash@3.10.1 
  ├─┬ netw@0.0.18 
  │ └─┬ external-ip@0.2.4 
  │   ├── commander@2.11.0 
  │   ├── evented-async-loop@0.1.1 
  │   ├─┬ request@2.83.0 
  │   │ ├── aws-sign2@0.7.0 
  │   │ ├── aws4@1.6.0 
  │   │ ├── caseless@0.12.0 
  │   │ ├─┬ combined-stream@1.0.5 
  │   │ │ └── delayed-stream@1.0.0 
  │   │ ├── extend@3.0.1 
  │   │ ├── forever-agent@0.6.1 
  │   │ ├─┬ form-data@2.3.1 
  │   │ │ └── asynckit@0.4.0 
  │   │ ├─┬ har-validator@5.0.3 
  │   │ │ ├─┬ ajv@5.2.3 
  │   │ │ │ ├── co@4.6.0 
  │   │ │ │ ├── fast-deep-equal@1.0.0 
  │   │ │ │ ├── json-schema-traverse@0.3.1 
  │   │ │ │ └─┬ json-stable-stringify@1.0.1 
  │   │ │ │   └── jsonify@0.0.0 
  │   │ │ └── har-schema@2.0.0 
  │   │ ├─┬ hawk@6.0.2 
  │   │ │ ├── boom@4.3.1 
  │   │ │ ├─┬ cryptiles@3.1.2 
  │   │ │ │ └── boom@5.2.0 
  │   │ │ ├── hoek@4.2.0 
  │   │ │ └── sntp@2.0.2 
  │   │ ├─┬ http-signature@1.2.0 
  │   │ │ ├── assert-plus@1.0.0 
  │   │ │ ├─┬ jsprim@1.4.1 
  │   │ │ │ ├── extsprintf@1.3.0 
  │   │ │ │ ├── json-schema@0.2.3 
  │   │ │ │ └─┬ verror@1.10.0 
  │   │ │ │   └── core-util-is@1.0.2 
  │   │ │ └─┬ sshpk@1.13.1 
  │   │ │   ├── asn1@0.2.3 
  │   │ │   ├── bcrypt-pbkdf@1.0.1 
  │   │ │   ├── dashdash@1.14.1 
  │   │ │   ├── ecc-jsbn@0.1.1 
  │   │ │   ├── getpass@0.1.7 
  │   │ │   ├── jsbn@0.1.1 
  │   │ │   └── tweetnacl@0.14.5 
  │   │ ├── is-typedarray@1.0.0 
  │   │ ├── isstream@0.1.2 
  │   │ ├── json-stringify-safe@5.0.1 
  │   │ ├── oauth-sign@0.8.2 
  │   │ ├── performance-now@2.1.0 
  │   │ ├── qs@6.5.1 
  │   │ ├── safe-buffer@5.1.1 
  │   │ ├── stringstream@0.0.5 
  │   │ ├─┬ tough-cookie@2.3.3 
  │   │ │ └── punycode@1.4.1 
  │   │ ├── tunnel-agent@0.6.0 
  │   │ └── uuid@3.1.0 
  │   └── revalidator@0.3.1 
  ├─┬ path-exists@2.1.0 
  │ └─┬ pinkie-promise@2.0.1 
  │   └── pinkie@2.0.4 
  ├─┬ promise@7.3.1 
  │ └── asap@2.0.6 
  ├─┬ promise-test-connection@0.0.2 
  │ └─┬ connection-tester@0.0.7 
  │   └── shelljs@0.5.3 
  ├─┬ promised-exec@1.0.1 
  │ └── q@1.5.0 
  └─┬ verbo@0.0.9 
    └── colors@1.1.2 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/gionnicinque/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0772 took 4.7224s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (107:1) on program var hostapd_switch=require('hostapd_switch'),
Promise=require('promise'),
testinternet=require('promise-test-connection'),
// npmAppsManager=require('npmAppsManager'),
netw=require('netw'),
LMC=require('linux-mobile-connection'),
mobileconnect=require('linux-mobile-connection'),
pouchDB=require('pouchdb'),
merge=require('json-add'),
//LOS=require('linux-online-status'),
offlinereboot=require('offlinereboot'),
pathExists=require('path-exists'),
// timerdaemon=require('timerdaemon'),
_=require('lodash'),
verb=require('verbo'),
app = require('express').createServer();


// sudo iptables -t nat -A PREROUTING -d 0/0 -p tcp --dport 80 -j DNAT --to-destination 192.168.23.1 // better to custom port

app.use('/db', require('express-pouchdb')(PouchDB.defaults({prefix: '/tmp/my-temp-pouch/'})));
app.use(express.static(__dirname +'/html'));


app.get('/', function(req, res){
  res.send('hello world');
});

function regular_mode(options){

  return new Promise(function(resolve,reject){
    hostapd_switch.client('/etc/wpa_supplicant/wpa_supplicant.conf',true,true).then(function(switch_answer){
resolve(switch_answer)
      // npmAppsManager.start().then(function(answer){
      //   resolve(answer)
      // }).catch(function(err){
      //   verb(err,'error','bootseq')
      //   reject(err)
      // })


    }).catch(function(err){
      reject(err)

    })
})
}

function recovery_mode(options){
  return new Promise(function(resolve,reject){
    hostapd_switch.ap().then(function(){
      resolve(answer)

    }).catch(function(err){
      verb(err,'error','bootseq')

      reject(err)

    })
  })

}


function J5(data) {
  var config={
    recovery:true,
    offlineApp:false, // avvia l'app solo in stato regular
    port:8080, // in modalità regular setta la porta per il manager
    wpa_supplicant_path:'/etc/wpa_supplicant/wpa_supplicant.conf',
    recovery_dev:'auto'
    }

  if(data){

    merge(config,data)

  }


  app.listen(options.port);

  return config
}

J5.prototype.start_apps=function(){
  return npmAppsManager.start()
};
J5.prototype.stop_apps=function(){
  return npmAppsManager.stop(this)
};
J5.prototype.restart_apps=function(){

  return npmAppsManager.restart(this)
};
J5.prototype.app_mode_switch=function(mode){
  switch(mode){
    case 'recovery':{

      return recovery_mode(this)
    };
    case 'regular':{

      return regular_mode(this)
    }
  }
})
J5.prototype.wifi_switch=function(mode){
  switch(mode){
    case 'ap':{
      return hostapd_switch.ap()
    };
    case 'client':{
      return hostapd_switch.client(this.wpa_supplicant_path,true,true)
    }
  }
})


  J5.prototype.init=function(){
    var options=this;
    return new Promise(function(resolve,reject){
      testinternet().then(function(){
        npmAppsManager.start().then(function(answer){
          resolve(answer)
        }).catch(function(err){
          verb(err,'error','bootseq')
          reject(err)
        })
      }).catch(function(){
        var wifi_exist=false

        netw.data().then(function(data){
          _.map(data.networks,function(device){
            if(device.interfaceType=='wifi'){
            wifi_exist=true
            }
          })
        })
        if(wifi_exist){
          regular_mode(options).then(function(answer){
            resolve(answer)
          }).catch(function(err){
            verb(err,'error','bootseq')

            // linux mobileconnect
if(options.recovery){
recovery_mode(options).then(function(answer){
  resolve(answer)
}).catch(function(err){
  verb(err,'error','bootseq')
})
} else{
  reject('no wlan host available')
}
          })
        } else{
          reject(err)

        }


      })



    })
  };

  J5.prototype.recovery=function(){
    return recovery_mode(this)
  };



module.export=J5
 at SyntaxError: Unexpected token (107:1)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:61)
    at Parser.pp$1.parseExpressionStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:966:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:730:24)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
    at Parser.parse (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:516:17)
    at Object.parse (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:3098:39)
    at convert (/root/ExpoSE/lib/Tropigate/bin/main.js:50:18)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
