/root/Targets/php-runtime
└─┬ php-runtime@0.5.1 
  ├── php-parser@2.0.7 
  └── php-transpiler@0.1.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/php-runtime/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 1 running / 0 errors / 28.999999999999996% coverage ] ****** [1 done /0 queued / 1 running / 0 errors / 28.999999999999996% coverage ] ****** [2 done /0 queued / 1 running / 1 errors / 36% coverage ] ****** [2 done /0 queued / 1 running / 1 errors / 36% coverage ] ****** [3 done /0 queued / 1 running / 2 errors / 37% coverage ] ****** [3 done /0 queued / 1 running / 2 errors / 37% coverage ] ****** [4 done /1 queued / 1 running / 3 errors / 37% coverage ] ****** [4 done /0 queued / 2 running / 3 errors / 37% coverage ] ****** [4 done /0 queued / 2 running / 3 errors / 37% coverage ] ****** [5 done /0 queued / 1 running / 4 errors / 37% coverage ] ****** [6 done /1 queued / 1 running / 5 errors / 37% coverage ] ****** [6 done /0 queued / 2 running / 5 errors / 37% coverage ] ****** [6 done /0 queued / 2 running / 5 errors / 37% coverage ] ****** [7 done /1 queued / 2 running / 6 errors / 37% coverage ] ****** [7 done /0 queued / 3 running / 6 errors / 37% coverage ] ****** [7 done /0 queued / 3 running / 6 errors / 37% coverage ] ****** [8 done /0 queued / 2 running / 7 errors / 37% coverage ] ****** [9 done /1 queued / 2 running / 8 errors / 37% coverage ] ****** [9 done /0 queued / 3 running / 8 errors / 37% coverage ] ****** [9 done /0 queued / 3 running / 8 errors / 37% coverage ] ****** [10 done /0 queued / 3 running / 9 errors / 37% coverage ] ****** [10 done /0 queued / 3 running / 9 errors / 37% coverage ] ****** [11 done /2 queued / 3 running / 10 errors / 37% coverage ] ****** [11 done /1 queued / 4 running / 10 errors / 37% coverage ] ****** [11 done /0 queued / 5 running / 10 errors / 37% coverage ] ****** [11 done /0 queued / 5 running / 10 errors / 37% coverage ] ****** [12 done /1 queued / 5 running / 11 errors / 37% coverage ] ****** [12 done /0 queued / 6 running / 11 errors / 37% coverage ] ****** [12 done /0 queued / 6 running / 11 errors / 37% coverage ] ****** [13 done /0 queued / 5 running / 12 errors / 37% coverage ] ****** [14 done /1 queued / 5 running / 13 errors / 37% coverage ] ****** [14 done /0 queued / 6 running / 13 errors / 37% coverage ] ****** [14 done /0 queued / 6 running / 13 errors / 37% coverage ] ****** [15 done /0 queued / 6 running / 14 errors / 37% coverage ] ****** [15 done /0 queued / 6 running / 14 errors / 37% coverage ] ****** [16 done /1 queued / 6 running / 15 errors / 37% coverage ] ****** [16 done /0 queued / 7 running / 15 errors / 37% coverage ] ****** [16 done /0 queued / 7 running / 15 errors / 37% coverage ] ****** [17 done /1 queued / 7 running / 16 errors / 37% coverage ] ****** [17 done /0 queued / 8 running / 16 errors / 37% coverage ] ****** [17 done /0 queued / 8 running / 16 errors / 37% coverage ] ****** [18 done /1 queued / 8 running / 17 errors / 37% coverage ] ****** [18 done /0 queued / 9 running / 17 errors / 37% coverage ] ****** [18 done /0 queued / 9 running / 17 errors / 37% coverage ] ****** [19 done /2 queued / 9 running / 18 errors / 37% coverage ] ****** [19 done /1 queued / 10 running / 18 errors / 37% coverage ] ****** [19 done /0 queued / 11 running / 18 errors / 37% coverage ] ****** [19 done /0 queued / 11 running / 18 errors / 37% coverage ] ****** [20 done /1 queued / 11 running / 19 errors / 37% coverage ] ****** [20 done /0 queued / 12 running / 19 errors / 37% coverage ] ****** [20 done /0 queued / 12 running / 19 errors / 37% coverage ] ****** [21 done /1 queued / 12 running / 20 errors / 37% coverage ] ****** [21 done /0 queued / 13 running / 20 errors / 37% coverage ] ****** [21 done /0 queued / 13 running / 20 errors / 37% coverage ] ****** [22 done /1 queued / 13 running / 21 errors / 37% coverage ] ****** [22 done /0 queued / 14 running / 21 errors / 37% coverage ] ****** [22 done /0 queued / 14 running / 21 errors / 37% coverage ] ****** [23 done /1 queued / 14 running / 22 errors / 37% coverage ] ****** [23 done /0 queued / 15 running / 22 errors / 37% coverage ] ****** [23 done /0 queued / 15 running / 22 errors / 37% coverage ] ****** [24 done /1 queued / 15 running / 23 errors / 37% coverage ] ****** [24 done /0 queued / 16 running / 23 errors / 37% coverage ] ****** [24 done /0 queued / 16 running / 23 errors / 37% coverage ] ****** [25 done /1 queued / 16 running / 24 errors / 37% coverage ] ****** [25 done /1 queued / 16 running / 24 errors / 37% coverage ] ****** [26 done /2 queued / 16 running / 25 errors / 37% coverage ] ****** [26 done /2 queued / 16 running / 25 errors / 37% coverage ] ****** [27 done /3 queued / 16 running / 26 errors / 37% coverage ] ****** [27 done /3 queued / 16 running / 26 errors / 37% coverage ] ****** [28 done /4 queued / 16 running / 27 errors / 37% coverage ] ****** [28 done /4 queued / 16 running / 27 errors / 37% coverage ] ****** [29 done /4 queued / 16 running / 28 errors / 37% coverage ] ****** [29 done /4 queued / 16 running / 28 errors / 37% coverage ] ****** [30 done /5 queued / 16 running / 29 errors / 37% coverage ] ****** [30 done /5 queued / 16 running / 29 errors / 37% coverage ] ****** [31 done /8 queued / 16 running / 30 errors / 37% coverage ] ****** [31 done /8 queued / 16 running / 30 errors / 37% coverage ] ****** [32 done /9 queued / 16 running / 31 errors / 37% coverage ] ****** [32 done /9 queued / 16 running / 31 errors / 37% coverage ] ****** [33 done /10 queued / 16 running / 32 errors / 37% coverage ] ****** [33 done /10 queued / 16 running / 32 errors / 37% coverage ] ****** [34 done /12 queued / 16 running / 33 errors / 37% coverage ] ****** [34 done /12 queued / 16 running / 33 errors / 37% coverage ] ****** [35 done /13 queued / 16 running / 34 errors / 37% coverage ] ****** [35 done /13 queued / 16 running / 34 errors / 37% coverage ] ****** [36 done /14 queued / 16 running / 35 errors / 37% coverage ] ****** [36 done /14 queued / 16 running / 35 errors / 37% coverage ] ****** [37 done /15 queued / 16 running / 36 errors / 37% coverage ] ****** [37 done /15 queued / 16 running / 36 errors / 37% coverage ] ****** [38 done /16 queued / 16 running / 37 errors / 37% coverage ] ****** [38 done /16 queued / 16 running / 37 errors / 37% coverage ] ****** [39 done /17 queued / 16 running / 38 errors / 37% coverage ] ****** [39 done /17 queued / 16 running / 38 errors / 37% coverage ] ****** [40 done /18 queued / 16 running / 39 errors / 37% coverage ] ****** [40 done /18 queued / 16 running / 39 errors / 37% coverage ] ****** [41 done /19 queued / 16 running / 40 errors / 37% coverage ] ****** [41 done /19 queued / 16 running / 40 errors / 37% coverage ] ****** [42 done /21 queued / 16 running / 41 errors / 37% coverage ] ****** [42 done /21 queued / 16 running / 41 errors / 37% coverage ] ****** [43 done /22 queued / 16 running / 42 errors / 37% coverage ] ****** [43 done /22 queued / 16 running / 42 errors / 37% coverage ] ****** [44 done /24 queued / 16 running / 43 errors / 37% coverage ] ****** [44 done /24 queued / 16 running / 43 errors / 37% coverage ] ****** [45 done /25 queued / 16 running / 44 errors / 37% coverage ] ****** [45 done /25 queued / 16 running / 44 errors / 37% coverage ] ****** [46 done /26 queued / 16 running / 45 errors / 37% coverage ] ****** [46 done /26 queued / 16 running / 45 errors / 37% coverage ] ****** [47 done /28 queued / 16 running / 46 errors / 37% coverage ] ****** [47 done /28 queued / 16 running / 46 errors / 37% coverage ] ****** [48 done /29 queued / 16 running / 47 errors / 37% coverage ] ****** [48 done /29 queued / 16 running / 47 errors / 37% coverage ] ****** [49 done /29 queued / 16 running / 48 errors / 37% coverage ] ****** [49 done /29 queued / 16 running / 48 errors / 37% coverage ] ****** [50 done /29 queued / 16 running / 49 errors / 37% coverage ] ****** [50 done /29 queued / 16 running / 49 errors / 37% coverage ] ****** [51 done /32 queued / 16 running / 50 errors / 37% coverage ] ****** [51 done /32 queued / 16 running / 50 errors / 37% coverage ] ****** [52 done /32 queued / 16 running / 51 errors / 37% coverage ] ****** [52 done /32 queued / 16 running / 51 errors / 37% coverage ] ****** [53 done /33 queued / 16 running / 52 errors / 37% coverage ] ****** [53 done /33 queued / 16 running / 52 errors / 37% coverage ] ****** [54 done /35 queued / 16 running / 53 errors / 37% coverage ] ****** [54 done /35 queued / 16 running / 53 errors / 37% coverage ] ****** [55 done /37 queued / 16 running / 54 errors / 37% coverage ] ****** [55 done /37 queued / 16 running / 54 errors / 37% coverage ] ****** [56 done /41 queued / 16 running / 55 errors / 37% coverage ] ****** [56 done /41 queued / 16 running / 55 errors / 37% coverage ] ****** [57 done /42 queued / 16 running / 56 errors / 37% coverage ] ****** [57 done /42 queued / 16 running / 56 errors / 37% coverage ] ****** [58 done /43 queued / 16 running / 57 errors / 37% coverage ] ****** [58 done /43 queued / 16 running / 57 errors / 37% coverage ] ****** [59 done /43 queued / 16 running / 58 errors / 37% coverage ] ****** [59 done /43 queued / 16 running / 58 errors / 37% coverage ] ****** [60 done /44 queued / 16 running / 59 errors / 37% coverage ] ****** [60 done /44 queued / 16 running / 59 errors / 37% coverage ] ****** [61 done /45 queued / 16 running / 60 errors / 37% coverage ] ****** [61 done /45 queued / 16 running / 60 errors / 37% coverage ] ****** [62 done /45 queued / 16 running / 61 errors / 37% coverage ] ****** [62 done /45 queued / 16 running / 61 errors / 37% coverage ] ****** [63 done /46 queued / 16 running / 62 errors / 37% coverage ] ****** [63 done /46 queued / 16 running / 62 errors / 37% coverage ] ****** [64 done /46 queued / 16 running / 63 errors / 37% coverage ] ****** [64 done /46 queued / 16 running / 63 errors / 37% coverage ] ****** [65 done /49 queued / 16 running / 64 errors / 37% coverage ] ****** [65 done /49 queued / 16 running / 64 errors / 37% coverage ] ****** [66 done /50 queued / 16 running / 65 errors / 37% coverage ] ****** [66 done /50 queued / 16 running / 65 errors / 37% coverage ] ****** [67 done /51 queued / 16 running / 66 errors / 37% coverage ] ****** [67 done /51 queued / 16 running / 66 errors / 37% coverage ] ****** [68 done /51 queued / 16 running / 67 errors / 37% coverage ] ****** [68 done /51 queued / 16 running / 67 errors / 37% coverage ] ****** [69 done /51 queued / 16 running / 68 errors / 37% coverage ] ****** [69 done /51 queued / 16 running / 68 errors / 37% coverage ] ****** [70 done /52 queued / 16 running / 69 errors / 37% coverage ] ****** [70 done /52 queued / 16 running / 69 errors / 37% coverage ] ****** [71 done /52 queued / 16 running / 70 errors / 37% coverage ] ****** [71 done /52 queued / 16 running / 70 errors / 37% coverage ] ****** [72 done /54 queued / 16 running / 71 errors / 37% coverage ] ****** [72 done /54 queued / 16 running / 71 errors / 37% coverage ] ****** [73 done /54 queued / 16 running / 72 errors / 37% coverage ] ****** [73 done /54 queued / 16 running / 72 errors / 37% coverage ] ****** [74 done /55 queued / 16 running / 73 errors / 37% coverage ] ****** [74 done /55 queued / 16 running / 73 errors / 37% coverage ] ****** [75 done /56 queued / 16 running / 74 errors / 37% coverage ] ****** [75 done /56 queued / 16 running / 74 errors / 37% coverage ] ****** [76 done /56 queued / 16 running / 75 errors / 37% coverage ] ****** [76 done /56 queued / 16 running / 75 errors / 37% coverage ] ****** [77 done /57 queued / 16 running / 76 errors / 37% coverage ] ****** [77 done /57 queued / 16 running / 76 errors / 37% coverage ] ****** [78 done /57 queued / 16 running / 77 errors / 37% coverage ] ****** [78 done /57 queued / 16 running / 77 errors / 37% coverage ] ****** [79 done /58 queued / 16 running / 78 errors / 37% coverage ] ****** [79 done /58 queued / 16 running / 78 errors / 37% coverage ] ****** [80 done /58 queued / 16 running / 79 errors / 37% coverage ] ****** [80 done /58 queued / 16 running / 79 errors / 37% coverage ] ****** [81 done /59 queued / 16 running / 80 errors / 37% coverage ] ****** [81 done /59 queued / 16 running / 80 errors / 37% coverage ] ****** [82 done /60 queued / 16 running / 81 errors / 37% coverage ] ****** [82 done /60 queued / 16 running / 81 errors / 37% coverage ] ****** [83 done /60 queued / 16 running / 82 errors / 37% coverage ] ****** [83 done /60 queued / 16 running / 82 errors / 37% coverage ] ****** [84 done /60 queued / 16 running / 83 errors / 37% coverage ] ****** [84 done /60 queued / 16 running / 83 errors / 37% coverage ] ****** [85 done /61 queued / 16 running / 84 errors / 37% coverage ] ****** [85 done /61 queued / 16 running / 84 errors / 37% coverage ] ****** [86 done /62 queued / 16 running / 85 errors / 37% coverage ] ****** [86 done /62 queued / 16 running / 85 errors / 37% coverage ] ****** [87 done /62 queued / 16 running / 86 errors / 37% coverage ] ****** [87 done /62 queued / 16 running / 86 errors / 37% coverage ] ****** [88 done /63 queued / 16 running / 87 errors / 37% coverage ] ****** [88 done /63 queued / 16 running / 87 errors / 37% coverage ] ****** [89 done /67 queued / 16 running / 88 errors / 37% coverage ] ****** [89 done /67 queued / 16 running / 88 errors / 37% coverage ] ****** [90 done /68 queued / 16 running / 89 errors / 37% coverage ] ****** [90 done /68 queued / 16 running / 89 errors / 37% coverage ] ****** [91 done /69 queued / 16 running / 90 errors / 37% coverage ] ****** [91 done /69 queued / 16 running / 90 errors / 37% coverage ] ****** [92 done /70 queued / 16 running / 91 errors / 37% coverage ] ****** [92 done /70 queued / 16 running / 91 errors / 37% coverage ] ****** [93 done /71 queued / 16 running / 92 errors / 37% coverage ] ****** [93 done /71 queued / 16 running / 92 errors / 37% coverage ] ****** [94 done /72 queued / 16 running / 93 errors / 37% coverage ] ****** [94 done /72 queued / 16 running / 93 errors / 37% coverage ] ****** [95 done /73 queued / 16 running / 94 errors / 37% coverage ] ****** [95 done /73 queued / 16 running / 94 errors / 37% coverage ] ****** [96 done /74 queued / 16 running / 95 errors / 37% coverage ] ****** [96 done /74 queued / 16 running / 95 errors / 37% coverage ] ****** [97 done /75 queued / 16 running / 96 errors / 37% coverage ] ****** [97 done /75 queued / 16 running / 96 errors / 37% coverage ] ****** [98 done /76 queued / 16 running / 97 errors / 37% coverage ] ****** [98 done /76 queued / 16 running / 97 errors / 37% coverage ] ****** [99 done /77 queued / 16 running / 98 errors / 37% coverage ] ****** [99 done /77 queued / 16 running / 98 errors / 37% coverage ] ****** [100 done /79 queued / 16 running / 99 errors / 37% coverage ] ****** [100 done /79 queued / 16 running / 99 errors / 37% coverage ] ****** [101 done /80 queued / 16 running / 100 errors / 37% coverage ] ****** [101 done /80 queued / 16 running / 100 errors / 37% coverage ] ****** [102 done /81 queued / 16 running / 101 errors / 37% coverage ] ****** [102 done /81 queued / 16 running / 101 errors / 37% coverage ] ****** [103 done /82 queued / 16 running / 102 errors / 37% coverage ] ****** [103 done /82 queued / 16 running / 102 errors / 37% coverage ] ****** [104 done /84 queued / 16 running / 103 errors / 37% coverage ] ****** [104 done /84 queued / 16 running / 103 errors / 37% coverage ] ****** [105 done /85 queued / 16 running / 104 errors / 37% coverage ] ****** [105 done /85 queued / 16 running / 104 errors / 37% coverage ] ****** [106 done /85 queued / 16 running / 105 errors / 37% coverage ] ****** [106 done /85 queued / 16 running / 105 errors / 37% coverage ] ****** [107 done /85 queued / 16 running / 106 errors / 37% coverage ] ****** [107 done /85 queued / 16 running / 106 errors / 37% coverage ] ****** [108 done /85 queued / 16 running / 107 errors / 37% coverage ] ****** [108 done /85 queued / 16 running / 107 errors / 37% coverage ] ****** [109 done /86 queued / 16 running / 108 errors / 37% coverage ] ****** [109 done /86 queued / 16 running / 108 errors / 37% coverage ] ****** [110 done /87 queued / 16 running / 109 errors / 37% coverage ] ****** [110 done /87 queued / 16 running / 109 errors / 37% coverage ] ****** [111 done /88 queued / 16 running / 110 errors / 37% coverage ] ****** [111 done /88 queued / 16 running / 110 errors / 37% coverage ] ****** [112 done /89 queued / 16 running / 111 errors / 37% coverage ] ****** [112 done /89 queued / 16 running / 111 errors / 37% coverage ] ****** [113 done /91 queued / 16 running / 112 errors / 37% coverage ] ****** [113 done /91 queued / 16 running / 112 errors / 37% coverage ] ****** [114 done /91 queued / 16 running / 113 errors / 37% coverage ] ****** [114 done /91 queued / 16 running / 113 errors / 37% coverage ] ****** [115 done /92 queued / 16 running / 114 errors / 37% coverage ] ****** [115 done /92 queued / 16 running / 114 errors / 37% coverage ] ****** [116 done /93 queued / 16 running / 115 errors / 37% coverage ] ****** [116 done /93 queued / 16 running / 115 errors / 37% coverage ] ****** [117 done /94 queued / 16 running / 116 errors / 37% coverage ] ****** [117 done /94 queued / 16 running / 116 errors / 37% coverage ] ****** [118 done /96 queued / 16 running / 117 errors / 37% coverage ] ****** [118 done /96 queued / 16 running / 117 errors / 37% coverage ] ****** [119 done /98 queued / 16 running / 118 errors / 37% coverage ] ****** [119 done /98 queued / 16 running / 118 errors / 37% coverage ] ****** [120 done /101 queued / 16 running / 119 errors / 37% coverage ] ****** [120 done /101 queued / 16 running / 119 errors / 37% coverage ] ****** [121 done /101 queued / 16 running / 120 errors / 37% coverage ] ****** [121 done /101 queued / 16 running / 120 errors / 37% coverage ] ****** [122 done /105 queued / 16 running / 121 errors / 37% coverage ] ****** [122 done /105 queued / 16 running / 121 errors / 37% coverage ] ****** [123 done /107 queued / 16 running / 122 errors / 37% coverage ] ****** [123 done /107 queued / 16 running / 122 errors / 37% coverage ] ****** [124 done /111 queued / 16 running / 123 errors / 37% coverage ] ****** [124 done /111 queued / 16 running / 123 errors / 37% coverage ] ****** [125 done /112 queued / 16 running / 124 errors / 37% coverage ] ****** [125 done /112 queued / 16 running / 124 errors / 37% coverage ] ****** [126 done /113 queued / 16 running / 125 errors / 37% coverage ] ****** [126 done /113 queued / 16 running / 125 errors / 37% coverage ] ****** [127 done /115 queued / 16 running / 126 errors / 37% coverage ] ****** [127 done /115 queued / 16 running / 126 errors / 37% coverage ] ****** [128 done /117 queued / 16 running / 127 errors / 37% coverage ] ****** [128 done /117 queued / 16 running / 127 errors / 37% coverage ] ****** [129 done /120 queued / 16 running / 128 errors / 37% coverage ] ****** [129 done /120 queued / 16 running / 128 errors / 37% coverage ] ****** [130 done /120 queued / 16 running / 129 errors / 37% coverage ] ****** [130 done /120 queued / 16 running / 129 errors / 37% coverage ] ****** [131 done /121 queued / 16 running / 130 errors / 37% coverage ] ****** [131 done /121 queued / 16 running / 130 errors / 37% coverage ] ****** [132 done /122 queued / 16 running / 131 errors / 37% coverage ] ****** [132 done /122 queued / 16 running / 131 errors / 37% coverage ] ****** [133 done /123 queued / 16 running / 132 errors / 37% coverage ] ****** [133 done /123 queued / 16 running / 132 errors / 37% coverage ] ****** [134 done /124 queued / 16 running / 133 errors / 37% coverage ] ****** [134 done /124 queued / 16 running / 133 errors / 37% coverage ] ****** [135 done /125 queued / 16 running / 134 errors / 37% coverage ] ****** [135 done /125 queued / 16 running / 134 errors / 37% coverage ] ****** [136 done /125 queued / 16 running / 135 errors / 37% coverage ] ****** [136 done /125 queued / 16 running / 135 errors / 37% coverage ] ****** [137 done /126 queued / 16 running / 136 errors / 37% coverage ] ****** [137 done /126 queued / 16 running / 136 errors / 37% coverage ] ****** [138 done /126 queued / 16 running / 137 errors / 37% coverage ] ****** [138 done /126 queued / 16 running / 137 errors / 37% coverage ] ****** [139 done /126 queued / 16 running / 138 errors / 37% coverage ] ****** [139 done /126 queued / 16 running / 138 errors / 37% coverage ] ****** [140 done /127 queued / 16 running / 139 errors / 37% coverage ] ****** [140 done /127 queued / 16 running / 139 errors / 37% coverage ] ****** [141 done /127 queued / 16 running / 140 errors / 37% coverage ] ****** [141 done /127 queued / 16 running / 140 errors / 37% coverage ] ****** [142 done /127 queued / 16 running / 141 errors / 37% coverage ] ****** [142 done /127 queued / 16 running / 141 errors / 37% coverage ] ****** [143 done /128 queued / 16 running / 142 errors / 37% coverage ] ****** [143 done /128 queued / 16 running / 142 errors / 37% coverage ] ****** [144 done /129 queued / 16 running / 143 errors / 37% coverage ] ****** [144 done /129 queued / 16 running / 143 errors / 37% coverage ] ****** [145 done /130 queued / 16 running / 144 errors / 37% coverage ] ****** [145 done /130 queued / 16 running / 144 errors / 37% coverage ] ****** [146 done /131 queued / 16 running / 145 errors / 37% coverage ] ****** [146 done /131 queued / 16 running / 145 errors / 37% coverage ] ****** [147 done /132 queued / 16 running / 146 errors / 37% coverage ] ****** [147 done /132 queued / 16 running / 146 errors / 37% coverage ] ****** [148 done /133 queued / 16 running / 147 errors / 37% coverage ] ****** [148 done /133 queued / 16 running / 147 errors / 37% coverage ] ****** [149 done /133 queued / 16 running / 148 errors / 37% coverage ] ****** [149 done /133 queued / 16 running / 148 errors / 37% coverage ] ****** [150 done /133 queued / 16 running / 149 errors / 37% coverage ] ****** [150 done /133 queued / 16 running / 149 errors / 37% coverage ] ****** [151 done /133 queued / 16 running / 150 errors / 37% coverage ] ****** [151 done /133 queued / 16 running / 150 errors / 37% coverage ] ****** [152 done /133 queued / 16 running / 151 errors / 37% coverage ] ****** [152 done /133 queued / 16 running / 151 errors / 37% coverage ] ****** [153 done /134 queued / 16 running / 152 errors / 37% coverage ] ****** [153 done /134 queued / 16 running / 152 errors / 37% coverage ] ****** [154 done /134 queued / 16 running / 153 errors / 37% coverage ] ****** [154 done /134 queued / 16 running / 153 errors / 37% coverage ] ****** [155 done /136 queued / 16 running / 154 errors / 37% coverage ] ****** [155 done /136 queued / 16 running / 154 errors / 37% coverage ] ****** [156 done /136 queued / 16 running / 155 errors / 37% coverage ] ****** [156 done /136 queued / 16 running / 155 errors / 37% coverage ] ****** [157 done /137 queued / 16 running / 156 errors / 37% coverage ] ****** [157 done /137 queued / 16 running / 156 errors / 37% coverage ] ****** [158 done /138 queued / 16 running / 157 errors / 37% coverage ] ****** [158 done /138 queued / 16 running / 157 errors / 37% coverage ] ****** [159 done /138 queued / 16 running / 158 errors / 37% coverage ] ****** [159 done /138 queued / 16 running / 158 errors / 37% coverage ] ****** [160 done /139 queued / 16 running / 159 errors / 37% coverage ] ****** [160 done /139 queued / 16 running / 159 errors / 37% coverage ] ****** [161 done /139 queued / 16 running / 160 errors / 37% coverage ] ****** [161 done /139 queued / 16 running / 160 errors / 37% coverage ] ****** [162 done /140 queued / 16 running / 161 errors / 37% coverage ] ****** [162 done /140 queued / 16 running / 161 errors / 37% coverage ] ****** [163 done /140 queued / 16 running / 162 errors / 37% coverage ] ****** [163 done /140 queued / 16 running / 162 errors / 37% coverage ] ****** [164 done /141 queued / 16 running / 163 errors / 37% coverage ] ****** [164 done /141 queued / 16 running / 163 errors / 37% coverage ] ****** [165 done /142 queued / 16 running / 164 errors / 37% coverage ] ****** [165 done /142 queued / 16 running / 164 errors / 37% coverage ] ****** [166 done /142 queued / 16 running / 165 errors / 37% coverage ] ****** [166 done /142 queued / 16 running / 165 errors / 37% coverage ] ****** [167 done /143 queued / 16 running / 166 errors / 37% coverage ] ****** [167 done /143 queued / 16 running / 166 errors / 37% coverage ] ****** [168 done /144 queued / 16 running / 167 errors / 37% coverage ] ****** [168 done /144 queued / 16 running / 167 errors / 37% coverage ] ****** [169 done /145 queued / 16 running / 168 errors / 37% coverage ] ****** [169 done /145 queued / 16 running / 168 errors / 37% coverage ] ****** [170 done /147 queued / 16 running / 169 errors / 37% coverage ] ****** [170 done /147 queued / 16 running / 169 errors / 37% coverage ] ****** [171 done /147 queued / 16 running / 170 errors / 37% coverage ] ****** [171 done /147 queued / 16 running / 170 errors / 37% coverage ] ****** [172 done /148 queued / 16 running / 171 errors / 37% coverage ] ****** [172 done /148 queued / 16 running / 171 errors / 37% coverage ] ****** [173 done /149 queued / 16 running / 172 errors / 37% coverage ] ****** [173 done /149 queued / 16 running / 172 errors / 37% coverage ] ****** [174 done /150 queued / 16 running / 173 errors / 37% coverage ] ****** [174 done /150 queued / 16 running / 173 errors / 37% coverage ] ****** [175 done /151 queued / 16 running / 174 errors / 37% coverage ] ****** [175 done /151 queued / 16 running / 174 errors / 37% coverage ] ****** [176 done /152 queued / 16 running / 175 errors / 37% coverage ] ****** [176 done /152 queued / 16 running / 175 errors / 37% coverage ] ****** [177 done /153 queued / 16 running / 176 errors / 37% coverage ] ****** [177 done /153 queued / 16 running / 176 errors / 37% coverage ] ****** [178 done /154 queued / 16 running / 177 errors / 37% coverage ] ****** [178 done /154 queued / 16 running / 177 errors / 37% coverage ] ****** [179 done /155 queued / 16 running / 178 errors / 37% coverage ] ****** [179 done /155 queued / 16 running / 178 errors / 37% coverage ] ****** [180 done /156 queued / 16 running / 179 errors / 37% coverage ] ****** [180 done /156 queued / 16 running / 179 errors / 37% coverage ] ****** [181 done /157 queued / 16 running / 180 errors / 37% coverage ] ****** [181 done /157 queued / 16 running / 180 errors / 37% coverage ] ****** [182 done /158 queued / 16 running / 181 errors / 37% coverage ] ****** [182 done /158 queued / 16 running / 181 errors / 37% coverage ] ****** [183 done /160 queued / 16 running / 182 errors / 37% coverage ] ****** [183 done /160 queued / 16 running / 182 errors / 37% coverage ] ****** [184 done /161 queued / 16 running / 183 errors / 37% coverage ] ****** [184 done /161 queued / 16 running / 183 errors / 37% coverage ] ****** [185 done /162 queued / 16 running / 184 errors / 37% coverage ] ****** [185 done /162 queued / 16 running / 184 errors / 37% coverage ] ****** [186 done /165 queued / 16 running / 185 errors / 37% coverage ] ****** [186 done /165 queued / 16 running / 185 errors / 37% coverage ] ****** [187 done /166 queued / 16 running / 186 errors / 37% coverage ] ****** [187 done /166 queued / 16 running / 186 errors / 37% coverage ] ****** [188 done /168 queued / 16 running / 187 errors / 37% coverage ] ****** [188 done /168 queued / 16 running / 187 errors / 37% coverage ] ****** [189 done /170 queued / 16 running / 188 errors / 37% coverage ] ****** [189 done /170 queued / 16 running / 188 errors / 37% coverage ] ****** [190 done /172 queued / 16 running / 189 errors / 37% coverage ] ****** [190 done /172 queued / 16 running / 189 errors / 37% coverage ] ****** [191 done /173 queued / 16 running / 190 errors / 37% coverage ] ****** [191 done /173 queued / 16 running / 190 errors / 37% coverage ] ****** [192 done /175 queued / 16 running / 191 errors / 37% coverage ] ****** [192 done /175 queued / 16 running / 191 errors / 37% coverage ] ****** [193 done /176 queued / 16 running / 192 errors / 37% coverage ] ****** [193 done /176 queued / 16 running / 192 errors / 37% coverage ] ****** [194 done /177 queued / 16 running / 193 errors / 37% coverage ] ****** [194 done /177 queued / 16 running / 193 errors / 37% coverage ] ****** [195 done /180 queued / 16 running / 194 errors / 37% coverage ] ****** [195 done /180 queued / 16 running / 194 errors / 37% coverage ] ****** [196 done /183 queued / 16 running / 195 errors / 37% coverage ] ****** [196 done /183 queued / 16 running / 195 errors / 37% coverage ] ****** [197 done /187 queued / 16 running / 196 errors / 37% coverage ] ****** [197 done /187 queued / 16 running / 196 errors / 37% coverage ] ****** [198 done /189 queued / 16 running / 197 errors / 37% coverage ] ****** [198 done /189 queued / 16 running / 197 errors / 37% coverage ] ****** [199 done /192 queued / 16 running / 198 errors / 37% coverage ] ****** [199 done /192 queued / 16 running / 198 errors / 37% coverage ] ****** [200 done /195 queued / 16 running / 199 errors / 37% coverage ] ****** [200 done /195 queued / 16 running / 199 errors / 37% coverage ] ****** [201 done /195 queued / 16 running / 200 errors / 37% coverage ] ****** [201 done /195 queued / 16 running / 200 errors / 37% coverage ] ****** [202 done /197 queued / 16 running / 201 errors / 37% coverage ] ****** [202 done /197 queued / 16 running / 201 errors / 37% coverage ] ****** [203 done /198 queued / 16 running / 202 errors / 37% coverage ] ****** [203 done /198 queued / 16 running / 202 errors / 37% coverage ] ****** [204 done /200 queued / 16 running / 203 errors / 37% coverage ] ****** [204 done /200 queued / 16 running / 203 errors / 37% coverage ] ****** [205 done /204 queued / 16 running / 204 errors / 37% coverage ] ****** [205 done /204 queued / 16 running / 204 errors / 37% coverage ] ****** [206 done /204 queued / 16 running / 205 errors / 37% coverage ] ****** [206 done /204 queued / 16 running / 205 errors / 37% coverage ] ****** [207 done /204 queued / 16 running / 206 errors / 37% coverage ] ****** [207 done /204 queued / 16 running / 206 errors / 37% coverage ] ****** [208 done /205 queued / 16 running / 207 errors / 37% coverage ] ****** [208 done /205 queued / 16 running / 207 errors / 37% coverage ] ****** [209 done /205 queued / 16 running / 208 errors / 37% coverage ] ****** [209 done /205 queued / 16 running / 208 errors / 37% coverage ] ****** [210 done /206 queued / 16 running / 209 errors / 37% coverage ] ****** [210 done /206 queued / 16 running / 209 errors / 37% coverage ] ****** [211 done /207 queued / 16 running / 210 errors / 37% coverage ] ****** [211 done /207 queued / 16 running / 210 errors / 37% coverage ] ****** [212 done /208 queued / 16 running / 211 errors / 37% coverage ] ****** [212 done /208 queued / 16 running / 211 errors / 37% coverage ] ****** [213 done /209 queued / 16 running / 212 errors / 37% coverage ] ****** [213 done /209 queued / 16 running / 212 errors / 37% coverage ] ****** [214 done /210 queued / 16 running / 213 errors / 37% coverage ] ****** [214 done /210 queued / 16 running / 213 errors / 37% coverage ] ****** [215 done /211 queued / 16 running / 214 errors / 37% coverage ] ****** [215 done /211 queued / 16 running / 214 errors / 37% coverage ] ****** [216 done /212 queued / 16 running / 215 errors / 37% coverage ] ****** [216 done /212 queued / 16 running / 215 errors / 37% coverage ] ****** [217 done /212 queued / 16 running / 216 errors / 37% coverage ] ****** [217 done /212 queued / 16 running / 216 errors / 37% coverage ] ****** [218 done /212 queued / 16 running / 217 errors / 37% coverage ] ****** [218 done /212 queued / 16 running / 217 errors / 37% coverage ] ****** [219 done /212 queued / 16 running / 218 errors / 37% coverage ] ****** [219 done /212 queued / 16 running / 218 errors / 37% coverage ] ****** [220 done /213 queued / 16 running / 219 errors / 37% coverage ] ****** [220 done /213 queued / 16 running / 219 errors / 37% coverage ] ****** [221 done /214 queued / 16 running / 220 errors / 37% coverage ] ****** [221 done /214 queued / 16 running / 220 errors / 37% coverage ] ****** [222 done /214 queued / 16 running / 221 errors / 37% coverage ] ****** [222 done /214 queued / 16 running / 221 errors / 37% coverage ] ****** [223 done /215 queued / 16 running / 222 errors / 37% coverage ] ****** [223 done /215 queued / 16 running / 222 errors / 37% coverage ] ****** [224 done /215 queued / 16 running / 223 errors / 37% coverage ] ****** [224 done /215 queued / 16 running / 223 errors / 37% coverage ] ****** [225 done /215 queued / 16 running / 224 errors / 37% coverage ] ****** [225 done /215 queued / 16 running / 224 errors / 37% coverage ] ****** [226 done /216 queued / 16 running / 225 errors / 37% coverage ] ****** [226 done /216 queued / 16 running / 225 errors / 37% coverage ] ****** [227 done /216 queued / 16 running / 226 errors / 37% coverage ] ****** [227 done /216 queued / 16 running / 226 errors / 37% coverage ] ****** [228 done /216 queued / 16 running / 227 errors / 37% coverage ] ****** [228 done /216 queued / 16 running / 227 errors / 37% coverage ] ****** [229 done /216 queued / 16 running / 228 errors / 37% coverage ] ****** [229 done /216 queued / 16 running / 228 errors / 37% coverage ] ****** [230 done /217 queued / 16 running / 229 errors / 37% coverage ] ****** [230 done /217 queued / 16 running / 229 errors / 37% coverage ] ****** [231 done /218 queued / 16 running / 230 errors / 37% coverage ] ****** [231 done /218 queued / 16 running / 230 errors / 37% coverage ] ****** [232 done /219 queued / 16 running / 231 errors / 37% coverage ] ****** [232 done /219 queued / 16 running / 231 errors / 37% coverage ] ****** [233 done /219 queued / 16 running / 232 errors / 37% coverage ] ****** [233 done /219 queued / 16 running / 232 errors / 37% coverage ] ****** [234 done /219 queued / 16 running / 233 errors / 37% coverage ] ****** [234 done /219 queued / 16 running / 233 errors / 37% coverage ] ****** [235 done /221 queued / 16 running / 234 errors / 37% coverage ] ****** [235 done /221 queued / 16 running / 234 errors / 37% coverage ] ****** [236 done /221 queued / 16 running / 235 errors / 37% coverage ] ****** [236 done /221 queued / 16 running / 235 errors / 37% coverage ] ****** [237 done /221 queued / 16 running / 236 errors / 37% coverage ] ****** [237 done /221 queued / 16 running / 236 errors / 37% coverage ] ****** [238 done /221 queued / 16 running / 237 errors / 37% coverage ] ****** [238 done /221 queued / 16 running / 237 errors / 37% coverage ] ****** [239 done /222 queued / 16 running / 238 errors / 37% coverage ] ****** [239 done /222 queued / 16 running / 238 errors / 37% coverage ] ****** [240 done /222 queued / 16 running / 239 errors / 37% coverage ] ****** [240 done /222 queued / 16 running / 239 errors / 37% coverage ] ****** [241 done /223 queued / 16 running / 240 errors / 37% coverage ] ****** [241 done /223 queued / 16 running / 240 errors / 37% coverage ] ****** [242 done /223 queued / 16 running / 241 errors / 37% coverage ] ****** [242 done /223 queued / 16 running / 241 errors / 37% coverage ] ****** [243 done /227 queued / 16 running / 242 errors / 37% coverage ] ****** [243 done /227 queued / 16 running / 242 errors / 37% coverage ] ****** [244 done /228 queued / 16 running / 243 errors / 37% coverage ] ****** [244 done /228 queued / 16 running / 243 errors / 37% coverage ] ****** [245 done /229 queued / 16 running / 244 errors / 37% coverage ] ****** [245 done /229 queued / 16 running / 244 errors / 37% coverage ] ****** [246 done /233 queued / 16 running / 245 errors / 37% coverage ] ****** [246 done /233 queued / 16 running / 245 errors / 37% coverage ] ****** [247 done /237 queued / 16 running / 246 errors / 37% coverage ] ****** [247 done /237 queued / 16 running / 246 errors / 37% coverage ] ****** [248 done /238 queued / 16 running / 247 errors / 37% coverage ] ****** [248 done /238 queued / 16 running / 247 errors / 37% coverage ] ****** [249 done /239 queued / 16 running / 248 errors / 37% coverage ] ****** [249 done /239 queued / 16 running / 248 errors / 37% coverage ] ****** [250 done /240 queued / 16 running / 249 errors / 37% coverage ] ****** [250 done /240 queued / 16 running / 249 errors / 37% coverage ] ****** [251 done /242 queued / 16 running / 250 errors / 37% coverage ] ****** [251 done /242 queued / 16 running / 250 errors / 37% coverage ] ****** [252 done /243 queued / 16 running / 251 errors / 37% coverage ] ****** [252 done /243 queued / 16 running / 251 errors / 37% coverage ] ****** [253 done /244 queued / 16 running / 252 errors / 37% coverage ] ****** [253 done /244 queued / 16 running / 252 errors / 37% coverage ] ****** [254 done /245 queued / 16 running / 253 errors / 37% coverage ] ****** [254 done /245 queued / 16 running / 253 errors / 37% coverage ] ****** [255 done /246 queued / 16 running / 254 errors / 37% coverage ] ****** [255 done /246 queued / 16 running / 254 errors / 37% coverage ] ****** [256 done /247 queued / 16 running / 255 errors / 37% coverage ] ****** [256 done /247 queued / 16 running / 255 errors / 37% coverage ] ****** [257 done /248 queued / 16 running / 256 errors / 37% coverage ] ****** [257 done /248 queued / 16 running / 256 errors / 37% coverage ] ****** [258 done /249 queued / 16 running / 257 errors / 37% coverage ] ****** [258 done /249 queued / 16 running / 257 errors / 37% coverage ] ****** [259 done /250 queued / 16 running / 258 errors / 37% coverage ] ****** [259 done /250 queued / 16 running / 258 errors / 37% coverage ] ****** [260 done /252 queued / 16 running / 259 errors / 37% coverage ] ****** [260 done /252 queued / 16 running / 259 errors / 37% coverage ] ****** [261 done /252 queued / 16 running / 260 errors / 37% coverage ] ****** [261 done /252 queued / 16 running / 260 errors / 37% coverage ] ****** [262 done /253 queued / 16 running / 261 errors / 37% coverage ] ****** [262 done /253 queued / 16 running / 261 errors / 37% coverage ] ****** [263 done /254 queued / 16 running / 262 errors / 37% coverage ] ****** [263 done /254 queued / 16 running / 262 errors / 37% coverage ] ****** [264 done /254 queued / 16 running / 263 errors / 37% coverage ] ****** [264 done /254 queued / 16 running / 263 errors / 37% coverage ] ****** [265 done /255 queued / 16 running / 264 errors / 37% coverage ] ****** [265 done /255 queued / 16 running / 264 errors / 37% coverage ] ****** [266 done /255 queued / 16 running / 265 errors / 37% coverage ] ****** [266 done /255 queued / 16 running / 265 errors / 37% coverage ] ****** [267 done /255 queued / 16 running / 266 errors / 37% coverage ] ****** [267 done /255 queued / 16 running / 266 errors / 37% coverage ] ****** [268 done /255 queued / 16 running / 267 errors / 37% coverage ] ****** [268 done /255 queued / 16 running / 267 errors / 37% coverage ] ****** [269 done /259 queued / 16 running / 268 errors / 37% coverage ] ****** [269 done /259 queued / 16 running / 268 errors / 37% coverage ] ****** [270 done /259 queued / 16 running / 269 errors / 37% coverage ] ****** [270 done /259 queued / 16 running / 269 errors / 37% coverage ] ****** [271 done /260 queued / 16 running / 270 errors / 37% coverage ] ****** [271 done /260 queued / 16 running / 270 errors / 37% coverage ] ****** [272 done /261 queued / 16 running / 271 errors / 37% coverage ] ****** [272 done /261 queued / 16 running / 271 errors / 37% coverage ] ****** [273 done /262 queued / 16 running / 272 errors / 37% coverage ] ****** [273 done /262 queued / 16 running / 272 errors / 37% coverage ] ****** [274 done /264 queued / 16 running / 273 errors / 37% coverage ] ****** [274 done /264 queued / 16 running / 273 errors / 37% coverage ] ****** [275 done /266 queued / 16 running / 274 errors / 37% coverage ] ****** [275 done /266 queued / 16 running / 274 errors / 37% coverage ] ****** [276 done /267 queued / 16 running / 275 errors / 37% coverage ] ****** [276 done /267 queued / 16 running / 275 errors / 37% coverage ] ****** [277 done /270 queued / 16 running / 276 errors / 37% coverage ] ****** [277 done /270 queued / 16 running / 276 errors / 37% coverage ] ****** [278 done /272 queued / 16 running / 277 errors / 37% coverage ] ****** [278 done /272 queued / 16 running / 277 errors / 37% coverage ] ****** [279 done /276 queued / 16 running / 278 errors / 37% coverage ] ****** [279 done /276 queued / 16 running / 278 errors / 37% coverage ] ****** [280 done /277 queued / 16 running / 279 errors / 37% coverage ] ****** [280 done /277 queued / 16 running / 279 errors / 37% coverage ] ****** [281 done /278 queued / 16 running / 280 errors / 37% coverage ] ****** [281 done /278 queued / 16 running / 280 errors / 37% coverage ] ****** [282 done /282 queued / 16 running / 281 errors / 37% coverage ] ****** [282 done /282 queued / 16 running / 281 errors / 37% coverage ] ****** [283 done /283 queued / 16 running / 282 errors / 37% coverage ] ****** [283 done /283 queued / 16 running / 282 errors / 37% coverage ] ****** [284 done /285 queued / 16 running / 283 errors / 37% coverage ] ****** [284 done /285 queued / 16 running / 283 errors / 37% coverage ] ****** [285 done /285 queued / 16 running / 284 errors / 37% coverage ] ****** [285 done /285 queued / 16 running / 284 errors / 37% coverage ] ****** [286 done /286 queued / 16 running / 285 errors / 37% coverage ] ****** [286 done /286 queued / 16 running / 285 errors / 37% coverage ] ****** [287 done /286 queued / 16 running / 286 errors / 37% coverage ] ****** [287 done /286 queued / 16 running / 286 errors / 37% coverage ] ****** [288 done /286 queued / 16 running / 287 errors / 37% coverage ] ****** [288 done /286 queued / 16 running / 287 errors / 37% coverage ] ****** [289 done /288 queued / 16 running / 288 errors / 37% coverage ] ****** [289 done /288 queued / 16 running / 288 errors / 37% coverage ] ****** [290 done /289 queued / 16 running / 289 errors / 37% coverage ] ****** [290 done /289 queued / 16 running / 289 errors / 37% coverage ] ****** [291 done /289 queued / 16 running / 290 errors / 37% coverage ] ****** [291 done /289 queued / 16 running / 290 errors / 37% coverage ] ****** [292 done /290 queued / 16 running / 291 errors / 37% coverage ] ****** [292 done /290 queued / 16 running / 291 errors / 37% coverage ] ****** [293 done /290 queued / 16 running / 292 errors / 37% coverage ] ****** [293 done /290 queued / 16 running / 292 errors / 37% coverage ] ****** [294 done /291 queued / 16 running / 293 errors / 37% coverage ] ****** [294 done /291 queued / 16 running / 293 errors / 37% coverage ] ****** [295 done /294 queued / 16 running / 294 errors / 37% coverage ] ****** [295 done /294 queued / 16 running / 294 errors / 37% coverage ] ****** [296 done /294 queued / 16 running / 295 errors / 37% coverage ] ****** [296 done /294 queued / 16 running / 295 errors / 37% coverage ] ****** [297 done /295 queued / 16 running / 296 errors / 37% coverage ] ****** [297 done /295 queued / 16 running / 296 errors / 37% coverage ] ****** [298 done /296 queued / 16 running / 297 errors / 37% coverage ] ****** [298 done /296 queued / 16 running / 297 errors / 37% coverage ] ****** [299 done /296 queued / 16 running / 298 errors / 37% coverage ] ****** [299 done /296 queued / 16 running / 298 errors / 37% coverage ] ****** [300 done /298 queued / 16 running / 299 errors / 37% coverage ] ****** [300 done /298 queued / 16 running / 299 errors / 37% coverage ] ****** [301 done /298 queued / 16 running / 300 errors / 37% coverage ] ****** [301 done /298 queued / 16 running / 300 errors / 37% coverage ] ****** [302 done /298 queued / 16 running / 301 errors / 37% coverage ] ****** [302 done /298 queued / 16 running / 301 errors / 37% coverage ] ****** [303 done /298 queued / 16 running / 302 errors / 37% coverage ] ****** [303 done /298 queued / 16 running / 302 errors / 37% coverage ] ****** [304 done /298 queued / 16 running / 303 errors / 37% coverage ] ****** [304 done /298 queued / 16 running / 303 errors / 37% coverage ] ****** [305 done /299 queued / 16 running / 304 errors / 37% coverage ] ****** [305 done /299 queued / 16 running / 304 errors / 37% coverage ] ****** [306 done /299 queued / 16 running / 305 errors / 37% coverage ] ****** [306 done /299 queued / 16 running / 305 errors / 37% coverage ] ****** [307 done /300 queued / 16 running / 306 errors / 37% coverage ] ****** [307 done /300 queued / 16 running / 306 errors / 37% coverage ] ****** [308 done /302 queued / 16 running / 307 errors / 37% coverage ] ****** [308 done /302 queued / 16 running / 307 errors / 37% coverage ] ****** [309 done /303 queued / 16 running / 308 errors / 37% coverage ] ****** [309 done /303 queued / 16 running / 308 errors / 37% coverage ] ****** [310 done /303 queued / 16 running / 309 errors / 37% coverage ] ****** [310 done /303 queued / 16 running / 309 errors / 37% coverage ] ****** [311 done /304 queued / 16 running / 310 errors / 37% coverage ] ****** [311 done /304 queued / 16 running / 310 errors / 37% coverage ] ****** [312 done /304 queued / 16 running / 311 errors / 37% coverage ] ****** [312 done /304 queued / 16 running / 311 errors / 37% coverage ] ****** [313 done /304 queued / 16 running / 312 errors / 37% coverage ] ****** [313 done /304 queued / 16 running / 312 errors / 37% coverage ] ****** [314 done /304 queued / 16 running / 313 errors / 37% coverage ] ****** [314 done /304 queued / 16 running / 313 errors / 37% coverage ] ****** [315 done /305 queued / 16 running / 314 errors / 37% coverage ] ****** [315 done /305 queued / 16 running / 314 errors / 37% coverage ] ****** [316 done /305 queued / 16 running / 315 errors / 37% coverage ] ****** [316 done /305 queued / 16 running / 315 errors / 37% coverage ] ****** [317 done /306 queued / 16 running / 316 errors / 37% coverage ] ****** [317 done /306 queued / 16 running / 316 errors / 37% coverage ] ****** [318 done /308 queued / 16 running / 317 errors / 37% coverage ] ****** [318 done /308 queued / 16 running / 317 errors / 37% coverage ] ****** [319 done /310 queued / 16 running / 318 errors / 37% coverage ] ****** [319 done /310 queued / 16 running / 318 errors / 37% coverage ] ****** [320 done /311 queued / 16 running / 319 errors / 37% coverage ] ****** [320 done /311 queued / 16 running / 319 errors / 37% coverage ] ****** [321 done /313 queued / 16 running / 320 errors / 37% coverage ] ****** [321 done /313 queued / 16 running / 320 errors / 37% coverage ] ****** [322 done /314 queued / 16 running / 321 errors / 37% coverage ] ****** [322 done /314 queued / 16 running / 321 errors / 37% coverage ] ****** [323 done /317 queued / 16 running / 322 errors / 37% coverage ] ****** [323 done /317 queued / 16 running / 322 errors / 37% coverage ] ****** [324 done /318 queued / 16 running / 323 errors / 37% coverage ] ****** [324 done /318 queued / 16 running / 323 errors / 37% coverage ] ****** [325 done /319 queued / 16 running / 324 errors / 37% coverage ] ****** [325 done /319 queued / 16 running / 324 errors / 37% coverage ] ****** [326 done /320 queued / 16 running / 325 errors / 37% coverage ] ****** [326 done /320 queued / 16 running / 325 errors / 37% coverage ] ****** [327 done /321 queued / 16 running / 326 errors / 37% coverage ] ****** [327 done /321 queued / 16 running / 326 errors / 37% coverage ] ****** [328 done /322 queued / 16 running / 327 errors / 37% coverage ] ****** [328 done /322 queued / 16 running / 327 errors / 37% coverage ] ****** [329 done /322 queued / 16 running / 328 errors / 37% coverage ] ****** [329 done /322 queued / 16 running / 328 errors / 37% coverage ] ****** [330 done /323 queued / 16 running / 329 errors / 37% coverage ] ****** [330 done /323 queued / 16 running / 329 errors / 37% coverage ] ****** [331 done /324 queued / 16 running / 330 errors / 37% coverage ] ****** [331 done /324 queued / 16 running / 330 errors / 37% coverage ] ****** [332 done /326 queued / 16 running / 331 errors / 37% coverage ] ****** [332 done /326 queued / 16 running / 331 errors / 37% coverage ] ****** [333 done /327 queued / 16 running / 332 errors / 37% coverage ] ****** [333 done /327 queued / 16 running / 332 errors / 37% coverage ] ****** [334 done /329 queued / 16 running / 333 errors / 37% coverage ] ****** [334 done /329 queued / 16 running / 333 errors / 37% coverage ] ****** [335 done /331 queued / 16 running / 334 errors / 37% coverage ] ****** [335 done /331 queued / 16 running / 334 errors / 37% coverage ] ****** [336 done /333 queued / 16 running / 335 errors / 37% coverage ] ****** [336 done /333 queued / 16 running / 335 errors / 37% coverage ] ****** [337 done /333 queued / 16 running / 336 errors / 37% coverage ] ****** [337 done /333 queued / 16 running / 336 errors / 37% coverage ] ****** [338 done /333 queued / 16 running / 337 errors / 37% coverage ] ****** [338 done /333 queued / 16 running / 337 errors / 37% coverage ] ****** [339 done /337 queued / 16 running / 338 errors / 37% coverage ] ****** [339 done /337 queued / 16 running / 338 errors / 37% coverage ] ****** [340 done /340 queued / 16 running / 339 errors / 37% coverage ] ****** [340 done /340 queued / 16 running / 339 errors / 37% coverage ] ****** [341 done /341 queued / 16 running / 340 errors / 37% coverage ] ****** [341 done /341 queued / 16 running / 340 errors / 37% coverage ] ****** [342 done /343 queued / 16 running / 341 errors / 37% coverage ] ****** [342 done /343 queued / 16 running / 341 errors / 37% coverage ] ****** [343 done /347 queued / 16 running / 342 errors / 37% coverage ] ****** [343 done /347 queued / 16 running / 342 errors / 37% coverage ] ****** [344 done /348 queued / 16 running / 343 errors / 37% coverage ] ****** [344 done /348 queued / 16 running / 343 errors / 37% coverage ] ****** [345 done /349 queued / 16 running / 344 errors / 37% coverage ] ****** [345 done /349 queued / 16 running / 344 errors / 37% coverage ] ****** [346 done /351 queued / 16 running / 345 errors / 37% coverage ] ****** [346 done /351 queued / 16 running / 345 errors / 37% coverage ] ****** [347 done /352 queued / 16 running / 346 errors / 37% coverage ] ****** [347 done /352 queued / 16 running / 346 errors / 37% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","fromCharCode","create","bind","bound ","apply","toString","isArray","getOSType"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0,"Switcher":false,"Target_Switch_Base":0} start 0.0649 took 30.0358s
*-- Test Case {"Switcher":true,"Target_Switch_Base":0,"_bound":1,"ExpansionArg_type":0} start 30.6148 took 28.8304s
*-- Errors occured in test {"Switcher":true,"Target_Switch_Base":0,"_bound":1,"ExpansionArg_type":0}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"Target_Switch_Base":0,"_bound":1}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":1,"_bound":2} start 59.6903 took 29.6779s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":1,"_bound":2}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":1,"_bound":2}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":2,"_bound":3,"ExpansionArg_int":0} start 89.5757 took 29.0605s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":2,"_bound":3,"ExpansionArg_int":0}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":2,"_bound":3}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":2,"ExpansionArg_int":3,"_bound":5} start 119.0179 took 29.0309s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":2,"ExpansionArg_int":3,"_bound":5}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":2,"ExpansionArg_int":3,"_bound":5}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":3,"ExpansionArg_int":0,"_bound":4,"ExpansionArg_string":"PureString"} start 118.8309 took 30.4647s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":3,"ExpansionArg_int":0,"_bound":4,"ExpansionArg_string":"PureString"}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":3,"ExpansionArg_int":0,"_bound":4}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_string":"","_bound":5,"ExpansionArg_array_length":0} start 149.4831 took 30.2588s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_string":"","_bound":5,"ExpansionArg_array_length":0}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_string":"","_bound":5}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":3,"ExpansionArg_string":"","_bound":6} start 149.5832 took 31.0713s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":3,"ExpansionArg_string":"","_bound":6}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":3,"ExpansionArg_string":"","_bound":6}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"_bound":7,"ExpansionArg_array_element_0_type":0} start 179.9427 took 29.5366s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"_bound":7,"ExpansionArg_array_element_0_type":0}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"_bound":7}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"_bound":6,"ExpansionArg_bool":false} start 180.0018 took 30.0951s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"_bound":6,"ExpansionArg_bool":false}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"_bound":6}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":8,"ExpansionArg_array_element_0_int":0} start 209.7291 took 28.1698s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":8,"ExpansionArg_array_element_0_int":0}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"_bound":8}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":9,"ExpansionArg_array_element_1_type":0} start 209.8104 took 28.5801s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":9,"ExpansionArg_array_element_1_type":0}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":9}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":5,"ExpansionArg_bool":true,"_bound":7} start 210.3244 took 29.6455s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":5,"ExpansionArg_bool":true,"_bound":7}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":5,"ExpansionArg_bool":true,"_bound":7}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":10} start 238.6496 took 26.5951s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":10}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":10}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":9} start 238.1634 took 27.6896s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":9}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"_bound":9}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"_bound":11,"ExpansionArg_array_element_2_type":0} start 238.7167 took 27.8998s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"_bound":11,"ExpansionArg_array_element_2_type":0}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"_bound":11}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"_bound":11,"ExpansionArg_array_element_1_type":0} start 238.247 took 29.3217s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"_bound":11,"ExpansionArg_array_element_1_type":0}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"_bound":11}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"_bound":10,"ExpansionArg_array_element_0_string":"PureString"} start 238.1079 took 32.0054s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"_bound":10,"ExpansionArg_array_element_0_string":"PureString"}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"_bound":10}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"_bound":11,"ExpansionArg_array_element_1_string":"PureString"} start 265.469 took 30.1824s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"_bound":11,"ExpansionArg_array_element_1_string":"PureString"}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"_bound":11}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"_bound":12} start 266.9036 took 29.2983s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"_bound":12}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"_bound":12}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"_bound":10,"ExpansionArg_array_element_1_type":0} start 266.0622 took 32.4366s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"_bound":10,"ExpansionArg_array_element_1_type":0}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":1,"_bound":10}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","_bound":11,"ExpansionArg_array_element_0_bool":false} start 270.2843 took 29.4748s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","_bound":11,"ExpansionArg_array_element_0_bool":false}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","_bound":11}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":1,"_bound":12} start 267.7805 took 32.4447s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":1,"_bound":12}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":1,"_bound":12}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","_bound":12,"ExpansionArg_array_element_1_type":0} start 270.3439 took 29.8814s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","_bound":12,"ExpansionArg_array_element_1_type":0}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","_bound":12}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"_bound":13,"ExpansionArg_array_element_3_type":0} start 266.7971 took 34.4407s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"_bound":13,"ExpansionArg_array_element_3_type":0}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"_bound":13}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":12,"ExpansionArg_array_element_2_type":0} start 265.5328 took 35.7159s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":12,"ExpansionArg_array_element_2_type":0}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"_bound":12}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"_bound":13,"ExpansionArg_array_element_2_type":0} start 267.8863 took 36.5748s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"_bound":13,"ExpansionArg_array_element_2_type":0}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpansionArg_array_element_1_type":0,"_bound":13}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"_bound":14,"ExpansionArg_array_element_3_type":0} start 296.4659 took 27.2781s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"_bound":14,"ExpansionArg_array_element_3_type":0}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"_bound":14}'
*-- Test Case {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","_bound":12,"ExpansionArg_array_element_1_int":0} start 295.9472 took 28.2649s
*-- Errors occured in test {"Switcher":true,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","_bound":12,"ExpansionArg_array_element_1_int":0}
* Error: Tropigate failed because SyntaxError: Assigning to rvalue (71:12) on program /*!
 * Copyright (C) 2017 Glayzzle (BSD3 License)
 * @authors https://github.com/glayzzle/php-transpiler/graphs/contributors
 * @url http://glayzzle.com
 */
'use strict';
module.exports = function($php) {

  const E_NOTICE = $php.context.constant.get('E_NOTICE');
  const E_WARNING = $php.context.constant.get('E_WARNING');

  // http://php.net/manual/en/function.define.php
  $php.context.function.declare(
    '\\define', [
      {name: 'name', type: 'string'},
      {name: 'value', type: 'mixed'},
      {name: 'case_insensitive', type: 'bool', default: false}
    ],
    'bool', function define(name, value, case_insensitive) {
      if (case_insensitive) {
        name = name.toUpperCase();
      }
      if ($php.context.constant.has(name)) {
        $php.trigger_error(
          'Constant ' + name + ' is already defined', E_NOTICE
        );
        return false;
      }
      return $php.context.constant.set(name, value);
    }
  );

  // http://php.net/manual/en/function.defined.php
  $php.context.function.declare(
    '\\defined', [
      {name: 'name', type: 'string'}
    ],
    'bool', function defined(name) {
      return $php.context.constant.has(name, value);
    }
  );

  // http://php.net/manual/en/function.constant.php
  $php.context.function.declare(
    '\\constant', [
      {name: 'name', type: 'string'}
    ],
    'mixed', function constant(name) {
      var result = $php.context.constant.get(name);
      if (typeof result === 'undefined') {
        $php.trigger_error('Use of undefined constant '+name+' - assumed \''+name+'\'', E_NOTICE);
        return name;
      }
      return result;
    }
  );

  // http://php.net/manual/en/function.get-defined-constants.php
  $php.context.function.declare(
    '\\get_defined_constants', [
      {name: 'categorize', type: 'bool', default: false}
    ],
    'array', function defined(categorize) {
      var result = $php.array();
      var items = $php.context.constant.items;
      if (categorize) {
        var categories = {};
        for(var k in items) {
          var item = items[k];
          if (!result.isset(item.category)) {
            result.set(item.category) = $php.array();
          }
          result.get(item.category).set(k, item.value);
        }
      } else {
        for(var k in items) {
          result.set(k, items[k].value);
        }
      }
      return result;
    }
  );

  /** register global functions **/
  $php.constant = $php.context.function.callback('\\constant');
};
 at SyntaxError: Assigning to rvalue (71:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.toAssignable (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1344:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1604:46)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:709:33)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseIfStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:824:28)
