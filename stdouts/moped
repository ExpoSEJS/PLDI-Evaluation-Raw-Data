/root/Targets/moped
├─┬ moped@0.6.3 
│ ├─┬ body-parser@1.18.2 
│ │ ├── bytes@3.0.0 
│ │ ├── content-type@1.0.4 
│ │ ├─┬ debug@2.6.9 
│ │ │ └── ms@2.0.0 
│ │ ├── depd@1.1.1 
│ │ ├─┬ http-errors@1.6.2 
│ │ │ ├── setprototypeof@1.0.3 
│ │ │ └── statuses@1.3.1 
│ │ ├── iconv-lite@0.4.19 
│ │ ├─┬ on-finished@2.3.0 
│ │ │ └── ee-first@1.1.1 
│ │ ├── qs@6.5.1 
│ │ ├─┬ raw-body@2.3.2 
│ │ │ └── unpipe@1.0.0 
│ │ └─┬ type-is@1.6.15 
│ │   ├── media-typer@0.3.0 
│ │   └─┬ mime-types@2.1.17 
│ │     └── mime-db@1.30.0 
│ ├─┬ browserify@9.0.8 
│ │ ├── assert@1.3.0 
│ │ ├─┬ browser-pack@4.0.4 
│ │ │ ├─┬ combine-source-map@0.3.0 
│ │ │ │ ├── convert-source-map@0.3.5 
│ │ │ │ ├─┬ inline-source-map@0.3.1 
│ │ │ │ │ └── source-map@0.3.0 
│ │ │ │ └── source-map@0.1.43 
│ │ │ ├── defined@1.0.0 
│ │ │ ├── JSONStream@1.3.1 
│ │ │ ├─┬ through2@0.5.1 
│ │ │ │ └── readable-stream@1.0.34 
│ │ │ └── umd@3.0.1 
│ │ ├─┬ browser-resolve@1.11.2 
│ │ │ └── resolve@1.1.7 
│ │ ├─┬ browserify-zlib@0.1.4 
│ │ │ └── pako@0.2.9 
│ │ ├─┬ buffer@3.6.0 
│ │ │ ├── base64-js@0.0.8 
│ │ │ ├── ieee754@1.1.8 
│ │ │ └── isarray@1.0.0 
│ │ ├── builtins@0.0.7 
│ │ ├── commondir@0.0.1 
│ │ ├─┬ concat-stream@1.4.10 
│ │ │ └── typedarray@0.0.6 
│ │ ├─┬ console-browserify@1.1.0 
│ │ │ └── date-now@0.1.4 
│ │ ├── constants-browserify@0.0.1 
│ │ ├─┬ crypto-browserify@3.11.1 
│ │ │ ├─┬ browserify-cipher@1.0.0 
│ │ │ │ ├─┬ browserify-aes@1.0.8 
│ │ │ │ │ └── buffer-xor@1.0.3 
│ │ │ │ ├─┬ browserify-des@1.0.0 
│ │ │ │ │ └── des.js@1.0.0 
│ │ │ │ └─┬ evp_bytestokey@1.0.3 
│ │ │ │   └─┬ md5.js@1.3.4 
│ │ │ │     └── hash-base@3.0.4 
│ │ │ ├─┬ browserify-sign@4.0.4 
│ │ │ │ ├── bn.js@4.11.8 
│ │ │ │ ├── browserify-rsa@4.0.1 
│ │ │ │ ├─┬ elliptic@6.4.0 
│ │ │ │ │ ├── brorand@1.1.0 
│ │ │ │ │ ├── hash.js@1.1.3 
│ │ │ │ │ ├── hmac-drbg@1.0.1 
│ │ │ │ │ ├── minimalistic-assert@1.0.0 
│ │ │ │ │ └── minimalistic-crypto-utils@1.0.1 
│ │ │ │ └─┬ parse-asn1@5.1.0 
│ │ │ │   └── asn1.js@4.9.1 
│ │ │ ├── create-ecdh@4.0.0 
│ │ │ ├─┬ create-hash@1.1.3 
│ │ │ │ ├── cipher-base@1.0.4 
│ │ │ │ └─┬ ripemd160@2.0.1 
│ │ │ │   └── hash-base@2.0.2 
│ │ │ ├─┬ create-hmac@1.1.6 
│ │ │ │ └── safe-buffer@5.1.1 
│ │ │ ├─┬ diffie-hellman@5.0.2 
│ │ │ │ └── miller-rabin@4.0.0 
│ │ │ ├── pbkdf2@3.0.14 
│ │ │ ├── public-encrypt@4.0.0 
│ │ │ └── randombytes@2.0.5 
│ │ ├── deep-equal@1.0.1 
│ │ ├── defined@0.0.0 
│ │ ├─┬ deps-sort@1.3.9 
│ │ │ └── JSONStream@1.3.1 
│ │ ├── domain-browser@1.1.7 
│ │ ├── duplexer2@0.0.2 
│ │ ├── events@1.0.2 
│ │ ├─┬ glob@4.5.3 
│ │ │ ├─┬ inflight@1.0.6 
│ │ │ │ └── wrappy@1.0.2 
│ │ │ ├── minimatch@2.0.10 
│ │ │ └── once@1.4.0 
│ │ ├─┬ has@1.0.1 
│ │ │ └── function-bind@1.1.1 
│ │ ├─┬ http-browserify@1.7.0 
│ │ │ └── Base64@0.2.1 
│ │ ├── https-browserify@0.0.1 
│ │ ├── inherits@2.0.3 
│ │ ├─┬ insert-module-globals@6.6.3 
│ │ │ ├─┬ combine-source-map@0.6.1 
│ │ │ │ ├── convert-source-map@1.1.3 
│ │ │ │ ├── inline-source-map@0.5.0 
│ │ │ │ ├── lodash.memoize@3.0.4 
│ │ │ │ └── source-map@0.4.4 
│ │ │ ├── is-buffer@1.1.5 
│ │ │ ├── JSONStream@1.3.1 
│ │ │ ├─┬ lexical-scope@1.2.0 
│ │ │ │ └── astw@2.2.0 
│ │ │ ├── process@0.11.10 
│ │ │ └── xtend@4.0.1 
│ │ ├── isarray@0.0.1 
│ │ ├─┬ JSONStream@0.10.0 
│ │ │ └── jsonparse@0.0.5 
│ │ ├─┬ labeled-stream-splicer@1.0.2 
│ │ │ └── stream-splicer@1.3.2 
│ │ ├── os-browserify@0.1.2 
│ │ ├─┬ parents@1.0.1 
│ │ │ └── path-platform@0.11.15 
│ │ ├── path-browserify@0.0.0 
│ │ ├── process@0.10.1 
│ │ ├── punycode@1.2.4 
│ │ ├── querystring-es3@0.2.1 
│ │ ├─┬ read-only-stream@1.1.1 
│ │ │ └── readable-wrap@1.0.0 
│ │ ├─┬ readable-stream@1.1.14 
│ │ │ └── core-util-is@1.0.2 
│ │ ├── shallow-copy@0.0.1 
│ │ ├─┬ shasum@1.0.2 
│ │ │ ├─┬ json-stable-stringify@0.0.1 
│ │ │ │ └── jsonify@0.0.0 
│ │ │ └── sha.js@2.4.9 
│ │ ├── shell-quote@0.0.1 
│ │ ├── stream-browserify@1.0.0 
│ │ ├── string_decoder@0.10.31 
│ │ ├─┬ subarg@1.0.0 
│ │ │ └── minimist@1.2.0 
│ │ ├─┬ syntax-error@1.3.0 
│ │ │ └── acorn@4.0.13 
│ │ ├─┬ through2@1.1.1 
│ │ │ └── xtend@4.0.1 
│ │ ├─┬ timers-browserify@1.4.2 
│ │ │ └── process@0.11.10 
│ │ ├── tty-browserify@0.0.0 
│ │ ├─┬ url@0.10.3 
│ │ │ ├── punycode@1.3.2 
│ │ │ └── querystring@0.2.0 
│ │ ├─┬ util@0.10.3 
│ │ │ └── inherits@2.0.1 
│ │ ├─┬ vm-browserify@0.0.4 
│ │ │ └── indexof@0.0.1 
│ │ └── xtend@3.0.0 
│ ├─┬ envify@3.4.1 
│ │ ├─┬ jstransform@11.0.3 
│ │ │ ├── base62@1.2.0 
│ │ │ ├─┬ commoner@0.10.8 
│ │ │ │ ├── commander@2.11.0 
│ │ │ │ ├─┬ glob@5.0.15 
│ │ │ │ │ └── path-is-absolute@1.0.1 
│ │ │ │ ├── graceful-fs@4.1.11 
│ │ │ │ ├─┬ mkdirp@0.5.1 
│ │ │ │ │ └── minimist@0.0.8 
│ │ │ │ ├── private@0.1.7 
│ │ │ │ ├── q@1.5.0 
│ │ │ │ └─┬ recast@0.11.23 
│ │ │ │   ├── ast-types@0.9.6 
│ │ │ │   ├── esprima@3.1.3 
│ │ │ │   └── source-map@0.5.7 
│ │ │ ├── esprima-fb@15001.1.0-dev-harmony-fb 
│ │ │ └─┬ source-map@0.4.4 
│ │ │   └── amdefine@1.0.1 
│ │ └── through@2.3.8 
│ ├─┬ ert@1.0.1 
│ │ └── character-parser@1.0.2 
│ ├── is-browser@2.0.1 
│ ├─┬ is-browser-transform@1.0.3 
│ │ └── convert-source-map@0.4.1 
│ ├─┬ module-deps@3.9.1 
│ │ ├── defined@1.0.0 
│ │ ├─┬ detective@4.5.0 
│ │ │ └── defined@1.0.0 
│ │ ├─┬ JSONStream@1.3.1 
│ │ │ └── jsonparse@1.3.1 
│ │ ├─┬ stream-combiner2@1.0.2 
│ │ │ └─┬ through2@0.5.1 
│ │ │   └── readable-stream@1.0.34 
│ │ └── xtend@4.0.1 
│ ├─┬ moped-router@3.0.0 
│ │ ├── clone@1.0.2 
│ │ ├── is-promise@2.1.0 
│ │ └── path-to-regexp@1.7.0 
│ ├── object-assign@2.1.1 
│ ├─┬ page@1.7.1 
│ │ └── path-to-regexp@1.2.1 
│ ├─┬ prepare-response@1.1.3 
│ │ ├── mime@1.4.1 
│ │ ├── ms@0.7.3 
│ │ └─┬ promise@7.3.1 
│ │   └── asap@2.0.6 
│ ├─┬ promise@6.1.0 
│ │ └── asap@1.0.0 
│ ├── qs@2.4.2 
│ ├─┬ resolve@1.4.0 
│ │ └── path-parse@1.0.5 
│ ├─┬ then-request@2.2.0 
│ │ ├── caseless@0.11.0 
│ │ ├── http-basic@2.5.1 
│ │ ├── http-response-object@1.1.0 
│ │ ├─┬ promise@7.3.1 
│ │ │ └── asap@2.0.6 
│ │ └── qs@6.5.1 
│ ├─┬ uglify-js@2.8.29 
│ │ ├── source-map@0.5.7 
│ │ ├── uglify-to-browserify@1.0.2 
│ │ └─┬ yargs@3.10.0 
│ │   ├── camelcase@1.2.1 
│ │   ├─┬ cliui@2.1.0 
│ │   │ ├─┬ center-align@0.1.3 
│ │   │ │ ├─┬ align-text@0.1.4 
│ │   │ │ │ ├── kind-of@3.2.2 
│ │   │ │ │ ├── longest@1.0.1 
│ │   │ │ │ └── repeat-string@1.6.1 
│ │   │ │ └── lazy-cache@1.0.4 
│ │   │ ├── right-align@0.1.3 
│ │   │ └── wordwrap@0.0.2 
│ │   ├── decamelize@1.2.0 
│ │   └── window-size@0.1.0 
│ └─┬ uglifyify@3.0.4 
│   ├── convert-source-map@1.1.3 
│   ├── extend@1.3.0 
│   └─┬ minimatch@3.0.4 
│     └─┬ brace-expansion@1.1.8 
│       ├── balanced-match@1.0.0 
│       └── concat-map@0.0.1 
└── UNMET PEER DEPENDENCY react@*

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/moped/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0526 took 2.4017s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program 'use strict';

var assert = require('assert');
var parseJson = require('body-parser').json();
var parseForm = require('body-parser').urlencoded({extended: true});
var assign = require('object-assign');
var compileScript = require('./lib/compile-script.js');
var compileScriptClient = require('./lib/compile-script-client.js');
var BrowserifyCache = require('./lib/browserify-cache.js');

var defaultLayout = require('./lib/default-layout.js');
var transforms = [];
var layoutCompilers = {};

function stringify(obj) {
  var str = JSON.stringify(obj) || '';
  return str.replace(/&/g, '&amp;').replace(/\"/g, '&quot;')
}

function compileLayout(path) {
  var extension = '*';
  if (typeof path === 'string') {
    var pathSplit = path.split('.');
    extension = pathSplit[pathSplit.length - 1];
  }
  if (extension === '*' && !layoutCompilers['*']) {
    throw new Error('There are no layout compilers registered');
  }
  var compiler = layoutCompilers[extension] ||
      layoutCompilers['*'] ||
      (layoutCompilers[extension] = require(extension).compileFile);

  if (!compiler) {
    throw new Error('There are is no layout compiler registered for ' + extension + ' and no default compiler is registered.');
  }

  return compiler(path);
}

exports = (module.exports = runMopedApp);
function runMopedApp(filename, options) {
  options = options || {};
  var scriptBase = options.scriptBase || '/static';
  scriptBase = scriptBase.replace(/^\/|\/$/g, '') + '/';
  var PRODUCTION = typeof options.production === 'boolean' ?
    options.production :
    process.env.NODE_ENV === 'production';
  var serverCache = PRODUCTION ? null : new BrowserifyCache();
  var clientCache = PRODUCTION ? null : new BrowserifyCache();
  var serverScript = compileScript(filename, {
    transforms: transforms,
    cache: serverCache,
    filter: options.filter
  });
  var clientScript = compileScriptClient(filename, {
    transforms: transforms,
    cache: clientCache
  });
  var layout = options.layout ? options.layout : defaultLayout;
  if (typeof layout !== 'function') {
    layout = compileLayout(layout);
  }
  function handle(base, req, res, next) {
    (PRODUCTION ? clientScript : compileScriptClient(filename, {
      transforms: transforms,
      cache: clientCache
    })).then(function (script) {
      var scriptUrl = base + scriptBase + script.etag + '/client.js';
      if (req.originalUrl === scriptUrl) {
        return script.send(req, res, next);
      }
      return (PRODUCTION ? serverScript : compileScript(filename, {
        transforms: transforms,
        cache: serverCache,
        filter: options.filter
      })).then(function (script) {
        return script(req.method.toLowerCase(), req.url, req.user, req.body, base, res.locals._csrf);
      }).then(function (result) {
        if (!result) return next();
        if (result.type === 'component') {
          var html = '<div id="container">' + result.html + '</div>';
          var client = '<script id="client" data-base="' + base +
              '" data-props="' +
              stringify(result.props) + '" data-user="' +
              stringify(req.user) + '" src="' + scriptUrl +
              '" data-csrf="' + res.locals._csrf + '"></script>';

          var locals = assign(
            {},
            req.app && req.app.locals,
            res.locals,
            { component: html, client: client }
          );
          res.send(layout(locals));
        } else if (result.type === 'json') {
          res.json(result.value);
        } else if (result.type === 'redirect') {
          res.redirect(result.location);
        }
      });
    }).done(null, next);
  }
  return function (req, res, next) {
    var base = '/';
    if (req.url === '/') {
      base = req.originalUrl.replace(/\/$/, '') + '/';
    } else if (req.originalUrl !== req.url) {
      if (req.originalUrl.substr(-(req.url.length)) !== req.url) {
        throw new Error('Cannot reconcile mount point from ' + JSON.stringify(req.url) + ' ' + JSON.stringify(req.originalUrl));
      }
      base = req.originalUrl.substr(0, req.originalUrl.length - req.url.length) + '/';
    }
    parseJson(req, res, function (err) {
      if (err) return next(err);
      parseForm(req, res, function (err) {
        if (err) return next(err);
        handle(base, req, res, next);
      });
    });
  };
}

exports.transform = function (tr) {
  var args = [];
  for (var i = 0; i < arguments.length; i++) {
    args.push(arguments[i]);
  }
  transforms.push(args);
};

exports.layout = function (layout) {
  if (typeof layout !== 'function') {
    layout = compileLayout(layout);
  }
  defaultLayout = layout;
};

exports.layoutCompiler = function (extension, fn) {
  if (arguments.length === 1) {
    fn = extension;
    extension = '*';
  }
  assert(typeof extension === 'string', 'Layout extension must be a string');
  assert(typeof fn === 'function', 'Layout compiler must be a function');
  layoutCompilers[extension] = fn;
};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
