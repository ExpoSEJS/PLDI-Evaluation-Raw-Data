/root/Targets/loop54-js-demo
└─┬ loop54-js-demo@0.9.6 
  ├── axios@0.7.0 
  ├── babel@6.23.0 
  ├─┬ babel-core@6.26.0 
  │ ├─┬ babel-code-frame@6.26.0 
  │ │ ├─┬ chalk@1.1.3 
  │ │ │ ├── ansi-styles@2.2.1 
  │ │ │ ├── escape-string-regexp@1.0.5 
  │ │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ │ └── ansi-regex@2.1.1 
  │ │ │ ├── strip-ansi@3.0.1 
  │ │ │ └── supports-color@2.0.0 
  │ │ ├── esutils@2.0.2 
  │ │ └── js-tokens@3.0.2 
  │ ├─┬ babel-generator@6.26.0 
  │ │ ├─┬ detect-indent@4.0.0 
  │ │ │ └─┬ repeating@2.0.1 
  │ │ │   └─┬ is-finite@1.0.2 
  │ │ │     └── number-is-nan@1.0.1 
  │ │ ├── jsesc@1.3.0 
  │ │ └── trim-right@1.0.1 
  │ ├── babel-helpers@6.24.1 
  │ ├── babel-messages@6.23.0 
  │ ├─┬ babel-register@6.26.0 
  │ │ ├── core-js@2.5.1 
  │ │ ├─┬ home-or-tmp@2.0.0 
  │ │ │ ├── os-homedir@1.0.2 
  │ │ │ └── os-tmpdir@1.0.2 
  │ │ ├─┬ mkdirp@0.5.1 
  │ │ │ └── minimist@0.0.8 
  │ │ └── source-map-support@0.4.18 
  │ ├─┬ babel-runtime@6.26.0 
  │ │ └── regenerator-runtime@0.11.0 
  │ ├── babel-template@6.26.0 
  │ ├─┬ babel-traverse@6.26.0 
  │ │ ├── globals@9.18.0 
  │ │ └─┬ invariant@2.2.2 
  │ │   └── loose-envify@1.3.1 
  │ ├─┬ babel-types@6.26.0 
  │ │ └── to-fast-properties@1.0.3 
  │ ├── babylon@6.18.0 
  │ ├── convert-source-map@1.5.0 
  │ ├─┬ debug@2.6.8 
  │ │ └── ms@2.0.0 
  │ ├── json5@0.5.1 
  │ ├── lodash@4.17.4 
  │ ├─┬ minimatch@3.0.4 
  │ │ └─┬ brace-expansion@1.1.8 
  │ │   ├── balanced-match@1.0.0 
  │ │   └── concat-map@0.0.1 
  │ ├── path-is-absolute@1.0.1 
  │ ├── private@0.1.7 
  │ ├── slash@1.0.0 
  │ └── source-map@0.5.7 
  ├─┬ babel-preset-es2015@6.24.1 
  │ ├── babel-plugin-check-es2015-constants@6.22.0 
  │ ├── babel-plugin-transform-es2015-arrow-functions@6.22.0 
  │ ├── babel-plugin-transform-es2015-block-scoped-functions@6.22.0 
  │ ├── babel-plugin-transform-es2015-block-scoping@6.26.0 
  │ ├─┬ babel-plugin-transform-es2015-classes@6.24.1 
  │ │ ├── babel-helper-define-map@6.26.0 
  │ │ ├── babel-helper-function-name@6.24.1 
  │ │ ├── babel-helper-optimise-call-expression@6.24.1 
  │ │ └── babel-helper-replace-supers@6.24.1 
  │ ├── babel-plugin-transform-es2015-computed-properties@6.24.1 
  │ ├── babel-plugin-transform-es2015-destructuring@6.23.0 
  │ ├── babel-plugin-transform-es2015-duplicate-keys@6.24.1 
  │ ├── babel-plugin-transform-es2015-for-of@6.23.0 
  │ ├── babel-plugin-transform-es2015-function-name@6.24.1 
  │ ├── babel-plugin-transform-es2015-literals@6.22.0 
  │ ├── babel-plugin-transform-es2015-modules-amd@6.24.1 
  │ ├─┬ babel-plugin-transform-es2015-modules-commonjs@6.26.0 
  │ │ └── babel-plugin-transform-strict-mode@6.24.1 
  │ ├─┬ babel-plugin-transform-es2015-modules-systemjs@6.24.1 
  │ │ └── babel-helper-hoist-variables@6.24.1 
  │ ├── babel-plugin-transform-es2015-modules-umd@6.24.1 
  │ ├── babel-plugin-transform-es2015-object-super@6.24.1 
  │ ├─┬ babel-plugin-transform-es2015-parameters@6.24.1 
  │ │ ├── babel-helper-call-delegate@6.24.1 
  │ │ └── babel-helper-get-function-arity@6.24.1 
  │ ├── babel-plugin-transform-es2015-shorthand-properties@6.24.1 
  │ ├── babel-plugin-transform-es2015-spread@6.22.0 
  │ ├─┬ babel-plugin-transform-es2015-sticky-regex@6.24.1 
  │ │ └── babel-helper-regex@6.26.0 
  │ ├── babel-plugin-transform-es2015-template-literals@6.22.0 
  │ ├── babel-plugin-transform-es2015-typeof-symbol@6.23.0 
  │ ├─┬ babel-plugin-transform-es2015-unicode-regex@6.24.1 
  │ │ └─┬ regexpu-core@2.0.0 
  │ │   ├── regenerate@1.3.3 
  │ │   ├── regjsgen@0.2.0 
  │ │   └─┬ regjsparser@0.1.5 
  │ │     └── jsesc@0.5.0 
  │ └─┬ babel-plugin-transform-regenerator@6.26.0 
  │   └── regenerator-transform@0.10.1 
  ├─┬ babel-preset-stage-2@6.24.1 
  │ ├── babel-plugin-syntax-dynamic-import@6.18.0 
  │ ├─┬ babel-plugin-transform-class-properties@6.24.1 
  │ │ └── babel-plugin-syntax-class-properties@6.13.0 
  │ ├─┬ babel-plugin-transform-decorators@6.24.1 
  │ │ ├─┬ babel-helper-explode-class@6.24.1 
  │ │ │ └── babel-helper-bindify-decorators@6.24.1 
  │ │ └── babel-plugin-syntax-decorators@6.13.0 
  │ └─┬ babel-preset-stage-3@6.24.1 
  │   ├── babel-plugin-syntax-trailing-function-commas@6.22.0 
  │   ├─┬ babel-plugin-transform-async-generator-functions@6.24.1 
  │   │ ├── babel-helper-remap-async-to-generator@6.24.1 
  │   │ └── babel-plugin-syntax-async-generators@6.13.0 
  │   ├─┬ babel-plugin-transform-async-to-generator@6.24.1 
  │   │ └── babel-plugin-syntax-async-functions@6.13.0 
  │   ├─┬ babel-plugin-transform-exponentiation-operator@6.24.1 
  │   │ ├─┬ babel-helper-builder-binary-assignment-operator-visitor@6.24.1 
  │   │ │ └── babel-helper-explode-assignable-expression@6.24.1 
  │   │ └── babel-plugin-syntax-exponentiation-operator@6.13.0 
  │   └─┬ babel-plugin-transform-object-rest-spread@6.26.0 
  │     └── babel-plugin-syntax-object-rest-spread@6.13.0 
  ├─┬ babelify@7.3.0 
  │ └── object-assign@4.1.1 
  ├─┬ browserify@12.0.2 
  │ ├── assert@1.3.0 
  │ ├─┬ browser-pack@6.0.2 
  │ │ ├─┬ combine-source-map@0.7.2 
  │ │ │ ├── convert-source-map@1.1.3 
  │ │ │ ├── inline-source-map@0.6.2 
  │ │ │ └── lodash.memoize@3.0.4 
  │ │ └── umd@3.0.1 
  │ ├─┬ browser-resolve@1.11.2 
  │ │ └── resolve@1.1.7 
  │ ├─┬ browserify-zlib@0.1.4 
  │ │ └── pako@0.2.9 
  │ ├─┬ buffer@3.6.0 
  │ │ ├── base64-js@0.0.8 
  │ │ ├── ieee754@1.1.8 
  │ │ └── isarray@1.0.0 
  │ ├─┬ concat-stream@1.5.2 
  │ │ ├─┬ readable-stream@2.0.6 
  │ │ │ └── isarray@1.0.0 
  │ │ └── typedarray@0.0.6 
  │ ├─┬ console-browserify@1.1.0 
  │ │ └── date-now@0.1.4 
  │ ├── constants-browserify@1.0.0 
  │ ├─┬ crypto-browserify@3.11.1 
  │ │ ├─┬ browserify-cipher@1.0.0 
  │ │ │ ├─┬ browserify-aes@1.0.8 
  │ │ │ │ └── buffer-xor@1.0.3 
  │ │ │ ├─┬ browserify-des@1.0.0 
  │ │ │ │ └── des.js@1.0.0 
  │ │ │ └─┬ evp_bytestokey@1.0.3 
  │ │ │   └─┬ md5.js@1.3.4 
  │ │ │     └── hash-base@3.0.4 
  │ │ ├─┬ browserify-sign@4.0.4 
  │ │ │ ├── bn.js@4.11.8 
  │ │ │ ├── browserify-rsa@4.0.1 
  │ │ │ ├─┬ elliptic@6.4.0 
  │ │ │ │ ├── brorand@1.1.0 
  │ │ │ │ ├── hash.js@1.1.3 
  │ │ │ │ ├── hmac-drbg@1.0.1 
  │ │ │ │ ├── minimalistic-assert@1.0.0 
  │ │ │ │ └── minimalistic-crypto-utils@1.0.1 
  │ │ │ └─┬ parse-asn1@5.1.0 
  │ │ │   └── asn1.js@4.9.1 
  │ │ ├── create-ecdh@4.0.0 
  │ │ ├─┬ create-hash@1.1.3 
  │ │ │ ├── cipher-base@1.0.4 
  │ │ │ └─┬ ripemd160@2.0.1 
  │ │ │   └── hash-base@2.0.2 
  │ │ ├── create-hmac@1.1.6 
  │ │ ├─┬ diffie-hellman@5.0.2 
  │ │ │ └── miller-rabin@4.0.0 
  │ │ ├── pbkdf2@3.0.14 
  │ │ ├── public-encrypt@4.0.0 
  │ │ └── randombytes@2.0.5 
  │ ├── defined@1.0.0 
  │ ├── deps-sort@2.0.0 
  │ ├── domain-browser@1.1.7 
  │ ├── duplexer2@0.1.4 
  │ ├── events@1.1.1 
  │ ├─┬ glob@5.0.15 
  │ │ ├─┬ inflight@1.0.6 
  │ │ │ └── wrappy@1.0.2 
  │ │ └── once@1.4.0 
  │ ├─┬ has@1.0.1 
  │ │ └── function-bind@1.1.1 
  │ ├── htmlescape@1.1.1 
  │ ├── https-browserify@0.0.1 
  │ ├── inherits@2.0.3 
  │ ├─┬ insert-module-globals@7.0.1 
  │ │ ├── is-buffer@1.1.5 
  │ │ └─┬ lexical-scope@1.2.0 
  │ │   └── astw@2.2.0 
  │ ├── isarray@0.0.1 
  │ ├─┬ JSONStream@1.3.1 
  │ │ ├── jsonparse@1.3.1 
  │ │ └── through@2.3.8 
  │ ├─┬ labeled-stream-splicer@2.0.0 
  │ │ └── stream-splicer@2.0.0 
  │ ├─┬ module-deps@4.1.1 
  │ │ ├── cached-path-relative@1.0.1 
  │ │ ├── detective@4.5.0 
  │ │ └── stream-combiner2@1.1.1 
  │ ├── os-browserify@0.1.2 
  │ ├─┬ parents@1.0.1 
  │ │ └── path-platform@0.11.15 
  │ ├── path-browserify@0.0.0 
  │ ├── process@0.11.10 
  │ ├── punycode@1.4.1 
  │ ├── querystring-es3@0.2.1 
  │ ├── read-only-stream@2.0.0 
  │ ├─┬ readable-stream@2.3.3 
  │ │ ├── core-util-is@1.0.2 
  │ │ ├── isarray@1.0.0 
  │ │ ├── process-nextick-args@1.0.7 
  │ │ ├── safe-buffer@5.1.1 
  │ │ ├── string_decoder@1.0.3 
  │ │ └── util-deprecate@1.0.2 
  │ ├─┬ resolve@1.4.0 
  │ │ └── path-parse@1.0.5 
  │ ├─┬ shasum@1.0.2 
  │ │ ├── json-stable-stringify@0.0.1 
  │ │ └── sha.js@2.4.8 
  │ ├─┬ shell-quote@1.6.1 
  │ │ ├── array-filter@0.0.1 
  │ │ ├── array-map@0.0.0 
  │ │ ├── array-reduce@0.0.0 
  │ │ └── jsonify@0.0.0 
  │ ├── stream-browserify@2.0.1 
  │ ├─┬ stream-http@2.7.2 
  │ │ ├── builtin-status-codes@3.0.0 
  │ │ └── to-arraybuffer@1.0.1 
  │ ├── string_decoder@0.10.31 
  │ ├─┬ subarg@1.0.0 
  │ │ └── minimist@1.2.0 
  │ ├─┬ syntax-error@1.3.0 
  │ │ └── acorn@4.0.13 
  │ ├── through2@2.0.3 
  │ ├── timers-browserify@1.4.2 
  │ ├── tty-browserify@0.0.0 
  │ ├─┬ url@0.11.0 
  │ │ ├── punycode@1.3.2 
  │ │ └── querystring@0.2.0 
  │ ├─┬ util@0.10.3 
  │ │ └── inherits@2.0.1 
  │ ├─┬ vm-browserify@0.0.4 
  │ │ └── indexof@0.0.1 
  │ └── xtend@4.0.1 
  ├─┬ chai@3.5.0 
  │ ├── assertion-error@1.0.2 
  │ ├─┬ deep-eql@0.1.3 
  │ │ └── type-detect@0.1.1 
  │ └── type-detect@1.0.0 
  ├─┬ express@4.15.4 
  │ ├─┬ accepts@1.3.4 
  │ │ ├─┬ mime-types@2.1.17 
  │ │ │ └── mime-db@1.30.0 
  │ │ └── negotiator@0.6.1 
  │ ├── array-flatten@1.1.1 
  │ ├── content-disposition@0.5.2 
  │ ├── content-type@1.0.4 
  │ ├── cookie@0.3.1 
  │ ├── cookie-signature@1.0.6 
  │ ├── depd@1.1.1 
  │ ├── encodeurl@1.0.1 
  │ ├── escape-html@1.0.3 
  │ ├── etag@1.8.1 
  │ ├─┬ finalhandler@1.0.5 
  │ │ └── unpipe@1.0.0 
  │ ├── fresh@0.5.0 
  │ ├── merge-descriptors@1.0.1 
  │ ├── methods@1.1.2 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── parseurl@1.3.2 
  │ ├── path-to-regexp@0.1.7 
  │ ├─┬ proxy-addr@1.1.5 
  │ │ ├── forwarded@0.1.2 
  │ │ └── ipaddr.js@1.4.0 
  │ ├── qs@6.5.0 
  │ ├── range-parser@1.2.0 
  │ ├─┬ send@0.15.4 
  │ │ ├── destroy@1.0.4 
  │ │ ├── http-errors@1.6.2 
  │ │ └── mime@1.3.4 
  │ ├── serve-static@1.12.4 
  │ ├── setprototypeof@1.0.3 
  │ ├── statuses@1.3.1 
  │ ├─┬ type-is@1.6.15 
  │ │ └── media-typer@0.3.0 
  │ ├── utils-merge@1.0.0 
  │ └── vary@1.1.1 
  └── loop54-js-lib@0.1.6 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/loop54-js-demo/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0413 took 26.7816s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (311:28) on program /*globals $ */

'use strict';

// ES6 or using requre.js: import/require lib and use
import lib from 'loop54-js-lib';


import renderFunc from './render.js';


var guiConfig = {
  inputSearch: 'input#search',
  buttonSearch: 'a#search-button',
  buttonNewUser: 'a#new-user-button',
  inputSearchText: 'Input query here..',
  filters: 'div#filters',
  recommendedResults: 'div#recommendedresults',
  directResults: 'div#directresults',
  breadCrumbsContainer: '#breadcrumbs-wrapper',
  queryInBreadCrumb: '#breadcrumbs-wrapper div.breadcrumbs div.block.search.current strong span',
  makesSense: 'div#nosense',
  makesSenseHeader: 'div#nosenseheader',
  spellingSuggestions: 'div#spellingsuggestions',
  reSearch: 'div#research',
  related: 'div#related',
};


var config = {
  id: '18eb1533-a1f7-4ec8-9211-a561dcf43597',
  name: 'Hello World',
  url: '  http://212.181.47.236:7001',
  autoCompleteQuest: 'AutoComplete',
  searchQuest: 'Search',
  similarProductsQuest: 'SimilarProducts',
  createEventsQuest: 'CreateEvents',
  filters: [{
   'Name': 'Kategorier',
   'RequestParameter': 'Faceting.Categories',
   'ResponseParameter': 'Categories'
  }, {
   'Name': 'Märken',
   'RequestParameter': 'Faceting.Brands',
   'ResponseParameter': 'Brands'
  }],
  autoCompletePageSize: 8,
  directResultsPageSize: 24,
  recommendedResultsPageSize: 12,
  continousScrolling: false,
  instantSearch: false,
  devMode: true,
  cacheAutoComplete: false,
  autoCompleteFacetingParameter: 'Faceting.Categories',
  productTitleAttribute: 'productName',
  productDescriptionAttribute: 'Description',
  productImageUrlAttributes: ['ImageUrl'],
  productImageUrl: '$1',
  use26Request: true,
  showValues: true
};

let render = renderFunc(config, guiConfig);
lib.setConfig({url: config.url});

// init eventhandlers
$(document).ready(function () {
  

  $(guiConfig.buttonNewUser).click(function() {
    lib.getRandomUserId();
  });
  
  function doSearch(event) {
    if (event.keyCode === 13 || event.type === "click") {
      demo.search({
        query: $(guiConfig.inputSearch).val(),
        clearFilters: true,
        clearSearch: true,
        preventReSearch: false,
        instant: false,
        page: 0
      });
      $(guiConfig.inputSearch).autocomplete('close');
    }
  }

  render.initFacetting();

  $( guiConfig.inputSearch ).autocomplete({
    source:  function( req, res ) {
      demo.autocomplete(req, res);
    },
    minLength: 2,
    select: function( event, ui ) {
      event.preventDefault();
      event.stopPropagation();
      $(guiConfig.inputSearch).unbind('keyup', doSearch);
      demo.search({
        clearFilters: true,
        instant: false,
        clearSearch: true,
        query: ui.item.value,
        facet: ui.item.facet
      });
    },
    response: function( event, ui ) {
      $(guiConfig.inputSearch).bind('keyup', doSearch);
    },
    open: function() {
      $( this ).removeClass( 'ui-corner-all' ).addClass( 'ui-corner-top' );
    },
    close: function() {
      $( this ).removeClass( 'ui-corner-top' ).addClass( 'ui-corner-all' );
    }
  })
  .autocomplete( 'instance' )._renderItem = function( ul, item ) {
    var label = item.value;

    if (item.facet) {
      label = item.value + ' in ' + '<span class="facet">' + item.facet + '</span>';
    }

    return $( '<li>' )
      .append( '<a>' + label + '</a>' )
      .appendTo( ul );
  };

  $(guiConfig.buttonSearch).click(doSearch);
  $(guiConfig.inputSearch).bind('keyup', doSearch);
  $(guiConfig.inputSearch).focus();

  if (config.continousScrolling) {
    $(window).bind('scroll', function() {
      demo.displayMore();
    });
  } 
});


var utils = require('./utils.js');

var demo = {
  autoCompleteQueries: [],
  fetchingAutoComplete: false,
  instantTimer: null,
  runningACRequests: 0,

  activeIndex: -1,
  filters: {},
  autocompleteCache: {},
  visibleFilterDivs: {},
  previousSearch: {},


  createEvent: function(entity, eventType) {

    var req = {
      Events: [{
        Type: eventType,
        Entity: {
          EntityType: entity.EntityType, 
          ExternalId: entity.ExternalId,
        }
      }],
      QuestName: config.createEventsQuest,
    };

    lib.getResponse(req, function(response) {

      if (!response.success && config.devMode) {
        console.log(response.errorMessage);
      }

    });

  },

  getAutoCompeteRequest: function (options) {

    var req = {
      QuestName: config.autoCompleteQuest,
      QueryString: options.query
    };

    if (config.autoCompletePageSize > 0) {
        req.AutoComplete_FromIndex = 0;
        req.AutoComplete_ToIndex = config.autoCompletePageSize;
    }

    return (req);
  },

  previousSearch: {},

  autocomplete: function (req, res) {

    var req,
      self = this,
      cache = this.autocompleteCache; 

    function processResponse (response) {

      if (!response.success && config.DevMode) {
        alert(response.errorMessage);
      }

      var data = response.data;

      if (data.AutoComplete.length > 0) {
        res(self.formatAutoCompleteData(data));
      } else {
        res([]);
      }
    }

    if (cache[req.term]) {
      processResponse(cache[req.term]);
    }

    req = this.getAutoCompeteRequest({query: req.term});

    lib.getResponse(req).then(function(response) {

      cache[req.term] = response;

      processResponse(response);

    });

  },

  formatAutoCompleteData: function (data) {

    var ret, facets; 

    ret = data.AutoComplete.map( (x) => {
      return { 
        value: x.Key, 
        label: x.Key
      };
    }); 

    facets = data.AutoCompleteFacets.map( x => { 
      return {
        label: data.AutoCompleteFacetingString,
        value: data.AutoCompleteFacetingString, 
        facet: x.Key
      };
    });

    ret.unshift(...facets);

    return ret;
  },

  getSearchRequest: function (options) {
    var req = {
      QuestName: config.searchQuest,
      QueryString: options.query,
      RelatedQueries_FromIndex: 0,
      RelatedQueries_ToIndex: 5,
      PreventReSearch: options.preventReSearch || false
    };

    if (config.directResultsPageSize > 0) {
      req.DirectResults_FromIndex = config.directResultsPageSize * options.page;
      req.DirectResults_ToIndex = (options.page + 1) * config.directResultsPageSize - 1;
    }

    if (config.recommendedResultsPageSize > 0) {
      req.RecommendedResults_FromIndex = config.recommendedResultsPageSize * options.page;
      req.RecommendedResults_ToIndex = (options.page + 1) * config.recommendedResultsPageSize - 1;
    }

    for (var i = 0; i < config.filters.length; i++) {
      if (this.filters[config.filters[i].RequestParameter]) {
        req[config.filters[i].RequestParameter] = this.filters[config.filters[i].RequestParameter];
      }
    }

    return req;
  },


  search: function(options = {}) {

    var req = {},
      self = this,
      isContinuation;

    if (options.clearFilters || options.facet) {
      this.clearFilters();
    }

    if (options.facet) {
      this.addFilter(config.autoCompleteFacetingParameter, options.facet);
    }

    if (options.clearSearch) {
      render.clearSearch();
    }    

    options = {
      instant: options.instant || false,
      preventReSearch: options.preventReSearch || false,
      page: options.page || 0,
      query: options.query
    };

    this.previousSearch = { ...options };

    isContinuation = options.page > 0 && config.continousScrolling;

    if (!isContinuation) {
      render.hidePopup();

      if(!options.instant) {
        render.hideAutocomplete();
      }
    }

    req = this.getSearchRequest(options);

    // utils.setHash({
    //   config: config.Name,
    //   page: req.search,
    //   query: query
    // });

    $(guiConfig.inputSearch).val(options.query);

    lib.getResponse(req).then( function(response) {

        if (!response.success && config.DevMode) {
          alert(response.errorMessage);
        }

        var data = response.data;

        self.previousSearch.totalItems = data.DirectResults_TotalItems;

        render.clearSearch(isContinuation);

        if (!data.MakesSense) {
          render.showMakesNoSense(data.DirectResults, data.SpellingSuggestions, options.query, self.search.bind(self));
        }

        if (data.ReSearchQueryString) {
          render.showReSearch(data.ReSearchQueryString, options.query, self.search.bind(self));
        }

        if (data.RelatedQueries && data.RelatedQueries.length > 0) {
          render.addRelated(data.RelatedQueries, self.search.bind(self));
        }

        if (data.DirectResults && data.DirectResults.length > 0) {
          render.directResults(data.DirectResults, data.DirectResults_TotalItems, isContinuation, self.createEvent);
        }

        if (data.RecommendedResults && data.RecommendedResults.length > 0) {
          render.recommendedResults(data.RecommendedResults, isContinuation, self.createEvent);
        } else if (options.page < 1) {
          render.noRecommendedResults();
        }

        self.updateFilters(data);

        if (config.continousScrolling) {
          self.displayMore();
        } else if (data.DirectResults_TotalItems > config.directResultsPageSize) {
          self.updatePaging(data.DirectResults_TotalItems, options.page, self.previousSearch, self.search.bind(self));
        }

      });
// .catch( function (err) {
//         console.log('Error when processing response:')
//         console.log(err);
//       });

  },

  updatePaging: function (totalItems, page, prevSearch, searchCallback) {

    function showPage(p) {
      if (p < 2)
          return 'show';

      if (p > pages - 3)
          return 'show';

      if (p > page - 2 && p < page + 2)
          return 'show';

      if (p == 2)
          return 'dots';
      
      if (p == pages - 3 && page != 0 && page != pages-1)
          return 'dots';

      return 'hide';
    }

    var pages = Math.ceil(totalItems / config.directResultsPageSize);

    var pagesDiv = $('<div/>').addClass('pages').appendTo($('div#directresults'));

    var i = 0;
    for ( i; i < pages; i++) {

      var show = showPage(i);

      if (show == 'show') {

        $('<a/>').html((i + 1)).data('page', i).addClass(page==i?'selected':'').click(function() {

            searchCallback({
              ...prevSearch,
              page: $(this).data('page')
            });

        }).appendTo(pagesDiv);
      } else if (show == 'dots') {
          $('<span>...</span>').appendTo(pagesDiv);
      }
    }

  },

  displayMore: function() {
    //there are more results available
    
    var ps = this.previousSearch;

    if (this.isBottomVisible()) {

      if (ps.totalItems > (ps.page + 1) * config.directResultsPageSize) {
        this.search({
          query: ps.query, 
          instant: false, 
          preventReSearch: ps.preventReSearch, 
          page: ps.page + 1
        });
      }
      else if (ps.totalItems > config.directResultsPageSize && $(guiConfig.directResults).find('div.endofresults').length === 0) {
        $(guiConfig.directResults).append($('<div/>').addClass('endofresults').html('No more results'));
      }
    }
  },

  updateFilters: function (res) {

    var self = this;

    for (var i = 0; i < config.filters.length; i++) {

      $('div#filter_' + config.filters[i].Name).empty();

      var data = res[config.filters[i].ResponseParameter];

      if (data && data.length > 0) {

        var filterArray = this.filters[config.filters[i].RequestParameter];

        if (!filterArray) {
          filterArray = [];
        }

        var filterDiv = $('div#filter_' + config.filters[i].Name);
        var div = $('<div/>').addClass('alwaysvisible').appendTo(filterDiv);

        for (var j = 0; j < data.length; j++) {
          
          if (j == 5) {

            div = $('<div/>').addClass('hideable').appendTo(filterDiv);

            if (this.visibleFilterDivs[config.filters[i].Name]) {
              div.show();
            }

            $('<a/>').html(self.visibleFilterDivs[config.filters[i].Name]?'Hide':'Show all').addClass('showhide').data('div', div).data('filterName',config.filters[i].Name).click(function() {

              if ($(this).data('div').is(':visible')) {

                self.visibleFilterDivs[$(this).data('filterName')] = false;

                $(this).data('div').hide();
                $(this).html('Show all');

              } else {

                self.visibleFilterDivs[$(this).data('filterName')] = true;

                $(this).data('div').show();
                $(this).html('Hide');
              }
            })
            .appendTo(filterDiv);
          }

          div.append(
            $('<a/>')
              .html(data[j].Key + ' (' + data[j].Value + ')')
              .data('filterkey', config.filters[i].RequestParameter)
              .data('filtervalue', data[j].Key)
              .click(function () {
                if (!$(this).hasClass('selected')) {
                  self.addFilter($(this).data('filterkey'), $(this).data('filtervalue'));
                  $(this).addClass('selected');
                  self.searchAgain();
                } else {
                  self.removeFilter($(this).data('filterkey'), $(this).data('filtervalue'));
                  $(this).removeClass('selected');
                  self.searchAgain();
                }
              })
              .addClass(filterArray.indexOf(data[j].Key) > -1 ? 'selected' : '')
          );
        }
      }
    }
  },



    // JustSetHash: null,

    // SetHash: function(newHash) {
    //   this.JustSetHash = newHash;
    //   location.hash = '#' + newHash;
    // },


  isBottomVisible: function() {
    var scroll = $(window).scrollTop();
    var windowHeight = $(window).height();

    var height = $(guiConfig.directResults).outerHeight() + $(guiConfig.directResults).offset().top;

    return (scroll + windowHeight) >= height;
  },

  

  // hashChanged: function(previousHash, currentHash) {

  //   if (currentHash) {

  //     currentHash = decodeURI(currentHash);

  //     var moveFunc = function() {
  //       var type = utils.getHashValue('page', currentHash);

  //       if (type === 'search') {

  //         var query = this.getHashValue('query', currentHash);
  //         this.search(query, false, false, 0);
  //       }
  //     };

  //     //make sure we dont do anything if the hash was set by code, not the user
  //     if (currentHash !== this.justSetHash) {

  //       var configName = this.getHashValue('config', currentHash);

  //       //no demo config loaded or new config does not match
  //       // ???
  //       if ( config === null || configName !== config.Name) {
  //         this.loadDemoConfig(configName, moveFunc);
  //       }
  //       else {
  //         moveFunc();
  //       }
  //     }
  //   }
  // }



  clearFilters: function() {
    this.filters = {};
  },

  searchAgain: function() {
    this.search({...this.previousSearch, clearSearch: true, page: 0});
  },

  addFilter: function(key, value) {

    if (!this.filters[key]) {
      this.filters[key] = [];
    }

    this.filters[key].push(value);

  },

  removeFilter: function(key, value) {

    var param = this.filters[key];

    if (!param) {
      return;
    }

    var index = param.indexOf(value);

    if (index > -1) {
      param.splice(index, 1);
    }

  }


};
 at SyntaxError: Unexpected token (311:28)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$3.parseIdent (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2189:12)
    at Parser.pp$3.parsePropertyName (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2052:101)
    at Parser.pp$3.parseObj (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1988:14)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1805:19)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
