
> phantomjs-prebuilt@2.1.15 install /root/Targets/smartrouting/node_modules/phantomjs-prebuilt
> node install.js

PhantomJS not found on PATH
Downloading https://github.com/Medium/phantomjs/releases/download/v2.1.1/phantomjs-2.1.1-linux-x86_64.tar.bz2
Saving to /tmp/phantomjs/phantomjs-2.1.1-linux-x86_64.tar.bz2
Receiving...

Received 22866K total.
Extracting tar contents (via spawned process)
Removing /root/Targets/smartrouting/node_modules/phantomjs-prebuilt/lib/phantom
Copying extracted folder /tmp/phantomjs/phantomjs-2.1.1-linux-x86_64.tar.bz2-extract-1507045489933/phantomjs-2.1.1-linux-x86_64 -> /root/Targets/smartrouting/node_modules/phantomjs-prebuilt/lib/phantom
Writing location.js file
Done. Phantomjs binary available at /root/Targets/smartrouting/node_modules/phantomjs-prebuilt/lib/phantom/bin/phantomjs
/root/Targets/smartrouting
└─┬ smartrouting@0.1.0 
  ├─┬ grunt@1.0.1 
  │ ├── coffee-script@1.10.0 
  │ ├─┬ dateformat@1.0.12 
  │ │ ├── get-stdin@4.0.1 
  │ │ └─┬ meow@3.7.0 
  │ │   ├─┬ camelcase-keys@2.1.0 
  │ │   │ └── camelcase@2.1.1 
  │ │   ├── decamelize@1.2.0 
  │ │   ├─┬ loud-rejection@1.6.0 
  │ │   │ ├─┬ currently-unhandled@0.4.1 
  │ │   │ │ └── array-find-index@1.0.2 
  │ │   │ └── signal-exit@3.0.2 
  │ │   ├── map-obj@1.0.1 
  │ │   ├─┬ normalize-package-data@2.4.0 
  │ │   │ ├── hosted-git-info@2.5.0 
  │ │   │ ├─┬ is-builtin-module@1.0.0 
  │ │   │ │ └── builtin-modules@1.1.1 
  │ │   │ └─┬ validate-npm-package-license@3.0.1 
  │ │   │   ├─┬ spdx-correct@1.0.2 
  │ │   │   │ └── spdx-license-ids@1.2.2 
  │ │   │   └── spdx-expression-parse@1.0.4 
  │ │   ├── object-assign@4.1.1 
  │ │   ├─┬ read-pkg-up@1.0.1 
  │ │   │ ├─┬ find-up@1.1.2 
  │ │   │ │ └── path-exists@2.1.0 
  │ │   │ └─┬ read-pkg@1.1.0 
  │ │   │   ├─┬ load-json-file@1.1.0 
  │ │   │   │ ├─┬ parse-json@2.2.0 
  │ │   │   │ │ └─┬ error-ex@1.3.1 
  │ │   │   │ │   └── is-arrayish@0.2.1 
  │ │   │   │ ├── pify@2.3.0 
  │ │   │   │ └─┬ strip-bom@2.0.0 
  │ │   │   │   └── is-utf8@0.2.1 
  │ │   │   └── path-type@1.1.0 
  │ │   ├─┬ redent@1.0.0 
  │ │   │ ├─┬ indent-string@2.1.0 
  │ │   │ │ └─┬ repeating@2.0.1 
  │ │   │ │   └─┬ is-finite@1.0.2 
  │ │   │ │     └── number-is-nan@1.0.1 
  │ │   │ └── strip-indent@1.0.1 
  │ │   └── trim-newlines@1.0.0 
  │ ├── eventemitter2@0.4.14 
  │ ├── exit@0.1.2 
  │ ├─┬ findup-sync@0.3.0 
  │ │ └── glob@5.0.15 
  │ ├─┬ glob@7.0.6 
  │ │ ├── fs.realpath@1.0.0 
  │ │ ├─┬ inflight@1.0.6 
  │ │ │ └── wrappy@1.0.2 
  │ │ ├── inherits@2.0.3 
  │ │ └── once@1.4.0 
  │ ├─┬ grunt-cli@1.2.0 
  │ │ └── resolve@1.1.7 
  │ ├── grunt-known-options@1.1.0 
  │ ├─┬ grunt-legacy-log@1.0.0 
  │ │ ├── colors@1.1.2 
  │ │ ├─┬ grunt-legacy-log-utils@1.0.0 
  │ │ │ └── lodash@4.3.0 
  │ │ └── underscore.string@3.2.3 
  │ ├─┬ grunt-legacy-util@1.0.0 
  │ │ ├── getobject@0.1.0 
  │ │ ├── lodash@4.3.0 
  │ │ └─┬ which@1.2.14 
  │ │   └── isexe@2.0.0 
  │ ├── iconv-lite@0.4.19 
  │ ├─┬ js-yaml@3.5.5 
  │ │ ├─┬ argparse@1.0.9 
  │ │ │ └── sprintf-js@1.0.3 
  │ │ └── esprima@2.7.3 
  │ ├─┬ minimatch@3.0.4 
  │ │ └─┬ brace-expansion@1.1.8 
  │ │   ├── balanced-match@1.0.0 
  │ │   └── concat-map@0.0.1 
  │ ├─┬ nopt@3.0.6 
  │ │ └── abbrev@1.1.1 
  │ ├── path-is-absolute@1.0.1 
  │ └── rimraf@2.2.8 
  ├─┬ grunt-contrib-concat@1.0.1 
  │ ├─┬ chalk@1.1.3 
  │ │ ├── ansi-styles@2.2.1 
  │ │ ├── escape-string-regexp@1.0.5 
  │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ └── ansi-regex@2.1.1 
  │ │ ├── strip-ansi@3.0.1 
  │ │ └── supports-color@2.0.0 
  │ └── source-map@0.5.7 
  ├─┬ grunt-contrib-jshint@1.1.0 
  │ ├── hooker@0.2.3 
  │ └─┬ jshint@2.9.5 
  │   ├─┬ cli@1.0.1 
  │   │ └── glob@7.1.2 
  │   ├─┬ console-browserify@1.1.0 
  │   │ └── date-now@0.1.4 
  │   ├─┬ htmlparser2@3.8.3 
  │   │ ├── domelementtype@1.3.0 
  │   │ ├── domhandler@2.3.0 
  │   │ ├─┬ domutils@1.5.1 
  │   │ │ └─┬ dom-serializer@0.1.0 
  │   │ │   ├── domelementtype@1.1.3 
  │   │ │   └── entities@1.1.1 
  │   │ ├── entities@1.0.0 
  │   │ └─┬ readable-stream@1.1.14 
  │   │   ├── core-util-is@1.0.2 
  │   │   ├── isarray@0.0.1 
  │   │   └── string_decoder@0.10.31 
  │   ├── lodash@3.7.0 
  │   ├── shelljs@0.3.0 
  │   └── strip-json-comments@1.0.4 
  ├─┬ grunt-contrib-qunit@1.3.0 
  │ └─┬ grunt-lib-phantomjs@1.1.0 
  │   ├─┬ phantomjs-prebuilt@2.1.15 
  │   │ ├── es6-promise@4.0.5 
  │   │ ├─┬ extract-zip@1.6.5 
  │   │ │ ├─┬ mkdirp@0.5.0 
  │   │ │ │ └── minimist@0.0.8 
  │   │ │ └─┬ yauzl@2.4.1 
  │   │ │   └─┬ fd-slicer@1.0.1 
  │   │ │     └── pend@1.2.0 
  │   │ ├─┬ fs-extra@1.0.0 
  │   │ │ ├── jsonfile@2.4.0 
  │   │ │ └── klaw@1.3.1 
  │   │ ├─┬ hasha@2.2.0 
  │   │ │ ├── is-stream@1.1.0 
  │   │ │ └─┬ pinkie-promise@2.0.1 
  │   │ │   └── pinkie@2.0.4 
  │   │ ├── kew@0.7.0 
  │   │ ├── progress@1.1.8 
  │   │ ├─┬ request@2.81.0 
  │   │ │ ├── aws-sign2@0.6.0 
  │   │ │ ├── aws4@1.6.0 
  │   │ │ ├── caseless@0.12.0 
  │   │ │ ├─┬ combined-stream@1.0.5 
  │   │ │ │ └── delayed-stream@1.0.0 
  │   │ │ ├── extend@3.0.1 
  │   │ │ ├── forever-agent@0.6.1 
  │   │ │ ├─┬ form-data@2.1.4 
  │   │ │ │ └── asynckit@0.4.0 
  │   │ │ ├─┬ har-validator@4.2.1 
  │   │ │ │ ├─┬ ajv@4.11.8 
  │   │ │ │ │ ├── co@4.6.0 
  │   │ │ │ │ └─┬ json-stable-stringify@1.0.1 
  │   │ │ │ │   └── jsonify@0.0.0 
  │   │ │ │ └── har-schema@1.0.5 
  │   │ │ ├─┬ hawk@3.1.3 
  │   │ │ │ ├── boom@2.10.1 
  │   │ │ │ ├── cryptiles@2.0.5 
  │   │ │ │ ├── hoek@2.16.3 
  │   │ │ │ └── sntp@1.0.9 
  │   │ │ ├─┬ http-signature@1.1.1 
  │   │ │ │ ├── assert-plus@0.2.0 
  │   │ │ │ ├─┬ jsprim@1.4.1 
  │   │ │ │ │ ├── assert-plus@1.0.0 
  │   │ │ │ │ ├── extsprintf@1.3.0 
  │   │ │ │ │ ├── json-schema@0.2.3 
  │   │ │ │ │ └─┬ verror@1.10.0 
  │   │ │ │ │   └── assert-plus@1.0.0 
  │   │ │ │ └─┬ sshpk@1.13.1 
  │   │ │ │   ├── asn1@0.2.3 
  │   │ │ │   ├── assert-plus@1.0.0 
  │   │ │ │   ├── bcrypt-pbkdf@1.0.1 
  │   │ │ │   ├─┬ dashdash@1.14.1 
  │   │ │ │   │ └── assert-plus@1.0.0 
  │   │ │ │   ├── ecc-jsbn@0.1.1 
  │   │ │ │   ├─┬ getpass@0.1.7 
  │   │ │ │   │ └── assert-plus@1.0.0 
  │   │ │ │   ├── jsbn@0.1.1 
  │   │ │ │   └── tweetnacl@0.14.5 
  │   │ │ ├── is-typedarray@1.0.0 
  │   │ │ ├── isstream@0.1.2 
  │   │ │ ├── json-stringify-safe@5.0.1 
  │   │ │ ├─┬ mime-types@2.1.17 
  │   │ │ │ └── mime-db@1.30.0 
  │   │ │ ├── oauth-sign@0.8.2 
  │   │ │ ├── performance-now@0.2.0 
  │   │ │ ├── qs@6.4.0 
  │   │ │ ├── safe-buffer@5.1.1 
  │   │ │ ├── stringstream@0.0.5 
  │   │ │ ├─┬ tough-cookie@2.3.3 
  │   │ │ │ └── punycode@1.4.1 
  │   │ │ ├── tunnel-agent@0.6.0 
  │   │ │ └── uuid@3.1.0 
  │   │ └─┬ request-progress@2.0.1 
  │   │   └── throttleit@1.0.0 
  │   ├── rimraf@2.6.2 
  │   ├── semver@5.4.1 
  │   └─┬ temporary@0.0.8 
  │     └── package@1.0.1 
  ├─┬ grunt-contrib-uglify@2.3.0 
  │ ├─┬ maxmin@1.1.0 
  │ │ ├── figures@1.7.0 
  │ │ ├─┬ gzip-size@1.0.0 
  │ │ │ ├─┬ browserify-zlib@0.1.4 
  │ │ │ │ └── pako@0.2.9 
  │ │ │ └─┬ concat-stream@1.6.0 
  │ │ │   └─┬ readable-stream@2.3.3 
  │ │ │     ├── isarray@1.0.0 
  │ │ │     └── string_decoder@1.0.3 
  │ │ └── pretty-bytes@1.0.4 
  │ ├─┬ object.assign@4.0.4 
  │ │ ├─┬ define-properties@1.1.2 
  │ │ │ └── foreach@2.0.5 
  │ │ ├── function-bind@1.1.1 
  │ │ └── object-keys@1.0.11 
  │ ├─┬ uglify-js@2.8.29 
  │ │ ├── uglify-to-browserify@1.0.2 
  │ │ └─┬ yargs@3.10.0 
  │ │   ├── camelcase@1.2.1 
  │ │   ├─┬ cliui@2.1.0 
  │ │   │ ├─┬ center-align@0.1.3 
  │ │   │ │ ├─┬ align-text@0.1.4 
  │ │   │ │ │ ├── longest@1.0.1 
  │ │   │ │ │ └── repeat-string@1.6.1 
  │ │   │ │ └── lazy-cache@1.0.4 
  │ │   │ ├── right-align@0.1.3 
  │ │   │ └── wordwrap@0.0.2 
  │ │   └── window-size@0.1.0 
  │ └── uri-path@1.0.0 
  ├─┬ grunt-contrib-watch@1.0.0 
  │ ├── async@1.5.2 
  │ ├─┬ gaze@1.1.2 
  │ │ └─┬ globule@1.2.0 
  │ │   ├── glob@7.1.2 
  │ │   └── lodash@4.17.4 
  │ ├── lodash@3.10.1 
  │ └─┬ tiny-lr@0.2.1 
  │   ├─┬ body-parser@1.14.2 
  │   │ ├── bytes@2.2.0 
  │   │ ├── content-type@1.0.4 
  │   │ ├── depd@1.1.1 
  │   │ ├─┬ http-errors@1.3.1 
  │   │ │ └── statuses@1.3.1 
  │   │ ├── iconv-lite@0.4.13 
  │   │ ├─┬ on-finished@2.3.0 
  │   │ │ └── ee-first@1.1.1 
  │   │ ├── qs@5.2.0 
  │   │ ├─┬ raw-body@2.1.7 
  │   │ │ ├── bytes@2.4.0 
  │   │ │ ├── iconv-lite@0.4.13 
  │   │ │ └── unpipe@1.0.0 
  │   │ └─┬ type-is@1.6.15 
  │   │   └── media-typer@0.3.0 
  │   ├─┬ debug@2.2.0 
  │   │ └── ms@0.7.1 
  │   ├─┬ faye-websocket@0.10.0 
  │   │ └─┬ websocket-driver@0.7.0 
  │   │   ├── http-parser-js@0.4.8 
  │   │   └── websocket-extensions@0.1.2 
  │   ├── livereload-js@2.2.2 
  │   ├── parseurl@1.3.2 
  │   └── qs@5.1.0 
  ├─┬ leaflet-ajax@2.1.0 
  │ └─┬ lie@3.1.1 
  │   └── immediate@3.0.6 
  ├─┬ leaflet-filelayer@0.6.0 
  │ ├── leaflet@0.7.7 
  │ └─┬ togeojson@0.14.2 
  │   ├─┬ concat-stream@1.5.2 
  │   │ ├─┬ readable-stream@2.0.6 
  │   │ │ ├── isarray@1.0.0 
  │   │ │ ├── process-nextick-args@1.0.7 
  │   │ │ └── util-deprecate@1.0.2 
  │   │ └── typedarray@0.0.6 
  │   ├── minimist@1.2.0 
  │   └── xmldom@0.1.27 
  ├── leaflet-tilelayer-geojson@1.0.4 
  ├─┬ qunitjs@2.4.0 
  │ ├─┬ chokidar@1.6.1 
  │ │ ├─┬ anymatch@1.3.2 
  │ │ │ └─┬ normalize-path@2.1.1 
  │ │ │   └── remove-trailing-separator@1.1.0 
  │ │ ├── async-each@1.0.1 
  │ │ ├── glob-parent@2.0.0 
  │ │ ├─┬ is-binary-path@1.0.1 
  │ │ │ └── binary-extensions@1.10.0 
  │ │ ├─┬ is-glob@2.0.1 
  │ │ │ └── is-extglob@1.0.0 
  │ │ └─┬ readdirp@2.1.0 
  │ │   ├── graceful-fs@4.1.11 
  │ │   ├─┬ readable-stream@2.3.3 
  │ │   │ ├── isarray@1.0.0 
  │ │   │ └── string_decoder@1.0.3 
  │ │   └── set-immediate-shim@1.0.1 
  │ ├─┬ commander@2.9.0 
  │ │ └── graceful-readlink@1.0.1 
  │ ├── exists-stat@1.0.0 
  │ ├─┬ findup-sync@0.4.3 
  │ │ ├─┬ detect-file@0.1.0 
  │ │ │ └── fs-exists-sync@0.1.0 
  │ │ ├─┬ micromatch@2.3.11 
  │ │ │ ├─┬ arr-diff@2.0.0 
  │ │ │ │ └── arr-flatten@1.1.0 
  │ │ │ ├── array-unique@0.2.1 
  │ │ │ ├─┬ braces@1.8.5 
  │ │ │ │ ├─┬ expand-range@1.8.2 
  │ │ │ │ │ └─┬ fill-range@2.2.3 
  │ │ │ │ │   ├── is-number@2.1.0 
  │ │ │ │ │   ├─┬ isobject@2.1.0 
  │ │ │ │ │   │ └── isarray@1.0.0 
  │ │ │ │ │   └─┬ randomatic@1.1.7 
  │ │ │ │ │     ├─┬ is-number@3.0.0 
  │ │ │ │ │     │ └── kind-of@3.2.2 
  │ │ │ │ │     └── kind-of@4.0.0 
  │ │ │ │ ├── preserve@0.2.0 
  │ │ │ │ └── repeat-element@1.1.2 
  │ │ │ ├─┬ expand-brackets@0.1.5 
  │ │ │ │ └── is-posix-bracket@0.1.1 
  │ │ │ ├── extglob@0.3.2 
  │ │ │ ├── filename-regex@2.0.1 
  │ │ │ ├─┬ kind-of@3.2.2 
  │ │ │ │ └── is-buffer@1.1.5 
  │ │ │ ├─┬ object.omit@2.0.1 
  │ │ │ │ ├─┬ for-own@0.1.5 
  │ │ │ │ │ └── for-in@1.0.2 
  │ │ │ │ └── is-extendable@0.1.1 
  │ │ │ ├─┬ parse-glob@3.0.4 
  │ │ │ │ ├── glob-base@0.3.0 
  │ │ │ │ └── is-dotfile@1.0.3 
  │ │ │ └─┬ regex-cache@0.4.4 
  │ │ │   └─┬ is-equal-shallow@0.1.3 
  │ │ │     └── is-primitive@2.0.0 
  │ │ └─┬ resolve-dir@0.1.1 
  │ │   ├─┬ expand-tilde@1.2.2 
  │ │   │ └── os-homedir@1.0.2 
  │ │   └─┬ global-modules@0.2.3 
  │ │     ├─┬ global-prefix@0.1.5 
  │ │     │ ├─┬ homedir-polyfill@1.0.1 
  │ │     │ │ └── parse-passwd@1.0.0 
  │ │     │ └── ini@1.3.4 
  │ │     └── is-windows@0.2.0 
  │ ├── js-reporters@1.2.0 
  │ ├─┬ resolve@1.3.2 
  │ │ └── path-parse@1.0.5 
  │ └─┬ walk-sync@0.3.1 
  │   ├── ensure-posix-path@1.0.2 
  │   └── matcher-collection@1.0.5 
  ├─┬ turf-intersect@3.0.12 
  │ └── jsts@1.1.2 
  └── underscore@1.8.3 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/smartrouting/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 69% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","freeze","RegExp","toUpperCase","create"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0706 took 26.9528s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2012 Joyent, Inc.  All rights reserved.

var assert = require('assert-plus');
var util = require('util');
var utils = require('./utils');



///--- Globals

var HASH_ALGOS = utils.HASH_ALGOS;
var PK_ALGOS = utils.PK_ALGOS;
var HttpSignatureError = utils.HttpSignatureError;
var InvalidAlgorithmError = utils.InvalidAlgorithmError;
var validateAlgorithm = utils.validateAlgorithm;

var State = {
  New: 0,
  Params: 1
};

var ParamsState = {
  Name: 0,
  Quote: 1,
  Value: 2,
  Comma: 3
};


///--- Specific Errors


function ExpiredRequestError(message) {
  HttpSignatureError.call(this, message, ExpiredRequestError);
}
util.inherits(ExpiredRequestError, HttpSignatureError);


function InvalidHeaderError(message) {
  HttpSignatureError.call(this, message, InvalidHeaderError);
}
util.inherits(InvalidHeaderError, HttpSignatureError);


function InvalidParamsError(message) {
  HttpSignatureError.call(this, message, InvalidParamsError);
}
util.inherits(InvalidParamsError, HttpSignatureError);


function MissingHeaderError(message) {
  HttpSignatureError.call(this, message, MissingHeaderError);
}
util.inherits(MissingHeaderError, HttpSignatureError);

function StrictParsingError(message) {
  HttpSignatureError.call(this, message, StrictParsingError);
}
util.inherits(StrictParsingError, HttpSignatureError);

///--- Exported API

module.exports = {

  /**
   * Parses the 'Authorization' header out of an http.ServerRequest object.
   *
   * Note that this API will fully validate the Authorization header, and throw
   * on any error.  It will not however check the signature, or the keyId format
   * as those are specific to your environment.  You can use the options object
   * to pass in extra constraints.
   *
   * As a response object you can expect this:
   *
   *     {
   *       "scheme": "Signature",
   *       "params": {
   *         "keyId": "foo",
   *         "algorithm": "rsa-sha256",
   *         "headers": [
   *           "date" or "x-date",
   *           "digest"
   *         ],
   *         "signature": "base64"
   *       },
   *       "signingString": "ready to be passed to crypto.verify()"
   *     }
   *
   * @param {Object} request an http.ServerRequest.
   * @param {Object} options an optional options object with:
   *                   - clockSkew: allowed clock skew in seconds (default 300).
   *                   - headers: required header names (def: date or x-date)
   *                   - algorithms: algorithms to support (default: all).
   *                   - strict: should enforce latest spec parsing
   *                             (default: false).
   * @return {Object} parsed out object (see above).
   * @throws {TypeError} on invalid input.
   * @throws {InvalidHeaderError} on an invalid Authorization header error.
   * @throws {InvalidParamsError} if the params in the scheme are invalid.
   * @throws {MissingHeaderError} if the params indicate a header not present,
   *                              either in the request headers from the params,
   *                              or not in the params from a required header
   *                              in options.
   * @throws {StrictParsingError} if old attributes are used in strict parsing
   *                              mode.
   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
   */
  parseRequest: function parseRequest(request, options) {
    assert.object(request, 'request');
    assert.object(request.headers, 'request.headers');
    if (options === undefined) {
      options = {};
    }
    if (options.headers === undefined) {
      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
    }
    assert.object(options, 'options');
    assert.arrayOfString(options.headers, 'options.headers');
    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

    if (!request.headers.authorization)
      throw new MissingHeaderError('no authorization header present in ' +
                                   'the request');

    options.clockSkew = options.clockSkew || 300;


    var i = 0;
    var state = State.New;
    var substate = ParamsState.Name;
    var tmpName = '';
    var tmpValue = '';

    var parsed = {
      scheme: '',
      params: {},
      signingString: '',

      get algorithm() {
        return this.params.algorithm.toUpperCase();
      },

      get keyId() {
        return this.params.keyId;
      }
    };

    var authz = request.headers.authorization;
    for (i = 0; i < authz.length; i++) {
      var c = authz.charAt(i);

      switch (Number(state)) {

      case State.New:
        if (c !== ' ') parsed.scheme += c;
        else state = State.Params;
        break;

      case State.Params:
        switch (Number(substate)) {

        case ParamsState.Name:
          var code = c.charCodeAt(0);
          // restricted name of A-Z / a-z
          if ((code >= 0x41 && code <= 0x5a) || // A-Z
              (code >= 0x61 && code <= 0x7a)) { // a-z
            tmpName += c;
          } else if (c === '=') {
            if (tmpName.length === 0)
              throw new InvalidHeaderError('bad param format');
            substate = ParamsState.Quote;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Quote:
          if (c === '"') {
            tmpValue = '';
            substate = ParamsState.Value;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        case ParamsState.Value:
          if (c === '"') {
            parsed.params[tmpName] = tmpValue;
            substate = ParamsState.Comma;
          } else {
            tmpValue += c;
          }
          break;

        case ParamsState.Comma:
          if (c === ',') {
            tmpName = '';
            substate = ParamsState.Name;
          } else {
            throw new InvalidHeaderError('bad param format');
          }
          break;

        default:
          throw new Error('Invalid substate');
        }
        break;

      default:
        throw new Error('Invalid substate');
      }

    }

    if (!parsed.params.headers || parsed.params.headers === '') {
      if (request.headers['x-date']) {
        parsed.params.headers = ['x-date'];
      } else {
        parsed.params.headers = ['date'];
      }
    } else {
      parsed.params.headers = parsed.params.headers.split(' ');
    }

    // Minimally validate the parsed object
    if (!parsed.scheme || parsed.scheme !== 'Signature')
      throw new InvalidHeaderError('scheme was not "Signature"');

    if (!parsed.params.keyId)
      throw new InvalidHeaderError('keyId was not specified');

    if (!parsed.params.algorithm)
      throw new InvalidHeaderError('algorithm was not specified');

    if (!parsed.params.signature)
      throw new InvalidHeaderError('signature was not specified');

    // Check the algorithm against the official list
    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
    try {
      validateAlgorithm(parsed.params.algorithm);
    } catch (e) {
      if (e instanceof InvalidAlgorithmError)
        throw (new InvalidParamsError(parsed.params.algorithm + ' is not ' +
          'supported'));
      else
        throw (e);
    }

    // Build the signingString
    for (i = 0; i < parsed.params.headers.length; i++) {
      var h = parsed.params.headers[i].toLowerCase();
      parsed.params.headers[i] = h;

      if (h === 'request-line') {
        if (!options.strict) {
          /*
           * We allow headers from the older spec drafts if strict parsing isn't
           * specified in options.
           */
          parsed.signingString +=
            request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
        } else {
          /* Strict parsing doesn't allow older draft headers. */
          throw (new StrictParsingError('request-line is not a valid header ' +
            'with strict parsing enabled.'));
        }
      } else if (h === '(request-target)') {
        parsed.signingString +=
          '(request-target): ' + request.method.toLowerCase() + ' ' +
          request.url;
      } else {
        var value = request.headers[h];
        if (value === undefined)
          throw new MissingHeaderError(h + ' was not in the request');
        parsed.signingString += h + ': ' + value;
      }

      if ((i + 1) < parsed.params.headers.length)
        parsed.signingString += '\n';
    }

    // Check against the constraints
    var date;
    if (request.headers.date || request.headers['x-date']) {
        if (request.headers['x-date']) {
          date = new Date(request.headers['x-date']);
        } else {
          date = new Date(request.headers.date);
        }
      var now = new Date();
      var skew = Math.abs(now.getTime() - date.getTime());

      if (skew > options.clockSkew * 1000) {
        throw new ExpiredRequestError('clock skew of ' +
                                      (skew / 1000) +
                                      's was greater than ' +
                                      options.clockSkew + 's');
      }
    }

    options.headers.forEach(function (hdr) {
      // Remember that we already checked any headers in the params
      // were in the request, so if this passes we're good.
      if (parsed.params.headers.indexOf(hdr) < 0)
        throw new MissingHeaderError(hdr + ' was not a signed header');
    });

    if (options.algorithms) {
      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
        throw new InvalidParamsError(parsed.params.algorithm +
                                     ' is not a supported algorithm');
    }

    return parsed;
  }

};
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/smartrouting/node_modules/smartrouting/routeRequest.js. Coverage (Term): 7% Coverage (LOC): 8%
*- File /root/Targets/smartrouting/node_modules/request/index.js. Coverage (Term): 24% Coverage (LOC): 28%
*- File /root/Targets/smartrouting/node_modules/extend/index.js. Coverage (Term): 13% Coverage (LOC): 16%
*- File /root/Targets/smartrouting/node_modules/request/lib/cookies.js. Coverage (Term): 33% Coverage (LOC): 50%
*- File /root/Targets/smartrouting/node_modules/tough-cookie/lib/cookie.js. Coverage (Term): 14% Coverage (LOC): 21%
*- File /root/Targets/smartrouting/node_modules/tough-cookie/lib/pubsuffix.js. Coverage (Term): 98% Coverage (LOC): 99%
*- File /root/Targets/smartrouting/node_modules/tough-cookie/lib/store.js. Coverage (Term): 41% Coverage (LOC): 74%
*- File /root/Targets/smartrouting/node_modules/tough-cookie/lib/memstore.js. Coverage (Term): 17% Coverage (LOC): 26%
*- File /root/Targets/smartrouting/node_modules/tough-cookie/lib/permuteDomain.js. Coverage (Term): 25% Coverage (LOC): 27%
*- File /root/Targets/smartrouting/node_modules/tough-cookie/lib/pathMatch.js. Coverage (Term): 28% Coverage (LOC): 28%
*- File /root/Targets/smartrouting/node_modules/request/lib/helpers.js. Coverage (Term): 35% Coverage (LOC): 53%
*- File /root/Targets/smartrouting/node_modules/json-stringify-safe/stringify.js. Coverage (Term): 14% Coverage (LOC): 27%
*- File /root/Targets/smartrouting/node_modules/safe-buffer/index.js. Coverage (Term): 36% Coverage (LOC): 44%
*- File /root/Targets/smartrouting/node_modules/request/request.js. Coverage (Term): 2% Coverage (LOC): 1%
*- File /root/Targets/smartrouting/node_modules/hawk/lib/index.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/smartrouting/node_modules/boom/lib/index.js. Coverage (Term): 15% Coverage (LOC): 38%
*- File /root/Targets/smartrouting/node_modules/hoek/lib/index.js. Coverage (Term): 7% Coverage (LOC): 16%
*- File /root/Targets/smartrouting/node_modules/hoek/lib/escape.js. Coverage (Term): 33% Coverage (LOC): 46%
*- File /root/Targets/smartrouting/node_modules/sntp/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/smartrouting/node_modules/sntp/lib/index.js. Coverage (Term): 7% Coverage (LOC): 14%
*- File /root/Targets/smartrouting/node_modules/hawk/lib/server.js. Coverage (Term): 6% Coverage (LOC): 10%
*- File /root/Targets/smartrouting/node_modules/cryptiles/lib/index.js. Coverage (Term): 19% Coverage (LOC): 30%
*- File /root/Targets/smartrouting/node_modules/hawk/lib/crypto.js. Coverage (Term): 19% Coverage (LOC): 42%
*- File /root/Targets/smartrouting/node_modules/hawk/lib/utils.js. Coverage (Term): 16% Coverage (LOC): 22%
*- File /root/Targets/smartrouting/node_modules/hawk/lib/client.js. Coverage (Term): 7% Coverage (LOC): 10%
*- File /root/Targets/smartrouting/node_modules/aws-sign2/index.js. Coverage (Term): 26% Coverage (LOC): 51%
*- File /root/Targets/smartrouting/node_modules/aws4/aws4.js. Coverage (Term): 9% Coverage (LOC): 18%
*- File /root/Targets/smartrouting/node_modules/aws4/lru.js. Coverage (Term): 26% Coverage (LOC): 33%
*- File /root/Targets/smartrouting/node_modules/http-signature/lib/index.js. Coverage (Term): 29% Coverage (LOC): 20%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
