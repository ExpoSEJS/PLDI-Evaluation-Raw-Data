/root/Targets/arrow-orm
└─┬ arrow-orm@0.6.17 
  ├── async@0.9.2 
  ├─┬ chalk@1.1.3 
  │ ├── ansi-styles@2.2.1 
  │ ├── escape-string-regexp@1.0.5 
  │ ├─┬ has-ansi@2.0.0 
  │ │ └── ansi-regex@2.1.1 
  │ ├── strip-ansi@3.0.1 
  │ └── supports-color@2.0.0 
  ├─┬ debug@2.6.9 
  │ └── ms@2.0.0 
  ├── lodash@3.10.1 
  ├── lru-cache@2.7.3 
  ├─┬ mingo@0.3.3 
  │ └── underscore@1.8.3 
  ├── pkginfo@0.3.1 
  └── pluralize@1.2.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/arrow-orm/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 28.999999999999996% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","call","RegExp","WeakMap","max","Array","create","bind","defineProperties"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0282 took 32.5968s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:1) on program /* global it */
var async = require('async'),
	assert = require('assert'),
	path = require('path'),
	fs = require('fs'),
	tests = mashModulesTogether(path.join(__dirname, 'stock_tests'));

module.exports = function (connector, testModule) {
	return function () {
		var dir = path.join(path.dirname(testModule.filename), 'capabilities');

		if (!fs.existsSync(dir)) {
			it('should have a test/capabilities dir', function () {
				assert(false, 'test/capabilities does not exist');
			});
			return;
		}

		var suiteConfig = mashModulesTogether(dir);
		Object.keys(suiteConfig).forEach(function (key) {
			var testConfig = suiteConfig[key],
				label = 'should ' + key;

			if (!tests[key]) {
				return;
			}

			if (testConfig.iterations !== undefined && testConfig.iterations > 1) {
				label += ' ' + testConfig.iterations + ' times';
			}

			it(label, function (next) {
				var count = testConfig.iterations || 1;
				tests[key](connector, suiteConfig, testConfig, function oneFinished(err) {
					if (err) {
						next(err);
					}
					else if (--count > 0) {
						tests[key](connector, suiteConfig, testConfig, oneFinished);
					}
					else {
						next();
					}
				});
			});
		});
	};
};

function mashModulesTogether(dir) {
	var conglomerate = {},
		filenames = fs
			.readdirSync(dir)
			.filter(function (filename) {
				return filename[0] !== '.' && filename.slice(-3) === '.js';
			});

	for (var i = 0; i < filenames.length; i++) {

		var filename = filenames[i],
			currentConfig = require(path.join(dir, filename));

		for (var key in currentConfig) {
			if (currentConfig.hasOwnProperty(key)) {
				conglomerate[key] = currentConfig[key];
			}
		}

		if (currentConfig.only === true) {
			return currentConfig;
		}

	}

	return conglomerate;
} at SyntaxError: Unexpected token (3:1)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/arrow-orm/node_modules/arrow-orm/index.js. Coverage (Term): 80% Coverage (LOC): 100%
*- File /root/Targets/arrow-orm/node_modules/arrow-orm/lib/index.js. Coverage (Term): 48% Coverage (LOC): 67%
*- File /root/Targets/arrow-orm/node_modules/lodash/index.js. Coverage (Term): 20% Coverage (LOC): 31%
*- File /root/Targets/arrow-orm/node_modules/arrow-orm/lib/model.js. Coverage (Term): 9% Coverage (LOC): 14%
*- File /root/Targets/arrow-orm/node_modules/async/lib/async.js. Coverage (Term): 10% Coverage (LOC): 14%
*- File /root/Targets/arrow-orm/node_modules/lru-cache/lib/lru-cache.js. Coverage (Term): 11% Coverage (LOC): 22%
*- File /root/Targets/arrow-orm/node_modules/pluralize/pluralize.js. Coverage (Term): 69% Coverage (LOC): 91%
*- File /root/Targets/arrow-orm/node_modules/arrow-orm/lib/instance.js. Coverage (Term): 10% Coverage (LOC): 19%
*- File /root/Targets/arrow-orm/node_modules/arrow-orm/lib/error.js. Coverage (Term): 61% Coverage (LOC): 71%
*- File /root/Targets/arrow-orm/node_modules/arrow-orm/lib/collection.js. Coverage (Term): 30% Coverage (LOC): 41%
*- File /root/Targets/arrow-orm/node_modules/arrow-orm/lib/util.js. Coverage (Term): 8% Coverage (LOC): 17%
*- File /root/Targets/arrow-orm/node_modules/arrow-orm/lib/connector.js. Coverage (Term): 3% Coverage (LOC): 1%
*- File /root/Targets/arrow-orm/node_modules/arrow-orm/lib/connector/capabilities/index.js. Coverage (Term): 6% Coverage (LOC): 8%
*- File /root/Targets/arrow-orm/node_modules/chalk/index.js. Coverage (Term): 46% Coverage (LOC): 56%
*- File /root/Targets/arrow-orm/node_modules/escape-string-regexp/index.js. Coverage (Term): 85% Coverage (LOC): 90%
*- File /root/Targets/arrow-orm/node_modules/ansi-styles/index.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/arrow-orm/node_modules/strip-ansi/index.js. Coverage (Term): 57% Coverage (LOC): 86%
*- File /root/Targets/arrow-orm/node_modules/ansi-regex/index.js. Coverage (Term): 93% Coverage (LOC): 100%
*- File /root/Targets/arrow-orm/node_modules/has-ansi/index.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/arrow-orm/node_modules/supports-color/index.js. Coverage (Term): 63% Coverage (LOC): 56%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
