/root/Targets/elog
└─┬ elog@0.1.1 
  ├── ejs@2.5.7 
  ├─┬ express@4.16.0 
  │ ├─┬ accepts@1.3.4 
  │ │ ├─┬ mime-types@2.1.17 
  │ │ │ └── mime-db@1.30.0 
  │ │ └── negotiator@0.6.1 
  │ ├── array-flatten@1.1.1 
  │ ├─┬ body-parser@1.18.2 
  │ │ ├── bytes@3.0.0 
  │ │ ├─┬ http-errors@1.6.2 
  │ │ │ └── setprototypeof@1.0.3 
  │ │ ├── iconv-lite@0.4.19 
  │ │ └── raw-body@2.3.2 
  │ ├── content-disposition@0.5.2 
  │ ├── content-type@1.0.4 
  │ ├── cookie@0.3.1 
  │ ├── cookie-signature@1.0.6 
  │ ├─┬ debug@2.6.9 
  │ │ └── ms@2.0.0 
  │ ├── depd@1.1.1 
  │ ├── encodeurl@1.0.1 
  │ ├── escape-html@1.0.3 
  │ ├── etag@1.8.1 
  │ ├─┬ finalhandler@1.1.0 
  │ │ └── unpipe@1.0.0 
  │ ├── fresh@0.5.2 
  │ ├── merge-descriptors@1.0.1 
  │ ├── methods@1.1.2 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── parseurl@1.3.2 
  │ ├── path-to-regexp@0.1.7 
  │ ├─┬ proxy-addr@2.0.2 
  │ │ ├── forwarded@0.1.2 
  │ │ └── ipaddr.js@1.5.2 
  │ ├── qs@6.5.1 
  │ ├── range-parser@1.2.0 
  │ ├── safe-buffer@5.1.1 
  │ ├─┬ send@0.16.0 
  │ │ ├── destroy@1.0.4 
  │ │ └── mime@1.4.1 
  │ ├── serve-static@1.13.0 
  │ ├── setprototypeof@1.1.0 
  │ ├── statuses@1.3.1 
  │ ├─┬ type-is@1.6.15 
  │ │ └── media-typer@0.3.0 
  │ ├── utils-merge@1.0.1 
  │ └── vary@1.1.2 
  └─┬ mongodb@2.2.31 
    ├── es6-promise@3.2.1 
    ├─┬ mongodb-core@2.1.15 
    │ ├── bson@1.0.4 
    │ └─┬ require_optional@1.0.1 
    │   ├── resolve-from@2.0.0 
    │   └── semver@5.4.1 
    └─┬ readable-stream@2.2.7 
      ├── buffer-shims@1.0.0 
      ├── core-util-is@1.0.2 
      ├── inherits@2.0.3 
      ├── isarray@1.0.0 
      ├── process-nextick-args@1.0.7 
      ├── string_decoder@1.0.3 
      └── util-deprecate@1.0.2 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/elog/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0875 took 4.4683s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (1:93) on program path = require 'path'
fs = require 'fs'

# main
exports.elog = {
  LOG_FATAL: 4,
  LOG_ERROR: 3,
  LOG_WARN: 2,
  LOG_INFO: 1,
  LOG_DEBUG: 0,

  VERSION: "0.1.1",

  db: require('./db.coffee').db,
  client: require('./client.coffee').client,
  mclient: require('./mclient.coffee').mclient,
  server: require('./server.coffee').server,
  utils: require('./utils.coffee').utils,

  checkArgv: (argv, program) ->
    this.reload(program) if argv is 'reload'
    this.stop(program) if argv is 'stop'
    this.showConfig(program) if argv is 'show-config'
    this.showVersion() if argv is '-v' or argv is '--version'
    if argv is 'reset-positions' and program is 'elog-client'
      fs.unlinkSync positionFile
      process.exit 0

  kill: (program, opts = '', output) ->
    exec = require('child_process').exec
    exec("kill #{opts} `ps -ef | grep #{program} | grep -v grep | awk '{print $2}'`", (error, stdout, stderr) ->
      if error
        console.log "Error: #{error}"
        process.exit 1
      stdout.print output
    )
    process.exit 0

  updateServer: (config, action) ->
    possibleActions = ['all', 'indexes', 'dupid']
    if possibleActions.indexOf(action) is -1
      console.log "Invalid update action given: #{action}"
      console.log "Possible actions are #{possibleActions.join ', '}"
      process.exit -1

    console.log "Updating elog-server ..."

    cfg = config.mongodb
    utils = this.utils

    myDB = new this.db(cfg.host, cfg.port, cfg.database, cfg.collection, false)
    myDB.open (collection, db) ->
      collection = db.collection(cfg.collection)
      if action is 'all' or action is 'indexes'
        console.log "   >> updating indexes"
        myDB.createIndexes()

      if action is 'all' or action is 'dupid'
        collection.find().toArray (err, docs) ->
          db.close()
          console.log "   >> updating dupid for show top X errors"
          for doc in docs
            return unless doc
            return if doc.dupid
            console.log "processing log #{doc._id}"
            updatedData = {dupid: utils.md5(utils.trimLineTime(doc.msg))}
            collection.update({_id: doc._id}, {$set: updatedData})
          process.exit 0
      else
        db.close()
        process.exit 0

  reload: (program) ->
    console.log "Reloading #{program} ..."
    this.kill program, '-HUP', "Reload #{program} finished.\n"

  stop: (program) ->
    console.log "Stopping #{program} ..."
    this.kill program, '', "Stop #{program} finished.\n"

  showVersion: () ->
    console.log "version: %s", this.VERSION
    process.exit 0

  showConfig: (program) ->
    configFile = path.join(__dirname, '..', 'etc', "#{program.split('-')[1]}.json")
    console.log fs.readFileSync(configFile, 'utf8')
    process.exit 0
}
 at SyntaxError: Unexpected token (1:93)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:61)
    at Parser.pp$1.parseExpressionStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:966:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:730:24)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
    at Parser.parse (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:516:17)
    at Object.parse (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:3098:39)
    at convert (/root/ExpoSE/lib/Tropigate/bin/main.js:50:18)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
