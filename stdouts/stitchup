/root/Targets/stitchup
└─┬ stitchup@0.1.8 
  ├─┬ optimist@0.3.7 
  │ └── wordwrap@0.0.3 
  ├─┬ stitch@0.3.3 
  │ ├─┬ async@2.5.0 
  │ │ └── lodash@4.17.4 
  │ └── underscore@1.8.3 
  └── uglify-js@1.2.6 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/stitchup/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0466 took 4.8372s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node 

(function() {
  var argv, assert, fs, mode, outfile, package, sources, stitch;

  argv = process.argv.slice(2);

  stitch = require('stitch');

  fs = require('fs');

  assert = require('assert');

  argv = require('optimist').usage('Usage: stitchup [-o OUTFILE] [-m MODE] SOURCES').wrap(80).option('outfile', {
    alias: 'o',
    desc: 'Write the stitched bundle to this file',
    "default": 'application.js'
  }).option('mode', {
    alias: 'm',
    desc: 'use DEVELOPMENT to compile uncompressed js',
    "default": 'PRODUCTION'
  }).demand(1).argv;

  mode = argv.mode;

  outfile = argv.outfile;

  sources = argv._;

  console.log(sources);

  package = stitch.createPackage({
    paths: sources
  });

  package.compile(function(err, source) {
    var ast, final_code, jsp, pro;
    assert.ok(source, 'Invalid source file given.');
    if (mode !== "DEVELOPMENT") {
      jsp = require("uglify-js").parser;
      pro = require("uglify-js").uglify;
      ast = jsp.parse(source);
      ast = pro.ast_mangle(ast);
      ast = pro.ast_squeeze(ast);
      final_code = pro.gen_code(ast);
      source = final_code;
    }
    return fs.writeFile(outfile, source, function(err) {
      if (err) throw err;
      return console.log('Compiled ' + outfile + '.');
    });
  });

}).call(this);
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
