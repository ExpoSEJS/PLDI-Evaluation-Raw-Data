
> fs-ext@1.0.0 install /root/Targets/ipfs-repo/node_modules/fs-ext
> node-gyp configure build

make: Entering directory '/root/Targets/ipfs-repo/node_modules/fs-ext/build'
  CXX(target) Release/obj.target/fs-ext/fs-ext.o
  SOLINK_MODULE(target) Release/obj.target/fs-ext.node
  COPY Release/fs-ext.node
make: Leaving directory '/root/Targets/ipfs-repo/node_modules/fs-ext/build'

> leveldown@1.8.0 install /root/Targets/ipfs-repo/node_modules/leveldown
> prebuild-install || node-gyp rebuild


> secp256k1@3.3.0 install /root/Targets/ipfs-repo/node_modules/secp256k1
> prebuild-install || node-gyp rebuild || echo "Secp256k1 bindings compilation fail. Pure JS implementation will be used."

/root/Targets/ipfs-repo
└─┬ ipfs-repo@0.17.0 
  ├─┬ async@2.5.0 
  │ └── lodash@4.17.4 
  ├── base32.js@0.1.0 
  ├─┬ cids@0.5.1 
  │ ├─┬ multibase@0.3.4 
  │ │ └── base-x@3.0.0 
  │ ├── multicodec@0.1.9 
  │ └── multihashes@0.4.9 
  ├─┬ datastore-core@0.3.0 
  │ ├── left-pad@1.1.3 
  │ ├── pull-many@1.0.8 
  │ └── pull-stream@3.6.1 
  ├─┬ datastore-fs@0.3.0 
  │ ├── graceful-fs@4.1.11 
  │ ├─┬ level-js@2.2.4 
  │ │ ├─┬ abstract-leveldown@0.12.4 
  │ │ │ └── xtend@3.0.0 
  │ │ ├── idb-wrapper@1.7.1 
  │ │ ├── isbuffer@0.0.0 
  │ │ ├── typedarray-to-buffer@1.0.4 
  │ │ └─┬ xtend@2.1.2 
  │ │   └── object-keys@0.4.0 
  │ ├─┬ levelup@1.3.9 
  │ │ ├─┬ deferred-leveldown@1.2.2 
  │ │ │ └── abstract-leveldown@2.6.3 
  │ │ ├── level-codec@7.0.1 
  │ │ ├─┬ level-errors@1.0.5 
  │ │ │ └─┬ errno@0.1.4 
  │ │ │   └── prr@0.0.0 
  │ │ ├─┬ level-iterator-stream@1.3.1 
  │ │ │ ├── inherits@2.0.3 
  │ │ │ └─┬ readable-stream@1.1.14 
  │ │ │   ├── core-util-is@1.0.2 
  │ │ │   ├── isarray@0.0.1 
  │ │ │   └── string_decoder@0.10.31 
  │ │ ├── prr@1.0.1 
  │ │ └── semver@5.4.1 
  │ ├─┬ mkdirp@0.5.1 
  │ │ └── minimist@0.0.8 
  │ ├─┬ pull-glob@1.0.6 
  │ │ └─┬ pull-fs@1.1.6 
  │ │   ├─┬ pull-file@0.5.0 
  │ │   │ └── pull-utf8-decoder@1.0.2 
  │ │   ├── pull-traverse@1.0.3 
  │ │   └── pull-write-file@0.2.4 
  │ └─┬ write-file-atomic@2.3.0 
  │   ├── imurmurhash@0.1.4 
  │   └── signal-exit@3.0.2 
  ├─┬ datastore-level@0.6.0 
  │ └─┬ level-js@2.2.4 
  │   └─┬ xtend@2.1.2 
  │     └── object-keys@0.4.0 
  ├─┬ debug@2.6.9 
  │ └── ms@2.0.0 
  ├─┬ interface-datastore@0.3.1 
  │ ├─┬ libp2p-crypto@0.10.3 
  │ │ ├─┬ asn1.js@4.9.1 
  │ │ │ ├── bn.js@4.11.8 
  │ │ │ └── minimalistic-assert@1.0.0 
  │ │ ├─┬ browserify-aes@1.0.8 
  │ │ │ ├── buffer-xor@1.0.3 
  │ │ │ ├── cipher-base@1.0.4 
  │ │ │ ├─┬ create-hash@1.1.3 
  │ │ │ │ ├─┬ ripemd160@2.0.1 
  │ │ │ │ │ └── hash-base@2.0.2 
  │ │ │ │ └── sha.js@2.4.9 
  │ │ │ └─┬ evp_bytestokey@1.0.3 
  │ │ │   └─┬ md5.js@1.3.4 
  │ │ │     └── hash-base@3.0.4 
  │ │ ├── keypair@1.0.1 
  │ │ ├─┬ libp2p-crypto-secp256k1@0.2.2 
  │ │ │ └─┬ secp256k1@3.3.0 
  │ │ │   ├── bip66@1.1.5 
  │ │ │   ├─┬ drbg.js@1.0.1 
  │ │ │   │ └── create-hmac@1.1.6 
  │ │ │   └─┬ elliptic@6.4.0 
  │ │ │     ├── brorand@1.1.0 
  │ │ │     ├── hash.js@1.1.3 
  │ │ │     ├── hmac-drbg@1.0.1 
  │ │ │     └── minimalistic-crypto-utils@1.0.1 
  │ │ ├─┬ multihashing-async@0.4.6 
  │ │ │ ├── blakejs@1.1.0 
  │ │ │ ├── js-sha3@0.6.1 
  │ │ │ └── murmurhash3js@3.0.1 
  │ │ ├─┬ pem-jwk@1.5.1 
  │ │ │ └─┬ asn1.js@1.0.3 
  │ │ │   └── bn.js@1.3.0 
  │ │ ├─┬ protons@1.0.0 
  │ │ │ ├─┬ brfs@1.4.3 
  │ │ │ │ ├─┬ quote-stream@1.0.2 
  │ │ │ │ │ └── buffer-equal@0.0.1 
  │ │ │ │ ├─┬ resolve@1.4.0 
  │ │ │ │ │ └── path-parse@1.0.5 
  │ │ │ │ ├─┬ static-module@1.5.0 
  │ │ │ │ │ ├─┬ concat-stream@1.6.0 
  │ │ │ │ │ │ └── typedarray@0.0.6 
  │ │ │ │ │ ├─┬ duplexer2@0.0.2 
  │ │ │ │ │ │ └─┬ readable-stream@1.1.14 
  │ │ │ │ │ │   ├── isarray@0.0.1 
  │ │ │ │ │ │   └── string_decoder@0.10.31 
  │ │ │ │ │ ├─┬ escodegen@1.3.3 
  │ │ │ │ │ │ ├── esprima@1.1.1 
  │ │ │ │ │ │ ├── estraverse@1.5.1 
  │ │ │ │ │ │ ├── esutils@1.0.0 
  │ │ │ │ │ │ └─┬ source-map@0.1.43 
  │ │ │ │ │ │   └── amdefine@1.0.1 
  │ │ │ │ │ ├─┬ falafel@2.1.0 
  │ │ │ │ │ │ ├── acorn@5.1.2 
  │ │ │ │ │ │ ├── foreach@2.0.5 
  │ │ │ │ │ │ ├── isarray@0.0.1 
  │ │ │ │ │ │ └── object-keys@1.0.11 
  │ │ │ │ │ ├─┬ has@1.0.1 
  │ │ │ │ │ │ └── function-bind@1.1.1 
  │ │ │ │ │ ├── object-inspect@0.4.0 
  │ │ │ │ │ ├─┬ quote-stream@0.0.0 
  │ │ │ │ │ │ └── minimist@0.0.8 
  │ │ │ │ │ ├─┬ readable-stream@1.0.34 
  │ │ │ │ │ │ ├── isarray@0.0.1 
  │ │ │ │ │ │ └── string_decoder@0.10.31 
  │ │ │ │ │ ├── shallow-copy@0.0.1 
  │ │ │ │ │ ├─┬ static-eval@0.2.4 
  │ │ │ │ │ │ └─┬ escodegen@0.0.28 
  │ │ │ │ │ │   ├── esprima@1.0.4 
  │ │ │ │ │ │   └── estraverse@1.3.2 
  │ │ │ │ │ └─┬ through2@0.4.2 
  │ │ │ │ │   └─┬ xtend@2.1.2 
  │ │ │ │ │     └── object-keys@0.4.0 
  │ │ │ │ └── through2@2.0.3 
  │ │ │ ├── protocol-buffers-schema@3.3.2 
  │ │ │ └── signed-varint@2.0.1 
  │ │ ├─┬ rsa-pem-to-jwk@1.1.3 
  │ │ │ ├── object-assign@2.1.1 
  │ │ │ └─┬ rsa-unpack@0.0.6 
  │ │ │   └─┬ optimist@0.3.7 
  │ │ │     └── wordwrap@0.0.3 
  │ │ ├── tweetnacl@1.0.0 
  │ │ └── webcrypto-shim@0.1.1  (git://github.com/dignifiedquire/webcrypto-shim.git#effe03d3401ccbfb4837191bc393bb347e0c0f0a)
  │ ├── pull-defer@0.2.2 
  │ └── uuid@3.1.0 
  ├─┬ ipfs-block@0.6.0 
  │ └── cids@0.4.2 
  ├─┬ level-js@2.2.3  (git://github.com/timkuijsten/level.js.git#18e03adab34c49523be7d3d58fafb0c632f61303)
  │ ├── abstract-leveldown@2.4.1 
  │ ├── idb-readable-stream@0.0.4 
  │ ├── ltgt@2.2.0 
  │ └── xtend@4.0.1 
  ├─┬ leveldown@1.8.0 
  │ ├── abstract-leveldown@2.7.0 
  │ ├── bindings@1.3.0 
  │ ├── fast-future@1.0.2 
  │ ├── nan@2.7.0 
  │ └─┬ prebuild-install@2.2.2 
  │   ├── expand-template@1.1.0 
  │   ├── github-from-package@0.0.0 
  │   ├── minimist@1.2.0 
  │   ├── node-abi@2.1.1 
  │   ├── noop-logger@0.1.1 
  │   ├─┬ npmlog@4.1.2 
  │   │ ├─┬ are-we-there-yet@1.1.4 
  │   │ │ ├── delegates@1.0.0 
  │   │ │ └─┬ readable-stream@2.3.3 
  │   │ │   ├── isarray@1.0.0 
  │   │ │   ├── process-nextick-args@1.0.7 
  │   │ │   ├── string_decoder@1.0.3 
  │   │ │   └── util-deprecate@1.0.2 
  │   │ ├── console-control-strings@1.1.0 
  │   │ ├─┬ gauge@2.7.4 
  │   │ │ ├── aproba@1.2.0 
  │   │ │ ├── has-unicode@2.0.1 
  │   │ │ ├── object-assign@4.1.1 
  │   │ │ ├─┬ string-width@1.0.2 
  │   │ │ │ ├── code-point-at@1.1.0 
  │   │ │ │ └─┬ is-fullwidth-code-point@1.0.0 
  │   │ │ │   └── number-is-nan@1.0.1 
  │   │ │ ├─┬ strip-ansi@3.0.1 
  │   │ │ │ └── ansi-regex@2.1.1 
  │   │ │ └── wide-align@1.1.2 
  │   │ └── set-blocking@2.0.0 
  │   ├── os-homedir@1.0.2 
  │   ├─┬ pump@1.0.2 
  │   │ └── end-of-stream@1.4.0 
  │   ├─┬ rc@1.2.1 
  │   │ ├── deep-extend@0.4.2 
  │   │ ├── ini@1.3.4 
  │   │ └── strip-json-comments@2.0.1 
  │   ├─┬ simple-get@1.4.3 
  │   │ └── unzip-response@1.0.2 
  │   ├─┬ tar-fs@1.15.3 
  │   │ ├── chownr@1.0.1 
  │   │ └─┬ tar-stream@1.5.4 
  │   │   └── bl@1.2.1 
  │   └── tunnel-agent@0.6.0 
  ├─┬ lock-me@1.0.2 
  │ ├─┬ find-process@1.1.0 
  │ │ ├─┬ chalk@2.1.0 
  │ │ │ ├─┬ ansi-styles@3.2.0 
  │ │ │ │ └─┬ color-convert@1.9.0 
  │ │ │ │   └── color-name@1.1.3 
  │ │ │ ├── escape-string-regexp@1.0.5 
  │ │ │ └─┬ supports-color@4.4.0 
  │ │ │   └── has-flag@2.0.0 
  │ │ └── commander@2.11.0 
  │ ├── fs-ext@1.0.0  (git://github.com/baudehlo/node-fs-ext.git#500be8514729c194ac7ca2b30b5bc7eaf812670d)
  │ ├─┬ nodeify@1.0.1 
  │ │ ├── is-promise@1.0.1 
  │ │ └── promise@1.3.0 
  │ └─┬ once@1.4.0 
  │   └── wrappy@1.0.2 
  ├── lodash.get@4.4.2 
  ├── lodash.has@4.5.2 
  ├── lodash.set@4.3.2 
  ├─┬ multiaddr@2.3.0 
  │ ├─┬ bs58@4.0.1 
  │ │ └── base-x@3.0.2 
  │ ├── ip@1.1.5 
  │ ├── lodash.filter@4.6.0 
  │ ├── lodash.map@4.6.0 
  │ └── varint@5.0.0 
  └── safe-buffer@5.1.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/ipfs-repo/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0385 took 3.458s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (7:6) on program 'use strict'

const waterfall = require('async/waterfall')
const series = require('async/series')
const parallel = require('async/parallel')
const each = require('async/each')
const assert = require('assert')
const path = require('path')
const debug = require('debug')

const backends = require('./backends')
const version = require('./version')
const config = require('./config')
const apiAddr = require('./api-addr')
const blockstore = require('./blockstore')
const defaultOptions = require('./default-options')

const log = debug('repo')

const lockers = {
  memory: require('./lock-memory'),
  fs: require('./lock')
}

const repoVersion = 5

/**
 * IpfsRepo implements all required functionality to read and write to an ipfs repo.
 *
 */
class IpfsRepo {
  /**
   * @param {string} repoPath - path where the repo is stored
   * @param {object} options - Configuration
   */
  constructor (repoPath, options) {
    assert.equal(typeof repoPath, 'string', 'missing repoPath')

    this.options = buildOptions(options)
    this.closed = true
    this.path = repoPath

    this._locker = lockers[this.options.lock]
    assert(this._locker, 'Unknown lock type: ' + this.options.lock)

    this.root = backends.create('root', this.path, this.options)
    this.version = version(this.root)
    this.config = config(this.root)
    this.apiAddr = apiAddr(this.root)
  }

  /**
   * Initialize a new repo.
   *
   * @param {Object} config - config to write into `config`.
   * @param {function(Error)} callback
   * @returns {void}
   */
  init (config, callback) {
    log('initializing at: %s', this.path)

    series([
      (cb) => this.root.open(ignoringAlreadyOpened(cb)),
      (cb) => this.config.set(config, cb),
      (cb) => this.version.set(repoVersion, cb)
    ], callback)
  }

  /**
   * Open the repo. If the repo is already open no action will be taken.
   * If the repo is not initialized it will return an error.
   *
   * @param {function(Error)} callback
   * @returns {void}
   */
  open (callback) {
    if (!this.closed) {
      setImmediate(() => callback(new Error('repo is already open')))
      return // early
    }
    log('opening at: %s', this.path)

    // check if the repo is already initialized
    waterfall([
      (cb) => this.root.open(ignoringAlreadyOpened(cb)),
      (cb) => this._isInitialized(cb),
      (cb) => this._locker.lock(this.path, cb),
      (lck, cb) => {
        log('aquired repo.lock')
        this.lockfile = lck
        cb()
      },
      (cb) => {
        log('creating datastore')
        this.datastore = backends.create('datastore', path.join(this.path, 'datastore'), this.options)
        log('creating blocks')
        const blocksBaseStore = backends.create('blocks', path.join(this.path, 'blocks'), this.options)
        blockstore(
          blocksBaseStore,
          this.options.storageBackendOptions.blocks,
          cb)
      },
      (blocks, cb) => {
        this.blocks = blocks
        cb()
      },
      (cb) => {
        this.closed = false
        log('all opened')
        cb()
      }
    ], (err) => {
      if (err && this.lockfile) {
        this.lockfile.close((err2) => {
          if (!err2) {
            this.lockfile = null
          } else {
            log('error removing lock', err2)
          }
          callback(err)
        })
      } else {
        callback(err)
      }
    })
  }

  /**
   * Check if the repo is already initialized.
   *
   * @private
   * @param {function(Error)} callback
   * @returns {void}
   */
  _isInitialized (callback) {
    log('init check')
    parallel(
      {
        config: (cb) => this.config.exists(cb),
        version: (cb) => this.version.check(repoVersion, cb)
      },
      (err, res) => {
        log('init', err, res)
        if (err) {
          return callback(err)
        }

        if (!res.config) {
          return callback(new Error('repo is not initialized yet'))
        }
        callback()
      }
    )
  }

  /**
   * Close the repo and cleanup.
   *
   * @param {function(Error)} callback
   * @returns {void}
   */
  close (callback) {
    if (this.closed) {
      return callback(new Error('repo is already closed'))
    }

    log('closing at: %s', this.path)
    series([
      (cb) => this.apiAddr.delete(ignoringNotFound(cb)),
      (cb) => {
        each(
          [this.blocks, this.datastore],
          (store, callback) => store.close(callback),
          cb)
      },
      (cb) => {
        log('unlocking')
        this.closed = true
        this.lockfile.close(cb)
      },
      (cb) => {
        this.lockfile = null
        cb()
      }
    ], (err) => callback(err))
  }

  /**
   * Check if a repo exists.
   *
   * @param {function(Error, bool)} callback
   * @returns {void}
   */
  exists (callback) {
    this.version.exists(callback)
  }
}

module.exports = IpfsRepo

function ignoringIf (cond, cb) {
  return (err) => {
    cb(err && !cond(err) ? err : null)
  }
}
function ignoringAlreadyOpened (cb) {
  return ignoringIf((err) => err.message === 'Already open', cb)
}

function ignoringNotFound (cb) {
  return ignoringIf((err) => err.message.startsWith('ENOENT'), cb)
}

function buildOptions (_options) {
  const options = Object.assign({}, defaultOptions, _options)

  options.storageBackends = Object.assign(
    {},
    defaultOptions.storageBackends,
    options.storageBackends)

  options.storageBackendOptions = Object.assign(
    {},
    defaultOptions.storageBackendOptions,
    options.storageBackendOptions)

  return options
}
 at SyntaxError: Unexpected token (7:6)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
