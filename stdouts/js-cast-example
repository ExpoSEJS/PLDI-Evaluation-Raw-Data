/root/Targets/js-cast-example
└─┬ js-cast-example@0.0.4 
  ├── ejs@0.8.3 
  ├─┬ express@3.0.0-rc4 
  │ ├── commander@0.6.1 
  │ ├─┬ connect@2.4.4 
  │ │ ├── bytes@0.1.0 
  │ │ ├── formidable@1.0.11 
  │ │ ├── pause@0.0.1 
  │ │ └── qs@0.4.2 
  │ ├── cookie@0.0.4 
  │ ├── crc@0.2.0 
  │ ├─┬ debug@3.1.0 
  │ │ └── ms@2.0.0 
  │ ├── fresh@0.1.0 
  │ ├── methods@0.0.1 
  │ ├── mkdirp@0.3.3 
  │ ├── range-parser@0.0.4 
  │ └─┬ send@0.0.4 
  │   └── mime@1.2.6 
  └─┬ js-cast@0.0.5 
    ├── clone@0.1.1 
    ├─┬ fs.extra@1.2.0 
    │ ├─┬ fs-extra@0.1.2 
    │ │ ├── ncp@0.2.7 
    │ │ └── rimraf@1.0.9 
    │ └─┬ walk@2.3.9 
    │   └── foreachasync@3.0.0 
    ├─┬ node-static@0.6.2 
    │ ├── colors@1.1.2 
    │ └─┬ optimist@0.6.1 
    │   ├── minimist@0.0.10 
    │   └── wordwrap@0.0.3 
    └─┬ util@0.4.9 
      └── events.node@0.4.9 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/js-cast-example/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 21% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","call"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0401 took 7.3306s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Invalid number (9:15) on program var path = require('path');
var fs = require('fs');

module.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;

function mkdirP (p, mode, f, made) {
    if (typeof mode === 'function' || mode === undefined) {
        f = mode;
        mode = 0777 & (~process.umask());
    }
    if (!made) made = null;

    var cb = f || function () {};
    if (typeof mode === 'string') mode = parseInt(mode, 8);
    p = path.resolve(p);

    fs.mkdir(p, mode, function (er) {
        if (!er) {
            made = made || p;
            return cb(null, made);
        }
        switch (er.code) {
            case 'ENOENT':
                mkdirP(path.dirname(p), mode, function (er, made) {
                    if (er) cb(er, made);
                    else mkdirP(p, mode, cb, made);
                });
                break;

            case 'EISDIR':
            case 'EPERM':
                // Operation not permitted or already is a dir.
                // This is the error you get when trying to mkdir('c:/')
                // on windows, or mkdir('/') on unix.  Make sure it's a
                // dir by falling through to the EEXIST case.
            case 'EROFS':
                // a read-only file system.
                // However, the dir could already exist, in which case
                // the EROFS error will be obscuring a EEXIST!
                // Fallthrough to that case.
            case 'EEXIST':
                fs.stat(p, function (er2, stat) {
                    // if the stat fails, then that's super weird.
                    // let the original error be the failure reason.
                    if (er2 || !stat.isDirectory()) cb(er, made)
                    else cb(null, made);
                });
                break;

            default:
                cb(er, made);
                break;
        }
    });
}

mkdirP.sync = function sync (p, mode, made) {
    if (mode === undefined) {
        mode = 0777 & (~process.umask());
    }
    if (!made) made = null;

    if (typeof mode === 'string') mode = parseInt(mode, 8);
    p = path.resolve(p);

    try {
        fs.mkdirSync(p, mode);
        made = made || p;
    }
    catch (err0) {
        switch (err0.code) {
            case 'ENOENT' :
                made = sync(path.dirname(p), mode, made);
                sync(p, mode, made);
                break;

            case 'EEXIST' :
                var stat;
                try {
                    stat = fs.statSync(p);
                }
                catch (err1) {
                    throw err0;
                }
                if (!stat.isDirectory()) throw err0;
                break;
            default :
                throw err0
                break;
        }
    }

    return made;
};
 at SyntaxError: Invalid number (9:15)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1607:12)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/js-cast-example/node_modules/js-cast-example/server.js. Coverage (Term): 9% Coverage (LOC): 9%
*- File /root/Targets/js-cast-example/node_modules/js-cast/index.js. Coverage (Term): 80% Coverage (LOC): 100%
*- File /root/Targets/js-cast-example/node_modules/js-cast/lib/js-cast.js. Coverage (Term): 3% Coverage (LOC): 3%
*- File /root/Targets/js-cast-example/node_modules/fs.extra/fs.extra.js. Coverage (Term): 18% Coverage (LOC): 19%
*- File /root/Targets/js-cast-example/node_modules/fs-extra/lib/index.js. Coverage (Term): 69% Coverage (LOC): 70%
*- File /root/Targets/js-cast-example/node_modules/fs-extra/lib/copy.js. Coverage (Term): 37% Coverage (LOC): 42%
*- File /root/Targets/js-cast-example/node_modules/ncp/lib/ncp.js. Coverage (Term): 4% Coverage (LOC): 4%
*- File /root/Targets/js-cast-example/node_modules/fs-extra/lib/remove.js. Coverage (Term): 60% Coverage (LOC): 65%
*- File /root/Targets/js-cast-example/node_modules/rimraf/rimraf.js. Coverage (Term): 11% Coverage (LOC): 15%
*- File /root/Targets/js-cast-example/node_modules/fs-extra/lib/mkdir.js. Coverage (Term): 55% Coverage (LOC): 67%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
