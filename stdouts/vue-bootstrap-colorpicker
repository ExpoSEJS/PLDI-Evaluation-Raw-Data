/root/Targets/vue-bootstrap-colorpicker
└─┬ vue-bootstrap-colorpicker@2.0.8 
  ├─┬ babel-runtime@6.26.0 
  │ ├── core-js@2.5.1 
  │ └── regenerator-runtime@0.11.0 
  └── vue@2.4.4 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/vue-bootstrap-colorpicker/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0257 took 2.7776s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (1:78) on program <template>
  <div class="btn-group colorpicker">
    <a class="label dropdown-toggle" :style="'background-color:' + value" type="button" data-toggle="dropdown">
      <slot>{{ content }}</slot>
    </a>

    <ul class="dropdown-menu" role="menu">
      <li v-for="colo in colors">
        <a class="label text-left" :style="'background-color:' + colo"  @click="picked(colo)">
          <i v-if="colo === value" class="glyphicon glyphicon-ok"></i>
          <i v-else></i>
        </a>
      </li>
    </ul>
  </div>
</template>
<script>
  export default {
    props: {
      value: String,
      content: {
        type: String,
        default: function () {
          return ' ~ PKAQ ~ '
        }
      },
      colors: {
        type: Array,
        default: function () {
          return ['#FFAC0C', '#309BAC', '#247B79', '#8AA766', '#F6C048', '#B52F85', '#707070', '#9386BD', '#D74063', '#F4889F', '#8B7366']
        }
      }
    },
    methods: {
      picked: function (color) {
        this.$emit('input', color)
      }
    }
  }
</script>
<style>
.colorpicker a{
  color: #000;
  background :#cfcfcf;
  padding: 5px;
}

.colorpicker ul {
  width:236px;
}

.colorpicker ul li{
  float: left;
  width: 36px;
  height: 36px;
  margin: 3px 5px;
}

.colorpicker ul li a i{
  color: #fff;
  left: -5px;
}

.colorpicker ul li a{
  width: 100%;
  height: 100%;
  line-height: 30px;
  text-align: center;
  display: block;
  cursor: pointer;
}
.colorpicker ul li a:hover{
  border: 1px #c3c3c3 dashed;
}

</style>
 at SyntaxError: Unexpected token (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1822:12)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1597:21)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
