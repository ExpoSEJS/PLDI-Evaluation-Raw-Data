/root/Targets/resume-generator
└─┬ resume-generator@0.2.2 
  ├── async@0.2.10 
  ├─┬ jade@0.35.0 
  │ ├── character-parser@1.2.0 
  │ ├── commander@2.0.0 
  │ ├─┬ constantinople@1.0.2 
  │ │ └─┬ uglify-js@2.4.24 
  │ │   ├─┬ source-map@0.1.34 
  │ │   │ └── amdefine@1.0.1 
  │ │   ├── uglify-to-browserify@1.0.2 
  │ │   └─┬ yargs@3.5.4 
  │ │     ├── camelcase@1.2.1 
  │ │     ├── decamelize@1.2.0 
  │ │     └── window-size@0.1.0 
  │ ├── mkdirp@0.3.5 
  │ ├─┬ monocle@1.1.50 
  │ │ └─┬ readdirp@0.2.5 
  │ │   └─┬ minimatch@3.0.4 
  │ │     └─┬ brace-expansion@1.1.8 
  │ │       ├── balanced-match@1.0.0 
  │ │       └── concat-map@0.0.1 
  │ ├─┬ transformers@2.1.0 
  │ │ ├─┬ css@1.0.8 
  │ │ │ ├── css-parse@1.0.4 
  │ │ │ └── css-stringify@1.0.5 
  │ │ ├─┬ promise@2.0.0 
  │ │ │ └── is-promise@1.0.1 
  │ │ └─┬ uglify-js@2.2.5 
  │ │   └── optimist@0.3.7 
  │ └─┬ with@1.1.1 
  │   └─┬ uglify-js@2.4.0 
  │     └── optimist@0.3.7 
  ├─┬ js-yaml@2.1.3 
  │ ├─┬ argparse@0.1.16 
  │ │ ├── underscore@1.7.0 
  │ │ └── underscore.string@2.4.0 
  │ └── esprima@1.0.4 
  ├── moment@2.0.0 
  ├─┬ optimist@0.6.1 
  │ ├── minimist@0.0.10 
  │ └── wordwrap@0.0.2 
  ├── q@0.9.7 
  ├── shortid@1.0.9 
  ├── underscore@1.4.4 
  ├── underscore-query@0.3.0 
  └── underscore.string@2.3.3 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/resume-generator/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0535 took 3.2944s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/local/bin/node

(function() {

    require('js-yaml');

    // Define our command line syntax
    var optimist = require('optimist'),
        Q = require('q'),
        Career = require('./lib/career'),
        Job = require('./lib/job'),
        JobMatcher = require('./lib/matcher'),
        Layout = require('./lib/layout'),
        util = require('util'),
        Renderer = require('./lib/renderer');

    var argv = optimist
        .usage("Match facts about your career and a job description to produce a customized resume. %0")
        .options({
            'b':{
                alias: 'bio',
                default: 'stdin',
                describe: 'Root file to your career facts'
            },
            'j':{
                alias:'job',
                default:'./job.yml',
                describe: 'Path to a file describing the current job on which you want to apply'
            },
            'f':{
                alias:'format',
                default:'MSWORD',
                describe: 'Format of the output. PDF, JSON, XML, MSWORD are supported'
            },
            'o':{
                alias:'output',
                default: 'stdout',
                describe: "Output path for the produced resume. "
            },
            'l':{
                alias:'layout',
                default:'classic',
                describe: 'Template file to use to render your resume'
            },
            'r':{
                alias:'rules',
                describe: 'Additional folder where to load job analysis rules'
            },
            'h':{
                alias:'help',
                describe: "Show this help"
            },
            's':{
                alias:'silent',
                describe: 'Do not display any output to the console'
            }
        })
        .argv;

    if(!argv.s) {
        console.log("Resume Generator Version 0.1.0");
        console.log("(C) Copyright 2013 Joel Grenon. Published under the Apache V2 License");
        console.log("");
    }

    if(argv.h) {
        optimist.showHelp();
        process.exit(0);
    }

    Q.all([
        Career.load(argv.b),
        Job.load(argv.j),
        (function() {
            var matcher = new JobMatcher();
            matcher.addRules("./rules");

            if(argv.r) {
                matcher.addRules(argv.r);
            }
            return Q.when(matcher);
        })(),
        Layout.load(argv.l),
        Renderer.load(argv.f)
    ]).spread(function(career, job, matcher, layout, renderer) {
        log("Working model loaded. Ready to generate your resume");

        // Retrieve all relevant experiences for the target job
        matcher.with(career).match(job).then(function(model) {

            // Rendering layout
            log("Rendering resume in ", argv.f);
            renderer.layout(layout).render(model).to(argv.o).then(function(result) {

                log("Resume has been successfully rendered to ", argv.o);
                log("Generation Report: ", result);

            }, handleError);

        }, handleError);

    }).fail(handleError);

    function handleError(err) {
        if(err) {
            console.log("ERROR: "+err);
            process.exit(-1);
        }
    }

    function log() {
        if(!argv.s)
            console.log.apply(this, arguments);
    }

})();
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
