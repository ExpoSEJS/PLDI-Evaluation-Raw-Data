/root/Targets/planning-application-scraper
└─┬ planning-application-scraper@0.0.1 
  ├─┬ dateformat@1.0.12 
  │ ├── get-stdin@4.0.1 
  │ └─┬ meow@3.7.0 
  │   ├─┬ camelcase-keys@2.1.0 
  │   │ └── camelcase@2.1.1 
  │   ├── decamelize@1.2.0 
  │   ├─┬ loud-rejection@1.6.0 
  │   │ ├─┬ currently-unhandled@0.4.1 
  │   │ │ └── array-find-index@1.0.2 
  │   │ └── signal-exit@3.0.2 
  │   ├── map-obj@1.0.1 
  │   ├── minimist@1.2.0 
  │   ├─┬ normalize-package-data@2.4.0 
  │   │ ├── hosted-git-info@2.5.0 
  │   │ ├─┬ is-builtin-module@1.0.0 
  │   │ │ └── builtin-modules@1.1.1 
  │   │ ├── semver@5.4.1 
  │   │ └─┬ validate-npm-package-license@3.0.1 
  │   │   ├─┬ spdx-correct@1.0.2 
  │   │   │ └── spdx-license-ids@1.2.2 
  │   │   └── spdx-expression-parse@1.0.4 
  │   ├── object-assign@4.1.1 
  │   ├─┬ read-pkg-up@1.0.1 
  │   │ ├─┬ find-up@1.1.2 
  │   │ │ ├── path-exists@2.1.0 
  │   │ │ └─┬ pinkie-promise@2.0.1 
  │   │ │   └── pinkie@2.0.4 
  │   │ └─┬ read-pkg@1.1.0 
  │   │   ├─┬ load-json-file@1.1.0 
  │   │   │ ├── graceful-fs@4.1.11 
  │   │   │ ├─┬ parse-json@2.2.0 
  │   │   │ │ └─┬ error-ex@1.3.1 
  │   │   │ │   └── is-arrayish@0.2.1 
  │   │   │ ├── pify@2.3.0 
  │   │   │ └─┬ strip-bom@2.0.0 
  │   │   │   └── is-utf8@0.2.1 
  │   │   └── path-type@1.1.0 
  │   ├─┬ redent@1.0.0 
  │   │ ├─┬ indent-string@2.1.0 
  │   │ │ └─┬ repeating@2.0.1 
  │   │ │   └─┬ is-finite@1.0.2 
  │   │ │     └── number-is-nan@1.0.1 
  │   │ └── strip-indent@1.0.1 
  │   └── trim-newlines@1.0.0 
  ├─┬ pg@4.5.7 
  │ ├── buffer-writer@1.0.1 
  │ ├── generic-pool@2.4.2 
  │ ├── js-string-escape@1.0.1 
  │ ├── packet-reader@0.2.0 
  │ ├── pg-connection-string@0.1.3 
  │ ├─┬ pg-types@1.12.1 
  │ │ ├── postgres-array@1.0.2 
  │ │ ├── postgres-bytea@1.0.0 
  │ │ ├── postgres-date@1.0.3 
  │ │ └─┬ postgres-interval@1.1.1 
  │ │   └── xtend@4.0.1 
  │ ├─┬ pgpass@0.0.3 
  │ │ └─┬ split@0.3.3 
  │ │   └── through@2.3.8 
  │ └── semver@4.3.6 
  └─┬ yql@1.0.2 
    ├─┬ request@2.34.0 
    │ ├── aws-sign2@0.5.0 
    │ ├── forever-agent@0.5.2 
    │ ├─┬ form-data@0.1.4 
    │ │ ├── async@0.9.2 
    │ │ └─┬ combined-stream@0.0.7 
    │ │   └── delayed-stream@0.0.5 
    │ ├─┬ hawk@1.0.0 
    │ │ ├── boom@0.4.2 
    │ │ ├── cryptiles@0.2.2 
    │ │ ├── hoek@0.9.1 
    │ │ └── sntp@0.2.4 
    │ ├─┬ http-signature@0.10.1 
    │ │ ├── asn1@0.1.11 
    │ │ ├── assert-plus@0.1.5 
    │ │ └── ctype@0.5.3 
    │ ├── json-stringify-safe@5.0.1 
    │ ├── mime@1.2.11 
    │ ├── node-uuid@1.4.8 
    │ ├── oauth-sign@0.3.0 
    │ ├── qs@0.6.6 
    │ ├─┬ tough-cookie@2.3.3 
    │ │ └── punycode@1.4.1 
    │ └── tunnel-agent@0.3.0 
    └── underscore@1.6.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/planning-application-scraper/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0487 took 4.2167s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node

/**
 * Scrape tool for Dublin City Council's planning application search results.
 *
 * 1. get list of Planning Application References: xxxx/yy
 * 2. grab data from url{$app_id}
 * @author daithi coombes <daithi.coombes@futureanalytics.ie>
 */
var scraper = require('./lib/PlanAppScraper'),
    pg = require('pg'),
    dateFormat = require('dateformat')

scraper.baseUrl = 'http://www.dublincity.ie/swiftlg/apas/run/'

/**
 * Query one search result page
 */
var i = 1;
while(i<=500){

    var url = 'http://www.dublincity.ie/swiftlg/apas/run/WPHAPPSEARCHRES.displayResultsURL?ResultID=3132720&StartIndex='+i+'&SortOrder=APNID&DispResultsAs=WPHAPPSEARCHRES&BackURL=%3Ca%20href=wphappcriteria.display?paSearchKey=2602472%3ESearch%20Criteria%3C/a%3E'

    scraper.getSites(url, function(err, sites){

        for(var i=0; i<sites.length; i++){

            var site = sites[i]

            scraper.getSite(site, function(res){

                dbInsert(res, function(){})
            })
        }
    })

    //setTimeout(scraper.run, 10000, url)
    i += 10
}

function dbInsert(site, cb){
    //debugger;

    var dbUrl = 'postgres://postgres:chanman@localhost/postgres',
        _cb = cb,
        _site = site

    pg.connect(dbUrl, function(err, client, done){

        var handleError = function(err) {
          if(!err) return false;

          if(client){
            done(client);
          }
          console.log(err);
          return true;
        };

        // handle an error from the connection
        if(handleError(err)) return;

        //format dates
        var format = "yyyy-mm-dd",
            __cb = cb

        if(site.extensionOfTimeTo=='') site.extensionOfTimeTo = null
        else site.extensionOfTimeTo = dateFormat(site.extensionOfTimeTo, format)
        if(site.decision.date=='') site.decision.date = null
        else site.decision.date = dateFormat(site.decision.date, format)
        if(site.date.application=='') site.date.application = null
        else site.date.application = dateFormat(site.date.application, format)
        if(site.date.registration=='') site.date.registration = null
        else site.date.registration = dateFormat(site.date.registration, format)
        if(site.date.finalGrant=='') site.date.finalGrant = null
        else site.date.finalGrant = dateFormat(site.date.finalGrant, format)
        if(site.date.observationFinal=='') site.date.observationFinal = null
        else site.date.observationFinal = dateFormat(site.date.observationFinal, format)

        //insert array
        var array = [
            site.webReference,
            site.address,
            site.proposal,
            site.url,
            site.apnId,
            site.applicationType,
            site.extensionOfTimeTo,
            site.decision.status,
            site.decision.date,
            site.date.application,
            site.date.registration,
            site.date.finalGrant,
            site.date.observationFinal,
            site.applicant.name,
            site.applicant.company,
            site.applicant.caseOfficer,
            site.agent.name,
            site.agent.company
        ]

        //query db
        var qry = 'INSERT INTO Site (webReference, address, proposal, url, reference, type, dateExtension, decisionStatus, dateDecision, dateApplication, dateRegistration, dateFinalGrant, dateObservationFinal, applicantName, applicantCompany, applicantCaseOfficer, agentName, agentCompany)'
            + ' VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18)'
        client.query(qry, array, function(err, res){

            var handleError = function(err) {
              if(!err) return false
              if(client){
                done(client);
              }
              console.log(err);
              return true;
            };

            // handle an error from the connection
            if(handleError(err)) return;

            console.log('Inserted row for: '+site.apnId)
            done(client)
            __cb()
        })
    })
}


/**
 * Sample data
 { webReference: '',
   address: '33, Harold Road, Dublin 7',
   proposal: 'RETENTION: A single storey extension to the rear of the existing dwelling.\r\n',
   url: 'http://www.dublincity.ie/swiftlg/apas/run/WPHAPPDETAIL.DisplayUrl?theApnID=3439/15&backURL=BackURL ',
   apnId: '3439/15',
   applicationType: 'Retention Permission',
   extensionOfTimeTo: '',
   decision: { status: '', date: '' },
   date:
    { application: '14-Aug-2015',
      registration: '14-Aug-2015',
      decision: '',
      finalGrant: '',
      observationFinal: '17-Sep-2015' },
   applicant:
    { name: '',
      company: 'Frank Kelly',
      caseOfficer: 'Deirdre O\'Reilly' },
   agent: { name: '', company: 'McKenna and Associates' } }
 */
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
