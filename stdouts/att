
> node-pngcrush@1.0.0 install /root/Targets/att/node_modules/node-pngcrush
> node ./scripts/install.js

Downloading binary from https://github.com/xiangshouding/node-pngcrush/releases/download/v1.0.0/linux-x64-51_binding.node

> node-pngquant-native@2.0.1 install /root/Targets/att/node_modules/node-pngquant-native
> node ./scripts/install.js

Downloading binary from https://github.com/xiangshouding/node-pngquant-native/releases/download/v2.0.1/linux-x64-51_binding.node

> node-advpng@0.0.3 postinstall /root/Targets/att/node_modules/node-advpng
> node pre-build.js

start copy from local bin path
[2J[1;3Hadvancecomp v1.18 by Andrea Mazzoleni
Usage: advpng [options] [FILES...]

Modes:
  -l, --list            List the content of the files
  -z, --recompress      Recompress the specified files
Options:
  -0, --shrink-store    Don't compress
  -1, --shrink-fast     Compress fast (zlib)
  -2, --shrink-normal   Compress normal (7z)
  -3, --shrink-extra    Compress extra (7z)
  -4, --shrink-insane   Compress extreme (zopfli)
  -i N, --iter=N        Compress iterations
  -f, --force           Force the new file also if it's bigger
  -q, --quiet           Don't print on the console
  -h, --help            Help of the program
  -V, --version         Version of the program

actual: 105452  original: 113446

  2 passing (7s)

pre-build test passed successfully, skipping build...

> gifsicle@0.1.2 postinstall /root/Targets/att/node_modules/gifsicle
> node lib/check.js

Downloading gifsicle: 3%
[2J[1;3H
  3 passing (1s)

✓ pre-build test passed successfully, skipping build...

> jpegtran-bin@0.1.7 postinstall /root/Targets/att/node_modules/jpegtran-bin
> node pre-build.js

[2J[1;3H
  3 tests complete (901 ms)

[32mpre-build test passed successfully, skipping build...[39m

> optipng-bin@0.2.6 postinstall /root/Targets/att/node_modules/optipng-bin
> node pre-build.js

[2J[1;3H
  3 tests complete (803 ms)

[32mpre-build test passed successfully, skipping build...[39m
/root/Targets/att
└─┬ att@4.2.4 
  ├── async@0.2.10 
  ├── colors@0.6.2 
  ├── csslint@0.9.10 
  ├─┬ ecstatic@0.4.13 
  │ ├── ent@0.0.7 
  │ ├── mime@1.2.11 
  │ └── optimist@0.3.7 
  ├─┬ express@3.1.2 
  │ ├── buffer-crc32@0.2.13 
  │ ├── commander@0.6.1 
  │ ├─┬ connect@2.7.5 
  │ │ ├── buffer-crc32@0.1.1 
  │ │ ├── bytes@0.2.0 
  │ │ ├── formidable@1.0.11 
  │ │ ├── pause@0.0.1 
  │ │ └── qs@0.5.1 
  │ ├── cookie@0.0.5 
  │ ├── cookie-signature@1.0.0 
  │ ├─┬ debug@3.0.1 
  │ │ └── ms@2.0.0 
  │ ├── fresh@0.1.0 
  │ ├── methods@0.0.1 
  │ ├── mkdirp@0.3.5 
  │ ├── range-parser@0.0.4 
  │ └─┬ send@0.1.0 
  │   └── mime@1.2.6 
  ├─┬ fileutil@1.1.1 
  │ └── wrench@1.4.4 
  ├─┬ glob@3.2.11 
  │ ├── inherits@2.0.3 
  │ └── minimatch@0.3.0 
  ├─┬ js-beautify@1.4.2 
  │ ├─┬ config-chain@1.1.11 
  │ │ ├── ini@1.3.4 
  │ │ └── proto-list@1.2.4 
  │ └─┬ nopt@2.1.2 
  │   └── abbrev@1.1.0 
  ├─┬ jshint@0.9.1 
  │ ├── cli@0.4.3 
  │ └─┬ minimatch@0.0.5 
  │   └── lru-cache@1.0.6 
  ├─┬ less@1.4.2 
  │ └── ycssmin@1.0.1 
  ├─┬ minimatch@0.2.14 
  │ ├── lru-cache@2.7.3 
  │ └── sigmund@1.0.1 
  ├─┬ node-minifier@0.3.0 
  │ ├── csso@1.3.12 
  │ ├── fileutil@1.0.0 
  │ ├─┬ gifsicle@0.1.2 
  │ │ ├─┬ chalk@0.2.1 
  │ │ │ ├── ansi-styles@0.2.0 
  │ │ │ └── has-color@0.1.7 
  │ │ ├─┬ mocha@1.12.1 
  │ │ │ ├── diff@1.0.2 
  │ │ │ ├─┬ glob@3.2.1 
  │ │ │ │ ├── graceful-fs@1.2.3 
  │ │ │ │ └── inherits@1.0.2 
  │ │ │ ├── growl@1.7.0 
  │ │ │ └─┬ jade@0.26.3 
  │ │ │   └── mkdirp@0.3.0 
  │ │ ├─┬ request@2.25.0 
  │ │ │ └── qs@0.6.6 
  │ │ ├─┬ request-progress@0.2.3 
  │ │ │ └── throttleit@0.0.2 
  │ │ ├─┬ tar@0.1.20 
  │ │ │ ├── block-stream@0.0.9 
  │ │ │ └─┬ fstream@0.1.31 
  │ │ │   ├─┬ graceful-fs@3.0.11 
  │ │ │   │ └── natives@1.1.0 
  │ │ │   └── mkdirp@0.5.1 
  │ │ └── which@1.0.9 
  │ ├── html-minifier@0.4.5 
  │ ├─┬ jpegtran-bin@0.1.7 
  │ │ ├─┬ mocha@1.9.0 
  │ │ │ ├── mkdirp@0.3.3 
  │ │ │ └── ms@0.3.0 
  │ │ └─┬ request@2.16.6 
  │ │   ├── aws-sign@0.2.0 
  │ │   ├── cookie-jar@0.2.0 
  │ │   ├── forever-agent@0.2.0 
  │ │   ├── form-data@0.0.10 
  │ │   ├─┬ hawk@0.10.2 
  │ │   │ ├── boom@0.3.8 
  │ │   │ ├── cryptiles@0.1.3 
  │ │   │ ├── hoek@0.7.6 
  │ │   │ └── sntp@0.1.4 
  │ │   ├── json-stringify-safe@3.0.0 
  │ │   ├── oauth-sign@0.2.0 
  │ │   ├── qs@0.5.6 
  │ │   └── tunnel-agent@0.2.0 
  │ ├─┬ node-advpng@0.0.3 
  │ │ └─┬ request@2.26.0 
  │ │   └── qs@0.6.6 
  │ ├─┬ node-pngcrush@1.0.0 
  │ │ ├── mkdirp@0.5.1 
  │ │ ├── nan@2.7.0 
  │ │ ├─┬ node-gyp@3.6.2 
  │ │ │ ├── fstream@1.0.11 
  │ │ │ ├─┬ glob@7.1.2 
  │ │ │ │ ├── fs.realpath@1.0.0 
  │ │ │ │ ├─┬ inflight@1.0.6 
  │ │ │ │ │ └── wrappy@1.0.2 
  │ │ │ │ ├── once@1.4.0 
  │ │ │ │ └── path-is-absolute@1.0.1 
  │ │ │ ├── graceful-fs@4.1.11 
  │ │ │ ├─┬ minimatch@3.0.4 
  │ │ │ │ └─┬ brace-expansion@1.1.8 
  │ │ │ │   ├── balanced-match@1.0.0 
  │ │ │ │   └── concat-map@0.0.1 
  │ │ │ ├── mkdirp@0.5.1 
  │ │ │ ├─┬ osenv@0.1.4 
  │ │ │ │ ├── os-homedir@1.0.2 
  │ │ │ │ └── os-tmpdir@1.0.2 
  │ │ │ ├─┬ rimraf@2.6.2 
  │ │ │ │ └─┬ glob@7.1.2 
  │ │ │ │   └── minimatch@3.0.4 
  │ │ │ ├── semver@5.3.0 
  │ │ │ └── tar@2.2.1 
  │ │ ├─┬ npmlog@4.1.2 
  │ │ │ ├─┬ are-we-there-yet@1.1.4 
  │ │ │ │ ├── delegates@1.0.0 
  │ │ │ │ └─┬ readable-stream@2.3.3 
  │ │ │ │   ├── core-util-is@1.0.2 
  │ │ │ │   ├── isarray@1.0.0 
  │ │ │ │   ├── process-nextick-args@1.0.7 
  │ │ │ │   ├── string_decoder@1.0.3 
  │ │ │ │   └── util-deprecate@1.0.2 
  │ │ │ ├── console-control-strings@1.1.0 
  │ │ │ ├─┬ gauge@2.7.4 
  │ │ │ │ ├── aproba@1.2.0 
  │ │ │ │ ├── has-unicode@2.0.1 
  │ │ │ │ ├── object-assign@4.1.1 
  │ │ │ │ ├── signal-exit@3.0.2 
  │ │ │ │ ├─┬ string-width@1.0.2 
  │ │ │ │ │ ├── code-point-at@1.1.0 
  │ │ │ │ │ └─┬ is-fullwidth-code-point@1.0.0 
  │ │ │ │ │   └── number-is-nan@1.0.1 
  │ │ │ │ ├─┬ strip-ansi@3.0.1 
  │ │ │ │ │ └── ansi-regex@2.1.1 
  │ │ │ │ └── wide-align@1.1.2 
  │ │ │ └── set-blocking@2.0.0 
  │ │ └─┬ request@2.82.0 
  │ │   ├── aws-sign2@0.7.0 
  │ │   ├── aws4@1.6.0 
  │ │   ├── caseless@0.12.0 
  │ │   ├─┬ combined-stream@1.0.5 
  │ │   │ └── delayed-stream@1.0.0 
  │ │   ├── extend@3.0.1 
  │ │   ├── forever-agent@0.6.1 
  │ │   ├─┬ form-data@2.3.1 
  │ │   │ └── asynckit@0.4.0 
  │ │   ├─┬ har-validator@5.0.3 
  │ │   │ ├─┬ ajv@5.2.2 
  │ │   │ │ ├── co@4.6.0 
  │ │   │ │ ├── fast-deep-equal@1.0.0 
  │ │   │ │ ├── json-schema-traverse@0.3.1 
  │ │   │ │ └─┬ json-stable-stringify@1.0.1 
  │ │   │ │   └── jsonify@0.0.0 
  │ │   │ └── har-schema@2.0.0 
  │ │   ├─┬ hawk@6.0.2 
  │ │   │ ├── boom@4.3.1 
  │ │   │ ├─┬ cryptiles@3.1.2 
  │ │   │ │ └── boom@5.2.0 
  │ │   │ ├── hoek@4.2.0 
  │ │   │ └── sntp@2.0.2 
  │ │   ├─┬ http-signature@1.2.0 
  │ │   │ ├── assert-plus@1.0.0 
  │ │   │ ├─┬ jsprim@1.4.1 
  │ │   │ │ ├── assert-plus@1.0.0 
  │ │   │ │ ├── extsprintf@1.3.0 
  │ │   │ │ ├── json-schema@0.2.3 
  │ │   │ │ └─┬ verror@1.10.0 
  │ │   │ │   └── assert-plus@1.0.0 
  │ │   │ └─┬ sshpk@1.13.1 
  │ │   │   ├── asn1@0.2.3 
  │ │   │   ├── assert-plus@1.0.0 
  │ │   │   ├── bcrypt-pbkdf@1.0.1 
  │ │   │   ├─┬ dashdash@1.14.1 
  │ │   │   │ └── assert-plus@1.0.0 
  │ │   │   ├── ecc-jsbn@0.1.1 
  │ │   │   ├─┬ getpass@0.1.7 
  │ │   │   │ └── assert-plus@1.0.0 
  │ │   │   ├── jsbn@0.1.1 
  │ │   │   └── tweetnacl@0.14.5 
  │ │   ├── is-typedarray@1.0.0 
  │ │   ├── isstream@0.1.2 
  │ │   ├─┬ mime-types@2.1.17 
  │ │   │ └── mime-db@1.30.0 
  │ │   ├── oauth-sign@0.8.2 
  │ │   ├── performance-now@2.1.0 
  │ │   ├── qs@6.5.1 
  │ │   ├── safe-buffer@5.1.1 
  │ │   ├── stringstream@0.0.5 
  │ │   ├─┬ tough-cookie@2.3.3 
  │ │   │ └── punycode@1.4.1 
  │ │   ├── tunnel-agent@0.6.0 
  │ │   └── uuid@3.1.0 
  │ ├─┬ node-pngquant-native@2.0.1 
  │ │ ├── mkdirp@0.5.1 
  │ │ └─┬ request@2.82.0 
  │ │   ├─┬ combined-stream@1.0.5 
  │ │   │ └── delayed-stream@1.0.0 
  │ │   ├── forever-agent@0.6.1 
  │ │   ├── form-data@2.3.1 
  │ │   ├─┬ hawk@6.0.2 
  │ │   │ ├── boom@4.3.1 
  │ │   │ ├─┬ cryptiles@3.1.2 
  │ │   │ │ └── boom@5.2.0 
  │ │   │ ├── hoek@4.2.0 
  │ │   │ └── sntp@2.0.2 
  │ │   ├─┬ http-signature@1.2.0 
  │ │   │ └── assert-plus@1.0.0 
  │ │   ├── oauth-sign@0.8.2 
  │ │   ├── qs@6.5.1 
  │ │   ├── tunnel-agent@0.6.0 
  │ │   └── uuid@3.1.0 
  │ ├── node-smushit@0.5.1 
  │ ├─┬ optipng-bin@0.2.6 
  │ │ ├─┬ mocha@1.9.0 
  │ │ │ ├── mkdirp@0.3.3 
  │ │ │ └── ms@0.3.0 
  │ │ └─┬ request@2.16.6 
  │ │   ├── aws-sign@0.2.0 
  │ │   ├── cookie-jar@0.2.0 
  │ │   ├── forever-agent@0.2.0 
  │ │   ├── form-data@0.0.10 
  │ │   ├─┬ hawk@0.10.2 
  │ │   │ ├── boom@0.3.8 
  │ │   │ ├── cryptiles@0.1.3 
  │ │   │ ├── hoek@0.7.6 
  │ │   │ └── sntp@0.1.4 
  │ │   ├── json-stringify-safe@3.0.0 
  │ │   ├── oauth-sign@0.2.0 
  │ │   ├── qs@0.5.6 
  │ │   └── tunnel-agent@0.2.0 
  │ └─┬ uglify-js@2.4.8 
  │   ├── optimist@0.3.7 
  │   ├─┬ source-map@0.1.43 
  │   │ └── amdefine@1.0.1 
  │   └── uglify-to-browserify@1.0.2 
  ├─┬ npm@2.8.4 
  │ ├── abbrev@1.0.5 
  │ ├── ansi@0.3.0 
  │ ├── ansi-regex@1.1.1 
  │ ├── ansicolors@0.3.2 
  │ ├── ansistyles@0.1.3 
  │ ├── archy@1.0.0 
  │ ├── async-some@1.0.1 
  │ ├── block-stream@0.0.7 
  │ ├── char-spinner@1.0.1 
  │ ├── chmodr@0.1.0 
  │ ├── chownr@0.0.1 
  │ ├── cmd-shim@2.0.1 
  │ ├─┬ columnify@1.5.1 
  │ │ └─┬ wcwidth@1.0.0 
  │ │   └─┬ defaults@1.0.2 
  │ │     └── clone@0.1.19 
  │ ├─┬ config-chain@1.1.8 
  │ │ └── proto-list@1.2.3 
  │ ├─┬ dezalgo@1.0.1 
  │ │ └── asap@1.0.0 
  │ ├── editor@0.1.0 
  │ ├── fs-vacuum@1.2.5 
  │ ├── fs-write-stream-atomic@1.0.2 
  │ ├── fstream@1.0.4 
  │ ├─┬ fstream-npm@1.0.2 
  │ │ └── fstream-ignore@1.0.2 
  │ ├── github-url-from-git@1.4.0 
  │ ├── github-url-from-username-repo@1.0.2 
  │ ├─┬ glob@5.0.5 
  │ │ └── path-is-absolute@1.0.0 
  │ ├── graceful-fs@3.0.6 
  │ ├── hosted-git-info@2.1.2 
  │ ├── inflight@1.0.4 
  │ ├── inherits@2.0.1 
  │ ├── ini@1.3.3 
  │ ├─┬ init-package-json@1.4.1 
  │ │ ├── promzard@0.3.0 
  │ │ └─┬ validate-npm-package-name@2.0.1 
  │ │   └── builtins@0.0.7 
  │ ├── lockfile@1.0.0 
  │ ├── lru-cache@2.6.1 
  │ ├─┬ minimatch@2.0.4 
  │ │ └─┬ brace-expansion@1.1.0 
  │ │   ├── balanced-match@0.2.0 
  │ │   └── concat-map@0.0.1 
  │ ├─┬ mkdirp@0.5.0 
  │ │ └── minimist@0.0.8 
  │ ├─┬ node-gyp@1.0.3 
  │ │ ├─┬ glob@4.5.3 
  │ │ │ └─┬ minimatch@2.0.4 
  │ │ │   └─┬ brace-expansion@1.1.0 
  │ │ │     ├── balanced-match@0.2.0 
  │ │ │     └── concat-map@0.0.1 
  │ │ ├─┬ minimatch@1.0.0 
  │ │ │ └── sigmund@1.0.0 
  │ │ └── tar@1.0.3 
  │ ├── nopt@3.0.1 
  │ ├── normalize-git-url@1.0.0 
  │ ├── normalize-package-data@2.0.0 
  │ ├── npm-cache-filename@1.0.1 
  │ ├── npm-install-checks@1.0.5 
  │ ├── npm-package-arg@4.0.0 
  │ ├─┬ npm-registry-client@6.3.2 
  │ │ ├─┬ concat-stream@1.4.8 
  │ │ │ ├─┬ readable-stream@1.1.13 
  │ │ │ │ ├── core-util-is@1.0.1 
  │ │ │ │ ├── isarray@0.0.1 
  │ │ │ │ └── string_decoder@0.10.31 
  │ │ │ └── typedarray@0.0.6 
  │ │ └── npmlog@4.1.2 
  │ ├── npm-user-validate@0.1.1 
  │ ├─┬ npmlog@1.2.0 
  │ │ ├─┬ are-we-there-yet@1.0.4 
  │ │ │ ├── delegates@0.1.0 
  │ │ │ └─┬ readable-stream@1.1.13 
  │ │ │   ├── core-util-is@1.0.1 
  │ │ │   ├── isarray@0.0.1 
  │ │ │   └── string_decoder@0.10.31 
  │ │ └─┬ gauge@1.2.0 
  │ │   ├── has-unicode@1.0.0 
  │ │   ├─┬ lodash.pad@3.1.0 
  │ │   │ ├── lodash._basetostring@3.0.0 
  │ │   │ └─┬ lodash._createpadding@3.6.0 
  │ │   │   └── lodash.repeat@3.0.0 
  │ │   ├── lodash.padleft@3.1.0 
  │ │   └── lodash.padright@3.1.0 
  │ ├── once@1.3.1 
  │ ├── opener@1.4.1 
  │ ├── osenv@0.1.0 
  │ ├── path-is-inside@1.0.1 
  │ ├─┬ read@1.0.5 
  │ │ └── mute-stream@0.0.4 
  │ ├─┬ read-installed@4.0.0 
  │ │ ├── debuglog@1.0.1 
  │ │ ├── readdir-scoped-modules@1.0.1 
  │ │ └── util-extend@1.0.1 
  │ ├─┬ read-package-json@2.0.0 
  │ │ └─┬ json-parse-helpfulerror@1.0.3 
  │ │   └── jju@1.2.0 
  │ ├─┬ readable-stream@1.0.33 
  │ │ ├── core-util-is@1.0.1 
  │ │ ├── isarray@0.0.1 
  │ │ └── string_decoder@0.10.31 
  │ ├── realize-package-specifier@3.0.0 
  │ ├─┬ request@2.55.0 
  │ │ ├── aws-sign2@0.5.0 
  │ │ ├── bl@0.9.4 
  │ │ ├── caseless@0.9.0 
  │ │ ├─┬ combined-stream@0.0.7 
  │ │ │ └── delayed-stream@0.0.5 
  │ │ ├── forever-agent@0.6.1 
  │ │ ├─┬ form-data@0.2.0 
  │ │ │ └── async@0.9.0 
  │ │ ├─┬ har-validator@1.6.1 
  │ │ │ ├── bluebird@2.9.24 
  │ │ │ ├─┬ chalk@1.0.0 
  │ │ │ │ ├── ansi-styles@2.0.1 
  │ │ │ │ ├── escape-string-regexp@1.0.3 
  │ │ │ │ ├─┬ has-ansi@1.0.3 
  │ │ │ │ │ └── get-stdin@4.0.1 
  │ │ │ │ └── supports-color@1.3.1 
  │ │ │ ├─┬ commander@2.7.1 
  │ │ │ │ └── graceful-readlink@1.0.1 
  │ │ │ └─┬ is-my-json-valid@2.10.1 
  │ │ │   ├── generate-function@2.0.0 
  │ │ │   ├─┬ generate-object-property@1.1.1 
  │ │ │   │ └── is-property@1.0.2 
  │ │ │   ├── jsonpointer@1.1.0 
  │ │ │   └── xtend@4.0.0 
  │ │ ├─┬ hawk@2.3.1 
  │ │ │ ├── boom@2.7.0 
  │ │ │ ├── cryptiles@2.0.4 
  │ │ │ ├── hoek@2.12.0 
  │ │ │ └── sntp@1.0.9 
  │ │ ├─┬ http-signature@0.10.1 
  │ │ │ ├── asn1@0.1.11 
  │ │ │ ├── assert-plus@0.1.5 
  │ │ │ └── ctype@0.5.3 
  │ │ ├── isstream@0.1.2 
  │ │ ├── json-stringify-safe@5.0.0 
  │ │ ├─┬ mime-types@2.0.10 
  │ │ │ └── mime-db@1.8.0 
  │ │ ├── node-uuid@1.4.3 
  │ │ ├── oauth-sign@0.6.0 
  │ │ ├── qs@2.4.1 
  │ │ ├── stringstream@0.0.4 
  │ │ ├─┬ tough-cookie@0.12.1 
  │ │ │ └── punycode@1.3.2 
  │ │ └── tunnel-agent@0.4.0 
  │ ├── retry@0.6.1 
  │ ├─┬ rimraf@2.3.2 
  │ │ └── glob@4.5.3 
  │ ├── semver@4.3.3 
  │ ├─┬ sha@1.3.0 
  │ │ └─┬ readable-stream@1.1.13 
  │ │   ├── core-util-is@1.0.1 
  │ │   ├── isarray@0.0.1 
  │ │   └── string_decoder@0.10.31 
  │ ├── slide@1.1.6 
  │ ├── sorted-object@1.0.0 
  │ ├── strip-ansi@2.0.1 
  │ ├── tar@2.1.0 
  │ ├── text-table@0.2.0 
  │ ├── uid-number@0.0.6 
  │ ├── umask@1.1.0 
  │ ├── which@1.0.9 
  │ ├── wrappy@1.0.1 
  │ └── write-file-atomic@1.1.0 
  ├─┬ optimist@0.6.1 
  │ ├── minimist@0.0.8 
  │ └── wordwrap@0.0.3 
  ├─┬ portscanner@0.1.3 
  │ └── async@0.1.15 
  ├─┬ read@1.0.7 
  │ └── mute-stream@0.0.7 
  ├─┬ request@2.27.0 
  │ ├── aws-sign@0.3.0 
  │ ├── cookie-jar@0.3.0 
  │ ├── forever-agent@0.5.2 
  │ ├─┬ form-data@0.1.4 
  │ │ ├── async@0.9.2 
  │ │ └─┬ combined-stream@0.0.7 
  │ │   └── delayed-stream@0.0.5 
  │ ├─┬ hawk@1.0.0 
  │ │ ├── boom@0.4.2 
  │ │ ├── cryptiles@0.2.2 
  │ │ ├── hoek@0.9.1 
  │ │ └── sntp@0.2.4 
  │ ├─┬ http-signature@0.10.1 
  │ │ ├── asn1@0.1.11 
  │ │ ├── assert-plus@0.1.5 
  │ │ └── ctype@0.5.3 
  │ ├── json-stringify-safe@5.0.1 
  │ ├── node-uuid@1.4.8 
  │ ├── oauth-sign@0.3.0 
  │ ├── qs@0.6.6 
  │ └── tunnel-agent@0.3.0 
  └── semver@1.1.4 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/att/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 16% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0528 took 8.6823s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Invalid number (168:51) on program /**
@date 2013-5-3 fix copy method bug while indicate filter param.
**/
var fs = require('fs');
var path = require('path');
var util = require('util');
var wrench = require('wrench');

//判断某个对象是否是函数
var isFunction = function(fn){
  return Object.prototype.toString.call(fn) =='[object Function]';
}

//判断某个对象是否是字符串
var isString = function(fn){
  return Object.prototype.toString.call(fn) =='[object String]';
}

//同步拷贝文件
var copyFile = function(src, dest){
  var len = 64 * 1024;
  var buff = new Buffer(len);
  var fdr = fs.openSync(src, 'r');
  var fdw = fs.openSync(dest, 'w');
  var bytesRead = 1;
  var pos = 0;
  while(bytesRead > 0){
    bytesRead = fs.readSync(fdr, buff, 0, len, pos);
    fs.writeSync(fdw, buff, 0, bytesRead);
    pos += bytesRead;
  }
  fs.closeSync(fdr);
  fs.closeSync(fdw);
}
/**
`file-util` module is an easy utility class for file operation

@class file-util
@static
@example
  
    var fu = require('file-util');

    fu.exist(file); //是否存在
    fu.copy(file, 'new-path'); //复制到某个新目录
    fu.move(file, 'new-path'); //移动到某个新目录
    fu.rename(file, 'new-name');
    fu.delete(file); //删除文件或文件夹

    fu.mkdir(src); //创建目录
    fu.touch(my-file-name); //创建文件

    fu.write(my-file-name, data); //写入内容
    fu.append(my-file-name, append_data); //追加内容
    fu.read(my-file-name); //读取内容
    
    fu.type(my-file-name); //类型

    fu.extname(my-file-name); //文件后缀, 带.
    fu.extname(my-file-name); //文件后缀，不带.

    fu.copy('tmp', 'tmp2'); //复制文件或者文件夹tmp中的文件到目录tmp2
    fu.move('tmp', 'tmp2'); //移动文件或者文件夹tmp中的文件到文件夹tmp2

    fu.each(src, function(item){
      console.log('遍历文件');    
    });

    //异步的方式遍历
    var options = {
      sync: false,
      matchFunction: function(itm){
        return item.name.match(/\.css$/i);
      }
    }
    var onComplete = function(){
      console.log('遍历完成');
    }
    fu.each(src, function(item), options, onComplete);
**/


var fu = {
  


  /**
  判断某个或某些文件(夹)是否存在
  @method exist
  @static
  @param {String} f 一个文件(夹)名称
  @return Boolean 文件是否存在
  @example

      fu.isFile('src/app');
  **/
  exist: function(f){
    return fs.existsSync(f);
  },

  /**
  是否是文件
  @method isFile
  @static
  @param {String} f 文件名称
  @return Boolean 是否是文件
  @example

      fu.isFile('src/app.js');
  **/
  isFile: function(f){
    return this.exist(f) && fs.statSync(f).isFile();
  },

  /**
  是否是文件夹
  @method isDirectory
  @static
  @param {String} f 文件名称
  @return Boolean 是否是文件夹
  @exmaple

      fu.isFile('src/app');
  **/
  isDirectory: function(f, dir){
    return this.exist(f) && fs.statSync(f).isDirectory();
  },

  /**
  @method extname
  @static
  @param {String} f 文件名称
  @param {String} (optional) withDot 是否带上.
  @return String 文件后缀
  @example

      console.log(fu.extname('image.jpg')); // jpg

  **/
  extname: function(f, withDot){
    var extname = path.extname(f);
    if(!withDot && extname && extname.charAt(0) == '.'){
      return extname.substr(1);
    }
    return extname;
  },

  /**
  创建目录
  @method mkdir
  @static
  @param {String|Array} f 一个或多个文件夹
  @param {Number} permission 文件权限
  @example

      fu.mkdir('model');
      fu.mkdir(['view', 'controller']);
      fu.mkdir('mydir', 0775);
  **/
  mkdir: function(f, permission){
    if(util.isArray(f)){
      var self = this;
      f.forEach(function(item){
        self.mkdir(item, permission);
      })
    }else{
      if(!this.exist(f)){
        wrench.mkdirSyncRecursive(f, permission || 0777);
      }
    }
  },

  /**
  创建文件
  @method touch
  @static
  @param {String|Array} f 一个或多个文件
  @param {int} (optional)[0777] permission 文件权限
  @param {String} (optional) data 文件内容
  @example

      fu.touch('README.md');
      fu.touch('app.js', 0777); 
      fu.touch(['view/view.js', 'model/model.js']);
      fu.touch('app.js', 0777, 'window.app = (function(){ return "app" })()');

  **/
  touch: function(f, permission, data){
    if(util.isArray(f)){
      var self = this;
      f.forEach(function(item){
        self.touch(item, permission);
      })
    }else{
      data = data || '';
      this.mkdir(path.dirname(f));
      this.write(f, data);
    }
  },
  /**
  删除文件或文件夹
  @method delete
  @static
  @param {String|Array} f 一个或多个文件或文件夹
  @example

      fu.delete('/var/www/tmp/data/one.txt');
      fu.delete('/var/www/tmp/data/')
  **/
  delete: function(f){
    if(util.isArray(f)){
      var self = this;
      f.forEach(function(item){
        self.delete(item);
      })
    }else{
      if(this.exist(f)){
        if(this.isDirectory(f)){
          wrench.rmdirSyncRecursive(f, true);
        }else{
          fs.unlinkSync(f);
        }
      }
    }
  },

  /**
  读取文件内容
  @method read
  @static
  @param {String} f 文件名
  @param {String} (optional) encoding 编码，默认`utf-8`
  @example

      console.log(fu.read('README.md'));

  **/
  read: function(f, encoding){
    return fs.readFileSync(f, encoding || 'utf-8');
  },

  /**
  写入内容到文件
  @method read
  @static
  @param {String} f 文件名
  @param {String} data 文件内容
  @param {String} (optional) encoding 编码，默认`utf-8`
  @example

      console.log(fu.write('README.md'), data);

  **/
  write: function(f, data, encoding){
    return fs.writeFileSync(f, data, encoding || 'utf-8');
  },

  /**
  追加内容到文件
  @method append
  @static
  @param {String} f 文件名
  @param {String} data 文件内容
  @param {String} (optional) encoding 编码，默认`utf-8`
  @example

      console.log(fu.append('README.md'), data);

  **/
  append: function(f, data, encoding){
    return fs.appendFileSync(f, data, encoding);
  },
  /**
  更改名称
  @method rename
  @static
  @param {String|Array} name 文件名
  @param {String} (optional) newName 新的文件名
  @example

      fu.rename('app.js', 'app_bak.js');
      fu.rename('app.js', '/usr/local/bak/app.js');

  **/
  rename: function(name, newName){
    this.mkdir(path.dirname(newName));
    fs.renameSync(name, newName);
  },
  

  /**
  移动文件或文件夹中的文件到新的目录
  @method move
  @static
  @param {String|Array} f 一个或多个文件
  @param {String} target 目标文件目录
  @param {String} (optional) filter_or_newName 过滤正则或者过滤函数或者新名称
  @example

      //移动js文件
      fu.move(fu.list(src), targetDir, /\.js$/i);
      fu.move(fu.list(src), targetDir, function(f){
        return f.match(/\.js$/i);
      });

      //移动并且改名
      fu.move('src/app.js', 'dest', 'app-min.js');

  **/
  move: function(f, target, filter_or_newName){
    var self = this;
    var isValid = function(item){
      if(self.isDirectory(item)){
        return true;
      }
      if(filter_or_newName){
        if(util.isRegExp(filter_or_newName)){
          return filter_or_newName.test(item);
        }else if(isFunction(filter_or_newName)){
          return filter_or_newName(item);
        }
      }
      return true;
    }
    if(util.isArray(f)){
      f.forEach(function(item){
        self.move(item, target);
      });
    }else{
      var name;
      if(!isValid(f)){
        return;
      }
      if(filter_or_newName && isString(filter_or_newName)){
        name = filter_or_newName;
        filter_or_newName = null;
      }else{
        name = path.basename(f);
      }
      var newName = path.normalize(target + path.sep + name);

      try{
        //如果是文件
        if(this.isFile(f)){
          this.rename(f, newName);
        }
        //如果没有过滤参数
        if(!filter_or_newName){
          return this.rename(f, target);
        }
        
        //可能有过滤，被过滤掉的文件不能被移动
        var deleteList = [];
        this.each(f, function(item){
          var dir, t;
          if(item.directory){ 
            dir = path.relative(f, item.name);
            t = path.normalize(target + path.sep + dir);
            self.mkdir(t);
            deleteList.push(item.name);
          }else{
            dir = path.dirname(path.relative(f, item.name))
            t = path.normalize(target + path.sep + dir);
            self.move(item.name, t, filter_or_newName);
          }
        }, {
          matchFunction: function(item){
            return isValid(item.name);
          }
        });

        deleteList.forEach(function(item){
          self.delete(item);
        });
        self.delete(f);
       
      }catch(err){
        if(this.isFile(f)){
          this.copy(f, target, filter_or_newName);
          this.delete(f);
        }else if(this.isDirectory(f)){
          this.copy(f, target, filter_or_newName);
          this.delete(f);
        }
      }
    }
  },
  /**
  复制文件或文件夹中的文件到新的目录
  @method copy
  @static
  @param {String|Array} f 一个或多个文件
  @param {String} target 目标文件目录
  @param {String} (optional) filter_or_newName 过滤正则或者过滤函数或者新名称
  @example

      //拷贝js文件
      fu.copy(fu.list(src), targetDir, /\.js$/i);
      fu.copy(fu.list(src), targetDir, function(f){
        return f.match(/\.js$/i);
      });

      //拷贝并且改名
      fu.copy('src/app.js', 'dest', 'app-min.js');
  **/
  copy: function(f, target, filter_or_newName){
    var self = this;
    var isValid = function(item){
      if(self.isDirectory(item)){
        return true;
      }
      if(filter_or_newName){
        if(util.isRegExp(filter_or_newName)){
          return filter_or_newName.test(item);
        }else if(isFunction(filter_or_newName)){
          return filter_or_newName(item);
        }
      }
      return true;
    }
    if(util.isArray(f)){
      f.forEach(function(item){
        self.copy(item, dir);
      });
    }else{
      var name;
      if(!isValid(f)){
        return;
      }
      if(filter_or_newName && isString(filter_or_newName)){
        name = filter_or_newName;
        filter_or_newName = null;
      }else{
        name = path.basename(f);
      }
      
      var newName = path.normalize(target + path.sep + name);
      
      if(this.isFile(f)){
        this.mkdir(path.dirname(newName));
        copyFile(f, newName);
      }else if(this.isDirectory(f)){
        this.each(f, function(item){
          var dir, t;
          if(!item.directory){ 
            dir = path.dirname(path.relative(f, item.name))
            t = path.normalize(target + path.sep + dir);
            self.copy(item.name, t, filter_or_newName);
          }
        });
      }
    }
  },

  
  /**
  遍历目录下的文件和文件夹

  @method each
  @static
  @param {String} dir 目录
  @param {Function} callback 遍历时的回调函数
  @param {Object} options 过滤参数
      @param {Boolean} options.recursive 是否遍历子文件夹，默认true
      @param {Boolean} options.excludeFile 是否屏蔽文件
      @param {Boolean} options.excludeDirectory 是否屏蔽文件夹
      @param {Boolean} options.sync 是否异步，默认同步
      @param {Function} options.matchFunction 匹配函数
  @param {Function} (optional) onComplete 完成文件遍历的回调函数
  @example

      fu.each('src', function(item){
        console.log(item.filename);
      }, {
        excludeDirectory: true,
        matchFunction: function(item){
          return item.filename.match(/\.js$/i);
        }
      });

      //以异步方式调用
      fu.each('src', function(item){
        console.log(item.filename);
      }, { sync: false}, function(){
        console.log('读取完毕')
      });

  **/
  each: function(dir, callback, options, onComplete){
    options = options || {};
    dir = dir.replace(/(\/+)$/, '');

    var self = this;
    var sync = options.sync != undefined ? options.sync : true;
    var excludeFile = options.excludeFile;
    var excludeDirectory = options.excludeDirectory;
    var matchFunction = options.matchFunction;
    var breakFunction = options.breakFunction;
    var preventRecursiveFunction = options.preventRecursiveFunction;
    var recursive = true;
    var checkCount = 0;
    var p, i, l;

    var onFinished = function(){
      if(checkCount <= 0 && onComplete){
        onComplete();
      }
    }

    if (options.recursive === false) {
      recursive = false;
    }

    if (!this.isDirectory(dir)) {
      onFinished();
      return [];
    }

    var handleItem = function(filename){
      var name = dir + path.sep + filename;
      var isDir = self.isDirectory(name);
      var info = {
        directory: isDir,
        name: name,
        filename: filename
      };

      if (isDir) {
        if (recursive) {
          if(!preventRecursiveFunction || !preventRecursiveFunction(info)){
              checkCount++;
              self.each(name, callback, options, function(){
                checkCount--; 
                onFinished();
              });
          }
        }

        if (!excludeDirectory) {
          if(!matchFunction || (matchFunction && matchFunction(info))){
            callback(info);
          }
        }
      } else if (self.isFile(name)) {
        if (!excludeFile) {
          if(!matchFunction || (matchFunction && matchFunction(info))){
            callback(info);
          }
        }
      }
      checkCount--;
      onFinished();
    }
    if(sync){
      p = fs.readdirSync(dir);
      p.forEach(handleItem);
      checkCount = 0;
      onFinished();
    }else{
      fs.readdir(dir, function(e, arr){
        if(e){
          onFinished();
        }else{
          checkCount = arr.length;
          onFinished();
          arr.forEach(function(item){
            handleItem(item);
          });
          
        }
      });
    }
  },

  /**
  列出目录下的文件和文件夹

  @method list
  @static
  @param {String} dir 目录
  @param {Object} options 过滤参数
      @param {Boolean} options.recursive 是否遍历子文件夹，默认true
      @param {Boolean} options.excludeFile 是否屏蔽文件
      @param {Boolean} options.excludeDirectory 是否屏蔽文件夹
      @param {Function} options.breakFunction 终止函数
      @param {Function} options.matchFunction 匹配函数
  @param {Boolean} fullView 是否返回更完整的文件信息
  @return Array 文件和文件夹信息
  @example

      //列出所有js文件 
      var list = fu.list('src', {
        excludeDirectory: true,
        matchFunction: function(item){
          return item.filename.match(/\.js$/i);
        }
      }); //list = ['a.js', 'b/c.js', ...]

      //列出所有js文件，包含完整信息
      var list = fu.list('src', {
        excludeDirectory: true,
        matchFunction: function(item){
          return item.filename.match(/\.js$/i);
        }
      }, true); 
      
      //list = [{filename: 'a.js', name: 'a.js', directory: false},
      //  {filename: 'c.js', name: 'b/c.js', directory: false},
      //  ...]
  **/
  list: function(dir, options, fullView){
    var result = [];
    options = options || {};
    options.sync = true;
    this.each(dir, function(item){
      if(fullView){
        result.push(item);
      }else{
        result.push(item.name);
      }
    }, options);
    return result;
  }

};

module.exports = fu; at SyntaxError: Invalid number (168:51)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp$3.parseExprOp (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1654:14)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1639:17)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/att/node_modules/att/lib/att.js. Coverage (Term): 3% Coverage (LOC): 2%
*- File /root/Targets/att/node_modules/async/lib/async.js. Coverage (Term): 11% Coverage (LOC): 16%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
