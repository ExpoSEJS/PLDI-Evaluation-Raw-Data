/root/Targets/elasticsearch-watchdog
└─┬ elasticsearch-watchdog@0.1.6 
  ├── async@0.9.2 
  ├─┬ chalk@0.5.1 
  │ ├── ansi-styles@1.1.0 
  │ ├── escape-string-regexp@1.0.5 
  │ ├─┬ has-ansi@0.1.0 
  │ │ └── ansi-regex@0.2.1 
  │ ├── strip-ansi@0.3.0 
  │ └── supports-color@0.2.0 
  ├── commander@2.5.1 
  ├── dynamic-timer@1.0.4 
  ├─┬ express@4.10.8 
  │ ├─┬ accepts@1.1.4 
  │ │ ├─┬ mime-types@2.0.14 
  │ │ │ └── mime-db@1.12.0 
  │ │ └── negotiator@0.4.9 
  │ ├── content-disposition@0.5.0 
  │ ├── cookie@0.1.2 
  │ ├── cookie-signature@1.0.5 
  │ ├─┬ debug@2.1.3 
  │ │ └── ms@0.7.0 
  │ ├── depd@1.0.1 
  │ ├── escape-html@1.0.1 
  │ ├─┬ etag@1.5.1 
  │ │ └── crc@3.2.1 
  │ ├── finalhandler@0.3.3 
  │ ├── fresh@0.2.4 
  │ ├── media-typer@0.3.0 
  │ ├── merge-descriptors@0.0.2 
  │ ├── methods@1.1.1 
  │ ├─┬ on-finished@2.2.1 
  │ │ └── ee-first@1.1.0 
  │ ├── parseurl@1.3.2 
  │ ├── path-to-regexp@0.1.3 
  │ ├─┬ proxy-addr@1.0.10 
  │ │ ├── forwarded@0.1.2 
  │ │ └── ipaddr.js@1.0.5 
  │ ├── qs@2.3.3 
  │ ├── range-parser@1.0.3 
  │ ├─┬ send@0.10.1 
  │ │ ├── destroy@1.0.3 
  │ │ ├── mime@1.2.11 
  │ │ ├── ms@0.6.2 
  │ │ └── on-finished@2.1.1 
  │ ├── serve-static@1.7.2 
  │ ├── type-is@1.5.7 
  │ ├── utils-merge@1.0.0 
  │ └── vary@1.0.1 
  ├─┬ forever@0.13.0 
  │ ├─┬ cliff@0.1.10 
  │ │ ├── colors@1.0.3 
  │ │ └── eyes@0.1.8 
  │ ├── colors@0.6.2 
  │ ├─┬ flatiron@0.4.3 
  │ │ ├─┬ broadway@0.3.6 
  │ │ │ ├── cliff@0.1.9 
  │ │ │ └─┬ winston@0.8.0 
  │ │ │   └── async@0.2.10 
  │ │ ├── director@1.2.7 
  │ │ ├── optimist@0.6.0 
  │ │ └─┬ prompt@0.2.14 
  │ │   ├─┬ read@1.0.7 
  │ │   │ └── mute-stream@0.0.7 
  │ │   └── revalidator@0.1.8 
  │ ├─┬ forever-monitor@1.5.2 
  │ │ ├─┬ minimatch@1.0.0 
  │ │ │ ├── lru-cache@2.7.3 
  │ │ │ └── sigmund@1.0.1 
  │ │ ├─┬ ps-tree@0.0.3 
  │ │ │ └─┬ event-stream@0.5.3 
  │ │ │   └── optimist@0.2.8 
  │ │ └─┬ watch@0.13.0 
  │ │   └── minimist@1.2.0 
  │ ├─┬ nconf@0.6.9 
  │ │ ├── async@0.2.9 
  │ │ ├── ini@1.3.4 
  │ │ └── optimist@0.6.0 
  │ ├─┬ nssocket@0.5.3 
  │ │ ├── eventemitter2@0.4.14 
  │ │ └── lazy@1.0.11 
  │ ├─┬ optimist@0.6.1 
  │ │ ├── minimist@0.0.10 
  │ │ └── wordwrap@0.0.3 
  │ ├── timespan@2.3.0 
  │ ├─┬ utile@0.2.1 
  │ │ ├── async@0.2.10 
  │ │ ├── deep-equal@1.0.1 
  │ │ ├── i@0.3.6 
  │ │ ├─┬ mkdirp@0.5.1 
  │ │ │ └── minimist@0.0.8 
  │ │ ├── ncp@0.4.2 
  │ │ └── rimraf@2.6.2 
  │ └─┬ winston@0.8.3 
  │   ├── async@0.2.10 
  │   ├── cycle@1.0.3 
  │   ├── isstream@0.1.2 
  │   ├── pkginfo@0.3.1 
  │   └── stack-trace@0.0.10 
  ├── lodash@2.4.2 
  ├─┬ req-fast@0.2.17 
  │ ├─┬ debug@2.6.9 
  │ │ └── ms@2.0.0 
  │ ├── iconv-lite@0.4.19 
  │ ├── random-ua@0.0.6 
  │ ├── tunnel2@0.0.4 
  │ └── urijs@1.19.0 
  ├─┬ ssh2@0.3.6 
  │ ├── asn1@0.2.1 
  │ ├─┬ readable-stream@1.0.27-1 
  │ │ ├── core-util-is@1.0.2 
  │ │ ├── inherits@2.0.3 
  │ │ ├── isarray@0.0.1 
  │ │ └── string_decoder@0.10.31 
  │ └── streamsearch@0.1.2 
  ├─┬ swig@1.4.2 
  │ └─┬ uglify-js@2.4.24 
  │   ├── async@0.2.10 
  │   ├─┬ source-map@0.1.34 
  │   │ └── amdefine@1.0.1 
  │   ├── uglify-to-browserify@1.0.2 
  │   └─┬ yargs@3.5.4 
  │     ├── camelcase@1.2.1 
  │     ├── decamelize@1.2.0 
  │     ├── window-size@0.1.0 
  │     └── wordwrap@0.0.2 
  └─┬ yamljs@0.2.10 
    ├─┬ argparse@1.0.9 
    │ └── sprintf-js@1.0.3 
    └─┬ glob@7.1.2 
      ├── fs.realpath@1.0.0 
      ├─┬ inflight@1.0.6 
      │ └── wrappy@1.0.2 
      ├─┬ minimatch@3.0.4 
      │ └─┬ brace-expansion@1.1.8 
      │   ├── balanced-match@1.0.0 
      │   └── concat-map@0.0.1 
      ├── once@1.4.0 
      └── path-is-absolute@1.0.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/elasticsearch-watchdog/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 19% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","call","Date","RegExp","join","parseInt","sort","getTimezoneOffset","fromCharCode"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0817 took 29.9872s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program // Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.

var assert = require('assert');

var ASN1 = require('./types');
var errors = require('./errors');


///--- Globals

var newInvalidAsn1Error = errors.newInvalidAsn1Error;



///--- API

function Reader(data) {
  if (!data || !Buffer.isBuffer(data))
    throw new TypeError('data must be a node Buffer');

  this._buf = data;
  this._size = data.length;

  // These hold the "current" state
  this._len = 0;
  this._offset = 0;

  var self = this;
  this.__defineGetter__('length', function() { return self._len; });
  this.__defineGetter__('offset', function() { return self._offset; });
  this.__defineGetter__('remain', function() {
    return self._size - self._offset;
  });
  this.__defineGetter__('buffer', function() {
    return self._buf.slice(self._offset);
  });
}


/**
 * Reads a single byte and advances offset; you can pass in `true` to make this
 * a "peek" operation (i.e., get the byte, but don't advance the offset).
 *
 * @param {Boolean} peek true means don't move offset.
 * @return {Number} the next byte, null if not enough data.
 */
Reader.prototype.readByte = function(peek) {
  if (this._size - this._offset < 1)
    return null;

  var b = this._buf[this._offset] & 0xff;

  if (!peek)
    this._offset += 1;

  return b;
};


Reader.prototype.peek = function() {
  return this.readByte(true);
};


/**
 * Reads a (potentially) variable length off the BER buffer.  This call is
 * not really meant to be called directly, as callers have to manipulate
 * the internal buffer afterwards.
 *
 * As a result of this call, you can call `Reader.length`, until the
 * next thing called that does a readLength.
 *
 * @return {Number} the amount of offset to advance the buffer.
 * @throws {InvalidAsn1Error} on bad ASN.1
 */
Reader.prototype.readLength = function(offset) {
  if (offset === undefined)
    offset = this._offset;

  if (offset >= this._size)
    return null;

  var lenB = this._buf[offset++] & 0xff;
  if (lenB === null)
    return null;

  if ((lenB & 0x80) == 0x80) {
    lenB &= 0x7f;

    if (lenB == 0)
      throw newInvalidAsn1Error('Indefinite length not supported');

    if (lenB > 4)
      throw newInvalidAsn1Error('encoding too long');

    if (this._size - offset < lenB)
      return null;

    this._len = 0;
    for (var i = 0; i < lenB; i++)
      this._len = (this._len << 8) + (this._buf[offset++] & 0xff);

  } else {
    // Wasn't a variable length
    this._len = lenB;
  }

  return offset;
};


/**
 * Parses the next sequence in this BER buffer.
 *
 * To get the length of the sequence, call `Reader.length`.
 *
 * @return {Number} the sequence's tag.
 */
Reader.prototype.readSequence = function(tag) {
  var seq = this.peek();
  if (seq === null)
    return null;
  if (tag !== undefined && tag !== seq)
    throw newInvalidAsn1Error('Expected 0x' + tag.toString(16) +
                              ': got 0x' + seq.toString(16));

  var o = this.readLength(this._offset + 1); // stored in `length`
  if (o === null)
    return null;

  this._offset = o;
  return seq;
};


Reader.prototype.readInt = function() {
  return this._readTag(ASN1.Integer);
};


Reader.prototype.readBoolean = function() {
  return (this._readTag(ASN1.Boolean) === 0 ? false : true);
};


Reader.prototype.readEnumeration = function() {
  return this._readTag(ASN1.Enumeration);
};


Reader.prototype.readString = function(tag, retbuf) {
  if (!tag)
    tag = ASN1.OctetString;

  var b = this.peek();
  if (b === null)
    return null;

  if (b !== tag)
    throw newInvalidAsn1Error('Expected 0x' + tag.toString(16) +
                              ': got 0x' + b.toString(16));

  var o = this.readLength(this._offset + 1); // stored in `length`

  if (o === null)
    return null;

  if (this.length > this._size - o)
    return null;

  this._offset = o;

  if (this.length === 0)
    return '';

  var str = this._buf.slice(this._offset, this._offset + this.length);
  this._offset += this.length;

  return retbuf ? str : str.toString('utf8');
};

Reader.prototype.readOID = function(tag) {
  if (!tag)
    tag = ASN1.OID;

  var b = this.readString(tag, true);
  if (b === null)
    return null;

  var values = [];
  var value = 0;

  for (var i = 0; i < b.length; i++) {
    var byte = b[i] & 0xff;

    value <<= 7;
    value += byte & 0x7f;
    if ((byte & 0x80) == 0) {
      values.push(value);
      value = 0;
    }
  }

  value = values.shift();
  values.unshift(value % 40);
  values.unshift((value / 40) >> 0);

  return values.join('.');
};


Reader.prototype._readTag = function(tag) {
  assert.ok(tag !== undefined);

  var b = this.peek();

  if (b === null)
    return null;

  if (b !== tag)
    throw newInvalidAsn1Error('Expected 0x' + tag.toString(16) +
                              ': got 0x' + b.toString(16));

  var o = this.readLength(this._offset + 1); // stored in `length`
  if (o === null)
    return null;

  if (this.length > 4)
    throw newInvalidAsn1Error('Integer too long: ' + this.length);

  if (this.length > this._size - o)
    return null;
  this._offset = o;

  var fb = this._buf[this._offset];
  var value = 0;

  for (var i = 0; i < this.length; i++) {
    value <<= 8;
    value |= (this._buf[this._offset++] & 0xff);
  }

  if ((fb & 0x80) == 0x80 && i !== 4)
    value -= (1 << (i * 8));

  return value >> 0;
};



///--- Exported API

module.exports = Reader;
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/elasticsearch-watchdog/node_modules/elasticsearch-watchdog/lib/watchdog.js. Coverage (Term): 4% Coverage (LOC): 5%
*- File /root/Targets/elasticsearch-watchdog/node_modules/elasticsearch-watchdog/lib/util/helper.js. Coverage (Term): 8% Coverage (LOC): 12%
*- File /root/Targets/elasticsearch-watchdog/node_modules/lodash/dist/lodash.js. Coverage (Term): 19% Coverage (LOC): 27%
*- File /root/Targets/elasticsearch-watchdog/node_modules/yamljs/lib/Yaml.js. Coverage (Term): 23% Coverage (LOC): 32%
*- File /root/Targets/elasticsearch-watchdog/node_modules/yamljs/lib/Parser.js. Coverage (Term): 9% Coverage (LOC): 11%
*- File /root/Targets/elasticsearch-watchdog/node_modules/yamljs/lib/Inline.js. Coverage (Term): 7% Coverage (LOC): 9%
*- File /root/Targets/elasticsearch-watchdog/node_modules/yamljs/lib/Pattern.js. Coverage (Term): 65% Coverage (LOC): 69%
*- File /root/Targets/elasticsearch-watchdog/node_modules/yamljs/lib/Unescaper.js. Coverage (Term): 19% Coverage (LOC): 22%
*- File /root/Targets/elasticsearch-watchdog/node_modules/yamljs/lib/Utils.js. Coverage (Term): 12% Coverage (LOC): 18%
*- File /root/Targets/elasticsearch-watchdog/node_modules/yamljs/lib/Escaper.js. Coverage (Term): 71% Coverage (LOC): 93%
*- File /root/Targets/elasticsearch-watchdog/node_modules/yamljs/lib/Exception/ParseException.js. Coverage (Term): 62% Coverage (LOC): 74%
*- File /root/Targets/elasticsearch-watchdog/node_modules/yamljs/lib/Exception/ParseMore.js. Coverage (Term): 62% Coverage (LOC): 74%
*- File /root/Targets/elasticsearch-watchdog/node_modules/yamljs/lib/Exception/DumpException.js. Coverage (Term): 62% Coverage (LOC): 74%
*- File /root/Targets/elasticsearch-watchdog/node_modules/yamljs/lib/Dumper.js. Coverage (Term): 17% Coverage (LOC): 27%
*- File /root/Targets/elasticsearch-watchdog/node_modules/ssh2/lib/Connection.js. Coverage (Term): 1% Coverage (LOC): 1%
*- File /root/Targets/elasticsearch-watchdog/node_modules/asn1/lib/index.js. Coverage (Term): 55% Coverage (LOC): 50%
*- File /root/Targets/elasticsearch-watchdog/node_modules/asn1/lib/ber/index.js. Coverage (Term): 38% Coverage (LOC): 33%
*- File /root/Targets/elasticsearch-watchdog/node_modules/asn1/lib/ber/errors.js. Coverage (Term): 43% Coverage (LOC): 56%
*- File /root/Targets/elasticsearch-watchdog/node_modules/asn1/lib/ber/types.js. Coverage (Term): 98% Coverage (LOC): 100%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
