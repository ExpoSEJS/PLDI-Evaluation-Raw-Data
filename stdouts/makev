/root/Targets/makev
└─┬ makev@0.0.5 
  ├─┬ deep-eql@0.1.3 
  │ └── type-detect@0.1.1 
  ├─┬ lstream@0.0.4 
  │ └─┬ readable-stream@2.3.3 
  │   ├── core-util-is@1.0.2 
  │   ├── isarray@1.0.0 
  │   ├── process-nextick-args@1.0.7 
  │   ├── safe-buffer@5.1.1 
  │   ├── string_decoder@1.0.3 
  │   └── util-deprecate@1.0.2 
  ├── through@2.3.8 
  └─┬ trumpet@1.6.6 
    ├─┬ duplexer2@0.0.2 
    │ └─┬ readable-stream@1.1.14 
    │   ├── isarray@0.0.1 
    │   └── string_decoder@0.10.31 
    ├─┬ html-select@2.3.24 
    │ ├── cssauron@1.4.0 
    │ ├── minimist@0.0.10 
    │ ├─┬ readable-stream@1.1.14 
    │ │ ├── isarray@0.0.1 
    │ │ └── string_decoder@0.10.31 
    │ ├── split@0.3.3 
    │ └─┬ stream-splicer@1.3.2 
    │   ├── indexof@0.0.1 
    │   ├── isarray@0.0.1 
    │   ├─┬ readable-stream@1.1.14 
    │   │ └── string_decoder@0.10.31 
    │   └─┬ readable-wrap@1.0.0 
    │     └─┬ readable-stream@1.1.14 
    │       ├── isarray@0.0.1 
    │       └── string_decoder@0.10.31 
    ├─┬ html-tokenize@1.2.5 
    │ ├─┬ readable-stream@1.0.34 
    │ │ ├── isarray@0.0.1 
    │ │ └── string_decoder@0.10.31 
    │ └─┬ through2@0.4.2 
    │   └─┬ xtend@2.1.2 
    │     └── object-keys@0.4.0 
    ├── inherits@2.0.3 
    ├─┬ readable-stream@1.1.14 
    │ ├── isarray@0.0.1 
    │ └── string_decoder@0.10.31 
    └─┬ through2@1.1.1 
      ├─┬ readable-stream@1.1.14 
      │ ├── isarray@0.0.1 
      │ └── string_decoder@0.10.31 
      └── xtend@4.0.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/makev/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0871 took 3.8715s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node

/* gobal process */
'use strict';
var path = require('path');
var fs = require('fs');
var spawn = require('child_process').spawn;
var LineStream = require('lstream');
var through = require('through');
var trumpet = require('trumpet');
var depBuilder = require('./depBuilder.js');
var filterStartwith = require('./filterDepline.js');
var mydeps = {};
var builder = depBuilder(mydeps);


var possibleFileNames = ['Makefile', 'makefile'];
var cwd = process.cwd();

var hasMakeFile = possibleFileNames
  .map(function(fileName) {
    return path.join(cwd, fileName);
  })
  .some(function(absFileName) {
    return fs.existsSync(absFileName);
  });

// it does not works in windows it ignores case sensitive and sucks
if (!hasMakeFile) {
  console.error('don\'t have Makefile here ', cwd);
  process.exit(2);
}

var makeProcess = spawn('make', ['-dp']);
makeProcess.on('exit', function(code) {
  if (code !== 0) {
    console.log('make exited with code ' + code);
    console.log('please check make -d -dry-run workwith your makefile');
    process.exit(code);
  }
});

makeProcess.stdout
  .pipe(new LineStream())
  .pipe(filterStartwith)
  .pipe(builder);

var depsInjector = through(function() {
  this.queue('window.__dep = ' + JSON.stringify(mydeps));
});

makeProcess.stdout.on('finish', function() {
  var tr = trumpet();
  var _deps = tr.select('#deps').createStream();

  _deps.pipe(depsInjector).pipe(_deps);

  var htmlp = fs.createReadStream(path.join(__dirname,
    '../asset/_template.html'));
  var dest = fs.createWriteStream(path.join(process.cwd(), 'deps.html'));
  htmlp.pipe(tr).pipe(dest);

  htmlp.on('end', function() {
    console.log('Check this out');
    console.log('open deps.html in your browser');
  });
}); at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
