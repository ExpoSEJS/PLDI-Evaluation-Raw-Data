/root/Targets/loopback-component-model-diagram
└─┬ loopback-component-model-diagram@0.3.0 
  ├── UNMET PEER DEPENDENCY eslint@2.x - 3.x
  ├─┬ eslint-plugin-import@2.2.0 
  │ ├── builtin-modules@1.1.1 
  │ ├── contains-path@0.1.0 
  │ ├─┬ debug@2.6.9 
  │ │ └── ms@2.0.0 
  │ ├─┬ doctrine@1.5.0 
  │ │ ├── esutils@2.0.2 
  │ │ └── isarray@1.0.0 
  │ ├─┬ eslint-import-resolver-node@0.2.3 
  │ │ ├── object-assign@4.1.1 
  │ │ └─┬ resolve@1.4.0 
  │ │   └── path-parse@1.0.5 
  │ ├─┬ eslint-module-utils@2.1.1 
  │ │ └── pkg-dir@1.0.0 
  │ ├─┬ has@1.0.1 
  │ │ └── function-bind@1.1.1 
  │ ├── lodash.cond@4.5.2 
  │ ├─┬ minimatch@3.0.4 
  │ │ └─┬ brace-expansion@1.1.8 
  │ │   ├── balanced-match@1.0.0 
  │ │   └── concat-map@0.0.1 
  │ └─┬ pkg-up@1.0.0 
  │   └─┬ find-up@1.1.2 
  │     ├── path-exists@2.1.0 
  │     └─┬ pinkie-promise@2.0.1 
  │       └── pinkie@2.0.4 
  └── lodash@4.17.4 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/loopback-component-model-diagram/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0532 took 3.1016s
*-- Errors occured in test {"_bound":0}
* Error: SyntaxError: Unexpected token .
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
