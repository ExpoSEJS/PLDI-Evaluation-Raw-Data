/root/Targets/pearscript
└─┬ pearscript@0.2.3-1 
  ├─┬ chalk@1.1.3 
  │ ├── ansi-styles@2.2.1 
  │ ├── escape-string-regexp@1.0.5 
  │ ├─┬ has-ansi@2.0.0 
  │ │ └── ansi-regex@2.1.1 
  │ ├── strip-ansi@3.0.1 
  │ └── supports-color@2.0.0 
  ├─┬ jison@0.4.18 
  │ ├─┬ cjson@0.3.0 
  │ │ └─┬ jsonlint@1.6.0 
  │ │   └── JSV@4.0.2 
  │ ├── ebnf-parser@0.1.10 
  │ ├─┬ escodegen@1.3.3 
  │ │ ├── estraverse@1.5.1 
  │ │ ├── esutils@1.0.0 
  │ │ └─┬ source-map@0.1.43 
  │ │   └── amdefine@1.0.1 
  │ ├── esprima@1.1.1 
  │ ├── jison-lex@0.3.4 
  │ ├── JSONSelect@0.4.0 
  │ ├── lex-parser@0.1.4 
  │ └─┬ nomnom@1.5.2 
  │   ├── colors@0.5.1 
  │   └── underscore@1.1.7 
  └─┬ js-beautify@1.7.3 
    ├─┬ config-chain@1.1.11 
    │ ├── ini@1.3.4 
    │ └── proto-list@1.2.4 
    ├─┬ editorconfig@0.13.3 
    │ ├── bluebird@3.5.0 
    │ ├── commander@2.11.0 
    │ ├─┬ lru-cache@3.2.0 
    │ │ └── pseudomap@1.0.2 
    │ ├── semver@5.4.1 
    │ └── sigmund@1.0.1 
    ├─┬ mkdirp@0.5.1 
    │ └── minimist@0.0.8 
    └─┬ nopt@3.0.6 
      └── abbrev@1.1.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/pearscript/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0534 took 4.1956s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node
const fs = require('fs');
const transpiler = require('../lib/transpiler');
const chalk = require('chalk');

if(process.argv[2]) {
  const fileName = process.argv[2];
  const ext = fileName.split('.');

  if(ext.length > 0 && ext[ext.length -1] === 'pear') {

    const output = transpiler.transpile(fs.readFileSync(fileName, 'utf-8'));

  } else {
    console.log(chalk.red('File must have pear extension.'));
  }
} else {
  console.log(chalk.red('You must specify a file.'));
}

if(process.argv[3]) {
  const of = process.argv[3];
  fs.writeFileSync(of, output);
  console.log(chalk.green('Compiled into: ' + of));
} else {
  const outputFile = ext[0] + '.js';
  fs.writeFileSync(outputFile, output);
  console.log(chalk.green('Compiled into: ' + outputFile));
} at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
