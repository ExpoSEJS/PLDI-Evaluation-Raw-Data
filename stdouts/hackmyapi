
> phantomjs@1.9.20 install /root/Targets/hackmyapi/node_modules/phantomjs
> node install.js

PhantomJS not found on PATH
Downloading https://github.com/Medium/phantomjs/releases/download/v1.9.19/phantomjs-1.9.8-linux-x86_64.tar.bz2
Saving to /root/Targets/hackmyapi/node_modules/phantomjs/phantomjs/phantomjs-1.9.8-linux-x86_64.tar.bz2
Receiving...

Received 12854K total.
Extracting tar contents (via spawned process)
Removing /root/Targets/hackmyapi/node_modules/phantomjs/lib/phantom
Copying extracted folder /root/Targets/hackmyapi/node_modules/phantomjs/phantomjs/phantomjs-1.9.8-linux-x86_64.tar.bz2-extract-1507191117505/phantomjs-1.9.8-linux-x86_64 -> /root/Targets/hackmyapi/node_modules/phantomjs/lib/phantom
Writing location.js file
Done. Phantomjs binary available at /root/Targets/hackmyapi/node_modules/phantomjs/lib/phantom/bin/phantomjs
/root/Targets/hackmyapi
└─┬ hackmyapi@0.1.0 
  ├─┬ copy@0.1.3 
  │ ├── async@1.5.2 
  │ ├── bluebird@2.11.0 
  │ ├─┬ extend-shallow@2.0.1 
  │ │ └── is-extendable@0.1.1 
  │ ├─┬ glob-parent@1.3.0 
  │ │ └─┬ is-glob@2.0.1 
  │ │   └── is-extglob@1.0.0 
  │ ├── graceful-fs@4.1.11 
  │ └─┬ lazy-globby@0.1.1 
  │   ├─┬ globby@2.1.0 
  │   │ ├─┬ array-union@1.0.2 
  │   │ │ └── array-uniq@1.0.3 
  │   │ ├── glob@5.0.15 
  │   │ └── object-assign@3.0.0 
  │   └─┬ lazy-cache@0.1.0 
  │     └─┬ ansi-yellow@0.1.1 
  │       └── ansi-wrap@0.1.0 
  ├── extend@3.0.1 
  ├── fresca@0.6.0 
  ├─┬ fresh-jrs-converter@0.2.2 
  │ └── lodash@4.17.4 
  ├── fresh-resume-starter@0.2.2 
  ├── fresh-themes@0.14.0-beta 
  ├─┬ fs-extra@0.24.0 
  │ ├── jsonfile@2.4.0 
  │ ├── path-is-absolute@1.0.1 
  │ └─┬ rimraf@2.6.2 
  │   └── glob@7.1.2 
  ├─┬ handlebars@4.0.10 
  │ ├─┬ optimist@0.6.1 
  │ │ └── wordwrap@0.0.3 
  │ ├─┬ source-map@0.4.4 
  │ │ └── amdefine@1.0.1 
  │ └─┬ uglify-js@2.8.29 
  │   ├── source-map@0.5.7 
  │   ├── uglify-to-browserify@1.0.2 
  │   └─┬ yargs@3.10.0 
  │     ├── camelcase@1.2.1 
  │     ├─┬ cliui@2.1.0 
  │     │ ├─┬ center-align@0.1.3 
  │     │ │ ├─┬ align-text@0.1.4 
  │     │ │ │ ├─┬ kind-of@3.2.2 
  │     │ │ │ │ └── is-buffer@1.1.5 
  │     │ │ │ ├── longest@1.0.1 
  │     │ │ │ └── repeat-string@1.6.1 
  │     │ │ └── lazy-cache@1.0.4 
  │     │ ├── right-align@0.1.3 
  │     │ └── wordwrap@0.0.2 
  │     ├── decamelize@1.2.0 
  │     └── window-size@0.1.0 
  ├─┬ html@0.0.10 
  │ ├─┬ concat-stream@1.6.0 
  │ │ ├── inherits@2.0.3 
  │ │ ├─┬ readable-stream@2.3.3 
  │ │ │ ├── core-util-is@1.0.2 
  │ │ │ ├── isarray@1.0.0 
  │ │ │ ├── process-nextick-args@1.0.7 
  │ │ │ ├── safe-buffer@5.1.1 
  │ │ │ ├── string_decoder@1.0.3 
  │ │ │ └── util-deprecate@1.0.2 
  │ │ └── typedarray@0.0.6 
  │ └─┬ glob@3.2.11 
  │   └─┬ minimatch@0.3.0 
  │     └── sigmund@1.0.1 
  ├─┬ is-my-json-valid@2.16.1 
  │ ├── generate-function@2.0.0 
  │ ├─┬ generate-object-property@1.2.0 
  │ │ └── is-property@1.0.2 
  │ ├── jsonpointer@4.0.1 
  │ └── xtend@4.0.1 
  ├── json-lint@0.1.0 
  ├─┬ jst@0.0.13 
  │ └── locales@0.0.2 
  ├── lodash@3.10.1 
  ├── marked@0.3.6 
  ├─┬ mkdirp@0.5.1 
  │ └── minimist@0.0.8 
  ├── moment@2.18.1 
  ├─┬ parse-filepath@0.6.3 
  │ ├─┬ is-absolute@0.2.6 
  │ │ ├─┬ is-relative@0.2.1 
  │ │ │ └─┬ is-unc-path@0.1.2 
  │ │ │   └── unc-path-regex@0.1.2 
  │ │ └── is-windows@0.2.0 
  │ └── map-cache@0.2.2 
  ├─┬ path-exists@2.1.0 
  │ └─┬ pinkie-promise@2.0.1 
  │   └── pinkie@2.0.4 
  ├── printf@0.2.5 
  ├── recursive-readdir-sync@1.0.6 
  ├── simple-html-tokenizer@0.2.6 
  ├── slash@1.0.0 
  ├── string-padding@1.0.2 
  ├── string.prototype.endswith@0.2.0 
  ├── string.prototype.startswith@0.2.0 
  ├── traverse@0.6.6 
  ├── underscore@1.8.3 
  ├─┬ webshot@0.16.0 
  │ ├─┬ cross-spawn@0.2.9 
  │ │ └── lru-cache@2.7.3 
  │ ├─┬ graceful-fs@3.0.11 
  │ │ └── natives@1.1.0 
  │ ├─┬ phantomjs@1.9.20 
  │ │ ├─┬ extract-zip@1.5.0 
  │ │ │ ├─┬ concat-stream@1.5.0 
  │ │ │ │ └─┬ readable-stream@2.0.6 
  │ │ │ │   └── string_decoder@0.10.31 
  │ │ │ ├── debug@0.7.4 
  │ │ │ ├── mkdirp@0.5.0 
  │ │ │ └─┬ yauzl@2.4.1 
  │ │ │   └─┬ fd-slicer@1.0.1 
  │ │ │     └── pend@1.2.0 
  │ │ ├─┬ fs-extra@0.26.7 
  │ │ │ └── klaw@1.3.1 
  │ │ ├─┬ hasha@2.2.0 
  │ │ │ └── is-stream@1.1.0 
  │ │ ├── kew@0.7.0 
  │ │ ├── progress@1.1.8 
  │ │ ├─┬ request@2.67.0 
  │ │ │ ├── aws-sign2@0.6.0 
  │ │ │ ├─┬ bl@1.0.3 
  │ │ │ │ └─┬ readable-stream@2.0.6 
  │ │ │ │   └── string_decoder@0.10.31 
  │ │ │ ├── caseless@0.11.0 
  │ │ │ ├─┬ combined-stream@1.0.5 
  │ │ │ │ └── delayed-stream@1.0.0 
  │ │ │ ├── forever-agent@0.6.1 
  │ │ │ ├─┬ form-data@1.0.1 
  │ │ │ │ └─┬ async@2.5.0 
  │ │ │ │   └── lodash@4.17.4 
  │ │ │ ├─┬ har-validator@2.0.6 
  │ │ │ │ ├─┬ chalk@1.1.3 
  │ │ │ │ │ ├── ansi-styles@2.2.1 
  │ │ │ │ │ ├── escape-string-regexp@1.0.5 
  │ │ │ │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ │ │ │ └── ansi-regex@2.1.1 
  │ │ │ │ │ ├── strip-ansi@3.0.1 
  │ │ │ │ │ └── supports-color@2.0.0 
  │ │ │ │ └── commander@2.11.0 
  │ │ │ ├─┬ hawk@3.1.3 
  │ │ │ │ ├── boom@2.10.1 
  │ │ │ │ ├── cryptiles@2.0.5 
  │ │ │ │ ├── hoek@2.16.3 
  │ │ │ │ └── sntp@1.0.9 
  │ │ │ ├─┬ http-signature@1.1.1 
  │ │ │ │ ├── assert-plus@0.2.0 
  │ │ │ │ ├─┬ jsprim@1.4.1 
  │ │ │ │ │ ├── assert-plus@1.0.0 
  │ │ │ │ │ ├── extsprintf@1.3.0 
  │ │ │ │ │ ├── json-schema@0.2.3 
  │ │ │ │ │ └─┬ verror@1.10.0 
  │ │ │ │ │   └── assert-plus@1.0.0 
  │ │ │ │ └─┬ sshpk@1.13.1 
  │ │ │ │   ├── asn1@0.2.3 
  │ │ │ │   ├── assert-plus@1.0.0 
  │ │ │ │   ├── bcrypt-pbkdf@1.0.1 
  │ │ │ │   ├─┬ dashdash@1.14.1 
  │ │ │ │   │ └── assert-plus@1.0.0 
  │ │ │ │   ├── ecc-jsbn@0.1.1 
  │ │ │ │   ├─┬ getpass@0.1.7 
  │ │ │ │   │ └── assert-plus@1.0.0 
  │ │ │ │   ├── jsbn@0.1.1 
  │ │ │ │   └── tweetnacl@0.14.5 
  │ │ │ ├── is-typedarray@1.0.0 
  │ │ │ ├── isstream@0.1.2 
  │ │ │ ├── json-stringify-safe@5.0.1 
  │ │ │ ├─┬ mime-types@2.1.17 
  │ │ │ │ └── mime-db@1.30.0 
  │ │ │ ├── node-uuid@1.4.8 
  │ │ │ ├── oauth-sign@0.8.2 
  │ │ │ ├── qs@5.2.1 
  │ │ │ ├── stringstream@0.0.5 
  │ │ │ ├── tough-cookie@2.2.2 
  │ │ │ └── tunnel-agent@0.4.3 
  │ │ ├─┬ request-progress@2.0.1 
  │ │ │ └── throttleit@1.0.0 
  │ │ └─┬ which@1.2.14 
  │ │   └── isexe@2.0.0 
  │ └─┬ tmp@0.0.33 
  │   └── os-tmpdir@1.0.2 
  ├── word-wrap@1.2.3 
  ├── xml-escape@1.1.0 
  └─┬ yamljs@0.2.10 
    ├─┬ argparse@1.0.9 
    │ └── sprintf-js@1.0.3 
    └─┬ glob@7.1.2 
      ├── fs.realpath@1.0.0 
      ├─┬ inflight@1.0.6 
      │ └── wrappy@1.0.2 
      ├─┬ minimatch@3.0.4 
      │ └─┬ brace-expansion@1.1.8 
      │   ├── balanced-match@1.0.0 
      │   └── concat-map@0.0.1 
      └── once@1.4.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/hackmyapi/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 32% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","call","pow","join","RegExp","sort","parseInt","binding","Object","WeakMap","create","Set","Array","ArrayBuffer","DataView","Map","resolve","max","now","apply","bind","defineProperties","getOwnPropertyNames","getOwnPropertyDescriptor"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.1028 took 93.1731s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (4:4) on program module.exports = rimraf
rimraf.sync = rimrafSync

var assert = require("assert")
var path = require("path")
var fs = require("fs")
var glob = require("glob")
var _0666 = parseInt('666', 8)

var defaultGlobOpts = {
  nosort: true,
  silent: true
}

// for EMFILE handling
var timeout = 0

var isWindows = (process.platform === "win32")

function defaults (options) {
  var methods = [
    'unlink',
    'chmod',
    'stat',
    'lstat',
    'rmdir',
    'readdir'
  ]
  methods.forEach(function(m) {
    options[m] = options[m] || fs[m]
    m = m + 'Sync'
    options[m] = options[m] || fs[m]
  })

  options.maxBusyTries = options.maxBusyTries || 3
  options.emfileWait = options.emfileWait || 1000
  if (options.glob === false) {
    options.disableGlob = true
  }
  options.disableGlob = options.disableGlob || false
  options.glob = options.glob || defaultGlobOpts
}

function rimraf (p, options, cb) {
  if (typeof options === 'function') {
    cb = options
    options = {}
  }

  assert(p, 'rimraf: missing path')
  assert.equal(typeof p, 'string', 'rimraf: path should be a string')
  assert.equal(typeof cb, 'function', 'rimraf: callback function required')
  assert(options, 'rimraf: invalid options argument provided')
  assert.equal(typeof options, 'object', 'rimraf: options should be object')

  defaults(options)

  var busyTries = 0
  var errState = null
  var n = 0

  if (options.disableGlob || !glob.hasMagic(p))
    return afterGlob(null, [p])

  options.lstat(p, function (er, stat) {
    if (!er)
      return afterGlob(null, [p])

    glob(p, options.glob, afterGlob)
  })

  function next (er) {
    errState = errState || er
    if (--n === 0)
      cb(errState)
  }

  function afterGlob (er, results) {
    if (er)
      return cb(er)

    n = results.length
    if (n === 0)
      return cb()

    results.forEach(function (p) {
      rimraf_(p, options, function CB (er) {
        if (er) {
          if ((er.code === "EBUSY" || er.code === "ENOTEMPTY" || er.code === "EPERM") &&
              busyTries < options.maxBusyTries) {
            busyTries ++
            var time = busyTries * 100
            // try again, with the same exact callback as this one.
            return setTimeout(function () {
              rimraf_(p, options, CB)
            }, time)
          }

          // this one won't happen if graceful-fs is used.
          if (er.code === "EMFILE" && timeout < options.emfileWait) {
            return setTimeout(function () {
              rimraf_(p, options, CB)
            }, timeout ++)
          }

          // already gone
          if (er.code === "ENOENT") er = null
        }

        timeout = 0
        next(er)
      })
    })
  }
}

// Two possible strategies.
// 1. Assume it's a file.  unlink it, then do the dir stuff on EPERM or EISDIR
// 2. Assume it's a directory.  readdir, then do the file stuff on ENOTDIR
//
// Both result in an extra syscall when you guess wrong.  However, there
// are likely far more normal files in the world than directories.  This
// is based on the assumption that a the average number of files per
// directory is >= 1.
//
// If anyone ever complains about this, then I guess the strategy could
// be made configurable somehow.  But until then, YAGNI.
function rimraf_ (p, options, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')

  // sunos lets the root user unlink directories, which is... weird.
  // so we have to lstat here and make sure it's not a dir.
  options.lstat(p, function (er, st) {
    if (er && er.code === "ENOENT")
      return cb(null)

    // Windows can EPERM on stat.  Life is suffering.
    if (er && er.code === "EPERM" && isWindows)
      fixWinEPERM(p, options, er, cb)

    if (st && st.isDirectory())
      return rmdir(p, options, er, cb)

    options.unlink(p, function (er) {
      if (er) {
        if (er.code === "ENOENT")
          return cb(null)
        if (er.code === "EPERM")
          return (isWindows)
            ? fixWinEPERM(p, options, er, cb)
            : rmdir(p, options, er, cb)
        if (er.code === "EISDIR")
          return rmdir(p, options, er, cb)
      }
      return cb(er)
    })
  })
}

function fixWinEPERM (p, options, er, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')
  if (er)
    assert(er instanceof Error)

  options.chmod(p, _0666, function (er2) {
    if (er2)
      cb(er2.code === "ENOENT" ? null : er)
    else
      options.stat(p, function(er3, stats) {
        if (er3)
          cb(er3.code === "ENOENT" ? null : er)
        else if (stats.isDirectory())
          rmdir(p, options, er, cb)
        else
          options.unlink(p, cb)
      })
  })
}

function fixWinEPERMSync (p, options, er) {
  assert(p)
  assert(options)
  if (er)
    assert(er instanceof Error)

  try {
    options.chmodSync(p, _0666)
  } catch (er2) {
    if (er2.code === "ENOENT")
      return
    else
      throw er
  }

  try {
    var stats = options.statSync(p)
  } catch (er3) {
    if (er3.code === "ENOENT")
      return
    else
      throw er
  }

  if (stats.isDirectory())
    rmdirSync(p, options, er)
  else
    options.unlinkSync(p)
}

function rmdir (p, options, originalEr, cb) {
  assert(p)
  assert(options)
  if (originalEr)
    assert(originalEr instanceof Error)
  assert(typeof cb === 'function')

  // try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS)
  // if we guessed wrong, and it's not a directory, then
  // raise the original error.
  options.rmdir(p, function (er) {
    if (er && (er.code === "ENOTEMPTY" || er.code === "EEXIST" || er.code === "EPERM"))
      rmkids(p, options, cb)
    else if (er && er.code === "ENOTDIR")
      cb(originalEr)
    else
      cb(er)
  })
}

function rmkids(p, options, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')

  options.readdir(p, function (er, files) {
    if (er)
      return cb(er)
    var n = files.length
    if (n === 0)
      return options.rmdir(p, cb)
    var errState
    files.forEach(function (f) {
      rimraf(path.join(p, f), options, function (er) {
        if (errState)
          return
        if (er)
          return cb(errState = er)
        if (--n === 0)
          options.rmdir(p, cb)
      })
    })
  })
}

// this looks simpler, and is strictly *faster*, but will
// tie up the JavaScript thread and fail on excessively
// deep directory trees.
function rimrafSync (p, options) {
  options = options || {}
  defaults(options)

  assert(p, 'rimraf: missing path')
  assert.equal(typeof p, 'string', 'rimraf: path should be a string')
  assert(options, 'rimraf: missing options')
  assert.equal(typeof options, 'object', 'rimraf: options should be object')

  var results

  if (options.disableGlob || !glob.hasMagic(p)) {
    results = [p]
  } else {
    try {
      options.lstatSync(p)
      results = [p]
    } catch (er) {
      results = glob.sync(p, options.glob)
    }
  }

  if (!results.length)
    return

  for (var i = 0; i < results.length; i++) {
    var p = results[i]

    try {
      var st = options.lstatSync(p)
    } catch (er) {
      if (er.code === "ENOENT")
        return

      // Windows can EPERM on stat.  Life is suffering.
      if (er.code === "EPERM" && isWindows)
        fixWinEPERMSync(p, options, er)
    }

    try {
      // sunos lets the root user unlink directories, which is... weird.
      if (st && st.isDirectory())
        rmdirSync(p, options, null)
      else
        options.unlinkSync(p)
    } catch (er) {
      if (er.code === "ENOENT")
        return
      if (er.code === "EPERM")
        return isWindows ? fixWinEPERMSync(p, options, er) : rmdirSync(p, options, er)
      if (er.code !== "EISDIR")
        throw er

      rmdirSync(p, options, er)
    }
  }
}

function rmdirSync (p, options, originalEr) {
  assert(p)
  assert(options)
  if (originalEr)
    assert(originalEr instanceof Error)

  try {
    options.rmdirSync(p)
  } catch (er) {
    if (er.code === "ENOENT")
      return
    if (er.code === "ENOTDIR")
      throw originalEr
    if (er.code === "ENOTEMPTY" || er.code === "EEXIST" || er.code === "EPERM")
      rmkidsSync(p, options)
  }
}

function rmkidsSync (p, options) {
  assert(p)
  assert(options)
  options.readdirSync(p).forEach(function (f) {
    rimrafSync(path.join(p, f), options)
  })

  // We only end up here once we got ENOTEMPTY at least once, and
  // at this point, we are guaranteed to have removed all the kids.
  // So, we know that it won't be ENOENT or ENOTDIR or anything else.
  // try really hard to delete stuff on windows, because it has a
  // PROFOUNDLY annoying habit of not closing handles promptly when
  // files are deleted, resulting in spurious ENOTEMPTY errors.
  var retries = isWindows ? 100 : 1
  var i = 0
  do {
    var threw = true
    try {
      var ret = options.rmdirSync(p, options)
      threw = false
      return ret
    } finally {
      if (++i < retries && threw)
        continue
    }
  } while (true)
}
 at SyntaxError: Unexpected token (4:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/hackmyapi/node_modules/hackmyapi/src/hackmyapi.js. Coverage (Term): 20% Coverage (LOC): 15%
*- File /root/Targets/hackmyapi/node_modules/hackmyapi/src/verbs/build.js. Coverage (Term): 12% Coverage (LOC): 7%
*- File /root/Targets/hackmyapi/node_modules/underscore/underscore.js. Coverage (Term): 19% Coverage (LOC): 33%
*- File /root/Targets/hackmyapi/node_modules/marked/lib/marked.js. Coverage (Term): 18% Coverage (LOC): 29%
*- File /root/Targets/hackmyapi/node_modules/mkdirp/index.js. Coverage (Term): 14% Coverage (LOC): 13%
*- File /root/Targets/hackmyapi/node_modules/extend/index.js. Coverage (Term): 13% Coverage (LOC): 16%
*- File /root/Targets/hackmyapi/node_modules/parse-filepath/index.js. Coverage (Term): 26% Coverage (LOC): 24%
*- File /root/Targets/hackmyapi/node_modules/is-absolute/index.js. Coverage (Term): 30% Coverage (LOC): 48%
*- File /root/Targets/hackmyapi/node_modules/is-relative/index.js. Coverage (Term): 45% Coverage (LOC): 60%
*- File /root/Targets/hackmyapi/node_modules/is-unc-path/index.js. Coverage (Term): 52% Coverage (LOC): 67%
*- File /root/Targets/hackmyapi/node_modules/unc-path-regex/index.js. Coverage (Term): 68% Coverage (LOC): 83%
*- File /root/Targets/hackmyapi/node_modules/is-windows/index.js. Coverage (Term): 47% Coverage (LOC): 50%
*- File /root/Targets/hackmyapi/node_modules/map-cache/index.js. Coverage (Term): 43% Coverage (LOC): 68%
*- File /root/Targets/hackmyapi/node_modules/fresh-jrs-converter/src/index.js. Coverage (Term): 14% Coverage (LOC): 16%
*- File /root/Targets/hackmyapi/node_modules/fresh-jrs-converter/node_modules/lodash/lodash.js. Coverage (Term): 22% Coverage (LOC): 35%
*- File /root/Targets/hackmyapi/node_modules/fresh-jrs-converter/src/to-jrs.js. Coverage (Term): 7% Coverage (LOC): 12%
*- File /root/Targets/hackmyapi/node_modules/fresh-jrs-converter/src/to-fresh.js. Coverage (Term): 8% Coverage (LOC): 13%
*- File /root/Targets/hackmyapi/node_modules/hackmyapi/src/core/status-codes.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/hackmyapi/node_modules/hackmyapi/src/core/event-codes.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/hackmyapi/node_modules/hackmyapi/src/core/fresh-resume.js. Coverage (Term): 13% Coverage (LOC): 21%
*- File /root/Targets/hackmyapi/node_modules/is-my-json-valid/index.js. Coverage (Term): 4% Coverage (LOC): 7%
*- File /root/Targets/hackmyapi/node_modules/generate-object-property/index.js. Coverage (Term): 43% Coverage (LOC): 80%
*- File /root/Targets/hackmyapi/node_modules/is-property/is-property.js. Coverage (Term): 64% Coverage (LOC): 83%
*- File /root/Targets/hackmyapi/node_modules/generate-function/index.js. Coverage (Term): 10% Coverage (LOC): 14%
*- File /root/Targets/hackmyapi/node_modules/jsonpointer/jsonpointer.js. Coverage (Term): 11% Coverage (LOC): 18%
*- File /root/Targets/hackmyapi/node_modules/xtend/immutable.js. Coverage (Term): 32% Coverage (LOC): 33%
*- File /root/Targets/hackmyapi/node_modules/is-my-json-valid/formats.js. Coverage (Term): 99% Coverage (LOC): 100%
*- File /root/Targets/hackmyapi/node_modules/lodash/index.js. Coverage (Term): 20% Coverage (LOC): 31%
*- File /root/Targets/hackmyapi/node_modules/moment/moment.js. Coverage (Term): 21% Coverage (LOC): 37%
*- File /root/Targets/hackmyapi/node_modules/xml-escape/index.js. Coverage (Term): 32% Coverage (LOC): 61%
*- File /root/Targets/hackmyapi/node_modules/hackmyapi/src/core/jrs-resume.js. Coverage (Term): 12% Coverage (LOC): 19%
*- File /root/Targets/hackmyapi/node_modules/hackmyapi/src/core/default-options.js. Coverage (Term): 94% Coverage (LOC): 100%
*- File /root/Targets/hackmyapi/node_modules/hackmyapi/src/core/fresh-theme.js. Coverage (Term): 12% Coverage (LOC): 9%
*- File /root/Targets/hackmyapi/node_modules/path-exists/index.js. Coverage (Term): 32% Coverage (LOC): 45%
*- File /root/Targets/hackmyapi/node_modules/pinkie-promise/index.js. Coverage (Term): 86% Coverage (LOC): 100%
*- File /root/Targets/hackmyapi/node_modules/hackmyapi/src/utils/safe-json-loader.js. Coverage (Term): 36% Coverage (LOC): 35%
*- File /root/Targets/hackmyapi/node_modules/hackmyapi/src/utils/syntax-error-ex.js. Coverage (Term): 33% Coverage (LOC): 54%
*- File /root/Targets/hackmyapi/node_modules/recursive-readdir-sync/index.js. Coverage (Term): 32% Coverage (LOC): 36%
*- File /root/Targets/hackmyapi/node_modules/hackmyapi/src/core/jrs-theme.js. Coverage (Term): 35% Coverage (LOC): 28%
*- File /root/Targets/hackmyapi/node_modules/hackmyapi/src/core/resume-factory.js. Coverage (Term): 21% Coverage (LOC): 17%
*- File /root/Targets/hackmyapi/node_modules/chalk/index.js. Coverage (Term): 46% Coverage (LOC): 56%
*- File /root/Targets/hackmyapi/node_modules/escape-string-regexp/index.js. Coverage (Term): 85% Coverage (LOC): 90%
*- File /root/Targets/hackmyapi/node_modules/ansi-styles/index.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/hackmyapi/node_modules/strip-ansi/index.js. Coverage (Term): 57% Coverage (LOC): 86%
*- File /root/Targets/hackmyapi/node_modules/ansi-regex/index.js. Coverage (Term): 93% Coverage (LOC): 100%
*- File /root/Targets/hackmyapi/node_modules/has-ansi/index.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/hackmyapi/node_modules/supports-color/index.js. Coverage (Term): 63% Coverage (LOC): 56%
*- File /root/Targets/hackmyapi/node_modules/string.prototype.startswith/startswith.js. Coverage (Term): 9% Coverage (LOC): 8%
*- File /root/Targets/hackmyapi/node_modules/hackmyapi/src/core/default-formats.js. Coverage (Term): 23% Coverage (LOC): 14%
*- File /root/Targets/hackmyapi/node_modules/hackmyapi/src/generators/html-generator.js. Coverage (Term): 24% Coverage (LOC): 31%
*- File /root/Targets/hackmyapi/node_modules/hackmyapi/src/generators/template-generator.js. Coverage (Term): 6% Coverage (LOC): 5%
*- File /root/Targets/hackmyapi/node_modules/fs-extra/lib/index.js. Coverage (Term): 48% Coverage (LOC): 50%
*- File /root/Targets/hackmyapi/node_modules/fs-extra/lib/util/assign.js. Coverage (Term): 94% Coverage (LOC): 100%
*- File /root/Targets/hackmyapi/node_modules/graceful-fs/graceful-fs.js. Coverage (Term): 27% Coverage (LOC): 33%
*- File /root/Targets/hackmyapi/node_modules/graceful-fs/polyfills.js. Coverage (Term): 31% Coverage (LOC): 39%
*- File /root/Targets/hackmyapi/node_modules/graceful-fs/fs.js. Coverage (Term): 87% Coverage (LOC): 100%
*- File /root/Targets/hackmyapi/node_modules/graceful-fs/legacy-streams.js. Coverage (Term): 6% Coverage (LOC): 5%
*- File /root/Targets/hackmyapi/node_modules/fs-extra/lib/copy/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/hackmyapi/node_modules/fs-extra/lib/copy/copy.js. Coverage (Term): 22% Coverage (LOC): 22%
*- File /root/Targets/hackmyapi/node_modules/fs-extra/lib/copy/ncp.js. Coverage (Term): 4% Coverage (LOC): 3%
*- File /root/Targets/hackmyapi/node_modules/fs-extra/lib/util/utimes.js. Coverage (Term): 13% Coverage (LOC): 24%
*- File /root/Targets/hackmyapi/node_modules/fs-extra/lib/mkdirs/index.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/hackmyapi/node_modules/fs-extra/lib/mkdirs/mkdirs.js. Coverage (Term): 17% Coverage (LOC): 16%
*- File /root/Targets/hackmyapi/node_modules/fs-extra/lib/mkdirs/mkdirs-sync.js. Coverage (Term): 25% Coverage (LOC): 23%
*- File /root/Targets/hackmyapi/node_modules/fs-extra/lib/copy-sync/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/hackmyapi/node_modules/fs-extra/lib/copy-sync/copy-sync.js. Coverage (Term): 15% Coverage (LOC): 17%
*- File /root/Targets/hackmyapi/node_modules/fs-extra/lib/copy-sync/copy-file-sync.js. Coverage (Term): 24% Coverage (LOC): 26%
*- File /root/Targets/hackmyapi/node_modules/fs-extra/lib/remove/index.js. Coverage (Term): 31% Coverage (LOC): 50%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
