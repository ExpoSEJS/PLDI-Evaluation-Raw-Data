
> bson@0.0.4 install /root/Targets/scotch-blog/node_modules/bson
> node install.js

================================================================================
=                                                                              =
=  To install with C++ bson parser do <npm install mongodb --mongodb:native>   =
=                                                                              =
================================================================================

> pg@0.9.0 install /root/Targets/scotch-blog/node_modules/pg
> node-gyp rebuild || (exit 0)


> ws@0.4.32 install /root/Targets/scotch-blog/node_modules/ws
> (node-gyp rebuild 2> builderror.log) || (exit 0)

make: Entering directory '/root/Targets/scotch-blog/node_modules/ws/build'
  CXX(target) Release/obj.target/bufferutil/src/bufferutil.o
bufferutil.target.mk:96: recipe for target 'Release/obj.target/bufferutil/src/bufferutil.o' failed
make: Leaving directory '/root/Targets/scotch-blog/node_modules/ws/build'
/root/Targets/scotch-blog
└─┬ scotch-blog@0.1.7 
  ├─┬ commander@1.2.0 
  │ └── keypress@0.1.0 
  ├─┬ envoy@0.0.6 
  │ ├── async@0.2.10 
  │ ├── crypto@0.0.3 
  │ ├─┬ jake@0.5.18 
  │ │ └─┬ minimatch@0.2.14 
  │ │   ├── lru-cache@2.7.3 
  │ │   └── sigmund@1.0.1 
  │ ├─┬ jsftp@0.6.0 
  │ │ └── streamer@0.2.1 
  │ ├─┬ knox@0.8.10 
  │ │ ├── debug@0.7.4 
  │ │ ├─┬ stream-counter@0.1.0 
  │ │ │ └─┬ readable-stream@1.0.34 
  │ │ │   ├── core-util-is@1.0.2 
  │ │ │   ├── inherits@2.0.3 
  │ │ │   ├── isarray@0.0.1 
  │ │ │   └── string_decoder@0.10.31 
  │ │ └─┬ xml2js@0.2.8 
  │ │   └── sax@0.5.8 
  │ ├── mime@1.2.11 
  │ └── wrench@1.5.1 
  ├─┬ geddy@0.9.18 
  │ ├─┬ barista@0.0.10 
  │ │ └── inflection@1.12.0 
  │ ├─┬ model@0.2.10 
  │ │ └─┬ pg@0.9.0 
  │ │   └── generic-pool@2.0.2 
  │ └─┬ socket.io@0.9.19 
  │   ├── base64id@0.1.0 
  │   ├── policyfile@0.0.4 
  │   ├── redis@0.7.3 
  │   └─┬ socket.io-client@0.9.16 
  │     ├─┬ active-x-obfuscator@0.0.1 
  │     │ └── zeparser@0.0.5 
  │     ├── uglify-js@1.2.5 
  │     ├─┬ ws@0.4.32 
  │     │ ├── commander@2.1.0 
  │     │ ├── nan@1.0.0 
  │     │ ├── options@0.0.6 
  │     │ └── tinycolor@0.0.1 
  │     └── xmlhttprequest@1.4.2 
  ├── highlight@0.2.4 
  ├── marked@0.2.10 
  ├─┬ mongodb-wrapper@0.4.0 
  │ ├── async_testing@0.3.2 
  │ └─┬ mongodb@0.9.9-8 
  │   └── bson@0.0.4 
  ├─┬ request@2.21.0 
  │ ├── aws-sign@0.3.0 
  │ ├── cookie-jar@0.3.0 
  │ ├── forever-agent@0.5.2 
  │ ├─┬ form-data@0.0.8 
  │ │ └─┬ combined-stream@0.0.7 
  │ │   └── delayed-stream@0.0.5 
  │ ├─┬ hawk@0.13.1 
  │ │ ├─┬ boom@0.4.2 
  │ │ │ └── hoek@0.9.1 
  │ │ ├── cryptiles@0.2.2 
  │ │ ├── hoek@0.8.5 
  │ │ └─┬ sntp@0.2.4 
  │ │   └── hoek@0.9.1 
  │ ├─┬ http-signature@0.9.11 
  │ │ ├── asn1@0.1.11 
  │ │ ├── assert-plus@0.1.2 
  │ │ └── ctype@0.5.2 
  │ ├── json-stringify-safe@4.0.0 
  │ ├── node-uuid@1.4.8 
  │ ├── oauth-sign@0.3.0 
  │ ├── qs@0.6.6 
  │ └── tunnel-agent@0.3.0 
  ├── slugs@0.1.3 
  ├── underscore@1.4.4 
  └── utilities@0.0.26 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/scotch-blog/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0419 took 4.607s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node

var program = require('commander')
  , utils = require('utilities')
  , path = require('path')
  , geddy = require('geddy')
  , _ = require('underscore')
  , request = require('request')
  , envoy = require('envoy')
  , fs = require('fs');

program
  .option('create <name>', 'create a new directory (<name>) and generate a new Scotch site in it.')
  .option('serve [port]', 'start the server, defaults to 80', 80)
  .option('generate', 'generate a static html site')
  .option('deploy', 'deploys a generated site')
  .parse(process.argv);

var Controller = function () {

  this.create = function (name) {
    console.log('Created a new site in directory: ' + program.create);
    utils.file.cpR(path.join(__dirname, '..'), name, {silent: true});
    utils.file.rmRf(path.join(name, '.git'), {silent: true});
    utils.file.rmRf(path.join(name, '.gitignore'), {silent: true});
  };

  this.serve = function (port) {
    port = port || 80;
    console.log('Serving on port ' + port);
    console.log(process.cwd())
    geddy.start({
      'geddy-root': process.cwd()
    , port: port
    });
  };

  this.generate = function () {
    console.log('generated static site in ./static');
    utils.file.cpR(path.join(process.cwd(), 'public'), 'static', {silent: true});
    geddy.start(
    {
      'geddy-root': process.cwd()
    , 'port': 8080
    });
    geddy.model.Post.all({isPublished: true}, {sort: {createdAt: 'asc'}}, function (err, posts) {
      if (err) return console.log(err);
      var slugs = _.pluck(posts, 'slug')
        , done = _.after(slugs.length, function () {
            request('http://localhost:8080/')
            .on('end', function () {
              console.log('done');
              process.exit();
            })
            .pipe(fs.createWriteStream(path.join('static', 'index.html')))
          });
      for (var i in slugs) {
        (function (slug, i) {
          request('http://localhost:8080/'+slug)
                  .on('end', done)
                  .pipe(fs.createWriteStream(path.join('static', slug+'.html')))
        })(slugs[i], i);
      }
    });
  };

  this.deploy = function () {
    var deployOpts
      , staticSiteDir = path.join(process.cwd(),'static')
      , deployOptsFile = path.join(process.cwd(),'config','deployment')
      , now = (new Date).getTime()
      , elapsed;
    
    //Check if static site has been generated
    if(!fs.existsSync(staticSiteDir)) {
      console.error('no static site detected');
      console.error('generate a static site with `scotch generate`');
      process.exit(1);
    }
    
    try {
      deployOpts = require(deployOptsFile);
    }
    catch (e) {
      console.error('could not load deployment settings');
      console.error('see: https://github.com/Techwraith/scotch#deployment');
      process.exit(1);
    }
    
    if(!deployOpts) {
      return;
    }
    
    deployOpts = _.clone(deployOpts);
    
    deployOpts.destination = deployOpts.destination || 'memory';
    deployOpts.opts = deployOpts.opts || {};
    
    console.log('deploying static site using ' + deployOpts.destination);
    
    envoy.deployFolder(staticSiteDir, deployOpts.destination, deployOpts.opts, function (err, log) {
      if(err) {
        console.error('failed to deploy: '+err);
        process.exit(1);
      }
      else {
        elapsed = (new Date).getTime() - now;
        
        elapsed = Math.round(elapsed/100)/10;
        
        console.log('deployed in ' + log.length + ' operations (' + elapsed + ' sec)');
        process.exit(0);
      }
    });
  };
}
var actions = new Controller();

if (program.create) return actions.create(program.create);
if (program.generate) return actions.generate();
if (program.deploy) return actions.deploy();
if (program.serve) return actions.serve(program.serve);
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
