/root/Targets/penelope
└─┬ penelope@0.0.0 
  ├── async@0.2.10 
  ├─┬ cli-color@1.2.0 
  │ ├── ansi-regex@2.1.1 
  │ ├── d@1.0.0 
  │ ├─┬ es5-ext@0.10.30 
  │ │ └── es6-symbol@3.1.1 
  │ ├── es6-iterator@2.0.1 
  │ ├─┬ memoizee@0.4.11 
  │ │ ├── es6-weak-map@2.0.2 
  │ │ ├── event-emitter@0.3.5 
  │ │ ├── is-promise@2.1.0 
  │ │ ├── lru-queue@0.1.0 
  │ │ └── next-tick@1.0.0 
  │ └── timers-ext@0.1.2 
  ├── minimist@0.0.7 
  └── underscore@1.8.3 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/penelope/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0696 took 2.3543s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node

/*! csstool v0.0.0 - MIT license */

'use strict';

/**
 * Module dependencies
 */

var _ = require('underscore'),
    Penelope = require('./lib/Penelope.js'),
    metrics = require('./metrics/All.js'),
    clc = require('cli-color'),
    argv = require('minimist')(process.argv.slice(2)),
    fs = require('fs'),
    async = require('async'),
    path = require('path');

console.log(clc.red('PA') + clc.yellow('RK') + clc.green('ER') + '-JS');

var penelope = new Penelope(metrics);

if (argv._.length > 0) {
    var stylesheets = [];

    async.each(argv._, function (filename, done) {
        var onComplete = function (err, data) {
            stylesheets.push(data);
        };

        if (filename.indexOf('.css') === -1) {
            fs.readdir(filename, function (err, files) {
                async.each(files, function (file, fileDone) {
                    if (file.indexOf('.css') === -1) {
                        return fileDone();
                    }

                    fs.readFile(path.join(filename, file), {encoding: 'utf8'}, function (err, fileData) {
                        onComplete(err, fileData);
                        fileDone();
                    });
                }, done);
            });
        }
        else {
            fs.readFile(filename, {encoding: 'utf8'}, function (err, fileData) {
                onComplete(err, fileData);
                done();
            });
        }
    }, function (err) {
        var results = penelope.run(stylesheets);
        _.each(metrics, function(metric) {
            console.log(metric.name + ': ' + results[metric.id]);
        });
    });
}
else {
    process.stdin.resume();
    process.stdin.setEncoding('utf8');
    var stdinData = '';

    process.stdin.on('data', function(chunk) {
        stdinData += chunk;
    });

    process.stdin.on('end', function() {
        var results = penelope.run(stdinData);
        _.each(metrics, function(metric) {
            console.log(metric.name + ': ' + results[metric.id]);
        });
    });
}
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
