/root/Targets/npm-proxify
└─┬ npm-proxify@0.5.2 
  ├── date-utils@1.2.15 
  ├── lodash@2.4.1 
  ├─┬ minilog@2.0.4 
  │ └── microee@0.0.2 
  ├─┬ mkdirp@0.5.0 
  │ └── minimist@0.0.8 
  ├─┬ multiparty@3.2.4 
  │ ├─┬ readable-stream@1.1.13 
  │ │ ├── core-util-is@1.0.1 
  │ │ ├── inherits@2.0.1 
  │ │ ├── isarray@0.0.1 
  │ │ └── string_decoder@0.10.31 
  │ └── stream-counter@0.2.0 
  ├─┬ tar.gz@0.1.1 
  │ ├─┬ commander@1.1.1 
  │ │ └── keypress@0.1.0 
  │ ├─┬ fstream@0.1.31 
  │ │ ├── graceful-fs@3.0.8 
  │ │ ├── inherits@2.0.1 
  │ │ ├─┬ mkdirp@0.5.1 
  │ │ │ └── minimist@0.0.8 
  │ │ └─┬ rimraf@2.4.3 
  │ │   └─┬ glob@5.0.15 
  │ │     ├─┬ inflight@1.0.4 
  │ │     │ └── wrappy@1.0.1 
  │ │     ├─┬ minimatch@3.0.0 
  │ │     │ └─┬ brace-expansion@1.1.1 
  │ │     │   ├── balanced-match@0.2.0 
  │ │     │   └── concat-map@0.0.1 
  │ │     ├─┬ once@1.3.2 
  │ │     │ └── wrappy@1.0.1 
  │ │     └── path-is-absolute@1.0.0 
  │ └─┬ tar@0.1.20 
  │   ├── block-stream@0.0.8 
  │   └── inherits@2.0.1 
  └─┬ tingodb@0.2.1 
    ├── async@1.4.2 
    ├── lodash@3.10.1 
    └── safe@0.3.4 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/npm-proxify/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 26% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","call","Date","RegExp","join","parseInt","sort"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0219 took 15.0726s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Invalid number (19:15) on program var path = require('path');
var fs = require('fs');

module.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;

function mkdirP (p, opts, f, made) {
    if (typeof opts === 'function') {
        f = opts;
        opts = {};
    }
    else if (!opts || typeof opts !== 'object') {
        opts = { mode: opts };
    }
    
    var mode = opts.mode;
    var xfs = opts.fs || fs;
    
    if (mode === undefined) {
        mode = 0777 & (~process.umask());
    }
    if (!made) made = null;
    
    var cb = f || function () {};
    p = path.resolve(p);
    
    xfs.mkdir(p, mode, function (er) {
        if (!er) {
            made = made || p;
            return cb(null, made);
        }
        switch (er.code) {
            case 'ENOENT':
                mkdirP(path.dirname(p), opts, function (er, made) {
                    if (er) cb(er, made);
                    else mkdirP(p, opts, cb, made);
                });
                break;

            // In the case of any other error, just see if there's a dir
            // there already.  If so, then hooray!  If not, then something
            // is borked.
            default:
                xfs.stat(p, function (er2, stat) {
                    // if the stat fails, then that's super weird.
                    // let the original error be the failure reason.
                    if (er2 || !stat.isDirectory()) cb(er, made)
                    else cb(null, made);
                });
                break;
        }
    });
}

mkdirP.sync = function sync (p, opts, made) {
    if (!opts || typeof opts !== 'object') {
        opts = { mode: opts };
    }
    
    var mode = opts.mode;
    var xfs = opts.fs || fs;
    
    if (mode === undefined) {
        mode = 0777 & (~process.umask());
    }
    if (!made) made = null;

    p = path.resolve(p);

    try {
        xfs.mkdirSync(p, mode);
        made = made || p;
    }
    catch (err0) {
        switch (err0.code) {
            case 'ENOENT' :
                made = sync(path.dirname(p), opts, made);
                sync(p, opts, made);
                break;

            // In the case of any other error, just see if there's a dir
            // there already.  If so, then hooray!  If not, then something
            // is borked.
            default:
                var stat;
                try {
                    stat = xfs.statSync(p);
                }
                catch (err1) {
                    throw err0;
                }
                if (!stat.isDirectory()) throw err0;
                break;
        }
    }

    return made;
};
 at SyntaxError: Invalid number (19:15)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1607:12)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/npm-proxify/node_modules/npm-proxify/app.js. Coverage (Term): 30% Coverage (LOC): 31%
*- File /root/Targets/npm-proxify/node_modules/npm-proxify/lib/logger.js. Coverage (Term): 38% Coverage (LOC): 33%
*- File /root/Targets/npm-proxify/node_modules/npm-proxify/lib/registryManager.js. Coverage (Term): 5% Coverage (LOC): 6%
*- File /root/Targets/npm-proxify/node_modules/npm-proxify/node_modules/lodash/dist/lodash.js. Coverage (Term): 19% Coverage (LOC): 27%
*- File /root/Targets/npm-proxify/node_modules/npm-proxify/lib/npmRegistry.js. Coverage (Term): 8% Coverage (LOC): 11%
*- File /root/Targets/npm-proxify/node_modules/npm-proxify/lib/registryCache.js. Coverage (Term): 4% Coverage (LOC): 6%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
