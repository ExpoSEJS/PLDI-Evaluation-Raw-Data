/root/Targets/react-rails-ux-password-field
└─┬ react-rails-ux-password-field@0.9.23 
  ├─┬ autoprefixer-core@6.0.1 
  │ └─┬ autoprefixer@6.7.7 
  │   ├─┬ browserslist@1.7.7 
  │   │ └── electron-to-chromium@1.3.22 
  │   ├── caniuse-db@1.0.30000738 
  │   ├── normalize-range@0.1.2 
  │   ├── num2fraction@1.2.2 
  │   └── postcss-value-parser@3.3.0 
  ├─┬ babel@5.8.38 
  │ ├─┬ chokidar@1.7.0 
  │ │ ├─┬ anymatch@1.3.2 
  │ │ │ └─┬ normalize-path@2.1.1 
  │ │ │   └── remove-trailing-separator@1.1.0 
  │ │ ├── async-each@1.0.1 
  │ │ ├── glob-parent@2.0.0 
  │ │ ├── inherits@2.0.3 
  │ │ ├─┬ is-binary-path@1.0.1 
  │ │ │ └── binary-extensions@1.10.0 
  │ │ ├─┬ is-glob@2.0.1 
  │ │ │ └── is-extglob@1.0.0 
  │ │ └─┬ readdirp@2.1.0 
  │ │   ├── minimatch@3.0.4 
  │ │   └── set-immediate-shim@1.0.1 
  │ ├── commander@2.11.0 
  │ ├── convert-source-map@1.5.0 
  │ ├── fs-readdir-recursive@0.1.2 
  │ ├─┬ glob@5.0.15 
  │ │ ├─┬ inflight@1.0.6 
  │ │ │ └── wrappy@1.0.2 
  │ │ └── once@1.4.0 
  │ ├── lodash@3.10.1 
  │ ├─┬ output-file-sync@1.1.2 
  │ │ └── graceful-fs@4.1.11 
  │ ├── path-exists@1.0.0 
  │ ├── path-is-absolute@1.0.1 
  │ ├── slash@1.0.0 
  │ └── source-map@0.5.7 
  ├─┬ babel-core@5.8.38 
  │ ├── babel-plugin-constant-folding@1.0.1 
  │ ├── babel-plugin-dead-code-elimination@1.0.2 
  │ ├── babel-plugin-eval@1.0.1 
  │ ├── babel-plugin-inline-environment-variables@1.0.1 
  │ ├── babel-plugin-jscript@1.0.4 
  │ ├── babel-plugin-member-expression-literals@1.0.1 
  │ ├── babel-plugin-property-literals@1.0.1 
  │ ├── babel-plugin-proto-to-assign@1.0.4 
  │ ├── babel-plugin-react-constant-elements@1.0.3 
  │ ├── babel-plugin-react-display-name@1.0.3 
  │ ├── babel-plugin-remove-console@1.0.1 
  │ ├── babel-plugin-remove-debugger@1.0.1 
  │ ├── babel-plugin-runtime@1.0.7 
  │ ├─┬ babel-plugin-undeclared-variables-check@1.0.2 
  │ │ └── leven@1.0.2 
  │ ├── babel-plugin-undefined-to-void@1.1.6 
  │ ├── babylon@5.8.38 
  │ ├── bluebird@2.11.0 
  │ ├─┬ chalk@1.1.3 
  │ │ ├── ansi-styles@2.2.1 
  │ │ ├── escape-string-regexp@1.0.5 
  │ │ ├── has-ansi@2.0.0 
  │ │ └── supports-color@2.0.0 
  │ ├── core-js@1.2.7 
  │ ├─┬ debug@2.6.9 
  │ │ └── ms@2.0.0 
  │ ├─┬ detect-indent@3.0.1 
  │ │ └── get-stdin@4.0.1 
  │ ├── esutils@2.0.2 
  │ ├── globals@6.4.1 
  │ ├─┬ home-or-tmp@1.0.0 
  │ │ ├── os-tmpdir@1.0.2 
  │ │ └── user-home@1.1.1 
  │ ├─┬ is-integer@1.0.7 
  │ │ └─┬ is-finite@1.0.2 
  │ │   └── number-is-nan@1.0.1 
  │ ├── js-tokens@1.0.1 
  │ ├── json5@0.4.0 
  │ ├─┬ minimatch@2.0.10 
  │ │ └─┬ brace-expansion@1.1.8 
  │ │   ├── balanced-match@1.0.0 
  │ │   └── concat-map@0.0.1 
  │ ├── private@0.1.7 
  │ ├─┬ regenerator@0.8.40 
  │ │ ├─┬ commoner@0.10.8 
  │ │ │ ├─┬ detective@4.5.0 
  │ │ │ │ └── acorn@4.0.13 
  │ │ │ ├── iconv-lite@0.4.19 
  │ │ │ ├── q@1.5.0 
  │ │ │ └─┬ recast@0.11.23 
  │ │ │   ├── ast-types@0.9.6 
  │ │ │   └── esprima@3.1.3 
  │ │ ├─┬ defs@1.1.1 
  │ │ │ ├─┬ alter@0.2.0 
  │ │ │ │ └── stable@0.1.6 
  │ │ │ ├── ast-traverse@0.1.1 
  │ │ │ ├── breakable@1.0.0 
  │ │ │ ├── simple-fmt@0.1.0 
  │ │ │ ├── simple-is@0.2.0 
  │ │ │ ├── stringmap@0.2.2 
  │ │ │ ├── stringset@0.2.1 
  │ │ │ ├── tryor@0.1.2 
  │ │ │ └─┬ yargs@3.27.0 
  │ │ │   ├─┬ os-locale@1.4.0 
  │ │ │   │ └─┬ lcid@1.0.0 
  │ │ │   │   └── invert-kv@1.0.0 
  │ │ │   ├── window-size@0.1.4 
  │ │ │   └── y18n@3.2.1 
  │ │ ├── esprima-fb@15001.1001.0-dev-harmony-fb 
  │ │ ├─┬ recast@0.10.33 
  │ │ │ └── ast-types@0.8.12 
  │ │ └── through@2.3.8 
  │ ├─┬ regexpu@1.3.0 
  │ │ ├── esprima@2.7.3 
  │ │ ├── regenerate@1.3.3 
  │ │ ├── regjsgen@0.2.0 
  │ │ └─┬ regjsparser@0.1.5 
  │ │   └── jsesc@0.5.0 
  │ ├── repeating@1.1.3 
  │ ├─┬ resolve@1.4.0 
  │ │ └── path-parse@1.0.5 
  │ ├── shebang-regex@1.0.0 
  │ ├─┬ source-map-support@0.2.10 
  │ │ └─┬ source-map@0.1.32 
  │ │   └── amdefine@1.0.1 
  │ ├── to-fast-properties@1.0.3 
  │ ├── trim-right@1.0.1 
  │ └── try-resolve@1.0.1 
  ├── babel-jest@5.3.0 
  ├─┬ babel-loader@5.4.2 
  │ ├─┬ loader-utils@0.2.17 
  │ │ ├── big.js@3.2.0 
  │ │ ├── emojis-list@2.1.0 
  │ │ └── json5@0.5.1 
  │ └── object-assign@3.0.0 
  ├─┬ css-loader@0.20.2 
  │ ├─┬ css-selector-tokenizer@0.5.4 
  │ │ ├── cssesc@0.1.0 
  │ │ └── fastparse@1.1.1 
  │ ├─┬ cssnano@3.10.0 
  │ │ ├── decamelize@1.2.0 
  │ │ ├── defined@1.0.0 
  │ │ ├─┬ has@1.0.1 
  │ │ │ └── function-bind@1.1.1 
  │ │ ├─┬ postcss-calc@5.3.1 
  │ │ │ ├── postcss-message-helpers@2.0.0 
  │ │ │ └─┬ reduce-css-calc@1.3.0 
  │ │ │   ├── balanced-match@0.4.2 
  │ │ │   ├── math-expression-evaluator@1.2.17 
  │ │ │   └─┬ reduce-function-call@1.0.2 
  │ │ │     └── balanced-match@0.4.2 
  │ │ ├─┬ postcss-colormin@2.2.2 
  │ │ │ └─┬ colormin@1.1.2 
  │ │ │   ├─┬ color@0.11.4 
  │ │ │   │ ├─┬ color-convert@1.9.0 
  │ │ │   │ │ └── color-name@1.1.3 
  │ │ │   │ └── color-string@0.3.0 
  │ │ │   └── css-color-names@0.0.4 
  │ │ ├── postcss-convert-values@2.6.1 
  │ │ ├── postcss-discard-comments@2.0.4 
  │ │ ├── postcss-discard-duplicates@2.1.0 
  │ │ ├── postcss-discard-empty@2.1.0 
  │ │ ├── postcss-discard-overridden@0.1.1 
  │ │ ├─┬ postcss-discard-unused@2.2.3 
  │ │ │ └── uniqs@2.0.0 
  │ │ ├─┬ postcss-filter-plugins@2.0.2 
  │ │ │ └─┬ uniqid@4.1.1 
  │ │ │   └── macaddress@0.2.8 
  │ │ ├── postcss-merge-idents@2.1.7 
  │ │ ├── postcss-merge-longhand@2.0.2 
  │ │ ├─┬ postcss-merge-rules@2.1.2 
  │ │ │ ├─┬ caniuse-api@1.6.1 
  │ │ │ │ ├── lodash.memoize@4.1.2 
  │ │ │ │ └── lodash.uniq@4.5.0 
  │ │ │ ├─┬ postcss-selector-parser@2.2.3 
  │ │ │ │ ├── flatten@1.0.2 
  │ │ │ │ ├── indexes-of@1.0.1 
  │ │ │ │ └── uniq@1.0.1 
  │ │ │ └── vendors@1.0.1 
  │ │ ├── postcss-minify-font-values@1.0.5 
  │ │ ├── postcss-minify-gradients@1.0.5 
  │ │ ├─┬ postcss-minify-params@1.2.2 
  │ │ │ └── alphanum-sort@1.0.2 
  │ │ ├── postcss-minify-selectors@2.1.1 
  │ │ ├── postcss-normalize-charset@1.1.1 
  │ │ ├─┬ postcss-normalize-url@3.0.8 
  │ │ │ ├── is-absolute-url@2.1.0 
  │ │ │ └─┬ normalize-url@1.9.1 
  │ │ │   ├── prepend-http@1.0.4 
  │ │ │   ├─┬ query-string@4.3.4 
  │ │ │   │ └── strict-uri-encode@1.1.0 
  │ │ │   └─┬ sort-keys@1.1.2 
  │ │ │     └── is-plain-obj@1.1.0 
  │ │ ├── postcss-ordered-values@2.2.3 
  │ │ ├── postcss-reduce-idents@2.4.0 
  │ │ ├── postcss-reduce-initial@1.0.1 
  │ │ ├── postcss-reduce-transforms@1.0.4 
  │ │ ├─┬ postcss-svgo@2.1.6 
  │ │ │ ├─┬ is-svg@2.1.0 
  │ │ │ │ └── html-comment-regex@1.1.1 
  │ │ │ └─┬ svgo@0.7.2 
  │ │ │   ├── coa@1.0.4 
  │ │ │   ├── colors@1.1.2 
  │ │ │   ├─┬ csso@2.3.2 
  │ │ │   │ └── clap@1.2.3 
  │ │ │   ├─┬ js-yaml@3.7.0 
  │ │ │   │ ├─┬ argparse@1.0.9 
  │ │ │   │ │ └── sprintf-js@1.0.3 
  │ │ │   │ └── esprima@2.7.3 
  │ │ │   ├── sax@1.2.4 
  │ │ │   └── whet.extend@0.9.9 
  │ │ ├── postcss-unique-selectors@2.0.2 
  │ │ └── postcss-zindex@2.2.0 
  │ ├─┬ lodash.camelcase@3.0.1 
  │ │ └─┬ lodash._createcompounder@3.0.0 
  │ │   ├─┬ lodash.deburr@3.2.0 
  │ │   │ └── lodash._root@3.0.1 
  │ │   └── lodash.words@3.2.0 
  │ ├── object-assign@4.1.1 
  │ ├─┬ postcss@5.2.17 
  │ │ └── js-base64@2.3.2 
  │ ├── postcss-modules-extract-imports@1.0.0-beta2 
  │ ├─┬ postcss-modules-local-by-default@1.2.0 
  │ │ ├─┬ css-selector-tokenizer@0.7.0 
  │ │ │ └── regexpu-core@1.0.0 
  │ │ └─┬ postcss@6.0.12 
  │ │   ├─┬ chalk@2.1.0 
  │ │   │ └── ansi-styles@3.2.0 
  │ │   └─┬ supports-color@4.4.0 
  │ │     └── has-flag@2.0.0 
  │ ├── postcss-modules-scope@1.0.0-beta2 
  │ ├─┬ postcss-modules-values@1.3.0 
  │ │ ├── icss-replace-symbols@1.1.0 
  │ │ └─┬ postcss@6.0.12 
  │ │   ├─┬ chalk@2.1.0 
  │ │   │ └── ansi-styles@3.2.0 
  │ │   └─┬ supports-color@4.4.0 
  │ │     └── has-flag@2.0.0 
  │ └── source-list-map@0.1.8 
  ├─┬ csswring@4.2.3 
  │ ├─┬ fs-extra@0.30.0 
  │ │ ├── jsonfile@2.4.0 
  │ │ ├── klaw@1.3.1 
  │ │ └─┬ rimraf@2.6.2 
  │ │   └─┬ glob@7.1.2 
  │ │     ├── fs.realpath@1.0.0 
  │ │     └── minimatch@3.0.4 
  │ ├── minimist@1.2.0 
  │ └── onecolor@2.5.0 
  ├─┬ extract-text-webpack-plugin@0.8.2 
  │ └── async@1.5.2 
  ├── file-loader@0.8.5 
  ├─┬ gh-pages-deploy@0.3.0 
  │ ├─┬ chalk@0.5.1 
  │ │ ├── ansi-styles@1.1.0 
  │ │ ├─┬ has-ansi@0.1.0 
  │ │ │ └── ansi-regex@0.2.1 
  │ │ ├── strip-ansi@0.3.0 
  │ │ └── supports-color@0.2.0 
  │ ├─┬ gasket@2.0.0 
  │ │ ├─┬ debug-stream@2.1.0 
  │ │ │ ├── debug@1.0.5 
  │ │ │ ├── split@0.3.3 
  │ │ │ └─┬ through2@2.0.3 
  │ │ │   └── xtend@4.0.1 
  │ │ ├─┬ duplexify@3.5.1 
  │ │ │ ├── end-of-stream@1.4.0 
  │ │ │ └── stream-shift@1.0.0 
  │ │ ├── multistream@1.6.1 
  │ │ ├─┬ ndjson@1.5.0 
  │ │ │ ├── json-stringify-safe@5.0.1 
  │ │ │ └── split2@2.2.0 
  │ │ ├─┬ npm-execspawn@1.3.0 
  │ │ │ ├─┬ execspawn@1.0.1 
  │ │ │ │ └── util-extend@1.0.3 
  │ │ │ └─┬ shell-quote@1.6.1 
  │ │ │   ├── array-filter@0.0.1 
  │ │ │   ├── array-map@0.0.0 
  │ │ │   ├── array-reduce@0.0.0 
  │ │ │   └── jsonify@0.0.0 
  │ │ ├─┬ pumpify@1.3.5 
  │ │ │ └── pump@1.0.2 
  │ │ ├── resolve@0.7.4 
  │ │ ├─┬ tabalot@0.6.1 
  │ │ │ └── minimist@0.2.0 
  │ │ └── xtend@3.0.0 
  │ ├─┬ prompt@0.2.14 
  │ │ ├── pkginfo@0.4.1 
  │ │ ├─┬ read@1.0.7 
  │ │ │ └── mute-stream@0.0.7 
  │ │ ├── revalidator@0.1.8 
  │ │ ├─┬ utile@0.2.1 
  │ │ │ ├── async@0.2.10 
  │ │ │ ├── deep-equal@1.0.1 
  │ │ │ ├── i@0.3.5 
  │ │ │ └── ncp@0.4.2 
  │ │ └─┬ winston@0.8.3 
  │ │   ├── async@0.2.10 
  │ │   ├── colors@0.6.2 
  │ │   ├── cycle@1.0.3 
  │ │   ├── eyes@0.1.8 
  │ │   ├── isstream@0.1.2 
  │ │   ├── pkginfo@0.3.1 
  │ │   └── stack-trace@0.0.10 
  │ └─┬ require-module@0.1.0 
  │   └── resolve@0.6.3 
  ├─┬ jsx-loader@0.13.2 
  │ └─┬ jstransform@11.0.3 
  │   ├── base62@1.2.0 
  │   ├── esprima-fb@15001.1.0-dev-harmony-fb 
  │   ├── object-assign@2.1.1 
  │   └── source-map@0.4.4 
  ├─┬ lodash.debounce@3.1.1 
  │ └── lodash._getnative@3.9.1 
  ├── normalize.css@3.0.3 
  ├── postcss-loader@0.6.0 
  ├─┬ react@15.6.2 
  │ ├── create-react-class@15.6.2 
  │ ├─┬ fbjs@0.8.16 
  │ │ ├─┬ isomorphic-fetch@2.2.1 
  │ │ │ ├─┬ node-fetch@1.7.3 
  │ │ │ │ ├── encoding@0.1.12 
  │ │ │ │ └── is-stream@1.1.0 
  │ │ │ └── whatwg-fetch@2.0.3 
  │ │ ├─┬ promise@7.3.1 
  │ │ │ └── asap@2.0.6 
  │ │ ├── setimmediate@1.0.5 
  │ │ └── ua-parser-js@0.7.14 
  │ ├─┬ loose-envify@1.3.1 
  │ │ └── js-tokens@3.0.2 
  │ └── prop-types@15.6.0 
  ├─┬ root-require@0.3.1 
  │ └── packpath@0.1.0 
  ├─┬ script-loader@0.6.1 
  │ └── raw-loader@0.5.1 
  ├── style-loader@0.12.4 
  ├─┬ url-loader@0.5.9 
  │ ├─┬ loader-utils@1.1.0 
  │ │ └── json5@0.5.1 
  │ └── mime@1.3.6 
  ├─┬ webpack@1.15.0 
  │ ├── acorn@3.3.0 
  │ ├── clone@1.0.2 
  │ ├─┬ enhanced-resolve@0.9.1 
  │ │ └── memory-fs@0.2.0 
  │ ├── interpret@0.6.6 
  │ ├─┬ memory-fs@0.3.0 
  │ │ ├─┬ errno@0.1.4 
  │ │ │ └── prr@0.0.0 
  │ │ └─┬ readable-stream@2.3.3 
  │ │   ├── core-util-is@1.0.2 
  │ │   ├── isarray@1.0.0 
  │ │   ├── process-nextick-args@1.0.7 
  │ │   ├── string_decoder@1.0.3 
  │ │   └── util-deprecate@1.0.2 
  │ ├─┬ mkdirp@0.5.1 
  │ │ └── minimist@0.0.8 
  │ ├─┬ node-libs-browser@0.7.0 
  │ │ ├── assert@1.4.1 
  │ │ ├─┬ browserify-zlib@0.1.4 
  │ │ │ └── pako@0.2.9 
  │ │ ├─┬ buffer@4.9.1 
  │ │ │ ├── base64-js@1.2.1 
  │ │ │ └── ieee754@1.1.8 
  │ │ ├─┬ console-browserify@1.1.0 
  │ │ │ └── date-now@0.1.4 
  │ │ ├── constants-browserify@1.0.0 
  │ │ ├─┬ crypto-browserify@3.3.0 
  │ │ │ ├── browserify-aes@0.4.0 
  │ │ │ ├── pbkdf2-compat@2.0.1 
  │ │ │ ├── ripemd160@0.2.0 
  │ │ │ └── sha.js@2.2.6 
  │ │ ├── domain-browser@1.1.7 
  │ │ ├── events@1.1.1 
  │ │ ├── https-browserify@0.0.1 
  │ │ ├── os-browserify@0.2.1 
  │ │ ├── path-browserify@0.0.0 
  │ │ ├── process@0.11.10 
  │ │ ├── punycode@1.4.1 
  │ │ ├── querystring-es3@0.2.1 
  │ │ ├── stream-browserify@2.0.1 
  │ │ ├─┬ stream-http@2.7.2 
  │ │ │ ├── builtin-status-codes@3.0.0 
  │ │ │ ├── to-arraybuffer@1.0.1 
  │ │ │ └── xtend@4.0.1 
  │ │ ├── string_decoder@0.10.31 
  │ │ ├── timers-browserify@2.0.4 
  │ │ ├── tty-browserify@0.0.0 
  │ │ ├─┬ url@0.11.0 
  │ │ │ ├── punycode@1.3.2 
  │ │ │ └── querystring@0.2.0 
  │ │ ├─┬ util@0.10.3 
  │ │ │ └── inherits@2.0.1 
  │ │ └─┬ vm-browserify@0.0.4 
  │ │   └── indexof@0.0.1 
  │ ├─┬ optimist@0.6.1 
  │ │ ├── minimist@0.0.10 
  │ │ └── wordwrap@0.0.2 
  │ ├─┬ supports-color@3.2.3 
  │ │ └── has-flag@1.0.0 
  │ ├── tapable@0.1.10 
  │ ├─┬ uglify-js@2.7.5 
  │ │ ├── async@0.2.10 
  │ │ ├── uglify-to-browserify@1.0.2 
  │ │ └─┬ yargs@3.10.0 
  │ │   ├── camelcase@1.2.1 
  │ │   ├─┬ cliui@2.1.0 
  │ │   │ ├─┬ center-align@0.1.3 
  │ │   │ │ ├─┬ align-text@0.1.4 
  │ │   │ │ │ ├── longest@1.0.1 
  │ │   │ │ │ └── repeat-string@1.6.1 
  │ │   │ │ └── lazy-cache@1.0.4 
  │ │   │ └── right-align@0.1.3 
  │ │   └── window-size@0.1.0 
  │ ├─┬ watchpack@0.2.9 
  │ │ └── async@0.9.2 
  │ └─┬ webpack-core@0.6.9 
  │   └── source-map@0.4.4 
  └─┬ webpack-dev-server@1.16.5 
    ├─┬ compression@1.7.0 
    │ ├─┬ accepts@1.3.4 
    │ │ └── negotiator@0.6.1 
    │ ├── bytes@2.5.0 
    │ ├─┬ compressible@2.0.11 
    │ │ └── mime-db@1.30.0 
    │ ├── debug@2.6.8 
    │ ├── on-headers@1.0.1 
    │ ├── safe-buffer@5.1.1 
    │ └── vary@1.1.2 
    ├── connect-history-api-fallback@1.3.0 
    ├─┬ express@4.15.5 
    │ ├── array-flatten@1.1.1 
    │ ├── content-disposition@0.5.2 
    │ ├── content-type@1.0.4 
    │ ├── cookie@0.3.1 
    │ ├── cookie-signature@1.0.6 
    │ ├── depd@1.1.1 
    │ ├── encodeurl@1.0.1 
    │ ├── escape-html@1.0.3 
    │ ├── etag@1.8.1 
    │ ├─┬ finalhandler@1.0.6 
    │ │ └── unpipe@1.0.0 
    │ ├── fresh@0.5.2 
    │ ├── merge-descriptors@1.0.1 
    │ ├── methods@1.1.2 
    │ ├─┬ on-finished@2.3.0 
    │ │ └── ee-first@1.1.1 
    │ ├── parseurl@1.3.2 
    │ ├── path-to-regexp@0.1.7 
    │ ├─┬ proxy-addr@1.1.5 
    │ │ ├── forwarded@0.1.2 
    │ │ └── ipaddr.js@1.4.0 
    │ ├── qs@6.5.0 
    │ ├── range-parser@1.2.0 
    │ ├─┬ send@0.15.6 
    │ │ ├── destroy@1.0.4 
    │ │ └── mime@1.3.4 
    │ ├── serve-static@1.12.6 
    │ ├── setprototypeof@1.0.3 
    │ ├── statuses@1.3.1 
    │ ├─┬ type-is@1.6.15 
    │ │ └── media-typer@0.3.0 
    │ └── utils-merge@1.0.0 
    ├─┬ http-proxy-middleware@0.17.4 
    │ ├─┬ http-proxy@1.16.2 
    │ │ ├── eventemitter3@1.2.0 
    │ │ └── requires-port@1.0.0 
    │ ├─┬ is-glob@3.1.0 
    │ │ └── is-extglob@2.1.1 
    │ ├── lodash@4.17.4 
    │ └─┬ micromatch@2.3.11 
    │   ├─┬ arr-diff@2.0.0 
    │   │ └── arr-flatten@1.1.0 
    │   ├── array-unique@0.2.1 
    │   ├─┬ braces@1.8.5 
    │   │ ├─┬ expand-range@1.8.2 
    │   │ │ └─┬ fill-range@2.2.3 
    │   │ │   ├── is-number@2.1.0 
    │   │ │   ├── isobject@2.1.0 
    │   │ │   └─┬ randomatic@1.1.7 
    │   │ │     ├─┬ is-number@3.0.0 
    │   │ │     │ └── kind-of@3.2.2 
    │   │ │     └── kind-of@4.0.0 
    │   │ ├── preserve@0.2.0 
    │   │ └── repeat-element@1.1.2 
    │   ├─┬ expand-brackets@0.1.5 
    │   │ └── is-posix-bracket@0.1.1 
    │   ├── extglob@0.3.2 
    │   ├── filename-regex@2.0.1 
    │   ├─┬ kind-of@3.2.2 
    │   │ └── is-buffer@1.1.5 
    │   ├─┬ object.omit@2.0.1 
    │   │ ├─┬ for-own@0.1.5 
    │   │ │ └── for-in@1.0.2 
    │   │ └── is-extendable@0.1.1 
    │   ├─┬ parse-glob@3.0.4 
    │   │ ├── glob-base@0.3.0 
    │   │ └── is-dotfile@1.0.3 
    │   └─┬ regex-cache@0.4.4 
    │     └─┬ is-equal-shallow@0.1.3 
    │       └── is-primitive@2.0.0 
    ├── open@0.0.5 
    ├─┬ serve-index@1.9.0 
    │ ├── batch@0.6.1 
    │ ├── debug@2.6.8 
    │ ├── http-errors@1.6.2 
    │ └── mime-types@2.1.17 
    ├─┬ sockjs@0.3.18 
    │ ├─┬ faye-websocket@0.10.0 
    │ │ └─┬ websocket-driver@0.7.0 
    │ │   ├── http-parser-js@0.4.8 
    │ │   └── websocket-extensions@0.1.2 
    │ └── uuid@2.0.3 
    ├─┬ sockjs-client@1.1.4 
    │ ├─┬ eventsource@0.1.6 
    │ │ └─┬ original@1.0.0 
    │ │   └─┬ url-parse@1.0.5 
    │ │     └── querystringify@0.0.4 
    │ ├── faye-websocket@0.11.1 
    │ ├── json3@3.3.2 
    │ └─┬ url-parse@1.1.9 
    │   └── querystringify@1.0.0 
    ├── stream-cache@0.0.2 
    ├─┬ strip-ansi@3.0.1 
    │ └── ansi-regex@2.1.1 
    └─┬ webpack-dev-middleware@1.12.0 
      ├── memory-fs@0.4.1 
      └── time-stamp@2.0.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/react-rails-ux-password-field/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0507 took 3.376s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (235:16) on program 'use strict';

var React = require('react'),
    RP    = React.PropTypes,
    config = require('./js/config'),
    debounce = require('lodash.debounce');

var InputPassword = React.createClass({


  /*==========  VALIDATE  ==========*/

  propTypes: {
    infoBar: RP.bool,
    statusColor: RP.string,
    statusInactiveColor: RP.string,
    minScore: RP.number,
    changeCb: RP.func,
    toggleMask: RP.bool,
    unMaskTime: RP.number,
    minLength: RP.number,
    strengthLang:RP.array,
    id: RP.string,
  },


  /*==========  DEFAULTS  ==========*/

  getDefaultProps() {
    return {
      infoBar: true,
      statusColor: config.statusColor,
      statusInactiveColor: config.statusInactiveColor,
      zxcvbn: config.zxcvbnSrc,
      minScore: 0,
      toggleMask: true,
      unMaskTime: config.unMaskTime,
      strengthLang: config.strengthLang,
      id: 'input',
      name: '',
      className: 'form-control',
      placeholder: 'Password',
      required: true
    };
  },

  getInitialState() {
    return {
      value: '',
      score: 0,
      entropy: 0,
      isPassword: true,
      isValid: false
    }
  },


  /*==========  STYLES  ==========*/

  getMeterStyle(score) {
    var width = this.state.value === '' ? 0 : 24 * score + 4;
    return {
      width: this.props.zxcvbn ? width + '%' : '100%',
      maxWidth: '85%',
      opacity: this.props.zxcvbn ? width * .01 + .5 : '1',
      background: this.state.isValid ?  this.props.statusColor : this.props.statusInactiveColor,
      height: 3,
      transition: 'all 400ms linear',
      display: 'inline-block',
      marginRight: '1%',
      marginLeft: '5px'
    };
  },

  unMaskStyle: {
    color: config.unMaskColor
  },

  infoStyle: {
    width: '100%',
    overflow: 'hidden',
    height: '20px'
  },

  iconStyle: {
    display: 'inline-block',
    opacity: .25,
    position: 'relative',
    top: 2,
    width: '3%'
  },

  strengthLangStyle: {
    fontSize: 12,
    position: 'relative',
    top: 2,
  },


  /*==========  METHODS  ==========*/

  addPasswordType() {
    this.setState({
      isPassword: true
    });
  },

  /*==========  HANDLERS  ==========*/

  handleInputType() {
    this.setState({
      isPassword: !this.state.isPassword
    });
  },

  handleChange(e) {
    e.preventDefault();

    var native_target = e.nativeEvent.target;
    var val = e.target.value;
    var score;

    this.setState({
      value: val,
      isValid: e.target.validity.valid,
      selectionStart : native_target.selectionStart,
      selectionEnd : native_target.selectionEnd,
    });

    if (this.props.toggleMask) {
      this.handleToggleMask();
    }

    if (this.props.zxcvbn) {
      score = this.handleZxcvbn(val);
    } else {
      score = this.state.score;
    }

    // call onChange prop passed from parent
    if (this.props.onChange) {
      this.props.onChange(val, this.state.isValid, score);
    }

    if (this.props.minLength) {
      this.handleMinLength(e.target.value.length)
    }
  },

  handleToggleMask() {
    // display password, then
    this.setState({
      isPassword: false
    });
    // debounce remasking password
    this.maskPassword();
  },

  handleToggleMaskIcon() {
    this.setState({
      isPassword: !this.state.isPassword
    });
  },

  handleZxcvbn(val) {

    if (typeof zxcvbn === 'undefined' && typeof window.zxcvbn === 'undefined') {
      return;
    }

    var stats        = zxcvbn(val),
        currentScore = stats.score;

    this.setState({
      score: currentScore,
      entropy: stats.entropy
    });

    if (currentScore < this.props.minScore) {
      this.setState({
        isValid: false
      });
    }

    // if score changed and callback provided
    if (this.props.changeCb && this.state.score !== currentScore) {
      this.props.changeCb(this.state.score, currentScore, val)
    }

    if (this.props.zxcvbn === 'debug') {
      console.debug(stats);
    }

    return currentScore;
  },

  handleMinLength(len) {
    if (len <= this.props.minLength) {
      this.setState({
        isValid: false
      })
    }
  },

  componentWillMount() {
    var zxcvbnSrc;

    // Load zxcvbn async if its enabled and doesn't already exist
    if (this.props.zxcvbn && typeof zxcvbn === 'undefined') {

      zxcvbnSrc = this.props.zxcvbn !== 'debug' ? this.props.zxcvbn : config.zxcvbnSrc;

    // snippet to async load zxcvbn if enabled
    (function(){var a;a=function(){var a,b;b=document.createElement("script");b.src=zxcvbnSrc;b.type="text/javascript";b.async=!0;a=document.getElementsByTagName("head")[0];return a.parentNode.insertBefore(b,a)};null!=window.attachEvent?window.attachEvent("onload",a):window.addEventListener("load",a,!1)}).call(this);
    }

    // set debouncer for password
    // if (this.props.toggleMask) {
      this.maskPassword = debounce(this.addPasswordType, this.props.unMaskTime);
    // }
  },

  componentWillUnmount() {
    // cancel the debouncer when component is not used anymore. This to avoid
    // setting the state  unnecessarily, see issue #24
    if (this.maskPassword) {
      this.maskPassword.cancel()
    }
  },

  render() {
    var infoBar;

    if (this.props.infoBar) {
      infoBar = <div className="passwordField__info" style={this.infoStyle}>
        <span style={this.iconStyle} className="passwordField__icon">
        <img src={require('./img/lock.png')} height="10" width="10"  />
        </span>
        <span style={this.getMeterStyle(this.state.score)} className="passwordField__meter" />
        <span style={this.strengthLangStyle} className="passwordField__strength">
          {this.props.zxcvbn &&
            this.state.value.length > 0 &&
            this.props.strengthLang.length > 0 ?
              this.props.strengthLang[this.state.score] : null}
        </span>
      </div>
    }

    // allow onChange to be passed from parent and not override default prop
    var {onChange, ...props} = this.props;

    // overcome problem with firefox resetting the input selection point
    var that = this;
    setTimeout(function() {
      if (!/Firefox/.test(navigator.userAgent)) return;
      var elem = that.refs[that.props.id].getDOMNode();
      elem.selectionStart = that.state.selectionStart;
      elem.selectionEnd = that.state.selectionEnd;
    }, 1);

    return (
      <div
        style={{position: 'relative', display: 'block'}}
        className="passwordField"
        data-valid={this.state.isValid}
        data-score={this.state.score}
        data-entropy={this.state.entropy}
        >
        <input
          ref={this.props.id}
          className={this.props.className}
          type={this.state.isPassword ? 'password' : 'text'}
          name={this.props.name}
          value={this.state.value}
          style={this.state.isPassword ? null : this.unMaskStyle}
          onChange={this.handleChange}
          placeholder={this.props.placeholder}
          {...props}
        />
        <img src={require('./img/eye.png')}
          className={this.state.isPassword ? 'passwordField__mask-icon' : 'active passwordField__mask-icon'}
          onClick={this.handleToggleMaskIcon}
        />
        {this.state.value.length > 0 ? <div>{infoBar}</div> : null }

      </div>
    );
  }
});

module.exports = InputPassword;
 at SyntaxError: Unexpected token (235:16)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1822:12)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1597:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1608:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
