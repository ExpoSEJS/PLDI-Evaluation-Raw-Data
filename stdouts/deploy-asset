
> gifsicle@3.0.4 postinstall /root/Targets/deploy-asset/node_modules/gifsicle
> node lib/install.js


> jpegtran-bin@3.2.0 postinstall /root/Targets/deploy-asset/node_modules/jpegtran-bin
> node lib/install.js


> optipng-bin@3.1.4 postinstall /root/Targets/deploy-asset/node_modules/optipng-bin
> node lib/install.js

/root/Targets/deploy-asset
└─┬ deploy-asset@1.2.0 
  ├─┬ alter@0.2.0 
  │ └── stable@0.1.6 
  ├── async@1.4.2 
  ├── binary-extensions@1.10.0 
  ├── dep.js@0.0.2 
  ├── es6-shim@0.33.13 
  ├─┬ fs-extra@0.24.0 
  │ ├── graceful-fs@4.1.11 
  │ ├── jsonfile@2.4.0 
  │ ├── path-is-absolute@1.0.1 
  │ └─┬ rimraf@2.6.2 
  │   └─┬ glob@7.1.2 
  │     ├── fs.realpath@1.0.0 
  │     └── minimatch@3.0.4 
  ├─┬ ftp@0.3.10 
  │ ├─┬ readable-stream@1.1.14 
  │ │ ├── core-util-is@1.0.2 
  │ │ ├── isarray@0.0.1 
  │ │ └── string_decoder@0.10.31 
  │ └── xregexp@2.0.0 
  ├─┬ github-api@0.10.7 
  │ ├── js-base64@2.3.2 
  │ ├── UNMET PEER DEPENDENCY karma@>=0.9
  │ ├── karma-phantomjs-launcher@0.2.3 
  │ ├── UNMET PEER DEPENDENCY phantomjs@>=1.9
  │ └── xmlhttprequest@1.7.0 
  ├─┬ glob@5.0.15 
  │ ├─┬ inflight@1.0.6 
  │ │ └── wrappy@1.0.2 
  │ ├── inherits@2.0.3 
  │ └── once@1.4.0 
  ├── jsonfy@0.1.0 
  ├── lodash@3.10.1 
  ├─┬ look-up@0.8.3 
  │ ├─┬ is-glob@2.0.1 
  │ │ └── is-extglob@1.0.0 
  │ ├── lazy-cache@1.0.4 
  │ ├─┬ micromatch@2.3.11 
  │ │ ├─┬ arr-diff@2.0.0 
  │ │ │ └── arr-flatten@1.1.0 
  │ │ ├── array-unique@0.2.1 
  │ │ ├─┬ braces@1.8.5 
  │ │ │ ├─┬ expand-range@1.8.2 
  │ │ │ │ └─┬ fill-range@2.2.3 
  │ │ │ │   ├── is-number@2.1.0 
  │ │ │ │   ├─┬ isobject@2.1.0 
  │ │ │ │   │ └── isarray@1.0.0 
  │ │ │ │   ├─┬ randomatic@1.1.7 
  │ │ │ │   │ ├─┬ is-number@3.0.0 
  │ │ │ │   │ │ └── kind-of@3.2.2 
  │ │ │ │   │ └── kind-of@4.0.0 
  │ │ │ │   └── repeat-string@1.6.1 
  │ │ │ ├── preserve@0.2.0 
  │ │ │ └── repeat-element@1.1.2 
  │ │ ├─┬ expand-brackets@0.1.5 
  │ │ │ └── is-posix-bracket@0.1.1 
  │ │ ├── extglob@0.3.2 
  │ │ ├── filename-regex@2.0.1 
  │ │ ├─┬ kind-of@3.2.2 
  │ │ │ └── is-buffer@1.1.5 
  │ │ ├─┬ object.omit@2.0.1 
  │ │ │ ├─┬ for-own@0.1.5 
  │ │ │ │ └── for-in@1.0.2 
  │ │ │ └── is-extendable@0.1.1 
  │ │ ├─┬ parse-glob@3.0.4 
  │ │ │ ├─┬ glob-base@0.3.0 
  │ │ │ │ └── glob-parent@2.0.0 
  │ │ │ └── is-dotfile@1.0.3 
  │ │ └─┬ regex-cache@0.4.4 
  │ │   └─┬ is-equal-shallow@0.1.3 
  │ │     └── is-primitive@2.0.0 
  │ ├─┬ normalize-path@2.1.1 
  │ │ └── remove-trailing-separator@1.1.0 
  │ └─┬ resolve-dir@0.1.1 
  │   ├─┬ expand-tilde@1.2.2 
  │   │ └── os-homedir@1.0.2 
  │   └─┬ global-modules@0.2.3 
  │     ├─┬ global-prefix@0.1.5 
  │     │ ├─┬ homedir-polyfill@1.0.1 
  │     │ │ └── parse-passwd@1.0.0 
  │     │ └─┬ which@1.3.0 
  │     │   └── isexe@2.0.0 
  │     └── is-windows@0.2.0 
  ├── mime@1.3.4 
  ├─┬ min-asset@0.1.0 
  │ ├─┬ clean-css@4.1.9 
  │ │ └── source-map@0.5.7 
  │ ├─┬ html-minifier@3.5.5 
  │ │ ├─┬ camel-case@3.0.0 
  │ │ │ ├─┬ no-case@2.3.2 
  │ │ │ │ └── lower-case@1.1.4 
  │ │ │ └── upper-case@1.1.3 
  │ │ ├── commander@2.11.0 
  │ │ ├── he@1.1.1 
  │ │ ├─┬ ncname@1.0.0 
  │ │ │ └── xml-char-classes@1.0.0 
  │ │ ├── param-case@2.1.1 
  │ │ ├── relateurl@0.2.7 
  │ │ └── uglify-js@3.1.3 
  │ ├─┬ imagemin@5.3.1 
  │ │ ├── file-type@4.4.0 
  │ │ ├─┬ globby@6.1.0 
  │ │ │ ├─┬ array-union@1.0.2 
  │ │ │ │ └── array-uniq@1.0.3 
  │ │ │ ├─┬ glob@7.1.2 
  │ │ │ │ └── minimatch@3.0.4 
  │ │ │ └─┬ pinkie-promise@2.0.1 
  │ │ │   └── pinkie@2.0.4 
  │ │ ├── make-dir@1.0.0 
  │ │ ├── p-pipe@1.2.0 
  │ │ ├── pify@2.3.0 
  │ │ └── replace-ext@1.0.0 
  │ ├─┬ imagemin-gifsicle@5.1.0 
  │ │ ├─┬ exec-buffer@3.2.0 
  │ │ │ ├─┬ execa@0.7.0 
  │ │ │ │ ├─┬ cross-spawn@5.1.0 
  │ │ │ │ │ ├─┬ lru-cache@4.1.1 
  │ │ │ │ │ │ ├── pseudomap@1.0.2 
  │ │ │ │ │ │ └── yallist@2.1.2 
  │ │ │ │ │ └─┬ shebang-command@1.2.0 
  │ │ │ │ │   └── shebang-regex@1.0.0 
  │ │ │ │ ├── get-stream@3.0.0 
  │ │ │ │ ├── is-stream@1.1.0 
  │ │ │ │ ├─┬ npm-run-path@2.0.2 
  │ │ │ │ │ └── path-key@2.0.1 
  │ │ │ │ └── strip-eof@1.0.0 
  │ │ │ ├── p-finally@1.0.0 
  │ │ │ ├── pify@3.0.0 
  │ │ │ └─┬ tempfile@2.0.0 
  │ │ │   ├── temp-dir@1.0.0 
  │ │ │   └── uuid@3.1.0 
  │ │ ├─┬ gifsicle@3.0.4 
  │ │ │ ├─┬ bin-build@2.2.0 
  │ │ │ │ ├─┬ archive-type@3.2.0 
  │ │ │ │ │ └── file-type@3.9.0 
  │ │ │ │ ├─┬ decompress@3.0.0 
  │ │ │ │ │ ├─┬ buffer-to-vinyl@1.1.0 
  │ │ │ │ │ │ ├── file-type@3.9.0 
  │ │ │ │ │ │ ├─┬ readable-stream@2.3.3 
  │ │ │ │ │ │ │ ├── isarray@1.0.0 
  │ │ │ │ │ │ │ └── string_decoder@1.0.3 
  │ │ │ │ │ │ └── uuid@2.0.3 
  │ │ │ │ │ ├─┬ concat-stream@1.6.0 
  │ │ │ │ │ │ ├─┬ readable-stream@2.3.3 
  │ │ │ │ │ │ │ ├── isarray@1.0.0 
  │ │ │ │ │ │ │ └── string_decoder@1.0.3 
  │ │ │ │ │ │ └── typedarray@0.0.6 
  │ │ │ │ │ ├─┬ decompress-tar@3.1.0 
  │ │ │ │ │ │ ├── is-tar@1.0.0 
  │ │ │ │ │ │ ├── object-assign@2.1.1 
  │ │ │ │ │ │ ├─┬ strip-dirs@1.1.1 
  │ │ │ │ │ │ │ ├─┬ is-absolute@0.1.7 
  │ │ │ │ │ │ │ │ └── is-relative@0.1.3 
  │ │ │ │ │ │ │ ├── is-natural-number@2.1.1 
  │ │ │ │ │ │ │ └── sum-up@1.0.3 
  │ │ │ │ │ │ ├─┬ tar-stream@1.5.4 
  │ │ │ │ │ │ │ ├─┬ bl@1.2.1 
  │ │ │ │ │ │ │ │ └─┬ readable-stream@2.3.3 
  │ │ │ │ │ │ │ │   ├── isarray@1.0.0 
  │ │ │ │ │ │ │ │   └── string_decoder@1.0.3 
  │ │ │ │ │ │ │ ├── end-of-stream@1.4.0 
  │ │ │ │ │ │ │ ├─┬ readable-stream@2.3.3 
  │ │ │ │ │ │ │ │ ├── isarray@1.0.0 
  │ │ │ │ │ │ │ │ └── string_decoder@1.0.3 
  │ │ │ │ │ │ │ └── xtend@4.0.1 
  │ │ │ │ │ │ ├─┬ through2@0.6.5 
  │ │ │ │ │ │ │ └── readable-stream@1.0.34 
  │ │ │ │ │ │ └─┬ vinyl@0.4.6 
  │ │ │ │ │ │   └── clone@0.2.0 
  │ │ │ │ │ ├─┬ decompress-tarbz2@3.1.0 
  │ │ │ │ │ │ ├── is-bzip2@1.0.0 
  │ │ │ │ │ │ ├── object-assign@2.1.1 
  │ │ │ │ │ │ ├─┬ seek-bzip@1.0.5 
  │ │ │ │ │ │ │ └─┬ commander@2.8.1 
  │ │ │ │ │ │ │   └── graceful-readlink@1.0.1 
  │ │ │ │ │ │ └─┬ vinyl@0.4.6 
  │ │ │ │ │ │   └── clone@0.2.0 
  │ │ │ │ │ ├─┬ decompress-targz@3.1.0 
  │ │ │ │ │ │ ├── is-gzip@1.0.0 
  │ │ │ │ │ │ ├── object-assign@2.1.1 
  │ │ │ │ │ │ └─┬ vinyl@0.4.6 
  │ │ │ │ │ │   └── clone@0.2.0 
  │ │ │ │ │ ├─┬ decompress-unzip@3.4.0 
  │ │ │ │ │ │ ├── is-zip@1.0.0 
  │ │ │ │ │ │ ├── stat-mode@0.2.2 
  │ │ │ │ │ │ ├─┬ through2@2.0.3 
  │ │ │ │ │ │ │ └─┬ readable-stream@2.3.3 
  │ │ │ │ │ │ │   ├── isarray@1.0.0 
  │ │ │ │ │ │ │   └── string_decoder@1.0.3 
  │ │ │ │ │ │ └─┬ yauzl@2.8.0 
  │ │ │ │ │ │   ├── buffer-crc32@0.2.13 
  │ │ │ │ │ │   └─┬ fd-slicer@1.0.1 
  │ │ │ │ │ │     └── pend@1.2.0 
  │ │ │ │ │ ├─┬ stream-combiner2@1.1.1 
  │ │ │ │ │ │ ├─┬ duplexer2@0.1.4 
  │ │ │ │ │ │ │ └─┬ readable-stream@2.3.3 
  │ │ │ │ │ │ │   ├── isarray@1.0.0 
  │ │ │ │ │ │ │   └── string_decoder@1.0.3 
  │ │ │ │ │ │ └─┬ readable-stream@2.3.3 
  │ │ │ │ │ │   ├── isarray@1.0.0 
  │ │ │ │ │ │   └── string_decoder@1.0.3 
  │ │ │ │ │ ├─┬ vinyl-assign@1.2.1 
  │ │ │ │ │ │ └─┬ readable-stream@2.3.3 
  │ │ │ │ │ │   ├── isarray@1.0.0 
  │ │ │ │ │ │   └── string_decoder@1.0.3 
  │ │ │ │ │ └─┬ vinyl-fs@2.4.4 
  │ │ │ │ │   ├─┬ duplexify@3.5.1 
  │ │ │ │ │   │ ├─┬ readable-stream@2.3.3 
  │ │ │ │ │   │ │ ├── isarray@1.0.0 
  │ │ │ │ │   │ │ └── string_decoder@1.0.3 
  │ │ │ │ │   │ └── stream-shift@1.0.0 
  │ │ │ │ │   ├─┬ glob-stream@5.3.5 
  │ │ │ │ │   │ ├── extend@3.0.1 
  │ │ │ │ │   │ ├─┬ glob-parent@3.1.0 
  │ │ │ │ │   │ │ ├─┬ is-glob@3.1.0 
  │ │ │ │ │   │ │ │ └── is-extglob@2.1.1 
  │ │ │ │ │   │ │ └── path-dirname@1.0.2 
  │ │ │ │ │   │ ├─┬ ordered-read-streams@0.3.0 
  │ │ │ │ │   │ │ └─┬ readable-stream@2.3.3 
  │ │ │ │ │   │ │   ├── isarray@1.0.0 
  │ │ │ │ │   │ │   └── string_decoder@1.0.3 
  │ │ │ │ │   │ ├─┬ to-absolute-glob@0.1.1 
  │ │ │ │ │   │ │ └── extend-shallow@2.0.1 
  │ │ │ │ │   │ └─┬ unique-stream@2.2.1 
  │ │ │ │ │   │   └─┬ json-stable-stringify@1.0.1 
  │ │ │ │ │   │     └── jsonify@0.0.0 
  │ │ │ │ │   ├─┬ gulp-sourcemaps@1.6.0 
  │ │ │ │ │   │ ├── convert-source-map@1.5.0 
  │ │ │ │ │   │ └─┬ through2@2.0.3 
  │ │ │ │ │   │   └─┬ readable-stream@2.3.3 
  │ │ │ │ │   │     ├── isarray@1.0.0 
  │ │ │ │ │   │     └── string_decoder@1.0.3 
  │ │ │ │ │   ├── is-valid-glob@0.3.0 
  │ │ │ │ │   ├─┬ lazystream@1.0.0 
  │ │ │ │ │   │ └─┬ readable-stream@2.3.3 
  │ │ │ │ │   │   ├── isarray@1.0.0 
  │ │ │ │ │   │   └── string_decoder@1.0.3 
  │ │ │ │ │   ├── lodash.isequal@4.5.0 
  │ │ │ │ │   ├─┬ merge-stream@1.0.1 
  │ │ │ │ │   │ └─┬ readable-stream@2.3.3 
  │ │ │ │ │   │   ├── isarray@1.0.0 
  │ │ │ │ │   │   └── string_decoder@1.0.3 
  │ │ │ │ │   ├─┬ readable-stream@2.3.3 
  │ │ │ │ │   │ ├── isarray@1.0.0 
  │ │ │ │ │   │ └── string_decoder@1.0.3 
  │ │ │ │ │   ├─┬ strip-bom-stream@1.0.0 
  │ │ │ │ │   │ └── first-chunk-stream@1.0.0 
  │ │ │ │ │   ├── through2@2.0.3 
  │ │ │ │ │   ├─┬ through2-filter@2.0.0 
  │ │ │ │ │   │ └─┬ through2@2.0.3 
  │ │ │ │ │   │   └─┬ readable-stream@2.3.3 
  │ │ │ │ │   │     ├── isarray@1.0.0 
  │ │ │ │ │   │     └── string_decoder@1.0.3 
  │ │ │ │ │   └── vali-date@1.0.0 
  │ │ │ │ ├─┬ download@4.4.3 
  │ │ │ │ │ ├─┬ caw@1.2.0 
  │ │ │ │ │ │ ├── get-proxy@1.1.0 
  │ │ │ │ │ │ ├── is-obj@1.0.1 
  │ │ │ │ │ │ ├── object-assign@3.0.0 
  │ │ │ │ │ │ └── tunnel-agent@0.4.3 
  │ │ │ │ │ ├─┬ filenamify@1.2.1 
  │ │ │ │ │ │ ├── filename-reserved-regex@1.0.0 
  │ │ │ │ │ │ ├── strip-outer@1.0.0 
  │ │ │ │ │ │ └── trim-repeated@1.0.0 
  │ │ │ │ │ ├─┬ got@5.7.1 
  │ │ │ │ │ │ ├─┬ create-error-class@3.0.2 
  │ │ │ │ │ │ │ └── capture-stack-trace@1.0.0 
  │ │ │ │ │ │ ├── is-redirect@1.0.0 
  │ │ │ │ │ │ ├── is-retry-allowed@1.1.0 
  │ │ │ │ │ │ ├── lowercase-keys@1.0.0 
  │ │ │ │ │ │ ├── node-status-codes@1.0.0 
  │ │ │ │ │ │ ├─┬ readable-stream@2.3.3 
  │ │ │ │ │ │ │ ├── isarray@1.0.0 
  │ │ │ │ │ │ │ └── string_decoder@1.0.3 
  │ │ │ │ │ │ ├── timed-out@3.1.3 
  │ │ │ │ │ │ ├── unzip-response@1.0.2 
  │ │ │ │ │ │ └─┬ url-parse-lax@1.0.0 
  │ │ │ │ │ │   └── prepend-http@1.0.4 
  │ │ │ │ │ ├─┬ gulp-decompress@1.2.0 
  │ │ │ │ │ │ ├─┬ gulp-util@3.0.8 
  │ │ │ │ │ │ │ ├── array-differ@1.0.0 
  │ │ │ │ │ │ │ ├── beeper@1.1.1 
  │ │ │ │ │ │ │ ├── dateformat@2.2.0 
  │ │ │ │ │ │ │ ├─┬ fancy-log@1.3.0 
  │ │ │ │ │ │ │ │ └── time-stamp@1.1.0 
  │ │ │ │ │ │ │ ├─┬ gulplog@1.0.0 
  │ │ │ │ │ │ │ │ └── glogg@1.0.0 
  │ │ │ │ │ │ │ ├─┬ has-gulplog@0.1.0 
  │ │ │ │ │ │ │ │ └── sparkles@1.0.0 
  │ │ │ │ │ │ │ ├── lodash._reescape@3.0.0 
  │ │ │ │ │ │ │ ├── lodash._reevaluate@3.0.0 
  │ │ │ │ │ │ │ ├── lodash._reinterpolate@3.0.0 
  │ │ │ │ │ │ │ ├─┬ lodash.template@3.6.2 
  │ │ │ │ │ │ │ │ ├── lodash._basecopy@3.0.1 
  │ │ │ │ │ │ │ │ ├── lodash._basetostring@3.0.1 
  │ │ │ │ │ │ │ │ ├── lodash._basevalues@3.0.0 
  │ │ │ │ │ │ │ │ ├── lodash._isiterateecall@3.0.9 
  │ │ │ │ │ │ │ │ ├─┬ lodash.escape@3.2.0 
  │ │ │ │ │ │ │ │ │ └── lodash._root@3.0.1 
  │ │ │ │ │ │ │ │ ├─┬ lodash.keys@3.1.2 
  │ │ │ │ │ │ │ │ │ ├── lodash._getnative@3.9.1 
  │ │ │ │ │ │ │ │ │ ├── lodash.isarguments@3.1.0 
  │ │ │ │ │ │ │ │ │ └── lodash.isarray@3.0.4 
  │ │ │ │ │ │ │ │ ├── lodash.restparam@3.6.1 
  │ │ │ │ │ │ │ │ └── lodash.templatesettings@3.1.1 
  │ │ │ │ │ │ │ ├─┬ multipipe@0.1.2 
  │ │ │ │ │ │ │ │ └── duplexer2@0.0.2 
  │ │ │ │ │ │ │ ├── object-assign@3.0.0 
  │ │ │ │ │ │ │ ├── replace-ext@0.0.1 
  │ │ │ │ │ │ │ ├─┬ through2@2.0.3 
  │ │ │ │ │ │ │ │ └─┬ readable-stream@2.3.3 
  │ │ │ │ │ │ │ │   ├── isarray@1.0.0 
  │ │ │ │ │ │ │ │   └── string_decoder@1.0.3 
  │ │ │ │ │ │ │ └── vinyl@0.5.3 
  │ │ │ │ │ │ └─┬ readable-stream@2.3.3 
  │ │ │ │ │ │   ├── isarray@1.0.0 
  │ │ │ │ │ │   └── string_decoder@1.0.3 
  │ │ │ │ │ ├── gulp-rename@1.2.2 
  │ │ │ │ │ ├── is-url@1.2.2 
  │ │ │ │ │ ├─┬ read-all-stream@3.1.0 
  │ │ │ │ │ │ └─┬ readable-stream@2.3.3 
  │ │ │ │ │ │   ├── isarray@1.0.0 
  │ │ │ │ │ │   └── string_decoder@1.0.3 
  │ │ │ │ │ ├─┬ readable-stream@2.3.3 
  │ │ │ │ │ │ ├── isarray@1.0.0 
  │ │ │ │ │ │ └── string_decoder@1.0.3 
  │ │ │ │ │ ├─┬ vinyl@1.2.0 
  │ │ │ │ │ │ ├── clone@1.0.2 
  │ │ │ │ │ │ ├── clone-stats@0.0.1 
  │ │ │ │ │ │ └── replace-ext@0.0.1 
  │ │ │ │ │ └─┬ ware@1.3.0 
  │ │ │ │ │   └─┬ wrap-fn@0.1.5 
  │ │ │ │ │     └── co@3.1.0 
  │ │ │ │ ├─┬ exec-series@1.0.3 
  │ │ │ │ │ └── async-each-series@1.1.0 
  │ │ │ │ ├─┬ tempfile@1.1.1 
  │ │ │ │ │ ├── os-tmpdir@1.0.2 
  │ │ │ │ │ └── uuid@2.0.3 
  │ │ │ │ └─┬ url-regex@3.2.0 
  │ │ │ │   └── ip-regex@1.0.3 
  │ │ │ ├─┬ bin-wrapper@3.0.2 
  │ │ │ │ ├─┬ bin-check@2.0.0 
  │ │ │ │ │ └── executable@1.1.0 
  │ │ │ │ ├─┬ bin-version-check@2.1.0 
  │ │ │ │ │ ├─┬ bin-version@1.0.4 
  │ │ │ │ │ │ └─┬ find-versions@1.2.1 
  │ │ │ │ │ │   └── semver-regex@1.0.0 
  │ │ │ │ │ ├── semver@4.3.6 
  │ │ │ │ │ └── semver-truncate@1.1.2 
  │ │ │ │ ├─┬ each-async@1.1.1 
  │ │ │ │ │ ├── onetime@1.1.0 
  │ │ │ │ │ └── set-immediate-shim@1.0.1 
  │ │ │ │ ├── lazy-req@1.1.0 
  │ │ │ │ └── os-filter-obj@1.0.3 
  │ │ │ └─┬ logalot@2.1.0 
  │ │ │   ├── figures@1.7.0 
  │ │ │   └─┬ squeak@1.3.0 
  │ │ │     ├── console-stream@0.1.1 
  │ │ │     └─┬ lpad-align@1.1.2 
  │ │ │       └── longest@1.0.1 
  │ │ └── is-gif@1.0.0 
  │ ├─┬ imagemin-jpegtran@5.0.2 
  │ │ ├── is-jpg@1.0.0 
  │ │ └── jpegtran-bin@3.2.0 
  │ ├─┬ imagemin-optipng@5.2.1 
  │ │ ├── is-png@1.1.0 
  │ │ └── optipng-bin@3.1.4 
  │ ├─┬ imagemin-svgo@5.2.1 
  │ │ ├─┬ is-svg@2.1.0 
  │ │ │ └── html-comment-regex@1.1.1 
  │ │ └─┬ svgo@0.7.2 
  │ │   ├─┬ coa@1.0.4 
  │ │   │ └── q@1.5.0 
  │ │   ├── colors@1.1.2 
  │ │   ├─┬ csso@2.3.2 
  │ │   │ └── clap@1.2.3 
  │ │   ├─┬ js-yaml@3.7.0 
  │ │   │ ├─┬ argparse@1.0.9 
  │ │   │ │ └── sprintf-js@1.0.3 
  │ │   │ └── esprima@2.7.3 
  │ │   ├── sax@1.2.4 
  │ │   └── whet.extend@0.9.9 
  │ ├─┬ mkdirp@0.5.1 
  │ │ └── minimist@0.0.8 
  │ ├── pretty-bytes@4.0.2 
  │ └─┬ uglify-js@2.8.29 
  │   ├── uglify-to-browserify@1.0.2 
  │   └─┬ yargs@3.10.0 
  │     ├── camelcase@1.2.1 
  │     ├─┬ cliui@2.1.0 
  │     │ ├─┬ center-align@0.1.3 
  │     │ │ └── align-text@0.1.4 
  │     │ ├── right-align@0.1.3 
  │     │ └── wordwrap@0.0.2 
  │     └── window-size@0.1.0 
  ├─┬ minimatch@2.0.10 
  │ └─┬ brace-expansion@1.1.8 
  │   ├── balanced-match@1.0.0 
  │   └── concat-map@0.0.1 
  ├── moment@2.18.1 
  ├─┬ pretty-bytes@2.0.1 
  │ ├── get-stdin@4.0.1 
  │ ├─┬ meow@3.7.0 
  │ │ ├─┬ camelcase-keys@2.1.0 
  │ │ │ └── camelcase@2.1.1 
  │ │ ├─┬ loud-rejection@1.6.0 
  │ │ │ ├─┬ currently-unhandled@0.4.1 
  │ │ │ │ └── array-find-index@1.0.2 
  │ │ │ └── signal-exit@3.0.2 
  │ │ ├── map-obj@1.0.1 
  │ │ ├─┬ normalize-package-data@2.4.0 
  │ │ │ ├── hosted-git-info@2.5.0 
  │ │ │ ├─┬ is-builtin-module@1.0.0 
  │ │ │ │ └── builtin-modules@1.1.1 
  │ │ │ ├── semver@5.4.1 
  │ │ │ └─┬ validate-npm-package-license@3.0.1 
  │ │ │   ├─┬ spdx-correct@1.0.2 
  │ │ │   │ └── spdx-license-ids@1.2.2 
  │ │ │   └── spdx-expression-parse@1.0.4 
  │ │ ├── object-assign@4.1.1 
  │ │ ├─┬ read-pkg-up@1.0.1 
  │ │ │ ├─┬ find-up@1.1.2 
  │ │ │ │ └── path-exists@2.1.0 
  │ │ │ └─┬ read-pkg@1.1.0 
  │ │ │   ├─┬ load-json-file@1.1.0 
  │ │ │   │ ├─┬ parse-json@2.2.0 
  │ │ │   │ │ └─┬ error-ex@1.3.1 
  │ │ │   │ │   └── is-arrayish@0.2.1 
  │ │ │   │ └─┬ strip-bom@2.0.0 
  │ │ │   │   └── is-utf8@0.2.1 
  │ │ │   └── path-type@1.1.0 
  │ │ ├─┬ redent@1.0.0 
  │ │ │ ├─┬ indent-string@2.1.0 
  │ │ │ │ └─┬ repeating@2.0.1 
  │ │ │ │   └── is-finite@1.0.2 
  │ │ │ └── strip-indent@1.0.1 
  │ │ └── trim-newlines@1.0.0 
  │ └── number-is-nan@1.0.1 
  ├─┬ qiniu@6.1.8 
  │ ├── crc32@0.2.2 
  │ ├─┬ formstream@0.0.7 
  │ │ ├── buffer-concat@0.0.1 
  │ │ ├── mime@1.2.9 
  │ │ └─┬ pause-stream@0.0.11 
  │ │   └── through@2.3.8 
  │ ├── mime@1.2.9 
  │ └─┬ urllib@0.5.1 
  │   └── debug@0.7.2 
  ├─┬ rc@1.2.1 
  │ ├── deep-extend@0.4.2 
  │ ├── ini@1.3.4 
  │ ├── minimist@1.2.0 
  │ └── strip-json-comments@2.0.1 
  ├── slash@1.0.0 
  ├─┬ tty-wrap@0.1.7 
  │ ├─┬ chalk@1.1.3 
  │ │ ├── ansi-styles@2.2.1 
  │ │ ├── escape-string-regexp@1.0.5 
  │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ └── ansi-regex@2.1.1 
  │ │ ├── strip-ansi@3.0.1 
  │ │ └── supports-color@2.0.0 
  │ ├── tty-size@1.0.1 
  │ └── tty-text-size@1.0.0 
  ├─┬ upyun@1.1.3 
  │ └── upyun-legacy@0.4.5 
  ├─┬ x-path@0.0.2 
  │ └── path-extra@1.0.3 
  ├─┬ yargs-cn@4.0.2 
  │ ├── camelcase@1.2.1 
  │ ├── decamelize@1.2.0 
  │ ├─┬ os-locale@1.4.0 
  │ │ └─┬ lcid@1.0.0 
  │ │   └── invert-kv@1.0.0 
  │ ├── set-blocking@2.0.0 
  │ ├─┬ tty-wrap@0.0.4 
  │ │ └── tty-text@1.1.1 
  │ └── y18n@3.2.1 
  └─┬ ylog@0.2.2 
    ├─┬ are-we-there-yet@1.1.4 
    │ ├── delegates@1.0.0 
    │ └─┬ readable-stream@2.3.3 
    │   ├── isarray@1.0.0 
    │   ├── process-nextick-args@1.0.7 
    │   ├── safe-buffer@5.1.1 
    │   ├── string_decoder@1.0.3 
    │   └── util-deprecate@1.0.2 
    ├─┬ gauge@1.2.7 
    │ ├── ansi@0.3.1 
    │ ├── has-unicode@2.0.1 
    │ ├── lodash.pad@4.5.1 
    │ ├── lodash.padend@4.6.1 
    │ └── lodash.padstart@4.6.1 
    └── ms@0.7.3 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/deploy-asset/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 28.000000000000004% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","call","RegExp","WeakMap","max","Array","getOwnPropertyNames","getOwnPropertyDescriptor","create","apply","parseInt"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0568 took 27.2881s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (4:4) on program module.exports = rimraf
rimraf.sync = rimrafSync

var assert = require("assert")
var path = require("path")
var fs = require("fs")
var glob = require("glob")
var _0666 = parseInt('666', 8)

var defaultGlobOpts = {
  nosort: true,
  silent: true
}

// for EMFILE handling
var timeout = 0

var isWindows = (process.platform === "win32")

function defaults (options) {
  var methods = [
    'unlink',
    'chmod',
    'stat',
    'lstat',
    'rmdir',
    'readdir'
  ]
  methods.forEach(function(m) {
    options[m] = options[m] || fs[m]
    m = m + 'Sync'
    options[m] = options[m] || fs[m]
  })

  options.maxBusyTries = options.maxBusyTries || 3
  options.emfileWait = options.emfileWait || 1000
  if (options.glob === false) {
    options.disableGlob = true
  }
  options.disableGlob = options.disableGlob || false
  options.glob = options.glob || defaultGlobOpts
}

function rimraf (p, options, cb) {
  if (typeof options === 'function') {
    cb = options
    options = {}
  }

  assert(p, 'rimraf: missing path')
  assert.equal(typeof p, 'string', 'rimraf: path should be a string')
  assert.equal(typeof cb, 'function', 'rimraf: callback function required')
  assert(options, 'rimraf: invalid options argument provided')
  assert.equal(typeof options, 'object', 'rimraf: options should be object')

  defaults(options)

  var busyTries = 0
  var errState = null
  var n = 0

  if (options.disableGlob || !glob.hasMagic(p))
    return afterGlob(null, [p])

  options.lstat(p, function (er, stat) {
    if (!er)
      return afterGlob(null, [p])

    glob(p, options.glob, afterGlob)
  })

  function next (er) {
    errState = errState || er
    if (--n === 0)
      cb(errState)
  }

  function afterGlob (er, results) {
    if (er)
      return cb(er)

    n = results.length
    if (n === 0)
      return cb()

    results.forEach(function (p) {
      rimraf_(p, options, function CB (er) {
        if (er) {
          if ((er.code === "EBUSY" || er.code === "ENOTEMPTY" || er.code === "EPERM") &&
              busyTries < options.maxBusyTries) {
            busyTries ++
            var time = busyTries * 100
            // try again, with the same exact callback as this one.
            return setTimeout(function () {
              rimraf_(p, options, CB)
            }, time)
          }

          // this one won't happen if graceful-fs is used.
          if (er.code === "EMFILE" && timeout < options.emfileWait) {
            return setTimeout(function () {
              rimraf_(p, options, CB)
            }, timeout ++)
          }

          // already gone
          if (er.code === "ENOENT") er = null
        }

        timeout = 0
        next(er)
      })
    })
  }
}

// Two possible strategies.
// 1. Assume it's a file.  unlink it, then do the dir stuff on EPERM or EISDIR
// 2. Assume it's a directory.  readdir, then do the file stuff on ENOTDIR
//
// Both result in an extra syscall when you guess wrong.  However, there
// are likely far more normal files in the world than directories.  This
// is based on the assumption that a the average number of files per
// directory is >= 1.
//
// If anyone ever complains about this, then I guess the strategy could
// be made configurable somehow.  But until then, YAGNI.
function rimraf_ (p, options, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')

  // sunos lets the root user unlink directories, which is... weird.
  // so we have to lstat here and make sure it's not a dir.
  options.lstat(p, function (er, st) {
    if (er && er.code === "ENOENT")
      return cb(null)

    // Windows can EPERM on stat.  Life is suffering.
    if (er && er.code === "EPERM" && isWindows)
      fixWinEPERM(p, options, er, cb)

    if (st && st.isDirectory())
      return rmdir(p, options, er, cb)

    options.unlink(p, function (er) {
      if (er) {
        if (er.code === "ENOENT")
          return cb(null)
        if (er.code === "EPERM")
          return (isWindows)
            ? fixWinEPERM(p, options, er, cb)
            : rmdir(p, options, er, cb)
        if (er.code === "EISDIR")
          return rmdir(p, options, er, cb)
      }
      return cb(er)
    })
  })
}

function fixWinEPERM (p, options, er, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')
  if (er)
    assert(er instanceof Error)

  options.chmod(p, _0666, function (er2) {
    if (er2)
      cb(er2.code === "ENOENT" ? null : er)
    else
      options.stat(p, function(er3, stats) {
        if (er3)
          cb(er3.code === "ENOENT" ? null : er)
        else if (stats.isDirectory())
          rmdir(p, options, er, cb)
        else
          options.unlink(p, cb)
      })
  })
}

function fixWinEPERMSync (p, options, er) {
  assert(p)
  assert(options)
  if (er)
    assert(er instanceof Error)

  try {
    options.chmodSync(p, _0666)
  } catch (er2) {
    if (er2.code === "ENOENT")
      return
    else
      throw er
  }

  try {
    var stats = options.statSync(p)
  } catch (er3) {
    if (er3.code === "ENOENT")
      return
    else
      throw er
  }

  if (stats.isDirectory())
    rmdirSync(p, options, er)
  else
    options.unlinkSync(p)
}

function rmdir (p, options, originalEr, cb) {
  assert(p)
  assert(options)
  if (originalEr)
    assert(originalEr instanceof Error)
  assert(typeof cb === 'function')

  // try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS)
  // if we guessed wrong, and it's not a directory, then
  // raise the original error.
  options.rmdir(p, function (er) {
    if (er && (er.code === "ENOTEMPTY" || er.code === "EEXIST" || er.code === "EPERM"))
      rmkids(p, options, cb)
    else if (er && er.code === "ENOTDIR")
      cb(originalEr)
    else
      cb(er)
  })
}

function rmkids(p, options, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')

  options.readdir(p, function (er, files) {
    if (er)
      return cb(er)
    var n = files.length
    if (n === 0)
      return options.rmdir(p, cb)
    var errState
    files.forEach(function (f) {
      rimraf(path.join(p, f), options, function (er) {
        if (errState)
          return
        if (er)
          return cb(errState = er)
        if (--n === 0)
          options.rmdir(p, cb)
      })
    })
  })
}

// this looks simpler, and is strictly *faster*, but will
// tie up the JavaScript thread and fail on excessively
// deep directory trees.
function rimrafSync (p, options) {
  options = options || {}
  defaults(options)

  assert(p, 'rimraf: missing path')
  assert.equal(typeof p, 'string', 'rimraf: path should be a string')
  assert(options, 'rimraf: missing options')
  assert.equal(typeof options, 'object', 'rimraf: options should be object')

  var results

  if (options.disableGlob || !glob.hasMagic(p)) {
    results = [p]
  } else {
    try {
      options.lstatSync(p)
      results = [p]
    } catch (er) {
      results = glob.sync(p, options.glob)
    }
  }

  if (!results.length)
    return

  for (var i = 0; i < results.length; i++) {
    var p = results[i]

    try {
      var st = options.lstatSync(p)
    } catch (er) {
      if (er.code === "ENOENT")
        return

      // Windows can EPERM on stat.  Life is suffering.
      if (er.code === "EPERM" && isWindows)
        fixWinEPERMSync(p, options, er)
    }

    try {
      // sunos lets the root user unlink directories, which is... weird.
      if (st && st.isDirectory())
        rmdirSync(p, options, null)
      else
        options.unlinkSync(p)
    } catch (er) {
      if (er.code === "ENOENT")
        return
      if (er.code === "EPERM")
        return isWindows ? fixWinEPERMSync(p, options, er) : rmdirSync(p, options, er)
      if (er.code !== "EISDIR")
        throw er

      rmdirSync(p, options, er)
    }
  }
}

function rmdirSync (p, options, originalEr) {
  assert(p)
  assert(options)
  if (originalEr)
    assert(originalEr instanceof Error)

  try {
    options.rmdirSync(p)
  } catch (er) {
    if (er.code === "ENOENT")
      return
    if (er.code === "ENOTDIR")
      throw originalEr
    if (er.code === "ENOTEMPTY" || er.code === "EEXIST" || er.code === "EPERM")
      rmkidsSync(p, options)
  }
}

function rmkidsSync (p, options) {
  assert(p)
  assert(options)
  options.readdirSync(p).forEach(function (f) {
    rimrafSync(path.join(p, f), options)
  })

  // We only end up here once we got ENOTEMPTY at least once, and
  // at this point, we are guaranteed to have removed all the kids.
  // So, we know that it won't be ENOENT or ENOTDIR or anything else.
  // try really hard to delete stuff on windows, because it has a
  // PROFOUNDLY annoying habit of not closing handles promptly when
  // files are deleted, resulting in spurious ENOTEMPTY errors.
  var retries = isWindows ? 100 : 1
  var i = 0
  do {
    var threw = true
    try {
      var ret = options.rmdirSync(p, options)
      threw = false
      return ret
    } finally {
      if (++i < retries && threw)
        continue
    }
  } while (true)
}
 at SyntaxError: Unexpected token (4:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/deploy-asset/node_modules/deploy-asset/build/da.js. Coverage (Term): 27% Coverage (LOC): 22%
*- File /root/Targets/deploy-asset/node_modules/lodash/index.js. Coverage (Term): 20% Coverage (LOC): 31%
*- File /root/Targets/deploy-asset/node_modules/async/lib/async.js. Coverage (Term): 13% Coverage (LOC): 19%
*- File /root/Targets/deploy-asset/node_modules/deploy-asset/build/steps/step-init.js. Coverage (Term): 6% Coverage (LOC): 9%
*- File /root/Targets/deploy-asset/node_modules/fs-extra/lib/index.js. Coverage (Term): 48% Coverage (LOC): 50%
*- File /root/Targets/deploy-asset/node_modules/fs-extra/lib/util/assign.js. Coverage (Term): 94% Coverage (LOC): 100%
*- File /root/Targets/deploy-asset/node_modules/graceful-fs/graceful-fs.js. Coverage (Term): 27% Coverage (LOC): 33%
*- File /root/Targets/deploy-asset/node_modules/graceful-fs/polyfills.js. Coverage (Term): 31% Coverage (LOC): 39%
*- File /root/Targets/deploy-asset/node_modules/graceful-fs/fs.js. Coverage (Term): 87% Coverage (LOC): 100%
*- File /root/Targets/deploy-asset/node_modules/graceful-fs/legacy-streams.js. Coverage (Term): 6% Coverage (LOC): 5%
*- File /root/Targets/deploy-asset/node_modules/fs-extra/lib/copy/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/deploy-asset/node_modules/fs-extra/lib/copy/copy.js. Coverage (Term): 22% Coverage (LOC): 22%
*- File /root/Targets/deploy-asset/node_modules/fs-extra/lib/copy/ncp.js. Coverage (Term): 4% Coverage (LOC): 3%
*- File /root/Targets/deploy-asset/node_modules/fs-extra/lib/util/utimes.js. Coverage (Term): 13% Coverage (LOC): 24%
*- File /root/Targets/deploy-asset/node_modules/fs-extra/lib/mkdirs/index.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/deploy-asset/node_modules/fs-extra/lib/mkdirs/mkdirs.js. Coverage (Term): 17% Coverage (LOC): 16%
*- File /root/Targets/deploy-asset/node_modules/fs-extra/lib/mkdirs/mkdirs-sync.js. Coverage (Term): 25% Coverage (LOC): 23%
*- File /root/Targets/deploy-asset/node_modules/fs-extra/lib/copy-sync/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/deploy-asset/node_modules/fs-extra/lib/copy-sync/copy-sync.js. Coverage (Term): 15% Coverage (LOC): 17%
*- File /root/Targets/deploy-asset/node_modules/fs-extra/lib/copy-sync/copy-file-sync.js. Coverage (Term): 24% Coverage (LOC): 26%
*- File /root/Targets/deploy-asset/node_modules/fs-extra/lib/remove/index.js. Coverage (Term): 31% Coverage (LOC): 50%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
