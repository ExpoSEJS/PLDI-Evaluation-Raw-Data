/root/Targets/noveo-university
└─┬ noveo-university@0.0.1 
  ├─┬ browser-sync@2.18.13 
  │ ├─┬ browser-sync-client@2.5.1 
  │ │ ├── etag@1.8.1 
  │ │ └── fresh@0.3.0 
  │ ├─┬ browser-sync-ui@0.6.3 
  │ │ ├── async-each-series@0.1.1 
  │ │ ├── connect-history-api-fallback@1.3.0 
  │ │ ├─┬ stream-throttle@0.1.3 
  │ │ │ └── limiter@1.1.2 
  │ │ └─┬ weinre@2.0.0-pre-I0Z7U9OV 
  │ │   ├─┬ express@2.5.11 
  │ │   │ ├─┬ connect@1.9.2 
  │ │   │ │ └── formidable@1.0.17 
  │ │   │ ├── mime@1.2.4 
  │ │   │ ├── mkdirp@0.3.0 
  │ │   │ └── qs@0.4.2 
  │ │   ├─┬ nopt@3.0.6 
  │ │   │ └── abbrev@1.1.1 
  │ │   └── underscore@1.7.0 
  │ ├── bs-recipes@1.3.4 
  │ ├─┬ chokidar@1.7.0 
  │ │ ├── anymatch@1.3.2 
  │ │ ├── async-each@1.0.1 
  │ │ ├── glob-parent@2.0.0 
  │ │ ├── inherits@2.0.3 
  │ │ ├─┬ is-binary-path@1.0.1 
  │ │ │ └── binary-extensions@1.10.0 
  │ │ ├── is-glob@2.0.1 
  │ │ ├── path-is-absolute@1.0.1 
  │ │ └─┬ readdirp@2.1.0 
  │ │   ├── minimatch@3.0.4 
  │ │   ├─┬ readable-stream@2.3.3 
  │ │   │ ├── isarray@1.0.0 
  │ │   │ ├── process-nextick-args@1.0.7 
  │ │   │ ├── string_decoder@1.0.3 
  │ │   │ └── util-deprecate@1.0.2 
  │ │   └── set-immediate-shim@1.0.1 
  │ ├─┬ connect@3.5.0 
  │ │ ├─┬ debug@2.2.0 
  │ │ │ └── ms@0.7.1 
  │ │ ├─┬ finalhandler@0.5.0 
  │ │ │ ├─┬ on-finished@2.3.0 
  │ │ │ │ └── ee-first@1.1.1 
  │ │ │ ├── statuses@1.3.1 
  │ │ │ └── unpipe@1.0.0 
  │ │ ├── parseurl@1.3.2 
  │ │ └── utils-merge@1.0.0 
  │ ├── dev-ip@1.0.1 
  │ ├─┬ easy-extender@2.3.2 
  │ │ └── lodash@3.10.1 
  │ ├─┬ eazy-logger@3.0.2 
  │ │ └─┬ tfunk@3.1.0 
  │ │   └── object-path@0.9.2 
  │ ├── emitter-steward@1.0.0 
  │ ├─┬ fs-extra@3.0.1 
  │ │ ├── graceful-fs@4.1.11 
  │ │ ├── jsonfile@3.0.1 
  │ │ └── universalify@0.1.1 
  │ ├─┬ http-proxy@1.15.2 
  │ │ ├── eventemitter3@1.2.0 
  │ │ └── requires-port@1.0.0 
  │ ├── immutable@3.8.1 
  │ ├─┬ localtunnel@1.8.3 
  │ │ ├─┬ debug@2.6.8 
  │ │ │ └── ms@2.0.0 
  │ │ ├── openurl@1.1.1 
  │ │ ├─┬ request@2.81.0 
  │ │ │ ├── aws-sign2@0.6.0 
  │ │ │ ├── aws4@1.6.0 
  │ │ │ ├── caseless@0.12.0 
  │ │ │ ├─┬ combined-stream@1.0.5 
  │ │ │ │ └── delayed-stream@1.0.0 
  │ │ │ ├── extend@3.0.1 
  │ │ │ ├── forever-agent@0.6.1 
  │ │ │ ├─┬ form-data@2.1.4 
  │ │ │ │ └── asynckit@0.4.0 
  │ │ │ ├─┬ har-validator@4.2.1 
  │ │ │ │ ├─┬ ajv@4.11.8 
  │ │ │ │ │ ├── co@4.6.0 
  │ │ │ │ │ └─┬ json-stable-stringify@1.0.1 
  │ │ │ │ │   └── jsonify@0.0.0 
  │ │ │ │ └── har-schema@1.0.5 
  │ │ │ ├─┬ hawk@3.1.3 
  │ │ │ │ ├── boom@2.10.1 
  │ │ │ │ ├── cryptiles@2.0.5 
  │ │ │ │ ├── hoek@2.16.3 
  │ │ │ │ └── sntp@1.0.9 
  │ │ │ ├─┬ http-signature@1.1.1 
  │ │ │ │ ├── assert-plus@0.2.0 
  │ │ │ │ ├─┬ jsprim@1.4.1 
  │ │ │ │ │ ├── assert-plus@1.0.0 
  │ │ │ │ │ └── json-schema@0.2.3 
  │ │ │ │ └─┬ sshpk@1.13.1 
  │ │ │ │   ├── asn1@0.2.3 
  │ │ │ │   ├── assert-plus@1.0.0 
  │ │ │ │   ├── bcrypt-pbkdf@1.0.1 
  │ │ │ │   ├─┬ dashdash@1.14.1 
  │ │ │ │   │ └── assert-plus@1.0.0 
  │ │ │ │   ├── ecc-jsbn@0.1.1 
  │ │ │ │   ├─┬ getpass@0.1.7 
  │ │ │ │   │ └── assert-plus@1.0.0 
  │ │ │ │   ├── jsbn@0.1.1 
  │ │ │ │   └── tweetnacl@0.14.5 
  │ │ │ ├── is-typedarray@1.0.0 
  │ │ │ ├── isstream@0.1.2 
  │ │ │ ├── json-stringify-safe@5.0.1 
  │ │ │ ├── oauth-sign@0.8.2 
  │ │ │ ├── performance-now@0.2.0 
  │ │ │ ├── qs@6.4.0 
  │ │ │ ├── safe-buffer@5.1.1 
  │ │ │ ├── stringstream@0.0.5 
  │ │ │ ├─┬ tough-cookie@2.3.3 
  │ │ │ │ └── punycode@1.4.1 
  │ │ │ ├── tunnel-agent@0.6.0 
  │ │ │ └── uuid@3.1.0 
  │ │ └─┬ yargs@3.29.0 
  │ │   └── camelcase@1.2.1 
  │ ├─┬ micromatch@2.3.11 
  │ │ ├─┬ arr-diff@2.0.0 
  │ │ │ └── arr-flatten@1.1.0 
  │ │ ├── array-unique@0.2.1 
  │ │ ├─┬ braces@1.8.5 
  │ │ │ ├─┬ expand-range@1.8.2 
  │ │ │ │ └─┬ fill-range@2.2.3 
  │ │ │ │   ├── is-number@2.1.0 
  │ │ │ │   ├── isobject@2.1.0 
  │ │ │ │   ├─┬ randomatic@1.1.7 
  │ │ │ │   │ ├─┬ is-number@3.0.0 
  │ │ │ │   │ │ └── kind-of@3.2.2 
  │ │ │ │   │ └── kind-of@4.0.0 
  │ │ │ │   └── repeat-string@1.6.1 
  │ │ │ ├── preserve@0.2.0 
  │ │ │ └── repeat-element@1.1.2 
  │ │ ├─┬ expand-brackets@0.1.5 
  │ │ │ └── is-posix-bracket@0.1.1 
  │ │ ├── extglob@0.3.2 
  │ │ ├── filename-regex@2.0.1 
  │ │ ├── is-extglob@1.0.0 
  │ │ ├─┬ kind-of@3.2.2 
  │ │ │ └── is-buffer@1.1.5 
  │ │ ├─┬ normalize-path@2.1.1 
  │ │ │ └── remove-trailing-separator@1.1.0 
  │ │ ├─┬ object.omit@2.0.1 
  │ │ │ ├─┬ for-own@0.1.5 
  │ │ │ │ └── for-in@1.0.2 
  │ │ │ └── is-extendable@0.1.1 
  │ │ ├─┬ parse-glob@3.0.4 
  │ │ │ ├── glob-base@0.3.0 
  │ │ │ └── is-dotfile@1.0.3 
  │ │ └─┬ regex-cache@0.4.4 
  │ │   └─┬ is-equal-shallow@0.1.3 
  │ │     └── is-primitive@2.0.0 
  │ ├─┬ opn@4.0.2 
  │ │ ├── object-assign@4.1.1 
  │ │ └─┬ pinkie-promise@2.0.1 
  │ │   └── pinkie@2.0.4 
  │ ├─┬ portscanner@2.1.1 
  │ │ ├── async@1.5.2 
  │ │ └─┬ is-number-like@1.0.8 
  │ │   └── lodash.isfinite@3.3.2 
  │ ├── qs@6.2.1 
  │ ├─┬ resp-modifier@6.0.2 
  │ │ └── minimatch@3.0.4 
  │ ├── rx@4.1.0 
  │ ├─┬ serve-index@1.8.0 
  │ │ ├─┬ accepts@1.3.4 
  │ │ │ └── negotiator@0.6.1 
  │ │ ├── batch@0.5.3 
  │ │ ├── escape-html@1.0.3 
  │ │ ├─┬ http-errors@1.5.1 
  │ │ │ └── setprototypeof@1.0.2 
  │ │ └─┬ mime-types@2.1.17 
  │ │   └── mime-db@1.30.0 
  │ ├─┬ serve-static@1.12.2 
  │ │ ├── encodeurl@1.0.1 
  │ │ └─┬ send@0.15.2 
  │ │   ├─┬ debug@2.6.4 
  │ │   │ └── ms@0.7.3 
  │ │   ├── depd@1.1.1 
  │ │   ├── destroy@1.0.4 
  │ │   ├── fresh@0.5.0 
  │ │   ├─┬ http-errors@1.6.2 
  │ │   │ └── setprototypeof@1.0.3 
  │ │   ├── mime@1.3.4 
  │ │   ├── ms@1.0.0 
  │ │   └── range-parser@1.2.0 
  │ ├── server-destroy@1.0.1 
  │ ├─┬ socket.io@1.6.0 
  │ │ ├─┬ debug@2.3.3 
  │ │ │ └── ms@0.7.2 
  │ │ ├─┬ engine.io@1.8.0 
  │ │ │ ├── accepts@1.3.3 
  │ │ │ ├── base64id@0.1.0 
  │ │ │ ├── cookie@0.3.1 
  │ │ │ ├─┬ debug@2.3.3 
  │ │ │ │ └── ms@0.7.2 
  │ │ │ ├─┬ engine.io-parser@1.3.1 
  │ │ │ │ ├── after@0.8.1 
  │ │ │ │ ├── arraybuffer.slice@0.0.6 
  │ │ │ │ ├── base64-arraybuffer@0.1.5 
  │ │ │ │ ├── blob@0.0.4 
  │ │ │ │ ├─┬ has-binary@0.1.6 
  │ │ │ │ │ └── isarray@0.0.1 
  │ │ │ │ └── wtf-8@1.0.0 
  │ │ │ └─┬ ws@1.1.1 
  │ │ │   ├── options@0.0.6 
  │ │ │   └── ultron@1.0.2 
  │ │ ├─┬ has-binary@0.1.7 
  │ │ │ └── isarray@0.0.1 
  │ │ ├── object-assign@4.1.0 
  │ │ ├─┬ socket.io-adapter@0.5.0 
  │ │ │ └─┬ debug@2.3.3 
  │ │ │   └── ms@0.7.2 
  │ │ └─┬ socket.io-parser@2.3.1 
  │ │   ├── component-emitter@1.1.2 
  │ │   ├── isarray@0.0.1 
  │ │   └── json3@3.3.2 
  │ ├─┬ socket.io-client@1.6.0 
  │ │ ├── backo2@1.0.2 
  │ │ ├── component-bind@1.0.0 
  │ │ ├── component-emitter@1.2.1 
  │ │ ├─┬ debug@2.3.3 
  │ │ │ └── ms@0.7.2 
  │ │ ├─┬ engine.io-client@1.8.0 
  │ │ │ ├── component-emitter@1.2.1 
  │ │ │ ├── component-inherit@0.0.3 
  │ │ │ ├─┬ debug@2.3.3 
  │ │ │ │ └── ms@0.7.2 
  │ │ │ ├── has-cors@1.1.0 
  │ │ │ ├── parsejson@0.0.3 
  │ │ │ ├── parseqs@0.0.5 
  │ │ │ ├── xmlhttprequest-ssl@1.5.3 
  │ │ │ └── yeast@0.1.2 
  │ │ ├── indexof@0.0.1 
  │ │ ├── object-component@0.0.3 
  │ │ ├─┬ parseuri@0.0.5 
  │ │ │ └─┬ better-assert@1.0.2 
  │ │ │   └── callsite@1.0.0 
  │ │ └── to-array@0.1.4 
  │ ├── ua-parser-js@0.7.12 
  │ └─┬ yargs@6.4.0 
  │   ├── camelcase@3.0.0 
  │   ├── get-caller-file@1.0.2 
  │   ├─┬ read-pkg-up@1.0.1 
  │   │ ├─┬ find-up@1.1.2 
  │   │ │ └── path-exists@2.1.0 
  │   │ └─┬ read-pkg@1.1.0 
  │   │   ├─┬ load-json-file@1.1.0 
  │   │   │ ├─┬ parse-json@2.2.0 
  │   │   │ │ └─┬ error-ex@1.3.1 
  │   │   │ │   └── is-arrayish@0.2.1 
  │   │   │ ├── pify@2.3.0 
  │   │   │ └── strip-bom@2.0.0 
  │   │   ├─┬ normalize-package-data@2.4.0 
  │   │   │ ├── hosted-git-info@2.5.0 
  │   │   │ ├─┬ is-builtin-module@1.0.0 
  │   │   │ │ └── builtin-modules@1.1.1 
  │   │   │ └─┬ validate-npm-package-license@3.0.1 
  │   │   │   ├─┬ spdx-correct@1.0.2 
  │   │   │   │ └── spdx-license-ids@1.2.2 
  │   │   │   └── spdx-expression-parse@1.0.4 
  │   │   └── path-type@1.1.0 
  │   ├── require-directory@2.1.1 
  │   ├── require-main-filename@1.0.1 
  │   ├── set-blocking@2.0.0 
  │   ├── which-module@1.0.0 
  │   ├── window-size@0.2.0 
  │   └─┬ yargs-parser@4.2.1 
  │     └── camelcase@3.0.0 
  ├─┬ gh-pages@0.3.1 
  │ ├── async@0.2.9 
  │ ├─┬ commander@2.8.1 
  │ │ └── graceful-readlink@1.0.1 
  │ ├─┬ glob@4.0.6 
  │ │ ├─┬ graceful-fs@3.0.11 
  │ │ │ └── natives@1.1.0 
  │ │ ├── minimatch@1.0.0 
  │ │ └─┬ once@1.4.0 
  │ │   └── wrappy@1.0.2 
  │ ├── graceful-fs@2.0.1 
  │ ├── lodash@2.4.2 
  │ ├── q@1.0.1 
  │ ├─┬ q-io@1.11.6 
  │ │ ├─┬ collections@0.2.2 
  │ │ │ └── weak-map@1.0.0 
  │ │ ├── mime@1.4.1 
  │ │ ├── mimeparse@0.1.4 
  │ │ ├── qs@1.2.2 
  │ │ └── url2@0.0.0 
  │ └── wrench@1.5.1 
  ├── highlight.js@8.9.1 
  ├─┬ jade@1.11.0 
  │ ├── character-parser@1.2.1 
  │ ├─┬ clean-css@3.4.28 
  │ │ ├── commander@2.8.1 
  │ │ └─┬ source-map@0.4.4 
  │ │   └── amdefine@1.0.1 
  │ ├── commander@2.6.0 
  │ ├─┬ constantinople@3.0.2 
  │ │ └── acorn@2.7.0 
  │ ├─┬ jstransformer@0.0.2 
  │ │ ├── is-promise@2.1.0 
  │ │ └─┬ promise@6.1.0 
  │ │   └── asap@1.0.0 
  │ ├─┬ mkdirp@0.5.1 
  │ │ └── minimist@0.0.8 
  │ ├─┬ transformers@2.1.0 
  │ │ ├─┬ css@1.0.8 
  │ │ │ ├── css-parse@1.0.4 
  │ │ │ └── css-stringify@1.0.5 
  │ │ ├─┬ promise@2.0.0 
  │ │ │ └── is-promise@1.0.1 
  │ │ └─┬ uglify-js@2.2.5 
  │ │   ├─┬ optimist@0.3.7 
  │ │   │ └── wordwrap@0.0.3 
  │ │   └── source-map@0.1.43 
  │ ├─┬ uglify-js@2.8.29 
  │ │ ├── source-map@0.5.7 
  │ │ ├── uglify-to-browserify@1.0.2 
  │ │ └─┬ yargs@3.10.0 
  │ │   ├─┬ cliui@2.1.0 
  │ │   │ ├─┬ center-align@0.1.3 
  │ │   │ │ ├─┬ align-text@0.1.4 
  │ │   │ │ │ └── longest@1.0.1 
  │ │   │ │ └── lazy-cache@1.0.4 
  │ │   │ ├── right-align@0.1.3 
  │ │   │ └── wordwrap@0.0.2 
  │ │   └── window-size@0.1.0 
  │ ├── void-elements@2.0.1 
  │ └─┬ with@4.0.3 
  │   ├── acorn@1.2.2 
  │   └── acorn-globals@1.0.9 
  ├─┬ js-yaml@3.10.0 
  │ ├─┬ argparse@1.0.9 
  │ │ └── sprintf-js@1.0.3 
  │ └── esprima@4.0.0 
  ├─┬ metalsmith@1.7.0 
  │ ├── absolute@0.0.1 
  │ ├── async@0.9.2 
  │ ├─┬ chalk@0.5.1 
  │ │ ├── ansi-styles@1.1.0 
  │ │ ├── escape-string-regexp@1.0.5 
  │ │ ├─┬ has-ansi@0.1.0 
  │ │ │ └── ansi-regex@0.2.1 
  │ │ ├── strip-ansi@0.3.0 
  │ │ └── supports-color@0.2.0 
  │ ├── clone@0.1.19 
  │ ├─┬ co-fs-extra@0.0.2 
  │ │ ├─┬ co-fs@1.2.0 
  │ │ │ ├─┬ co-from-stream@0.0.0 
  │ │ │ │ └── co-read@0.0.1 
  │ │ │ └── thunkify@0.0.1 
  │ │ └─┬ fs-extra@0.12.0 
  │ │   ├── jsonfile@2.4.0 
  │ │   ├── mkdirp@0.5.1 
  │ │   └── ncp@0.6.0 
  │ ├── commander@2.11.0 
  │ ├─┬ fs-extra@0.10.0 
  │ │ ├── jsonfile@1.2.0 
  │ │ ├── mkdirp@0.5.1 
  │ │ └── ncp@0.5.1 
  │ ├─┬ gnode@0.1.2 
  │ │ └─┬ regenerator@0.8.46 
  │ │   ├─┬ commoner@0.10.8 
  │ │   │ ├─┬ detective@4.5.0 
  │ │   │ │ ├── acorn@4.0.13 
  │ │   │ │ └── defined@1.0.0 
  │ │   │ ├── glob@5.0.15 
  │ │   │ ├── iconv-lite@0.4.19 
  │ │   │ ├── mkdirp@0.5.1 
  │ │   │ ├── q@1.5.0 
  │ │   │ └─┬ recast@0.11.23 
  │ │   │   ├── ast-types@0.9.6 
  │ │   │   ├── esprima@3.1.3 
  │ │   │   └── source-map@0.5.7 
  │ │   ├─┬ defs@1.1.1 
  │ │   │ ├─┬ alter@0.2.0 
  │ │   │ │ └── stable@0.1.6 
  │ │   │ ├── ast-traverse@0.1.1 
  │ │   │ ├── breakable@1.0.0 
  │ │   │ ├── esprima-fb@15001.1001.0-dev-harmony-fb 
  │ │   │ ├── simple-fmt@0.1.0 
  │ │   │ ├── simple-is@0.2.0 
  │ │   │ ├── stringmap@0.2.2 
  │ │   │ ├── stringset@0.2.1 
  │ │   │ ├── tryor@0.1.2 
  │ │   │ └─┬ yargs@3.27.0 
  │ │   │   └─┬ cliui@2.1.0 
  │ │   │     └── wordwrap@0.0.2 
  │ │   ├── esprima-fb@15001.1001.0-dev-harmony-fb 
  │ │   ├── private@0.1.7 
  │ │   ├─┬ recast@0.10.33 
  │ │   │ ├── ast-types@0.8.12 
  │ │   │ ├── esprima-fb@15001.1001.0-dev-harmony-fb 
  │ │   │ └── source-map@0.5.7 
  │ │   ├── regenerator-runtime@0.9.6 
  │ │   └── through@2.3.8 
  │ ├─┬ gray-matter@2.1.1 
  │ │ ├─┬ ansi-red@0.1.1 
  │ │ │ └── ansi-wrap@0.1.0 
  │ │ ├── coffee-script@1.12.7 
  │ │ ├── extend-shallow@2.0.1 
  │ │ └── toml@2.3.3 
  │ ├── is@2.2.1 
  │ ├── is-utf8@0.2.1 
  │ ├─┬ recursive-readdir@1.3.0 
  │ │ └── minimatch@0.3.0 
  │ ├─┬ rimraf@2.6.2 
  │ │ └─┬ glob@7.1.2 
  │ │   ├── fs.realpath@1.0.0 
  │ │   ├── inflight@1.0.6 
  │ │   └── minimatch@3.0.4 
  │ ├── stat-mode@0.2.2 
  │ ├── thunkify@2.1.2 
  │ ├─┬ unyield@0.0.1 
  │ │ └── co@3.1.0 
  │ └─┬ ware@1.3.0 
  │   └─┬ wrap-fn@0.1.5 
  │     └── co@3.1.0 
  ├─┬ metalsmith-collections@0.7.0 
  │ ├── debug@0.7.4 
  │ ├── extend@1.2.1 
  │ ├─┬ minimatch@0.2.14 
  │ │ ├── lru-cache@2.7.3 
  │ │ └── sigmund@1.0.1 
  │ ├─┬ read-metadata@0.0.2 
  │ │ └── yaml-js@0.0.8 
  │ └── uniq@0.0.2 
  ├─┬ metalsmith-markdownit@0.1.3 
  │ ├── debug@0.7.4 
  │ └─┬ markdown-it@5.1.0 
  │   ├── entities@1.1.1 
  │   ├── linkify-it@1.2.4 
  │   ├── mdurl@1.0.1 
  │   └── uc.micro@1.0.3 
  ├─┬ metalsmith-paths@2.1.2 
  │ └── debug-log@1.0.1 
  ├─┬ metalsmith-static@0.0.5 
  │ ├── debug@0.7.4 
  │ ├─┬ fs-extra@0.10.0 
  │ │ ├── jsonfile@1.2.0 
  │ │ └── mkdirp@0.5.1 
  │ └── ncp@0.5.1 
  ├─┬ metalsmith-templates@0.7.0 
  │ ├── async@0.2.10 
  │ ├── consolidate@0.10.0 
  │ ├── debug@0.7.4 
  │ ├── extend@1.2.1 
  │ ├─┬ lodash.omit@2.4.1 
  │ │ ├─┬ lodash._basedifference@2.4.1 
  │ │ │ ├── lodash._baseindexof@2.4.1 
  │ │ │ ├─┬ lodash._cacheindexof@2.4.1 
  │ │ │ │ └── lodash._keyprefix@2.4.2 
  │ │ │ ├─┬ lodash._createcache@2.4.1 
  │ │ │ │ ├── lodash._cachepush@2.4.1 
  │ │ │ │ └── lodash._getobject@2.4.1 
  │ │ │ ├── lodash._largearraysize@2.4.1 
  │ │ │ └─┬ lodash._releaseobject@2.4.1 
  │ │ │   ├── lodash._maxpoolsize@2.4.1 
  │ │ │   └── lodash._objectpool@2.4.1 
  │ │ ├─┬ lodash._baseflatten@2.4.1 
  │ │ │ ├── lodash.isarguments@2.4.1 
  │ │ │ └─┬ lodash.isarray@2.4.1 
  │ │ │   └── lodash._isnative@2.4.1 
  │ │ ├─┬ lodash.createcallback@2.4.4 
  │ │ │ ├─┬ lodash._basecreatecallback@2.4.1 
  │ │ │ │ ├─┬ lodash._setbinddata@2.4.1 
  │ │ │ │ │ └── lodash.noop@2.4.1 
  │ │ │ │ ├─┬ lodash.bind@2.4.1 
  │ │ │ │ │ ├─┬ lodash._createwrapper@2.4.1 
  │ │ │ │ │ │ ├─┬ lodash._basebind@2.4.1 
  │ │ │ │ │ │ │ └── lodash._basecreate@2.4.1 
  │ │ │ │ │ │ └── lodash._basecreatewrapper@2.4.1 
  │ │ │ │ │ └── lodash._slice@2.4.1 
  │ │ │ │ ├── lodash.identity@2.4.1 
  │ │ │ │ └── lodash.support@2.4.1 
  │ │ │ ├─┬ lodash._baseisequal@2.4.1 
  │ │ │ │ ├─┬ lodash._getarray@2.4.1 
  │ │ │ │ │ └── lodash._arraypool@2.4.1 
  │ │ │ │ ├── lodash._releasearray@2.4.1 
  │ │ │ │ └── lodash.isfunction@2.4.1 
  │ │ │ ├── lodash.isobject@2.4.1 
  │ │ │ ├─┬ lodash.keys@2.4.1 
  │ │ │ │ └── lodash._shimkeys@2.4.1 
  │ │ │ └── lodash.property@2.4.1 
  │ │ └─┬ lodash.forin@2.4.1 
  │ │   └── lodash._objecttypes@2.4.1 
  │ └─┬ multimatch@0.1.0 
  │   ├── lodash@2.4.2 
  │   └── minimatch@0.2.14 
  ├─┬ minimatch@2.0.10 
  │ └─┬ brace-expansion@1.1.8 
  │   ├── balanced-match@1.0.0 
  │   └── concat-map@0.0.1 
  ├─┬ update-notifier@0.5.0 
  │ ├─┬ chalk@1.1.3 
  │ │ ├── ansi-styles@2.2.1 
  │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ └── ansi-regex@2.1.1 
  │ │ ├── strip-ansi@3.0.1 
  │ │ └── supports-color@2.0.0 
  │ ├─┬ configstore@1.4.0 
  │ │ ├── mkdirp@0.5.1 
  │ │ ├── os-tmpdir@1.0.2 
  │ │ ├─┬ osenv@0.1.4 
  │ │ │ └── os-homedir@1.0.2 
  │ │ ├── uuid@2.0.3 
  │ │ ├─┬ write-file-atomic@1.3.4 
  │ │ │ ├── imurmurhash@0.1.4 
  │ │ │ └── slide@1.1.6 
  │ │ └── xdg-basedir@2.0.0 
  │ ├── is-npm@1.0.0 
  │ ├─┬ latest-version@1.0.1 
  │ │ └─┬ package-json@1.2.0 
  │ │   ├─┬ got@3.3.1 
  │ │   │ ├─┬ duplexify@3.5.1 
  │ │   │ │ ├── end-of-stream@1.4.0 
  │ │   │ │ └── stream-shift@1.0.0 
  │ │   │ ├── infinity-agent@2.0.3 
  │ │   │ ├── is-redirect@1.0.0 
  │ │   │ ├── is-stream@1.1.0 
  │ │   │ ├── lowercase-keys@1.0.0 
  │ │   │ ├── nested-error-stacks@1.0.2 
  │ │   │ ├── object-assign@3.0.0 
  │ │   │ ├── prepend-http@1.0.4 
  │ │   │ ├── read-all-stream@3.1.0 
  │ │   │ └── timed-out@2.0.0 
  │ │   └─┬ registry-url@3.1.0 
  │ │     └─┬ rc@1.2.1 
  │ │       ├── deep-extend@0.4.2 
  │ │       ├── ini@1.3.4 
  │ │       ├── minimist@1.2.0 
  │ │       └── strip-json-comments@2.0.1 
  │ ├─┬ repeating@1.1.3 
  │ │ └─┬ is-finite@1.0.2 
  │ │   └── number-is-nan@1.0.1 
  │ ├─┬ semver-diff@2.1.0 
  │ │ └── semver@5.4.1 
  │ └── string-length@1.0.1 
  ├─┬ verror@1.10.0 
  │ ├── assert-plus@1.0.0 
  │ ├── core-util-is@1.0.2 
  │ └── extsprintf@1.3.0 
  └─┬ yargs@3.32.0 
    ├── camelcase@2.1.1 
    ├─┬ cliui@3.2.0 
    │ └── wrap-ansi@2.1.0 
    ├── decamelize@1.2.0 
    ├─┬ os-locale@1.4.0 
    │ └─┬ lcid@1.0.0 
    │   └── invert-kv@1.0.0 
    ├─┬ string-width@1.0.2 
    │ ├── code-point-at@1.1.0 
    │ └── is-fullwidth-code-point@1.0.0 
    ├── window-size@0.1.4 
    └── y18n@3.2.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/noveo-university/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 32% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0589 took 4.3808s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (3:4) on program 
var absolute = require('absolute');
var assert = require('assert');
var clone = require('clone');
var fs = require('co-fs-extra');
var is = require('is');
var matter = require('gray-matter');
var Mode = require('stat-mode');
var path = require('path');
var readdir = require('recursive-readdir');
var rm = require('rimraf');
var thunkify = require('thunkify');
var unyield = require('unyield');
var utf8 = require('is-utf8');
var Ware = require('ware');

/**
 * Thunks.
 */

readdir = thunkify(readdir);
rm = thunkify(rm);

/**
 * Export `Metalsmith`.
 */

module.exports = Metalsmith;

/**
 * Initialize a new `Metalsmith` builder with a working `directory`.
 *
 * @param {String} directory
 */

function Metalsmith(directory){
  if (!(this instanceof Metalsmith)) return new Metalsmith(directory);
  assert(directory, 'You must pass a working directory path.');
  this.plugins = [];
  this.ignores = [];
  this.directory(directory);
  this.metadata({});
  this.source('src');
  this.destination('build');
  this.concurrency(Infinity);
  this.clean(true);
  this.frontmatter(true);
}

/**
 * Add a `plugin` function to the stack.
 *
 * @param {Function or Array} plugin
 * @return {Metalsmith}
 */

Metalsmith.prototype.use = function(plugin){
  this.plugins.push(plugin);
  return this;
};

/**
 * Get or set the working `directory`.
 *
 * @param {Object} directory
 * @return {Object or Metalsmith}
 */

Metalsmith.prototype.directory = function(directory){
  if (!arguments.length) return path.resolve(this._directory);
  assert(is.string(directory), 'You must pass a directory path string.');
  this._directory = directory;
  return this;
};

/**
 * Get or set the global `metadata` to pass to templates.
 *
 * @param {Object} metadata
 * @return {Object or Metalsmith}
 */

Metalsmith.prototype.metadata = function(metadata){
  if (!arguments.length) return this._metadata;
  assert(is.object(metadata), 'You must pass a metadata object.');
  this._metadata = clone(metadata);
  return this;
};

/**
 * Get or set the source directory.
 *
 * @param {String} path
 * @return {String or Metalsmith}
 */

Metalsmith.prototype.source = function(path){
  if (!arguments.length) return this.path(this._source);
  assert(is.string(path), 'You must pass a source path string.');
  this._source = path;
  return this;
};

/**
 * Get or set the destination directory.
 *
 * @param {String} path
 * @return {String or Metalsmith}
 */

Metalsmith.prototype.destination = function(path){
  if (!arguments.length) return this.path(this._destination);
  assert(is.string(path), 'You must pass a destination path string.');
  this._destination = path;
  return this;
};

/**
 * Get or set the maximum number of files to open at once.
 *
 * @param {Number} max
 * @return {Number or Metalsmith}
 */

Metalsmith.prototype.concurrency = function(max){
  if (!arguments.length) return this._concurrency;
  assert(is.number(max), 'You must pass a number for concurrency.');
  this._concurrency = max;
  return this;
};

/**
 * Get or set whether the destination directory will be removed before writing.
 *
 * @param {Boolean} clean
 * @return {Boolean or Metalsmith}
 */
Metalsmith.prototype.clean = function(clean){
  if (!arguments.length) return this._clean;
  assert(is.boolean(clean), 'You must pass a boolean.');
  this._clean = clean;
  return this;
};

/**
 * Optionally turn off frontmatter parsing.
 *
 * @param {Boolean} frontmatter
 * @return {Boolean or Metalsmith}
 */

Metalsmith.prototype.frontmatter = function(frontmatter){
  if (!arguments.length) return this._frontmatter;
  assert(is.boolean(frontmatter), 'You must pass a boolean.');
  this._frontmatter = frontmatter;
  return this;
};

/**
 * Add a file or files to the list of ignores.
 *
 * @param {String or Strings} The names of files or directories to ignore.
 * @return {Metalsmith}
 */
Metalsmith.prototype.ignore = function(files){
  if (!arguments.length) return this.ignores.slice();
  this.ignores = this.ignores.concat(files);
  return this;
};

/**
 * Resolve `paths` relative to the root directory.
 *
 * @param {String} paths...
 * @return {String}
 */

Metalsmith.prototype.path = function(){
  var paths = [].slice.call(arguments);
  paths.unshift(this.directory());
  return path.resolve.apply(path, paths);
};

/**
 * Build with the current settings to the destination directory.
 *
 * @return {Object}
 */

Metalsmith.prototype.build = unyield(function*(){
  var clean = this.clean();
  var dest = this.destination();
  if (clean) yield rm(dest);

  var files = yield this.read();
  files = yield this.run(files);
  yield this.write(files);
  return files;
});

/**
 * Run a set of `files` through the plugins stack.
 *
 * @param {Object} files
 * @param {Array} plugins
 * @return {Object}
 */

Metalsmith.prototype.run = unyield(function*(files, plugins){
  var ware = new Ware(plugins || this.plugins);
  var run = thunkify(ware.run.bind(ware));
  var res = yield run(files, this);
  return res[0];
});

/**
 * Read a dictionary of files from a `dir`, parsing frontmatter. If no directory
 * is provided, it will default to the source directory.
 *
 * @param {String} dir (optional)
 * @return {Object}
 */

Metalsmith.prototype.read = unyield(function*(dir){
  dir = dir || this.source();
  var read = this.readFile.bind(this);
  var concurrency = this.concurrency();
  var ignores = this.ignores || null;
  var paths = yield readdir(dir, ignores);
  var files = [];
  var complete = 0;
  var batch;

  while (complete < paths.length) {
    batch = paths.slice(complete, complete + concurrency);
    batch = yield batch.map(read);
    files = files.concat(batch);
    complete += concurrency;
  }

  return paths.reduce(memoizer, {});

  function memoizer(memo, file, i) {
    file = path.relative(dir, file);
    memo[file] = files[i];
    return memo;
  }
});

/**
 * Read a `file` by path. If the path is not absolute, it will be resolved
 * relative to the source directory.
 *
 * @param {String} file
 * @return {Object}
 */

Metalsmith.prototype.readFile = unyield(function*(file){
  var src = this.source();
  var ret = {};

  if (!absolute(file)) file = path.resolve(src, file);

  try {
    var frontmatter = this.frontmatter();
    var stats = yield fs.stat(file);
    var buffer = yield fs.readFile(file);
    var parsed;

    if (frontmatter && utf8(buffer)) {
      try {
        parsed = matter(buffer.toString());
      } catch (e) {
        var err = new Error('Invalid frontmatter in the file at: ' + file);
        err.code = 'invalid_frontmatter';
        throw err;
      }

      ret = parsed.data;
      ret.contents = new Buffer(parsed.content);
    } else {
      ret.contents = buffer;
    }

    ret.mode = Mode(stats).toOctal();
    ret.stats = stats;
  } catch (e) {
    if (e.code == 'invalid_frontmatter') throw e;
    e.message = 'Failed to read the file at: ' + file + '\n\n' + e.message;
    e.code = 'failed_read';
    throw e;
  }

  return ret;
});

/**
 * Write a dictionary of `files` to a destination `dir`. If no directory is
 * provided, it will default to the destination directory.
 *
 * @param {Object} files
 * @param {String} dir (optional)
 */

Metalsmith.prototype.write = unyield(function*(files, dir){
  dir = dir || this.destination();
  var write = this.writeFile.bind(this);
  var concurrency = this.concurrency();
  var keys = Object.keys(files);
  var complete = 0;
  var batch;

  while (complete < keys.length) {
    batch = keys.slice(complete, complete + concurrency);
    yield batch.map(writer);
    complete += concurrency;
  }

  function writer(key){
    var file = path.resolve(dir, key);
    return write(file, files[key]);
  }
});

/**
 * Write a `file` by path with `data`. If the path is not absolute, it will be
 * resolved relative to the destination directory.
 *
 * @param {String} file
 * @param {Object} data
 */

Metalsmith.prototype.writeFile = unyield(function*(file, data){
  var dest = this.destination();
  if (!absolute(file)) file = path.resolve(dest, file);

  try {
    yield fs.outputFile(file, data.contents);
    if (data.mode) yield fs.chmod(file, data.mode);
  } catch (e) {
    e.message = 'Failed to write the file at: ' + file + '\n\n' + e.message;
    throw e;
  }
});
 at SyntaxError: Unexpected token (3:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/noveo-university/node_modules/noveo-university/lib/index.js. Coverage (Term): 62% Coverage (LOC): 75%
*- File /root/Targets/noveo-university/node_modules/noveo-university/lib/build.js. Coverage (Term): 14% Coverage (LOC): 12%
*- File /root/Targets/noveo-university/node_modules/metalsmith/index.js. Coverage (Term): 83% Coverage (LOC): 100%
*- File /root/Targets/noveo-university/node_modules/gnode/index.js. Coverage (Term): 25% Coverage (LOC): 38%
*- File eval. Coverage (Term): 75% Coverage (LOC): 100%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
