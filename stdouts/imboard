/root/Targets/imboard
└─┬ imboard@0.4.3 
  ├── async@0.9.2 
  ├── async-foreach@0.1.3 
  ├─┬ aws-sdk@2.120.0 
  │ ├─┬ buffer@4.9.1 
  │ │ ├── base64-js@1.2.1 
  │ │ ├── ieee754@1.1.8 
  │ │ └── isarray@1.0.0 
  │ ├── crypto-browserify@1.0.9 
  │ ├── events@1.1.1 
  │ ├── jmespath@0.15.0 
  │ ├── sax@1.2.1 
  │ ├─┬ url@0.10.3 
  │ │ └── punycode@1.3.2 
  │ ├── uuid@3.0.1 
  │ ├── xml2js@0.4.17 
  │ └─┬ xmlbuilder@4.2.1 
  │   └── lodash@4.17.4 
  ├─┬ body-parser@1.18.1 
  │ ├── bytes@3.0.0 
  │ ├── content-type@1.0.4 
  │ ├── debug@2.6.8 
  │ ├── depd@1.1.1 
  │ ├─┬ http-errors@1.6.2 
  │ │ └── inherits@2.0.3 
  │ ├── iconv-lite@0.4.19 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── qs@6.5.1 
  │ ├─┬ raw-body@2.3.2 
  │ │ └── unpipe@1.0.0 
  │ └─┬ type-is@1.6.15 
  │   └── media-typer@0.3.0 
  ├─┬ cheerio@0.19.0 
  │ ├─┬ css-select@1.0.0 
  │ │ ├── boolbase@1.0.0 
  │ │ ├── css-what@1.0.0 
  │ │ ├── domutils@1.4.3 
  │ │ └── nth-check@1.0.1 
  │ ├─┬ dom-serializer@0.1.0 
  │ │ └── domelementtype@1.1.3 
  │ ├── entities@1.1.1 
  │ ├─┬ htmlparser2@3.8.3 
  │ │ ├── domelementtype@1.3.0 
  │ │ ├── domhandler@2.3.0 
  │ │ ├── domutils@1.5.1 
  │ │ ├── entities@1.0.0 
  │ │ └─┬ readable-stream@1.1.14 
  │ │   ├── isarray@0.0.1 
  │ │   └── string_decoder@0.10.31 
  │ └── lodash@3.10.1 
  ├─┬ connect-multiparty@1.2.5 
  │ ├─┬ multiparty@3.3.2 
  │ │ └── stream-counter@0.2.0 
  │ ├─┬ on-finished@2.1.1 
  │ │ └── ee-first@1.1.0 
  │ ├── qs@2.2.5 
  │ └─┬ type-is@1.5.7 
  │   └─┬ mime-types@2.0.14 
  │     └── mime-db@1.12.0 
  ├─┬ cookie-parser@1.4.3 
  │ ├── cookie@0.3.1 
  │ └── cookie-signature@1.0.6 
  ├─┬ cron@1.3.0 
  │ └─┬ moment-timezone@0.5.13 
  │   └── moment@2.18.1 
  ├─┬ domain@0.0.1 
  │ ├── co@3.1.0 
  │ ├─┬ eventstore@1.12.4 
  │ │ ├── async@2.5.0 
  │ │ ├── debug@3.0.1 
  │ │ ├── dotty@0.0.2 
  │ │ ├── jsondate@0.0.1 
  │ │ ├── parent-require@1.0.0 
  │ │ ├─┬ tolerance@1.0.0 
  │ │ │ └── retry@0.10.1 
  │ │ └── uuid@3.1.0 
  │ ├── shortid@2.2.8 
  │ ├─┬ should@4.6.5 
  │ │ ├── should-equal@0.3.1 
  │ │ ├── should-format@0.0.7 
  │ │ └── should-type@0.0.4 
  │ └── thunkify@2.1.2 
  ├─┬ easyimage@1.4.0 
  │ ├── colors@1.1.2 
  │ ├─┬ mkdirp@0.5.1 
  │ │ └── minimist@0.0.8 
  │ └── q@1.5.0 
  ├─┬ express@4.15.4 
  │ ├─┬ accepts@1.3.4 
  │ │ └── negotiator@0.6.1 
  │ ├── array-flatten@1.1.1 
  │ ├── content-disposition@0.5.2 
  │ ├── encodeurl@1.0.1 
  │ ├── escape-html@1.0.3 
  │ ├── etag@1.8.1 
  │ ├── finalhandler@1.0.5 
  │ ├── fresh@0.5.0 
  │ ├── merge-descriptors@1.0.1 
  │ ├── methods@1.1.2 
  │ ├── parseurl@1.3.2 
  │ ├── path-to-regexp@0.1.7 
  │ ├─┬ proxy-addr@1.1.5 
  │ │ ├── forwarded@0.1.2 
  │ │ └── ipaddr.js@1.4.0 
  │ ├── qs@6.5.0 
  │ ├── range-parser@1.2.0 
  │ ├─┬ send@0.15.4 
  │ │ ├── destroy@1.0.4 
  │ │ └── mime@1.3.4 
  │ ├── serve-static@1.12.4 
  │ ├── setprototypeof@1.0.3 
  │ ├── statuses@1.3.1 
  │ ├── utils-merge@1.0.0 
  │ └── vary@1.1.1 
  ├── express-domain-middleware@0.1.0 
  ├─┬ express-session@1.15.5 
  │ ├── crc@3.4.4 
  │ ├── on-headers@1.0.1 
  │ └─┬ uid-safe@2.1.5 
  │   └── random-bytes@1.0.0 
  ├─┬ handlebars@2.0.0 
  │ ├─┬ optimist@0.3.7 
  │ │ └── wordwrap@0.0.3 
  │ └─┬ uglify-js@2.3.6 
  │   ├── async@0.2.10 
  │   └─┬ source-map@0.1.43 
  │     └── amdefine@1.0.1 
  ├── method-override@2.3.9 
  ├─┬ mysql@2.14.1 
  │ ├── bignumber.js@4.0.2 
  │ ├─┬ readable-stream@2.3.3 
  │ │ ├── core-util-is@1.0.2 
  │ │ ├── process-nextick-args@1.0.7 
  │ │ ├── string_decoder@1.0.3 
  │ │ └── util-deprecate@1.0.2 
  │ ├── safe-buffer@5.1.1 
  │ └── sqlstring@2.2.0 
  ├── node-uuid@1.4.8 
  ├─┬ nodemailer@1.11.0 
  │ ├─┬ libmime@1.2.0 
  │ │ ├── libbase64@0.1.0 
  │ │ └── libqp@1.1.0 
  │ ├─┬ mailcomposer@2.1.0 
  │ │ └─┬ buildmail@2.0.0 
  │ │   ├── addressparser@0.3.2 
  │ │   └── needle@0.10.0 
  │ ├── needle@0.11.0 
  │ ├─┬ nodemailer-direct-transport@1.1.0 
  │ │ └── smtp-connection@1.3.8 
  │ └─┬ nodemailer-smtp-transport@1.1.0 
  │   ├── clone@1.0.2 
  │   └── nodemailer-wellknown@0.1.10 
  ├─┬ passport@0.2.2 
  │ ├── passport-strategy@1.0.0 
  │ └── pause@0.0.1 
  ├─┬ passport-facebook@1.0.3 
  │ └─┬ passport-oauth2@1.4.0 
  │   ├── oauth@0.9.15 
  │   └── uid2@0.0.3 
  ├─┬ passport-google-oauth@0.1.5 
  │ ├─┬ passport-oauth@0.1.15 
  │ │ └── passport@0.1.18 
  │ └── pkginfo@0.2.3 
  ├─┬ passport-twitter@1.0.4 
  │ ├── passport-oauth1@1.1.0 
  │ └── xtraverse@0.1.0 
  ├─┬ prompt@0.2.14 
  │ ├─┬ read@1.0.7 
  │ │ └── mute-stream@0.0.7 
  │ ├── revalidator@0.1.8 
  │ ├─┬ utile@0.2.1 
  │ │ ├── async@0.2.10 
  │ │ ├── deep-equal@1.0.1 
  │ │ ├── i@0.3.5 
  │ │ ├── ncp@0.4.2 
  │ │ └─┬ rimraf@2.6.2 
  │ │   └─┬ glob@7.1.2 
  │ │     ├── fs.realpath@1.0.0 
  │ │     ├─┬ inflight@1.0.6 
  │ │     │ └── wrappy@1.0.2 
  │ │     ├─┬ minimatch@3.0.4 
  │ │     │ └─┬ brace-expansion@1.1.8 
  │ │     │   ├── balanced-match@1.0.0 
  │ │     │   └── concat-map@0.0.1 
  │ │     ├── once@1.4.0 
  │ │     └── path-is-absolute@1.0.1 
  │ └─┬ winston@0.8.3 
  │   ├── async@0.2.10 
  │   ├── colors@0.6.2 
  │   └── pkginfo@0.3.1 
  ├── querystring@0.2.0 
  ├─┬ randomstring@1.1.5 
  │ └── array-uniq@1.0.2 
  ├─┬ request@2.82.0 
  │ ├── aws-sign2@0.7.0 
  │ ├── aws4@1.6.0 
  │ ├── caseless@0.12.0 
  │ ├─┬ combined-stream@1.0.5 
  │ │ └── delayed-stream@1.0.0 
  │ ├── extend@3.0.1 
  │ ├── forever-agent@0.6.1 
  │ ├─┬ form-data@2.3.1 
  │ │ └── asynckit@0.4.0 
  │ ├─┬ har-validator@5.0.3 
  │ │ ├─┬ ajv@5.2.2 
  │ │ │ ├── co@4.6.0 
  │ │ │ ├── fast-deep-equal@1.0.0 
  │ │ │ ├── json-schema-traverse@0.3.1 
  │ │ │ └─┬ json-stable-stringify@1.0.1 
  │ │ │   └── jsonify@0.0.0 
  │ │ └── har-schema@2.0.0 
  │ ├─┬ hawk@6.0.2 
  │ │ ├── boom@4.3.1 
  │ │ ├─┬ cryptiles@3.1.2 
  │ │ │ └── boom@5.2.0 
  │ │ ├── hoek@4.2.0 
  │ │ └── sntp@2.0.2 
  │ ├─┬ http-signature@1.2.0 
  │ │ ├── assert-plus@1.0.0 
  │ │ ├─┬ jsprim@1.4.1 
  │ │ │ ├── extsprintf@1.3.0 
  │ │ │ ├── json-schema@0.2.3 
  │ │ │ └── verror@1.10.0 
  │ │ └─┬ sshpk@1.13.1 
  │ │   ├── asn1@0.2.3 
  │ │   ├── bcrypt-pbkdf@1.0.1 
  │ │   ├── dashdash@1.14.1 
  │ │   ├── ecc-jsbn@0.1.1 
  │ │   ├── getpass@0.1.7 
  │ │   ├── jsbn@0.1.1 
  │ │   └── tweetnacl@0.14.5 
  │ ├── is-typedarray@1.0.0 
  │ ├── isstream@0.1.2 
  │ ├── json-stringify-safe@5.0.1 
  │ ├─┬ mime-types@2.1.17 
  │ │ └── mime-db@1.30.0 
  │ ├── oauth-sign@0.8.2 
  │ ├── performance-now@2.1.0 
  │ ├── stringstream@0.0.5 
  │ ├─┬ tough-cookie@2.3.2 
  │ │ └── punycode@1.4.1 
  │ ├── tunnel-agent@0.6.0 
  │ └── uuid@3.1.0 
  ├─┬ serve-favicon@2.4.4 
  │ ├── fresh@0.5.1 
  │ └── ms@2.0.0 
  ├─┬ winston@0.7.3 
  │ ├── async@0.2.10 
  │ ├── colors@0.6.2 
  │ ├── cycle@1.0.3 
  │ ├── eyes@0.1.8 
  │ ├── pkginfo@0.3.1 
  │ ├─┬ request@2.16.6 
  │ │ ├── aws-sign@0.2.0 
  │ │ ├── cookie-jar@0.2.0 
  │ │ ├── forever-agent@0.2.0 
  │ │ ├─┬ form-data@0.0.10 
  │ │ │ └─┬ combined-stream@0.0.7 
  │ │ │   └── delayed-stream@0.0.5 
  │ │ ├─┬ hawk@0.10.2 
  │ │ │ ├── boom@0.3.8 
  │ │ │ ├── cryptiles@0.1.3 
  │ │ │ ├── hoek@0.7.6 
  │ │ │ └── sntp@0.1.4 
  │ │ ├── json-stringify-safe@3.0.0 
  │ │ ├── mime@1.2.11 
  │ │ ├── oauth-sign@0.2.0 
  │ │ ├── qs@0.5.6 
  │ │ └── tunnel-agent@0.2.0 
  │ └── stack-trace@0.0.10 
  └── xmldom@0.1.27 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/imboard/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0345 took 3.7936s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Invalid number (50:25) on program global.useConsole = true;
process.argv.forEach(function (val, index, array)
{
	if(index == 2 && val == "-deploy")
		global.useConsole = false;
});

global._path =
{
	home : __dirname,
	content : __dirname + "/content",
	src : __dirname + "/src",
	resources : __dirname + "/resources",
	lib : __dirname + "/src/lib",
	log : __dirname + "/logs",
	userdata : __dirname + "/userdata"
};
	
global._multipart = require('connect-multiparty');
global._config = require(__dirname + '/resources/properties/config');
global._aws = _config.aws;
global._OAuth = _config.OAuth;
global._code = _config.code;

global._port = _config.server.port;
global._modules = {};

/**
 * 
 */
var fs = require('fs');
var express = require('express');
var methodOverride = require('method-override');
var mysql = require('mysql');
var session = require('express-session');
var bodyParser = require("body-parser");
var cookieParser = require("cookie-parser");
var favicon = require('serve-favicon');
var https = require("https");

var Immy = require(_path.lib + "/Immy");
var Logger  = require(_path.lib + "/Logger");
var ModuleScanner = require(_path.lib + "/ModuleScanner");
var PropertyLoader = require(_path.lib + "/PropertyLoader");
var DataBindModuleLoader = require(_path.lib + "/DataBindModuleLoader");
var ServiceLoader = require(_path.lib + "/ServiceLoader");

var fs = require('fs');
if(!fs.existsSync(_path.log))
	fs.mkdirSync(_path.log, 0777);

if(!fs.existsSync(_path.userdata))
	fs.mkdirSync(_path.userdata, 0777);

/**
 * global 객체 생성
 */
global.pool = mysql.createPool(_config.jdbc);
global._log = new Logger(_path.log + "/debug.log", _config.log.level, _config.log.colorize, useConsole);
global._loge = new Logger(_path.log + "/exception.log", _config.log.level, _config.log.colorize, useConsole);
global.ParameterBinder = require(_path.lib + "/ParameterBinder.js");
global.Delegator = require(_path.lib + "/Delegator.js");
global.Render = require(_path.lib + "/Render.js");
global._async = require('async');
global._utils = require(_path.lib + "/Utils.js");
global._immy = new Immy(pool, _log, _loge);

/**
 * 서버에 백그라운드로 올렸을때 오류 나는거때문에 콘솔 오버라이드
 */
if(!global.useConsole)
{
	console = {};
	for(var key in _log)
	{
		console[key] = _log[key];
	}

	console.log = function()
	{
		_log.debug(arguments);
	};
}

/**
 * Express 설정
 */
global.app = express();

var server = app.listen(_port, function()
{
	_log.debug('Listening on port %d', server.address().port);
});

app.use('/content', express.static(_path.content));
app.use('/resources', express.static(_path.userdata));
app.use(bodyParser.urlencoded({extended: true}));
app.use(bodyParser.json());
app.use(cookieParser());
app.use(session({ secret: 'imboard', resave: true, saveUninitialized: true}));
app.use(methodOverride());
app.use(require('express-domain-middleware'));
app.use(function(req, res, next)
{
	var domain = require("domain");
	var reqDomain = domain.create();

    reqDomain.add(req);
    reqDomain.add(res);

    reqDomain.on('error', function (err)
    {
    	_immy.releaseConnection();
    	
    	_loge.error("\n\n");
    	_loge.error("=================================================");
    	_loge.error("time : " + new Date().toString());
    	_loge.error("name : DomainException");
    	_loge.error("-------------------------------------------------");
    	_loge.error(err.stack);
    	_loge.error("=================================================\n\n");
    	
    	res.end(JSON.stringify({code : _code.EXCEPTION, message : err.stack}));
    });

    reqDomain.run(next);
});

app.use(function(err, req, res, next)
{
	_loge.error("=================================================");
	_loge.error("time : " + new Date().toString());
	_loge.error("name : Exception");
	_loge.error("-------------------------------------------------");
	_loge.error(err.stack);
	_loge.error("=================================================");

	res.statusCode = 500;
	res.end();
});

process.on('uncaughtException', function (err)
{
	_loge.error("\n\n");
	_loge.error("=================================================");
	_loge.error("time : " + new Date().toString());
	_loge.error("name : UncaughtException");
	_loge.error("-------------------------------------------------");
	_loge.error(err.stack);
	_loge.error("=================================================\n\n");
});

var FacebookIP = require(_path.lib + "/IdentityProvider").facebook;
var TwitterIP = require(_path.lib + "/IdentityProvider").twitter;
var GoogleIP = require(_path.lib + "/IdentityProvider").google;

FacebookIP(app);
TwitterIP(app);
GoogleIP(app);

_immy.scanTypeHandler(_path.src + "/handler");
_immy.scanModel(_path.src + "/vo");
_immy.scanQuery(_path.resources + "/mybatis");

ModuleScanner.setLogger(_log);
ModuleScanner.scanRouter(_path.src + "/router");

DataBindModuleLoader.load(_path.src + "/module");

if(fs.existsSync(_path.content + "/frame/" + _config.frame + "/src/module"))
	DataBindModuleLoader.load(_path.content + "/frame/" + _config.frame + "/src/module");
if(fs.existsSync(_path.content + "/frame/" + _config.frame + "/src/router"))
	ModuleScanner.scanRouter(_path.content + "/frame/" + _config.frame + "/src/router");
if(fs.existsSync(_path.content + "/frame/" + _config.frame + "/src/service"))
	ServiceLoader.load(_path.content + "/frame/" + _config.frame + "/src/service");

PropertyLoader.load(__dirname); at SyntaxError: Invalid number (50:25)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
