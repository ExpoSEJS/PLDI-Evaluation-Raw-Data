/root/Targets/next-js
└── next-js@0.9.0-alpha 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/next-js/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 39% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0542 took 6.6657s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Assigning to arguments in strict mode (15:28) on program J$.iids = {"8":[4,9,4,17],"9":[1,20,1,27],"10":[7,24,7,37],"16":[7,9,7,20],"17":[1,28,1,32],"18":[7,24,7,50],"24":[7,9,7,50],"25":[1,20,1,33],"32":[7,9,7,50],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,7],"89":[4,9,4,17],"97":[5,9,5,11],"105":[5,18,5,19],"113":[5,21,5,29],"121":[5,9,5,30],"123":[5,9,5,17],"129":[5,9,5,31],"137":[7,9,7,10],"145":[7,14,7,20],"153":[7,31,7,37],"161":[7,42,7,50],"169":[9,19,9,25],"177":[10,13,10,14],"185":[10,15,10,16],"193":[10,20,10,26],"201":[10,27,10,28],"209":[10,20,10,29],"217":[10,13,10,29],"225":[10,13,10,30],"233":[9,19,9,25],"241":[9,9,11,10],"249":[9,9,11,10],"257":[13,12,13,13],"265":[13,12,13,13],"273":[13,5,13,14],"281":[3,18,14,2],"289":[3,18,14,2],"297":[3,18,14,2],"305":[3,18,14,2],"313":[3,18,14,2],"321":[3,18,14,2],"329":[3,18,14,2],"337":[3,18,14,2],"345":[3,18,14,2],"353":[3,1,14,2],"361":[3,1,14,3],"369":[1,1,14,3],"377":[1,1,14,3],"385":[1,1,14,3],"393":[4,5,6,6],"401":[7,5,12,6],"409":[3,18,14,2],"417":[3,18,14,2],"425":[1,1,14,3],"433":[1,1,14,3],"nBranches":8,"originalCodeFileName":"/root/Targets/next-js/node_modules/next-js/lib/nx/NX/apply.js","instrumentedCodeFileName":"/root/Targets/next-js/node_modules/next-js/lib/nx/NX/apply_jalangi_.js","code":"/* vim: set expandtab tabstop=4 shiftwidth=4 softtabstop=4: */\n\n/*!\n * Next JS\n *\n * Copyright (c)2012 Xenophy.CO.,LTD All rights Reserved.\n * http://www.xenophy.com\n */\n\n// {{{ NX.apply\n\n/**\n * @class NX\n */\n\n/**\n * @method apply\n *\n * 設定されたコンフィグオブジェクトをオブジェクトに全てコピーします。\n * Note:オブジェクトや配列に対して、再帰的なコピーを行わず、\n * クローンを作成してコピーする場合は、NX.Object.mergeを利用してください。\n *\n * @param o {Object} 適用されるオブジェクト\n * @param config {Object} 適用するオブジェクト\n * @param defaults {Object} 初期値として適用されるオブジェクト\n * @return {Object} 適用後のオブジェクト\n */\nmodule.exports = function(o, config, defaults) {\n\n    if(defaults) {\n        NX.apply(o, defaults);\n    }\n\n    if(o && config && typeof config === 'object') {\n\n        var i, j, k;\n\n        for(i in config) {\n            o[i] = config[i];\n        }\n\n    }\n\n    return o;\n};\n\n// }}}\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * c-hanging-comment-ender-p: nil\n * End:\n */\n"};
jalangiLabel49:
    while (true) {
        try {
            J$.Se(369, '/root/Targets/next-js/node_modules/next-js/lib/nx/NX/apply_jalangi_.js', '/root/Targets/next-js/node_modules/next-js/lib/nx/NX/apply.js');
            J$.N(377, '__secret__S$', __secret__S$, 0);
            J$.N(385, '__secret__traits__', __secret__traits__, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(361, J$.P(353, J$.R(81, 'module', module, 2), 'exports', J$.T(345, function (o, config, defaults) {
                jalangiLabel48:
                    while (true) {
                        try {
                            J$.Fe(281, arguments.callee, this, arguments);
                            arguments = J$.N(289, 'arguments', arguments, 4);
                            o = J$.N(297, 'o', o, 4);
                            config = J$.N(305, 'config', config, 4);
                            defaults = J$.N(313, 'defaults', defaults, 4);
                            J$.N(321, 'i', i, 0);
                            J$.N(329, 'j', j, 0);
                            J$.N(337, 'k', k, 0);
                            if (J$.X1(393, J$.C(8, J$.R(89, 'defaults', defaults, 0)))) {
                                J$.X1(129, J$.M(121, J$.R(97, 'NX', NX, 2), 'apply', 0)(J$.R(105, 'o', o, 0), J$.R(113, 'defaults', defaults, 0)));
                            }
                            if (J$.X1(401, J$.C(32, J$.C(24, J$.C(16, J$.R(137, 'o', o, 0)) ? J$.R(145, 'config', config, 0) : J$._()) ? J$.B(18, '===', J$.U(10, 'typeof', J$.R(153, 'config', config, 0)), J$.T(161, 'object', 21, false), 0) : J$._()))) {
                                var i, j, k;
                                for (J$._tm_p in J$.H(233, J$.R(169, 'config', config, 0))) {
                                    J$.X1(249, i = J$.W(241, 'i', J$._tm_p, i, 0));
                                    {
                                        {
                                            J$.X1(225, J$.P(217, J$.R(177, 'o', o, 0), J$.R(185, 'i', i, 0), J$.G(209, J$.R(193, 'config', config, 0), J$.R(201, 'i', i, 0), 4), 2));
                                        }
                                    }
                                }
                            }
                            return J$.X1(273, J$.Rt(265, J$.R(257, 'o', o, 0)));
                        } catch (J$e) {
                            J$.Ex(409, J$e);
                        } finally {
                            if (J$.Fr(417))
                                continue jalangiLabel48;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 281), 0));
        } catch (J$e) {
            J$.Ex(425, J$e);
        } finally {
            if (J$.Sr(433)) {
                J$.L();
                continue jalangiLabel49;
            } else {
                J$.L();
                break jalangiLabel49;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
 at SyntaxError: Assigning to arguments in strict mode (15:28)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.checkLVal (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1472:14)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1606:12)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:727:47)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$1.parseTryStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:897:23)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:702:31)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/next-js/node_modules/next-js/lib/nx/index.js. Coverage (Term): 28% Coverage (LOC): 33%
*- File /root/Targets/next-js/node_modules/next-js/lib/nx/NX/index.js. Coverage (Term): 86% Coverage (LOC): 94%
*- File /root/Targets/next-js/node_modules/next-js/lib/nx/NX/apply.js. Coverage (Term): 28% Coverage (LOC): 31%
*- File /root/Targets/next-js/node_modules/next-js/lib/nx/NX/applyIf.js. Coverage (Term): 35% Coverage (LOC): 33%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
