/root/Targets/re-dropdown
└─┬ re-dropdown@1.0.2 
  └─┬ react@15.6.2 
    ├── create-react-class@15.6.2 
    ├─┬ fbjs@0.8.16 
    │ ├── core-js@1.2.7 
    │ ├─┬ isomorphic-fetch@2.2.1 
    │ │ ├─┬ node-fetch@1.7.3 
    │ │ │ ├─┬ encoding@0.1.12 
    │ │ │ │ └── iconv-lite@0.4.19 
    │ │ │ └── is-stream@1.1.0 
    │ │ └── whatwg-fetch@2.0.3 
    │ ├─┬ promise@7.3.1 
    │ │ └── asap@2.0.6 
    │ ├── setimmediate@1.0.5 
    │ └── ua-parser-js@0.7.14 
    ├─┬ loose-envify@1.3.1 
    │ └── js-tokens@3.0.2 
    ├── object-assign@4.1.1 
    └── prop-types@15.6.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/re-dropdown/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.1377 took 6.6006s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (24:12) on program import React from "react";

class ReDropdown extends React.Component {

    constructor() {
        super();
        this.state = {
            isContentVisible: false,
            keepContentVisible: false
        };

        this.showContent = this.showContent.bind(this);
        this.hideContent = this.hideContent.bind(this);
        this.toggleContent = this.toggleContent.bind(this);
    }

    componentDidUpdate() {
        const { onChange } = this.props;
        onChange && typeof onChange === "function" && this.props.onChange(this.state.isContentVisible);
    }

    render() {
        return (
            <div
                tabIndex={ this.props.tabIndex }
                className={ this.props.className }
                onBlur={ () => !this.state.keepContentVisible && this.hideContent() }
                onClick={ this.toggleContent }
            >
                <div className={ this.props.triggerClassName }>
                    { this.props.triggerElement }
                </div>
                { this.renderContent() }
            </div>
        );
    }

    renderContent() {
        return this.state.isContentVisible && (
            <div
                className={ this.props.contentClassName }
                onMouseDown={ () => this.setState({ keepContentVisible: true }) }
            >
                { this.props.children }
            </div>
        );
    }

    showContent() {
        this.setState({ isContentVisible: true });
    }

    hideContent() {
        this.setState({ isContentVisible: false, keepContentVisible: false });
    }

    toggleContent() {
        this.state.isContentVisible ? this.hideContent() : this.showContent();
    }
}

ReDropdown.propTypes = {
    triggerElement: React.PropTypes.element.isRequired,
    onChange: React.PropTypes.func,
    className: React.PropTypes.string,
    triggerClassName: React.PropTypes.string,
    contentClassName: React.PropTypes.string,
    tabIndex: React.PropTypes.number,
};

ReDropdown.defaultProps = {
    className: "re-dropdown",
    triggerClassName: "re-dropdown__trigger",
    contentClassName: "re-dropdown__content",
    tabIndex: -1
};

export default ReDropdown; at SyntaxError: Unexpected token (24:12)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1822:12)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1597:21)
    at Parser.pp$3.parseParenAndDistinguishExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1861:32)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
