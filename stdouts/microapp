/root/Targets/microapp
└─┬ microapp@1.0.0-b2 
  ├─┬ cxs@2.1.0 
  │ ├── add-px-to-style@1.0.0 
  │ ├─┬ glamor@2.20.40 
  │ │ ├─┬ fbjs@0.8.16 
  │ │ │ ├── core-js@1.2.7 
  │ │ │ ├─┬ isomorphic-fetch@2.2.1 
  │ │ │ │ ├─┬ node-fetch@1.7.3 
  │ │ │ │ │ ├─┬ encoding@0.1.12 
  │ │ │ │ │ │ └── iconv-lite@0.4.19 
  │ │ │ │ │ └── is-stream@1.1.0 
  │ │ │ │ └── whatwg-fetch@2.0.3 
  │ │ │ ├─┬ loose-envify@1.3.1 
  │ │ │ │ └── js-tokens@3.0.2 
  │ │ │ ├─┬ promise@7.3.1 
  │ │ │ │ └── asap@2.0.6 
  │ │ │ ├── setimmediate@1.0.5 
  │ │ │ └── ua-parser-js@0.7.14 
  │ │ ├─┬ inline-style-prefixer@3.0.8 
  │ │ │ └── css-in-js-utils@2.0.0 
  │ │ ├── object-assign@4.1.1 
  │ │ ├── prop-types@15.6.0 
  │ │ └── through@2.3.8 
  │ └── murmurhash-js@1.0.0 
  ├─┬ hyp@1.0.0-beta.5 
  │ ├─┬ bel@4.6.0 
  │ │ ├─┬ global@4.3.2 
  │ │ │ ├─┬ min-document@2.19.0 
  │ │ │ │ └── dom-walk@0.1.1 
  │ │ │ └── process@0.5.2 
  │ │ └─┬ on-load@3.3.1 
  │ │   └── nanoassert@1.1.0 
  │ ├── classnames@2.2.5 
  │ └─┬ hyperx@2.3.1 
  │   └── hyperscript-attribute-to-property@1.0.0 
  ├─┬ inline-style-prefixer@2.0.5 
  │ ├── bowser@1.7.3 
  │ └── hyphenate-style-name@1.0.2 
  └─┬ yo-yo@1.4.1 
    └── morphdom@2.3.3 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/microapp/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0261 took 3.5418s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (5:7) on program 
import h, { cxs } from 'hyp'
import { update } from 'yo-yo'

export h from 'hyp'

const createStore = (reducer, listener = () => {}) => {
  let _ = reducer(undefined, {})
  return {
    get state(){ return _ },
    dispatch: (a) => {
      _ = reducer(_,a)
      listener()
    }
  }
}

const createApp = (reducer, renderer) => {
  const render = () => {
    const next = renderer(store)
    update(app, next)
  }

  const store = createStore(reducer, render)
  const app = renderer(store)

  app.mount = (el) => {
    el.appendChild(app)
  }

  app.store = store

  return app
}

export cxs from 'cxs'
export default createApp

 at SyntaxError: Unexpected token (5:7)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:28)
    at Parser.pp$1.parseExportSpecifiers (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1215:10)
    at Parser.pp$1.parseExport (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1186:30)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:719:71)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
    at Parser.parse (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:516:17)
    at Object.parse (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:3098:39)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
