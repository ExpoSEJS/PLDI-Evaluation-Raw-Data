
> git-pair@0.1.2 install /root/Targets/git-pair/node_modules/git-pair
> ./setup.js install

/root/Targets/git-pair
└─┬ git-pair@0.1.2 
  ├── async@0.9.0 
  └── lodash@3.5.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/git-pair/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0546 took 3.1983s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node

var async = require('async');
var childProcess = require('child_process');
var _ = require('lodash');
var handleError = require('./lib/handle-error');
var gitConfig = require('./lib/git-config');

// User types to set in git config
var types = ['user', 'author'];

// Run GIT with additional env variables
authorEnvVars(function(err, env) {
    childProcess.spawn('git', process.argv.slice(2), { stdio: 'inherit', env: env });
});

// Gets the environment variables for the author, if set
function authorEnvVars(next) {
    // Gets the installed scope for git-pair (global or local)
    gitConfig.get('git-pair.scope', handleError(next, function(scope) {
        if (scope !== 'global' && scope !== 'local') {
            return next('git-pair not installed correctly');
        }

        gitConfig.getUsers(scope, types, function(err, users) {
            if (users.length == 2) {
                return getLastAuthor(function(err, author) {
                    if (author === users[1].name) {
                        users = _(users).reverse().value();
                    }
                    var env = {
                        GIT_COMMITTER_NAME: users[0].name,
                        GIT_COMMITTER_EMAIL: users[0].email,
                        GIT_AUTHOR_NAME: users[1].name,
                        GIT_AUTHOR_EMAIL: users[1].email
                    };
                    return next(null, _.assign(env, process.env));
                });

            }
            next(null, process.env);
        });
    }));
}

// Gets the author of the last commit
function getLastAuthor(next) {
    childProcess.exec('git --no-pager show -s --format=\'%an\'', handleError(next, function(author) {
        next(null, author.trim());
    }));
}
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
