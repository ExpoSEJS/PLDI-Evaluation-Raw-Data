/root/Targets/ember-svg-jar
└─┬ ember-svg-jar@0.11.1 
  ├─┬ broccoli-caching-writer@2.3.1 
  │ ├─┬ broccoli-kitchen-sink-helpers@0.2.9 
  │ │ └─┬ glob@5.0.15 
  │ │   ├─┬ inflight@1.0.6 
  │ │   │ └── wrappy@1.0.2 
  │ │   ├── inherits@2.0.3 
  │ │   ├── once@1.4.0 
  │ │   └── path-is-absolute@1.0.1 
  │ ├─┬ broccoli-plugin@1.1.0 
  │ │ ├── promise-map-series@0.2.3 
  │ │ └─┬ quick-temp@0.1.8 
  │ │   ├── mktemp@0.4.0 
  │ │   └─┬ underscore.string@3.3.4 
  │ │     ├── sprintf-js@1.1.1 
  │ │     └── util-deprecate@1.0.2 
  │ ├─┬ debug@2.6.8 
  │ │ └── ms@2.0.0 
  │ ├─┬ rimraf@2.6.2 
  │ │ └─┬ glob@7.1.2 
  │ │   └── fs.realpath@1.0.0 
  │ ├── rsvp@3.6.2 
  │ └─┬ walk-sync@0.2.7 
  │   ├── ensure-posix-path@1.0.2 
  │   └── matcher-collection@1.0.5 
  ├─┬ broccoli-funnel@1.2.0 
  │ ├── array-equal@1.0.0 
  │ ├── blank-object@1.0.2 
  │ ├── broccoli-plugin@1.3.0 
  │ ├── exists-sync@0.0.4 
  │ ├── fast-ordered-set@1.0.3 
  │ ├─┬ fs-tree-diff@0.5.6 
  │ │ └── object-assign@4.1.1 
  │ ├─┬ heimdalljs@0.2.5 
  │ │ └── rsvp@3.2.1 
  │ ├─┬ minimatch@3.0.4 
  │ │ └─┬ brace-expansion@1.1.8 
  │ │   ├── balanced-match@1.0.0 
  │ │   └── concat-map@0.0.1 
  │ ├── symlink-or-copy@1.1.8 
  │ └── walk-sync@0.3.2 
  ├─┬ broccoli-merge-trees@1.2.4 
  │ ├── broccoli-plugin@1.3.0 
  │ ├─┬ can-symlink@1.0.0 
  │ │ └─┬ tmp@0.0.28 
  │ │   └── os-tmpdir@1.0.2 
  │ └── heimdalljs-logger@0.1.9 
  ├─┬ broccoli-string-replace@0.1.2 
  │ └─┬ broccoli-persistent-filter@1.4.3 
  │   ├─┬ async-disk-cache@1.3.2 
  │   │ ├─┬ istextorbinary@2.1.0 
  │   │ │ ├── binaryextensions@2.0.0 
  │   │ │ ├── editions@1.3.3 
  │   │ │ └── textextensions@2.1.0 
  │   │ └── username-sync@1.0.1 
  │   ├─┬ async-promise-queue@1.0.4 
  │   │ └── async@2.5.0 
  │   ├─┬ hash-for-dep@1.2.0 
  │   │ └── broccoli-kitchen-sink-helpers@0.3.1 
  │   └── walk-sync@0.3.2 
  ├─┬ broccoli-svg-optimizer@1.0.2 
  │ ├─┬ json-stable-stringify@1.0.1 
  │ │ └── jsonify@0.0.0 
  │ └─┬ svgo@0.6.6 
  │   ├─┬ coa@1.0.4 
  │   │ └── q@1.5.0 
  │   ├── colors@1.1.2 
  │   ├─┬ csso@2.0.0 
  │   │ ├── clap@1.2.3 
  │   │ └── source-map@0.5.7 
  │   ├─┬ js-yaml@3.6.1 
  │   │ ├─┬ argparse@1.0.9 
  │   │ │ └── sprintf-js@1.0.3 
  │   │ └── esprima@2.7.3 
  │   ├── sax@1.2.4 
  │   └── whet.extend@0.9.9 
  ├─┬ broccoli-symbolizer@0.5.0 
  │ └─┬ broccoli-concat@2.3.8 
  │   ├── broccoli-kitchen-sink-helpers@0.3.1 
  │   ├─┬ broccoli-stew@1.5.0 
  │   │ ├── broccoli-plugin@1.3.0 
  │   │ ├─┬ chalk@1.1.3 
  │   │ │ ├── ansi-styles@2.2.1 
  │   │ │ ├── escape-string-regexp@1.0.5 
  │   │ │ ├─┬ has-ansi@2.0.0 
  │   │ │ │ └── ansi-regex@2.1.1 
  │   │ │ ├── strip-ansi@3.0.1 
  │   │ │ └── supports-color@2.0.0 
  │   │ ├── fs-extra@2.1.2 
  │   │ └── walk-sync@0.3.2 
  │   ├─┬ fast-sourcemap-concat@1.2.3 
  │   │ ├─┬ chalk@0.5.1 
  │   │ │ ├── ansi-styles@1.1.0 
  │   │ │ ├─┬ has-ansi@0.1.0 
  │   │ │ │ └── ansi-regex@0.2.1 
  │   │ │ ├── strip-ansi@0.3.0 
  │   │ │ └── supports-color@0.2.0 
  │   │ ├─┬ memory-streams@0.1.2 
  │   │ │ └── readable-stream@1.0.34 
  │   │ ├─┬ source-map@0.4.4 
  │   │ │ └── amdefine@1.0.1 
  │   │ ├── source-map-url@0.3.0 
  │   │ └─┬ sourcemap-validator@1.0.5 
  │   │   ├── jsesc@0.3.0 
  │   │   ├─┬ lodash.foreach@2.3.0 
  │   │   │ ├─┬ lodash._basecreatecallback@2.3.0 
  │   │   │ │ ├─┬ lodash._setbinddata@2.3.0 
  │   │   │ │ │ └── lodash.noop@2.3.0 
  │   │   │ │ ├─┬ lodash.bind@2.3.0 
  │   │   │ │ │ ├─┬ lodash._createwrapper@2.3.0 
  │   │   │ │ │ │ ├─┬ lodash._basebind@2.3.0 
  │   │   │ │ │ │ │ └── lodash._basecreate@2.3.0 
  │   │   │ │ │ │ ├── lodash._basecreatewrapper@2.3.0 
  │   │   │ │ │ │ └── lodash.isfunction@2.3.0 
  │   │   │ │ │ └── lodash._slice@2.3.0 
  │   │   │ │ ├── lodash.identity@2.3.0 
  │   │   │ │ └── lodash.support@2.3.0 
  │   │   │ └─┬ lodash.forown@2.3.0 
  │   │   │   └── lodash._objecttypes@2.3.0 
  │   │   ├─┬ lodash.template@2.3.0 
  │   │   │ ├── lodash._escapestringchar@2.3.0 
  │   │   │ ├── lodash._reinterpolate@2.3.0 
  │   │   │ ├── lodash.defaults@2.3.0 
  │   │   │ ├─┬ lodash.escape@2.3.0 
  │   │   │ │ ├─┬ lodash._escapehtmlchar@2.3.0 
  │   │   │ │ │ └── lodash._htmlescapes@2.3.0 
  │   │   │ │ └── lodash._reunescapedhtml@2.3.0 
  │   │   │ ├─┬ lodash.keys@2.3.0 
  │   │   │ │ ├── lodash._renative@2.3.0 
  │   │   │ │ ├── lodash._shimkeys@2.3.0 
  │   │   │ │ └── lodash.isobject@2.3.0 
  │   │   │ ├── lodash.templatesettings@2.3.0 
  │   │   │ └── lodash.values@2.3.0 
  │   │   └── source-map@0.1.43 
  │   ├─┬ fs-extra@0.30.0 
  │   │ ├── graceful-fs@4.1.11 
  │   │ ├── jsonfile@2.4.0 
  │   │ └── klaw@1.3.1 
  │   ├── lodash.merge@4.6.0 
  │   ├── lodash.omit@4.5.0 
  │   └── lodash.uniq@4.5.0 
  ├─┬ cheerio@0.20.0 
  │ ├─┬ css-select@1.2.0 
  │ │ ├── boolbase@1.0.0 
  │ │ ├── css-what@2.1.0 
  │ │ ├── domutils@1.5.1 
  │ │ └── nth-check@1.0.1 
  │ ├─┬ dom-serializer@0.1.0 
  │ │ └── domelementtype@1.1.3 
  │ ├── entities@1.1.1 
  │ ├─┬ htmlparser2@3.8.3 
  │ │ ├── domelementtype@1.3.0 
  │ │ ├── domhandler@2.3.0 
  │ │ ├── entities@1.0.0 
  │ │ └─┬ readable-stream@1.1.14 
  │ │   ├── core-util-is@1.0.2 
  │ │   ├── isarray@0.0.1 
  │ │   └── string_decoder@0.10.31 
  │ └─┬ jsdom@7.2.2 
  │   ├── abab@1.0.4 
  │   ├── acorn@2.7.0 
  │   ├── acorn-globals@1.0.9 
  │   ├── cssom@0.3.2 
  │   ├── cssstyle@0.2.37 
  │   ├─┬ escodegen@1.9.0 
  │   │ ├── esprima@3.1.3 
  │   │ ├── estraverse@4.2.0 
  │   │ ├── esutils@2.0.2 
  │   │ └─┬ optionator@0.8.2 
  │   │   ├── deep-is@0.1.3 
  │   │   ├── fast-levenshtein@2.0.6 
  │   │   ├── levn@0.3.0 
  │   │   ├── prelude-ls@1.1.2 
  │   │   ├── type-check@0.3.2 
  │   │   └── wordwrap@1.0.0 
  │   ├── nwmatcher@1.4.1 
  │   ├── parse5@1.5.1 
  │   ├─┬ request@2.82.0 
  │   │ ├── aws-sign2@0.7.0 
  │   │ ├── aws4@1.6.0 
  │   │ ├── caseless@0.12.0 
  │   │ ├─┬ combined-stream@1.0.5 
  │   │ │ └── delayed-stream@1.0.0 
  │   │ ├── extend@3.0.1 
  │   │ ├── forever-agent@0.6.1 
  │   │ ├─┬ form-data@2.3.1 
  │   │ │ └── asynckit@0.4.0 
  │   │ ├─┬ har-validator@5.0.3 
  │   │ │ ├─┬ ajv@5.2.2 
  │   │ │ │ ├── co@4.6.0 
  │   │ │ │ ├── fast-deep-equal@1.0.0 
  │   │ │ │ └── json-schema-traverse@0.3.1 
  │   │ │ └── har-schema@2.0.0 
  │   │ ├─┬ hawk@6.0.2 
  │   │ │ ├── boom@4.3.1 
  │   │ │ ├─┬ cryptiles@3.1.2 
  │   │ │ │ └── boom@5.2.0 
  │   │ │ ├── hoek@4.2.0 
  │   │ │ └── sntp@2.0.2 
  │   │ ├─┬ http-signature@1.2.0 
  │   │ │ ├── assert-plus@1.0.0 
  │   │ │ ├─┬ jsprim@1.4.1 
  │   │ │ │ ├── extsprintf@1.3.0 
  │   │ │ │ ├── json-schema@0.2.3 
  │   │ │ │ └── verror@1.10.0 
  │   │ │ └─┬ sshpk@1.13.1 
  │   │ │   ├── asn1@0.2.3 
  │   │ │   ├── bcrypt-pbkdf@1.0.1 
  │   │ │   ├── dashdash@1.14.1 
  │   │ │   ├── ecc-jsbn@0.1.1 
  │   │ │   ├── getpass@0.1.7 
  │   │ │   ├── jsbn@0.1.1 
  │   │ │   └── tweetnacl@0.14.5 
  │   │ ├── is-typedarray@1.0.0 
  │   │ ├── isstream@0.1.2 
  │   │ ├── json-stringify-safe@5.0.1 
  │   │ ├─┬ mime-types@2.1.17 
  │   │ │ └── mime-db@1.30.0 
  │   │ ├── oauth-sign@0.8.2 
  │   │ ├── performance-now@2.1.0 
  │   │ ├── qs@6.5.1 
  │   │ ├── safe-buffer@5.1.1 
  │   │ ├── stringstream@0.0.5 
  │   │ ├── tunnel-agent@0.6.0 
  │   │ └── uuid@3.1.0 
  │   ├── symbol-tree@3.2.2 
  │   ├─┬ tough-cookie@2.3.2 
  │   │ └── punycode@1.4.1 
  │   ├── webidl-conversions@2.0.1 
  │   ├─┬ whatwg-url-compat@0.6.5 
  │   │ └── tr46@0.0.3 
  │   └── xml-name-validator@2.0.1 
  ├─┬ ember-cli-babel@6.8.2 
  │ ├── amd-name-resolver@0.0.7 
  │ ├─┬ babel-plugin-debug-macros@0.1.11 
  │ │ └── semver@5.4.1 
  │ ├─┬ babel-plugin-ember-modules-api-polyfill@2.0.1 
  │ │ └── ember-rfc176-data@0.2.7 
  │ ├─┬ babel-plugin-transform-es2015-modules-amd@6.24.1 
  │ │ ├─┬ babel-plugin-transform-es2015-modules-commonjs@6.26.0 
  │ │ │ ├── babel-plugin-transform-strict-mode@6.24.1 
  │ │ │ └─┬ babel-types@6.26.0 
  │ │ │   └── to-fast-properties@1.0.3 
  │ │ ├─┬ babel-runtime@6.26.0 
  │ │ │ └── regenerator-runtime@0.11.0 
  │ │ └─┬ babel-template@6.26.0 
  │ │   ├─┬ babel-traverse@6.26.0 
  │ │   │ └── globals@9.18.0 
  │ │   └── babylon@6.18.0 
  │ ├─┬ babel-polyfill@6.26.0 
  │ │ ├── core-js@2.5.1 
  │ │ └── regenerator-runtime@0.10.5 
  │ ├─┬ babel-preset-env@1.6.0 
  │ │ ├── babel-plugin-check-es2015-constants@6.22.0 
  │ │ ├── babel-plugin-syntax-trailing-function-commas@6.22.0 
  │ │ ├─┬ babel-plugin-transform-async-to-generator@6.24.1 
  │ │ │ ├── babel-helper-remap-async-to-generator@6.24.1 
  │ │ │ └── babel-plugin-syntax-async-functions@6.13.0 
  │ │ ├── babel-plugin-transform-es2015-arrow-functions@6.22.0 
  │ │ ├── babel-plugin-transform-es2015-block-scoped-functions@6.22.0 
  │ │ ├── babel-plugin-transform-es2015-block-scoping@6.26.0 
  │ │ ├─┬ babel-plugin-transform-es2015-classes@6.24.1 
  │ │ │ ├── babel-helper-define-map@6.26.0 
  │ │ │ ├── babel-helper-function-name@6.24.1 
  │ │ │ ├── babel-helper-optimise-call-expression@6.24.1 
  │ │ │ ├── babel-helper-replace-supers@6.24.1 
  │ │ │ └── babel-messages@6.23.0 
  │ │ ├── babel-plugin-transform-es2015-computed-properties@6.24.1 
  │ │ ├── babel-plugin-transform-es2015-destructuring@6.23.0 
  │ │ ├── babel-plugin-transform-es2015-duplicate-keys@6.24.1 
  │ │ ├── babel-plugin-transform-es2015-for-of@6.23.0 
  │ │ ├── babel-plugin-transform-es2015-function-name@6.24.1 
  │ │ ├── babel-plugin-transform-es2015-literals@6.22.0 
  │ │ ├─┬ babel-plugin-transform-es2015-modules-systemjs@6.24.1 
  │ │ │ └── babel-helper-hoist-variables@6.24.1 
  │ │ ├── babel-plugin-transform-es2015-modules-umd@6.24.1 
  │ │ ├── babel-plugin-transform-es2015-object-super@6.24.1 
  │ │ ├─┬ babel-plugin-transform-es2015-parameters@6.24.1 
  │ │ │ ├── babel-helper-call-delegate@6.24.1 
  │ │ │ └── babel-helper-get-function-arity@6.24.1 
  │ │ ├── babel-plugin-transform-es2015-shorthand-properties@6.24.1 
  │ │ ├── babel-plugin-transform-es2015-spread@6.22.0 
  │ │ ├─┬ babel-plugin-transform-es2015-sticky-regex@6.24.1 
  │ │ │ └── babel-helper-regex@6.26.0 
  │ │ ├── babel-plugin-transform-es2015-template-literals@6.22.0 
  │ │ ├── babel-plugin-transform-es2015-typeof-symbol@6.23.0 
  │ │ ├─┬ babel-plugin-transform-es2015-unicode-regex@6.24.1 
  │ │ │ └─┬ regexpu-core@2.0.0 
  │ │ │   ├── regenerate@1.3.3 
  │ │ │   ├── regjsgen@0.2.0 
  │ │ │   └─┬ regjsparser@0.1.5 
  │ │ │     └── jsesc@0.5.0 
  │ │ ├─┬ babel-plugin-transform-exponentiation-operator@6.24.1 
  │ │ │ ├─┬ babel-helper-builder-binary-assignment-operator-visitor@6.24.1 
  │ │ │ │ └── babel-helper-explode-assignable-expression@6.24.1 
  │ │ │ └── babel-plugin-syntax-exponentiation-operator@6.13.0 
  │ │ ├─┬ babel-plugin-transform-regenerator@6.26.0 
  │ │ │ └── regenerator-transform@0.10.1 
  │ │ ├─┬ browserslist@2.4.0 
  │ │ │ ├── caniuse-lite@1.0.30000733 
  │ │ │ └── electron-to-chromium@1.3.21 
  │ │ └─┬ invariant@2.2.2 
  │ │   └─┬ loose-envify@1.3.1 
  │ │     └── js-tokens@3.0.2 
  │ ├─┬ broccoli-babel-transpiler@6.1.2 
  │ │ ├─┬ babel-core@6.26.0 
  │ │ │ ├── babel-code-frame@6.26.0 
  │ │ │ ├─┬ babel-generator@6.26.0 
  │ │ │ │ ├─┬ detect-indent@4.0.0 
  │ │ │ │ │ └─┬ repeating@2.0.1 
  │ │ │ │ │   └─┬ is-finite@1.0.2 
  │ │ │ │ │     └── number-is-nan@1.0.1 
  │ │ │ │ ├── jsesc@1.3.0 
  │ │ │ │ └── trim-right@1.0.1 
  │ │ │ ├── babel-helpers@6.24.1 
  │ │ │ ├─┬ babel-register@6.26.0 
  │ │ │ │ ├─┬ home-or-tmp@2.0.0 
  │ │ │ │ │ └── os-homedir@1.0.2 
  │ │ │ │ └── source-map-support@0.4.18 
  │ │ │ ├── convert-source-map@1.5.0 
  │ │ │ ├── json5@0.5.1 
  │ │ │ ├── private@0.1.7 
  │ │ │ └── slash@1.0.0 
  │ │ └── workerpool@2.2.4 
  │ ├─┬ broccoli-debug@0.6.3 
  │ │ ├── broccoli-plugin@1.3.0 
  │ │ └── tree-sync@1.2.2 
  │ ├── broccoli-source@1.1.0 
  │ ├── clone@2.1.1 
  │ └─┬ ember-cli-version-checker@2.0.0 
  │   └─┬ resolve@1.4.0 
  │     └── path-parse@1.0.5 
  ├── lodash@4.17.4 
  ├─┬ mkdirp@0.5.1 
  │ └── minimist@0.0.8 
  └── path-posix@1.0.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/ember-svg-jar/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 32% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","call","RegExp","join","binding","Object","WeakMap","create","Set","Array","ArrayBuffer","DataView","Map","resolve","max","now","apply","parseInt","random","reduce","freeze","getOwnPropertyNames","fromCharCode","assign","isArray"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.07 took 53.7537s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (4:4) on program module.exports = rimraf
rimraf.sync = rimrafSync

var assert = require("assert")
var path = require("path")
var fs = require("fs")
var glob = require("glob")
var _0666 = parseInt('666', 8)

var defaultGlobOpts = {
  nosort: true,
  silent: true
}

// for EMFILE handling
var timeout = 0

var isWindows = (process.platform === "win32")

function defaults (options) {
  var methods = [
    'unlink',
    'chmod',
    'stat',
    'lstat',
    'rmdir',
    'readdir'
  ]
  methods.forEach(function(m) {
    options[m] = options[m] || fs[m]
    m = m + 'Sync'
    options[m] = options[m] || fs[m]
  })

  options.maxBusyTries = options.maxBusyTries || 3
  options.emfileWait = options.emfileWait || 1000
  if (options.glob === false) {
    options.disableGlob = true
  }
  options.disableGlob = options.disableGlob || false
  options.glob = options.glob || defaultGlobOpts
}

function rimraf (p, options, cb) {
  if (typeof options === 'function') {
    cb = options
    options = {}
  }

  assert(p, 'rimraf: missing path')
  assert.equal(typeof p, 'string', 'rimraf: path should be a string')
  assert.equal(typeof cb, 'function', 'rimraf: callback function required')
  assert(options, 'rimraf: invalid options argument provided')
  assert.equal(typeof options, 'object', 'rimraf: options should be object')

  defaults(options)

  var busyTries = 0
  var errState = null
  var n = 0

  if (options.disableGlob || !glob.hasMagic(p))
    return afterGlob(null, [p])

  options.lstat(p, function (er, stat) {
    if (!er)
      return afterGlob(null, [p])

    glob(p, options.glob, afterGlob)
  })

  function next (er) {
    errState = errState || er
    if (--n === 0)
      cb(errState)
  }

  function afterGlob (er, results) {
    if (er)
      return cb(er)

    n = results.length
    if (n === 0)
      return cb()

    results.forEach(function (p) {
      rimraf_(p, options, function CB (er) {
        if (er) {
          if ((er.code === "EBUSY" || er.code === "ENOTEMPTY" || er.code === "EPERM") &&
              busyTries < options.maxBusyTries) {
            busyTries ++
            var time = busyTries * 100
            // try again, with the same exact callback as this one.
            return setTimeout(function () {
              rimraf_(p, options, CB)
            }, time)
          }

          // this one won't happen if graceful-fs is used.
          if (er.code === "EMFILE" && timeout < options.emfileWait) {
            return setTimeout(function () {
              rimraf_(p, options, CB)
            }, timeout ++)
          }

          // already gone
          if (er.code === "ENOENT") er = null
        }

        timeout = 0
        next(er)
      })
    })
  }
}

// Two possible strategies.
// 1. Assume it's a file.  unlink it, then do the dir stuff on EPERM or EISDIR
// 2. Assume it's a directory.  readdir, then do the file stuff on ENOTDIR
//
// Both result in an extra syscall when you guess wrong.  However, there
// are likely far more normal files in the world than directories.  This
// is based on the assumption that a the average number of files per
// directory is >= 1.
//
// If anyone ever complains about this, then I guess the strategy could
// be made configurable somehow.  But until then, YAGNI.
function rimraf_ (p, options, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')

  // sunos lets the root user unlink directories, which is... weird.
  // so we have to lstat here and make sure it's not a dir.
  options.lstat(p, function (er, st) {
    if (er && er.code === "ENOENT")
      return cb(null)

    // Windows can EPERM on stat.  Life is suffering.
    if (er && er.code === "EPERM" && isWindows)
      fixWinEPERM(p, options, er, cb)

    if (st && st.isDirectory())
      return rmdir(p, options, er, cb)

    options.unlink(p, function (er) {
      if (er) {
        if (er.code === "ENOENT")
          return cb(null)
        if (er.code === "EPERM")
          return (isWindows)
            ? fixWinEPERM(p, options, er, cb)
            : rmdir(p, options, er, cb)
        if (er.code === "EISDIR")
          return rmdir(p, options, er, cb)
      }
      return cb(er)
    })
  })
}

function fixWinEPERM (p, options, er, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')
  if (er)
    assert(er instanceof Error)

  options.chmod(p, _0666, function (er2) {
    if (er2)
      cb(er2.code === "ENOENT" ? null : er)
    else
      options.stat(p, function(er3, stats) {
        if (er3)
          cb(er3.code === "ENOENT" ? null : er)
        else if (stats.isDirectory())
          rmdir(p, options, er, cb)
        else
          options.unlink(p, cb)
      })
  })
}

function fixWinEPERMSync (p, options, er) {
  assert(p)
  assert(options)
  if (er)
    assert(er instanceof Error)

  try {
    options.chmodSync(p, _0666)
  } catch (er2) {
    if (er2.code === "ENOENT")
      return
    else
      throw er
  }

  try {
    var stats = options.statSync(p)
  } catch (er3) {
    if (er3.code === "ENOENT")
      return
    else
      throw er
  }

  if (stats.isDirectory())
    rmdirSync(p, options, er)
  else
    options.unlinkSync(p)
}

function rmdir (p, options, originalEr, cb) {
  assert(p)
  assert(options)
  if (originalEr)
    assert(originalEr instanceof Error)
  assert(typeof cb === 'function')

  // try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS)
  // if we guessed wrong, and it's not a directory, then
  // raise the original error.
  options.rmdir(p, function (er) {
    if (er && (er.code === "ENOTEMPTY" || er.code === "EEXIST" || er.code === "EPERM"))
      rmkids(p, options, cb)
    else if (er && er.code === "ENOTDIR")
      cb(originalEr)
    else
      cb(er)
  })
}

function rmkids(p, options, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')

  options.readdir(p, function (er, files) {
    if (er)
      return cb(er)
    var n = files.length
    if (n === 0)
      return options.rmdir(p, cb)
    var errState
    files.forEach(function (f) {
      rimraf(path.join(p, f), options, function (er) {
        if (errState)
          return
        if (er)
          return cb(errState = er)
        if (--n === 0)
          options.rmdir(p, cb)
      })
    })
  })
}

// this looks simpler, and is strictly *faster*, but will
// tie up the JavaScript thread and fail on excessively
// deep directory trees.
function rimrafSync (p, options) {
  options = options || {}
  defaults(options)

  assert(p, 'rimraf: missing path')
  assert.equal(typeof p, 'string', 'rimraf: path should be a string')
  assert(options, 'rimraf: missing options')
  assert.equal(typeof options, 'object', 'rimraf: options should be object')

  var results

  if (options.disableGlob || !glob.hasMagic(p)) {
    results = [p]
  } else {
    try {
      options.lstatSync(p)
      results = [p]
    } catch (er) {
      results = glob.sync(p, options.glob)
    }
  }

  if (!results.length)
    return

  for (var i = 0; i < results.length; i++) {
    var p = results[i]

    try {
      var st = options.lstatSync(p)
    } catch (er) {
      if (er.code === "ENOENT")
        return

      // Windows can EPERM on stat.  Life is suffering.
      if (er.code === "EPERM" && isWindows)
        fixWinEPERMSync(p, options, er)
    }

    try {
      // sunos lets the root user unlink directories, which is... weird.
      if (st && st.isDirectory())
        rmdirSync(p, options, null)
      else
        options.unlinkSync(p)
    } catch (er) {
      if (er.code === "ENOENT")
        return
      if (er.code === "EPERM")
        return isWindows ? fixWinEPERMSync(p, options, er) : rmdirSync(p, options, er)
      if (er.code !== "EISDIR")
        throw er

      rmdirSync(p, options, er)
    }
  }
}

function rmdirSync (p, options, originalEr) {
  assert(p)
  assert(options)
  if (originalEr)
    assert(originalEr instanceof Error)

  try {
    options.rmdirSync(p)
  } catch (er) {
    if (er.code === "ENOENT")
      return
    if (er.code === "ENOTDIR")
      throw originalEr
    if (er.code === "ENOTEMPTY" || er.code === "EEXIST" || er.code === "EPERM")
      rmkidsSync(p, options)
  }
}

function rmkidsSync (p, options) {
  assert(p)
  assert(options)
  options.readdirSync(p).forEach(function (f) {
    rimrafSync(path.join(p, f), options)
  })

  // We only end up here once we got ENOTEMPTY at least once, and
  // at this point, we are guaranteed to have removed all the kids.
  // So, we know that it won't be ENOENT or ENOTDIR or anything else.
  // try really hard to delete stuff on windows, because it has a
  // PROFOUNDLY annoying habit of not closing handles promptly when
  // files are deleted, resulting in spurious ENOTEMPTY errors.
  var retries = isWindows ? 100 : 1
  var i = 0
  do {
    var threw = true
    try {
      var ret = options.rmdirSync(p, options)
      threw = false
      return ret
    } finally {
      if (++i < retries && threw)
        continue
    }
  } while (true)
}
 at SyntaxError: Unexpected token (4:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/ember-svg-jar/node_modules/ember-svg-jar/index.js. Coverage (Term): 80% Coverage (LOC): 100%
*- File /root/Targets/ember-svg-jar/node_modules/ember-svg-jar/lib/index.js. Coverage (Term): 6% Coverage (LOC): 6%
*- File /root/Targets/ember-svg-jar/node_modules/lodash/lodash.js. Coverage (Term): 22% Coverage (LOC): 35%
*- File /root/Targets/ember-svg-jar/node_modules/broccoli-funnel/index.js. Coverage (Term): 5% Coverage (LOC): 6%
*- File /root/Targets/ember-svg-jar/node_modules/path-posix/index.js. Coverage (Term): 10% Coverage (LOC): 21%
*- File /root/Targets/ember-svg-jar/node_modules/mkdirp/index.js. Coverage (Term): 14% Coverage (LOC): 13%
*- File /root/Targets/ember-svg-jar/node_modules/broccoli-funnel/node_modules/walk-sync/index.js. Coverage (Term): 13% Coverage (LOC): 20%
*- File /root/Targets/ember-svg-jar/node_modules/matcher-collection/index.js. Coverage (Term): 22% Coverage (LOC): 34%
*- File /root/Targets/ember-svg-jar/node_modules/minimatch/minimatch.js. Coverage (Term): 8% Coverage (LOC): 13%
*- File /root/Targets/ember-svg-jar/node_modules/brace-expansion/index.js. Coverage (Term): 12% Coverage (LOC): 17%
*- File /root/Targets/ember-svg-jar/node_modules/concat-map/index.js. Coverage (Term): 24% Coverage (LOC): 40%
*- File /root/Targets/ember-svg-jar/node_modules/balanced-match/index.js. Coverage (Term): 11% Coverage (LOC): 15%
*- File /root/Targets/ember-svg-jar/node_modules/ensure-posix-path/index.js. Coverage (Term): 47% Coverage (LOC): 56%
*- File /root/Targets/ember-svg-jar/node_modules/array-equal/index.js. Coverage (Term): 25% Coverage (LOC): 36%
*- File /root/Targets/ember-svg-jar/node_modules/broccoli-funnel/node_modules/broccoli-plugin/index.js. Coverage (Term): 15% Coverage (LOC): 28%
*- File /root/Targets/ember-svg-jar/node_modules/symlink-or-copy/index.js. Coverage (Term): 25% Coverage (LOC): 34%
*- File /root/Targets/ember-svg-jar/node_modules/debug/src/index.js. Coverage (Term): 81% Coverage (LOC): 83%
*- File /root/Targets/ember-svg-jar/node_modules/debug/src/node.js. Coverage (Term): 29% Coverage (LOC): 39%
*- File /root/Targets/ember-svg-jar/node_modules/debug/src/debug.js. Coverage (Term): 29% Coverage (LOC): 33%
*- File /root/Targets/ember-svg-jar/node_modules/ms/index.js. Coverage (Term): 12% Coverage (LOC): 15%
*- File /root/Targets/ember-svg-jar/node_modules/fs-tree-diff/lib/index.js. Coverage (Term): 16% Coverage (LOC): 26%
*- File /root/Targets/ember-svg-jar/node_modules/object-assign/index.js. Coverage (Term): 54% Coverage (LOC): 53%
*- File /root/Targets/ember-svg-jar/node_modules/fs-tree-diff/lib/entry.js. Coverage (Term): 25% Coverage (LOC): 45%
*- File /root/Targets/ember-svg-jar/node_modules/heimdalljs-logger/dist/index.js. Coverage (Term): 30% Coverage (LOC): 51%
*- File /root/Targets/ember-svg-jar/node_modules/heimdalljs/dist/heimdalljs.cjs.js. Coverage (Term): 46% Coverage (LOC): 65%
*- File /root/Targets/ember-svg-jar/node_modules/heimdalljs/node_modules/rsvp/dist/rsvp.js. Coverage (Term): 17% Coverage (LOC): 27%
*- File /root/Targets/ember-svg-jar/node_modules/fs-tree-diff/lib/util.js. Coverage (Term): 10% Coverage (LOC): 22%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
