/root/Targets/examplecode
├─┬ examplecode@1.0.0 
│ ├── classnames@2.2.5 
│ ├── es6-promise@2.3.0 
│ ├── object-assign@2.1.1 
│ ├── UNMET PEER DEPENDENCY react@>=0.13.0
│ ├── uxcore-radiogroup@1.0.0 
│ └── uxcore-select@1.0.0 
└── UNMET PEER DEPENDENCY react@>=0.13.0

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/examplecode/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0942 took 6.5323s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (41:3) on program /* global Prism */
// thanks http://elemental-ui.com
import React from 'react';
import classNames from 'classnames';


let ExampleCode = React.createClass({
	propTypes: {
		children: React.PropTypes.string.isRequired
	},
	getDefaultProps () {
		return {
			language: 'markup'
		}
	},
	componentDidMount () {
		this.highlight();
	},
	componentDidUpdate () {
		this.highlight();
	},
	highlight () {
		Prism.highlightElement(this.refs.code.getDOMNode(), true);
	},
	fixIndentation (children) {
		if (typeof children !== 'string') return children;
		var lines = children.split('\n').filter(l => l);
		if (!lines.length) return children;
		var indent = /^\t+/.exec(lines[0]);
		if (indent) {
			indent = indent[0].length;
			lines = lines.map(s => s.substr(indent));
		}
		return lines.join('\n');
	},
	render () {
		var codeClass = classNames('code-example__code', (
			'language-' + this.props.language
		));
		return (
			<pre className="code-example__pre">
				<code ref="code" className={codeClass}>
					{this.fixIndentation(this.props.children)}
				</code>
			</pre>
		);
	}
});

module.exports = ExampleCode;
 at SyntaxError: Unexpected token (41:3)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1822:12)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1597:21)
    at Parser.pp$3.parseParenAndDistinguishExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1861:32)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
