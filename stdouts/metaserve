/root/Targets/metaserve
└─┬ metaserve@0.7.1 
  ├─┬ express@3.21.2 
  │ ├── basic-auth@1.0.4 
  │ ├── commander@2.6.0 
  │ ├─┬ connect@2.30.2 
  │ │ ├── basic-auth-connect@1.0.0 
  │ │ ├─┬ body-parser@1.13.3 
  │ │ │ ├── iconv-lite@0.4.11 
  │ │ │ └─┬ raw-body@2.1.7 
  │ │ │   ├── bytes@2.4.0 
  │ │ │   └── iconv-lite@0.4.13 
  │ │ ├── bytes@2.1.0 
  │ │ ├─┬ compression@1.5.2 
  │ │ │ ├─┬ accepts@1.2.13 
  │ │ │ │ └── negotiator@0.5.3 
  │ │ │ └─┬ compressible@2.0.11 
  │ │ │   └── mime-db@1.30.0 
  │ │ ├── connect-timeout@1.6.2 
  │ │ ├── cookie-parser@1.3.5 
  │ │ ├─┬ csurf@1.8.3 
  │ │ │ └─┬ csrf@3.0.6 
  │ │ │   ├── rndm@1.2.0 
  │ │ │   ├── tsscmp@1.0.5 
  │ │ │   └─┬ uid-safe@2.1.4 
  │ │ │     └── random-bytes@1.0.0 
  │ │ ├─┬ errorhandler@1.4.3 
  │ │ │ ├─┬ accepts@1.3.4 
  │ │ │ │ └── negotiator@0.6.1 
  │ │ │ └── escape-html@1.0.3 
  │ │ ├─┬ express-session@1.11.3 
  │ │ │ ├── crc@3.3.0 
  │ │ │ └─┬ uid-safe@2.0.0 
  │ │ │   └── base64-url@1.2.1 
  │ │ ├─┬ finalhandler@0.4.0 
  │ │ │ └── unpipe@1.0.0 
  │ │ ├─┬ http-errors@1.3.1 
  │ │ │ ├── inherits@2.0.3 
  │ │ │ └── statuses@1.3.1 
  │ │ ├─┬ method-override@2.3.10 
  │ │ │ ├─┬ debug@2.6.9 
  │ │ │ │ └── ms@2.0.0 
  │ │ │ └── vary@1.1.2 
  │ │ ├── morgan@1.6.1 
  │ │ ├─┬ multiparty@3.3.2 
  │ │ │ ├─┬ readable-stream@1.1.14 
  │ │ │ │ ├── core-util-is@1.0.2 
  │ │ │ │ ├── isarray@0.0.1 
  │ │ │ │ └── string_decoder@0.10.31 
  │ │ │ └── stream-counter@0.2.0 
  │ │ ├── on-headers@1.0.1 
  │ │ ├── pause@0.1.0 
  │ │ ├── qs@4.0.0 
  │ │ ├─┬ response-time@2.3.2 
  │ │ │ └── depd@1.1.1 
  │ │ ├─┬ serve-favicon@2.3.2 
  │ │ │ └── ms@0.7.2 
  │ │ ├─┬ serve-index@1.7.3 
  │ │ │ ├── batch@0.5.3 
  │ │ │ ├── escape-html@1.0.3 
  │ │ │ └── mime-types@2.1.17 
  │ │ ├─┬ serve-static@1.10.3 
  │ │ │ ├── escape-html@1.0.3 
  │ │ │ └─┬ send@0.13.2 
  │ │ │   ├── depd@1.1.1 
  │ │ │   ├── destroy@1.0.4 
  │ │ │   └── statuses@1.2.1 
  │ │ ├─┬ type-is@1.6.15 
  │ │ │ └── media-typer@0.3.0 
  │ │ └── vhost@3.0.2 
  │ ├── content-disposition@0.5.0 
  │ ├── content-type@1.0.4 
  │ ├── cookie@0.1.3 
  │ ├── cookie-signature@1.0.6 
  │ ├─┬ debug@2.2.0 
  │ │ └── ms@0.7.1 
  │ ├── depd@1.0.1 
  │ ├── escape-html@1.0.2 
  │ ├── etag@1.7.0 
  │ ├── fresh@0.3.0 
  │ ├── merge-descriptors@1.0.0 
  │ ├── methods@1.1.2 
  │ ├─┬ mkdirp@0.5.1 
  │ │ └── minimist@0.0.8 
  │ ├── parseurl@1.3.2 
  │ ├─┬ proxy-addr@1.0.10 
  │ │ ├── forwarded@0.1.2 
  │ │ └── ipaddr.js@1.0.5 
  │ ├── range-parser@1.0.3 
  │ ├─┬ send@0.13.0 
  │ │ ├── destroy@1.0.3 
  │ │ ├── mime@1.3.4 
  │ │ ├─┬ on-finished@2.3.0 
  │ │ │ └── ee-first@1.1.1 
  │ │ └── statuses@1.2.1 
  │ ├── utils-merge@1.0.0 
  │ └── vary@1.0.1 
  ├─┬ metaserve-css-postcss@0.0.3 
  │ ├─┬ autoprefixer@7.1.4 
  │ │ ├─┬ browserslist@2.4.0 
  │ │ │ └── electron-to-chromium@1.3.24 
  │ │ ├── caniuse-lite@1.0.30000740 
  │ │ ├── normalize-range@0.1.2 
  │ │ ├── num2fraction@1.2.2 
  │ │ └── postcss-value-parser@3.3.0 
  │ ├─┬ postcss@6.0.12 
  │ │ ├─┬ chalk@2.1.0 
  │ │ │ ├─┬ ansi-styles@3.2.0 
  │ │ │ │ └─┬ color-convert@1.9.0 
  │ │ │ │   └── color-name@1.1.3 
  │ │ │ └── escape-string-regexp@1.0.5 
  │ │ ├── source-map@0.5.7 
  │ │ └─┬ supports-color@4.4.0 
  │ │   └── has-flag@2.0.0 
  │ ├─┬ postcss-advanced-variables@1.2.2 
  │ │ └─┬ postcss@5.2.17 
  │ │   ├─┬ chalk@1.1.3 
  │ │   │ ├── ansi-styles@2.2.1 
  │ │   │ ├─┬ has-ansi@2.0.0 
  │ │   │ │ └── ansi-regex@2.1.1 
  │ │   │ ├── strip-ansi@3.0.1 
  │ │   │ └── supports-color@2.0.0 
  │ │   ├── js-base64@2.3.2 
  │ │   └─┬ supports-color@3.2.3 
  │ │     └── has-flag@1.0.0 
  │ ├─┬ postcss-color-function@4.0.0 
  │ │ ├─┬ css-color-function@1.3.0 
  │ │ │ ├── balanced-match@0.1.0 
  │ │ │ ├─┬ color@0.11.4 
  │ │ │ │ ├── clone@1.0.2 
  │ │ │ │ └── color-string@0.3.0 
  │ │ │ ├── debug@0.7.4 
  │ │ │ └── rgb@0.1.0 
  │ │ └── postcss-message-helpers@2.0.0 
  │ ├─┬ postcss-extend@1.0.5 
  │ │ └─┬ postcss@5.2.17 
  │ │   ├─┬ chalk@1.1.3 
  │ │   │ ├── ansi-styles@2.2.1 
  │ │   │ └── supports-color@2.0.0 
  │ │   └─┬ supports-color@3.2.3 
  │ │     └── has-flag@1.0.0 
  │ ├─┬ precss@1.4.0 
  │ │ ├─┬ postcss@5.2.17 
  │ │ │ ├─┬ chalk@1.1.3 
  │ │ │ │ ├── ansi-styles@2.2.1 
  │ │ │ │ └── supports-color@2.0.0 
  │ │ │ └─┬ supports-color@3.2.3 
  │ │ │   └── has-flag@1.0.0 
  │ │ ├─┬ postcss-atroot@0.1.3 
  │ │ │ └─┬ postcss@5.2.17 
  │ │ │   ├─┬ chalk@1.1.3 
  │ │ │   │ ├── ansi-styles@2.2.1 
  │ │ │   │ └── supports-color@2.0.0 
  │ │ │   └─┬ supports-color@3.2.3 
  │ │ │     └── has-flag@1.0.0 
  │ │ ├── postcss-color-function@2.0.1 
  │ │ ├─┬ postcss-custom-media@5.0.1 
  │ │ │ └─┬ postcss@5.2.17 
  │ │ │   ├─┬ chalk@1.1.3 
  │ │ │   │ ├── ansi-styles@2.2.1 
  │ │ │   │ └── supports-color@2.0.0 
  │ │ │   └─┬ supports-color@3.2.3 
  │ │ │     └── has-flag@1.0.0 
  │ │ ├─┬ postcss-custom-properties@5.0.2 
  │ │ │ ├── balanced-match@0.4.2 
  │ │ │ └─┬ postcss@5.2.17 
  │ │ │   ├─┬ chalk@1.1.3 
  │ │ │   │ ├── ansi-styles@2.2.1 
  │ │ │   │ └── supports-color@2.0.0 
  │ │ │   └─┬ supports-color@3.2.3 
  │ │ │     └── has-flag@1.0.0 
  │ │ ├─┬ postcss-custom-selectors@3.0.0 
  │ │ │ ├── balanced-match@0.2.1 
  │ │ │ └─┬ postcss@5.2.17 
  │ │ │   ├─┬ chalk@1.1.3 
  │ │ │   │ ├── ansi-styles@2.2.1 
  │ │ │   │ └── supports-color@2.0.0 
  │ │ │   └─┬ supports-color@3.2.3 
  │ │ │     └── has-flag@1.0.0 
  │ │ ├─┬ postcss-media-minmax@2.1.2 
  │ │ │ └─┬ postcss@5.2.17 
  │ │ │   ├─┬ chalk@1.1.3 
  │ │ │   │ ├── ansi-styles@2.2.1 
  │ │ │   │ └── supports-color@2.0.0 
  │ │ │   └─┬ supports-color@3.2.3 
  │ │ │     └── has-flag@1.0.0 
  │ │ ├─┬ postcss-mixins@2.1.1 
  │ │ │ ├─┬ globby@3.0.1 
  │ │ │ │ ├─┬ array-union@1.0.2 
  │ │ │ │ │ └── array-uniq@1.0.3 
  │ │ │ │ ├── arrify@1.0.1 
  │ │ │ │ ├── glob@5.0.15 
  │ │ │ │ ├── pify@2.3.0 
  │ │ │ │ └─┬ pinkie-promise@1.0.0 
  │ │ │ │   └── pinkie@1.0.0 
  │ │ │ ├─┬ postcss@5.2.17 
  │ │ │ │ ├─┬ chalk@1.1.3 
  │ │ │ │ │ ├── ansi-styles@2.2.1 
  │ │ │ │ │ └── supports-color@2.0.0 
  │ │ │ │ └─┬ supports-color@3.2.3 
  │ │ │ │   └── has-flag@1.0.0 
  │ │ │ └─┬ postcss-simple-vars@1.2.0 
  │ │ │   └─┬ postcss@5.2.17 
  │ │ │     ├─┬ chalk@1.1.3 
  │ │ │     │ ├── ansi-styles@2.2.1 
  │ │ │     │ └── supports-color@2.0.0 
  │ │ │     └─┬ supports-color@3.2.3 
  │ │ │       └── has-flag@1.0.0 
  │ │ ├─┬ postcss-nested@1.0.1 
  │ │ │ └─┬ postcss@5.2.17 
  │ │ │   ├─┬ chalk@1.1.3 
  │ │ │   │ ├── ansi-styles@2.2.1 
  │ │ │   │ └── supports-color@2.0.0 
  │ │ │   └─┬ supports-color@3.2.3 
  │ │ │     └── has-flag@1.0.0 
  │ │ ├─┬ postcss-nesting@2.3.1 
  │ │ │ └─┬ postcss@5.2.17 
  │ │ │   ├─┬ chalk@1.1.3 
  │ │ │   │ ├── ansi-styles@2.2.1 
  │ │ │   │ └── supports-color@2.0.0 
  │ │ │   └─┬ supports-color@3.2.3 
  │ │ │     └── has-flag@1.0.0 
  │ │ ├─┬ postcss-partial-import@1.3.0 
  │ │ │ ├─┬ fs-extra@0.24.0 
  │ │ │ │ ├── graceful-fs@4.1.11 
  │ │ │ │ ├── jsonfile@2.4.0 
  │ │ │ │ ├── path-is-absolute@1.0.1 
  │ │ │ │ └─┬ rimraf@2.6.2 
  │ │ │ │   └── glob@7.1.2 
  │ │ │ ├─┬ fs-promise@0.3.1 
  │ │ │ │ └── any-promise@0.1.0 
  │ │ │ ├── object-assign@4.1.1 
  │ │ │ ├─┬ postcss@5.2.17 
  │ │ │ │ ├─┬ chalk@1.1.3 
  │ │ │ │ │ ├── ansi-styles@2.2.1 
  │ │ │ │ │ └── supports-color@2.0.0 
  │ │ │ │ └─┬ supports-color@3.2.3 
  │ │ │ │   └── has-flag@1.0.0 
  │ │ │ └── string-hash@1.1.3 
  │ │ ├─┬ postcss-property-lookup@1.2.1 
  │ │ │ ├─┬ postcss@5.2.17 
  │ │ │ │ ├─┬ chalk@1.1.3 
  │ │ │ │ │ ├── ansi-styles@2.2.1 
  │ │ │ │ │ └── supports-color@2.0.0 
  │ │ │ │ └─┬ supports-color@3.2.3 
  │ │ │ │   └── has-flag@1.0.0 
  │ │ │ └── tcomb@2.7.0 
  │ │ ├─┬ postcss-selector-matches@2.0.5 
  │ │ │ ├── balanced-match@0.4.2 
  │ │ │ └─┬ postcss@5.2.17 
  │ │ │   ├─┬ chalk@1.1.3 
  │ │ │   │ ├── ansi-styles@2.2.1 
  │ │ │   │ └── supports-color@2.0.0 
  │ │ │   └─┬ supports-color@3.2.3 
  │ │ │     └── has-flag@1.0.0 
  │ │ └─┬ postcss-selector-not@2.0.0 
  │ │   ├── balanced-match@0.2.1 
  │ │   └─┬ postcss@5.2.17 
  │ │     ├─┬ chalk@1.1.3 
  │ │     │ ├── ansi-styles@2.2.1 
  │ │     │ └── supports-color@2.0.0 
  │ │     └─┬ supports-color@3.2.3 
  │ │       └── has-flag@1.0.0 
  │ └── sugarss@1.0.0 
  ├─┬ metaserve-html-jade@0.2.2 
  │ └─┬ jade@1.9.2 
  │   ├── character-parser@1.2.1 
  │   ├─┬ constantinople@3.0.2 
  │   │ └── acorn@2.7.0 
  │   ├─┬ transformers@2.1.0 
  │   │ ├─┬ css@1.0.8 
  │   │ │ ├── css-parse@1.0.4 
  │   │ │ └── css-stringify@1.0.5 
  │   │ ├─┬ promise@2.0.0 
  │   │ │ └── is-promise@1.0.1 
  │   │ └─┬ uglify-js@2.2.5 
  │   │   ├─┬ optimist@0.3.7 
  │   │   │ └── wordwrap@0.0.3 
  │   │   └─┬ source-map@0.1.43 
  │   │     └── amdefine@1.0.1 
  │   ├── void-elements@2.0.1 
  │   └─┬ with@4.0.3 
  │     ├── acorn@1.2.2 
  │     └── acorn-globals@1.0.9 
  ├─┬ metaserve-js-coffee-reactify@0.2.0 
  │ ├─┬ coffee-reactify@2.0.0 
  │ │ ├─┬ coffee-react@2.4.1 
  │ │ │ └─┬ coffee-script@1.8.0 
  │ │ │   └── mkdirp@0.3.5 
  │ │ ├── convert-source-map@0.3.5 
  │ │ └── through@2.3.8 
  │ ├─┬ metaserve-js-browserify@0.2.4 
  │ │ └─┬ browserify@14.4.0 
  │ │   ├── assert@1.4.1 
  │ │   ├─┬ browser-pack@6.0.2 
  │ │   │ ├─┬ combine-source-map@0.7.2 
  │ │   │ │ ├── convert-source-map@1.1.3 
  │ │   │ │ ├── inline-source-map@0.6.2 
  │ │   │ │ └── lodash.memoize@3.0.4 
  │ │   │ └── umd@3.0.1 
  │ │   ├─┬ browser-resolve@1.11.2 
  │ │   │ └── resolve@1.1.7 
  │ │   ├─┬ browserify-zlib@0.1.4 
  │ │   │ └── pako@0.2.9 
  │ │   ├─┬ buffer@5.0.8 
  │ │   │ ├── base64-js@1.2.1 
  │ │   │ └── ieee754@1.1.8 
  │ │   ├── cached-path-relative@1.0.1 
  │ │   ├─┬ concat-stream@1.5.2 
  │ │   │ ├─┬ readable-stream@2.0.6 
  │ │   │ │ └── isarray@1.0.0 
  │ │   │ └── typedarray@0.0.6 
  │ │   ├─┬ console-browserify@1.1.0 
  │ │   │ └── date-now@0.1.4 
  │ │   ├── constants-browserify@1.0.0 
  │ │   ├─┬ crypto-browserify@3.11.1 
  │ │   │ ├─┬ browserify-cipher@1.0.0 
  │ │   │ │ ├─┬ browserify-aes@1.0.8 
  │ │   │ │ │ └── buffer-xor@1.0.3 
  │ │   │ │ ├─┬ browserify-des@1.0.0 
  │ │   │ │ │ └── des.js@1.0.0 
  │ │   │ │ └─┬ evp_bytestokey@1.0.3 
  │ │   │ │   └─┬ md5.js@1.3.4 
  │ │   │ │     └── hash-base@3.0.4 
  │ │   │ ├─┬ browserify-sign@4.0.4 
  │ │   │ │ ├── bn.js@4.11.8 
  │ │   │ │ ├── browserify-rsa@4.0.1 
  │ │   │ │ ├─┬ elliptic@6.4.0 
  │ │   │ │ │ ├── brorand@1.1.0 
  │ │   │ │ │ ├── hash.js@1.1.3 
  │ │   │ │ │ ├── hmac-drbg@1.0.1 
  │ │   │ │ │ ├── minimalistic-assert@1.0.0 
  │ │   │ │ │ └── minimalistic-crypto-utils@1.0.1 
  │ │   │ │ └─┬ parse-asn1@5.1.0 
  │ │   │ │   └── asn1.js@4.9.1 
  │ │   │ ├── create-ecdh@4.0.0 
  │ │   │ ├─┬ create-hash@1.1.3 
  │ │   │ │ ├── cipher-base@1.0.4 
  │ │   │ │ └─┬ ripemd160@2.0.1 
  │ │   │ │   └── hash-base@2.0.2 
  │ │   │ ├── create-hmac@1.1.6 
  │ │   │ ├─┬ diffie-hellman@5.0.2 
  │ │   │ │ └── miller-rabin@4.0.1 
  │ │   │ ├── pbkdf2@3.0.14 
  │ │   │ ├── public-encrypt@4.0.0 
  │ │   │ └── randombytes@2.0.5 
  │ │   ├── defined@1.0.0 
  │ │   ├── deps-sort@2.0.0 
  │ │   ├── domain-browser@1.1.7 
  │ │   ├─┬ duplexer2@0.1.4 
  │ │   │ └─┬ readable-stream@2.3.3 
  │ │   │   ├── isarray@1.0.0 
  │ │   │   └── string_decoder@1.0.3 
  │ │   ├── events@1.1.1 
  │ │   ├─┬ glob@7.1.2 
  │ │   │ ├── fs.realpath@1.0.0 
  │ │   │ ├─┬ inflight@1.0.6 
  │ │   │ │ └── wrappy@1.0.2 
  │ │   │ ├─┬ minimatch@3.0.4 
  │ │   │ │ └─┬ brace-expansion@1.1.8 
  │ │   │ │   ├── balanced-match@1.0.0 
  │ │   │ │   └── concat-map@0.0.1 
  │ │   │ └── once@1.4.0 
  │ │   ├─┬ has@1.0.1 
  │ │   │ └── function-bind@1.1.1 
  │ │   ├── htmlescape@1.1.1 
  │ │   ├── https-browserify@1.0.0 
  │ │   ├─┬ insert-module-globals@7.0.1 
  │ │   │ ├── is-buffer@1.1.5 
  │ │   │ └─┬ lexical-scope@1.2.0 
  │ │   │   └─┬ astw@2.2.0 
  │ │   │     └── acorn@4.0.13 
  │ │   ├─┬ JSONStream@1.3.1 
  │ │   │ └── jsonparse@1.3.1 
  │ │   ├─┬ labeled-stream-splicer@2.0.0 
  │ │   │ └─┬ stream-splicer@2.0.0 
  │ │   │   └─┬ readable-stream@2.3.3 
  │ │   │     ├── isarray@1.0.0 
  │ │   │     └── string_decoder@1.0.3 
  │ │   ├─┬ module-deps@4.1.1 
  │ │   │ ├─┬ detective@4.5.0 
  │ │   │ │ └── acorn@4.0.13 
  │ │   │ ├─┬ readable-stream@2.3.3 
  │ │   │ │ ├── isarray@1.0.0 
  │ │   │ │ └── string_decoder@1.0.3 
  │ │   │ └─┬ stream-combiner2@1.1.1 
  │ │   │   └─┬ readable-stream@2.3.3 
  │ │   │     ├── isarray@1.0.0 
  │ │   │     └── string_decoder@1.0.3 
  │ │   ├── os-browserify@0.1.2 
  │ │   ├─┬ parents@1.0.1 
  │ │   │ └── path-platform@0.11.15 
  │ │   ├── path-browserify@0.0.0 
  │ │   ├── process@0.11.10 
  │ │   ├── punycode@1.4.1 
  │ │   ├── querystring-es3@0.2.1 
  │ │   ├─┬ read-only-stream@2.0.0 
  │ │   │ └─┬ readable-stream@2.3.3 
  │ │   │   ├── isarray@1.0.0 
  │ │   │   └── string_decoder@1.0.3 
  │ │   ├─┬ readable-stream@2.3.3 
  │ │   │ ├── isarray@1.0.0 
  │ │   │ ├── process-nextick-args@1.0.7 
  │ │   │ ├── safe-buffer@5.1.1 
  │ │   │ └── util-deprecate@1.0.2 
  │ │   ├─┬ resolve@1.4.0 
  │ │   │ └── path-parse@1.0.5 
  │ │   ├─┬ shasum@1.0.2 
  │ │   │ ├── json-stable-stringify@0.0.1 
  │ │   │ └── sha.js@2.4.9 
  │ │   ├─┬ shell-quote@1.6.1 
  │ │   │ ├── array-filter@0.0.1 
  │ │   │ ├── array-map@0.0.0 
  │ │   │ ├── array-reduce@0.0.0 
  │ │   │ └── jsonify@0.0.0 
  │ │   ├─┬ stream-browserify@2.0.1 
  │ │   │ └─┬ readable-stream@2.3.3 
  │ │   │   ├── isarray@1.0.0 
  │ │   │   └── string_decoder@1.0.3 
  │ │   ├─┬ stream-http@2.7.2 
  │ │   │ ├── builtin-status-codes@3.0.0 
  │ │   │ ├─┬ readable-stream@2.3.3 
  │ │   │ │ ├── isarray@1.0.0 
  │ │   │ │ └── string_decoder@1.0.3 
  │ │   │ └── to-arraybuffer@1.0.1 
  │ │   ├── string_decoder@1.0.3 
  │ │   ├── subarg@1.0.0 
  │ │   ├─┬ syntax-error@1.3.0 
  │ │   │ └── acorn@4.0.13 
  │ │   ├─┬ through2@2.0.3 
  │ │   │ └─┬ readable-stream@2.3.3 
  │ │   │   ├── isarray@1.0.0 
  │ │   │   └── string_decoder@1.0.3 
  │ │   ├── timers-browserify@1.4.2 
  │ │   ├── tty-browserify@0.0.0 
  │ │   ├─┬ url@0.11.0 
  │ │   │ ├── punycode@1.3.2 
  │ │   │ └── querystring@0.2.0 
  │ │   ├─┬ util@0.10.3 
  │ │   │ └── inherits@2.0.1 
  │ │   ├─┬ vm-browserify@0.0.4 
  │ │   │ └── indexof@0.0.1 
  │ │   └── xtend@4.0.1 
  │ └─┬ node-cjsx@0.1.3 
  │   ├── coffee-react-transform@2.4.1 
  │   └── coffee-script@1.12.7 
  └── minimist@1.2.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/metaserve/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0428 took 3.9486s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node
// Generated by CoffeeScript 1.8.0
(function() {
  var CONFIG_FILE, CSS_COMPILER, DEFAULT_COMPILERS, DEFAULT_STATIC_DIR, HOST, HTML_COMPILER, IS_SPECIFIC_CONFIG, JS_COMPILER, PORT, STATIC_DIR, VERBOSE, app, argv, compilers, config, de_res, defaults, e, express, file_path, fs, isArray, isString, metaserve_compile, metaserve_middleware, path, url, util;

  fs = require('fs');

  url = require('url');

  util = require('util');

  path = require('path');

  de_res = function(n) {
    return Math.floor(n / 1000) * 1000;
  };

  isArray = function(a) {
    return Array.isArray(a);
  };

  isString = function(s) {
    return typeof s === 'string';
  };

  defaults = function(o, d) {
    var k, o_, v;
    o_ = {};
    for (k in o) {
      v = o[k];
      o_[k] = v;
    }
    for (k in d) {
      v = d[k];
      if (o[k] == null) {
        o_[k] = v;
      }
    }
    return o_;
  };

  VERBOSE = process.env.METASERVE_VERBOSE != null;

  DEFAULT_STATIC_DIR = '.';

  DEFAULT_COMPILERS = {
    html: require('metaserve-html-jade'),
    js: require('metaserve-js-coffee-reactify'),
    css: require('metaserve-css-postcss')
  };

  module.exports = metaserve_middleware = function(config, compilers) {
    if (config == null) {
      config = {};
    }
    if (compilers == null) {
      compilers = {};
    }
    if (isString(config)) {
      config = {
        static_dir: config
      };
    }
    compilers = defaults(compilers, DEFAULT_COMPILERS);
    config.static_dir || (config.static_dir = DEFAULT_STATIC_DIR);
    return function(req, res, next) {
      var file_path;
      file_path = url.parse(req.url).pathname;
      if (file_path.slice(-1)[0] === '/') {
        file_path += 'index.html';
      }
      return metaserve_compile(compilers, file_path, config, {
        req: req
      }, function(err, response) {
        var filename;
        if (err) {
          return res.send(500, err);
        } else if (typeof response === 'string') {
          if (file_path.endsWith('.js')) {
            res.setHeader('Content-Type', 'application/javascript');
          } else if (file_path.endsWith('.css')) {
            res.setHeader('Content-Type', 'text/css');
          } else if (file_path.endsWith('.html')) {
            res.setHeader('Content-Type', 'text/html');
          }
          return res.end(response);
        } else if (response != null ? response.compiled : void 0) {
          if (response.content_type) {
            res.setHeader('Content-Type', response.content_type);
          }
          return res.end(response.compiled);
        } else {
          filename = config.static_dir + file_path;
          if (fs.existsSync(filename)) {
            if (VERBOSE) {
              console.log('[normalserve] Falling back with ' + filename);
            }
            return res.sendfile(filename);
          } else {
            if (VERBOSE) {
              console.log('[normalserve] Could not find ' + filename);
            }
            return next();
          }
        }
      });
    };
  };

  metaserve_compile = function(all_compilers, file_path, config, context, cb) {
    var compiler, compiler_config, compiler_context, compilers, ext, filename, filename_stem, matched, path_match, static_dir, _i, _len;
    if (VERBOSE) {
      console.log('[metaserve_compile] file_path=', file_path, 'config=', config);
    }
    for (path_match in all_compilers) {
      compilers = all_compilers[path_match];
      if (path_match === '*') {
        path_match = '.*';
      } else if (!path_match.match('\/')) {
        path_match = '\/(.*)\.' + path_match;
      }
      path_match = new RegExp(path_match);
      if (!isArray(compilers)) {
        compilers = [compilers];
      }
      compilers = compilers.filter(function(c) {
        return c != null;
      });
      if (matched = file_path.match(path_match)) {
        for (_i = 0, _len = compilers.length; _i < _len; _i++) {
          compiler = compilers[_i];
          ext = compiler.ext;
          static_dir = config.static_dir || '.';
          filename_stem = matched[1];
          if (ext[0] === '+') {
            filename = path.join(static_dir, file_path + '.' + ext.slice(1));
          } else {
            filename = path.join(static_dir, filename_stem + '.' + ext);
          }
          if (fs.existsSync(filename)) {
            compiler_config = defaults(config[ext] || {}, compiler.default_config);
            compiler_config.bouncing = config.bouncing;
            compiler_config.static_dir = static_dir;
            compiler_context = Object.assign({}, config.globals, context);
            if (compiler.shouldCompile != null) {
              if (!compiler.shouldCompile(filename, compiler_config, compiler_context)) {
                if (VERBOSE) {
                  console.log("[metaserve] Skipping compiler for " + filename);
                }
                continue;
              }
            }
            if (VERBOSE) {
              console.log("[metaserve] Using compiler for " + file_path + " (" + filename + ")");
            }
            return compiler.compile(filename, compiler_config, compiler_context, cb);
          } else {
            if (VERBOSE) {
              console.log("[metaserve] File not found for " + filename);
            }
          }
        }
      }
    }
    return cb(null);
  };

  if (require.main === module) {
    express = require('express');
    argv = require('minimist')(process.argv);
    HOST = argv.host || process.env.METASERVE_HOST || '0.0.0.0';
    PORT = argv.port || process.env.METASERVE_PORT || 8000;
    STATIC_DIR = argv['static-dir'] || process.env.METASERVE_STATIC_DIR || '.';
    CONFIG_FILE = argv.c || argv.config;
    IS_SPECIFIC_CONFIG = CONFIG_FILE != null;
    CONFIG_FILE || (CONFIG_FILE = 'config.json');
    try {
      config = JSON.parse(fs.readFileSync(CONFIG_FILE, 'utf8'));
      if (VERBOSE) {
        console.log("Using config:", util.inspect(config, {
          depth: null,
          colors: true
        }));
      }
    } catch (_error) {
      e = _error;
      if (IS_SPECIFIC_CONFIG) {
        console.log("Could not read config: " + CONFIG_FILE);
        process.exit(1);
      } else {
        config = {};
      }
    }
    config.static_dir || (config.static_dir = STATIC_DIR);
    HTML_COMPILER = argv.html || 'jade';
    JS_COMPILER = argv.js || 'coffee-reactify';
    CSS_COMPILER = argv.css || 'postcss';
    compilers = {
      html: require("metaserve-html-" + HTML_COMPILER),
      js: require("metaserve-js-" + JS_COMPILER),
      css: require("metaserve-css-" + CSS_COMPILER)
    };
    if (file_path = argv.bounce) {
      if (!file_path.startsWith('/')) {
        file_path = '/' + file_path;
      }
      config.bouncing = true;
      metaserve_compile(compilers, file_path, config, {}, function(err, response) {
        var bounced_filename;
        if ((response != null ? response.compiled : void 0) != null) {
          if (typeof argv.out === 'boolean') {
            return console.log(response.compiled);
          } else {
            bounced_filename = argv.out || path.join(config.static_dir, file_path + '.bounced');
            fs.writeFileSync(bounced_filename, response.compiled);
            return console.log("[metaserve] Bounced to " + bounced_filename);
          }
        } else if (err != null) {
          return console.log("[metaserve] Bouncing failed", err);
        } else {
          return console.log("[metaserve] Bouncing failed, make sure path " + file_path + " exists");
        }
      });
    } else {
      app = express();
      app.use(function(req, res, next) {
        console.log("[" + req.method + "] " + req.path);
        return next();
      });
      app.use(metaserve_middleware(config, compilers));
      app.listen(PORT, HOST, function() {
        return console.log("Metaserving on http://" + HOST + ":" + PORT + "/");
      });
    }
  }

}).call(this);
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
