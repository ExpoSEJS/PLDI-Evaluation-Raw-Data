/root/Targets/styleshow
└─┬ styleshow@0.0.10 
  ├─┬ babel-preset-es2015@6.24.1
  │ └─┬ babel-plugin-transform-es2015-unicode-regex@6.24.1
  │   └─┬ regexpu-core@2.0.0
  │     └── regenerate@1.3.3 
  └─┬ postcss-import@8.2.0
    └─┬ pkg-resolve@0.1.14
      └─┬ jspm@0.17.0-beta.45 
        ├── systemjs@0.20.19 
        └── systemjs-builder@0.16.11 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/styleshow/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0682 took 4.0854s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node
const yargs = require('yargs');
const mkdirp = require('mkdirp');
const argv = yargs
    //version
    .alias('v', 'version')
    .version(function() { return require('./package').version; })
    .describe('v', 'show version information')

    .option('output', {
        alias: 'o',
        describe: 'output directory'
    })

    .alias('h', 'help')
    .help('help')
    .usage('Usage: $0 <entryPath>')
    .showHelpOnFail(true, 'Specify --help for available options')
    .help('help')
    .demand(1, [], '<entryPath> is required. Please specify an entry css file.')
    .argv;

const $entryPath = argv._[0];
var fs = require('fs');
if(!fs.existsSync($entryPath)){
    console.log($entryPath, 'is not found. Please specify an entry css file.');
    process.exit();
}

const gulp = require('gulp');

const browserSync = require('browser-sync').create();
const {plugin, componentTree} = require('./postcss-styleshow');

const reactConnect = function(componentTree){
    var Stream = require('stream');
    var stream = new Stream.Transform({ objectMode: true });
    stream._transform = function (file, encoding, cb) {
        const string = 'var componentTree = '+JSON.stringify(componentTree);
        file.contents = new Buffer(string);

        cb(null, file);
    };
    return stream;
};

gulp.task('styleshow-parse', function () {
    var postcss    = require('gulp-postcss');
    var concat = require('gulp-concat-css');

    const nested = require('postcss-nested');
    const extended = require('postcss-extend');
    const imported = require('postcss-import');

    console.log('Parsing', $entryPath, '...');

    return gulp.src($entryPath)
        .pipe(postcss([plugin, nested, imported, extended], { parser: require('postcss-scss') }))
        .pipe(concat('bundle.css'))
        .pipe(gulp.dest(__dirname+'/public/styles'));
});

gulp.task('styleshow-extract', ['styleshow-parse'], function () {
    var rename = require('gulp-rename');

    console.log('Extracting components...');

    return gulp.src(__dirname+'/public/styles/bundle.css')
        .pipe(reactConnect(componentTree()))
        .pipe(rename('componentTree.js'))
        .pipe(gulp.dest(__dirname+'/public/js/'));
});

gulp.task('styleshow-watch', ['styleshow-extract'], function () {
    require('./app');
    browserSync.init({
        proxy: 'http://localhost:5000',
        files: [__dirname+'/public/**/*.*']
    });

    const watch = [$entryPath];

    if(argv.watch) watch.push(argv.watch+'/**/*.*');

    gulp.watch(watch, ['styleshow-extract']).on('change', browserSync.reload);

});

gulp.task('styleshow-output', ['styleshow-extract'], function () {
    var output = argv.output;

    try{
        var stats = fs.statSync(output);
        if(stats && !stats.isDirectory()){
            console.err('Error: Path exists, but not a directory');
            process.exit();
        }
    }
    catch(e){
        console.log('Directory not found:', output);
        console.log('Creating directory at', output);

        mkdirp.sync(output);
    }

    gulp
    .src([__dirname+'/public/**/*'])
    .pipe(gulp.dest(output));
    console.log('Copied to output dir:', output);
});

if(argv.output)
    gulp.start('styleshow-output');
else
    gulp.start('styleshow-watch');
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
