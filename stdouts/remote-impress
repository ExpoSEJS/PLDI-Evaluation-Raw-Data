/root/Targets/remote-impress
└─┬ remote-impress@0.1.1 
  ├─┬ connect@1.8.4 
  │ ├── formidable@1.0.17 
  │ ├── mime@2.0.2 
  │ └── qs@6.5.1 
  ├── ejs@0.6.1 
  ├─┬ express@2.5.8 
  │ ├── mime@1.2.4 
  │ ├── mkdirp@0.3.0 
  │ └── qs@0.4.2 
  └─┬ socket.io@0.9.0 
    ├── policyfile@0.0.4 
    ├── redis@0.6.7 
    └─┬ socket.io-client@0.9.0 
      ├── uglify-js@1.2.5 
      ├─┬ ws@0.4.0 
      │ ├── commander@0.5.0 
      │ └── options@0.0.6 
      └── xmlhttprequest@1.2.2 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/remote-impress/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0607 took 2.7763s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node

var express = require('express');
var app = express.createServer();
var io = require('socket.io').listen(app);
var events = require('events').EventEmitter;
var ejs = require('ejs');
var fs = require('fs');
var observer = new events();
var host = process.env.RMHOST;
var remotes = {};
var getIp = require('./getIP.js').getIP;

if(!host){
    getIp(function(error,ip){
        host="http://" + ip[0];
    }, false);
}


function getUniqueId(){
    var millis = new Date().getTime() - 1262304000000;
    millis = millis * Math.pow(2, 12);
    return millis;
}


io.of('/presentation').on('connection', 
    function (socket) {
        var id = getUniqueId();
        socket.emit('controllerUrl', host + '/c/' + id);
        
        
        observer.on('takeControl' + id, function(){
           socket.emit('takeControl');
        });

        observer.on('next' + id, function(){
           socket.emit('nextSlide');
        });
        observer.on('previous' + id, function(){
            socket.emit('previousSlide');
        })


        observer.on('disconnect' + id, function(){
            
            socket.emit('wheelDown');
        })

        socket.on('disconnect', function(){

            observer.removeAllListeners('takeControl' + id);
            observer.removeAllListeners('next' + id);
            observer.removeAllListeners('previous' + id);
            observer.removeAllListeners('disconnect' + id);
            if(remotes[id]){
            remotes[id].emit('presentationDied');
            remotes[id].disconnect();
            remotes[id]= null;
        }
        });
        
});

io.of('/controller').on('connection',
        function(socket){
            var id = null;
            socket.on('takeControl', function(data){
                observer.emit('takeControl' + data);
                id = data;
                remotes[id] = socket;
            });
            socket.on('nextSlide', function(){
                observer.emit('next' + id);
            });

            socket.on('previousSlide', function(){
                observer.emit('previous' + id);
            });

            socket.on('disconnect', function(){
                observer.emit('disconnect' + id);   
            });

            
});


app.configure(function(){
    app.use(express.static(__dirname + "/public"));
    app.set('views', __dirname + "/");
    app.set('view engine', 'ejs');
});

app.get('/c/:id', function(req, res){
    res.render('public/remote.ejs', {
        id:req.params.id,
        host:host
        });

});

app.get('/', function(req, res){
    res.render('public/homepage.ejs',{
        host:host
    });
});

app.get('/mobile', function(req, res){
    res.render('public/mobile.ejs',{
        host:host
    });
});


app.get('/remote.js', function(req, res){
    res.contentType('application/javascript');
    res.render('public/remotejs.ejs',{
        layout:false,host:host
    });
});



app.listen(process.env.RMPORT||80);
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
