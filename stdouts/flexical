/root/Targets/flexical
└── flexical@0.3.0-beta2 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/flexical/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0442 took 3.9664s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node

/**
 * FLEXICAL
 * > The fantastically flexible dashboard.
 **/

var _ = require('underscore'),
    fs = require('fs-extra'),
    path = require('path'),
    program = require('commander'),
    express = require('express.io'),
    nunjucks = require('nunjucks'),
    winston = require('winston');

var Board = require(__dirname + '/lib/board.js');

var settings = {};

// Load settings
if (fs.existsSync(process.cwd() + '/settings.js')) {
    settings = require(process.cwd() + '/settings.js');
}

// Logger
winston.add(winston.transports.File, {
    filename: process.cwd() + '/log/out.log'
});

// Process command line arguments
program.version('0.3.0')
    .option('-p, --port <port>', 'port to run server on', parseInt)
    .option('-c, --create [path]', 'create an example board')
    .parse(process.argv);

if (program.create) {
    var destination = program.create;
    if (typeof program.create !== 'string') {
        destination = '.';
    }
    destination = path.resolve(destination);
    fs.copy(__dirname + '/example/', destination, function(err){
        if (err) {
            winston.log('error', err);
            return;
        }
        winston.log('info', 'success!');
    });
    return;
}

// Make express
var app = express().http().io();

// Public
app.use('/assets', express.static(__dirname + '/assets'));

// Templates
nunjucks.configure([process.cwd(), __dirname + '/templates'], {
    autoescape: true,
    express: app
}).addExtension('widget', new function() {
    this.tags = ['widget'];
    this.parse = function(parser, nodes, lexer) {
        var token = parser.nextToken();
        var args = parser.parseSignature(null, true);
        parser.advanceAfterBlockEnd(token.value);
        return new nodes.CallExtension(this, 'run', args);
    }
    this.run = function(context, type, options) {
        var locals = context.getVariables(),
            html = nunjucks.render('widgets/flexical-' + type + '/widget.html', options);
        return new nunjucks.runtime.SafeString(html);
    }
});

// HTTP Middlewares
app.use(express.json());
app.use(express.urlencoded());

// From Flexical with Love
winston.log('info', 'Greetings Earth, I am '.cyan + 'Flexical'.magenta.bold)

// Make Board
var board = new Board(require(process.cwd() + '/board.js'), {
    app: app,
    winston: winston
}).start();

// Host Board
app.get('/', function(req, res) {
    res.render('board.html', {
        board: board
    });
});

// Go time!
app.listen(program.port || settings.port || 3000);
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
