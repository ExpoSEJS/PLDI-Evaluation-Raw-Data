/root/Targets/slew
└─┬ slew@0.2.0 
  ├─┬ browserify@8.1.3 
  │ ├── assert@1.3.0 
  │ ├─┬ browser-pack@3.2.0 
  │ │ ├─┬ combine-source-map@0.3.0 
  │ │ │ ├── convert-source-map@0.3.5 
  │ │ │ ├─┬ inline-source-map@0.3.1 
  │ │ │ │ └── source-map@0.3.0 
  │ │ │ └─┬ source-map@0.1.43 
  │ │ │   └── amdefine@1.0.1 
  │ │ ├── JSONStream@0.8.4 
  │ │ └─┬ through2@0.5.1 
  │ │   └── readable-stream@1.0.34 
  │ ├─┬ browser-resolve@1.11.2 
  │ │ └── resolve@1.1.7 
  │ ├─┬ browserify-zlib@0.1.4 
  │ │ └── pako@0.2.9 
  │ ├─┬ buffer@3.6.0 
  │ │ ├── base64-js@0.0.8 
  │ │ ├── ieee754@1.1.8 
  │ │ └── isarray@1.0.0 
  │ ├── builtins@0.0.7 
  │ ├── commondir@0.0.1 
  │ ├─┬ concat-stream@1.4.10 
  │ │ └── typedarray@0.0.6 
  │ ├─┬ console-browserify@1.1.0 
  │ │ └── date-now@0.1.4 
  │ ├── constants-browserify@0.0.1 
  │ ├─┬ crypto-browserify@3.11.1 
  │ │ ├─┬ browserify-cipher@1.0.0 
  │ │ │ ├─┬ browserify-aes@1.0.8 
  │ │ │ │ └── buffer-xor@1.0.3 
  │ │ │ ├─┬ browserify-des@1.0.0 
  │ │ │ │ └── des.js@1.0.0 
  │ │ │ └─┬ evp_bytestokey@1.0.3 
  │ │ │   └─┬ md5.js@1.3.4 
  │ │ │     └── hash-base@3.0.4 
  │ │ ├─┬ browserify-sign@4.0.4 
  │ │ │ ├── bn.js@4.11.8 
  │ │ │ ├── browserify-rsa@4.0.1 
  │ │ │ ├─┬ elliptic@6.4.0 
  │ │ │ │ ├── brorand@1.1.0 
  │ │ │ │ ├── hash.js@1.1.3 
  │ │ │ │ ├── hmac-drbg@1.0.1 
  │ │ │ │ ├── minimalistic-assert@1.0.0 
  │ │ │ │ └── minimalistic-crypto-utils@1.0.1 
  │ │ │ └─┬ parse-asn1@5.1.0 
  │ │ │   └── asn1.js@4.9.1 
  │ │ ├── create-ecdh@4.0.0 
  │ │ ├─┬ create-hash@1.1.3 
  │ │ │ ├── cipher-base@1.0.4 
  │ │ │ └─┬ ripemd160@2.0.1 
  │ │ │   └── hash-base@2.0.2 
  │ │ ├─┬ create-hmac@1.1.6 
  │ │ │ └── safe-buffer@5.1.1 
  │ │ ├─┬ diffie-hellman@5.0.2 
  │ │ │ └── miller-rabin@4.0.1 
  │ │ ├── pbkdf2@3.0.14 
  │ │ ├── public-encrypt@4.0.0 
  │ │ └── randombytes@2.0.5 
  │ ├── deep-equal@0.2.2 
  │ ├── defined@0.0.0 
  │ ├─┬ deps-sort@1.3.9 
  │ │ └─┬ JSONStream@1.3.1 
  │ │   └── jsonparse@1.3.1 
  │ ├── domain-browser@1.1.7 
  │ ├── duplexer2@0.0.2 
  │ ├── events@1.0.2 
  │ ├─┬ glob@4.5.3 
  │ │ ├─┬ inflight@1.0.6 
  │ │ │ └── wrappy@1.0.2 
  │ │ ├─┬ minimatch@2.0.10 
  │ │ │ └─┬ brace-expansion@1.1.8 
  │ │ │   ├── balanced-match@1.0.0 
  │ │ │   └── concat-map@0.0.1 
  │ │ └── once@1.4.0 
  │ ├─┬ http-browserify@1.7.0 
  │ │ └── Base64@0.2.1 
  │ ├── https-browserify@0.0.1 
  │ ├── inherits@2.0.3 
  │ ├─┬ insert-module-globals@6.6.3 
  │ │ ├─┬ combine-source-map@0.6.1 
  │ │ │ ├── convert-source-map@1.1.3 
  │ │ │ ├── inline-source-map@0.5.0 
  │ │ │ ├── lodash.memoize@3.0.4 
  │ │ │ └── source-map@0.4.4 
  │ │ ├── is-buffer@1.1.5 
  │ │ ├─┬ JSONStream@1.3.1 
  │ │ │ └── jsonparse@1.3.1 
  │ │ ├─┬ lexical-scope@1.2.0 
  │ │ │ └── astw@2.2.0 
  │ │ ├── process@0.11.10 
  │ │ └── xtend@4.0.1 
  │ ├── isarray@0.0.1 
  │ ├── JSONStream@0.8.4 
  │ ├─┬ labeled-stream-splicer@1.0.2 
  │ │ └─┬ stream-splicer@1.3.2 
  │ │   └── readable-wrap@1.0.0 
  │ ├─┬ module-deps@3.9.1 
  │ │ ├── defined@1.0.0 
  │ │ ├─┬ detective@4.5.0 
  │ │ │ └── defined@1.0.0 
  │ │ ├─┬ JSONStream@1.3.1 
  │ │ │ └── jsonparse@1.3.1 
  │ │ ├─┬ resolve@1.4.0 
  │ │ │ └── path-parse@1.0.5 
  │ │ ├─┬ stream-combiner2@1.0.2 
  │ │ │ └─┬ through2@0.5.1 
  │ │ │   └── readable-stream@1.0.34 
  │ │ └── xtend@4.0.1 
  │ ├── os-browserify@0.1.2 
  │ ├─┬ parents@1.0.1 
  │ │ └── path-platform@0.11.15 
  │ ├── path-browserify@0.0.0 
  │ ├── process@0.10.1 
  │ ├── punycode@1.2.4 
  │ ├── querystring-es3@0.2.1 
  │ ├─┬ readable-stream@1.1.14 
  │ │ └── core-util-is@1.0.2 
  │ ├── resolve@0.7.4 
  │ ├── shallow-copy@0.0.1 
  │ ├─┬ shasum@1.0.2 
  │ │ ├─┬ json-stable-stringify@0.0.1 
  │ │ │ └── jsonify@0.0.0 
  │ │ └── sha.js@2.4.9 
  │ ├── shell-quote@0.0.1 
  │ ├── stream-browserify@1.0.0 
  │ ├── string_decoder@0.10.31 
  │ ├── subarg@1.0.0 
  │ ├─┬ syntax-error@1.3.0 
  │ │ └── acorn@4.0.13 
  │ ├─┬ through2@1.1.1 
  │ │ └── xtend@4.0.1 
  │ ├─┬ timers-browserify@1.4.2 
  │ │ └── process@0.11.10 
  │ ├── tty-browserify@0.0.0 
  │ ├─┬ umd@2.1.0 
  │ │ ├─┬ rfile@1.0.0 
  │ │ │ ├── callsite@1.0.0 
  │ │ │ └── resolve@0.3.1 
  │ │ ├─┬ ruglify@1.0.0 
  │ │ │ └─┬ uglify-js@2.2.5 
  │ │ │   └─┬ optimist@0.3.7 
  │ │ │     └── wordwrap@0.0.3 
  │ │ └─┬ uglify-js@2.4.24 
  │ │   ├── async@0.2.10 
  │ │   ├── source-map@0.1.34 
  │ │   ├── uglify-to-browserify@1.0.2 
  │ │   └─┬ yargs@3.5.4 
  │ │     ├── camelcase@1.2.1 
  │ │     ├── decamelize@1.2.0 
  │ │     ├── window-size@0.1.0 
  │ │     └── wordwrap@0.0.2 
  │ ├─┬ url@0.10.3 
  │ │ ├── punycode@1.3.2 
  │ │ └── querystring@0.2.0 
  │ ├─┬ util@0.10.3 
  │ │ └── inherits@2.0.1 
  │ ├─┬ vm-browserify@0.0.4 
  │ │ └── indexof@0.0.1 
  │ └── xtend@3.0.0 
  ├─┬ csv-parser@1.11.0 
  │ ├── generate-function@1.1.0 
  │ ├─┬ generate-object-property@1.2.0 
  │ │ └── is-property@1.0.2 
  │ ├── minimist@1.2.0 
  │ └─┬ ndjson@1.5.0 
  │   ├── json-stringify-safe@5.0.1 
  │   ├─┬ split2@2.2.0 
  │   │ └─┬ through2@2.0.3 
  │   │   ├─┬ readable-stream@2.3.3 
  │   │   │ ├── isarray@1.0.0 
  │   │   │ └── string_decoder@1.0.3 
  │   │   └── xtend@4.0.1 
  │   └─┬ through2@2.0.3 
  │     ├─┬ readable-stream@2.3.3 
  │     │ ├── isarray@1.0.0 
  │     │ ├── process-nextick-args@1.0.7 
  │     │ ├── string_decoder@1.0.3 
  │     │ └── util-deprecate@1.0.2 
  │     └── xtend@4.0.1 
  ├─┬ http-proxy@1.16.2 
  │ ├── eventemitter3@1.2.0 
  │ └── requires-port@1.0.0 
  ├─┬ JSONStream@0.10.0 
  │ ├── jsonparse@0.0.5 
  │ └── through@2.3.8 
  ├─┬ ldjson-stream@1.2.1 
  │ ├── split2@0.2.1 
  │ └─┬ through2@0.6.5 
  │   ├── readable-stream@1.0.34 
  │   └── xtend@4.0.1 
  ├── util-extend@1.0.3 
  └─┬ watchy@0.6.7 
    ├─┬ chokidar@1.7.0 
    │ ├─┬ anymatch@1.3.2 
    │ │ ├─┬ micromatch@2.3.11 
    │ │ │ ├─┬ arr-diff@2.0.0 
    │ │ │ │ └── arr-flatten@1.1.0 
    │ │ │ ├── array-unique@0.2.1 
    │ │ │ ├─┬ braces@1.8.5 
    │ │ │ │ ├─┬ expand-range@1.8.2 
    │ │ │ │ │ └─┬ fill-range@2.2.3 
    │ │ │ │ │   ├── is-number@2.1.0 
    │ │ │ │ │   ├─┬ isobject@2.1.0 
    │ │ │ │ │   │ └── isarray@1.0.0 
    │ │ │ │ │   ├─┬ randomatic@1.1.7 
    │ │ │ │ │   │ ├─┬ is-number@3.0.0 
    │ │ │ │ │   │ │ └── kind-of@3.2.2 
    │ │ │ │ │   │ └── kind-of@4.0.0 
    │ │ │ │ │   └── repeat-string@1.6.1 
    │ │ │ │ ├── preserve@0.2.0 
    │ │ │ │ └── repeat-element@1.1.2 
    │ │ │ ├─┬ expand-brackets@0.1.5 
    │ │ │ │ └── is-posix-bracket@0.1.1 
    │ │ │ ├── extglob@0.3.2 
    │ │ │ ├── filename-regex@2.0.1 
    │ │ │ ├── kind-of@3.2.2 
    │ │ │ ├─┬ object.omit@2.0.1 
    │ │ │ │ ├─┬ for-own@0.1.5 
    │ │ │ │ │ └── for-in@1.0.2 
    │ │ │ │ └── is-extendable@0.1.1 
    │ │ │ ├─┬ parse-glob@3.0.4 
    │ │ │ │ ├── glob-base@0.3.0 
    │ │ │ │ └── is-dotfile@1.0.3 
    │ │ │ └─┬ regex-cache@0.4.4 
    │ │ │   └─┬ is-equal-shallow@0.1.3 
    │ │ │     └── is-primitive@2.0.0 
    │ │ └─┬ normalize-path@2.1.1 
    │ │   └── remove-trailing-separator@1.1.0 
    │ ├── async-each@1.0.1 
    │ ├── glob-parent@2.0.0 
    │ ├─┬ is-binary-path@1.0.1 
    │ │ └── binary-extensions@1.10.0 
    │ ├─┬ is-glob@2.0.1 
    │ │ └── is-extglob@1.0.0 
    │ ├── path-is-absolute@1.0.1 
    │ └─┬ readdirp@2.1.0 
    │   ├── graceful-fs@4.1.11 
    │   ├── minimatch@3.0.4 
    │   ├─┬ readable-stream@2.3.3 
    │   │ ├── isarray@1.0.0 
    │   │ └── string_decoder@1.0.3 
    │   └── set-immediate-shim@1.0.1 
    ├── commander@2.11.0 
    ├── herit@2.2.2 
    ├─┬ orgsync-logger@1.4.0 
    │ ├─┬ chalk@1.1.0 
    │ │ ├── ansi-styles@2.2.1 
    │ │ ├── escape-string-regexp@1.0.5 
    │ │ ├─┬ has-ansi@2.0.0 
    │ │ │ └── ansi-regex@2.1.1 
    │ │ ├── strip-ansi@3.0.1 
    │ │ └── supports-color@2.0.0 
    │ ├── statsd-client@0.2.1 
    │ └─┬ superagent@1.7.2 
    │   ├── component-emitter@1.2.1 
    │   ├── cookiejar@2.0.6 
    │   ├─┬ debug@2.6.9 
    │   │ └── ms@2.0.0 
    │   ├── extend@3.0.0 
    │   ├─┬ form-data@0.2.0 
    │   │ ├── async@0.9.2 
    │   │ ├─┬ combined-stream@0.0.7 
    │   │ │ └── delayed-stream@0.0.5 
    │   │ └─┬ mime-types@2.0.14 
    │   │   └── mime-db@1.12.0 
    │   ├── formidable@1.0.17 
    │   ├── methods@1.1.2 
    │   ├── mime@1.3.4 
    │   ├── qs@2.3.3 
    │   ├── readable-stream@1.0.27-1 
    │   └── reduce-component@1.0.1 
    └── underscore@1.8.3 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/slew/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 25% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0709 took 6.8984s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #! /usr/bin/env node

var Parser = require('jsonparse')
  , through = require('through')

/*

  the value of this.stack that creationix's jsonparse has is weird.

  it makes this code ugly, but his problem is way harder that mine,
  so i'll forgive him.

*/

exports.parse = function (path, map) {

  var parser = new Parser()
  var stream = through(function (chunk) {
    if('string' === typeof chunk)
      chunk = new Buffer(chunk)
    parser.write(chunk)
  },
  function (data) {
    if(data)
      stream.write(data)
    stream.queue(null)
  })

  if('string' === typeof path)
    path = path.split('.').map(function (e) {
      if (e === '*')
        return true
      else if (e === '') // '..'.split('.') returns an empty string
        return {recurse: true}
      else
        return e
    })


  var count = 0, _key
  if(!path || !path.length)
    path = null

  parser.onValue = function (value) {
    if (!this.root)
      stream.root = value

    if(! path) return

    var i = 0 // iterates on path
    var j  = 0 // iterates on stack
    while (i < path.length) {
      var key = path[i]
      var c
      j++

      if (key && !key.recurse) {
        c = (j === this.stack.length) ? this : this.stack[j]
        if (!c) return
        if (! check(key, c.key)) return
        i++
      } else {
        i++
        var nextKey = path[i]
        if (! nextKey) return
        while (true) {
          c = (j === this.stack.length) ? this : this.stack[j]
          if (!c) return
          if (check(nextKey, c.key)) { i++; break}
          j++
        }
      }
    }
    if (j !== this.stack.length) return

    count ++
    var actualPath = this.stack.slice(1).map(function(element) { return element.key }).concat([this.key])
    var data = this.value[this.key]
    if(null != data)
      if(null != (data = map ? map(data, actualPath) : data))
        stream.queue(data)
    delete this.value[this.key]
  }
  parser._onToken = parser.onToken;

  parser.onToken = function (token, value) {
    parser._onToken(token, value);
    if (this.stack.length === 0) {
      if (stream.root) {
        if(!path)
          stream.queue(stream.root)
        stream.emit('root', stream.root, count)
        count = 0;
        stream.root = null;
      }
    }
  }

  parser.onError = function (err) {
    stream.emit('error', err)
  }


  return stream
}

function check (x, y) {
  if ('string' === typeof x)
    return y == x
  else if (x && 'function' === typeof x.exec)
    return x.exec(y)
  else if ('boolean' === typeof x)
    return x
  else if ('function' === typeof x)
    return x(y)
  return false
}

exports.stringify = function (op, sep, cl, indent) {
  indent = indent || 0
  if (op === false){
    op = ''
    sep = '\n'
    cl = ''
  } else if (op == null) {

    op = '[\n'
    sep = '\n,\n'
    cl = '\n]\n'

  }

  //else, what ever you like

  var stream
    , first = true
    , anyData = false
  stream = through(function (data) {
    anyData = true
    var json = JSON.stringify(data, null, indent)
    if(first) { first = false ; stream.queue(op + json)}
    else stream.queue(sep + json)
  },
  function (data) {
    if(!anyData)
      stream.queue(op)
    stream.queue(cl)
    stream.queue(null)
  })

  return stream
}

exports.stringifyObject = function (op, sep, cl, indent) {
  indent = indent || 0
  if (op === false){
    op = ''
    sep = '\n'
    cl = ''
  } else if (op == null) {

    op = '{\n'
    sep = '\n,\n'
    cl = '\n}\n'

  }

  //else, what ever you like

  var first = true
    , anyData = false
  stream = through(function (data) {
    anyData = true
    var json = JSON.stringify(data[0]) + ':' + JSON.stringify(data[1], null, indent)
    if(first) { first = false ; this.queue(op + json)}
    else this.queue(sep + json)
  },
  function (data) {
    if(!anyData) this.queue(op)
    this.queue(cl)

    this.queue(null)
  })

  return stream
}

if(!module.parent && process.title !== 'browser') {
  process.stdin
    .pipe(exports.parse(process.argv[2]))
    .pipe(exports.stringify('[', ',\n', ']\n', 2))
    .pipe(process.stdout)
}
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/slew/node_modules/slew/index.js. Coverage (Term): 14% Coverage (LOC): 9%
*- File /root/Targets/slew/node_modules/csv-parser/index.js. Coverage (Term): 11% Coverage (LOC): 15%
*- File /root/Targets/slew/node_modules/inherits/inherits.js. Coverage (Term): 74% Coverage (LOC): 88%
*- File /root/Targets/slew/node_modules/generate-object-property/index.js. Coverage (Term): 43% Coverage (LOC): 80%
*- File /root/Targets/slew/node_modules/is-property/is-property.js. Coverage (Term): 64% Coverage (LOC): 83%
*- File /root/Targets/slew/node_modules/generate-function/index.js. Coverage (Term): 9% Coverage (LOC): 13%
*- File /root/Targets/slew/node_modules/util-extend/extend.js. Coverage (Term): 27% Coverage (LOC): 33%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
