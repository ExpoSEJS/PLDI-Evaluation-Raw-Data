/root/Targets/show-markup
└─┬ show-markup@0.0.6 
  ├── comet.io@0.0.5 
  ├── marked@0.2.10 
  ├─┬ node-static@0.6.9 
  │ ├── colors@1.1.2 
  │ ├── mime@2.0.3 
  │ └─┬ optimist@0.6.1 
  │   ├── minimist@0.0.10 
  │   └── wordwrap@0.0.3 
  └── textile-js@0.1.11 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/show-markup/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 1 running / 1 errors / 45% coverage ] ****** [1 done /0 queued / 1 running / 1 errors / 45% coverage ] ****** [2 done /0 queued / 0 running / 1 errors / 45% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","cwd","toString","apply","bound "]
*-- Stat Module Done --*
*-- Test Case {"_bound":0,"Switcher":false,"Target_Switch_Base":0} start 0.055 took 3.4969s
*-- Errors occured in test {"_bound":0,"Switcher":false,"Target_Switch_Base":0}
* Error: Tropigate failed because SyntaxError: The keyword 'static' is reserved (11:4) on program // require 
var fs = require('fs');
var url = require('url');
var path = require('path');

// variable
var webRoot;
var docRoot;
var exts;
var comet;
var static;


// module object
module.exports = function (config) {

  // read from config
  webRoot = config.webRoot;
  docRoot = config.docRoot;
  exts = config.extension;
  
  // server
  comet = require('./cometer')(config);
  static = new(require('node-static').Server)(webRoot, {});

  return handle;
};

// define handle
function handle(req, res) {//{{{
  req.on('end', function() {
    if (!comet.serve(req, res)) {

      var pathname = url.parse(req.url).pathname;
      if (pathname == '/favicon.ico') {
        // nothing favicon
        res.end();

      } else {

        var absPath = docRoot + pathname;

        exists(absPath, function() {
          // exists
          fs.stat(absPath, function(err, stats) {
            if (stats.isFile()) {
              // request equals file
              if (path.extname(pathname) in exts) {
                
                // read index
                fs.readFile(webRoot + '/index.html', function(err, data) {
                  res.writeHead(200, {'Content-Type': 'text/html'});
                  res.end(data);
                });
              }

            } else if (stats.isDirectory()) {
              // request equals dir
              lsFiles(res, absPath);
            }
          });

        },function() {
          // not exists

          exists(webRoot + pathname, function() {
            // serve static files
            static.serve(req, res);
          });
        });

      }
    }
  });
}//}}}

// ls to reqponse only markup files
function lsFiles(res, dirName) {//{{{
  var rDirPath = path.relative(docRoot, dirName);
  rDirPath = rDirPath && rDirPath + '/';
  // read dir
  fs.readdir(dirName, function(err, files) {
    // write to response
    res.writeHead(200, {'Content-Type': 'text/html'});
    for (var i = 0; i < files.length; i++) {
      var file = files[i];
      // if file is markup or directory
      if (path.extname(file) in exts || fs.statSync(rDirPath + file).isDirectory()) {
        res.write('<a href="/' + rDirPath + file + '" >' + file + '</a><br/>');
      }
    }
    res.end();
  });
}//}}}

// file exists 
function exists(file, existsCallback, notExistsCallback) {//{{{
  fs.exists(file, function(exists) {
    if (exists) {
      if (existsCallback) { existsCallback(); }
    } else {
      if (notExistsCallback) { notExistsCallback(); }
    }
  });
}//}}}
 at SyntaxError: The keyword 'static' is reserved (11:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$3.parseIdent (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2182:14)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:41:34)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
    at Parser.parse (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:516:17)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"_bound":1} start 3.6004 took 3.3276s
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 76% Coverage (LOC): 84%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 19% Coverage (LOC): 37%
*- File /root/Targets/show-markup/node_modules/show-markup/server.js. Coverage (Term): 49% Coverage (LOC): 73%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 2 paths with 1 errors **
