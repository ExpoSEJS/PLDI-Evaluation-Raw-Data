/root/Targets/woofr
└─┬ woofr@1.1.2 
  ├─┬ body-parser@1.18.2 
  │ ├── bytes@3.0.0 
  │ ├── content-type@1.0.4 
  │ ├─┬ debug@2.6.9 
  │ │ └── ms@2.0.0 
  │ ├── depd@1.1.1 
  │ ├─┬ http-errors@1.6.2 
  │ │ └── inherits@2.0.3 
  │ ├── iconv-lite@0.4.19 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── qs@6.5.1 
  │ ├─┬ raw-body@2.3.2 
  │ │ └── unpipe@1.0.0 
  │ └─┬ type-is@1.6.15 
  │   ├── media-typer@0.3.0 
  │   └── mime-types@2.1.17 
  ├─┬ cache-manifest-generator@0.7.0 
  │ ├─┬ scandirectory@2.5.0 
  │ │ ├─┬ ignorefs@1.2.0 
  │ │ │ ├── editions@1.3.3 
  │ │ │ └── ignorepatterns@1.1.0 
  │ │ ├─┬ safefs@3.2.2 
  │ │ │ └── graceful-fs@4.1.11 
  │ │ └─┬ taskgroup@4.3.1 
  │ │   ├── ambi@2.5.0 
  │ │   └─┬ csextends@1.1.1 
  │ │     └── coffee-script@1.12.7 
  │ └─┬ watchr@2.6.0 
  │   ├── eachr@3.2.0 
  │   ├── extendr@3.2.2 
  │   ├── extract-opts@3.3.1 
  │   ├── safefs@4.1.0 
  │   ├── taskgroup@5.0.1 
  │   └── typechecker@4.4.1 
  ├─┬ compression@1.7.0 
  │ ├─┬ accepts@1.3.4 
  │ │ └── negotiator@0.6.1 
  │ ├── bytes@2.5.0 
  │ ├─┬ compressible@2.0.11 
  │ │ └── mime-db@1.30.0 
  │ ├── debug@2.6.8 
  │ ├── on-headers@1.0.1 
  │ ├── safe-buffer@5.1.1 
  │ └── vary@1.1.2 
  └─┬ express@4.15.5 
    ├── array-flatten@1.1.1 
    ├── content-disposition@0.5.2 
    ├── cookie@0.3.1 
    ├── cookie-signature@1.0.6 
    ├── encodeurl@1.0.1 
    ├── escape-html@1.0.3 
    ├── etag@1.8.1 
    ├── finalhandler@1.0.6 
    ├── fresh@0.5.2 
    ├── merge-descriptors@1.0.1 
    ├── methods@1.1.2 
    ├── parseurl@1.3.2 
    ├── path-to-regexp@0.1.7 
    ├─┬ proxy-addr@1.1.5 
    │ ├── forwarded@0.1.2 
    │ └── ipaddr.js@1.4.0 
    ├── qs@6.5.0 
    ├── range-parser@1.2.0 
    ├─┬ send@0.15.6 
    │ ├── destroy@1.0.4 
    │ └── mime@1.3.4 
    ├── serve-static@1.12.6 
    ├── setprototypeof@1.0.3 
    ├── statuses@1.3.1 
    └── utils-merge@1.0.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/woofr/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0938 took 2.0339s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node
// vim:ft=coffee ts=2 sw=2 et :
// -*- mode:coffee -*-
"use strict";

var cluster = require('cluster')
let numCPUs = process.env.MULTICORE ? require('os').cpus().length : 1
if (cluster.isMaster) {
  let i = 0
  while (i < numCPUs) {
    cluster.fork()
    i++
  }
  cluster.on('exit', function(worker, code, signal) {
    console.log(`worker ${worker.process.pid} died..restarting`)
    cluster.fork()
    return
  })

} else {

  let manifest   = require('cache-manifest-generator');
  let compress   = require('compression')
  //minify     = require('minify')
  let express    = require("express")

  let app        = express()
  let bodyParser = require('body-parser')
  let port       = process.env.PORT || 3000
  let ip         = process.env.IP   || '0.0.0.0'
  
  // speed up data transfer
  app.use(compress());                                  // fast data

  // parse payloads
  app.use(bodyParser.json());                           // for parsing application/json
  app.use(bodyParser.urlencoded({ extended: true }));   // for parsing application/x-www-form-urlencoded

  // SPA routing
  //app.use(function(req, res, next) {
  //  if ( req.url != "/" && req.url.match(/(\/$|\.html$|\.js|\.css|\.ttf|\.png|\.gif|\.jpg|\.woff)/) == null )
  //    req.url = "/index.html"
  //  next()
  //})

  // CORS
  app.use(function(req, res, next) {
      var oneof = false
      if(req.headers.origin) {
          res.header('Access-Control-Allow-Origin', req.headers.origin)
          oneof = true
      }
      if(req.headers['access-control-request-method']) {
          res.header('Access-Control-Allow-Methods', req.headers['access-control-request-method'])
          oneof = true
      }
      if(req.headers['access-control-request-headers']) {
          res.header('Access-Control-Allow-Headers', req.headers['access-control-request-headers'])
          oneof = true
      }
      if(oneof) {
          res.header('Access-Control-Max-Age', 60 * 60 * 24 * 365)
      }

      // intercept OPTIONS method
      if (oneof && req.method == 'OPTIONS') {
          res.send(200)
      }
      else {
          next()
      }
  })  

  /*
   * Offline storage
   * Set Cache-Control: no-cache on all files served during development
   */
  if( process.env.NODE_ENV == "production" ){
    app.use(function(req, res, next) {
      res.set('Cache-Control', 'no-cache')
      next()
    })
  }

  app.get('/cache.manifest', manifest([
      { file: 'public', url: '/', ignore: /.*swp$/ }
    ], {
      cache: ["/"], 
      fallback: ["/ /"] 
    })
  )

  // middleware stack: try static files
  app.use(express.static(__dirname + "/public"))


  console.log(`listening on ${ip}:${port}`)
  app.listen(port, ip)
}

 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
