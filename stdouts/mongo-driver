
> kerberos@0.0.23 install /root/Targets/mongo-driver/node_modules/kerberos
> (node-gyp rebuild) || (exit 0)

make: Entering directory '/root/Targets/mongo-driver/node_modules/kerberos/build'
  CXX(target) Release/obj.target/kerberos/lib/kerberos.o
kerberos.target.mk:98: recipe for target 'Release/obj.target/kerberos/lib/kerberos.o' failed
make: Leaving directory '/root/Targets/mongo-driver/node_modules/kerberos/build'
/root/Targets/mongo-driver
└─┬ mongo-driver@1.3.3 
  ├── check-types@3.2.0 
  ├─┬ mongodb@2.0.39 
  │ ├── es6-promise@2.1.1 
  │ ├─┬ mongodb-core@1.2.6 
  │ │ ├── bson@0.4.23 
  │ │ └─┬ kerberos@0.0.23 
  │ │   └── nan@2.5.1 
  │ └─┬ readable-stream@1.0.31 
  │   ├── core-util-is@1.0.2 
  │   ├── inherits@2.0.3 
  │   ├── isarray@0.0.1 
  │   └── string_decoder@0.10.31 
  └── when@3.7.3 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/mongo-driver/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 17% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","Error","pow","random","parseInt","RegExp","toString","isNaN","isFinite"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0905 took 66.1039s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (90:11) on program /*globals define, module, Symbol */

/**
 * This module exports functions for checking types
 * and throwing exceptions.
 */

(function (globals) {
    'use strict';

    var messages, predicates, functions, assert, not, maybe, either, collections, slice;

    messages = {
        like: 'Invalid type',
        instance: 'Invalid type',
        emptyObject: 'Invalid object',
        object: 'Invalid object',
        assigned: 'Invalid value',
        undefined: 'Invalid value',
        null: 'Invalid value',
        hasLength: 'Invalid length',
        emptyArray: 'Invalid array',
        array: 'Invalid array',
        arrayLike: 'Invalid array-like object',
        iterable: 'Invalid iterable',
        date: 'Invalid date',
        error: 'Invalid error',
        fn: 'Invalid function',
        match: 'Invalid string',
        contains: 'Invalid string',
        unemptyString: 'Invalid string',
        string: 'Invalid string',
        odd: 'Invalid number',
        even: 'Invalid number',
        between: 'Invalid number',
        greater: 'Invalid number',
        less: 'Invalid number',
        positive: 'Invalid number',
        negative: 'Invalid number',
        integer: 'Invalid number',
        zero: 'Invalid number',
        number: 'Invalid number',
        boolean: 'Invalid boolean'
    };

    predicates = {
        like: like,
        instance: instance,
        emptyObject: emptyObject,
        object: object,
        assigned: assigned,
        undefined: isUndefined,
        null: isNull,
        hasLength: hasLength,
        emptyArray: emptyArray,
        array: array,
        arrayLike: arrayLike,
        iterable: iterable,
        date: date,
        error: error,
        function: isFunction,
        match: match,
        contains: contains,
        unemptyString: unemptyString,
        string: string,
        odd: odd,
        even: even,
        between: between,
        greater: greater,
        less: less,
        positive: positive,
        negative: negative,
        integer : integer,
        zero: zero,
        number: number,
        boolean: boolean
    };

    functions = {
        apply: apply,
        map: map,
        all: all,
        any: any
    };

    collections = [ 'array', 'arrayLike', 'iterable', 'object' ];
    slice = Array.prototype.slice;

    functions = mixin(functions, predicates);
    assert = createModifiedPredicates(assertModifier, assertImpl);
    not = createModifiedPredicates(notModifier, notImpl);
    maybe = createModifiedPredicates(maybeModifier, maybeImpl);
    either = createModifiedPredicates(eitherModifier);
    assert.not = createModifiedModifier(assertModifier, not);
    assert.maybe = createModifiedModifier(assertModifier, maybe);
    assert.either = createModifiedModifier(assertEitherModifier, predicates);

    collections.forEach(createOfPredicates);
    createOfModifiers(assert, assertModifier);
    createOfModifiers(not, notModifier);
    collections.forEach(createMaybeOfModifiers);

    exportFunctions(mixin(functions, {
        assert: assert,
        not: not,
        maybe: maybe,
        either: either
    }));

    /**
     * Public function `like`.
     *
     * Tests whether an object 'quacks like a duck'.
     * Returns `true` if the first argument has all of
     * the properties of the second, archetypal argument
     * (the 'duck'). Returns `false` otherwise.
     *
     */
    function like (data, duck) {
        var name;

        for (name in duck) {
            if (duck.hasOwnProperty(name)) {
                if (data.hasOwnProperty(name) === false || typeof data[name] !== typeof duck[name]) {
                    return false;
                }

                if (object(data[name]) && like(data[name], duck[name]) === false) {
                    return false;
                }
            }
        }

        return true;
    }

    /**
     * Public function `instance`.
     *
     * Returns `true` if an object is an instance of a prototype,
     * `false` otherwise.
     *
     */
    function instance (data, prototype) {
        if (data && isFunction(prototype) && data instanceof prototype) {
            return true;
        }

        return false;
    }

    /**
     * Public function `emptyObject`.
     *
     * Returns `true` if something is an empty object,
     * `false` otherwise.
     *
     */
    function emptyObject (data) {
        return object(data) && Object.keys(data).length === 0;
    }

    /**
     * Public function `object`.
     *
     * Returns `true` if something is a plain-old JS object,
     * `false` otherwise.
     *
     */
    function object (data) {
        return Object.prototype.toString.call(data) === '[object Object]';
    }

    /**
     * Public function `assigned`.
     *
     * Returns `true` if something is not null or undefined,
     * `false` otherwise.
     *
     */
    function assigned (data) {
        return !isUndefined(data) && !isNull(data);
    }

    /**
     * Public function `undefined`.
     *
     * Returns `true` if something is undefined,
     * `false` otherwise.
     *
     */
    function isUndefined (data) {
        return data === undefined;
    }

    /**
     * Public function `null`.
     *
     * Returns `true` if something is null,
     * `false` otherwise.
     *
     */
    function isNull (data) {
        return data === null;
    }

    /**
     * Public function `hasLength`.
     *
     * Returns `true` if something is has a length property
     * that equals `value`, `false` otherwise.
     *
     */
    function hasLength (data, value) {
        return assigned(data) && data.length === value;
    }

    /**
     * Public function `emptyArray`.
     *
     * Returns `true` if something is an empty array,
     * `false` otherwise.
     *
     */
    function emptyArray (data) {
        return array(data) && data.length === 0;
    }

    /**
     * Public function `array`.
     *
     * Returns `true` something is an array,
     * `false` otherwise.
     *
     */
    function array (data) {
        return Array.isArray(data);
    }

    /**
     * Public function `arrayLike`.
     *
     * Returns `true` something is an array-like object,
     * `false` otherwise.
     *
     */
    function arrayLike (data) {
        return assigned(data) && number(data.length);
    }

    /**
     * Public function `iterable`.
     *
     * Returns `true` something is an iterable,
     * `false` otherwise.
     *
     */
    function iterable (data) {
        if (typeof Symbol === 'undefined') {
            // Fall back to arrayLike predicate in pre-ES6 environments.
            return arrayLike(data);
        }

        return assigned(data) && isFunction(data[Symbol.iterator]);
    }

    /**
     * Public function `date`.
     *
     * Returns `true` something is a valid date,
     * `false` otherwise.
     *
     */
    function date (data) {
        return Object.prototype.toString.call(data) === '[object Date]' &&
            !isNaN(data.getTime());
    }

    /**
     * Public function `error`.
     *
     * Returns `true` if something is a plain-old JS object,
     * `false` otherwise.
     *
     */
    function error (data) {
        return Object.prototype.toString.call(data) === '[object Error]';
    }

    /**
     * Public function `function`.
     *
     * Returns `true` if something is function,
     * `false` otherwise.
     *
     */
    function isFunction (data) {
        return typeof data === 'function';
    }

    /**
     * Public function `match`.
     *
     * Returns `true` if something is a string
     * that matches `regex`, `false` otherwise.
     *
     */
    function match (data, regex) {
        return string(data) && !!data.match(regex);
    }

    /**
     * Public function `contains`.
     *
     * Returns `true` if something is a string
     * that contains `substring`, `false` otherwise.
     *
     */
    function contains (data, substring) {
        return string(data) && data.indexOf(substring) !== -1;
    }

    /**
     * Public function `unemptyString`.
     *
     * Returns `true` if something is a non-empty string,
     * `false` otherwise.
     *
     */
    function unemptyString (data) {
        return string(data) && data !== '';
    }

    /**
     * Public function `string`.
     *
     * Returns `true` if something is a string, `false` otherwise.
     *
     */
    function string (data) {
        return typeof data === 'string';
    }

    /**
     * Public function `odd`.
     *
     * Returns `true` if something is an odd number,
     * `false` otherwise.
     *
     */
    function odd (data) {
        return integer(data) && !even(data);
    }

    /**
     * Public function `even`.
     *
     * Returns `true` if something is an even number,
     * `false` otherwise.
     *
     */
    function even (data) {
        return number(data) && data % 2 === 0;
    }

    /**
     * Public function `integer`.
     *
     * Returns `true` if something is an integer,
     * `false` otherwise.
     *
     */
    function integer (data) {
        return number(data) && data % 1 === 0;
    }

    /**
     * Public function `between`.
     *
     * Returns `true` if something is a number
     * between `a` and `b`, `false` otherwise.
     *
     */
    function between (data, a, b) {
        if (a < b) {
            return greater(data, a) && less(data, b);
        }

        return less(data, a) && greater(data, b);
    }

    /**
     * Public function `greater`.
     *
     * Returns `true` if something is a number
     * greater than `value`, `false` otherwise.
     *
     */
    function greater (data, value) {
        return number(data) && data > value;
    }

    /**
     * Public function `less`.
     *
     * Returns `true` if something is a number
     * less than `value`, `false` otherwise.
     *
     */
    function less (data, value) {
        return number(data) && data < value;
    }

    /**
     * Public function `positive`.
     *
     * Returns `true` if something is a positive number,
     * `false` otherwise.
     *
     */
    function positive (data) {
        return greater(data, 0);
    }

    /**
     * Public function `negative`.
     *
     * Returns `true` if something is a negative number,
     * `false` otherwise.
     *
     * @param data          The thing to test.
     */
    function negative (data) {
        return less(data, 0);
    }

    /**
     * Public function `number`.
     *
     * Returns `true` if data is a number,
     * `false` otherwise.
     *
     */
    function number (data) {
        return typeof data === 'number' && isNaN(data) === false &&
               data !== Number.POSITIVE_INFINITY &&
               data !== Number.NEGATIVE_INFINITY;
    }

    /**
     * Public function `zero`.
     *
     * Returns `true` if something is zero,
     * `false` otherwise.
     *
     * @param data          The thing to test.
     */
    function zero (data) {
        return data === 0;
    }

    /**
     * Public function `boolean`.
     *
     * Returns `true` if data is a boolean value,
     * `false` otherwise.
     *
     */
    function boolean (data) {
        return data === false || data === true;
    }

    /**
     * Public function `apply`.
     *
     * Maps each value from the data to the corresponding predicate and returns
     * the result array. If the same function is to be applied across all of the
     * data, a single predicate function may be passed in.
     *
     */
    function apply (data, predicates) {
        assert.array(data);

        if (isFunction(predicates)) {
            return data.map(function (value) {
                return predicates(value);
            });
        }

        assert.array(predicates);
        assert.hasLength(data, predicates.length);

        return data.map(function (value, index) {
            return predicates[index](value);
        });
    }

    /**
     * Public function `map`.
     *
     * Maps each value from the data to the corresponding predicate and returns
     * the result object. Supports nested objects. If the data is not nested and
     * the same function is to be applied across all of it, a single predicate
     * function may be passed in.
     *
     */
    function map (data, predicates) {
        assert.object(data);

        if (isFunction(predicates)) {
            return mapSimple(data, predicates);
        }

        assert.object(predicates);

        return mapComplex(data, predicates);
    }

    function mapSimple (data, predicate) {
        var result = {};

        Object.keys(data).forEach(function (key) {
            result[key] = predicate(data[key]);
        });

        return result;
    }

    function mapComplex (data, predicates) {
        var result = {};

        Object.keys(predicates).forEach(function (key) {
            var predicate = predicates[key];

            if (isFunction(predicate)) {
                if (not.assigned(data)) {
                    result[key] = !!predicate._isMaybefied;
                } else {
                    result[key] = predicate(data[key]);
                }
            } else if (object(predicate)) {
                result[key] = mapComplex(data[key], predicate);
            }
        });

        return result;
    }

    /**
     * Public function `all`
     *
     * Check that all boolean values are true
     * in an array (returned from `apply`)
     * or object (returned from `map`).
     *
     */
    function all (data) {
        if (array(data)) {
            return testArray(data, false);
        }

        assert.object(data);

        return testObject(data, false);
    }

    function testArray (data, result) {
        var i;

        for (i = 0; i < data.length; i += 1) {
            if (data[i] === result) {
                return result;
            }
        }

        return !result;
    }

    function testObject (data, result) {
        var key, value;

        for (key in data) {
            if (data.hasOwnProperty(key)) {
                value = data[key];

                if (object(value) && testObject(value, result) === result) {
                    return result;
                }

                if (value === result) {
                    return result;
                }
            }
        }

        return !result;
    }

    /**
     * Public function `any`
     *
     * Check that at least one boolean value is true
     * in an array (returned from `apply`)
     * or object (returned from `map`).
     *
     */
    function any (data) {
        if (array(data)) {
            return testArray(data, true);
        }

        assert.object(data);

        return testObject(data, true);
    }

    function mixin (target, source) {
        Object.keys(source).forEach(function (key) {
            target[key] = source[key];
        });

        return target;
    }

    /**
     * Public modifier `assert`.
     *
     * Throws if `predicate` returns `false`.
     */
    function assertModifier (predicate, defaultMessage) {
        return function () {
            assertPredicate(predicate, arguments, defaultMessage);
        };
    }

    function assertPredicate (predicate, args, defaultMessage) {
        var message = args[args.length - 1];
        assertImpl(predicate.apply(null, args), unemptyString(message) ? message : defaultMessage);
    }

    function assertImpl (value, message) {
        if (value === false) {
            throw new Error(message || 'Assertion failed');
        }
    }

    function assertEitherModifier (predicate, defaultMessage) {
        return function () {
            var error;

            try {
                assertPredicate(predicate, arguments, defaultMessage);
            } catch (e) {
                error = e;
            }

            return {
                or: Object.keys(predicates).reduce(delayedAssert, {})
            };

            function delayedAssert (result, key) {
                result[key] = function () {
                    if (error && !predicates[key].apply(null, arguments)) {
                        throw error;
                    }
                };

                return result;
            }
        };
    }

    /**
     * Public modifier `not`.
     *
     * Negates `predicate`.
     */
    function notModifier (predicate) {
        return function () {
            return notImpl(predicate.apply(null, arguments));
        };
    }

    function notImpl (value) {
        return !value;
    }

    /**
     * Public modifier `maybe`.
     *
     * Returns `true` if predicate argument is  `null` or `undefined`,
     * otherwise propagates the return value from `predicate`.
     */
    function maybeModifier (predicate) {
        var modifiedPredicate = function () {
            if (!assigned(arguments[0])) {
                return true;
            }

            return predicate.apply(null, arguments);
        };

        // Hackishly indicate that this is a maybe.xxx predicate.
        // Without this flag, the alternative would be to iterate
        // through the maybe predicates or use indexOf to check,
        // which would be time-consuming.
        modifiedPredicate._isMaybefied = true;

        return modifiedPredicate;
    }

    function maybeImpl (value) {
        if (assigned(value) === false) {
            return true;
        }

        return value;
    }

    /**
     * Public modifier `either`.
     *
     * Returns `true` if either predicate is true.
     */
    function eitherModifier (predicate) {
        return function () {
            var shortcut = predicate.apply(null, arguments);

            return {
                or: Object.keys(predicates).reduce(nopOrPredicate, {})
            };

            function nopOrPredicate (result, key) {
                result[key] = shortcut ? nop : predicates[key];
                return result;
            }
        };

        function nop () {
            return true;
        }
    }

    /**
     * Public modifier `of`.
     *
     * Applies the chained predicate to members of the collection.
     */
    function ofModifier (target, type, predicate) {
        return function () {
            var collection, args;

            collection = arguments[0];

            if (!type(collection)) {
                return false;
            }

            collection = coerceCollection(type, collection);
            args = slice.call(arguments, 1);

            try {
                collection.forEach(function (item) {
                    if (
                        (target !== 'maybe' || assigned(item)) &&
                        !predicate.apply(null, [ item ].concat(args))
                    ) {
                        // HACK: Ideally we'd use a for...of loop and return here,
                        //       but that syntax is not supported by ES5. We could
                        //       use a transpiler and a build step but I'm happy
                        //       enough with this until ES6 is the baseline.
                        throw 0;
                    }
                });
            } catch (ignore) {
                return false;
            }

            return true;
        };
    }

    function coerceCollection (type, collection) {
        switch (type) {
            case arrayLike:
                return slice.call(collection);
            case object:
                return Object.keys(collection).map(function (key) {
                    return collection[key];
                });
            default:
                return collection;
        }
    }

    function createModifiedPredicates (modifier, object) {
        return createModifiedFunctions([ modifier, predicates, object ]);
    }

    function createModifiedFunctions (args) {
        var modifier, object, functions, result;

        modifier = args.shift();
        object = args.pop();
        functions = args.pop();

        result = object || {};

        Object.keys(functions).forEach(function (key) {
            Object.defineProperty(result, key, {
                configurable: false,
                enumerable: true,
                writable: false,
                value: modifier.apply(null, args.concat(functions[key], messages[key]))
            });
        });

        return result;
    }

    function createModifiedModifier (modifier, modified) {
        return createModifiedFunctions([ modifier, modified, null ]);
    }

    function createOfPredicates (key) {
        predicates[key].of = createModifiedFunctions(
            [ ofModifier.bind(null, null), predicates[key], predicates, null ]
        );
    }

    function createOfModifiers (base, modifier) {
        collections.forEach(function (key) {
            base[key].of = createModifiedModifier(modifier, predicates[key].of);
        });
    }

    function createMaybeOfModifiers (key) {
        maybe[key].of = createModifiedFunctions(
            [ ofModifier.bind(null, 'maybe'), predicates[key], predicates, null ]
        );
        assert.maybe[key].of = createModifiedModifier(assertModifier, maybe[key].of);
        assert.not[key].of = createModifiedModifier(assertModifier, not[key].of);
    }

    function exportFunctions (functions) {
        if (typeof define === 'function' && define.amd) {
            define(function () {
                return functions;
            });
        } else if (typeof module !== 'undefined' && module !== null && module.exports) {
            module.exports = functions;
        } else {
            globals.check = functions;
        }
    }
}(this));
 at SyntaxError: Unexpected token (90:11)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1822:12)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1597:21)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/mongo-driver/node_modules/mongo-driver/mongo-driver.js. Coverage (Term): 3% Coverage (LOC): 2%
*- File /root/Targets/mongo-driver/node_modules/mongodb/index.js. Coverage (Term): 99% Coverage (LOC): 100%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/index.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/lib/error.js. Coverage (Term): 26% Coverage (LOC): 35%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/lib/topologies/server.js. Coverage (Term): 11% Coverage (LOC): 16%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/lib/connection/utils.js. Coverage (Term): 20% Coverage (LOC): 27%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/lib/connection/pool.js. Coverage (Term): 19% Coverage (LOC): 23%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/lib/connection/connection.js. Coverage (Term): 11% Coverage (LOC): 15%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/lib/connection/commands.js. Coverage (Term): 8% Coverage (LOC): 17%
*- File /root/Targets/mongo-driver/node_modules/bson/lib/bson/index.js. Coverage (Term): 67% Coverage (LOC): 66%
*- File /root/Targets/mongo-driver/node_modules/bson/lib/bson/bson.js. Coverage (Term): 66% Coverage (LOC): 78%
*- File /root/Targets/mongo-driver/node_modules/bson/lib/bson/float_parser.js. Coverage (Term): 5% Coverage (LOC): 11%
*- File /root/Targets/mongo-driver/node_modules/bson/lib/bson/map.js. Coverage (Term): 7% Coverage (LOC): 7%
*- File /root/Targets/mongo-driver/node_modules/bson/lib/bson/long.js. Coverage (Term): 29% Coverage (LOC): 36%
*- File /root/Targets/mongo-driver/node_modules/bson/lib/bson/double.js. Coverage (Term): 45% Coverage (LOC): 60%
*- File /root/Targets/mongo-driver/node_modules/bson/lib/bson/timestamp.js. Coverage (Term): 17% Coverage (LOC): 28%
*- File /root/Targets/mongo-driver/node_modules/bson/lib/bson/objectid.js. Coverage (Term): 22% Coverage (LOC): 35%
*- File /root/Targets/mongo-driver/node_modules/bson/lib/bson/binary_parser.js. Coverage (Term): 8% Coverage (LOC): 30%
*- File /root/Targets/mongo-driver/node_modules/bson/lib/bson/regexp.js. Coverage (Term): 19% Coverage (LOC): 33%
*- File /root/Targets/mongo-driver/node_modules/bson/lib/bson/symbol.js. Coverage (Term): 44% Coverage (LOC): 62%
*- File /root/Targets/mongo-driver/node_modules/bson/lib/bson/code.js. Coverage (Term): 39% Coverage (LOC): 47%
*- File /root/Targets/mongo-driver/node_modules/bson/lib/bson/min_key.js. Coverage (Term): 56% Coverage (LOC): 63%
*- File /root/Targets/mongo-driver/node_modules/bson/lib/bson/max_key.js. Coverage (Term): 56% Coverage (LOC): 63%
*- File /root/Targets/mongo-driver/node_modules/bson/lib/bson/db_ref.js. Coverage (Term): 34% Coverage (LOC): 41%
*- File /root/Targets/mongo-driver/node_modules/bson/lib/bson/binary.js. Coverage (Term): 10% Coverage (LOC): 20%
*- File /root/Targets/mongo-driver/node_modules/bson/lib/bson/parser/deserializer.js. Coverage (Term): 12% Coverage (LOC): 16%
*- File /root/Targets/mongo-driver/node_modules/bson/lib/bson/parser/serializer.js. Coverage (Term): 9% Coverage (LOC): 12%
*- File /root/Targets/mongo-driver/node_modules/bson/lib/bson/parser/calculate_size.js. Coverage (Term): 21% Coverage (LOC): 34%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/lib/connection/logger.js. Coverage (Term): 20% Coverage (LOC): 29%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/lib/topologies/read_preference.js. Coverage (Term): 64% Coverage (LOC): 80%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/lib/cursor.js. Coverage (Term): 8% Coverage (LOC): 14%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/lib/topologies/command_result.js. Coverage (Term): 61% Coverage (LOC): 71%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/lib/wireprotocol/2_4_support.js. Coverage (Term): 8% Coverage (LOC): 9%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/lib/wireprotocol/commands.js. Coverage (Term): 4% Coverage (LOC): 11%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/lib/wireprotocol/2_6_support.js. Coverage (Term): 14% Coverage (LOC): 13%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/lib/wireprotocol/3_2_support.js. Coverage (Term): 11% Coverage (LOC): 9%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/lib/topologies/session.js. Coverage (Term): 42% Coverage (LOC): 68%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/lib/auth/mongocr.js. Coverage (Term): 13% Coverage (LOC): 16%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/lib/auth/x509.js. Coverage (Term): 15% Coverage (LOC): 19%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/lib/auth/plain.js. Coverage (Term): 16% Coverage (LOC): 18%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/lib/auth/gssapi.js. Coverage (Term): 11% Coverage (LOC): 16%
*- File /root/Targets/mongo-driver/node_modules/kerberos/index.js. Coverage (Term): 53% Coverage (LOC): 100%
*- File /root/Targets/mongo-driver/node_modules/kerberos/lib/kerberos.js. Coverage (Term): 4% Coverage (LOC): 4%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/lib/auth/sspi.js. Coverage (Term): 11% Coverage (LOC): 14%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/lib/auth/scram.js. Coverage (Term): 7% Coverage (LOC): 9%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/lib/topologies/replset.js. Coverage (Term): 7% Coverage (LOC): 10%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/lib/topologies/strategies/ping.js. Coverage (Term): 12% Coverage (LOC): 18%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/lib/topologies/replset_state.js. Coverage (Term): 10% Coverage (LOC): 18%
*- File /root/Targets/mongo-driver/node_modules/mongodb-core/lib/topologies/mongos.js. Coverage (Term): 11% Coverage (LOC): 16%
*- File /root/Targets/mongo-driver/node_modules/mongodb/lib/mongo_client.js. Coverage (Term): 5% Coverage (LOC): 4%
*- File /root/Targets/mongo-driver/node_modules/mongodb/lib/url_parser.js. Coverage (Term): 2% Coverage (LOC): 3%
*- File /root/Targets/mongo-driver/node_modules/mongodb/lib/read_preference.js. Coverage (Term): 32% Coverage (LOC): 55%
*- File /root/Targets/mongo-driver/node_modules/mongodb/lib/server.js. Coverage (Term): 14% Coverage (LOC): 16%
*- File /root/Targets/mongo-driver/node_modules/mongodb/lib/cursor.js. Coverage (Term): 14% Coverage (LOC): 19%
*- File /root/Targets/mongo-driver/node_modules/mongodb/lib/utils.js. Coverage (Term): 14% Coverage (LOC): 18%
*- File /root/Targets/mongo-driver/node_modules/mongodb/lib/topology_base.js. Coverage (Term): 12% Coverage (LOC): 14%
*- File /root/Targets/mongo-driver/node_modules/mongodb/lib/mongos.js. Coverage (Term): 14% Coverage (LOC): 17%
*- File /root/Targets/mongo-driver/node_modules/mongodb/lib/replset.js. Coverage (Term): 14% Coverage (LOC): 14%
*- File /root/Targets/mongo-driver/node_modules/mongodb/lib/db.js. Coverage (Term): 7% Coverage (LOC): 10%
*- File /root/Targets/mongo-driver/node_modules/mongodb/lib/command_cursor.js. Coverage (Term): 54% Coverage (LOC): 47%
*- File /root/Targets/mongo-driver/node_modules/mongodb/lib/admin.js. Coverage (Term): 7% Coverage (LOC): 13%
*- File /root/Targets/mongo-driver/node_modules/mongodb/lib/collection.js. Coverage (Term): 7% Coverage (LOC): 12%
*- File /root/Targets/mongo-driver/node_modules/mongodb/lib/aggregation_cursor.js. Coverage (Term): 39% Coverage (LOC): 41%
*- File /root/Targets/mongo-driver/node_modules/mongodb/lib/bulk/unordered.js. Coverage (Term): 11% Coverage (LOC): 14%
*- File /root/Targets/mongo-driver/node_modules/mongodb/lib/bulk/common.js. Coverage (Term): 13% Coverage (LOC): 15%
*- File /root/Targets/mongo-driver/node_modules/mongodb/lib/bulk/ordered.js. Coverage (Term): 13% Coverage (LOC): 15%
*- File /root/Targets/mongo-driver/node_modules/mongodb/lib/gridfs/grid_store.js. Coverage (Term): 6% Coverage (LOC): 9%
*- File /root/Targets/mongo-driver/node_modules/mongodb/lib/gridfs/chunk.js. Coverage (Term): 15% Coverage (LOC): 25%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
