/root/Targets/testem
└─┬ testem@1.18.4 
  ├─┬ backbone@1.3.3 
  │ └── underscore@1.8.3 
  ├── bluebird@3.5.0 
  ├─┬ charm@1.0.2 
  │ └── inherits@2.0.3 
  ├── commander@2.11.0 
  ├── consolidate@0.14.5 
  ├─┬ cross-spawn@5.1.0 
  │ ├─┬ lru-cache@4.1.1 
  │ │ ├── pseudomap@1.0.2 
  │ │ └── yallist@2.1.2 
  │ ├─┬ shebang-command@1.2.0 
  │ │ └── shebang-regex@1.0.0 
  │ └─┬ which@1.3.0 
  │   └── isexe@2.0.0 
  ├─┬ express@4.16.1 
  │ ├─┬ accepts@1.3.4 
  │ │ ├─┬ mime-types@2.1.17 
  │ │ │ └── mime-db@1.30.0 
  │ │ └── negotiator@0.6.1 
  │ ├── array-flatten@1.1.1 
  │ ├─┬ body-parser@1.18.2 
  │ │ ├── bytes@3.0.0 
  │ │ ├─┬ http-errors@1.6.2 
  │ │ │ └── setprototypeof@1.0.3 
  │ │ ├── iconv-lite@0.4.19 
  │ │ └── raw-body@2.3.2 
  │ ├── content-disposition@0.5.2 
  │ ├── content-type@1.0.4 
  │ ├── cookie@0.3.1 
  │ ├── cookie-signature@1.0.6 
  │ ├─┬ debug@2.6.9 
  │ │ └── ms@2.0.0 
  │ ├── depd@1.1.1 
  │ ├── encodeurl@1.0.1 
  │ ├── escape-html@1.0.3 
  │ ├── etag@1.8.1 
  │ ├─┬ finalhandler@1.1.0 
  │ │ └── unpipe@1.0.0 
  │ ├── fresh@0.5.2 
  │ ├── merge-descriptors@1.0.1 
  │ ├── methods@1.1.2 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── parseurl@1.3.2 
  │ ├── path-to-regexp@0.1.7 
  │ ├─┬ proxy-addr@2.0.2 
  │ │ ├── forwarded@0.1.2 
  │ │ └── ipaddr.js@1.5.2 
  │ ├── qs@6.5.1 
  │ ├── range-parser@1.2.0 
  │ ├── safe-buffer@5.1.1 
  │ ├─┬ send@0.16.1 
  │ │ ├── destroy@1.0.4 
  │ │ └── mime@1.4.1 
  │ ├── serve-static@1.13.1 
  │ ├── setprototypeof@1.1.0 
  │ ├── statuses@1.3.1 
  │ ├─┬ type-is@1.6.15 
  │ │ └── media-typer@0.3.0 
  │ ├── utils-merge@1.0.1 
  │ └── vary@1.1.2 
  ├─┬ fireworm@0.7.1 
  │ ├── async@0.2.10 
  │ ├─┬ is-type@0.0.1 
  │ │ └── core-util-is@1.0.2 
  │ ├─┬ lodash.debounce@3.1.1 
  │ │ └── lodash._getnative@3.9.1 
  │ ├─┬ lodash.flatten@3.0.2 
  │ │ ├─┬ lodash._baseflatten@3.1.4 
  │ │ │ ├── lodash.isarguments@3.1.0 
  │ │ │ └── lodash.isarray@3.0.4 
  │ │ └── lodash._isiterateecall@3.0.9 
  │ └─┬ minimatch@3.0.4 
  │   └─┬ brace-expansion@1.1.8 
  │     ├── balanced-match@1.0.0 
  │     └── concat-map@0.0.1 
  ├─┬ glob@7.1.2 
  │ ├── fs.realpath@1.0.0 
  │ ├─┬ inflight@1.0.6 
  │ │ └── wrappy@1.0.2 
  │ ├── once@1.4.0 
  │ └── path-is-absolute@1.0.1 
  ├─┬ http-proxy@1.16.2 
  │ ├── eventemitter3@1.2.0 
  │ └── requires-port@1.0.0 
  ├─┬ js-yaml@3.10.0 
  │ ├─┬ argparse@1.0.9 
  │ │ └── sprintf-js@1.0.3 
  │ └── esprima@4.0.0 
  ├── lodash.assignin@4.2.0 
  ├── lodash.clonedeep@4.5.0 
  ├── lodash.find@4.6.0 
  ├── lodash.uniqby@4.7.0 
  ├─┬ mkdirp@0.5.1 
  │ └── minimist@0.0.8 
  ├── mustache@2.3.0 
  ├─┬ node-notifier@5.1.2 
  │ ├── growly@1.3.0 
  │ ├── semver@5.4.1 
  │ └── shellwords@0.1.1 
  ├─┬ npmlog@4.1.2 
  │ ├─┬ are-we-there-yet@1.1.4 
  │ │ └── delegates@1.0.0 
  │ ├── console-control-strings@1.1.0 
  │ ├─┬ gauge@2.7.4 
  │ │ ├── aproba@1.2.0 
  │ │ ├── has-unicode@2.0.1 
  │ │ ├── object-assign@4.1.1 
  │ │ ├── signal-exit@3.0.2 
  │ │ ├─┬ string-width@1.0.2 
  │ │ │ ├── code-point-at@1.1.0 
  │ │ │ └─┬ is-fullwidth-code-point@1.0.0 
  │ │ │   └── number-is-nan@1.0.1 
  │ │ ├─┬ strip-ansi@3.0.1 
  │ │ │ └── ansi-regex@2.1.1 
  │ │ └── wide-align@1.1.2 
  │ └── set-blocking@2.0.0 
  ├── printf@0.2.5 
  ├── rimraf@2.6.2 
  ├─┬ socket.io@1.6.0 
  │ ├─┬ debug@2.3.3 
  │ │ └── ms@0.7.2 
  │ ├─┬ engine.io@1.8.0 
  │ │ ├── accepts@1.3.3 
  │ │ ├── base64id@0.1.0 
  │ │ ├─┬ debug@2.3.3 
  │ │ │ └── ms@0.7.2 
  │ │ ├─┬ engine.io-parser@1.3.1 
  │ │ │ ├── after@0.8.1 
  │ │ │ ├── arraybuffer.slice@0.0.6 
  │ │ │ ├── base64-arraybuffer@0.1.5 
  │ │ │ ├── blob@0.0.4 
  │ │ │ ├─┬ has-binary@0.1.6 
  │ │ │ │ └── isarray@0.0.1 
  │ │ │ └── wtf-8@1.0.0 
  │ │ └─┬ ws@1.1.1 
  │ │   ├── options@0.0.6 
  │ │   └── ultron@1.0.2 
  │ ├─┬ has-binary@0.1.7 
  │ │ └── isarray@0.0.1 
  │ ├── object-assign@4.1.0 
  │ ├─┬ socket.io-adapter@0.5.0 
  │ │ └─┬ debug@2.3.3 
  │ │   └── ms@0.7.2 
  │ ├─┬ socket.io-client@1.6.0 
  │ │ ├── backo2@1.0.2 
  │ │ ├── component-bind@1.0.0 
  │ │ ├── component-emitter@1.2.1 
  │ │ ├─┬ debug@2.3.3 
  │ │ │ └── ms@0.7.2 
  │ │ ├─┬ engine.io-client@1.8.0 
  │ │ │ ├── component-emitter@1.2.1 
  │ │ │ ├── component-inherit@0.0.3 
  │ │ │ ├─┬ debug@2.3.3 
  │ │ │ │ └── ms@0.7.2 
  │ │ │ ├── has-cors@1.1.0 
  │ │ │ ├── parsejson@0.0.3 
  │ │ │ ├── parseqs@0.0.5 
  │ │ │ ├── xmlhttprequest-ssl@1.5.3 
  │ │ │ └── yeast@0.1.2 
  │ │ ├── indexof@0.0.1 
  │ │ ├── object-component@0.0.3 
  │ │ ├─┬ parseuri@0.0.5 
  │ │ │ └─┬ better-assert@1.0.2 
  │ │ │   └── callsite@1.0.0 
  │ │ └── to-array@0.1.4 
  │ └─┬ socket.io-parser@2.3.1 
  │   ├── component-emitter@1.1.2 
  │   ├─┬ debug@2.2.0 
  │   │ └── ms@0.7.1 
  │   ├── isarray@0.0.1 
  │   └── json3@3.3.2 
  ├── spawn-args@0.2.0 
  ├── styled_string@0.0.1 
  ├─┬ tap-parser@5.4.0 
  │ ├── events-to-array@1.1.2 
  │ └─┬ readable-stream@2.3.3 
  │   ├── isarray@1.0.0 
  │   ├── process-nextick-args@1.0.7 
  │   ├── string_decoder@1.0.3 
  │   └── util-deprecate@1.0.2 
  └── xmldom@0.1.27 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/testem/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 25% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","getOwnPropertyNames","fromCharCode","join","assign"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0485 took 18.3593s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (4:4) on program // Note: since nyc uses this module to output coverage, any lines
// that are in the direct sync flow of nyc's outputCoverage are
// ignored, since we can never get coverage for them.
var assert = require('assert')
var signals = require('./signals.js')

var EE = require('events')
/* istanbul ignore if */
if (typeof EE !== 'function') {
  EE = EE.EventEmitter
}

var emitter
if (process.__signal_exit_emitter__) {
  emitter = process.__signal_exit_emitter__
} else {
  emitter = process.__signal_exit_emitter__ = new EE()
  emitter.count = 0
  emitter.emitted = {}
}

// Because this emitter is a global, we have to check to see if a
// previous version of this library failed to enable infinite listeners.
// I know what you're about to say.  But literally everything about
// signal-exit is a compromise with evil.  Get used to it.
if (!emitter.infinite) {
  emitter.setMaxListeners(Infinity)
  emitter.infinite = true
}

module.exports = function (cb, opts) {
  assert.equal(typeof cb, 'function', 'a callback must be provided for exit handler')

  if (loaded === false) {
    load()
  }

  var ev = 'exit'
  if (opts && opts.alwaysLast) {
    ev = 'afterexit'
  }

  var remove = function () {
    emitter.removeListener(ev, cb)
    if (emitter.listeners('exit').length === 0 &&
        emitter.listeners('afterexit').length === 0) {
      unload()
    }
  }
  emitter.on(ev, cb)

  return remove
}

module.exports.unload = unload
function unload () {
  if (!loaded) {
    return
  }
  loaded = false

  signals.forEach(function (sig) {
    try {
      process.removeListener(sig, sigListeners[sig])
    } catch (er) {}
  })
  process.emit = originalProcessEmit
  process.reallyExit = originalProcessReallyExit
  emitter.count -= 1
}

function emit (event, code, signal) {
  if (emitter.emitted[event]) {
    return
  }
  emitter.emitted[event] = true
  emitter.emit(event, code, signal)
}

// { <signal>: <listener fn>, ... }
var sigListeners = {}
signals.forEach(function (sig) {
  sigListeners[sig] = function listener () {
    // If there are no other listeners, an exit is coming!
    // Simplest way: remove us and then re-send the signal.
    // We know that this will kill the process, so we can
    // safely emit now.
    var listeners = process.listeners(sig)
    if (listeners.length === emitter.count) {
      unload()
      emit('exit', null, sig)
      /* istanbul ignore next */
      emit('afterexit', null, sig)
      /* istanbul ignore next */
      process.kill(process.pid, sig)
    }
  }
})

module.exports.signals = function () {
  return signals
}

module.exports.load = load

var loaded = false

function load () {
  if (loaded) {
    return
  }
  loaded = true

  // This is the number of onSignalExit's that are in play.
  // It's important so that we can count the correct number of
  // listeners on signals, and don't wait for the other one to
  // handle it instead of us.
  emitter.count += 1

  signals = signals.filter(function (sig) {
    try {
      process.on(sig, sigListeners[sig])
      return true
    } catch (er) {
      return false
    }
  })

  process.emit = processEmit
  process.reallyExit = processReallyExit
}

var originalProcessReallyExit = process.reallyExit
function processReallyExit (code) {
  process.exitCode = code || 0
  emit('exit', process.exitCode, null)
  /* istanbul ignore next */
  emit('afterexit', process.exitCode, null)
  /* istanbul ignore next */
  originalProcessReallyExit.call(process, process.exitCode)
}

var originalProcessEmit = process.emit
function processEmit (ev, arg) {
  if (ev === 'exit') {
    if (arg !== undefined) {
      process.exitCode = arg
    }
    var ret = originalProcessEmit.apply(this, arguments)
    emit('exit', process.exitCode, null)
    /* istanbul ignore next */
    emit('afterexit', process.exitCode, null)
    return ret
  } else {
    return originalProcessEmit.apply(this, arguments)
  }
}
 at SyntaxError: Unexpected token (4:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/testem/node_modules/testem/lib/api.js. Coverage (Term): 9% Coverage (LOC): 11%
*- File /root/Targets/testem/node_modules/npmlog/log.js. Coverage (Term): 2% Coverage (LOC): 2%
*- File /root/Targets/testem/node_modules/are-we-there-yet/index.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testem/node_modules/are-we-there-yet/tracker-group.js. Coverage (Term): 17% Coverage (LOC): 29%
*- File /root/Targets/testem/node_modules/are-we-there-yet/tracker-base.js. Coverage (Term): 68% Coverage (LOC): 75%
*- File /root/Targets/testem/node_modules/are-we-there-yet/tracker.js. Coverage (Term): 34% Coverage (LOC): 57%
*- File /root/Targets/testem/node_modules/are-we-there-yet/tracker-stream.js. Coverage (Term): 42% Coverage (LOC): 57%
*- File /root/Targets/testem/node_modules/readable-stream/readable.js. Coverage (Term): 61% Coverage (LOC): 60%
*- File /root/Targets/testem/node_modules/readable-stream/lib/_stream_readable.js. Coverage (Term): 8% Coverage (LOC): 14%
*- File /root/Targets/testem/node_modules/process-nextick-args/index.js. Coverage (Term): 22% Coverage (LOC): 19%
*- File /root/Targets/testem/node_modules/isarray/index.js. Coverage (Term): 62% Coverage (LOC): 83%
*- File /root/Targets/testem/node_modules/readable-stream/lib/internal/streams/stream.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/testem/node_modules/safe-buffer/index.js. Coverage (Term): 36% Coverage (LOC): 44%
*- File /root/Targets/testem/node_modules/core-util-is/lib/util.js. Coverage (Term): 33% Coverage (LOC): 64%
*- File /root/Targets/testem/node_modules/inherits/inherits.js. Coverage (Term): 74% Coverage (LOC): 88%
*- File /root/Targets/testem/node_modules/readable-stream/lib/internal/streams/BufferList.js. Coverage (Term): 19% Coverage (LOC): 29%
*- File /root/Targets/testem/node_modules/readable-stream/lib/internal/streams/destroy.js. Coverage (Term): 15% Coverage (LOC): 21%
*- File /root/Targets/testem/node_modules/readable-stream/lib/_stream_writable.js. Coverage (Term): 14% Coverage (LOC): 19%
*- File /root/Targets/testem/node_modules/util-deprecate/node.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/testem/node_modules/readable-stream/lib/_stream_duplex.js. Coverage (Term): 35% Coverage (LOC): 44%
*- File /root/Targets/testem/node_modules/readable-stream/lib/_stream_transform.js. Coverage (Term): 14% Coverage (LOC): 22%
*- File /root/Targets/testem/node_modules/readable-stream/lib/_stream_passthrough.js. Coverage (Term): 59% Coverage (LOC): 73%
*- File /root/Targets/testem/node_modules/delegates/index.js. Coverage (Term): 39% Coverage (LOC): 51%
*- File /root/Targets/testem/node_modules/gauge/index.js. Coverage (Term): 4% Coverage (LOC): 4%
*- File /root/Targets/testem/node_modules/gauge/plumbing.js. Coverage (Term): 35% Coverage (LOC): 48%
*- File /root/Targets/testem/node_modules/console-control-strings/index.js. Coverage (Term): 34% Coverage (LOC): 77%
*- File /root/Targets/testem/node_modules/gauge/render-template.js. Coverage (Term): 7% Coverage (LOC): 11%
*- File /root/Targets/testem/node_modules/wide-align/align.js. Coverage (Term): 15% Coverage (LOC): 22%
*- File /root/Targets/testem/node_modules/string-width/index.js. Coverage (Term): 29% Coverage (LOC): 31%
*- File /root/Targets/testem/node_modules/strip-ansi/index.js. Coverage (Term): 57% Coverage (LOC): 86%
*- File /root/Targets/testem/node_modules/ansi-regex/index.js. Coverage (Term): 93% Coverage (LOC): 100%
*- File /root/Targets/testem/node_modules/code-point-at/index.js. Coverage (Term): 14% Coverage (LOC): 20%
*- File /root/Targets/testem/node_modules/is-fullwidth-code-point/index.js. Coverage (Term): 15% Coverage (LOC): 46%
*- File /root/Targets/testem/node_modules/number-is-nan/index.js. Coverage (Term): 64% Coverage (LOC): 83%
*- File /root/Targets/testem/node_modules/aproba/index.js. Coverage (Term): 10% Coverage (LOC): 34%
*- File /root/Targets/testem/node_modules/object-assign/index.js. Coverage (Term): 54% Coverage (LOC): 53%
*- File /root/Targets/testem/node_modules/gauge/wide-truncate.js. Coverage (Term): 30% Coverage (LOC): 35%
*- File /root/Targets/testem/node_modules/gauge/error.js. Coverage (Term): 29% Coverage (LOC): 43%
*- File /root/Targets/testem/node_modules/gauge/template-item.js. Coverage (Term): 16% Coverage (LOC): 26%
*- File /root/Targets/testem/node_modules/has-unicode/index.js. Coverage (Term): 41% Coverage (LOC): 50%
*- File /root/Targets/testem/node_modules/gauge/has-color.js. Coverage (Term): 95% Coverage (LOC): 100%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
