/root/Targets/cloudcms-server
└─┬ cloudcms-server@0.8.435 
  ├─┬ accepts@1.3.4 
  │ ├─┬ mime-types@2.1.17 
  │ │ └── mime-db@1.30.0 
  │ └── negotiator@0.6.1 
  ├── agentkeepalive@2.2.0 
  ├── alpaca@1.5.23 
  ├─┬ archiver@1.3.0 
  │ ├─┬ archiver-utils@1.3.0 
  │ │ ├── lazystream@1.0.0 
  │ │ └─┬ normalize-path@2.1.1 
  │ │   └── remove-trailing-separator@1.1.0 
  │ ├── async@2.5.0 
  │ ├── buffer-crc32@0.2.13 
  │ ├─┬ glob@7.1.2 
  │ │ ├── fs.realpath@1.0.0 
  │ │ ├─┬ inflight@1.0.6 
  │ │ │ └── wrappy@1.0.2 
  │ │ ├── inherits@2.0.3 
  │ │ ├── minimatch@3.0.4 
  │ │ ├── once@1.4.0 
  │ │ └── path-is-absolute@1.0.1 
  │ ├── lodash@4.17.4 
  │ ├─┬ readable-stream@2.3.3 
  │ │ ├── core-util-is@1.0.2 
  │ │ ├── isarray@1.0.0 
  │ │ ├── process-nextick-args@1.0.7 
  │ │ ├── string_decoder@1.0.3 
  │ │ └── util-deprecate@1.0.2 
  │ ├─┬ tar-stream@1.5.4 
  │ │ ├── bl@1.2.1 
  │ │ └── end-of-stream@1.4.0 
  │ ├── walkdir@0.0.11 
  │ └─┬ zip-stream@1.2.0 
  │   └─┬ compress-commons@1.2.0 
  │     └─┬ crc32-stream@2.0.0 
  │       └── crc@3.5.0 
  ├── async@1.5.2 
  ├─┬ aws-sdk@2.124.0 
  │ ├─┬ buffer@4.9.1 
  │ │ ├── base64-js@1.2.1 
  │ │ └── ieee754@1.1.8 
  │ ├── crypto-browserify@1.0.9 
  │ ├── events@1.1.1 
  │ ├── jmespath@0.15.0 
  │ ├── querystring@0.2.0 
  │ ├── sax@1.2.1 
  │ ├─┬ url@0.10.3 
  │ │ └── punycode@1.3.2 
  │ ├── uuid@3.0.1 
  │ ├── xml2js@0.4.17 
  │ └── xmlbuilder@4.2.1 
  ├── basic-auth@1.1.0 
  ├─┬ basic-logger@0.4.4 
  │ ├── pkginfo@0.2.3 
  │ └── underscore@1.2.4 
  ├─┬ body-parser@1.18.2 
  │ ├── bytes@3.0.0 
  │ ├── content-type@1.0.4 
  │ ├── depd@1.1.1 
  │ ├─┬ http-errors@1.6.2 
  │ │ └── setprototypeof@1.0.3 
  │ ├── iconv-lite@0.4.19 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── qs@6.5.1 
  │ ├─┬ raw-body@2.3.2 
  │ │ ├── bytes@3.0.0 
  │ │ └── unpipe@1.0.0 
  │ └─┬ type-is@1.6.15 
  │   └── media-typer@0.3.0 
  ├── bytes@2.5.0 
  ├── canoe@0.3.3 
  ├── clone@2.1.1 
  ├── connect-flash@0.1.1 
  ├─┬ connect-multiparty@2.0.0 
  │ ├─┬ multiparty@4.1.3 
  │ │ └─┬ fd-slicer@1.0.1 
  │ │   └── pend@1.2.0 
  │ └── qs@4.0.0 
  ├─┬ connect-redis@3.3.2 
  │ └── debug@3.1.0 
  ├─┬ consolidate@0.14.5 
  │ └── bluebird@3.5.0 
  ├─┬ cookie-parser@1.4.3 
  │ ├── cookie@0.3.1 
  │ └── cookie-signature@1.0.6 
  ├─┬ debug@2.6.9 
  │ └── ms@2.0.0 
  ├── dustjs-helpers@1.7.3 
  ├─┬ dustjs-linkedin@2.7.5 
  │ ├─┬ chokidar@1.5.2 
  │ │ ├─┬ anymatch@1.3.2 
  │ │ │ └─┬ micromatch@2.3.11 
  │ │ │   ├─┬ arr-diff@2.0.0 
  │ │ │   │ └── arr-flatten@1.1.0 
  │ │ │   ├── array-unique@0.2.1 
  │ │ │   ├─┬ braces@1.8.5 
  │ │ │   │ ├─┬ expand-range@1.8.2 
  │ │ │   │ │ └─┬ fill-range@2.2.3 
  │ │ │   │ │   ├── is-number@2.1.0 
  │ │ │   │ │   ├── isobject@2.1.0 
  │ │ │   │ │   └─┬ randomatic@1.1.7 
  │ │ │   │ │     ├─┬ is-number@3.0.0 
  │ │ │   │ │     │ └── kind-of@3.2.2 
  │ │ │   │ │     └── kind-of@4.0.0 
  │ │ │   │ ├── preserve@0.2.0 
  │ │ │   │ └── repeat-element@1.1.2 
  │ │ │   ├─┬ expand-brackets@0.1.5 
  │ │ │   │ └── is-posix-bracket@0.1.1 
  │ │ │   ├── extglob@0.3.2 
  │ │ │   ├── filename-regex@2.0.1 
  │ │ │   ├─┬ kind-of@3.2.2 
  │ │ │   │ └── is-buffer@1.1.5 
  │ │ │   ├─┬ object.omit@2.0.1 
  │ │ │   │ ├─┬ for-own@0.1.5 
  │ │ │   │ │ └── for-in@1.0.2 
  │ │ │   │ └── is-extendable@0.1.1 
  │ │ │   ├─┬ parse-glob@3.0.4 
  │ │ │   │ ├── glob-base@0.3.0 
  │ │ │   │ └── is-dotfile@1.0.3 
  │ │ │   └─┬ regex-cache@0.4.4 
  │ │ │     └─┬ is-equal-shallow@0.1.3 
  │ │ │       └── is-primitive@2.0.0 
  │ │ ├── async-each@1.0.1 
  │ │ ├── glob-parent@2.0.0 
  │ │ ├─┬ is-binary-path@1.0.1 
  │ │ │ └── binary-extensions@1.10.0 
  │ │ ├─┬ is-glob@2.0.1 
  │ │ │ └── is-extglob@1.0.0 
  │ │ └─┬ readdirp@2.1.0 
  │ │   └── set-immediate-shim@1.0.1 
  │ └─┬ cli@1.0.1 
  │   └── exit@0.1.2 
  ├─┬ errorhandler@1.5.0 
  │ └── escape-html@1.0.3 
  ├─┬ express@4.16.0 
  │ ├── array-flatten@1.1.1 
  │ ├── content-disposition@0.5.2 
  │ ├── encodeurl@1.0.1 
  │ ├── etag@1.8.1 
  │ ├── finalhandler@1.1.0 
  │ ├── fresh@0.5.2 
  │ ├── merge-descriptors@1.0.1 
  │ ├── methods@1.1.2 
  │ ├── parseurl@1.3.2 
  │ ├── path-to-regexp@0.1.7 
  │ ├─┬ proxy-addr@2.0.2 
  │ │ ├── forwarded@0.1.2 
  │ │ └── ipaddr.js@1.5.2 
  │ ├── range-parser@1.2.0 
  │ ├── safe-buffer@5.1.1 
  │ ├─┬ send@0.16.0 
  │ │ └── destroy@1.0.4 
  │ ├── serve-static@1.13.0 
  │ ├── setprototypeof@1.1.0 
  │ ├── statuses@1.3.1 
  │ ├── utils-merge@1.0.1 
  │ └── vary@1.1.2 
  ├─┬ express-session@1.15.6 
  │ ├── crc@3.4.4 
  │ └─┬ uid-safe@2.1.5 
  │   └── random-bytes@1.0.0 
  ├── express-useragent@1.0.8 
  ├─┬ gitana@1.0.245 
  │ └── xmlhttprequest@1.8.0 
  ├─┬ handlebars@4.0.10 
  │ ├─┬ optimist@0.6.1 
  │ │ ├── minimist@0.0.10 
  │ │ └── wordwrap@0.0.3 
  │ ├─┬ source-map@0.4.4 
  │ │ └── amdefine@1.0.1 
  │ └─┬ uglify-js@2.8.29 
  │   ├── source-map@0.5.7 
  │   ├── uglify-to-browserify@1.0.2 
  │   └─┬ yargs@3.10.0 
  │     ├── camelcase@1.2.1 
  │     ├─┬ cliui@2.1.0 
  │     │ ├─┬ center-align@0.1.3 
  │     │ │ ├─┬ align-text@0.1.4 
  │     │ │ │ ├── longest@1.0.1 
  │     │ │ │ └── repeat-string@1.6.1 
  │     │ │ └── lazy-cache@1.0.4 
  │     │ ├── right-align@0.1.3 
  │     │ └── wordwrap@0.0.2 
  │     ├── decamelize@1.2.0 
  │     └── window-size@0.1.0 
  ├─┬ hbs@4.0.1 
  │ ├── handlebars@4.0.5 
  │ └─┬ walk@2.3.9 
  │   └── foreachasync@3.0.0 
  ├─┬ http-proxy@1.16.2 
  │ ├── eventemitter3@1.2.0 
  │ └── requires-port@1.0.0 
  ├─┬ jade@1.3.1 
  │ ├── character-parser@1.2.0 
  │ ├── commander@2.1.0 
  │ ├─┬ constantinople@2.0.1 
  │ │ └─┬ uglify-js@2.4.24 
  │ │   ├── async@0.2.10 
  │ │   ├── source-map@0.1.34 
  │ │   └─┬ yargs@3.5.4 
  │ │     └── wordwrap@0.0.2 
  │ ├── mkdirp@0.3.5 
  │ ├─┬ monocle@1.1.51 
  │ │ └── readdirp@0.2.5 
  │ ├─┬ transformers@2.1.0 
  │ │ ├─┬ css@1.0.8 
  │ │ │ ├── css-parse@1.0.4 
  │ │ │ └── css-stringify@1.0.5 
  │ │ ├─┬ promise@2.0.0 
  │ │ │ └── is-promise@1.0.1 
  │ │ └─┬ uglify-js@2.2.5 
  │ │   ├── optimist@0.3.7 
  │ │   └── source-map@0.1.43 
  │ └─┬ with@3.0.1 
  │   └─┬ uglify-js@2.4.24 
  │     ├── async@0.2.10 
  │     ├── source-map@0.1.34 
  │     └─┬ yargs@3.5.4 
  │       └── wordwrap@0.0.2 
  ├─┬ jsonwebtoken@7.4.3 
  │ ├─┬ joi@6.10.1 
  │ │ ├── hoek@2.16.3 
  │ │ ├── isemail@1.2.0 
  │ │ └─┬ topo@1.1.0 
  │ │   └── hoek@2.16.3 
  │ ├─┬ jws@3.1.4 
  │ │ ├── base64url@2.0.0 
  │ │ └─┬ jwa@1.1.5 
  │ │   ├── buffer-equal-constant-time@1.0.1 
  │ │   └── ecdsa-sig-formatter@1.0.9 
  │ ├── lodash.once@4.1.1 
  │ └── xtend@4.0.1 
  ├─┬ klaw@1.3.1 
  │ └── graceful-fs@4.1.11 
  ├─┬ lru-cache@4.1.1 
  │ ├── pseudomap@1.0.2 
  │ └── yallist@2.1.2 
  ├── marked@0.3.6 
  ├── mime@1.4.1 
  ├─┬ mkdirp@0.5.1 
  │ └── minimist@0.0.8 
  ├── moment@2.18.1 
  ├─┬ morgan@1.9.0 
  │ └── basic-auth@2.0.0 
  ├── node-redis-pubsub@1.0.3 
  ├── object-hash@1.1.8 
  ├─┬ object-merge@2.5.1 
  │ ├── clone-function@1.0.6 
  │ └── object-foreach@0.1.2 
  ├── on-headers@1.0.1 
  ├─┬ passport@0.3.2 
  │ ├── passport-strategy@1.0.0 
  │ └── pause@0.0.1 
  ├─┬ passport-cas@0.1.1 
  │ ├── node-uuid@1.4.1 
  │ ├── underscore@1.6.0 
  │ └─┬ xml2js@0.4.4 
  │   └── sax@0.6.1 
  ├─┬ passport-facebook@2.1.1 
  │ └─┬ passport-oauth2@1.4.0 
  │   ├── oauth@0.9.15 
  │   └── uid2@0.0.3 
  ├── passport-github@1.1.0 
  ├─┬ passport-google-oauth@1.0.0 
  │ ├── passport-google-oauth1@1.0.0 
  │ └── passport-google-oauth20@1.0.0 
  ├─┬ passport-linkedin@1.0.0 
  │ └── passport-oauth1@1.1.0 
  ├── passport-local@1.0.0 
  ├── passport-oauth@1.0.0 
  ├─┬ passport-twitter@1.0.4 
  │ └─┬ xtraverse@0.1.0 
  │   └── xmldom@0.1.27 
  ├── pkginfo@0.4.1 
  ├── q@1.5.0 
  ├── random-js@1.0.8 
  ├─┬ recursive-readdir@2.2.1 
  │ └─┬ minimatch@3.0.3 
  │   └─┬ brace-expansion@1.1.8 
  │     ├── balanced-match@1.0.0 
  │     └── concat-map@0.0.1 
  ├─┬ redis@2.8.0 
  │ ├── double-ended-queue@2.1.0-0 
  │ ├── redis-commands@1.3.1 
  │ └── redis-parser@2.6.0 
  ├─┬ request@2.83.0 
  │ ├── aws-sign2@0.7.0 
  │ ├── aws4@1.6.0 
  │ ├── caseless@0.12.0 
  │ ├─┬ combined-stream@1.0.5 
  │ │ └── delayed-stream@1.0.0 
  │ ├── extend@3.0.1 
  │ ├── forever-agent@0.6.1 
  │ ├─┬ form-data@2.3.1 
  │ │ └── asynckit@0.4.0 
  │ ├─┬ har-validator@5.0.3 
  │ │ ├─┬ ajv@5.2.3 
  │ │ │ ├── co@4.6.0 
  │ │ │ ├── fast-deep-equal@1.0.0 
  │ │ │ ├── json-schema-traverse@0.3.1 
  │ │ │ └─┬ json-stable-stringify@1.0.1 
  │ │ │   └── jsonify@0.0.0 
  │ │ └── har-schema@2.0.0 
  │ ├─┬ hawk@6.0.2 
  │ │ ├── boom@4.3.1 
  │ │ ├─┬ cryptiles@3.1.2 
  │ │ │ └── boom@5.2.0 
  │ │ ├── hoek@4.2.0 
  │ │ └── sntp@2.0.2 
  │ ├─┬ http-signature@1.2.0 
  │ │ ├── assert-plus@1.0.0 
  │ │ ├─┬ jsprim@1.4.1 
  │ │ │ ├── extsprintf@1.3.0 
  │ │ │ ├── json-schema@0.2.3 
  │ │ │ └── verror@1.10.0 
  │ │ └─┬ sshpk@1.13.1 
  │ │   ├── asn1@0.2.3 
  │ │   ├── bcrypt-pbkdf@1.0.1 
  │ │   ├── dashdash@1.14.1 
  │ │   ├── ecc-jsbn@0.1.1 
  │ │   ├── getpass@0.1.7 
  │ │   ├── jsbn@0.1.1 
  │ │   └── tweetnacl@0.14.5 
  │ ├── is-typedarray@1.0.0 
  │ ├── isstream@0.1.2 
  │ ├── json-stringify-safe@5.0.1 
  │ ├── oauth-sign@0.8.2 
  │ ├── performance-now@2.1.0 
  │ ├── stringstream@0.0.5 
  │ ├─┬ tough-cookie@2.3.3 
  │ │ └── punycode@1.4.1 
  │ └── tunnel-agent@0.6.0 
  ├── request-param@1.0.1 
  ├── response-time@2.3.2 
  ├── rwlock@5.0.0 
  ├── semver@5.4.1 
  ├── serve-favicon@2.4.5 
  ├─┬ session-file-store@0.2.2 
  │ ├── bagpipe@0.3.5 
  │ ├─┬ fs-extra@0.26.7 
  │ │ ├── jsonfile@2.4.0 
  │ │ └── rimraf@2.6.2 
  │ ├── retry@0.9.0 
  │ └─┬ write-file-atomic@1.3.4 
  │   ├── imurmurhash@0.1.4 
  │   └── slide@1.1.6 
  ├─┬ sha1@1.1.1 
  │ ├── charenc@0.0.2 
  │ └── crypt@0.0.2 
  ├─┬ socket.io@1.7.4 
  │ ├─┬ debug@2.3.3 
  │ │ └── ms@0.7.2 
  │ ├─┬ engine.io@1.8.4 
  │ │ ├── accepts@1.3.3 
  │ │ ├── base64id@1.0.0 
  │ │ ├─┬ debug@2.3.3 
  │ │ │ └── ms@0.7.2 
  │ │ ├─┬ engine.io-parser@1.3.2 
  │ │ │ ├── after@0.8.2 
  │ │ │ ├── arraybuffer.slice@0.0.6 
  │ │ │ ├── base64-arraybuffer@0.1.5 
  │ │ │ ├── blob@0.0.4 
  │ │ │ └── wtf-8@1.0.0 
  │ │ └─┬ ws@1.1.4 
  │ │   ├── options@0.0.6 
  │ │   └── ultron@1.0.2 
  │ ├─┬ has-binary@0.1.7 
  │ │ └── isarray@0.0.1 
  │ ├── object-assign@4.1.0 
  │ ├─┬ socket.io-adapter@0.5.0 
  │ │ └─┬ debug@2.3.3 
  │ │   └── ms@0.7.2 
  │ ├─┬ socket.io-client@1.7.4 
  │ │ ├── backo2@1.0.2 
  │ │ ├── component-bind@1.0.0 
  │ │ ├── component-emitter@1.2.1 
  │ │ ├─┬ debug@2.3.3 
  │ │ │ └── ms@0.7.2 
  │ │ ├─┬ engine.io-client@1.8.4 
  │ │ │ ├── component-emitter@1.2.1 
  │ │ │ ├── component-inherit@0.0.3 
  │ │ │ ├─┬ debug@2.3.3 
  │ │ │ │ └── ms@0.7.2 
  │ │ │ ├── has-cors@1.1.0 
  │ │ │ ├── parsejson@0.0.3 
  │ │ │ ├── parseqs@0.0.5 
  │ │ │ ├── ws@1.1.2 
  │ │ │ ├── xmlhttprequest-ssl@1.5.3 
  │ │ │ └── yeast@0.1.2 
  │ │ ├── indexof@0.0.1 
  │ │ ├── object-component@0.0.3 
  │ │ ├─┬ parseuri@0.0.5 
  │ │ │ └─┬ better-assert@1.0.2 
  │ │ │   └── callsite@1.0.0 
  │ │ └── to-array@0.1.4 
  │ └─┬ socket.io-parser@2.3.1 
  │   ├── component-emitter@1.1.2 
  │   ├─┬ debug@2.2.0 
  │   │ └── ms@0.7.1 
  │   ├── isarray@0.0.1 
  │   └── json3@3.3.2 
  ├── ssl-root-cas@1.2.4 
  ├─┬ tar.gz@1.0.5 
  │ ├── bluebird@2.11.0 
  │ ├── commander@2.11.0 
  │ ├── fstream@1.0.11 
  │ ├── mout@0.11.1 
  │ └─┬ tar@2.2.1 
  │   └── block-stream@0.0.9 
  ├─┬ temp@0.8.3 
  │ ├── os-tmpdir@1.0.2 
  │ └── rimraf@2.2.8 
  ├── toobusy-js@0.5.1 
  ├── uuid@3.1.0 
  └─┬ watch@1.0.2 
    ├─┬ exec-sh@0.2.1 
    │ └── merge@1.2.0 
    └── minimist@1.2.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/cloudcms-server/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 14.000000000000002% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0559 took 6.1704s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Invalid number (226:20) on program var fs   = require('fs'),
    path = require('path'),
    cnst = require('constants');

var rimraf     = require('rimraf'),
    osTmpdir   = require('os-tmpdir'),
    rimrafSync = rimraf.sync;

/* HELPERS */

var RDWR_EXCL = cnst.O_CREAT | cnst.O_TRUNC | cnst.O_RDWR | cnst.O_EXCL;

var generateName = function(rawAffixes, defaultPrefix) {
  var affixes = parseAffixes(rawAffixes, defaultPrefix);
  var now = new Date();
  var name = [affixes.prefix,
              now.getYear(), now.getMonth(), now.getDate(),
              '-',
              process.pid,
              '-',
              (Math.random() * 0x100000000 + 1).toString(36),
              affixes.suffix].join('');
  return path.join(affixes.dir || exports.dir, name);
};

var parseAffixes = function(rawAffixes, defaultPrefix) {
  var affixes = {prefix: null, suffix: null};
  if(rawAffixes) {
    switch (typeof(rawAffixes)) {
    case 'string':
      affixes.prefix = rawAffixes;
      break;
    case 'object':
      affixes = rawAffixes;
      break;
    default:
      throw new Error("Unknown affix declaration: " + affixes);
    }
  } else {
    affixes.prefix = defaultPrefix;
  }
  return affixes;
};

/* -------------------------------------------------------------------------
 * Don't forget to call track() if you want file tracking and exit handlers!
 * -------------------------------------------------------------------------
 * When any temp file or directory is created, it is added to filesToDelete
 * or dirsToDelete. The first time any temp file is created, a listener is
 * added to remove all temp files and directories at exit.
 */
var tracking = false;
var track = function(value) {
  tracking = (value !== false);
  return module.exports; // chainable
};
var exitListenerAttached = false;
var filesToDelete = [];
var dirsToDelete = [];

function deleteFileOnExit(filePath) {
  if (!tracking) return false;
  attachExitListener();
  filesToDelete.push(filePath);
}

function deleteDirOnExit(dirPath) {
  if (!tracking) return false;
  attachExitListener();
  dirsToDelete.push(dirPath);
}

function attachExitListener() {
  if (!tracking) return false;
  if (!exitListenerAttached) {
    process.addListener('exit', cleanupSync);
    exitListenerAttached = true;
  }
}

function cleanupFilesSync() {
  if (!tracking) {
    return false;
  }
  var count = 0;
  var toDelete;
  while ((toDelete = filesToDelete.shift()) !== undefined) {
    rimrafSync(toDelete);
    count++;
  }
  return count;
}

function cleanupFiles(callback) {
  if (!tracking) {
    if (callback) {
      callback(new Error("not tracking"));
    }
    return;
  }
  var count = 0;
  var left = filesToDelete.length;
  if (!left) {
    if (callback) {
      callback(null, count);
    }
    return;
  }
  var toDelete;
  var rimrafCallback = function(err) {
    if (!left) {
      // Prevent processing if aborted
      return;
    }
    if (err) {
      // This shouldn't happen; pass error to callback and abort
      // processing
      if (callback) {
        callback(err);
      }
      left = 0;
      return;
    } else {
      count++;
    }
    left--;
    if (!left && callback) {
      callback(null, count);
    }
  };
  while ((toDelete = filesToDelete.shift()) !== undefined) {
    rimraf(toDelete, rimrafCallback);
  }
}

function cleanupDirsSync() {
  if (!tracking) {
    return false;
  }
  var count = 0;
  var toDelete;
  while ((toDelete = dirsToDelete.shift()) !== undefined) {
    rimrafSync(toDelete);
    count++;
  }
  return count;
}

function cleanupDirs(callback) {
  if (!tracking) {
    if (callback) {
      callback(new Error("not tracking"));
    }
    return;
  }
  var count = 0;
  var left = dirsToDelete.length;
  if (!left) {
    if (callback) {
      callback(null, count);
    }
    return;
  }
  var toDelete;
  var rimrafCallback = function (err) {
    if (!left) {
      // Prevent processing if aborted
      return;
    }
    if (err) {
      // rimraf handles most "normal" errors; pass the error to the
      // callback and abort processing
      if (callback) {
        callback(err, count);
      }
      left = 0;
      return;
    } else {
      count;
    }
    left--;
    if (!left && callback) {
      callback(null, count);
    }
  };
  while ((toDelete = dirsToDelete.shift()) !== undefined) {
    rimraf(toDelete, rimrafCallback);
  }
}

function cleanupSync() {
  if (!tracking) {
    return false;
  }
  var fileCount = cleanupFilesSync();
  var dirCount  = cleanupDirsSync();
  return {files: fileCount, dirs: dirCount};
}

function cleanup(callback) {
  if (!tracking) {
    if (callback) {
      callback(new Error("not tracking"));
    }
    return;
  }
  cleanupFiles(function(fileErr, fileCount) {
    if (fileErr) {
      if (callback) {
        callback(fileErr, {files: fileCount})
      }
    } else {
      cleanupDirs(function(dirErr, dirCount) {
        if (callback) {
          callback(dirErr, {files: fileCount, dirs: dirCount});
        }
      });
    }
  });
}

/* DIRECTORIES */

function mkdir(affixes, callback) {
  var dirPath = generateName(affixes, 'd-');
  fs.mkdir(dirPath, 0700, function(err) {
    if (!err) {
      deleteDirOnExit(dirPath);
    }
    if (callback) {
      callback(err, dirPath);
    }
  });
}

function mkdirSync(affixes) {
  var dirPath = generateName(affixes, 'd-');
  fs.mkdirSync(dirPath, 0700);
  deleteDirOnExit(dirPath);
  return dirPath;
}

/* FILES */

function open(affixes, callback) {
  var filePath = generateName(affixes, 'f-');
  fs.open(filePath, RDWR_EXCL, 0600, function(err, fd) {
    if (!err) {
      deleteFileOnExit(filePath);
    }
    if (callback) {
      callback(err, {path: filePath, fd: fd});
    }
  });
}

function openSync(affixes) {
  var filePath = generateName(affixes, 'f-');
  var fd = fs.openSync(filePath, RDWR_EXCL, 0600);
  deleteFileOnExit(filePath);
  return {path: filePath, fd: fd};
}

function createWriteStream(affixes) {
  var filePath = generateName(affixes, 's-');
  var stream = fs.createWriteStream(filePath, {flags: RDWR_EXCL, mode: 0600});
  deleteFileOnExit(filePath);
  return stream;
}

/* EXPORTS */
// Settings
exports.dir               = path.resolve(osTmpdir());
exports.track             = track;
// Functions
exports.mkdir             = mkdir;
exports.mkdirSync         = mkdirSync;
exports.open              = open;
exports.openSync          = openSync;
exports.path              = generateName;
exports.cleanup           = cleanup;
exports.cleanupSync       = cleanupSync;
exports.createWriteStream = createWriteStream;
 at SyntaxError: Invalid number (226:20)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/cloudcms-server/node_modules/cloudcms-server/index.js. Coverage (Term): 2% Coverage (LOC): 2%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
