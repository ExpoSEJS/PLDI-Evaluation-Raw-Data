/root/Targets/testdouble
└─┬ testdouble@3.2.6 
  ├─┬ es6-map@0.1.5 
  │ ├── d@1.0.0 
  │ ├── es5-ext@0.10.30 
  │ ├── es6-iterator@2.0.1 
  │ ├── es6-set@0.1.5 
  │ ├── es6-symbol@3.1.1 
  │ └── event-emitter@0.3.5 
  ├── lodash@4.17.4 
  ├── quibble@0.5.1 
  ├─┬ resolve@1.4.0 
  │ └── path-parse@1.0.5 
  └─┬ stringify-object-es5@2.5.0 
    ├── is-plain-obj@1.1.0 
    └── is-regexp@1.0.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/testdouble/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /3 queued / 1 running / 0 errors / 65% coverage ] ****** [1 done /2 queued / 2 running / 0 errors / 65% coverage ] ****** [1 done /1 queued / 3 running / 0 errors / 65% coverage ] ****** [1 done /0 queued / 4 running / 0 errors / 65% coverage ] ****** [1 done /0 queued / 4 running / 0 errors / 65% coverage ] ****** [2 done /2 queued / 4 running / 0 errors / 65% coverage ] ****** [2 done /1 queued / 5 running / 0 errors / 65% coverage ] ****** [2 done /0 queued / 6 running / 0 errors / 65% coverage ] ****** [2 done /0 queued / 6 running / 0 errors / 65% coverage ] ****** [3 done /1 queued / 6 running / 0 errors / 65% coverage ] ****** [3 done /0 queued / 7 running / 0 errors / 65% coverage ] ****** [3 done /0 queued / 7 running / 0 errors / 65% coverage ] ****** [4 done /0 queued / 6 running / 0 errors / 65% coverage ] ****** [5 done /3 queued / 6 running / 0 errors / 65% coverage ] ****** [5 done /2 queued / 7 running / 0 errors / 65% coverage ] ****** [5 done /1 queued / 8 running / 0 errors / 65% coverage ] ****** [5 done /0 queued / 9 running / 0 errors / 65% coverage ] ****** [5 done /0 queued / 9 running / 0 errors / 65% coverage ] ****** [6 done /4 queued / 9 running / 0 errors / 66% coverage ] ****** [6 done /3 queued / 10 running / 0 errors / 66% coverage ] ****** [6 done /2 queued / 11 running / 0 errors / 66% coverage ] ****** [6 done /1 queued / 12 running / 0 errors / 66% coverage ] ****** [6 done /0 queued / 13 running / 0 errors / 66% coverage ] ****** [6 done /0 queued / 13 running / 0 errors / 66% coverage ] ****** [7 done /0 queued / 12 running / 0 errors / 66% coverage ] ****** [8 done /2 queued / 12 running / 0 errors / 66% coverage ] ****** [8 done /1 queued / 13 running / 0 errors / 66% coverage ] ****** [8 done /0 queued / 14 running / 0 errors / 66% coverage ] ****** [8 done /0 queued / 14 running / 0 errors / 66% coverage ] ****** [9 done /0 queued / 13 running / 0 errors / 66% coverage ] ****** [10 done /2 queued / 13 running / 0 errors / 66% coverage ] ****** [10 done /1 queued / 14 running / 0 errors / 66% coverage ] ****** [10 done /0 queued / 15 running / 0 errors / 66% coverage ] ****** [10 done /0 queued / 15 running / 0 errors / 66% coverage ] ****** [11 done /1 queued / 15 running / 0 errors / 66% coverage ] ****** [11 done /0 queued / 16 running / 0 errors / 66% coverage ] ****** [11 done /0 queued / 16 running / 0 errors / 66% coverage ] ****** [12 done /0 queued / 15 running / 0 errors / 66% coverage ] ****** [13 done /3 queued / 15 running / 0 errors / 66% coverage ] ****** [13 done /2 queued / 16 running / 0 errors / 66% coverage ] ****** [13 done /2 queued / 16 running / 0 errors / 66% coverage ] ****** [14 done /5 queued / 16 running / 0 errors / 67% coverage ] ****** [14 done /5 queued / 16 running / 0 errors / 67% coverage ] ****** [15 done /4 queued / 16 running / 0 errors / 67% coverage ] ****** [15 done /4 queued / 16 running / 0 errors / 67% coverage ] ****** [16 done /3 queued / 16 running / 0 errors / 67% coverage ] ****** [16 done /3 queued / 16 running / 0 errors / 67% coverage ] ****** [17 done /4 queued / 16 running / 0 errors / 67% coverage ] ****** [17 done /4 queued / 16 running / 0 errors / 67% coverage ] ****** [18 done /5 queued / 16 running / 0 errors / 67% coverage ] ****** [18 done /5 queued / 16 running / 0 errors / 67% coverage ] ****** [19 done /6 queued / 16 running / 0 errors / 67% coverage ] ****** [19 done /6 queued / 16 running / 0 errors / 67% coverage ] ****** [20 done /10 queued / 16 running / 0 errors / 67% coverage ] ****** [20 done /10 queued / 16 running / 0 errors / 67% coverage ] ****** [21 done /10 queued / 16 running / 0 errors / 67% coverage ] ****** [21 done /10 queued / 16 running / 0 errors / 67% coverage ] ****** [22 done /9 queued / 16 running / 0 errors / 67% coverage ] ****** [22 done /9 queued / 16 running / 0 errors / 67% coverage ] ****** [23 done /9 queued / 16 running / 0 errors / 67% coverage ] ****** [23 done /9 queued / 16 running / 0 errors / 67% coverage ] ****** [24 done /12 queued / 16 running / 0 errors / 67% coverage ] ****** [24 done /12 queued / 16 running / 0 errors / 67% coverage ] ****** [25 done /11 queued / 16 running / 0 errors / 67% coverage ] ****** [25 done /11 queued / 16 running / 0 errors / 67% coverage ] ****** [26 done /11 queued / 16 running / 0 errors / 67% coverage ] ****** [26 done /11 queued / 16 running / 0 errors / 67% coverage ] ****** [27 done /14 queued / 16 running / 0 errors / 67% coverage ] ****** [27 done /14 queued / 16 running / 0 errors / 67% coverage ] ****** [28 done /14 queued / 16 running / 0 errors / 67% coverage ] ****** [28 done /14 queued / 16 running / 0 errors / 67% coverage ] ****** [29 done /15 queued / 16 running / 0 errors / 67% coverage ] ****** [29 done /15 queued / 16 running / 0 errors / 67% coverage ] ****** [30 done /19 queued / 16 running / 0 errors / 67% coverage ] ****** [30 done /19 queued / 16 running / 0 errors / 67% coverage ] ****** [31 done /20 queued / 16 running / 0 errors / 67% coverage ] ****** [31 done /20 queued / 16 running / 0 errors / 67% coverage ] ****** [32 done /23 queued / 16 running / 0 errors / 68% coverage ] ****** [32 done /23 queued / 16 running / 0 errors / 68% coverage ] ****** [33 done /24 queued / 16 running / 0 errors / 68% coverage ] ****** [33 done /24 queued / 16 running / 0 errors / 68% coverage ] ****** [34 done /23 queued / 16 running / 0 errors / 68% coverage ] ****** [34 done /23 queued / 16 running / 0 errors / 68% coverage ] ****** [35 done /27 queued / 16 running / 0 errors / 68% coverage ] ****** [35 done /27 queued / 16 running / 0 errors / 68% coverage ] ****** [36 done /30 queued / 16 running / 1 errors / 68% coverage ] ****** [36 done /30 queued / 16 running / 1 errors / 68% coverage ] ****** [37 done /32 queued / 16 running / 1 errors / 68% coverage ] ****** [37 done /32 queued / 16 running / 1 errors / 68% coverage ] ****** [38 done /38 queued / 16 running / 1 errors / 68% coverage ] ****** [38 done /38 queued / 16 running / 1 errors / 68% coverage ] ****** [39 done /41 queued / 16 running / 1 errors / 68% coverage ] ****** [39 done /41 queued / 16 running / 1 errors / 68% coverage ] ****** [40 done /43 queued / 16 running / 1 errors / 68% coverage ] ****** [40 done /43 queued / 16 running / 1 errors / 68% coverage ] ****** [41 done /43 queued / 16 running / 1 errors / 68% coverage ] ****** [41 done /43 queued / 16 running / 1 errors / 68% coverage ] ****** [42 done /44 queued / 16 running / 1 errors / 68% coverage ] ****** [42 done /44 queued / 16 running / 1 errors / 68% coverage ] ****** [43 done /44 queued / 16 running / 1 errors / 68% coverage ] ****** [43 done /44 queued / 16 running / 1 errors / 68% coverage ] ****** [44 done /44 queued / 16 running / 1 errors / 68% coverage ] ****** [44 done /44 queued / 16 running / 1 errors / 68% coverage ] ****** [45 done /46 queued / 16 running / 1 errors / 68% coverage ] ****** [45 done /46 queued / 16 running / 1 errors / 68% coverage ] ****** [46 done /49 queued / 16 running / 1 errors / 68% coverage ] ****** [46 done /49 queued / 16 running / 1 errors / 68% coverage ] ****** [47 done /49 queued / 16 running / 1 errors / 68% coverage ] ****** [47 done /49 queued / 16 running / 1 errors / 68% coverage ] ****** [48 done /49 queued / 16 running / 1 errors / 68% coverage ] ****** [48 done /49 queued / 16 running / 1 errors / 68% coverage ] ****** [49 done /50 queued / 16 running / 1 errors / 68% coverage ] ****** [49 done /50 queued / 16 running / 1 errors / 68% coverage ] ****** [50 done /50 queued / 16 running / 2 errors / 68% coverage ] ****** [50 done /50 queued / 16 running / 2 errors / 68% coverage ] ****** [51 done /50 queued / 16 running / 2 errors / 68% coverage ] ****** [51 done /50 queued / 16 running / 2 errors / 68% coverage ] ****** [52 done /53 queued / 16 running / 2 errors / 68% coverage ] ****** [52 done /53 queued / 16 running / 2 errors / 68% coverage ] ****** [53 done /55 queued / 16 running / 2 errors / 68% coverage ] ****** [53 done /55 queued / 16 running / 2 errors / 68% coverage ] ****** [54 done /58 queued / 16 running / 2 errors / 68% coverage ] ****** [54 done /58 queued / 16 running / 2 errors / 68% coverage ] ****** [55 done /61 queued / 16 running / 2 errors / 68% coverage ] ****** [55 done /61 queued / 16 running / 2 errors / 68% coverage ] ****** [56 done /64 queued / 16 running / 2 errors / 68% coverage ] ****** [56 done /64 queued / 16 running / 2 errors / 68% coverage ] ****** [57 done /64 queued / 16 running / 2 errors / 68% coverage ] ****** [57 done /64 queued / 16 running / 2 errors / 68% coverage ] ****** [58 done /64 queued / 16 running / 2 errors / 68% coverage ] ****** [58 done /64 queued / 16 running / 2 errors / 68% coverage ] ****** [59 done /65 queued / 16 running / 2 errors / 68% coverage ] ****** [59 done /65 queued / 16 running / 2 errors / 68% coverage ] ****** [60 done /67 queued / 16 running / 2 errors / 68% coverage ] ****** [60 done /67 queued / 16 running / 2 errors / 68% coverage ] ****** [61 done /68 queued / 16 running / 2 errors / 68% coverage ] ****** [61 done /68 queued / 16 running / 2 errors / 68% coverage ] ****** [62 done /70 queued / 16 running / 2 errors / 68% coverage ] ****** [62 done /70 queued / 16 running / 2 errors / 68% coverage ] ****** [63 done /70 queued / 16 running / 2 errors / 68% coverage ] ****** [63 done /70 queued / 16 running / 2 errors / 68% coverage ] ****** [64 done /70 queued / 16 running / 2 errors / 68% coverage ] ****** [64 done /70 queued / 16 running / 2 errors / 68% coverage ] ****** [65 done /72 queued / 16 running / 2 errors / 68% coverage ] ****** [65 done /72 queued / 16 running / 2 errors / 68% coverage ] ****** [66 done /74 queued / 16 running / 2 errors / 68% coverage ] ****** [66 done /74 queued / 16 running / 2 errors / 68% coverage ] ****** [67 done /75 queued / 16 running / 2 errors / 68% coverage ] ****** [67 done /75 queued / 16 running / 2 errors / 68% coverage ] ****** [68 done /76 queued / 16 running / 2 errors / 68% coverage ] ****** [68 done /76 queued / 16 running / 2 errors / 68% coverage ] ****** [69 done /79 queued / 16 running / 2 errors / 68% coverage ] ****** [69 done /79 queued / 16 running / 2 errors / 68% coverage ] ****** [70 done /82 queued / 16 running / 2 errors / 68% coverage ] ****** [70 done /82 queued / 16 running / 2 errors / 68% coverage ] ****** [71 done /85 queued / 16 running / 2 errors / 68% coverage ] ****** [71 done /85 queued / 16 running / 2 errors / 68% coverage ] ****** [72 done /85 queued / 16 running / 2 errors / 68% coverage ] ****** [72 done /85 queued / 16 running / 2 errors / 68% coverage ] ****** [73 done /85 queued / 16 running / 2 errors / 68% coverage ] ****** [73 done /85 queued / 16 running / 2 errors / 68% coverage ] ****** [74 done /88 queued / 16 running / 2 errors / 68% coverage ] ****** [74 done /88 queued / 16 running / 2 errors / 68% coverage ] ****** [75 done /91 queued / 16 running / 2 errors / 68% coverage ] ****** [75 done /91 queued / 16 running / 2 errors / 68% coverage ] ****** [76 done /91 queued / 16 running / 2 errors / 68% coverage ] ****** [76 done /91 queued / 16 running / 2 errors / 68% coverage ] ****** [77 done /93 queued / 16 running / 2 errors / 68% coverage ] ****** [77 done /93 queued / 16 running / 2 errors / 68% coverage ] ****** [78 done /95 queued / 16 running / 2 errors / 68% coverage ] ****** [78 done /95 queued / 16 running / 2 errors / 68% coverage ] ****** [79 done /95 queued / 16 running / 3 errors / 68% coverage ] ****** [79 done /95 queued / 16 running / 3 errors / 68% coverage ] ****** [80 done /95 queued / 16 running / 3 errors / 68% coverage ] ****** [80 done /95 queued / 16 running / 3 errors / 68% coverage ] ****** [81 done /95 queued / 16 running / 4 errors / 68% coverage ] ****** [81 done /95 queued / 16 running / 4 errors / 68% coverage ] ****** [82 done /98 queued / 16 running / 4 errors / 68% coverage ] ****** [82 done /98 queued / 16 running / 4 errors / 68% coverage ] ****** [83 done /98 queued / 16 running / 4 errors / 68% coverage ] ****** [83 done /98 queued / 16 running / 4 errors / 68% coverage ] ****** [84 done /99 queued / 16 running / 4 errors / 68% coverage ] ****** [84 done /99 queued / 16 running / 4 errors / 68% coverage ] ****** [85 done /101 queued / 16 running / 4 errors / 68% coverage ] ****** [85 done /101 queued / 16 running / 4 errors / 68% coverage ] ****** [86 done /102 queued / 16 running / 4 errors / 68% coverage ] ****** [86 done /102 queued / 16 running / 4 errors / 68% coverage ] ****** [87 done /106 queued / 16 running / 4 errors / 68% coverage ] ****** [87 done /106 queued / 16 running / 4 errors / 68% coverage ] ****** [88 done /108 queued / 16 running / 4 errors / 69% coverage ] ****** [88 done /108 queued / 16 running / 4 errors / 69% coverage ] ****** [89 done /107 queued / 16 running / 4 errors / 69% coverage ] ****** [89 done /107 queued / 16 running / 4 errors / 69% coverage ] ****** [90 done /107 queued / 16 running / 4 errors / 69% coverage ] ****** [90 done /107 queued / 16 running / 4 errors / 69% coverage ] ****** [91 done /109 queued / 16 running / 4 errors / 69% coverage ] ****** [91 done /109 queued / 16 running / 4 errors / 69% coverage ] ****** [92 done /111 queued / 16 running / 4 errors / 69% coverage ] ****** [92 done /111 queued / 16 running / 4 errors / 69% coverage ] ****** [93 done /111 queued / 16 running / 4 errors / 69% coverage ] ****** [93 done /111 queued / 16 running / 4 errors / 69% coverage ] ****** [94 done /112 queued / 16 running / 4 errors / 69% coverage ] ****** [94 done /112 queued / 16 running / 4 errors / 69% coverage ] ****** [95 done /112 queued / 16 running / 4 errors / 69% coverage ] ****** [95 done /112 queued / 16 running / 4 errors / 69% coverage ] ****** [96 done /111 queued / 16 running / 4 errors / 69% coverage ] ****** [96 done /111 queued / 16 running / 4 errors / 69% coverage ] ****** [97 done /110 queued / 16 running / 4 errors / 69% coverage ] ****** [97 done /110 queued / 16 running / 4 errors / 69% coverage ] ****** [98 done /110 queued / 16 running / 4 errors / 69% coverage ] ****** [98 done /110 queued / 16 running / 4 errors / 69% coverage ] ****** [99 done /110 queued / 16 running / 4 errors / 69% coverage ] ****** [99 done /110 queued / 16 running / 4 errors / 69% coverage ] ****** [100 done /116 queued / 16 running / 4 errors / 69% coverage ] ****** [100 done /116 queued / 16 running / 4 errors / 69% coverage ] ****** [101 done /116 queued / 16 running / 4 errors / 69% coverage ] ****** [101 done /116 queued / 16 running / 4 errors / 69% coverage ] ****** [102 done /117 queued / 16 running / 4 errors / 69% coverage ] ****** [102 done /117 queued / 16 running / 4 errors / 69% coverage ] ****** [103 done /117 queued / 16 running / 4 errors / 69% coverage ] ****** [103 done /117 queued / 16 running / 4 errors / 69% coverage ] ****** [104 done /121 queued / 16 running / 4 errors / 69% coverage ] ****** [104 done /121 queued / 16 running / 4 errors / 69% coverage ] ****** [105 done /122 queued / 16 running / 4 errors / 69% coverage ] ****** [105 done /122 queued / 16 running / 4 errors / 69% coverage ] ****** [106 done /122 queued / 16 running / 4 errors / 69% coverage ] ****** [106 done /122 queued / 16 running / 4 errors / 69% coverage ] ****** [107 done /125 queued / 16 running / 4 errors / 69% coverage ] ****** [107 done /125 queued / 16 running / 4 errors / 69% coverage ] ****** [108 done /125 queued / 16 running / 4 errors / 69% coverage ] ****** [108 done /125 queued / 16 running / 4 errors / 69% coverage ] ****** [109 done /126 queued / 16 running / 4 errors / 69% coverage ] ****** [109 done /126 queued / 16 running / 4 errors / 69% coverage ] ****** [110 done /129 queued / 16 running / 4 errors / 69% coverage ] ****** [110 done /129 queued / 16 running / 4 errors / 69% coverage ] ****** [111 done /129 queued / 16 running / 4 errors / 69% coverage ] ****** [111 done /129 queued / 16 running / 4 errors / 69% coverage ] ****** [112 done /128 queued / 16 running / 4 errors / 69% coverage ] ****** [112 done /128 queued / 16 running / 4 errors / 69% coverage ] ****** [113 done /130 queued / 16 running / 4 errors / 69% coverage ] ****** [113 done /130 queued / 16 running / 4 errors / 69% coverage ] ****** [114 done /130 queued / 16 running / 4 errors / 69% coverage ] ****** [114 done /130 queued / 16 running / 4 errors / 69% coverage ] ****** [115 done /131 queued / 16 running / 4 errors / 69% coverage ] ****** [115 done /131 queued / 16 running / 4 errors / 69% coverage ] ****** [116 done /134 queued / 16 running / 4 errors / 69% coverage ] ****** [116 done /134 queued / 16 running / 4 errors / 69% coverage ] ****** [117 done /135 queued / 16 running / 4 errors / 69% coverage ] ****** [117 done /135 queued / 16 running / 4 errors / 69% coverage ] ****** [118 done /136 queued / 16 running / 4 errors / 69% coverage ] ****** [118 done /136 queued / 16 running / 4 errors / 69% coverage ] ****** [119 done /141 queued / 16 running / 4 errors / 69% coverage ] ****** [119 done /141 queued / 16 running / 4 errors / 69% coverage ] ****** [120 done /141 queued / 16 running / 4 errors / 69% coverage ] ****** [120 done /141 queued / 16 running / 4 errors / 69% coverage ] ****** [121 done /145 queued / 16 running / 4 errors / 69% coverage ] ****** [121 done /145 queued / 16 running / 4 errors / 69% coverage ] ****** [122 done /144 queued / 16 running / 4 errors / 69% coverage ] ****** [122 done /144 queued / 16 running / 4 errors / 69% coverage ] ****** [123 done /144 queued / 16 running / 4 errors / 69% coverage ] ****** [123 done /144 queued / 16 running / 4 errors / 69% coverage ] ****** [124 done /145 queued / 16 running / 4 errors / 69% coverage ] ****** [124 done /145 queued / 16 running / 4 errors / 69% coverage ] ****** [125 done /148 queued / 16 running / 4 errors / 69% coverage ] ****** [125 done /148 queued / 16 running / 4 errors / 69% coverage ] ****** [126 done /149 queued / 16 running / 4 errors / 69% coverage ] ****** [126 done /149 queued / 16 running / 4 errors / 69% coverage ] ****** [127 done /149 queued / 16 running / 5 errors / 69% coverage ] ****** [127 done /149 queued / 16 running / 5 errors / 69% coverage ] ****** [128 done /149 queued / 16 running / 5 errors / 69% coverage ] ****** [128 done /149 queued / 16 running / 5 errors / 69% coverage ] ****** [129 done /149 queued / 16 running / 6 errors / 69% coverage ] ****** [129 done /149 queued / 16 running / 6 errors / 69% coverage ] ****** [130 done /151 queued / 16 running / 6 errors / 69% coverage ] ****** [130 done /151 queued / 16 running / 6 errors / 69% coverage ] ****** [131 done /151 queued / 16 running / 6 errors / 69% coverage ] ****** [131 done /151 queued / 16 running / 6 errors / 69% coverage ] ****** [132 done /154 queued / 16 running / 6 errors / 69% coverage ] ****** [132 done /154 queued / 16 running / 6 errors / 69% coverage ] ****** [133 done /157 queued / 16 running / 6 errors / 69% coverage ] ****** [133 done /157 queued / 16 running / 6 errors / 69% coverage ] ****** [134 done /156 queued / 16 running / 6 errors / 69% coverage ] ****** [134 done /156 queued / 16 running / 6 errors / 69% coverage ] ****** [135 done /157 queued / 16 running / 6 errors / 69% coverage ] ****** [135 done /157 queued / 16 running / 6 errors / 69% coverage ] ****** [136 done /158 queued / 16 running / 6 errors / 69% coverage ] ****** [136 done /158 queued / 16 running / 6 errors / 69% coverage ] ****** [137 done /161 queued / 16 running / 6 errors / 69% coverage ] ****** [137 done /161 queued / 16 running / 6 errors / 69% coverage ] ****** [138 done /161 queued / 16 running / 6 errors / 69% coverage ] ****** [138 done /161 queued / 16 running / 6 errors / 69% coverage ] ****** [139 done /161 queued / 16 running / 6 errors / 69% coverage ] ****** [139 done /161 queued / 16 running / 6 errors / 69% coverage ] ****** [140 done /161 queued / 16 running / 6 errors / 69% coverage ] ****** [140 done /161 queued / 16 running / 6 errors / 69% coverage ] ****** [141 done /161 queued / 16 running / 6 errors / 69% coverage ] ****** [141 done /161 queued / 16 running / 6 errors / 69% coverage ] ****** [142 done /162 queued / 16 running / 6 errors / 69% coverage ] ****** [142 done /162 queued / 16 running / 6 errors / 69% coverage ] ****** [143 done /163 queued / 16 running / 7 errors / 69% coverage ] ****** [143 done /163 queued / 16 running / 7 errors / 69% coverage ] ****** [144 done /164 queued / 16 running / 7 errors / 69% coverage ] ****** [144 done /164 queued / 16 running / 7 errors / 69% coverage ] ****** [145 done /163 queued / 16 running / 7 errors / 69% coverage ] ****** [145 done /163 queued / 16 running / 7 errors / 69% coverage ] ****** [146 done /163 queued / 16 running / 7 errors / 69% coverage ] ****** [146 done /163 queued / 16 running / 7 errors / 69% coverage ] ****** [147 done /163 queued / 16 running / 7 errors / 69% coverage ] ****** [147 done /163 queued / 16 running / 7 errors / 69% coverage ] ****** [148 done /163 queued / 16 running / 7 errors / 69% coverage ] ****** [148 done /163 queued / 16 running / 7 errors / 69% coverage ] ****** [149 done /163 queued / 16 running / 7 errors / 69% coverage ] ****** [149 done /163 queued / 16 running / 7 errors / 69% coverage ] ****** [150 done /165 queued / 16 running / 7 errors / 69% coverage ] ****** [150 done /165 queued / 16 running / 7 errors / 69% coverage ] ****** [151 done /169 queued / 16 running / 7 errors / 69% coverage ] ****** [151 done /169 queued / 16 running / 7 errors / 69% coverage ] ****** [152 done /171 queued / 16 running / 7 errors / 69% coverage ] ****** [152 done /171 queued / 16 running / 7 errors / 69% coverage ] ****** [153 done /171 queued / 16 running / 7 errors / 69% coverage ] ****** [153 done /171 queued / 16 running / 7 errors / 69% coverage ] ****** [154 done /170 queued / 16 running / 7 errors / 69% coverage ] ****** [154 done /170 queued / 16 running / 7 errors / 69% coverage ] ****** [155 done /172 queued / 16 running / 7 errors / 69% coverage ] ****** [155 done /172 queued / 16 running / 7 errors / 69% coverage ] ****** [156 done /172 queued / 16 running / 7 errors / 69% coverage ] ****** [156 done /172 queued / 16 running / 7 errors / 69% coverage ] ****** [157 done /172 queued / 16 running / 7 errors / 69% coverage ] ****** [157 done /172 queued / 16 running / 7 errors / 69% coverage ] ****** [158 done /172 queued / 16 running / 7 errors / 69% coverage ] ****** [158 done /172 queued / 16 running / 7 errors / 69% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","call","RegExp","Object","binding","max","now","apply","join","ArrayBuffer","DataView","Map","resolve","Set","WeakMap","create","Array","entries","next","getPrototypeOf","get","set","sort","isArray","Error","getFileName","min","toString","bound ","Proxy","bound testDouble"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0,"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0} start 0.0318 took 17.559s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":2} start 17.9709 took 19.3527s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":3} start 18.0957 took 20.2456s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":1,"ExpandedSwitcher_2":0,"_bound":4} start 17.8975 took 21.6105s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":1} start 18.0059 took 22.2008s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":3,"ExpansionArg_int":0} start 40.3987 took 16.4536s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpandedSwitcher":2,"ExpandedSwitcher_2":0,"_bound":5} start 38.6878 took 18.379s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":4,"ExpansionArg_int":0} start 37.6271 took 19.5383s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpandedSwitcher":2,"ExpandedSwitcher_2":0,"_bound":5} start 37.5531 took 19.908s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":4,"ExpansionArg_int":0} start 40.4582 took 17.3012s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":4,"ExpansionArg_int":0} start 38.5451 took 19.3889s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":2,"ExpandedSwitcher_2":0,"_bound":5} start 40.6214 took 17.3128s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":3,"ExpansionArg_int":0} start 37.4932 took 20.4411s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":2} start 40.5477 took 17.3865s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpandedSwitcher":3,"ExpandedSwitcher_2":0,"_bound":6} start 58.0643 took 125.578s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpandedSwitcher":3,"ExpandedSwitcher_2":0,"_bound":7} start 57.8734 took 126.4325s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":4} start 56.9239 took 127.3994s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":6,"ExpansionArg_string":"PureString"} start 57.8286 took 126.4948s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":6,"ExpansionArg_string":"PureString"} start 57.2969 took 127.0265s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":5,"ExpansionArg_string":"PureString"} start 58.425 took 125.8986s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":3,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":6} start 58.2222 took 126.1014s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpandedSwitcher":3,"ExpandedSwitcher_2":0,"_bound":7} start 57.3436 took 126.98s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":5} start 57.8485 took 126.4752s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":5,"ExpansionArg_string":"PureString"} start 56.9641 took 130.3124s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":3,"ExpandedSwitcher_2":0,"_bound":8} start 57.0412 took 130.2354s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":3,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":7} start 56.948 took 130.3287s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":4,"ExpansionArg_string":"PureString"} start 58.2593 took 129.0174s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":5} start 57.2489 took 130.0277s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":5,"ExpansionArg_string":"PureString"} start 58.0285 took 129.2482s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":6,"ExpansionArg_string":"PureString"} start 56.995 took 130.2817s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":7,"ExpansionArg_int_2":0} start 187.1472 took 87.8749s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":6,"ExpansionArg_array_length":0} start 187.529 took 87.9374s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":8,"ExpansionArg_int_2":0} start 189.7261 took 85.7405s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":3,"ExpandedSwitcher_2":0,"_bound":7} start 185.0661 took 90.4006s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":3,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":4,"ExpansionArg_string":"PureString"} start 184.699 took 90.7678s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":5,"ExpansionArg_string":"PureString"} start 184.1504 took 91.3164s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":5,"ExpansionArg_string":"PureString"}
* Error: TypeError: error setting argument 1 - "value" argument is out of bounds
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":5}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_string":"","ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":6,"ExpansionArg_array_length":0} start 189.2944 took 86.1725s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":7,"ExpansionArg_array_length":0} start 188.4604 took 87.0065s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_string":"","ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":8,"ExpansionArg_array_length":0} start 186.0179 took 89.449s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_string":"","ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":7,"ExpansionArg_array_length":0} start 185.7497 took 89.7173s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":7} start 188.6993 took 86.7678s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":1,"ExpansionArg_string":"","ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":6} start 186.7432 took 92.5076s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":4,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":9} start 186.4313 took 92.8198s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":8} start 188.1086 took 91.1425s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_string":"","ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":7,"ExpansionArg_array_length":0} start 185.3823 took 93.8688s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":5,"ExpansionArg_array_length":0} start 188.9918 took 90.2594s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_string":"","_bound":9,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0} start 277.1886 took 62.9646s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":8,"ExpansionArg_bool":false} start 279.5019 took 61.0829s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":9,"ExpansionArg_bool":false} start 278.7444 took 61.8405s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":2,"ExpansionArg_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":6,"ExpansionArg_int":0} start 276.8122 took 63.7728s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":2,"ExpansionArg_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":6,"ExpansionArg_int":0}
* Error: Error: Error: testdouble.js - td.object - To create a fake object with td.object(), pass it a plain object that contains
functions, an array of function names, or (if your runtime supports ES Proxy
objects) a string name.

If you passed td.object an instance of a custom type, consider passing the
type's constructor to `td.constructor()` instead.

*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":2,"ExpansionArg_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":6}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":7,"ExpansionArg_bool":false} start 277.6006 took 62.9845s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":4,"ExpansionArg_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":7,"ExpansionArg_array_length":0} start 281.4307 took 59.1544s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":9,"ExpansionArg_array_element_0_type":0} start 280.539 took 60.0462s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":8,"ExpansionArg_array_element_0_type":0} start 276.1525 took 64.4332s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":12,"ExpansionArg_array_element_0_type":0} start 279.0923 took 61.4989s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":10,"ExpansionArg_array_element_0_type":0} start 280.0894 took 62.5573s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":13} start 281.0148 took 61.6321s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":3,"ExpansionArg_type_2":2,"ExpansionArg_int_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":9} start 276.4321 took 66.2148s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":1,"ExpansionArg_string":"","ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":7} start 275.3153 took 67.3316s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":8,"ExpansionArg_array_element_0_type":0} start 278.3919 took 64.2549s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":11,"ExpansionArg_bool":false} start 277.9939 took 64.653s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":7,"ExpansionArg_bool":false} start 275.7221 took 66.9248s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":8,"ExpansionArg_bool":false} start 340.4912 took 30.712s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":1,"ExpansionArg_type_2":2,"ExpansionArg_int_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":8} start 342.5148 took 29.088s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":9,"ExpansionArg_array_element_0_type":0} start 342.2428 took 29.3601s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":6,"ExpansionArg_bool":false} start 342.9803 took 29.3339s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":1,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":8} start 344.5289 took 27.7896s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","_bound":7,"ExpansionArg_int":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0} start 341.64 took 30.6785s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_string":"","ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":9,"ExpansionArg_array_length":0} start 341.3929 took 30.9258s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":14,"ExpansionArg_array_element_1_type":0} start 343.7224 took 28.5963s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":12,"ExpansionArg_array_element_1_type":0} start 345.1442 took 29.1047s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_string":"","_bound":6,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0} start 340.8677 took 33.3863s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":4,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":10} start 341.2039 took 33.0509s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":9,"ExpansionArg_array_element_0_type":0} start 341.9369 took 32.318s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":7,"ExpansionArg_array_element_0_type":0} start 344.066 took 30.189s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":3,"ExpansionArg_type_2":1,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":7} start 344.8731 took 31.4508s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":11,"ExpansionArg_array_element_1_type":0} start 343.3242 took 32.9997s
*-- Test Case {"Switcher":false,"Target_Switch_Base":3,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":3} start 345.8166 took 31.347s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":8,"ExpansionArg_bool":false} start 371.4851 took 29.2295s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":8,"ExpansionArg_bool":false}
* Error: Error: Error: testdouble.js - td.object - To create a fake object with td.object(), pass it a plain object that contains
functions, an array of function names, or (if your runtime supports ES Proxy
objects) a string name.

If you passed td.object an instance of a custom type, consider passing the
type's constructor to `td.constructor()` instead.

*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":8}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":15} start 372.9735 took 28.1789s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":1,"ExpansionArg_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":5} start 372.5786 took 28.5769s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":1,"ExpansionArg_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":5}
* Error: Error: Error: testdouble.js - td.object - To create a fake object with td.object(), pass it a plain object that contains
functions, an array of function names, or (if your runtime supports ES Proxy
objects) a string name.

If you passed td.object an instance of a custom type, consider passing the
type's constructor to `td.constructor()` instead.

*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":1,"ExpansionArg_string":"","ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":5}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":10,"ExpansionArg_array_element_1_type":0} start 372.2372 took 28.9184s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_int":1,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":8} start 373.321 took 29.0757s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":10,"ExpansionArg_string_2":"PureString"} start 371.8589 took 30.538s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":5,"ExpansionArg_int":0} start 374.5322 took 28.7745s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":9,"ExpansionArg_int":0} start 375.3883 took 28.2924s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":5,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":9,"ExpansionArg_bool":false} start 375.8373 took 27.8682s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_string":"","_bound":8,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0} start 374.1092 took 30.3463s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpandedSwitcher":4,"ExpandedSwitcher_2":0,"_bound":8} start 374.9668 took 29.4889s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":5,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":11} start 376.1535 took 29.5593s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":11,"ExpansionArg_array_element_1_type":0} start 376.6074 took 29.4484s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":10,"ExpansionArg_array_element_1_type":0} start 377.3699 took 28.9592s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":3,"ExpansionArg_type_2":1,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":8} start 377.0541 took 29.275s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":10,"ExpansionArg_bool":false} start 373.7173 took 33.3332s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":10} start 404.7199 took 43.311s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpandedSwitcher":2,"ExpandedSwitcher_2":0,"_bound":6} start 401.9924 took 46.4654s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":3,"ExpandedSwitcher_2":0,"_bound":6} start 400.9958 took 47.4628s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":6} start 403.5399 took 44.918s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":5,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":12} start 401.5872 took 46.8707s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":6,"ExpansionArg_array_length":0} start 402.2696 took 46.1883s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":6,"ExpansionArg_type_2":5,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":10} start 402.8047 took 45.654s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":7,"ExpansionArg_string":"PureString"} start 403.9497 took 44.509s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":12,"ExpansionArg_string":"PureString"} start 404.3128 took 46.8773s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":5,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":8,"ExpansionArg_bool":false} start 403.1508 took 48.0395s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":13,"ExpansionArg_array_length_2":0} start 405.0842 took 46.1061s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":11,"ExpansionArg_int":0} start 406.244 took 47.3962s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":11,"ExpansionArg_array_element_0_type":0} start 406.4562 took 47.5158s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":3,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":13} start 407.2332 took 48.2334s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":9,"ExpansionArg_bool":false} start 405.9067 took 49.864s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":11,"ExpansionArg_array_element_1_type":0} start 406.7832 took 49.4474s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":11,"ExpansionArg_string":"PureString"} start 454.331 took 37.4676s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpandedSwitcher":4,"ExpandedSwitcher_2":0,"_bound":8} start 449.8145 took 42.4312s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_string":"","ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":8,"ExpansionArg_array_length":0} start 451.1041 took 41.145s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":9} start 453.8722 took 38.377s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":9,"ExpansionArg_string_2":"PureString"} start 451.4152 took 40.8341s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":14,"ExpansionArg_array_element_2_type":0} start 448.304 took 43.9454s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":12,"ExpansionArg_array_length_2":0} start 451.8793 took 40.3702s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":1,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":7} start 450.8096 took 41.44s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":8,"ExpansionArg_array_length":0} start 456.4751 took 38.3078s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":0,"ExpansionArg_type_2":5,"ExpansionArg_bool":true,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":10} start 455.9745 took 38.8287s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":5,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":10,"ExpansionArg_bool":false} start 449.0266 took 45.7767s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":1,"ExpansionArg_type_2":0,"ExpandedSwitcher":3,"ExpandedSwitcher_2":0,"_bound":7} start 448.717 took 46.0864s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":10,"ExpansionArg_int":0} start 452.3053 took 42.4981s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":8,"ExpansionArg_int":0} start 450.2965 took 44.507s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":10,"ExpansionArg_array_element_0_int":0} start 449.398 took 45.4055s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":10,"ExpansionArg_bool":false} start 455.6288 took 41.995s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":1,"_bound":7} start 493.2295 took 72.7267s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":1,"_bound":7}
* Error: Error: Error: testdouble.js - td.object - To create a fake object with td.object(), pass it a plain object that contains
functions, an array of function names, or (if your runtime supports ES Proxy
objects) a string name.

If you passed td.object an instance of a custom type, consider passing the
type's constructor to `td.constructor()` instead.

*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":1,"_bound":7}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":13,"ExpansionArg_string":"PureString"} start 497.0872 took 69.2395s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":11,"ExpansionArg_string_2":"PureString"} start 497.9243 took 68.4024s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":11,"ExpansionArg_string_2":"PureString"}
* Error: TypeError: error setting argument 1 - "value" argument is out of bounds
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":12,"ExpansionArg_array_element_0_string":"PureString"} start 497.4752 took 68.8683s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":9,"ExpansionArg_bool":false} start 492.9504 took 74.9495s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":12,"ExpansionArg_array_element_2_type":0} start 493.8424 took 74.0599s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":9,"ExpansionArg_array_element_1_type":0} start 493.5053 took 74.3972s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpandedSwitcher":4,"ExpandedSwitcher_2":0,"_bound":10} start 492.1503 took 75.7522s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":12,"ExpansionArg_bool":false} start 495.4665 took 72.4361s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":14,"ExpansionArg_array_length_2":0} start 496.2494 took 71.6532s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":16,"ExpansionArg_array_element_2_type":0} start 492.5215 took 75.3811s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":9} start 494.2495 took 73.6532s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":11} start 495.8377 took 72.0651s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_bool":true,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":8} start 494.6552 took 73.2481s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":1,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":9} start 495.0615 took 72.8419s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":10,"ExpansionArg_int":0} start 496.6737 took 71.2297s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"_bound":8,"ExpansionArg_string":"PureString"} start 568.1373 took 152.8868s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"_bound":8,"ExpansionArg_string":"PureString"}
* Error: Error: Error: testdouble.js - td.object - To create a fake object with td.object(), pass it a plain object that contains
functions, an array of function names, or (if your runtime supports ES Proxy
objects) a string name.

If you passed td.object an instance of a custom type, consider passing the
type's constructor to `td.constructor()` instead.

*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"_bound":8}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":11} start 566.7138 took 154.5572s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpandedSwitcher":2,"ExpandedSwitcher_2":0,"_bound":6} start 568.9317 took 152.3393s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":12,"ExpansionArg_int":0} start 566.2258 took 155.0454s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_string_2":"","_bound":12,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0} start 567.3028 took 153.9684s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":5,"ExpansionArg_bool":true,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":13} start 569.8666 took 151.4047s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":1,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":9} start 569.4177 took 151.8537s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":13,"ExpansionArg_array_element_0_bool":false} start 567.7586 took 153.5128s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_type_2":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":9,"ExpansionArg_array_element_0_int":0} start 570.3143 took 150.9571s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":2,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":11,"ExpansionArg_int":0} start 568.5224 took 152.7491s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":3,"ExpansionArg_string_2":"","ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":11} start 572.6472 took 153.3649s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":0,"ExpandedSwitcher":4,"ExpandedSwitcher_2":0,"_bound":9} start 571.3153 took 154.9985s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":13,"ExpansionArg_array_element_2_type":0} start 571.7585 took 154.5552s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"ExpansionArg_int":1,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":11} start 573.1483 took 153.1655s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"!0!","ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":17} start 572.2123 took 154.9634s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":5,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"ExpandedSwitcher_2":0,"_bound":12} start 570.8474 took 156.3284s
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 88% Coverage (LOC): 89%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 38% Coverage (LOC): 56%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/index.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/function.js. Coverage (Term): 89% Coverage (LOC): 97%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/util/lodash-wrap.js. Coverage (Term): 99% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/assign.js. Coverage (Term): 60% Coverage (LOC): 47%
*- File /root/Targets/testdouble/node_modules/lodash/_assignValue.js. Coverage (Term): 83% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_baseAssignValue.js. Coverage (Term): 76% Coverage (LOC): 57%
*- File /root/Targets/testdouble/node_modules/lodash/_defineProperty.js. Coverage (Term): 94% Coverage (LOC): 89%
*- File /root/Targets/testdouble/node_modules/lodash/_getNative.js. Coverage (Term): 94% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_baseIsNative.js. Coverage (Term): 95% Coverage (LOC): 94%
*- File /root/Targets/testdouble/node_modules/lodash/isFunction.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_baseGetTag.js. Coverage (Term): 87% Coverage (LOC): 91%
*- File /root/Targets/testdouble/node_modules/lodash/_Symbol.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_root.js. Coverage (Term): 76% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_freeGlobal.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_getRawTag.js. Coverage (Term): 91% Coverage (LOC): 90%
*- File /root/Targets/testdouble/node_modules/lodash/_objectToString.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/isObject.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_isMasked.js. Coverage (Term): 81% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_coreJsData.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_toSource.js. Coverage (Term): 79% Coverage (LOC): 69%
*- File /root/Targets/testdouble/node_modules/lodash/_getValue.js. Coverage (Term): 92% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/eq.js. Coverage (Term): 49% Coverage (LOC): 80%
*- File /root/Targets/testdouble/node_modules/lodash/_copyObject.js. Coverage (Term): 82% Coverage (LOC): 95%
*- File /root/Targets/testdouble/node_modules/lodash/_createAssigner.js. Coverage (Term): 77% Coverage (LOC): 90%
*- File /root/Targets/testdouble/node_modules/lodash/_baseRest.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/identity.js. Coverage (Term): 93% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_overRest.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_apply.js. Coverage (Term): 89% Coverage (LOC): 93%
*- File /root/Targets/testdouble/node_modules/lodash/_setToString.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_baseSetToString.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/constant.js. Coverage (Term): 91% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_shortOut.js. Coverage (Term): 92% Coverage (LOC): 94%
*- File /root/Targets/testdouble/node_modules/lodash/_isIterateeCall.js. Coverage (Term): 43% Coverage (LOC): 38%
*- File /root/Targets/testdouble/node_modules/lodash/isArrayLike.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/isLength.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_isIndex.js. Coverage (Term): 90% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_isPrototype.js. Coverage (Term): 94% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/keys.js. Coverage (Term): 91% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_arrayLikeKeys.js. Coverage (Term): 63% Coverage (LOC): 71%
*- File /root/Targets/testdouble/node_modules/lodash/_baseTimes.js. Coverage (Term): 83% Coverage (LOC): 89%
*- File /root/Targets/testdouble/node_modules/lodash/isArguments.js. Coverage (Term): 70% Coverage (LOC): 92%
*- File /root/Targets/testdouble/node_modules/lodash/_baseIsArguments.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/isObjectLike.js. Coverage (Term): 94% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/isArray.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/isBuffer.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/stubFalse.js. Coverage (Term): 70% Coverage (LOC): 80%
*- File /root/Targets/testdouble/node_modules/lodash/isTypedArray.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_baseIsTypedArray.js. Coverage (Term): 90% Coverage (LOC): 91%
*- File /root/Targets/testdouble/node_modules/lodash/_baseUnary.js. Coverage (Term): 68% Coverage (LOC): 83%
*- File /root/Targets/testdouble/node_modules/lodash/_nodeUtil.js. Coverage (Term): 97% Coverage (LOC): 91%
*- File /root/Targets/testdouble/node_modules/lodash/_baseKeys.js. Coverage (Term): 66% Coverage (LOC): 59%
*- File /root/Targets/testdouble/node_modules/lodash/_nativeKeys.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_overArg.js. Coverage (Term): 93% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/capitalize.js. Coverage (Term): 67% Coverage (LOC): 83%
*- File /root/Targets/testdouble/node_modules/lodash/toString.js. Coverage (Term): 60% Coverage (LOC): 83%
*- File /root/Targets/testdouble/node_modules/lodash/_baseToString.js. Coverage (Term): 49% Coverage (LOC): 39%
*- File /root/Targets/testdouble/node_modules/lodash/_arrayMap.js. Coverage (Term): 28% Coverage (LOC): 44%
*- File /root/Targets/testdouble/node_modules/lodash/isSymbol.js. Coverage (Term): 88% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/upperFirst.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_createCaseFirst.js. Coverage (Term): 45% Coverage (LOC): 55%
*- File /root/Targets/testdouble/node_modules/lodash/_castSlice.js. Coverage (Term): 40% Coverage (LOC): 63%
*- File /root/Targets/testdouble/node_modules/lodash/_baseSlice.js. Coverage (Term): 16% Coverage (LOC): 21%
*- File /root/Targets/testdouble/node_modules/lodash/_hasUnicode.js. Coverage (Term): 85% Coverage (LOC): 88%
*- File /root/Targets/testdouble/node_modules/lodash/_stringToArray.js. Coverage (Term): 66% Coverage (LOC): 83%
*- File /root/Targets/testdouble/node_modules/lodash/_asciiToArray.js. Coverage (Term): 61% Coverage (LOC): 80%
*- File /root/Targets/testdouble/node_modules/lodash/_unicodeToArray.js. Coverage (Term): 93% Coverage (LOC): 95%
*- File /root/Targets/testdouble/node_modules/lodash/clone.js. Coverage (Term): 71% Coverage (LOC): 86%
*- File /root/Targets/testdouble/node_modules/lodash/_baseClone.js. Coverage (Term): 55% Coverage (LOC): 19%
*- File /root/Targets/testdouble/node_modules/lodash/_Stack.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_ListCache.js. Coverage (Term): 85% Coverage (LOC): 88%
*- File /root/Targets/testdouble/node_modules/lodash/_listCacheClear.js. Coverage (Term): 94% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_listCacheDelete.js. Coverage (Term): 38% Coverage (LOC): 39%
*- File /root/Targets/testdouble/node_modules/lodash/_assocIndexOf.js. Coverage (Term): 42% Coverage (LOC): 42%
*- File /root/Targets/testdouble/node_modules/lodash/_listCacheGet.js. Coverage (Term): 45% Coverage (LOC): 71%
*- File /root/Targets/testdouble/node_modules/lodash/_listCacheHas.js. Coverage (Term): 61% Coverage (LOC): 83%
*- File /root/Targets/testdouble/node_modules/lodash/_listCacheSet.js. Coverage (Term): 36% Coverage (LOC): 33%
*- File /root/Targets/testdouble/node_modules/lodash/_stackClear.js. Coverage (Term): 64% Coverage (LOC): 71%
*- File /root/Targets/testdouble/node_modules/lodash/_stackDelete.js. Coverage (Term): 41% Coverage (LOC): 57%
*- File /root/Targets/testdouble/node_modules/lodash/_stackGet.js. Coverage (Term): 59% Coverage (LOC): 80%
*- File /root/Targets/testdouble/node_modules/lodash/_stackHas.js. Coverage (Term): 59% Coverage (LOC): 80%
*- File /root/Targets/testdouble/node_modules/lodash/_stackSet.js. Coverage (Term): 37% Coverage (LOC): 27%
*- File /root/Targets/testdouble/node_modules/lodash/_Map.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_MapCache.js. Coverage (Term): 85% Coverage (LOC): 88%
*- File /root/Targets/testdouble/node_modules/lodash/_mapCacheClear.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_Hash.js. Coverage (Term): 85% Coverage (LOC): 88%
*- File /root/Targets/testdouble/node_modules/lodash/_hashClear.js. Coverage (Term): 93% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_nativeCreate.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_hashDelete.js. Coverage (Term): 39% Coverage (LOC): 57%
*- File /root/Targets/testdouble/node_modules/lodash/_hashGet.js. Coverage (Term): 48% Coverage (LOC): 57%
*- File /root/Targets/testdouble/node_modules/lodash/_hashHas.js. Coverage (Term): 57% Coverage (LOC): 78%
*- File /root/Targets/testdouble/node_modules/lodash/_hashSet.js. Coverage (Term): 42% Coverage (LOC): 60%
*- File /root/Targets/testdouble/node_modules/lodash/_mapCacheDelete.js. Coverage (Term): 46% Coverage (LOC): 63%
*- File /root/Targets/testdouble/node_modules/lodash/_getMapData.js. Coverage (Term): 45% Coverage (LOC): 71%
*- File /root/Targets/testdouble/node_modules/lodash/_isKeyable.js. Coverage (Term): 35% Coverage (LOC): 67%
*- File /root/Targets/testdouble/node_modules/lodash/_mapCacheGet.js. Coverage (Term): 63% Coverage (LOC): 83%
*- File /root/Targets/testdouble/node_modules/lodash/_mapCacheHas.js. Coverage (Term): 63% Coverage (LOC): 83%
*- File /root/Targets/testdouble/node_modules/lodash/_mapCacheSet.js. Coverage (Term): 38% Coverage (LOC): 56%
*- File /root/Targets/testdouble/node_modules/lodash/_arrayEach.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_baseAssign.js. Coverage (Term): 63% Coverage (LOC): 83%
*- File /root/Targets/testdouble/node_modules/lodash/_baseAssignIn.js. Coverage (Term): 63% Coverage (LOC): 83%
*- File /root/Targets/testdouble/node_modules/lodash/keysIn.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_baseKeysIn.js. Coverage (Term): 90% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_nativeKeysIn.js. Coverage (Term): 82% Coverage (LOC): 82%
*- File /root/Targets/testdouble/node_modules/lodash/_cloneBuffer.js. Coverage (Term): 66% Coverage (LOC): 60%
*- File /root/Targets/testdouble/node_modules/lodash/_copyArray.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_copySymbols.js. Coverage (Term): 66% Coverage (LOC): 83%
*- File /root/Targets/testdouble/node_modules/lodash/_getSymbols.js. Coverage (Term): 57% Coverage (LOC): 56%
*- File /root/Targets/testdouble/node_modules/lodash/_arrayFilter.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/stubArray.js. Coverage (Term): 70% Coverage (LOC): 80%
*- File /root/Targets/testdouble/node_modules/lodash/_copySymbolsIn.js. Coverage (Term): 66% Coverage (LOC): 83%
*- File /root/Targets/testdouble/node_modules/lodash/_getSymbolsIn.js. Coverage (Term): 65% Coverage (LOC): 54%
*- File /root/Targets/testdouble/node_modules/lodash/_arrayPush.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_getPrototype.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_getAllKeys.js. Coverage (Term): 74% Coverage (LOC): 83%
*- File /root/Targets/testdouble/node_modules/lodash/_baseGetAllKeys.js. Coverage (Term): 53% Coverage (LOC): 71%
*- File /root/Targets/testdouble/node_modules/lodash/_getAllKeysIn.js. Coverage (Term): 74% Coverage (LOC): 83%
*- File /root/Targets/testdouble/node_modules/lodash/_getTag.js. Coverage (Term): 69% Coverage (LOC): 38%
*- File /root/Targets/testdouble/node_modules/lodash/_DataView.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_Promise.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_Set.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_WeakMap.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_initCloneArray.js. Coverage (Term): 38% Coverage (LOC): 50%
*- File /root/Targets/testdouble/node_modules/lodash/_initCloneByTag.js. Coverage (Term): 52% Coverage (LOC): 19%
*- File /root/Targets/testdouble/node_modules/lodash/_cloneArrayBuffer.js. Coverage (Term): 49% Coverage (LOC): 63%
*- File /root/Targets/testdouble/node_modules/lodash/_Uint8Array.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_cloneDataView.js. Coverage (Term): 46% Coverage (LOC): 71%
*- File /root/Targets/testdouble/node_modules/lodash/_cloneMap.js. Coverage (Term): 56% Coverage (LOC): 75%
*- File /root/Targets/testdouble/node_modules/lodash/_addMapEntry.js. Coverage (Term): 49% Coverage (LOC): 67%
*- File /root/Targets/testdouble/node_modules/lodash/_arrayReduce.js. Coverage (Term): 25% Coverage (LOC): 33%
*- File /root/Targets/testdouble/node_modules/lodash/_mapToArray.js. Coverage (Term): 32% Coverage (LOC): 33%
*- File /root/Targets/testdouble/node_modules/lodash/_cloneRegExp.js. Coverage (Term): 47% Coverage (LOC): 63%
*- File /root/Targets/testdouble/node_modules/lodash/_cloneSet.js. Coverage (Term): 56% Coverage (LOC): 75%
*- File /root/Targets/testdouble/node_modules/lodash/_addSetEntry.js. Coverage (Term): 56% Coverage (LOC): 67%
*- File /root/Targets/testdouble/node_modules/lodash/_setToArray.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_cloneSymbol.js. Coverage (Term): 67% Coverage (LOC): 86%
*- File /root/Targets/testdouble/node_modules/lodash/_cloneTypedArray.js. Coverage (Term): 46% Coverage (LOC): 71%
*- File /root/Targets/testdouble/node_modules/lodash/_initCloneObject.js. Coverage (Term): 59% Coverage (LOC): 83%
*- File /root/Targets/testdouble/node_modules/lodash/_baseCreate.js. Coverage (Term): 71% Coverage (LOC): 72%
*- File /root/Targets/testdouble/node_modules/lodash/compact.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/defer.js. Coverage (Term): 71% Coverage (LOC): 86%
*- File /root/Targets/testdouble/node_modules/lodash/_baseDelay.js. Coverage (Term): 40% Coverage (LOC): 45%
*- File /root/Targets/testdouble/node_modules/lodash/delay.js. Coverage (Term): 68% Coverage (LOC): 86%
*- File /root/Targets/testdouble/node_modules/lodash/toNumber.js. Coverage (Term): 68% Coverage (LOC): 81%
*- File /root/Targets/testdouble/node_modules/lodash/each.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/forEach.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_baseEach.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_baseForOwn.js. Coverage (Term): 66% Coverage (LOC): 83%
*- File /root/Targets/testdouble/node_modules/lodash/_baseFor.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_createBaseFor.js. Coverage (Term): 29% Coverage (LOC): 42%
*- File /root/Targets/testdouble/node_modules/lodash/_createBaseEach.js. Coverage (Term): 87% Coverage (LOC): 94%
*- File /root/Targets/testdouble/node_modules/lodash/_castFunction.js. Coverage (Term): 93% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/every.js. Coverage (Term): 56% Coverage (LOC): 50%
*- File /root/Targets/testdouble/node_modules/lodash/_arrayEvery.js. Coverage (Term): 29% Coverage (LOC): 36%
*- File /root/Targets/testdouble/node_modules/lodash/_baseEvery.js. Coverage (Term): 40% Coverage (LOC): 45%
*- File /root/Targets/testdouble/node_modules/lodash/_baseIteratee.js. Coverage (Term): 82% Coverage (LOC): 87%
*- File /root/Targets/testdouble/node_modules/lodash/_baseMatches.js. Coverage (Term): 82% Coverage (LOC): 91%
*- File /root/Targets/testdouble/node_modules/lodash/_baseIsMatch.js. Coverage (Term): 80% Coverage (LOC): 82%
*- File /root/Targets/testdouble/node_modules/lodash/_baseIsEqual.js. Coverage (Term): 83% Coverage (LOC): 92%
*- File /root/Targets/testdouble/node_modules/lodash/_baseIsEqualDeep.js. Coverage (Term): 29% Coverage (LOC): 24%
*- File /root/Targets/testdouble/node_modules/lodash/_equalArrays.js. Coverage (Term): 17% Coverage (LOC): 14%
*- File /root/Targets/testdouble/node_modules/lodash/_SetCache.js. Coverage (Term): 55% Coverage (LOC): 58%
*- File /root/Targets/testdouble/node_modules/lodash/_setCacheAdd.js. Coverage (Term): 59% Coverage (LOC): 71%
*- File /root/Targets/testdouble/node_modules/lodash/_setCacheHas.js. Coverage (Term): 59% Coverage (LOC): 80%
*- File /root/Targets/testdouble/node_modules/lodash/_arraySome.js. Coverage (Term): 30% Coverage (LOC): 36%
*- File /root/Targets/testdouble/node_modules/lodash/_cacheHas.js. Coverage (Term): 59% Coverage (LOC): 80%
*- File /root/Targets/testdouble/node_modules/lodash/_equalByTag.js. Coverage (Term): 36% Coverage (LOC): 17%
*- File /root/Targets/testdouble/node_modules/lodash/_equalObjects.js. Coverage (Term): 13% Coverage (LOC): 17%
*- File /root/Targets/testdouble/node_modules/lodash/_getMatchData.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_isStrictComparable.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_matchesStrictComparable.js. Coverage (Term): 32% Coverage (LOC): 44%
*- File /root/Targets/testdouble/node_modules/lodash/_baseMatchesProperty.js. Coverage (Term): 53% Coverage (LOC): 50%
*- File /root/Targets/testdouble/node_modules/lodash/get.js. Coverage (Term): 45% Coverage (LOC): 71%
*- File /root/Targets/testdouble/node_modules/lodash/_baseGet.js. Coverage (Term): 36% Coverage (LOC): 45%
*- File /root/Targets/testdouble/node_modules/lodash/_castPath.js. Coverage (Term): 86% Coverage (LOC): 89%
*- File /root/Targets/testdouble/node_modules/lodash/_isKey.js. Coverage (Term): 79% Coverage (LOC): 86%
*- File /root/Targets/testdouble/node_modules/lodash/_stringToPath.js. Coverage (Term): 44% Coverage (LOC): 50%
*- File /root/Targets/testdouble/node_modules/lodash/_memoizeCapped.js. Coverage (Term): 71% Coverage (LOC): 71%
*- File /root/Targets/testdouble/node_modules/lodash/memoize.js. Coverage (Term): 50% Coverage (LOC): 60%
*- File /root/Targets/testdouble/node_modules/lodash/_toKey.js. Coverage (Term): 64% Coverage (LOC): 82%
*- File /root/Targets/testdouble/node_modules/lodash/hasIn.js. Coverage (Term): 63% Coverage (LOC): 83%
*- File /root/Targets/testdouble/node_modules/lodash/_baseHasIn.js. Coverage (Term): 51% Coverage (LOC): 80%
*- File /root/Targets/testdouble/node_modules/lodash/_hasPath.js. Coverage (Term): 35% Coverage (LOC): 28%
*- File /root/Targets/testdouble/node_modules/lodash/property.js. Coverage (Term): 67% Coverage (LOC): 83%
*- File /root/Targets/testdouble/node_modules/lodash/_baseProperty.js. Coverage (Term): 43% Coverage (LOC): 67%
*- File /root/Targets/testdouble/node_modules/lodash/_basePropertyDeep.js. Coverage (Term): 56% Coverage (LOC): 71%
*- File /root/Targets/testdouble/node_modules/lodash/extend.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/assignIn.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/filter.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_baseFilter.js. Coverage (Term): 40% Coverage (LOC): 42%
*- File /root/Targets/testdouble/node_modules/lodash/find.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_createFind.js. Coverage (Term): 72% Coverage (LOC): 73%
*- File /root/Targets/testdouble/node_modules/lodash/findIndex.js. Coverage (Term): 87% Coverage (LOC): 93%
*- File /root/Targets/testdouble/node_modules/lodash/_baseFindIndex.js. Coverage (Term): 91% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/toInteger.js. Coverage (Term): 90% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/toFinite.js. Coverage (Term): 71% Coverage (LOC): 80%
*- File /root/Targets/testdouble/node_modules/lodash/findLast.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/findLastIndex.js. Coverage (Term): 60% Coverage (LOC): 63%
*- File /root/Targets/testdouble/node_modules/lodash/groupBy.js. Coverage (Term): 61% Coverage (LOC): 67%
*- File /root/Targets/testdouble/node_modules/lodash/_createAggregator.js. Coverage (Term): 57% Coverage (LOC): 75%
*- File /root/Targets/testdouble/node_modules/lodash/_arrayAggregator.js. Coverage (Term): 28% Coverage (LOC): 40%
*- File /root/Targets/testdouble/node_modules/lodash/_baseAggregator.js. Coverage (Term): 43% Coverage (LOC): 56%
*- File /root/Targets/testdouble/node_modules/lodash/includes.js. Coverage (Term): 78% Coverage (LOC): 92%
*- File /root/Targets/testdouble/node_modules/lodash/_baseIndexOf.js. Coverage (Term): 89% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_baseIsNaN.js. Coverage (Term): 63% Coverage (LOC): 80%
*- File /root/Targets/testdouble/node_modules/lodash/_strictIndexOf.js. Coverage (Term): 92% Coverage (LOC): 91%
*- File /root/Targets/testdouble/node_modules/lodash/isString.js. Coverage (Term): 90% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/values.js. Coverage (Term): 61% Coverage (LOC): 83%
*- File /root/Targets/testdouble/node_modules/lodash/_baseValues.js. Coverage (Term): 52% Coverage (LOC): 63%
*- File /root/Targets/testdouble/node_modules/lodash/invoke.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_baseInvoke.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/last.js. Coverage (Term): 91% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_parent.js. Coverage (Term): 80% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/isBoolean.js. Coverage (Term): 58% Coverage (LOC): 86%
*- File /root/Targets/testdouble/node_modules/lodash/isEmpty.js. Coverage (Term): 46% Coverage (LOC): 30%
*- File /root/Targets/testdouble/node_modules/lodash/isEqual.js. Coverage (Term): 66% Coverage (LOC): 83%
*- File /root/Targets/testdouble/node_modules/lodash/isEqualWith.js. Coverage (Term): 36% Coverage (LOC): 63%
*- File /root/Targets/testdouble/node_modules/lodash/isNumber.js. Coverage (Term): 61% Coverage (LOC): 86%
*- File /root/Targets/testdouble/node_modules/lodash/isRegExp.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_baseIsRegExp.js. Coverage (Term): 67% Coverage (LOC): 86%
*- File /root/Targets/testdouble/node_modules/lodash/map.js. Coverage (Term): 62% Coverage (LOC): 71%
*- File /root/Targets/testdouble/node_modules/lodash/_baseMap.js. Coverage (Term): 38% Coverage (LOC): 50%
*- File /root/Targets/testdouble/node_modules/lodash/reduce.js. Coverage (Term): 57% Coverage (LOC): 71%
*- File /root/Targets/testdouble/node_modules/lodash/_baseReduce.js. Coverage (Term): 32% Coverage (LOC): 50%
*- File /root/Targets/testdouble/node_modules/lodash/reject.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/negate.js. Coverage (Term): 61% Coverage (LOC): 75%
*- File /root/Targets/testdouble/node_modules/lodash/some.js. Coverage (Term): 56% Coverage (LOC): 50%
*- File /root/Targets/testdouble/node_modules/lodash/_baseSome.js. Coverage (Term): 41% Coverage (LOC): 50%
*- File /root/Targets/testdouble/node_modules/lodash/tap.js. Coverage (Term): 94% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/toArray.js. Coverage (Term): 56% Coverage (LOC): 39%
*- File /root/Targets/testdouble/node_modules/lodash/_iteratorToArray.js. Coverage (Term): 40% Coverage (LOC): 44%
*- File /root/Targets/testdouble/node_modules/lodash/transform.js. Coverage (Term): 82% Coverage (LOC): 85%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/store/calls.js. Coverage (Term): 48% Coverage (LOC): 67%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/args-match.js. Coverage (Term): 33% Coverage (LOC): 44%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/matchers/is-matcher.js. Coverage (Term): 69% Coverage (LOC): 86%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/store/index.js. Coverage (Term): 88% Coverage (LOC): 94%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/store/stubbings.js. Coverage (Term): 29% Coverage (LOC): 38%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/callback.js. Coverage (Term): 66% Coverage (LOC): 83%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/matchers/create.js. Coverage (Term): 36% Coverage (LOC): 47%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/stringify/arguments.js. Coverage (Term): 46% Coverage (LOC): 71%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/stringify/anything.js. Coverage (Term): 45% Coverage (LOC): 48%
*- File /root/Targets/testdouble/node_modules/stringify-object-es5/index.js. Coverage (Term): 6% Coverage (LOC): 8%
*- File /root/Targets/testdouble/node_modules/is-regexp/index.js. Coverage (Term): 54% Coverage (LOC): 83%
*- File /root/Targets/testdouble/node_modules/is-plain-obj/index.js. Coverage (Term): 44% Coverage (LOC): 86%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/config.js. Coverage (Term): 65% Coverage (LOC): 80%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/log.js. Coverage (Term): 53% Coverage (LOC): 78%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/imitate/index.js. Coverage (Term): 50% Coverage (LOC): 62%
*- File /root/Targets/testdouble/node_modules/es6-map/index.js. Coverage (Term): 86% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/es6-map/is-implemented.js. Coverage (Term): 75% Coverage (LOC): 96%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/imitate/initialize-names.js. Coverage (Term): 60% Coverage (LOC): 63%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/wrap/lodash.js. Coverage (Term): 99% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/imitate/create-imitation.js. Coverage (Term): 55% Coverage (LOC): 61%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/imitate/is-generator.js. Coverage (Term): 72% Coverage (LOC): 82%
*- File eval. Coverage (Term): 75% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/imitate/overwrite-children/index.js. Coverage (Term): 53% Coverage (LOC): 64%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/imitate/overwrite-children/is-fakeable.js. Coverage (Term): 53% Coverage (LOC): 54%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/imitate/overwrite-children/gather-props.js. Coverage (Term): 34% Coverage (LOC): 36%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/imitate/overwrite-children/copy-props.js. Coverage (Term): 35% Coverage (LOC): 40%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/imitate/overwrite-children/chain-prototype.js. Coverage (Term): 58% Coverage (LOC): 67%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/object.js. Coverage (Term): 86% Coverage (LOC): 94%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/constructor.js. Coverage (Term): 78% Coverage (LOC): 92%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/when.js. Coverage (Term): 23% Coverage (LOC): 32%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/verify.js. Coverage (Term): 27% Coverage (LOC): 46%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/matchers/index.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/matchers/builtin/captor.js. Coverage (Term): 52% Coverage (LOC): 50%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/matchers/builtin/is-a.js. Coverage (Term): 49% Coverage (LOC): 59%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/matchers/builtin/contains.js. Coverage (Term): 34% Coverage (LOC): 47%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/matchers/builtin/anything.js. Coverage (Term): 84% Coverage (LOC): 92%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/matchers/builtin/arg-that.js. Coverage (Term): 73% Coverage (LOC): 86%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/matchers/builtin/not.js. Coverage (Term): 74% Coverage (LOC): 88%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/replace/index.js. Coverage (Term): 76% Coverage (LOC): 81%
*- File /root/Targets/testdouble/node_modules/quibble/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/quibble/lib/quibble.js. Coverage (Term): 44% Coverage (LOC): 55%
*- File /root/Targets/testdouble/node_modules/lodash/fp/compact.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/fp/convert.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/fp/_baseConvert.js. Coverage (Term): 52% Coverage (LOC): 56%
*- File /root/Targets/testdouble/node_modules/lodash/fp/_mapping.js. Coverage (Term): 100% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/fp/placeholder.js. Coverage (Term): 94% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/fp/_util.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/ary.js. Coverage (Term): 93% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_createWrap.js. Coverage (Term): 88% Coverage (LOC): 90%
*- File /root/Targets/testdouble/node_modules/lodash/_baseSetData.js. Coverage (Term): 94% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_metaMap.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_createBind.js. Coverage (Term): 38% Coverage (LOC): 55%
*- File /root/Targets/testdouble/node_modules/lodash/_createCtor.js. Coverage (Term): 18% Coverage (LOC): 23%
*- File /root/Targets/testdouble/node_modules/lodash/_createCurry.js. Coverage (Term): 85% Coverage (LOC): 89%
*- File /root/Targets/testdouble/node_modules/lodash/_createHybrid.js. Coverage (Term): 89% Coverage (LOC): 90%
*- File /root/Targets/testdouble/node_modules/lodash/_composeArgs.js. Coverage (Term): 87% Coverage (LOC): 83%
*- File /root/Targets/testdouble/node_modules/lodash/_composeArgsRight.js. Coverage (Term): 16% Coverage (LOC): 26%
*- File /root/Targets/testdouble/node_modules/lodash/_countHolders.js. Coverage (Term): 89% Coverage (LOC): 91%
*- File /root/Targets/testdouble/node_modules/lodash/_createRecurry.js. Coverage (Term): 93% Coverage (LOC): 97%
*- File /root/Targets/testdouble/node_modules/lodash/_isLaziable.js. Coverage (Term): 69% Coverage (LOC): 64%
*- File /root/Targets/testdouble/node_modules/lodash/_LazyWrapper.js. Coverage (Term): 58% Coverage (LOC): 53%
*- File /root/Targets/testdouble/node_modules/lodash/_baseLodash.js. Coverage (Term): 79% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_getData.js. Coverage (Term): 94% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/noop.js. Coverage (Term): 79% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_getFuncName.js. Coverage (Term): 74% Coverage (LOC): 73%
*- File /root/Targets/testdouble/node_modules/lodash/_realNames.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/wrapperLodash.js. Coverage (Term): 62% Coverage (LOC): 50%
*- File /root/Targets/testdouble/node_modules/lodash/_LodashWrapper.js. Coverage (Term): 60% Coverage (LOC): 58%
*- File /root/Targets/testdouble/node_modules/lodash/_wrapperClone.js. Coverage (Term): 45% Coverage (LOC): 38%
*- File /root/Targets/testdouble/node_modules/lodash/_setData.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_setWrapToString.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_getWrapDetails.js. Coverage (Term): 85% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_insertWrapDetails.js. Coverage (Term): 94% Coverage (LOC): 92%
*- File /root/Targets/testdouble/node_modules/lodash/_updateWrapDetails.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_arrayIncludes.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_getHolder.js. Coverage (Term): 94% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_reorder.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_replaceHolders.js. Coverage (Term): 83% Coverage (LOC): 86%
*- File /root/Targets/testdouble/node_modules/lodash/_createPartial.js. Coverage (Term): 26% Coverage (LOC): 35%
*- File /root/Targets/testdouble/node_modules/lodash/_mergeData.js. Coverage (Term): 70% Coverage (LOC): 79%
*- File /root/Targets/testdouble/node_modules/lodash/curry.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/iteratee.js. Coverage (Term): 63% Coverage (LOC): 86%
*- File /root/Targets/testdouble/node_modules/lodash/rearg.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_flatRest.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/flatten.js. Coverage (Term): 92% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_baseFlatten.js. Coverage (Term): 81% Coverage (LOC): 85%
*- File /root/Targets/testdouble/node_modules/lodash/_isFlattenable.js. Coverage (Term): 79% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/toPath.js. Coverage (Term): 65% Coverage (LOC): 56%
*- File /root/Targets/testdouble/node_modules/lodash/fp/_falseOptions.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/fp/extendAll.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/fp/assignInAll.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/fp/filter.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/fp/find.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/fp/flow.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/flow.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_createFlow.js. Coverage (Term): 60% Coverage (LOC): 76%
*- File /root/Targets/testdouble/node_modules/lodash/fp/invokeMap.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/invokeMap.js. Coverage (Term): 92% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/fp/includes.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/fp/reject.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/fp/startsWith.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/startsWith.js. Coverage (Term): 48% Coverage (LOC): 56%
*- File /root/Targets/testdouble/node_modules/lodash/_baseClamp.js. Coverage (Term): 30% Coverage (LOC): 31%
*- File /root/Targets/testdouble/node_modules/lodash/uniq.js. Coverage (Term): 93% Coverage (LOC): 100%
*- File /root/Targets/testdouble/node_modules/lodash/_baseUniq.js. Coverage (Term): 72% Coverage (LOC): 63%
*- File /root/Targets/testdouble/node_modules/lodash/_arrayIncludesWith.js. Coverage (Term): 30% Coverage (LOC): 36%
*- File /root/Targets/testdouble/node_modules/lodash/_createSet.js. Coverage (Term): 84% Coverage (LOC): 90%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/replace/module.js. Coverage (Term): 48% Coverage (LOC): 59%
*- File /root/Targets/testdouble/node_modules/resolve/index.js. Coverage (Term): 79% Coverage (LOC): 91%
*- File /root/Targets/testdouble/node_modules/resolve/lib/core.js. Coverage (Term): 92% Coverage (LOC): 95%
*- File /root/Targets/testdouble/node_modules/resolve/lib/async.js. Coverage (Term): 4% Coverage (LOC): 5%
*- File /root/Targets/testdouble/node_modules/resolve/lib/caller.js. Coverage (Term): 30% Coverage (LOC): 36%
*- File /root/Targets/testdouble/node_modules/resolve/lib/node-modules-paths.js. Coverage (Term): 18% Coverage (LOC): 21%
*- File /root/Targets/testdouble/node_modules/resolve/lib/sync.js. Coverage (Term): 10% Coverage (LOC): 11%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/replace/property.js. Coverage (Term): 33% Coverage (LOC): 46%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/reset.js. Coverage (Term): 67% Coverage (LOC): 72%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/explain.js. Coverage (Term): 30% Coverage (LOC): 40%
*- File /root/Targets/testdouble/node_modules/testdouble/lib/version.js. Coverage (Term): 96% Coverage (LOC): 100%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 158 paths with 7 errors **
