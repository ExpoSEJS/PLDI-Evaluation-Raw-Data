
> dtrace-provider@0.8.5 install /root/Targets/Haraka/node_modules/bunyan/node_modules/dtrace-provider
> node scripts/install.js


> dtrace-provider@0.7.1 install /root/Targets/Haraka/node_modules/dtrace-provider
> node scripts/install.js


> modern-syslog@1.1.4 install /root/Targets/Haraka/node_modules/modern-syslog
> node-gyp rebuild

make: Entering directory '/root/Targets/Haraka/node_modules/modern-syslog/build'
  CXX(target) Release/obj.target/core/core.o
  SOLINK_MODULE(target) Release/obj.target/core.node
  COPY Release/core.node
make: Leaving directory '/root/Targets/Haraka/node_modules/modern-syslog/build'

> iconv@2.3.0 install /root/Targets/Haraka/node_modules/iconv
> node-gyp rebuild

make: Entering directory '/root/Targets/Haraka/node_modules/iconv/build'
  CXX(target) Release/obj.target/iconv/src/binding.o
  CC(target) Release/obj.target/iconv/deps/libiconv/lib/iconv.o
  CC(target) Release/obj.target/iconv/support/localcharset.o
  SOLINK_MODULE(target) Release/obj.target/iconv.node
  COPY Release/iconv.node
make: Leaving directory '/root/Targets/Haraka/node_modules/iconv/build'
/root/Targets/Haraka
└─┬ Haraka@2.8.15 
  ├─┬ address-rfc2821@1.1.2 
  │ └── punycode@2.1.0 
  ├─┬ address-rfc2822@2.0.1 
  │ └── email-addresses@3.0.1 
  ├─┬ async@2.5.0 
  │ └── lodash@4.17.4 
  ├── daemon@1.1.0 
  ├── generic-pool@2.5.4 
  ├── haraka-constants@1.0.5 
  ├─┬ haraka-net-utils@1.0.10 
  │ ├── haraka-config@1.0.14 
  │ ├── openssl-wrapper@0.3.4 
  │ └── vs-stun@0.0.7 
  ├── haraka-notes@1.0.2 
  ├── haraka-plugin-access@1.0.0 
  ├─┬ haraka-plugin-asn@1.0.7 
  │ └── maxmind@0.6.0 
  ├── haraka-plugin-dcc@1.0.1 
  ├─┬ haraka-plugin-elasticsearch@1.0.3 
  │ └─┬ elasticsearch@13.3.1 
  │   ├── agentkeepalive@2.2.0 
  │   ├─┬ chalk@1.1.3 
  │   │ ├── ansi-styles@2.2.1 
  │   │ ├── escape-string-regexp@1.0.5 
  │   │ ├─┬ has-ansi@2.0.0 
  │   │ │ └── ansi-regex@2.1.1 
  │   │ ├── strip-ansi@3.0.1 
  │   │ └── supports-color@2.0.0 
  │   ├── lodash@2.4.2 
  │   ├── lodash.get@4.4.2 
  │   ├── lodash.isempty@4.4.0 
  │   └── lodash.trimend@4.5.1 
  ├── haraka-plugin-fcrdns@1.0.2 
  ├─┬ haraka-plugin-geoip@1.0.5 
  │ └─┬ maxmind@2.2.0 
  │   ├── big-integer@1.6.25 
  │   └─┬ lru-cache@4.1.1 
  │     ├── pseudomap@1.0.2 
  │     └── yallist@2.1.2 
  ├── haraka-plugin-karma@1.0.10 
  ├── haraka-plugin-limit@1.0.4 
  ├── haraka-plugin-qmail-deliverable@1.0.2 
  ├─┬ haraka-plugin-recipient-routes@1.0.1 
  │ └─┬ url@0.11.0 
  │   ├── punycode@1.3.2 
  │   └── querystring@0.2.0 
  ├── haraka-plugin-redis@1.0.7 
  ├─┬ haraka-plugin-syslog@1.0.3 
  │ └── modern-syslog@1.1.4 
  ├─┬ haraka-plugin-watch@1.0.12 
  │ └─┬ ws@3.2.0 
  │   ├── async-limiter@1.0.0 
  │   ├── safe-buffer@5.1.1 
  │   └── ultron@1.1.0 
  ├── haraka-results@2.0.2 
  ├── haraka-tld@1.0.17 
  ├── haraka-utils@1.0.1 
  ├─┬ iconv@2.3.0 
  │ └── nan@2.7.0 
  ├── ipaddr.js@1.5.2 
  ├─┬ js-yaml@3.9.1 
  │ ├─┬ argparse@1.0.9 
  │ │ └── sprintf-js@1.0.3 
  │ └── esprima@4.0.0 
  ├─┬ ldapjs@1.0.1 
  │ ├── asn1@0.2.3 
  │ ├── assert-plus@1.0.0 
  │ ├─┬ backoff@2.5.0 
  │ │ └── precond@0.2.3 
  │ ├─┬ bunyan@1.8.12 
  │ │ ├── dtrace-provider@0.8.5 
  │ │ ├── moment@2.18.1 
  │ │ ├─┬ mv@2.1.1 
  │ │ │ ├── ncp@2.0.0 
  │ │ │ └─┬ rimraf@2.4.5 
  │ │ │   └─┬ glob@6.0.4 
  │ │ │     ├── inflight@1.0.6 
  │ │ │     ├─┬ minimatch@3.0.4 
  │ │ │     │ └─┬ brace-expansion@1.1.8 
  │ │ │     │   ├── balanced-match@1.0.0 
  │ │ │     │   └── concat-map@0.0.1 
  │ │ │     └── path-is-absolute@1.0.1 
  │ │ └── safe-json-stringify@1.0.4 
  │ ├── dashdash@1.14.1 
  │ ├── dtrace-provider@0.7.1 
  │ ├─┬ ldap-filter@0.2.2 
  │ │ └── assert-plus@0.1.5 
  │ ├─┬ once@1.4.0 
  │ │ └── wrappy@1.0.2 
  │ ├─┬ vasync@1.6.4 
  │ │ └── verror@1.6.0 
  │ └─┬ verror@1.10.0 
  │   ├── core-util-is@1.0.2 
  │   └── extsprintf@1.2.0 
  ├─┬ mkdirp@0.5.1 
  │ └── minimist@0.0.8 
  ├─┬ nopt@4.0.1 
  │ ├── abbrev@1.1.0 
  │ └─┬ osenv@0.1.4 
  │   └── os-homedir@1.0.2 
  ├── npid@0.4.0 
  ├─┬ ocsp@1.2.0 
  │ ├─┬ asn1.js@4.9.1 
  │ │ ├── bn.js@4.11.8 
  │ │ ├── inherits@2.0.3 
  │ │ └── minimalistic-assert@1.0.0 
  │ ├── asn1.js-rfc2560@4.0.5 
  │ ├── asn1.js-rfc5280@2.0.0 
  │ ├── async@1.5.2 
  │ └── simple-lru-cache@0.0.2 
  ├─┬ redis@2.8.0 
  │ ├── double-ended-queue@2.1.0-0 
  │ ├── redis-commands@1.3.1 
  │ └── redis-parser@2.6.0 
  ├── semver@5.4.1 
  ├── sprintf-js@1.1.1 
  └─┬ tmp@0.0.33 
    └── os-tmpdir@1.0.2 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/Haraka/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.039 took 3.3155s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node

'use strict';
var path = require('path');

if (!process.env.HARAKA) {
    console.warn("WARNING: Not running installed Haraka - command line arguments ignored")
}

// this must be set before "server.js" is loaded
process.env.HARAKA = process.env.HARAKA || path.resolve('.');
try {
    require.paths.push(path.join(process.env.HARAKA, 'node_modules'));
}
catch (e) {
    process.env.NODE_PATH = process.env.NODE_PATH ?
        (process.env.NODE_PATH + ':' +
             path.join(process.env.HARAKA, 'node_modules'))
        :
        (path.join(process.env.HARAKA, 'node_modules'));
    require('module')._initPaths(); // Horrible hack
}

var fs     = require('fs');
var logger = require('./logger');
var server = require('./server');

exports.version = JSON.parse(
    fs.readFileSync(path.join(__dirname, './package.json'), 'utf8')
).version;

process.on('uncaughtException', function (err) {
    if (err.stack) {
        err.stack.split("\n").forEach(function (line) {
            logger.logcrit(line);
        });
    }
    else {
        logger.logcrit('Caught exception: ' + JSON.stringify(err));
    }
    logger.dump_and_exit(1);
});

var shutting_down = false;
['SIGINT'].forEach(function (sig) {
    process.on(sig, function () {
        if (shutting_down) return process.exit(1);
        shutting_down = true;
        process.title = path.basename(process.argv[1], '.js');
        logger.lognotice(sig + ' received');
        logger.dump_and_exit(function () {
            if (server.cluster && server.cluster.isMaster) {
                server.performShutdown();
            }
            else if (!server.cluster) {
                server.performShutdown();
            }
        });
    });
});

process.on('SIGHUP', function () {
    logger.lognotice("Flushing the temp fail queue");
    server.flushQueue();
});

process.on('exit', function (code) {
    if (shutting_down) return;
    process.title = path.basename(process.argv[1], '.js');
    logger.lognotice('Shutting down');
    logger.dump_logs();
});

logger.log("NOTICE", "Starting up Haraka version " + exports.version);

server.createServer();
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
