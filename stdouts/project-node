/root/Targets/project-node
└── project-node@0.1.5 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/project-node/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0885 took 5.8211s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node
'use strict'

require('shelljs/global')
const path = require('path')
const project = require('./lib/projects')

const argv = require('yargs')
    .option('s', {
        alias: 'singleWebApp',
        default: '',
        describe: project.list[0].description,
        type: 'string'
    })
    .option('m', {
        alias: 'mvc',
        default: '',
        describe: project.list[1].description,
        type: 'string'
    })
    .option('r', {
        alias: 'react',
        default: '',
        describe: project.list[2].description,
        type: 'string'
    })
    .option('v', {
        alias: 'vuejs',
        default: '',
        describe: project.list[3].description,
        type: 'string'
    })
    .usage('用法: project [options]')
    .example('project -s webshop', 'Creating project webshop')
    .help('h')
    .alias('h', 'help')
    .epilog('made by mada.')
    .argv

let currentPath = pwd()

let renameProject = function (dir, name) {
    return path.join(dir, name)
}

let copyProject = function (p, distFile) {
    cp('-Rf', path.join(__dirname, p.path), distFile);
}

let p, name
console.log(argv.s)
console.log(argv.m)
if (argv.s) {
    p = project.get(0)
    name = argv.s
} else if (argv.m) {
    p = project.get(1)
    name = argv.m
} else if (argv.r) {
    p = project.get(2)
    name = argv.r
} else if (argv.v) {
    p = project.get(3)
    name = argv.v
}
if (!name) {
    console.log('输入格式错误,请查看帮助信息')
    echo('project -h')
    return
}

let distFile = renameProject(currentPath.toString(), name)
console.log('Creating project + ' + name + ' to path: ' + distFile)
copyProject(p, distFile)
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
