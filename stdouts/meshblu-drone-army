/root/Targets/meshblu-drone-army
└─┬ meshblu-drone-army@1.2.1 
  ├─┬ ar-drone@0.3.3 
  │ ├── buffy@0.0.4 
  │ └── simple-debug@1.1.2 
  ├── async@1.4.2 
  ├── coffee-script@1.12.7 
  ├─┬ debug@2.6.8 
  │ └── ms@2.0.0 
  ├─┬ fstream@1.0.8 
  │ ├── graceful-fs@4.1.2 
  │ ├── inherits@2.0.1 
  │ ├─┬ mkdirp@0.5.1 
  │ │ └── minimist@0.0.8 
  │ └─┬ rimraf@2.4.3 
  │   └─┬ glob@5.0.14 
  │     ├─┬ inflight@1.0.4 
  │     │ └── wrappy@1.0.1 
  │     ├─┬ minimatch@2.0.10 
  │     │ └─┬ brace-expansion@1.1.0 
  │     │   ├── balanced-match@0.2.0 
  │     │   └── concat-map@0.0.1 
  │     ├── once@1.3.2 
  │     └── path-is-absolute@1.0.0 
  ├── lodash@3.10.1 
  ├─┬ meshblu@1.34.1 
  │ ├── backo@1.1.0 
  │ ├─┬ fstream@1.0.9 
  │ │ ├── graceful-fs@4.1.4 
  │ │ ├── inherits@2.0.1 
  │ │ ├─┬ mkdirp@0.5.1 
  │ │ │ └── minimist@0.0.8 
  │ │ └─┬ rimraf@2.5.2 
  │ │   └─┬ glob@7.0.3 
  │ │     ├─┬ inflight@1.0.5 
  │ │     │ └── wrappy@1.0.2 
  │ │     ├─┬ minimatch@3.0.0 
  │ │     │ └─┬ brace-expansion@1.1.4 
  │ │     │   ├── balanced-match@0.4.1 
  │ │     │   └── concat-map@0.0.1 
  │ │     ├── once@1.3.3 
  │ │     └── path-is-absolute@1.0.0 
  │ ├─┬ json-stable-stringify@1.0.1 
  │ │ └── jsonify@0.0.0 
  │ ├─┬ node-rsa@0.2.30 
  │ │ ├── asn1@0.2.3 
  │ │ └── lodash@3.3.0 
  │ ├─┬ request@2.72.0 
  │ │ ├── aws-sign2@0.6.0 
  │ │ ├── aws4@1.4.1 
  │ │ ├─┬ bl@1.1.2 
  │ │ │ └─┬ readable-stream@2.0.6 
  │ │ │   ├── core-util-is@1.0.2 
  │ │ │   ├── isarray@1.0.0 
  │ │ │   ├── process-nextick-args@1.0.7 
  │ │ │   ├── string_decoder@0.10.31 
  │ │ │   └── util-deprecate@1.0.2 
  │ │ ├── caseless@0.11.0 
  │ │ ├─┬ combined-stream@1.0.5 
  │ │ │ └── delayed-stream@1.0.0 
  │ │ ├── extend@3.0.0 
  │ │ ├── forever-agent@0.6.1 
  │ │ ├─┬ form-data@1.0.0-rc4 
  │ │ │ └── async@1.5.2 
  │ │ ├─┬ har-validator@2.0.6 
  │ │ │ ├─┬ chalk@1.1.3 
  │ │ │ │ ├── ansi-styles@2.2.1 
  │ │ │ │ ├── escape-string-regexp@1.0.5 
  │ │ │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ │ │ └── ansi-regex@2.0.0 
  │ │ │ │ ├── strip-ansi@3.0.1 
  │ │ │ │ └── supports-color@2.0.0 
  │ │ │ ├─┬ commander@2.9.0 
  │ │ │ │ └── graceful-readlink@1.0.1 
  │ │ │ ├─┬ is-my-json-valid@2.13.1 
  │ │ │ │ ├── generate-function@2.0.0 
  │ │ │ │ ├─┬ generate-object-property@1.2.0 
  │ │ │ │ │ └── is-property@1.0.2 
  │ │ │ │ ├── jsonpointer@2.0.0 
  │ │ │ │ └── xtend@4.0.1 
  │ │ │ └─┬ pinkie-promise@2.0.1 
  │ │ │   └── pinkie@2.0.4 
  │ │ ├─┬ hawk@3.1.3 
  │ │ │ ├── boom@2.10.1 
  │ │ │ ├── cryptiles@2.0.5 
  │ │ │ ├── hoek@2.16.3 
  │ │ │ └── sntp@1.0.9 
  │ │ ├─┬ http-signature@1.1.1 
  │ │ │ ├── assert-plus@0.2.0 
  │ │ │ ├─┬ jsprim@1.2.2 
  │ │ │ │ ├── extsprintf@1.0.2 
  │ │ │ │ ├── json-schema@0.2.2 
  │ │ │ │ └── verror@1.3.6 
  │ │ │ └─┬ sshpk@1.8.3 
  │ │ │   ├── asn1@0.2.3 
  │ │ │   ├── assert-plus@1.0.0 
  │ │ │   ├─┬ dashdash@1.14.0 
  │ │ │   │ └── assert-plus@1.0.0 
  │ │ │   ├── ecc-jsbn@0.1.1 
  │ │ │   ├─┬ getpass@0.1.6 
  │ │ │   │ └── assert-plus@1.0.0 
  │ │ │   ├── jodid25519@1.0.2 
  │ │ │   ├── jsbn@0.1.0 
  │ │ │   └── tweetnacl@0.13.3 
  │ │ ├── is-typedarray@1.0.0 
  │ │ ├── isstream@0.1.2 
  │ │ ├── json-stringify-safe@5.0.1 
  │ │ ├─┬ mime-types@2.1.11 
  │ │ │ └── mime-db@1.23.0 
  │ │ ├── node-uuid@1.4.7 
  │ │ ├── oauth-sign@0.8.2 
  │ │ ├── qs@6.1.0 
  │ │ ├── stringstream@0.0.5 
  │ │ ├── tough-cookie@2.2.2 
  │ │ └── tunnel-agent@0.4.3 
  │ ├─┬ socket.io-client@1.7.4 
  │ │ ├── backo2@1.0.2 
  │ │ ├── component-bind@1.0.0 
  │ │ ├── component-emitter@1.2.1 
  │ │ ├─┬ debug@2.3.3 
  │ │ │ └── ms@0.7.2 
  │ │ ├─┬ engine.io-client@1.8.4 
  │ │ │ ├── component-inherit@0.0.3 
  │ │ │ ├─┬ debug@2.3.3 
  │ │ │ │ └── ms@0.7.2 
  │ │ │ ├─┬ engine.io-parser@1.3.2 
  │ │ │ │ ├── after@0.8.2 
  │ │ │ │ ├── arraybuffer.slice@0.0.6 
  │ │ │ │ ├── base64-arraybuffer@0.1.5 
  │ │ │ │ ├── blob@0.0.4 
  │ │ │ │ └── wtf-8@1.0.0 
  │ │ │ ├── has-cors@1.1.0 
  │ │ │ ├── parsejson@0.0.3 
  │ │ │ ├── parseqs@0.0.5 
  │ │ │ ├─┬ ws@1.1.2 
  │ │ │ │ ├── options@0.0.6 
  │ │ │ │ └── ultron@1.0.2 
  │ │ │ ├── xmlhttprequest-ssl@1.5.3 
  │ │ │ └── yeast@0.1.2 
  │ │ ├─┬ has-binary@0.1.7 
  │ │ │ └── isarray@0.0.1 
  │ │ ├── indexof@0.0.1 
  │ │ ├── object-component@0.0.3 
  │ │ ├─┬ parseuri@0.0.5 
  │ │ │ └─┬ better-assert@1.0.2 
  │ │ │   └── callsite@1.0.0 
  │ │ ├─┬ socket.io-parser@2.3.1 
  │ │ │ ├── component-emitter@1.1.2 
  │ │ │ ├─┬ debug@2.2.0 
  │ │ │ │ └── ms@0.7.1 
  │ │ │ └── json3@3.3.2 
  │ │ └── to-array@0.1.4 
  │ ├─┬ tar@2.2.1 
  │ │ └── block-stream@0.0.9 
  │ └─┬ url@0.10.3 
  │   ├── punycode@1.3.2 
  │   └── querystring@0.2.0 
  ├── meshblu-config@3.2.0 
  ├─┬ request@2.63.0 
  │ ├── aws-sign2@0.5.0 
  │ ├─┬ bl@1.0.0 
  │ │ └─┬ readable-stream@2.0.2 
  │ │   ├── core-util-is@1.0.1 
  │ │   ├── isarray@0.0.1 
  │ │   ├── process-nextick-args@1.0.3 
  │ │   ├── string_decoder@0.10.31 
  │ │   └── util-deprecate@1.0.1 
  │ ├── caseless@0.11.0 
  │ ├─┬ combined-stream@1.0.5 
  │ │ └── delayed-stream@1.0.0 
  │ ├── extend@3.0.0 
  │ ├── forever-agent@0.6.1 
  │ ├── form-data@1.0.0-rc3 
  │ ├─┬ har-validator@1.8.0 
  │ │ ├── bluebird@2.10.1 
  │ │ ├─┬ chalk@1.1.1 
  │ │ │ ├── ansi-styles@2.1.0 
  │ │ │ ├── escape-string-regexp@1.0.3 
  │ │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ │ └── ansi-regex@2.0.0 
  │ │ │ ├── strip-ansi@3.0.0 
  │ │ │ └── supports-color@2.0.0 
  │ │ ├─┬ commander@2.8.1 
  │ │ │ └── graceful-readlink@1.0.1 
  │ │ └─┬ is-my-json-valid@2.12.2 
  │ │   ├── generate-function@2.0.0 
  │ │   ├─┬ generate-object-property@1.2.0 
  │ │   │ └── is-property@1.0.2 
  │ │   ├── jsonpointer@2.0.0 
  │ │   └── xtend@4.0.0 
  │ ├─┬ hawk@3.1.0 
  │ │ ├── boom@2.9.0 
  │ │ ├── cryptiles@2.0.5 
  │ │ ├── hoek@2.16.3 
  │ │ └── sntp@1.0.9 
  │ ├─┬ http-signature@0.11.0 
  │ │ ├── asn1@0.1.11 
  │ │ ├── assert-plus@0.1.5 
  │ │ └── ctype@0.5.3 
  │ ├── isstream@0.1.2 
  │ ├── json-stringify-safe@5.0.1 
  │ ├─┬ mime-types@2.1.7 
  │ │ └── mime-db@1.19.0 
  │ ├── node-uuid@1.4.3 
  │ ├── oauth-sign@0.8.0 
  │ ├── qs@5.1.0 
  │ ├── stringstream@0.0.4 
  │ ├── tough-cookie@2.0.0 
  │ └── tunnel-agent@0.4.1 
  └─┬ tar@2.2.1 
    └── block-stream@0.0.8 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/meshblu-drone-army/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 15% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0841 took 8.412s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (1:82) on program var assert           = require('assert');
var dgram            = require('dgram');

var debug            = require('simple-debug')('udpcontrol');

var AtCommandCreator = require('./AtCommandCreator');
var meta             = require('../misc/meta');
var constants        = require('../constants');


var DEFAULT_TIMEOUT = 500;  // ms

var states = {
  NOT_BLOCKED: 'NOT_BLOCKED',
  WAITING_FOR_ACK: 'WAITING_FOR_ACK',
  WAITING_FOR_ACK_RESET: 'WAITING_FOR_ACK_RESET'
};



module.exports = UdpControl;
function UdpControl(options) {
  options = options || {};

  this._sequenceNumber = 0;
  this._socket     = options.socket || dgram.createSocket('udp4');
  this._port       = options.port || constants.ports.AT;
  this._ip         = options.ip ||  constants.DEFAULT_DRONE_IP;
  this.defaultTimeout = options.defaultTimeout || DEFAULT_TIMEOUT;
  this._cmdCreator = new AtCommandCreator();
  this._cmds       = [];
  this._blockingCmds = [];
  this._blocked = {
    state: states.NOT_BLOCKED,
    cmd: null,
    ackTimer: null
  };
}

meta.methods(AtCommandCreator).forEach(function(methodName) {
  UdpControl.prototype[methodName] = function() {
    var cmd = this._cmdCreator[methodName].apply(this._cmdCreator, arguments);
    if (cmd.blocks) {
      this._blockingCmds.push(cmd);
    } else {
      this._cmds.push(cmd);
    }
    return cmd;
  };
});

UdpControl.prototype.ack = function() {
  if (this._blocked.state === states.WAITING_FOR_ACK) {
    assert(this._blocked.cmd);
    assert(this._blocked.ackTimer);
    debug('Got ACK for ' + this._blocked.cmd);
    clearTimeout(this._blocked.ackTimer);
    this._blocked.ackTimer = null;
    if (this._blocked.cmd.callback) {
      this._blocked.cmd.callback.call(this, null);
    }
    this._blocked.state = states.WAITING_FOR_ACK_RESET;
    debug('Resetting ACK');
    this.ctrl(5, 0);
    // Send ctrl(5, 0) every 50 ms until we get an ACK reset.
    var self = this;
    this._blocked.ctrlTimer = setInterval(
      function() {
        if (self.state === states.WAITING_FOR_ACK_RESET) {
          self.ctrl(5, 0);
        } else {
          clearInterval(self._blocked.ctrlTimer);
          self._blocked.ctrlTimer = null;
        }
      },
      50);
  }
};

UdpControl.prototype.ackReset = function() {
  if (this._blocked.state === states.WAITING_FOR_ACK_RESET) {
    assert(this._blocked.cmd);
    debug('Got ACK reset');
    this._blocked.cmd = null;
    this._blocked.state = states.NOT_BLOCKED;
  }
};

UdpControl.prototype._handleAckTimeout = function() {
  assert(this._blocked.state === states.WAITING_FOR_ACK);
  assert(this._blocked.ackTimer);
  assert(this._blocked.cmd);
  this._blocked.ackTimer = null;
  debug('Blocking command timed out:');
  debug(this._blocked.cmd);
  if (this._blocked.cmd.callback) {
    this._blocked.cmd.callback.call(this, new Error('ACK Timeout'));
  }
  this._blocked.cmd = null;
  this._blocked.state = states.NOT_BLOCKED;
};


UdpControl.prototype.flush = function() {
  if (this._cmds.length) {
    this._sendCommands(this._cmds);
    this._cmds = [];
  }
  if (this._blocked.state == states.NOT_BLOCKED && this._blockingCmds.length) {
    // Send the blocking command.
    var cmd = this._blockingCmds.shift();
    this._blocked.cmd = cmd;
    this._sendCommands([cmd]);
    this._blocked.state = states.WAITING_FOR_ACK;
    this._blocked.ackTimer = setTimeout(
      this._handleAckTimeout.bind(this),
      cmd.options.timeout || this.defaultTimeout);
  }
};

UdpControl.prototype._sendCommands = function(commands) {
  var serialized = this._concat(commands);
  debug(serialized.replace('\r', '|'));
  var buffer = new Buffer(serialized);
  this._socket.send(buffer, 0, buffer.length, this._port, this._ip);
};

UdpControl.prototype._concat = function(commands) {
  var self = this;
  return commands.reduce(function(cmds, cmd) {
    return cmds + cmd.serialize(self._sequenceNumber++);
  }, '');
};

UdpControl.prototype.close = function() {
  this._socket.close();
};
 at SyntaxError: Unexpected token (1:82)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/meshblu-drone-army/node_modules/meshblu-drone-army/connector.js. Coverage (Term): 5% Coverage (LOC): 5%
*- File /root/Targets/meshblu-drone-army/node_modules/meshblu-drone-army/index.js. Coverage (Term): 13% Coverage (LOC): 8%
*- File /root/Targets/meshblu-drone-army/node_modules/ar-drone/index.js. Coverage (Term): 16% Coverage (LOC): 20%
*- File /root/Targets/meshblu-drone-army/node_modules/ar-drone/lib/Client.js. Coverage (Term): 3% Coverage (LOC): 3%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
