/root/Targets/gemini-web
└─┬ gemini-web@1.3.1 
  ├── UNMET PEER DEPENDENCY karma@1.7.1
  └─┬ live-reload@1.1.0
    └─┬ shoe@0.0.5
      └── sockjs-client@0.0.0-unreleasable  (git://github.com/substack/sockjs-client.git#40d48d06b4dba884416bf88a051f76ca3c8ffcae)

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/gemini-web/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0289 took 2.3976s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node

/*
    description: this is the gemini command file
    author: linzhizhao 
    create: 2017.03.10
 */

//  import commander module to parse the command line paragram
var program = require('commander'),
    // import the custom command module
    gt = require('../lib/bin/generateTemplate'),
    clean = require('../lib/bin/clean'),
    runServe = require('../lib/bin/serve'),
    version = require('../package.json').version,
    description = require('../package.json').description;

// console.log(runServe);

var watch_test = false;

// set default command tip: version and help command
program
//.version(version)
    .usage('[options] [project name]')
    .option('-v, --version', 'show description', () => {
        if (version) console.log(version);
    })
    .option('-i, --info', 'show description', () => {
        if (description) console.log(description);
    });

// start command
program
    .command('start <projectName>')
    .description('Create a new project.')
    .action(function(projectName) {
        console.log('Creating new project named "%s"', projectName);
        gt(projectName).then((res) => {
            console.log(res);
        }).catch(err => {
            console.log(err);
        });
    });

// clean command
program
    .command('clean <dirName>')
    .description('Delete a directory.')
    .action(function(dirName) {
        console.log('Deleting directory named "%s"', dirName);
        clean(dirName).then((res) => {
            console.log(res);
        }).catch(err => {
            console.log(err);
        });
    });

// serve command
program
    .command('serve')
    .description('Begin to develop the project.')
    .option("-t, --test", "start test and watch test file.", () => {
        watch_test = true;
    })
    .action(function() {
        console.log('Starting to serve');
        runServe(watch_test);
    });

// testCafe
program
    .command('testcafe')
    .description('Begin to test the project via browser')
    .action(function() {

    });

program.parse(process.argv)

// use process.argv[2] to detect there has any parameter input,if no print help
if (!process.argv[2]) program.help(); at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
