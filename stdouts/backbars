/root/Targets/backbars
└─┬ backbars@1.0.3 
  ├── commander@2.6.0 
  └─┬ mkdirp@0.5.0 
    └── minimist@0.0.8 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/backbars/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.492 took 1.706s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node

var program = require('commander'),
    mkdirp  = require('mkdirp'),
    fs      = require('fs'),
    path    = require('path'),
    pkg     = require('../package.json'),
    version = pkg.version;

// CLI

program
	.version(version)
	.usage('[app name]')
	.parse(process.argv)


var start = function() {
	var destinationPath = program.args.shift() || '.';
	var appName = path.basename( path.resolve( destinationPath ) );

	createApplication(appName, destinationPath);
};

var createApplication = function(appName, location) {
	var done = function() {
		console.log('cd %s && npm install', location);
		console.log('nodemon to start server');
	};

	var server 							= readTemplate('js/server.js'),
	    www    							= readTemplate('js/www'),
	    packageJson 				= readTemplate('js/package.json'),
	    modelsIndex 				= readTemplate('js/index.js'),
	    configFile          = readTemplate('js/config.json'),
	    browserDependencies = readTemplate('js/main.js'),
	    app                 = readTemplate('js/app.js'),
	    bundle              = readTemplate('js/bundle.js'),
	    index               = readTemplate('html/index.html');

	makeFolder(location, function() {
		makeFolder(location + '/public', function() {
			writeToFile(location + '/public/index.html', index, null);
		});

		makeFolder(location + '/public/js', function() {
			makeFolder(location + '/public/js/models');
			makeFolder(location + '/public/js/collections');
			makeFolder(location + '/public/js/views');
			makeFolder(location + '/public/js/routers');
			writeToFile(location + '/public/js/app.js', app, null);
		});

		makeFolder(location + '/public/css', function() {
			writeToFile(location + '/public/css/.keep', null, null);
		});

		makeFolder(location + '/config', function() {
			configFile = configFile.replace(/{name}/g, appName)
			writeToFile(location + '/config/config.json', configFile, null);
		});

		makeFolder(location + '/migrations', function() {
			writeToFile(location + '/migrations/.keep', null, null);
		});

		makeFolder(location + '/models', function() {
			writeToFile(location + '/models/index.js', modelsIndex, null);
		});

		makeFolder(location + '/bin', function() {
			writeToFile(location + '/bin/www', www, null);
		});

		makeFolder(location + '/browser', function() {
			writeToFile(location + '/browser/main.js', browserDependencies, null);
			writeToFile(location + '/browser/bundle.js', bundle, null)
		});

		writeToFile(location + '/server.js', server, null);

		// write package.json
		packageJson = packageJson.replace(/{name}/g, appName);
		writeToFile(location + '/package.json', packageJson, null);
	});
};

var writeToFile = function(path, content, mode) {
  fs.writeFileSync(path, content, { mode: mode || 0666 });
  console.log('   \x1b[36mcreate\x1b[0m : ' + path);
};

var makeFolder = function(path, fn) {
	mkdirp(path, 0755, function(err){
    if (err) throw err;
    console.log('   \033[36mcreate\033[0m : ' + path);
    fn && fn();
  });
};

var readTemplate = function(template) {
	return fs.readFileSync(path.join(__dirname, '..', 'templates', template), 'utf-8');
};

// start process
start(); at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
