/root/Targets/sfproxy
└─┬ sfproxy@0.0.8 
  ├── commander@2.11.0 
  ├─┬ connect@3.6.5 
  │ ├─┬ debug@2.6.9 
  │ │ └── ms@2.0.0 
  │ ├─┬ finalhandler@1.0.6 
  │ │ ├── encodeurl@1.0.1 
  │ │ ├── escape-html@1.0.3 
  │ │ ├─┬ on-finished@2.3.0 
  │ │ │ └── ee-first@1.1.1 
  │ │ ├── statuses@1.3.1 
  │ │ └── unpipe@1.0.0 
  │ ├── parseurl@1.3.2 
  │ └── utils-merge@1.0.1 
  ├── mime@1.4.1 
  └─┬ sfconsole@0.0.5 
    ├── callsite@1.0.0 
    └── colors@1.1.2 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/sfproxy/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 28.999999999999996% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","reduce","parseInt","charCodeAt","abs","Number"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0743 took 6.9784s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Binding arguments in strict mode (19:22) on program module.exports = (function () {
  var stack = require("callsite");
  var colors = require("colors");
  colors.enabled = true;

  var initTime = +new Date();
  var timer = {
    beginTime: initTime,
    lastTime: initTime
  };

  function _console(ns, debug) {
    this.ns = ns || '';
    debug = (typeof debug !== 'boolean') ? true : debug;
    this.debug = debug && true;
  }

  _console.prototype = {
    preLog: function (arguments) {
      if (!this.debug) {
        return false;
      }
      var site = stack()[2];
      var line = site.getLineNumber();
      var tag = "[" + (this.ns || site.getFileName()) + " :" + line + "] ";

      var args = [].slice.apply(arguments);
      args.unshift(tag);
      return args.join('');
    },
    info: function () {
      if (this.preLog(arguments))
        console.log(this.preLog(arguments).cyan);
    },
    log: function () {
      var tmpTime = +new Date();
      var tmpV1 = tmpTime - timer.beginTime;
      var tmpV2 = tmpTime - timer.lastTime;
      timer.lastTime = tmpTime;
      if (this.preLog(arguments))
        console.log(this.preLog(arguments).green + (' [' + tmpV1 + "s]").cyan + ('[' + tmpV2 + "s]")[(tmpV2 > 100) ? 'red' : 'cyan']);
    },
    warn: function () {
      if (this.preLog(arguments))
        console.log(this.preLog(arguments).yellow);
    },
    err: function () {
      if (this.preLog(arguments))
        console.log(this.preLog(arguments).red);
    }
  }
  return function (ns, debug) {
    return new _console(ns, debug)
  }
}()) at SyntaxError: Binding arguments in strict mode (19:22)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$2.checkLVal (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1472:14)
    at Parser.pp$3.checkParams (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2136:16)
    at Parser.pp$3.parseFunctionBody (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2119:12)
    at Parser.parseFunctionBody (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:14:32)
    at Parser.pp$1.parseFunction (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1065:10)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1810:19)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/sfproxy/node_modules/sfproxy/index.js. Coverage (Term): 82% Coverage (LOC): 100%
*- File /root/Targets/sfproxy/node_modules/sfproxy/lib/start.js. Coverage (Term): 14% Coverage (LOC): 14%
*- File /root/Targets/sfproxy/node_modules/connect/index.js. Coverage (Term): 14% Coverage (LOC): 19%
*- File /root/Targets/sfproxy/node_modules/debug/src/index.js. Coverage (Term): 81% Coverage (LOC): 83%
*- File /root/Targets/sfproxy/node_modules/debug/src/node.js. Coverage (Term): 34% Coverage (LOC): 43%
*- File /root/Targets/sfproxy/node_modules/debug/src/debug.js. Coverage (Term): 44% Coverage (LOC): 48%
*- File /root/Targets/sfproxy/node_modules/ms/index.js. Coverage (Term): 12% Coverage (LOC): 15%
*- File /root/Targets/sfproxy/node_modules/finalhandler/index.js. Coverage (Term): 16% Coverage (LOC): 21%
*- File /root/Targets/sfproxy/node_modules/encodeurl/index.js. Coverage (Term): 63% Coverage (LOC): 89%
*- File /root/Targets/sfproxy/node_modules/escape-html/index.js. Coverage (Term): 16% Coverage (LOC): 18%
*- File /root/Targets/sfproxy/node_modules/on-finished/index.js. Coverage (Term): 13% Coverage (LOC): 17%
*- File /root/Targets/sfproxy/node_modules/ee-first/index.js. Coverage (Term): 9% Coverage (LOC): 13%
*- File /root/Targets/sfproxy/node_modules/parseurl/index.js. Coverage (Term): 15% Coverage (LOC): 18%
*- File /root/Targets/sfproxy/node_modules/statuses/index.js. Coverage (Term): 56% Coverage (LOC): 67%
*- File /root/Targets/sfproxy/node_modules/unpipe/index.js. Coverage (Term): 16% Coverage (LOC): 20%
*- File /root/Targets/sfproxy/node_modules/utils-merge/index.js. Coverage (Term): 40% Coverage (LOC): 40%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
