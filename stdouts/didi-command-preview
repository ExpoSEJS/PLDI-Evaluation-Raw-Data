
> spawn-sync@1.0.15 postinstall /root/Targets/didi-command-preview/node_modules/spawn-sync
> node postinstall

/root/Targets/didi-command-preview
└─┬ didi-command-preview@0.0.11 
  ├── chosen@0.0.2 
  ├─┬ copy@0.1.3 
  │ ├── async@1.5.2 
  │ ├── bluebird@2.11.0 
  │ ├─┬ extend-shallow@2.0.1 
  │ │ └── is-extendable@0.1.1 
  │ ├─┬ glob-parent@1.3.0 
  │ │ └─┬ is-glob@2.0.1 
  │ │   └── is-extglob@1.0.0 
  │ ├── graceful-fs@4.1.11 
  │ ├─┬ lazy-globby@0.1.1 
  │ │ └─┬ globby@2.1.0 
  │ │   ├── array-union@1.0.2 
  │ │   └── glob@5.0.15 
  │ └─┬ mkdirp@0.5.1 
  │   └── minimist@0.0.8 
  ├─┬ delete@0.2.1 
  │ ├─┬ lazy-cache@0.1.0 
  │ │ └─┬ ansi-yellow@0.1.1 
  │ │   └── ansi-wrap@0.1.0 
  │ └─┬ rimraf@2.6.2 
  │   └─┬ glob@7.1.2 
  │     ├── fs.realpath@1.0.0 
  │     ├─┬ inflight@1.0.6 
  │     │ └── wrappy@1.0.2 
  │     ├─┬ minimatch@3.0.4 
  │     │ └─┬ brace-expansion@1.1.8 
  │     │   ├── balanced-match@1.0.0 
  │     │   └── concat-map@0.0.1 
  │     ├── once@1.4.0 
  │     └── path-is-absolute@1.0.1 
  ├─┬ didi-component-install@0.2.6 
  │ ├── colors@0.6.2 
  │ ├─┬ debug@1.0.0 
  │ │ └── ms@0.6.2 
  │ ├─┬ decompress@0.2.3 
  │ │ ├── adm-zip@0.4.7 
  │ │ ├─┬ extname@0.1.5 
  │ │ │ ├─┬ ext-list@0.2.0 
  │ │ │ │ └─┬ got@0.2.0 
  │ │ │ │   └── object-assign@0.3.1 
  │ │ │ └── underscore.string@2.3.3 
  │ │ ├── get-stdin@0.1.0 
  │ │ ├─┬ map-key@0.1.5 
  │ │ │ └── lodash@2.4.2 
  │ │ ├── mkdirp@0.3.5 
  │ │ ├─┬ nopt@2.2.1 
  │ │ │ └── abbrev@1.1.1 
  │ │ ├─┬ stream-combiner@0.0.4 
  │ │ │ └── duplexer@0.1.1 
  │ │ ├─┬ tar@0.1.20 
  │ │ │ ├── block-stream@0.0.9 
  │ │ │ └─┬ fstream@0.1.31 
  │ │ │   └─┬ graceful-fs@3.0.11 
  │ │ │     └── natives@1.1.0 
  │ │ └─┬ tempfile@0.1.3 
  │ │   └── uuid@1.4.2 
  │ ├─┬ inquirer@1.2.3 
  │ │ ├── ansi-escapes@1.4.0 
  │ │ ├─┬ chalk@1.1.3 
  │ │ │ ├── ansi-styles@2.2.1 
  │ │ │ ├── escape-string-regexp@1.0.5 
  │ │ │ ├── has-ansi@2.0.0 
  │ │ │ └── supports-color@2.0.0 
  │ │ ├─┬ cli-cursor@1.0.2 
  │ │ │ └─┬ restore-cursor@1.0.1 
  │ │ │   └── exit-hook@1.1.1 
  │ │ ├── cli-width@2.2.0 
  │ │ ├─┬ external-editor@1.1.1 
  │ │ │ ├─┬ spawn-sync@1.0.15 
  │ │ │ │ └── os-shim@0.1.3 
  │ │ │ └─┬ tmp@0.0.29 
  │ │ │   └── os-tmpdir@1.0.2 
  │ │ ├─┬ figures@1.7.0 
  │ │ │ └── object-assign@4.1.1 
  │ │ ├── lodash@4.17.4 
  │ │ ├── mute-stream@0.0.6 
  │ │ ├─┬ pinkie-promise@2.0.1 
  │ │ │ └── pinkie@2.0.4 
  │ │ ├─┬ run-async@2.3.0 
  │ │ │ └── is-promise@2.1.0 
  │ │ ├── rx@4.1.0 
  │ │ ├─┬ string-width@1.0.2 
  │ │ │ ├── code-point-at@1.1.0 
  │ │ │ └─┬ is-fullwidth-code-point@1.0.0 
  │ │ │   └── number-is-nan@1.0.1 
  │ │ ├─┬ strip-ansi@3.0.1 
  │ │ │ └── ansi-regex@2.1.1 
  │ │ └── through@2.3.8 
  │ ├── mkdirp@0.5.0 
  │ ├─┬ prompt@0.2.14 
  │ │ ├── pkginfo@0.4.1 
  │ │ ├── read@1.0.7 
  │ │ ├── revalidator@0.1.8 
  │ │ ├─┬ utile@0.2.1 
  │ │ │ ├── async@0.2.10 
  │ │ │ ├── deep-equal@1.0.1 
  │ │ │ ├── i@0.3.5 
  │ │ │ └── ncp@0.4.2 
  │ │ └─┬ winston@0.8.3 
  │ │   ├── async@0.2.10 
  │ │   ├── cycle@1.0.3 
  │ │   ├── eyes@0.1.8 
  │ │   ├── pkginfo@0.3.1 
  │ │   └── stack-trace@0.0.10 
  │ ├── rimraf@2.2.8 
  │ ├── semver@2.3.0 
  │ └─┬ write-to@1.0.1 
  │   └── dethroy@1.0.2 
  ├─┬ download@4.4.3 
  │ ├─┬ caw@1.2.0 
  │ │ ├─┬ get-proxy@1.1.0 
  │ │ │ └─┬ rc@1.2.1 
  │ │ │   ├── deep-extend@0.4.2 
  │ │ │   ├── ini@1.3.4 
  │ │ │   ├── minimist@1.2.0 
  │ │ │   └── strip-json-comments@2.0.1 
  │ │ ├── is-obj@1.0.1 
  │ │ └── object-assign@3.0.0 
  │ ├─┬ concat-stream@1.6.0 
  │ │ ├── inherits@2.0.3 
  │ │ └── typedarray@0.0.6 
  │ ├─┬ each-async@1.1.1 
  │ │ ├── onetime@1.1.0 
  │ │ └── set-immediate-shim@1.0.1 
  │ ├─┬ filenamify@1.2.1 
  │ │ ├── filename-reserved-regex@1.0.0 
  │ │ ├── strip-outer@1.0.0 
  │ │ └── trim-repeated@1.0.0 
  │ ├─┬ got@5.7.1 
  │ │ ├─┬ create-error-class@3.0.2 
  │ │ │ └── capture-stack-trace@1.0.0 
  │ │ ├── duplexer2@0.1.4 
  │ │ ├── is-redirect@1.0.0 
  │ │ ├── is-retry-allowed@1.1.0 
  │ │ ├── is-stream@1.1.0 
  │ │ ├── lowercase-keys@1.0.0 
  │ │ ├── node-status-codes@1.0.0 
  │ │ ├─┬ parse-json@2.2.0 
  │ │ │ └─┬ error-ex@1.3.1 
  │ │ │   └── is-arrayish@0.2.1 
  │ │ ├── timed-out@3.1.3 
  │ │ ├── unzip-response@1.0.2 
  │ │ └─┬ url-parse-lax@1.0.0 
  │ │   └── prepend-http@1.0.4 
  │ ├─┬ gulp-decompress@1.2.0 
  │ │ ├─┬ archive-type@3.2.0 
  │ │ │ └── file-type@3.9.0 
  │ │ ├─┬ decompress@3.0.0 
  │ │ │ ├─┬ buffer-to-vinyl@1.1.0 
  │ │ │ │ └── uuid@2.0.3 
  │ │ │ ├─┬ decompress-tar@3.1.0 
  │ │ │ │ ├── is-tar@1.0.0 
  │ │ │ │ ├── object-assign@2.1.1 
  │ │ │ │ ├─┬ strip-dirs@1.1.1 
  │ │ │ │ │ ├── get-stdin@4.0.1 
  │ │ │ │ │ ├─┬ is-absolute@0.1.7 
  │ │ │ │ │ │ └── is-relative@0.1.3 
  │ │ │ │ │ ├── is-natural-number@2.1.1 
  │ │ │ │ │ ├── minimist@1.2.0 
  │ │ │ │ │ └── sum-up@1.0.3 
  │ │ │ │ ├── tar-stream@1.5.4 
  │ │ │ │ └─┬ vinyl@0.4.6 
  │ │ │ │   └── clone@0.2.0 
  │ │ │ ├─┬ decompress-tarbz2@3.1.0 
  │ │ │ │ ├── is-bzip2@1.0.0 
  │ │ │ │ ├── object-assign@2.1.1 
  │ │ │ │ ├─┬ seek-bzip@1.0.5 
  │ │ │ │ │ └─┬ commander@2.8.1 
  │ │ │ │ │   └── graceful-readlink@1.0.1 
  │ │ │ │ └─┬ vinyl@0.4.6 
  │ │ │ │   └── clone@0.2.0 
  │ │ │ ├─┬ decompress-targz@3.1.0 
  │ │ │ │ ├── is-gzip@1.0.0 
  │ │ │ │ ├── object-assign@2.1.1 
  │ │ │ │ └─┬ vinyl@0.4.6 
  │ │ │ │   └── clone@0.2.0 
  │ │ │ ├─┬ decompress-unzip@3.4.0 
  │ │ │ │ ├── is-zip@1.0.0 
  │ │ │ │ ├── stat-mode@0.2.2 
  │ │ │ │ ├── through2@2.0.3 
  │ │ │ │ └─┬ yauzl@2.8.0 
  │ │ │ │   ├── buffer-crc32@0.2.13 
  │ │ │ │   └─┬ fd-slicer@1.0.1 
  │ │ │ │     └── pend@1.2.0 
  │ │ │ └─┬ vinyl-assign@1.2.1 
  │ │ │   └── object-assign@4.1.1 
  │ │ └─┬ gulp-util@3.0.8 
  │ │   ├── array-differ@1.0.0 
  │ │   ├── array-uniq@1.0.3 
  │ │   ├── beeper@1.1.1 
  │ │   ├── dateformat@2.2.0 
  │ │   ├─┬ fancy-log@1.3.0 
  │ │   │ └── time-stamp@1.1.0 
  │ │   ├─┬ gulplog@1.0.0 
  │ │   │ └── glogg@1.0.0 
  │ │   ├─┬ has-gulplog@0.1.0 
  │ │   │ └── sparkles@1.0.0 
  │ │   ├── lodash._reescape@3.0.0 
  │ │   ├── lodash._reevaluate@3.0.0 
  │ │   ├── lodash._reinterpolate@3.0.0 
  │ │   ├─┬ lodash.template@3.6.2 
  │ │   │ ├── lodash._basecopy@3.0.1 
  │ │   │ ├── lodash._basetostring@3.0.1 
  │ │   │ ├── lodash._basevalues@3.0.0 
  │ │   │ ├── lodash._isiterateecall@3.0.9 
  │ │   │ ├─┬ lodash.escape@3.2.0 
  │ │   │ │ └── lodash._root@3.0.1 
  │ │   │ ├─┬ lodash.keys@3.1.2 
  │ │   │ │ ├── lodash._getnative@3.9.1 
  │ │   │ │ ├── lodash.isarguments@3.1.0 
  │ │   │ │ └── lodash.isarray@3.0.4 
  │ │   │ ├── lodash.restparam@3.6.1 
  │ │   │ └── lodash.templatesettings@3.1.1 
  │ │   ├── minimist@1.2.0 
  │ │   ├─┬ multipipe@0.1.2 
  │ │   │ └─┬ duplexer2@0.0.2 
  │ │   │   └─┬ readable-stream@1.1.14 
  │ │   │     ├── isarray@0.0.1 
  │ │   │     └── string_decoder@0.10.31 
  │ │   ├── through2@2.0.3 
  │ │   └── vinyl@0.5.3 
  │ ├── gulp-rename@1.2.2 
  │ ├── is-url@1.2.2 
  │ ├── object-assign@4.1.1 
  │ ├── read-all-stream@3.1.0 
  │ ├─┬ readable-stream@2.3.3 
  │ │ ├── core-util-is@1.0.2 
  │ │ ├── isarray@1.0.0 
  │ │ ├── process-nextick-args@1.0.7 
  │ │ ├── safe-buffer@5.1.1 
  │ │ ├── string_decoder@1.0.3 
  │ │ └── util-deprecate@1.0.2 
  │ ├── stream-combiner2@1.1.1 
  │ ├─┬ vinyl@1.2.0 
  │ │ ├── clone@1.0.2 
  │ │ ├── clone-stats@0.0.1 
  │ │ └── replace-ext@0.0.1 
  │ ├─┬ vinyl-fs@2.4.4 
  │ │ ├─┬ duplexify@3.5.1 
  │ │ │ ├── end-of-stream@1.4.0 
  │ │ │ └── stream-shift@1.0.0 
  │ │ ├─┬ glob-stream@5.3.5 
  │ │ │ ├─┬ glob-parent@3.1.0 
  │ │ │ │ ├─┬ is-glob@3.1.0 
  │ │ │ │ │ └── is-extglob@2.1.1 
  │ │ │ │ └── path-dirname@1.0.2 
  │ │ │ ├─┬ micromatch@2.3.11 
  │ │ │ │ ├─┬ arr-diff@2.0.0 
  │ │ │ │ │ └── arr-flatten@1.1.0 
  │ │ │ │ ├── array-unique@0.2.1 
  │ │ │ │ ├─┬ braces@1.8.5 
  │ │ │ │ │ ├─┬ expand-range@1.8.2 
  │ │ │ │ │ │ └─┬ fill-range@2.2.3 
  │ │ │ │ │ │   ├── is-number@2.1.0 
  │ │ │ │ │ │   ├── isobject@2.1.0 
  │ │ │ │ │ │   ├─┬ randomatic@1.1.7 
  │ │ │ │ │ │   │ ├─┬ is-number@3.0.0 
  │ │ │ │ │ │   │ │ └── kind-of@3.2.2 
  │ │ │ │ │ │   │ └── kind-of@4.0.0 
  │ │ │ │ │ │   └── repeat-string@1.6.1 
  │ │ │ │ │ ├── preserve@0.2.0 
  │ │ │ │ │ └── repeat-element@1.1.2 
  │ │ │ │ ├─┬ expand-brackets@0.1.5 
  │ │ │ │ │ └── is-posix-bracket@0.1.1 
  │ │ │ │ ├── extglob@0.3.2 
  │ │ │ │ ├── filename-regex@2.0.1 
  │ │ │ │ ├─┬ kind-of@3.2.2 
  │ │ │ │ │ └── is-buffer@1.1.5 
  │ │ │ │ ├─┬ normalize-path@2.1.1 
  │ │ │ │ │ └── remove-trailing-separator@1.1.0 
  │ │ │ │ ├─┬ object.omit@2.0.1 
  │ │ │ │ │ └─┬ for-own@0.1.5 
  │ │ │ │ │   └── for-in@1.0.2 
  │ │ │ │ ├─┬ parse-glob@3.0.4 
  │ │ │ │ │ ├─┬ glob-base@0.3.0 
  │ │ │ │ │ │ └── glob-parent@2.0.0 
  │ │ │ │ │ └── is-dotfile@1.0.3 
  │ │ │ │ └─┬ regex-cache@0.4.4 
  │ │ │ │   └─┬ is-equal-shallow@0.1.3 
  │ │ │ │     └── is-primitive@2.0.0 
  │ │ │ ├── ordered-read-streams@0.3.0 
  │ │ │ ├─┬ through2@0.6.5 
  │ │ │ │ └─┬ readable-stream@1.0.34 
  │ │ │ │   ├── isarray@0.0.1 
  │ │ │ │   └── string_decoder@0.10.31 
  │ │ │ ├── to-absolute-glob@0.1.1 
  │ │ │ └─┬ unique-stream@2.2.1 
  │ │ │   └─┬ json-stable-stringify@1.0.1 
  │ │ │     └── jsonify@0.0.0 
  │ │ ├─┬ gulp-sourcemaps@1.6.0 
  │ │ │ ├── convert-source-map@1.5.0 
  │ │ │ └── through2@2.0.3 
  │ │ ├── is-valid-glob@0.3.0 
  │ │ ├── lazystream@1.0.0 
  │ │ ├── lodash.isequal@4.5.0 
  │ │ ├── merge-stream@1.0.1 
  │ │ ├── object-assign@4.1.1 
  │ │ ├─┬ strip-bom@2.0.0 
  │ │ │ └── is-utf8@0.2.1 
  │ │ ├─┬ strip-bom-stream@1.0.0 
  │ │ │ └── first-chunk-stream@1.0.0 
  │ │ ├── through2@2.0.3 
  │ │ ├─┬ through2-filter@2.0.0 
  │ │ │ ├── through2@2.0.3 
  │ │ │ └── xtend@4.0.1 
  │ │ └── vali-date@1.0.0 
  │ └─┬ ware@1.3.0 
  │   └─┬ wrap-fn@0.1.5 
  │     └── co@3.1.0 
  ├── open@0.0.5 
  ├── q@1.5.0 
  ├─┬ request@2.61.0 
  │ ├── aws-sign2@0.5.0 
  │ ├─┬ bl@1.0.3 
  │ │ └─┬ readable-stream@2.0.6 
  │ │   └── string_decoder@0.10.31 
  │ ├── caseless@0.11.0 
  │ ├─┬ combined-stream@1.0.5 
  │ │ └── delayed-stream@1.0.0 
  │ ├── extend@3.0.1 
  │ ├── forever-agent@0.6.1 
  │ ├─┬ form-data@1.0.1 
  │ │ └─┬ async@2.5.0 
  │ │   └── lodash@4.17.4 
  │ ├─┬ har-validator@1.8.0 
  │ │ ├── commander@2.11.0 
  │ │ └─┬ is-my-json-valid@2.16.1 
  │ │   ├── generate-function@2.0.0 
  │ │   ├─┬ generate-object-property@1.2.0 
  │ │   │ └── is-property@1.0.2 
  │ │   └── jsonpointer@4.0.1 
  │ ├─┬ hawk@3.1.3 
  │ │ ├── boom@2.10.1 
  │ │ ├── cryptiles@2.0.5 
  │ │ ├── hoek@2.16.3 
  │ │ └── sntp@1.0.9 
  │ ├─┬ http-signature@0.11.0 
  │ │ ├── asn1@0.1.11 
  │ │ ├── assert-plus@0.1.5 
  │ │ └── ctype@0.5.3 
  │ ├── isstream@0.1.2 
  │ ├── json-stringify-safe@5.0.1 
  │ ├─┬ mime-types@2.1.17 
  │ │ └── mime-db@1.30.0 
  │ ├── node-uuid@1.4.8 
  │ ├── oauth-sign@0.8.2 
  │ ├── qs@4.0.0 
  │ ├── stringstream@0.0.5 
  │ ├─┬ tough-cookie@2.3.3 
  │ │ └── punycode@1.4.1 
  │ └── tunnel-agent@0.4.3 
  └── underscore@1.8.3 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/didi-command-preview/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 25% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","getInterfaceAddresses","every","RegExp"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0365 took 6.5623s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (4:4) on program module.exports = rimraf
rimraf.sync = rimrafSync

var assert = require("assert")
var path = require("path")
var fs = require("fs")

// for EMFILE handling
var timeout = 0
exports.EMFILE_MAX = 1000
exports.BUSYTRIES_MAX = 3

var isWindows = (process.platform === "win32")

function defaults (options) {
  var methods = [
    'unlink',
    'chmod',
    'stat',
    'rmdir',
    'readdir'
  ]
  methods.forEach(function(m) {
    options[m] = options[m] || fs[m]
    m = m + 'Sync'
    options[m] = options[m] || fs[m]
  })
}

function rimraf (p, options, cb) {
  if (typeof options === 'function') {
    cb = options
    options = {}
  }
  assert(p)
  assert(options)
  assert(typeof cb === 'function')

  defaults(options)

  if (!cb) throw new Error("No callback passed to rimraf()")

  var busyTries = 0
  rimraf_(p, options, function CB (er) {
    if (er) {
      if (isWindows && (er.code === "EBUSY" || er.code === "ENOTEMPTY") &&
          busyTries < exports.BUSYTRIES_MAX) {
        busyTries ++
        var time = busyTries * 100
        // try again, with the same exact callback as this one.
        return setTimeout(function () {
          rimraf_(p, options, CB)
        }, time)
      }

      // this one won't happen if graceful-fs is used.
      if (er.code === "EMFILE" && timeout < exports.EMFILE_MAX) {
        return setTimeout(function () {
          rimraf_(p, options, CB)
        }, timeout ++)
      }

      // already gone
      if (er.code === "ENOENT") er = null
    }

    timeout = 0
    cb(er)
  })
}

// Two possible strategies.
// 1. Assume it's a file.  unlink it, then do the dir stuff on EPERM or EISDIR
// 2. Assume it's a directory.  readdir, then do the file stuff on ENOTDIR
//
// Both result in an extra syscall when you guess wrong.  However, there
// are likely far more normal files in the world than directories.  This
// is based on the assumption that a the average number of files per
// directory is >= 1.
//
// If anyone ever complains about this, then I guess the strategy could
// be made configurable somehow.  But until then, YAGNI.
function rimraf_ (p, options, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')

  options.unlink(p, function (er) {
    if (er) {
      if (er.code === "ENOENT")
        return cb(null)
      if (er.code === "EPERM")
        return (isWindows)
          ? fixWinEPERM(p, options, er, cb)
          : rmdir(p, options, er, cb)
      if (er.code === "EISDIR")
        return rmdir(p, options, er, cb)
    }
    return cb(er)
  })
}

function fixWinEPERM (p, options, er, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')
  if (er)
    assert(er instanceof Error)

  options.chmod(p, 666, function (er2) {
    if (er2)
      cb(er2.code === "ENOENT" ? null : er)
    else
      options.stat(p, function(er3, stats) {
        if (er3)
          cb(er3.code === "ENOENT" ? null : er)
        else if (stats.isDirectory())
          rmdir(p, options, er, cb)
        else
          options.unlink(p, cb)
      })
  })
}

function fixWinEPERMSync (p, options, er) {
  assert(p)
  assert(options)
  if (er)
    assert(er instanceof Error)

  try {
    options.chmodSync(p, 666)
  } catch (er2) {
    if (er2.code === "ENOENT")
      return
    else
      throw er
  }

  try {
    var stats = options.statSync(p)
  } catch (er3) {
    if (er3.code === "ENOENT")
      return
    else
      throw er
  }

  if (stats.isDirectory())
    rmdirSync(p, options, er)
  else
    options.unlinkSync(p)
}

function rmdir (p, options, originalEr, cb) {
  assert(p)
  assert(options)
  if (originalEr)
    assert(originalEr instanceof Error)
  assert(typeof cb === 'function')

  // try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS)
  // if we guessed wrong, and it's not a directory, then
  // raise the original error.
  options.rmdir(p, function (er) {
    if (er && (er.code === "ENOTEMPTY" || er.code === "EEXIST" || er.code === "EPERM"))
      rmkids(p, options, cb)
    else if (er && er.code === "ENOTDIR")
      cb(originalEr)
    else
      cb(er)
  })
}

function rmkids(p, options, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')

  options.readdir(p, function (er, files) {
    if (er)
      return cb(er)
    var n = files.length
    if (n === 0)
      return options.rmdir(p, cb)
    var errState
    files.forEach(function (f) {
      rimraf(path.join(p, f), options, function (er) {
        if (errState)
          return
        if (er)
          return cb(errState = er)
        if (--n === 0)
          options.rmdir(p, cb)
      })
    })
  })
}

// this looks simpler, and is strictly *faster*, but will
// tie up the JavaScript thread and fail on excessively
// deep directory trees.
function rimrafSync (p, options) {
  options = options || {}
  defaults(options)

  assert(p)
  assert(options)

  try {
    options.unlinkSync(p)
  } catch (er) {
    if (er.code === "ENOENT")
      return
    if (er.code === "EPERM")
      return isWindows ? fixWinEPERMSync(p, options, er) : rmdirSync(p, options, er)
    if (er.code !== "EISDIR")
      throw er
    rmdirSync(p, options, er)
  }
}

function rmdirSync (p, options, originalEr) {
  assert(p)
  assert(options)
  if (originalEr)
    assert(originalEr instanceof Error)

  try {
    options.rmdirSync(p)
  } catch (er) {
    if (er.code === "ENOENT")
      return
    if (er.code === "ENOTDIR")
      throw originalEr
    if (er.code === "ENOTEMPTY" || er.code === "EEXIST" || er.code === "EPERM")
      rmkidsSync(p, options)
  }
}

function rmkidsSync (p, options) {
  assert(p)
  assert(options)
  options.readdirSync(p).forEach(function (f) {
    rimrafSync(path.join(p, f), options)
  })
  options.rmdirSync(p, options)
}
 at SyntaxError: Unexpected token (4:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/didi-command-preview/node_modules/didi-command-preview/index.js. Coverage (Term): 5% Coverage (LOC): 7%
*- File /root/Targets/didi-command-preview/node_modules/didi-command-preview/lib/util.js. Coverage (Term): 25% Coverage (LOC): 34%
*- File /root/Targets/didi-command-preview/node_modules/didi-component-install/main.js. Coverage (Term): 86% Coverage (LOC): 100%
*- File /root/Targets/didi-command-preview/node_modules/didi-component-install/lib/installer.js. Coverage (Term): 2% Coverage (LOC): 2%
*- File /root/Targets/didi-command-preview/node_modules/debug/node.js. Coverage (Term): 38% Coverage (LOC): 63%
*- File /root/Targets/didi-command-preview/node_modules/debug/debug.js. Coverage (Term): 37% Coverage (LOC): 44%
*- File /root/Targets/didi-command-preview/node_modules/ms/index.js. Coverage (Term): 15% Coverage (LOC): 22%
*- File /root/Targets/didi-command-preview/node_modules/semver/semver.js. Coverage (Term): 28% Coverage (LOC): 31%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
