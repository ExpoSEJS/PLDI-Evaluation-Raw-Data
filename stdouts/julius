
> julius@0.1.0 install /root/Targets/julius/node_modules/julius
> make

mkdir -p tool
cd julius-4.4.2 && CFLAGS=-fPIC CXXFLAGS=-fPIC ./configure --with-mictype=alsa --enable-shared && make
checking build system type... x86_64-unknown-linux-gnu
checking host system type... x86_64-unknown-linux-gnu
checking host specific optimization flag... skipped
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking how to run the C preprocessor... gcc -E
checking for a BSD-compatible install... /usr/bin/install -c
checking for rm... /bin/rm
configure: creating ./config.status
config.status: creating Makefile
config.status: creating mkbinhmm/Makefile
config.status: creating adinrec/Makefile
config.status: creating mkss/Makefile
config.status: creating generate-ngram/Makefile
config.status: creating jclient-perl/Makefile
config.status: creating binlm2arpa/Makefile
config.status: creating man/Makefile
=== configuring in adintool (/root/Targets/julius/node_modules/julius/julius-4.4.2/adintool)
configure: running /bin/bash ./configure --disable-option-checking '--prefix=/usr/local'  '--with-mictype=alsa' '--enable-shared' 'CFLAGS=-fPIC' --cache-file=/dev/null --srcdir=.
checking build system type... x86_64-unknown-linux-gnu
checking host system type... x86_64-unknown-linux-gnu
checking host-specific optimization flag... skipped
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking how to run the C preprocessor... gcc -E
checking for a BSD-compatible install... /usr/bin/install -c
checking for rm... /bin/rm
checking for pkg-config... /usr/bin/pkg-config
checking pkg-config is at least version 0.9.0... yes
checking for SDL... no
checking for sdl2-config... no
checking for SDL - version >= 2.0.0... no
*** The sdl2-config script installed by SDL could not be found
*** If SDL was installed in PREFIX, make sure PREFIX/bin is in
*** your path, or set the SDL2_CONFIG environment variable to the
*** full path to sdl2-config.
configure: creating ./config.status
config.status: creating Makefile
=== configuring in mkgshmm (/root/Targets/julius/node_modules/julius/julius-4.4.2/mkgshmm)
configure: running /bin/bash ./configure --disable-option-checking '--prefix=/usr/local'  '--with-mictype=alsa' '--enable-shared' 'CFLAGS=-fPIC' --cache-file=/dev/null --srcdir=.
loading cache /dev/null
checking for a BSD compatible install... /usr/bin/install -c
checking for rm... /bin/rm
checking for perl... /usr/bin/perl
checking for Cygwin environment... no
checking for mingw32 environment... no
checking for executable suffix... no
updating cache /dev/null
creating ./config.status
creating Makefile
creating mkgshmm
=== configuring in gramtools (/root/Targets/julius/node_modules/julius/julius-4.4.2/gramtools)
configure: running /bin/bash ./configure --disable-option-checking '--prefix=/usr/local'  '--with-mictype=alsa' '--enable-shared' 'CFLAGS=-fPIC' --cache-file=/dev/null --srcdir=.
checking build system type... x86_64-unknown-linux-gnu
checking host system type... x86_64-unknown-linux-gnu
checking host-specific optimization flag... skipped
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking how to run the C preprocessor... gcc -E
checking for a BSD-compatible install... /usr/bin/install -c
checking host specific optimization flag... skipped
checking for rm... /bin/rm
checking for perl... /usr/bin/perl
checking for iconv... /usr/bin/iconv
checking for Jcode module in perl... checking for a readline library... no
checking malloc.h usability... yes
checking malloc.h presence... yes
checking for malloc.h... yes
configure: creating ./config.status
config.status: creating Makefile
config.status: creating mkdfa/Makefile
config.status: creating mkdfa/mkdfa.pl
config.status: creating mkdfa/mkfa-1.44-flex/Makefile
config.status: creating dfa_minimize/Makefile
config.status: creating generate/Makefile
config.status: creating accept_check/Makefile
config.status: creating nextword/Makefile
config.status: creating yomi2voca/Makefile
config.status: creating yomi2voca/yomi2voca.pl
config.status: creating gram2sapixml/Makefile
config.status: creating gram2sapixml/gram2sapixml.pl
config.status: creating dfa_determinize/Makefile
=== configuring in jcontrol (/root/Targets/julius/node_modules/julius/julius-4.4.2/jcontrol)
configure: running /bin/bash ./configure --disable-option-checking '--prefix=/usr/local'  '--with-mictype=alsa' '--enable-shared' 'CFLAGS=-fPIC' --cache-file=/dev/null --srcdir=.
loading cache /dev/null
checking host system type... 
checking for gcc... gcc
checking whether the C compiler (gcc -fPIC ) works... yes
checking whether the C compiler (gcc -fPIC ) is a cross-compiler... no
checking whether we are using GNU C... yes
checking whether gcc accepts -g... yes
checking how to run the C preprocessor... gcc -E
checking for a BSD compatible install... /usr/bin/install -c
checking for rm... /bin/rm
checking for Cygwin environment... no
checking for mingw32 environment... no
checking for executable suffix... no
checking for gethostbyname... yes
checking for connect... yes
updating cache /dev/null
creating ./config.status
creating Makefile
=== configuring in mkbingram (/root/Targets/julius/node_modules/julius/julius-4.4.2/mkbingram)
configure: running /bin/bash ./configure --disable-option-checking '--prefix=/usr/local'  '--with-mictype=alsa' '--enable-shared' 'CFLAGS=-fPIC' --cache-file=/dev/null --srcdir=.
checking build system type... x86_64-unknown-linux-gnu
checking host system type... x86_64-unknown-linux-gnu
checking host-specific optimization flag... skipped
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking how to run the C preprocessor... gcc -E
checking for a BSD-compatible install... /usr/bin/install -c
checking for rm... /bin/rm
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for ANSI C header files... yes
checking for an ANSI C-conforming const... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking winnls.h usability... no
checking winnls.h presence... no
checking for winnls.h... no
checking for iconv... yes
checking for iconv declaration... 
         extern size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);
configure: creating ./config.status
config.status: creating Makefile
config.status: creating config.h
=== configuring in julius (/root/Targets/julius/node_modules/julius/julius-4.4.2/julius)
configure: running /bin/bash ./configure --disable-option-checking '--prefix=/usr/local'  '--with-mictype=alsa' '--enable-shared' 'CFLAGS=-fPIC' --cache-file=/dev/null --srcdir=.
checking build system type... x86_64-unknown-linux-gnu
checking host system type... x86_64-unknown-linux-gnu
checking host-specific optimization flag... skipped
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking how to run the C preprocessor... gcc -E
checking for a BSD-compatible install... /usr/bin/install -c
checking for rm... /bin/rm
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for ANSI C header files... yes
checking for an ANSI C-conforming const... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking winnls.h usability... no
checking winnls.h presence... no
checking for winnls.h... no
checking for iconv... yes
checking for iconv declaration... 
         extern size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);
checking for charset conversion... iconv
configure: creating ./config.status
config.status: creating Makefile
config.status: creating config.h
=== configuring in libjulius (/root/Targets/julius/node_modules/julius/julius-4.4.2/libjulius)
configure: running /bin/bash ./configure --disable-option-checking '--prefix=/usr/local'  '--with-mictype=alsa' '--enable-shared' 'CFLAGS=-fPIC' --cache-file=/dev/null --srcdir=.
checking build system type... x86_64-unknown-linux-gnu
checking host system type... x86_64-unknown-linux-gnu
checking host-specific optimization flag... skipped
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking how to run the C preprocessor... gcc -E
checking for a BSD-compatible install... /usr/bin/install -c
checking for rm... /bin/rm
checking for ar... /usr/bin/ar
checking for ranlib... ranlib
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for ANSI C header files... yes
checking for an ANSI C-conforming const... yes
checking return type of signal handlers... void
checking for dlopen... no
checking for dlopen in -ldl... yes
checking for POSIX thread library in -lpthread... "yes"
configure: creating ./config.status
config.status: creating Makefile
config.status: creating libjulius-config
config.status: creating libjulius-config-dist
config.status: creating julius-4.pc
config.status: creating src/version.c
config.status: creating doxygen.conf.ver
config.status: creating include/julius/config.h
config.status: executing default-1 commands
=== configuring in libsent (/root/Targets/julius/node_modules/julius/julius-4.4.2/libsent)
configure: running /bin/bash ./configure --disable-option-checking '--prefix=/usr/local'  '--with-mictype=alsa' '--enable-shared' 'CFLAGS=-fPIC' --cache-file=/dev/null --srcdir=.
checking build system type... x86_64-unknown-linux-gnu
checking host system type... x86_64-unknown-linux-gnu
checking host specific optimization flag... skipped
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking how to run the C preprocessor... gcc -E
checking for SIMD FMA instruction... no
checking for SIMD FMA instruction with -mfma... yes
checking for SIMD AVX instruction... no
checking for SIMD AVX instruction with -mavx... yes
checking for SIMD SSE instruction... yes
checking for a BSD-compatible install... /usr/bin/install -c
checking for rm... /bin/rm
checking for ar... /usr/bin/ar
checking for ranlib... ranlib
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking for unistd.h... (cached) yes
checking whether byte ordering is bigendian... no
checking for an ANSI C-conforming const... yes
checking for socklen_t... yes
checking for gethostbyname... no
checking for gethostbyname in -lnsl... yes
checking for connect... yes
checking for strcasecmp... yes
checking for sleep... yes
checking alsa/asoundlib.h usability... no
checking alsa/asoundlib.h presence... no
checking for alsa/asoundlib.h... no
checking sys/asoundlib.h usability... no
checking sys/asoundlib.h presence... no
checking for sys/asoundlib.h... no
checking sys/soundcard.h usability... yes
checking sys/soundcard.h presence... yes
checking for sys/soundcard.h... yes
checking esd.h usability... no
checking esd.h presence... no
checking for esd.h... no
checking for pa_simple_new in -lpulse-simple... no
Makefile:20: recipe for target 'all' failed
