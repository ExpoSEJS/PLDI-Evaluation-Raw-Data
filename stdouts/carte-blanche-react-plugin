/root/Targets/carte-blanche-react-plugin
├── UNMET PEER DEPENDENCY carte-blanche@^0.3.0
├─┬ carte-blanche-react-plugin@0.3.0 
│ ├─┬ axios@0.12.0 
│ │ └─┬ follow-redirects@0.0.7 
│ │   └── stream-consume@0.1.0 
│ ├─┬ body-parser@1.18.2 
│ │ ├── bytes@3.0.0 
│ │ ├── content-type@1.0.4 
│ │ ├─┬ debug@2.6.9 
│ │ │ └── ms@2.0.0 
│ │ ├── depd@1.1.1 
│ │ ├─┬ http-errors@1.6.2 
│ │ │ └── setprototypeof@1.0.3 
│ │ ├── iconv-lite@0.4.19 
│ │ ├─┬ on-finished@2.3.0 
│ │ │ └── ee-first@1.1.1 
│ │ ├── qs@6.5.1 
│ │ ├─┬ raw-body@2.3.2 
│ │ │ └── unpipe@1.0.0 
│ │ └─┬ type-is@1.6.15 
│ │   ├── media-typer@0.3.0 
│ │   └─┬ mime-types@2.1.17 
│ │     └── mime-db@1.30.0 
│ ├── carte-blanche-utils@0.0.1 
│ ├─┬ chokidar@1.7.0 
│ │ ├─┬ anymatch@1.3.2 
│ │ │ ├─┬ micromatch@2.3.11 
│ │ │ │ ├─┬ arr-diff@2.0.0 
│ │ │ │ │ └── arr-flatten@1.1.0 
│ │ │ │ ├── array-unique@0.2.1 
│ │ │ │ ├─┬ braces@1.8.5 
│ │ │ │ │ ├─┬ expand-range@1.8.2 
│ │ │ │ │ │ └─┬ fill-range@2.2.3 
│ │ │ │ │ │   ├── is-number@2.1.0 
│ │ │ │ │ │   ├── isobject@2.1.0 
│ │ │ │ │ │   ├─┬ randomatic@1.1.7 
│ │ │ │ │ │   │ ├─┬ is-number@3.0.0 
│ │ │ │ │ │   │ │ └── kind-of@3.2.2 
│ │ │ │ │ │   │ └── kind-of@4.0.0 
│ │ │ │ │ │   └── repeat-string@1.6.1 
│ │ │ │ │ ├── preserve@0.2.0 
│ │ │ │ │ └── repeat-element@1.1.2 
│ │ │ │ ├─┬ expand-brackets@0.1.5 
│ │ │ │ │ └── is-posix-bracket@0.1.1 
│ │ │ │ ├── extglob@0.3.2 
│ │ │ │ ├── filename-regex@2.0.1 
│ │ │ │ ├─┬ kind-of@3.2.2 
│ │ │ │ │ └── is-buffer@1.1.5 
│ │ │ │ ├─┬ object.omit@2.0.1 
│ │ │ │ │ ├─┬ for-own@0.1.5 
│ │ │ │ │ │ └── for-in@1.0.2 
│ │ │ │ │ └── is-extendable@0.1.1 
│ │ │ │ ├─┬ parse-glob@3.0.4 
│ │ │ │ │ ├── glob-base@0.3.0 
│ │ │ │ │ └── is-dotfile@1.0.3 
│ │ │ │ └─┬ regex-cache@0.4.4 
│ │ │ │   └─┬ is-equal-shallow@0.1.3 
│ │ │ │     └── is-primitive@2.0.0 
│ │ │ └─┬ normalize-path@2.1.1 
│ │ │   └── remove-trailing-separator@1.1.0 
│ │ ├── async-each@1.0.1 
│ │ ├── glob-parent@2.0.0 
│ │ ├── inherits@2.0.3 
│ │ ├─┬ is-binary-path@1.0.1 
│ │ │ └── binary-extensions@1.10.0 
│ │ ├─┬ is-glob@2.0.1 
│ │ │ └── is-extglob@1.0.0 
│ │ ├── path-is-absolute@1.0.1 
│ │ └─┬ readdirp@2.1.0 
│ │   ├─┬ minimatch@3.0.4 
│ │   │ └─┬ brace-expansion@1.1.8 
│ │   │   ├── balanced-match@1.0.0 
│ │   │   └── concat-map@0.0.1 
│ │   ├─┬ readable-stream@2.3.3 
│ │   │ ├── core-util-is@1.0.2 
│ │   │ ├── process-nextick-args@1.0.7 
│ │   │ ├── string_decoder@1.0.3 
│ │   │ └── util-deprecate@1.0.2 
│ │   └── set-immediate-shim@1.0.1 
│ ├─┬ cors@2.8.4 
│ │ ├── object-assign@4.1.1 
│ │ └── vary@1.1.2 
│ ├─┬ express@4.16.1 
│ │ ├─┬ accepts@1.3.4 
│ │ │ └── negotiator@0.6.1 
│ │ ├── array-flatten@1.1.1 
│ │ ├── content-disposition@0.5.2 
│ │ ├── cookie@0.3.1 
│ │ ├── cookie-signature@1.0.6 
│ │ ├── encodeurl@1.0.1 
│ │ ├── escape-html@1.0.3 
│ │ ├── etag@1.8.1 
│ │ ├── finalhandler@1.1.0 
│ │ ├── fresh@0.5.2 
│ │ ├── merge-descriptors@1.0.1 
│ │ ├── methods@1.1.2 
│ │ ├── parseurl@1.3.2 
│ │ ├── path-to-regexp@0.1.7 
│ │ ├─┬ proxy-addr@2.0.2 
│ │ │ ├── forwarded@0.1.2 
│ │ │ └── ipaddr.js@1.5.2 
│ │ ├── range-parser@1.2.0 
│ │ ├── safe-buffer@5.1.1 
│ │ ├─┬ send@0.16.1 
│ │ │ ├── destroy@1.0.4 
│ │ │ └── mime@1.4.1 
│ │ ├── serve-static@1.13.1 
│ │ ├── setprototypeof@1.1.0 
│ │ ├── statuses@1.3.1 
│ │ └── utils-merge@1.0.1 
│ ├── faker@3.1.0 
│ ├── lodash@4.17.4 
│ ├─┬ mkdirp@0.5.1 
│ │ └── minimist@0.0.8 
│ ├─┬ path@0.12.7 
│ │ ├── process@0.11.10 
│ │ └─┬ util@0.10.3 
│ │   └── inherits@2.0.1 
│ ├─┬ react@15.6.2 
│ │ ├── create-react-class@15.6.2 
│ │ ├─┬ fbjs@0.8.16 
│ │ │ ├── core-js@1.2.7 
│ │ │ ├─┬ isomorphic-fetch@2.2.1 
│ │ │ │ ├─┬ node-fetch@1.7.3 
│ │ │ │ │ ├── encoding@0.1.12 
│ │ │ │ │ └── is-stream@1.1.0 
│ │ │ │ └── whatwg-fetch@2.0.3 
│ │ │ ├─┬ promise@7.3.1 
│ │ │ │ └── asap@2.0.6 
│ │ │ ├── setimmediate@1.0.5 
│ │ │ └── ua-parser-js@0.7.14 
│ │ ├─┬ loose-envify@1.3.1 
│ │ │ └── js-tokens@3.0.2 
│ │ └── prop-types@15.6.0 
│ ├── react-addons-create-fragment@15.6.2 
│ ├─┬ react-docgen@2.18.0 
│ │ ├── async@2.5.0 
│ │ ├─┬ babel-runtime@6.26.0 
│ │ │ ├── core-js@2.5.1 
│ │ │ └── regenerator-runtime@0.11.0 
│ │ ├── babylon@5.8.38 
│ │ ├── commander@2.11.0 
│ │ ├─┬ doctrine@2.0.0 
│ │ │ ├── esutils@2.0.2 
│ │ │ └── isarray@1.0.0 
│ │ ├── node-dir@0.1.17 
│ │ └─┬ recast@0.12.6 
│ │   ├── ast-types@0.9.11 
│ │   ├── core-js@2.5.1 
│ │   ├── esprima@4.0.0 
│ │   ├── private@0.1.7 
│ │   └── source-map@0.5.7 
│ ├── react-dom@15.6.2 
│ ├── react-frame-component@0.6.6 
│ ├─┬ read-multiple-files@1.1.1 
│ │ ├── graceful-fs@4.1.11 
│ │ ├── run-parallel@1.1.6 
│ │ └─┬ strip-bom@2.0.0 
│ │   └── is-utf8@0.2.1 
│ ├─┬ socket.io@1.7.4 
│ │ ├─┬ debug@2.3.3 
│ │ │ └── ms@0.7.2 
│ │ ├─┬ engine.io@1.8.4 
│ │ │ ├── accepts@1.3.3 
│ │ │ ├── base64id@1.0.0 
│ │ │ ├─┬ debug@2.3.3 
│ │ │ │ └── ms@0.7.2 
│ │ │ ├─┬ engine.io-parser@1.3.2 
│ │ │ │ ├── after@0.8.2 
│ │ │ │ ├── arraybuffer.slice@0.0.6 
│ │ │ │ ├── base64-arraybuffer@0.1.5 
│ │ │ │ ├── blob@0.0.4 
│ │ │ │ └── wtf-8@1.0.0 
│ │ │ └─┬ ws@1.1.4 
│ │ │   ├── options@0.0.6 
│ │ │   └── ultron@1.0.2 
│ │ ├─┬ has-binary@0.1.7 
│ │ │ └── isarray@0.0.1 
│ │ ├── object-assign@4.1.0 
│ │ ├─┬ socket.io-adapter@0.5.0 
│ │ │ └─┬ debug@2.3.3 
│ │ │   └── ms@0.7.2 
│ │ └─┬ socket.io-parser@2.3.1 
│ │   ├── component-emitter@1.1.2 
│ │   ├─┬ debug@2.2.0 
│ │   │ └── ms@0.7.1 
│ │   ├── isarray@0.0.1 
│ │   └── json3@3.3.2 
│ ├─┬ socket.io-client@1.7.4 
│ │ ├── backo2@1.0.2 
│ │ ├── component-bind@1.0.0 
│ │ ├── component-emitter@1.2.1 
│ │ ├─┬ debug@2.3.3 
│ │ │ └── ms@0.7.2 
│ │ ├─┬ engine.io-client@1.8.4 
│ │ │ ├── component-emitter@1.2.1 
│ │ │ ├── component-inherit@0.0.3 
│ │ │ ├─┬ debug@2.3.3 
│ │ │ │ └── ms@0.7.2 
│ │ │ ├── has-cors@1.1.0 
│ │ │ ├── parsejson@0.0.3 
│ │ │ ├── parseqs@0.0.5 
│ │ │ ├── ws@1.1.2 
│ │ │ ├── xmlhttprequest-ssl@1.5.3 
│ │ │ └── yeast@0.1.2 
│ │ ├── indexof@0.0.1 
│ │ ├── object-component@0.0.3 
│ │ ├─┬ parseuri@0.0.5 
│ │ │ └─┬ better-assert@1.0.2 
│ │ │   └── callsite@1.0.0 
│ │ └── to-array@0.1.4 
│ ├── speakingurl@9.0.0 
│ └─┬ velocity-react@1.3.3 
│   ├── lodash@3.10.1 
│   ├─┬ react-transition-group@1.2.1 
│   │ ├── chain-function@1.0.0 
│   │ ├── dom-helpers@3.2.1 
│   │ └── warning@3.0.0 
│   └── velocity-animate@1.5.0 
└── UNMET PEER DEPENDENCY webpack@>=1 <3

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/carte-blanche-react-plugin/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 42% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","call","defineProperties","Date","create","join","every","apply","lastIndexOf"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0825 took 29.5151s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (1:82) on program var assert = require("assert");
var types = require("./types");
var n = types.namedTypes;
var b = types.builders;
var isObject = types.builtInTypes.object;
var isArray = types.builtInTypes.array;
var isFunction = types.builtInTypes.function;
var Patcher = require("./patcher").Patcher;
var normalizeOptions = require("./options").normalize;
var fromString = require("./lines").fromString;
var attachComments = require("./comments").attach;
var util = require("./util");
var Map = global.Map || require("core-js/es6/map");

exports.parse = function parse(source, options) {
  options = normalizeOptions(options);

  var lines = fromString(source, options);

  var sourceWithoutTabs = lines.toString({
    tabWidth: options.tabWidth,
    reuseWhitespace: false,
    useTabs: false
  });

  var comments = [];
  var program = options.parser.parse(sourceWithoutTabs, {
    jsx: true,
    loc: true,
    locations: true,
    range: options.range,
    comment: true,
    onComment: comments,
    tolerant: options.tolerant,
    ecmaVersion: 6,
    sourceType: 'module'
  });

  // If the source was empty, some parsers give loc.{start,end}.line
  // values of 0, instead of the minimum of 1.
  util.fixFaultyLocations(program, lines);

  program.loc = program.loc || {
    start: lines.firstPos(),
    end: lines.lastPos()
  };

  program.loc.lines = lines;
  program.loc.indent = 0;

  // Expand the Program node's .loc to include all comments, since
  // typically its .loc.start and .loc.end will coincide with those of the
  // first and last statements, respectively, excluding any comments that
  // fall outside that region.
  var trueProgramLoc = util.getTrueLoc(program, lines);
  program.loc.start = trueProgramLoc.start;
  program.loc.end = trueProgramLoc.end;

  if (program.comments) {
    comments = program.comments;
    delete program.comments;
  }

  // In order to ensure we reprint leading and trailing program comments,
  // wrap the original Program node with a File node.
  var file = program;
  if (file.type === "Program") {
    var file = b.file(program, options.sourceFileName || null);
    file.loc = {
      lines: lines,
      indent: 0,
      start: lines.firstPos(),
      end: lines.lastPos()
    };
  } else if (file.type === "File") {
    program = file.program;
  }

  // Passing file.program here instead of just file means that initial
  // comments will be attached to program.body[0] instead of program.
  attachComments(
    comments,
    program.body.length ? file.program : file,
    lines
  );

  // Return a copy of the original AST so that any changes made may be
  // compared to the original.
  return new TreeCopier(lines).copy(file);
};

function TreeCopier(lines) {
  assert.ok(this instanceof TreeCopier);
  this.lines = lines;
  this.indent = 0;
  this.seen = new Map;
}

var TCp = TreeCopier.prototype;

TCp.copy = function(node) {
  if (this.seen.has(node)) {
    return this.seen.get(node);
  }

  if (isArray.check(node)) {
    var copy = new Array(node.length);
    this.seen.set(node, copy);
    node.forEach(function (item, i) {
      copy[i] = this.copy(item);
    }, this);
    return copy;
  }

  if (!isObject.check(node)) {
    return node;
  }

  util.fixFaultyLocations(node, this.lines);

  var copy = Object.create(Object.getPrototypeOf(node), {
    original: { // Provide a link from the copy to the original.
      value: node,
      configurable: false,
      enumerable: false,
      writable: true
    }
  });

  this.seen.set(node, copy);

  var loc = node.loc;
  var oldIndent = this.indent;
  var newIndent = oldIndent;

  if (loc) {
    // When node is a comment, we set node.loc.indent to
    // node.loc.start.column so that, when/if we print the comment by
    // itself, we can strip that much whitespace from the left margin of
    // the comment. This only really matters for multiline Block comments,
    // but it doesn't hurt for Line comments.
    if (node.type === "Block" || node.type === "Line" ||
        node.type === "CommentBlock" || node.type === "CommentLine" ||
        this.lines.isPrecededOnlyByWhitespace(loc.start)) {
      newIndent = this.indent = loc.start.column;
    }

    loc.lines = this.lines;
    loc.indent = newIndent;
  }

  var keys = Object.keys(node);
  var keyCount = keys.length;
  for (var i = 0; i < keyCount; ++i) {
    var key = keys[i];
    if (key === "loc") {
      copy[key] = node[key];
    } else if (key === "tokens" &&
               node.type === "File") {
      // Preserve file.tokens (uncopied) in case client code cares about
      // it, even though Recast ignores it when reprinting.
      copy[key] = node[key];
    } else {
      copy[key] = this.copy(node[key]);
    }
  }

  this.indent = oldIndent;

  return copy;
};
 at SyntaxError: Unexpected token (1:82)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/carte-blanche-react-plugin/dist/plugin.js. Coverage (Term): 10% Coverage (LOC): 12%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/react-docgen/dist/main.js. Coverage (Term): 22% Coverage (LOC): 19%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/react-docgen/dist/handlers/index.js. Coverage (Term): 12% Coverage (LOC): 9%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/react-docgen/dist/handlers/componentDocblockHandler.js. Coverage (Term): 16% Coverage (LOC): 22%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/recast/main.js. Coverage (Term): 17% Coverage (LOC): 24%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/recast/lib/types.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/ast-types/main.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/ast-types/fork.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/ast-types/def/core.js. Coverage (Term): 92% Coverage (LOC): 79%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/ast-types/def/es6.js. Coverage (Term): 100% Coverage (LOC): 100%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/ast-types/def/es7.js. Coverage (Term): 99% Coverage (LOC): 100%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/ast-types/def/mozilla.js. Coverage (Term): 99% Coverage (LOC): 100%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/ast-types/def/e4x.js. Coverage (Term): 99% Coverage (LOC): 100%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/ast-types/def/jsx.js. Coverage (Term): 93% Coverage (LOC): 90%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/ast-types/def/flow.js. Coverage (Term): 100% Coverage (LOC): 100%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/ast-types/def/esprima.js. Coverage (Term): 97% Coverage (LOC): 96%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/ast-types/def/babel.js. Coverage (Term): 100% Coverage (LOC): 100%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/ast-types/def/babel6.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/ast-types/lib/types.js. Coverage (Term): 53% Coverage (LOC): 62%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/ast-types/lib/shared.js. Coverage (Term): 57% Coverage (LOC): 73%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/ast-types/def/babel6-core.js. Coverage (Term): 98% Coverage (LOC): 97%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/ast-types/lib/equiv.js. Coverage (Term): 14% Coverage (LOC): 15%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/ast-types/lib/path.js. Coverage (Term): 10% Coverage (LOC): 17%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/ast-types/lib/node-path.js. Coverage (Term): 15% Coverage (LOC): 26%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/ast-types/lib/scope.js. Coverage (Term): 13% Coverage (LOC): 22%
*- File /root/Targets/carte-blanche-react-plugin/node_modules/ast-types/lib/path-visitor.js. Coverage (Term): 13% Coverage (LOC): 20%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
