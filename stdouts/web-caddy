
> node-sass@3.13.1 install /root/Targets/web-caddy/node_modules/node-sass
> node scripts/install.js

Downloading binary from https://github.com/sass/node-sass/releases/download/v3.13.1/linux-x64-51_binding.node
Download complete
Binary saved to /root/Targets/web-caddy/node_modules/node-sass/vendor/linux-x64-51/binding.node
Caching binary to /root/Targets/web-caddy/false/node-sass/3.13.1/linux-x64-51_binding.node

> phantomjs@1.9.20 install /root/Targets/web-caddy/node_modules/phantomjs
> node install.js

PhantomJS not found on PATH
Downloading https://github.com/Medium/phantomjs/releases/download/v1.9.19/phantomjs-1.9.8-linux-x86_64.tar.bz2
Saving to /root/Targets/web-caddy/node_modules/phantomjs/phantomjs/phantomjs-1.9.8-linux-x86_64.tar.bz2
Receiving...

Received 12854K total.
Extracting tar contents (via spawned process)
Removing /root/Targets/web-caddy/node_modules/phantomjs/lib/phantom
Copying extracted folder /root/Targets/web-caddy/node_modules/phantomjs/phantomjs/phantomjs-1.9.8-linux-x86_64.tar.bz2-extract-1506545542209/phantomjs-1.9.8-linux-x86_64 -> /root/Targets/web-caddy/node_modules/phantomjs/lib/phantom
Writing location.js file
Done. Phantomjs binary available at /root/Targets/web-caddy/node_modules/phantomjs/lib/phantom/bin/phantomjs

> node-sass@3.13.1 postinstall /root/Targets/web-caddy/node_modules/node-sass
> node scripts/build.js

Binary found at /root/Targets/web-caddy/node_modules/node-sass/vendor/linux-x64-51/binding.node
Testing binary
Binary is fine
/root/Targets/web-caddy
└─┬ web-caddy@2.1.1 
  ├─┬ autoprefixer-core@5.2.1 
  │ ├── browserslist@0.4.0 
  │ ├── caniuse-db@1.0.30000738 
  │ └── num2fraction@1.2.2 
  ├─┬ aws-sdk@2.123.0 
  │ ├─┬ buffer@4.9.1 
  │ │ ├── base64-js@1.2.1 
  │ │ ├── ieee754@1.1.8 
  │ │ └── isarray@1.0.0 
  │ ├── crypto-browserify@1.0.9 
  │ ├── events@1.1.1 
  │ ├── jmespath@0.15.0 
  │ ├── querystring@0.2.0 
  │ ├── sax@1.2.1 
  │ ├── url@0.10.3 
  │ ├── uuid@3.0.1 
  │ ├── xml2js@0.4.17 
  │ └─┬ xmlbuilder@4.2.1 
  │   └── lodash@4.17.4 
  ├── bower@1.8.2 
  ├─┬ browser-sync@2.18.13 
  │ ├─┬ browser-sync-client@2.5.1 
  │ │ ├── etag@1.8.1 
  │ │ └── fresh@0.3.0 
  │ ├─┬ browser-sync-ui@0.6.3 
  │ │ ├── async-each-series@0.1.1 
  │ │ ├── connect-history-api-fallback@1.3.0 
  │ │ ├─┬ stream-throttle@0.1.3 
  │ │ │ ├── commander@2.11.0 
  │ │ │ └── limiter@1.1.2 
  │ │ └─┬ weinre@2.0.0-pre-I0Z7U9OV 
  │ │   ├─┬ express@2.5.11 
  │ │   │ ├─┬ connect@1.9.2 
  │ │   │ │ └── formidable@1.0.17 
  │ │   │ ├── mime@1.2.4 
  │ │   │ └── qs@0.4.2 
  │ │   └── underscore@1.7.0 
  │ ├── bs-recipes@1.3.4 
  │ ├─┬ chokidar@1.7.0 
  │ │ ├── async-each@1.0.1 
  │ │ ├── glob-parent@2.0.0 
  │ │ ├─┬ is-binary-path@1.0.1 
  │ │ │ └── binary-extensions@1.10.0 
  │ │ ├── is-glob@2.0.1 
  │ │ ├── path-is-absolute@1.0.1 
  │ │ └── readdirp@2.1.0 
  │ ├─┬ connect@3.5.0 
  │ │ ├─┬ debug@2.2.0 
  │ │ │ └── ms@0.7.1 
  │ │ ├─┬ finalhandler@0.5.0 
  │ │ │ ├─┬ on-finished@2.3.0 
  │ │ │ │ └── ee-first@1.1.1 
  │ │ │ ├── statuses@1.3.1 
  │ │ │ └── unpipe@1.0.0 
  │ │ ├── parseurl@1.3.2 
  │ │ └── utils-merge@1.0.0 
  │ ├── dev-ip@1.0.1 
  │ ├─┬ easy-extender@2.3.2 
  │ │ └── lodash@3.10.1 
  │ ├─┬ eazy-logger@3.0.2 
  │ │ └─┬ tfunk@3.1.0 
  │ │   └── object-path@0.9.2 
  │ ├── emitter-steward@1.0.0 
  │ ├─┬ fs-extra@3.0.1 
  │ │ ├── jsonfile@3.0.1 
  │ │ └── universalify@0.1.1 
  │ ├─┬ http-proxy@1.15.2 
  │ │ ├── eventemitter3@1.2.0 
  │ │ └── requires-port@1.0.0 
  │ ├── immutable@3.8.1 
  │ ├─┬ localtunnel@1.8.3 
  │ │ ├─┬ debug@2.6.8 
  │ │ │ └── ms@2.0.0 
  │ │ ├── openurl@1.1.1 
  │ │ └─┬ yargs@3.29.0 
  │ │   └── window-size@0.1.4 
  │ ├─┬ micromatch@2.3.11 
  │ │ ├─┬ arr-diff@2.0.0 
  │ │ │ └── arr-flatten@1.1.0 
  │ │ ├── array-unique@0.2.1 
  │ │ ├─┬ braces@1.8.5 
  │ │ │ ├─┬ expand-range@1.8.2 
  │ │ │ │ └─┬ fill-range@2.2.3 
  │ │ │ │   ├── is-number@2.1.0 
  │ │ │ │   ├── isobject@2.1.0 
  │ │ │ │   ├─┬ randomatic@1.1.7 
  │ │ │ │   │ ├─┬ is-number@3.0.0 
  │ │ │ │   │ │ └── kind-of@3.2.2 
  │ │ │ │   │ └── kind-of@4.0.0 
  │ │ │ │   └── repeat-string@1.6.1 
  │ │ │ ├── preserve@0.2.0 
  │ │ │ └── repeat-element@1.1.2 
  │ │ ├─┬ expand-brackets@0.1.5 
  │ │ │ └── is-posix-bracket@0.1.1 
  │ │ ├── extglob@0.3.2 
  │ │ ├── filename-regex@2.0.1 
  │ │ ├── is-extglob@1.0.0 
  │ │ ├── kind-of@3.2.2 
  │ │ ├─┬ normalize-path@2.1.1 
  │ │ │ └── remove-trailing-separator@1.1.0 
  │ │ ├─┬ object.omit@2.0.1 
  │ │ │ ├─┬ for-own@0.1.5 
  │ │ │ │ └── for-in@1.0.2 
  │ │ │ └── is-extendable@0.1.1 
  │ │ ├─┬ parse-glob@3.0.4 
  │ │ │ ├── glob-base@0.3.0 
  │ │ │ └── is-dotfile@1.0.3 
  │ │ └─┬ regex-cache@0.4.4 
  │ │   └─┬ is-equal-shallow@0.1.3 
  │ │     └── is-primitive@2.0.0 
  │ ├─┬ opn@4.0.2 
  │ │ └─┬ pinkie-promise@2.0.1 
  │ │   └── pinkie@2.0.4 
  │ ├─┬ portscanner@2.1.1 
  │ │ ├── async@1.5.2 
  │ │ └─┬ is-number-like@1.0.8 
  │ │   └── lodash.isfinite@3.3.2 
  │ ├── qs@6.2.1 
  │ ├── resp-modifier@6.0.2 
  │ ├── rx@4.1.0 
  │ ├─┬ serve-index@1.8.0 
  │ │ ├─┬ accepts@1.3.4 
  │ │ │ └── negotiator@0.6.1 
  │ │ ├── batch@0.5.3 
  │ │ ├── escape-html@1.0.3 
  │ │ ├─┬ http-errors@1.5.1 
  │ │ │ └── setprototypeof@1.0.2 
  │ │ └─┬ mime-types@2.1.17 
  │ │   └── mime-db@1.30.0 
  │ ├─┬ serve-static@1.12.2 
  │ │ ├── encodeurl@1.0.1 
  │ │ └─┬ send@0.15.2 
  │ │   ├─┬ debug@2.6.4 
  │ │   │ └── ms@0.7.3 
  │ │   ├── depd@1.1.1 
  │ │   ├── destroy@1.0.4 
  │ │   ├── fresh@0.5.0 
  │ │   ├─┬ http-errors@1.6.2 
  │ │   │ └── setprototypeof@1.0.3 
  │ │   ├── mime@1.3.4 
  │ │   ├── ms@1.0.0 
  │ │   └── range-parser@1.2.0 
  │ ├── server-destroy@1.0.1 
  │ ├─┬ socket.io@1.6.0 
  │ │ ├─┬ debug@2.3.3 
  │ │ │ └── ms@0.7.2 
  │ │ ├─┬ engine.io@1.8.0 
  │ │ │ ├── accepts@1.3.3 
  │ │ │ ├── base64id@0.1.0 
  │ │ │ ├── cookie@0.3.1 
  │ │ │ ├─┬ debug@2.3.3 
  │ │ │ │ └── ms@0.7.2 
  │ │ │ ├─┬ engine.io-parser@1.3.1 
  │ │ │ │ ├── after@0.8.1 
  │ │ │ │ ├── arraybuffer.slice@0.0.6 
  │ │ │ │ ├── base64-arraybuffer@0.1.5 
  │ │ │ │ ├── blob@0.0.4 
  │ │ │ │ ├─┬ has-binary@0.1.6 
  │ │ │ │ │ └── isarray@0.0.1 
  │ │ │ │ └── wtf-8@1.0.0 
  │ │ │ └─┬ ws@1.1.1 
  │ │ │   ├── options@0.0.6 
  │ │ │   └── ultron@1.0.2 
  │ │ ├─┬ has-binary@0.1.7 
  │ │ │ └── isarray@0.0.1 
  │ │ ├── object-assign@4.1.0 
  │ │ ├─┬ socket.io-adapter@0.5.0 
  │ │ │ └─┬ debug@2.3.3 
  │ │ │   └── ms@0.7.2 
  │ │ └─┬ socket.io-parser@2.3.1 
  │ │   ├── component-emitter@1.1.2 
  │ │   ├── isarray@0.0.1 
  │ │   └── json3@3.3.2 
  │ ├─┬ socket.io-client@1.6.0 
  │ │ ├── backo2@1.0.2 
  │ │ ├── component-bind@1.0.0 
  │ │ ├── component-emitter@1.2.1 
  │ │ ├─┬ debug@2.3.3 
  │ │ │ └── ms@0.7.2 
  │ │ ├─┬ engine.io-client@1.8.0 
  │ │ │ ├── component-emitter@1.2.1 
  │ │ │ ├── component-inherit@0.0.3 
  │ │ │ ├─┬ debug@2.3.3 
  │ │ │ │ └── ms@0.7.2 
  │ │ │ ├── has-cors@1.1.0 
  │ │ │ ├── parsejson@0.0.3 
  │ │ │ ├── parseqs@0.0.5 
  │ │ │ ├── xmlhttprequest-ssl@1.5.3 
  │ │ │ └── yeast@0.1.2 
  │ │ ├── indexof@0.0.1 
  │ │ ├── object-component@0.0.3 
  │ │ ├─┬ parseuri@0.0.5 
  │ │ │ └─┬ better-assert@1.0.2 
  │ │ │   └── callsite@1.0.0 
  │ │ └── to-array@0.1.4 
  │ ├── ua-parser-js@0.7.12 
  │ └─┬ yargs@6.4.0 
  │   ├── camelcase@3.0.0 
  │   ├─┬ cliui@3.2.0 
  │   │ └── wrap-ansi@2.1.0 
  │   ├── decamelize@1.2.0 
  │   ├── get-caller-file@1.0.2 
  │   ├─┬ os-locale@1.4.0 
  │   │ └─┬ lcid@1.0.0 
  │   │   └── invert-kv@1.0.0 
  │   ├─┬ read-pkg-up@1.0.1 
  │   │ ├─┬ find-up@1.1.2 
  │   │ │ └── path-exists@2.1.0 
  │   │ └─┬ read-pkg@1.1.0 
  │   │   ├─┬ load-json-file@1.1.0 
  │   │   │ ├─┬ parse-json@2.2.0 
  │   │   │ │ └─┬ error-ex@1.3.1 
  │   │   │ │   └── is-arrayish@0.2.1 
  │   │   │ └─┬ strip-bom@2.0.0 
  │   │   │   └── is-utf8@0.2.1 
  │   │   └── path-type@1.1.0 
  │   ├── require-directory@2.1.1 
  │   ├── require-main-filename@1.0.1 
  │   ├── set-blocking@2.0.0 
  │   ├─┬ string-width@1.0.2 
  │   │ ├── code-point-at@1.1.0 
  │   │ └─┬ is-fullwidth-code-point@1.0.0 
  │   │   └── number-is-nan@1.0.1 
  │   ├── which-module@1.0.0 
  │   ├── window-size@0.2.0 
  │   ├── y18n@3.2.1 
  │   └─┬ yargs-parser@4.2.1 
  │     └── camelcase@3.0.0 
  ├─┬ browserify@11.2.0 
  │ ├── assert@1.3.0 
  │ ├─┬ browser-pack@5.0.1 
  │ │ ├─┬ combine-source-map@0.6.1 
  │ │ │ ├── convert-source-map@1.1.3 
  │ │ │ ├── inline-source-map@0.5.0 
  │ │ │ └── lodash.memoize@3.0.4 
  │ │ └── umd@3.0.1 
  │ ├─┬ browser-resolve@1.11.2 
  │ │ └── resolve@1.1.7 
  │ ├─┬ browserify-zlib@0.1.4 
  │ │ └── pako@0.2.9 
  │ ├─┬ buffer@3.6.0 
  │ │ ├── base64-js@0.0.8 
  │ │ └── isarray@1.0.0 
  │ ├── builtins@0.0.7 
  │ ├── commondir@0.0.1 
  │ ├─┬ concat-stream@1.4.10 
  │ │ ├─┬ readable-stream@1.1.14 
  │ │ │ ├── isarray@0.0.1 
  │ │ │ └── string_decoder@0.10.31 
  │ │ └── typedarray@0.0.6 
  │ ├─┬ console-browserify@1.1.0 
  │ │ └── date-now@0.1.4 
  │ ├── constants-browserify@0.0.1 
  │ ├─┬ crypto-browserify@3.11.1 
  │ │ ├─┬ browserify-cipher@1.0.0 
  │ │ │ ├─┬ browserify-aes@1.0.8 
  │ │ │ │ └── buffer-xor@1.0.3 
  │ │ │ ├─┬ browserify-des@1.0.0 
  │ │ │ │ └── des.js@1.0.0 
  │ │ │ └─┬ evp_bytestokey@1.0.3 
  │ │ │   └─┬ md5.js@1.3.4 
  │ │ │     └── hash-base@3.0.4 
  │ │ ├─┬ browserify-sign@4.0.4 
  │ │ │ ├── bn.js@4.11.8 
  │ │ │ ├── browserify-rsa@4.0.1 
  │ │ │ ├─┬ elliptic@6.4.0 
  │ │ │ │ ├── brorand@1.1.0 
  │ │ │ │ ├── hash.js@1.1.3 
  │ │ │ │ ├── hmac-drbg@1.0.1 
  │ │ │ │ ├── minimalistic-assert@1.0.0 
  │ │ │ │ └── minimalistic-crypto-utils@1.0.1 
  │ │ │ └─┬ parse-asn1@5.1.0 
  │ │ │   └── asn1.js@4.9.1 
  │ │ ├── create-ecdh@4.0.0 
  │ │ ├─┬ create-hash@1.1.3 
  │ │ │ ├── cipher-base@1.0.4 
  │ │ │ └─┬ ripemd160@2.0.1 
  │ │ │   └── hash-base@2.0.2 
  │ │ ├── create-hmac@1.1.6 
  │ │ ├─┬ diffie-hellman@5.0.2 
  │ │ │ └── miller-rabin@4.0.0 
  │ │ ├── pbkdf2@3.0.14 
  │ │ ├── public-encrypt@4.0.0 
  │ │ └── randombytes@2.0.5 
  │ ├── defined@1.0.0 
  │ ├── deps-sort@1.3.9 
  │ ├── domain-browser@1.1.7 
  │ ├─┬ duplexer2@0.0.2 
  │ │ └─┬ readable-stream@1.1.14 
  │ │   ├── isarray@0.0.1 
  │ │   └── string_decoder@0.10.31 
  │ ├── events@1.0.2 
  │ ├─┬ glob@4.5.3 
  │ │ ├─┬ inflight@1.0.6 
  │ │ │ └── wrappy@1.0.2 
  │ │ ├── minimatch@2.0.10 
  │ │ └── once@1.4.0 
  │ ├─┬ has@1.0.1 
  │ │ └── function-bind@1.1.1 
  │ ├── htmlescape@1.1.1 
  │ ├── https-browserify@0.0.1 
  │ ├── inherits@2.0.3 
  │ ├─┬ insert-module-globals@6.6.3 
  │ │ ├── is-buffer@1.1.5 
  │ │ └─┬ lexical-scope@1.2.0 
  │ │   └── astw@2.2.0 
  │ ├── isarray@0.0.1 
  │ ├─┬ JSONStream@1.3.1 
  │ │ ├── jsonparse@1.3.1 
  │ │ └── through@2.3.8 
  │ ├─┬ labeled-stream-splicer@1.0.2 
  │ │ ├── isarray@0.0.1 
  │ │ └─┬ stream-splicer@1.3.2 
  │ │   ├── isarray@0.0.1 
  │ │   └─┬ readable-stream@1.1.14 
  │ │     └── string_decoder@0.10.31 
  │ ├─┬ module-deps@3.9.1 
  │ │ ├── detective@4.5.0 
  │ │ ├─┬ readable-stream@1.1.14 
  │ │ │ ├── isarray@0.0.1 
  │ │ │ └── string_decoder@0.10.31 
  │ │ └─┬ stream-combiner2@1.0.2 
  │ │   └─┬ through2@0.5.1 
  │ │     ├─┬ readable-stream@1.0.34 
  │ │     │ ├── isarray@0.0.1 
  │ │     │ └── string_decoder@0.10.31 
  │ │     └── xtend@3.0.0 
  │ ├── os-browserify@0.1.2 
  │ ├─┬ parents@1.0.1 
  │ │ └── path-platform@0.11.15 
  │ ├── path-browserify@0.0.0 
  │ ├── process@0.11.10 
  │ ├── punycode@1.3.2 
  │ ├── querystring-es3@0.2.1 
  │ ├─┬ read-only-stream@1.1.1 
  │ │ ├─┬ readable-stream@1.1.14 
  │ │ │ ├── isarray@0.0.1 
  │ │ │ └── string_decoder@0.10.31 
  │ │ └─┬ readable-wrap@1.0.0 
  │ │   └─┬ readable-stream@1.1.14 
  │ │     ├── isarray@0.0.1 
  │ │     └── string_decoder@0.10.31 
  │ ├─┬ readable-stream@2.3.3 
  │ │ ├── core-util-is@1.0.2 
  │ │ ├── process-nextick-args@1.0.7 
  │ │ ├── safe-buffer@5.1.1 
  │ │ ├── string_decoder@1.0.3 
  │ │ └── util-deprecate@1.0.2 
  │ ├─┬ resolve@1.4.0 
  │ │ └── path-parse@1.0.5 
  │ ├─┬ shasum@1.0.2 
  │ │ ├─┬ json-stable-stringify@0.0.1 
  │ │ │ └── jsonify@0.0.0 
  │ │ └── sha.js@2.4.9 
  │ ├── shell-quote@0.0.1 
  │ ├── stream-browserify@2.0.1 
  │ ├─┬ stream-http@1.7.1 
  │ │ ├── builtin-status-codes@1.0.0 
  │ │ ├── foreach@2.0.5 
  │ │ └── object-keys@1.0.11 
  │ ├── string_decoder@0.10.31 
  │ ├── subarg@1.0.0 
  │ ├─┬ syntax-error@1.3.0 
  │ │ └── acorn@4.0.13 
  │ ├─┬ through2@1.1.1 
  │ │ └─┬ readable-stream@1.1.14 
  │ │   ├── isarray@0.0.1 
  │ │   └── string_decoder@0.10.31 
  │ ├── timers-browserify@1.4.2 
  │ ├── tty-browserify@0.0.0 
  │ ├─┬ util@0.10.3 
  │ │ └── inherits@2.0.1 
  │ ├── vm-browserify@0.0.4 
  │ └── xtend@4.0.1 
  ├─┬ chalk@1.1.3 
  │ ├── ansi-styles@2.2.1 
  │ ├── escape-string-regexp@1.0.5 
  │ ├─┬ has-ansi@2.0.0 
  │ │ └── ansi-regex@2.1.1 
  │ ├── strip-ansi@3.0.1 
  │ └── supports-color@2.0.0 
  ├── colors@1.1.2 
  ├─┬ del@1.2.1 
  │ ├─┬ each-async@1.1.1 
  │ │ ├── onetime@1.1.0 
  │ │ └── set-immediate-shim@1.0.1 
  │ ├─┬ globby@2.1.0 
  │ │ ├─┬ array-union@1.0.2 
  │ │ │ └── array-uniq@1.0.3 
  │ │ ├── glob@5.0.15 
  │ │ └── object-assign@3.0.0 
  │ ├── is-path-cwd@1.0.0 
  │ ├─┬ is-path-in-cwd@1.0.0 
  │ │ └─┬ is-path-inside@1.0.0 
  │ │   └── path-is-inside@1.0.2 
  │ ├── object-assign@3.0.0 
  │ └─┬ rimraf@2.6.2 
  │   └── glob@7.1.2 
  ├── es6-promise@2.3.0 
  ├─┬ findup-sync@0.2.1 
  │ └─┬ glob@4.3.5 
  │   └── minimatch@2.0.10 
  ├─┬ fs-extra@0.22.1 
  │ ├── graceful-fs@4.1.11 
  │ └── jsonfile@2.4.0 
  ├─┬ gh-pages@0.3.1 
  │ ├── async@0.2.9 
  │ ├─┬ commander@2.8.1 
  │ │ └── graceful-readlink@1.0.1 
  │ ├─┬ glob@4.0.6 
  │ │ ├─┬ graceful-fs@3.0.11 
  │ │ │ └── natives@1.1.0 
  │ │ └─┬ minimatch@1.0.0 
  │ │   ├── lru-cache@2.7.3 
  │ │   └── sigmund@1.0.1 
  │ ├── graceful-fs@2.0.1 
  │ ├── lodash@2.4.2 
  │ ├── q@1.0.1 
  │ ├─┬ q-io@1.11.6 
  │ │ ├─┬ collections@0.2.2 
  │ │ │ └── weak-map@1.0.0 
  │ │ ├── mimeparse@0.1.4 
  │ │ ├── qs@1.2.2 
  │ │ └── url2@0.0.0 
  │ └── wrench@1.5.1 
  ├── gitignore-parser@0.0.2 
  ├─┬ glob-stream@5.3.5 
  │ ├── extend@3.0.1 
  │ ├── glob@5.0.15 
  │ ├─┬ glob-parent@3.1.0 
  │ │ ├─┬ is-glob@3.1.0 
  │ │ │ └── is-extglob@2.1.1 
  │ │ └── path-dirname@1.0.2 
  │ ├─┬ ordered-read-streams@0.3.0 
  │ │ └── is-stream@1.1.0 
  │ ├─┬ through2@0.6.5 
  │ │ └─┬ readable-stream@1.0.34 
  │ │   ├── isarray@0.0.1 
  │ │   └── string_decoder@0.10.31 
  │ ├─┬ to-absolute-glob@0.1.1 
  │ │ └── extend-shallow@2.0.1 
  │ └─┬ unique-stream@2.2.1 
  │   ├── json-stable-stringify@1.0.1 
  │   └─┬ through2-filter@2.0.0 
  │     └── through2@2.0.3 
  ├─┬ html-minifier@0.7.2 
  │ ├─┬ change-case@2.3.1 
  │ │ ├── camel-case@1.2.2 
  │ │ ├── constant-case@1.1.2 
  │ │ ├── dot-case@1.1.2 
  │ │ ├── is-lower-case@1.1.3 
  │ │ ├── is-upper-case@1.1.2 
  │ │ ├── lower-case@1.1.4 
  │ │ ├── lower-case-first@1.0.2 
  │ │ ├── param-case@1.1.2 
  │ │ ├── pascal-case@1.1.2 
  │ │ ├── path-case@1.1.2 
  │ │ ├── sentence-case@1.1.3 
  │ │ ├── snake-case@1.1.2 
  │ │ ├── swap-case@1.1.2 
  │ │ ├── title-case@1.1.2 
  │ │ ├── upper-case@1.1.3 
  │ │ └── upper-case-first@1.1.2 
  │ ├─┬ clean-css@3.1.9 
  │ │ ├── commander@2.6.0 
  │ │ └── source-map@0.1.43 
  │ ├─┬ cli@0.6.6 
  │ │ └─┬ glob@3.2.11 
  │ │   └── minimatch@0.3.0 
  │ ├── relateurl@0.2.7 
  │ └─┬ uglify-js@2.4.24 
  │   ├── async@0.2.10 
  │   ├── source-map@0.1.34 
  │   └─┬ yargs@3.5.4 
  │     ├── window-size@0.1.0 
  │     └── wordwrap@0.0.2 
  ├─┬ jade@1.11.0 
  │ ├── character-parser@1.2.1 
  │ ├── commander@2.6.0 
  │ ├─┬ constantinople@3.0.2 
  │ │ └── acorn@2.7.0 
  │ ├─┬ jstransformer@0.0.2 
  │ │ ├── is-promise@2.1.0 
  │ │ └─┬ promise@6.1.0 
  │ │   └── asap@1.0.0 
  │ ├─┬ mkdirp@0.5.1 
  │ │ └── minimist@0.0.8 
  │ ├─┬ transformers@2.1.0 
  │ │ ├─┬ css@1.0.8 
  │ │ │ ├── css-parse@1.0.4 
  │ │ │ └── css-stringify@1.0.5 
  │ │ ├─┬ promise@2.0.0 
  │ │ │ └── is-promise@1.0.1 
  │ │ └─┬ uglify-js@2.2.5 
  │ │   ├── optimist@0.3.7 
  │ │   └── source-map@0.1.43 
  │ ├── void-elements@2.0.1 
  │ └─┬ with@4.0.3 
  │   ├── acorn@1.2.2 
  │   └─┬ acorn-globals@1.0.9 
  │     └── acorn@2.7.0 
  ├─┬ jasmine@2.8.0 
  │ ├── exit@0.1.2 
  │ └─┬ glob@7.1.2 
  │   └── fs.realpath@1.0.0 
  ├── jasmine-core@2.8.0 
  ├── mime@1.4.1 
  ├── minimist@1.2.0 
  ├── mustache@2.3.0 
  ├── ncp@2.0.0 
  ├─┬ node-sass@3.13.1 
  │ ├── async-foreach@0.1.3 
  │ ├─┬ cross-spawn@3.0.1 
  │ │ ├─┬ lru-cache@4.1.1 
  │ │ │ ├── pseudomap@1.0.2 
  │ │ │ └── yallist@2.1.2 
  │ │ └── which@1.3.0 
  │ ├─┬ gaze@1.1.2 
  │ │ └─┬ globule@1.2.0 
  │ │   └── glob@7.1.2 
  │ ├── get-stdin@4.0.1 
  │ ├── glob@7.1.2 
  │ ├── in-publish@2.0.0 
  │ ├── lodash.assign@4.2.0 
  │ ├── lodash.clonedeep@4.5.0 
  │ ├─┬ meow@3.7.0 
  │ │ ├─┬ camelcase-keys@2.1.0 
  │ │ │ └── camelcase@2.1.1 
  │ │ ├─┬ loud-rejection@1.6.0 
  │ │ │ ├─┬ currently-unhandled@0.4.1 
  │ │ │ │ └── array-find-index@1.0.2 
  │ │ │ └── signal-exit@3.0.2 
  │ │ ├── map-obj@1.0.1 
  │ │ ├─┬ normalize-package-data@2.4.0 
  │ │ │ ├── hosted-git-info@2.5.0 
  │ │ │ ├─┬ is-builtin-module@1.0.0 
  │ │ │ │ └── builtin-modules@1.1.1 
  │ │ │ └─┬ validate-npm-package-license@3.0.1 
  │ │ │   ├─┬ spdx-correct@1.0.2 
  │ │ │   │ └── spdx-license-ids@1.2.2 
  │ │ │   └── spdx-expression-parse@1.0.4 
  │ │ ├─┬ redent@1.0.0 
  │ │ │ ├─┬ indent-string@2.1.0 
  │ │ │ │ └─┬ repeating@2.0.1 
  │ │ │ │   └── is-finite@1.0.2 
  │ │ │ └── strip-indent@1.0.1 
  │ │ └── trim-newlines@1.0.0 
  │ ├─┬ mkdirp@0.5.1 
  │ │ └── minimist@0.0.8 
  │ ├── nan@2.7.0 
  │ ├─┬ node-gyp@3.6.2 
  │ │ ├─┬ fstream@1.0.11 
  │ │ │ └─┬ mkdirp@0.5.1 
  │ │ │   └── minimist@0.0.8 
  │ │ ├── glob@7.1.2 
  │ │ ├─┬ mkdirp@0.5.1 
  │ │ │ └── minimist@0.0.8 
  │ │ ├─┬ nopt@3.0.6 
  │ │ │ └── abbrev@1.1.0 
  │ │ ├─┬ osenv@0.1.4 
  │ │ │ ├── os-homedir@1.0.2 
  │ │ │ └── os-tmpdir@1.0.2 
  │ │ ├── semver@5.3.0 
  │ │ └─┬ tar@2.2.1 
  │ │   └── block-stream@0.0.9 
  │ ├─┬ npmlog@4.1.2 
  │ │ ├─┬ are-we-there-yet@1.1.4 
  │ │ │ └── delegates@1.0.0 
  │ │ ├── console-control-strings@1.1.0 
  │ │ └─┬ gauge@2.7.4 
  │ │   ├── aproba@1.2.0 
  │ │   ├── has-unicode@2.0.1 
  │ │   └── wide-align@1.1.2 
  │ ├─┬ request@2.81.0 
  │ │ ├── aws-sign2@0.6.0 
  │ │ ├── aws4@1.6.0 
  │ │ ├── caseless@0.12.0 
  │ │ ├─┬ combined-stream@1.0.5 
  │ │ │ └── delayed-stream@1.0.0 
  │ │ ├── forever-agent@0.6.1 
  │ │ ├─┬ form-data@2.1.4 
  │ │ │ └── asynckit@0.4.0 
  │ │ ├─┬ har-validator@4.2.1 
  │ │ │ ├─┬ ajv@4.11.8 
  │ │ │ │ └── co@4.6.0 
  │ │ │ └── har-schema@1.0.5 
  │ │ ├─┬ hawk@3.1.3 
  │ │ │ ├── boom@2.10.1 
  │ │ │ ├── cryptiles@2.0.5 
  │ │ │ ├── hoek@2.16.3 
  │ │ │ └── sntp@1.0.9 
  │ │ ├─┬ http-signature@1.1.1 
  │ │ │ ├── assert-plus@0.2.0 
  │ │ │ ├─┬ jsprim@1.4.1 
  │ │ │ │ ├── assert-plus@1.0.0 
  │ │ │ │ ├── extsprintf@1.3.0 
  │ │ │ │ ├── json-schema@0.2.3 
  │ │ │ │ └─┬ verror@1.10.0 
  │ │ │ │   └── assert-plus@1.0.0 
  │ │ │ └─┬ sshpk@1.13.1 
  │ │ │   ├── asn1@0.2.3 
  │ │ │   ├── assert-plus@1.0.0 
  │ │ │   ├── bcrypt-pbkdf@1.0.1 
  │ │ │   ├─┬ dashdash@1.14.1 
  │ │ │   │ └── assert-plus@1.0.0 
  │ │ │   ├── ecc-jsbn@0.1.1 
  │ │ │   ├─┬ getpass@0.1.7 
  │ │ │   │ └── assert-plus@1.0.0 
  │ │ │   ├── jsbn@0.1.1 
  │ │ │   └── tweetnacl@0.14.5 
  │ │ ├── is-typedarray@1.0.0 
  │ │ ├── isstream@0.1.2 
  │ │ ├── json-stringify-safe@5.0.1 
  │ │ ├── oauth-sign@0.8.2 
  │ │ ├── performance-now@0.2.0 
  │ │ ├── qs@6.4.0 
  │ │ ├── stringstream@0.0.5 
  │ │ ├─┬ tough-cookie@2.3.3 
  │ │ │ └── punycode@1.4.1 
  │ │ └── tunnel-agent@0.6.0 
  │ └─┬ sass-graph@2.2.4 
  │   ├── glob@7.1.2 
  │   ├── scss-tokenizer@0.2.3 
  │   └─┬ yargs@7.1.0 
  │     ├── camelcase@3.0.0 
  │     └── yargs-parser@5.0.0 
  ├─┬ nodemon@1.12.1 
  │ ├─┬ debug@2.6.9 
  │ │ └── ms@2.0.0 
  │ ├── es6-promise@3.3.1 
  │ ├── ignore-by-default@1.0.1 
  │ ├─┬ lodash.defaults@3.1.2 
  │ │ ├─┬ lodash.assign@3.2.0 
  │ │ │ ├─┬ lodash._baseassign@3.2.0 
  │ │ │ │ └── lodash._basecopy@3.0.1 
  │ │ │ ├─┬ lodash._createassigner@3.1.1 
  │ │ │ │ ├── lodash._bindcallback@3.0.1 
  │ │ │ │ └── lodash._isiterateecall@3.0.9 
  │ │ │ └─┬ lodash.keys@3.1.2 
  │ │ │   ├── lodash._getnative@3.9.1 
  │ │ │   ├── lodash.isarguments@3.1.0 
  │ │ │   └── lodash.isarray@3.0.4 
  │ │ └── lodash.restparam@3.6.1 
  │ ├─┬ minimatch@3.0.4 
  │ │ └─┬ brace-expansion@1.1.8 
  │ │   ├── balanced-match@1.0.0 
  │ │   └── concat-map@0.0.1 
  │ ├─┬ ps-tree@1.1.0 
  │ │ └─┬ event-stream@3.3.4 
  │ │   ├── duplexer@0.1.1 
  │ │   ├── from@0.1.7 
  │ │   ├── map-stream@0.1.0 
  │ │   ├── pause-stream@0.0.11 
  │ │   ├── split@0.3.3 
  │ │   └── stream-combiner@0.0.4 
  │ ├─┬ touch@3.1.0 
  │ │ └── nopt@1.0.10 
  │ ├── undefsafe@0.0.3 
  │ └─┬ update-notifier@2.2.0 
  │   ├─┬ boxen@1.2.1 
  │   │ ├─┬ ansi-align@2.0.0 
  │   │ │ └─┬ string-width@2.1.1 
  │   │ │   ├── is-fullwidth-code-point@2.0.0 
  │   │ │   └─┬ strip-ansi@4.0.0 
  │   │ │     └── ansi-regex@3.0.0 
  │   │ ├── camelcase@4.1.0 
  │   │ ├─┬ chalk@2.1.0 
  │   │ │ ├─┬ ansi-styles@3.2.0 
  │   │ │ │ └─┬ color-convert@1.9.0 
  │   │ │ │   └── color-name@1.1.3 
  │   │ │ └─┬ supports-color@4.4.0 
  │   │ │   └── has-flag@2.0.0 
  │   │ ├── cli-boxes@1.0.0 
  │   │ ├─┬ string-width@2.1.1 
  │   │ │ ├── is-fullwidth-code-point@2.0.0 
  │   │ │ └─┬ strip-ansi@4.0.0 
  │   │ │   └── ansi-regex@3.0.0 
  │   │ ├─┬ term-size@1.2.0 
  │   │ │ └─┬ execa@0.7.0 
  │   │ │   ├─┬ cross-spawn@5.1.0 
  │   │ │   │ ├── lru-cache@4.1.1 
  │   │ │   │ └─┬ shebang-command@1.2.0 
  │   │ │   │   └── shebang-regex@1.0.0 
  │   │ │   ├── get-stream@3.0.0 
  │   │ │   ├─┬ npm-run-path@2.0.2 
  │   │ │   │ └── path-key@2.0.1 
  │   │ │   ├── p-finally@1.0.0 
  │   │ │   └── strip-eof@1.0.0 
  │   │ └── widest-line@1.0.0 
  │   ├─┬ configstore@3.1.1 
  │   │ ├─┬ dot-prop@4.2.0 
  │   │ │ └── is-obj@1.0.1 
  │   │ ├─┬ make-dir@1.0.0 
  │   │ │ └── pify@2.3.0 
  │   │ ├─┬ unique-string@1.0.0 
  │   │ │ └── crypto-random-string@1.0.0 
  │   │ └─┬ write-file-atomic@2.3.0 
  │   │   └── imurmurhash@0.1.4 
  │   ├── import-lazy@2.1.0 
  │   ├── is-npm@1.0.0 
  │   ├─┬ latest-version@3.1.0 
  │   │ └─┬ package-json@4.0.1 
  │   │   ├─┬ got@6.7.1 
  │   │   │ ├─┬ create-error-class@3.0.2 
  │   │   │ │ └── capture-stack-trace@1.0.0 
  │   │   │ ├── duplexer3@0.1.4 
  │   │   │ ├── is-redirect@1.0.0 
  │   │   │ ├── is-retry-allowed@1.1.0 
  │   │   │ ├── lowercase-keys@1.0.0 
  │   │   │ ├── timed-out@4.0.1 
  │   │   │ ├── unzip-response@2.0.1 
  │   │   │ └─┬ url-parse-lax@1.0.0 
  │   │   │   └── prepend-http@1.0.4 
  │   │   ├─┬ registry-auth-token@3.3.1 
  │   │   │ └─┬ rc@1.2.1 
  │   │   │   ├── deep-extend@0.4.2 
  │   │   │   ├── ini@1.3.4 
  │   │   │   └── strip-json-comments@2.0.1 
  │   │   └── registry-url@3.1.0 
  │   ├── semver-diff@2.1.0 
  │   └── xdg-basedir@3.0.0 
  ├─┬ phantomjs@1.9.20 
  │ ├─┬ extract-zip@1.5.0 
  │ │ ├─┬ concat-stream@1.5.0 
  │ │ │ └─┬ readable-stream@2.0.6 
  │ │ │   └── string_decoder@0.10.31 
  │ │ ├── debug@0.7.4 
  │ │ ├─┬ mkdirp@0.5.0 
  │ │ │ └── minimist@0.0.8 
  │ │ └─┬ yauzl@2.4.1 
  │ │   └─┬ fd-slicer@1.0.1 
  │ │     └── pend@1.2.0 
  │ ├─┬ fs-extra@0.26.7 
  │ │ ├── jsonfile@2.4.0 
  │ │ └── klaw@1.3.1 
  │ ├── hasha@2.2.0 
  │ ├── kew@0.7.0 
  │ ├── progress@1.1.8 
  │ ├─┬ request@2.67.0 
  │ │ ├─┬ bl@1.0.3 
  │ │ │ └─┬ readable-stream@2.0.6 
  │ │ │   └── string_decoder@0.10.31 
  │ │ ├── caseless@0.11.0 
  │ │ ├─┬ form-data@1.0.1 
  │ │ │ └── async@2.5.0 
  │ │ ├─┬ har-validator@2.0.6 
  │ │ │ └─┬ is-my-json-valid@2.16.1 
  │ │ │   ├── generate-function@2.0.0 
  │ │ │   ├─┬ generate-object-property@1.2.0 
  │ │ │   │ └── is-property@1.0.2 
  │ │ │   └── jsonpointer@4.0.1 
  │ │ ├── node-uuid@1.4.8 
  │ │ ├── qs@5.2.1 
  │ │ ├── tough-cookie@2.2.2 
  │ │ └── tunnel-agent@0.4.3 
  │ ├─┬ request-progress@2.0.1 
  │ │ └── throttleit@1.0.0 
  │ └─┬ which@1.2.14 
  │   └── isexe@2.0.0 
  ├─┬ postcss@4.1.16 
  │ ├── js-base64@2.1.9 
  │ └─┬ source-map@0.4.4 
  │   └── amdefine@1.0.1 
  ├─┬ prompt@0.2.14 
  │ ├── pkginfo@0.4.1 
  │ ├─┬ read@1.0.7 
  │ │ └── mute-stream@0.0.7 
  │ ├── revalidator@0.1.8 
  │ ├─┬ utile@0.2.1 
  │ │ ├── async@0.2.10 
  │ │ ├── deep-equal@1.0.1 
  │ │ ├── i@0.3.5 
  │ │ ├── mkdirp@0.3.0 
  │ │ └── ncp@0.4.2 
  │ └─┬ winston@0.8.3 
  │   ├── async@0.2.10 
  │   ├── colors@0.6.2 
  │   ├── cycle@1.0.3 
  │   ├── eyes@0.1.8 
  │   ├── pkginfo@0.3.1 
  │   └── stack-trace@0.0.10 
  ├─┬ replacestream@4.0.3 
  │ └── object-assign@4.1.1 
  ├── requirejs@2.3.5 
  ├── semver@5.4.1 
  ├── shelljs@0.5.3 
  ├─┬ uglify-js@2.8.29 
  │ ├── source-map@0.5.7 
  │ ├── uglify-to-browserify@1.0.2 
  │ └─┬ yargs@3.10.0 
  │   ├── camelcase@1.2.1 
  │   ├─┬ cliui@2.1.0 
  │   │ ├─┬ center-align@0.1.3 
  │   │ │ ├─┬ align-text@0.1.4 
  │   │ │ │ └── longest@1.0.1 
  │   │ │ └── lazy-cache@1.0.4 
  │   │ └── right-align@0.1.3 
  │   └── window-size@0.1.0 
  └─┬ watchify@3.9.0 
    ├── anymatch@1.3.2 
    ├─┬ browserify@14.4.0 
    │ ├── assert@1.4.1 
    │ ├─┬ browser-pack@6.0.2 
    │ │ └─┬ combine-source-map@0.7.2 
    │ │   ├── inline-source-map@0.6.2 
    │ │   └── source-map@0.5.7 
    │ ├── buffer@5.0.7 
    │ ├── cached-path-relative@1.0.1 
    │ ├─┬ concat-stream@1.5.2 
    │ │ └─┬ readable-stream@2.0.6 
    │ │   └── string_decoder@0.10.31 
    │ ├── constants-browserify@1.0.0 
    │ ├── crypto-browserify@3.11.1 
    │ ├── deps-sort@2.0.0 
    │ ├── duplexer2@0.1.4 
    │ ├── glob@7.1.2 
    │ ├── https-browserify@1.0.0 
    │ ├── insert-module-globals@7.0.1 
    │ ├─┬ labeled-stream-splicer@2.0.0 
    │ │ ├── isarray@0.0.1 
    │ │ └── stream-splicer@2.0.0 
    │ ├─┬ module-deps@4.1.1 
    │ │ └── stream-combiner2@1.1.1 
    │ ├── read-only-stream@2.0.0 
    │ ├── shell-quote@1.6.1 
    │ ├─┬ stream-http@2.7.2 
    │ │ ├── builtin-status-codes@3.0.0 
    │ │ └── to-arraybuffer@1.0.1 
    │ └── url@0.11.0 
    ├─┬ outpipe@1.1.1 
    │ └─┬ shell-quote@1.6.1 
    │   ├── array-filter@0.0.1 
    │   ├── array-map@0.0.0 
    │   └── array-reduce@0.0.0 
    └── through2@2.0.3 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/web-caddy/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 28.000000000000004% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","call","Array","isArray","resolve","RegExp","bind","defineProperties","Set"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0572 took 11.2371s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (49:4) on program // Approach:
//
// 1. Get the minimatch set
// 2. For each pattern in the set, PROCESS(pattern, false)
// 3. Store matches per-set, then uniq them
//
// PROCESS(pattern, inGlobStar)
// Get the first [n] items from pattern that are all strings
// Join these together.  This is PREFIX.
//   If there is no more remaining, then stat(PREFIX) and
//   add to matches if it succeeds.  END.
//
// If inGlobStar and PREFIX is symlink and points to dir
//   set ENTRIES = []
// else readdir(PREFIX) as ENTRIES
//   If fail, END
//
// with ENTRIES
//   If pattern[n] is GLOBSTAR
//     // handle the case where the globstar match is empty
//     // by pruning it out, and testing the resulting pattern
//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)
//     // handle other cases.
//     for ENTRY in ENTRIES (not dotfiles)
//       // attach globstar + tail onto the entry
//       // Mark that this entry is a globstar match
//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)
//
//   else // not globstar
//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)
//       Test ENTRY against pattern[n]
//       If fails, continue
//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])
//
// Caveat:
//   Cache all stats and readdirs results to minimize syscall.  Since all
//   we ever care about is existence and directory-ness, we can just keep
//   `true` for files, and [children,...] for directories, or `false` for
//   things that don't exist.

module.exports = glob

var fs = require('fs')
var minimatch = require('minimatch')
var Minimatch = minimatch.Minimatch
var inherits = require('inherits')
var EE = require('events').EventEmitter
var path = require('path')
var assert = require('assert')
var isAbsolute = require('path-is-absolute')
var globSync = require('./sync.js')
var common = require('./common.js')
var alphasort = common.alphasort
var alphasorti = common.alphasorti
var setopts = common.setopts
var ownProp = common.ownProp
var inflight = require('inflight')
var util = require('util')
var childrenIgnored = common.childrenIgnored
var isIgnored = common.isIgnored

var once = require('once')

function glob (pattern, options, cb) {
  if (typeof options === 'function') cb = options, options = {}
  if (!options) options = {}

  if (options.sync) {
    if (cb)
      throw new TypeError('callback provided to sync glob')
    return globSync(pattern, options)
  }

  return new Glob(pattern, options, cb)
}

glob.sync = globSync
var GlobSync = glob.GlobSync = globSync.GlobSync

// old api surface
glob.glob = glob

glob.hasMagic = function (pattern, options_) {
  var options = util._extend({}, options_)
  options.noprocess = true

  var g = new Glob(pattern, options)
  var set = g.minimatch.set
  if (set.length > 1)
    return true

  for (var j = 0; j < set[0].length; j++) {
    if (typeof set[0][j] !== 'string')
      return true
  }

  return false
}

glob.Glob = Glob
inherits(Glob, EE)
function Glob (pattern, options, cb) {
  if (typeof options === 'function') {
    cb = options
    options = null
  }

  if (options && options.sync) {
    if (cb)
      throw new TypeError('callback provided to sync glob')
    return new GlobSync(pattern, options)
  }

  if (!(this instanceof Glob))
    return new Glob(pattern, options, cb)

  setopts(this, pattern, options)
  this._didRealPath = false

  // process each pattern in the minimatch set
  var n = this.minimatch.set.length

  // The matches are stored as {<filename>: true,...} so that
  // duplicates are automagically pruned.
  // Later, we do an Object.keys() on these.
  // Keep them as a list so we can fill in when nonull is set.
  this.matches = new Array(n)

  if (typeof cb === 'function') {
    cb = once(cb)
    this.on('error', cb)
    this.on('end', function (matches) {
      cb(null, matches)
    })
  }

  var self = this
  var n = this.minimatch.set.length
  this._processing = 0
  this.matches = new Array(n)

  this._emitQueue = []
  this._processQueue = []
  this.paused = false

  if (this.noprocess)
    return this

  if (n === 0)
    return done()

  for (var i = 0; i < n; i ++) {
    this._process(this.minimatch.set[i], i, false, done)
  }

  function done () {
    --self._processing
    if (self._processing <= 0)
      self._finish()
  }
}

Glob.prototype._finish = function () {
  assert(this instanceof Glob)
  if (this.aborted)
    return

  if (this.realpath && !this._didRealpath)
    return this._realpath()

  common.finish(this)
  this.emit('end', this.found)
}

Glob.prototype._realpath = function () {
  if (this._didRealpath)
    return

  this._didRealpath = true

  var n = this.matches.length
  if (n === 0)
    return this._finish()

  var self = this
  for (var i = 0; i < this.matches.length; i++)
    this._realpathSet(i, next)

  function next () {
    if (--n === 0)
      self._finish()
  }
}

Glob.prototype._realpathSet = function (index, cb) {
  var matchset = this.matches[index]
  if (!matchset)
    return cb()

  var found = Object.keys(matchset)
  var self = this
  var n = found.length

  if (n === 0)
    return cb()

  var set = this.matches[index] = Object.create(null)
  found.forEach(function (p, i) {
    // If there's a problem with the stat, then it means that
    // one or more of the links in the realpath couldn't be
    // resolved.  just return the abs value in that case.
    p = self._makeAbs(p)
    fs.realpath(p, self.realpathCache, function (er, real) {
      if (!er)
        set[real] = true
      else if (er.syscall === 'stat')
        set[p] = true
      else
        self.emit('error', er) // srsly wtf right here

      if (--n === 0) {
        self.matches[index] = set
        cb()
      }
    })
  })
}

Glob.prototype._mark = function (p) {
  return common.mark(this, p)
}

Glob.prototype._makeAbs = function (f) {
  return common.makeAbs(this, f)
}

Glob.prototype.abort = function () {
  this.aborted = true
  this.emit('abort')
}

Glob.prototype.pause = function () {
  if (!this.paused) {
    this.paused = true
    this.emit('pause')
  }
}

Glob.prototype.resume = function () {
  if (this.paused) {
    this.emit('resume')
    this.paused = false
    if (this._emitQueue.length) {
      var eq = this._emitQueue.slice(0)
      this._emitQueue.length = 0
      for (var i = 0; i < eq.length; i ++) {
        var e = eq[i]
        this._emitMatch(e[0], e[1])
      }
    }
    if (this._processQueue.length) {
      var pq = this._processQueue.slice(0)
      this._processQueue.length = 0
      for (var i = 0; i < pq.length; i ++) {
        var p = pq[i]
        this._processing--
        this._process(p[0], p[1], p[2], p[3])
      }
    }
  }
}

Glob.prototype._process = function (pattern, index, inGlobStar, cb) {
  assert(this instanceof Glob)
  assert(typeof cb === 'function')

  if (this.aborted)
    return

  this._processing++
  if (this.paused) {
    this._processQueue.push([pattern, index, inGlobStar, cb])
    return
  }

  //console.error('PROCESS %d', this._processing, pattern)

  // Get the first [n] parts of pattern that are all strings.
  var n = 0
  while (typeof pattern[n] === 'string') {
    n ++
  }
  // now n is the index of the first one that is *not* a string.

  // see if there's anything else
  var prefix
  switch (n) {
    // if not, then this is rather simple
    case pattern.length:
      this._processSimple(pattern.join('/'), index, cb)
      return

    case 0:
      // pattern *starts* with some non-trivial item.
      // going to readdir(cwd), but not include the prefix in matches.
      prefix = null
      break

    default:
      // pattern has some string bits in the front.
      // whatever it starts with, whether that's 'absolute' like /foo/bar,
      // or 'relative' like '../baz'
      prefix = pattern.slice(0, n).join('/')
      break
  }

  var remain = pattern.slice(n)

  // get the list of entries.
  var read
  if (prefix === null)
    read = '.'
  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {
    if (!prefix || !isAbsolute(prefix))
      prefix = '/' + prefix
    read = prefix
  } else
    read = prefix

  var abs = this._makeAbs(read)

  //if ignored, skip _processing
  if (childrenIgnored(this, read))
    return cb()

  var isGlobStar = remain[0] === minimatch.GLOBSTAR
  if (isGlobStar)
    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)
  else
    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)
}

Glob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {
  var self = this
  this._readdir(abs, inGlobStar, function (er, entries) {
    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)
  })
}

Glob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {

  // if the abs isn't a dir, then nothing can match!
  if (!entries)
    return cb()

  // It will only match dot entries if it starts with a dot, or if
  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.
  var pn = remain[0]
  var negate = !!this.minimatch.negate
  var rawGlob = pn._glob
  var dotOk = this.dot || rawGlob.charAt(0) === '.'

  var matchedEntries = []
  for (var i = 0; i < entries.length; i++) {
    var e = entries[i]
    if (e.charAt(0) !== '.' || dotOk) {
      var m
      if (negate && !prefix) {
        m = !e.match(pn)
      } else {
        m = e.match(pn)
      }
      if (m)
        matchedEntries.push(e)
    }
  }

  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)

  var len = matchedEntries.length
  // If there are no matched entries, then nothing matches.
  if (len === 0)
    return cb()

  // if this is the last remaining pattern bit, then no need for
  // an additional stat *unless* the user has specified mark or
  // stat explicitly.  We know they exist, since readdir returned
  // them.

  if (remain.length === 1 && !this.mark && !this.stat) {
    if (!this.matches[index])
      this.matches[index] = Object.create(null)

    for (var i = 0; i < len; i ++) {
      var e = matchedEntries[i]
      if (prefix) {
        if (prefix !== '/')
          e = prefix + '/' + e
        else
          e = prefix + e
      }

      if (e.charAt(0) === '/' && !this.nomount) {
        e = path.join(this.root, e)
      }
      this._emitMatch(index, e)
    }
    // This was the last one, and no stats were needed
    return cb()
  }

  // now test all matched entries as stand-ins for that part
  // of the pattern.
  remain.shift()
  for (var i = 0; i < len; i ++) {
    var e = matchedEntries[i]
    var newPattern
    if (prefix) {
      if (prefix !== '/')
        e = prefix + '/' + e
      else
        e = prefix + e
    }
    this._process([e].concat(remain), index, inGlobStar, cb)
  }
  cb()
}

Glob.prototype._emitMatch = function (index, e) {
  if (this.aborted)
    return

  if (this.matches[index][e])
    return

  if (isIgnored(this, e))
    return

  if (this.paused) {
    this._emitQueue.push([index, e])
    return
  }

  var abs = this._makeAbs(e)

  if (this.nodir) {
    var c = this.cache[abs]
    if (c === 'DIR' || Array.isArray(c))
      return
  }

  if (this.mark)
    e = this._mark(e)

  this.matches[index][e] = true

  var st = this.statCache[abs]
  if (st)
    this.emit('stat', e, st)

  this.emit('match', e)
}

Glob.prototype._readdirInGlobStar = function (abs, cb) {
  if (this.aborted)
    return

  // follow all symlinked directories forever
  // just proceed as if this is a non-globstar situation
  if (this.follow)
    return this._readdir(abs, false, cb)

  var lstatkey = 'lstat\0' + abs
  var self = this
  var lstatcb = inflight(lstatkey, lstatcb_)

  if (lstatcb)
    fs.lstat(abs, lstatcb)

  function lstatcb_ (er, lstat) {
    if (er)
      return cb()

    var isSym = lstat.isSymbolicLink()
    self.symlinks[abs] = isSym

    // If it's not a symlink or a dir, then it's definitely a regular file.
    // don't bother doing a readdir in that case.
    if (!isSym && !lstat.isDirectory()) {
      self.cache[abs] = 'FILE'
      cb()
    } else
      self._readdir(abs, false, cb)
  }
}

Glob.prototype._readdir = function (abs, inGlobStar, cb) {
  if (this.aborted)
    return

  cb = inflight('readdir\0'+abs+'\0'+inGlobStar, cb)
  if (!cb)
    return

  //console.error('RD %j %j', +inGlobStar, abs)
  if (inGlobStar && !ownProp(this.symlinks, abs))
    return this._readdirInGlobStar(abs, cb)

  if (ownProp(this.cache, abs)) {
    var c = this.cache[abs]
    if (!c || c === 'FILE')
      return cb()

    if (Array.isArray(c))
      return cb(null, c)
  }

  var self = this
  fs.readdir(abs, readdirCb(this, abs, cb))
}

function readdirCb (self, abs, cb) {
  return function (er, entries) {
    if (er)
      self._readdirError(abs, er, cb)
    else
      self._readdirEntries(abs, entries, cb)
  }
}

Glob.prototype._readdirEntries = function (abs, entries, cb) {
  if (this.aborted)
    return

  // if we haven't asked to stat everything, then just
  // assume that everything in there exists, so we can avoid
  // having to stat it a second time.
  if (!this.mark && !this.stat) {
    for (var i = 0; i < entries.length; i ++) {
      var e = entries[i]
      if (abs === '/')
        e = abs + e
      else
        e = abs + '/' + e
      this.cache[e] = true
    }
  }

  this.cache[abs] = entries
  return cb(null, entries)
}

Glob.prototype._readdirError = function (f, er, cb) {
  if (this.aborted)
    return

  // handle errors, and cache the information
  switch (er.code) {
    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205
    case 'ENOTDIR': // totally normal. means it *does* exist.
      this.cache[this._makeAbs(f)] = 'FILE'
      break

    case 'ENOENT': // not terribly unusual
    case 'ELOOP':
    case 'ENAMETOOLONG':
    case 'UNKNOWN':
      this.cache[this._makeAbs(f)] = false
      break

    default: // some unusual error.  Treat as failure.
      this.cache[this._makeAbs(f)] = false
      if (this.strict) {
        this.emit('error', er)
        // If the error is handled, then we abort
        // if not, we threw out of here
        this.abort()
      }
      if (!this.silent)
        console.error('glob error', er)
      break
  }

  return cb()
}

Glob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {
  var self = this
  this._readdir(abs, inGlobStar, function (er, entries) {
    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)
  })
}


Glob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {
  //console.error('pgs2', prefix, remain[0], entries)

  // no entries means not a dir, so it can never have matches
  // foo.txt/** doesn't match foo.txt
  if (!entries)
    return cb()

  // test without the globstar, and with every child both below
  // and replacing the globstar.
  var remainWithoutGlobStar = remain.slice(1)
  var gspref = prefix ? [ prefix ] : []
  var noGlobStar = gspref.concat(remainWithoutGlobStar)

  // the noGlobStar pattern exits the inGlobStar state
  this._process(noGlobStar, index, false, cb)

  var isSym = this.symlinks[abs]
  var len = entries.length

  // If it's a symlink, and we're in a globstar, then stop
  if (isSym && inGlobStar)
    return cb()

  for (var i = 0; i < len; i++) {
    var e = entries[i]
    if (e.charAt(0) === '.' && !this.dot)
      continue

    // these two cases enter the inGlobStar state
    var instead = gspref.concat(entries[i], remainWithoutGlobStar)
    this._process(instead, index, true, cb)

    var below = gspref.concat(entries[i], remain)
    this._process(below, index, true, cb)
  }

  cb()
}

Glob.prototype._processSimple = function (prefix, index, cb) {
  // XXX review this.  Shouldn't it be doing the mounting etc
  // before doing stat?  kinda weird?
  var self = this
  this._stat(prefix, function (er, exists) {
    self._processSimple2(prefix, index, er, exists, cb)
  })
}
Glob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {

  //console.error('ps2', prefix, exists)

  if (!this.matches[index])
    this.matches[index] = Object.create(null)

  // If it doesn't exist, then just mark the lack of results
  if (!exists)
    return cb()

  if (prefix && isAbsolute(prefix) && !this.nomount) {
    var trail = /[\/\\]$/.test(prefix)
    if (prefix.charAt(0) === '/') {
      prefix = path.join(this.root, prefix)
    } else {
      prefix = path.resolve(this.root, prefix)
      if (trail)
        prefix += '/'
    }
  }

  if (process.platform === 'win32')
    prefix = prefix.replace(/\\/g, '/')

  // Mark this as a match
  this._emitMatch(index, prefix)
  cb()
}

// Returns either 'DIR', 'FILE', or false
Glob.prototype._stat = function (f, cb) {
  var abs = this._makeAbs(f)
  var needDir = f.slice(-1) === '/'

  if (f.length > this.maxLength)
    return cb()

  if (!this.stat && ownProp(this.cache, abs)) {
    var c = this.cache[abs]

    if (Array.isArray(c))
      c = 'DIR'

    // It exists, but maybe not how we need it
    if (!needDir || c === 'DIR')
      return cb(null, c)

    if (needDir && c === 'FILE')
      return cb()

    // otherwise we have to stat, because maybe c=true
    // if we know it exists, but not what it is.
  }

  var exists
  var stat = this.statCache[abs]
  if (stat !== undefined) {
    if (stat === false)
      return cb(null, stat)
    else {
      var type = stat.isDirectory() ? 'DIR' : 'FILE'
      if (needDir && type === 'FILE')
        return cb()
      else
        return cb(null, type, stat)
    }
  }

  var self = this
  var statcb = inflight('stat\0' + abs, lstatcb_)
  if (statcb)
    fs.lstat(abs, statcb)

  function lstatcb_ (er, lstat) {
    if (lstat && lstat.isSymbolicLink()) {
      // If it's a symlink, then treat it as the target, unless
      // the target does not exist, then treat it as a file.
      return fs.stat(abs, function (er, stat) {
        if (er)
          self._stat2(f, abs, null, lstat, cb)
        else
          self._stat2(f, abs, er, stat, cb)
      })
    } else {
      self._stat2(f, abs, er, lstat, cb)
    }
  }
}

Glob.prototype._stat2 = function (f, abs, er, stat, cb) {
  if (er) {
    this.statCache[abs] = false
    return cb()
  }

  var needDir = f.slice(-1) === '/'
  this.statCache[abs] = stat

  if (abs.slice(-1) === '/' && !stat.isDirectory())
    return cb(null, false, stat)

  var c = stat.isDirectory() ? 'DIR' : 'FILE'
  this.cache[abs] = this.cache[abs] || c

  if (needDir && c !== 'DIR')
    return cb()

  return cb(null, c, stat)
}
 at SyntaxError: Unexpected token (49:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/web-caddy/node_modules/web-caddy/index.js. Coverage (Term): 31% Coverage (LOC): 22%
*- File /root/Targets/web-caddy/node_modules/web-caddy/tasks/copy.js. Coverage (Term): 14% Coverage (LOC): 21%
*- File /root/Targets/web-caddy/node_modules/es6-promise/dist/es6-promise.js. Coverage (Term): 20% Coverage (LOC): 27%
*- File /root/Targets/web-caddy/node_modules/web-caddy/tasks/utils/log.js. Coverage (Term): 21% Coverage (LOC): 41%
*- File /root/Targets/web-caddy/node_modules/chalk/index.js. Coverage (Term): 46% Coverage (LOC): 56%
*- File /root/Targets/web-caddy/node_modules/escape-string-regexp/index.js. Coverage (Term): 85% Coverage (LOC): 90%
*- File /root/Targets/web-caddy/node_modules/ansi-styles/index.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/web-caddy/node_modules/strip-ansi/index.js. Coverage (Term): 57% Coverage (LOC): 86%
*- File /root/Targets/web-caddy/node_modules/ansi-regex/index.js. Coverage (Term): 93% Coverage (LOC): 100%
*- File /root/Targets/web-caddy/node_modules/has-ansi/index.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/web-caddy/node_modules/supports-color/index.js. Coverage (Term): 63% Coverage (LOC): 56%
*- File /root/Targets/web-caddy/node_modules/web-caddy/tasks/utils/fs.js. Coverage (Term): 6% Coverage (LOC): 13%
*- File /root/Targets/web-caddy/node_modules/del/index.js. Coverage (Term): 11% Coverage (LOC): 11%
*- File /root/Targets/web-caddy/node_modules/globby/index.js. Coverage (Term): 12% Coverage (LOC): 16%
*- File /root/Targets/web-caddy/node_modules/array-union/index.js. Coverage (Term): 63% Coverage (LOC): 86%
*- File /root/Targets/web-caddy/node_modules/array-uniq/index.js. Coverage (Term): 36% Coverage (LOC): 44%
*- File /root/Targets/web-caddy/node_modules/globby/node_modules/object-assign/index.js. Coverage (Term): 19% Coverage (LOC): 29%
*- File /root/Targets/web-caddy/node_modules/async/lib/async.js. Coverage (Term): 12% Coverage (LOC): 18%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
