/root/Targets/itsa-react-informationpopup
├─┬ itsa-react-informationpopup@16.0.2 
│ └─┬ prop-types@15.6.0 
│   ├─┬ fbjs@0.8.16 
│   │ ├── core-js@1.2.7 
│   │ ├─┬ isomorphic-fetch@2.2.1 
│   │ │ ├─┬ node-fetch@1.7.3 
│   │ │ │ ├─┬ encoding@0.1.12 
│   │ │ │ │ └── iconv-lite@0.4.19 
│   │ │ │ └── is-stream@1.1.0 
│   │ │ └── whatwg-fetch@2.0.3 
│   │ ├─┬ promise@7.3.1 
│   │ │ └── asap@2.0.6 
│   │ ├── setimmediate@1.0.5 
│   │ └── ua-parser-js@0.7.14 
│   ├─┬ loose-envify@1.3.1 
│   │ └── js-tokens@3.0.2 
│   └── object-assign@4.1.1 
└── UNMET PEER DEPENDENCY react@>=15

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/itsa-react-informationpopup/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.023 took 3.2292s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (61:24) on program "use strict";

/**
 * Description here
 *
 *
 *
 * <i>Copyright (c) 2016 ItsAsbreuk - http://itsasbreuk.nl</i><br>
 * New BSD License - http://choosealicense.com/licenses/bsd-3-clause/
 *
 *
 * @module component.jsx
 * @class Component
 * @since 15.0.0
*/

const React = require('react'),
    PropTypes = require("prop-types"),
    MAIN_CLASS = 'itsa-informationpopup',
    LABEL_CLASS = MAIN_CLASS+'-icon',
    POPUP_NODE_CLASS = MAIN_CLASS+'-popup',
    HIDDEN_CLASS = MAIN_CLASS+'-hidden';

class Component extends React.Component {
    constructor(props) {
        super(props);
        const instance = this;
        instance.state = {
            hidden: true
        };
        instance.handleMouseEnter = instance.handleMouseEnter.bind(instance);
        instance.handleMouseLeave = instance.handleMouseLeave.bind(instance);
    }

    handleMouseEnter() {
        this.setState({hidden: false});
    }

    handleMouseLeave() {
        this.setState({hidden: true});
    }

    /**
     * React render-method --> renderes the Component.
     *
     * @method render
     * @return ReactComponent
     * @since 15.0.0
     */
    render() {
        let contentClass, popupNode;
        const instance = this,
            props = instance.props,
            popupHTML = props.popupHTML,
            popupClass = POPUP_NODE_CLASS + (instance.state.hidden ? ' '+HIDDEN_CLASS : '');

        if (props.iconStyle) {
            contentClass = LABEL_CLASS;
        }
        if (popupHTML) {
            popupNode = <div className={popupClass} dangerouslySetInnerHTML={{__html: popupHTML}} />;
        }
        else {
            popupNode = <div className={popupClass}>{props.popup}</div>;
        }
        return (
            <div className={MAIN_CLASS}>
                <div className={contentClass} onMouseEnter={instance.handleMouseEnter} onMouseLeave={instance.handleMouseLeave} >{props.children}</div>
                {popupNode}
            </div>
        );
    }
}

Component.propTypes = {
    /**
     * The Component its children
     *
     * @property children
     * @type String || Object || Array
     * @since 15.0.0
    */

    children: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),
    iconStyle: PropTypes.bool
};

Component.defaultProps = {
    iconStyle: true
};

module.exports = Component;
 at SyntaxError: Unexpected token (61:24)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1822:12)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1597:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1608:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
