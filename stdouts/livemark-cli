/root/Targets/livemark-cli
└─┬ livemark-cli@0.1.1 
  ├─┬ check-update@0.0.8 
  │ ├─┬ got@2.9.2 
  │ │ ├─┬ duplexify@3.5.1 
  │ │ │ ├─┬ end-of-stream@1.4.0 
  │ │ │ │ └─┬ once@1.4.0 
  │ │ │ │   └── wrappy@1.0.2 
  │ │ │ ├── inherits@2.0.3 
  │ │ │ ├─┬ readable-stream@2.3.3 
  │ │ │ │ ├── core-util-is@1.0.2 
  │ │ │ │ ├── isarray@1.0.0 
  │ │ │ │ ├── process-nextick-args@1.0.7 
  │ │ │ │ ├── safe-buffer@5.1.1 
  │ │ │ │ ├── string_decoder@1.0.3 
  │ │ │ │ └── util-deprecate@1.0.2 
  │ │ │ └── stream-shift@1.0.0 
  │ │ ├── infinity-agent@2.0.3 
  │ │ ├── is-stream@1.1.0 
  │ │ ├── lowercase-keys@1.0.0 
  │ │ ├── nested-error-stacks@1.0.2 
  │ │ ├── object-assign@2.1.1 
  │ │ ├── prepend-http@1.0.4 
  │ │ ├── read-all-stream@2.2.0 
  │ │ ├── statuses@1.3.1 
  │ │ └── timed-out@2.0.0 
  │ └─┬ rc@0.5.5 
  │   ├── deep-extend@0.2.11 
  │   ├── ini@1.3.4 
  │   ├── minimist@0.0.10 
  │   └── strip-json-comments@0.1.3 
  ├── colors@1.1.2 
  ├── commander@2.11.0 
  ├─┬ hapi@8.8.1 
  │ ├── accept@1.0.0 
  │ ├── ammo@1.0.0 
  │ ├── boom@2.7.2 
  │ ├── call@2.0.1 
  │ ├── catbox@4.3.0 
  │ ├── catbox-memory@1.1.1 
  │ ├── cryptiles@2.0.4 
  │ ├── h2o2@4.0.1 
  │ ├── heavy@3.0.0 
  │ ├── hoek@2.14.0 
  │ ├─┬ inert@2.1.6 
  │ │ └── lru-cache@2.6.5 
  │ ├── iron@2.1.2 
  │ ├── items@1.1.0 
  │ ├─┬ joi@6.4.1 
  │ │ ├── isemail@1.1.1 
  │ │ └── moment@2.10.3 
  │ ├── kilt@1.1.1 
  │ ├─┬ mimos@2.0.2 
  │ │ └── mime-db@1.14.0 
  │ ├── peekaboo@1.0.0 
  │ ├── qs@4.0.0 
  │ ├── shot@1.5.3 
  │ ├── statehood@2.1.1 
  │ ├─┬ subtext@1.1.1 
  │ │ ├── content@1.0.1 
  │ │ ├─┬ pez@1.0.0 
  │ │ │ ├── b64@2.0.0 
  │ │ │ └─┬ nigel@1.0.1 
  │ │ │   └── vise@1.0.0 
  │ │ └── wreck@6.0.0 
  │ ├── topo@1.0.3 
  │ └── vision@2.0.1 
  ├── marked@0.3.6 
  └─┬ socket.io@1.7.4 
    ├─┬ debug@2.3.3 
    │ └── ms@0.7.2 
    ├─┬ engine.io@1.8.4 
    │ ├─┬ accepts@1.3.3 
    │ │ ├─┬ mime-types@2.1.17 
    │ │ │ └── mime-db@1.30.0 
    │ │ └── negotiator@0.6.1 
    │ ├── base64id@1.0.0 
    │ ├── cookie@0.3.1 
    │ ├─┬ engine.io-parser@1.3.2 
    │ │ ├── after@0.8.2 
    │ │ ├── arraybuffer.slice@0.0.6 
    │ │ ├── base64-arraybuffer@0.1.5 
    │ │ ├── blob@0.0.4 
    │ │ └── wtf-8@1.0.0 
    │ └─┬ ws@1.1.4 
    │   ├── options@0.0.6 
    │   └── ultron@1.0.2 
    ├─┬ has-binary@0.1.7 
    │ └── isarray@0.0.1 
    ├── object-assign@4.1.0 
    ├── socket.io-adapter@0.5.0 
    ├─┬ socket.io-client@1.7.4 
    │ ├── backo2@1.0.2 
    │ ├── component-bind@1.0.0 
    │ ├── component-emitter@1.2.1 
    │ ├─┬ engine.io-client@1.8.4 
    │ │ ├── component-emitter@1.2.1 
    │ │ ├── component-inherit@0.0.3 
    │ │ ├── has-cors@1.1.0 
    │ │ ├── parsejson@0.0.3 
    │ │ ├── parseqs@0.0.5 
    │ │ ├── ws@1.1.2 
    │ │ ├── xmlhttprequest-ssl@1.5.3 
    │ │ └── yeast@0.1.2 
    │ ├── indexof@0.0.1 
    │ ├── object-component@0.0.3 
    │ ├─┬ parseuri@0.0.5 
    │ │ └─┬ better-assert@1.0.2 
    │ │   └── callsite@1.0.0 
    │ └── to-array@0.1.4 
    └─┬ socket.io-parser@2.3.1 
      ├── component-emitter@1.1.2 
      ├─┬ debug@2.2.0 
      │ └── ms@0.7.1 
      ├── isarray@0.0.1 
      └── json3@3.3.2 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/livemark-cli/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.1671 took 8.1283s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node
'use strict';
var hapi = require('hapi'),
    app = new hapi.Server(),
    fs = require('fs'),
    program = require('commander'),
    marked = require('marked'),
    gdata,
    pkg = require('./package.json'),
    port = 7773,
    colors = require('colors');

program
  .version(pkg.version)
  .option('-p, --port [number]', 'specified the port')
  .parse(process.argv);

if (!isNaN(parseFloat(program.port)) && isFinite(program.port)){
  port = program.port;
}

marked.setOptions({
  renderer: new marked.Renderer(),
  gfm: true,
  tables: true,
  breaks: true,
  pedantic: true,
  sanitize: true,
  smartLists: true,
  smartypants: true
});

app.connection({ port: port });

app.route({
    method: 'GET',
    path: '/api/',
    handler: function (request, reply) {
        reply(gdata);
    }
});

app.route({
    method: 'GET',
    path: '/vendor/{param*}',
    handler: {
        directory: {
            path: __dirname + '/vendor/'
        }
    }
});

app.route({
    method: 'GET',
    path: '/',
    handler: function (request, reply) {
        reply.file(__dirname + '/index.html');
    }
});


app.route({
    method: 'GET',
    path: '/favicon.ico',
    handler: function (request, reply) {
        reply.file(__dirname + '/favicon.ico');
    }
});

app.start(function() {
    require('check-update')({packageName: pkg.name, packageVersion: pkg.version, isCLI: true}, function(err, latestVersion, defaultMessage){
        if(!err){
            console.log(defaultMessage);
        }
    });
    console.log('Server running at\n  => ' + colors.green('http://localhost:' + port) + '\nCTRL + C to shutdown');
});

var io = require('socket.io').listen(app.listener);
io.sockets.on('connection', function(socket){
    socket.on('change', function(data){
         data.after = marked(data.before).replace(/\n/g, '');
         gdata = data;
         io.sockets.emit('change', data);
    });
});
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
