/root/Targets/twzipcode-vue
└─┬ twzipcode-vue@1.0.4 
  └── vue@2.4.4 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/twzipcode-vue/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 34% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0512 took 2.2336s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (1:78) on program <template>

<select class="twzipcode twzipcode__zipcode" v-model="value" :id="id" :name="name">
    <option v-for="option in filterByCountyOptions" :value="option.value">{{ option.text }}</option>
</select>

</template>

<script>
import mixin from './mixin'

export default {
    mixins: [mixin],
    props: {
        textTemplate: {
            type: String,
            default: ':id :county :city'
        },
        valueTemplate: {
            type: String,
            default: ':id'
        },
        id: {
            type: String,
            default: 'twzipcode__zipcode'
        },
        name: {
            type: String,
            default: 'zipcode'
        },
        listenToCounty: {
            type: String,
            default: 'twzipcode__county'
        },
        filterByCounty: {
            type: String
        }
    },
    data () {

        let dataName = 'zipcodes'
        let transform = (option, valueDict, textDict) => {
            option.county = textDict[option.id].county
            return option
        }
        let zipcodes = this.getData({
            dataName,
            transform
        })

        return {
            zipcodes: zipcodes,
            county: this.filterByCounty,
            value: this.selected || zipcodes[0].value,
        }
    },
    computed: {
        filterByCountyOptions () {

            if (!this.$data.county) {
                return this.zipcodes
            }

            let filteredList = this.zipcodes.filter(zipcode => zipcode.county === this.$data.county)

            let inList = filteredList.filter(option => option.value === this.$data.value).length > 0
            if (!inList) {
                this.$data.value = filteredList[0].value
            }

            return filteredList
        }
    },
    mounted () {
        if (this.$root.bus) {
            let countyId = this.$props.listenToCounty
            this.$root.bus.$on(`${countyId}:change`, event => {
                this.$data.county = event.value;
            })
        }
    }
}
</script> at SyntaxError: Unexpected token (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1822:12)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1597:21)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/twzipcode-vue/node_modules/twzipcode-vue/src/index.js. Coverage (Term): 50% Coverage (LOC): 80%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
