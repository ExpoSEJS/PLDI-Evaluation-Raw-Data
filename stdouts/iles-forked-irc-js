/root/Targets/iles-forked-irc-js
└─┬ iles-forked-irc-js@0.1.2 
  ├── coloured@0.2.0 
  ├── coloured-log@0.9.6 
  ├── log@1.2.0 
  └── PanPG@0.0.9 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/iles-forked-irc-js/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 15% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0656 took 3.5213s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Octal literal in strict mode (42:14) on program var Colour = {}

/* ------------------------------ Colours ------------------------------ */
Colour.colours =
  { 'black':   30
  , 'red':     31
  , 'green':   32
  , 'yellow':  33
  , 'blue':    34
  , 'magenta': 35
  , 'cyan':    36
  , 'white':   37
  }

Colour.extras =
  { 'clear':     0
  , 'bold':      1
  , 'underline': 4
  , 'reversed':  7
  }

/* ------------------------------ Colour Methods ------------------------------ */
// Colourise a given string based on the passed options.
Colour.colourise = function( string, options ) { var out
  options = options || {}
  out = ''
  if ( options.foreground )
    out += this.colour( options.foreground )
  if ( options.background )
    out += this.colour( options.background, true )
  if ( options.extra )
    out += this.extra( options.extra )
  out += string + this.extra( 'clear' )
  return out
}

// Generate an acceptable colour escape code.
Colour.colour = function( name, background ) { var colour
  if ( ! name in this.colours )
    colour = ''
  else
    colour = "\033[" + ( this.colours[ name ] + ( background ? 10 : 0 ) ) + "m"
  return colour
}

// Generate an acceptable modifier escape code.
Colour.extra = function( name ) { var extra
  if ( ! name in this.extras )
    extra = ''
  else
    extra = "\033[" + this.extras[ name ] + "m"
  return extra
}

/* ------------------------------ Native Additions ------------------------------ */
Colour.extendString = function( nativeProto ) {
  nativeProto = nativeProto || String.prototype
  Object.keys( Colour.colours ).forEach( function( foreground ) {
    // Foregrounds
    Object.defineProperty( nativeProto, foreground, { value: function() {
      return Colour.colourise( this, { foreground: foreground } )
    }})
    // Backgrounds
    Object.keys( Colour.colours ).forEach( function( background ) {
      Object.defineProperty( nativeProto, foreground + '_on_' + background, { value: function() {
        return Colour.colourise( this, { foreground: foreground, background: background } )
      }})
    })
  })

  Object.keys( Colour.extras ).forEach( function( extra ) {
    // Extras
    Object.defineProperty( nativeProto, extra, { value: function() {
      return Colour.colourise( this, { extra: extra } )
    }})
  })
}

/* ------------------------------ Export ------------------------------ */
module.exports = Colour

 at SyntaxError: Octal literal in strict mode (42:14)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readEscapedChar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:3023:16)
    at Parser.pp$7.readString (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2935:23)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2724:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1607:12)
    at Parser.pp$3.parseExpression (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1573:21)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/iles-forked-irc-js/node_modules/iles-forked-irc-js/lib/irc.js. Coverage (Term): 2% Coverage (LOC): 3%
*- File /root/Targets/iles-forked-irc-js/node_modules/iles-forked-irc-js/node_modules/coloured-log/lib/coloured-log.js. Coverage (Term): 7% Coverage (LOC): 9%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
