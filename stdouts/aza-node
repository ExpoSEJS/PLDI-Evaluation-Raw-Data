/root/Targets/aza-node
└── aza-node@0.6.4 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/aza-node/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /4 queued / 1 running / 0 errors / 38% coverage ] ****** [1 done /3 queued / 2 running / 0 errors / 38% coverage ] ****** [1 done /2 queued / 3 running / 0 errors / 38% coverage ] ****** [1 done /1 queued / 4 running / 0 errors / 38% coverage ] ****** [1 done /0 queued / 5 running / 0 errors / 38% coverage ] ****** [1 done /0 queued / 5 running / 0 errors / 38% coverage ] ****** [2 done /1 queued / 5 running / 0 errors / 38% coverage ] ****** [2 done /0 queued / 6 running / 0 errors / 38% coverage ] ****** [2 done /0 queued / 6 running / 0 errors / 38% coverage ] ****** [3 done /0 queued / 6 running / 0 errors / 38% coverage ] ****** [3 done /0 queued / 6 running / 0 errors / 38% coverage ] ****** [4 done /2 queued / 6 running / 0 errors / 38% coverage ] ****** [4 done /1 queued / 7 running / 0 errors / 38% coverage ] ****** [4 done /0 queued / 8 running / 0 errors / 38% coverage ] ****** [4 done /0 queued / 8 running / 0 errors / 38% coverage ] ****** [5 done /3 queued / 8 running / 0 errors / 38% coverage ] ****** [5 done /2 queued / 9 running / 0 errors / 38% coverage ] ****** [5 done /1 queued / 10 running / 0 errors / 38% coverage ] ****** [5 done /0 queued / 11 running / 0 errors / 38% coverage ] ****** [5 done /0 queued / 11 running / 0 errors / 38% coverage ] ****** [6 done /1 queued / 11 running / 1 errors / 38% coverage ] ****** [6 done /0 queued / 12 running / 1 errors / 38% coverage ] ****** [6 done /0 queued / 12 running / 1 errors / 38% coverage ] ****** [7 done /1 queued / 12 running / 1 errors / 38% coverage ] ****** [7 done /0 queued / 13 running / 1 errors / 38% coverage ] ****** [7 done /0 queued / 13 running / 1 errors / 38% coverage ] ****** [8 done /2 queued / 13 running / 1 errors / 38% coverage ] ****** [8 done /1 queued / 14 running / 1 errors / 38% coverage ] ****** [8 done /0 queued / 15 running / 1 errors / 38% coverage ] ****** [8 done /0 queued / 15 running / 1 errors / 38% coverage ] ****** [9 done /3 queued / 15 running / 1 errors / 38% coverage ] ****** [9 done /2 queued / 16 running / 1 errors / 38% coverage ] ****** [9 done /2 queued / 16 running / 1 errors / 38% coverage ] ****** [10 done /4 queued / 16 running / 1 errors / 38% coverage ] ****** [10 done /4 queued / 16 running / 1 errors / 38% coverage ] ****** [11 done /5 queued / 16 running / 2 errors / 38% coverage ] ****** [11 done /5 queued / 16 running / 2 errors / 38% coverage ] ****** [12 done /8 queued / 16 running / 2 errors / 38% coverage ] ****** [12 done /8 queued / 16 running / 2 errors / 38% coverage ] ****** [13 done /10 queued / 16 running / 2 errors / 38% coverage ] ****** [13 done /10 queued / 16 running / 2 errors / 38% coverage ] ****** [14 done /12 queued / 16 running / 2 errors / 38% coverage ] ****** [14 done /12 queued / 16 running / 2 errors / 38% coverage ] ****** [15 done /14 queued / 16 running / 2 errors / 38% coverage ] ****** [15 done /14 queued / 16 running / 2 errors / 38% coverage ] ****** [16 done /17 queued / 16 running / 2 errors / 38% coverage ] ****** [16 done /17 queued / 16 running / 2 errors / 38% coverage ] ****** [17 done /18 queued / 16 running / 2 errors / 38% coverage ] ****** [17 done /18 queued / 16 running / 2 errors / 38% coverage ] ****** [18 done /17 queued / 16 running / 2 errors / 38% coverage ] ****** [18 done /17 queued / 16 running / 2 errors / 38% coverage ] ****** [19 done /20 queued / 16 running / 2 errors / 38% coverage ] ****** [19 done /20 queued / 16 running / 2 errors / 38% coverage ] ****** [20 done /22 queued / 16 running / 3 errors / 38% coverage ] ****** [20 done /22 queued / 16 running / 3 errors / 38% coverage ] ****** [21 done /21 queued / 16 running / 3 errors / 38% coverage ] ****** [21 done /21 queued / 16 running / 3 errors / 38% coverage ] ****** [22 done /23 queued / 16 running / 3 errors / 38% coverage ] ****** [22 done /23 queued / 16 running / 3 errors / 38% coverage ] ****** [23 done /27 queued / 16 running / 3 errors / 38% coverage ] ****** [23 done /27 queued / 16 running / 3 errors / 38% coverage ] ****** [24 done /29 queued / 16 running / 3 errors / 38% coverage ] ****** [24 done /29 queued / 16 running / 3 errors / 38% coverage ] ****** [25 done /28 queued / 16 running / 3 errors / 38% coverage ] ****** [25 done /28 queued / 16 running / 3 errors / 38% coverage ] ****** [26 done /27 queued / 16 running / 3 errors / 38% coverage ] ****** [26 done /27 queued / 16 running / 3 errors / 38% coverage ] ****** [27 done /26 queued / 16 running / 3 errors / 38% coverage ] ****** [27 done /26 queued / 16 running / 3 errors / 38% coverage ] ****** [28 done /27 queued / 16 running / 3 errors / 38% coverage ] ****** [28 done /27 queued / 16 running / 3 errors / 38% coverage ] ****** [29 done /28 queued / 16 running / 3 errors / 38% coverage ] ****** [29 done /28 queued / 16 running / 3 errors / 38% coverage ] ****** [30 done /29 queued / 16 running / 3 errors / 39% coverage ] ****** [30 done /29 queued / 16 running / 3 errors / 39% coverage ] ****** [31 done /28 queued / 16 running / 3 errors / 39% coverage ] ****** [31 done /28 queued / 16 running / 3 errors / 39% coverage ] ****** [32 done /29 queued / 16 running / 3 errors / 39% coverage ] ****** [32 done /29 queued / 16 running / 3 errors / 39% coverage ] ****** [33 done /28 queued / 16 running / 3 errors / 39% coverage ] ****** [33 done /28 queued / 16 running / 3 errors / 39% coverage ] ****** [34 done /27 queued / 16 running / 3 errors / 39% coverage ] ****** [34 done /27 queued / 16 running / 3 errors / 39% coverage ] ****** [35 done /26 queued / 16 running / 4 errors / 39% coverage ] ****** [35 done /26 queued / 16 running / 4 errors / 39% coverage ] ****** [36 done /28 queued / 16 running / 4 errors / 39% coverage ] ****** [36 done /28 queued / 16 running / 4 errors / 39% coverage ] ****** [37 done /30 queued / 16 running / 4 errors / 39% coverage ] ****** [37 done /30 queued / 16 running / 4 errors / 39% coverage ] ****** [38 done /30 queued / 16 running / 4 errors / 39% coverage ] ****** [38 done /30 queued / 16 running / 4 errors / 39% coverage ] ****** [39 done /29 queued / 16 running / 4 errors / 39% coverage ] ****** [39 done /29 queued / 16 running / 4 errors / 39% coverage ] ****** [40 done /31 queued / 16 running / 4 errors / 39% coverage ] ****** [40 done /31 queued / 16 running / 4 errors / 39% coverage ] ****** [41 done /33 queued / 16 running / 4 errors / 39% coverage ] ****** [41 done /33 queued / 16 running / 4 errors / 39% coverage ] ****** [42 done /34 queued / 16 running / 5 errors / 37% coverage ] ****** [42 done /34 queued / 16 running / 5 errors / 37% coverage ] ****** [43 done /35 queued / 16 running / 5 errors / 37% coverage ] ****** [43 done /35 queued / 16 running / 5 errors / 37% coverage ] ****** [44 done /36 queued / 16 running / 5 errors / 37% coverage ] ****** [44 done /36 queued / 16 running / 5 errors / 37% coverage ] ****** [45 done /35 queued / 16 running / 5 errors / 37% coverage ] ****** [45 done /35 queued / 16 running / 5 errors / 37% coverage ] ****** [46 done /36 queued / 16 running / 5 errors / 37% coverage ] ****** [46 done /36 queued / 16 running / 5 errors / 37% coverage ] ****** [47 done /36 queued / 16 running / 5 errors / 37% coverage ] ****** [47 done /36 queued / 16 running / 5 errors / 37% coverage ] ****** [48 done /35 queued / 16 running / 5 errors / 37% coverage ] ****** [48 done /35 queued / 16 running / 5 errors / 37% coverage ] ****** [49 done /35 queued / 16 running / 5 errors / 37% coverage ] ****** [49 done /35 queued / 16 running / 5 errors / 37% coverage ] ****** [50 done /37 queued / 16 running / 5 errors / 37% coverage ] ****** [50 done /37 queued / 16 running / 5 errors / 37% coverage ] ****** [51 done /36 queued / 16 running / 5 errors / 37% coverage ] ****** [51 done /36 queued / 16 running / 5 errors / 37% coverage ] ****** [52 done /38 queued / 16 running / 5 errors / 37% coverage ] ****** [52 done /38 queued / 16 running / 5 errors / 37% coverage ] ****** [53 done /41 queued / 16 running / 5 errors / 37% coverage ] ****** [53 done /41 queued / 16 running / 5 errors / 37% coverage ] ****** [54 done /41 queued / 16 running / 5 errors / 37% coverage ] ****** [54 done /41 queued / 16 running / 5 errors / 37% coverage ] ****** [55 done /42 queued / 16 running / 5 errors / 37% coverage ] ****** [55 done /42 queued / 16 running / 5 errors / 37% coverage ] ****** [56 done /41 queued / 16 running / 5 errors / 37% coverage ] ****** [56 done /41 queued / 16 running / 5 errors / 37% coverage ] ****** [57 done /43 queued / 16 running / 5 errors / 37% coverage ] ****** [57 done /43 queued / 16 running / 5 errors / 37% coverage ] ****** [58 done /44 queued / 16 running / 5 errors / 37% coverage ] ****** [58 done /44 queued / 16 running / 5 errors / 37% coverage ] ****** [59 done /45 queued / 16 running / 5 errors / 37% coverage ] ****** [59 done /45 queued / 16 running / 5 errors / 37% coverage ] ****** [60 done /46 queued / 16 running / 5 errors / 37% coverage ] ****** [60 done /46 queued / 16 running / 5 errors / 37% coverage ] ****** [61 done /48 queued / 16 running / 5 errors / 37% coverage ] ****** [61 done /48 queued / 16 running / 5 errors / 37% coverage ] ****** [62 done /47 queued / 16 running / 5 errors / 37% coverage ] ****** [62 done /47 queued / 16 running / 5 errors / 37% coverage ] ****** [63 done /49 queued / 16 running / 5 errors / 37% coverage ] ****** [63 done /49 queued / 16 running / 5 errors / 37% coverage ] ****** [64 done /50 queued / 16 running / 5 errors / 37% coverage ] ****** [64 done /50 queued / 16 running / 5 errors / 37% coverage ] ****** [65 done /50 queued / 16 running / 5 errors / 37% coverage ] ****** [65 done /50 queued / 16 running / 5 errors / 37% coverage ] ****** [66 done /49 queued / 16 running / 5 errors / 37% coverage ] ****** [66 done /49 queued / 16 running / 5 errors / 37% coverage ] ****** [67 done /48 queued / 16 running / 5 errors / 37% coverage ] ****** [67 done /48 queued / 16 running / 5 errors / 37% coverage ] ****** [68 done /47 queued / 16 running / 5 errors / 37% coverage ] ****** [68 done /47 queued / 16 running / 5 errors / 37% coverage ] ****** [69 done /49 queued / 16 running / 5 errors / 37% coverage ] ****** [69 done /49 queued / 16 running / 5 errors / 37% coverage ] ****** [70 done /49 queued / 16 running / 5 errors / 37% coverage ] ****** [70 done /49 queued / 16 running / 5 errors / 37% coverage ] ****** [71 done /52 queued / 16 running / 5 errors / 37% coverage ] ****** [71 done /52 queued / 16 running / 5 errors / 37% coverage ] ****** [72 done /54 queued / 16 running / 5 errors / 37% coverage ] ****** [72 done /54 queued / 16 running / 5 errors / 37% coverage ] ****** [73 done /55 queued / 16 running / 5 errors / 37% coverage ] ****** [73 done /55 queued / 16 running / 5 errors / 37% coverage ] ****** [74 done /56 queued / 16 running / 5 errors / 37% coverage ] ****** [74 done /56 queued / 16 running / 5 errors / 37% coverage ] ****** [75 done /57 queued / 16 running / 5 errors / 37% coverage ] ****** [75 done /57 queued / 16 running / 5 errors / 37% coverage ] ****** [76 done /56 queued / 16 running / 5 errors / 37% coverage ] ****** [76 done /56 queued / 16 running / 5 errors / 37% coverage ] ****** [77 done /57 queued / 16 running / 5 errors / 37% coverage ] ****** [77 done /57 queued / 16 running / 5 errors / 37% coverage ] ****** [78 done /56 queued / 16 running / 6 errors / 37% coverage ] ****** [78 done /56 queued / 16 running / 6 errors / 37% coverage ] ****** [79 done /56 queued / 16 running / 6 errors / 37% coverage ] ****** [79 done /56 queued / 16 running / 6 errors / 37% coverage ] ****** [80 done /58 queued / 16 running / 6 errors / 37% coverage ] ****** [80 done /58 queued / 16 running / 6 errors / 37% coverage ] ****** [81 done /62 queued / 16 running / 6 errors / 37% coverage ] ****** [81 done /62 queued / 16 running / 6 errors / 37% coverage ] ****** [82 done /61 queued / 16 running / 6 errors / 37% coverage ] ****** [82 done /61 queued / 16 running / 6 errors / 37% coverage ] ****** [83 done /62 queued / 16 running / 6 errors / 37% coverage ] ****** [83 done /62 queued / 16 running / 6 errors / 37% coverage ] ****** [84 done /65 queued / 16 running / 6 errors / 37% coverage ] ****** [84 done /65 queued / 16 running / 6 errors / 37% coverage ] ****** [85 done /67 queued / 16 running / 6 errors / 37% coverage ] ****** [85 done /67 queued / 16 running / 6 errors / 37% coverage ] ****** [86 done /66 queued / 16 running / 6 errors / 37% coverage ] ****** [86 done /66 queued / 16 running / 6 errors / 37% coverage ] ****** [87 done /65 queued / 16 running / 6 errors / 37% coverage ] ****** [87 done /65 queued / 16 running / 6 errors / 37% coverage ] ****** [88 done /66 queued / 16 running / 6 errors / 37% coverage ] ****** [88 done /66 queued / 16 running / 6 errors / 37% coverage ] ****** [89 done /68 queued / 16 running / 6 errors / 37% coverage ] ****** [89 done /68 queued / 16 running / 6 errors / 37% coverage ] ****** [90 done /69 queued / 16 running / 7 errors / 37% coverage ] ****** [90 done /69 queued / 16 running / 7 errors / 37% coverage ] ****** [91 done /68 queued / 16 running / 7 errors / 37% coverage ] ****** [91 done /68 queued / 16 running / 7 errors / 37% coverage ] ****** [92 done /69 queued / 16 running / 7 errors / 37% coverage ] ****** [92 done /69 queued / 16 running / 7 errors / 37% coverage ] ****** [93 done /70 queued / 16 running / 7 errors / 37% coverage ] ****** [93 done /70 queued / 16 running / 7 errors / 37% coverage ] ****** [94 done /70 queued / 16 running / 7 errors / 37% coverage ] ****** [94 done /70 queued / 16 running / 7 errors / 37% coverage ] ****** [95 done /69 queued / 16 running / 7 errors / 37% coverage ] ****** [95 done /69 queued / 16 running / 7 errors / 37% coverage ] ****** [96 done /71 queued / 16 running / 7 errors / 37% coverage ] ****** [96 done /71 queued / 16 running / 7 errors / 37% coverage ] ****** [97 done /74 queued / 16 running / 7 errors / 37% coverage ] ****** [97 done /74 queued / 16 running / 7 errors / 37% coverage ] ****** [98 done /73 queued / 16 running / 7 errors / 37% coverage ] ****** [98 done /73 queued / 16 running / 7 errors / 37% coverage ] ****** [99 done /76 queued / 16 running / 7 errors / 37% coverage ] ****** [99 done /76 queued / 16 running / 7 errors / 37% coverage ] ****** [100 done /75 queued / 16 running / 7 errors / 37% coverage ] ****** [100 done /75 queued / 16 running / 7 errors / 37% coverage ] ****** [101 done /75 queued / 16 running / 7 errors / 37% coverage ] ****** [101 done /75 queued / 16 running / 7 errors / 37% coverage ] ****** [102 done /75 queued / 16 running / 7 errors / 37% coverage ] ****** [102 done /75 queued / 16 running / 7 errors / 37% coverage ] ****** [103 done /79 queued / 16 running / 7 errors / 37% coverage ] ****** [103 done /79 queued / 16 running / 7 errors / 37% coverage ] ****** [104 done /80 queued / 16 running / 8 errors / 37% coverage ] ****** [104 done /80 queued / 16 running / 8 errors / 37% coverage ] ****** [105 done /79 queued / 16 running / 9 errors / 37% coverage ] ****** [105 done /79 queued / 16 running / 9 errors / 37% coverage ] ****** [106 done /81 queued / 16 running / 10 errors / 37% coverage ] ****** [106 done /81 queued / 16 running / 10 errors / 37% coverage ] ****** [107 done /80 queued / 16 running / 10 errors / 37% coverage ] ****** [107 done /80 queued / 16 running / 10 errors / 37% coverage ] ****** [108 done /79 queued / 16 running / 10 errors / 37% coverage ] ****** [108 done /79 queued / 16 running / 10 errors / 37% coverage ] ****** [109 done /78 queued / 16 running / 10 errors / 37% coverage ] ****** [109 done /78 queued / 16 running / 10 errors / 37% coverage ] ****** [110 done /80 queued / 16 running / 10 errors / 37% coverage ] ****** [110 done /80 queued / 16 running / 10 errors / 37% coverage ] ****** [111 done /81 queued / 16 running / 10 errors / 37% coverage ] ****** [111 done /81 queued / 16 running / 10 errors / 37% coverage ] ****** [112 done /82 queued / 16 running / 10 errors / 37% coverage ] ****** [112 done /82 queued / 16 running / 10 errors / 37% coverage ] ****** [113 done /81 queued / 16 running / 10 errors / 37% coverage ] ****** [113 done /81 queued / 16 running / 10 errors / 37% coverage ] ****** [114 done /82 queued / 16 running / 10 errors / 37% coverage ] ****** [114 done /82 queued / 16 running / 10 errors / 37% coverage ] ****** [115 done /81 queued / 16 running / 10 errors / 37% coverage ] ****** [115 done /81 queued / 16 running / 10 errors / 37% coverage ] ****** [116 done /85 queued / 16 running / 10 errors / 37% coverage ] ****** [116 done /85 queued / 16 running / 10 errors / 37% coverage ] ****** [117 done /86 queued / 16 running / 10 errors / 37% coverage ] ****** [117 done /86 queued / 16 running / 10 errors / 37% coverage ] ****** [118 done /88 queued / 16 running / 10 errors / 37% coverage ] ****** [118 done /88 queued / 16 running / 10 errors / 37% coverage ] ****** [119 done /88 queued / 16 running / 10 errors / 37% coverage ] ****** [119 done /88 queued / 16 running / 10 errors / 37% coverage ] ****** [120 done /88 queued / 16 running / 11 errors / 37% coverage ] ****** [120 done /88 queued / 16 running / 11 errors / 37% coverage ] ****** [121 done /87 queued / 16 running / 11 errors / 37% coverage ] ****** [121 done /87 queued / 16 running / 11 errors / 37% coverage ] ****** [122 done /88 queued / 16 running / 11 errors / 37% coverage ] ****** [122 done /88 queued / 16 running / 11 errors / 37% coverage ] ****** [123 done /87 queued / 16 running / 12 errors / 37% coverage ] ****** [123 done /87 queued / 16 running / 12 errors / 37% coverage ] ****** [124 done /86 queued / 16 running / 12 errors / 37% coverage ] ****** [124 done /86 queued / 16 running / 12 errors / 37% coverage ] ****** [125 done /85 queued / 16 running / 12 errors / 37% coverage ] ****** [125 done /85 queued / 16 running / 12 errors / 37% coverage ] ****** [126 done /84 queued / 16 running / 12 errors / 37% coverage ] ****** [126 done /84 queued / 16 running / 12 errors / 37% coverage ] ****** [127 done /85 queued / 16 running / 13 errors / 37% coverage ] ****** [127 done /85 queued / 16 running / 13 errors / 37% coverage ] ****** [128 done /87 queued / 16 running / 13 errors / 37% coverage ] ****** [128 done /87 queued / 16 running / 13 errors / 37% coverage ] ****** [129 done /87 queued / 16 running / 13 errors / 37% coverage ] ****** [129 done /87 queued / 16 running / 13 errors / 37% coverage ] ****** [130 done /86 queued / 16 running / 13 errors / 37% coverage ] ****** [130 done /86 queued / 16 running / 13 errors / 37% coverage ] ****** [131 done /86 queued / 16 running / 13 errors / 37% coverage ] ****** [131 done /86 queued / 16 running / 13 errors / 37% coverage ] ****** [132 done /88 queued / 16 running / 13 errors / 37% coverage ] ****** [132 done /88 queued / 16 running / 13 errors / 37% coverage ] ****** [133 done /91 queued / 16 running / 13 errors / 37% coverage ] ****** [133 done /91 queued / 16 running / 13 errors / 37% coverage ] ****** [134 done /92 queued / 16 running / 13 errors / 37% coverage ] ****** [134 done /92 queued / 16 running / 13 errors / 37% coverage ] ****** [135 done /96 queued / 16 running / 13 errors / 37% coverage ] ****** [135 done /96 queued / 16 running / 13 errors / 37% coverage ] ****** [136 done /95 queued / 16 running / 14 errors / 37% coverage ] ****** [136 done /95 queued / 16 running / 14 errors / 37% coverage ] ****** [137 done /94 queued / 16 running / 15 errors / 37% coverage ] ****** [137 done /94 queued / 16 running / 15 errors / 37% coverage ] ****** [138 done /98 queued / 16 running / 15 errors / 37% coverage ] ****** [138 done /98 queued / 16 running / 15 errors / 37% coverage ] ****** [139 done /97 queued / 16 running / 16 errors / 37% coverage ] ****** [139 done /97 queued / 16 running / 16 errors / 37% coverage ] ****** [140 done /100 queued / 16 running / 16 errors / 37% coverage ] ****** [140 done /100 queued / 16 running / 16 errors / 37% coverage ] ****** [141 done /100 queued / 16 running / 16 errors / 37% coverage ] ****** [141 done /100 queued / 16 running / 16 errors / 37% coverage ] ****** [142 done /99 queued / 16 running / 16 errors / 37% coverage ] ****** [142 done /99 queued / 16 running / 16 errors / 37% coverage ] ****** [143 done /100 queued / 16 running / 16 errors / 37% coverage ] ****** [143 done /100 queued / 16 running / 16 errors / 37% coverage ] ****** [144 done /101 queued / 16 running / 16 errors / 37% coverage ] ****** [144 done /101 queued / 16 running / 16 errors / 37% coverage ] ****** [145 done /101 queued / 16 running / 16 errors / 37% coverage ] ****** [145 done /101 queued / 16 running / 16 errors / 37% coverage ] ****** [146 done /104 queued / 16 running / 16 errors / 37% coverage ] ****** [146 done /104 queued / 16 running / 16 errors / 37% coverage ] ****** [147 done /103 queued / 16 running / 16 errors / 37% coverage ] ****** [147 done /103 queued / 16 running / 16 errors / 37% coverage ] ****** [148 done /102 queued / 16 running / 16 errors / 37% coverage ] ****** [148 done /102 queued / 16 running / 16 errors / 37% coverage ] ****** [149 done /103 queued / 16 running / 16 errors / 37% coverage ] ****** [149 done /103 queued / 16 running / 16 errors / 37% coverage ] ****** [150 done /103 queued / 16 running / 16 errors / 37% coverage ] ****** [150 done /103 queued / 16 running / 16 errors / 37% coverage ] ****** [151 done /104 queued / 16 running / 16 errors / 37% coverage ] ****** [151 done /104 queued / 16 running / 16 errors / 37% coverage ] ****** [152 done /105 queued / 16 running / 16 errors / 37% coverage ] ****** [152 done /105 queued / 16 running / 16 errors / 37% coverage ] ****** [153 done /105 queued / 16 running / 16 errors / 37% coverage ] ****** [153 done /105 queued / 16 running / 16 errors / 37% coverage ] ****** [154 done /108 queued / 16 running / 16 errors / 37% coverage ] ****** [154 done /108 queued / 16 running / 16 errors / 37% coverage ] ****** [155 done /108 queued / 16 running / 16 errors / 37% coverage ] ****** [155 done /108 queued / 16 running / 16 errors / 37% coverage ] ****** [156 done /108 queued / 16 running / 16 errors / 37% coverage ] ****** [156 done /108 queued / 16 running / 16 errors / 37% coverage ] ****** [157 done /109 queued / 16 running / 16 errors / 37% coverage ] ****** [157 done /109 queued / 16 running / 16 errors / 37% coverage ] ****** [158 done /108 queued / 16 running / 16 errors / 37% coverage ] ****** [158 done /108 queued / 16 running / 16 errors / 37% coverage ] ****** [159 done /107 queued / 16 running / 16 errors / 37% coverage ] ****** [159 done /107 queued / 16 running / 16 errors / 37% coverage ] ****** [160 done /109 queued / 16 running / 16 errors / 37% coverage ] ****** [160 done /109 queued / 16 running / 16 errors / 37% coverage ] ****** [161 done /108 queued / 16 running / 16 errors / 37% coverage ] ****** [161 done /108 queued / 16 running / 16 errors / 37% coverage ] ****** [162 done /109 queued / 16 running / 16 errors / 37% coverage ] ****** [162 done /109 queued / 16 running / 16 errors / 37% coverage ] ****** [163 done /111 queued / 16 running / 16 errors / 37% coverage ] ****** [163 done /111 queued / 16 running / 16 errors / 37% coverage ] ****** [164 done /112 queued / 16 running / 16 errors / 37% coverage ] ****** [164 done /112 queued / 16 running / 16 errors / 37% coverage ] ****** [165 done /116 queued / 16 running / 16 errors / 37% coverage ] ****** [165 done /116 queued / 16 running / 16 errors / 37% coverage ] ****** [166 done /115 queued / 16 running / 16 errors / 37% coverage ] ****** [166 done /115 queued / 16 running / 16 errors / 37% coverage ] ****** [167 done /114 queued / 16 running / 16 errors / 37% coverage ] ****** [167 done /114 queued / 16 running / 16 errors / 37% coverage ] ****** [168 done /115 queued / 16 running / 16 errors / 37% coverage ] ****** [168 done /115 queued / 16 running / 16 errors / 37% coverage ] ****** [169 done /114 queued / 16 running / 16 errors / 37% coverage ] ****** [169 done /114 queued / 16 running / 16 errors / 37% coverage ] ****** [170 done /116 queued / 16 running / 16 errors / 37% coverage ] ****** [170 done /116 queued / 16 running / 16 errors / 37% coverage ] ****** [171 done /115 queued / 16 running / 16 errors / 37% coverage ] ****** [171 done /115 queued / 16 running / 16 errors / 37% coverage ] ****** [172 done /119 queued / 16 running / 16 errors / 37% coverage ] ****** [172 done /119 queued / 16 running / 16 errors / 37% coverage ] ****** [173 done /118 queued / 16 running / 16 errors / 37% coverage ] ****** [173 done /118 queued / 16 running / 16 errors / 37% coverage ] ****** [174 done /117 queued / 16 running / 16 errors / 37% coverage ] ****** [174 done /117 queued / 16 running / 16 errors / 37% coverage ] ****** [175 done /118 queued / 16 running / 16 errors / 37% coverage ] ****** [175 done /118 queued / 16 running / 16 errors / 37% coverage ] ****** [176 done /118 queued / 16 running / 16 errors / 37% coverage ] ****** [176 done /118 queued / 16 running / 16 errors / 37% coverage ] ****** [177 done /117 queued / 16 running / 16 errors / 37% coverage ] ****** [177 done /117 queued / 16 running / 16 errors / 37% coverage ] ****** [178 done /118 queued / 16 running / 16 errors / 37% coverage ] ****** [178 done /118 queued / 16 running / 16 errors / 37% coverage ] ****** [179 done /120 queued / 16 running / 16 errors / 37% coverage ] ****** [179 done /120 queued / 16 running / 16 errors / 37% coverage ] ****** [180 done /120 queued / 16 running / 16 errors / 37% coverage ] ****** [180 done /120 queued / 16 running / 16 errors / 37% coverage ] ****** [181 done /122 queued / 16 running / 17 errors / 33% coverage ] ****** [181 done /122 queued / 16 running / 17 errors / 33% coverage ] ****** [182 done /123 queued / 16 running / 17 errors / 33% coverage ] ****** [182 done /123 queued / 16 running / 17 errors / 33% coverage ] ****** [183 done /122 queued / 16 running / 17 errors / 33% coverage ] ****** [183 done /122 queued / 16 running / 17 errors / 33% coverage ] ****** [184 done /122 queued / 16 running / 17 errors / 33% coverage ] ****** [184 done /122 queued / 16 running / 17 errors / 33% coverage ] ****** [185 done /124 queued / 16 running / 17 errors / 33% coverage ] ****** [185 done /124 queued / 16 running / 17 errors / 33% coverage ] ****** [186 done /126 queued / 16 running / 17 errors / 33% coverage ] ****** [186 done /126 queued / 16 running / 17 errors / 33% coverage ] ****** [187 done /131 queued / 16 running / 17 errors / 33% coverage ] ****** [187 done /131 queued / 16 running / 17 errors / 33% coverage ] ****** [188 done /132 queued / 16 running / 17 errors / 33% coverage ] ****** [188 done /132 queued / 16 running / 17 errors / 33% coverage ] ****** [189 done /132 queued / 16 running / 17 errors / 33% coverage ] ****** [189 done /132 queued / 16 running / 17 errors / 33% coverage ] ****** [190 done /135 queued / 16 running / 17 errors / 33% coverage ] ****** [190 done /135 queued / 16 running / 17 errors / 33% coverage ] ****** [191 done /135 queued / 16 running / 17 errors / 33% coverage ] ****** [191 done /135 queued / 16 running / 17 errors / 33% coverage ] ****** [192 done /134 queued / 16 running / 17 errors / 33% coverage ] ****** [192 done /134 queued / 16 running / 17 errors / 33% coverage ] ****** [193 done /135 queued / 16 running / 18 errors / 33% coverage ] ****** [193 done /135 queued / 16 running / 18 errors / 33% coverage ] ****** [194 done /139 queued / 16 running / 18 errors / 33% coverage ] ****** [194 done /139 queued / 16 running / 18 errors / 33% coverage ] ****** [195 done /138 queued / 16 running / 18 errors / 33% coverage ] ****** [195 done /138 queued / 16 running / 18 errors / 33% coverage ] ****** [196 done /137 queued / 16 running / 18 errors / 33% coverage ] ****** [196 done /137 queued / 16 running / 18 errors / 33% coverage ] ****** [197 done /137 queued / 16 running / 18 errors / 33% coverage ] ****** [197 done /137 queued / 16 running / 18 errors / 33% coverage ] ****** [198 done /138 queued / 16 running / 18 errors / 33% coverage ] ****** [198 done /138 queued / 16 running / 18 errors / 33% coverage ] ****** [199 done /139 queued / 16 running / 18 errors / 33% coverage ] ****** [199 done /139 queued / 16 running / 18 errors / 33% coverage ] ****** [200 done /142 queued / 16 running / 18 errors / 33% coverage ] ****** [200 done /142 queued / 16 running / 18 errors / 33% coverage ] ****** [201 done /147 queued / 16 running / 18 errors / 33% coverage ] ****** [201 done /147 queued / 16 running / 18 errors / 33% coverage ] ****** [202 done /147 queued / 16 running / 18 errors / 33% coverage ] ****** [202 done /147 queued / 16 running / 18 errors / 33% coverage ] ****** [203 done /147 queued / 16 running / 18 errors / 33% coverage ] ****** [203 done /147 queued / 16 running / 18 errors / 33% coverage ] ****** [204 done /147 queued / 16 running / 19 errors / 33% coverage ] ****** [204 done /147 queued / 16 running / 19 errors / 33% coverage ] ****** [205 done /148 queued / 16 running / 19 errors / 33% coverage ] ****** [205 done /148 queued / 16 running / 19 errors / 33% coverage ] ****** [206 done /149 queued / 16 running / 19 errors / 33% coverage ] ****** [206 done /149 queued / 16 running / 19 errors / 33% coverage ] ****** [207 done /150 queued / 16 running / 19 errors / 33% coverage ] ****** [207 done /150 queued / 16 running / 19 errors / 33% coverage ] ****** [208 done /152 queued / 16 running / 19 errors / 33% coverage ] ****** [208 done /152 queued / 16 running / 19 errors / 33% coverage ] ****** [209 done /153 queued / 16 running / 19 errors / 33% coverage ] ****** [209 done /153 queued / 16 running / 19 errors / 33% coverage ] ****** [210 done /155 queued / 16 running / 19 errors / 33% coverage ] ****** [210 done /155 queued / 16 running / 19 errors / 33% coverage ] ****** [211 done /154 queued / 16 running / 19 errors / 33% coverage ] ****** [211 done /154 queued / 16 running / 19 errors / 33% coverage ] ****** [212 done /155 queued / 16 running / 20 errors / 33% coverage ] ****** [212 done /155 queued / 16 running / 20 errors / 33% coverage ] ****** [213 done /156 queued / 16 running / 20 errors / 33% coverage ] ****** [213 done /156 queued / 16 running / 20 errors / 33% coverage ] ****** [214 done /161 queued / 16 running / 20 errors / 33% coverage ] ****** [214 done /161 queued / 16 running / 20 errors / 33% coverage ] ****** [215 done /160 queued / 16 running / 20 errors / 33% coverage ] ****** [215 done /160 queued / 16 running / 20 errors / 33% coverage ] ****** [216 done /159 queued / 16 running / 20 errors / 33% coverage ] ****** [216 done /159 queued / 16 running / 20 errors / 33% coverage ] ****** [217 done /163 queued / 16 running / 20 errors / 33% coverage ] ****** [217 done /163 queued / 16 running / 20 errors / 33% coverage ] ****** [218 done /164 queued / 16 running / 20 errors / 33% coverage ] ****** [218 done /164 queued / 16 running / 20 errors / 33% coverage ] ****** [219 done /163 queued / 16 running / 20 errors / 33% coverage ] ****** [219 done /163 queued / 16 running / 20 errors / 33% coverage ] ****** [220 done /164 queued / 16 running / 20 errors / 33% coverage ] ****** [220 done /164 queued / 16 running / 20 errors / 33% coverage ] ****** [221 done /165 queued / 16 running / 20 errors / 33% coverage ] ****** [221 done /165 queued / 16 running / 20 errors / 33% coverage ] ****** [222 done /167 queued / 16 running / 20 errors / 33% coverage ] ****** [222 done /167 queued / 16 running / 20 errors / 33% coverage ] ****** [223 done /167 queued / 16 running / 20 errors / 33% coverage ] ****** [223 done /167 queued / 16 running / 20 errors / 33% coverage ] ****** [224 done /168 queued / 16 running / 20 errors / 33% coverage ] ****** [224 done /168 queued / 16 running / 20 errors / 33% coverage ] ****** [225 done /172 queued / 16 running / 20 errors / 33% coverage ] ****** [225 done /172 queued / 16 running / 20 errors / 33% coverage ] ****** [226 done /176 queued / 16 running / 21 errors / 33% coverage ] ****** [226 done /176 queued / 16 running / 21 errors / 33% coverage ] ****** [227 done /175 queued / 16 running / 21 errors / 33% coverage ] ****** [227 done /175 queued / 16 running / 21 errors / 33% coverage ] ****** [228 done /177 queued / 16 running / 21 errors / 33% coverage ] ****** [228 done /177 queued / 16 running / 21 errors / 33% coverage ] ****** [229 done /177 queued / 16 running / 21 errors / 33% coverage ] ****** [229 done /177 queued / 16 running / 21 errors / 33% coverage ] ****** [230 done /178 queued / 16 running / 21 errors / 33% coverage ] ****** [230 done /178 queued / 16 running / 21 errors / 33% coverage ] ****** [231 done /178 queued / 16 running / 21 errors / 33% coverage ] ****** [231 done /178 queued / 16 running / 21 errors / 33% coverage ] ****** [232 done /180 queued / 16 running / 21 errors / 33% coverage ] ****** [232 done /180 queued / 16 running / 21 errors / 33% coverage ] ****** [233 done /181 queued / 16 running / 21 errors / 33% coverage ] ****** [233 done /181 queued / 16 running / 21 errors / 33% coverage ] ****** [234 done /181 queued / 16 running / 21 errors / 33% coverage ] ****** [234 done /181 queued / 16 running / 21 errors / 33% coverage ] ****** [235 done /182 queued / 16 running / 21 errors / 33% coverage ] ****** [235 done /182 queued / 16 running / 21 errors / 33% coverage ] ****** [236 done /181 queued / 16 running / 21 errors / 33% coverage ] ****** [236 done /181 queued / 16 running / 21 errors / 33% coverage ] ****** [237 done /182 queued / 16 running / 22 errors / 33% coverage ] ****** [237 done /182 queued / 16 running / 22 errors / 33% coverage ] ****** [238 done /182 queued / 16 running / 22 errors / 33% coverage ] ****** [238 done /182 queued / 16 running / 22 errors / 33% coverage ] ****** [239 done /181 queued / 16 running / 22 errors / 33% coverage ] ****** [239 done /181 queued / 16 running / 22 errors / 33% coverage ] ****** [240 done /182 queued / 16 running / 22 errors / 33% coverage ] ****** [240 done /182 queued / 16 running / 22 errors / 33% coverage ] ****** [241 done /182 queued / 16 running / 22 errors / 33% coverage ] ****** [241 done /182 queued / 16 running / 22 errors / 33% coverage ] ****** [242 done /182 queued / 16 running / 22 errors / 33% coverage ] ****** [242 done /182 queued / 16 running / 22 errors / 33% coverage ] ****** [243 done /181 queued / 16 running / 22 errors / 33% coverage ] ****** [243 done /181 queued / 16 running / 22 errors / 33% coverage ] ****** [244 done /181 queued / 16 running / 22 errors / 33% coverage ] ****** [244 done /181 queued / 16 running / 22 errors / 33% coverage ] ****** [245 done /185 queued / 16 running / 22 errors / 33% coverage ] ****** [245 done /185 queued / 16 running / 22 errors / 33% coverage ] ****** [246 done /184 queued / 16 running / 22 errors / 33% coverage ] ****** [246 done /184 queued / 16 running / 22 errors / 33% coverage ] ****** [247 done /183 queued / 16 running / 22 errors / 33% coverage ] ****** [247 done /183 queued / 16 running / 22 errors / 33% coverage ] ****** [248 done /184 queued / 16 running / 22 errors / 33% coverage ] ****** [248 done /184 queued / 16 running / 22 errors / 33% coverage ] ****** [249 done /183 queued / 16 running / 22 errors / 33% coverage ] ****** [249 done /183 queued / 16 running / 22 errors / 33% coverage ] ****** [250 done /182 queued / 16 running / 22 errors / 33% coverage ] ****** [250 done /182 queued / 16 running / 22 errors / 33% coverage ] ****** [251 done /181 queued / 16 running / 23 errors / 33% coverage ] ****** [251 done /181 queued / 16 running / 23 errors / 33% coverage ] ****** [252 done /183 queued / 16 running / 23 errors / 33% coverage ] ****** [252 done /183 queued / 16 running / 23 errors / 33% coverage ] ****** [253 done /185 queued / 16 running / 23 errors / 33% coverage ] ****** [253 done /185 queued / 16 running / 23 errors / 33% coverage ] ****** [254 done /184 queued / 16 running / 24 errors / 33% coverage ] ****** [254 done /184 queued / 16 running / 24 errors / 33% coverage ] ****** [255 done /184 queued / 16 running / 24 errors / 33% coverage ] ****** [255 done /184 queued / 16 running / 24 errors / 33% coverage ] ****** [256 done /183 queued / 16 running / 24 errors / 33% coverage ] ****** [256 done /183 queued / 16 running / 24 errors / 33% coverage ] ****** [257 done /186 queued / 16 running / 24 errors / 33% coverage ] ****** [257 done /186 queued / 16 running / 24 errors / 33% coverage ] ****** [258 done /188 queued / 16 running / 24 errors / 33% coverage ] ****** [258 done /188 queued / 16 running / 24 errors / 33% coverage ] ****** [259 done /188 queued / 16 running / 24 errors / 33% coverage ] ****** [259 done /188 queued / 16 running / 24 errors / 33% coverage ] ****** [260 done /187 queued / 16 running / 24 errors / 33% coverage ] ****** [260 done /187 queued / 16 running / 24 errors / 33% coverage ] ****** [261 done /187 queued / 16 running / 24 errors / 33% coverage ] ****** [261 done /187 queued / 16 running / 24 errors / 33% coverage ] ****** [262 done /192 queued / 16 running / 24 errors / 33% coverage ] ****** [262 done /192 queued / 16 running / 24 errors / 33% coverage ] ****** [263 done /191 queued / 16 running / 25 errors / 33% coverage ] ****** [263 done /191 queued / 16 running / 25 errors / 33% coverage ] ****** [264 done /190 queued / 16 running / 25 errors / 33% coverage ] ****** [264 done /190 queued / 16 running / 25 errors / 33% coverage ] ****** [265 done /189 queued / 16 running / 25 errors / 33% coverage ] ****** [265 done /189 queued / 16 running / 25 errors / 33% coverage ] ****** [266 done /188 queued / 16 running / 26 errors / 33% coverage ] ****** [266 done /188 queued / 16 running / 26 errors / 33% coverage ] ****** [267 done /189 queued / 16 running / 26 errors / 33% coverage ] ****** [267 done /189 queued / 16 running / 26 errors / 33% coverage ] ****** [268 done /188 queued / 16 running / 26 errors / 33% coverage ] ****** [268 done /188 queued / 16 running / 26 errors / 33% coverage ] ****** [269 done /188 queued / 16 running / 26 errors / 33% coverage ] ****** [269 done /188 queued / 16 running / 26 errors / 33% coverage ] ****** [270 done /189 queued / 16 running / 26 errors / 33% coverage ] ****** [270 done /189 queued / 16 running / 26 errors / 33% coverage ] ****** [271 done /190 queued / 16 running / 26 errors / 33% coverage ] ****** [271 done /190 queued / 16 running / 26 errors / 33% coverage ] ****** [272 done /189 queued / 16 running / 26 errors / 33% coverage ] ****** [272 done /189 queued / 16 running / 26 errors / 33% coverage ] ****** [273 done /194 queued / 16 running / 26 errors / 33% coverage ] ****** [273 done /194 queued / 16 running / 26 errors / 33% coverage ] ****** [274 done /193 queued / 16 running / 26 errors / 33% coverage ] ****** [274 done /193 queued / 16 running / 26 errors / 33% coverage ] ****** [275 done /192 queued / 16 running / 26 errors / 33% coverage ] ****** [275 done /192 queued / 16 running / 26 errors / 33% coverage ] ****** [276 done /192 queued / 16 running / 26 errors / 33% coverage ] ****** [276 done /192 queued / 16 running / 26 errors / 33% coverage ] ****** [277 done /193 queued / 16 running / 26 errors / 33% coverage ] ****** [277 done /193 queued / 16 running / 26 errors / 33% coverage ] ****** [278 done /194 queued / 16 running / 26 errors / 33% coverage ] ****** [278 done /194 queued / 16 running / 26 errors / 33% coverage ] ****** [279 done /195 queued / 16 running / 26 errors / 33% coverage ] ****** [279 done /195 queued / 16 running / 26 errors / 33% coverage ] ****** [280 done /194 queued / 16 running / 26 errors / 33% coverage ] ****** [280 done /194 queued / 16 running / 26 errors / 33% coverage ] ****** [281 done /193 queued / 16 running / 26 errors / 33% coverage ] ****** [281 done /193 queued / 16 running / 26 errors / 33% coverage ] ****** [282 done /194 queued / 16 running / 26 errors / 33% coverage ] ****** [282 done /194 queued / 16 running / 26 errors / 33% coverage ] ****** [283 done /195 queued / 16 running / 26 errors / 33% coverage ] ****** [283 done /195 queued / 16 running / 26 errors / 33% coverage ] ****** [284 done /197 queued / 16 running / 26 errors / 33% coverage ] ****** [284 done /197 queued / 16 running / 26 errors / 33% coverage ] ****** [285 done /197 queued / 16 running / 26 errors / 33% coverage ] ****** [285 done /197 queued / 16 running / 26 errors / 33% coverage ] ****** [286 done /197 queued / 16 running / 26 errors / 33% coverage ] ****** [286 done /197 queued / 16 running / 26 errors / 33% coverage ] ****** [287 done /198 queued / 16 running / 26 errors / 33% coverage ] ****** [287 done /198 queued / 16 running / 26 errors / 33% coverage ] ****** [288 done /199 queued / 16 running / 26 errors / 33% coverage ] ****** [288 done /199 queued / 16 running / 26 errors / 33% coverage ] ****** [289 done /198 queued / 16 running / 26 errors / 33% coverage ] ****** [289 done /198 queued / 16 running / 26 errors / 33% coverage ] ****** [290 done /197 queued / 16 running / 26 errors / 33% coverage ] ****** [290 done /197 queued / 16 running / 26 errors / 33% coverage ] ****** [291 done /201 queued / 16 running / 26 errors / 33% coverage ] ****** [291 done /201 queued / 16 running / 26 errors / 33% coverage ] ****** [292 done /201 queued / 16 running / 26 errors / 33% coverage ] ****** [292 done /201 queued / 16 running / 26 errors / 33% coverage ] ****** [293 done /202 queued / 16 running / 26 errors / 33% coverage ] ****** [293 done /202 queued / 16 running / 26 errors / 33% coverage ] ****** [294 done /203 queued / 16 running / 26 errors / 33% coverage ] ****** [294 done /203 queued / 16 running / 26 errors / 33% coverage ] ****** [295 done /206 queued / 16 running / 26 errors / 33% coverage ] ****** [295 done /206 queued / 16 running / 26 errors / 33% coverage ] ****** [296 done /205 queued / 16 running / 26 errors / 33% coverage ] ****** [296 done /205 queued / 16 running / 26 errors / 33% coverage ] ****** [297 done /206 queued / 16 running / 26 errors / 33% coverage ] ****** [297 done /206 queued / 16 running / 26 errors / 33% coverage ] ****** [298 done /205 queued / 16 running / 26 errors / 33% coverage ] ****** [298 done /205 queued / 16 running / 26 errors / 33% coverage ] ****** [299 done /206 queued / 16 running / 26 errors / 33% coverage ] ****** [299 done /206 queued / 16 running / 26 errors / 33% coverage ] ****** [300 done /206 queued / 16 running / 26 errors / 33% coverage ] ****** [300 done /206 queued / 16 running / 26 errors / 33% coverage ] ****** [301 done /206 queued / 16 running / 26 errors / 33% coverage ] ****** [301 done /206 queued / 16 running / 26 errors / 33% coverage ] ****** [302 done /205 queued / 16 running / 26 errors / 33% coverage ] ****** [302 done /205 queued / 16 running / 26 errors / 33% coverage ] ****** [303 done /206 queued / 16 running / 26 errors / 33% coverage ] ****** [303 done /206 queued / 16 running / 26 errors / 33% coverage ] ****** [304 done /210 queued / 16 running / 26 errors / 33% coverage ] ****** [304 done /210 queued / 16 running / 26 errors / 33% coverage ] ****** [305 done /209 queued / 16 running / 26 errors / 33% coverage ] ****** [305 done /209 queued / 16 running / 26 errors / 33% coverage ] ****** [306 done /210 queued / 16 running / 26 errors / 33% coverage ] ****** [306 done /210 queued / 16 running / 26 errors / 33% coverage ] ****** [307 done /212 queued / 16 running / 26 errors / 33% coverage ] ****** [307 done /212 queued / 16 running / 26 errors / 33% coverage ] ****** [308 done /215 queued / 16 running / 26 errors / 33% coverage ] ****** [308 done /215 queued / 16 running / 26 errors / 33% coverage ] ****** [309 done /217 queued / 16 running / 26 errors / 33% coverage ] ****** [309 done /217 queued / 16 running / 26 errors / 33% coverage ] ****** [310 done /216 queued / 16 running / 26 errors / 33% coverage ] ****** [310 done /216 queued / 16 running / 26 errors / 33% coverage ] ****** [311 done /221 queued / 16 running / 26 errors / 33% coverage ] ****** [311 done /221 queued / 16 running / 26 errors / 33% coverage ] ****** [312 done /222 queued / 16 running / 26 errors / 33% coverage ] ****** [312 done /222 queued / 16 running / 26 errors / 33% coverage ] ****** [313 done /223 queued / 16 running / 26 errors / 33% coverage ] ****** [313 done /223 queued / 16 running / 26 errors / 33% coverage ] ****** [314 done /225 queued / 16 running / 26 errors / 33% coverage ] ****** [314 done /225 queued / 16 running / 26 errors / 33% coverage ] ****** [315 done /224 queued / 16 running / 26 errors / 33% coverage ] ****** [315 done /224 queued / 16 running / 26 errors / 33% coverage ] ****** [316 done /225 queued / 16 running / 26 errors / 33% coverage ] ****** [316 done /225 queued / 16 running / 26 errors / 33% coverage ] ****** [317 done /225 queued / 16 running / 26 errors / 33% coverage ] ****** [317 done /225 queued / 16 running / 26 errors / 33% coverage ] ****** [318 done /224 queued / 16 running / 26 errors / 33% coverage ] ****** [318 done /224 queued / 16 running / 26 errors / 33% coverage ] ****** [319 done /224 queued / 16 running / 26 errors / 33% coverage ] ****** [319 done /224 queued / 16 running / 26 errors / 33% coverage ] ****** [320 done /224 queued / 16 running / 26 errors / 33% coverage ] ****** [320 done /224 queued / 16 running / 26 errors / 33% coverage ] ****** [321 done /223 queued / 16 running / 26 errors / 33% coverage ] ****** [321 done /223 queued / 16 running / 26 errors / 33% coverage ] ****** [322 done /225 queued / 16 running / 26 errors / 33% coverage ] ****** [322 done /225 queued / 16 running / 26 errors / 33% coverage ] ****** [323 done /227 queued / 16 running / 26 errors / 33% coverage ] ****** [323 done /227 queued / 16 running / 26 errors / 33% coverage ] ****** [324 done /228 queued / 16 running / 26 errors / 33% coverage ] ****** [324 done /228 queued / 16 running / 26 errors / 33% coverage ] ****** [325 done /229 queued / 16 running / 26 errors / 33% coverage ] ****** [325 done /229 queued / 16 running / 26 errors / 33% coverage ] ****** [326 done /229 queued / 16 running / 26 errors / 33% coverage ] ****** [326 done /229 queued / 16 running / 26 errors / 33% coverage ] ****** [327 done /228 queued / 16 running / 26 errors / 33% coverage ] ****** [327 done /228 queued / 16 running / 26 errors / 33% coverage ] ****** [328 done /228 queued / 16 running / 26 errors / 33% coverage ] ****** [328 done /228 queued / 16 running / 26 errors / 33% coverage ] ****** [329 done /233 queued / 16 running / 26 errors / 33% coverage ] ****** [329 done /233 queued / 16 running / 26 errors / 33% coverage ] ****** [330 done /234 queued / 16 running / 26 errors / 33% coverage ] ****** [330 done /234 queued / 16 running / 26 errors / 33% coverage ] ****** [331 done /233 queued / 16 running / 26 errors / 33% coverage ] ****** [331 done /233 queued / 16 running / 26 errors / 33% coverage ] ****** [332 done /233 queued / 16 running / 26 errors / 33% coverage ] ****** [332 done /233 queued / 16 running / 26 errors / 33% coverage ] ****** [333 done /234 queued / 16 running / 26 errors / 33% coverage ] ****** [333 done /234 queued / 16 running / 26 errors / 33% coverage ] ****** [334 done /235 queued / 16 running / 26 errors / 33% coverage ] ****** [334 done /235 queued / 16 running / 26 errors / 33% coverage ] ****** [335 done /234 queued / 16 running / 26 errors / 33% coverage ] ****** [335 done /234 queued / 16 running / 26 errors / 33% coverage ] ****** [336 done /235 queued / 16 running / 26 errors / 33% coverage ] ****** [336 done /235 queued / 16 running / 26 errors / 33% coverage ] ****** [337 done /234 queued / 16 running / 26 errors / 33% coverage ] ****** [337 done /234 queued / 16 running / 26 errors / 33% coverage ] ****** [338 done /236 queued / 16 running / 26 errors / 33% coverage ] ****** [338 done /236 queued / 16 running / 26 errors / 33% coverage ] ****** [339 done /238 queued / 16 running / 26 errors / 33% coverage ] ****** [339 done /238 queued / 16 running / 26 errors / 33% coverage ] ****** [340 done /237 queued / 16 running / 26 errors / 33% coverage ] ****** [340 done /237 queued / 16 running / 26 errors / 33% coverage ] ****** [341 done /238 queued / 16 running / 26 errors / 33% coverage ] ****** [341 done /238 queued / 16 running / 26 errors / 33% coverage ] ****** [342 done /237 queued / 16 running / 26 errors / 33% coverage ] ****** [342 done /237 queued / 16 running / 26 errors / 33% coverage ] ****** [343 done /239 queued / 16 running / 26 errors / 33% coverage ] ****** [343 done /239 queued / 16 running / 26 errors / 33% coverage ] ****** [344 done /239 queued / 16 running / 26 errors / 33% coverage ] ****** [344 done /239 queued / 16 running / 26 errors / 33% coverage ] ****** [345 done /238 queued / 16 running / 26 errors / 33% coverage ] ****** [345 done /238 queued / 16 running / 26 errors / 33% coverage ] ****** [346 done /240 queued / 16 running / 26 errors / 33% coverage ] ****** [346 done /240 queued / 16 running / 26 errors / 33% coverage ] ****** [347 done /241 queued / 16 running / 26 errors / 33% coverage ] ****** [347 done /241 queued / 16 running / 26 errors / 33% coverage ] ****** [348 done /240 queued / 16 running / 26 errors / 33% coverage ] ****** [348 done /240 queued / 16 running / 26 errors / 33% coverage ] ****** [349 done /242 queued / 16 running / 26 errors / 33% coverage ] ****** [349 done /242 queued / 16 running / 26 errors / 33% coverage ] ****** [350 done /243 queued / 16 running / 26 errors / 33% coverage ] ****** [350 done /243 queued / 16 running / 26 errors / 33% coverage ] ****** [351 done /244 queued / 16 running / 26 errors / 33% coverage ] ****** [351 done /244 queued / 16 running / 26 errors / 33% coverage ] ****** [352 done /245 queued / 16 running / 26 errors / 33% coverage ] ****** [352 done /245 queued / 16 running / 26 errors / 33% coverage ] ****** [353 done /244 queued / 16 running / 26 errors / 33% coverage ] ****** [353 done /244 queued / 16 running / 26 errors / 33% coverage ] ****** [354 done /246 queued / 16 running / 26 errors / 33% coverage ] ****** [354 done /246 queued / 16 running / 26 errors / 33% coverage ] ****** [355 done /246 queued / 16 running / 26 errors / 33% coverage ] ****** [355 done /246 queued / 16 running / 26 errors / 33% coverage ] ****** [356 done /247 queued / 16 running / 26 errors / 33% coverage ] ****** [356 done /247 queued / 16 running / 26 errors / 33% coverage ] ****** [357 done /251 queued / 16 running / 26 errors / 33% coverage ] ****** [357 done /251 queued / 16 running / 26 errors / 33% coverage ] ****** [358 done /254 queued / 16 running / 26 errors / 33% coverage ] ****** [358 done /254 queued / 16 running / 26 errors / 33% coverage ] ****** [359 done /254 queued / 16 running / 26 errors / 33% coverage ] ****** [359 done /254 queued / 16 running / 26 errors / 33% coverage ] ****** [360 done /256 queued / 16 running / 26 errors / 33% coverage ] ****** [360 done /256 queued / 16 running / 26 errors / 33% coverage ] ****** [361 done /256 queued / 16 running / 26 errors / 33% coverage ] ****** [361 done /256 queued / 16 running / 26 errors / 33% coverage ] ****** [362 done /258 queued / 16 running / 26 errors / 33% coverage ] ****** [362 done /258 queued / 16 running / 26 errors / 33% coverage ] ****** [363 done /258 queued / 16 running / 26 errors / 33% coverage ] ****** [363 done /258 queued / 16 running / 26 errors / 33% coverage ] ****** [364 done /260 queued / 16 running / 26 errors / 33% coverage ] ****** [364 done /260 queued / 16 running / 26 errors / 33% coverage ] ****** [365 done /260 queued / 16 running / 26 errors / 33% coverage ] ****** [365 done /260 queued / 16 running / 26 errors / 33% coverage ] ****** [366 done /264 queued / 16 running / 26 errors / 33% coverage ] ****** [366 done /264 queued / 16 running / 26 errors / 33% coverage ] ****** [367 done /266 queued / 16 running / 26 errors / 33% coverage ] ****** [367 done /266 queued / 16 running / 26 errors / 33% coverage ] ****** [368 done /267 queued / 16 running / 26 errors / 33% coverage ] ****** [368 done /267 queued / 16 running / 26 errors / 33% coverage ] ****** [369 done /266 queued / 16 running / 26 errors / 33% coverage ] ****** [369 done /266 queued / 16 running / 26 errors / 33% coverage ] ****** [370 done /265 queued / 16 running / 26 errors / 33% coverage ] ****** [370 done /265 queued / 16 running / 26 errors / 33% coverage ] ****** [371 done /264 queued / 16 running / 26 errors / 33% coverage ] ****** [371 done /264 queued / 16 running / 26 errors / 33% coverage ] ****** [372 done /265 queued / 16 running / 26 errors / 33% coverage ] ****** [372 done /265 queued / 16 running / 26 errors / 33% coverage ] ****** [373 done /269 queued / 16 running / 26 errors / 33% coverage ] ****** [373 done /269 queued / 16 running / 26 errors / 33% coverage ] ****** [374 done /268 queued / 16 running / 26 errors / 33% coverage ] ****** [374 done /268 queued / 16 running / 26 errors / 33% coverage ] ****** [375 done /270 queued / 16 running / 26 errors / 33% coverage ] ****** [375 done /270 queued / 16 running / 26 errors / 33% coverage ] ****** [376 done /271 queued / 16 running / 26 errors / 33% coverage ] ****** [376 done /271 queued / 16 running / 26 errors / 33% coverage ] ****** [377 done /273 queued / 16 running / 26 errors / 33% coverage ] ****** [377 done /273 queued / 16 running / 26 errors / 33% coverage ] ****** [378 done /273 queued / 16 running / 26 errors / 33% coverage ] ****** [378 done /273 queued / 16 running / 26 errors / 33% coverage ] ****** [379 done /276 queued / 16 running / 26 errors / 33% coverage ] ****** [379 done /276 queued / 16 running / 26 errors / 33% coverage ] ****** [380 done /277 queued / 16 running / 26 errors / 33% coverage ] ****** [380 done /277 queued / 16 running / 26 errors / 33% coverage ] ****** [381 done /277 queued / 16 running / 26 errors / 33% coverage ] ****** [381 done /277 queued / 16 running / 26 errors / 33% coverage ] ****** [382 done /276 queued / 16 running / 26 errors / 33% coverage ] ****** [382 done /276 queued / 16 running / 26 errors / 33% coverage ] ****** [383 done /277 queued / 16 running / 26 errors / 33% coverage ] ****** [383 done /277 queued / 16 running / 26 errors / 33% coverage ] ****** [384 done /276 queued / 16 running / 26 errors / 33% coverage ] ****** [384 done /276 queued / 16 running / 26 errors / 33% coverage ] ****** [385 done /275 queued / 16 running / 26 errors / 33% coverage ] ****** [385 done /275 queued / 16 running / 26 errors / 33% coverage ] ****** [386 done /275 queued / 16 running / 26 errors / 33% coverage ] ****** [386 done /275 queued / 16 running / 26 errors / 33% coverage ] ****** [387 done /276 queued / 16 running / 26 errors / 33% coverage ] ****** [387 done /276 queued / 16 running / 26 errors / 33% coverage ] ****** [388 done /278 queued / 16 running / 26 errors / 33% coverage ] ****** [388 done /278 queued / 16 running / 26 errors / 33% coverage ] ****** [389 done /278 queued / 16 running / 26 errors / 33% coverage ] ****** [389 done /278 queued / 16 running / 26 errors / 33% coverage ] ****** [390 done /280 queued / 16 running / 26 errors / 33% coverage ] ****** [390 done /280 queued / 16 running / 26 errors / 33% coverage ] ****** [391 done /283 queued / 16 running / 26 errors / 33% coverage ] ****** [391 done /283 queued / 16 running / 26 errors / 33% coverage ] ****** [392 done /283 queued / 16 running / 26 errors / 33% coverage ] ****** [392 done /283 queued / 16 running / 26 errors / 33% coverage ] ****** [393 done /282 queued / 16 running / 26 errors / 33% coverage ] ****** [393 done /282 queued / 16 running / 26 errors / 33% coverage ] ****** [394 done /283 queued / 16 running / 26 errors / 33% coverage ] ****** [394 done /283 queued / 16 running / 26 errors / 33% coverage ] ****** [395 done /283 queued / 16 running / 26 errors / 33% coverage ] ****** [395 done /283 queued / 16 running / 26 errors / 33% coverage ] ****** [396 done /285 queued / 16 running / 26 errors / 33% coverage ] ****** [396 done /285 queued / 16 running / 26 errors / 33% coverage ] ****** [397 done /288 queued / 16 running / 26 errors / 33% coverage ] ****** [397 done /288 queued / 16 running / 26 errors / 33% coverage ] ****** [398 done /288 queued / 16 running / 26 errors / 33% coverage ] ****** [398 done /288 queued / 16 running / 26 errors / 33% coverage ] ****** [399 done /291 queued / 16 running / 26 errors / 33% coverage ] ****** [399 done /291 queued / 16 running / 26 errors / 33% coverage ] ****** [400 done /290 queued / 16 running / 26 errors / 33% coverage ] ****** [400 done /290 queued / 16 running / 26 errors / 33% coverage ] ****** [401 done /292 queued / 16 running / 26 errors / 33% coverage ] ****** [401 done /292 queued / 16 running / 26 errors / 33% coverage ] ****** [402 done /291 queued / 16 running / 26 errors / 33% coverage ] ****** [402 done /291 queued / 16 running / 26 errors / 33% coverage ] ****** [403 done /292 queued / 16 running / 26 errors / 33% coverage ] ****** [403 done /292 queued / 16 running / 26 errors / 33% coverage ] ****** [404 done /291 queued / 16 running / 26 errors / 33% coverage ] ****** [404 done /291 queued / 16 running / 26 errors / 33% coverage ] ****** [405 done /294 queued / 16 running / 26 errors / 33% coverage ] ****** [405 done /294 queued / 16 running / 26 errors / 33% coverage ] ****** [406 done /294 queued / 16 running / 26 errors / 33% coverage ] ****** [406 done /294 queued / 16 running / 26 errors / 33% coverage ] ****** [407 done /293 queued / 16 running / 26 errors / 33% coverage ] ****** [407 done /293 queued / 16 running / 26 errors / 33% coverage ] ****** [408 done /292 queued / 16 running / 26 errors / 33% coverage ] ****** [408 done /292 queued / 16 running / 26 errors / 33% coverage ] ****** [409 done /291 queued / 16 running / 26 errors / 33% coverage ] ****** [409 done /291 queued / 16 running / 26 errors / 33% coverage ] ****** [410 done /293 queued / 16 running / 26 errors / 33% coverage ] ****** [410 done /293 queued / 16 running / 26 errors / 33% coverage ] ****** [411 done /294 queued / 16 running / 26 errors / 33% coverage ] ****** [411 done /294 queued / 16 running / 26 errors / 33% coverage ] ****** [412 done /295 queued / 16 running / 27 errors / 33% coverage ] ****** [412 done /295 queued / 16 running / 27 errors / 33% coverage ] ****** [413 done /298 queued / 16 running / 27 errors / 33% coverage ] ****** [413 done /298 queued / 16 running / 27 errors / 33% coverage ] ****** [414 done /300 queued / 16 running / 27 errors / 33% coverage ] ****** [414 done /300 queued / 16 running / 27 errors / 33% coverage ] ****** [415 done /302 queued / 16 running / 27 errors / 33% coverage ] ****** [415 done /302 queued / 16 running / 27 errors / 33% coverage ] ****** [416 done /302 queued / 16 running / 27 errors / 33% coverage ] ****** [416 done /302 queued / 16 running / 27 errors / 33% coverage ] ****** [417 done /304 queued / 16 running / 27 errors / 33% coverage ] ****** [417 done /304 queued / 16 running / 27 errors / 33% coverage ] ****** [418 done /306 queued / 16 running / 27 errors / 33% coverage ] ****** [418 done /306 queued / 16 running / 27 errors / 33% coverage ] ****** [419 done /308 queued / 16 running / 27 errors / 33% coverage ] ****** [419 done /308 queued / 16 running / 27 errors / 33% coverage ] ****** [420 done /307 queued / 16 running / 27 errors / 33% coverage ] ****** [420 done /307 queued / 16 running / 27 errors / 33% coverage ] ****** [421 done /310 queued / 16 running / 27 errors / 33% coverage ] ****** [421 done /310 queued / 16 running / 27 errors / 33% coverage ] ****** [422 done /309 queued / 16 running / 27 errors / 33% coverage ] ****** [422 done /309 queued / 16 running / 27 errors / 33% coverage ] ****** [423 done /308 queued / 16 running / 27 errors / 33% coverage ] ****** [423 done /308 queued / 16 running / 27 errors / 33% coverage ] ****** [424 done /313 queued / 16 running / 27 errors / 33% coverage ] ****** [424 done /313 queued / 16 running / 27 errors / 33% coverage ] ****** [425 done /312 queued / 16 running / 27 errors / 33% coverage ] ****** [425 done /312 queued / 16 running / 27 errors / 33% coverage ] ****** [426 done /312 queued / 16 running / 27 errors / 33% coverage ] ****** [426 done /312 queued / 16 running / 27 errors / 33% coverage ] ****** [427 done /313 queued / 16 running / 27 errors / 33% coverage ] ****** [427 done /313 queued / 16 running / 27 errors / 33% coverage ] ****** [428 done /312 queued / 16 running / 27 errors / 33% coverage ] ****** [428 done /312 queued / 16 running / 27 errors / 33% coverage ] ****** [429 done /314 queued / 16 running / 27 errors / 33% coverage ] ****** [429 done /314 queued / 16 running / 27 errors / 33% coverage ] ****** [430 done /316 queued / 16 running / 27 errors / 33% coverage ] ****** [430 done /316 queued / 16 running / 27 errors / 33% coverage ] ****** [431 done /317 queued / 16 running / 27 errors / 33% coverage ] ****** [431 done /317 queued / 16 running / 27 errors / 33% coverage ] ****** [432 done /316 queued / 16 running / 27 errors / 33% coverage ] ****** [432 done /316 queued / 16 running / 27 errors / 33% coverage ] ****** [433 done /318 queued / 16 running / 27 errors / 33% coverage ] ****** [433 done /318 queued / 16 running / 27 errors / 33% coverage ] ****** [434 done /321 queued / 16 running / 27 errors / 33% coverage ] ****** [434 done /321 queued / 16 running / 27 errors / 33% coverage ] ****** [435 done /320 queued / 16 running / 27 errors / 33% coverage ] ****** [435 done /320 queued / 16 running / 27 errors / 33% coverage ] ****** [436 done /320 queued / 16 running / 27 errors / 33% coverage ] ****** [436 done /320 queued / 16 running / 27 errors / 33% coverage ] ****** [437 done /319 queued / 16 running / 27 errors / 33% coverage ] ****** [437 done /319 queued / 16 running / 27 errors / 33% coverage ] ****** [438 done /319 queued / 16 running / 27 errors / 33% coverage ] ****** [438 done /319 queued / 16 running / 27 errors / 33% coverage ] ****** [439 done /321 queued / 16 running / 27 errors / 33% coverage ] ****** [439 done /321 queued / 16 running / 27 errors / 33% coverage ] ****** [440 done /322 queued / 16 running / 27 errors / 33% coverage ] ****** [440 done /322 queued / 16 running / 27 errors / 33% coverage ] ****** [441 done /324 queued / 16 running / 27 errors / 33% coverage ] ****** [441 done /324 queued / 16 running / 27 errors / 33% coverage ] ****** [442 done /325 queued / 16 running / 27 errors / 33% coverage ] ****** [442 done /325 queued / 16 running / 27 errors / 33% coverage ] ****** [443 done /326 queued / 16 running / 27 errors / 33% coverage ] ****** [443 done /326 queued / 16 running / 27 errors / 33% coverage ] ****** [444 done /327 queued / 16 running / 27 errors / 33% coverage ] ****** [444 done /327 queued / 16 running / 27 errors / 33% coverage ] ****** [445 done /329 queued / 16 running / 27 errors / 33% coverage ] ****** [445 done /329 queued / 16 running / 27 errors / 33% coverage ] ****** [446 done /328 queued / 16 running / 27 errors / 33% coverage ] ****** [446 done /328 queued / 16 running / 27 errors / 33% coverage ] ****** [447 done /329 queued / 16 running / 27 errors / 33% coverage ] ****** [447 done /329 queued / 16 running / 27 errors / 33% coverage ] ****** [448 done /330 queued / 16 running / 28 errors / 33% coverage ] ****** [448 done /330 queued / 16 running / 28 errors / 33% coverage ] ****** [449 done /331 queued / 16 running / 28 errors / 33% coverage ] ****** [449 done /331 queued / 16 running / 28 errors / 33% coverage ] ****** [450 done /331 queued / 16 running / 28 errors / 33% coverage ] ****** [450 done /331 queued / 16 running / 28 errors / 33% coverage ] ****** [451 done /332 queued / 16 running / 28 errors / 33% coverage ] ****** [451 done /332 queued / 16 running / 28 errors / 33% coverage ] ****** [452 done /331 queued / 16 running / 28 errors / 33% coverage ] ****** [452 done /331 queued / 16 running / 28 errors / 33% coverage ] ****** [453 done /335 queued / 16 running / 28 errors / 33% coverage ] ****** [453 done /335 queued / 16 running / 28 errors / 33% coverage ] ****** [454 done /335 queued / 16 running / 28 errors / 33% coverage ] ****** [454 done /335 queued / 16 running / 28 errors / 33% coverage ] ****** [455 done /335 queued / 16 running / 28 errors / 33% coverage ] ****** [455 done /335 queued / 16 running / 28 errors / 33% coverage ] ****** [456 done /340 queued / 16 running / 28 errors / 33% coverage ] ****** [456 done /340 queued / 16 running / 28 errors / 33% coverage ] ****** [457 done /341 queued / 16 running / 28 errors / 33% coverage ] ****** [457 done /341 queued / 16 running / 28 errors / 33% coverage ] ****** [458 done /343 queued / 16 running / 28 errors / 33% coverage ] ****** [458 done /343 queued / 16 running / 28 errors / 33% coverage ] ****** [459 done /342 queued / 16 running / 28 errors / 33% coverage ] ****** [459 done /342 queued / 16 running / 28 errors / 33% coverage ] ****** [460 done /342 queued / 16 running / 28 errors / 33% coverage ] ****** [460 done /342 queued / 16 running / 28 errors / 33% coverage ] ****** [461 done /341 queued / 16 running / 28 errors / 33% coverage ] ****** [461 done /341 queued / 16 running / 28 errors / 33% coverage ] ****** [462 done /347 queued / 16 running / 28 errors / 33% coverage ] ****** [462 done /347 queued / 16 running / 28 errors / 33% coverage ] ****** [463 done /348 queued / 16 running / 28 errors / 33% coverage ] ****** [463 done /348 queued / 16 running / 28 errors / 33% coverage ] ****** [464 done /347 queued / 16 running / 28 errors / 33% coverage ] ****** [464 done /347 queued / 16 running / 28 errors / 33% coverage ] ****** [465 done /349 queued / 16 running / 28 errors / 33% coverage ] ****** [465 done /349 queued / 16 running / 28 errors / 33% coverage ] ****** [466 done /350 queued / 16 running / 28 errors / 33% coverage ] ****** [466 done /350 queued / 16 running / 28 errors / 33% coverage ] ****** [467 done /351 queued / 16 running / 28 errors / 33% coverage ] ****** [467 done /351 queued / 16 running / 28 errors / 33% coverage ] ****** [468 done /352 queued / 16 running / 28 errors / 33% coverage ] ****** [468 done /352 queued / 16 running / 28 errors / 33% coverage ] ****** [469 done /351 queued / 16 running / 28 errors / 33% coverage ] ****** [469 done /351 queued / 16 running / 28 errors / 33% coverage ] ****** [470 done /351 queued / 16 running / 28 errors / 33% coverage ] ****** [470 done /351 queued / 16 running / 28 errors / 33% coverage ] ****** [471 done /352 queued / 16 running / 28 errors / 33% coverage ] ****** [471 done /352 queued / 16 running / 28 errors / 33% coverage ] ****** [472 done /352 queued / 16 running / 28 errors / 33% coverage ] ****** [472 done /352 queued / 16 running / 28 errors / 33% coverage ] ****** [473 done /351 queued / 16 running / 28 errors / 33% coverage ] ****** [473 done /351 queued / 16 running / 28 errors / 33% coverage ] ****** [474 done /352 queued / 16 running / 28 errors / 33% coverage ] ****** [474 done /352 queued / 16 running / 28 errors / 33% coverage ] ****** [475 done /352 queued / 16 running / 28 errors / 33% coverage ] ****** [475 done /352 queued / 16 running / 28 errors / 33% coverage ] ****** [476 done /352 queued / 16 running / 28 errors / 33% coverage ] ****** [476 done /352 queued / 16 running / 28 errors / 33% coverage ] ****** [477 done /353 queued / 16 running / 28 errors / 33% coverage ] ****** [477 done /353 queued / 16 running / 28 errors / 33% coverage ] ****** [478 done /352 queued / 16 running / 28 errors / 33% coverage ] ****** [478 done /352 queued / 16 running / 28 errors / 33% coverage ] ****** [479 done /354 queued / 16 running / 28 errors / 33% coverage ] ****** [479 done /354 queued / 16 running / 28 errors / 33% coverage ] ****** [480 done /358 queued / 16 running / 28 errors / 33% coverage ] ****** [480 done /358 queued / 16 running / 28 errors / 33% coverage ] ****** [481 done /359 queued / 16 running / 28 errors / 33% coverage ] ****** [481 done /359 queued / 16 running / 28 errors / 33% coverage ] ****** [482 done /360 queued / 16 running / 28 errors / 33% coverage ] ****** [482 done /360 queued / 16 running / 28 errors / 33% coverage ] ****** [483 done /360 queued / 16 running / 28 errors / 33% coverage ] ****** [483 done /360 queued / 16 running / 28 errors / 33% coverage ] ****** [484 done /360 queued / 16 running / 28 errors / 33% coverage ] ****** [484 done /360 queued / 16 running / 28 errors / 33% coverage ] ****** [485 done /361 queued / 16 running / 28 errors / 33% coverage ] ****** [485 done /361 queued / 16 running / 28 errors / 33% coverage ] ****** [486 done /362 queued / 16 running / 28 errors / 33% coverage ] ****** [486 done /362 queued / 16 running / 28 errors / 33% coverage ] ****** [487 done /361 queued / 16 running / 28 errors / 33% coverage ] ****** [487 done /361 queued / 16 running / 28 errors / 33% coverage ] ****** [488 done /362 queued / 16 running / 28 errors / 33% coverage ] ****** [488 done /362 queued / 16 running / 28 errors / 33% coverage ] ****** [489 done /367 queued / 16 running / 28 errors / 33% coverage ] ****** [489 done /367 queued / 16 running / 28 errors / 33% coverage ] ****** [490 done /368 queued / 16 running / 29 errors / 33% coverage ] ****** [490 done /368 queued / 16 running / 29 errors / 33% coverage ] ****** [491 done /368 queued / 16 running / 29 errors / 33% coverage ] ****** [491 done /368 queued / 16 running / 29 errors / 33% coverage ] ****** [492 done /372 queued / 16 running / 29 errors / 33% coverage ] ****** [492 done /372 queued / 16 running / 29 errors / 33% coverage ] ****** [493 done /372 queued / 16 running / 29 errors / 33% coverage ] ****** [493 done /372 queued / 16 running / 29 errors / 33% coverage ] ****** [494 done /371 queued / 16 running / 29 errors / 33% coverage ] ****** [494 done /371 queued / 16 running / 29 errors / 33% coverage ] ****** [495 done /372 queued / 16 running / 29 errors / 33% coverage ] ****** [495 done /372 queued / 16 running / 29 errors / 33% coverage ] ****** [496 done /371 queued / 16 running / 29 errors / 33% coverage ] ****** [496 done /371 queued / 16 running / 29 errors / 33% coverage ] ****** [497 done /372 queued / 16 running / 29 errors / 33% coverage ] ****** [497 done /372 queued / 16 running / 29 errors / 33% coverage ] ****** [498 done /372 queued / 16 running / 29 errors / 33% coverage ] ****** [498 done /372 queued / 16 running / 29 errors / 33% coverage ] ****** [499 done /376 queued / 16 running / 29 errors / 33% coverage ] ****** [499 done /376 queued / 16 running / 29 errors / 33% coverage ] ****** [500 done /381 queued / 16 running / 29 errors / 33% coverage ] ****** [500 done /381 queued / 16 running / 29 errors / 33% coverage ] ****** [501 done /380 queued / 16 running / 29 errors / 33% coverage ] ****** [501 done /380 queued / 16 running / 29 errors / 33% coverage ] ****** [502 done /381 queued / 16 running / 29 errors / 33% coverage ] ****** [502 done /381 queued / 16 running / 29 errors / 33% coverage ] ****** [503 done /384 queued / 16 running / 29 errors / 33% coverage ] ****** [503 done /384 queued / 16 running / 29 errors / 33% coverage ] ****** [504 done /385 queued / 16 running / 29 errors / 33% coverage ] ****** [504 done /385 queued / 16 running / 29 errors / 33% coverage ] ****** [505 done /385 queued / 16 running / 29 errors / 33% coverage ] ****** [505 done /385 queued / 16 running / 29 errors / 33% coverage ] ****** [506 done /384 queued / 16 running / 29 errors / 33% coverage ] ****** [506 done /384 queued / 16 running / 29 errors / 33% coverage ] ****** [507 done /385 queued / 16 running / 29 errors / 33% coverage ] ****** [507 done /385 queued / 16 running / 29 errors / 33% coverage ] ****** [508 done /386 queued / 16 running / 29 errors / 33% coverage ] ****** [508 done /386 queued / 16 running / 29 errors / 33% coverage ] ****** [509 done /386 queued / 16 running / 29 errors / 33% coverage ] ****** [509 done /386 queued / 16 running / 29 errors / 33% coverage ] ****** [510 done /385 queued / 16 running / 29 errors / 33% coverage ] ****** [510 done /385 queued / 16 running / 29 errors / 33% coverage ] ****** [511 done /385 queued / 16 running / 29 errors / 33% coverage ] ****** [511 done /385 queued / 16 running / 29 errors / 33% coverage ] ****** [512 done /385 queued / 16 running / 29 errors / 33% coverage ] ****** [512 done /385 queued / 16 running / 29 errors / 33% coverage ] ****** [513 done /384 queued / 16 running / 29 errors / 33% coverage ] ****** [513 done /384 queued / 16 running / 29 errors / 33% coverage ] ****** [514 done /383 queued / 16 running / 29 errors / 33% coverage ] ****** [514 done /383 queued / 16 running / 29 errors / 33% coverage ] ****** [515 done /383 queued / 16 running / 29 errors / 33% coverage ] ****** [515 done /383 queued / 16 running / 29 errors / 33% coverage ] ****** [516 done /383 queued / 16 running / 29 errors / 33% coverage ] ****** [516 done /383 queued / 16 running / 29 errors / 33% coverage ] ****** [517 done /382 queued / 16 running / 29 errors / 33% coverage ] ****** [517 done /382 queued / 16 running / 29 errors / 33% coverage ] ****** [518 done /381 queued / 16 running / 29 errors / 33% coverage ] ****** [518 done /381 queued / 16 running / 29 errors / 33% coverage ] ****** [519 done /382 queued / 16 running / 29 errors / 33% coverage ] ****** [519 done /382 queued / 16 running / 29 errors / 33% coverage ] ****** [520 done /383 queued / 16 running / 29 errors / 33% coverage ] ****** [520 done /383 queued / 16 running / 29 errors / 33% coverage ] ****** [521 done /382 queued / 16 running / 29 errors / 33% coverage ] ****** [521 done /382 queued / 16 running / 29 errors / 33% coverage ] ****** [522 done /383 queued / 16 running / 29 errors / 33% coverage ] ****** [522 done /383 queued / 16 running / 29 errors / 33% coverage ] ****** [523 done /384 queued / 16 running / 29 errors / 33% coverage ] ****** [523 done /384 queued / 16 running / 29 errors / 33% coverage ] ****** [524 done /386 queued / 16 running / 29 errors / 33% coverage ] ****** [524 done /386 queued / 16 running / 29 errors / 33% coverage ] ****** [525 done /385 queued / 16 running / 29 errors / 33% coverage ] ****** [525 done /385 queued / 16 running / 29 errors / 33% coverage ] ****** [526 done /386 queued / 16 running / 29 errors / 33% coverage ] ****** [526 done /386 queued / 16 running / 29 errors / 33% coverage ] ****** [527 done /387 queued / 16 running / 29 errors / 33% coverage ] ****** [527 done /387 queued / 16 running / 29 errors / 33% coverage ] ****** [528 done /389 queued / 16 running / 29 errors / 33% coverage ] ****** [528 done /389 queued / 16 running / 29 errors / 33% coverage ] ****** [529 done /394 queued / 16 running / 29 errors / 33% coverage ] ****** [529 done /394 queued / 16 running / 29 errors / 33% coverage ] ****** [530 done /393 queued / 16 running / 29 errors / 33% coverage ] ****** [530 done /393 queued / 16 running / 29 errors / 33% coverage ] ****** [531 done /394 queued / 16 running / 29 errors / 33% coverage ] ****** [531 done /394 queued / 16 running / 29 errors / 33% coverage ] ****** [532 done /398 queued / 16 running / 29 errors / 33% coverage ] ****** [532 done /398 queued / 16 running / 29 errors / 33% coverage ] ****** [533 done /401 queued / 16 running / 29 errors / 33% coverage ] ****** [533 done /401 queued / 16 running / 29 errors / 33% coverage ] ****** [534 done /400 queued / 16 running / 29 errors / 33% coverage ] ****** [534 done /400 queued / 16 running / 29 errors / 33% coverage ] ****** [535 done /401 queued / 16 running / 29 errors / 33% coverage ] ****** [535 done /401 queued / 16 running / 29 errors / 33% coverage ] ****** [536 done /401 queued / 16 running / 29 errors / 33% coverage ] ****** [536 done /401 queued / 16 running / 29 errors / 33% coverage ] ****** [537 done /403 queued / 16 running / 29 errors / 33% coverage ] ****** [537 done /403 queued / 16 running / 29 errors / 33% coverage ] ****** [538 done /405 queued / 16 running / 29 errors / 33% coverage ] ****** [538 done /405 queued / 16 running / 29 errors / 33% coverage ] ****** [539 done /405 queued / 16 running / 29 errors / 33% coverage ] ****** [539 done /405 queued / 16 running / 29 errors / 33% coverage ] ****** [540 done /410 queued / 16 running / 29 errors / 33% coverage ] ****** [540 done /410 queued / 16 running / 29 errors / 33% coverage ] ****** [541 done /411 queued / 16 running / 29 errors / 33% coverage ] ****** [541 done /411 queued / 16 running / 29 errors / 33% coverage ] ****** [542 done /413 queued / 16 running / 29 errors / 33% coverage ] ****** [542 done /413 queued / 16 running / 29 errors / 33% coverage ] ****** [543 done /414 queued / 16 running / 29 errors / 33% coverage ] ****** [543 done /414 queued / 16 running / 29 errors / 33% coverage ] ****** [544 done /413 queued / 16 running / 29 errors / 33% coverage ] ****** [544 done /413 queued / 16 running / 29 errors / 33% coverage ] ****** [545 done /413 queued / 16 running / 29 errors / 33% coverage ] ****** [545 done /413 queued / 16 running / 29 errors / 33% coverage ] ****** [546 done /414 queued / 16 running / 29 errors / 33% coverage ] ****** [546 done /414 queued / 16 running / 29 errors / 33% coverage ] ****** [547 done /415 queued / 16 running / 29 errors / 33% coverage ] ****** [547 done /415 queued / 16 running / 29 errors / 33% coverage ] ****** [548 done /415 queued / 16 running / 29 errors / 33% coverage ] ****** [548 done /415 queued / 16 running / 29 errors / 33% coverage ] ****** [549 done /416 queued / 16 running / 29 errors / 33% coverage ] ****** [549 done /416 queued / 16 running / 29 errors / 33% coverage ] ****** [550 done /416 queued / 16 running / 29 errors / 33% coverage ] ****** [550 done /416 queued / 16 running / 29 errors / 33% coverage ] ****** [551 done /417 queued / 16 running / 29 errors / 33% coverage ] ****** [551 done /417 queued / 16 running / 29 errors / 33% coverage ] ****** [552 done /416 queued / 16 running / 29 errors / 33% coverage ] ****** [552 done /416 queued / 16 running / 29 errors / 33% coverage ] ****** [553 done /416 queued / 16 running / 29 errors / 33% coverage ] ****** [553 done /416 queued / 16 running / 29 errors / 33% coverage ] ****** [554 done /417 queued / 16 running / 29 errors / 33% coverage ] ****** [554 done /417 queued / 16 running / 29 errors / 33% coverage ] ****** [555 done /416 queued / 16 running / 29 errors / 33% coverage ] ****** [555 done /416 queued / 16 running / 29 errors / 33% coverage ] ****** [556 done /416 queued / 16 running / 29 errors / 33% coverage ] ****** [556 done /416 queued / 16 running / 29 errors / 33% coverage ] ****** [557 done /418 queued / 16 running / 29 errors / 33% coverage ] ****** [557 done /418 queued / 16 running / 29 errors / 33% coverage ] ****** [558 done /422 queued / 16 running / 29 errors / 33% coverage ] ****** [558 done /422 queued / 16 running / 29 errors / 33% coverage ] ****** [559 done /421 queued / 16 running / 29 errors / 33% coverage ] ****** [559 done /421 queued / 16 running / 29 errors / 33% coverage ] ****** [560 done /422 queued / 16 running / 29 errors / 33% coverage ] ****** [560 done /422 queued / 16 running / 29 errors / 33% coverage ] ****** [561 done /426 queued / 16 running / 29 errors / 33% coverage ] ****** [561 done /426 queued / 16 running / 29 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","call","RegExp","toString","apply","bound ","captureStackTrace","cwd","join","binding","Object","WeakMap","create","Set","Array","ArrayBuffer","DataView","Map","resolve","max","now","reduce","parseInt","charCodeAt","abs","toUpperCase","freeze","setPrototypeOf","isArray","pop","decodeURIComponent","isFinite","splice","Error"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0,"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0} start 0.0484 took 25.8333s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":1,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":4} start 26.294 took 19.105s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":1,"ExpandedSwitcher":0,"_bound":5} start 26.4814 took 20.2959s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":3} start 26.5195 took 20.6357s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":2} start 26.3837 took 32.2344s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":1} start 26.1926 took 33.0745s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":1}
* Error: Tropigate failed because SyntaxError: Unexpected token (31:8) on program // Copyright 2012 Mark Cavage, Inc.  All rights reserved.
//
// Restify supports both a client and server API, and in the essence of not
// loading the kitchen sink on clients, the exports here is chunked up into
// client and server; note clients will have to opt in by setting the env
// var "RESTIFY_CLIENT_ONLY", but if you're in that boat, it's not hard to do,
// and enables much faster load times
//

'use strict';

var shallowCopy = require('./utils').shallowCopy;


/**
 * creates an http request client. based on options passed in, will create one
 * of three existing clients: Http, String, or Json.
 * @public
 * @function createClient
 * @param    {Object} options      an options object
 * @param    {String} options.type 'http' | 'json' | 'string'
 * @returns  {HttpClient | JsonClient | StringClient}
 */
function createClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    var assert = require('assert-plus');
    var bunyan = require('./bunyan_helper');
    var clients = require('./clients');

    assert.object(options, 'options');

    var client;
    var opts = shallowCopy(options);
    opts.agent = options.agent;
    opts.name = opts.name || 'restify';
    opts.type = opts.type || 'application/octet-stream';
    opts.log = opts.log || bunyan.createLogger(opts.name);

    switch (opts.type) {
        case 'json':
            client = new clients.JsonClient(opts);
            break;

        case 'string':
            client = new clients.StringClient(opts);
            break;

        case 'http':
        default:
            client = new clients.HttpClient(opts);
            break;
    }

    return (client);
}


/**
 * creates a json httpclient.
 * @public
 * @function createJsonClient
 * @param    {Object}     options an options object
 * @returns  {JsonClient}         a json client
 */
function createJsonClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'json';
    return (createClient(options));
}


/**
 * creates a string httpclient.
 * @public
 * @function createStringClient
 * @param    {Object}       options an options object
 * @returns  {StringClient}         a string client
 */
function createStringClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'string';
    return (createClient(options));
}


/**
 * creates a regular httpclient.
 * @public
 * @function createHttpClient
 * @param    {Object}     options an options object
 * @returns  {HttpClient}         an http client
 */
function createHttpClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'http';
    return (createClient(options));
}


/**
 * creates a server.
 * @public
 * @function createServer
 * @param    {Object} options an options object
 * @returns  {Server}
 */
function createServer(options) {
    var bunyan = require('./bunyan_helper');
    var InternalError = require('./errors').InternalError;
    var Router = require('./router');
    var Server = require('./server');

    var opts = shallowCopy(options || {});
    var server;

    opts.name = opts.name || 'restify';
    opts.log = opts.log || bunyan.createLogger(opts.name);
    opts.router = opts.router || new Router(opts);

    server = new Server(opts);

    if (server.handleUncaughtExceptions) {
        server.on('uncaughtException', function (req, res, route, e) {
            if (this.listeners('uncaughtException').length > 1 ||
                res.headersSent) {
                return (false);
            }

            res.send(new InternalError(e, e.message || 'unexpected error'));
            return (true);
        });
    }

    return (server);
}


/**
 * Returns a string representation of a URL pattern , with its
 * parameters filled in by the passed hash.
 *
 * If a key is not found in the hash for a param, it is left alone.
 * @public
 * @function realizeUrl
 * @param   {String} pattern a url string
 * @param   {Object} params  a hash of parameter names to values for
 *                           substitution
 * @returns {String}
 */
function realizeUrl(pattern, params) {
    var p = pattern.replace(/\/:([^/]+)/g, function (match, k) {
        return (params.hasOwnProperty(k) ? '/' + params[k] : match);
    });


    return (require('./utils').sanitizePath(p));
}


///--- Exports

module.exports = {
    // Client API
    createClient: createClient,
    createJsonClient: createJsonClient,
    createJSONClient: createJsonClient,
    createStringClient: createStringClient,
    createHttpClient: createHttpClient,
    get HttpClient() {
        return (require('./clients').HttpClient);
    },
    get JsonClient() {
        return (require('./clients').JsonClient);
    },
    get StringClient() {
        return (require('./clients').StringClient);
    },

    // Miscellaneous API
    get bunyan() {
        return (require('./bunyan_helper'));
    },

    errors: {}

};

var errors = require('./errors');
Object.keys(errors).forEach(function (k) {
    module.exports.errors[k] = errors[k];
    module.exports[k] = errors[k];
});

if (!process.env.RESTIFY_CLIENT_ONLY) {

    module.exports.createServer = createServer;
    module.exports.httpDate = require('./http_date');
    module.exports.realizeUrl = realizeUrl;
    module.exports.formatters = require('./formatters');
    module.exports.plugins = {};
    var plugins = require('./plugins');
    Object.keys(plugins).forEach(function (k) {
        module.exports.plugins[k] = plugins[k];
        module.exports[k] = plugins[k];
    });
}
 at SyntaxError: Unexpected token (31:8)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":1}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":2,"ExpandedSwitcher":0,"_bound":6,"ExpansionArg_int":0} start 46.9863 took 19.9673s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":5,"ExpansionArg_int":0} start 45.5602 took 22.2097s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":2,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":5,"ExpansionArg_int":0} start 47.6066 took 23.7529s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":2,"ExpandedSwitcher":0,"_bound":6,"ExpansionArg_int":0} start 47.478 took 31.5297s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":0,"_bound":2} start 59.4889 took 20.6691s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":0,"_bound":2}
* Error: TypeError: Cannot read property 'cwd' of undefined
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":0,"_bound":2}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":4,"ExpansionArg_int":0} start 58.8914 took 21.713s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":1,"ExpansionArg_type_4":2,"ExpandedSwitcher":0,"_bound":6,"ExpansionArg_int":0} start 45.5959 took 35.5767s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":2,"ExpandedSwitcher":0,"_bound":6,"ExpansionArg_int":0} start 59.0596 took 23.599s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":4,"ExpansionArg_int":0} start 47.3891 took 35.5901s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":3,"ExpansionArg_int":0} start 58.9556 took 26.2098s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":3,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":7,"ExpansionArg_string":"PureString"} start 67.169 took 19.5545s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":3,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":8} start 67.9756 took 20.9889s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":5,"ExpansionArg_int":0} start 59.1477 took 32.1978s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"_bound":3,"ExpansionArg_int":0} start 59.6124 took 31.9927s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"_bound":3,"ExpansionArg_int":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (31:8) on program // Copyright 2012 Mark Cavage, Inc.  All rights reserved.
//
// Restify supports both a client and server API, and in the essence of not
// loading the kitchen sink on clients, the exports here is chunked up into
// client and server; note clients will have to opt in by setting the env
// var "RESTIFY_CLIENT_ONLY", but if you're in that boat, it's not hard to do,
// and enables much faster load times
//

'use strict';

var shallowCopy = require('./utils').shallowCopy;


/**
 * creates an http request client. based on options passed in, will create one
 * of three existing clients: Http, String, or Json.
 * @public
 * @function createClient
 * @param    {Object} options      an options object
 * @param    {String} options.type 'http' | 'json' | 'string'
 * @returns  {HttpClient | JsonClient | StringClient}
 */
function createClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    var assert = require('assert-plus');
    var bunyan = require('./bunyan_helper');
    var clients = require('./clients');

    assert.object(options, 'options');

    var client;
    var opts = shallowCopy(options);
    opts.agent = options.agent;
    opts.name = opts.name || 'restify';
    opts.type = opts.type || 'application/octet-stream';
    opts.log = opts.log || bunyan.createLogger(opts.name);

    switch (opts.type) {
        case 'json':
            client = new clients.JsonClient(opts);
            break;

        case 'string':
            client = new clients.StringClient(opts);
            break;

        case 'http':
        default:
            client = new clients.HttpClient(opts);
            break;
    }

    return (client);
}


/**
 * creates a json httpclient.
 * @public
 * @function createJsonClient
 * @param    {Object}     options an options object
 * @returns  {JsonClient}         a json client
 */
function createJsonClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'json';
    return (createClient(options));
}


/**
 * creates a string httpclient.
 * @public
 * @function createStringClient
 * @param    {Object}       options an options object
 * @returns  {StringClient}         a string client
 */
function createStringClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'string';
    return (createClient(options));
}


/**
 * creates a regular httpclient.
 * @public
 * @function createHttpClient
 * @param    {Object}     options an options object
 * @returns  {HttpClient}         an http client
 */
function createHttpClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'http';
    return (createClient(options));
}


/**
 * creates a server.
 * @public
 * @function createServer
 * @param    {Object} options an options object
 * @returns  {Server}
 */
function createServer(options) {
    var bunyan = require('./bunyan_helper');
    var InternalError = require('./errors').InternalError;
    var Router = require('./router');
    var Server = require('./server');

    var opts = shallowCopy(options || {});
    var server;

    opts.name = opts.name || 'restify';
    opts.log = opts.log || bunyan.createLogger(opts.name);
    opts.router = opts.router || new Router(opts);

    server = new Server(opts);

    if (server.handleUncaughtExceptions) {
        server.on('uncaughtException', function (req, res, route, e) {
            if (this.listeners('uncaughtException').length > 1 ||
                res.headersSent) {
                return (false);
            }

            res.send(new InternalError(e, e.message || 'unexpected error'));
            return (true);
        });
    }

    return (server);
}


/**
 * Returns a string representation of a URL pattern , with its
 * parameters filled in by the passed hash.
 *
 * If a key is not found in the hash for a param, it is left alone.
 * @public
 * @function realizeUrl
 * @param   {String} pattern a url string
 * @param   {Object} params  a hash of parameter names to values for
 *                           substitution
 * @returns {String}
 */
function realizeUrl(pattern, params) {
    var p = pattern.replace(/\/:([^/]+)/g, function (match, k) {
        return (params.hasOwnProperty(k) ? '/' + params[k] : match);
    });


    return (require('./utils').sanitizePath(p));
}


///--- Exports

module.exports = {
    // Client API
    createClient: createClient,
    createJsonClient: createJsonClient,
    createJSONClient: createJsonClient,
    createStringClient: createStringClient,
    createHttpClient: createHttpClient,
    get HttpClient() {
        return (require('./clients').HttpClient);
    },
    get JsonClient() {
        return (require('./clients').JsonClient);
    },
    get StringClient() {
        return (require('./clients').StringClient);
    },

    // Miscellaneous API
    get bunyan() {
        return (require('./bunyan_helper'));
    },

    errors: {}

};

var errors = require('./errors');
Object.keys(errors).forEach(function (k) {
    module.exports.errors[k] = errors[k];
    module.exports[k] = errors[k];
});

if (!process.env.RESTIFY_CLIENT_ONLY) {

    module.exports.createServer = createServer;
    module.exports.httpDate = require('./http_date');
    module.exports.realizeUrl = realizeUrl;
    module.exports.formatters = require('./formatters');
    module.exports.plugins = {};
    var plugins = require('./plugins');
    Object.keys(plugins).forEach(function (k) {
        module.exports.plugins[k] = plugins[k];
        module.exports[k] = plugins[k];
    });
}
 at SyntaxError: Unexpected token (31:8)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"_bound":3}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":2,"ExpansionArg_int":3,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":9} start 71.5499 took 21.2897s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":3,"ExpansionArg_int":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":7,"ExpansionArg_string":"PureString"} start 71.6131 took 23.9498s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":3,"ExpandedSwitcher":0,"_bound":7,"ExpansionArg_string":"PureString"} start 68.1631 took 30.3332s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_int":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":6,"ExpansionArg_string":"PureString"} start 68.0631 took 32.0827s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":2,"ExpansionArg_int":3,"ExpandedSwitcher":0,"_bound":9} start 79.2392 took 21.4566s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":2,"ExpansionArg_int":3,"ExpandedSwitcher":0,"_bound":8} start 67.2241 took 34.4292s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":1,"ExpansionArg_type_4":2,"ExpansionArg_int":3,"ExpandedSwitcher":0,"_bound":9} start 81.3224 took 21.3529s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":3,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":8,"ExpansionArg_string":"PureString"} start 83.1584 took 21.5089s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":3,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":8,"ExpansionArg_string":"PureString"} start 85.3572 took 21.0637s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":8,"ExpansionArg_array_length":0} start 86.8732 took 23.0054s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":3,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":9} start 89.1258 took 21.1518s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_int":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":5} start 80.7265 took 30.8807s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":3,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":9} start 91.4955 took 20.8799s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":2,"ExpansionArg_int":3,"ExpandedSwitcher":0,"_bound":9} start 82.8787 took 30.4548s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":3,"_bound":6} start 91.929 took 21.7105s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":3,"_bound":6}
* Error: TypeError: Cannot read property 'enable' of undefined
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":2,"ExpansionArg_int":3,"_bound":6}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":6,"ExpansionArg_string":"PureString"} start 93.0003 took 22.1709s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":4,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":10,"ExpansionArg_array_length":0} start 98.6656 took 22.188s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":4,"ExpansionArg_type_4":3,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":11} start 100.9105 took 21.2431s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":9} start 101.8608 took 24.6623s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":8,"ExpansionArg_array_length":0} start 95.7304 took 31.1401s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":7,"ExpansionArg_array_length":0} start 100.3017 took 30.3316s
*-- Test Case {"Switcher":false,"Target_Switch_Base":3,"ExpansionArg_type":0,"_bound":3} start 80.397 took 50.5027s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":3,"ExpansionArg_type":0,"_bound":3}
* Error: Tropigate failed because SyntaxError: Unexpected token (6:4) on program /**
 * Created by lawrence on 4/16/16.
 */
'use strict';

var assert = require('assert');
var _ = require('lodash');
var convert = require('./joi-to-json-schema');

module.exports.create = function (routes, options) {
  var swagger = new SwaggerDoc();
  var result = swagger.createResponse(options);
  var paths = swagger.loadRestifyRoutes(routes);
  result.paths = paths;
  return result;
};

function SwaggerDoc() {
  var swaggerDoc = this;

  var SWAGGER_METHODS = ['get', 'patch', 'post', 'put', 'delete'],
    SWAGGER_VERSION = '2.0';

  swaggerDoc.createResponse = function (options) {
    assert.ok(options.host, 'Swagger not initialized! Host of configure required!');

    swaggerDoc.definitions = require('./definition').getDefinitions(options.cwd);
    return {
      swagger: SWAGGER_VERSION,
      info: options.info,
      host: options.host,
      basePath: options.basePath,
      schemes: options.schemes || ['http'],
      securityDefinitions: options.securityDefinitions || {},
      definitions: swaggerDoc.definitions
    };
  };

  swaggerDoc.convertToSwagger = function (path) {
    return path.replace(/:([^/]+)/g, '{$1}');
  };

  swaggerDoc.loadRestifyRoutes = function (routes) {
    var paths = {};
    _(routes).forEach(function (route) {
      if (!route.meta.admin || !route.meta.hide) {
        var spec = route;
        var pathName = swaggerDoc.convertToSwagger(spec.path);
        var flag = paths[pathName] && paths[pathName][spec.method.toLowerCase()];
        assert.ok(!flag, 'Swagger doc method:' + spec.method + ',path:' + spec.path + ' exist!');
        if (!paths[pathName]) {
          paths[pathName] = {};
        }

        var parameters = [];
        for (var item in spec.parameters) {
          var content = spec.parameters[item];
          var schemaName = content.name;
          if (item === 'body') {
            if (content.schema && content.schema.isJoi) {
              swaggerDoc.definitions[content.name] = convert(content.schema);
            } else {
              schemaName = content.schema || content.name;
            }

            var p = {
              name: item,
              in: item,
              description: content.description,
              required: content.required || true
            };
            if (content.type === 'array') {
              p.schema = {
                type: 'array',
                items: { $ref: '#/definitions/' + schemaName }
              };
            } else {
              p.schema = { $ref: '#/definitions/' + schemaName };
            }
            parameters.push(p);
          } else {
            var schema = convert(content);
            for (var key in schema.properties) {
              var obj = schema.properties[key];
              obj.in = item;
              obj.name = key;
              obj.required = _.indexOf(schema.required, key) >= 0;
              parameters.push(obj);
            }
          }

        }

        /*if (spec.meta.auth) {
         parameters.push({
         name: 'Authorization',
         type: 'string',
         required: true,
         in: 'header',
         description: 'access token or refresh token'
         });
         }*/

        paths[pathName][spec.method.toLowerCase()] = {
          tags: spec.swagger.tags,
          summary: spec.swagger.summary,
          description: spec.swagger.description,
          consumes: spec.swagger.consumes || [],
          produces: spec.swagger.produces || [],
          operationId: spec.controller.action,
          "x-swagger-router-controller": spec.controller.name,
          parameters: parameters,
          responses: spec.responses
        };
      }
    });

    return paths;
  };

  return swaggerDoc;
}
 at SyntaxError: Unexpected token (6:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":3,"ExpansionArg_type":0,"_bound":3}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_array_element_0_type":0} start 110.0331 took 21.8266s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":9,"ExpansionArg_array_length":0} start 104.8755 took 27.8029s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":10} start 102.8549 took 29.8236s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":9,"ExpansionArg_array_length":0} start 111.8413 took 22.0977s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_bool":false} start 110.3697 took 23.5807s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":3,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":10} start 106.5915 took 29.2218s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":1,"ExpansionArg_int":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":6} start 113.8653 took 23.6274s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_int":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":7,"ExpansionArg_string":"PureString"} start 113.5006 took 24.3855s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":3,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":10} start 112.569 took 28.3424s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_array_element_0_type":0} start 121.0456 took 21.544s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_string":"","ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":7,"ExpansionArg_array_length":0} start 115.3137 took 29.86s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_bool":false} start 134.1334 took 17.8686s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_bool":false} start 122.3184 took 30.252s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":5,"ExpansionArg_type_4":4,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":13} start 126.6816 took 26.6463s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_array_element_0_type":0} start 130.7838 took 22.5442s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":5,"ExpansionArg_array_length":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_bool":false} start 133.6382 took 20.9477s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_array_element_0_type":0} start 136.0425 took 19.2365s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":5,"ExpansionArg_array_length":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":8,"ExpansionArg_bool":false} start 134.8056 took 21.2678s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_array_element_0_type":0} start 127.074 took 29.7922s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":7} start 137.7679 took 20.8498s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_1_type":0} start 142.8271 took 17.8376s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_array_element_1_type":0} start 132.1501 took 28.9007s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_bool":false} start 132.9558 took 29.1418s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":10} start 138.0952 took 28.1942s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":1,"ExpansionArg_type_4":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":7} start 152.2554 took 18.698s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":3,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":12} start 152.8829 took 18.5874s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":8,"ExpansionArg_array_length":0} start 141.2048 took 30.2655s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":1,"ExpansionArg_int":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":6} start 153.5293 took 18.795s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_array_element_0_type":0} start 145.4141 took 26.9104s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_array_element_1_type":0} start 157.1074 took 16.9548s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":1,"ExpansionArg_type_4":3,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":8,"ExpansionArg_string":"PureString"} start 156.3178 took 19.6475s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":8,"ExpansionArg_bool":false} start 161.3287 took 18.6967s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_1_type":0} start 155.5715 took 25.5886s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":5,"ExpansionArg_bool":true,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":11} start 154.9232 took 26.9505s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_array_element_0_type":0} start 154.2514 took 27.6288s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_int":0,"_bound":4} start 158.9502 took 25.3395s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_int":0,"_bound":4}
* Error: Tropigate failed because SyntaxError: Unexpected token (31:8) on program // Copyright 2012 Mark Cavage, Inc.  All rights reserved.
//
// Restify supports both a client and server API, and in the essence of not
// loading the kitchen sink on clients, the exports here is chunked up into
// client and server; note clients will have to opt in by setting the env
// var "RESTIFY_CLIENT_ONLY", but if you're in that boat, it's not hard to do,
// and enables much faster load times
//

'use strict';

var shallowCopy = require('./utils').shallowCopy;


/**
 * creates an http request client. based on options passed in, will create one
 * of three existing clients: Http, String, or Json.
 * @public
 * @function createClient
 * @param    {Object} options      an options object
 * @param    {String} options.type 'http' | 'json' | 'string'
 * @returns  {HttpClient | JsonClient | StringClient}
 */
function createClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    var assert = require('assert-plus');
    var bunyan = require('./bunyan_helper');
    var clients = require('./clients');

    assert.object(options, 'options');

    var client;
    var opts = shallowCopy(options);
    opts.agent = options.agent;
    opts.name = opts.name || 'restify';
    opts.type = opts.type || 'application/octet-stream';
    opts.log = opts.log || bunyan.createLogger(opts.name);

    switch (opts.type) {
        case 'json':
            client = new clients.JsonClient(opts);
            break;

        case 'string':
            client = new clients.StringClient(opts);
            break;

        case 'http':
        default:
            client = new clients.HttpClient(opts);
            break;
    }

    return (client);
}


/**
 * creates a json httpclient.
 * @public
 * @function createJsonClient
 * @param    {Object}     options an options object
 * @returns  {JsonClient}         a json client
 */
function createJsonClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'json';
    return (createClient(options));
}


/**
 * creates a string httpclient.
 * @public
 * @function createStringClient
 * @param    {Object}       options an options object
 * @returns  {StringClient}         a string client
 */
function createStringClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'string';
    return (createClient(options));
}


/**
 * creates a regular httpclient.
 * @public
 * @function createHttpClient
 * @param    {Object}     options an options object
 * @returns  {HttpClient}         an http client
 */
function createHttpClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'http';
    return (createClient(options));
}


/**
 * creates a server.
 * @public
 * @function createServer
 * @param    {Object} options an options object
 * @returns  {Server}
 */
function createServer(options) {
    var bunyan = require('./bunyan_helper');
    var InternalError = require('./errors').InternalError;
    var Router = require('./router');
    var Server = require('./server');

    var opts = shallowCopy(options || {});
    var server;

    opts.name = opts.name || 'restify';
    opts.log = opts.log || bunyan.createLogger(opts.name);
    opts.router = opts.router || new Router(opts);

    server = new Server(opts);

    if (server.handleUncaughtExceptions) {
        server.on('uncaughtException', function (req, res, route, e) {
            if (this.listeners('uncaughtException').length > 1 ||
                res.headersSent) {
                return (false);
            }

            res.send(new InternalError(e, e.message || 'unexpected error'));
            return (true);
        });
    }

    return (server);
}


/**
 * Returns a string representation of a URL pattern , with its
 * parameters filled in by the passed hash.
 *
 * If a key is not found in the hash for a param, it is left alone.
 * @public
 * @function realizeUrl
 * @param   {String} pattern a url string
 * @param   {Object} params  a hash of parameter names to values for
 *                           substitution
 * @returns {String}
 */
function realizeUrl(pattern, params) {
    var p = pattern.replace(/\/:([^/]+)/g, function (match, k) {
        return (params.hasOwnProperty(k) ? '/' + params[k] : match);
    });


    return (require('./utils').sanitizePath(p));
}


///--- Exports

module.exports = {
    // Client API
    createClient: createClient,
    createJsonClient: createJsonClient,
    createJSONClient: createJsonClient,
    createStringClient: createStringClient,
    createHttpClient: createHttpClient,
    get HttpClient() {
        return (require('./clients').HttpClient);
    },
    get JsonClient() {
        return (require('./clients').JsonClient);
    },
    get StringClient() {
        return (require('./clients').StringClient);
    },

    // Miscellaneous API
    get bunyan() {
        return (require('./bunyan_helper'));
    },

    errors: {}

};

var errors = require('./errors');
Object.keys(errors).forEach(function (k) {
    module.exports.errors[k] = errors[k];
    module.exports[k] = errors[k];
});

if (!process.env.RESTIFY_CLIENT_ONLY) {

    module.exports.createServer = createServer;
    module.exports.httpDate = require('./http_date');
    module.exports.realizeUrl = realizeUrl;
    module.exports.formatters = require('./formatters');
    module.exports.plugins = {};
    var plugins = require('./plugins');
    Object.keys(plugins).forEach(function (k) {
        module.exports.plugins[k] = plugins[k];
        module.exports[k] = plugins[k];
    });
}
 at SyntaxError: Unexpected token (31:8)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":1,"ExpansionArg_int":0,"_bound":4}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":1,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":8} start 160.9181 took 25.8227s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_int":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":5,"ExpansionArg_string":"PureString"} start 162.3424 took 25.6594s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":3,"ExpandedSwitcher":0,"_bound":8,"ExpansionArg_string":"PureString"} start 166.6716 took 21.9087s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":7} start 171.1676 took 18.5834s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":5,"ExpansionArg_array_length":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_bool":false} start 172.1331 took 18.1577s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":4,"ExpansionArg_string":"PureString"} start 174.3077 took 19.9261s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_array_element_1_type":0} start 172.5305 took 24.9032s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":1,"ExpansionArg_type_4":3,"ExpansionArg_string":"!0!","ExpandedSwitcher":0,"_bound":12} start 171.7734 took 26.1842s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":3,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpandedSwitcher":0,"_bound":15} start 173.1471 took 26.5521s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":1,"ExpansionArg_type_4":4,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":9,"ExpansionArg_array_length":0} start 176.2703 took 24.5314s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_2_type":0} start 184.4558 took 16.8313s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_int":0,"_bound":5,"ExpansionArg_string":"PureString"} start 182.1595 took 24.482s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_int":0,"_bound":5,"ExpansionArg_string":"PureString"}
* Error: TypeError: Cannot read property 'enable' of undefined
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_int":0,"_bound":5}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":5,"ExpansionArg_bool":true,"ExpandedSwitcher":0,"_bound":11} start 180.1341 took 27.118s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_2_type":0} start 181.432 took 25.8203s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":9,"ExpansionArg_int_2":0} start 187.1361 took 20.1163s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":6,"ExpansionArg_type_4":5,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":12} start 190.5856 took 18.2258s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":5,"ExpansionArg_bool":true,"ExpandedSwitcher":0,"_bound":10} start 182.6109 took 26.8071s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":4,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":11,"ExpansionArg_array_length":0} start 188.8097 took 24.3921s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_string":"","ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":6,"ExpansionArg_array_length":0} start 188.2448 took 25.9679s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":5,"ExpansionArg_bool":true,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":10} start 190.0129 took 25.1001s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":3,"ExpandedSwitcher":0,"_bound":8,"ExpansionArg_string":"PureString"} start 199.9769 took 16.3934s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":5,"ExpansionArg_bool":true,"ExpandedSwitcher":0,"_bound":13} start 198.2952 took 18.7983s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":1,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":9} start 194.528 took 25.2577s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":1,"ExpansionArg_type_4":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_bool":false} start 201.0514 took 19.9821s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_string":"","ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":5,"ExpansionArg_array_length":0} start 197.6841 took 24.4429s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_string":"","_bound":6,"ExpansionArg_array_length":0} start 208.0388 took 17.5105s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_string":"","_bound":6,"ExpansionArg_array_length":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (31:8) on program // Copyright 2012 Mark Cavage, Inc.  All rights reserved.
//
// Restify supports both a client and server API, and in the essence of not
// loading the kitchen sink on clients, the exports here is chunked up into
// client and server; note clients will have to opt in by setting the env
// var "RESTIFY_CLIENT_ONLY", but if you're in that boat, it's not hard to do,
// and enables much faster load times
//

'use strict';

var shallowCopy = require('./utils').shallowCopy;


/**
 * creates an http request client. based on options passed in, will create one
 * of three existing clients: Http, String, or Json.
 * @public
 * @function createClient
 * @param    {Object} options      an options object
 * @param    {String} options.type 'http' | 'json' | 'string'
 * @returns  {HttpClient | JsonClient | StringClient}
 */
function createClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    var assert = require('assert-plus');
    var bunyan = require('./bunyan_helper');
    var clients = require('./clients');

    assert.object(options, 'options');

    var client;
    var opts = shallowCopy(options);
    opts.agent = options.agent;
    opts.name = opts.name || 'restify';
    opts.type = opts.type || 'application/octet-stream';
    opts.log = opts.log || bunyan.createLogger(opts.name);

    switch (opts.type) {
        case 'json':
            client = new clients.JsonClient(opts);
            break;

        case 'string':
            client = new clients.StringClient(opts);
            break;

        case 'http':
        default:
            client = new clients.HttpClient(opts);
            break;
    }

    return (client);
}


/**
 * creates a json httpclient.
 * @public
 * @function createJsonClient
 * @param    {Object}     options an options object
 * @returns  {JsonClient}         a json client
 */
function createJsonClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'json';
    return (createClient(options));
}


/**
 * creates a string httpclient.
 * @public
 * @function createStringClient
 * @param    {Object}       options an options object
 * @returns  {StringClient}         a string client
 */
function createStringClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'string';
    return (createClient(options));
}


/**
 * creates a regular httpclient.
 * @public
 * @function createHttpClient
 * @param    {Object}     options an options object
 * @returns  {HttpClient}         an http client
 */
function createHttpClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'http';
    return (createClient(options));
}


/**
 * creates a server.
 * @public
 * @function createServer
 * @param    {Object} options an options object
 * @returns  {Server}
 */
function createServer(options) {
    var bunyan = require('./bunyan_helper');
    var InternalError = require('./errors').InternalError;
    var Router = require('./router');
    var Server = require('./server');

    var opts = shallowCopy(options || {});
    var server;

    opts.name = opts.name || 'restify';
    opts.log = opts.log || bunyan.createLogger(opts.name);
    opts.router = opts.router || new Router(opts);

    server = new Server(opts);

    if (server.handleUncaughtExceptions) {
        server.on('uncaughtException', function (req, res, route, e) {
            if (this.listeners('uncaughtException').length > 1 ||
                res.headersSent) {
                return (false);
            }

            res.send(new InternalError(e, e.message || 'unexpected error'));
            return (true);
        });
    }

    return (server);
}


/**
 * Returns a string representation of a URL pattern , with its
 * parameters filled in by the passed hash.
 *
 * If a key is not found in the hash for a param, it is left alone.
 * @public
 * @function realizeUrl
 * @param   {String} pattern a url string
 * @param   {Object} params  a hash of parameter names to values for
 *                           substitution
 * @returns {String}
 */
function realizeUrl(pattern, params) {
    var p = pattern.replace(/\/:([^/]+)/g, function (match, k) {
        return (params.hasOwnProperty(k) ? '/' + params[k] : match);
    });


    return (require('./utils').sanitizePath(p));
}


///--- Exports

module.exports = {
    // Client API
    createClient: createClient,
    createJsonClient: createJsonClient,
    createJSONClient: createJsonClient,
    createStringClient: createStringClient,
    createHttpClient: createHttpClient,
    get HttpClient() {
        return (require('./clients').HttpClient);
    },
    get JsonClient() {
        return (require('./clients').JsonClient);
    },
    get StringClient() {
        return (require('./clients').StringClient);
    },

    // Miscellaneous API
    get bunyan() {
        return (require('./bunyan_helper'));
    },

    errors: {}

};

var errors = require('./errors');
Object.keys(errors).forEach(function (k) {
    module.exports.errors[k] = errors[k];
    module.exports[k] = errors[k];
});

if (!process.env.RESTIFY_CLIENT_ONLY) {

    module.exports.createServer = createServer;
    module.exports.httpDate = require('./http_date');
    module.exports.realizeUrl = realizeUrl;
    module.exports.formatters = require('./formatters');
    module.exports.plugins = {};
    var plugins = require('./plugins');
    Object.keys(plugins).forEach(function (k) {
        module.exports.plugins[k] = plugins[k];
        module.exports[k] = plugins[k];
    });
}
 at SyntaxError: Unexpected token (31:8)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_string":"","_bound":6}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","_bound":7} start 206.9563 took 19.0876s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","_bound":7}
* Error: Tropigate failed because SyntaxError: Unexpected token (31:8) on program // Copyright 2012 Mark Cavage, Inc.  All rights reserved.
//
// Restify supports both a client and server API, and in the essence of not
// loading the kitchen sink on clients, the exports here is chunked up into
// client and server; note clients will have to opt in by setting the env
// var "RESTIFY_CLIENT_ONLY", but if you're in that boat, it's not hard to do,
// and enables much faster load times
//

'use strict';

var shallowCopy = require('./utils').shallowCopy;


/**
 * creates an http request client. based on options passed in, will create one
 * of three existing clients: Http, String, or Json.
 * @public
 * @function createClient
 * @param    {Object} options      an options object
 * @param    {String} options.type 'http' | 'json' | 'string'
 * @returns  {HttpClient | JsonClient | StringClient}
 */
function createClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    var assert = require('assert-plus');
    var bunyan = require('./bunyan_helper');
    var clients = require('./clients');

    assert.object(options, 'options');

    var client;
    var opts = shallowCopy(options);
    opts.agent = options.agent;
    opts.name = opts.name || 'restify';
    opts.type = opts.type || 'application/octet-stream';
    opts.log = opts.log || bunyan.createLogger(opts.name);

    switch (opts.type) {
        case 'json':
            client = new clients.JsonClient(opts);
            break;

        case 'string':
            client = new clients.StringClient(opts);
            break;

        case 'http':
        default:
            client = new clients.HttpClient(opts);
            break;
    }

    return (client);
}


/**
 * creates a json httpclient.
 * @public
 * @function createJsonClient
 * @param    {Object}     options an options object
 * @returns  {JsonClient}         a json client
 */
function createJsonClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'json';
    return (createClient(options));
}


/**
 * creates a string httpclient.
 * @public
 * @function createStringClient
 * @param    {Object}       options an options object
 * @returns  {StringClient}         a string client
 */
function createStringClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'string';
    return (createClient(options));
}


/**
 * creates a regular httpclient.
 * @public
 * @function createHttpClient
 * @param    {Object}     options an options object
 * @returns  {HttpClient}         an http client
 */
function createHttpClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'http';
    return (createClient(options));
}


/**
 * creates a server.
 * @public
 * @function createServer
 * @param    {Object} options an options object
 * @returns  {Server}
 */
function createServer(options) {
    var bunyan = require('./bunyan_helper');
    var InternalError = require('./errors').InternalError;
    var Router = require('./router');
    var Server = require('./server');

    var opts = shallowCopy(options || {});
    var server;

    opts.name = opts.name || 'restify';
    opts.log = opts.log || bunyan.createLogger(opts.name);
    opts.router = opts.router || new Router(opts);

    server = new Server(opts);

    if (server.handleUncaughtExceptions) {
        server.on('uncaughtException', function (req, res, route, e) {
            if (this.listeners('uncaughtException').length > 1 ||
                res.headersSent) {
                return (false);
            }

            res.send(new InternalError(e, e.message || 'unexpected error'));
            return (true);
        });
    }

    return (server);
}


/**
 * Returns a string representation of a URL pattern , with its
 * parameters filled in by the passed hash.
 *
 * If a key is not found in the hash for a param, it is left alone.
 * @public
 * @function realizeUrl
 * @param   {String} pattern a url string
 * @param   {Object} params  a hash of parameter names to values for
 *                           substitution
 * @returns {String}
 */
function realizeUrl(pattern, params) {
    var p = pattern.replace(/\/:([^/]+)/g, function (match, k) {
        return (params.hasOwnProperty(k) ? '/' + params[k] : match);
    });


    return (require('./utils').sanitizePath(p));
}


///--- Exports

module.exports = {
    // Client API
    createClient: createClient,
    createJsonClient: createJsonClient,
    createJSONClient: createJsonClient,
    createStringClient: createStringClient,
    createHttpClient: createHttpClient,
    get HttpClient() {
        return (require('./clients').HttpClient);
    },
    get JsonClient() {
        return (require('./clients').JsonClient);
    },
    get StringClient() {
        return (require('./clients').StringClient);
    },

    // Miscellaneous API
    get bunyan() {
        return (require('./bunyan_helper'));
    },

    errors: {}

};

var errors = require('./errors');
Object.keys(errors).forEach(function (k) {
    module.exports.errors[k] = errors[k];
    module.exports[k] = errors[k];
});

if (!process.env.RESTIFY_CLIENT_ONLY) {

    module.exports.createServer = createServer;
    module.exports.httpDate = require('./http_date');
    module.exports.realizeUrl = realizeUrl;
    module.exports.formatters = require('./formatters');
    module.exports.plugins = {};
    var plugins = require('./plugins');
    Object.keys(plugins).forEach(function (k) {
        module.exports.plugins[k] = plugins[k];
        module.exports[k] = plugins[k];
    });
}
 at SyntaxError: Unexpected token (31:8)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":3,"ExpansionArg_string":"","_bound":7}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":3,"_bound":4,"ExpansionArg_string":"PureString"} start 207.5244 took 19.0628s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":3,"_bound":4,"ExpansionArg_string":"PureString"}
* Error: Tropigate failed because SyntaxError: Unexpected token (31:8) on program // Copyright 2012 Mark Cavage, Inc.  All rights reserved.
//
// Restify supports both a client and server API, and in the essence of not
// loading the kitchen sink on clients, the exports here is chunked up into
// client and server; note clients will have to opt in by setting the env
// var "RESTIFY_CLIENT_ONLY", but if you're in that boat, it's not hard to do,
// and enables much faster load times
//

'use strict';

var shallowCopy = require('./utils').shallowCopy;


/**
 * creates an http request client. based on options passed in, will create one
 * of three existing clients: Http, String, or Json.
 * @public
 * @function createClient
 * @param    {Object} options      an options object
 * @param    {String} options.type 'http' | 'json' | 'string'
 * @returns  {HttpClient | JsonClient | StringClient}
 */
function createClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    var assert = require('assert-plus');
    var bunyan = require('./bunyan_helper');
    var clients = require('./clients');

    assert.object(options, 'options');

    var client;
    var opts = shallowCopy(options);
    opts.agent = options.agent;
    opts.name = opts.name || 'restify';
    opts.type = opts.type || 'application/octet-stream';
    opts.log = opts.log || bunyan.createLogger(opts.name);

    switch (opts.type) {
        case 'json':
            client = new clients.JsonClient(opts);
            break;

        case 'string':
            client = new clients.StringClient(opts);
            break;

        case 'http':
        default:
            client = new clients.HttpClient(opts);
            break;
    }

    return (client);
}


/**
 * creates a json httpclient.
 * @public
 * @function createJsonClient
 * @param    {Object}     options an options object
 * @returns  {JsonClient}         a json client
 */
function createJsonClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'json';
    return (createClient(options));
}


/**
 * creates a string httpclient.
 * @public
 * @function createStringClient
 * @param    {Object}       options an options object
 * @returns  {StringClient}         a string client
 */
function createStringClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'string';
    return (createClient(options));
}


/**
 * creates a regular httpclient.
 * @public
 * @function createHttpClient
 * @param    {Object}     options an options object
 * @returns  {HttpClient}         an http client
 */
function createHttpClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'http';
    return (createClient(options));
}


/**
 * creates a server.
 * @public
 * @function createServer
 * @param    {Object} options an options object
 * @returns  {Server}
 */
function createServer(options) {
    var bunyan = require('./bunyan_helper');
    var InternalError = require('./errors').InternalError;
    var Router = require('./router');
    var Server = require('./server');

    var opts = shallowCopy(options || {});
    var server;

    opts.name = opts.name || 'restify';
    opts.log = opts.log || bunyan.createLogger(opts.name);
    opts.router = opts.router || new Router(opts);

    server = new Server(opts);

    if (server.handleUncaughtExceptions) {
        server.on('uncaughtException', function (req, res, route, e) {
            if (this.listeners('uncaughtException').length > 1 ||
                res.headersSent) {
                return (false);
            }

            res.send(new InternalError(e, e.message || 'unexpected error'));
            return (true);
        });
    }

    return (server);
}


/**
 * Returns a string representation of a URL pattern , with its
 * parameters filled in by the passed hash.
 *
 * If a key is not found in the hash for a param, it is left alone.
 * @public
 * @function realizeUrl
 * @param   {String} pattern a url string
 * @param   {Object} params  a hash of parameter names to values for
 *                           substitution
 * @returns {String}
 */
function realizeUrl(pattern, params) {
    var p = pattern.replace(/\/:([^/]+)/g, function (match, k) {
        return (params.hasOwnProperty(k) ? '/' + params[k] : match);
    });


    return (require('./utils').sanitizePath(p));
}


///--- Exports

module.exports = {
    // Client API
    createClient: createClient,
    createJsonClient: createJsonClient,
    createJSONClient: createJsonClient,
    createStringClient: createStringClient,
    createHttpClient: createHttpClient,
    get HttpClient() {
        return (require('./clients').HttpClient);
    },
    get JsonClient() {
        return (require('./clients').JsonClient);
    },
    get StringClient() {
        return (require('./clients').StringClient);
    },

    // Miscellaneous API
    get bunyan() {
        return (require('./bunyan_helper'));
    },

    errors: {}

};

var errors = require('./errors');
Object.keys(errors).forEach(function (k) {
    module.exports.errors[k] = errors[k];
    module.exports[k] = errors[k];
});

if (!process.env.RESTIFY_CLIENT_ONLY) {

    module.exports.createServer = createServer;
    module.exports.httpDate = require('./http_date');
    module.exports.realizeUrl = realizeUrl;
    module.exports.formatters = require('./formatters');
    module.exports.plugins = {};
    var plugins = require('./plugins');
    Object.keys(plugins).forEach(function (k) {
        module.exports.plugins[k] = plugins[k];
        module.exports[k] = plugins[k];
    });
}
 at SyntaxError: Unexpected token (31:8)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":3,"_bound":4}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":5,"ExpansionArg_bool":true,"ExpandedSwitcher":0,"_bound":11} start 201.5341 took 25.6559s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":3,"ExpansionArg_type_4":1,"ExpandedSwitcher":0,"_bound":9} start 209.1066 took 18.8643s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":1,"ExpansionArg_type_4":3,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":10} start 208.541 took 19.9628s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_array_element_0_type":0} start 209.6501 took 18.8538s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":7,"ExpansionArg_bool":false} start 214.5085 took 18.4219s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":11,"ExpansionArg_array_length":0} start 216.6487 took 17.1398s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":1,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":9} start 217.3069 took 17.1098s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_bool":false} start 213.4904 took 24.6193s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":1,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpandedSwitcher":0,"_bound":17} start 221.2676 took 18.2949s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":3,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":7,"ExpansionArg_string":"PureString"} start 215.3221 took 24.6941s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":10,"ExpansionArg_int_2":0} start 220.0058 took 20.9241s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":6,"ExpansionArg_bool":false} start 222.3827 took 18.9799s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":2,"ExpansionArg_int":4,"ExpansionArg_type_4":3,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":12} start 226.2589 took 16.8952s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"_bound":7,"ExpansionArg_bool":false} start 225.7507 took 18.6198s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"_bound":7,"ExpansionArg_bool":false}
* Error: Tropigate failed because SyntaxError: Unexpected token (31:8) on program // Copyright 2012 Mark Cavage, Inc.  All rights reserved.
//
// Restify supports both a client and server API, and in the essence of not
// loading the kitchen sink on clients, the exports here is chunked up into
// client and server; note clients will have to opt in by setting the env
// var "RESTIFY_CLIENT_ONLY", but if you're in that boat, it's not hard to do,
// and enables much faster load times
//

'use strict';

var shallowCopy = require('./utils').shallowCopy;


/**
 * creates an http request client. based on options passed in, will create one
 * of three existing clients: Http, String, or Json.
 * @public
 * @function createClient
 * @param    {Object} options      an options object
 * @param    {String} options.type 'http' | 'json' | 'string'
 * @returns  {HttpClient | JsonClient | StringClient}
 */
function createClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    var assert = require('assert-plus');
    var bunyan = require('./bunyan_helper');
    var clients = require('./clients');

    assert.object(options, 'options');

    var client;
    var opts = shallowCopy(options);
    opts.agent = options.agent;
    opts.name = opts.name || 'restify';
    opts.type = opts.type || 'application/octet-stream';
    opts.log = opts.log || bunyan.createLogger(opts.name);

    switch (opts.type) {
        case 'json':
            client = new clients.JsonClient(opts);
            break;

        case 'string':
            client = new clients.StringClient(opts);
            break;

        case 'http':
        default:
            client = new clients.HttpClient(opts);
            break;
    }

    return (client);
}


/**
 * creates a json httpclient.
 * @public
 * @function createJsonClient
 * @param    {Object}     options an options object
 * @returns  {JsonClient}         a json client
 */
function createJsonClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'json';
    return (createClient(options));
}


/**
 * creates a string httpclient.
 * @public
 * @function createStringClient
 * @param    {Object}       options an options object
 * @returns  {StringClient}         a string client
 */
function createStringClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'string';
    return (createClient(options));
}


/**
 * creates a regular httpclient.
 * @public
 * @function createHttpClient
 * @param    {Object}     options an options object
 * @returns  {HttpClient}         an http client
 */
function createHttpClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'http';
    return (createClient(options));
}


/**
 * creates a server.
 * @public
 * @function createServer
 * @param    {Object} options an options object
 * @returns  {Server}
 */
function createServer(options) {
    var bunyan = require('./bunyan_helper');
    var InternalError = require('./errors').InternalError;
    var Router = require('./router');
    var Server = require('./server');

    var opts = shallowCopy(options || {});
    var server;

    opts.name = opts.name || 'restify';
    opts.log = opts.log || bunyan.createLogger(opts.name);
    opts.router = opts.router || new Router(opts);

    server = new Server(opts);

    if (server.handleUncaughtExceptions) {
        server.on('uncaughtException', function (req, res, route, e) {
            if (this.listeners('uncaughtException').length > 1 ||
                res.headersSent) {
                return (false);
            }

            res.send(new InternalError(e, e.message || 'unexpected error'));
            return (true);
        });
    }

    return (server);
}


/**
 * Returns a string representation of a URL pattern , with its
 * parameters filled in by the passed hash.
 *
 * If a key is not found in the hash for a param, it is left alone.
 * @public
 * @function realizeUrl
 * @param   {String} pattern a url string
 * @param   {Object} params  a hash of parameter names to values for
 *                           substitution
 * @returns {String}
 */
function realizeUrl(pattern, params) {
    var p = pattern.replace(/\/:([^/]+)/g, function (match, k) {
        return (params.hasOwnProperty(k) ? '/' + params[k] : match);
    });


    return (require('./utils').sanitizePath(p));
}


///--- Exports

module.exports = {
    // Client API
    createClient: createClient,
    createJsonClient: createJsonClient,
    createJSONClient: createJsonClient,
    createStringClient: createStringClient,
    createHttpClient: createHttpClient,
    get HttpClient() {
        return (require('./clients').HttpClient);
    },
    get JsonClient() {
        return (require('./clients').JsonClient);
    },
    get StringClient() {
        return (require('./clients').StringClient);
    },

    // Miscellaneous API
    get bunyan() {
        return (require('./bunyan_helper'));
    },

    errors: {}

};

var errors = require('./errors');
Object.keys(errors).forEach(function (k) {
    module.exports.errors[k] = errors[k];
    module.exports[k] = errors[k];
});

if (!process.env.RESTIFY_CLIENT_ONLY) {

    module.exports.createServer = createServer;
    module.exports.httpDate = require('./http_date');
    module.exports.realizeUrl = realizeUrl;
    module.exports.formatters = require('./formatters');
    module.exports.plugins = {};
    var plugins = require('./plugins');
    Object.keys(plugins).forEach(function (k) {
        module.exports.plugins[k] = plugins[k];
        module.exports[k] = plugins[k];
    });
}
 at SyntaxError: Unexpected token (31:8)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"_bound":7}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":3,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":13} start 228.775 took 17.1689s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_2_type":0} start 228.2506 took 20.5296s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":2,"ExpansionArg_string":"","_bound":6,"ExpansionArg_int":0} start 226.8607 took 24.659s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":2,"ExpansionArg_string":"","_bound":6,"ExpansionArg_int":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (31:8) on program // Copyright 2012 Mark Cavage, Inc.  All rights reserved.
//
// Restify supports both a client and server API, and in the essence of not
// loading the kitchen sink on clients, the exports here is chunked up into
// client and server; note clients will have to opt in by setting the env
// var "RESTIFY_CLIENT_ONLY", but if you're in that boat, it's not hard to do,
// and enables much faster load times
//

'use strict';

var shallowCopy = require('./utils').shallowCopy;


/**
 * creates an http request client. based on options passed in, will create one
 * of three existing clients: Http, String, or Json.
 * @public
 * @function createClient
 * @param    {Object} options      an options object
 * @param    {String} options.type 'http' | 'json' | 'string'
 * @returns  {HttpClient | JsonClient | StringClient}
 */
function createClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    var assert = require('assert-plus');
    var bunyan = require('./bunyan_helper');
    var clients = require('./clients');

    assert.object(options, 'options');

    var client;
    var opts = shallowCopy(options);
    opts.agent = options.agent;
    opts.name = opts.name || 'restify';
    opts.type = opts.type || 'application/octet-stream';
    opts.log = opts.log || bunyan.createLogger(opts.name);

    switch (opts.type) {
        case 'json':
            client = new clients.JsonClient(opts);
            break;

        case 'string':
            client = new clients.StringClient(opts);
            break;

        case 'http':
        default:
            client = new clients.HttpClient(opts);
            break;
    }

    return (client);
}


/**
 * creates a json httpclient.
 * @public
 * @function createJsonClient
 * @param    {Object}     options an options object
 * @returns  {JsonClient}         a json client
 */
function createJsonClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'json';
    return (createClient(options));
}


/**
 * creates a string httpclient.
 * @public
 * @function createStringClient
 * @param    {Object}       options an options object
 * @returns  {StringClient}         a string client
 */
function createStringClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'string';
    return (createClient(options));
}


/**
 * creates a regular httpclient.
 * @public
 * @function createHttpClient
 * @param    {Object}     options an options object
 * @returns  {HttpClient}         an http client
 */
function createHttpClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'http';
    return (createClient(options));
}


/**
 * creates a server.
 * @public
 * @function createServer
 * @param    {Object} options an options object
 * @returns  {Server}
 */
function createServer(options) {
    var bunyan = require('./bunyan_helper');
    var InternalError = require('./errors').InternalError;
    var Router = require('./router');
    var Server = require('./server');

    var opts = shallowCopy(options || {});
    var server;

    opts.name = opts.name || 'restify';
    opts.log = opts.log || bunyan.createLogger(opts.name);
    opts.router = opts.router || new Router(opts);

    server = new Server(opts);

    if (server.handleUncaughtExceptions) {
        server.on('uncaughtException', function (req, res, route, e) {
            if (this.listeners('uncaughtException').length > 1 ||
                res.headersSent) {
                return (false);
            }

            res.send(new InternalError(e, e.message || 'unexpected error'));
            return (true);
        });
    }

    return (server);
}


/**
 * Returns a string representation of a URL pattern , with its
 * parameters filled in by the passed hash.
 *
 * If a key is not found in the hash for a param, it is left alone.
 * @public
 * @function realizeUrl
 * @param   {String} pattern a url string
 * @param   {Object} params  a hash of parameter names to values for
 *                           substitution
 * @returns {String}
 */
function realizeUrl(pattern, params) {
    var p = pattern.replace(/\/:([^/]+)/g, function (match, k) {
        return (params.hasOwnProperty(k) ? '/' + params[k] : match);
    });


    return (require('./utils').sanitizePath(p));
}


///--- Exports

module.exports = {
    // Client API
    createClient: createClient,
    createJsonClient: createJsonClient,
    createJSONClient: createJsonClient,
    createStringClient: createStringClient,
    createHttpClient: createHttpClient,
    get HttpClient() {
        return (require('./clients').HttpClient);
    },
    get JsonClient() {
        return (require('./clients').JsonClient);
    },
    get StringClient() {
        return (require('./clients').StringClient);
    },

    // Miscellaneous API
    get bunyan() {
        return (require('./bunyan_helper'));
    },

    errors: {}

};

var errors = require('./errors');
Object.keys(errors).forEach(function (k) {
    module.exports.errors[k] = errors[k];
    module.exports[k] = errors[k];
});

if (!process.env.RESTIFY_CLIENT_ONLY) {

    module.exports.createServer = createServer;
    module.exports.httpDate = require('./http_date');
    module.exports.realizeUrl = realizeUrl;
    module.exports.formatters = require('./formatters');
    module.exports.plugins = {};
    var plugins = require('./plugins');
    Object.keys(plugins).forEach(function (k) {
        module.exports.plugins[k] = plugins[k];
        module.exports[k] = plugins[k];
    });
}
 at SyntaxError: Unexpected token (31:8)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":2,"ExpansionArg_string":"","_bound":6}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":3,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":12} start 234.0673 took 18.1204s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":2,"ExpansionArg_int_2":1,"ExpandedSwitcher":0,"_bound":11} start 229.3485 took 23.7309s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":1,"ExpansionArg_type_4":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpandedSwitcher":0,"_bound":19} start 227.4896 took 26.1294s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":4,"ExpansionArg_string":"","_bound":7,"ExpansionArg_array_length":0} start 238.3886 took 16.6417s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":4,"ExpansionArg_string":"","_bound":7,"ExpansionArg_array_length":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (31:8) on program // Copyright 2012 Mark Cavage, Inc.  All rights reserved.
//
// Restify supports both a client and server API, and in the essence of not
// loading the kitchen sink on clients, the exports here is chunked up into
// client and server; note clients will have to opt in by setting the env
// var "RESTIFY_CLIENT_ONLY", but if you're in that boat, it's not hard to do,
// and enables much faster load times
//

'use strict';

var shallowCopy = require('./utils').shallowCopy;


/**
 * creates an http request client. based on options passed in, will create one
 * of three existing clients: Http, String, or Json.
 * @public
 * @function createClient
 * @param    {Object} options      an options object
 * @param    {String} options.type 'http' | 'json' | 'string'
 * @returns  {HttpClient | JsonClient | StringClient}
 */
function createClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    var assert = require('assert-plus');
    var bunyan = require('./bunyan_helper');
    var clients = require('./clients');

    assert.object(options, 'options');

    var client;
    var opts = shallowCopy(options);
    opts.agent = options.agent;
    opts.name = opts.name || 'restify';
    opts.type = opts.type || 'application/octet-stream';
    opts.log = opts.log || bunyan.createLogger(opts.name);

    switch (opts.type) {
        case 'json':
            client = new clients.JsonClient(opts);
            break;

        case 'string':
            client = new clients.StringClient(opts);
            break;

        case 'http':
        default:
            client = new clients.HttpClient(opts);
            break;
    }

    return (client);
}


/**
 * creates a json httpclient.
 * @public
 * @function createJsonClient
 * @param    {Object}     options an options object
 * @returns  {JsonClient}         a json client
 */
function createJsonClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'json';
    return (createClient(options));
}


/**
 * creates a string httpclient.
 * @public
 * @function createStringClient
 * @param    {Object}       options an options object
 * @returns  {StringClient}         a string client
 */
function createStringClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'string';
    return (createClient(options));
}


/**
 * creates a regular httpclient.
 * @public
 * @function createHttpClient
 * @param    {Object}     options an options object
 * @returns  {HttpClient}         an http client
 */
function createHttpClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'http';
    return (createClient(options));
}


/**
 * creates a server.
 * @public
 * @function createServer
 * @param    {Object} options an options object
 * @returns  {Server}
 */
function createServer(options) {
    var bunyan = require('./bunyan_helper');
    var InternalError = require('./errors').InternalError;
    var Router = require('./router');
    var Server = require('./server');

    var opts = shallowCopy(options || {});
    var server;

    opts.name = opts.name || 'restify';
    opts.log = opts.log || bunyan.createLogger(opts.name);
    opts.router = opts.router || new Router(opts);

    server = new Server(opts);

    if (server.handleUncaughtExceptions) {
        server.on('uncaughtException', function (req, res, route, e) {
            if (this.listeners('uncaughtException').length > 1 ||
                res.headersSent) {
                return (false);
            }

            res.send(new InternalError(e, e.message || 'unexpected error'));
            return (true);
        });
    }

    return (server);
}


/**
 * Returns a string representation of a URL pattern , with its
 * parameters filled in by the passed hash.
 *
 * If a key is not found in the hash for a param, it is left alone.
 * @public
 * @function realizeUrl
 * @param   {String} pattern a url string
 * @param   {Object} params  a hash of parameter names to values for
 *                           substitution
 * @returns {String}
 */
function realizeUrl(pattern, params) {
    var p = pattern.replace(/\/:([^/]+)/g, function (match, k) {
        return (params.hasOwnProperty(k) ? '/' + params[k] : match);
    });


    return (require('./utils').sanitizePath(p));
}


///--- Exports

module.exports = {
    // Client API
    createClient: createClient,
    createJsonClient: createJsonClient,
    createJSONClient: createJsonClient,
    createStringClient: createStringClient,
    createHttpClient: createHttpClient,
    get HttpClient() {
        return (require('./clients').HttpClient);
    },
    get JsonClient() {
        return (require('./clients').JsonClient);
    },
    get StringClient() {
        return (require('./clients').StringClient);
    },

    // Miscellaneous API
    get bunyan() {
        return (require('./bunyan_helper'));
    },

    errors: {}

};

var errors = require('./errors');
Object.keys(errors).forEach(function (k) {
    module.exports.errors[k] = errors[k];
    module.exports[k] = errors[k];
});

if (!process.env.RESTIFY_CLIENT_ONLY) {

    module.exports.createServer = createServer;
    module.exports.httpDate = require('./http_date');
    module.exports.realizeUrl = realizeUrl;
    module.exports.formatters = require('./formatters');
    module.exports.plugins = {};
    var plugins = require('./plugins');
    Object.keys(plugins).forEach(function (k) {
        module.exports.plugins[k] = plugins[k];
        module.exports[k] = plugins[k];
    });
}
 at SyntaxError: Unexpected token (31:8)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":4,"ExpansionArg_string":"","_bound":7}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_2_type":0} start 234.5325 took 22.8586s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":10,"ExpansionArg_int_2":0} start 233.0783 took 25.0491s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":5,"ExpansionArg_bool":true,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":11} start 241.5553 took 17.1152s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_bool":false} start 239.7556 took 19.7856s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":4,"ExpansionArg_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_array_length":0} start 240.336 took 20.6366s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":3,"ExpandedSwitcher":0,"_bound":7,"ExpansionArg_string":"PureString"} start 248.997 took 15.9604s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":2,"ExpansionArg_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_int_2":0} start 241.1569 took 25.2056s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":3,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":6,"ExpansionArg_string":"PureString"} start 243.3463 took 24.3641s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_bool":true,"_bound":8} start 244.5863 took 23.7326s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_bool":true,"_bound":8}
* Error: TypeError: Cannot read property 'enable' of undefined
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":5,"ExpansionArg_bool":true,"_bound":8}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":1,"ExpansionArg_string":"","_bound":5} start 246.1775 took 22.7953s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":1,"ExpansionArg_string":"","_bound":5}
* Error: TypeError: Cannot read property 'cwd' of null
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":1,"ExpansionArg_string":"","_bound":5}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":3,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":5,"ExpansionArg_string":"PureString"} start 251.9054 took 17.0675s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"_bound":8,"ExpansionArg_bool":false} start 255.2229 took 18.0628s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"_bound":8,"ExpansionArg_bool":false}
* Error: Tropigate failed because SyntaxError: Unexpected token (31:8) on program // Copyright 2012 Mark Cavage, Inc.  All rights reserved.
//
// Restify supports both a client and server API, and in the essence of not
// loading the kitchen sink on clients, the exports here is chunked up into
// client and server; note clients will have to opt in by setting the env
// var "RESTIFY_CLIENT_ONLY", but if you're in that boat, it's not hard to do,
// and enables much faster load times
//

'use strict';

var shallowCopy = require('./utils').shallowCopy;


/**
 * creates an http request client. based on options passed in, will create one
 * of three existing clients: Http, String, or Json.
 * @public
 * @function createClient
 * @param    {Object} options      an options object
 * @param    {String} options.type 'http' | 'json' | 'string'
 * @returns  {HttpClient | JsonClient | StringClient}
 */
function createClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    var assert = require('assert-plus');
    var bunyan = require('./bunyan_helper');
    var clients = require('./clients');

    assert.object(options, 'options');

    var client;
    var opts = shallowCopy(options);
    opts.agent = options.agent;
    opts.name = opts.name || 'restify';
    opts.type = opts.type || 'application/octet-stream';
    opts.log = opts.log || bunyan.createLogger(opts.name);

    switch (opts.type) {
        case 'json':
            client = new clients.JsonClient(opts);
            break;

        case 'string':
            client = new clients.StringClient(opts);
            break;

        case 'http':
        default:
            client = new clients.HttpClient(opts);
            break;
    }

    return (client);
}


/**
 * creates a json httpclient.
 * @public
 * @function createJsonClient
 * @param    {Object}     options an options object
 * @returns  {JsonClient}         a json client
 */
function createJsonClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'json';
    return (createClient(options));
}


/**
 * creates a string httpclient.
 * @public
 * @function createStringClient
 * @param    {Object}       options an options object
 * @returns  {StringClient}         a string client
 */
function createStringClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'string';
    return (createClient(options));
}


/**
 * creates a regular httpclient.
 * @public
 * @function createHttpClient
 * @param    {Object}     options an options object
 * @returns  {HttpClient}         an http client
 */
function createHttpClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'http';
    return (createClient(options));
}


/**
 * creates a server.
 * @public
 * @function createServer
 * @param    {Object} options an options object
 * @returns  {Server}
 */
function createServer(options) {
    var bunyan = require('./bunyan_helper');
    var InternalError = require('./errors').InternalError;
    var Router = require('./router');
    var Server = require('./server');

    var opts = shallowCopy(options || {});
    var server;

    opts.name = opts.name || 'restify';
    opts.log = opts.log || bunyan.createLogger(opts.name);
    opts.router = opts.router || new Router(opts);

    server = new Server(opts);

    if (server.handleUncaughtExceptions) {
        server.on('uncaughtException', function (req, res, route, e) {
            if (this.listeners('uncaughtException').length > 1 ||
                res.headersSent) {
                return (false);
            }

            res.send(new InternalError(e, e.message || 'unexpected error'));
            return (true);
        });
    }

    return (server);
}


/**
 * Returns a string representation of a URL pattern , with its
 * parameters filled in by the passed hash.
 *
 * If a key is not found in the hash for a param, it is left alone.
 * @public
 * @function realizeUrl
 * @param   {String} pattern a url string
 * @param   {Object} params  a hash of parameter names to values for
 *                           substitution
 * @returns {String}
 */
function realizeUrl(pattern, params) {
    var p = pattern.replace(/\/:([^/]+)/g, function (match, k) {
        return (params.hasOwnProperty(k) ? '/' + params[k] : match);
    });


    return (require('./utils').sanitizePath(p));
}


///--- Exports

module.exports = {
    // Client API
    createClient: createClient,
    createJsonClient: createJsonClient,
    createJSONClient: createJsonClient,
    createStringClient: createStringClient,
    createHttpClient: createHttpClient,
    get HttpClient() {
        return (require('./clients').HttpClient);
    },
    get JsonClient() {
        return (require('./clients').JsonClient);
    },
    get StringClient() {
        return (require('./clients').StringClient);
    },

    // Miscellaneous API
    get bunyan() {
        return (require('./bunyan_helper'));
    },

    errors: {}

};

var errors = require('./errors');
Object.keys(errors).forEach(function (k) {
    module.exports.errors[k] = errors[k];
    module.exports[k] = errors[k];
});

if (!process.env.RESTIFY_CLIENT_ONLY) {

    module.exports.createServer = createServer;
    module.exports.httpDate = require('./http_date');
    module.exports.realizeUrl = realizeUrl;
    module.exports.formatters = require('./formatters');
    module.exports.plugins = {};
    var plugins = require('./plugins');
    Object.keys(plugins).forEach(function (k) {
        module.exports.plugins[k] = plugins[k];
        module.exports[k] = plugins[k];
    });
}
 at SyntaxError: Unexpected token (31:8)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"_bound":8}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_array_element_1_type":0} start 252.4424 took 22.8958s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":1,"ExpansionArg_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":8} start 253.3665 took 22.3169s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":6,"ExpansionArg_type_4":5,"ExpansionArg_bool":true,"ExpandedSwitcher":0,"_bound":13} start 253.8853 took 22.6477s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":10,"ExpansionArg_array_length":0} start 265.1697 took 14.4662s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_1_type":0} start 257.8017 took 22.4214s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":1,"ExpansionArg_type_4":2,"ExpansionArg_int_2":0,"ExpandedSwitcher":0,"_bound":10} start 258.9255 took 21.7367s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":3,"ExpandedSwitcher":0,"_bound":7,"ExpansionArg_string":"PureString"} start 258.3528 took 22.7771s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":5,"ExpansionArg_bool":true,"ExpandedSwitcher":0,"_bound":14} start 259.7539 took 21.866s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":1,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":8} start 266.7176 took 15.9277s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":5,"ExpansionArg_array_length":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_bool":false} start 261.2524 took 22.2183s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":1,"ExpansionArg_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":7} start 268.5756 took 15.5463s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":1,"ExpansionArg_string":"","ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":6} start 273.4471 took 14.5281s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":2,"ExpansionArg_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":8,"ExpansionArg_int_2":0} start 267.9508 took 22.1311s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":9,"ExpansionArg_int_2":0} start 269.2183 took 22.6872s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_string":"","ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":8,"ExpansionArg_array_length":0} start 269.6012 took 22.6096s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_bool":false} start 279.8654 took 14.1005s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":9,"ExpansionArg_int_2":0} start 281.2653 took 14.8762s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":2,"ExpansionArg_string":"","ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":7,"ExpansionArg_int_2":0} start 275.4962 took 21.8453s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":2,"ExpansionArg_int":4,"ExpansionArg_type_4":3,"ExpansionArg_string":"!0!","ExpandedSwitcher":0,"_bound":13} start 276.6755 took 22.3099s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":1,"ExpansionArg_type_4":5,"ExpansionArg_bool":true,"ExpandedSwitcher":0,"_bound":11} start 275.9833 took 23.862s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":4,"ExpansionArg_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_array_length":0} start 280.9032 took 21.1943s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":2,"ExpansionArg_int":5,"ExpansionArg_type_4":4,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":14} start 280.4774 took 22.6482s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":10,"ExpansionArg_array_length":0} start 281.8152 took 22.4343s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_2_type":0} start 282.8663 took 23.3417s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_bool":false} start 292.5019 took 14.1347s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":3,"ExpandedSwitcher":0,"_bound":8,"ExpansionArg_string":"PureString"} start 284.3451 took 22.2915s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":2,"ExpansionArg_int":3,"ExpansionArg_type_4":1,"ExpandedSwitcher":0,"_bound":10} start 283.6777 took 23.9793s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":12} start 290.3229 took 17.3514s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_3_type":0} start 294.1302 took 15.8407s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":2,"ExpansionArg_int_2":3,"ExpandedSwitcher":0,"_bound":12} start 296.4246 took 14.4527s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_0_type":0} start 288.1738 took 23.2102s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":1,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":8} start 292.1103 took 21.6446s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":6,"ExpansionArg_string":"PureString"} start 297.5473 took 16.6233s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":2,"ExpansionArg_int_2":3,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":11} start 299.1699 took 16.1275s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":2,"ExpansionArg_int_2":3,"ExpandedSwitcher":0,"_bound":11} start 303.3186 took 15.4869s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":5,"ExpansionArg_array_length":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_bool":false} start 302.404 took 17.3689s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_bool":false} start 304.4897 took 16.4728s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":5,"ExpansionArg_bool":true,"ExpandedSwitcher":0,"_bound":13} start 306.7647 took 16.9807s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":1,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_array_element_0_type":0} start 300.118 took 24.5027s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":4,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":11,"ExpansionArg_array_length":0} start 308.3572 took 17.3683s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":1,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":9} start 307.3059 took 23.984s
*-- Test Case {"Switcher":false,"Target_Switch_Base":4,"ExpansionArg_type":0,"_bound":4,"ExpansionArg_type_2":0} start 131.4012 took 200.2487s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":4,"ExpansionArg_type":0,"_bound":4,"ExpansionArg_type_2":0}
* Error: Error: rlOrSO is required
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":4,"ExpansionArg_type":0,"_bound":4}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":8,"ExpansionArg_int_2":0} start 315.5361 took 18.3247s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":2,"ExpansionArg_int_2":1,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":10} start 313.9354 took 19.9389s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":2,"ExpansionArg_int":6,"ExpansionArg_type_4":5,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":13} start 306.3859 took 27.4885s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_array_length":0} start 318.9945 took 18.6413s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_3_type":0} start 311.6964 took 25.9395s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":4,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_array_length":0} start 311.1185 took 26.5174s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":10,"ExpansionArg_int_2":0} start 307.9496 took 29.6863s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":2,"ExpansionArg_int":3,"ExpansionArg_type_4":2,"ExpansionArg_int_2":0,"ExpandedSwitcher":0,"_bound":11} start 310.1776 took 27.4583s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_type_3":2,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":6,"ExpansionArg_int":0} start 320.0076 took 25.3136s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":1,"ExpansionArg_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":7} start 314.3632 took 30.9581s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":11} start 321.2269 took 26.8656s
*-- Test Case {"Switcher":false,"Target_Switch_Base":5,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"_bound":5} start 333.0503 took 15.0739s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":5,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"_bound":5}
* Error: TypeError: Cannot read property 'type' of undefined
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":5,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"_bound":5}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":7,"ExpansionArg_array_element_0_type":0} start 323.8695 took 24.2548s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":5,"ExpansionArg_bool":true,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":13} start 324.8126 took 23.3116s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":3,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":11} start 337.3325 took 16.2073s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":4,"ExpansionArg_type_4":3,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":12} start 335.9268 took 17.6131s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_0_type":0} start 334.4846 took 19.0598s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_bool":false} start 325.9025 took 27.642s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":8,"ExpansionArg_array_element_0_type":0} start 339.5659 took 18.9084s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":4,"ExpandedSwitcher":0,"_bound":8,"ExpansionArg_array_length":0} start 331.4974 took 26.9772s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":1,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":10} start 341.6509 took 19.3336s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_type_3":1,"ExpansionArg_int":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":7} start 345.8719 took 15.1126s
*-- Test Case {"Switcher":false,"Target_Switch_Base":6,"ExpansionArg_type":0,"_bound":6} start 350.1904 took 13.5808s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":6,"ExpansionArg_type":0,"_bound":6}
* Error: ReferenceError: getConfig is not defined
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":6,"ExpansionArg_type":0,"_bound":6}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":5,"ExpansionArg_array_length":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_bool":false} start 338.117 took 25.6542s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":2,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_int":0} start 343.2142 took 23.5545s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":3,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_string_2":"PureString"} start 344.6242 took 23.5766s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":2,"ExpandedSwitcher":0,"_bound":7,"ExpansionArg_int":0} start 352.7321 took 17.0443s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_bool":false} start 348.6727 took 22.8023s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_type_3":3,"ExpansionArg_int":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":8,"ExpansionArg_string":"PureString"} start 347.1235 took 24.3516s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":1,"ExpansionArg_type_4":2,"ExpansionArg_int_2":3,"ExpandedSwitcher":0,"_bound":11} start 351.5147 took 22.6202s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"_bound":8,"ExpansionArg_array_element_0_type":0} start 355.1045 took 19.0305s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"_bound":8,"ExpansionArg_array_element_0_type":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (31:8) on program // Copyright 2012 Mark Cavage, Inc.  All rights reserved.
//
// Restify supports both a client and server API, and in the essence of not
// loading the kitchen sink on clients, the exports here is chunked up into
// client and server; note clients will have to opt in by setting the env
// var "RESTIFY_CLIENT_ONLY", but if you're in that boat, it's not hard to do,
// and enables much faster load times
//

'use strict';

var shallowCopy = require('./utils').shallowCopy;


/**
 * creates an http request client. based on options passed in, will create one
 * of three existing clients: Http, String, or Json.
 * @public
 * @function createClient
 * @param    {Object} options      an options object
 * @param    {String} options.type 'http' | 'json' | 'string'
 * @returns  {HttpClient | JsonClient | StringClient}
 */
function createClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    var assert = require('assert-plus');
    var bunyan = require('./bunyan_helper');
    var clients = require('./clients');

    assert.object(options, 'options');

    var client;
    var opts = shallowCopy(options);
    opts.agent = options.agent;
    opts.name = opts.name || 'restify';
    opts.type = opts.type || 'application/octet-stream';
    opts.log = opts.log || bunyan.createLogger(opts.name);

    switch (opts.type) {
        case 'json':
            client = new clients.JsonClient(opts);
            break;

        case 'string':
            client = new clients.StringClient(opts);
            break;

        case 'http':
        default:
            client = new clients.HttpClient(opts);
            break;
    }

    return (client);
}


/**
 * creates a json httpclient.
 * @public
 * @function createJsonClient
 * @param    {Object}     options an options object
 * @returns  {JsonClient}         a json client
 */
function createJsonClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'json';
    return (createClient(options));
}


/**
 * creates a string httpclient.
 * @public
 * @function createStringClient
 * @param    {Object}       options an options object
 * @returns  {StringClient}         a string client
 */
function createStringClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'string';
    return (createClient(options));
}


/**
 * creates a regular httpclient.
 * @public
 * @function createHttpClient
 * @param    {Object}     options an options object
 * @returns  {HttpClient}         an http client
 */
function createHttpClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'http';
    return (createClient(options));
}


/**
 * creates a server.
 * @public
 * @function createServer
 * @param    {Object} options an options object
 * @returns  {Server}
 */
function createServer(options) {
    var bunyan = require('./bunyan_helper');
    var InternalError = require('./errors').InternalError;
    var Router = require('./router');
    var Server = require('./server');

    var opts = shallowCopy(options || {});
    var server;

    opts.name = opts.name || 'restify';
    opts.log = opts.log || bunyan.createLogger(opts.name);
    opts.router = opts.router || new Router(opts);

    server = new Server(opts);

    if (server.handleUncaughtExceptions) {
        server.on('uncaughtException', function (req, res, route, e) {
            if (this.listeners('uncaughtException').length > 1 ||
                res.headersSent) {
                return (false);
            }

            res.send(new InternalError(e, e.message || 'unexpected error'));
            return (true);
        });
    }

    return (server);
}


/**
 * Returns a string representation of a URL pattern , with its
 * parameters filled in by the passed hash.
 *
 * If a key is not found in the hash for a param, it is left alone.
 * @public
 * @function realizeUrl
 * @param   {String} pattern a url string
 * @param   {Object} params  a hash of parameter names to values for
 *                           substitution
 * @returns {String}
 */
function realizeUrl(pattern, params) {
    var p = pattern.replace(/\/:([^/]+)/g, function (match, k) {
        return (params.hasOwnProperty(k) ? '/' + params[k] : match);
    });


    return (require('./utils').sanitizePath(p));
}


///--- Exports

module.exports = {
    // Client API
    createClient: createClient,
    createJsonClient: createJsonClient,
    createJSONClient: createJsonClient,
    createStringClient: createStringClient,
    createHttpClient: createHttpClient,
    get HttpClient() {
        return (require('./clients').HttpClient);
    },
    get JsonClient() {
        return (require('./clients').JsonClient);
    },
    get StringClient() {
        return (require('./clients').StringClient);
    },

    // Miscellaneous API
    get bunyan() {
        return (require('./bunyan_helper'));
    },

    errors: {}

};

var errors = require('./errors');
Object.keys(errors).forEach(function (k) {
    module.exports.errors[k] = errors[k];
    module.exports[k] = errors[k];
});

if (!process.env.RESTIFY_CLIENT_ONLY) {

    module.exports.createServer = createServer;
    module.exports.httpDate = require('./http_date');
    module.exports.realizeUrl = realizeUrl;
    module.exports.formatters = require('./formatters');
    module.exports.plugins = {};
    var plugins = require('./plugins');
    Object.keys(plugins).forEach(function (k) {
        module.exports.plugins[k] = plugins[k];
        module.exports[k] = plugins[k];
    });
}
 at SyntaxError: Unexpected token (31:8)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"_bound":8}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_3_type":0} start 354.008 took 23.4967s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":4,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":8,"ExpansionArg_array_length":0} start 356.3492 took 22.5642s
*-- Test Case {"Switcher":false,"Target_Switch_Base":7,"_bound":7} start 364.348 took 15.7273s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":5,"ExpansionArg_bool":true,"ExpandedSwitcher":0,"_bound":12} start 367.323 took 14.2089s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_array_length":0} start 357.7532 took 23.7787s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_bool":false} start 363.0802 took 18.4518s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":3,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":11} start 368.7667 took 16.7007s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":2,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_int":0} start 361.5879 took 23.8796s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":3,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_string_2":"PureString"} start 359.7395 took 25.728s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_array_element_1_type":0} start 374.8266 took 15.0406s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":1,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":9} start 365.7939 took 24.0734s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":3,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_string":"PureString"} start 372.0824 took 21.0298s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":0,"ExpansionArg_type_4":5,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_bool":false} start 378.0709 took 16.577s
*-- Test Case {"Switcher":false,"Target_Switch_Base":3,"ExpansionArg_type":4,"_bound":5,"ExpansionArg_array_length":0} start 358.8131 took 35.8348s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":3,"ExpansionArg_type":4,"_bound":5,"ExpansionArg_array_length":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (6:4) on program /**
 * Created by lawrence on 4/16/16.
 */
'use strict';

var assert = require('assert');
var _ = require('lodash');
var convert = require('./joi-to-json-schema');

module.exports.create = function (routes, options) {
  var swagger = new SwaggerDoc();
  var result = swagger.createResponse(options);
  var paths = swagger.loadRestifyRoutes(routes);
  result.paths = paths;
  return result;
};

function SwaggerDoc() {
  var swaggerDoc = this;

  var SWAGGER_METHODS = ['get', 'patch', 'post', 'put', 'delete'],
    SWAGGER_VERSION = '2.0';

  swaggerDoc.createResponse = function (options) {
    assert.ok(options.host, 'Swagger not initialized! Host of configure required!');

    swaggerDoc.definitions = require('./definition').getDefinitions(options.cwd);
    return {
      swagger: SWAGGER_VERSION,
      info: options.info,
      host: options.host,
      basePath: options.basePath,
      schemes: options.schemes || ['http'],
      securityDefinitions: options.securityDefinitions || {},
      definitions: swaggerDoc.definitions
    };
  };

  swaggerDoc.convertToSwagger = function (path) {
    return path.replace(/:([^/]+)/g, '{$1}');
  };

  swaggerDoc.loadRestifyRoutes = function (routes) {
    var paths = {};
    _(routes).forEach(function (route) {
      if (!route.meta.admin || !route.meta.hide) {
        var spec = route;
        var pathName = swaggerDoc.convertToSwagger(spec.path);
        var flag = paths[pathName] && paths[pathName][spec.method.toLowerCase()];
        assert.ok(!flag, 'Swagger doc method:' + spec.method + ',path:' + spec.path + ' exist!');
        if (!paths[pathName]) {
          paths[pathName] = {};
        }

        var parameters = [];
        for (var item in spec.parameters) {
          var content = spec.parameters[item];
          var schemaName = content.name;
          if (item === 'body') {
            if (content.schema && content.schema.isJoi) {
              swaggerDoc.definitions[content.name] = convert(content.schema);
            } else {
              schemaName = content.schema || content.name;
            }

            var p = {
              name: item,
              in: item,
              description: content.description,
              required: content.required || true
            };
            if (content.type === 'array') {
              p.schema = {
                type: 'array',
                items: { $ref: '#/definitions/' + schemaName }
              };
            } else {
              p.schema = { $ref: '#/definitions/' + schemaName };
            }
            parameters.push(p);
          } else {
            var schema = convert(content);
            for (var key in schema.properties) {
              var obj = schema.properties[key];
              obj.in = item;
              obj.name = key;
              obj.required = _.indexOf(schema.required, key) >= 0;
              parameters.push(obj);
            }
          }

        }

        /*if (spec.meta.auth) {
         parameters.push({
         name: 'Authorization',
         type: 'string',
         required: true,
         in: 'header',
         description: 'access token or refresh token'
         });
         }*/

        paths[pathName][spec.method.toLowerCase()] = {
          tags: spec.swagger.tags,
          summary: spec.swagger.summary,
          description: spec.swagger.description,
          consumes: spec.swagger.consumes || [],
          produces: spec.swagger.produces || [],
          operationId: spec.controller.action,
          "x-swagger-router-controller": spec.controller.name,
          parameters: parameters,
          responses: spec.responses
        };
      }
    });

    return paths;
  };

  return swaggerDoc;
}
 at SyntaxError: Unexpected token (6:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":3,"ExpansionArg_type":4,"_bound":5}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":8} start 370.5018 took 24.1462s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_array_length":0} start 373.508 took 25.3918s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":0,"ExpansionArg_type_4":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_bool":false} start 383.3503 took 17.0395s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":2,"ExpansionArg_array_length":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_int":0} start 385.8052 took 16.9944s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":1,"ExpansionArg_array_length":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":9} start 379.3719 took 23.4279s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_3_type":0} start 376.4833 took 26.3166s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":3,"ExpansionArg_array_length":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_string_2":"PureString"} start 381.9231 took 25.5825s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":0,"ExpansionArg_type_4":2,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_int":0} start 388.8366 took 18.669s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":5,"ExpansionArg_array_length":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_bool":false} start 380.7182 took 26.7875s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":0,"ExpansionArg_type_4":1,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":10} start 387.1117 took 20.4111s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"_bound":9,"ExpansionArg_array_element_0_type":0} start 392.2515 took 22.4766s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"_bound":9,"ExpansionArg_array_element_0_type":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (31:8) on program // Copyright 2012 Mark Cavage, Inc.  All rights reserved.
//
// Restify supports both a client and server API, and in the essence of not
// loading the kitchen sink on clients, the exports here is chunked up into
// client and server; note clients will have to opt in by setting the env
// var "RESTIFY_CLIENT_ONLY", but if you're in that boat, it's not hard to do,
// and enables much faster load times
//

'use strict';

var shallowCopy = require('./utils').shallowCopy;


/**
 * creates an http request client. based on options passed in, will create one
 * of three existing clients: Http, String, or Json.
 * @public
 * @function createClient
 * @param    {Object} options      an options object
 * @param    {String} options.type 'http' | 'json' | 'string'
 * @returns  {HttpClient | JsonClient | StringClient}
 */
function createClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    var assert = require('assert-plus');
    var bunyan = require('./bunyan_helper');
    var clients = require('./clients');

    assert.object(options, 'options');

    var client;
    var opts = shallowCopy(options);
    opts.agent = options.agent;
    opts.name = opts.name || 'restify';
    opts.type = opts.type || 'application/octet-stream';
    opts.log = opts.log || bunyan.createLogger(opts.name);

    switch (opts.type) {
        case 'json':
            client = new clients.JsonClient(opts);
            break;

        case 'string':
            client = new clients.StringClient(opts);
            break;

        case 'http':
        default:
            client = new clients.HttpClient(opts);
            break;
    }

    return (client);
}


/**
 * creates a json httpclient.
 * @public
 * @function createJsonClient
 * @param    {Object}     options an options object
 * @returns  {JsonClient}         a json client
 */
function createJsonClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'json';
    return (createClient(options));
}


/**
 * creates a string httpclient.
 * @public
 * @function createStringClient
 * @param    {Object}       options an options object
 * @returns  {StringClient}         a string client
 */
function createStringClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'string';
    return (createClient(options));
}


/**
 * creates a regular httpclient.
 * @public
 * @function createHttpClient
 * @param    {Object}     options an options object
 * @returns  {HttpClient}         an http client
 */
function createHttpClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'http';
    return (createClient(options));
}


/**
 * creates a server.
 * @public
 * @function createServer
 * @param    {Object} options an options object
 * @returns  {Server}
 */
function createServer(options) {
    var bunyan = require('./bunyan_helper');
    var InternalError = require('./errors').InternalError;
    var Router = require('./router');
    var Server = require('./server');

    var opts = shallowCopy(options || {});
    var server;

    opts.name = opts.name || 'restify';
    opts.log = opts.log || bunyan.createLogger(opts.name);
    opts.router = opts.router || new Router(opts);

    server = new Server(opts);

    if (server.handleUncaughtExceptions) {
        server.on('uncaughtException', function (req, res, route, e) {
            if (this.listeners('uncaughtException').length > 1 ||
                res.headersSent) {
                return (false);
            }

            res.send(new InternalError(e, e.message || 'unexpected error'));
            return (true);
        });
    }

    return (server);
}


/**
 * Returns a string representation of a URL pattern , with its
 * parameters filled in by the passed hash.
 *
 * If a key is not found in the hash for a param, it is left alone.
 * @public
 * @function realizeUrl
 * @param   {String} pattern a url string
 * @param   {Object} params  a hash of parameter names to values for
 *                           substitution
 * @returns {String}
 */
function realizeUrl(pattern, params) {
    var p = pattern.replace(/\/:([^/]+)/g, function (match, k) {
        return (params.hasOwnProperty(k) ? '/' + params[k] : match);
    });


    return (require('./utils').sanitizePath(p));
}


///--- Exports

module.exports = {
    // Client API
    createClient: createClient,
    createJsonClient: createJsonClient,
    createJSONClient: createJsonClient,
    createStringClient: createStringClient,
    createHttpClient: createHttpClient,
    get HttpClient() {
        return (require('./clients').HttpClient);
    },
    get JsonClient() {
        return (require('./clients').JsonClient);
    },
    get StringClient() {
        return (require('./clients').StringClient);
    },

    // Miscellaneous API
    get bunyan() {
        return (require('./bunyan_helper'));
    },

    errors: {}

};

var errors = require('./errors');
Object.keys(errors).forEach(function (k) {
    module.exports.errors[k] = errors[k];
    module.exports[k] = errors[k];
});

if (!process.env.RESTIFY_CLIENT_ONLY) {

    module.exports.createServer = createServer;
    module.exports.httpDate = require('./http_date');
    module.exports.realizeUrl = realizeUrl;
    module.exports.formatters = require('./formatters');
    module.exports.plugins = {};
    var plugins = require('./plugins');
    Object.keys(plugins).forEach(function (k) {
        module.exports.plugins[k] = plugins[k];
        module.exports[k] = plugins[k];
    });
}
 at SyntaxError: Unexpected token (31:8)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"_bound":9}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":0,"ExpansionArg_type_4":3,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_string_2":"PureString"} start 384.8143 took 29.9139s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":2,"ExpansionArg_int_2":1,"ExpandedSwitcher":0,"_bound":10} start 390.7541 took 27.0954s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":10,"ExpansionArg_array_length":0} start 393.8853 took 27.6075s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":0,"ExpansionArg_type_4":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_length_2":0} start 395.1201 took 27.8808s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":0,"ExpansionArg_type_4":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_string":"PureString"} start 399.4728 took 26.4785s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":0,"ExpansionArg_type_4":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":11} start 401.688 took 27.2366s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":0,"ExpansionArg_type_4":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_int":0} start 405.1287 took 27.8329s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":0,"ExpansionArg_type_4":5,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_bool":false} start 413.5183 took 21.7096s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":11} start 411.6813 took 23.5467s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":2,"ExpansionArg_int_2":1,"ExpandedSwitcher":0,"_bound":10} start 418.4797 took 20.4059s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_type_3":5,"ExpansionArg_array_length":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_bool":false} start 408.1332 took 30.7525s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":2,"ExpansionArg_int":3,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpandedSwitcher":0,"_bound":16} start 409.992 took 28.8938s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":3,"ExpansionArg_type_4":1,"ExpandedSwitcher":0,"_bound":10} start 415.2825 took 23.6032s
*-- Test Case {"Switcher":false,"Target_Switch_Base":3,"ExpansionArg_type":1,"ExpansionArg_array_length":0,"_bound":6} start 398.0332 took 40.8524s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":3,"ExpansionArg_type":1,"ExpansionArg_array_length":0,"_bound":6}
* Error: Tropigate failed because SyntaxError: Unexpected token (6:4) on program /**
 * Created by lawrence on 4/16/16.
 */
'use strict';

var assert = require('assert');
var _ = require('lodash');
var convert = require('./joi-to-json-schema');

module.exports.create = function (routes, options) {
  var swagger = new SwaggerDoc();
  var result = swagger.createResponse(options);
  var paths = swagger.loadRestifyRoutes(routes);
  result.paths = paths;
  return result;
};

function SwaggerDoc() {
  var swaggerDoc = this;

  var SWAGGER_METHODS = ['get', 'patch', 'post', 'put', 'delete'],
    SWAGGER_VERSION = '2.0';

  swaggerDoc.createResponse = function (options) {
    assert.ok(options.host, 'Swagger not initialized! Host of configure required!');

    swaggerDoc.definitions = require('./definition').getDefinitions(options.cwd);
    return {
      swagger: SWAGGER_VERSION,
      info: options.info,
      host: options.host,
      basePath: options.basePath,
      schemes: options.schemes || ['http'],
      securityDefinitions: options.securityDefinitions || {},
      definitions: swaggerDoc.definitions
    };
  };

  swaggerDoc.convertToSwagger = function (path) {
    return path.replace(/:([^/]+)/g, '{$1}');
  };

  swaggerDoc.loadRestifyRoutes = function (routes) {
    var paths = {};
    _(routes).forEach(function (route) {
      if (!route.meta.admin || !route.meta.hide) {
        var spec = route;
        var pathName = swaggerDoc.convertToSwagger(spec.path);
        var flag = paths[pathName] && paths[pathName][spec.method.toLowerCase()];
        assert.ok(!flag, 'Swagger doc method:' + spec.method + ',path:' + spec.path + ' exist!');
        if (!paths[pathName]) {
          paths[pathName] = {};
        }

        var parameters = [];
        for (var item in spec.parameters) {
          var content = spec.parameters[item];
          var schemaName = content.name;
          if (item === 'body') {
            if (content.schema && content.schema.isJoi) {
              swaggerDoc.definitions[content.name] = convert(content.schema);
            } else {
              schemaName = content.schema || content.name;
            }

            var p = {
              name: item,
              in: item,
              description: content.description,
              required: content.required || true
            };
            if (content.type === 'array') {
              p.schema = {
                type: 'array',
                items: { $ref: '#/definitions/' + schemaName }
              };
            } else {
              p.schema = { $ref: '#/definitions/' + schemaName };
            }
            parameters.push(p);
          } else {
            var schema = convert(content);
            for (var key in schema.properties) {
              var obj = schema.properties[key];
              obj.in = item;
              obj.name = key;
              obj.required = _.indexOf(schema.required, key) >= 0;
              parameters.push(obj);
            }
          }

        }

        /*if (spec.meta.auth) {
         parameters.push({
         name: 'Authorization',
         type: 'string',
         required: true,
         in: 'header',
         description: 'access token or refresh token'
         });
         }*/

        paths[pathName][spec.method.toLowerCase()] = {
          tags: spec.swagger.tags,
          summary: spec.swagger.summary,
          description: spec.swagger.description,
          consumes: spec.swagger.consumes || [],
          produces: spec.swagger.produces || [],
          operationId: spec.controller.action,
          "x-swagger-router-controller": spec.controller.name,
          parameters: parameters,
          responses: spec.responses
        };
      }
    });

    return paths;
  };

  return swaggerDoc;
}
 at SyntaxError: Unexpected token (6:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":3,"ExpansionArg_type":1,"ExpansionArg_array_length":0,"_bound":6}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_array_element_0_type":0} start 423.5689 took 24.4001s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":1,"ExpansionArg_type_4":2,"ExpandedSwitcher":0,"_bound":7,"ExpansionArg_int":0} start 416.8768 took 31.0924s
*-- Test Case {"Switcher":false,"Target_Switch_Base":3,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"_bound":9,"ExpansionArg_bool":false} start 396.6416 took 51.3276s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":3,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"_bound":9,"ExpansionArg_bool":false}
* Error: Tropigate failed because SyntaxError: Unexpected token (6:4) on program /**
 * Created by lawrence on 4/16/16.
 */
'use strict';

var assert = require('assert');
var _ = require('lodash');
var convert = require('./joi-to-json-schema');

module.exports.create = function (routes, options) {
  var swagger = new SwaggerDoc();
  var result = swagger.createResponse(options);
  var paths = swagger.loadRestifyRoutes(routes);
  result.paths = paths;
  return result;
};

function SwaggerDoc() {
  var swaggerDoc = this;

  var SWAGGER_METHODS = ['get', 'patch', 'post', 'put', 'delete'],
    SWAGGER_VERSION = '2.0';

  swaggerDoc.createResponse = function (options) {
    assert.ok(options.host, 'Swagger not initialized! Host of configure required!');

    swaggerDoc.definitions = require('./definition').getDefinitions(options.cwd);
    return {
      swagger: SWAGGER_VERSION,
      info: options.info,
      host: options.host,
      basePath: options.basePath,
      schemes: options.schemes || ['http'],
      securityDefinitions: options.securityDefinitions || {},
      definitions: swaggerDoc.definitions
    };
  };

  swaggerDoc.convertToSwagger = function (path) {
    return path.replace(/:([^/]+)/g, '{$1}');
  };

  swaggerDoc.loadRestifyRoutes = function (routes) {
    var paths = {};
    _(routes).forEach(function (route) {
      if (!route.meta.admin || !route.meta.hide) {
        var spec = route;
        var pathName = swaggerDoc.convertToSwagger(spec.path);
        var flag = paths[pathName] && paths[pathName][spec.method.toLowerCase()];
        assert.ok(!flag, 'Swagger doc method:' + spec.method + ',path:' + spec.path + ' exist!');
        if (!paths[pathName]) {
          paths[pathName] = {};
        }

        var parameters = [];
        for (var item in spec.parameters) {
          var content = spec.parameters[item];
          var schemaName = content.name;
          if (item === 'body') {
            if (content.schema && content.schema.isJoi) {
              swaggerDoc.definitions[content.name] = convert(content.schema);
            } else {
              schemaName = content.schema || content.name;
            }

            var p = {
              name: item,
              in: item,
              description: content.description,
              required: content.required || true
            };
            if (content.type === 'array') {
              p.schema = {
                type: 'array',
                items: { $ref: '#/definitions/' + schemaName }
              };
            } else {
              p.schema = { $ref: '#/definitions/' + schemaName };
            }
            parameters.push(p);
          } else {
            var schema = convert(content);
            for (var key in schema.properties) {
              var obj = schema.properties[key];
              obj.in = item;
              obj.name = key;
              obj.required = _.indexOf(schema.required, key) >= 0;
              parameters.push(obj);
            }
          }

        }

        /*if (spec.meta.auth) {
         parameters.push({
         name: 'Authorization',
         type: 'string',
         required: true,
         in: 'header',
         description: 'access token or refresh token'
         });
         }*/

        paths[pathName][spec.method.toLowerCase()] = {
          tags: spec.swagger.tags,
          summary: spec.swagger.summary,
          description: spec.swagger.description,
          consumes: spec.swagger.consumes || [],
          produces: spec.swagger.produces || [],
          operationId: spec.controller.action,
          "x-swagger-router-controller": spec.controller.name,
          parameters: parameters,
          responses: spec.responses
        };
      }
    });

    return paths;
  };

  return swaggerDoc;
}
 at SyntaxError: Unexpected token (6:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":3,"ExpansionArg_type":5,"ExpansionArg_array_length":0,"_bound":9}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_bool":false} start 422.259 took 31.8178s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":5,"ExpansionArg_bool":true,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":12} start 426.5952 took 27.4981s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_2_type":0} start 429.5814 took 28.1337s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_array_element_0_int":0} start 434.0074 took 23.7077s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":0,"ExpansionArg_type_4":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_string":"PureString"} start 439.9164 took 20.9248s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":3,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":13} start 441.9298 took 20.8586s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":0,"ExpansionArg_type_4":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_length_2":0} start 435.8483 took 28.7767s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":4,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_array_length":0} start 446.7862 took 19.6498s
*-- Test Case {"Switcher":false,"Target_Switch_Base":3,"ExpansionArg_type":2,"ExpansionArg_array_length":0,"_bound":7,"ExpansionArg_int":0} start 403.4075 took 63.0286s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":3,"ExpansionArg_type":2,"ExpansionArg_array_length":0,"_bound":7,"ExpansionArg_int":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (6:4) on program /**
 * Created by lawrence on 4/16/16.
 */
'use strict';

var assert = require('assert');
var _ = require('lodash');
var convert = require('./joi-to-json-schema');

module.exports.create = function (routes, options) {
  var swagger = new SwaggerDoc();
  var result = swagger.createResponse(options);
  var paths = swagger.loadRestifyRoutes(routes);
  result.paths = paths;
  return result;
};

function SwaggerDoc() {
  var swaggerDoc = this;

  var SWAGGER_METHODS = ['get', 'patch', 'post', 'put', 'delete'],
    SWAGGER_VERSION = '2.0';

  swaggerDoc.createResponse = function (options) {
    assert.ok(options.host, 'Swagger not initialized! Host of configure required!');

    swaggerDoc.definitions = require('./definition').getDefinitions(options.cwd);
    return {
      swagger: SWAGGER_VERSION,
      info: options.info,
      host: options.host,
      basePath: options.basePath,
      schemes: options.schemes || ['http'],
      securityDefinitions: options.securityDefinitions || {},
      definitions: swaggerDoc.definitions
    };
  };

  swaggerDoc.convertToSwagger = function (path) {
    return path.replace(/:([^/]+)/g, '{$1}');
  };

  swaggerDoc.loadRestifyRoutes = function (routes) {
    var paths = {};
    _(routes).forEach(function (route) {
      if (!route.meta.admin || !route.meta.hide) {
        var spec = route;
        var pathName = swaggerDoc.convertToSwagger(spec.path);
        var flag = paths[pathName] && paths[pathName][spec.method.toLowerCase()];
        assert.ok(!flag, 'Swagger doc method:' + spec.method + ',path:' + spec.path + ' exist!');
        if (!paths[pathName]) {
          paths[pathName] = {};
        }

        var parameters = [];
        for (var item in spec.parameters) {
          var content = spec.parameters[item];
          var schemaName = content.name;
          if (item === 'body') {
            if (content.schema && content.schema.isJoi) {
              swaggerDoc.definitions[content.name] = convert(content.schema);
            } else {
              schemaName = content.schema || content.name;
            }

            var p = {
              name: item,
              in: item,
              description: content.description,
              required: content.required || true
            };
            if (content.type === 'array') {
              p.schema = {
                type: 'array',
                items: { $ref: '#/definitions/' + schemaName }
              };
            } else {
              p.schema = { $ref: '#/definitions/' + schemaName };
            }
            parameters.push(p);
          } else {
            var schema = convert(content);
            for (var key in schema.properties) {
              var obj = schema.properties[key];
              obj.in = item;
              obj.name = key;
              obj.required = _.indexOf(schema.required, key) >= 0;
              parameters.push(obj);
            }
          }

        }

        /*if (spec.meta.auth) {
         parameters.push({
         name: 'Authorization',
         type: 'string',
         required: true,
         in: 'header',
         description: 'access token or refresh token'
         });
         }*/

        paths[pathName][spec.method.toLowerCase()] = {
          tags: spec.swagger.tags,
          summary: spec.swagger.summary,
          description: spec.swagger.description,
          consumes: spec.swagger.consumes || [],
          produces: spec.swagger.produces || [],
          operationId: spec.controller.action,
          "x-swagger-router-controller": spec.controller.name,
          parameters: parameters,
          responses: spec.responses
        };
      }
    });

    return paths;
  };

  return swaggerDoc;
}
 at SyntaxError: Unexpected token (6:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":3,"ExpansionArg_type":2,"ExpansionArg_array_length":0,"_bound":7}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":0,"ExpansionArg_type_4":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":12} start 437.5574 took 32.7101s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":1,"ExpansionArg_type_4":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":8} start 450.8602 took 21.1672s
*-- Test Case {"Switcher":false,"Target_Switch_Base":3,"ExpansionArg_type":3,"ExpansionArg_array_length":0,"_bound":8,"ExpansionArg_string":"PureString"} start 406.6806 took 65.3469s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":3,"ExpansionArg_type":3,"ExpansionArg_array_length":0,"_bound":8,"ExpansionArg_string":"PureString"}
* Error: Tropigate failed because SyntaxError: Unexpected token (6:4) on program /**
 * Created by lawrence on 4/16/16.
 */
'use strict';

var assert = require('assert');
var _ = require('lodash');
var convert = require('./joi-to-json-schema');

module.exports.create = function (routes, options) {
  var swagger = new SwaggerDoc();
  var result = swagger.createResponse(options);
  var paths = swagger.loadRestifyRoutes(routes);
  result.paths = paths;
  return result;
};

function SwaggerDoc() {
  var swaggerDoc = this;

  var SWAGGER_METHODS = ['get', 'patch', 'post', 'put', 'delete'],
    SWAGGER_VERSION = '2.0';

  swaggerDoc.createResponse = function (options) {
    assert.ok(options.host, 'Swagger not initialized! Host of configure required!');

    swaggerDoc.definitions = require('./definition').getDefinitions(options.cwd);
    return {
      swagger: SWAGGER_VERSION,
      info: options.info,
      host: options.host,
      basePath: options.basePath,
      schemes: options.schemes || ['http'],
      securityDefinitions: options.securityDefinitions || {},
      definitions: swaggerDoc.definitions
    };
  };

  swaggerDoc.convertToSwagger = function (path) {
    return path.replace(/:([^/]+)/g, '{$1}');
  };

  swaggerDoc.loadRestifyRoutes = function (routes) {
    var paths = {};
    _(routes).forEach(function (route) {
      if (!route.meta.admin || !route.meta.hide) {
        var spec = route;
        var pathName = swaggerDoc.convertToSwagger(spec.path);
        var flag = paths[pathName] && paths[pathName][spec.method.toLowerCase()];
        assert.ok(!flag, 'Swagger doc method:' + spec.method + ',path:' + spec.path + ' exist!');
        if (!paths[pathName]) {
          paths[pathName] = {};
        }

        var parameters = [];
        for (var item in spec.parameters) {
          var content = spec.parameters[item];
          var schemaName = content.name;
          if (item === 'body') {
            if (content.schema && content.schema.isJoi) {
              swaggerDoc.definitions[content.name] = convert(content.schema);
            } else {
              schemaName = content.schema || content.name;
            }

            var p = {
              name: item,
              in: item,
              description: content.description,
              required: content.required || true
            };
            if (content.type === 'array') {
              p.schema = {
                type: 'array',
                items: { $ref: '#/definitions/' + schemaName }
              };
            } else {
              p.schema = { $ref: '#/definitions/' + schemaName };
            }
            parameters.push(p);
          } else {
            var schema = convert(content);
            for (var key in schema.properties) {
              var obj = schema.properties[key];
              obj.in = item;
              obj.name = key;
              obj.required = _.indexOf(schema.required, key) >= 0;
              parameters.push(obj);
            }
          }

        }

        /*if (spec.meta.auth) {
         parameters.push({
         name: 'Authorization',
         type: 'string',
         required: true,
         in: 'header',
         description: 'access token or refresh token'
         });
         }*/

        paths[pathName][spec.method.toLowerCase()] = {
          tags: spec.swagger.tags,
          summary: spec.swagger.summary,
          description: spec.swagger.description,
          consumes: spec.swagger.consumes || [],
          produces: spec.swagger.produces || [],
          operationId: spec.controller.action,
          "x-swagger-router-controller": spec.controller.name,
          parameters: parameters,
          responses: spec.responses
        };
      }
    });

    return paths;
  };

  return swaggerDoc;
}
 at SyntaxError: Unexpected token (6:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":3,"ExpansionArg_type":3,"ExpansionArg_array_length":0,"_bound":8}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":1,"ExpansionArg_type_4":3,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_string":"PureString"} start 452.7705 took 23.2099s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":2,"ExpansionArg_int":3,"ExpansionArg_type_4":2,"ExpansionArg_int_2":4,"ExpandedSwitcher":0,"_bound":12} start 445.4372 took 30.5434s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":0,"ExpansionArg_type_4":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_int":0} start 443.9832 took 31.9974s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_0_string":"PureString"} start 459.7276 took 21.1203s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_array_element_0_type":0} start 456.7158 took 24.1346s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":5,"ExpansionArg_bool":true,"ExpandedSwitcher":0,"_bound":12} start 458.3803 took 22.4702s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpansionArg_type_3":5,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_bool":false} start 448.919 took 31.9315s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":1,"ExpansionArg_type_4":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpandedSwitcher":0,"_bound":21} start 454.92 took 25.9306s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":5,"ExpansionArg_type_4":4,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":14} start 465.3048 took 23.6751s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":12} start 461.5472 took 28.8648s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":3,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_string_2":"PureString"} start 467.2131 took 24.5952s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_2_type":0} start 463.549 took 28.2773s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_bool":false} start 469.3424 took 26.719s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":2,"ExpansionArg_int":6,"ExpansionArg_type_4":5,"ExpansionArg_bool":true,"ExpandedSwitcher":0,"_bound":14} start 470.8891 took 27.0977s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":2,"ExpansionArg_int_2":3,"ExpandedSwitcher":0,"_bound":12} start 472.7853 took 27.1269s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_0_bool":false} start 481.5129 took 18.3993s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":1,"ExpansionArg_type_4":4,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":10,"ExpansionArg_array_length":0} start 476.5757 took 26.2354s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_4":2,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_int":0} start 474.8802 took 27.9309s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpansionArg_type_3":1,"ExpansionArg_bool":false,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":11} start 488.0706 took 17.711s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":1,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":10} start 479.9479 took 25.8337s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":2,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_int":0} start 478.2231 took 27.5586s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpansionArg_type_3":4,"ExpansionArg_bool":false,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_length_2":0} start 486.6741 took 23.3719s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":5,"ExpansionArg_bool":true,"ExpandedSwitcher":0,"_bound":14} start 492.2522 took 17.7954s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int_2":1,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":10} start 485.1725 took 24.8752s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_0_string":"PureString"} start 483.2558 took 26.792s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":6,"ExpansionArg_type_4":5,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":13} start 498.5903 took 17.0843s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpansionArg_type_3":2,"ExpansionArg_bool":false,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_int":0} start 491.0283 took 24.6463s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpansionArg_type_3":3,"ExpansionArg_bool":false,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_string":"PureString"} start 489.4963 took 26.1784s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_array_element_0_int":0} start 493.8317 took 21.843s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_4":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":13} start 506.4037 took 14.4845s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_4":3,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_string":"PureString"} start 504.8627 took 16.0256s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":4,"ExpansionArg_type_4":3,"ExpansionArg_string":"!0!","ExpandedSwitcher":0,"_bound":13} start 496.634 took 24.2543s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_0_array_length":0} start 501.8459 took 19.0424s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":1,"ExpansionArg_type_4":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_bool":false} start 503.2749 took 17.6513s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":3,"ExpansionArg_type_4":2,"ExpansionArg_int_2":0,"ExpandedSwitcher":0,"_bound":11} start 510.6511 took 16.1819s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":3,"ExpansionArg_string":"!0!","ExpansionArg_type_4":4,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":15} start 500.4209 took 26.4122s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher":0,"_bound":14} start 516.2988 took 14.71s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":5,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_bool":false} start 513.5709 took 17.4474s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":3,"ExpansionArg_string_2":"","ExpandedSwitcher":0,"_bound":14} start 507.8296 took 23.1888s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_array_element_0_type":0} start 511.9672 took 23.2297s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_array_element_0_int":0} start 509.2421 took 25.9549s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_array_element_0_type":0} start 521.6686 took 16.3683s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_0_bool":false} start 514.7732 took 23.2638s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":5,"ExpansionArg_bool":true,"ExpandedSwitcher":0,"_bound":15} start 518.8095 took 21.7996s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":5,"ExpansionArg_bool":false,"ExpansionArg_type_4":6,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_bool_2":false} start 525.8195 took 14.7896s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_0_int":0} start 517.5487 took 23.0604s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":11} start 527.3864 took 16.878s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_array_element_0_string":"PureString"} start 520.0906 took 24.174s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":2,"ExpansionArg_int":4,"ExpandedSwitcher":0,"_bound":13} start 524.4796 took 22.2411s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_4":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":15,"ExpansionArg_bool":false} start 523.2231 took 23.4977s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_length_2":0} start 532.9898 took 15.0976s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":2,"ExpansionArg_int":1,"ExpandedSwitcher":0,"_bound":12} start 528.7563 took 19.3312s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_int":0} start 535.7747 took 14.6052s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_string":"PureString"} start 534.4165 took 15.9635s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_type_3":2,"ExpansionArg_int":3,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":10} start 531.5798 took 21.1512s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_array_element_0_type":0} start 530.1431 took 22.5881s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_0_array_length":0} start 539.9923 took 15.3043s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":5,"ExpansionArg_bool":false,"ExpansionArg_type_4":2,"ExpansionArg_bool_2":false,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_int":0} start 544.6184 took 12.3588s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_0_string":"PureString"} start 538.5576 took 19.5439s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":13} start 537.1703 took 20.9354s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":12} start 541.4233 took 19.2174s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_4":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_length_2":0} start 547.6175 took 14.2431s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":5,"ExpansionArg_bool":false,"ExpansionArg_type_4":6,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_bool_2":false} start 548.5425 took 13.3181s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":5,"ExpansionArg_bool":false,"ExpansionArg_type_4":4,"ExpansionArg_bool_2":false,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_length":0} start 542.2867 took 19.574s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":2,"ExpansionArg_int":3,"ExpandedSwitcher":0,"_bound":10} start 549.8174 took 15.0122s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":5,"ExpansionArg_bool":false,"ExpansionArg_type_4":1,"ExpansionArg_bool_2":false,"ExpandedSwitcher":0,"_bound":11} start 543.5443 took 21.302s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":1,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_1_type":0} start 553.2643 took 14.3895s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":5,"ExpansionArg_bool":false,"ExpansionArg_type_4":3,"ExpansionArg_bool_2":false,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_string":"PureString"} start 547.0223 took 20.6399s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":5,"ExpansionArg_bool":true,"ExpandedSwitcher":0,"_bound":14} start 545.9258 took 21.7364s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_0_bool":false} start 558.494 took 12.7096s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":5,"ExpansionArg_bool":true,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":12} start 552.0472 took 19.1565s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_0_type":0} start 557.3265 took 13.8773s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_1_type":0} start 550.6594 took 20.5445s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":3,"ExpansionArg_string_2":"","ExpandedSwitcher":0,"_bound":13} start 562.2039 took 14.2296s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":5,"ExpansionArg_bool":false,"ExpansionArg_type_4":2,"ExpansionArg_bool_2":false,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_int":0} start 563.0164 took 13.4172s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"!0!","ExpansionArg_type_4":4,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":14} start 555.7681 took 20.6656s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_3_type":0} start 561.1962 took 15.2376s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":3,"ExpansionArg_string":"!0!","ExpansionArg_type_4":3,"ExpansionArg_string_2":"","ExpandedSwitcher":0,"_bound":13} start 554.2818 took 22.152s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":3,"ExpansionArg_string":"!0!","ExpansionArg_type_4":1,"ExpandedSwitcher":0,"_bound":11} start 569.2253 took 14.2248s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_0_bool":false} start 559.6957 took 23.7546s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":5,"ExpansionArg_bool":false,"ExpansionArg_type_4":4,"ExpansionArg_bool_2":false,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_length":0} start 564.0503 took 19.4001s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":3,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":11} start 572.9986 took 14.0676s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":5,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpandedSwitcher":0,"_bound":20,"ExpansionArg_array_element_4_type":0} start 566.8616 took 20.2046s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_0_array_length":0} start 571.6688 took 15.3974s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":5,"ExpansionArg_bool":false,"ExpansionArg_type_4":3,"ExpansionArg_bool_2":false,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_string":"PureString"} start 565.6379 took 21.4283s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":5,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_4_type":0} start 570.4282 took 16.638s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":0,"ExpansionArg_type_4":2,"ExpansionArg_int":4,"ExpandedSwitcher":0,"_bound":12} start 579.8903 took 13.268s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_4":2,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_int":0} start 577.005 took 16.168s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":5,"ExpansionArg_bool":false,"ExpansionArg_type_4":1,"ExpansionArg_bool_2":false,"ExpandedSwitcher":0,"_bound":10} start 575.7891 took 17.384s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpandedSwitcher":0,"_bound":13} start 568.1076 took 25.0656s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_array_element_1_type":0} start 583.928 took 13.3958s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_array_element_0_int":0} start 581.408 took 15.9159s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":3,"ExpansionArg_string":"!0!","ExpansionArg_type_4":5,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":14} start 574.3935 took 22.9305s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":2,"ExpansionArg_int":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_array_element_0_type":0} start 587.625 took 13.3579s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"!0!","ExpansionArg_type_4":5,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":13} start 588.7557 took 12.2343s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_0_array_length":0} start 584.9133 took 16.0769s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":3,"ExpansionArg_string":"!0!","ExpansionArg_type_4":2,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":12} start 578.5599 took 22.4304s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":1,"ExpansionArg_type_4":2,"ExpandedSwitcher":0,"_bound":7,"ExpansionArg_int":0} start 590.0363 took 16.0487s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"!0!","ExpansionArg_type_4":3,"ExpansionArg_string_2":"","ExpandedSwitcher":0,"_bound":12} start 586.34 took 19.7624s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":0,"ExpansionArg_type_4":5,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_bool":false} start 582.6789 took 23.4235s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpandedSwitcher":0,"_bound":15} start 591.4326 took 18.6005s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_4":3,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_string":"PureString"} start 595.6538 took 14.3794s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"!0!","ExpansionArg_type_4":1,"ExpandedSwitcher":0,"_bound":10} start 592.3949 took 17.6383s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_4":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":14} start 594.8717 took 19.1357s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":11} start 593.648 took 20.3595s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":12} start 599.0483 took 14.9592s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_array_element_0_int":0} start 597.8894 took 16.1182s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":0,"ExpansionArg_type_4":5,"ExpansionArg_bool":true,"ExpandedSwitcher":0,"_bound":15} start 601.3712 took 17.4657s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_1_string":"PureString"} start 596.7453 took 22.0937s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_1_type":0} start 602.7669 took 16.0723s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_0_string":"PureString"} start 600.3012 took 18.538s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":0,"ExpansionArg_type_4":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_length_2":0} start 610.5869 took 13.5452s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_array_element_1_type":0} start 603.7984 took 20.3337s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_4":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":16,"ExpansionArg_bool":false} start 613.2747 took 13.2649s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":0,"ExpansionArg_type_4":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_int":0} start 611.9807 took 14.566s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":1,"ExpansionArg_type_4":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":8} start 606.5738 took 19.9731s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":1,"ExpansionArg_type_4":3,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_string":"PureString"} start 607.6919 took 18.855s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":0,"ExpansionArg_type_4":5,"ExpansionArg_bool":true,"ExpandedSwitcher":0,"_bound":14} start 605.2301 took 21.3169s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":0,"ExpansionArg_type_4":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":12} start 614.5427 took 17.7907s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":0,"ExpansionArg_type_4":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_string":"PureString"} start 609.0903 took 23.2431s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_1_bool":false} start 620.6318 took 14.0274s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_0_type":0} start 615.6875 took 20.2914s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"!0!","ExpansionArg_type_4":2,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":11} start 617.0911 took 20.2753s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":11} start 618.0438 took 21.1261s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_array_element_0_string":"PureString"} start 619.294 took 21.1247s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_1_int":0} start 621.93 took 19.9307s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":2,"ExpansionArg_int":4,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":12} start 628.4097 took 14.985s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":1,"ExpansionArg_type_4":4,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":10,"ExpansionArg_array_length":0} start 630.2185 took 13.1759s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_4":1,"ExpandedSwitcher":0,"_bound":14} start 624.7824 took 21.1586s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_0_bool":false} start 623.3295 took 22.6116s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_1_string":"PureString"} start 626.0057 took 22.3356s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_4":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_length_2":0} start 627.0505 took 21.2909s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_3":2,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_int":0} start 632.7115 took 15.63s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":3,"ExpansionArg_string_2":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":13} start 631.4574 took 20.5071s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":12} start 629.275 took 22.6912s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":0,"ExpansionArg_type_4":2,"ExpansionArg_int":1,"ExpandedSwitcher":0,"_bound":13} start 633.7847 took 18.1816s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_1_array_length":0} start 635.1701 took 16.7963s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":0,"ExpansionArg_type_4":3,"ExpansionArg_string_2":"","ExpandedSwitcher":0,"_bound":13} start 636.6062 took 20.7836s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_0_bool":false} start 640.9593 took 16.4579s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":1,"ExpansionArg_type_4":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_bool":false} start 645.3094 took 15.0686s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":5,"ExpansionArg_bool":true,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":14} start 639.7695 took 20.6084s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":1,"ExpansionArg_type_4":2,"ExpansionArg_int":3,"ExpandedSwitcher":0,"_bound":10} start 643.7996 took 16.5785s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":0,"ExpansionArg_type_4":3,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":14} start 637.724 took 22.6557s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_4":3,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_string":"PureString"} start 646.3559 took 18.8571s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_1_int":0} start 648.8385 took 16.3749s
*-- Test Case {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":10,"ExpansionArg_array_element_1_type":0} start 642.6557 took 22.5577s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":10,"ExpansionArg_array_element_1_type":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (31:8) on program // Copyright 2012 Mark Cavage, Inc.  All rights reserved.
//
// Restify supports both a client and server API, and in the essence of not
// loading the kitchen sink on clients, the exports here is chunked up into
// client and server; note clients will have to opt in by setting the env
// var "RESTIFY_CLIENT_ONLY", but if you're in that boat, it's not hard to do,
// and enables much faster load times
//

'use strict';

var shallowCopy = require('./utils').shallowCopy;


/**
 * creates an http request client. based on options passed in, will create one
 * of three existing clients: Http, String, or Json.
 * @public
 * @function createClient
 * @param    {Object} options      an options object
 * @param    {String} options.type 'http' | 'json' | 'string'
 * @returns  {HttpClient | JsonClient | StringClient}
 */
function createClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    var assert = require('assert-plus');
    var bunyan = require('./bunyan_helper');
    var clients = require('./clients');

    assert.object(options, 'options');

    var client;
    var opts = shallowCopy(options);
    opts.agent = options.agent;
    opts.name = opts.name || 'restify';
    opts.type = opts.type || 'application/octet-stream';
    opts.log = opts.log || bunyan.createLogger(opts.name);

    switch (opts.type) {
        case 'json':
            client = new clients.JsonClient(opts);
            break;

        case 'string':
            client = new clients.StringClient(opts);
            break;

        case 'http':
        default:
            client = new clients.HttpClient(opts);
            break;
    }

    return (client);
}


/**
 * creates a json httpclient.
 * @public
 * @function createJsonClient
 * @param    {Object}     options an options object
 * @returns  {JsonClient}         a json client
 */
function createJsonClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'json';
    return (createClient(options));
}


/**
 * creates a string httpclient.
 * @public
 * @function createStringClient
 * @param    {Object}       options an options object
 * @returns  {StringClient}         a string client
 */
function createStringClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'string';
    return (createClient(options));
}


/**
 * creates a regular httpclient.
 * @public
 * @function createHttpClient
 * @param    {Object}     options an options object
 * @returns  {HttpClient}         an http client
 */
function createHttpClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'http';
    return (createClient(options));
}


/**
 * creates a server.
 * @public
 * @function createServer
 * @param    {Object} options an options object
 * @returns  {Server}
 */
function createServer(options) {
    var bunyan = require('./bunyan_helper');
    var InternalError = require('./errors').InternalError;
    var Router = require('./router');
    var Server = require('./server');

    var opts = shallowCopy(options || {});
    var server;

    opts.name = opts.name || 'restify';
    opts.log = opts.log || bunyan.createLogger(opts.name);
    opts.router = opts.router || new Router(opts);

    server = new Server(opts);

    if (server.handleUncaughtExceptions) {
        server.on('uncaughtException', function (req, res, route, e) {
            if (this.listeners('uncaughtException').length > 1 ||
                res.headersSent) {
                return (false);
            }

            res.send(new InternalError(e, e.message || 'unexpected error'));
            return (true);
        });
    }

    return (server);
}


/**
 * Returns a string representation of a URL pattern , with its
 * parameters filled in by the passed hash.
 *
 * If a key is not found in the hash for a param, it is left alone.
 * @public
 * @function realizeUrl
 * @param   {String} pattern a url string
 * @param   {Object} params  a hash of parameter names to values for
 *                           substitution
 * @returns {String}
 */
function realizeUrl(pattern, params) {
    var p = pattern.replace(/\/:([^/]+)/g, function (match, k) {
        return (params.hasOwnProperty(k) ? '/' + params[k] : match);
    });


    return (require('./utils').sanitizePath(p));
}


///--- Exports

module.exports = {
    // Client API
    createClient: createClient,
    createJsonClient: createJsonClient,
    createJSONClient: createJsonClient,
    createStringClient: createStringClient,
    createHttpClient: createHttpClient,
    get HttpClient() {
        return (require('./clients').HttpClient);
    },
    get JsonClient() {
        return (require('./clients').JsonClient);
    },
    get StringClient() {
        return (require('./clients').StringClient);
    },

    // Miscellaneous API
    get bunyan() {
        return (require('./bunyan_helper'));
    },

    errors: {}

};

var errors = require('./errors');
Object.keys(errors).forEach(function (k) {
    module.exports.errors[k] = errors[k];
    module.exports[k] = errors[k];
});

if (!process.env.RESTIFY_CLIENT_ONLY) {

    module.exports.createServer = createServer;
    module.exports.httpDate = require('./http_date');
    module.exports.realizeUrl = realizeUrl;
    module.exports.formatters = require('./formatters');
    module.exports.plugins = {};
    var plugins = require('./plugins');
    Object.keys(plugins).forEach(function (k) {
        module.exports.plugins[k] = plugins[k];
        module.exports[k] = plugins[k];
    });
}
 at SyntaxError: Unexpected token (31:8)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":1,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_1_string":"PureString"} start 653.6974 took 14.8775s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_3":3,"ExpansionArg_int":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_string":"PureString"} start 652.5175 took 17.4935s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_0_array_length":0} start 647.5951 took 22.416s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_3":1,"ExpansionArg_int":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":13} start 651.3679 took 21.767s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_1_bool":false} start 650.1749 took 22.96s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_0_type":0} start 656.4592 took 16.6757s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":2,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_int":0} start 655.1053 took 21.7172s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_type_3":5,"ExpansionArg_bool":true,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":12} start 658.2552 took 20.4504s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_0_array_length":0} start 659.8112 took 21.0188s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":5,"ExpansionArg_bool":true,"ExpandedSwitcher":0,"_bound":12} start 661.1986 took 20.9968s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"!0!","ExpansionArg_type_4":4,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":15} start 664.6377 took 17.5577s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_bool":false,"ExpansionArg_type_3":6,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_bool_2":false} start 662.5678 took 21.6345s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpansionArg_type_3":5,"ExpansionArg_bool":true,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":16} start 663.7227 took 21.7799s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_4":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":16,"ExpansionArg_int":0} start 666.8425 took 19.9489s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_4":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":17,"ExpansionArg_bool":false} start 665.8914 took 22.2955s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":0,"ExpansionArg_type_4":5,"ExpansionArg_bool":true,"ExpandedSwitcher":0,"_bound":16} start 667.7715 took 22.2101s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_1_bool":false} start 669.223 took 22.2208s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_1_array_length":0} start 675.23 took 16.2138s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_1_int":0} start 672.1766 took 22.3261s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":1,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":14} start 677.4672 took 17.0355s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_3":5,"ExpansionArg_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_bool":false} start 670.779 took 23.7238s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_1_string":"PureString"} start 681.3056 took 16.4988s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":3,"ExpansionArg_string_2":"","ExpandedSwitcher":0,"_bound":14} start 673.7502 took 24.0543s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"!0!","ExpansionArg_type_4":3,"ExpansionArg_string_2":"","ExpandedSwitcher":0,"_bound":13} start 676.1858 took 24.4912s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":1,"ExpansionArg_type_4":3,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":11} start 682.5008 took 21.0067s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_4":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_length_2":0} start 688.7008 took 16.0702s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_array_element_0_int":0} start 683.2929 took 21.4782s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_bool":false,"ExpansionArg_type_3":4,"ExpansionArg_bool_2":false,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_length":0} start 684.6658 took 22.8914s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_1_array_length":0} start 692.1529 took 16.8758s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_bool":false,"ExpansionArg_type_3":2,"ExpansionArg_bool_2":false,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_int":0} start 685.9113 took 23.1175s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_3":4,"ExpansionArg_bool":false,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_length_2":0} start 697.4807 took 14.1301s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_bool":false,"ExpansionArg_type_3":3,"ExpansionArg_bool_2":false,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_string":"PureString"} start 687.6013 took 24.0232s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_2_type":0} start 695.0549 took 16.5696s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":0,"ExpansionArg_type_4":3,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":15} start 693.7724 took 22.0531s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_1_bool":false} start 698.3179 took 17.5077s
*-- Test Case {"Switcher":false,"Target_Switch_Base":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"_bound":10,"ExpansionArg_array_element_0_type":0} start 679.4639 took 36.3616s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"_bound":10,"ExpansionArg_array_element_0_type":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (6:4) on program /**
 * Created by lawrence on 4/16/16.
 */
'use strict';

var assert = require('assert');
var _ = require('lodash');
var convert = require('./joi-to-json-schema');

module.exports.create = function (routes, options) {
  var swagger = new SwaggerDoc();
  var result = swagger.createResponse(options);
  var paths = swagger.loadRestifyRoutes(routes);
  result.paths = paths;
  return result;
};

function SwaggerDoc() {
  var swaggerDoc = this;

  var SWAGGER_METHODS = ['get', 'patch', 'post', 'put', 'delete'],
    SWAGGER_VERSION = '2.0';

  swaggerDoc.createResponse = function (options) {
    assert.ok(options.host, 'Swagger not initialized! Host of configure required!');

    swaggerDoc.definitions = require('./definition').getDefinitions(options.cwd);
    return {
      swagger: SWAGGER_VERSION,
      info: options.info,
      host: options.host,
      basePath: options.basePath,
      schemes: options.schemes || ['http'],
      securityDefinitions: options.securityDefinitions || {},
      definitions: swaggerDoc.definitions
    };
  };

  swaggerDoc.convertToSwagger = function (path) {
    return path.replace(/:([^/]+)/g, '{$1}');
  };

  swaggerDoc.loadRestifyRoutes = function (routes) {
    var paths = {};
    _(routes).forEach(function (route) {
      if (!route.meta.admin || !route.meta.hide) {
        var spec = route;
        var pathName = swaggerDoc.convertToSwagger(spec.path);
        var flag = paths[pathName] && paths[pathName][spec.method.toLowerCase()];
        assert.ok(!flag, 'Swagger doc method:' + spec.method + ',path:' + spec.path + ' exist!');
        if (!paths[pathName]) {
          paths[pathName] = {};
        }

        var parameters = [];
        for (var item in spec.parameters) {
          var content = spec.parameters[item];
          var schemaName = content.name;
          if (item === 'body') {
            if (content.schema && content.schema.isJoi) {
              swaggerDoc.definitions[content.name] = convert(content.schema);
            } else {
              schemaName = content.schema || content.name;
            }

            var p = {
              name: item,
              in: item,
              description: content.description,
              required: content.required || true
            };
            if (content.type === 'array') {
              p.schema = {
                type: 'array',
                items: { $ref: '#/definitions/' + schemaName }
              };
            } else {
              p.schema = { $ref: '#/definitions/' + schemaName };
            }
            parameters.push(p);
          } else {
            var schema = convert(content);
            for (var key in schema.properties) {
              var obj = schema.properties[key];
              obj.in = item;
              obj.name = key;
              obj.required = _.indexOf(schema.required, key) >= 0;
              parameters.push(obj);
            }
          }

        }

        /*if (spec.meta.auth) {
         parameters.push({
         name: 'Authorization',
         type: 'string',
         required: true,
         in: 'header',
         description: 'access token or refresh token'
         });
         }*/

        paths[pathName][spec.method.toLowerCase()] = {
          tags: spec.swagger.tags,
          summary: spec.swagger.summary,
          description: spec.swagger.description,
          consumes: spec.swagger.consumes || [],
          produces: spec.swagger.produces || [],
          operationId: spec.controller.action,
          "x-swagger-router-controller": spec.controller.name,
          parameters: parameters,
          responses: spec.responses
        };
      }
    });

    return paths;
  };

  return swaggerDoc;
}
 at SyntaxError: Unexpected token (6:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":3,"ExpansionArg_type":4,"ExpansionArg_array_length":1,"_bound":10}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":5,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpandedSwitcher":0,"_bound":19,"ExpansionArg_array_element_4_type":0} start 690.5901 took 25.2355s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":15} start 699.8246 took 21.9979s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":3,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_string":"PureString"} start 696.1351 took 25.6875s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":5,"ExpansionArg_bool":true,"ExpandedSwitcher":0,"_bound":15} start 705.2909 took 16.5317s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_bool":false,"ExpansionArg_type_3":0,"ExpansionArg_type_4":6,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_bool_2":false} start 703.9979 took 17.8248s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_bool":false,"ExpansionArg_type_3":1,"ExpansionArg_bool_2":false,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":10} start 701.4008 took 26.1918s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":13} start 706.6622 took 22.11s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":4,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":7,"ExpansionArg_array_length":0} start 712.2105 took 17.8864s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_0_type":0} start 708.171 took 23.3584s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_0_type":0} start 709.6767 took 21.8527s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":0,"ExpansionArg_type_4":2,"ExpansionArg_int":3,"ExpandedSwitcher":0,"_bound":14} start 710.6475 took 24.1236s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_1_int":0} start 714.8125 took 21.3788s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_4":2,"ExpansionArg_int":3,"ExpandedSwitcher":0,"_bound":15} start 713.2966 took 22.9137s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":4,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":6,"ExpansionArg_array_length":0} start 719.3745 took 16.8359s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_1_array_length":0} start 717.9951 took 22.5297s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"!0!","ExpansionArg_type_4":1,"ExpandedSwitcher":0,"_bound":11} start 722.4736 took 18.0585s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":5,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_array_element_3_type":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_4_type":0} start 716.5888 took 23.9435s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":16,"ExpansionArg_bool":false} start 723.7975 took 22.1033s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_0_string":"PureString"} start 720.6691 took 25.2319s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":5,"ExpansionArg_array_length":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_bool":false} start 730.6204 took 17.5139s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":5,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher":0,"_bound":18} start 725.5218 took 22.6126s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_bool":false,"ExpansionArg_type_3":0,"ExpansionArg_type_4":2,"ExpansionArg_bool_2":false,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_int":0} start 729.4426 took 18.6918s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":3,"ExpansionArg_array_length":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_string_2":"PureString"} start 733.8139 took 18.045s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_bool":false,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_bool_2":false,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_length":0} start 728.1448 took 23.7141s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_bool":false,"ExpansionArg_type_3":0,"ExpansionArg_type_4":1,"ExpansionArg_bool_2":false,"ExpandedSwitcher":0,"_bound":11} start 735.4375 took 16.4213s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":2,"ExpansionArg_array_length":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_int":0} start 732.1294 took 19.7295s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":5,"ExpansionArg_bool":false,"ExpansionArg_type_3":0,"ExpansionArg_type_4":3,"ExpansionArg_bool_2":false,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_string":"PureString"} start 727.0398 took 24.8191s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":1,"ExpansionArg_array_length":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":8} start 736.9311 took 21.9478s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":2,"ExpansionArg_array_length":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":8,"ExpansionArg_int":0} start 739.6089 took 19.27s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":2,"ExpansionArg_int":4,"ExpandedSwitcher":0,"_bound":13} start 738.6326 took 23.0167s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_array_element_0_type":0} start 744.999 took 16.6504s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpandedSwitcher":0,"_bound":8,"ExpansionArg_array_length":0} start 743.0539 took 21.4853s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":5,"ExpansionArg_array_length":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_bool":false} start 741.2142 took 23.325s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_0_bool":false} start 747.3826 took 17.1567s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_length_2":0} start 746.2947 took 22.4599s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"!0!","ExpansionArg_type_4":5,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":14} start 750.9618 took 17.7928s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":1,"ExpansionArg_array_length":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":7} start 748.6597 took 23.1247s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":3,"ExpansionArg_array_length":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_string_2":"PureString"} start 752.2411 took 20.9672s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpansionArg_type_3":2,"ExpansionArg_int":3,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":14} start 749.8756 took 23.3328s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":1,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_array_element_0_type":0} start 753.8085 took 22.5172s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":5,"ExpansionArg_bool":false,"ExpansionArg_type_4":6,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_bool_2":false} start 755.09 took 22.3143s
*-- Test Case {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":11,"ExpansionArg_array_element_1_type":0} start 756.7144 took 22.9094s
*-- Errors occured in test {"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":11,"ExpansionArg_array_element_1_type":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (31:8) on program // Copyright 2012 Mark Cavage, Inc.  All rights reserved.
//
// Restify supports both a client and server API, and in the essence of not
// loading the kitchen sink on clients, the exports here is chunked up into
// client and server; note clients will have to opt in by setting the env
// var "RESTIFY_CLIENT_ONLY", but if you're in that boat, it's not hard to do,
// and enables much faster load times
//

'use strict';

var shallowCopy = require('./utils').shallowCopy;


/**
 * creates an http request client. based on options passed in, will create one
 * of three existing clients: Http, String, or Json.
 * @public
 * @function createClient
 * @param    {Object} options      an options object
 * @param    {String} options.type 'http' | 'json' | 'string'
 * @returns  {HttpClient | JsonClient | StringClient}
 */
function createClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    var assert = require('assert-plus');
    var bunyan = require('./bunyan_helper');
    var clients = require('./clients');

    assert.object(options, 'options');

    var client;
    var opts = shallowCopy(options);
    opts.agent = options.agent;
    opts.name = opts.name || 'restify';
    opts.type = opts.type || 'application/octet-stream';
    opts.log = opts.log || bunyan.createLogger(opts.name);

    switch (opts.type) {
        case 'json':
            client = new clients.JsonClient(opts);
            break;

        case 'string':
            client = new clients.StringClient(opts);
            break;

        case 'http':
        default:
            client = new clients.HttpClient(opts);
            break;
    }

    return (client);
}


/**
 * creates a json httpclient.
 * @public
 * @function createJsonClient
 * @param    {Object}     options an options object
 * @returns  {JsonClient}         a json client
 */
function createJsonClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'json';
    return (createClient(options));
}


/**
 * creates a string httpclient.
 * @public
 * @function createStringClient
 * @param    {Object}       options an options object
 * @returns  {StringClient}         a string client
 */
function createStringClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'string';
    return (createClient(options));
}


/**
 * creates a regular httpclient.
 * @public
 * @function createHttpClient
 * @param    {Object}     options an options object
 * @returns  {HttpClient}         an http client
 */
function createHttpClient(options) {
    if (typeof (options) === 'string') {
        options = {
            url: options
        };
    }

    options = options ? shallowCopy(options) : {};
    options.type = 'http';
    return (createClient(options));
}


/**
 * creates a server.
 * @public
 * @function createServer
 * @param    {Object} options an options object
 * @returns  {Server}
 */
function createServer(options) {
    var bunyan = require('./bunyan_helper');
    var InternalError = require('./errors').InternalError;
    var Router = require('./router');
    var Server = require('./server');

    var opts = shallowCopy(options || {});
    var server;

    opts.name = opts.name || 'restify';
    opts.log = opts.log || bunyan.createLogger(opts.name);
    opts.router = opts.router || new Router(opts);

    server = new Server(opts);

    if (server.handleUncaughtExceptions) {
        server.on('uncaughtException', function (req, res, route, e) {
            if (this.listeners('uncaughtException').length > 1 ||
                res.headersSent) {
                return (false);
            }

            res.send(new InternalError(e, e.message || 'unexpected error'));
            return (true);
        });
    }

    return (server);
}


/**
 * Returns a string representation of a URL pattern , with its
 * parameters filled in by the passed hash.
 *
 * If a key is not found in the hash for a param, it is left alone.
 * @public
 * @function realizeUrl
 * @param   {String} pattern a url string
 * @param   {Object} params  a hash of parameter names to values for
 *                           substitution
 * @returns {String}
 */
function realizeUrl(pattern, params) {
    var p = pattern.replace(/\/:([^/]+)/g, function (match, k) {
        return (params.hasOwnProperty(k) ? '/' + params[k] : match);
    });


    return (require('./utils').sanitizePath(p));
}


///--- Exports

module.exports = {
    // Client API
    createClient: createClient,
    createJsonClient: createJsonClient,
    createJSONClient: createJsonClient,
    createStringClient: createStringClient,
    createHttpClient: createHttpClient,
    get HttpClient() {
        return (require('./clients').HttpClient);
    },
    get JsonClient() {
        return (require('./clients').JsonClient);
    },
    get StringClient() {
        return (require('./clients').StringClient);
    },

    // Miscellaneous API
    get bunyan() {
        return (require('./bunyan_helper'));
    },

    errors: {}

};

var errors = require('./errors');
Object.keys(errors).forEach(function (k) {
    module.exports.errors[k] = errors[k];
    module.exports[k] = errors[k];
});

if (!process.env.RESTIFY_CLIENT_ONLY) {

    module.exports.createServer = createServer;
    module.exports.httpDate = require('./http_date');
    module.exports.realizeUrl = realizeUrl;
    module.exports.formatters = require('./formatters');
    module.exports.plugins = {};
    var plugins = require('./plugins');
    Object.keys(plugins).forEach(function (k) {
        module.exports.plugins[k] = plugins[k];
        module.exports[k] = plugins[k];
    });
}
 at SyntaxError: Unexpected token (31:8)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"Switcher":false,"Target_Switch_Base":2,"ExpansionArg_type":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"_bound":11}'
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":0,"ExpansionArg_type_4":3,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_string_2":"PureString"} start 765.4399 took 16.7133s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpandedSwitcher":0,"_bound":8,"ExpansionArg_array_length":0} start 761.1635 took 22.5618s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"!0!","ExpansionArg_type_4":2,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":12} start 759.4711 took 24.2543s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_4":3,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":16} start 758.2311 took 25.5237s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_1_type":0} start 763.6795 took 25.0313s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":1,"ExpansionArg_type_4":5,"ExpansionArg_bool":true,"ExpandedSwitcher":0,"_bound":12} start 762.2035 took 26.5073s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_0_array_length":0} start 767.8928 took 23.8988s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":0,"ExpansionArg_type_4":2,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_int":0} start 766.516 took 25.2757s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":3,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_element_1_string":"PureString"} start 776.9613 took 17.5152s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":7,"ExpansionArg_array_length":0} start 774.84 took 19.6366s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":0,"ExpansionArg_type_4":1,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":9} start 769.3154 took 25.1613s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":5,"ExpansionArg_bool":false,"ExpansionArg_type_4":3,"ExpansionArg_bool_2":false,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_string":"PureString"} start 780.4134 took 17.7614s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":4,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_3_type":0} start 772.3038 took 25.8711s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length_2":1,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_0_type":0} start 773.7256 took 24.4493s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":3,"ExpansionArg_string":"","ExpansionArg_type_3":0,"ExpansionArg_type_4":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_bool":false} start 770.6986 took 27.4763s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":1,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":9} start 785.9674 took 17.8999s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":5,"ExpansionArg_bool":false,"ExpansionArg_type_4":4,"ExpansionArg_bool_2":false,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_length":0} start 778.2873 took 25.5801s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":5,"ExpansionArg_bool":false,"ExpansionArg_type_4":2,"ExpansionArg_bool_2":false,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_int":0} start 782.9042 took 20.9632s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":3,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_string_2":"PureString"} start 784.3732 took 24.1315s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":15} start 790.4366 took 19.4061s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":5,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_bool":false} start 787.6353 took 24.217s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":5,"ExpansionArg_bool":false,"ExpansionArg_type_4":1,"ExpansionArg_bool_2":false,"ExpandedSwitcher":0,"_bound":11} start 789.429 took 23.6554s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":5,"ExpansionArg_bool":false,"ExpansionArg_type_4":6,"ExpansionArg_bool_2":true,"ExpandedSwitcher":0,"_bound":16} start 793.5722 took 23.1858s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":6,"ExpansionArg_type_4":5,"ExpansionArg_bool":true,"ExpandedSwitcher":0,"_bound":14} start 792.4496 took 26.5731s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":2,"ExpansionArg_array_length":0,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_int":0} start 801.6245 took 17.4075s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":0,"ExpansionArg_type_3":1,"ExpansionArg_array_length":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":8} start 798.5857 took 23.8134s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":3,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":1,"ExpandedSwitcher":0,"_bound":16} start 805.8215 took 16.5777s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":3,"ExpansionArg_type_4":2,"ExpansionArg_int_2":4,"ExpandedSwitcher":0,"_bound":12} start 802.9975 took 19.4018s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":2,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_1_int":0} start 795.1617 took 27.2377s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":1,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":14} start 795.9369 took 26.4626s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":3,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":4,"ExpansionArg_array_element_0_array_length":0,"ExpandedSwitcher":0,"_bound":20} start 813.8622 took 16.1851s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_array_length":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_string_2":"PureString"} start 804.4343 took 25.6131s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":0,"ExpansionArg_type_3":5,"ExpansionArg_array_length":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_bool":false} start 800.0076 took 30.0398s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":5,"ExpansionArg_array_element_1_string":"","ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_1_bool":false} start 797.351 took 32.6966s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":5,"ExpansionArg_bool":true,"ExpandedSwitcher":0,"_bound":16} start 812.2066 took 24.7574s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":3,"ExpansionArg_string":"","ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_array_length":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_int":0} start 810.3511 took 26.6294s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpandedSwitcher":0,"_bound":15} start 817.5729 took 19.4078s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_1_type":0} start 809.0672 took 27.9135s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpansionArg_type_3":5,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":9,"ExpansionArg_bool":false} start 807.7107 took 29.2701s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":3,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":2,"ExpansionArg_array_element_0_int":0,"ExpandedSwitcher":0,"_bound":17} start 821.4479 took 23.4846s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":3,"ExpansionArg_array_element_0_string":"","ExpandedSwitcher":0,"_bound":15,"ExpansionArg_array_element_1_type":0} start 820.0057 took 24.9269s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":5,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_bool":false} start 822.9646 took 21.9681s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_4":3,"ExpandedSwitcher":0,"_bound":15,"ExpansionArg_string":"PureString"} start 824.736 took 25.4404s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":6,"ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":19} start 827.6759 took 24.275s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":2,"ExpansionArg_int":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_1_type":0} start 826.2985 took 25.6525s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":5,"ExpansionArg_bool":true,"ExpansionArg_type_4":2,"ExpansionArg_int":0,"ExpandedSwitcher":0,"_bound":13} start 829.2443 took 25.6414s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":0,"ExpansionArg_type_3":3,"ExpansionArg_string":"","ExpansionArg_type_4":4,"ExpansionArg_array_length":1,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_element_0_type":0} start 832.4381 took 24.0125s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":1,"ExpandedSwitcher":0,"_bound":17} start 837.504 took 18.9704s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":5,"ExpansionArg_bool":true,"ExpansionArg_type_4":6,"ExpansionArg_bool_2":false,"ExpandedSwitcher":0,"_bound":15} start 830.7315 took 25.743s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":5,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":8,"ExpansionArg_bool":false} start 842.2918 took 19.9457s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length_2":1,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_0_type":0} start 833.6419 took 28.5957s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":4,"ExpansionArg_array_element_1_bool":false,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":17,"ExpansionArg_array_element_1_array_length":0} start 836.0479 took 26.19s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":2,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_2_int":0} start 840.842 took 27.6467s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":5,"ExpansionArg_bool":false,"ExpansionArg_type_4":2,"ExpansionArg_int":6,"ExpandedSwitcher":0,"_bound":14} start 839.1206 took 29.3699s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":2,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_int":0} start 849.153 took 19.3379s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpansionArg_type_3":3,"ExpansionArg_bool":false,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_string":"PureString"} start 845.5785 took 27.6666s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpansionArg_type_3":2,"ExpansionArg_bool":false,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_int":0} start 844.006 took 29.2392s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpansionArg_type_3":1,"ExpansionArg_bool":false,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":10} start 847.2245 took 26.0211s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpansionArg_type_3":4,"ExpansionArg_bool":false,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_array_length_2":0} start 852.4761 took 20.7695s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":14,"ExpansionArg_array_length_2":0} start 859.2429 took 20.8799s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_4":5,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":18,"ExpansionArg_bool":false} start 850.9858 took 29.1371s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":1,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":11} start 854.0436 took 26.0797s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":3,"ExpansionArg_bool":false,"ExpandedSwitcher":0,"_bound":13,"ExpansionArg_string":"PureString"} start 857.4259 took 26.7439s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":3,"ExpansionArg_bool":false,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":11,"ExpansionArg_string":"PureString"} start 863.0775 took 21.0968s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_4":1,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":16} start 855.8438 took 28.3306s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":1,"ExpansionArg_type_3":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_type_4":2,"ExpansionArg_string":"","ExpandedSwitcher":0,"_bound":17,"ExpansionArg_int":0} start 861.1218 took 28.2s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":4,"ExpansionArg_bool":false,"ExpansionArg_type_3":0,"ExpansionArg_type_4":0,"ExpandedSwitcher":0,"_bound":12,"ExpansionArg_array_length_2":0} start 865.0896 took 25.603s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":2,"ExpansionArg_int":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":3,"ExpansionArg_array_element_0_type":0,"ExpansionArg_array_element_1_type":0,"ExpansionArg_array_element_2_type":5,"ExpandedSwitcher":0,"_bound":18,"ExpansionArg_array_element_2_bool":false} start 867.4856 took 25.3123s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":1,"ExpansionArg_type_2":4,"ExpansionArg_array_length":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":2,"ExpansionArg_int":3,"ExpandedSwitcher":0,"_bound":14} start 869.1886 took 25.4919s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":4,"ExpansionArg_array_length":2,"ExpansionArg_array_element_0_type":5,"ExpansionArg_array_element_0_bool":false,"ExpandedSwitcher":0,"_bound":16,"ExpansionArg_array_element_1_type":0} start 870.4234 took 26.8234s
*-- Test Case {"Switcher":false,"Target_Switch_Base":0,"ExpansionArg_type":4,"ExpansionArg_array_length":0,"ExpansionArg_type_2":0,"ExpansionArg_type_3":0,"ExpansionArg_type_4":5,"ExpandedSwitcher":0,"_bound":10,"ExpansionArg_bool":false} start 872.1595 took 26.8209s
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 88% Coverage (LOC): 89%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 38% Coverage (LOC): 56%
*- File /root/Targets/aza-node/node_modules/aza-node/index.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/aza-node/core/index.js. Coverage (Term): 23% Coverage (LOC): 24%
*- File /root/Targets/aza-node/node_modules/aza-node/core/normalization/response/FormatterManager.js. Coverage (Term): 40% Coverage (LOC): 48%
*- File /root/Targets/aza-node/node_modules/aza-node/core/BizError.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/aza-node/core/normalization/response/formatters/dateFormatter.js. Coverage (Term): 64% Coverage (LOC): 88%
*- File /root/Targets/aza-node/node_modules/moment/moment.js. Coverage (Term): 21% Coverage (LOC): 37%
*- File /root/Targets/aza-node/node_modules/aza-node/core/config.js. Coverage (Term): 49% Coverage (LOC): 52%
*- File /root/Targets/aza-node/node_modules/aza-node/core/service.js. Coverage (Term): 44% Coverage (LOC): 49%
*- File /root/Targets/aza-node/node_modules/aza-node/core/controllerManager.js. Coverage (Term): 25% Coverage (LOC): 32%
*- File /root/Targets/aza-node/node_modules/aza-node/core/swagger-ui/index.js. Coverage (Term): 22% Coverage (LOC): 30%
*- File /root/Targets/aza-node/node_modules/lodash/lodash.js. Coverage (Term): 22% Coverage (LOC): 35%
*- File /root/Targets/aza-node/node_modules/swagger-tools/index.js. Coverage (Term): 18% Coverage (LOC): 19%
*- File /root/Targets/aza-node/node_modules/lodash-compat/index.js. Coverage (Term): 21% Coverage (LOC): 32%
*- File /root/Targets/aza-node/node_modules/debug/src/index.js. Coverage (Term): 81% Coverage (LOC): 83%
*- File /root/Targets/aza-node/node_modules/debug/src/node.js. Coverage (Term): 35% Coverage (LOC): 44%
*- File /root/Targets/aza-node/node_modules/debug/src/debug.js. Coverage (Term): 47% Coverage (LOC): 51%
*- File /root/Targets/aza-node/node_modules/ms/index.js. Coverage (Term): 12% Coverage (LOC): 15%
*- File /root/Targets/aza-node/node_modules/swagger-tools/lib/helpers.js. Coverage (Term): 23% Coverage (LOC): 37%
*- File /root/Targets/aza-node/node_modules/lodash-compat/collection/each.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/collection/forEach.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/arrayEach.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/baseEach.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/baseForOwn.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/baseFor.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/createBaseFor.js. Coverage (Term): 92% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/toObject.js. Coverage (Term): 59% Coverage (LOC): 62%
*- File /root/Targets/aza-node/node_modules/lodash-compat/lang/isObject.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/lang/isString.js. Coverage (Term): 63% Coverage (LOC): 89%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/isObjectLike.js. Coverage (Term): 94% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/support.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/object/keys.js. Coverage (Term): 90% Coverage (LOC): 92%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/getNative.js. Coverage (Term): 92% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/lang/isNative.js. Coverage (Term): 83% Coverage (LOC): 88%
*- File /root/Targets/aza-node/node_modules/lodash-compat/lang/isFunction.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/isHostObject.js. Coverage (Term): 58% Coverage (LOC): 80%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/isArrayLike.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/getLength.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/baseProperty.js. Coverage (Term): 92% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/isLength.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/shimKeys.js. Coverage (Term): 42% Coverage (LOC): 41%
*- File /root/Targets/aza-node/node_modules/lodash-compat/lang/isArguments.js. Coverage (Term): 62% Coverage (LOC): 89%
*- File /root/Targets/aza-node/node_modules/lodash-compat/lang/isArray.js. Coverage (Term): 72% Coverage (LOC): 91%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/isIndex.js. Coverage (Term): 36% Coverage (LOC): 67%
*- File /root/Targets/aza-node/node_modules/lodash-compat/object/keysIn.js. Coverage (Term): 45% Coverage (LOC): 57%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/createBaseEach.js. Coverage (Term): 62% Coverage (LOC): 63%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/createForEach.js. Coverage (Term): 86% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/bindCallback.js. Coverage (Term): 16% Coverage (LOC): 19%
*- File /root/Targets/aza-node/node_modules/lodash-compat/utility/identity.js. Coverage (Term): 68% Coverage (LOC): 80%
*- File /root/Targets/aza-node/node_modules/lodash-compat/array/indexOf.js. Coverage (Term): 28% Coverage (LOC): 30%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/baseIndexOf.js. Coverage (Term): 33% Coverage (LOC): 33%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/indexOfNaN.js. Coverage (Term): 25% Coverage (LOC): 33%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/binaryIndex.js. Coverage (Term): 32% Coverage (LOC): 33%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/binaryIndexBy.js. Coverage (Term): 21% Coverage (LOC): 23%
*- File /root/Targets/aza-node/node_modules/lodash-compat/lang/isPlainObject.js. Coverage (Term): 49% Coverage (LOC): 52%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/baseForIn.js. Coverage (Term): 69% Coverage (LOC): 83%
*- File /root/Targets/aza-node/node_modules/lodash-compat/lang/isUndefined.js. Coverage (Term): 93% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/collection/reduce.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/arrayReduce.js. Coverage (Term): 27% Coverage (LOC): 33%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/createReduce.js. Coverage (Term): 91% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/baseCallback.js. Coverage (Term): 65% Coverage (LOC): 56%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/baseMatches.js. Coverage (Term): 29% Coverage (LOC): 29%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/baseIsMatch.js. Coverage (Term): 16% Coverage (LOC): 17%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/baseIsEqual.js. Coverage (Term): 39% Coverage (LOC): 42%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/baseIsEqualDeep.js. Coverage (Term): 24% Coverage (LOC): 17%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/equalArrays.js. Coverage (Term): 15% Coverage (LOC): 19%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/arraySome.js. Coverage (Term): 33% Coverage (LOC): 36%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/equalByTag.js. Coverage (Term): 36% Coverage (LOC): 29%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/equalObjects.js. Coverage (Term): 15% Coverage (LOC): 21%
*- File /root/Targets/aza-node/node_modules/lodash-compat/lang/isTypedArray.js. Coverage (Term): 89% Coverage (LOC): 92%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/getMatchData.js. Coverage (Term): 44% Coverage (LOC): 50%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/isStrictComparable.js. Coverage (Term): 61% Coverage (LOC): 83%
*- File /root/Targets/aza-node/node_modules/lodash-compat/object/pairs.js. Coverage (Term): 35% Coverage (LOC): 33%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/baseMatchesProperty.js. Coverage (Term): 36% Coverage (LOC): 23%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/baseGet.js. Coverage (Term): 25% Coverage (LOC): 29%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/baseSlice.js. Coverage (Term): 14% Coverage (LOC): 20%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/isKey.js. Coverage (Term): 40% Coverage (LOC): 40%
*- File /root/Targets/aza-node/node_modules/lodash-compat/array/last.js. Coverage (Term): 42% Coverage (LOC): 67%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/toPath.js. Coverage (Term): 43% Coverage (LOC): 47%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/baseToString.js. Coverage (Term): 53% Coverage (LOC): 80%
*- File /root/Targets/aza-node/node_modules/lodash-compat/utility/property.js. Coverage (Term): 66% Coverage (LOC): 83%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/basePropertyDeep.js. Coverage (Term): 49% Coverage (LOC): 56%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/baseReduce.js. Coverage (Term): 88% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/json-refs/index.js. Coverage (Term): 6% Coverage (LOC): 11%
*- File /root/Targets/aza-node/node_modules/path-loader/index.js. Coverage (Term): 17% Coverage (LOC): 20%
*- File /root/Targets/aza-node/node_modules/path-loader/lib/loaders/file.js. Coverage (Term): 31% Coverage (LOC): 41%
*- File /root/Targets/aza-node/node_modules/path-loader/lib/loaders/http.js. Coverage (Term): 16% Coverage (LOC): 28%
*- File /root/Targets/aza-node/node_modules/path-loader/node_modules/superagent/lib/node/index.js. Coverage (Term): 14% Coverage (LOC): 20%
*- File /root/Targets/aza-node/node_modules/formidable/lib/index.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/formidable/lib/incoming_form.js. Coverage (Term): 10% Coverage (LOC): 12%
*- File /root/Targets/aza-node/node_modules/formidable/lib/file.js. Coverage (Term): 25% Coverage (LOC): 25%
*- File /root/Targets/aza-node/node_modules/formidable/lib/multipart_parser.js. Coverage (Term): 14% Coverage (LOC): 15%
*- File /root/Targets/aza-node/node_modules/formidable/lib/querystring_parser.js. Coverage (Term): 34% Coverage (LOC): 52%
*- File /root/Targets/aza-node/node_modules/formidable/lib/octet_parser.js. Coverage (Term): 51% Coverage (LOC): 63%
*- File /root/Targets/aza-node/node_modules/formidable/lib/json_parser.js. Coverage (Term): 26% Coverage (LOC): 38%
*- File /root/Targets/aza-node/node_modules/form-data/lib/form_data.js. Coverage (Term): 13% Coverage (LOC): 19%
*- File /root/Targets/aza-node/node_modules/combined-stream/lib/combined_stream.js. Coverage (Term): 17% Coverage (LOC): 27%
*- File /root/Targets/aza-node/node_modules/delayed-stream/lib/delayed_stream.js. Coverage (Term): 23% Coverage (LOC): 33%
*- File /root/Targets/aza-node/node_modules/mime-types/index.js. Coverage (Term): 48% Coverage (LOC): 51%
*- File /root/Targets/aza-node/node_modules/mime-db/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/asynckit/index.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/asynckit/parallel.js. Coverage (Term): 32% Coverage (LOC): 25%
*- File /root/Targets/aza-node/node_modules/asynckit/lib/iterate.js. Coverage (Term): 23% Coverage (LOC): 26%
*- File /root/Targets/aza-node/node_modules/asynckit/lib/async.js. Coverage (Term): 32% Coverage (LOC): 31%
*- File /root/Targets/aza-node/node_modules/asynckit/lib/defer.js. Coverage (Term): 31% Coverage (LOC): 44%
*- File /root/Targets/aza-node/node_modules/asynckit/lib/abort.js. Coverage (Term): 33% Coverage (LOC): 50%
*- File /root/Targets/aza-node/node_modules/asynckit/lib/state.js. Coverage (Term): 20% Coverage (LOC): 24%
*- File /root/Targets/aza-node/node_modules/asynckit/lib/terminator.js. Coverage (Term): 48% Coverage (LOC): 45%
*- File /root/Targets/aza-node/node_modules/asynckit/serial.js. Coverage (Term): 61% Coverage (LOC): 83%
*- File /root/Targets/aza-node/node_modules/asynckit/serialOrdered.js. Coverage (Term): 31% Coverage (LOC): 36%
*- File /root/Targets/aza-node/node_modules/form-data/lib/populate.js. Coverage (Term): 33% Coverage (LOC): 50%
*- File /root/Targets/aza-node/node_modules/path-loader/node_modules/superagent/lib/node/response.js. Coverage (Term): 23% Coverage (LOC): 37%
*- File /root/Targets/aza-node/node_modules/path-loader/node_modules/superagent/lib/response-base.js. Coverage (Term): 29% Coverage (LOC): 40%
*- File /root/Targets/aza-node/node_modules/path-loader/node_modules/superagent/lib/utils.js. Coverage (Term): 15% Coverage (LOC): 29%
*- File /root/Targets/aza-node/node_modules/methods/index.js. Coverage (Term): 59% Coverage (LOC): 27%
*- File /root/Targets/aza-node/node_modules/path-loader/node_modules/superagent/lib/node/unzip.js. Coverage (Term): 16% Coverage (LOC): 16%
*- File /root/Targets/aza-node/node_modules/extend/index.js. Coverage (Term): 13% Coverage (LOC): 16%
*- File /root/Targets/aza-node/node_modules/mime/mime.js. Coverage (Term): 55% Coverage (LOC): 75%
*- File /root/Targets/aza-node/node_modules/qs/lib/index.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/qs/lib/stringify.js. Coverage (Term): 8% Coverage (LOC): 18%
*- File /root/Targets/aza-node/node_modules/qs/lib/utils.js. Coverage (Term): 12% Coverage (LOC): 18%
*- File /root/Targets/aza-node/node_modules/qs/lib/formats.js. Coverage (Term): 61% Coverage (LOC): 87%
*- File /root/Targets/aza-node/node_modules/qs/lib/parse.js. Coverage (Term): 7% Coverage (LOC): 17%
*- File /root/Targets/aza-node/node_modules/path-loader/node_modules/superagent/lib/request-base.js. Coverage (Term): 16% Coverage (LOC): 24%
*- File /root/Targets/aza-node/node_modules/path-loader/node_modules/superagent/lib/is-object.js. Coverage (Term): 54% Coverage (LOC): 80%
*- File /root/Targets/aza-node/node_modules/path-loader/node_modules/superagent/lib/should-retry.js. Coverage (Term): 27% Coverage (LOC): 50%
*- File /root/Targets/aza-node/node_modules/path-loader/node_modules/superagent/lib/node/agent.js. Coverage (Term): 38% Coverage (LOC): 47%
*- File /root/Targets/aza-node/node_modules/cookiejar/cookiejar.js. Coverage (Term): 8% Coverage (LOC): 11%
*- File /root/Targets/aza-node/node_modules/path-loader/node_modules/superagent/lib/node/parsers/index.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/path-loader/node_modules/superagent/lib/node/parsers/urlencoded.js. Coverage (Term): 29% Coverage (LOC): 33%
*- File /root/Targets/aza-node/node_modules/path-loader/node_modules/superagent/lib/node/parsers/json.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/Targets/aza-node/node_modules/path-loader/node_modules/superagent/lib/node/parsers/text.js. Coverage (Term): 31% Coverage (LOC): 40%
*- File /root/Targets/aza-node/node_modules/path-loader/node_modules/superagent/lib/node/parsers/image.js. Coverage (Term): 27% Coverage (LOC): 36%
*- File /root/Targets/aza-node/node_modules/slash/index.js. Coverage (Term): 35% Coverage (LOC): 45%
*- File /root/Targets/aza-node/node_modules/uri-js/dist/es5/uri.all.js. Coverage (Term): 31% Coverage (LOC): 23%
*- File /root/Targets/aza-node/node_modules/traverse/index.js. Coverage (Term): 10% Coverage (LOC): 18%
*- File /root/Targets/aza-node/node_modules/z-schema/src/ZSchema.js. Coverage (Term): 32% Coverage (LOC): 39%
*- File /root/Targets/aza-node/node_modules/z-schema/src/Polyfills.js. Coverage (Term): 33% Coverage (LOC): 31%
*- File /root/Targets/aza-node/node_modules/lodash.get/index.js. Coverage (Term): 46% Coverage (LOC): 55%
*- File /root/Targets/aza-node/node_modules/z-schema/src/Report.js. Coverage (Term): 51% Coverage (LOC): 54%
*- File /root/Targets/aza-node/node_modules/z-schema/src/Errors.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/z-schema/src/Utils.js. Coverage (Term): 51% Coverage (LOC): 56%
*- File /root/Targets/aza-node/node_modules/z-schema/src/FormatValidators.js. Coverage (Term): 18% Coverage (LOC): 25%
*- File /root/Targets/aza-node/node_modules/validator/index.js. Coverage (Term): 100% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/validator/lib/toDate.js. Coverage (Term): 66% Coverage (LOC): 79%
*- File /root/Targets/aza-node/node_modules/validator/lib/util/assertString.js. Coverage (Term): 57% Coverage (LOC): 64%
*- File /root/Targets/aza-node/node_modules/validator/lib/toFloat.js. Coverage (Term): 76% Coverage (LOC): 85%
*- File /root/Targets/aza-node/node_modules/validator/lib/toInt.js. Coverage (Term): 72% Coverage (LOC): 85%
*- File /root/Targets/aza-node/node_modules/validator/lib/toBoolean.js. Coverage (Term): 61% Coverage (LOC): 69%
*- File /root/Targets/aza-node/node_modules/validator/lib/equals.js. Coverage (Term): 75% Coverage (LOC): 85%
*- File /root/Targets/aza-node/node_modules/validator/lib/contains.js. Coverage (Term): 72% Coverage (LOC): 87%
*- File /root/Targets/aza-node/node_modules/validator/lib/util/toString.js. Coverage (Term): 33% Coverage (LOC): 48%
*- File /root/Targets/aza-node/node_modules/validator/lib/matches.js. Coverage (Term): 62% Coverage (LOC): 69%
*- File /root/Targets/aza-node/node_modules/validator/lib/isEmail.js. Coverage (Term): 37% Coverage (LOC): 44%
*- File /root/Targets/aza-node/node_modules/validator/lib/util/merge.js. Coverage (Term): 40% Coverage (LOC): 47%
*- File /root/Targets/aza-node/node_modules/validator/lib/isByteLength.js. Coverage (Term): 39% Coverage (LOC): 52%
*- File /root/Targets/aza-node/node_modules/validator/lib/isFQDN.js. Coverage (Term): 34% Coverage (LOC): 35%
*- File /root/Targets/aza-node/node_modules/validator/lib/isURL.js. Coverage (Term): 21% Coverage (LOC): 29%
*- File /root/Targets/aza-node/node_modules/validator/lib/isIP.js. Coverage (Term): 21% Coverage (LOC): 21%
*- File /root/Targets/aza-node/node_modules/validator/lib/isMACAddress.js. Coverage (Term): 76% Coverage (LOC): 86%
*- File /root/Targets/aza-node/node_modules/validator/lib/isBoolean.js. Coverage (Term): 70% Coverage (LOC): 65%
*- File /root/Targets/aza-node/node_modules/validator/lib/isAlpha.js. Coverage (Term): 54% Coverage (LOC): 67%
*- File /root/Targets/aza-node/node_modules/validator/lib/alpha.js. Coverage (Term): 99% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/validator/lib/isAlphanumeric.js. Coverage (Term): 54% Coverage (LOC): 67%
*- File /root/Targets/aza-node/node_modules/validator/lib/isNumeric.js. Coverage (Term): 76% Coverage (LOC): 86%
*- File /root/Targets/aza-node/node_modules/validator/lib/isLowercase.js. Coverage (Term): 74% Coverage (LOC): 85%
*- File /root/Targets/aza-node/node_modules/validator/lib/isUppercase.js. Coverage (Term): 74% Coverage (LOC): 85%
*- File /root/Targets/aza-node/node_modules/validator/lib/isAscii.js. Coverage (Term): 76% Coverage (LOC): 86%
*- File /root/Targets/aza-node/node_modules/validator/lib/isFullWidth.js. Coverage (Term): 76% Coverage (LOC): 86%
*- File /root/Targets/aza-node/node_modules/validator/lib/isHalfWidth.js. Coverage (Term): 76% Coverage (LOC): 86%
*- File /root/Targets/aza-node/node_modules/validator/lib/isVariableWidth.js. Coverage (Term): 73% Coverage (LOC): 87%
*- File /root/Targets/aza-node/node_modules/validator/lib/isMultibyte.js. Coverage (Term): 76% Coverage (LOC): 86%
*- File /root/Targets/aza-node/node_modules/validator/lib/isSurrogatePair.js. Coverage (Term): 76% Coverage (LOC): 86%
*- File /root/Targets/aza-node/node_modules/validator/lib/isInt.js. Coverage (Term): 41% Coverage (LOC): 62%
*- File /root/Targets/aza-node/node_modules/validator/lib/isFloat.js. Coverage (Term): 45% Coverage (LOC): 67%
*- File /root/Targets/aza-node/node_modules/validator/lib/isDecimal.js. Coverage (Term): 73% Coverage (LOC): 86%
*- File /root/Targets/aza-node/node_modules/validator/lib/isHexadecimal.js. Coverage (Term): 76% Coverage (LOC): 86%
*- File /root/Targets/aza-node/node_modules/validator/lib/isDivisibleBy.js. Coverage (Term): 71% Coverage (LOC): 87%
*- File /root/Targets/aza-node/node_modules/validator/lib/isHexColor.js. Coverage (Term): 76% Coverage (LOC): 86%
*- File /root/Targets/aza-node/node_modules/validator/lib/isISRC.js. Coverage (Term): 76% Coverage (LOC): 86%
*- File /root/Targets/aza-node/node_modules/validator/lib/isMD5.js. Coverage (Term): 76% Coverage (LOC): 86%
*- File /root/Targets/aza-node/node_modules/validator/lib/isHash.js. Coverage (Term): 70% Coverage (LOC): 89%
*- File /root/Targets/aza-node/node_modules/validator/lib/isJSON.js. Coverage (Term): 49% Coverage (LOC): 67%
*- File /root/Targets/aza-node/node_modules/validator/lib/isEmpty.js. Coverage (Term): 75% Coverage (LOC): 85%
*- File /root/Targets/aza-node/node_modules/validator/lib/isLength.js. Coverage (Term): 38% Coverage (LOC): 50%
*- File /root/Targets/aza-node/node_modules/validator/lib/isUUID.js. Coverage (Term): 60% Coverage (LOC): 80%
*- File /root/Targets/aza-node/node_modules/validator/lib/isMongoId.js. Coverage (Term): 73% Coverage (LOC): 87%
*- File /root/Targets/aza-node/node_modules/validator/lib/isAfter.js. Coverage (Term): 53% Coverage (LOC): 72%
*- File /root/Targets/aza-node/node_modules/validator/lib/isBefore.js. Coverage (Term): 53% Coverage (LOC): 72%
*- File /root/Targets/aza-node/node_modules/validator/lib/isIn.js. Coverage (Term): 39% Coverage (LOC): 47%
*- File /root/Targets/aza-node/node_modules/validator/lib/isCreditCard.js. Coverage (Term): 34% Coverage (LOC): 34%
*- File /root/Targets/aza-node/node_modules/validator/lib/isISIN.js. Coverage (Term): 32% Coverage (LOC): 32%
*- File /root/Targets/aza-node/node_modules/validator/lib/isISBN.js. Coverage (Term): 27% Coverage (LOC): 31%
*- File /root/Targets/aza-node/node_modules/validator/lib/isISSN.js. Coverage (Term): 27% Coverage (LOC): 29%
*- File /root/Targets/aza-node/node_modules/validator/lib/isMobilePhone.js. Coverage (Term): 66% Coverage (LOC): 81%
*- File /root/Targets/aza-node/node_modules/validator/lib/isCurrency.js. Coverage (Term): 26% Coverage (LOC): 43%
*- File /root/Targets/aza-node/node_modules/validator/lib/isISO8601.js. Coverage (Term): 76% Coverage (LOC): 86%
*- File /root/Targets/aza-node/node_modules/validator/lib/isBase64.js. Coverage (Term): 49% Coverage (LOC): 63%
*- File /root/Targets/aza-node/node_modules/validator/lib/isDataURI.js. Coverage (Term): 76% Coverage (LOC): 86%
*- File /root/Targets/aza-node/node_modules/validator/lib/isLatLong.js. Coverage (Term): 59% Coverage (LOC): 72%
*- File /root/Targets/aza-node/node_modules/validator/lib/isPostalCode.js. Coverage (Term): 63% Coverage (LOC): 77%
*- File /root/Targets/aza-node/node_modules/validator/lib/ltrim.js. Coverage (Term): 62% Coverage (LOC): 79%
*- File /root/Targets/aza-node/node_modules/validator/lib/rtrim.js. Coverage (Term): 47% Coverage (LOC): 61%
*- File /root/Targets/aza-node/node_modules/validator/lib/trim.js. Coverage (Term): 76% Coverage (LOC): 93%
*- File /root/Targets/aza-node/node_modules/validator/lib/escape.js. Coverage (Term): 56% Coverage (LOC): 85%
*- File /root/Targets/aza-node/node_modules/validator/lib/unescape.js. Coverage (Term): 56% Coverage (LOC): 85%
*- File /root/Targets/aza-node/node_modules/validator/lib/stripLow.js. Coverage (Term): 69% Coverage (LOC): 81%
*- File /root/Targets/aza-node/node_modules/validator/lib/blacklist.js. Coverage (Term): 68% Coverage (LOC): 85%
*- File /root/Targets/aza-node/node_modules/validator/lib/whitelist.js. Coverage (Term): 68% Coverage (LOC): 85%
*- File /root/Targets/aza-node/node_modules/validator/lib/isWhitelisted.js. Coverage (Term): 56% Coverage (LOC): 61%
*- File /root/Targets/aza-node/node_modules/validator/lib/normalizeEmail.js. Coverage (Term): 37% Coverage (LOC): 67%
*- File /root/Targets/aza-node/node_modules/z-schema/src/JsonValidation.js. Coverage (Term): 47% Coverage (LOC): 49%
*- File /root/Targets/aza-node/node_modules/z-schema/src/SchemaCache.js. Coverage (Term): 73% Coverage (LOC): 73%
*- File /root/Targets/aza-node/node_modules/lodash.isequal/index.js. Coverage (Term): 30% Coverage (LOC): 32%
*- File /root/Targets/aza-node/node_modules/z-schema/src/SchemaCompilation.js. Coverage (Term): 85% Coverage (LOC): 87%
*- File /root/Targets/aza-node/node_modules/z-schema/src/SchemaValidation.js. Coverage (Term): 48% Coverage (LOC): 41%
*- File /root/Targets/aza-node/node_modules/swagger-tools/lib/specs.js. Coverage (Term): 9% Coverage (LOC): 13%
*- File /root/Targets/aza-node/node_modules/lodash-compat/lang/cloneDeep.js. Coverage (Term): 82% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/baseClone.js. Coverage (Term): 86% Coverage (LOC): 87%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/arrayCopy.js. Coverage (Term): 32% Coverage (LOC): 40%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/baseAssign.js. Coverage (Term): 58% Coverage (LOC): 83%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/baseCopy.js. Coverage (Term): 29% Coverage (LOC): 36%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/initCloneArray.js. Coverage (Term): 84% Coverage (LOC): 83%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/initCloneByTag.js. Coverage (Term): 55% Coverage (LOC): 40%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/bufferClone.js. Coverage (Term): 50% Coverage (LOC): 63%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/initCloneObject.js. Coverage (Term): 90% Coverage (LOC): 89%
*- File /root/Targets/aza-node/node_modules/lodash-compat/array/difference.js. Coverage (Term): 66% Coverage (LOC): 86%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/baseDifference.js. Coverage (Term): 24% Coverage (LOC): 20%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/cacheIndexOf.js. Coverage (Term): 37% Coverage (LOC): 71%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/createCache.js. Coverage (Term): 73% Coverage (LOC): 88%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/SetCache.js. Coverage (Term): 57% Coverage (LOC): 50%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/cachePush.js. Coverage (Term): 43% Coverage (LOC): 50%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/baseFlatten.js. Coverage (Term): 81% Coverage (LOC): 84%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/arrayPush.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/function/restParam.js. Coverage (Term): 59% Coverage (LOC): 59%
*- File /root/Targets/aza-node/node_modules/lodash-compat/collection/find.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/createFind.js. Coverage (Term): 52% Coverage (LOC): 50%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/baseFind.js. Coverage (Term): 31% Coverage (LOC): 36%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/baseFindIndex.js. Coverage (Term): 27% Coverage (LOC): 36%
*- File /root/Targets/aza-node/node_modules/lodash-compat/object/has.js. Coverage (Term): 47% Coverage (LOC): 33%
*- File /root/Targets/aza-node/node_modules/lodash-compat/collection/map.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/arrayMap.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/baseMap.js. Coverage (Term): 38% Coverage (LOC): 50%
*- File /root/Targets/aza-node/node_modules/lodash-compat/object/set.js. Coverage (Term): 26% Coverage (LOC): 22%
*- File /root/Targets/aza-node/node_modules/lodash-compat/array/union.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/baseUniq.js. Coverage (Term): 77% Coverage (LOC): 76%
*- File /root/Targets/aza-node/node_modules/async/lib/async.js. Coverage (Term): 12% Coverage (LOC): 18%
*- File /root/Targets/aza-node/node_modules/spark-md5/spark-md5.js. Coverage (Term): 53% Coverage (LOC): 48%
*- File /root/Targets/aza-node/node_modules/swagger-converter/index.js. Coverage (Term): 5% Coverage (LOC): 10%
*- File /root/Targets/aza-node/node_modules/lodash.clonedeep/index.js. Coverage (Term): 56% Coverage (LOC): 83%
*- File /root/Targets/aza-node/node_modules/lodash._baseclone/index.js. Coverage (Term): 43% Coverage (LOC): 27%
*- File /root/Targets/aza-node/node_modules/lodash.assign/index.js. Coverage (Term): 18% Coverage (LOC): 20%
*- File /root/Targets/aza-node/node_modules/lodash._basecreatecallback/index.js. Coverage (Term): 22% Coverage (LOC): 17%
*- File /root/Targets/aza-node/node_modules/lodash.bind/index.js. Coverage (Term): 49% Coverage (LOC): 83%
*- File /root/Targets/aza-node/node_modules/lodash._createwrapper/index.js. Coverage (Term): 18% Coverage (LOC): 13%
*- File /root/Targets/aza-node/node_modules/lodash._basebind/index.js. Coverage (Term): 36% Coverage (LOC): 35%
*- File /root/Targets/aza-node/node_modules/lodash._basecreate/index.js. Coverage (Term): 44% Coverage (LOC): 44%
*- File /root/Targets/aza-node/node_modules/lodash._isnative/index.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash.isobject/index.js. Coverage (Term): 61% Coverage (LOC): 83%
*- File /root/Targets/aza-node/node_modules/lodash._objecttypes/index.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash.noop/index.js. Coverage (Term): 79% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash._setbinddata/index.js. Coverage (Term): 80% Coverage (LOC): 82%
*- File /root/Targets/aza-node/node_modules/lodash._slice/index.js. Coverage (Term): 21% Coverage (LOC): 31%
*- File /root/Targets/aza-node/node_modules/lodash._basecreatewrapper/index.js. Coverage (Term): 20% Coverage (LOC): 16%
*- File /root/Targets/aza-node/node_modules/lodash.isfunction/index.js. Coverage (Term): 61% Coverage (LOC): 80%
*- File /root/Targets/aza-node/node_modules/lodash.identity/index.js. Coverage (Term): 68% Coverage (LOC): 80%
*- File /root/Targets/aza-node/node_modules/lodash.support/index.js. Coverage (Term): 87% Coverage (LOC): 90%
*- File /root/Targets/aza-node/node_modules/lodash.keys/index.js. Coverage (Term): 72% Coverage (LOC): 64%
*- File /root/Targets/aza-node/node_modules/lodash._shimkeys/index.js. Coverage (Term): 42% Coverage (LOC): 39%
*- File /root/Targets/aza-node/node_modules/lodash.foreach/index.js. Coverage (Term): 31% Coverage (LOC): 33%
*- File /root/Targets/aza-node/node_modules/lodash.forown/index.js. Coverage (Term): 27% Coverage (LOC): 28%
*- File /root/Targets/aza-node/node_modules/lodash._getarray/index.js. Coverage (Term): 68% Coverage (LOC): 83%
*- File /root/Targets/aza-node/node_modules/lodash._arraypool/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/lodash.isarray/index.js. Coverage (Term): 63% Coverage (LOC): 91%
*- File /root/Targets/aza-node/node_modules/lodash._releasearray/index.js. Coverage (Term): 60% Coverage (LOC): 56%
*- File /root/Targets/aza-node/node_modules/lodash._maxpoolsize/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/swagger-tools/lib/validators.js. Coverage (Term): 11% Coverage (LOC): 18%
*- File /root/Targets/aza-node/node_modules/lodash-compat/lang/isBoolean.js. Coverage (Term): 60% Coverage (LOC): 89%
*- File /root/Targets/aza-node/node_modules/lodash-compat/lang/isDate.js. Coverage (Term): 68% Coverage (LOC): 89%
*- File /root/Targets/aza-node/node_modules/lodash-compat/lang/isFinite.js. Coverage (Term): 60% Coverage (LOC): 83%
*- File /root/Targets/aza-node/node_modules/lodash-compat/lang/isNull.js. Coverage (Term): 63% Coverage (LOC): 80%
*- File /root/Targets/aza-node/node_modules/lodash-compat/lang/isNumber.js. Coverage (Term): 63% Coverage (LOC): 89%
*- File /root/Targets/aza-node/node_modules/lodash-compat/array/uniq.js. Coverage (Term): 36% Coverage (LOC): 31%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/isIterateeCall.js. Coverage (Term): 36% Coverage (LOC): 36%
*- File /root/Targets/aza-node/node_modules/lodash-compat/internal/sortedUniq.js. Coverage (Term): 21% Coverage (LOC): 31%
*- File /root/Targets/aza-node/node_modules/js-yaml/index.js. Coverage (Term): 96% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml.js. Coverage (Term): 92% Coverage (LOC): 97%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/loader.js. Coverage (Term): 7% Coverage (LOC): 7%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/common.js. Coverage (Term): 27% Coverage (LOC): 42%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/exception.js. Coverage (Term): 27% Coverage (LOC): 38%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/mark.js. Coverage (Term): 12% Coverage (LOC): 20%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/schema/default_safe.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/schema.js. Coverage (Term): 66% Coverage (LOC): 65%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/type.js. Coverage (Term): 80% Coverage (LOC): 92%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/schema/core.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/schema/json.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/schema/failsafe.js. Coverage (Term): 97% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/type/str.js. Coverage (Term): 67% Coverage (LOC): 89%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/type/seq.js. Coverage (Term): 67% Coverage (LOC): 89%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/type/map.js. Coverage (Term): 67% Coverage (LOC): 89%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/type/null.js. Coverage (Term): 33% Coverage (LOC): 66%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/type/bool.js. Coverage (Term): 26% Coverage (LOC): 67%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/type/int.js. Coverage (Term): 10% Coverage (LOC): 25%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/type/float.js. Coverage (Term): 17% Coverage (LOC): 24%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/type/timestamp.js. Coverage (Term): 23% Coverage (LOC): 28%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/type/merge.js. Coverage (Term): 68% Coverage (LOC): 90%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/type/binary.js. Coverage (Term): 10% Coverage (LOC): 21%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/type/omap.js. Coverage (Term): 27% Coverage (LOC): 36%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/type/pairs.js. Coverage (Term): 20% Coverage (LOC): 29%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/type/set.js. Coverage (Term): 42% Coverage (LOC): 52%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/schema/default_full.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/type/js/undefined.js. Coverage (Term): 55% Coverage (LOC): 79%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/type/js/regexp.js. Coverage (Term): 17% Coverage (LOC): 33%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/type/js/function.js. Coverage (Term): 19% Coverage (LOC): 43%
*- File /root/Targets/aza-node/node_modules/esprima/dist/esprima.js. Coverage (Term): 14% Coverage (LOC): 24%
*- File /root/Targets/aza-node/node_modules/js-yaml/lib/js-yaml/dumper.js. Coverage (Term): 10% Coverage (LOC): 20%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 561 paths with 29 errors **
