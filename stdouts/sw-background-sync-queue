/root/Targets/sw-background-sync-queue
└── sw-background-sync-queue@0.0.25 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/sw-background-sync-queue/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0643 took 5.2472s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (28:6) on program /*
 Copyright 2016 Google Inc. All Rights Reserved.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/

this.goog = this.goog || {};
(function (exports) {
'use strict';

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var idb=createCommonjsModule(function(a){'use strict';(function(){function b(r){return Array.prototype.slice.call(r)}function c(r){return new Promise(function(s,t){r.onsuccess=function(){s(r.result);},r.onerror=function(){t(r.error);};})}function d(r,s,t){var u,v=new Promise(function(w,x){u=r[s].apply(r,t),c(u).then(w,x);});return v.request=u,v}function e(r,s,t){var u=d(r,s,t);return u.then(function(v){return v?new k(v,u.request):void 0})}function f(r,s,t){t.forEach(function(u){Object.defineProperty(r.prototype,u,{get:function(){return this[s][u]},set:function(v){this[s][u]=v;}});});}function g(r,s,t,u){u.forEach(function(v){v in t.prototype&&(r.prototype[v]=function(){return d(this[s],v,arguments)});});}function h(r,s,t,u){u.forEach(function(v){v in t.prototype&&(r.prototype[v]=function(){return this[s][v].apply(this[s],arguments)});});}function i(r,s,t,u){u.forEach(function(v){v in t.prototype&&(r.prototype[v]=function(){return e(this[s],v,arguments)});});}function j(r){this._index=r;}function k(r,s){this._cursor=r,this._request=s;}function l(r){this._store=r;}function m(r){this._tx=r,this.complete=new Promise(function(s,t){r.oncomplete=function(){s();},r.onerror=function(){t(r.error);},r.onabort=function(){t(r.error);};});}function n(r,s,t){this._db=r,this.oldVersion=s,this.transaction=new m(t);}function o(r){this._db=r;}f(j,'_index',['name','keyPath','multiEntry','unique']),g(j,'_index',IDBIndex,['get','getKey','getAll','getAllKeys','count']),i(j,'_index',IDBIndex,['openCursor','openKeyCursor']),f(k,'_cursor',['direction','key','primaryKey','value']),g(k,'_cursor',IDBCursor,['update','delete']),['advance','continue','continuePrimaryKey'].forEach(function(r){r in IDBCursor.prototype&&(k.prototype[r]=function(){var s=this,t=arguments;return Promise.resolve().then(function(){return s._cursor[r].apply(s._cursor,t),c(s._request).then(function(u){return u?new k(u,s._request):void 0})})});}),l.prototype.createIndex=function(){return new j(this._store.createIndex.apply(this._store,arguments))},l.prototype.index=function(){return new j(this._store.index.apply(this._store,arguments))},f(l,'_store',['name','keyPath','indexNames','autoIncrement']),g(l,'_store',IDBObjectStore,['put','add','delete','clear','get','getAll','getKey','getAllKeys','count']),i(l,'_store',IDBObjectStore,['openCursor','openKeyCursor']),h(l,'_store',IDBObjectStore,['deleteIndex']),m.prototype.objectStore=function(){return new l(this._tx.objectStore.apply(this._tx,arguments))},f(m,'_tx',['objectStoreNames','mode']),h(m,'_tx',IDBTransaction,['abort']),n.prototype.createObjectStore=function(){return new l(this._db.createObjectStore.apply(this._db,arguments))},f(n,'_db',['name','version','objectStoreNames']),h(n,'_db',IDBDatabase,['deleteObjectStore','close']),o.prototype.transaction=function(){return new m(this._db.transaction.apply(this._db,arguments))},f(o,'_db',['name','version','objectStoreNames']),h(o,'_db',IDBDatabase,['close']),['openCursor','openKeyCursor'].forEach(function(r){[l,j].forEach(function(s){s.prototype[r.replace('open','iterate')]=function(){var t=b(arguments),u=t[t.length-1],v=this._store||this._index,w=v[r].apply(v,t.slice(0,-1));w.onsuccess=function(){u(w.result);};};});}),[j,l].forEach(function(r){r.prototype.getAll||(r.prototype.getAll=function(s,t){var u=this,v=[];return new Promise(function(w){u.iterateCursor(s,function(x){return x?(v.push(x.value),void 0!==t&&v.length==t?void w(v):void x.continue()):void w(v)});})});});var q={open:function(r,s,t){var u=d(indexedDB,'open',[r,s]),v=u.request;return v.onupgradeneeded=function(w){t&&t(new n(v.result,w.oldVersion,v.transaction));},u.then(function(w){return new o(w)})},delete:function(r){return d(indexedDB,'deleteDatabase',[r])}};a.exports=q,a.exports.default=a.exports;})();});

class IDBHelper{constructor(a,b,c){if(a==void 0||b==void 0||c==void 0)throw Error('name, version, storeName must be passed to the constructor.');this._name=a,this._version=b,this._storeName=c;}_getDb(){return this._dbPromise?this._dbPromise:(this._dbPromise=idb.open(this._name,this._version,(a)=>{a.createObjectStore(this._storeName);}).then((a)=>{return a}),this._dbPromise)}close(){return this._dbPromise?this._dbPromise.then((a)=>{a.close(),this._dbPromise=null;}):void 0}put(a,b){return this._getDb().then((c)=>{const d=c.transaction(this._storeName,'readwrite'),e=d.objectStore(this._storeName);return e.put(b,a),d.complete})}delete(a){return this._getDb().then((b)=>{const c=b.transaction(this._storeName,'readwrite'),d=c.objectStore(this._storeName);return d.delete(a),c.complete})}get(a){return this._getDb().then((b)=>{return b.transaction(this._storeName).objectStore(this._storeName).get(a)})}getAllValues(){return this._getDb().then((a)=>{return a.transaction(this._storeName).objectStore(this._storeName).getAll()})}getAllKeys(){return this._getDb().then((a)=>{return a.transaction(this._storeName).objectStore(this._storeName).getAllKeys()})}}

async function putResponse({hash:a,idbObject:b,response:c,idbQDb:d}){b.response={headers:JSON.stringify([...c.headers]),status:c.status,body:await c.blob()},d.put(a,b);}async function getResponse({id:a,dbName:b}){const c=new IDBHelper(b,1,'QueueStore'),d=await c.get(a);return d&&d.response?d.response:null}

const maxAge=432000000;
const defaultDBName='bgQueueSyncDB';
const broadcastMessageAddedType='BACKGROUND_REQUESTED_ADDED';
const broadcastMessageFailedType='BACKGROUND_REQUESTED_FAILED';
const defaultQueueName='DEFAULT_QUEUE';
const tagNamePrefix='SW_BACKGROUND_QUEUE_TAG_';
const broadcastMeta='SW_BACKGROUND_SYNC_QUEUE';
const allQueuesPlaceholder='QUEUES';
const replayAllQueuesTag='SW_BACKGROUND_QUEUE_TAG_REPLAY';

async function getQueueableRequest({request:a,config:b}){let c={config:b,metadata:{creationTimestamp:Date.now()},request:{url:a.url,headers:JSON.stringify([...a.headers]),mode:a.mode,method:a.method,redirect:a.redirect,credentials:a.credentials}};const d=await a.text();return 0<d.length&&(c.request.body=d),c}async function getFetchableRequest({idbRequestObject:a}){let b={mode:a.mode,method:a.method,redirect:a.redirect,headers:new Headers(JSON.parse(a.headers)),credentials:a.credentials};return a.body&&(b.body=a.body),new Request(a.url,b)}async function cleanupQueue(a){let b=new IDBHelper(a,1,'QueueStore'),c=await b.get(allQueuesPlaceholder);return c?void(await Promise.all(c.map(async(d)=>{const e=await b.get(d);let f=[],g=[];await Promise.all(e.map(async(h)=>{const i=await b.get(h);i&&i.metadata&&i.metadata.creationTimestamp+i.config.maxAge<=Date.now()?g.push(b.delete(h)):f.push(h);})),await Promise.all(g),b.put(d,f);}))):null}

class RequestManager{constructor({callbacks:a,queue:b}){this._globalCallbacks=a||{},this._queue=b,this.attachSyncHandler();}attachSyncHandler(){self.addEventListener('sync',(a)=>{(a.tag===tagNamePrefix+this._queue.queueName||a.tag===replayAllQueuesTag)&&a.waitUntil(this.replayRequests());});}replayRequests(){return this._queue.queue.reduce((a,b)=>{return a.then(async()=>{const d=await this._queue.getRequestFromQueue({hash:b});if(!d.response){const e=await getFetchableRequest({idbRequestObject:d.request});return fetch(e).then((f)=>{return f.ok?void(putResponse({hash:b,idbObject:d,response:f.clone(),idbQDb:this._queue.idbQDb}),this._globalCallbacks.onResponse&&this._globalCallbacks.onResponse(b,f)):Promise.resolve()}).catch((f)=>{this._globalCallbacks.onRetryFailure&&this._globalCallbacks.onRetryFailure(b,f);})}})},Promise.resolve())}}

var ErrorStackParser = {parse:()=>[]};

function atLeastOne(a){const b=Object.keys(a);b.some((c)=>a[c]!==void 0)||throwError('Please set at least one of the following parameters: '+b.map((c)=>`'${c}'`).join(', '));}function hasMethod(a,b){const c=Object.keys(a).pop(),d=typeof a[c][b];'function'!=d&&throwError(`The '${c}' parameter must be an object that exposes a
      '${b}' method.`);}function isInstance(a,b){const c=Object.keys(a).pop();a[c]instanceof b||throwError(`The '${c}' parameter must be an instance of
      '${b.name}'`);}function isOneOf(a,b){const c=Object.keys(a).pop();b.includes(a[c])||throwError(`The '${c}' parameter must be set to one of the
      following: ${b}`);}function isType(a,b){const c=Object.keys(a).pop(),d=typeof a[c];d!==b&&throwError(`The '${c}' parameter has the wrong type. (Expected:
      ${b}, actual: ${d})`);}function isArrayOfType(a,b){const c=Object.keys(a).pop(),d=`The '${c}' parameter should be an array containing
    one or more '${b}' elements.`;Array.isArray(a[c])||throwError(d);for(let e of a[c])typeof e!==b&&throwError(d);}function isArrayOfClass(a,b){const c=Object.keys(a).pop(),d=`The '${c}' parameter should be an array containing
    one or more '${b.name}' instances.`;Array.isArray(a[c])||throwError(d);for(let e of a[c])e instanceof b||throwError(d);}function isValue(a,b){const c=Object.keys(a).pop(),d=a[c];d!==b&&throwError(`The '${c}' parameter has the wrong value. (Expected: 
      ${b}, actual: ${d})`);}function throwError(a){a=a.replace(/\s+/g,' ');const b=new Error(a),c=ErrorStackParser.parse(b);throw 3<=c.length&&(b.message=`Invalid call to ${c[2].functionName}() — `+a,b.name=c[1].functionName.replace(/^Object\./,'')),b}var assert = {atLeastOne,hasMethod,isInstance,isOneOf,isType,isValue,isArrayOfType,isArrayOfClass};

function broadcastMessage({broadcastChannel:a,type:b,url:c}){a&&(assert.isInstance({broadcastChannel:a},BroadcastChannel),assert.isType({type:b},'string'),assert.isType({url:c},'string'),a.postMessage({type:b,meta:broadcastMeta,payload:{url:c}}));}

let _requestCounter=0; let _queueCounter=0;class RequestQueue{constructor({config:a,queueName:d=defaultQueueName+'_'+_queueCounter++,idbQDb:b,broadcastChannel:c}){this._isQueueNameAddedToAllQueue=!1,this._queueName=d,this._config=a,this._idbQDb=b,this._broadcastChannel=c,this._queue=[],this.initQueue();}async initQueue(){const a=await this._idbQDb.get(this._queueName);this._queue.concat(a);}async addQueueNameToAllQueues(){if(!this._isQueueNameAddedToAllQueue){let a=await this._idbQDb.get(allQueuesPlaceholder);a=a||[],a.includes(this._queueName)||a.push(this._queueName),this._idbQDb.put(allQueuesPlaceholder,a),this._isQueueNameAddedToAllQueue=!0;}}async saveQueue(){await this._idbQDb.put(this._queueName,this._queue);}async push({request:a}){assert.isInstance({request:a},Request);const b=`${a.url}!${Date.now()}!${_requestCounter++}`,c=await getQueueableRequest({request:a,config:this._config});try{this._queue.push(b),this.saveQueue(),this._idbQDb.put(b,c),await this.addQueueNameToAllQueues(),self.registration&&self.registration.sync.register(tagNamePrefix+this._queueName),broadcastMessage({broadcastChannel:this._broadcastChannel,type:broadcastMessageAddedType,id:b,url:a.url});}catch(d){broadcastMessage({broadcastChannel:this._broadcastChannel,type:broadcastMessageFailedType,id:b,url:a.url});}}async getRequestFromQueue({hash:a}){if(assert.isType({hash:a},'string'),this._queue.includes(a))return await this._idbQDb.get(a)}get queue(){return Object.assign([],this._queue)}get queueName(){return this._queueName}get idbQDb(){return this._idbQDb}}

class Queue{constructor({maxRetentionTime:d=maxAge,callbacks:a,queueName:b,broadcastChannel:c,dbName:e=defaultDBName}={}){b&&assert.isType({queueName:b},'string'),d&&assert.isType({maxRetentionTime:d},'number'),c&&assert.isInstance({broadcastChannel:c},BroadcastChannel),assert.isType({dbName:e},'string'),this._dbName=e,this._queue=new RequestQueue({config:{maxAge:d},queueName:b,idbQDb:new IDBHelper(this._dbName,1,'QueueStore'),broadcastChannel:c}),this._requestManager=new RequestManager({callbacks:a,queue:this._queue}),this.cleanupQueue();}cleanupQueue(){return cleanupQueue(this._dbName)}pushIntoQueue({request:a}){return assert.isInstance({request:a},Request),this._queue.push({request:a})}replayRequests(){return this._requestManager.replayRequests()}getResponse({id:a}){return getResponse({id:a,dbName:this._dbName})}}

class QueuePlugin extends Queue{fetchDidFail({request:a}){return this.pushIntoQueue({request:a})}}

exports.Queue = Queue;
exports.QueuePlugin = QueuePlugin;

}((this.goog.backgroundSync = this.goog.backgroundSync || {})));
//# sourceMappingURL=sw-background-sync-queue.prod.v0.0.25.js.map
 at SyntaxError: Unexpected token (28:6)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:61)
    at Parser.pp$1.parseExpressionStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:966:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:730:24)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseBlock (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:981:25)
    at Parser.pp$3.parseFunctionBody (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2105:24)
    at Parser.parseFunctionBody (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:14:32)
    at Parser.pp$1.parseFunction (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1065:10)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
