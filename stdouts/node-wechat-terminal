/root/Targets/node-wechat-terminal
└─┬ node-wechat-terminal@0.2.2 
  ├─┬ chalk@1.1.3 
  │ ├── ansi-styles@2.2.1 
  │ ├── escape-string-regexp@1.0.5 
  │ ├─┬ has-ansi@2.0.0 
  │ │ └── ansi-regex@2.1.1 
  │ ├── strip-ansi@3.0.1 
  │ └── supports-color@2.0.0 
  ├─┬ columnify@1.5.4 
  │ └─┬ wcwidth@1.0.1 
  │   └─┬ defaults@1.0.3 
  │     └── clone@1.0.2 
  ├── lodash@4.17.4 
  ├─┬ node-notifier@4.6.1 
  │ ├─┬ cli-usage@0.1.4 
  │ │ ├── marked@0.3.6 
  │ │ └─┬ marked-terminal@1.7.0 
  │ │   ├─┬ cardinal@1.0.0 
  │ │   │ ├── ansicolors@0.2.1 
  │ │   │ └─┬ redeyed@1.0.1 
  │ │   │   └── esprima@3.0.0 
  │ │   ├── cli-table@0.3.1 
  │ │   ├── lodash.assign@4.2.0 
  │ │   └─┬ node-emoji@1.8.1 
  │ │     └── lodash.toarray@4.4.0 
  │ ├── growly@1.3.0 
  │ ├─┬ lodash.clonedeep@3.0.2 
  │ │ ├─┬ lodash._baseclone@3.3.0 
  │ │ │ ├── lodash._arraycopy@3.0.0 
  │ │ │ ├── lodash._arrayeach@3.0.0 
  │ │ │ ├─┬ lodash._baseassign@3.2.0 
  │ │ │ │ └── lodash._basecopy@3.0.1 
  │ │ │ ├── lodash._basefor@3.0.3 
  │ │ │ ├── lodash.isarray@3.0.4 
  │ │ │ └─┬ lodash.keys@3.1.2 
  │ │ │   ├── lodash._getnative@3.9.1 
  │ │ │   └── lodash.isarguments@3.1.0 
  │ │ └── lodash._bindcallback@3.0.1 
  │ ├── minimist@1.2.0 
  │ ├── semver@5.4.1 
  │ ├── shellwords@0.1.1 
  │ └─┬ which@1.3.0 
  │   └── isexe@2.0.0 
  ├── qrcode-terminal@0.10.0  (git+https://github.com/goorockey/qrcode-terminal.git#f025c1d49cef3f1fce1cd931753e8ce24529c67f)
  ├─┬ request@2.71.0 
  │ ├── aws-sign2@0.6.0 
  │ ├── aws4@1.6.0 
  │ ├─┬ bl@1.1.2 
  │ │ └─┬ readable-stream@2.0.6 
  │ │   ├── core-util-is@1.0.2 
  │ │   ├── inherits@2.0.3 
  │ │   ├── isarray@1.0.0 
  │ │   ├── process-nextick-args@1.0.7 
  │ │   ├── string_decoder@0.10.31 
  │ │   └── util-deprecate@1.0.2 
  │ ├── caseless@0.11.0 
  │ ├─┬ combined-stream@1.0.5 
  │ │ └── delayed-stream@1.0.0 
  │ ├── extend@3.0.1 
  │ ├── forever-agent@0.6.1 
  │ ├─┬ form-data@1.0.1 
  │ │ └── async@2.5.0 
  │ ├─┬ har-validator@2.0.6 
  │ │ ├── commander@2.11.0 
  │ │ ├─┬ is-my-json-valid@2.16.1 
  │ │ │ ├── generate-function@2.0.0 
  │ │ │ ├─┬ generate-object-property@1.2.0 
  │ │ │ │ └── is-property@1.0.2 
  │ │ │ ├── jsonpointer@4.0.1 
  │ │ │ └── xtend@4.0.1 
  │ │ └─┬ pinkie-promise@2.0.1 
  │ │   └── pinkie@2.0.4 
  │ ├─┬ hawk@3.1.3 
  │ │ ├── boom@2.10.1 
  │ │ ├── cryptiles@2.0.5 
  │ │ ├── hoek@2.16.3 
  │ │ └── sntp@1.0.9 
  │ ├─┬ http-signature@1.1.1 
  │ │ ├── assert-plus@0.2.0 
  │ │ ├─┬ jsprim@1.4.1 
  │ │ │ ├── assert-plus@1.0.0 
  │ │ │ ├── extsprintf@1.3.0 
  │ │ │ ├── json-schema@0.2.3 
  │ │ │ └─┬ verror@1.10.0 
  │ │ │   └── assert-plus@1.0.0 
  │ │ └─┬ sshpk@1.13.1 
  │ │   ├── asn1@0.2.3 
  │ │   ├── assert-plus@1.0.0 
  │ │   ├── bcrypt-pbkdf@1.0.1 
  │ │   ├─┬ dashdash@1.14.1 
  │ │   │ └── assert-plus@1.0.0 
  │ │   ├── ecc-jsbn@0.1.1 
  │ │   ├─┬ getpass@0.1.7 
  │ │   │ └── assert-plus@1.0.0 
  │ │   ├── jsbn@0.1.1 
  │ │   └── tweetnacl@0.14.5 
  │ ├── is-typedarray@1.0.0 
  │ ├── isstream@0.1.2 
  │ ├── json-stringify-safe@5.0.1 
  │ ├─┬ mime-types@2.1.17 
  │ │ └── mime-db@1.30.0 
  │ ├── node-uuid@1.4.8 
  │ ├── oauth-sign@0.8.2 
  │ ├── qs@6.1.2 
  │ ├── stringstream@0.0.5 
  │ ├── tough-cookie@2.2.2 
  │ └── tunnel-agent@0.4.3 
  ├─┬ request-promise@3.0.0 
  │ └── bluebird@3.5.0 
  ├─┬ winston@2.3.1 
  │ ├── async@1.0.0 
  │ ├── colors@1.0.3 
  │ ├── cycle@1.0.3 
  │ ├── eyes@0.1.8 
  │ └── stack-trace@0.0.10 
  └─┬ xml2js@0.4.19 
    ├── sax@1.2.4 
    └── xmlbuilder@9.0.4 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/node-wechat-terminal/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0897 took 5.5818s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node
'use strict';

var readline = require('readline');
var chalk = require('chalk');
var WechatClient = require('./lib/wechat_client');
var logger = require('./lib/logger');
var commands = require('./lib/commands');
var notifier = require('node-notifier');


var wechat = new WechatClient();
var rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout,
  terminal: true,
  completer: completer,
});

wechat.on(WechatClient.EVENTS.ERROR, () => { rl.close(); });
wechat.on(WechatClient.EVENTS.CHAT_CHANGE, () => { updatePrompt(); });
wechat.on(WechatClient.EVENTS.LOGIN, () => { startConsole(); });
wechat.on(WechatClient.EVENTS.LOGOUT, () => {
  logger.info('Logout.');
  rl.close();
});
wechat.on(WechatClient.EVENTS.MESSAGE, (data) => {
  rl.prompt(true);
  notifier.notify({
    title: data.from,
    message: data.message,
  });
});

wechat.login();

function startConsole() {
  logger.info('Login successfully.');

  updatePrompt();
  rl.prompt(true);

  rl.on('line', onUserInput)
  .on('SIGINT', onPreExit)
  .on('close', onExit);
}

function onUserInput(msg) {
  rl.pause();
  commands.parse(msg, wechat);
  rl.prompt(true);
}

function onPreExit() {
  rl.question('Are you sure you want to exit?(y/N)', (answer) => {
    if (answer.match(/^y(es)?$/i)) {
      rl.close();
    } else {
      rl.prompt(true);
    }
  });
}

function onExit() {
  wechat.logout().then(() => { process.exit(0); });
}

function updatePrompt() {
  var prompt = 'wechat';
  if (wechat.isLogined()) {
    prompt = chalk.bold.blue(wechat.getUser());

    var chat = wechat.getChat();
    if (chat) {
      prompt += chalk.yellow(' => ') + chalk.bold.blue(chat);
    }
  }
  rl.setPrompt(prompt + chalk.yellow('> '));
}

function completer(line) {
  var hits = commands.ALL_CMD.filter((c) => { return c.indexOf(line) === 0; });
  return [hits.length ? hits : commands.ALL_CMD, line];
}
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
