
> pg@0.12.3 install /root/Targets/active_record/node_modules/pg
> node-gyp rebuild || (exit 0)


> sqlite3@3.1.11 install /root/Targets/active_record/node_modules/sqlite3
> node-pre-gyp install --fallback-to-build

[sqlite3] Success: "/root/Targets/active_record/node_modules/sqlite3/lib/binding/node-v51-linux-x64/node_sqlite3.node" is installed via remote
/root/Targets/active_record
└─┬ active_record@0.1.6 
  ├─┬ any-db@0.3.5 
  │ └─┬ any-db-pool@2.2.0 
  │   ├── generic-pool@2.0.4 
  │   └── once@1.1.1 
  ├─┬ mysql@2.0.0-alpha7 
  │ ├── bignumber.js@1.0.1 
  │ └── require-all@0.0.3 
  ├─┬ pg@0.12.3 
  │ └── generic-pool@2.0.2 
  ├── pg-format@1.0.4 
  └─┬ sqlite3@3.1.11 
    ├── nan@2.7.0 
    └─┬ node-pre-gyp@0.6.37 
      ├─┬ mkdirp@0.5.1 
      │ └── minimist@0.0.8 
      ├─┬ nopt@4.0.1 
      │ ├── abbrev@1.1.0 
      │ └─┬ osenv@0.1.4 
      │   ├── os-homedir@1.0.2 
      │   └── os-tmpdir@1.0.2 
      ├─┬ npmlog@4.1.2 
      │ ├─┬ are-we-there-yet@1.1.4 
      │ │ └── delegates@1.0.0 
      │ ├── console-control-strings@1.1.0 
      │ ├─┬ gauge@2.7.4 
      │ │ ├── aproba@1.1.2 
      │ │ ├── has-unicode@2.0.1 
      │ │ ├── object-assign@4.1.1 
      │ │ ├── signal-exit@3.0.2 
      │ │ ├─┬ string-width@1.0.2 
      │ │ │ ├── code-point-at@1.1.0 
      │ │ │ └─┬ is-fullwidth-code-point@1.0.0 
      │ │ │   └── number-is-nan@1.0.1 
      │ │ ├─┬ strip-ansi@3.0.1 
      │ │ │ └── ansi-regex@2.1.1 
      │ │ └── wide-align@1.1.2 
      │ └── set-blocking@2.0.0 
      ├─┬ rc@1.2.1 
      │ ├── deep-extend@0.4.2 
      │ ├── ini@1.3.4 
      │ ├── minimist@1.2.0 
      │ └── strip-json-comments@2.0.1 
      ├─┬ request@2.81.0 
      │ ├── aws-sign2@0.6.0 
      │ ├── aws4@1.6.0 
      │ ├── caseless@0.12.0 
      │ ├─┬ combined-stream@1.0.5 
      │ │ └── delayed-stream@1.0.0 
      │ ├── extend@3.0.1 
      │ ├── forever-agent@0.6.1 
      │ ├─┬ form-data@2.1.4 
      │ │ └── asynckit@0.4.0 
      │ ├─┬ har-validator@4.2.1 
      │ │ ├─┬ ajv@4.11.8 
      │ │ │ ├── co@4.6.0 
      │ │ │ └─┬ json-stable-stringify@1.0.1 
      │ │ │   └── jsonify@0.0.0 
      │ │ └── har-schema@1.0.5 
      │ ├─┬ hawk@3.1.3 
      │ │ ├── boom@2.10.1 
      │ │ ├── cryptiles@2.0.5 
      │ │ ├── hoek@2.16.3 
      │ │ └── sntp@1.0.9 
      │ ├─┬ http-signature@1.1.1 
      │ │ ├── assert-plus@0.2.0 
      │ │ ├─┬ jsprim@1.4.1 
      │ │ │ ├── assert-plus@1.0.0 
      │ │ │ ├── extsprintf@1.3.0 
      │ │ │ ├── json-schema@0.2.3 
      │ │ │ └─┬ verror@1.10.0 
      │ │ │   └── assert-plus@1.0.0 
      │ │ └─┬ sshpk@1.13.1 
      │ │   ├── asn1@0.2.3 
      │ │   ├── assert-plus@1.0.0 
      │ │   ├── bcrypt-pbkdf@1.0.1 
      │ │   ├─┬ dashdash@1.14.1 
      │ │   │ └── assert-plus@1.0.0 
      │ │   ├── ecc-jsbn@0.1.1 
      │ │   ├─┬ getpass@0.1.7 
      │ │   │ └── assert-plus@1.0.0 
      │ │   ├── jsbn@0.1.1 
      │ │   └── tweetnacl@0.14.5 
      │ ├── is-typedarray@1.0.0 
      │ ├── isstream@0.1.2 
      │ ├── json-stringify-safe@5.0.1 
      │ ├─┬ mime-types@2.1.17 
      │ │ └── mime-db@1.30.0 
      │ ├── oauth-sign@0.8.2 
      │ ├── performance-now@0.2.0 
      │ ├── qs@6.4.0 
      │ ├── safe-buffer@5.1.1 
      │ ├── stringstream@0.0.5 
      │ ├─┬ tough-cookie@2.3.2 
      │ │ └── punycode@1.4.1 
      │ ├── tunnel-agent@0.6.0 
      │ └── uuid@3.1.0 
      ├─┬ rimraf@2.6.2 
      │ └─┬ glob@7.1.2 
      │   ├── fs.realpath@1.0.0 
      │   ├── inflight@1.0.6 
      │   ├─┬ minimatch@3.0.4 
      │   │ └─┬ brace-expansion@1.1.8 
      │   │   ├── balanced-match@1.0.0 
      │   │   └── concat-map@0.0.1 
      │   └── path-is-absolute@1.0.1 
      ├── semver@5.4.1 
      ├─┬ tape@4.8.0 
      │ ├── deep-equal@1.0.1 
      │ ├── defined@1.0.0 
      │ ├─┬ for-each@0.3.2 
      │ │ └── is-function@1.0.1 
      │ ├── function-bind@1.1.1 
      │ ├── has@1.0.1 
      │ ├── inherits@2.0.3 
      │ ├── minimist@1.2.0 
      │ ├── object-inspect@1.3.0 
      │ ├─┬ resolve@1.4.0 
      │ │ └── path-parse@1.0.5 
      │ ├── resumer@0.0.0 
      │ ├─┬ string.prototype.trim@1.1.2 
      │ │ ├─┬ define-properties@1.1.2 
      │ │ │ ├── foreach@2.0.5 
      │ │ │ └── object-keys@1.0.11 
      │ │ └─┬ es-abstract@1.8.2 
      │ │   ├─┬ es-to-primitive@1.1.1 
      │ │   │ ├── is-date-object@1.0.1 
      │ │   │ └── is-symbol@1.0.1 
      │ │   ├── is-callable@1.1.3 
      │ │   └── is-regex@1.0.4 
      │ └── through@2.3.8 
      ├─┬ tar@2.2.1 
      │ ├── block-stream@0.0.9 
      │ └─┬ fstream@1.0.11 
      │   └── graceful-fs@4.1.11 
      └─┬ tar-pack@3.4.0 
        ├─┬ debug@2.6.8 
        │ └── ms@2.0.0 
        ├── fstream-ignore@1.0.5 
        ├─┬ once@1.4.0 
        │ └── wrappy@1.0.2 
        ├─┬ readable-stream@2.3.3 
        │ ├── core-util-is@1.0.2 
        │ ├── isarray@1.0.0 
        │ ├── process-nextick-args@1.0.7 
        │ ├── string_decoder@1.0.3 
        │ └── util-deprecate@1.0.2 
        └── uid-number@0.0.6 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/active_record/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 32% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0632 took 4.0476s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Octal literal in strict mode (174:16) on program var ActiveRecord        = require('./active_record')
	, ActiveSupport     = require('./active_support')
	, Action            = require('./relations/actions')
	, Connection        = require('./connection')
	, EventEmitter      = require('events').EventEmitter
	, QueryCache        = require('./query_cache')
	, Callback          = require('./callbacks')
	, Finder            = require('./relations/finders_methods')
	, Calculation       = require('./relations/calculations')
	, Association       = require('./associations/associations')
	, Validator         = require('./validations/validations')
	, AttributesMethods = require('./attributes_methods')
	, Transaction       = require('./transaction');

var humanize      = ActiveSupport.Inflector.humanize
	, pluralize   = ActiveSupport.Inflector.pluralize
	, underscore  = ActiveSupport.Inflector.underscore
	, foreign_key = ActiveSupport.Inflector.foreign_key;

var inherits = require('util').inherits;

module.exports = Base;
/*
*   Example:
*   var ActiveRecord = require('active_record');
*
*   module.exports = Model
*
*   ActiveRecord.Base.extend_to(Model)
*   function Model (){
		Model.initialize(this);
*       this.attributes(arguments[0]);
*   }
*
*/
function Base (){
	AttributesMethods.call(this);
	Validator.call(this);
	Callback.call(this);
}

/* Instance Methods */
Base.prototype =
ActiveSupport.extend({},
	Callback.prototype,
	Validator.prototype,
	AttributesMethods.prototype,
	{
		__proto__: EventEmitter.prototype,
	}
)

/* Class Methods */
Base.connection = new Connection;
ActiveSupport.extend(Base,
	{
		/* @property {String} */
		table_name_prefix: ActiveRecord.table_name_prefix,
		/* @property {String} */
		table_name_suffix: ActiveRecord.table_name_suffix,
		/* @property {String} */
		table_name: Base.name,
		/* @property {String} */
		primary_key: ActiveRecord.primary_key_prefix_type,
		/* @property {Boolean} */
		foreign_key: false,
		/* @return table_name_prefix + table_name */
		to_s: function to_s (){
			var prefix = this.table_name_prefix
			, suffix = this.table_name_suffix
			, name = prefix.trim().length > 0 ? humanize(this.table_name) : this.table_name;
			return underscore(prefix + name + humanize(suffix));
		},
		/* @return #<function.name> */
		toString: function toString (){
			return "#<"+ this.name +">";
		},
		/* Model settings */
		settings: {
			/* @property {Array} */
			fields: [],
			/* @property {Boolean} */
			record_timestamps: ActiveRecord.record_timestamps,
			/* @property {Array} */
			belongs_to: [],
			/* @property {Array} */
			has_one: [],
			/* @property {Array} */
			has_many: [],
			/* @property {Array} */
			has_many_and_belongs_to: []
		},
		/* Get settings Model */
		get: function get (setting){
			if (this.settings.hasOwnProperty(setting)){
				return this.settings[setting];
			}
		},
		/* Set settings */
		set: function set (key, value){
			this.settings[key] = value;
		},
		/* TODO */
		cache: ActiveRecord.cache_query ? new QueryCache : false,
	}, Action.call(Base), Finder.call(Base), Calculation.call(Base), Association.call(Base),
	Transaction.call(Base), Callback.call(Base)
)
/* Set primary_key field */
Base.get('fields').push(Base.primary_key);


/*
*   Extends Methods to Model
*   @param {Function} destination
*   @return {Function}
*/
Base.extend = function extend(destination, source){
	if (!source) return destination;
	// inherits(destination, source);

	/* ClassMethods */
	ActiveSupport.extend(destination, source, EventEmitter.prototype);
	/* Prepare your self */
	Object.defineProperty(destination, 'constructor', {
		value: source,
		enumerable: false,
		writable: true,
		configurable: true
	});
	switch (ActiveRecord.primary_key_prefix_type){
		case 'table_name': destination.table_name = pluralize(destination.name.toLowerCase())+'id'; break;
		case 'table_name_with_underscore': destination.table_name = foreign_key(underscore(destination.name.toLowerCase())); break;
		default: destination.table_name = 'id';	break;
	}
	if (ActiveRecord.pluralize_table_names) destination.table_name = pluralize(underscore(destination.name.toLowerCase()));
	else destination.table_name = destination.name.toLowerCase();
	/* Set max of listeners */
	if (Base.connection.conn)
		Base.connection.conn.setMaxListeners(ActiveRecord.max_number_of_listeners);

	/* InstanceMethods */
	destination.prototype = Object.create(source.prototype, {
		constructor: {
			value: destination,
			enumerable: false,
			writable: true,
			configurable: true
		}
	});
}


/*
*   @param {String|Object} config
*
*   Example:
*   Base.configure_connection({
*       driver: 'mysql',
*       ...
*   })
*   // For more examples see the `connection.js` documentation
*/
Base.configure_connection = function configure_connection(config){

	/* Configure */
	Base.connection.config(config);
	/* Timezone */
	if (!Base.connection.get('timezone'))
		Base.connection.set('timezone', ActiveRecord.default_timezone);

	/* Events */
	Base.connection.
	on('connect', function(data){
		console.info("\033[1;37mINFO \033[1;36mDatabase connected.\033[1;32m "+ new Date().toGMTString() +"\033[0m");
	})
	.on('disconnect', function(data){
		console.info("\033[1;37mINFO \033[1;33mDatabase disconnected.\033[1;32m "+ new Date().toGMTString() +"\033[0m")
	});

	return this;
}

/*
*   After configurated the connection, establish the connection...
*   Example:
*   Base.configure_connection(<configs>).establish_connection()
*/
Base.establish_connection = function establish_connection(callback){
	Base.connection.connect(callback);
	return this;
}

/*
*   Why comment this? It's obvious!
*/
Base.close_connection = function close_connection(){
	Base.connection.disconnect();
	return this;
}
 at SyntaxError: Octal literal in strict mode (174:16)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readEscapedChar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:3023:16)
    at Parser.pp$7.readString (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2935:23)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2724:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp$3.parseSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1738:37)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/active_record/node_modules/active_record/index.js. Coverage (Term): 17% Coverage (LOC): 24%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
