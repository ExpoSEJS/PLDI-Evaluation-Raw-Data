/root/Targets/routes-builder
└─┬ routes-builder@0.0.47 
  ├── async@1.5.2 
  ├─┬ debug@2.6.9 
  │ └── ms@2.0.0 
  ├─┬ express@4.16.0 
  │ ├─┬ accepts@1.3.4 
  │ │ ├─┬ mime-types@2.1.17 
  │ │ │ └── mime-db@1.30.0 
  │ │ └── negotiator@0.6.1 
  │ ├── array-flatten@1.1.1 
  │ ├─┬ body-parser@1.18.2 
  │ │ ├── bytes@3.0.0 
  │ │ ├─┬ http-errors@1.6.2 
  │ │ │ ├── inherits@2.0.3 
  │ │ │ └── setprototypeof@1.0.3 
  │ │ ├── iconv-lite@0.4.19 
  │ │ └── raw-body@2.3.2 
  │ ├── content-disposition@0.5.2 
  │ ├── content-type@1.0.4 
  │ ├── cookie@0.3.1 
  │ ├── cookie-signature@1.0.6 
  │ ├── depd@1.1.1 
  │ ├── encodeurl@1.0.1 
  │ ├── escape-html@1.0.3 
  │ ├── etag@1.8.1 
  │ ├─┬ finalhandler@1.1.0 
  │ │ └── unpipe@1.0.0 
  │ ├── fresh@0.5.2 
  │ ├── merge-descriptors@1.0.1 
  │ ├── methods@1.1.2 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── parseurl@1.3.2 
  │ ├── path-to-regexp@0.1.7 
  │ ├─┬ proxy-addr@2.0.2 
  │ │ ├── forwarded@0.1.2 
  │ │ └── ipaddr.js@1.5.2 
  │ ├── qs@6.5.1 
  │ ├── range-parser@1.2.0 
  │ ├── safe-buffer@5.1.1 
  │ ├─┬ send@0.16.0 
  │ │ ├── destroy@1.0.4 
  │ │ └── mime@1.4.1 
  │ ├── serve-static@1.13.0 
  │ ├── setprototypeof@1.1.0 
  │ ├── statuses@1.3.1 
  │ ├─┬ type-is@1.6.15 
  │ │ └── media-typer@0.3.0 
  │ ├── utils-merge@1.0.1 
  │ └── vary@1.1.2 
  ├── git-clone@0.1.0 
  ├── minimist@1.2.0 
  ├── mu2@0.5.21 
  ├─┬ readdir@0.0.13 
  │ └── q@1.0.1 
  └── sprintf-js@1.1.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/routes-builder/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 26% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","reduce","parseInt","charCodeAt","abs","captureStackTrace","cwd","max","getFileName","getLineNumber","getColumnNumber","isEval","getFunctionName","create","Number","toString","toUpperCase","join","call","RegExp"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0378 took 32.0921s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (11:4) on program // Module: RoutesTable.js
//
// Custom type for managing the routes building pipeline, function resolution and
// providing the routes table viewer functionality. It's basically the higher level
// type that co-ordinates the other types.
//
// (1) SCOPE VARIABLES, (2) MODULE EXPORTS (3) UTILITY METHODS

//--------------- BEGIN MODULE SCOPE VARIABLES ---------------
var async = require('async');
var assert = require('assert');
var mu = require('mu2');
var path = require('path');
//---------------- END MODULE SCOPE VARIABLES ----------------

//------------------- BEGIN MODULE EXPORT --------------------
module.exports = RoutesTable;

function RoutesTable(app, options) {
  this.app = app;
  this.loader = options.loader;
  this.builder = options.builder;
  this.routes_dir = options.routes_dir;
  this.middleware_dir = options.middleware_dir;
  this.handlers_dir = options.handlers_dir;
  this.routes = [];
  this.map = 'undefined';
  this.url = 'undefined';
  this.prefix = 'undefined';
  this.hostname = 'undefined';
  this.port = 'undefined';

  assert.equal(typeof this.app, 'function', 'app must be a function');
  assert.equal(typeof this.loader, 'function', 'options.loader must be a function');
  assert.equal(typeof this.builder, 'function', 'options.builder must be a function');
}

RoutesTable.prototype.runRoutesPipeline = function(options, cb) {
  var self = this;
  async.series([
    function(callback) {
      self.loader(options, function(err, loaded_map) {
        if (err) callback(err, null);
        self.map = loaded_map;
        callback(null, self.map);
      });
    },
    function(callback) {
      if (process.env.NODE_ENV === 'development') {
        self.addRoutesTableViewer('/', '/routes-table');
      }
      callback(null, self.map);
    },
    function(callback) {
      self.builder(self.app, self.map, function(err, result) {
        if (err) callback(err, null);
        callback(null, result);
      });
    }
  ], function(err, results) {
    if (err) {
      return cb(err, null);
    }
    else {
      return cb(null, results);
    }
  });
};

RoutesTable.prototype.resolveHandlerFunction = function (handler_name) {
  var self = this;
  var ret, error;

  if (typeof handler_name === 'string') {
    ret = self._getDescendantProp(self.map.handlers, handler_name);
    if (ret) {
      ret.reference = handler_name;
    } else {
      error = true;
    }
  }

  if (error) ret = false;
  return ret;
};

RoutesTable.prototype.resolveMiddlewareFunctions = function (middlewares) {
  var self = this;
  var ret = [];
  var error = false;

  if (middlewares instanceof Array) {
    middlewares.forEach(function(middleware) {
      var item;
      if (typeof middleware === 'string') {
        item = self._getDescendantProp(self.map.middleware, middleware);
        if (item) {
          item.reference = middleware;
          ret.push(item);
        } else {
          error = true;
        }
      }
      else {
        ret.push(middleware);
      }
    });
  }
  else {
    ret = middlewares;
  }

  if (error) ret = false;
  return ret;
};

RoutesTable.prototype.addRoutesTableViewer = function (url, prefix, hostname, port) {
  var self = this;
  if (typeof self.map.handlers['#routes-table#'] !== 'undefined') {
    console.log("Warning: '#routes-table#.js' is a reserved handler file name");
  }
  if (typeof self.map.routes['#routes-table#'] !== 'undefined') {
    console.log("Warning: '#routes-table#.js' is a reserved routes file name");
  }

  self.url = url;
  self.prefix = prefix;
  self.hostname = hostname;
  self.port = port;

  self.map.handlers['#routes-table#'] = {
    _generateRouteTable : function(req, res) {
      var map = self.map;
      self._generateRouteTable(req, res);
    }
  };

  self.map.routes['#routes-table#'] = {
    prefix: self.prefix,
    routes: [
      [ 'get', self.url, [], '#routes-table#._generateRouteTable' ]
    ]
  };
};
//-------------------- END MODULE EXPORT ---------------------

//------------------- BEGIN UTILITY METHODS ------------------
// Find a object property
RoutesTable.prototype._getDescendantProp = function (obj, desc) {
  var arr = desc.split('.');
  while (arr.length && (obj = obj[arr.shift()]));
  if (obj === undefined) {
    console.log('Warning: %s does not exist', desc);
  }
  return obj;
};

// Route handler for the routes table viewer
RoutesTable.prototype._generateRouteTable = function (req, res) {
  var self = this;
  var route_groups = [];

  Object.keys(self.map.routes).forEach(function(group) {
    route_groups.push({
      group: group,
      definition: self.map.routes[group]
    });
  });

  if ((req.headers['Content-Type'] === 'application/json') ||
    (req.headers['Accept'] === 'application/json') ||
    (req.headers['X-Requested-With'] === 'XMLHttpRequest')) {
    return res.json({ routes_map: route_groups });
  }
  else {
    var routes = [];
    route_groups.forEach(function(route_group) {
      var definition = route_group.definition;
      var group_name = route_group.group;
      var prefix = definition.prefix;
      var default_middleware = definition.default_middleware || '';

      route_group.definition.routes.forEach(function(route) {
        var middleware = route[2].join(',');
        if (default_middleware) {
          middleware = default_middleware.concat(route[2] ).join(',');
        }
        var route_path;
        (prefix) ? route_path = prefix + route[1] : route_path = route[1];
        if (prefix === '/') {
          route_path = route[1];
        }
        routes.push({
          group: group_name,
          method: route[0],
          path: route_path,
          middleware: middleware,
          handler: route[3]
        });
      });
    });

    mu.root = path.join(__dirname, 'html');
    var stream = mu.compileAndRender('routes-table.html', {
      routes : routes,
      host   : self.hostname || 'localhost',
      port   : self.port || 3000
    });
    stream.pipe(res);
  }
};
//-------------------- END UTILITY METHODS ------------------- at SyntaxError: Unexpected token (11:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/routes-builder/node_modules/routes-builder/index.js. Coverage (Term): 9% Coverage (LOC): 4%
*- File /root/Targets/routes-builder/node_modules/debug/src/index.js. Coverage (Term): 81% Coverage (LOC): 83%
*- File /root/Targets/routes-builder/node_modules/debug/src/node.js. Coverage (Term): 34% Coverage (LOC): 43%
*- File /root/Targets/routes-builder/node_modules/debug/src/debug.js. Coverage (Term): 44% Coverage (LOC): 48%
*- File /root/Targets/routes-builder/node_modules/ms/index.js. Coverage (Term): 12% Coverage (LOC): 15%
*- File /root/Targets/routes-builder/node_modules/async/lib/async.js. Coverage (Term): 12% Coverage (LOC): 18%
*- File /root/Targets/routes-builder/node_modules/express/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/routes-builder/node_modules/express/lib/express.js. Coverage (Term): 64% Coverage (LOC): 68%
*- File /root/Targets/routes-builder/node_modules/body-parser/index.js. Coverage (Term): 63% Coverage (LOC): 70%
*- File /root/Targets/routes-builder/node_modules/depd/index.js. Coverage (Term): 32% Coverage (LOC): 34%
*- File /root/Targets/routes-builder/node_modules/depd/lib/compat/index.js. Coverage (Term): 87% Coverage (LOC): 97%
*- File eval. Coverage (Term): 38% Coverage (LOC): 50%
*- File /root/Targets/routes-builder/node_modules/merge-descriptors/index.js. Coverage (Term): 26% Coverage (LOC): 26%
*- File /root/Targets/routes-builder/node_modules/express/lib/application.js. Coverage (Term): 17% Coverage (LOC): 25%
*- File /root/Targets/routes-builder/node_modules/finalhandler/index.js. Coverage (Term): 15% Coverage (LOC): 21%
*- File /root/Targets/routes-builder/node_modules/encodeurl/index.js. Coverage (Term): 63% Coverage (LOC): 89%
*- File /root/Targets/routes-builder/node_modules/escape-html/index.js. Coverage (Term): 16% Coverage (LOC): 18%
*- File /root/Targets/routes-builder/node_modules/on-finished/index.js. Coverage (Term): 13% Coverage (LOC): 17%
*- File /root/Targets/routes-builder/node_modules/ee-first/index.js. Coverage (Term): 9% Coverage (LOC): 13%
*- File /root/Targets/routes-builder/node_modules/parseurl/index.js. Coverage (Term): 15% Coverage (LOC): 18%
*- File /root/Targets/routes-builder/node_modules/statuses/index.js. Coverage (Term): 56% Coverage (LOC): 67%
*- File /root/Targets/routes-builder/node_modules/unpipe/index.js. Coverage (Term): 16% Coverage (LOC): 20%
*- File /root/Targets/routes-builder/node_modules/express/lib/router/index.js. Coverage (Term): 8% Coverage (LOC): 12%
*- File /root/Targets/routes-builder/node_modules/express/lib/router/route.js. Coverage (Term): 18% Coverage (LOC): 23%
*- File /root/Targets/routes-builder/node_modules/array-flatten/array-flatten.js. Coverage (Term): 17% Coverage (LOC): 26%
*- File /root/Targets/routes-builder/node_modules/express/lib/router/layer.js. Coverage (Term): 14% Coverage (LOC): 18%
*- File /root/Targets/routes-builder/node_modules/path-to-regexp/index.js. Coverage (Term): 5% Coverage (LOC): 9%
*- File /root/Targets/routes-builder/node_modules/methods/index.js. Coverage (Term): 59% Coverage (LOC): 27%
*- File /root/Targets/routes-builder/node_modules/utils-merge/index.js. Coverage (Term): 40% Coverage (LOC): 40%
*- File /root/Targets/routes-builder/node_modules/setprototypeof/index.js. Coverage (Term): 32% Coverage (LOC): 38%
*- File /root/Targets/routes-builder/node_modules/express/lib/middleware/init.js. Coverage (Term): 27% Coverage (LOC): 38%
*- File /root/Targets/routes-builder/node_modules/express/lib/middleware/query.js. Coverage (Term): 32% Coverage (LOC): 35%
*- File /root/Targets/routes-builder/node_modules/qs/lib/index.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/routes-builder/node_modules/qs/lib/stringify.js. Coverage (Term): 8% Coverage (LOC): 18%
*- File /root/Targets/routes-builder/node_modules/qs/lib/utils.js. Coverage (Term): 12% Coverage (LOC): 18%
*- File /root/Targets/routes-builder/node_modules/qs/lib/formats.js. Coverage (Term): 61% Coverage (LOC): 87%
*- File /root/Targets/routes-builder/node_modules/qs/lib/parse.js. Coverage (Term): 7% Coverage (LOC): 17%
*- File /root/Targets/routes-builder/node_modules/express/lib/view.js. Coverage (Term): 21% Coverage (LOC): 28%
*- File /root/Targets/routes-builder/node_modules/express/lib/utils.js. Coverage (Term): 26% Coverage (LOC): 31%
*- File /root/Targets/routes-builder/node_modules/safe-buffer/index.js. Coverage (Term): 36% Coverage (LOC): 44%
*- File /root/Targets/routes-builder/node_modules/content-disposition/index.js. Coverage (Term): 12% Coverage (LOC): 20%
*- File /root/Targets/routes-builder/node_modules/content-type/index.js. Coverage (Term): 12% Coverage (LOC): 18%
*- File /root/Targets/routes-builder/node_modules/send/index.js. Coverage (Term): 12% Coverage (LOC): 19%
*- File /root/Targets/routes-builder/node_modules/http-errors/index.js. Coverage (Term): 46% Coverage (LOC): 40%
*- File /root/Targets/routes-builder/node_modules/http-errors/node_modules/setprototypeof/index.js. Coverage (Term): 32% Coverage (LOC): 38%
*- File /root/Targets/routes-builder/node_modules/inherits/inherits.js. Coverage (Term): 74% Coverage (LOC): 88%
*- File /root/Targets/routes-builder/node_modules/destroy/index.js. Coverage (Term): 32% Coverage (LOC): 33%
*- File /root/Targets/routes-builder/node_modules/etag/index.js. Coverage (Term): 16% Coverage (LOC): 32%
*- File /root/Targets/routes-builder/node_modules/fresh/index.js. Coverage (Term): 10% Coverage (LOC): 13%
*- File /root/Targets/routes-builder/node_modules/mime/mime.js. Coverage (Term): 55% Coverage (LOC): 75%
*- File /root/Targets/routes-builder/node_modules/range-parser/index.js. Coverage (Term): 8% Coverage (LOC): 15%
*- File /root/Targets/routes-builder/node_modules/proxy-addr/index.js. Coverage (Term): 12% Coverage (LOC): 22%
*- File /root/Targets/routes-builder/node_modules/forwarded/index.js. Coverage (Term): 14% Coverage (LOC): 18%
*- File /root/Targets/routes-builder/node_modules/ipaddr.js/lib/ipaddr.js. Coverage (Term): 25% Coverage (LOC): 47%
*- File /root/Targets/routes-builder/node_modules/express/lib/request.js. Coverage (Term): 26% Coverage (LOC): 40%
*- File /root/Targets/routes-builder/node_modules/accepts/index.js. Coverage (Term): 16% Coverage (LOC): 23%
*- File /root/Targets/routes-builder/node_modules/negotiator/index.js. Coverage (Term): 33% Coverage (LOC): 47%
*- File /root/Targets/routes-builder/node_modules/mime-types/index.js. Coverage (Term): 48% Coverage (LOC): 51%
*- File /root/Targets/routes-builder/node_modules/mime-db/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/routes-builder/node_modules/type-is/index.js. Coverage (Term): 13% Coverage (LOC): 20%
*- File /root/Targets/routes-builder/node_modules/media-typer/index.js. Coverage (Term): 11% Coverage (LOC): 16%
*- File /root/Targets/routes-builder/node_modules/express/lib/response.js. Coverage (Term): 11% Coverage (LOC): 15%
*- File /root/Targets/routes-builder/node_modules/cookie-signature/index.js. Coverage (Term): 19% Coverage (LOC): 40%
*- File /root/Targets/routes-builder/node_modules/cookie/index.js. Coverage (Term): 10% Coverage (LOC): 13%
*- File /root/Targets/routes-builder/node_modules/vary/index.js. Coverage (Term): 10% Coverage (LOC): 15%
*- File /root/Targets/routes-builder/node_modules/body-parser/lib/types/json.js. Coverage (Term): 14% Coverage (LOC): 16%
*- File /root/Targets/routes-builder/node_modules/bytes/index.js. Coverage (Term): 19% Coverage (LOC): 26%
*- File /root/Targets/routes-builder/node_modules/body-parser/lib/read.js. Coverage (Term): 12% Coverage (LOC): 12%
*- File /root/Targets/routes-builder/node_modules/raw-body/index.js. Coverage (Term): 8% Coverage (LOC): 9%
*- File /root/Targets/routes-builder/node_modules/iconv-lite/lib/index.js. Coverage (Term): 27% Coverage (LOC): 36%
*- File /root/Targets/routes-builder/node_modules/iconv-lite/lib/bom-handling.js. Coverage (Term): 27% Coverage (LOC): 42%
*- File /root/Targets/routes-builder/node_modules/iconv-lite/lib/streams.js. Coverage (Term): 25% Coverage (LOC): 35%
*- File /root/Targets/routes-builder/node_modules/iconv-lite/lib/extend-node.js. Coverage (Term): 6% Coverage (LOC): 8%
*- File /root/Targets/routes-builder/node_modules/serve-static/index.js. Coverage (Term): 13% Coverage (LOC): 17%
*- File /root/Targets/routes-builder/node_modules/body-parser/lib/types/urlencoded.js. Coverage (Term): 13% Coverage (LOC): 14%
*- File /root/Targets/routes-builder/node_modules/sprintf-js/src/sprintf.js. Coverage (Term): 8% Coverage (LOC): 20%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
