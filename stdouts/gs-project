
> node-sass@3.13.1 install /root/Targets/gs-project/node_modules/node-sass
> node scripts/install.js

Cached binary found at /root/.npm/node-sass/3.13.1/linux-x64-51_binding.node

> node-sass@3.13.1 postinstall /root/Targets/gs-project/node_modules/node-sass
> node scripts/build.js

Binary found at /root/Targets/gs-project/node_modules/node-sass/vendor/linux-x64-51/binding.node
Testing binary
Binary is fine
/root/Targets/gs-project
├── UNMET PEER DEPENDENCY gorillascript-community@^1.0.2
└─┬ gs-project@4.0.1 
  ├── blueimp-tmpl@3.4.0 
  ├─┬ codepage@1.4.0 
  │ ├── commander@2.11.0 
  │ ├─┬ concat-stream@1.6.0 
  │ │ └── typedarray@0.0.6 
  │ ├── exit-on-epipe@1.0.1 
  │ └── voc@1.0.0 
  ├── colors@1.1.2 
  ├─┬ cors-anywhere@0.4.0 
  │ ├─┬ http-proxy@1.11.1 
  │ │ ├── eventemitter3@1.2.0 
  │ │ └── requires-port@0.0.1 
  │ └── proxy-from-env@0.0.1 
  ├─┬ express@4.15.4 
  │ ├─┬ accepts@1.3.4 
  │ │ ├─┬ mime-types@2.1.17 
  │ │ │ └── mime-db@1.30.0 
  │ │ └── negotiator@0.6.1 
  │ ├── array-flatten@1.1.1 
  │ ├── content-disposition@0.5.2 
  │ ├── content-type@1.0.4 
  │ ├── cookie@0.3.1 
  │ ├── cookie-signature@1.0.6 
  │ ├─┬ debug@2.6.8 
  │ │ └── ms@2.0.0 
  │ ├── depd@1.1.1 
  │ ├── encodeurl@1.0.1 
  │ ├── escape-html@1.0.3 
  │ ├── etag@1.8.1 
  │ ├─┬ finalhandler@1.0.5 
  │ │ └── unpipe@1.0.0 
  │ ├── fresh@0.5.0 
  │ ├── merge-descriptors@1.0.1 
  │ ├── methods@1.1.2 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── parseurl@1.3.2 
  │ ├── path-to-regexp@0.1.7 
  │ ├─┬ proxy-addr@1.1.5 
  │ │ ├── forwarded@0.1.2 
  │ │ └── ipaddr.js@1.4.0 
  │ ├── qs@6.5.0 
  │ ├── range-parser@1.2.0 
  │ ├─┬ send@0.15.4 
  │ │ ├── destroy@1.0.4 
  │ │ ├── http-errors@1.6.2 
  │ │ └── mime@1.3.4 
  │ ├── serve-static@1.12.4 
  │ ├── setprototypeof@1.0.3 
  │ ├── statuses@1.3.1 
  │ ├─┬ type-is@1.6.15 
  │ │ └── media-typer@0.3.0 
  │ ├── utils-merge@1.0.0 
  │ └── vary@1.1.1 
  ├─┬ glob@6.0.4 
  │ ├─┬ inflight@1.0.6 
  │ │ └── wrappy@1.0.2 
  │ ├── inherits@2.0.3 
  │ ├─┬ minimatch@3.0.4 
  │ │ └─┬ brace-expansion@1.1.8 
  │ │   ├── balanced-match@1.0.0 
  │ │   └── concat-map@0.0.1 
  │ ├── once@1.4.0 
  │ └── path-is-absolute@1.0.1 
  ├─┬ htmlparser2@3.9.2 
  │ ├── domelementtype@1.3.0 
  │ ├── domhandler@2.4.1 
  │ ├─┬ domutils@1.6.2 
  │ │ └─┬ dom-serializer@0.1.0 
  │ │   └── domelementtype@1.1.3 
  │ ├── entities@1.1.1 
  │ └─┬ readable-stream@2.3.3 
  │   ├── core-util-is@1.0.2 
  │   ├── isarray@1.0.0 
  │   ├── process-nextick-args@1.0.7 
  │   ├── safe-buffer@5.1.1 
  │   ├── string_decoder@1.0.3 
  │   └── util-deprecate@1.0.2 
  ├── image-size@0.4.0 
  ├── minimist@1.2.0 
  ├─┬ node-sass@3.13.1 
  │ ├── async-foreach@0.1.3 
  │ ├─┬ chalk@1.1.3 
  │ │ ├── ansi-styles@2.2.1 
  │ │ ├── escape-string-regexp@1.0.5 
  │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ └── ansi-regex@2.1.1 
  │ │ ├── strip-ansi@3.0.1 
  │ │ └── supports-color@2.0.0 
  │ ├─┬ cross-spawn@3.0.1 
  │ │ ├─┬ lru-cache@4.1.1 
  │ │ │ ├── pseudomap@1.0.2 
  │ │ │ └── yallist@2.1.2 
  │ │ └─┬ which@1.3.0 
  │ │   └── isexe@2.0.0 
  │ ├─┬ gaze@1.1.2 
  │ │ └─┬ globule@1.2.0 
  │ │   └── glob@7.1.2 
  │ ├── get-stdin@4.0.1 
  │ ├─┬ glob@7.1.2 
  │ │ └── fs.realpath@1.0.0 
  │ ├── in-publish@2.0.0 
  │ ├── lodash.assign@4.2.0 
  │ ├── lodash.clonedeep@4.5.0 
  │ ├─┬ meow@3.7.0 
  │ │ ├─┬ camelcase-keys@2.1.0 
  │ │ │ └── camelcase@2.1.1 
  │ │ ├── decamelize@1.2.0 
  │ │ ├─┬ loud-rejection@1.6.0 
  │ │ │ ├─┬ currently-unhandled@0.4.1 
  │ │ │ │ └── array-find-index@1.0.2 
  │ │ │ └── signal-exit@3.0.2 
  │ │ ├── map-obj@1.0.1 
  │ │ ├─┬ normalize-package-data@2.4.0 
  │ │ │ ├── hosted-git-info@2.5.0 
  │ │ │ ├─┬ is-builtin-module@1.0.0 
  │ │ │ │ └── builtin-modules@1.1.1 
  │ │ │ ├── semver@5.4.1 
  │ │ │ └─┬ validate-npm-package-license@3.0.1 
  │ │ │   ├─┬ spdx-correct@1.0.2 
  │ │ │   │ └── spdx-license-ids@1.2.2 
  │ │ │   └── spdx-expression-parse@1.0.4 
  │ │ ├── object-assign@4.1.1 
  │ │ ├─┬ read-pkg-up@1.0.1 
  │ │ │ ├─┬ find-up@1.1.2 
  │ │ │ │ ├── path-exists@2.1.0 
  │ │ │ │ └─┬ pinkie-promise@2.0.1 
  │ │ │ │   └── pinkie@2.0.4 
  │ │ │ └─┬ read-pkg@1.1.0 
  │ │ │   ├─┬ load-json-file@1.1.0 
  │ │ │   │ ├─┬ parse-json@2.2.0 
  │ │ │   │ │ └─┬ error-ex@1.3.1 
  │ │ │   │ │   └── is-arrayish@0.2.1 
  │ │ │   │ ├── pify@2.3.0 
  │ │ │   │ └─┬ strip-bom@2.0.0 
  │ │ │   │   └── is-utf8@0.2.1 
  │ │ │   └── path-type@1.1.0 
  │ │ ├─┬ redent@1.0.0 
  │ │ │ ├─┬ indent-string@2.1.0 
  │ │ │ │ └─┬ repeating@2.0.1 
  │ │ │ │   └── is-finite@1.0.2 
  │ │ │ └── strip-indent@1.0.1 
  │ │ └── trim-newlines@1.0.0 
  │ ├─┬ mkdirp@0.5.1 
  │ │ └── minimist@0.0.8 
  │ ├── nan@2.7.0 
  │ ├─┬ node-gyp@3.6.2 
  │ │ ├── fstream@1.0.11 
  │ │ ├── glob@7.1.2 
  │ │ ├── graceful-fs@4.1.11 
  │ │ ├─┬ nopt@3.0.6 
  │ │ │ └── abbrev@1.1.0 
  │ │ ├─┬ osenv@0.1.4 
  │ │ │ ├── os-homedir@1.0.2 
  │ │ │ └── os-tmpdir@1.0.2 
  │ │ ├─┬ rimraf@2.6.2 
  │ │ │ └── glob@7.1.2 
  │ │ ├── semver@5.3.0 
  │ │ └─┬ tar@2.2.1 
  │ │   └── block-stream@0.0.9 
  │ ├─┬ npmlog@4.1.2 
  │ │ ├─┬ are-we-there-yet@1.1.4 
  │ │ │ └── delegates@1.0.0 
  │ │ ├── console-control-strings@1.1.0 
  │ │ ├─┬ gauge@2.7.4 
  │ │ │ ├── aproba@1.2.0 
  │ │ │ ├── has-unicode@2.0.1 
  │ │ │ ├─┬ string-width@1.0.2 
  │ │ │ │ ├── code-point-at@1.1.0 
  │ │ │ │ └─┬ is-fullwidth-code-point@1.0.0 
  │ │ │ │   └── number-is-nan@1.0.1 
  │ │ │ └── wide-align@1.1.2 
  │ │ └── set-blocking@2.0.0 
  │ ├─┬ request@2.82.0 
  │ │ ├── aws-sign2@0.7.0 
  │ │ ├── aws4@1.6.0 
  │ │ ├── caseless@0.12.0 
  │ │ ├─┬ combined-stream@1.0.5 
  │ │ │ └── delayed-stream@1.0.0 
  │ │ ├── extend@3.0.1 
  │ │ ├── forever-agent@0.6.1 
  │ │ ├─┬ form-data@2.3.1 
  │ │ │ └── asynckit@0.4.0 
  │ │ ├─┬ har-validator@5.0.3 
  │ │ │ ├─┬ ajv@5.2.2 
  │ │ │ │ ├── co@4.6.0 
  │ │ │ │ ├── fast-deep-equal@1.0.0 
  │ │ │ │ ├── json-schema-traverse@0.3.1 
  │ │ │ │ └─┬ json-stable-stringify@1.0.1 
  │ │ │ │   └── jsonify@0.0.0 
  │ │ │ └── har-schema@2.0.0 
  │ │ ├─┬ hawk@6.0.2 
  │ │ │ ├── boom@4.3.1 
  │ │ │ ├─┬ cryptiles@3.1.2 
  │ │ │ │ └── boom@5.2.0 
  │ │ │ ├── hoek@4.2.0 
  │ │ │ └── sntp@2.0.2 
  │ │ ├─┬ http-signature@1.2.0 
  │ │ │ ├── assert-plus@1.0.0 
  │ │ │ ├─┬ jsprim@1.4.1 
  │ │ │ │ ├── extsprintf@1.3.0 
  │ │ │ │ ├── json-schema@0.2.3 
  │ │ │ │ └── verror@1.10.0 
  │ │ │ └─┬ sshpk@1.13.1 
  │ │ │   ├── asn1@0.2.3 
  │ │ │   ├── bcrypt-pbkdf@1.0.1 
  │ │ │   ├── dashdash@1.14.1 
  │ │ │   ├── ecc-jsbn@0.1.1 
  │ │ │   ├── getpass@0.1.7 
  │ │ │   ├── jsbn@0.1.1 
  │ │ │   └── tweetnacl@0.14.5 
  │ │ ├── is-typedarray@1.0.0 
  │ │ ├── isstream@0.1.2 
  │ │ ├── json-stringify-safe@5.0.1 
  │ │ ├── oauth-sign@0.8.2 
  │ │ ├── performance-now@2.1.0 
  │ │ ├── qs@6.5.1 
  │ │ ├── stringstream@0.0.5 
  │ │ ├─┬ tough-cookie@2.3.2 
  │ │ │ └── punycode@1.4.1 
  │ │ ├── tunnel-agent@0.6.0 
  │ │ └── uuid@3.1.0 
  │ └─┬ sass-graph@2.2.4 
  │   ├── glob@7.1.2 
  │   ├── lodash@4.17.4 
  │   ├─┬ scss-tokenizer@0.2.3 
  │   │ ├── js-base64@2.3.2 
  │   │ └─┬ source-map@0.4.4 
  │   │   └── amdefine@1.0.1 
  │   └─┬ yargs@7.1.0 
  │     ├── camelcase@3.0.0 
  │     ├─┬ cliui@3.2.0 
  │     │ └── wrap-ansi@2.1.0 
  │     ├── get-caller-file@1.0.2 
  │     ├─┬ os-locale@1.4.0 
  │     │ └─┬ lcid@1.0.0 
  │     │   └── invert-kv@1.0.0 
  │     ├── require-directory@2.1.1 
  │     ├── require-main-filename@1.0.1 
  │     ├── which-module@1.0.0 
  │     ├── y18n@3.2.1 
  │     └─┬ yargs-parser@5.0.0 
  │       └── camelcase@3.0.0 
  ├─┬ optimist@0.5.2 
  │ └── wordwrap@0.0.3 
  ├─┬ regenerator@0.8.46 
  │ ├─┬ commoner@0.10.8 
  │ │ ├─┬ detective@4.5.0 
  │ │ │ ├── acorn@4.0.13 
  │ │ │ └── defined@1.0.0 
  │ │ ├── glob@5.0.15 
  │ │ ├── iconv-lite@0.4.19 
  │ │ ├── q@1.5.0 
  │ │ └─┬ recast@0.11.23 
  │ │   ├── ast-types@0.9.6 
  │ │   ├── esprima@3.1.3 
  │ │   └── source-map@0.5.7 
  │ ├─┬ defs@1.1.1 
  │ │ ├─┬ alter@0.2.0 
  │ │ │ └── stable@0.1.6 
  │ │ ├── ast-traverse@0.1.1 
  │ │ ├── breakable@1.0.0 
  │ │ ├── simple-fmt@0.1.0 
  │ │ ├── simple-is@0.2.0 
  │ │ ├── stringmap@0.2.2 
  │ │ ├── stringset@0.2.1 
  │ │ ├── tryor@0.1.2 
  │ │ └─┬ yargs@3.27.0 
  │ │   ├── camelcase@1.2.1 
  │ │   ├─┬ cliui@2.1.0 
  │ │   │ ├─┬ center-align@0.1.3 
  │ │   │ │ ├─┬ align-text@0.1.4 
  │ │   │ │ │ ├─┬ kind-of@3.2.2 
  │ │   │ │ │ │ └── is-buffer@1.1.5 
  │ │   │ │ │ ├── longest@1.0.1 
  │ │   │ │ │ └── repeat-string@1.6.1 
  │ │   │ │ └── lazy-cache@1.0.4 
  │ │   │ ├── right-align@0.1.3 
  │ │   │ └── wordwrap@0.0.2 
  │ │   └── window-size@0.1.4 
  │ ├── esprima-fb@15001.1001.0-dev-harmony-fb 
  │ ├── private@0.1.7 
  │ ├─┬ recast@0.10.33 
  │ │ ├── ast-types@0.8.12 
  │ │ └── source-map@0.5.7 
  │ ├── regenerator-runtime@0.9.6 
  │ └── through@2.3.8 
  ├── sprintf@0.1.5 
  └── wrench@1.5.9 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/gs-project/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0444 took 2.1849s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Invalid number (115:50) on program var	mPath = require('path'),
	mFs = require('fs'),
	mWrench = require('wrench'),
	mGlob = require('glob'),
	colors = require('colors'),
	sprintf = require('sprintf').sprintf,
	CompilerConfig = require('./compiler/Config.js'),
	CompilerException = require('./compiler/Exception.js'),
	CompilerState = require('./compiler/State.js'),
	SrcHandler = require('./compiler/SrcHandler.js'),
	JsHandler = require('./compiler/JsHandler.js'),
	MacroHandler = require('./compiler/MacroHandler.js'),
	HtmlHandler = require('./compiler/HtmlHandler.js'),
	CssHandler = require('./compiler/CssHandler.js'),
	ImageHandler = require('./compiler/ImageHandler.js'),
RawHandler = require('./compiler/RawHandler.js');

rootRequire = function(path){
	if(path.indexOf('/') != -1){
		path = mPath.resolve(__dirname + '/../../../' + path);
	}
	return require(path);
}

var Server = rootRequire('server/Server.js');

var arrayUnique = function(a) {
    return a.reduce(function(p, c) {
        if (p.indexOf(c) < 0) p.push(c);
        return p;
    }, []);
};

module.exports = (function(){
	function Compiler(userConfig){
		this.config = new CompilerConfig(userConfig);
	}
	
	Compiler.prototype = {
		config: null,
		compiling: false,
		oldFiles: [],
		allFiles: [],
		webServer: null,
		handlers: [
			new MacroHandler,
			new SrcHandler,
			new JsHandler,
			new CssHandler,
			new ImageHandler,
			new RawHandler,
			new HtmlHandler
		],
		iterateHandlers: function(method,args){
			var ret = [];
			for(var i = 0; i < this.handlers.length; i++){
				var _ret = this.handlers[i][method].apply(this.handlers[i],args);
				if(_ret){
					ret.push(
						_ret
					);
				}
			}
			return function(name){
				for(var i = 0; i < ret.length; i++){
					if(typeof ret[i][name] != 'undefined'){
						return ret[i][name];
					}
				}
			};
		},
		processFile: function(state,file){
			this.allFiles.push(file);
			var ret = this.iterateHandlers('processFile',[state,file]);
			if(!state.hasLoadedFile(file)){
				state.files.push(file.toLowerCase());
			}
			return ret;
		},
		onChange: null,
		watchFiles: function(state){
			if(!this.onChange){
				this.onChange = function(current,previous){
					if(current.mtime > previous.mtime){
						this.compile();
					}
				}.bind(this);
			}
			if(this.oldFiles){
				this.oldFiles.forEach(function(file){
					mFs.unwatchFile(file,this.onChange);
				}.bind(this));
			}
			this.oldFiles = state.files.concat();
			this.oldFiles.push.apply(this.oldFiles,this.allFiles);
			this.oldFiles = arrayUnique(this.oldFiles);
			this.oldFiles.forEach(function(file){
				mFs.watchFile(
					file,
					{
						interval: 500
					},
					this.onChange
				);
			}.bind(this));
		},
		clean: function(){
			try {
				mWrench.rmdirSyncRecursive(this.config.output,true);
			}
			catch(e){
				throw new CompilerException('Unable to remove directory contents (%s).',this.config.output,e);
			}
			try {
				mWrench.mkdirSyncRecursive(this.config.output,0777);
			}
			catch(e){
				throw new CompilerException('Unable to create directory (%s).',this.config.output,e);
			}
		},
		
		handleGsCompileError: function(state,watch,error){
			this.compiling = false;
			var output = '';
			if(watch)output += "\007";
			output += error.message;
			if(watch)console.log(output);
			else throw output;
			return;
			/**
			 * The code below was to decode a compile error and show where the error happened.
			 * It sometimes doesn't work and I haven't had a chance to figure out why.
			 */
			try {
				var scriptLines = state.contents.split('\n');
				var offendingFile = {
					name: null,
					contents: null,
					line: null
				};
				for(var scriptLineNumber = error.line; scriptLineNumber >= 1; scriptLineNumber--){
					var scriptLineMatches = scriptLines[scriptLineNumber-1].match(/^\/\/startfile (\d+):(\d+) ([^$]+)$/);
					if(scriptLineMatches){
						offendingFile.name = scriptLineMatches[3];
						offendingFile.contents = mFs.readFileSync(offendingFile.name).toString().split('\n');
						error.line -= scriptLineNumber + parseInt(scriptLineMatches[1],10) - 1;
						error.column -= parseInt(scriptLineMatches[2],10);
						break;
					}
				}
				
				var offendingLine = offendingFile.contents[error.line-1];
				offendingLine = [
					offendingLine.substr(0,error.column-1).yellow,
					offendingLine.substr(error.column-1,1).red.bold,
					offendingLine.substr(error.column).yellow
				].join('');
				offendingFile.contents[error.line-1] = offendingLine;
				offendingFile.contents = offendingFile.contents.map(function(offendingFileLine,offendingFileLineIndex){
					var lineNumberText = sprintf('%3s',offendingFileLineIndex+1);
					if(offendingFileLineIndex+1 == error.line){
						lineNumberText = lineNumberText.redBG.white;
					}
					return sprintf(
						'%s: %s',
						lineNumberText,
						offendingFileLine
					)
				});
				var offendingFileSource = offendingFile.contents.slice(
					Math.max(
						0,
						error.line-6
					),
					Math.min(
						offendingFile.contents.length,
						error.line+4
					)
				);
				output += [
					'Unable to compile:'.underline.red.bold,
					(error.toString().split(' at ')[0]+'.').red,
					offendingFile.name.red,
					offendingFileSource.join('\n')
				].join('\n');
				if(watch)console.log(output);
				else throw outout;
			}
			catch(e){
				output += [
					'Unable to compile. Got an error while trying to pretty-print error.',
					e,
					error.message
				].join('\n');
				if(watch)console.log(output);
				else throw output;
			}
		},
		compile: function(watch,cb){
			if(typeof watch == 'undefined')watch = true;
			cb = cb || function(){};
			if(this.compiling)return;
			if(watch)console.log('Compiling.');
			this.compiling = true;
			var didDoWatch = false;
			var state = new CompilerState(this,function(){
				if(watch && this.config.userConfig.webServer) {
					if(this.config.userConfig.webServer instanceof Object && this.config.userConfig.webServer.corsPort) {
						state.apiProxyUrl = "http://localhost:" + this.config.userConfig.webServer.corsPort + "/";
					}
				}
						
				try {
					if(this.config.clean){
						this.clean();
					}
					
					this.iterateHandlers('beforeCompile',[state]);
					
					this.processFile(
						state,
						state.getPathFromAliasAndType(
							this.config.main,
							'src'
						)
					);
					if(watch){
						this.watchFiles(state);
						didDoWatch = true;
					}
					
					this.iterateHandlers('afterProcessed',[state]);
					this.iterateHandlers('reset',[]);
					this.compiling = false;
					this.config.emitEvent('compiled');
					if(watch) {
						console.log('Done.');

						if(this.config.userConfig.webServer && !this.webServer) {
							this.webServer = new Server();
							this.webServer.webDirectory = this.config.output;

							if(this.config.userConfig.webServer instanceof Object) {
								this.webServer.webPort = this.config.userConfig.webServer.port;
								this.webServer.corsPort = this.config.userConfig.webServer.corsPort;
							}

							this.webServer.start();
						}
					}
					cb();
				}
				catch(e){
					this.compiling = false;
					if(watch){
						console.log("\007");
						console.log(
							'Unable to compile:'.underline.red.bold
						);
						if(e.stack){
							console.log(e.stack.red);
						}
						else {
							console.log(e.toString().red);
						}
						if(!didDoWatch){
							try {
								this.watchFiles(state);
							}
							catch(e){
								console.log(
									'Unable to start watching of file. Exiting now.'
								);
								throw e;
							}
						}
					}
					else {
						throw e;
					}
				}
			}.bind(this),watch);
		}
	};
	return Compiler;
})(); at SyntaxError: Invalid number (115:50)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.readNumber (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2896:52)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2720:19)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.expect (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:597:10)
    at Parser.pp$3.parseExprList (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2152:16)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/gs-project/node_modules/gs-project/compile.js. Coverage (Term): 35% Coverage (LOC): 50%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
