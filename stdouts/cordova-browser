/root/Targets/cordova-browser
└─┬ cordova-browser@5.0.0 
  ├── adm-zip@0.4.7 
  ├─┬ cordova-common@2.1.0 
  │ ├── ansi@0.3.1 
  │ ├─┬ bplist-parser@0.1.1 
  │ │ └── big-integer@1.6.25 
  │ ├── cordova-registry-mapper@1.1.15 
  │ ├─┬ elementtree@0.1.6 
  │ │ └── sax@0.3.5 
  │ ├─┬ glob@5.0.15 
  │ │ ├─┬ inflight@1.0.6 
  │ │ │ └── wrappy@1.0.2 
  │ │ ├── inherits@2.0.3 
  │ │ ├── once@1.4.0 
  │ │ └── path-is-absolute@1.0.1 
  │ ├─┬ minimatch@3.0.4 
  │ │ └─┬ brace-expansion@1.1.8 
  │ │   ├── balanced-match@1.0.0 
  │ │   └── concat-map@0.0.1 
  │ ├─┬ osenv@0.1.4 
  │ │ ├── os-homedir@1.0.2 
  │ │ └── os-tmpdir@1.0.2 
  │ ├─┬ plist@1.2.0 
  │ │ ├── base64-js@0.0.8 
  │ │ ├── util-deprecate@1.0.2 
  │ │ ├─┬ xmlbuilder@4.0.0 
  │ │ │ └── lodash@3.10.1 
  │ │ └── xmldom@0.1.27 
  │ ├── q@1.5.0 
  │ ├── semver@5.4.1 
  │ ├── shelljs@0.5.3 
  │ ├── underscore@1.8.3 
  │ └── unorm@1.4.1 
  ├─┬ cordova-serve@2.0.0  (git+https://github.com/apache/cordova-serve.git#4ad258947c0e347ad5c0f20d3b48e3125eb24111)
  │ ├─┬ chalk@1.1.3 
  │ │ ├── ansi-styles@2.2.1 
  │ │ ├── escape-string-regexp@1.0.5 
  │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ └── ansi-regex@2.1.1 
  │ │ ├── strip-ansi@3.0.1 
  │ │ └── supports-color@2.0.0 
  │ ├─┬ compression@1.7.0 
  │ │ ├─┬ accepts@1.3.4 
  │ │ │ ├── mime-types@2.1.16 
  │ │ │ └── negotiator@0.6.1 
  │ │ ├── bytes@2.5.0 
  │ │ ├─┬ compressible@2.0.11 
  │ │ │ └── mime-db@1.29.0 
  │ │ ├─┬ debug@2.6.8 
  │ │ │ └── ms@2.0.0 
  │ │ ├── on-headers@1.0.1 
  │ │ ├── safe-buffer@5.1.1 
  │ │ └── vary@1.1.1 
  │ ├─┬ express@4.15.4 
  │ │ ├── array-flatten@1.1.1 
  │ │ ├── content-disposition@0.5.2 
  │ │ ├── content-type@1.0.2 
  │ │ ├── cookie@0.3.1 
  │ │ ├── cookie-signature@1.0.6 
  │ │ ├── depd@1.1.1 
  │ │ ├── encodeurl@1.0.1 
  │ │ ├── escape-html@1.0.3 
  │ │ ├── etag@1.8.0 
  │ │ ├─┬ finalhandler@1.0.4 
  │ │ │ └── unpipe@1.0.0 
  │ │ ├── fresh@0.5.0 
  │ │ ├── merge-descriptors@1.0.1 
  │ │ ├── methods@1.1.2 
  │ │ ├─┬ on-finished@2.3.0 
  │ │ │ └── ee-first@1.1.1 
  │ │ ├── parseurl@1.3.1 
  │ │ ├── path-to-regexp@0.1.7 
  │ │ ├─┬ proxy-addr@1.1.5 
  │ │ │ ├── forwarded@0.1.0 
  │ │ │ └── ipaddr.js@1.4.0 
  │ │ ├── qs@6.5.0 
  │ │ ├── range-parser@1.2.0 
  │ │ ├─┬ send@0.15.4 
  │ │ │ ├── destroy@1.0.4 
  │ │ │ ├─┬ http-errors@1.6.2 
  │ │ │ │ └── inherits@2.0.3 
  │ │ │ └── mime@1.3.4 
  │ │ ├── serve-static@1.12.4 
  │ │ ├── setprototypeof@1.0.3 
  │ │ ├── statuses@1.3.1 
  │ │ ├─┬ type-is@1.6.15 
  │ │ │ └── media-typer@0.3.0 
  │ │ └── utils-merge@1.0.0 
  │ └── open@0.0.5 
  ├─┬ nopt@3.0.6 
  │ └── abbrev@1.1.0 
  └── shelljs@0.5.3 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/cordova-browser/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 20% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","getOSType","parseInt"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0578 took 17.1177s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (23:4) on program 
/**
 * Accepts any node Stream instance and hijacks its "write()" function,
 * so that it can count any newlines that get written to the output.
 *
 * When a '\n' byte is encountered, then a "newline" event will be emitted
 * on the stream, with no arguments. It is up to the listeners to determine
 * any necessary deltas required for their use-case.
 *
 * Ex:
 *
 *   var cursor = ansi(process.stdout)
 *     , ln = 0
 *   process.stdout.on('newline', function () {
 *    ln++
 *   })
 */

/**
 * Module dependencies.
 */

var assert = require('assert')
var NEWLINE = '\n'.charCodeAt(0)

function emitNewlineEvents (stream) {
  if (stream._emittingNewlines) {
    // already emitting newline events
    return
  }

  var write = stream.write

  stream.write = function (data) {
    // first write the data
    var rtn = write.apply(stream, arguments)

    if (stream.listeners('newline').length > 0) {
      var len = data.length
        , i = 0
      // now try to calculate any deltas
      if (typeof data == 'string') {
        for (; i<len; i++) {
          processByte(stream, data.charCodeAt(i))
        }
      } else {
        // buffer
        for (; i<len; i++) {
          processByte(stream, data[i])
        }
      }
    }

    return rtn
  }

  stream._emittingNewlines = true
}
module.exports = emitNewlineEvents


/**
 * Processes an individual byte being written to a stream
 */

function processByte (stream, b) {
  assert.equal(typeof b, 'number')
  if (b === NEWLINE) {
    stream.emit('newline')
  }
}
 at SyntaxError: Unexpected token (23:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/cordova-browser/node_modules/cordova-browser/bin/template/cordova/Api.js. Coverage (Term): 3% Coverage (LOC): 3%
*- File /root/Targets/cordova-browser/node_modules/cordova-browser/node_modules/shelljs/shell.js. Coverage (Term): 100% Coverage (LOC): 100%
*- File /root/Targets/cordova-browser/node_modules/cordova-browser/node_modules/shelljs/src/common.js. Coverage (Term): 19% Coverage (LOC): 27%
*- File /root/Targets/cordova-browser/node_modules/cordova-browser/node_modules/shelljs/src/ls.js. Coverage (Term): 11% Coverage (LOC): 12%
*- File /root/Targets/cordova-browser/node_modules/cordova-browser/node_modules/shelljs/src/cd.js. Coverage (Term): 38% Coverage (LOC): 46%
*- File /root/Targets/cordova-browser/node_modules/cordova-browser/node_modules/shelljs/src/pwd.js. Coverage (Term): 60% Coverage (LOC): 75%
*- File /root/Targets/cordova-browser/node_modules/cordova-browser/node_modules/shelljs/src/find.js. Coverage (Term): 25% Coverage (LOC): 26%
*- File /root/Targets/cordova-browser/node_modules/cordova-browser/node_modules/shelljs/src/cp.js. Coverage (Term): 7% Coverage (LOC): 9%
*- File /root/Targets/cordova-browser/node_modules/cordova-browser/node_modules/shelljs/src/rm.js. Coverage (Term): 8% Coverage (LOC): 10%
*- File /root/Targets/cordova-browser/node_modules/cordova-browser/node_modules/shelljs/src/mv.js. Coverage (Term): 13% Coverage (LOC): 16%
*- File /root/Targets/cordova-browser/node_modules/cordova-browser/node_modules/shelljs/src/mkdir.js. Coverage (Term): 20% Coverage (LOC): 23%
*- File /root/Targets/cordova-browser/node_modules/cordova-browser/node_modules/shelljs/src/test.js. Coverage (Term): 17% Coverage (LOC): 13%
*- File /root/Targets/cordova-browser/node_modules/cordova-browser/node_modules/shelljs/src/cat.js. Coverage (Term): 23% Coverage (LOC): 30%
*- File /root/Targets/cordova-browser/node_modules/cordova-browser/node_modules/shelljs/src/to.js. Coverage (Term): 39% Coverage (LOC): 50%
*- File /root/Targets/cordova-browser/node_modules/cordova-browser/node_modules/shelljs/src/toEnd.js. Coverage (Term): 39% Coverage (LOC): 50%
*- File /root/Targets/cordova-browser/node_modules/cordova-browser/node_modules/shelljs/src/sed.js. Coverage (Term): 24% Coverage (LOC): 30%
*- File /root/Targets/cordova-browser/node_modules/cordova-browser/node_modules/shelljs/src/grep.js. Coverage (Term): 19% Coverage (LOC): 23%
*- File /root/Targets/cordova-browser/node_modules/cordova-browser/node_modules/shelljs/src/which.js. Coverage (Term): 15% Coverage (LOC): 17%
*- File /root/Targets/cordova-browser/node_modules/cordova-browser/node_modules/shelljs/src/echo.js. Coverage (Term): 45% Coverage (LOC): 63%
*- File /root/Targets/cordova-browser/node_modules/cordova-browser/node_modules/shelljs/src/dirs.js. Coverage (Term): 13% Coverage (LOC): 17%
*- File /root/Targets/cordova-browser/node_modules/cordova-browser/node_modules/shelljs/src/ln.js. Coverage (Term): 26% Coverage (LOC): 27%
*- File /root/Targets/cordova-browser/node_modules/cordova-browser/node_modules/shelljs/src/exec.js. Coverage (Term): 9% Coverage (LOC): 9%
*- File /root/Targets/cordova-browser/node_modules/cordova-browser/node_modules/shelljs/src/tempdir.js. Coverage (Term): 21% Coverage (LOC): 35%
*- File /root/Targets/cordova-browser/node_modules/cordova-browser/node_modules/shelljs/src/chmod.js. Coverage (Term): 14% Coverage (LOC): 21%
*- File /root/Targets/cordova-browser/node_modules/cordova-browser/node_modules/shelljs/src/error.js. Coverage (Term): 71% Coverage (LOC): 83%
*- File /root/Targets/cordova-browser/node_modules/cordova-common/cordova-common.js. Coverage (Term): 99% Coverage (LOC): 100%
*- File /root/Targets/cordova-browser/node_modules/cordova-common/src/util/addProperty.js. Coverage (Term): 77% Coverage (LOC): 83%
*- File /root/Targets/cordova-browser/node_modules/cordova-common/src/CordovaLogger.js. Coverage (Term): 5% Coverage (LOC): 7%
*- File /root/Targets/cordova-browser/node_modules/ansi/lib/ansi.js. Coverage (Term): 3% Coverage (LOC): 5%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
