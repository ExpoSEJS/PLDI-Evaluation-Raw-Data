/root/Targets/react-kudos
└── react-kudos@0.0.1 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/react-kudos/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0467 took 4.0618s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (83:17) on program var React = require('react');
var Firebase = require('firebase');

var Kudos = React.createClass({

  propTypes: {
    firebaseHost: React.PropTypes.string,
    firebaseResourceId: React.PropTypes.string,
    allowMultiple: React.PropTypes.bool,
    isButton: React.PropTypes.bool
  },

  isLocalStorageOn: function () {
    // this code is borrowed from modernizer
    var mod = 'react-kudos';
    try {
      localStorage.setItem(mod, mod);
      localStorage.removeItem(mod);
      return true;
    } catch(e) {
      return false;
    }
  },

  getDefaultProps: function () {
    return {
      isButton: false,
      allowMultiple: false
    }
  },

  getInitialState:  function () {
    this.lsVotedKey = 'count-' + this.props.firebaseResourceId + '-voted';
    var voted = false;
    if (this.isLocalStorageOn()) {
      voted = !!localStorage.getItem(this.lsVotedKey);
    }
    return {
      counterValue: 0,
      voted: voted
    }
  },

  componentWillMount: function () {
    var url = this.props.firebaseHost + this.props.firebaseResourceId;
    this.firebase = new Firebase(url);
  },

  componentDidMount: function () {
    this.firebase.on('value', this.handleFirebaseChange);
  },

  componentWillUnmount: function () {
    this.ref.off('value', this.handleFirebaseChange);
  },

  handleFirebaseChange: function (snapshot) {
    var newValue = snapshot.val();
    console.log('value changed', newValue);
    if (newValue == null) {
      newValue = 0;
      this.firebase.set(newValue);
    }
    this.setState({counterValue: newValue});
  },

  handleClick: function () {
    if (this.props.allowMultiple === false && this.state.voted) {
      return;
    }
    var newValue = this.state.counterValue + 1;
    this.firebase.set(newValue);
    this.setState({voted: true});
    if (this.isLocalStorageOn()) {
      localStorage.setItem(this.lsVotedKey, true);
    }
  },


  render: function () {
    var rendered;
    if (this.props.isButton) {
      rendered = <button onClick={this.handleClick}>{this.state.counterValue}</button>;
    } else {
      rendered = <div onClick={this.handleClick}>{this.state.counterValue}</div>;
    }
    return (
      <div>
        {rendered}
      </div>
    )
  }

});

module.exports = Kudos; at SyntaxError: Unexpected token (83:17)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$3.parseExprAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1822:12)
    at Parser.parseExprAtom (/root/ExpoSE/lib/Tropigate/bin/Expression.js:28:30)
    at Parser.pp$3.parseExprSubscripts (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1715:21)
    at Parser.parseMaybeUnary (/root/ExpoSE/lib/Tropigate/bin/Unary.js:34:29)
    at Parser.pp$3.parseExprOps (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1637:21)
    at Parser.pp$3.parseMaybeConditional (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1620:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1597:21)
    at Parser.pp$3.parseMaybeAssign (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1608:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/react-kudos/node_modules/react-kudos/lib/index.js. Coverage (Term): 80% Coverage (LOC): 100%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
