/root/Targets/trybuynumber
└─┬ trybuynumber@0.1.0 
  ├─┬ csv@0.4.6 
  │ ├── csv-generate@0.0.6 
  │ ├── csv-parse@1.2.3 
  │ ├── csv-stringify@0.0.8 
  │ └── stream-transform@0.1.2 
  ├── e164@0.0.5 
  ├─┬ nconf@0.7.2 
  │ ├── async@0.9.2 
  │ ├── ini@1.3.4 
  │ └─┬ yargs@3.15.0 
  │   ├── camelcase@1.2.1 
  │   ├─┬ cliui@2.1.0 
  │   │ ├─┬ center-align@0.1.3 
  │   │ │ ├─┬ align-text@0.1.4 
  │   │ │ │ ├─┬ kind-of@3.2.2 
  │   │ │ │ │ └── is-buffer@1.1.5 
  │   │ │ │ ├── longest@1.0.1 
  │   │ │ │ └── repeat-string@1.6.1 
  │   │ │ └── lazy-cache@1.0.4 
  │   │ └── right-align@0.1.3 
  │   ├── decamelize@1.2.0 
  │   └── window-size@0.1.4 
  ├─┬ node-phonenumber@0.2.4 
  │ └── closure@1.0.3 
  ├─┬ optimist@0.6.1 
  │ ├── minimist@0.0.10 
  │ └── wordwrap@0.0.2 
  ├─┬ twilio@1.11.1 
  │ ├── jwt-simple@0.1.0 
  │ ├── q@0.9.7 
  │ ├─┬ request@2.27.0 
  │ │ ├── aws-sign@0.3.0 
  │ │ ├── cookie-jar@0.3.0 
  │ │ ├── forever-agent@0.5.2 
  │ │ ├─┬ form-data@0.1.4 
  │ │ │ └─┬ combined-stream@0.0.7 
  │ │ │   └── delayed-stream@0.0.5 
  │ │ ├─┬ hawk@1.0.0 
  │ │ │ ├── boom@0.4.2 
  │ │ │ ├── cryptiles@0.2.2 
  │ │ │ ├── hoek@0.9.1 
  │ │ │ └── sntp@0.2.4 
  │ │ ├─┬ http-signature@0.10.1 
  │ │ │ ├── asn1@0.1.11 
  │ │ │ ├── assert-plus@0.1.5 
  │ │ │ └── ctype@0.5.3 
  │ │ ├── json-stringify-safe@5.0.1 
  │ │ ├── mime@1.2.11 
  │ │ ├── node-uuid@1.4.8 
  │ │ ├── oauth-sign@0.3.0 
  │ │ ├── qs@0.6.6 
  │ │ └── tunnel-agent@0.3.0 
  │ ├── scmp@0.0.3 
  │ └── underscore@1.8.3 
  ├── when@3.7.8 
  └─┬ winston@0.9.0 
    ├── colors@1.0.3 
    ├── cycle@1.0.3 
    ├── eyes@0.1.8 
    ├── isstream@0.1.2 
    ├── pkginfo@0.3.1 
    └── stack-trace@0.0.10 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/trybuynumber/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 22% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0421 took 2.2653s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (50:4) on program // Copyright 2011 Lukasz Mielicki <mielicki@gmail.com>.
// All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
  @fileoverview Closure library wrapper for node.js.

  To apply closure to global object:

    require.('closure').Closure(global);

  To create separate instance of closure

    var goog = require.('closure').Closure();

  By default closure library base.js is expected to be found in
  ./closure-library/closure/goog/, to override this, say:

    var goog =
      require.('closure').Closure({CLOSURE_BASE_PATH: 'closure/goog/'});

  To fetch additional closure dependencies:

    goog.loadScript('my_deps.js');

  To easily access other namespaces than goog either apply closure to
  global object or provide own global object, i.e.

    var root = {};
    require.('closure').Closure(root);
    //root.goog is goog namespace
    //root.soy is soy namespace

  Enjoy!

*/
var vm = require('vm');
var fs = require('fs');
var assert = require('assert').ok;
var path = require('path');


/**
  Closure library constructor.
  @param {Object=} opt_goog_global Optional object to be used as closure
      global object.
  @return {Object} goog namespace object.
*/
exports.Closure = function(opt_goog_global) {

  /**
    Internal closure global object.
    @private
  */
  var goog_ = opt_goog_global || {};

  // Apply closure library required settings.
  set_defaults(goog_, {
    CLOSURE_BASE_PATH: 'closure-library/closure/goog/',
    CLOSURE_IMPORT_SCRIPT: load_script,
    goog: {},
    window: {
      setTimeout: setTimeout,
      clearTimeout: clearTimeout,
      setInterval: setInterval,
      clearInterval: clearInterval,
      console: console
    },
    /**
      execScript replacement
    */
    execScript: function(code) {
      exec_script(code, 'execScript');
      return null;
    }
  });

  /**
    Extends goog with loadScript (goog.importScript_ could be used instead,
    but it's not part of API). Useful for loading dependency files.
  */
  goog_.goog.loadScript = load_script;

  /**
    Loads a closure script (CLOSURE_IMPORT_SCRIPT).
    @param {string} filename The file to be loaded and executed.
    @return {boolean} Always returns true.
    @private
  */
  function load_script(filename) {
    var code = fs.readFileSync(  path.normalize( filename ), 'utf8');
    exec_script(code, filename);
    return true;
  }

  /**
    Executes given code in global scope or in a nifty wrapper providing
    direct access to all global names, i.e.

      (function(){with(this){ CODE }});

    This is necassary to run closure scripts in same execution context while
    having distinct global object.
    @param {String} code Code to execute in closure global scope.
    @param {String=} opt_filename Source file path to provide reference
        in error messages.
    @private
  */
  function exec_script(code, opt_filename) {
    if (goog_ === global) {
      // Run directly in global scope in case global object is used.
      vm.runInThisContext(code, opt_filename);
    } else {
      // Use wrapper.
      var wrapper = '(function(){with(this){' + code + '\n}});';
      var fn = vm.runInThisContext(wrapper, opt_filename);
      fn.call(goog_);
    }
  }

  /**
    Applay defaults to target object if not yet there.
    @param {Object} target Object to be extended.
    @param {Object} defaults Source object.
    @private
  */
  function set_defaults(target, defaults) {
    for (var attr in defaults) {
      if (target[attr] === undefined) {
        target[attr] = defaults[attr];
      }
    }
  }

  // Load base.js
  var basepath = goog_.CLOSURE_BASE_PATH;
  assert(basepath.slice(-1) === path.sep, "CLOSURE_BASE_PATH must end with '" + path.sep + "'");

  load_script(basepath + 'base.js');

  return goog_.goog;
};
 at SyntaxError: Unexpected token (50:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/trybuynumber/node_modules/trybuynumber/index.js. Coverage (Term): 7% Coverage (LOC): 8%
*- File /root/Targets/trybuynumber/node_modules/node-phonenumber/lib/index.js. Coverage (Term): 27% Coverage (LOC): 38%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
