
> ws@0.4.32 install /root/Targets/avrga-tester/node_modules/ws
> (node-gyp rebuild 2> builderror.log) || (exit 0)

make: Entering directory '/root/Targets/avrga-tester/node_modules/ws/build'
  CXX(target) Release/obj.target/bufferutil/src/bufferutil.o
bufferutil.target.mk:96: recipe for target 'Release/obj.target/bufferutil/src/bufferutil.o' failed
make: Leaving directory '/root/Targets/avrga-tester/node_modules/ws/build'
/root/Targets/avrga-tester
└─┬ avrga-tester@1.0.11 
  ├─┬ express@4.15.4 
  │ ├─┬ accepts@1.3.4 
  │ │ ├─┬ mime-types@2.1.17 
  │ │ │ └── mime-db@1.30.0 
  │ │ └── negotiator@0.6.1 
  │ ├── array-flatten@1.1.1 
  │ ├── content-disposition@0.5.2 
  │ ├── content-type@1.0.4 
  │ ├── cookie@0.3.1 
  │ ├── cookie-signature@1.0.6 
  │ ├─┬ debug@2.6.8 
  │ │ └── ms@2.0.0 
  │ ├── depd@1.1.1 
  │ ├── encodeurl@1.0.1 
  │ ├── escape-html@1.0.3 
  │ ├── etag@1.8.1 
  │ ├─┬ finalhandler@1.0.5 
  │ │ └── unpipe@1.0.0 
  │ ├── fresh@0.5.0 
  │ ├── merge-descriptors@1.0.1 
  │ ├── methods@1.1.2 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── parseurl@1.3.2 
  │ ├── path-to-regexp@0.1.7 
  │ ├─┬ proxy-addr@1.1.5 
  │ │ ├── forwarded@0.1.2 
  │ │ └── ipaddr.js@1.4.0 
  │ ├── qs@6.5.0 
  │ ├── range-parser@1.2.0 
  │ ├─┬ send@0.15.4 
  │ │ ├── destroy@1.0.4 
  │ │ ├─┬ http-errors@1.6.2 
  │ │ │ └── inherits@2.0.3 
  │ │ └── mime@1.3.4 
  │ ├── serve-static@1.12.4 
  │ ├── setprototypeof@1.0.3 
  │ ├── statuses@1.3.1 
  │ ├─┬ type-is@1.6.15 
  │ │ └── media-typer@0.3.0 
  │ ├── utils-merge@1.0.0 
  │ └── vary@1.1.1 
  ├─┬ express-ws@0.2.6 
  │ ├── url-join@0.0.1 
  │ └─┬ ws@0.4.32 
  │   ├── commander@2.1.0 
  │   ├── nan@1.0.0 
  │   ├── options@0.0.6 
  │   └── tinycolor@0.0.1 
  ├── node-uuid@1.4.8 
  └── opener@1.4.3 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/avrga-tester/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 27% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","reduce","parseInt","charCodeAt","abs","Number","captureStackTrace","cwd","max","getFileName","getLineNumber","getColumnNumber","isEval","getFunctionName","create","toString","toUpperCase","join","call","RegExp","getOwnPropertyNames","getOwnPropertyDescriptor","isArray","Array"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0549 took 36.8915s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node

"use strict";

var childProcess = require("child_process");

function opener(args, options, callback) {
    // http://stackoverflow.com/q/1480971/3191, but see below for Windows.
    var command = process.platform === "win32" ? "cmd" :
                  process.platform === "darwin" ? "open" :
                  "xdg-open";

    if (typeof args === "string") {
        args = [args];
    }

    if (typeof options === "function") {
        callback = options;
        options = {};
    }

    if (options && typeof options === "object" && options.command) {
        if (process.platform === "win32") {
            // *always* use cmd on windows
            args = [options.command].concat(args);
        } else {
            command = options.command;
        }
    }

    if (process.platform === "win32") {
        // On Windows, we really want to use the "start" command. But, the rules regarding arguments with spaces, and
        // escaping them with quotes, can get really arcane. So the easiest way to deal with this is to pass off the
        // responsibility to "cmd /c", which has that logic built in.
        //
        // Furthermore, if "cmd /c" double-quoted the first parameter, then "start" will interpret it as a window title,
        // so we need to add a dummy empty-string window title: http://stackoverflow.com/a/154090/3191
        //
        // Additionally, on Windows ampersand needs to be escaped when passed to "start"
        args = args.map(function(value) {
            return value.replace(/&/g, '^&');
        });
        args = ["/c", "start", '""'].concat(args);
    }

    return childProcess.execFile(command, args, options, callback);
}

// Export `opener` for programmatic access.
// You might use this to e.g. open a website: `opener("http://google.com")`
module.exports = opener;

// If we're being called from the command line, just execute, using the command-line arguments.
if (require.main && require.main.id === module.id) {
    opener(process.argv.slice(2), function (error) {
        if (error) {
            throw error;
        }
    });
}
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/avrga-tester/node_modules/avrga-tester/index.js. Coverage (Term): 14% Coverage (LOC): 14%
*- File /root/Targets/avrga-tester/node_modules/express/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/avrga-tester/node_modules/express/lib/express.js. Coverage (Term): 86% Coverage (LOC): 97%
*- File /root/Targets/avrga-tester/node_modules/merge-descriptors/index.js. Coverage (Term): 83% Coverage (LOC): 83%
*- File /root/Targets/avrga-tester/node_modules/express/lib/application.js. Coverage (Term): 34% Coverage (LOC): 43%
*- File /root/Targets/avrga-tester/node_modules/finalhandler/index.js. Coverage (Term): 16% Coverage (LOC): 21%
*- File /root/Targets/avrga-tester/node_modules/debug/src/index.js. Coverage (Term): 81% Coverage (LOC): 83%
*- File /root/Targets/avrga-tester/node_modules/debug/src/node.js. Coverage (Term): 35% Coverage (LOC): 44%
*- File /root/Targets/avrga-tester/node_modules/debug/src/debug.js. Coverage (Term): 47% Coverage (LOC): 51%
*- File /root/Targets/avrga-tester/node_modules/ms/index.js. Coverage (Term): 12% Coverage (LOC): 15%
*- File /root/Targets/avrga-tester/node_modules/encodeurl/index.js. Coverage (Term): 63% Coverage (LOC): 89%
*- File /root/Targets/avrga-tester/node_modules/escape-html/index.js. Coverage (Term): 16% Coverage (LOC): 18%
*- File /root/Targets/avrga-tester/node_modules/on-finished/index.js. Coverage (Term): 13% Coverage (LOC): 17%
*- File /root/Targets/avrga-tester/node_modules/ee-first/index.js. Coverage (Term): 9% Coverage (LOC): 13%
*- File /root/Targets/avrga-tester/node_modules/parseurl/index.js. Coverage (Term): 15% Coverage (LOC): 18%
*- File /root/Targets/avrga-tester/node_modules/statuses/index.js. Coverage (Term): 56% Coverage (LOC): 67%
*- File /root/Targets/avrga-tester/node_modules/unpipe/index.js. Coverage (Term): 16% Coverage (LOC): 20%
*- File /root/Targets/avrga-tester/node_modules/express/lib/router/index.js. Coverage (Term): 8% Coverage (LOC): 12%
*- File /root/Targets/avrga-tester/node_modules/express/lib/router/route.js. Coverage (Term): 18% Coverage (LOC): 23%
*- File /root/Targets/avrga-tester/node_modules/array-flatten/array-flatten.js. Coverage (Term): 17% Coverage (LOC): 26%
*- File /root/Targets/avrga-tester/node_modules/express/lib/router/layer.js. Coverage (Term): 14% Coverage (LOC): 18%
*- File /root/Targets/avrga-tester/node_modules/path-to-regexp/index.js. Coverage (Term): 5% Coverage (LOC): 9%
*- File /root/Targets/avrga-tester/node_modules/methods/index.js. Coverage (Term): 59% Coverage (LOC): 27%
*- File /root/Targets/avrga-tester/node_modules/utils-merge/index.js. Coverage (Term): 40% Coverage (LOC): 40%
*- File /root/Targets/avrga-tester/node_modules/depd/index.js. Coverage (Term): 32% Coverage (LOC): 34%
*- File /root/Targets/avrga-tester/node_modules/depd/lib/compat/index.js. Coverage (Term): 87% Coverage (LOC): 97%
*- File /root/Targets/avrga-tester/node_modules/setprototypeof/index.js. Coverage (Term): 32% Coverage (LOC): 38%
*- File /root/Targets/avrga-tester/node_modules/express/lib/middleware/init.js. Coverage (Term): 27% Coverage (LOC): 38%
*- File /root/Targets/avrga-tester/node_modules/express/lib/middleware/query.js. Coverage (Term): 32% Coverage (LOC): 35%
*- File /root/Targets/avrga-tester/node_modules/qs/lib/index.js. Coverage (Term): 98% Coverage (LOC): 100%
*- File /root/Targets/avrga-tester/node_modules/qs/lib/stringify.js. Coverage (Term): 8% Coverage (LOC): 18%
*- File /root/Targets/avrga-tester/node_modules/qs/lib/utils.js. Coverage (Term): 12% Coverage (LOC): 19%
*- File /root/Targets/avrga-tester/node_modules/qs/lib/formats.js. Coverage (Term): 61% Coverage (LOC): 87%
*- File /root/Targets/avrga-tester/node_modules/qs/lib/parse.js. Coverage (Term): 7% Coverage (LOC): 17%
*- File /root/Targets/avrga-tester/node_modules/express/lib/view.js. Coverage (Term): 22% Coverage (LOC): 30%
*- File /root/Targets/avrga-tester/node_modules/express/lib/utils.js. Coverage (Term): 38% Coverage (LOC): 52%
*- File /root/Targets/avrga-tester/node_modules/content-disposition/index.js. Coverage (Term): 12% Coverage (LOC): 20%
*- File /root/Targets/avrga-tester/node_modules/content-type/index.js. Coverage (Term): 12% Coverage (LOC): 18%
*- File /root/Targets/avrga-tester/node_modules/send/index.js. Coverage (Term): 13% Coverage (LOC): 20%
*- File /root/Targets/avrga-tester/node_modules/http-errors/index.js. Coverage (Term): 46% Coverage (LOC): 40%
*- File /root/Targets/avrga-tester/node_modules/inherits/inherits.js. Coverage (Term): 74% Coverage (LOC): 88%
*- File eval. Coverage (Term): 38% Coverage (LOC): 50%
*- File /root/Targets/avrga-tester/node_modules/destroy/index.js. Coverage (Term): 32% Coverage (LOC): 33%
*- File /root/Targets/avrga-tester/node_modules/etag/index.js. Coverage (Term): 16% Coverage (LOC): 32%
*- File /root/Targets/avrga-tester/node_modules/fresh/index.js. Coverage (Term): 18% Coverage (LOC): 21%
*- File /root/Targets/avrga-tester/node_modules/mime/mime.js. Coverage (Term): 56% Coverage (LOC): 75%
*- File /root/Targets/avrga-tester/node_modules/range-parser/index.js. Coverage (Term): 8% Coverage (LOC): 15%
*- File /root/Targets/avrga-tester/node_modules/proxy-addr/index.js. Coverage (Term): 22% Coverage (LOC): 32%
*- File /root/Targets/avrga-tester/node_modules/forwarded/index.js. Coverage (Term): 14% Coverage (LOC): 18%
*- File /root/Targets/avrga-tester/node_modules/ipaddr.js/lib/ipaddr.js. Coverage (Term): 27% Coverage (LOC): 52%
*- File /root/Targets/avrga-tester/node_modules/express/lib/request.js. Coverage (Term): 26% Coverage (LOC): 40%
*- File /root/Targets/avrga-tester/node_modules/accepts/index.js. Coverage (Term): 16% Coverage (LOC): 23%
*- File /root/Targets/avrga-tester/node_modules/negotiator/index.js. Coverage (Term): 33% Coverage (LOC): 47%
*- File /root/Targets/avrga-tester/node_modules/mime-types/index.js. Coverage (Term): 48% Coverage (LOC): 51%
*- File /root/Targets/avrga-tester/node_modules/mime-db/index.js. Coverage (Term): 95% Coverage (LOC): 100%
*- File /root/Targets/avrga-tester/node_modules/type-is/index.js. Coverage (Term): 13% Coverage (LOC): 20%
*- File /root/Targets/avrga-tester/node_modules/media-typer/index.js. Coverage (Term): 11% Coverage (LOC): 16%
*- File /root/Targets/avrga-tester/node_modules/express/lib/response.js. Coverage (Term): 11% Coverage (LOC): 16%
*- File /root/Targets/avrga-tester/node_modules/cookie-signature/index.js. Coverage (Term): 19% Coverage (LOC): 40%
*- File /root/Targets/avrga-tester/node_modules/cookie/index.js. Coverage (Term): 10% Coverage (LOC): 13%
*- File /root/Targets/avrga-tester/node_modules/vary/index.js. Coverage (Term): 14% Coverage (LOC): 21%
*- File /root/Targets/avrga-tester/node_modules/serve-static/index.js. Coverage (Term): 13% Coverage (LOC): 17%
*- File /root/Targets/avrga-tester/node_modules/express-ws/index.js. Coverage (Term): 29% Coverage (LOC): 35%
*- File /root/Targets/avrga-tester/node_modules/url-join/lib/url-join.js. Coverage (Term): 29% Coverage (LOC): 63%
*- File /root/Targets/avrga-tester/node_modules/ws/index.js. Coverage (Term): 48% Coverage (LOC): 50%
*- File /root/Targets/avrga-tester/node_modules/ws/lib/WebSocket.js. Coverage (Term): 8% Coverage (LOC): 10%
*- File /root/Targets/avrga-tester/node_modules/options/lib/options.js. Coverage (Term): 6% Coverage (LOC): 6%
*- File /root/Targets/avrga-tester/node_modules/ws/lib/Sender.js. Coverage (Term): 10% Coverage (LOC): 14%
*- File /root/Targets/avrga-tester/node_modules/ws/lib/ErrorCodes.js. Coverage (Term): 46% Coverage (LOC): 94%
*- File /root/Targets/avrga-tester/node_modules/ws/lib/BufferUtil.js. Coverage (Term): 63% Coverage (LOC): 70%
*- File /root/Targets/avrga-tester/node_modules/ws/lib/BufferUtil.fallback.js. Coverage (Term): 7% Coverage (LOC): 15%
*- File /root/Targets/avrga-tester/node_modules/ws/lib/Receiver.js. Coverage (Term): 6% Coverage (LOC): 11%
*- File /root/Targets/avrga-tester/node_modules/ws/lib/Validation.js. Coverage (Term): 63% Coverage (LOC): 70%
*- File /root/Targets/avrga-tester/node_modules/ws/lib/Validation.fallback.js. Coverage (Term): 68% Coverage (LOC): 83%
*- File /root/Targets/avrga-tester/node_modules/ws/lib/BufferPool.js. Coverage (Term): 12% Coverage (LOC): 18%
*- File /root/Targets/avrga-tester/node_modules/ws/lib/Sender.hixie.js. Coverage (Term): 18% Coverage (LOC): 30%
*- File /root/Targets/avrga-tester/node_modules/ws/lib/Receiver.hixie.js. Coverage (Term): 11% Coverage (LOC): 15%
*- File /root/Targets/avrga-tester/node_modules/ws/lib/WebSocketServer.js. Coverage (Term): 5% Coverage (LOC): 4%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
