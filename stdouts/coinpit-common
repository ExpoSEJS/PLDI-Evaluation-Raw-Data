/root/Targets/coinpit-common
└─┬ coinpit-common@0.2.3 
  ├── affirm.js@1.0.0 
  ├── lodash@4.17.4 
  ├─┬ mangler@1.0.4 
  │ └── fixtures.js@2.1.0 
  ├── sinful-math.js@0.0.2 
  └── tweetnacl@1.0.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/coinpit-common/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 35% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log","call","RegExp","join","binding","Object","WeakMap","create","Set","Array","ArrayBuffer","DataView","Map","resolve","max","now","apply"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0491 took 15.8246s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (1:82) on program var assert = require('assert')

module.exports = (function () {
  var util    = {}
  var escapes = { '&': '&amp;', '>': '&gt;', '<': '&lt;', '"': '&quot;', "'": '&#x27;', '/': '&#x2F;' }

  util.mapify = function (list, key) {
    assert(Array.isArray(list), ' list ' + list + ' must be an array')
    assert(key, 'key must be present')
    var map = {}
    for (var i = 0; i < list.length; i++) {
      assert(list[i][key], list[i] + ' does not contain ' + key)
      map[list[i][key]] = list[i]
    }
    return map;
  }

  util.arrayMapify = function (list, key) {
    assert(Array.isArray(list), 'list ' + list + ' must be an array')
    assert(key, 'key must be present')
    var map = {}
    for (var i = 0; i < list.length; i++) {
      assert(list[i][key], list[i] + ' does not contain ' + key)
      map[list[i][key]] = map[list[i][key]] || []
      map[list[i][key]].push(list[i])
    }
    return map;
  }

  util.fixed = function (number) {
    return number.toFixed(10) - 0
  }

  util.delProps = function (obj, properties) {
    var props = Array.isArray(properties) && properties || [properties]
    var objs  = Array.isArray(obj) && obj || [obj]
    for (var i = 0; i < objs.length; i++) {
      for (var j = 0; j < props.length; j++) {
        delete objs[i][props[j]]
      }
    }
    return Array.isArray(obj) && objs || objs[0]
  }

  util.unsanitizeString = function (string) {
    var badChars = Object.keys(escapes)
    for (var i = 0; i < badChars.length; i++) {
      var re = new RegExp(escapes[badChars[i]], 'g')
      string = string.replace(re, badChars[i])
    }
    return string
  }

  util.sanitizeString = function (string) {
    var badChars = Object.keys(escapes)
    for (var i = 0; i < badChars.length; i++) {
      var re = new RegExp(badChars[i], 'g')
      string = string.replace(re, escapes[badChars[i]])
    }
    return string
  }

  return util
})()
 at SyntaxError: Unexpected token (1:82)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/coinpit-common/node_modules/coinpit-common/index.js. Coverage (Term): 53% Coverage (LOC): 63%
*- File /root/Targets/coinpit-common/node_modules/coinpit-common/instruments.js. Coverage (Term): 13% Coverage (LOC): 17%
*- File /root/Targets/coinpit-common/node_modules/affirm.js/index.js. Coverage (Term): 36% Coverage (LOC): 40%
*- File /root/Targets/coinpit-common/node_modules/lodash/lodash.js. Coverage (Term): 22% Coverage (LOC): 35%
*- File /root/Targets/coinpit-common/node_modules/coinpit-common/instruments/inverse.js. Coverage (Term): 6% Coverage (LOC): 8%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
