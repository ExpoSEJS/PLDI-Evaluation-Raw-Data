
> elm-test@0.18.9 install /root/Targets/elm-i18n/node_modules/elm-test
> node install.js

Downloading binaries from https://dl.bintray.com/elmlang/elm-test/0.18.9/linux-x64.tar.gz
Successfully downloaded and processed https://dl.bintray.com/elmlang/elm-test/0.18.9/linux-x64.tar.gz
/root/Targets/elm-i18n
└─┬ elm-i18n@1.0.1 
  ├─┬ elm-test@0.18.9 
  │ ├─┬ binstall@1.2.0 
  │ │ ├─┬ request@2.79.0 
  │ │ │ ├── aws-sign2@0.6.0 
  │ │ │ ├── aws4@1.6.0 
  │ │ │ ├── caseless@0.11.0 
  │ │ │ ├─┬ combined-stream@1.0.5 
  │ │ │ │ └── delayed-stream@1.0.0 
  │ │ │ ├── extend@3.0.1 
  │ │ │ ├── forever-agent@0.6.1 
  │ │ │ ├─┬ form-data@2.1.4 
  │ │ │ │ └── asynckit@0.4.0 
  │ │ │ ├─┬ har-validator@2.0.6 
  │ │ │ │ ├─┬ chalk@1.1.3 
  │ │ │ │ │ ├── ansi-styles@2.2.1 
  │ │ │ │ │ ├── has-ansi@2.0.0 
  │ │ │ │ │ └── supports-color@2.0.0 
  │ │ │ │ ├── commander@2.11.0 
  │ │ │ │ └─┬ is-my-json-valid@2.16.1 
  │ │ │ │   ├── generate-function@2.0.0 
  │ │ │ │   ├─┬ generate-object-property@1.2.0 
  │ │ │ │   │ └── is-property@1.0.2 
  │ │ │ │   ├── jsonpointer@4.0.1 
  │ │ │ │   └── xtend@4.0.1 
  │ │ │ ├─┬ hawk@3.1.3 
  │ │ │ │ ├── boom@2.10.1 
  │ │ │ │ ├── cryptiles@2.0.5 
  │ │ │ │ ├── hoek@2.16.3 
  │ │ │ │ └── sntp@1.0.9 
  │ │ │ ├─┬ http-signature@1.1.1 
  │ │ │ │ ├── assert-plus@0.2.0 
  │ │ │ │ ├─┬ jsprim@1.4.1 
  │ │ │ │ │ ├── assert-plus@1.0.0 
  │ │ │ │ │ ├── extsprintf@1.3.0 
  │ │ │ │ │ ├── json-schema@0.2.3 
  │ │ │ │ │ └─┬ verror@1.10.0 
  │ │ │ │ │   └── assert-plus@1.0.0 
  │ │ │ │ └─┬ sshpk@1.13.1 
  │ │ │ │   ├── asn1@0.2.3 
  │ │ │ │   ├── assert-plus@1.0.0 
  │ │ │ │   ├── bcrypt-pbkdf@1.0.1 
  │ │ │ │   ├─┬ dashdash@1.14.1 
  │ │ │ │   │ └── assert-plus@1.0.0 
  │ │ │ │   ├── ecc-jsbn@0.1.1 
  │ │ │ │   ├─┬ getpass@0.1.7 
  │ │ │ │   │ └── assert-plus@1.0.0 
  │ │ │ │   ├── jsbn@0.1.1 
  │ │ │ │   └── tweetnacl@0.14.5 
  │ │ │ ├── is-typedarray@1.0.0 
  │ │ │ ├── json-stringify-safe@5.0.1 
  │ │ │ ├─┬ mime-types@2.1.17 
  │ │ │ │ └── mime-db@1.30.0 
  │ │ │ ├── oauth-sign@0.8.2 
  │ │ │ ├── qs@6.3.2 
  │ │ │ ├── stringstream@0.0.5 
  │ │ │ ├─┬ tough-cookie@2.3.3 
  │ │ │ │ └── punycode@1.4.1 
  │ │ │ ├── tunnel-agent@0.4.3 
  │ │ │ └── uuid@3.1.0 
  │ │ └─┬ tar@2.2.1 
  │ │   ├── block-stream@0.0.9 
  │ │   └── fstream@1.0.11 
  │ ├─┬ chalk@2.1.0 
  │ │ ├─┬ ansi-styles@3.2.0 
  │ │ │ └─┬ color-convert@1.9.0 
  │ │ │   └── color-name@1.1.3 
  │ │ └── escape-string-regexp@1.0.5 
  │ ├─┬ chokidar@1.6.0 
  │ │ ├─┬ anymatch@1.3.2 
  │ │ │ ├─┬ micromatch@2.3.11 
  │ │ │ │ ├─┬ arr-diff@2.0.0 
  │ │ │ │ │ └── arr-flatten@1.1.0 
  │ │ │ │ ├── array-unique@0.2.1 
  │ │ │ │ ├─┬ braces@1.8.5 
  │ │ │ │ │ ├─┬ expand-range@1.8.2 
  │ │ │ │ │ │ └─┬ fill-range@2.2.3 
  │ │ │ │ │ │   ├── is-number@2.1.0 
  │ │ │ │ │ │   ├── isobject@2.1.0 
  │ │ │ │ │ │   ├─┬ randomatic@1.1.7 
  │ │ │ │ │ │   │ ├─┬ is-number@3.0.0 
  │ │ │ │ │ │   │ │ └── kind-of@3.2.2 
  │ │ │ │ │ │   │ └── kind-of@4.0.0 
  │ │ │ │ │ │   └── repeat-string@1.6.1 
  │ │ │ │ │ ├── preserve@0.2.0 
  │ │ │ │ │ └── repeat-element@1.1.2 
  │ │ │ │ ├─┬ expand-brackets@0.1.5 
  │ │ │ │ │ └── is-posix-bracket@0.1.1 
  │ │ │ │ ├── extglob@0.3.2 
  │ │ │ │ ├── filename-regex@2.0.1 
  │ │ │ │ ├─┬ kind-of@3.2.2 
  │ │ │ │ │ └── is-buffer@1.1.5 
  │ │ │ │ ├─┬ object.omit@2.0.1 
  │ │ │ │ │ ├─┬ for-own@0.1.5 
  │ │ │ │ │ │ └── for-in@1.0.2 
  │ │ │ │ │ └── is-extendable@0.1.1 
  │ │ │ │ ├─┬ parse-glob@3.0.4 
  │ │ │ │ │ ├── glob-base@0.3.0 
  │ │ │ │ │ └── is-dotfile@1.0.3 
  │ │ │ │ └─┬ regex-cache@0.4.4 
  │ │ │ │   └─┬ is-equal-shallow@0.1.3 
  │ │ │ │     └── is-primitive@2.0.0 
  │ │ │ └─┬ normalize-path@2.1.1 
  │ │ │   └── remove-trailing-separator@1.1.0 
  │ │ ├── async-each@1.0.1 
  │ │ ├── glob-parent@2.0.0 
  │ │ ├─┬ is-binary-path@1.0.1 
  │ │ │ └── binary-extensions@1.10.0 
  │ │ ├─┬ is-glob@2.0.1 
  │ │ │ └── is-extglob@1.0.0 
  │ │ └─┬ readdirp@2.1.0 
  │ │   ├─┬ readable-stream@2.3.3 
  │ │   │ ├── core-util-is@1.0.2 
  │ │   │ ├── isarray@1.0.0 
  │ │   │ ├── process-nextick-args@1.0.7 
  │ │   │ ├── safe-buffer@5.1.1 
  │ │   │ ├── string_decoder@1.0.3 
  │ │   │ └── util-deprecate@1.0.2 
  │ │   └── set-immediate-shim@1.0.1 
  │ ├─┬ cross-spawn@4.0.0 
  │ │ ├─┬ lru-cache@4.1.1 
  │ │ │ ├── pseudomap@1.0.2 
  │ │ │ └── yallist@2.1.2 
  │ │ └─┬ which@1.3.0 
  │ │   └── isexe@2.0.0 
  │ ├── find-parent-dir@0.3.0 
  │ ├── firstline@1.2.1 
  │ ├─┬ fs-extra@0.30.0 
  │ │ ├── klaw@1.3.1 
  │ │ └── rimraf@2.6.2 
  │ ├── lodash@4.13.1 
  │ ├── minimist@1.2.0 
  │ ├── murmur-hash-js@1.0.0 
  │ ├─┬ node-elm-compiler@4.3.3 
  │ │ ├─┬ find-elm-dependencies@1.0.2 
  │ │ │ ├── firstline@1.2.0 
  │ │ │ └── lodash@4.14.2 
  │ │ ├── lodash@4.14.2 
  │ │ └─┬ temp@0.8.3 
  │ │   ├── os-tmpdir@1.0.2 
  │ │   └── rimraf@2.2.8 
  │ ├─┬ supports-color@4.2.0 
  │ │ └── has-flag@2.0.0 
  │ └── xmlbuilder@8.2.2 
  ├─┬ fs-extra@2.1.2 
  │ ├── graceful-fs@4.1.11 
  │ └── jsonfile@2.4.0 
  ├─┬ glob@7.1.2 
  │ ├── fs.realpath@1.0.0 
  │ ├─┬ inflight@1.0.6 
  │ │ └── wrappy@1.0.2 
  │ ├── inherits@2.0.3 
  │ ├─┬ minimatch@3.0.4 
  │ │ └─┬ brace-expansion@1.1.8 
  │ │   ├── balanced-match@1.0.0 
  │ │   └── concat-map@0.0.1 
  │ ├── once@1.4.0 
  │ └── path-is-absolute@1.0.1 
  ├─┬ prompt@1.0.0 
  │ ├── colors@1.1.2 
  │ ├── pkginfo@0.4.1 
  │ ├─┬ read@1.0.7 
  │ │ └── mute-stream@0.0.7 
  │ ├── revalidator@0.1.8 
  │ ├─┬ utile@0.3.0 
  │ │ ├── async@0.9.2 
  │ │ ├── deep-equal@0.2.2 
  │ │ ├── i@0.3.6 
  │ │ ├─┬ mkdirp@0.5.1 
  │ │ │ └── minimist@0.0.8 
  │ │ └── ncp@1.0.1 
  │ └─┬ winston@2.1.1 
  │   ├── async@1.0.0 
  │   ├── colors@1.0.3 
  │   ├── cycle@1.0.3 
  │   ├── eyes@0.1.8 
  │   ├── isstream@0.1.2 
  │   ├── pkginfo@0.3.1 
  │   └── stack-trace@0.0.10 
  ├── symlink-or-copy@1.1.8 
  └─┬ yargs@7.1.0 
    ├── camelcase@3.0.0 
    ├─┬ cliui@3.2.0 
    │ ├─┬ strip-ansi@3.0.1 
    │ │ └── ansi-regex@2.1.1 
    │ └── wrap-ansi@2.1.0 
    ├── decamelize@1.2.0 
    ├── get-caller-file@1.0.2 
    ├─┬ os-locale@1.4.0 
    │ └─┬ lcid@1.0.0 
    │   └── invert-kv@1.0.0 
    ├─┬ read-pkg-up@1.0.1 
    │ ├─┬ find-up@1.1.2 
    │ │ ├── path-exists@2.1.0 
    │ │ └─┬ pinkie-promise@2.0.1 
    │ │   └── pinkie@2.0.4 
    │ └─┬ read-pkg@1.1.0 
    │   ├─┬ load-json-file@1.1.0 
    │   │ ├─┬ parse-json@2.2.0 
    │   │ │ └─┬ error-ex@1.3.1 
    │   │ │   └── is-arrayish@0.2.1 
    │   │ ├── pify@2.3.0 
    │   │ └─┬ strip-bom@2.0.0 
    │   │   └── is-utf8@0.2.1 
    │   ├─┬ normalize-package-data@2.4.0 
    │   │ ├── hosted-git-info@2.5.0 
    │   │ ├─┬ is-builtin-module@1.0.0 
    │   │ │ └── builtin-modules@1.1.1 
    │   │ ├── semver@5.4.1 
    │   │ └─┬ validate-npm-package-license@3.0.1 
    │   │   ├─┬ spdx-correct@1.0.2 
    │   │   │ └── spdx-license-ids@1.2.2 
    │   │   └── spdx-expression-parse@1.0.4 
    │   └── path-type@1.1.0 
    ├── require-directory@2.1.1 
    ├── require-main-filename@1.0.1 
    ├── set-blocking@2.0.0 
    ├─┬ string-width@1.0.2 
    │ ├── code-point-at@1.1.0 
    │ └─┬ is-fullwidth-code-point@1.0.0 
    │   └── number-is-nan@1.0.1 
    ├── which-module@1.0.0 
    ├── y18n@3.2.1 
    └── yargs-parser@5.0.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/elm-i18n/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 33% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0963 took 2.1057s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected character '#' (1:78) on program #!/usr/bin/env node

"use strict";

const argv = require("yargs")
    .option("language", {alias: "l", describe: "Please provide the language code that you wish to set as the base language."})
    .option("yes", {describe: "Reply 'yes' to all automated prompts."})
    .option("output", {describe: "If set elm-make will be called to compile a localized version of your app which will be placed in the given directory."})
    .option("src", {default: "src", describe: "The location of your elm code base. Only relevant if output is set."})
    .option("elmFile", {default: "Main.elm", describe: "File to be compiled by elm-make. Only relevant if output is set."})
    .option("rootModule", {default: "Translation", describe: "The name of the root module containing all localization modules."})
    .help()
    .demand(["language"])
    .argv;
const fs = require("fs-extra");
const glob = require("glob");
const path = require("path");
const prompt = require("prompt");
const symlinkOrCopySync = require("symlink-or-copy").sync;

const currentDir = process.cwd();

// baseDir is the location of the translation root module as referenced in your elm app
const baseDir = path.join(currentDir, argv.src, argv.rootModule);

// check if language exists
const languageDir = path.join(currentDir, argv.rootModule, argv.language);
if (!fs.existsSync(languageDir)) {
    console.error("Language module not found", languageDir);
    process.exit(1);
}

// check if base dir exists and delete if needed (after prompt)
if (fs.existsSync(baseDir)) {
    if (!argv.yes) {
        prompt.start();
        console.log("There already is a translation at", baseDir);
        console.log("Should I continue and replace it with <" + argv.language + ">?");
        console.log("(use command line argument --yes to skip this prompt)");
        console.log("enter 'y' to continue");

        prompt.get(["remove"], function(err, result) {
            if (result.remove !== "y") {
                console.log("aborting");
                process.exit(1);
            }

            fs.removeSync(baseDir);
            main();
        });
    } else {
        fs.removeSync(baseDir);
        main();
    }
} else {
    main();
}

/**
 * main - Copies/symlinks the language into place
 */
function main() {
    console.log("Will create symlink from " + languageDir + " to " + baseDir);
    let relativeLanguageDir = path.relative(currentDir, languageDir);
    let relativeBaseDir = path.relative(currentDir, baseDir);
    console.log("Using relative paths " + relativeLanguageDir + " to " + relativeBaseDir);
    symlinkOrCopySync(relativeLanguageDir, relativeBaseDir);

    // clean out elm-stuff cache
    glob(path.join(currentDir, "/elm-stuff/**/user/project/*/"+argv.rootModule+"*"), function(er, files) {
        files.forEach(function(file) {
            console.log("clearing out cache at", file);
            fs.removeSync(file);
        });
        if (argv.output) {
            build(argv.output);
        }
    });
}


/**
 * build - Builds the elm app with the current language.
 *
 * @param  {type} outputDir The directory to which the elm build should be written.
 *                          Files will be named according to the current language
 */
function build(outputDir) {
    let exec = require("child_process").exec;
    let elmFile = path.join(argv.src, argv.elmFile);
    let cmd = "elm-make " + elmFile + " --yes --output " + argv.output + "/" + argv.language + ".js";
    console.log(cmd);
    exec(cmd, (err, stdout, stderr) => {
        if(err) {
            console.error(err);
            return;
        }
        console.log(stdout);
    });
}
 at SyntaxError: Unexpected character '#' (1:78)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp$7.getTokenFromCode (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2756:10)
    at Parser.pp$7.readToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2477:17)
    at Parser.readToken (/root/ExpoSE/lib/Tropigate/bin/Tokens.js:124:26)
    at Parser.pp$7.nextToken (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2468:15)
    at Parser.pp$7.next (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2413:10)
    at Parser.pp.eat (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:536:12)
    at Parser.pp.semicolon (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:581:15)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:918:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
