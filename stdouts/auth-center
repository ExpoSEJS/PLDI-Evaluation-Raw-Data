/root/Targets/auth-center
└─┬ auth-center@1.8.1 
  ├── co@4.6.0 
  ├── commander@2.11.0 
  ├─┬ inquirer@3.3.0 
  │ ├── ansi-escapes@3.0.0 
  │ ├─┬ chalk@2.1.0 
  │ │ ├─┬ ansi-styles@3.2.0 
  │ │ │ └─┬ color-convert@1.9.0 
  │ │ │   └── color-name@1.1.3 
  │ │ ├── escape-string-regexp@1.0.5 
  │ │ └─┬ supports-color@4.4.0 
  │ │   └── has-flag@2.0.0 
  │ ├─┬ cli-cursor@2.1.0 
  │ │ └─┬ restore-cursor@2.0.0 
  │ │   ├─┬ onetime@2.0.1 
  │ │   │ └── mimic-fn@1.1.0 
  │ │   └── signal-exit@3.0.2 
  │ ├── cli-width@2.2.0 
  │ ├─┬ external-editor@2.0.5 
  │ │ ├── iconv-lite@0.4.19 
  │ │ ├── jschardet@1.5.1 
  │ │ └─┬ tmp@0.0.33 
  │ │   └── os-tmpdir@1.0.2 
  │ ├── figures@2.0.0 
  │ ├── lodash@4.17.4 
  │ ├── mute-stream@0.0.7 
  │ ├─┬ run-async@2.3.0 
  │ │ └── is-promise@2.1.0 
  │ ├── rx-lite@4.0.8 
  │ ├── rx-lite-aggregates@4.0.8 
  │ ├─┬ string-width@2.1.1 
  │ │ └── is-fullwidth-code-point@2.0.0 
  │ ├─┬ strip-ansi@4.0.0 
  │ │ └── ansi-regex@3.0.0 
  │ └── through@2.3.8 
  ├─┬ koa@1.4.0 
  │ ├─┬ accepts@1.3.4 
  │ │ └── negotiator@0.6.1 
  │ ├─┬ composition@2.3.0 
  │ │ └── any-promise@1.3.0 
  │ ├── content-disposition@0.5.2 
  │ ├── content-type@1.0.4 
  │ ├─┬ cookies@0.7.1 
  │ │ ├── depd@1.1.1 
  │ │ └── keygrip@1.0.2 
  │ ├─┬ debug@3.1.0 
  │ │ └── ms@2.0.0 
  │ ├── delegates@1.0.0 
  │ ├── destroy@1.0.4 
  │ ├── error-inject@1.0.0 
  │ ├── escape-html@1.0.3 
  │ ├── fresh@0.3.0 
  │ ├─┬ http-assert@1.3.0 
  │ │ └── deep-equal@1.0.1 
  │ ├─┬ http-errors@1.6.2 
  │ │ ├── inherits@2.0.3 
  │ │ └── setprototypeof@1.0.3 
  │ ├── koa-compose@2.5.1 
  │ ├── koa-is-json@1.0.0 
  │ ├─┬ mime-types@2.1.17 
  │ │ └── mime-db@1.30.0 
  │ ├─┬ on-finished@2.3.0 
  │ │ └── ee-first@1.1.1 
  │ ├── only@0.0.2 
  │ ├── parseurl@1.3.2 
  │ ├── statuses@1.3.1 
  │ ├─┬ type-is@1.6.15 
  │ │ └── media-typer@0.3.0 
  │ └── vary@1.1.2 
  ├─┬ koa-bodyparser@2.5.0 
  │ ├─┬ co-body@5.1.1 
  │ │ ├── inflation@2.0.0 
  │ │ ├── qs@6.5.1 
  │ │ └─┬ raw-body@2.3.2 
  │ │   ├── bytes@3.0.0 
  │ │   └── unpipe@1.0.0 
  │ └── copy-to@2.0.1 
  ├─┬ koa-csrf@2.5.0 
  │ └─┬ csrf@3.0.6 
  │   ├── rndm@1.2.0 
  │   └── tsscmp@1.0.5 
  ├─┬ koa-generic-session@1.11.6 
  │ ├── crc@3.4.4 
  │ └─┬ uid-safe@2.1.4 
  │   └── random-bytes@1.0.0 
  ├─┬ koa-logger@1.3.1 
  │ ├── bytes@1.0.0 
  │ ├─┬ chalk@1.1.3 
  │ │ ├── ansi-styles@2.2.1 
  │ │ ├─┬ has-ansi@2.0.0 
  │ │ │ └── ansi-regex@2.1.1 
  │ │ ├─┬ strip-ansi@3.0.1 
  │ │ │ └── ansi-regex@2.1.1 
  │ │ └── supports-color@2.0.0 
  │ ├── humanize-number@0.0.2 
  │ └── passthrough-counter@1.0.0 
  ├─┬ koa-orm@1.2.0 
  │ ├─┬ sequelize@3.30.4 
  │ │ ├── bluebird@3.5.0 
  │ │ ├── dottie@1.1.1 
  │ │ ├── generic-pool@2.4.2 
  │ │ ├── inflection@1.12.0 
  │ │ ├── lodash@4.12.0 
  │ │ ├── moment@2.18.1 
  │ │ ├── moment-timezone@0.5.13 
  │ │ ├─┬ retry-as-promised@2.3.1 
  │ │ │ └── debug@2.6.9 
  │ │ ├── semver@5.4.1 
  │ │ ├── shimmer@1.1.0 
  │ │ ├─┬ terraformer-wkt-parser@1.1.2 
  │ │ │ └─┬ terraformer@1.0.8 
  │ │ │   └── @types/geojson@1.0.4 
  │ │ ├── toposort-class@1.0.1 
  │ │ ├── uuid@3.1.0 
  │ │ ├── validator@5.7.0 
  │ │ └── wkx@0.2.0 
  │ └── squel@5.12.0 
  ├─┬ koa-router@5.4.2 
  │ ├── debug@2.6.9 
  │ ├── methods@1.1.2 
  │ └─┬ path-to-regexp@1.7.0 
  │   └── isarray@0.0.1 
  ├─┬ koa-static@2.1.0 
  │ ├── debug@2.6.9 
  │ └─┬ koa-send@3.3.0 
  │   ├── debug@2.6.9 
  │   ├─┬ mz@2.7.0 
  │   │ ├── object-assign@4.1.1 
  │   │ └─┬ thenify-all@1.6.0 
  │   │   └── thenify@3.3.0 
  │   └─┬ resolve-path@1.3.3 
  │     ├─┬ http-errors@1.5.1 
  │     │ └── setprototypeof@1.0.2 
  │     └── path-is-absolute@1.0.1 
  ├─┬ koa-view@1.1.1 
  │ └─┬ nunjucks@3.0.1 
  │   ├── a-sync-waterfall@1.0.0 
  │   ├── asap@2.0.6 
  │   ├─┬ chokidar@1.7.0 
  │   │ ├─┬ anymatch@1.3.2 
  │   │ │ ├─┬ micromatch@2.3.11 
  │   │ │ │ ├─┬ arr-diff@2.0.0 
  │   │ │ │ │ └── arr-flatten@1.1.0 
  │   │ │ │ ├── array-unique@0.2.1 
  │   │ │ │ ├─┬ braces@1.8.5 
  │   │ │ │ │ ├─┬ expand-range@1.8.2 
  │   │ │ │ │ │ └─┬ fill-range@2.2.3 
  │   │ │ │ │ │   ├── is-number@2.1.0 
  │   │ │ │ │ │   ├─┬ isobject@2.1.0 
  │   │ │ │ │ │   │ └── isarray@1.0.0 
  │   │ │ │ │ │   ├─┬ randomatic@1.1.7 
  │   │ │ │ │ │   │ ├─┬ is-number@3.0.0 
  │   │ │ │ │ │   │ │ └── kind-of@3.2.2 
  │   │ │ │ │ │   │ └── kind-of@4.0.0 
  │   │ │ │ │ │   └── repeat-string@1.6.1 
  │   │ │ │ │ ├── preserve@0.2.0 
  │   │ │ │ │ └── repeat-element@1.1.2 
  │   │ │ │ ├─┬ expand-brackets@0.1.5 
  │   │ │ │ │ └── is-posix-bracket@0.1.1 
  │   │ │ │ ├── extglob@0.3.2 
  │   │ │ │ ├── filename-regex@2.0.1 
  │   │ │ │ ├─┬ kind-of@3.2.2 
  │   │ │ │ │ └── is-buffer@1.1.5 
  │   │ │ │ ├─┬ object.omit@2.0.1 
  │   │ │ │ │ ├─┬ for-own@0.1.5 
  │   │ │ │ │ │ └── for-in@1.0.2 
  │   │ │ │ │ └── is-extendable@0.1.1 
  │   │ │ │ ├─┬ parse-glob@3.0.4 
  │   │ │ │ │ ├── glob-base@0.3.0 
  │   │ │ │ │ └── is-dotfile@1.0.3 
  │   │ │ │ └─┬ regex-cache@0.4.4 
  │   │ │ │   └─┬ is-equal-shallow@0.1.3 
  │   │ │ │     └── is-primitive@2.0.0 
  │   │ │ └─┬ normalize-path@2.1.1 
  │   │ │   └── remove-trailing-separator@1.1.0 
  │   │ ├── async-each@1.0.1 
  │   │ ├── glob-parent@2.0.0 
  │   │ ├─┬ is-binary-path@1.0.1 
  │   │ │ └── binary-extensions@1.10.0 
  │   │ ├─┬ is-glob@2.0.1 
  │   │ │ └── is-extglob@1.0.0 
  │   │ └─┬ readdirp@2.1.0 
  │   │   ├── graceful-fs@4.1.11 
  │   │   ├─┬ minimatch@3.0.4 
  │   │   │ └─┬ brace-expansion@1.1.8 
  │   │   │   ├── balanced-match@1.0.0 
  │   │   │   └── concat-map@0.0.1 
  │   │   ├─┬ readable-stream@2.3.3 
  │   │   │ ├── core-util-is@1.0.2 
  │   │   │ ├── isarray@1.0.0 
  │   │   │ ├── process-nextick-args@1.0.7 
  │   │   │ ├── safe-buffer@5.1.1 
  │   │   │ ├── string_decoder@1.0.3 
  │   │   │ └── util-deprecate@1.0.2 
  │   │   └── set-immediate-shim@1.0.1 
  │   └─┬ yargs@3.32.0 
  │     ├── camelcase@2.1.1 
  │     ├─┬ cliui@3.2.0 
  │     │ ├─┬ string-width@1.0.2 
  │     │ │ └── is-fullwidth-code-point@1.0.0 
  │     │ ├─┬ strip-ansi@3.0.1 
  │     │ │ └── ansi-regex@2.1.1 
  │     │ └─┬ wrap-ansi@2.1.0 
  │     │   ├─┬ string-width@1.0.2 
  │     │   │ └── is-fullwidth-code-point@1.0.0 
  │     │   └─┬ strip-ansi@3.0.1 
  │     │     └── ansi-regex@2.1.1 
  │     ├── decamelize@1.2.0 
  │     ├─┬ os-locale@1.4.0 
  │     │ └─┬ lcid@1.0.0 
  │     │   └── invert-kv@1.0.0 
  │     ├─┬ string-width@1.0.2 
  │     │ ├── code-point-at@1.1.0 
  │     │ ├─┬ is-fullwidth-code-point@1.0.0 
  │     │ │ └── number-is-nan@1.0.1 
  │     │ └─┬ strip-ansi@3.0.1 
  │     │   └── ansi-regex@2.1.1 
  │     ├── window-size@0.1.4 
  │     └── y18n@3.2.1 
  ├── lodash.merge@4.6.0 
  ├─┬ lodash.template@4.4.0 
  │ ├── lodash._reinterpolate@3.0.0 
  │ └── lodash.templatesettings@4.1.0 
  ├── nodemailer@4.1.1 
  ├── notp@2.0.3 
  ├── qr-image@3.2.0 
  ├── thirty-two@1.0.2 
  └── validator@8.2.0 

Setup Done exists, not setting up
:../FeatureTester/libs/:/root/Targets/auth-center/node_modules
Set Default Z3_PATH to ./node_modules/z3javascript/bin/libz3.so
ExpoSE Master: /root/ExpoSE/lib/Harness/src/harness.js max concurrent: 16 max paths: 1000000
Setting timeout to 900000
*** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ****** [1 done /0 queued / 0 running / 1 errors / 28.000000000000004% coverage ] ***
*-- Stat Module Output --*
*-- concretizations: ["defineProperty","bound log"]
*-- Stat Module Done --*
*-- Test Case {"_bound":0} start 0.0478 took 4.4352s
*-- Errors occured in test {"_bound":0}
* Error: Tropigate failed because SyntaxError: Unexpected token (20:4) on program 
'use strict';

/**
 * Module dependencies.
 */

var debug = require('debug')('koa:application');
var Emitter = require('events').EventEmitter;
var compose_es7 = require('composition');
var onFinished = require('on-finished');
var response = require('./response');
var compose = require('koa-compose');
var isJSON = require('koa-is-json');
var context = require('./context');
var request = require('./request');
var statuses = require('statuses');
var Cookies = require('cookies');
var accepts = require('accepts');
var assert = require('assert');
var Stream = require('stream');
var http = require('http');
var only = require('only');
var co = require('co');

/**
 * Application prototype.
 */

var app = Application.prototype;

/**
 * Expose `Application`.
 */

module.exports = Application;

/**
 * Initialize a new `Application`.
 *
 * @api public
 */

function Application() {
  if (!(this instanceof Application)) return new Application;
  this.env = process.env.NODE_ENV || 'development';
  this.subdomainOffset = 2;
  this.middleware = [];
  this.proxy = false;
  this.context = Object.create(context);
  this.request = Object.create(request);
  this.response = Object.create(response);
}

/**
 * Inherit from `Emitter.prototype`.
 */

Object.setPrototypeOf(Application.prototype, Emitter.prototype);

/**
 * Shorthand for:
 *
 *    http.createServer(app.callback()).listen(...)
 *
 * @param {Mixed} ...
 * @return {Server}
 * @api public
 */

app.listen = function(){
  debug('listen');
  var server = http.createServer(this.callback());
  return server.listen.apply(server, arguments);
};

/**
 * Return JSON representation.
 * We only bother showing settings.
 *
 * @return {Object}
 * @api public
 */

app.inspect =
app.toJSON = function(){
  return only(this, [
    'subdomainOffset',
    'proxy',
    'env'
  ]);
};

/**
 * Use the given middleware `fn`.
 *
 * @param {GeneratorFunction} fn
 * @return {Application} self
 * @api public
 */

app.use = function(fn){
  if (!this.experimental) {
    // es7 async functions are not allowed,
    // so we have to make sure that `fn` is a generator function
    assert(fn && 'GeneratorFunction' == fn.constructor.name, 'app.use() requires a generator function');
  }
  debug('use %s', fn._name || fn.name || '-');
  this.middleware.push(fn);
  return this;
};

/**
 * Return a request handler callback
 * for node's native http server.
 *
 * @return {Function}
 * @api public
 */

app.callback = function(){
  if (this.experimental) {
    console.error('Experimental ES7 Async Function support is deprecated. Please look into Koa v2 as the middleware signature has changed.')
  }
  var fn = this.experimental
    ? compose_es7(this.middleware)
    : co.wrap(compose(this.middleware));
  var self = this;

  if (!this.listeners('error').length) this.on('error', this.onerror);

  return function handleRequest(req, res){
    res.statusCode = 404;
    var ctx = self.createContext(req, res);
    onFinished(res, ctx.onerror);
    fn.call(ctx).then(function handleResponse() {
      respond.call(ctx);
    }).catch(ctx.onerror);
  }
};

/**
 * Initialize a new context.
 *
 * @api private
 */

app.createContext = function(req, res){
  var context = Object.create(this.context);
  var request = context.request = Object.create(this.request);
  var response = context.response = Object.create(this.response);
  context.app = request.app = response.app = this;
  context.req = request.req = response.req = req;
  context.res = request.res = response.res = res;
  request.ctx = response.ctx = context;
  request.response = response;
  response.request = request;
  context.onerror = context.onerror.bind(context);
  context.originalUrl = request.originalUrl = req.url;
  context.cookies = new Cookies(req, res, {
    keys: this.keys,
    secure: request.secure
  });
  context.accept = request.accept = accepts(req);
  context.state = {};
  return context;
};

/**
 * Default error handler.
 *
 * @param {Error} err
 * @api private
 */

app.onerror = function(err){
  assert(err instanceof Error, 'non-error thrown: ' + err);

  if (404 == err.status || err.expose) return;
  if (this.silent) return;
  // DEPRECATE env-specific logging in v2
  if ('test' == this.env) return;

  var msg = err.stack || err.toString();
  console.error();
  console.error(msg.replace(/^/gm, '  '));
  console.error();
};

/**
 * Response helper.
 */

function respond() {
  // allow bypassing koa
  if (false === this.respond) return;

  var res = this.res;
  if (res.headersSent || !this.writable) return;

  var body = this.body;
  var code = this.status;

  // ignore body
  if (statuses.empty[code]) {
    // strip headers
    this.body = null;
    return res.end();
  }

  if ('HEAD' == this.method) {
    if (isJSON(body)) this.length = Buffer.byteLength(JSON.stringify(body));
    return res.end();
  }

  // status body
  if (null == body) {
    this.type = 'text';
    body = this.message || String(code);
    this.length = Buffer.byteLength(body);
    return res.end(body);
  }

  // responses
  if (Buffer.isBuffer(body)) return res.end(body);
  if ('string' == typeof body) return res.end(body);
  if (body instanceof Stream) return body.pipe(res);

  // body: json
  body = JSON.stringify(body);
  this.length = Buffer.byteLength(body);
  res.end(body);
}
 at SyntaxError: Unexpected token (20:4)
    at Parser.pp$4.raise (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:2221:15)
    at Parser.pp.unexpected (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:603:10)
    at Parser.pp$2.parseBindingAtom (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1417:12)
    at Parser.parseBindingAtom (/root/ExpoSE/lib/Tropigate/bin/FunctionSignatures.js:49:30)
    at Parser.pp$1.parseVarId (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1049:20)
    at Parser.pp$1.parseVar (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:1032:14)
    at Parser.pp$1.parseVarStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:917:10)
    at Parser.pp$1.parseStatement (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:706:19)
    at Parser.parseStatement (/root/ExpoSE/lib/Tropigate/bin/Statements.js:104:30)
    at Parser.pp$1.parseTopLevel (/root/ExpoSE/lib/Tropigate/node_modules/acorn/dist/acorn.js:638:25)
*-- Replay with NO_COMPILE=1 expoSE replay '/root/ExpoSE/lib/Harness/src/harness.js' '{"_bound":0}'
*-- Coverage Data
*- File /root/ExpoSE/lib/Harness/src/harness.js. Coverage (Term): 18% Coverage (LOC): 24%
*- File /root/ExpoSE/lib/S$/bin/symbols.js. Coverage (Term): 16% Coverage (LOC): 34%
*- File /root/Targets/auth-center/node_modules/auth-center/app/index.js. Coverage (Term): 13% Coverage (LOC): 13%
*- Re-run with EXPOSE_PRINT_COVERAGE=1 to print line by line coverage information
** ExpoSE Finished. 1 paths with 1 errors **
