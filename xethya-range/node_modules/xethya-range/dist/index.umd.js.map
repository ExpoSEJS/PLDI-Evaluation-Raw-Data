{"version":3,"file":"index.umd.js","sources":["../src/Range.js","../src/RangeableObject.js"],"sourcesContent":["/**\n * xethya-range\n *\n * Copyright © 2016 Joel A. Villarreal Bertoldi. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\n/**\n * Represents a range of number, described through boundaries.\n */\nclass Range {\n  /**\n   * Instantiates a Range object.\n   * @param  {Number} lowerBound The minimum number in this range.\n   * @param  {Number} upperBound The maximum number in this range.\n   * @constructor\n   * @throws {Error} If lowerBound and upperBound are the same.\n   */\n  constructor(lowerBound, upperBound) {\n    if (typeof lowerBound === 'undefined') {\n      throw new Error('Range#constructor: lowerBound is required');\n    }\n    if (typeof lowerBound !== 'number') {\n      throw new Error('Range#constructor: lowerBound must be a Number');\n    }\n    if (typeof upperBound === 'undefined') {\n      throw new Error('Range#constructor: upperBound is required');\n    }\n    if (typeof upperBound !== 'number') {\n      throw new Error('Range#constructor: upperBound must be a Number');\n    }\n    if (lowerBound === upperBound) {\n      throw new Error('Range#constructor: lowerBound and upperBound cannot be equal');\n    }\n\n    /**\n     * @property {Number} lowerBound The minimum number in this range.\n     */\n    this.lowerBound = Math.min(lowerBound, upperBound);\n\n    /**\n     * @property {Number} upperBound The maximum number in this range.\n     */\n    this.upperBound = Math.max(lowerBound, upperBound);\n  }\n\n  /**\n   * Checks if a value is in the defined range.\n   *\n   * @param  {Number} value Value to compare.\n   * @return {Boolean} true if in range, false otherwise.\n   * @function\n   */\n  includes(value) {\n    if (typeof value === 'undefined') {\n      throw new Error('Range#includes: value is required');\n    }\n    if (typeof value !== 'number') {\n      throw new Error('Range#includes: value must be a Number');\n    }\n    return this.lowerBound <= value && value <= this.upperBound;\n  }\n\n  /**\n   * Converts the Range object to a string representation.\n   * @return {String}\n   * @function\n   */\n  toString() {\n    return `${this.lowerBound.toString()} ~ ${this.upperBound.toString()}`;\n  }\n\n  /**\n   * Creates a Range from an array of two numbers.\n   *\n   * @param  {Array.<Number>} values Boundaries of the range.\n   * @return {Range}\n   * @function\n   * @static\n   */\n  static fromArray(values) {\n    if (!Array.isArray(values)) {\n      throw new Error('Range#fromArray: values must be an Array of 2 numerical elements');\n    }\n    if (values.length !== 2) {\n      throw new Error('Range#fromArray: values must be an Array of 2 numerical elements');\n    }\n    if (!values.every(value => typeof value === 'number')) {\n      throw new Error('Range#fromArray: values must be an Array of 2 numerical elements');\n    }\n    return new Range(Number(values[0]), Number(values[1]));\n  }\n\n  /**\n   * Creates a Range from a string-based notation.\n   *\n   * @param  {String} notedRange A string representation of a Range,\n   * using delimiters. Accepted formats: x,y x;y x:y x~y.\n   * @return {Range}\n   * @function\n   * @static\n   */\n  static fromNotation(notedRange) {\n    if (!notedRange) {\n      throw new Error('Range#fromNotation: notedRange must use one of these formats: '\n        + 'x,y x;y x:y x~y');\n    }\n    if (typeof notedRange !== 'string') {\n      throw new Error('Range#fromNotation: notedRange must use one of these formats: '\n        + 'x,y x;y x:y x~y');\n    }\n\n    let range;\n    const allowedDelimiters = [',', ';', ':', '~'];\n    if (!allowedDelimiters.some(delimiter => notedRange.includes(delimiter))) {\n      throw new Error('Range#fromNotation: notedRange must use one of these formats: '\n        + 'x,y x;y x:y x~y');\n    }\n    let delimiterFound = false;\n    while (!delimiterFound) {\n      const delimiter = allowedDelimiters.shift();\n      delimiterFound = notedRange.includes(delimiter);\n      if (delimiterFound) {\n        const data = notedRange.split(delimiter).map(d => d.trim());\n        if (data.length !== 2) {\n          throw new Error('Range#fromNotation: notedRange must use one of these formats: '\n            + 'x,y x;y x:y x~y');\n        } else {\n          range = Range.fromArray(data.map(d => Number(d)));\n        }\n      }\n    }\n    if (!range) {\n      throw new Error('Range#fromNotation: notedRange must use one of these formats: '\n        + 'x,y x;y x:y x~y');\n    }\n    return range;\n  }\n}\n\nexport default Range;\n","/**\n * xethya-range\n *\n * Copyright © 2016 Joel A. Villarreal Bertoldi. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport { Mixin } from 'mixwith';\nimport Range from './Range';\n\nconst RangeableObject = Mixin((superclass) => class extends superclass {\n  constructor(...args) {\n    super(...args);\n    this.__meta__ = Object.assign({}, this.__meta__, {\n      rangeDefinition: new Range(0, Infinity)\n    });\n  }\n\n  get rangeDefinition() {\n    return this.__meta__.rangeDefinition;\n  }\n\n  set rangeDefinition(_) {\n    throw new Error('RangeableObject#rangeDefinition: object cannot be replaced');\n  }\n});\n\nexport default RangeableObject;\n"],"names":["Range","lowerBound","upperBound","Error","Math","min","max","value","toString","values","Array","isArray","length","every","Number","notedRange","range","allowedDelimiters","some","includes","delimiter","delimiterFound","shift","data","split","map","d","trim","fromArray","RangeableObject","Mixin","superclass","args","__meta__","rangeDefinition","Infinity","_"],"mappings":"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"}