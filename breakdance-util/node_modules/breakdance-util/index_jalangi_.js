J$.iids = {"8":[15,13,15,42],"9":[1,20,1,27],"10":[20,13,20,20],"16":[20,13,20,70],"17":[1,28,1,32],"18":[20,55,20,69],"24":[20,13,20,70],"25":[1,20,1,33],"26":[20,24,20,70],"32":[25,17,29,19],"33":[1,20,1,33],"34":[21,22,21,36],"40":[24,13,24,34],"41":[1,20,1,33],"42":[22,22,22,37],"48":[37,17,37,26],"49":[2,26,2,38],"50":[35,13,35,27],"56":[35,13,35,42],"57":[2,26,2,45],"58":[35,13,35,42],"64":[41,13,41,86],"65":[2,26,2,45],"66":[41,13,41,43],"72":[41,13,41,86],"73":[2,26,2,45],"74":[41,82,41,84],"80":[50,9,50,17],"81":[3,1,3,13],"82":[50,9,50,17],"88":[55,17,55,51],"89":[3,1,3,14],"90":[55,49,55,51],"96":[55,17,55,51],"97":[4,11,4,18],"98":[55,26,55,51],"104":[60,17,60,41],"105":[4,19,4,24],"106":[59,20,59,29],"112":[54,13,54,40],"113":[4,11,4,25],"114":[60,17,60,27],"120":[68,15,68,28],"121":[4,11,4,25],"122":[60,17,60,41],"128":[69,16,69,74],"129":[4,11,4,25],"130":[61,25,61,42],"136":[69,16,69,80],"137":[5,14,5,21],"138":[61,25,61,48],"144":[70,21,70,48],"145":[5,22,5,31],"146":[61,25,61,48],"152":[72,17,72,58],"153":[5,14,5,32],"154":[80,13,80,46],"160":[73,9,73,14],"161":[5,14,5,32],"162":[92,9,92,34],"168":[80,13,80,46],"169":[5,14,5,32],"170":[94,9,94,31],"176":[83,13,83,45],"177":[6,11,6,18],"178":[94,9,94,46],"184":[85,13,85,40],"185":[6,19,6,30],"186":[105,16,105,33],"192":[91,15,91,28],"193":[6,11,6,31],"194":[105,16,105,33],"200":[92,9,92,34],"201":[6,11,6,31],"202":[115,9,115,19],"208":[94,9,94,46],"209":[6,11,6,31],"210":[115,9,115,32],"216":[104,9,104,20],"217":[7,12,7,19],"218":[116,29,116,77],"224":[111,16,111,36],"225":[7,20,7,36],"226":[123,9,123,27],"232":[115,9,115,32],"233":[7,12,7,37],"234":[123,9,123,42],"240":[120,19,120,37],"241":[7,12,7,37],"242":[125,42,125,77],"248":[121,17,121,35],"249":[7,12,7,37],"250":[127,16,127,28],"256":[122,24,122,46],"257":[8,21,8,28],"258":[128,16,128,33],"264":[125,16,125,38],"265":[8,29,8,46],"266":[129,16,129,38],"272":[125,16,125,77],"273":[8,21,8,47],"274":[131,16,131,61],"280":[127,16,127,43],"281":[8,21,8,47],"282":[135,16,135,43],"288":[129,16,129,38],"289":[8,21,8,47],"290":[135,16,135,49],"296":[127,16,127,43],"297":[9,18,9,25],"298":[137,37,137,63],"304":[125,16,125,77],"305":[9,26,9,42],"306":[139,29,139,31],"312":[123,9,123,42],"313":[9,18,9,43],"314":[139,21,139,31],"320":[134,9,134,22],"321":[9,18,9,43],"322":[141,19,141,46],"328":[137,9,137,33],"329":[9,18,9,43],"330":[143,16,143,32],"336":[137,9,137,63],"337":[10,18,10,25],"338":[143,16,143,38],"344":[139,13,139,31],"345":[10,26,10,39],"346":[143,16,143,44],"352":[139,13,139,31],"353":[10,18,10,40],"354":[143,16,143,50],"360":[137,9,137,63],"361":[10,18,10,40],"362":[145,16,145,33],"368":[153,12,153,60],"369":[10,18,10,40],"370":[145,16,145,40],"376":[162,12,162,63],"377":[11,17,11,24],"378":[145,16,145,46],"384":[171,12,171,74],"385":[11,25,11,37],"386":[190,16,190,34],"392":[190,16,190,34],"393":[11,17,11,38],"401":[11,17,11,38],"409":[11,17,11,38],"417":[12,12,12,19],"425":[12,20,12,37],"433":[12,12,12,38],"441":[12,12,12,38],"449":[12,12,12,38],"457":[13,1,13,8],"465":[15,13,15,17],"473":[15,31,15,35],"481":[15,37,15,41],"489":[15,13,15,42],"491":[15,13,15,30],"497":[16,13,16,20],"505":[16,13,16,20],"513":[17,21,17,25],"521":[17,21,17,31],"529":[17,21,17,31],"537":[17,21,17,31],"545":[18,20,18,24],"553":[18,20,18,29],"561":[18,20,18,29],"569":[18,20,18,29],"577":[19,22,19,35],"585":[19,36,19,40],"593":[19,36,19,45],"601":[19,22,19,46],"609":[19,22,19,46],"617":[19,22,19,46],"625":[20,14,20,20],"633":[20,25,20,29],"641":[20,25,20,39],"649":[20,55,20,59],"657":[20,62,20,69],"665":[20,25,20,70],"667":[20,25,20,54],"673":[21,13,21,17],"681":[21,22,21,26],"689":[21,29,21,36],"697":[21,38,21,42],"705":[21,38,21,47],"713":[21,13,21,48],"715":[21,13,21,21],"721":[21,13,21,49],"729":[22,13,22,17],"737":[22,22,22,26],"745":[22,29,22,37],"753":[22,39,22,43],"761":[22,39,22,48],"769":[22,13,22,49],"771":[22,13,22,21],"777":[22,13,22,50],"785":[24,13,24,23],"793":[24,29,24,33],"801":[24,13,24,34],"803":[24,13,24,28],"809":[25,17,25,21],"817":[25,31,25,36],"825":[25,38,25,42],"833":[26,21,26,24],"841":[27,21,27,25],"849":[28,21,28,28],"857":[25,44,29,18],"865":[25,17,29,19],"867":[25,17,25,30],"873":[30,17,30,21],"881":[30,29,30,37],"889":[30,17,30,37],"897":[30,17,30,38],"905":[31,24,31,28],"913":[31,24,31,28],"921":[31,17,31,29],"929":[32,25,32,29],"937":[32,25,32,29],"945":[32,17,32,30],"953":[35,20,35,27],"961":[35,32,35,42],"969":[36,13,36,20],"977":[36,26,36,30],"985":[36,32,36,36],"993":[36,38,36,43],"1001":[36,45,36,46],"1009":[36,13,36,47],"1011":[36,13,36,25],"1017":[36,13,36,48],"1025":[37,17,37,21],"1033":[37,17,37,26],"1041":[38,24,38,28],"1049":[38,24,38,33],"1057":[38,24,38,33],"1065":[38,17,38,34],"1073":[41,14,41,27],"1081":[41,33,41,37],"1089":[41,33,41,42],"1097":[41,14,41,43],"1099":[41,14,41,32],"1105":[41,47,41,58],"1113":[41,64,41,68],"1121":[41,64,41,75],"1129":[41,83,41,84],"1137":[41,64,41,85],"1139":[41,64,41,81],"1145":[41,47,41,86],"1147":[41,47,41,63],"1153":[42,13,42,17],"1161":[42,23,42,26],"1169":[42,13,42,27],"1171":[42,13,42,22],"1177":[42,13,42,28],"1185":[44,9,44,13],"1193":[44,19,44,23],"1201":[44,25,44,29],"1209":[44,9,44,30],"1211":[44,9,44,18],"1217":[44,9,44,31],"1225":[45,9,45,13],"1233":[45,23,45,27],"1241":[45,9,45,28],"1243":[45,9,45,22],"1249":[45,9,45,29],"1257":[46,9,46,13],"1265":[46,19,46,24],"1273":[46,26,46,30],"1281":[46,9,46,31],"1283":[46,9,46,18],"1289":[46,9,46,32],"1297":[14,12,47,6],"1305":[14,12,47,6],"1313":[14,12,47,6],"1321":[14,12,47,6],"1329":[14,12,47,6],"1337":[14,12,47,6],"1345":[14,12,47,6],"1353":[14,12,47,6],"1361":[14,12,47,6],"1369":[14,12,47,6],"1377":[14,5,47,7],"1385":[13,17,48,2],"1393":[13,17,48,2],"1401":[13,17,48,2],"1409":[13,17,48,2],"1417":[13,17,48,2],"1425":[13,17,48,2],"1433":[13,1,48,2],"1441":[13,1,48,3],"1449":[49,1,49,8],"1457":[50,10,50,17],"1465":[51,16,51,18],"1473":[51,16,51,18],"1481":[51,9,51,19],"1489":[52,16,52,18],"1497":[52,16,52,18],"1505":[52,16,52,18],"1513":[53,21,53,28],"1521":[54,13,54,20],"1529":[54,36,54,39],"1537":[54,13,54,40],"1539":[54,13,54,35],"1545":[55,17,55,22],"1553":[55,26,55,31],"1561":[55,40,55,43],"1569":[55,26,55,44],"1571":[55,26,55,39],"1577":[55,50,55,51],"1585":[58,23,58,30],"1593":[58,31,58,34],"1601":[58,23,58,35],"1609":[58,23,58,35],"1617":[58,23,58,35],"1625":[59,20,59,23],"1633":[59,26,59,29],"1641":[59,20,59,29],"1649":[59,13,59,30],"1657":[60,24,60,27],"1665":[60,32,60,41],"1673":[61,25,61,29],"1681":[61,32,61,35],"1689":[61,32,61,42],"1691":[61,32,61,40],"1697":[61,45,61,48],"1705":[61,17,61,21],"1713":[61,17,61,48],"1721":[61,17,61,49],"1729":[53,21,53,28],"1737":[53,5,64,6],"1745":[53,5,64,6],"1753":[65,12,65,16],"1761":[65,12,65,16],"1769":[65,5,65,17],"1777":[49,21,66,2],"1785":[49,21,66,2],"1793":[49,21,66,2],"1801":[49,21,66,2],"1809":[49,21,66,2],"1817":[49,21,66,2],"1825":[49,21,66,2],"1833":[49,21,66,2],"1841":[49,1,66,2],"1849":[49,1,66,3],"1857":[67,1,67,8],"1865":[68,15,68,22],"1873":[68,26,68,28],"1881":[68,15,68,28],"1889":[68,5,68,29],"1897":[69,16,69,19],"1905":[69,20,69,27],"1913":[69,29,69,40],"1921":[69,16,69,41],"1929":[69,45,69,48],"1937":[69,49,69,56],"1945":[69,58,69,73],"1953":[69,45,69,74],"1961":[69,78,69,80],"1969":[69,16,69,80],"1977":[69,16,69,80],"1985":[70,21,70,24],"1993":[70,25,70,32],"2001":[70,34,70,41],"2009":[70,21,70,42],"2017":[70,46,70,48],"2025":[70,21,70,48],"2033":[70,21,70,48],"2041":[71,17,71,41],"2049":[71,17,71,41],"2057":[71,17,71,41],"2065":[72,17,72,22],"2073":[72,28,72,32],"2081":[72,17,72,33],"2083":[72,17,72,27],"2089":[72,37,72,42],"2097":[72,48,72,57],"2105":[72,37,72,58],"2107":[72,37,72,47],"2113":[72,17,72,58],"2121":[72,17,72,58],"2129":[73,9,73,14],"2137":[74,16,74,21],"2145":[74,22,74,23],"2153":[74,16,74,24],"2161":[74,16,74,24],"2169":[74,9,74,25],"2177":[76,12,76,16],"2185":[76,12,76,16],"2193":[76,5,76,17],"2201":[67,19,77,2],"2209":[67,19,77,2],"2217":[67,19,77,2],"2225":[67,19,77,2],"2233":[67,19,77,2],"2241":[67,19,77,2],"2249":[67,19,77,2],"2257":[67,19,77,2],"2265":[67,1,77,2],"2273":[67,1,77,3],"2281":[78,1,78,8],"2289":[80,13,80,17],"2297":[80,13,80,25],"2305":[80,13,80,36],"2313":[80,41,80,46],"2321":[81,20,81,24],"2329":[81,34,81,38],"2337":[81,20,81,39],"2339":[81,20,81,33],"2345":[81,20,81,39],"2353":[81,13,81,40],"2361":[83,13,83,17],"2369":[83,31,83,35],"2377":[83,37,83,44],"2385":[83,13,83,45],"2387":[83,13,83,30],"2393":[84,13,84,20],"2401":[84,13,84,20],"2409":[85,13,85,22],"2417":[85,28,85,32],"2425":[85,28,85,39],"2433":[85,13,85,40],"2435":[85,13,85,27],"2441":[86,13,86,17],"2449":[86,23,86,26],"2457":[86,13,86,27],"2459":[86,13,86,22],"2465":[86,13,86,28],"2473":[87,9,87,13],"2481":[87,23,87,27],"2489":[87,9,87,28],"2491":[87,9,87,22],"2497":[87,9,87,29],"2505":[79,12,88,6],"2513":[79,12,88,6],"2521":[79,12,88,6],"2529":[79,12,88,6],"2537":[79,12,88,6],"2545":[79,5,88,7],"2553":[78,20,89,2],"2561":[78,20,89,2],"2569":[78,20,89,2],"2577":[78,20,89,2],"2585":[78,1,89,2],"2593":[78,1,89,3],"2601":[90,1,90,8],"2609":[91,15,91,22],"2617":[91,26,91,28],"2625":[91,15,91,28],"2633":[91,5,91,29],"2641":[92,9,92,16],"2649":[92,9,92,24],"2657":[92,29,92,34],"2665":[93,16,93,19],"2673":[93,16,93,19],"2681":[93,9,93,20],"2689":[94,16,94,23],"2697":[94,16,94,31],"2705":[94,36,94,46],"2713":[95,16,95,23],"2721":[95,32,95,35],"2729":[95,37,95,44],"2737":[95,16,95,45],"2739":[95,16,95,31],"2745":[95,16,95,45],"2753":[95,9,95,46],"2761":[97,11,97,21],"2769":[97,22,97,25],"2777":[97,11,97,26],"2785":[97,11,97,26],"2793":[97,5,97,27],"2801":[98,11,98,14],"2809":[98,11,98,28],"2811":[98,11,98,26],"2817":[98,11,98,28],"2825":[98,5,98,29],"2833":[99,11,99,14],"2841":[99,21,99,24],"2849":[99,11,99,25],"2851":[99,11,99,20],"2857":[99,31,99,34],"2865":[99,11,99,35],"2867":[99,11,99,30],"2873":[99,11,99,35],"2881":[99,5,99,36],"2889":[100,11,100,14],"2897":[100,21,100,25],"2905":[100,11,100,26],"2907":[100,11,100,20],"2913":[100,32,100,36],"2921":[100,11,100,37],"2923":[100,11,100,31],"2929":[100,11,100,37],"2937":[100,5,100,38],"2945":[101,11,101,14],"2953":[101,21,101,57],"2961":[101,11,101,58],"2963":[101,11,101,20],"2969":[101,64,101,66],"2977":[101,11,101,67],"2979":[101,11,101,63],"2985":[101,11,101,67],"2993":[101,5,101,68],"3001":[102,11,102,14],"3009":[102,21,102,61],"3017":[102,11,102,62],"3019":[102,11,102,20],"3025":[102,68,102,70],"3033":[102,11,102,71],"3035":[102,11,102,67],"3041":[102,11,102,71],"3049":[102,5,102,72],"3057":[103,11,103,28],"3065":[103,29,103,32],"3073":[103,11,103,33],"3081":[103,11,103,33],"3089":[103,5,103,34],"3097":[104,9,104,16],"3105":[104,9,104,20],"3113":[105,16,105,19],"3121":[105,22,105,29],"3129":[105,22,105,33],"3137":[105,9,105,12],"3145":[105,9,105,33],"3153":[105,9,105,34],"3161":[107,12,107,15],"3169":[107,12,107,15],"3177":[107,5,107,16],"3185":[90,19,108,2],"3193":[90,19,108,2],"3201":[90,19,108,2],"3209":[90,19,108,2],"3217":[90,19,108,2],"3225":[90,1,108,2],"3233":[90,1,108,3],"3241":[110,12,110,15],"3249":[110,24,110,32],"3257":[111,16,111,26],"3265":[111,27,111,29],"3273":[111,16,111,30],"3281":[111,34,111,36],"3289":[111,16,111,36],"3297":[111,9,111,37],"3305":[110,34,112,6],"3313":[110,34,112,6],"3321":[110,34,112,6],"3329":[110,34,112,6],"3337":[110,12,112,7],"3339":[110,12,110,23],"3345":[110,12,112,7],"3353":[110,5,112,8],"3361":[109,1,113,2],"3369":[109,1,113,2],"3377":[109,1,113,2],"3385":[114,1,114,8],"3393":[115,16,115,19],"3401":[115,24,115,32],"3409":[116,19,116,28],"3417":[116,29,116,65],"3425":[116,68,116,72],"3433":[116,73,116,76],"3441":[116,68,116,77],"3449":[116,15,116,78],"3457":[116,15,116,78],"3465":[116,9,116,79],"3473":[118,19,118,27],"3481":[118,19,118,35],"3489":[118,19,118,35],"3497":[118,19,118,35],"3505":[119,17,119,25],"3513":[119,17,119,31],"3521":[119,17,119,31],"3529":[119,17,119,31],"3537":[120,19,120,23],"3545":[120,19,120,31],"3553":[120,35,120,37],"3561":[120,19,120,37],"3569":[120,19,120,37],"3577":[121,17,121,24],"3585":[121,25,121,28],"3593":[121,17,121,29],"3601":[121,33,121,35],"3609":[121,16,121,43],"3611":[121,16,121,41],"3617":[121,16,121,43],"3625":[121,16,121,43],"3633":[122,5,122,10],"3641":[122,5,122,16],"3649":[122,17,122,20],"3657":[122,24,122,29],"3665":[122,24,122,35],"3673":[122,36,122,39],"3681":[122,24,122,40],"3689":[122,44,122,46],"3697":[122,5,122,46],"3705":[122,5,122,47],"3713":[123,16,123,23],"3721":[123,16,123,27],"3729":[123,32,123,42],"3737":[124,16,124,23],"3745":[124,28,124,35],"3753":[124,37,124,40],"3761":[124,42,124,47],"3769":[124,16,124,48],"3771":[124,16,124,27],"3777":[124,16,124,48],"3785":[124,9,124,49],"3793":[125,16,125,20],"3801":[125,24,125,31],"3809":[125,24,125,38],"3817":[125,43,125,66],"3825":[125,72,125,76],"3833":[125,43,125,77],"3835":[125,43,125,71],"3841":[126,16,126,19],"3849":[126,28,126,35],"3857":[126,28,126,42],"3865":[126,44,126,48],"3873":[126,16,126,49],"3875":[126,16,126,27],"3881":[126,16,126,49],"3889":[126,9,126,50],"3897":[127,16,127,20],"3905":[127,25,127,28],"3913":[127,32,127,37],"3921":[127,32,127,43],"3929":[128,16,128,19],"3937":[128,22,128,27],"3945":[128,22,128,33],"3953":[128,16,128,33],"3961":[128,9,128,34],"3969":[129,16,129,20],"3977":[129,28,129,29],"3985":[129,16,129,30],"3987":[129,16,129,27],"3993":[129,35,129,38],"4001":[130,16,130,20],"4009":[130,27,130,30],"4017":[130,16,130,31],"4019":[130,16,130,26],"4025":[130,37,130,40],"4033":[130,16,130,41],"4035":[130,16,130,36],"4041":[130,16,130,41],"4049":[130,9,130,42],"4057":[131,16,131,19],"4065":[131,22,131,29],"4073":[131,38,131,42],"4081":[131,49,131,50],"4089":[131,38,131,51],"4091":[131,38,131,48],"4097":[131,53,131,60],"4105":[131,22,131,61],"4107":[131,22,131,37],"4113":[131,16,131,61],"4121":[131,9,131,62],"4129":[133,16,133,18],"4137":[133,16,133,18],"4145":[133,16,133,18],"4153":[134,9,134,16],"4161":[134,9,134,22],"4169":[135,16,135,20],"4177":[135,23,135,30],"4185":[135,23,135,36],"4193":[135,23,135,43],"4195":[135,23,135,41],"4201":[135,46,135,49],"4209":[135,16,135,49],"4217":[135,9,135,50],"4225":[137,9,137,13],"4233":[137,17,137,24],"4241":[137,17,137,33],"4249":[137,38,137,52],"4257":[137,58,137,62],"4265":[137,38,137,63],"4267":[137,38,137,57],"4273":[138,19,138,24],"4281":[138,19,138,30],"4289":[138,31,138,34],"4297":[138,19,138,35],"4305":[138,44,138,48],"4313":[138,19,138,49],"4315":[138,19,138,43],"4321":[138,19,138,49],"4329":[138,19,138,49],"4337":[139,13,139,17],"4345":[139,21,139,24],"4353":[139,30,139,31],"4361":[140,13,140,18],"4369":[140,13,140,24],"4377":[140,25,140,28],"4385":[140,13,140,29],"4393":[140,35,140,39],"4401":[140,13,140,40],"4403":[140,13,140,34],"4409":[140,13,140,41],"4417":[141,19,141,24],"4425":[141,19,141,30],"4433":[141,31,141,34],"4441":[141,19,141,35],"4449":[141,19,141,42],"4457":[141,45,141,46],"4465":[141,19,141,46],"4473":[141,13,141,47],"4481":[143,16,143,19],"4489":[143,22,143,25],"4497":[143,22,143,32],"4499":[143,22,143,30],"4505":[143,35,143,38],"4513":[143,41,143,44],"4521":[143,47,143,50],"4529":[143,16,143,50],"4537":[143,9,143,51],"4545":[145,16,145,19],"4553":[145,22,145,26],"4561":[145,22,145,33],"4563":[145,22,145,31],"4569":[145,36,145,40],"4577":[145,43,145,46],"4585":[145,16,145,46],"4593":[145,9,145,47],"4601":[147,12,147,16],"4609":[147,12,147,16],"4617":[147,5,147,17],"4625":[114,22,148,2],"4633":[114,22,148,2],"4641":[114,22,148,2],"4649":[114,22,148,2],"4657":[114,22,148,2],"4665":[114,22,148,2],"4673":[114,22,148,2],"4681":[114,22,148,2],"4689":[114,22,148,2],"4697":[114,22,148,2],"4705":[114,22,148,2],"4713":[114,22,148,2],"4721":[114,1,148,2],"4729":[114,1,148,3],"4737":[149,1,149,8],"4745":[150,12,150,21],"4753":[150,27,150,30],"4761":[150,12,150,31],"4763":[150,12,150,26],"4769":[150,12,150,31],"4777":[150,5,150,32],"4785":[149,26,151,2],"4793":[149,26,151,2],"4801":[149,26,151,2],"4809":[149,26,151,2],"4817":[149,1,151,2],"4825":[149,1,151,3],"4833":[152,1,152,8],"4841":[153,12,153,20],"4849":[153,26,153,29],"4857":[153,12,153,30],"4859":[153,12,153,25],"4865":[153,34,153,41],"4873":[153,56,153,59],"4881":[153,34,153,60],"4883":[153,34,153,55],"4889":[153,12,153,60],"4897":[153,5,153,61],"4905":[152,26,154,2],"4913":[152,26,154,2],"4921":[152,26,154,2],"4929":[152,26,154,2],"4937":[152,1,154,2],"4945":[152,1,154,3],"4953":[155,1,155,8],"4961":[156,12,156,20],"4969":[156,26,156,29],"4977":[156,12,156,30],"4979":[156,12,156,25],"4985":[156,12,156,30],"4993":[156,5,156,31],"5001":[155,25,157,2],"5009":[155,25,157,2],"5017":[155,25,157,2],"5025":[155,25,157,2],"5033":[155,1,157,2],"5041":[155,1,157,3],"5049":[158,1,158,8],"5057":[159,12,159,21],"5065":[159,27,159,30],"5073":[159,12,159,31],"5075":[159,12,159,26],"5081":[159,12,159,31],"5089":[159,5,159,32],"5097":[158,25,160,2],"5105":[158,25,160,2],"5113":[158,25,160,2],"5121":[158,25,160,2],"5129":[158,1,160,2],"5137":[158,1,160,3],"5145":[161,1,161,8],"5153":[162,12,162,23],"5161":[162,29,162,32],"5169":[162,12,162,33],"5171":[162,12,162,28],"5177":[162,37,162,44],"5185":[162,59,162,62],"5193":[162,37,162,63],"5195":[162,37,162,58],"5201":[162,12,162,63],"5209":[162,5,162,64],"5217":[161,24,163,2],"5225":[161,24,163,2],"5233":[161,24,163,2],"5241":[161,24,163,2],"5249":[161,1,163,2],"5257":[161,1,163,3],"5265":[164,1,164,8],"5273":[165,12,165,21],"5281":[165,12,165,23],"5289":[165,29,165,32],"5297":[165,12,165,33],"5299":[165,12,165,28],"5305":[165,12,165,33],"5313":[165,5,165,34],"5321":[164,22,166,2],"5329":[164,22,166,2],"5337":[164,22,166,2],"5345":[164,22,166,2],"5353":[164,1,166,2],"5361":[164,1,166,3],"5369":[167,1,167,8],"5377":[168,12,168,43],"5385":[168,49,168,52],"5393":[168,12,168,53],"5395":[168,12,168,48],"5401":[168,12,168,53],"5409":[168,5,168,54],"5417":[167,25,169,2],"5425":[167,25,169,2],"5433":[167,25,169,2],"5441":[167,25,169,2],"5449":[167,1,169,2],"5457":[167,1,169,3],"5465":[170,1,170,8],"5473":[171,12,171,19],"5481":[171,37,171,40],"5489":[171,12,171,41],"5491":[171,12,171,36],"5497":[171,45,171,52],"5505":[171,70,171,73],"5513":[171,45,171,74],"5515":[171,45,171,69],"5521":[171,12,171,74],"5529":[171,5,171,75],"5537":[170,23,172,2],"5545":[170,23,172,2],"5553":[170,23,172,2],"5561":[170,23,172,2],"5569":[170,1,172,2],"5577":[170,1,172,3],"5585":[173,1,173,8],"5593":[174,12,174,27],"5601":[174,33,174,36],"5609":[174,12,174,37],"5611":[174,12,174,32],"5617":[174,12,174,37],"5625":[174,5,174,38],"5633":[173,28,175,2],"5641":[173,28,175,2],"5649":[173,28,175,2],"5657":[173,28,175,2],"5665":[173,1,175,2],"5673":[173,1,175,3],"5681":[176,1,176,8],"5689":[177,12,177,21],"5697":[177,27,177,30],"5705":[177,12,177,31],"5707":[177,12,177,26],"5713":[177,12,177,31],"5721":[177,5,177,32],"5729":[176,28,178,2],"5737":[176,28,178,2],"5745":[176,28,178,2],"5753":[176,28,178,2],"5761":[176,1,178,2],"5769":[176,1,178,3],"5777":[179,1,179,8],"5785":[180,12,180,15],"5793":[180,24,180,33],"5801":[180,35,180,37],"5809":[180,12,180,38],"5811":[180,12,180,23],"5817":[180,12,180,38],"5825":[180,5,180,39],"5833":[179,20,181,2],"5841":[179,20,181,2],"5849":[179,20,181,2],"5857":[179,20,181,2],"5865":[179,1,181,2],"5873":[179,1,181,3],"5881":[182,1,182,8],"5889":[183,12,183,15],"5897":[183,24,183,33],"5905":[183,35,183,37],"5913":[183,12,183,38],"5915":[183,12,183,23],"5921":[183,12,183,38],"5929":[183,5,183,39],"5937":[182,21,184,2],"5945":[182,21,184,2],"5953":[182,21,184,2],"5961":[182,21,184,2],"5969":[182,1,184,2],"5977":[182,1,184,3],"5985":[185,1,185,8],"5993":[186,12,186,15],"6001":[186,24,186,29],"6009":[186,31,186,33],"6017":[186,12,186,34],"6019":[186,12,186,23],"6025":[186,12,186,34],"6033":[186,5,186,35],"6041":[185,25,187,2],"6049":[185,25,187,2],"6057":[185,25,187,2],"6065":[185,25,187,2],"6073":[185,1,187,2],"6081":[185,1,187,3],"6089":[188,1,188,8],"6097":[189,12,189,15],"6105":[189,22,189,26],"6113":[189,12,189,27],"6115":[189,12,189,21],"6121":[190,16,190,20],"6129":[190,16,190,27],"6131":[190,16,190,25],"6137":[190,32,190,34],"6145":[190,37,190,39],"6153":[190,42,190,46],"6161":[190,16,190,46],"6169":[190,9,190,47],"6177":[189,32,191,6],"6185":[189,32,191,6],"6193":[189,32,191,6],"6201":[189,32,191,6],"6209":[189,12,191,7],"6211":[189,12,189,31],"6217":[191,13,191,17],"6225":[189,12,191,18],"6227":[189,12,191,12],"6233":[191,27,191,36],"6241":[191,38,191,44],"6249":[189,12,191,45],"6251":[189,12,191,26],"6257":[189,12,191,45],"6265":[189,5,191,46],"6273":[188,20,192,2],"6281":[188,20,192,2],"6289":[188,20,192,2],"6297":[188,20,192,2],"6305":[188,1,192,2],"6313":[188,1,192,3],"6321":[1,1,192,3],"6329":[1,1,192,3],"6337":[1,1,192,3],"6345":[1,1,192,3],"6353":[1,1,192,3],"6361":[1,1,192,3],"6369":[1,1,192,3],"6377":[1,1,192,3],"6385":[1,1,192,3],"6393":[1,1,192,3],"6401":[1,1,192,3],"6409":[1,1,192,3],"6417":[109,1,113,2],"6425":[1,1,192,3],"6433":[15,9,16,20],"6441":[20,9,23,10],"6449":[25,13,33,14],"6457":[24,9,34,10],"6465":[37,13,39,14],"6473":[35,9,40,10],"6481":[41,9,43,10],"6489":[14,12,47,6],"6497":[14,12,47,6],"6505":[13,17,48,2],"6513":[13,17,48,2],"6521":[50,5,51,19],"6529":[55,13,57,14],"6537":[60,13,62,14],"6545":[54,9,63,10],"6553":[49,21,66,2],"6561":[49,21,66,2],"6569":[73,5,75,6],"6577":[67,19,77,2],"6585":[67,19,77,2],"6593":[80,9,82,10],"6601":[83,9,84,20],"6609":[85,9,86,28],"6617":[79,12,88,6],"6625":[79,12,88,6],"6633":[78,20,89,2],"6641":[78,20,89,2],"6649":[92,5,93,20],"6657":[94,5,96,6],"6665":[104,5,106,6],"6673":[90,19,108,2],"6681":[90,19,108,2],"6689":[110,34,112,6],"6697":[110,34,112,6],"6705":[109,1,113,2],"6713":[109,1,113,2],"6721":[115,5,117,6],"6729":[129,12,132,6],"6737":[127,12,132,6],"6745":[125,12,132,6],"6753":[123,5,132,6],"6761":[134,5,136,6],"6769":[139,9,142,10],"6777":[137,5,146,6],"6785":[114,22,148,2],"6793":[114,22,148,2],"6801":[149,26,151,2],"6809":[149,26,151,2],"6817":[152,26,154,2],"6825":[152,26,154,2],"6833":[155,25,157,2],"6841":[155,25,157,2],"6849":[158,25,160,2],"6857":[158,25,160,2],"6865":[161,24,163,2],"6873":[161,24,163,2],"6881":[164,22,166,2],"6889":[164,22,166,2],"6897":[167,25,169,2],"6905":[167,25,169,2],"6913":[170,23,172,2],"6921":[170,23,172,2],"6929":[173,28,175,2],"6937":[173,28,175,2],"6945":[176,28,178,2],"6953":[176,28,178,2],"6961":[179,20,181,2],"6969":[179,20,181,2],"6977":[182,21,184,2],"6985":[182,21,184,2],"6993":[185,25,187,2],"7001":[185,25,187,2],"7009":[190,16,190,46],"7017":[189,32,191,6],"7025":[189,32,191,6],"7033":[188,20,192,2],"7041":[188,20,192,2],"7049":[1,1,192,3],"7057":[1,1,192,3],"nBranches":98,"originalCodeFileName":"/home/blake/ExpoSE/Targets/breakdance-util/node_modules/breakdance-util/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/breakdance-util/node_modules/breakdance-util/index_jalangi_.js","code":"'use strict';\n\nvar url = require('url');\nvar typeOf = require('kind-of');\nvar get = require('get-value');\nvar type = require('typeof-article');\nvar isSelfClosing = require('is-self-closing');\nvar diacritics = require('diacritics-map');\nvar stripColor = require('strip-color');\nvar wordRegex = require('word-regex');\nvar util = require('snapdragon-util');\n\n/**\n * Wrapper for creating the handlers for compiling a tag that has `*.open` and\n * `*.close` nodes, in a single function call.\n *\n * ```js\n * breakdance.set('div', utils.block('', ''));\n * breakdance.set('address', block('\\n<address>\\n', '\\n</address>\\n'));\n * // optionally pass a handler function to access the \"parent\" node\n * breakdance.set('abbr', block('<abbr>', '</abbr>', function(node) {\n *   var attr = utils.toAttribs(node.attribs, ['title']);\n *   if (attr) {\n *     node.open = '<abbr' + attr + '>';\n *   }\n * }))\n * ```\n * @param {String} `open` The opening tag to render\n * @param {String} `close` The closing tag to render\n * @param {Object} `state`\n * @param {Function} `handler` Visitor function to modify the node\n * @return {undefined}\n * @api public\n */\n\nexports.block = function(open, close, handler) {\n  return function(node, nodes, i) {\n    if (util.isEmptyNodes(node, open)) return;\n    var state = this.state;\n    var type = node.type;\n    var isVoid = isSelfClosing(node.type);\n\n    if (!isVoid && !this.compilers.hasOwnProperty(type + '.open')) {\n      this.set(type + '.open', util.noop);\n      this.set(type + '.close', util.noop);\n    }\n\n    // convert headings to bold see: edge-cases.md - headings #1\n    if (/^h[1-6]$/.test(type)) {\n      if (util.isInside(state, node, ['a', 'li', 'table'])) {\n        node.type = 'strong';\n        open = '**';\n        close = '**';\n      }\n    }\n\n    if (typeof handler === 'function') {\n      handler.call(this, node, nodes, i);\n\n      // allow handler to override opening tag\n      if (node.open) {\n        open = node.open;\n      }\n    }\n\n    if (!/^(sup|sub)$/.test(node.type) && /[a-z0-9]/i.test(this.output.slice(-1))) {\n      this.emit(' ');\n    }\n\n    this.emit(open, node);\n    this.mapVisit(node);\n    this.emit(close, node);\n  };\n};\n\n/**\n * Stringify the `attribs` for a node.\n *\n * ```js\n * var str = utils.toAttribs(node.attribs);\n * ```\n * @param {Object} `attribs` Object of attributes to stringify\n * @param {Array} `names` Array of `names` to only stringify attributes with those\n * names.\n * @return {String} Returns a string of attributes, e.g. `src=\"foo.jpg\"`\n * @api public\n */\n\nexports.toAttribs = function(attribs, names) {\n  if (!attribs) return '';\n  var attr = '';\n\n  for (var key in attribs) {\n    if (attribs.hasOwnProperty(key)) {\n      if (names && names.indexOf(key) === -1) {\n        continue;\n      }\n\n      var val = attribs[key];\n      attr = ' ' + key;\n\n      if (typeof val !== 'boolean') {\n        attr += '=\"' + val.trim() + '\"';\n      }\n    }\n  }\n  return attr;\n};\n\n/**\n * Attempt to get a \"language\" value from the given `attribs`.\n * Used with code/pre tags.\n *\n * ```js\n * breakdance.set('code', function(node) {\n *   var lang = utils.getLang(node.attribs);\n *   // console.log(lang);\n * });\n * ```\n * @param {Object} `attribs` The `node.attribs` object\n * @return {String}\n * @api public\n */\n\nexports.getLang = function(attribs) {\n  attribs = attribs || {};\n  var lang = get(attribs, 'data-lang') || get(attribs, 'data-language') || '';\n  var classLang = get(attribs, 'class') || '';\n\n  var regex = /lang(?:uage)?-([^\\s]+)/;\n  var match = regex.exec(lang) || regex.exec(classLang);\n  if (match) {\n    return match[1];\n  }\n\n  return lang;\n};\n\n/**\n * Helper for handling spacing around emphasis tags.\n */\n\nexports.emphasis = function(openTag) {\n  return function(node) {\n    if (this.options.whitespace === false) {\n      return this.mapVisit(node);\n    }\n\n    if (util.isEmptyNodes(node, openTag)) return;\n    if (/(^|\\w)$/.test(this.output)) this.emit(' ');\n    this.mapVisit(node);\n  };\n};\n\n/**\n * Slugify the url part of a markdown link.\n *\n * ```js\n * var str = utils.toAttribs(node.attribs);\n * ```\n *\n * @param  {String} `str` The string to slugify\n * @param  {Object} `options` Pass a custom slugify function on `options.slugify`. As an implementor, this allows you to just pass the breakdance options as the second argument to allow users to override this function.\n * @return {String}\n * @api {public}\n */\n\nexports.slugify = function(str, options) {\n  options = options || {};\n  if (options.slugify === false) return str;\n  if (typeof options.slugify === 'function') {\n    return options.slugify(str, options);\n  }\n\n  str = stripColor(str);\n  str = str.toLowerCase();\n\n  // `.split()` is often (but not always) faster than `.replace()`\n  str = str.split(/ /).join('-');\n  str = str.split(/\\t/).join('--');\n  str = str.split(/[|$&`~=\\\\\\/@+*!?({[\\]})<>=.,;:'\"^]/).join('');\n  str = str.split(/[。？！，、；：“”【】（）〔〕［］﹃﹄“ ”‘’﹁﹂—…－～《》〈〉「」]/).join('');\n\n  str = replaceDiacritics(str);\n  if (options.num) {\n    str += '-' + options.num;\n  }\n  return str;\n};\n\n/**\n * Replace diacritics in the given string with english language\n * equivalents. This is necessary for slugifying headings to\n * be conformant with how github slugifies headings.\n */\n\nfunction replaceDiacritics(str) {\n  return str.replace(/[À-ž]/g, function(ch) {\n    return diacritics[ch] || ch;\n  });\n}\n\n/**\n * Formats the link part of a \"src\" or \"href\" attribute on the given `node`.\n *\n * ```js\n * // this is how <img> tags are rendered\n * breakdance.set('img', function(node) {\n *   var attribs = node.attribs || {};\n *   if (attribs.src) {\n *     this.emit('![' + (attribs.alt || '').trim());\n *     this.mapVisit(node);\n *     var src = utils.formatLink(node, 'src', this);\n *     this.emit(']' + src);\n *     //=> ![foo](bar.jpg)\n *   }\n * })\n * ```\n * @param {Object} `node`\n * @param {String} `key` Either `'src'` or `'href'`\n * @param {Object} `compiler` Pass the breakdance compiler instance, for state and options.\n * @return {String}\n * @api public\n */\n\nexports.formatLink = function(node, key, compiler) {\n  if (typeof key !== 'string') {\n    throw new TypeError('expected key to be a string, got: ' + type(key));\n  }\n\n  var options = compiler.options;\n  var state = compiler.state;\n  var attribs = node.attribs || {};\n  var link = (attribs[key] || '').trim();\n\n  state.links[key] = state.links[key] || [];\n\n  if (typeof options.url === 'function') {\n    link = options.url(attribs, key, state);\n\n  } else if (link && options.domain && !/(?:(?:^#)|(?::?\\/\\/))/.test(link)) {\n    link = url.resolve(options.domain, link);\n\n  } else if (link === '#' && state.title) {\n    link = '#' + state.title;\n\n  } else if (link.charAt(0) === '#') {\n    link = link.split('_').join('-');\n    link = '#' + exports.slugify(link.slice(1), options);\n  }\n\n  var text = '';\n  if (attribs.title) {\n    text = ' \"' + attribs.title.trim() + '\"';\n  }\n\n  if (link && options.reflinks && !/(^#|mailto:)/.test(link)) {\n    var idx = state.links[key].indexOf(link);\n    if (link && idx === -1) {\n      state.links[key].push(link);\n      idx = state.links[key].length - 1;\n    }\n    link = '[' + key.trim() + '-' + idx + ']';\n  } else {\n    link = '(' + link.trim() + text + ')';\n  }\n\n  return link;\n};\n\n/**\n * String utils\n */\n\nexports.isWrappingChar = function(str) {\n  return /[*_\"'`]/.test(str);\n};\n\nexports.isStartingChar = function(str) {\n  return /[$@#~]/.test(str) || exports.isOpeningChar(str);\n};\n\nexports.isOpeningChar = function(str) {\n  return /[<([{]/.test(str);\n};\n\nexports.isClosingChar = function(str) {\n  return /[\\])}>]/.test(str);\n};\n\nexports.isEndingChar = function(str) {\n  return /[%!?.,;:]/.test(str) || exports.isClosingChar(str);\n};\n\nexports.isWordChar = function(str) {\n  return wordRegex().test(str);\n};\n\nexports.isSpecialChar = function(str) {\n  return /[‘’“”،、‹›«»†‡°″¡¿※#№\\‱¶′‴§‖¦]/.test(str);\n};\n\nexports.isSeparator = function(str) {\n  return exports.isLooseSeparator(str) || exports.isTightSeparator(str);\n};\n\nexports.isTightSeparator = function(str) {\n  return /[-‒−–—―\\\\\\/⁄]/.test(str);\n};\n\nexports.isLooseSeparator = function(str) {\n  return /[\\s·•|]/.test(str);\n};\n\nexports.trimLeft = function(str) {\n  return str.replace(/^[ \\t]+/, '');\n};\n\nexports.trimRight = function(str) {\n  return str.replace(/[ \\t]+$/, '');\n};\n\nexports.stripNewlines = function(str) {\n  return str.replace(/\\n/g, '');\n};\n\n/**\n * Condense newlines in the given string.\n * @param {String} `str`\n * @return {*}\n */\n\nexports.condense = function(str) {\n  return str.split('\\n').map(function(line) {\n    return line.trim() === '' ? '' : line;\n  })\n  .join('\\n').replace(/\\n{3,}/g, '\\n\\n');\n};\n"};
jalangiLabel68:
    while (true) {
        try {
            J$.Se(6321, '/home/blake/ExpoSE/Targets/breakdance-util/node_modules/breakdance-util/index_jalangi_.js', '/home/blake/ExpoSE/Targets/breakdance-util/node_modules/breakdance-util/index.js');
            function replaceDiacritics(str) {
                jalangiLabel51:
                    while (true) {
                        try {
                            J$.Fe(3361, arguments.callee, this, arguments);
                            arguments = J$.N(3369, 'arguments', arguments, 4);
                            str = J$.N(3377, 'str', str, 4);
                            return J$.X1(3353, J$.Rt(3345, J$.M(3337, J$.R(3241, 'str', str, 0), 'replace', 0)(J$.T(3249, /[À-ž]/g, 14, false), J$.T(3329, function (ch) {
                                jalangiLabel50:
                                    while (true) {
                                        try {
                                            J$.Fe(3305, arguments.callee, this, arguments);
                                            arguments = J$.N(3313, 'arguments', arguments, 4);
                                            ch = J$.N(3321, 'ch', ch, 4);
                                            return J$.X1(3297, J$.Rt(3289, J$.C(224, J$.G(3273, J$.R(3257, 'diacritics', diacritics, 1), J$.R(3265, 'ch', ch, 0), 4)) ? J$._() : J$.R(3281, 'ch', ch, 0)));
                                        } catch (J$e) {
                                            J$.Ex(6689, J$e);
                                        } finally {
                                            if (J$.Fr(6697))
                                                continue jalangiLabel50;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 3305))));
                        } catch (J$e) {
                            J$.Ex(6705, J$e);
                        } finally {
                            if (J$.Fr(6713))
                                continue jalangiLabel51;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6329, '__secret__S$', __secret__S$, 0);
            J$.N(6337, '__secret__traits__', __secret__traits__, 0);
            J$.N(6345, 'url', url, 0);
            J$.N(6353, 'typeOf', typeOf, 0);
            J$.N(6361, 'get', get, 0);
            J$.N(6369, 'type', type, 0);
            J$.N(6377, 'isSelfClosing', isSelfClosing, 0);
            J$.N(6385, 'diacritics', diacritics, 0);
            J$.N(6393, 'stripColor', stripColor, 0);
            J$.N(6401, 'wordRegex', wordRegex, 0);
            J$.N(6409, 'util', util, 0);
            replaceDiacritics = J$.N(6425, 'replaceDiacritics', J$.T(6417, replaceDiacritics, 12, false, 3361), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var url = J$.X1(129, J$.W(121, 'url', J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'url', 21, false)), url, 3));
            var typeOf = J$.X1(169, J$.W(161, 'typeOf', J$.F(153, J$.R(137, 'require', require, 2), 0)(J$.T(145, 'kind-of', 21, false)), typeOf, 3));
            var get = J$.X1(209, J$.W(201, 'get', J$.F(193, J$.R(177, 'require', require, 2), 0)(J$.T(185, 'get-value', 21, false)), get, 3));
            var type = J$.X1(249, J$.W(241, 'type', J$.F(233, J$.R(217, 'require', require, 2), 0)(J$.T(225, 'typeof-article', 21, false)), type, 3));
            var isSelfClosing = J$.X1(289, J$.W(281, 'isSelfClosing', J$.F(273, J$.R(257, 'require', require, 2), 0)(J$.T(265, 'is-self-closing', 21, false)), isSelfClosing, 3));
            var diacritics = J$.X1(329, J$.W(321, 'diacritics', J$.F(313, J$.R(297, 'require', require, 2), 0)(J$.T(305, 'diacritics-map', 21, false)), diacritics, 3));
            var stripColor = J$.X1(369, J$.W(361, 'stripColor', J$.F(353, J$.R(337, 'require', require, 2), 0)(J$.T(345, 'strip-color', 21, false)), stripColor, 3));
            var wordRegex = J$.X1(409, J$.W(401, 'wordRegex', J$.F(393, J$.R(377, 'require', require, 2), 0)(J$.T(385, 'word-regex', 21, false)), wordRegex, 3));
            var util = J$.X1(449, J$.W(441, 'util', J$.F(433, J$.R(417, 'require', require, 2), 0)(J$.T(425, 'snapdragon-util', 21, false)), util, 3));
            J$.X1(1441, J$.P(1433, J$.R(457, 'exports', exports, 2), 'block', J$.T(1425, function (open, close, handler) {
                jalangiLabel44:
                    while (true) {
                        try {
                            J$.Fe(1385, arguments.callee, this, arguments);
                            arguments = J$.N(1393, 'arguments', arguments, 4);
                            open = J$.N(1401, 'open', open, 4);
                            close = J$.N(1409, 'close', close, 4);
                            handler = J$.N(1417, 'handler', handler, 4);
                            return J$.X1(1377, J$.Rt(1369, J$.T(1361, function (node, nodes, i) {
                                jalangiLabel43:
                                    while (true) {
                                        try {
                                            J$.Fe(1297, arguments.callee, this, arguments);
                                            arguments = J$.N(1305, 'arguments', arguments, 4);
                                            node = J$.N(1313, 'node', node, 4);
                                            nodes = J$.N(1321, 'nodes', nodes, 4);
                                            i = J$.N(1329, 'i', i, 4);
                                            J$.N(1337, 'state', state, 0);
                                            J$.N(1345, 'type', type, 0);
                                            J$.N(1353, 'isVoid', isVoid, 0);
                                            if (J$.X1(6433, J$.C(8, J$.M(489, J$.R(465, 'util', util, 1), 'isEmptyNodes', 0)(J$.R(473, 'node', node, 0), J$.R(481, 'open', open, 0)))))
                                                return J$.X1(505, J$.Rt(497, undefined));
                                            var state = J$.X1(537, J$.W(529, 'state', J$.G(521, J$.R(513, 'this', this, 0), 'state', 0), state, 1));
                                            var type = J$.X1(569, J$.W(561, 'type', J$.G(553, J$.R(545, 'node', node, 0), 'type', 0), type, 1));
                                            var isVoid = J$.X1(617, J$.W(609, 'isVoid', J$.F(601, J$.R(577, 'isSelfClosing', isSelfClosing, 1), 0)(J$.G(593, J$.R(585, 'node', node, 0), 'type', 0)), isVoid, 1));
                                            if (J$.X1(6441, J$.C(24, J$.C(16, J$.U(10, '!', J$.R(625, 'isVoid', isVoid, 0))) ? J$.U(26, '!', J$.M(665, J$.G(641, J$.R(633, 'this', this, 0), 'compilers', 0), 'hasOwnProperty', 0)(J$.B(18, '+', J$.R(649, 'type', type, 0), J$.T(657, '.open', 21, false), 0))) : J$._()))) {
                                                J$.X1(721, J$.M(713, J$.R(673, 'this', this, 0), 'set', 0)(J$.B(34, '+', J$.R(681, 'type', type, 0), J$.T(689, '.open', 21, false), 0), J$.G(705, J$.R(697, 'util', util, 1), 'noop', 0)));
                                                J$.X1(777, J$.M(769, J$.R(729, 'this', this, 0), 'set', 0)(J$.B(42, '+', J$.R(737, 'type', type, 0), J$.T(745, '.close', 21, false), 0), J$.G(761, J$.R(753, 'util', util, 1), 'noop', 0)));
                                            }
                                            if (J$.X1(6457, J$.C(40, J$.M(801, J$.T(785, /^h[1-6]$/, 14, false), 'test', 0)(J$.R(793, 'type', type, 0))))) {
                                                if (J$.X1(6449, J$.C(32, J$.M(865, J$.R(809, 'util', util, 1), 'isInside', 0)(J$.R(817, 'state', state, 0), J$.R(825, 'node', node, 0), J$.T(857, [
                                                        J$.T(833, 'a', 21, false),
                                                        J$.T(841, 'li', 21, false),
                                                        J$.T(849, 'table', 21, false)
                                                    ], 10, false))))) {
                                                    J$.X1(897, J$.P(889, J$.R(873, 'node', node, 0), 'type', J$.T(881, 'strong', 21, false), 0));
                                                    J$.X1(921, open = J$.W(913, 'open', J$.T(905, '**', 21, false), open, 0));
                                                    J$.X1(945, close = J$.W(937, 'close', J$.T(929, '**', 21, false), close, 0));
                                                }
                                            }
                                            if (J$.X1(6473, J$.C(56, J$.B(58, '===', J$.U(50, 'typeof', J$.R(953, 'handler', handler, 0)), J$.T(961, 'function', 21, false), 0)))) {
                                                J$.X1(1017, J$.M(1009, J$.R(969, 'handler', handler, 0), 'call', 0)(J$.R(977, 'this', this, 0), J$.R(985, 'node', node, 0), J$.R(993, 'nodes', nodes, 0), J$.R(1001, 'i', i, 0)));
                                                if (J$.X1(6465, J$.C(48, J$.G(1033, J$.R(1025, 'node', node, 0), 'open', 0)))) {
                                                    J$.X1(1065, open = J$.W(1057, 'open', J$.G(1049, J$.R(1041, 'node', node, 0), 'open', 0), open, 0));
                                                }
                                            }
                                            if (J$.X1(6481, J$.C(72, J$.C(64, J$.U(66, '!', J$.M(1097, J$.T(1073, /^(sup|sub)$/, 14, false), 'test', 0)(J$.G(1089, J$.R(1081, 'node', node, 0), 'type', 0)))) ? J$.M(1145, J$.T(1105, /[a-z0-9]/i, 14, false), 'test', 0)(J$.M(1137, J$.G(1121, J$.R(1113, 'this', this, 0), 'output', 0), 'slice', 0)(J$.U(74, '-', J$.T(1129, 1, 22, false)))) : J$._()))) {
                                                J$.X1(1177, J$.M(1169, J$.R(1153, 'this', this, 0), 'emit', 0)(J$.T(1161, ' ', 21, false)));
                                            }
                                            J$.X1(1217, J$.M(1209, J$.R(1185, 'this', this, 0), 'emit', 0)(J$.R(1193, 'open', open, 0), J$.R(1201, 'node', node, 0)));
                                            J$.X1(1249, J$.M(1241, J$.R(1225, 'this', this, 0), 'mapVisit', 0)(J$.R(1233, 'node', node, 0)));
                                            J$.X1(1289, J$.M(1281, J$.R(1257, 'this', this, 0), 'emit', 0)(J$.R(1265, 'close', close, 0), J$.R(1273, 'node', node, 0)));
                                        } catch (J$e) {
                                            J$.Ex(6489, J$e);
                                        } finally {
                                            if (J$.Fr(6497))
                                                continue jalangiLabel43;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1297)));
                        } catch (J$e) {
                            J$.Ex(6505, J$e);
                        } finally {
                            if (J$.Fr(6513))
                                continue jalangiLabel44;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1385), 0));
            J$.X1(1849, J$.P(1841, J$.R(1449, 'exports', exports, 2), 'toAttribs', J$.T(1833, function (attribs, names) {
                jalangiLabel45:
                    while (true) {
                        try {
                            J$.Fe(1777, arguments.callee, this, arguments);
                            arguments = J$.N(1785, 'arguments', arguments, 4);
                            attribs = J$.N(1793, 'attribs', attribs, 4);
                            names = J$.N(1801, 'names', names, 4);
                            J$.N(1809, 'attr', attr, 0);
                            J$.N(1817, 'key', key, 0);
                            J$.N(1825, 'val', val, 0);
                            if (J$.X1(6521, J$.C(80, J$.U(82, '!', J$.R(1457, 'attribs', attribs, 0)))))
                                return J$.X1(1481, J$.Rt(1473, J$.T(1465, '', 21, false)));
                            var attr = J$.X1(1505, J$.W(1497, 'attr', J$.T(1489, '', 21, false), attr, 1));
                            for (J$._tm_p in J$.H(1729, J$.R(1513, 'attribs', attribs, 0))) {
                                var key = J$.X1(1745, J$.W(1737, 'key', J$._tm_p, key, 1));
                                {
                                    {
                                        if (J$.X1(6545, J$.C(112, J$.M(1537, J$.R(1521, 'attribs', attribs, 0), 'hasOwnProperty', 0)(J$.R(1529, 'key', key, 0))))) {
                                            if (J$.X1(6529, J$.C(96, J$.C(88, J$.R(1545, 'names', names, 0)) ? J$.B(98, '===', J$.M(1569, J$.R(1553, 'names', names, 0), 'indexOf', 0)(J$.R(1561, 'key', key, 0)), J$.U(90, '-', J$.T(1577, 1, 22, false)), 0) : J$._()))) {
                                                continue;
                                            }
                                            var val = J$.X1(1617, J$.W(1609, 'val', J$.G(1601, J$.R(1585, 'attribs', attribs, 0), J$.R(1593, 'key', key, 0), 4), val, 1));
                                            J$.X1(1649, attr = J$.W(1641, 'attr', J$.B(106, '+', J$.T(1625, ' ', 21, false), J$.R(1633, 'key', key, 0), 0), attr, 0));
                                            if (J$.X1(6537, J$.C(104, J$.B(122, '!==', J$.U(114, 'typeof', J$.R(1657, 'val', val, 0)), J$.T(1665, 'boolean', 21, false), 0)))) {
                                                J$.X1(1721, attr = J$.W(1713, 'attr', J$.B(146, '+', J$.R(1705, 'attr', attr, 0), J$.B(138, '+', J$.B(130, '+', J$.T(1673, '="', 21, false), J$.M(1689, J$.R(1681, 'val', val, 0), 'trim', 0)(), 0), J$.T(1697, '"', 21, false), 0), 0), attr, 0));
                                            }
                                        }
                                    }
                                }
                            }
                            return J$.X1(1769, J$.Rt(1761, J$.R(1753, 'attr', attr, 0)));
                        } catch (J$e) {
                            J$.Ex(6553, J$e);
                        } finally {
                            if (J$.Fr(6561))
                                continue jalangiLabel45;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1777), 0));
            J$.X1(2273, J$.P(2265, J$.R(1857, 'exports', exports, 2), 'getLang', J$.T(2257, function (attribs) {
                jalangiLabel46:
                    while (true) {
                        try {
                            J$.Fe(2201, arguments.callee, this, arguments);
                            arguments = J$.N(2209, 'arguments', arguments, 4);
                            attribs = J$.N(2217, 'attribs', attribs, 4);
                            J$.N(2225, 'lang', lang, 0);
                            J$.N(2233, 'classLang', classLang, 0);
                            J$.N(2241, 'regex', regex, 0);
                            J$.N(2249, 'match', match, 0);
                            J$.X1(1889, attribs = J$.W(1881, 'attribs', J$.C(120, J$.R(1865, 'attribs', attribs, 0)) ? J$._() : J$.T(1873, {}, 11, false), attribs, 0));
                            var lang = J$.X1(1977, J$.W(1969, 'lang', J$.C(136, J$.C(128, J$.F(1921, J$.R(1897, 'get', get, 1), 0)(J$.R(1905, 'attribs', attribs, 0), J$.T(1913, 'data-lang', 21, false))) ? J$._() : J$.F(1953, J$.R(1929, 'get', get, 1), 0)(J$.R(1937, 'attribs', attribs, 0), J$.T(1945, 'data-language', 21, false))) ? J$._() : J$.T(1961, '', 21, false), lang, 1));
                            var classLang = J$.X1(2033, J$.W(2025, 'classLang', J$.C(144, J$.F(2009, J$.R(1985, 'get', get, 1), 0)(J$.R(1993, 'attribs', attribs, 0), J$.T(2001, 'class', 21, false))) ? J$._() : J$.T(2017, '', 21, false), classLang, 1));
                            var regex = J$.X1(2057, J$.W(2049, 'regex', J$.T(2041, /lang(?:uage)?-([^\s]+)/, 14, false), regex, 1));
                            var match = J$.X1(2121, J$.W(2113, 'match', J$.C(152, J$.M(2081, J$.R(2065, 'regex', regex, 0), 'exec', 0)(J$.R(2073, 'lang', lang, 0))) ? J$._() : J$.M(2105, J$.R(2089, 'regex', regex, 0), 'exec', 0)(J$.R(2097, 'classLang', classLang, 0)), match, 1));
                            if (J$.X1(6569, J$.C(160, J$.R(2129, 'match', match, 0)))) {
                                return J$.X1(2169, J$.Rt(2161, J$.G(2153, J$.R(2137, 'match', match, 0), J$.T(2145, 1, 22, false), 4)));
                            }
                            return J$.X1(2193, J$.Rt(2185, J$.R(2177, 'lang', lang, 0)));
                        } catch (J$e) {
                            J$.Ex(6577, J$e);
                        } finally {
                            if (J$.Fr(6585))
                                continue jalangiLabel46;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2201), 0));
            J$.X1(2593, J$.P(2585, J$.R(2281, 'exports', exports, 2), 'emphasis', J$.T(2577, function (openTag) {
                jalangiLabel48:
                    while (true) {
                        try {
                            J$.Fe(2553, arguments.callee, this, arguments);
                            arguments = J$.N(2561, 'arguments', arguments, 4);
                            openTag = J$.N(2569, 'openTag', openTag, 4);
                            return J$.X1(2545, J$.Rt(2537, J$.T(2529, function (node) {
                                jalangiLabel47:
                                    while (true) {
                                        try {
                                            J$.Fe(2505, arguments.callee, this, arguments);
                                            arguments = J$.N(2513, 'arguments', arguments, 4);
                                            node = J$.N(2521, 'node', node, 4);
                                            if (J$.X1(6593, J$.C(168, J$.B(154, '===', J$.G(2305, J$.G(2297, J$.R(2289, 'this', this, 0), 'options', 0), 'whitespace', 0), J$.T(2313, false, 23, false), 0)))) {
                                                return J$.X1(2353, J$.Rt(2345, J$.M(2337, J$.R(2321, 'this', this, 0), 'mapVisit', 0)(J$.R(2329, 'node', node, 0))));
                                            }
                                            if (J$.X1(6601, J$.C(176, J$.M(2385, J$.R(2361, 'util', util, 1), 'isEmptyNodes', 0)(J$.R(2369, 'node', node, 0), J$.R(2377, 'openTag', openTag, 0)))))
                                                return J$.X1(2401, J$.Rt(2393, undefined));
                                            if (J$.X1(6609, J$.C(184, J$.M(2433, J$.T(2409, /(^|\w)$/, 14, false), 'test', 0)(J$.G(2425, J$.R(2417, 'this', this, 0), 'output', 0)))))
                                                J$.X1(2465, J$.M(2457, J$.R(2441, 'this', this, 0), 'emit', 0)(J$.T(2449, ' ', 21, false)));
                                            J$.X1(2497, J$.M(2489, J$.R(2473, 'this', this, 0), 'mapVisit', 0)(J$.R(2481, 'node', node, 0)));
                                        } catch (J$e) {
                                            J$.Ex(6617, J$e);
                                        } finally {
                                            if (J$.Fr(6625))
                                                continue jalangiLabel47;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 2505)));
                        } catch (J$e) {
                            J$.Ex(6633, J$e);
                        } finally {
                            if (J$.Fr(6641))
                                continue jalangiLabel48;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2553), 0));
            J$.X1(3233, J$.P(3225, J$.R(2601, 'exports', exports, 2), 'slugify', J$.T(3217, function (str, options) {
                jalangiLabel49:
                    while (true) {
                        try {
                            J$.Fe(3185, arguments.callee, this, arguments);
                            arguments = J$.N(3193, 'arguments', arguments, 4);
                            str = J$.N(3201, 'str', str, 4);
                            options = J$.N(3209, 'options', options, 4);
                            J$.X1(2633, options = J$.W(2625, 'options', J$.C(192, J$.R(2609, 'options', options, 0)) ? J$._() : J$.T(2617, {}, 11, false), options, 0));
                            if (J$.X1(6649, J$.C(200, J$.B(162, '===', J$.G(2649, J$.R(2641, 'options', options, 0), 'slugify', 0), J$.T(2657, false, 23, false), 0))))
                                return J$.X1(2681, J$.Rt(2673, J$.R(2665, 'str', str, 0)));
                            if (J$.X1(6657, J$.C(208, J$.B(178, '===', J$.U(170, 'typeof', J$.G(2697, J$.R(2689, 'options', options, 0), 'slugify', 0)), J$.T(2705, 'function', 21, false), 0)))) {
                                return J$.X1(2753, J$.Rt(2745, J$.M(2737, J$.R(2713, 'options', options, 0), 'slugify', 0)(J$.R(2721, 'str', str, 0), J$.R(2729, 'options', options, 0))));
                            }
                            J$.X1(2793, str = J$.W(2785, 'str', J$.F(2777, J$.R(2761, 'stripColor', stripColor, 1), 0)(J$.R(2769, 'str', str, 0)), str, 0));
                            J$.X1(2825, str = J$.W(2817, 'str', J$.M(2809, J$.R(2801, 'str', str, 0), 'toLowerCase', 0)(), str, 0));
                            J$.X1(2881, str = J$.W(2873, 'str', J$.M(2865, J$.M(2849, J$.R(2833, 'str', str, 0), 'split', 0)(J$.T(2841, / /, 14, false)), 'join', 0)(J$.T(2857, '-', 21, false)), str, 0));
                            J$.X1(2937, str = J$.W(2929, 'str', J$.M(2921, J$.M(2905, J$.R(2889, 'str', str, 0), 'split', 0)(J$.T(2897, /\t/, 14, false)), 'join', 0)(J$.T(2913, '--', 21, false)), str, 0));
                            J$.X1(2993, str = J$.W(2985, 'str', J$.M(2977, J$.M(2961, J$.R(2945, 'str', str, 0), 'split', 0)(J$.T(2953, /[|$&`~=\\\/@+*!?({[\]})<>=.,;:'"^]/, 14, false)), 'join', 0)(J$.T(2969, '', 21, false)), str, 0));
                            J$.X1(3049, str = J$.W(3041, 'str', J$.M(3033, J$.M(3017, J$.R(3001, 'str', str, 0), 'split', 0)(J$.T(3009, /[。？！，、；：“”【】（）〔〕［］﹃﹄“ ”‘’﹁﹂—…－～《》〈〉「」]/, 14, false)), 'join', 0)(J$.T(3025, '', 21, false)), str, 0));
                            J$.X1(3089, str = J$.W(3081, 'str', J$.F(3073, J$.R(3057, 'replaceDiacritics', replaceDiacritics, 1), 0)(J$.R(3065, 'str', str, 0)), str, 0));
                            if (J$.X1(6665, J$.C(216, J$.G(3105, J$.R(3097, 'options', options, 0), 'num', 0)))) {
                                J$.X1(3153, str = J$.W(3145, 'str', J$.B(194, '+', J$.R(3137, 'str', str, 0), J$.B(186, '+', J$.T(3113, '-', 21, false), J$.G(3129, J$.R(3121, 'options', options, 0), 'num', 0), 0), 0), str, 0));
                            }
                            return J$.X1(3177, J$.Rt(3169, J$.R(3161, 'str', str, 0)));
                        } catch (J$e) {
                            J$.Ex(6673, J$e);
                        } finally {
                            if (J$.Fr(6681))
                                continue jalangiLabel49;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3185), 0));
            J$.X1(4729, J$.P(4721, J$.R(3385, 'exports', exports, 2), 'formatLink', J$.T(4713, function (node, key, compiler) {
                jalangiLabel52:
                    while (true) {
                        try {
                            J$.Fe(4625, arguments.callee, this, arguments);
                            arguments = J$.N(4633, 'arguments', arguments, 4);
                            node = J$.N(4641, 'node', node, 4);
                            key = J$.N(4649, 'key', key, 4);
                            compiler = J$.N(4657, 'compiler', compiler, 4);
                            J$.N(4665, 'options', options, 0);
                            J$.N(4673, 'state', state, 0);
                            J$.N(4681, 'attribs', attribs, 0);
                            J$.N(4689, 'link', link, 0);
                            J$.N(4697, 'text', text, 0);
                            J$.N(4705, 'idx', idx, 0);
                            if (J$.X1(6721, J$.C(232, J$.B(210, '!==', J$.U(202, 'typeof', J$.R(3393, 'key', key, 0)), J$.T(3401, 'string', 21, false), 0)))) {
                                throw J$.X1(3465, J$.Th(3457, J$.F(3449, J$.R(3409, 'TypeError', TypeError, 2), 1)(J$.B(218, '+', J$.T(3417, 'expected key to be a string, got: ', 21, false), J$.F(3441, J$.R(3425, 'type', type, 1), 0)(J$.R(3433, 'key', key, 0)), 0))));
                            }
                            var options = J$.X1(3497, J$.W(3489, 'options', J$.G(3481, J$.R(3473, 'compiler', compiler, 0), 'options', 0), options, 1));
                            var state = J$.X1(3529, J$.W(3521, 'state', J$.G(3513, J$.R(3505, 'compiler', compiler, 0), 'state', 0), state, 1));
                            var attribs = J$.X1(3569, J$.W(3561, 'attribs', J$.C(240, J$.G(3545, J$.R(3537, 'node', node, 0), 'attribs', 0)) ? J$._() : J$.T(3553, {}, 11, false), attribs, 1));
                            var link = J$.X1(3625, J$.W(3617, 'link', J$.M(3609, J$.C(248, J$.G(3593, J$.R(3577, 'attribs', attribs, 0), J$.R(3585, 'key', key, 0), 4)) ? J$._() : J$.T(3601, '', 21, false), 'trim', 0)(), link, 1));
                            J$.X1(3705, J$.P(3697, J$.G(3641, J$.R(3633, 'state', state, 0), 'links', 0), J$.R(3649, 'key', key, 0), J$.C(256, J$.G(3681, J$.G(3665, J$.R(3657, 'state', state, 0), 'links', 0), J$.R(3673, 'key', key, 0), 4)) ? J$._() : J$.T(3689, [], 10, false), 2));
                            if (J$.X1(6753, J$.C(312, J$.B(234, '===', J$.U(226, 'typeof', J$.G(3721, J$.R(3713, 'options', options, 0), 'url', 0)), J$.T(3729, 'function', 21, false), 0)))) {
                                J$.X1(3785, link = J$.W(3777, 'link', J$.M(3769, J$.R(3737, 'options', options, 0), 'url', 0)(J$.R(3745, 'attribs', attribs, 0), J$.R(3753, 'key', key, 0), J$.R(3761, 'state', state, 0)), link, 0));
                            } else if (J$.X1(6745, J$.C(304, J$.C(272, J$.C(264, J$.R(3793, 'link', link, 0)) ? J$.G(3809, J$.R(3801, 'options', options, 0), 'domain', 0) : J$._()) ? J$.U(242, '!', J$.M(3833, J$.T(3817, /(?:(?:^#)|(?::?\/\/))/, 14, false), 'test', 0)(J$.R(3825, 'link', link, 0))) : J$._()))) {
                                J$.X1(3889, link = J$.W(3881, 'link', J$.M(3873, J$.R(3841, 'url', url, 1), 'resolve', 0)(J$.G(3857, J$.R(3849, 'options', options, 0), 'domain', 0), J$.R(3865, 'link', link, 0)), link, 0));
                            } else if (J$.X1(6737, J$.C(296, J$.C(280, J$.B(250, '===', J$.R(3897, 'link', link, 0), J$.T(3905, '#', 21, false), 0)) ? J$.G(3921, J$.R(3913, 'state', state, 0), 'title', 0) : J$._()))) {
                                J$.X1(3961, link = J$.W(3953, 'link', J$.B(258, '+', J$.T(3929, '#', 21, false), J$.G(3945, J$.R(3937, 'state', state, 0), 'title', 0), 0), link, 0));
                            } else if (J$.X1(6729, J$.C(288, J$.B(266, '===', J$.M(3985, J$.R(3969, 'link', link, 0), 'charAt', 0)(J$.T(3977, 0, 22, false)), J$.T(3993, '#', 21, false), 0)))) {
                                J$.X1(4049, link = J$.W(4041, 'link', J$.M(4033, J$.M(4017, J$.R(4001, 'link', link, 0), 'split', 0)(J$.T(4009, '_', 21, false)), 'join', 0)(J$.T(4025, '-', 21, false)), link, 0));
                                J$.X1(4121, link = J$.W(4113, 'link', J$.B(274, '+', J$.T(4057, '#', 21, false), J$.M(4105, J$.R(4065, 'exports', exports, 2), 'slugify', 0)(J$.M(4089, J$.R(4073, 'link', link, 0), 'slice', 0)(J$.T(4081, 1, 22, false)), J$.R(4097, 'options', options, 0)), 0), link, 0));
                            }
                            var text = J$.X1(4145, J$.W(4137, 'text', J$.T(4129, '', 21, false), text, 1));
                            if (J$.X1(6761, J$.C(320, J$.G(4161, J$.R(4153, 'attribs', attribs, 0), 'title', 0)))) {
                                J$.X1(4217, text = J$.W(4209, 'text', J$.B(290, '+', J$.B(282, '+', J$.T(4169, ' "', 21, false), J$.M(4193, J$.G(4185, J$.R(4177, 'attribs', attribs, 0), 'title', 0), 'trim', 0)(), 0), J$.T(4201, '"', 21, false), 0), text, 0));
                            }
                            if (J$.X1(6777, J$.C(360, J$.C(336, J$.C(328, J$.R(4225, 'link', link, 0)) ? J$.G(4241, J$.R(4233, 'options', options, 0), 'reflinks', 0) : J$._()) ? J$.U(298, '!', J$.M(4265, J$.T(4249, /(^#|mailto:)/, 14, false), 'test', 0)(J$.R(4257, 'link', link, 0))) : J$._()))) {
                                var idx = J$.X1(4329, J$.W(4321, 'idx', J$.M(4313, J$.G(4297, J$.G(4281, J$.R(4273, 'state', state, 0), 'links', 0), J$.R(4289, 'key', key, 0), 4), 'indexOf', 0)(J$.R(4305, 'link', link, 0)), idx, 1));
                                if (J$.X1(6769, J$.C(352, J$.C(344, J$.R(4337, 'link', link, 0)) ? J$.B(314, '===', J$.R(4345, 'idx', idx, 0), J$.U(306, '-', J$.T(4353, 1, 22, false)), 0) : J$._()))) {
                                    J$.X1(4409, J$.M(4401, J$.G(4385, J$.G(4369, J$.R(4361, 'state', state, 0), 'links', 0), J$.R(4377, 'key', key, 0), 4), 'push', 0)(J$.R(4393, 'link', link, 0)));
                                    J$.X1(4473, idx = J$.W(4465, 'idx', J$.B(322, '-', J$.G(4449, J$.G(4441, J$.G(4425, J$.R(4417, 'state', state, 0), 'links', 0), J$.R(4433, 'key', key, 0), 4), 'length', 0), J$.T(4457, 1, 22, false), 0), idx, 0));
                                }
                                J$.X1(4537, link = J$.W(4529, 'link', J$.B(354, '+', J$.B(346, '+', J$.B(338, '+', J$.B(330, '+', J$.T(4481, '[', 21, false), J$.M(4497, J$.R(4489, 'key', key, 0), 'trim', 0)(), 0), J$.T(4505, '-', 21, false), 0), J$.R(4513, 'idx', idx, 0), 0), J$.T(4521, ']', 21, false), 0), link, 0));
                            } else {
                                J$.X1(4593, link = J$.W(4585, 'link', J$.B(378, '+', J$.B(370, '+', J$.B(362, '+', J$.T(4545, '(', 21, false), J$.M(4561, J$.R(4553, 'link', link, 0), 'trim', 0)(), 0), J$.R(4569, 'text', text, 0), 0), J$.T(4577, ')', 21, false), 0), link, 0));
                            }
                            return J$.X1(4617, J$.Rt(4609, J$.R(4601, 'link', link, 0)));
                        } catch (J$e) {
                            J$.Ex(6785, J$e);
                        } finally {
                            if (J$.Fr(6793))
                                continue jalangiLabel52;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4625), 0));
            J$.X1(4825, J$.P(4817, J$.R(4737, 'exports', exports, 2), 'isWrappingChar', J$.T(4809, function (str) {
                jalangiLabel53:
                    while (true) {
                        try {
                            J$.Fe(4785, arguments.callee, this, arguments);
                            arguments = J$.N(4793, 'arguments', arguments, 4);
                            str = J$.N(4801, 'str', str, 4);
                            return J$.X1(4777, J$.Rt(4769, J$.M(4761, J$.T(4745, /[*_"'`]/, 14, false), 'test', 0)(J$.R(4753, 'str', str, 0))));
                        } catch (J$e) {
                            J$.Ex(6801, J$e);
                        } finally {
                            if (J$.Fr(6809))
                                continue jalangiLabel53;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4785), 0));
            J$.X1(4945, J$.P(4937, J$.R(4833, 'exports', exports, 2), 'isStartingChar', J$.T(4929, function (str) {
                jalangiLabel54:
                    while (true) {
                        try {
                            J$.Fe(4905, arguments.callee, this, arguments);
                            arguments = J$.N(4913, 'arguments', arguments, 4);
                            str = J$.N(4921, 'str', str, 4);
                            return J$.X1(4897, J$.Rt(4889, J$.C(368, J$.M(4857, J$.T(4841, /[$@#~]/, 14, false), 'test', 0)(J$.R(4849, 'str', str, 0))) ? J$._() : J$.M(4881, J$.R(4865, 'exports', exports, 2), 'isOpeningChar', 0)(J$.R(4873, 'str', str, 0))));
                        } catch (J$e) {
                            J$.Ex(6817, J$e);
                        } finally {
                            if (J$.Fr(6825))
                                continue jalangiLabel54;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4905), 0));
            J$.X1(5041, J$.P(5033, J$.R(4953, 'exports', exports, 2), 'isOpeningChar', J$.T(5025, function (str) {
                jalangiLabel55:
                    while (true) {
                        try {
                            J$.Fe(5001, arguments.callee, this, arguments);
                            arguments = J$.N(5009, 'arguments', arguments, 4);
                            str = J$.N(5017, 'str', str, 4);
                            return J$.X1(4993, J$.Rt(4985, J$.M(4977, J$.T(4961, /[<([{]/, 14, false), 'test', 0)(J$.R(4969, 'str', str, 0))));
                        } catch (J$e) {
                            J$.Ex(6833, J$e);
                        } finally {
                            if (J$.Fr(6841))
                                continue jalangiLabel55;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5001), 0));
            J$.X1(5137, J$.P(5129, J$.R(5049, 'exports', exports, 2), 'isClosingChar', J$.T(5121, function (str) {
                jalangiLabel56:
                    while (true) {
                        try {
                            J$.Fe(5097, arguments.callee, this, arguments);
                            arguments = J$.N(5105, 'arguments', arguments, 4);
                            str = J$.N(5113, 'str', str, 4);
                            return J$.X1(5089, J$.Rt(5081, J$.M(5073, J$.T(5057, /[\])}>]/, 14, false), 'test', 0)(J$.R(5065, 'str', str, 0))));
                        } catch (J$e) {
                            J$.Ex(6849, J$e);
                        } finally {
                            if (J$.Fr(6857))
                                continue jalangiLabel56;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5097), 0));
            J$.X1(5257, J$.P(5249, J$.R(5145, 'exports', exports, 2), 'isEndingChar', J$.T(5241, function (str) {
                jalangiLabel57:
                    while (true) {
                        try {
                            J$.Fe(5217, arguments.callee, this, arguments);
                            arguments = J$.N(5225, 'arguments', arguments, 4);
                            str = J$.N(5233, 'str', str, 4);
                            return J$.X1(5209, J$.Rt(5201, J$.C(376, J$.M(5169, J$.T(5153, /[%!?.,;:]/, 14, false), 'test', 0)(J$.R(5161, 'str', str, 0))) ? J$._() : J$.M(5193, J$.R(5177, 'exports', exports, 2), 'isClosingChar', 0)(J$.R(5185, 'str', str, 0))));
                        } catch (J$e) {
                            J$.Ex(6865, J$e);
                        } finally {
                            if (J$.Fr(6873))
                                continue jalangiLabel57;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5217), 0));
            J$.X1(5361, J$.P(5353, J$.R(5265, 'exports', exports, 2), 'isWordChar', J$.T(5345, function (str) {
                jalangiLabel58:
                    while (true) {
                        try {
                            J$.Fe(5321, arguments.callee, this, arguments);
                            arguments = J$.N(5329, 'arguments', arguments, 4);
                            str = J$.N(5337, 'str', str, 4);
                            return J$.X1(5313, J$.Rt(5305, J$.M(5297, J$.F(5281, J$.R(5273, 'wordRegex', wordRegex, 1), 0)(), 'test', 0)(J$.R(5289, 'str', str, 0))));
                        } catch (J$e) {
                            J$.Ex(6881, J$e);
                        } finally {
                            if (J$.Fr(6889))
                                continue jalangiLabel58;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5321), 0));
            J$.X1(5457, J$.P(5449, J$.R(5369, 'exports', exports, 2), 'isSpecialChar', J$.T(5441, function (str) {
                jalangiLabel59:
                    while (true) {
                        try {
                            J$.Fe(5417, arguments.callee, this, arguments);
                            arguments = J$.N(5425, 'arguments', arguments, 4);
                            str = J$.N(5433, 'str', str, 4);
                            return J$.X1(5409, J$.Rt(5401, J$.M(5393, J$.T(5377, /[‘’“”،、‹›«»†‡°″¡¿※#№\‱¶′‴§‖¦]/, 14, false), 'test', 0)(J$.R(5385, 'str', str, 0))));
                        } catch (J$e) {
                            J$.Ex(6897, J$e);
                        } finally {
                            if (J$.Fr(6905))
                                continue jalangiLabel59;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5417), 0));
            J$.X1(5577, J$.P(5569, J$.R(5465, 'exports', exports, 2), 'isSeparator', J$.T(5561, function (str) {
                jalangiLabel60:
                    while (true) {
                        try {
                            J$.Fe(5537, arguments.callee, this, arguments);
                            arguments = J$.N(5545, 'arguments', arguments, 4);
                            str = J$.N(5553, 'str', str, 4);
                            return J$.X1(5529, J$.Rt(5521, J$.C(384, J$.M(5489, J$.R(5473, 'exports', exports, 2), 'isLooseSeparator', 0)(J$.R(5481, 'str', str, 0))) ? J$._() : J$.M(5513, J$.R(5497, 'exports', exports, 2), 'isTightSeparator', 0)(J$.R(5505, 'str', str, 0))));
                        } catch (J$e) {
                            J$.Ex(6913, J$e);
                        } finally {
                            if (J$.Fr(6921))
                                continue jalangiLabel60;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5537), 0));
            J$.X1(5673, J$.P(5665, J$.R(5585, 'exports', exports, 2), 'isTightSeparator', J$.T(5657, function (str) {
                jalangiLabel61:
                    while (true) {
                        try {
                            J$.Fe(5633, arguments.callee, this, arguments);
                            arguments = J$.N(5641, 'arguments', arguments, 4);
                            str = J$.N(5649, 'str', str, 4);
                            return J$.X1(5625, J$.Rt(5617, J$.M(5609, J$.T(5593, /[-‒−–—―\\\/⁄]/, 14, false), 'test', 0)(J$.R(5601, 'str', str, 0))));
                        } catch (J$e) {
                            J$.Ex(6929, J$e);
                        } finally {
                            if (J$.Fr(6937))
                                continue jalangiLabel61;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5633), 0));
            J$.X1(5769, J$.P(5761, J$.R(5681, 'exports', exports, 2), 'isLooseSeparator', J$.T(5753, function (str) {
                jalangiLabel62:
                    while (true) {
                        try {
                            J$.Fe(5729, arguments.callee, this, arguments);
                            arguments = J$.N(5737, 'arguments', arguments, 4);
                            str = J$.N(5745, 'str', str, 4);
                            return J$.X1(5721, J$.Rt(5713, J$.M(5705, J$.T(5689, /[\s·•|]/, 14, false), 'test', 0)(J$.R(5697, 'str', str, 0))));
                        } catch (J$e) {
                            J$.Ex(6945, J$e);
                        } finally {
                            if (J$.Fr(6953))
                                continue jalangiLabel62;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5729), 0));
            J$.X1(5873, J$.P(5865, J$.R(5777, 'exports', exports, 2), 'trimLeft', J$.T(5857, function (str) {
                jalangiLabel63:
                    while (true) {
                        try {
                            J$.Fe(5833, arguments.callee, this, arguments);
                            arguments = J$.N(5841, 'arguments', arguments, 4);
                            str = J$.N(5849, 'str', str, 4);
                            return J$.X1(5825, J$.Rt(5817, J$.M(5809, J$.R(5785, 'str', str, 0), 'replace', 0)(J$.T(5793, /^[ \t]+/, 14, false), J$.T(5801, '', 21, false))));
                        } catch (J$e) {
                            J$.Ex(6961, J$e);
                        } finally {
                            if (J$.Fr(6969))
                                continue jalangiLabel63;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5833), 0));
            J$.X1(5977, J$.P(5969, J$.R(5881, 'exports', exports, 2), 'trimRight', J$.T(5961, function (str) {
                jalangiLabel64:
                    while (true) {
                        try {
                            J$.Fe(5937, arguments.callee, this, arguments);
                            arguments = J$.N(5945, 'arguments', arguments, 4);
                            str = J$.N(5953, 'str', str, 4);
                            return J$.X1(5929, J$.Rt(5921, J$.M(5913, J$.R(5889, 'str', str, 0), 'replace', 0)(J$.T(5897, /[ \t]+$/, 14, false), J$.T(5905, '', 21, false))));
                        } catch (J$e) {
                            J$.Ex(6977, J$e);
                        } finally {
                            if (J$.Fr(6985))
                                continue jalangiLabel64;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5937), 0));
            J$.X1(6081, J$.P(6073, J$.R(5985, 'exports', exports, 2), 'stripNewlines', J$.T(6065, function (str) {
                jalangiLabel65:
                    while (true) {
                        try {
                            J$.Fe(6041, arguments.callee, this, arguments);
                            arguments = J$.N(6049, 'arguments', arguments, 4);
                            str = J$.N(6057, 'str', str, 4);
                            return J$.X1(6033, J$.Rt(6025, J$.M(6017, J$.R(5993, 'str', str, 0), 'replace', 0)(J$.T(6001, /\n/g, 14, false), J$.T(6009, '', 21, false))));
                        } catch (J$e) {
                            J$.Ex(6993, J$e);
                        } finally {
                            if (J$.Fr(7001))
                                continue jalangiLabel65;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 6041), 0));
            J$.X1(6313, J$.P(6305, J$.R(6089, 'exports', exports, 2), 'condense', J$.T(6297, function (str) {
                jalangiLabel67:
                    while (true) {
                        try {
                            J$.Fe(6273, arguments.callee, this, arguments);
                            arguments = J$.N(6281, 'arguments', arguments, 4);
                            str = J$.N(6289, 'str', str, 4);
                            return J$.X1(6265, J$.Rt(6257, J$.M(6249, J$.M(6225, J$.M(6209, J$.M(6113, J$.R(6097, 'str', str, 0), 'split', 0)(J$.T(6105, '\n', 21, false)), 'map', 0)(J$.T(6201, function (line) {
                                jalangiLabel66:
                                    while (true) {
                                        try {
                                            J$.Fe(6177, arguments.callee, this, arguments);
                                            arguments = J$.N(6185, 'arguments', arguments, 4);
                                            line = J$.N(6193, 'line', line, 4);
                                            return J$.X1(6169, J$.Rt(6161, J$.X1(7009, J$.C(392, J$.B(386, '===', J$.M(6129, J$.R(6121, 'line', line, 0), 'trim', 0)(), J$.T(6137, '', 21, false), 0))) ? J$.T(6145, '', 21, false) : J$.R(6153, 'line', line, 0)));
                                        } catch (J$e) {
                                            J$.Ex(7017, J$e);
                                        } finally {
                                            if (J$.Fr(7025))
                                                continue jalangiLabel66;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 6177)), 'join', 0)(J$.T(6217, '\n', 21, false)), 'replace', 0)(J$.T(6233, /\n{3,}/g, 14, false), J$.T(6241, '\n\n', 21, false))));
                        } catch (J$e) {
                            J$.Ex(7033, J$e);
                        } finally {
                            if (J$.Fr(7041))
                                continue jalangiLabel67;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 6273), 0));
        } catch (J$e) {
            J$.Ex(7049, J$e);
        } finally {
            if (J$.Sr(7057)) {
                J$.L();
                continue jalangiLabel68;
            } else {
                J$.L();
                break jalangiLabel68;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
