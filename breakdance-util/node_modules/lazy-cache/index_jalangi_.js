J$.iids = {"8":[9,13,9,36],"9":[1,20,1,27],"10":[9,13,9,23],"16":[13,20,13,64],"17":[1,28,1,32],"18":[9,13,9,36],"24":[15,13,15,32],"25":[1,20,1,33],"26":[23,12,23,33],"32":[23,12,23,56],"33":[1,20,1,33],"34":[23,37,23,56],"40":[23,12,23,70],"41":[1,20,1,33],"42":[26,9,26,25],"48":[26,9,26,25],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,11,4,18],"105":[4,19,4,31],"113":[4,11,4,32],"121":[4,11,4,32],"129":[4,11,4,32],"137":[6,17,6,19],"145":[6,17,6,19],"153":[6,17,6,19],"161":[8,19,8,24],"169":[8,19,8,24],"177":[8,19,8,24],"185":[9,20,9,23],"193":[9,28,9,36],"201":[10,19,10,28],"209":[10,29,10,33],"217":[10,19,10,34],"225":[10,19,10,34],"233":[10,13,10,35],"241":[13,20,13,25],"249":[13,26,13,29],"257":[13,20,13,30],"265":[13,35,13,40],"273":[13,41,13,44],"281":[13,48,13,57],"289":[13,58,13,62],"297":[13,48,13,63],"305":[13,35,13,63],"313":[13,20,13,64],"321":[13,13,13,65],"329":[12,9,14,10],"337":[12,9,14,10],"345":[15,13,15,19],"353":[15,20,15,27],"361":[15,20,15,31],"369":[15,13,15,32],"377":[16,13,16,19],"385":[16,13,16,21],"393":[16,13,16,22],"401":[18,9,18,12],"409":[18,13,18,18],"417":[18,20,18,23],"425":[18,25,18,31],"433":[18,9,18,32],"441":[18,9,18,33],"449":[19,16,19,22],"457":[19,16,19,22],"465":[19,9,19,23],"473":[7,12,20,6],"481":[7,12,20,6],"489":[7,12,20,6],"497":[7,12,20,6],"505":[7,12,20,6],"513":[7,12,20,6],"521":[12,9,14,10],"529":[7,12,20,6],"537":[7,12,20,6],"545":[7,12,20,6],"553":[7,5,20,7],"561":[5,1,21,2],"569":[5,1,21,2],"577":[5,1,21,2],"585":[5,1,21,2],"593":[23,12,23,15],"601":[23,12,23,22],"609":[23,27,23,33],"617":[23,37,23,40],"625":[23,37,23,47],"633":[23,52,23,56],"641":[23,60,23,63],"649":[23,60,23,70],"657":[23,12,23,70],"665":[23,5,23,71],"673":[22,1,24,2],"681":[22,1,24,2],"689":[22,1,24,2],"697":[26,9,26,12],"705":[26,9,26,19],"713":[26,24,26,25],"721":[27,16,27,19],"729":[27,16,27,33],"731":[27,16,27,31],"737":[27,16,27,33],"745":[27,9,27,34],"753":[29,11,29,14],"761":[29,23,29,41],"769":[29,43,29,45],"777":[29,11,29,46],"779":[29,11,29,22],"785":[29,11,29,60],"787":[29,11,29,58],"793":[29,11,29,60],"801":[29,5,29,61],"809":[30,12,30,15],"817":[30,24,30,39],"825":[31,16,31,18],"833":[31,16,31,32],"835":[31,16,31,30],"841":[31,16,31,32],"849":[31,9,31,33],"857":[30,41,32,6],"865":[30,41,32,6],"873":[30,41,32,6],"881":[30,41,32,6],"889":[30,41,32,6],"897":[30,12,32,7],"899":[30,12,30,23],"905":[30,12,32,7],"913":[30,5,32,8],"921":[25,1,33,2],"929":[25,1,33,2],"937":[25,1,33,2],"945":[34,1,34,7],"953":[34,18,34,27],"961":[34,1,34,27],"969":[34,1,34,28],"977":[1,1,34,28],"985":[1,1,34,28],"993":[1,1,34,28],"1001":[1,1,34,28],"1009":[5,1,21,2],"1017":[1,1,34,28],"1025":[22,1,24,2],"1033":[1,1,34,28],"1041":[25,1,33,2],"1049":[1,1,34,28],"1057":[9,9,11,10],"1065":[12,9,14,10],"1073":[12,9,14,10],"1081":[15,9,17,10],"1089":[7,12,20,6],"1097":[7,12,20,6],"1105":[5,1,21,2],"1113":[5,1,21,2],"1121":[22,1,24,2],"1129":[22,1,24,2],"1137":[26,5,28,6],"1145":[30,41,32,6],"1153":[30,41,32,6],"1161":[25,1,33,2],"1169":[25,1,33,2],"1177":[1,1,34,28],"1185":[1,1,34,28],"nBranches":12,"originalCodeFileName":"/home/blake/ExpoSE/Targets/breakdance-util/node_modules/lazy-cache/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/breakdance-util/node_modules/lazy-cache/index_jalangi_.js","code":"'use strict';\n\nvar set = require('set-getter');\n\n/**\n * Cache results of the first function call to ensure only calling once.\n *\n * ```js\n * var utils = require('lazy-cache')(require);\n * // cache the call to `require('ansi-yellow')`\n * utils('ansi-yellow', 'yellow');\n * // use `ansi-yellow`\n * console.log(utils.yellow('this is yellow'));\n * ```\n *\n * @param  {Function} `fn` Function that will be called only once.\n * @return {Function} Function that can be called to get the cached function\n * @api public\n */\n\nfunction lazyCache(requireFn) {\n  var cache = {};\n\n  return function proxy(name, alias) {\n    var key = alias;\n\n    // camel-case the module `name` if `alias` is not defined\n    if (typeof key !== 'string') {\n      key = camelcase(name);\n    }\n\n    // create a getter to lazily invoke the module the first time it's called\n    function getter() {\n      return cache[key] || (cache[key] = requireFn(name));\n    }\n\n    // trip the getter if `process.env.UNLAZY` is defined\n    if (unlazy(process.env)) {\n      getter();\n    }\n\n    set(proxy, key, getter);\n    return getter;\n  };\n}\n\n/**\n * Return true if `process.env.LAZY` is true, or travis is running.\n */\n\nfunction unlazy(env) {\n  return env.UNLAZY === 'true' || env.UNLAZY === true || env.TRAVIS;\n}\n\n/**\n * Camelcase the the given module `name`.\n */\n\nfunction camelcase(str) {\n  if (str.length === 1) {\n    return str.toLowerCase();\n  }\n  str = str.replace(/^[\\W_]+|[\\W_]+$/g, '').toLowerCase();\n  return str.replace(/[\\W_]+(\\w|$)/g, function(_, ch) {\n    return ch.toUpperCase();\n  });\n}\n\n/**\n * Expose `lazyCache`\n */\n\nmodule.exports = lazyCache;\n"};
jalangiLabel125:
    while (true) {
        try {
            J$.Se(977, '/home/blake/ExpoSE/Targets/breakdance-util/node_modules/lazy-cache/index_jalangi_.js', '/home/blake/ExpoSE/Targets/breakdance-util/node_modules/lazy-cache/index.js');
            function lazyCache(requireFn) {
                jalangiLabel121:
                    while (true) {
                        try {
                            J$.Fe(561, arguments.callee, this, arguments);
                            arguments = J$.N(569, 'arguments', arguments, 4);
                            requireFn = J$.N(577, 'requireFn', requireFn, 4);
                            J$.N(585, 'cache', cache, 0);
                            var cache = J$.X1(153, J$.W(145, 'cache', J$.T(137, {}, 11, false), cache, 1));
                            return J$.X1(553, J$.Rt(545, J$.T(537, function proxy(name, alias) {
                                jalangiLabel120:
                                    while (true) {
                                        try {
                                            J$.Fe(473, arguments.callee, this, arguments);
                                            function getter() {
                                                jalangiLabel119:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(329, arguments.callee, this, arguments);
                                                            arguments = J$.N(337, 'arguments', arguments, 4);
                                                            return J$.X1(321, J$.Rt(313, J$.C(16, J$.G(257, J$.R(241, 'cache', cache, 0), J$.R(249, 'key', key, 0), 4)) ? J$._() : J$.P(305, J$.R(265, 'cache', cache, 0), J$.R(273, 'key', key, 0), J$.F(297, J$.R(281, 'requireFn', requireFn, 0), 0)(J$.R(289, 'name', name, 0)), 2)));
                                                        } catch (J$e) {
                                                            J$.Ex(1065, J$e);
                                                        } finally {
                                                            if (J$.Fr(1073))
                                                                continue jalangiLabel119;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }
                                            arguments = J$.N(481, 'arguments', arguments, 4);
                                            proxy = J$.N(489, 'proxy', proxy, 0);
                                            name = J$.N(497, 'name', name, 4);
                                            alias = J$.N(505, 'alias', alias, 4);
                                            J$.N(513, 'key', key, 0);
                                            getter = J$.N(529, 'getter', J$.T(521, getter, 12, false, 329), 0);
                                            var key = J$.X1(177, J$.W(169, 'key', J$.R(161, 'alias', alias, 0), key, 1));
                                            if (J$.X1(1057, J$.C(8, J$.B(18, '!==', J$.U(10, 'typeof', J$.R(185, 'key', key, 0)), J$.T(193, 'string', 21, false), 0)))) {
                                                J$.X1(233, key = J$.W(225, 'key', J$.F(217, J$.R(201, 'camelcase', camelcase, 1), 0)(J$.R(209, 'name', name, 0)), key, 0));
                                            }
                                            if (J$.X1(1081, J$.C(24, J$.F(369, J$.R(345, 'unlazy', unlazy, 1), 0)(J$.G(361, J$.R(353, 'process', process, 2), 'env', 0))))) {
                                                J$.X1(393, J$.F(385, J$.R(377, 'getter', getter, 0), 0)());
                                            }
                                            J$.X1(441, J$.F(433, J$.R(401, 'set', set, 1), 0)(J$.R(409, 'proxy', proxy, 0), J$.R(417, 'key', key, 0), J$.R(425, 'getter', getter, 0)));
                                            return J$.X1(465, J$.Rt(457, J$.R(449, 'getter', getter, 0)));
                                        } catch (J$e) {
                                            J$.Ex(1089, J$e);
                                        } finally {
                                            if (J$.Fr(1097))
                                                continue jalangiLabel120;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 473)));
                        } catch (J$e) {
                            J$.Ex(1105, J$e);
                        } finally {
                            if (J$.Fr(1113))
                                continue jalangiLabel121;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function unlazy(env) {
                jalangiLabel122:
                    while (true) {
                        try {
                            J$.Fe(673, arguments.callee, this, arguments);
                            arguments = J$.N(681, 'arguments', arguments, 4);
                            env = J$.N(689, 'env', env, 4);
                            return J$.X1(665, J$.Rt(657, J$.C(40, J$.C(32, J$.B(26, '===', J$.G(601, J$.R(593, 'env', env, 0), 'UNLAZY', 0), J$.T(609, 'true', 21, false), 0)) ? J$._() : J$.B(34, '===', J$.G(625, J$.R(617, 'env', env, 0), 'UNLAZY', 0), J$.T(633, true, 23, false), 0)) ? J$._() : J$.G(649, J$.R(641, 'env', env, 0), 'TRAVIS', 0)));
                        } catch (J$e) {
                            J$.Ex(1121, J$e);
                        } finally {
                            if (J$.Fr(1129))
                                continue jalangiLabel122;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function camelcase(str) {
                jalangiLabel124:
                    while (true) {
                        try {
                            J$.Fe(921, arguments.callee, this, arguments);
                            arguments = J$.N(929, 'arguments', arguments, 4);
                            str = J$.N(937, 'str', str, 4);
                            if (J$.X1(1137, J$.C(48, J$.B(42, '===', J$.G(705, J$.R(697, 'str', str, 0), 'length', 0), J$.T(713, 1, 22, false), 0)))) {
                                return J$.X1(745, J$.Rt(737, J$.M(729, J$.R(721, 'str', str, 0), 'toLowerCase', 0)()));
                            }
                            J$.X1(801, str = J$.W(793, 'str', J$.M(785, J$.M(777, J$.R(753, 'str', str, 0), 'replace', 0)(J$.T(761, /^[\W_]+|[\W_]+$/g, 14, false), J$.T(769, '', 21, false)), 'toLowerCase', 0)(), str, 0));
                            return J$.X1(913, J$.Rt(905, J$.M(897, J$.R(809, 'str', str, 0), 'replace', 0)(J$.T(817, /[\W_]+(\w|$)/g, 14, false), J$.T(889, function (_, ch) {
                                jalangiLabel123:
                                    while (true) {
                                        try {
                                            J$.Fe(857, arguments.callee, this, arguments);
                                            arguments = J$.N(865, 'arguments', arguments, 4);
                                            _ = J$.N(873, '_', _, 4);
                                            ch = J$.N(881, 'ch', ch, 4);
                                            return J$.X1(849, J$.Rt(841, J$.M(833, J$.R(825, 'ch', ch, 0), 'toUpperCase', 0)()));
                                        } catch (J$e) {
                                            J$.Ex(1145, J$e);
                                        } finally {
                                            if (J$.Fr(1153))
                                                continue jalangiLabel123;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 857))));
                        } catch (J$e) {
                            J$.Ex(1161, J$e);
                        } finally {
                            if (J$.Fr(1169))
                                continue jalangiLabel124;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(985, '__secret__S$', __secret__S$, 0);
            J$.N(993, '__secret__traits__', __secret__traits__, 0);
            J$.N(1001, 'set', set, 0);
            lazyCache = J$.N(1017, 'lazyCache', J$.T(1009, lazyCache, 12, false, 561), 0);
            unlazy = J$.N(1033, 'unlazy', J$.T(1025, unlazy, 12, false, 673), 0);
            camelcase = J$.N(1049, 'camelcase', J$.T(1041, camelcase, 12, false, 921), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var set = J$.X1(129, J$.W(121, 'set', J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'set-getter', 21, false)), set, 3));
            J$.X1(969, J$.P(961, J$.R(945, 'module', module, 2), 'exports', J$.R(953, 'lazyCache', lazyCache, 1), 0));
        } catch (J$e) {
            J$.Ex(1177, J$e);
        } finally {
            if (J$.Sr(1185)) {
                J$.L();
                continue jalangiLabel125;
            } else {
                J$.L();
                break jalangiLabel125;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
