{"8":[9,13,9,36],"9":[1,20,1,27],"10":[9,13,9,23],"16":[13,20,13,64],"17":[1,28,1,32],"18":[9,13,9,36],"24":[15,13,15,32],"25":[1,20,1,33],"26":[23,12,23,33],"32":[23,12,23,56],"33":[1,20,1,33],"34":[23,37,23,56],"40":[23,12,23,70],"41":[1,20,1,33],"42":[26,9,26,25],"48":[26,9,26,25],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,11,4,18],"105":[4,19,4,31],"113":[4,11,4,32],"121":[4,11,4,32],"129":[4,11,4,32],"137":[6,17,6,19],"145":[6,17,6,19],"153":[6,17,6,19],"161":[8,19,8,24],"169":[8,19,8,24],"177":[8,19,8,24],"185":[9,20,9,23],"193":[9,28,9,36],"201":[10,19,10,28],"209":[10,29,10,33],"217":[10,19,10,34],"225":[10,19,10,34],"233":[10,13,10,35],"241":[13,20,13,25],"249":[13,26,13,29],"257":[13,20,13,30],"265":[13,35,13,40],"273":[13,41,13,44],"281":[13,48,13,57],"289":[13,58,13,62],"297":[13,48,13,63],"305":[13,35,13,63],"313":[13,20,13,64],"321":[13,13,13,65],"329":[12,9,14,10],"337":[12,9,14,10],"345":[15,13,15,19],"353":[15,20,15,27],"361":[15,20,15,31],"369":[15,13,15,32],"377":[16,13,16,19],"385":[16,13,16,21],"393":[16,13,16,22],"401":[18,9,18,12],"409":[18,13,18,18],"417":[18,20,18,23],"425":[18,25,18,31],"433":[18,9,18,32],"441":[18,9,18,33],"449":[19,16,19,22],"457":[19,16,19,22],"465":[19,9,19,23],"473":[7,12,20,6],"481":[7,12,20,6],"489":[7,12,20,6],"497":[7,12,20,6],"505":[7,12,20,6],"513":[7,12,20,6],"521":[12,9,14,10],"529":[7,12,20,6],"537":[7,12,20,6],"545":[7,12,20,6],"553":[7,5,20,7],"561":[5,1,21,2],"569":[5,1,21,2],"577":[5,1,21,2],"585":[5,1,21,2],"593":[23,12,23,15],"601":[23,12,23,22],"609":[23,27,23,33],"617":[23,37,23,40],"625":[23,37,23,47],"633":[23,52,23,56],"641":[23,60,23,63],"649":[23,60,23,70],"657":[23,12,23,70],"665":[23,5,23,71],"673":[22,1,24,2],"681":[22,1,24,2],"689":[22,1,24,2],"697":[26,9,26,12],"705":[26,9,26,19],"713":[26,24,26,25],"721":[27,16,27,19],"729":[27,16,27,33],"731":[27,16,27,31],"737":[27,16,27,33],"745":[27,9,27,34],"753":[29,11,29,14],"761":[29,23,29,41],"769":[29,43,29,45],"777":[29,11,29,46],"779":[29,11,29,22],"785":[29,11,29,60],"787":[29,11,29,58],"793":[29,11,29,60],"801":[29,5,29,61],"809":[30,12,30,15],"817":[30,24,30,39],"825":[31,16,31,18],"833":[31,16,31,32],"835":[31,16,31,30],"841":[31,16,31,32],"849":[31,9,31,33],"857":[30,41,32,6],"865":[30,41,32,6],"873":[30,41,32,6],"881":[30,41,32,6],"889":[30,41,32,6],"897":[30,12,32,7],"899":[30,12,30,23],"905":[30,12,32,7],"913":[30,5,32,8],"921":[25,1,33,2],"929":[25,1,33,2],"937":[25,1,33,2],"945":[34,1,34,7],"953":[34,18,34,27],"961":[34,1,34,27],"969":[34,1,34,28],"977":[1,1,34,28],"985":[1,1,34,28],"993":[1,1,34,28],"1001":[1,1,34,28],"1009":[5,1,21,2],"1017":[1,1,34,28],"1025":[22,1,24,2],"1033":[1,1,34,28],"1041":[25,1,33,2],"1049":[1,1,34,28],"1057":[9,9,11,10],"1065":[12,9,14,10],"1073":[12,9,14,10],"1081":[15,9,17,10],"1089":[7,12,20,6],"1097":[7,12,20,6],"1105":[5,1,21,2],"1113":[5,1,21,2],"1121":[22,1,24,2],"1129":[22,1,24,2],"1137":[26,5,28,6],"1145":[30,41,32,6],"1153":[30,41,32,6],"1161":[25,1,33,2],"1169":[25,1,33,2],"1177":[1,1,34,28],"1185":[1,1,34,28],"nBranches":12,"originalCodeFileName":"/home/blake/ExpoSE/Targets/breakdance-util/node_modules/lazy-cache/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/breakdance-util/node_modules/lazy-cache/index_jalangi_.js","code":"'use strict';\n\nvar set = require('set-getter');\n\n/**\n * Cache results of the first function call to ensure only calling once.\n *\n * ```js\n * var utils = require('lazy-cache')(require);\n * // cache the call to `require('ansi-yellow')`\n * utils('ansi-yellow', 'yellow');\n * // use `ansi-yellow`\n * console.log(utils.yellow('this is yellow'));\n * ```\n *\n * @param  {Function} `fn` Function that will be called only once.\n * @return {Function} Function that can be called to get the cached function\n * @api public\n */\n\nfunction lazyCache(requireFn) {\n  var cache = {};\n\n  return function proxy(name, alias) {\n    var key = alias;\n\n    // camel-case the module `name` if `alias` is not defined\n    if (typeof key !== 'string') {\n      key = camelcase(name);\n    }\n\n    // create a getter to lazily invoke the module the first time it's called\n    function getter() {\n      return cache[key] || (cache[key] = requireFn(name));\n    }\n\n    // trip the getter if `process.env.UNLAZY` is defined\n    if (unlazy(process.env)) {\n      getter();\n    }\n\n    set(proxy, key, getter);\n    return getter;\n  };\n}\n\n/**\n * Return true if `process.env.LAZY` is true, or travis is running.\n */\n\nfunction unlazy(env) {\n  return env.UNLAZY === 'true' || env.UNLAZY === true || env.TRAVIS;\n}\n\n/**\n * Camelcase the the given module `name`.\n */\n\nfunction camelcase(str) {\n  if (str.length === 1) {\n    return str.toLowerCase();\n  }\n  str = str.replace(/^[\\W_]+|[\\W_]+$/g, '').toLowerCase();\n  return str.replace(/[\\W_]+(\\w|$)/g, function(_, ch) {\n    return ch.toUpperCase();\n  });\n}\n\n/**\n * Expose `lazyCache`\n */\n\nmodule.exports = lazyCache;\n"}