'use strict';

var clone = require('clone')
, JStream = require('jstream')
;

module.exports = function(options) {
  options = options || {};

  options.encoding = options.encoding ? options.encoding : 'utf8';

  var js = new JStream(options.cutter, options);

  return function (input, submit, conf) {
    if (!js) {
      return submit(null, input);
    }
    var readable = input.openStream()
      , concurrency = conf.concurrency || 1
      , delay = conf.delay || 100
      , counter = 0
      ;
    js.on('data', function(data) {
      var doc = clone(input, false);
      doc.content = {};
      doc.content.json = data;
      counter++
      var qe = submit(doc, function() {
        delayed();
      });
      var delayed = function() {
        if (qe.length() < concurrency) {
          readable.resume();
        }
        else {
          setTimeout(delayed, delay);
        }
      }
      if (qe.length() >= concurrency) {
        readable.pause();
        delayed();
      }
    });
    js.on('end', function() {
      if (counter) {
        submit();
      }
      else {
        submit(new Error('No document detected !'));
      }
    });
    readable.setEncoding(options.encoding);
    readable.on('end', function() {
      js.end();
    });
    readable.on('data', function(chunk) {
      js.write(chunk);
    });
  }
}
