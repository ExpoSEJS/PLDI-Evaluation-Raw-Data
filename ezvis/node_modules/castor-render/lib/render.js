'use strict';
var path = require('path')
  , basename = path.basename(__filename, '.js')
  , assert = require('assert')
  , util = require('util')
  ;

function Render(options) {

  options = options || {};

  if (!(this instanceof Render)) {
    return new Render(options);
  }
  var self = this;

  self.formats = {
    "html" : "text/html",
    "csv" : "text/csv",
    "rss" : "application/rss+xml",
    "atom" : "application/atom+xml",
    "json" : "application/json",
    "xml" : "text/xml",
    "txt" : "text/plain"
  }
}

Render.prototype.transpose = function (input) {
  var self = this;
  return self.formats[input] ? self.formats[input] : input;
}

Render.prototype.run = function(res, locals, next) {
  var render = locals.headers['Content-Type'];
  if (!render) {
    next(new Error('No render for ' + locals.headers['Content-Type']));
  }
  else if (locals.page.types.indexOf(render) === -1) {
    next();
  }
  else if (render === 'text/html' || render === 'text/plain') {
    res.render(locals.template || 'no template !', locals);
  }
  else if (render === 'application/json') {
    require('./json.js')(locals).pipe(res);
  }
  else if (render === 'application/atom+xml') {
    require('./atom.js')(locals).pipe(res);
  }
  else if (render === 'application/rss+xml') {
    require('./rss.js')(locals).pipe(res);
  }
  else if (render === 'application/zip') {
    require('./zip.js')(locals).pipe(res);
  }
  else if (render === 'text/csv') {
    require('./csv.js')(locals).pipe(res);
  }
  else {
    next();
  }
}

module.exports = Render;
