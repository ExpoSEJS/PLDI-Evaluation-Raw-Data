J$.iids = {"8":[13,9,13,28],"9":[1,20,1,27],"10":[6,17,6,45],"16":[42,9,42,33],"17":[1,28,1,32],"18":[13,9,13,28],"24":[49,9,49,26],"25":[1,20,1,33],"26":[42,9,42,20],"32":[66,16,66,34],"33":[1,20,1,33],"34":[42,9,42,33],"40":[64,9,64,31],"41":[1,20,1,33],"42":[57,17,57,36],"48":[76,9,76,30],"49":[2,26,2,38],"50":[57,16,57,36],"56":[81,33,81,44],"57":[2,26,2,45],"58":[66,16,66,34],"64":[84,51,84,56],"65":[2,26,2,45],"66":[67,19,67,38],"72":[86,13,86,18],"73":[2,26,2,45],"74":[67,19,67,48],"80":[83,9,83,27],"81":[3,10,3,17],"82":[81,15,81,79],"89":[3,18,3,22],"90":[82,16,82,71],"97":[3,10,3,23],"105":[3,10,3,23],"113":[3,10,3,23],"121":[4,14,4,21],"129":[4,22,4,26],"137":[4,14,4,27],"145":[4,14,4,36],"147":[4,14,4,34],"153":[4,14,4,36],"161":[4,14,4,36],"169":[5,12,5,19],"177":[5,20,5,26],"185":[5,12,5,27],"193":[5,12,5,27],"201":[5,12,5,27],"209":[6,17,6,24],"217":[6,17,6,33],"225":[6,38,6,45],"233":[6,17,6,45],"241":[6,17,6,45],"249":[8,16,8,25],"257":[9,17,9,31],"265":[9,17,9,33],"273":[10,9,10,11],"281":[7,15,11,2],"289":[7,15,11,2],"297":[7,15,11,2],"305":[13,9,13,18],"313":[13,23,13,28],"321":[14,16,14,20],"329":[14,16,14,20],"337":[14,9,14,21],"345":[16,22,16,26],"353":[16,32,16,38],"361":[16,40,16,56],"369":[16,22,16,57],"371":[16,22,16,31],"377":[16,22,16,57],"385":[16,22,16,57],"393":[17,23,17,27],"401":[17,33,17,39],"409":[17,41,17,58],"417":[17,23,17,59],"419":[17,23,17,32],"425":[17,23,17,59],"433":[17,23,17,59],"441":[19,9,19,11],"449":[19,26,19,36],"457":[19,38,19,40],"465":[19,9,19,41],"467":[19,9,19,25],"473":[19,9,19,42],"481":[21,16,21,21],"489":[21,16,21,21],"497":[21,9,21,22],"505":[20,7,22,6],"513":[24,9,24,11],"521":[24,24,24,34],"529":[24,36,24,47],"537":[24,9,24,48],"539":[24,9,24,23],"545":[24,9,24,49],"553":[26,9,26,11],"561":[26,23,26,33],"569":[26,9,26,34],"571":[26,9,26,22],"577":[26,9,26,35],"585":[27,16,27,21],"593":[27,16,27,21],"601":[27,9,27,22],"609":[25,7,28,6],"617":[29,5,29,7],"625":[29,19,29,29],"633":[29,5,29,30],"635":[29,5,29,18],"641":[29,5,29,31],"649":[30,5,30,7],"657":[30,19,30,30],"665":[30,5,30,31],"667":[30,5,30,18],"673":[30,5,30,32],"681":[31,12,31,16],"689":[31,12,31,16],"697":[31,5,31,17],"705":[12,1,32,2],"713":[12,1,32,2],"721":[12,1,32,2],"729":[12,1,32,2],"737":[33,1,33,7],"745":[33,18,33,31],"753":[33,1,33,31],"761":[33,1,33,32],"769":[35,15,35,20],"777":[35,21,35,90],"785":[35,11,35,91],"793":[35,11,35,91],"801":[35,5,35,92],"809":[34,1,36,2],"817":[34,1,36,2],"825":[37,1,37,7],"833":[37,1,37,15],"841":[37,29,37,39],"849":[37,1,37,39],"857":[37,1,37,40],"865":[39,15,39,25],"873":[39,15,39,25],"881":[39,5,39,26],"889":[38,1,40,2],"897":[38,1,40,2],"905":[38,1,40,2],"913":[42,16,42,20],"921":[42,25,42,33],"929":[43,9,43,16],"937":[43,9,43,16],"945":[45,12,45,16],"953":[45,25,45,30],"961":[45,32,45,34],"969":[45,12,45,35],"971":[45,12,45,24],"977":[45,44,45,51],"985":[45,53,45,56],"993":[45,12,45,57],"995":[45,12,45,43],"1001":[45,12,45,57],"1009":[45,5,45,58],"1017":[41,1,46,2],"1025":[41,1,46,2],"1033":[41,1,46,2],"1041":[47,1,47,7],"1049":[47,1,47,15],"1057":[47,23,47,40],"1065":[47,1,47,40],"1073":[47,1,47,41],"1081":[49,9,49,16],"1089":[49,9,49,26],"1097":[50,9,50,23],"1105":[50,24,50,31],"1113":[50,33,50,41],"1121":[50,9,50,42],"1129":[50,9,50,43],"1137":[52,9,52,16],"1145":[52,17,52,24],"1153":[52,26,52,34],"1161":[52,9,52,35],"1169":[52,9,52,36],"1177":[48,1,54,2],"1185":[48,1,54,2],"1193":[48,1,54,2],"1201":[48,1,54,2],"1209":[55,1,55,7],"1217":[55,23,55,29],"1225":[55,23,55,37],"1233":[55,39,55,51],"1241":[57,18,57,25],"1249":[57,18,57,36],"1257":[57,16,57,36],"1265":[57,9,57,37],"1273":[56,10,58,6],"1281":[56,10,58,6],"1289":[56,10,58,6],"1297":[55,53,59,2],"1305":[55,1,59,3],"1307":[55,1,55,22],"1313":[55,1,59,4],"1321":[61,19,61,26],"1329":[61,27,61,35],"1337":[61,19,61,36],"1345":[61,19,61,36],"1353":[61,19,61,36],"1361":[62,20,62,27],"1369":[62,28,62,37],"1377":[62,20,62,38],"1385":[62,20,62,38],"1393":[62,20,62,38],"1401":[63,17,63,24],"1409":[63,17,63,27],"1417":[63,38,63,45],"1425":[63,17,63,46],"1427":[63,17,63,37],"1433":[63,17,63,46],"1441":[63,17,63,46],"1449":[64,9,64,14],"1457":[64,9,64,31],"1459":[64,9,64,29],"1465":[65,19,65,26],"1473":[65,19,65,29],"1481":[65,43,65,50],"1489":[65,19,65,51],"1491":[65,19,65,42],"1497":[65,19,65,51],"1505":[65,9,65,52],"1513":[66,16,66,23],"1521":[66,24,66,25],"1529":[66,16,66,26],"1537":[66,31,66,34],"1545":[67,19,67,26],"1553":[67,19,67,32],"1555":[67,19,67,30],"1561":[67,35,67,38],"1569":[67,41,67,48],"1577":[67,19,67,48],"1585":[67,9,67,49],"1593":[69,5,69,12],"1601":[69,5,69,15],"1609":[69,28,69,35],"1617":[69,37,69,45],"1625":[69,5,69,46],"1627":[69,5,69,27],"1633":[69,5,69,47],"1641":[60,1,70,2],"1649":[60,1,70,2],"1657":[60,1,70,2],"1665":[60,1,70,2],"1673":[60,1,70,2],"1681":[60,1,70,2],"1689":[60,1,70,2],"1697":[71,22,71,31],"1705":[71,22,71,31],"1713":[71,22,71,31],"1721":[73,16,73,23],"1729":[73,16,73,26],"1737":[73,37,73,44],"1745":[73,16,73,45],"1747":[73,16,73,36],"1753":[73,16,73,45],"1761":[73,16,73,45],"1769":[74,17,74,21],"1777":[74,17,74,35],"1779":[74,17,74,33],"1785":[74,17,74,35],"1793":[74,17,74,35],"1801":[75,23,75,28],"1809":[75,23,75,28],"1817":[75,23,75,28],"1825":[76,9,76,13],"1833":[76,9,76,30],"1835":[76,9,76,28],"1841":[77,19,77,26],"1849":[77,19,77,29],"1857":[77,43,77,50],"1865":[77,19,77,51],"1867":[77,19,77,42],"1873":[77,19,77,51],"1881":[77,9,77,52],"1889":[78,17,78,24],"1897":[78,17,78,27],"1905":[78,38,78,45],"1913":[78,17,78,46],"1915":[78,17,78,37],"1921":[78,17,78,60],"1923":[78,17,78,58],"1929":[78,17,78,60],"1937":[78,9,78,61],"1945":[79,23,79,27],"1953":[79,23,79,27],"1961":[79,9,79,28],"1969":[81,15,81,29],"1977":[81,33,81,44],"1985":[81,47,81,54],"1993":[81,57,81,61],"2001":[81,70,81,77],"2009":[81,57,81,78],"2011":[81,57,81,69],"2017":[81,15,81,79],"2025":[81,5,81,80],"2033":[82,16,82,30],"2041":[82,33,82,37],"2049":[82,46,82,50],"2057":[82,61,82,69],"2065":[82,46,82,70],"2067":[82,46,82,60],"2073":[82,33,82,71],"2075":[82,33,82,45],"2081":[82,16,82,71],"2089":[82,5,82,72],"2097":[83,9,83,16],"2105":[83,9,83,27],"2113":[84,9,84,16],"2121":[84,9,84,19],"2129":[84,32,84,39],"2137":[84,41,84,49],"2145":[84,51,84,56],"2153":[84,59,84,64],"2161":[84,67,84,73],"2169":[84,9,84,74],"2171":[84,9,84,31],"2177":[84,9,84,75],"2185":[86,13,86,18],"2193":[87,13,87,20],"2201":[87,13,87,23],"2209":[87,36,87,43],"2217":[87,45,87,53],"2225":[87,55,87,65],"2233":[87,13,87,66],"2235":[87,13,87,35],"2241":[87,13,87,67],"2249":[89,13,89,20],"2257":[89,13,89,23],"2265":[89,38,89,46],"2273":[89,48,89,55],"2281":[89,48,89,58],"2289":[89,72,89,79],"2297":[89,48,89,80],"2299":[89,48,89,71],"2305":[90,23,90,27],"2313":[91,23,91,27],"2321":[91,23,91,32],"2329":[89,82,92,14],"2337":[89,13,92,15],"2339":[89,13,89,37],"2345":[89,13,92,16],"2353":[93,13,93,20],"2361":[93,13,93,23],"2369":[93,35,93,43],"2377":[93,45,93,49],"2385":[93,45,93,55],"2393":[93,57,93,61],"2401":[93,57,93,67],"2409":[93,13,93,68],"2411":[93,13,93,34],"2417":[93,13,93,69],"2425":[72,1,96,2],"2433":[72,1,96,2],"2441":[72,1,96,2],"2449":[72,1,96,2],"2457":[72,1,96,2],"2465":[72,1,96,2],"2473":[72,1,96,2],"2481":[1,1,96,2],"2489":[1,1,96,2],"2497":[1,1,96,2],"2505":[1,1,96,2],"2513":[1,1,96,2],"2521":[1,1,96,2],"2529":[1,1,96,2],"2537":[1,1,96,2],"2545":[12,1,32,2],"2553":[1,1,96,2],"2561":[34,1,36,2],"2569":[1,1,96,2],"2577":[38,1,40,2],"2585":[1,1,96,2],"2593":[41,1,46,2],"2601":[1,1,96,2],"2609":[48,1,54,2],"2617":[1,1,96,2],"2625":[60,1,70,2],"2633":[1,1,96,2],"2641":[1,1,96,2],"2649":[72,1,96,2],"2657":[1,1,96,2],"2665":[13,5,15,6],"2673":[12,1,32,2],"2681":[12,1,32,2],"2689":[34,1,36,2],"2697":[34,1,36,2],"2705":[38,1,40,2],"2713":[38,1,40,2],"2721":[42,5,44,6],"2729":[41,1,46,2],"2737":[41,1,46,2],"2745":[49,5,53,6],"2753":[48,1,54,2],"2761":[48,1,54,2],"2769":[56,10,58,6],"2777":[56,10,58,6],"2785":[66,12,68,6],"2793":[64,5,68,6],"2801":[60,1,70,2],"2809":[60,1,70,2],"2817":[76,5,80,6],"2825":[81,33,81,78],"2833":[84,51,84,73],"2841":[86,9,94,10],"2849":[83,5,95,6],"2857":[72,1,96,2],"2865":[72,1,96,2],"2873":[1,1,96,2],"2881":[1,1,96,2],"nBranches":20,"originalCodeFileName":"/home/blake/ExpoSE/Targets/ember-component-css-withbp/node_modules/symlink-or-copy/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/ember-component-css-withbp/node_modules/symlink-or-copy/index_jalangi_.js","code":"var fs = require('fs')\nvar tmpdir = require('os').tmpdir();\nvar path = require('path')\n\nvar isWindows = process.platform === 'win32'\n// These can be overridden for testing\nvar options = {\n  isWindows: isWindows,\n  canSymlink: testCanSymlink(),\n  fs: fs\n}\n\nfunction testCanSymlink () {\n  // We can't use options here because this function gets called before\n  // its defined\n  if (isWindows === false) { return true; }\n\n  var canLinkSrc  = path.join(tmpdir, \"canLinkSrc.tmp\")\n  var canLinkDest = path.join(tmpdir, \"canLinkDest.tmp\")\n\n  try {\n    fs.writeFileSync(canLinkSrc, '');\n  } catch (e) {\n    return false\n  }\n\n  try {\n    fs.symlinkSync(canLinkSrc, canLinkDest)\n  } catch (e) {\n    fs.unlinkSync(canLinkSrc)\n    return false\n  }\n\n  fs.unlinkSync(canLinkSrc)\n  fs.unlinkSync(canLinkDest)\n\n  return true\n}\n\nmodule.exports = symlinkOrCopy;\nfunction symlinkOrCopy () {\n  throw new Error(\"This function does not exist. Use require('symlink-or-copy').sync\")\n}\n\nmodule.exports.setOptions = setOptions\nfunction setOptions(newOptions) {\n  options = newOptions\n}\n\nfunction cleanup(path) {\n  if (typeof path !== 'string' ) { return }\n  // WSL (Windows Subsystem Linux) has issues with:\n  //  * https://github.com/ember-cli/ember-cli/issues/6338\n  //  * trailing `/` on symlinked directories\n  //  * extra/duplicate `/` mid-path\n  //  issue: https://github.com/Microsoft/BashOnWindows/issues/1421\n  return path.replace(/\\/$/,'').replace(/\\/\\//g, '/');\n}\n\nmodule.exports.sync = symlinkOrCopySync\nfunction symlinkOrCopySync (srcPath, destPath) {\n  if (options.isWindows) {\n    symlinkWindows(srcPath, destPath)\n  } else {\n    symlink(srcPath, destPath)\n  }\n}\n\nObject.defineProperty(module.exports, 'canSymlink', {\n  get: function() {\n    return !!options.canSymlink;\n  }\n});\n\nfunction symlink(_srcPath, _destPath) {\n  var srcPath = cleanup(_srcPath);\n  var destPath = cleanup(_destPath);\n\n  var lstat = options.fs.lstatSync(srcPath)\n  if (lstat.isSymbolicLink()) {\n    // When we encounter symlinks, follow them. This prevents indirection\n    // from growing out of control.\n    // Note: At the moment `realpathSync` on Node is 70x slower than native,\n    // because it doesn't use the standard library's `realpath`:\n    // https://github.com/joyent/node/issues/7902\n    // Can someone please send a patch to Node? :)\n    srcPath = options.fs.realpathSync(srcPath)\n  } else if (srcPath[0] !== '/') {\n    // Resolve relative paths.\n    // Note: On Mac and Linux (unlike Windows), process.cwd() never contains\n    // symlink components, due to the way getcwd is implemented. As a\n    // result, it's correct to use naive string concatenation in this code\n    // path instead of the slower path.resolve(). (It seems unnecessary in\n    // principle that path.resolve() is slower. Does anybody want to send a\n    // patch to Node?)\n    srcPath = process.cwd() + '/' + srcPath\n  }\n  options.fs.symlinkSync(srcPath, destPath);\n}\n\n// Instruct Win32 to suspend path parsing by prefixing the path with a \\\\?\\.\n// Fix for https://github.com/broccolijs/broccoli-merge-trees/issues/42\nvar WINDOWS_PREFIX = \"\\\\\\\\?\\\\\";\n\nfunction symlinkWindows(srcPath, destPath) {\n  var stat = options.fs.lstatSync(srcPath)\n  var isDir = stat.isDirectory()\n  var wasResolved = false;\n\n  if (stat.isSymbolicLink()) {\n    srcPath = options.fs.realpathSync(srcPath);\n    isDir = options.fs.lstatSync(srcPath).isDirectory();\n    wasResolved = true;\n  }\n\n  srcPath = WINDOWS_PREFIX + (wasResolved ? srcPath : path.resolve(srcPath));\n  destPath = WINDOWS_PREFIX + path.resolve(path.normalize(destPath));\n\n  if (options.canSymlink) {\n    options.fs.symlinkSync(srcPath, destPath, isDir ? 'dir' : 'file');\n  } else {\n    if (isDir) {\n      options.fs.symlinkSync(srcPath, destPath, 'junction');\n    } else {\n      options.fs.writeFileSync(destPath, options.fs.readFileSync(srcPath), { flag: 'wx', mode: stat.mode })\n      options.fs.utimesSync(destPath, stat.atime, stat.mtime)\n    }\n  }\n}\n"};
jalangiLabel236:
    while (true) {
        try {
            J$.Se(2481, '/home/blake/ExpoSE/Targets/ember-component-css-withbp/node_modules/symlink-or-copy/index_jalangi_.js', '/home/blake/ExpoSE/Targets/ember-component-css-withbp/node_modules/symlink-or-copy/index.js');
            function testCanSymlink() {
                jalangiLabel228:
                    while (true) {
                        try {
                            J$.Fe(705, arguments.callee, this, arguments);
                            arguments = J$.N(713, 'arguments', arguments, 4);
                            J$.N(721, 'canLinkSrc', canLinkSrc, 0);
                            J$.N(729, 'canLinkDest', canLinkDest, 0);
                            if (J$.X1(2665, J$.C(8, J$.B(18, '===', J$.R(305, 'isWindows', isWindows, 1), J$.T(313, false, 23, false), 0)))) {
                                return J$.X1(337, J$.Rt(329, J$.T(321, true, 23, false)));
                            }
                            var canLinkSrc = J$.X1(385, J$.W(377, 'canLinkSrc', J$.M(369, J$.R(345, 'path', path, 1), 'join', 0)(J$.R(353, 'tmpdir', tmpdir, 1), J$.T(361, 'canLinkSrc.tmp', 21, false)), canLinkSrc, 1));
                            var canLinkDest = J$.X1(433, J$.W(425, 'canLinkDest', J$.M(417, J$.R(393, 'path', path, 1), 'join', 0)(J$.R(401, 'tmpdir', tmpdir, 1), J$.T(409, 'canLinkDest.tmp', 21, false)), canLinkDest, 1));
                            try {
                                J$.X1(473, J$.M(465, J$.R(441, 'fs', fs, 1), 'writeFileSync', 0)(J$.R(449, 'canLinkSrc', canLinkSrc, 0), J$.T(457, '', 21, false)));
                            } catch (e) {
                                e = J$.N(505, 'e', e, 1);
                                return J$.X1(497, J$.Rt(489, J$.T(481, false, 23, false)));
                            }
                            try {
                                J$.X1(545, J$.M(537, J$.R(513, 'fs', fs, 1), 'symlinkSync', 0)(J$.R(521, 'canLinkSrc', canLinkSrc, 0), J$.R(529, 'canLinkDest', canLinkDest, 0)));
                            } catch (e) {
                                e = J$.N(609, 'e', e, 1);
                                J$.X1(577, J$.M(569, J$.R(553, 'fs', fs, 1), 'unlinkSync', 0)(J$.R(561, 'canLinkSrc', canLinkSrc, 0)));
                                return J$.X1(601, J$.Rt(593, J$.T(585, false, 23, false)));
                            }
                            J$.X1(641, J$.M(633, J$.R(617, 'fs', fs, 1), 'unlinkSync', 0)(J$.R(625, 'canLinkSrc', canLinkSrc, 0)));
                            J$.X1(673, J$.M(665, J$.R(649, 'fs', fs, 1), 'unlinkSync', 0)(J$.R(657, 'canLinkDest', canLinkDest, 0)));
                            return J$.X1(697, J$.Rt(689, J$.T(681, true, 23, false)));
                        } catch (J$e) {
                            J$.Ex(2673, J$e);
                        } finally {
                            if (J$.Fr(2681))
                                continue jalangiLabel228;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function symlinkOrCopy() {
                jalangiLabel229:
                    while (true) {
                        try {
                            J$.Fe(809, arguments.callee, this, arguments);
                            arguments = J$.N(817, 'arguments', arguments, 4);
                            throw J$.X1(801, J$.Th(793, J$.F(785, J$.R(769, 'Error', Error, 2), 1)(J$.T(777, 'This function does not exist. Use require(\'symlink-or-copy\').sync', 21, false))));
                        } catch (J$e) {
                            J$.Ex(2689, J$e);
                        } finally {
                            if (J$.Fr(2697))
                                continue jalangiLabel229;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function setOptions(newOptions) {
                jalangiLabel230:
                    while (true) {
                        try {
                            J$.Fe(889, arguments.callee, this, arguments);
                            arguments = J$.N(897, 'arguments', arguments, 4);
                            newOptions = J$.N(905, 'newOptions', newOptions, 4);
                            J$.X1(881, options = J$.W(873, 'options', J$.R(865, 'newOptions', newOptions, 0), options, 2));
                        } catch (J$e) {
                            J$.Ex(2705, J$e);
                        } finally {
                            if (J$.Fr(2713))
                                continue jalangiLabel230;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function cleanup(path) {
                jalangiLabel231:
                    while (true) {
                        try {
                            J$.Fe(1017, arguments.callee, this, arguments);
                            arguments = J$.N(1025, 'arguments', arguments, 4);
                            path = J$.N(1033, 'path', path, 4);
                            if (J$.X1(2721, J$.C(16, J$.B(34, '!==', J$.U(26, 'typeof', J$.R(913, 'path', path, 0)), J$.T(921, 'string', 21, false), 0)))) {
                                return J$.X1(937, J$.Rt(929, undefined));
                            }
                            return J$.X1(1009, J$.Rt(1001, J$.M(993, J$.M(969, J$.R(945, 'path', path, 0), 'replace', 0)(J$.T(953, /\/$/, 14, false), J$.T(961, '', 21, false)), 'replace', 0)(J$.T(977, /\/\//g, 14, false), J$.T(985, '/', 21, false))));
                        } catch (J$e) {
                            J$.Ex(2729, J$e);
                        } finally {
                            if (J$.Fr(2737))
                                continue jalangiLabel231;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function symlinkOrCopySync(srcPath, destPath) {
                jalangiLabel232:
                    while (true) {
                        try {
                            J$.Fe(1177, arguments.callee, this, arguments);
                            arguments = J$.N(1185, 'arguments', arguments, 4);
                            srcPath = J$.N(1193, 'srcPath', srcPath, 4);
                            destPath = J$.N(1201, 'destPath', destPath, 4);
                            if (J$.X1(2745, J$.C(24, J$.G(1089, J$.R(1081, 'options', options, 1), 'isWindows', 0)))) {
                                J$.X1(1129, J$.F(1121, J$.R(1097, 'symlinkWindows', symlinkWindows, 1), 0)(J$.R(1105, 'srcPath', srcPath, 0), J$.R(1113, 'destPath', destPath, 0)));
                            } else {
                                J$.X1(1169, J$.F(1161, J$.R(1137, 'symlink', symlink, 1), 0)(J$.R(1145, 'srcPath', srcPath, 0), J$.R(1153, 'destPath', destPath, 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(2753, J$e);
                        } finally {
                            if (J$.Fr(2761))
                                continue jalangiLabel232;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function symlink(_srcPath, _destPath) {
                jalangiLabel234:
                    while (true) {
                        try {
                            J$.Fe(1641, arguments.callee, this, arguments);
                            arguments = J$.N(1649, 'arguments', arguments, 4);
                            _srcPath = J$.N(1657, '_srcPath', _srcPath, 4);
                            _destPath = J$.N(1665, '_destPath', _destPath, 4);
                            J$.N(1673, 'srcPath', srcPath, 0);
                            J$.N(1681, 'destPath', destPath, 0);
                            J$.N(1689, 'lstat', lstat, 0);
                            var srcPath = J$.X1(1353, J$.W(1345, 'srcPath', J$.F(1337, J$.R(1321, 'cleanup', cleanup, 1), 0)(J$.R(1329, '_srcPath', _srcPath, 0)), srcPath, 1));
                            var destPath = J$.X1(1393, J$.W(1385, 'destPath', J$.F(1377, J$.R(1361, 'cleanup', cleanup, 1), 0)(J$.R(1369, '_destPath', _destPath, 0)), destPath, 1));
                            var lstat = J$.X1(1441, J$.W(1433, 'lstat', J$.M(1425, J$.G(1409, J$.R(1401, 'options', options, 1), 'fs', 0), 'lstatSync', 0)(J$.R(1417, 'srcPath', srcPath, 0)), lstat, 1));
                            if (J$.X1(2793, J$.C(40, J$.M(1457, J$.R(1449, 'lstat', lstat, 0), 'isSymbolicLink', 0)()))) {
                                J$.X1(1505, srcPath = J$.W(1497, 'srcPath', J$.M(1489, J$.G(1473, J$.R(1465, 'options', options, 1), 'fs', 0), 'realpathSync', 0)(J$.R(1481, 'srcPath', srcPath, 0)), srcPath, 0));
                            } else if (J$.X1(2785, J$.C(32, J$.B(58, '!==', J$.G(1529, J$.R(1513, 'srcPath', srcPath, 0), J$.T(1521, 0, 22, false), 4), J$.T(1537, '/', 21, false), 0)))) {
                                J$.X1(1585, srcPath = J$.W(1577, 'srcPath', J$.B(74, '+', J$.B(66, '+', J$.M(1553, J$.R(1545, 'process', process, 2), 'cwd', 0)(), J$.T(1561, '/', 21, false), 0), J$.R(1569, 'srcPath', srcPath, 0), 0), srcPath, 0));
                            }
                            J$.X1(1633, J$.M(1625, J$.G(1601, J$.R(1593, 'options', options, 1), 'fs', 0), 'symlinkSync', 0)(J$.R(1609, 'srcPath', srcPath, 0), J$.R(1617, 'destPath', destPath, 0)));
                        } catch (J$e) {
                            J$.Ex(2801, J$e);
                        } finally {
                            if (J$.Fr(2809))
                                continue jalangiLabel234;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function symlinkWindows(srcPath, destPath) {
                jalangiLabel235:
                    while (true) {
                        try {
                            J$.Fe(2425, arguments.callee, this, arguments);
                            arguments = J$.N(2433, 'arguments', arguments, 4);
                            srcPath = J$.N(2441, 'srcPath', srcPath, 4);
                            destPath = J$.N(2449, 'destPath', destPath, 4);
                            J$.N(2457, 'stat', stat, 0);
                            J$.N(2465, 'isDir', isDir, 0);
                            J$.N(2473, 'wasResolved', wasResolved, 0);
                            var stat = J$.X1(1761, J$.W(1753, 'stat', J$.M(1745, J$.G(1729, J$.R(1721, 'options', options, 1), 'fs', 0), 'lstatSync', 0)(J$.R(1737, 'srcPath', srcPath, 0)), stat, 1));
                            var isDir = J$.X1(1793, J$.W(1785, 'isDir', J$.M(1777, J$.R(1769, 'stat', stat, 0), 'isDirectory', 0)(), isDir, 1));
                            var wasResolved = J$.X1(1817, J$.W(1809, 'wasResolved', J$.T(1801, false, 23, false), wasResolved, 1));
                            if (J$.X1(2817, J$.C(48, J$.M(1833, J$.R(1825, 'stat', stat, 0), 'isSymbolicLink', 0)()))) {
                                J$.X1(1881, srcPath = J$.W(1873, 'srcPath', J$.M(1865, J$.G(1849, J$.R(1841, 'options', options, 1), 'fs', 0), 'realpathSync', 0)(J$.R(1857, 'srcPath', srcPath, 0)), srcPath, 0));
                                J$.X1(1937, isDir = J$.W(1929, 'isDir', J$.M(1921, J$.M(1913, J$.G(1897, J$.R(1889, 'options', options, 1), 'fs', 0), 'lstatSync', 0)(J$.R(1905, 'srcPath', srcPath, 0)), 'isDirectory', 0)(), isDir, 0));
                                J$.X1(1961, wasResolved = J$.W(1953, 'wasResolved', J$.T(1945, true, 23, false), wasResolved, 0));
                            }
                            J$.X1(2025, srcPath = J$.W(2017, 'srcPath', J$.B(82, '+', J$.R(1969, 'WINDOWS_PREFIX', WINDOWS_PREFIX, 1), J$.X1(2825, J$.C(56, J$.R(1977, 'wasResolved', wasResolved, 0))) ? J$.R(1985, 'srcPath', srcPath, 0) : J$.M(2009, J$.R(1993, 'path', path, 1), 'resolve', 0)(J$.R(2001, 'srcPath', srcPath, 0)), 0), srcPath, 0));
                            J$.X1(2089, destPath = J$.W(2081, 'destPath', J$.B(90, '+', J$.R(2033, 'WINDOWS_PREFIX', WINDOWS_PREFIX, 1), J$.M(2073, J$.R(2041, 'path', path, 1), 'resolve', 0)(J$.M(2065, J$.R(2049, 'path', path, 1), 'normalize', 0)(J$.R(2057, 'destPath', destPath, 0))), 0), destPath, 0));
                            if (J$.X1(2849, J$.C(80, J$.G(2105, J$.R(2097, 'options', options, 1), 'canSymlink', 0)))) {
                                J$.X1(2177, J$.M(2169, J$.G(2121, J$.R(2113, 'options', options, 1), 'fs', 0), 'symlinkSync', 0)(J$.R(2129, 'srcPath', srcPath, 0), J$.R(2137, 'destPath', destPath, 0), J$.X1(2833, J$.C(64, J$.R(2145, 'isDir', isDir, 0))) ? J$.T(2153, 'dir', 21, false) : J$.T(2161, 'file', 21, false)));
                            } else {
                                if (J$.X1(2841, J$.C(72, J$.R(2185, 'isDir', isDir, 0)))) {
                                    J$.X1(2241, J$.M(2233, J$.G(2201, J$.R(2193, 'options', options, 1), 'fs', 0), 'symlinkSync', 0)(J$.R(2209, 'srcPath', srcPath, 0), J$.R(2217, 'destPath', destPath, 0), J$.T(2225, 'junction', 21, false)));
                                } else {
                                    J$.X1(2345, J$.M(2337, J$.G(2257, J$.R(2249, 'options', options, 1), 'fs', 0), 'writeFileSync', 0)(J$.R(2265, 'destPath', destPath, 0), J$.M(2297, J$.G(2281, J$.R(2273, 'options', options, 1), 'fs', 0), 'readFileSync', 0)(J$.R(2289, 'srcPath', srcPath, 0)), J$.T(2329, {
                                        flag: J$.T(2305, 'wx', 21, false),
                                        mode: J$.G(2321, J$.R(2313, 'stat', stat, 0), 'mode', 0)
                                    }, 11, false)));
                                    J$.X1(2417, J$.M(2409, J$.G(2361, J$.R(2353, 'options', options, 1), 'fs', 0), 'utimesSync', 0)(J$.R(2369, 'destPath', destPath, 0), J$.G(2385, J$.R(2377, 'stat', stat, 0), 'atime', 0), J$.G(2401, J$.R(2393, 'stat', stat, 0), 'mtime', 0)));
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(2857, J$e);
                        } finally {
                            if (J$.Fr(2865))
                                continue jalangiLabel235;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2489, '__secret__S$', __secret__S$, 0);
            J$.N(2497, '__secret__traits__', __secret__traits__, 0);
            J$.N(2505, 'fs', fs, 0);
            J$.N(2513, 'tmpdir', tmpdir, 0);
            J$.N(2521, 'path', path, 0);
            J$.N(2529, 'isWindows', isWindows, 0);
            J$.N(2537, 'options', options, 0);
            testCanSymlink = J$.N(2553, 'testCanSymlink', J$.T(2545, testCanSymlink, 12, false, 705), 0);
            symlinkOrCopy = J$.N(2569, 'symlinkOrCopy', J$.T(2561, symlinkOrCopy, 12, false, 809), 0);
            setOptions = J$.N(2585, 'setOptions', J$.T(2577, setOptions, 12, false, 889), 0);
            cleanup = J$.N(2601, 'cleanup', J$.T(2593, cleanup, 12, false, 1017), 0);
            symlinkOrCopySync = J$.N(2617, 'symlinkOrCopySync', J$.T(2609, symlinkOrCopySync, 12, false, 1177), 0);
            symlink = J$.N(2633, 'symlink', J$.T(2625, symlink, 12, false, 1641), 0);
            J$.N(2641, 'WINDOWS_PREFIX', WINDOWS_PREFIX, 0);
            symlinkWindows = J$.N(2657, 'symlinkWindows', J$.T(2649, symlinkWindows, 12, false, 2425), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var fs = J$.X1(113, J$.W(105, 'fs', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, 'fs', 21, false)), fs, 3));
            var tmpdir = J$.X1(161, J$.W(153, 'tmpdir', J$.M(145, J$.F(137, J$.R(121, 'require', require, 2), 0)(J$.T(129, 'os', 21, false)), 'tmpdir', 0)(), tmpdir, 3));
            var path = J$.X1(201, J$.W(193, 'path', J$.F(185, J$.R(169, 'require', require, 2), 0)(J$.T(177, 'path', 21, false)), path, 3));
            var isWindows = J$.X1(241, J$.W(233, 'isWindows', J$.B(10, '===', J$.G(217, J$.R(209, 'process', process, 2), 'platform', 0), J$.T(225, 'win32', 21, false), 0), isWindows, 3));
            var options = J$.X1(297, J$.W(289, 'options', J$.T(281, {
                isWindows: J$.R(249, 'isWindows', isWindows, 1),
                canSymlink: J$.F(265, J$.R(257, 'testCanSymlink', testCanSymlink, 1), 0)(),
                fs: J$.R(273, 'fs', fs, 1)
            }, 11, false), options, 3));
            J$.X1(761, J$.P(753, J$.R(737, 'module', module, 2), 'exports', J$.R(745, 'symlinkOrCopy', symlinkOrCopy, 1), 0));
            J$.X1(857, J$.P(849, J$.G(833, J$.R(825, 'module', module, 2), 'exports', 0), 'setOptions', J$.R(841, 'setOptions', setOptions, 1), 0));
            J$.X1(1073, J$.P(1065, J$.G(1049, J$.R(1041, 'module', module, 2), 'exports', 0), 'sync', J$.R(1057, 'symlinkOrCopySync', symlinkOrCopySync, 1), 0));
            J$.X1(1313, J$.M(1305, J$.R(1209, 'Object', Object, 2), 'defineProperty', 0)(J$.G(1225, J$.R(1217, 'module', module, 2), 'exports', 0), J$.T(1233, 'canSymlink', 21, false), J$.T(1297, {
                get: J$.T(1289, function () {
                    jalangiLabel233:
                        while (true) {
                            try {
                                J$.Fe(1273, arguments.callee, this, arguments);
                                arguments = J$.N(1281, 'arguments', arguments, 4);
                                return J$.X1(1265, J$.Rt(1257, J$.U(50, '!', J$.U(42, '!', J$.G(1249, J$.R(1241, 'options', options, 1), 'canSymlink', 0)))));
                            } catch (J$e) {
                                J$.Ex(2769, J$e);
                            } finally {
                                if (J$.Fr(2777))
                                    continue jalangiLabel233;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 1273)
            }, 11, false)));
            var WINDOWS_PREFIX = J$.X1(1713, J$.W(1705, 'WINDOWS_PREFIX', J$.T(1697, '\\\\?\\', 21, false), WINDOWS_PREFIX, 3));
        } catch (J$e) {
            J$.Ex(2873, J$e);
        } finally {
            if (J$.Sr(2881)) {
                J$.L();
                continue jalangiLabel236;
            } else {
                J$.L();
                break jalangiLabel236;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
