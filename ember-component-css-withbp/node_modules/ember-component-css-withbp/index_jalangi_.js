J$.iids = {"8":[17,28,17,58],"9":[1,20,1,27],"10":[35,31,35,46],"16":[21,13,21,38],"17":[1,28,1,32],"18":[39,27,39,52],"24":[39,13,39,62],"25":[1,20,1,33],"26":[39,27,39,61],"32":[66,23,66,59],"33":[1,20,1,33],"34":[40,35,40,102],"40":[65,13,65,52],"41":[1,20,1,33],"42":[65,13,65,52],"48":[82,13,82,29],"49":[2,26,2,38],"50":[82,13,82,29],"56":[96,13,96,49],"57":[2,26,2,45],"58":[85,46,85,78],"64":[107,13,107,27],"65":[2,26,2,45],"66":[89,16,89,54],"73":[2,26,2,45],"74":[107,13,107,27],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,14,4,21],"105":[4,22,4,39],"113":[4,14,4,40],"121":[4,14,4,40],"129":[4,14,4,40],"137":[5,22,5,29],"145":[5,30,5,57],"153":[5,22,5,58],"161":[5,22,5,58],"169":[5,22,5,58],"177":[6,12,6,19],"185":[6,20,6,26],"193":[6,12,6,27],"201":[6,12,6,27],"209":[6,12,6,27],"217":[7,10,7,17],"225":[7,18,7,22],"233":[7,10,7,23],"241":[7,10,7,23],"249":[7,10,7,23],"257":[8,32,8,39],"265":[8,40,8,74],"273":[8,32,8,75],"281":[8,32,8,75],"289":[8,32,8,75],"297":[9,33,9,40],"305":[9,41,9,76],"313":[9,33,9,77],"321":[9,33,9,77],"329":[9,33,9,77],"337":[11,30,11,37],"345":[11,38,11,60],"353":[11,30,11,61],"361":[11,30,11,61],"369":[11,30,11,61],"377":[12,13,12,20],"385":[12,21,12,66],"393":[12,13,12,67],"401":[12,13,12,67],"409":[12,13,12,67],"417":[13,25,13,26],"425":[13,25,13,40],"433":[13,25,13,40],"441":[13,25,13,40],"449":[14,31,14,32],"457":[14,31,14,52],"465":[14,31,14,52],"473":[14,31,14,52],"481":[16,20,16,38],"489":[16,39,16,48],"497":[16,50,16,57],"505":[16,20,16,58],"513":[16,20,16,58],"521":[16,20,16,58],"529":[17,9,17,13],"537":[17,28,17,35],"545":[17,39,17,46],"553":[17,39,17,58],"561":[17,9,17,58],"569":[17,9,17,59],"577":[18,16,18,20],"585":[18,16,18,20],"593":[18,9,18,21],"601":[15,5,19,6],"609":[15,5,19,6],"617":[15,5,19,6],"625":[15,5,19,6],"633":[15,5,19,6],"641":[20,5,20,13],"649":[20,5,20,23],"657":[21,13,21,17],"665":[21,13,21,38],"673":[22,20,22,24],"681":[22,20,22,45],"689":[22,20,22,45],"697":[22,13,22,46],"705":[24,31,24,33],"713":[24,41,24,45],"721":[24,41,24,68],"723":[24,41,24,66],"729":[24,70,24,74],"737":[24,70,24,94],"739":[24,70,24,92],"745":[25,17,25,23],"753":[25,24,25,34],"761":[25,13,25,35],"769":[26,17,26,23],"777":[26,24,26,37],"785":[26,13,26,38],"793":[24,96,27,10],"801":[24,31,27,11],"803":[24,31,24,40],"809":[24,31,27,11],"817":[24,31,27,11],"825":[28,16,28,20],"833":[28,48,28,54],"841":[28,55,28,59],"849":[28,55,28,65],"857":[28,55,28,69],"865":[29,22,29,37],"873":[30,26,30,48],"881":[28,71,31,10],"889":[28,44,31,11],"897":[28,16,31,11],"905":[28,16,31,11],"913":[28,9,31,12],"921":[20,41,32,6],"929":[20,41,32,6],"937":[20,41,32,6],"945":[20,41,32,6],"953":[20,5,32,6],"961":[20,5,32,7],"969":[33,5,33,13],"977":[33,5,33,23],"985":[34,16,34,20],"993":[34,16,34,29],"1001":[34,48,34,53],"1009":[34,16,34,54],"1011":[34,16,34,47],"1017":[35,24,35,30],"1025":[35,31,35,40],"1033":[35,43,35,46],"1041":[35,20,35,47],"1049":[35,20,35,47],"1057":[35,13,35,48],"1065":[34,59,36,10],"1073":[34,59,36,10],"1081":[34,59,36,10],"1089":[34,59,36,10],"1097":[34,16,36,11],"1099":[34,16,34,58],"1105":[34,16,36,11],"1113":[34,9,36,12],"1121":[33,44,37,6],"1129":[33,44,37,6],"1137":[33,44,37,6],"1145":[33,5,37,6],"1153":[33,5,37,7],"1161":[38,5,38,13],"1169":[38,5,38,23],"1177":[39,13,39,15],"1185":[39,27,39,40],"1193":[39,43,39,47],"1201":[39,43,39,52],"1209":[39,55,39,61],"1217":[39,13,39,62],"1219":[39,13,39,26],"1225":[40,23,40,34],"1233":[40,35,40,90],"1241":[40,93,40,97],"1249":[40,93,40,102],"1257":[40,19,40,103],"1265":[40,19,40,103],"1273":[40,13,40,104],"1281":[42,26,42,30],"1289":[42,45,42,53],"1297":[42,26,42,54],"1299":[42,26,42,44],"1305":[42,26,42,54],"1313":[42,26,42,54],"1321":[43,24,43,28],"1329":[43,24,43,53],"1331":[43,24,43,51],"1337":[43,24,43,53],"1345":[43,24,43,53],"1353":[44,26,44,32],"1361":[44,33,44,37],"1369":[44,33,44,43],"1377":[44,33,44,50],"1385":[45,21,45,24],"1393":[46,22,46,35],"1401":[44,52,47,10],"1409":[44,22,47,11],"1417":[44,22,47,11],"1425":[44,22,47,11],"1433":[48,25,48,29],"1441":[48,25,48,35],"1449":[48,25,48,39],"1457":[48,24,48,40],"1465":[48,48,48,52],"1473":[48,67,48,72],"1481":[48,48,48,73],"1483":[48,48,48,66],"1489":[48,24,48,74],"1491":[48,24,48,47],"1497":[48,24,48,74],"1505":[48,24,48,74],"1513":[49,29,49,35],"1521":[49,36,49,46],"1529":[49,47,49,55],"1537":[49,70,49,74],"1545":[49,57,49,76],"1553":[49,36,49,77],"1561":[50,22,50,26],"1569":[50,22,50,46],"1571":[50,22,50,44],"1577":[51,23,51,32],"1585":[51,22,51,33],"1593":[52,22,52,28],"1601":[53,26,53,46],"1609":[49,79,54,10],"1617":[49,25,54,11],"1625":[49,25,54,11],"1633":[49,25,54,11],"1641":[55,22,55,30],"1649":[55,21,55,31],"1657":[55,39,55,49],"1665":[55,51,55,60],"1673":[55,62,55,68],"1681":[55,21,55,69],"1683":[55,21,55,38],"1689":[55,21,55,69],"1697":[55,21,55,69],"1705":[56,31,56,41],"1713":[56,42,56,47],"1721":[56,64,56,94],"1729":[56,49,56,96],"1737":[56,31,56,97],"1745":[56,31,56,97],"1753":[56,31,56,97],"1761":[57,38,57,42],"1769":[57,38,57,50],"1777":[57,38,57,62],"1785":[57,38,57,66],"1793":[57,38,57,70],"1801":[57,23,57,72],"1809":[57,23,57,72],"1817":[57,23,57,72],"1825":[58,9,58,16],"1833":[58,28,58,32],"1841":[58,28,58,41],"1849":[58,9,58,41],"1857":[58,9,58,42],"1865":[59,34,59,47],"1873":[59,48,59,63],"1881":[59,65,59,78],"1889":[59,80,59,89],"1897":[59,91,59,98],"1905":[59,34,59,99],"1913":[59,34,59,99],"1921":[59,34,59,99],"1929":[60,28,60,32],"1937":[60,45,60,60],"1945":[61,25,61,29],"1953":[61,25,61,48],"1961":[61,57,61,76],"1969":[61,56,61,77],"1977":[61,25,61,78],"1979":[61,25,61,55],"1985":[62,25,62,29],"1993":[62,25,62,37],"2001":[62,25,62,49],"2009":[62,25,62,56],"2017":[62,25,62,60],"2025":[63,26,63,49],"2033":[60,62,64,10],"2041":[60,28,64,11],"2043":[60,28,60,44],"2049":[60,28,64,11],"2057":[60,28,64,11],"2065":[65,13,65,17],"2073":[65,13,65,25],"2081":[65,13,65,35],"2089":[65,13,65,43],"2097":[65,48,65,52],"2105":[66,23,66,27],"2113":[66,23,66,35],"2121":[66,23,66,45],"2129":[66,23,66,53],"2137":[66,57,66,59],"2145":[66,23,66,59],"2153":[66,13,66,60],"2161":[67,13,67,20],"2169":[67,32,67,36],"2177":[67,32,67,45],"2185":[67,13,67,45],"2193":[67,13,67,46],"2201":[68,34,68,53],"2209":[68,54,68,72],"2217":[68,74,68,81],"2225":[68,34,68,82],"2233":[68,34,68,82],"2241":[68,13,68,83],"2249":[69,28,69,47],"2257":[69,48,69,60],"2265":[69,62,69,69],"2273":[69,28,69,70],"2281":[69,28,69,70],"2289":[69,13,69,71],"2297":[71,27,71,37],"2305":[72,13,72,31],"2313":[73,13,73,25],"2321":[71,38,74,10],"2329":[74,27,74,35],"2337":[74,12,74,37],"2345":[71,27,74,38],"2353":[71,27,74,38],"2361":[71,27,74,38],"2369":[75,16,75,20],"2377":[75,42,75,47],"2385":[75,49,75,60],"2393":[75,16,75,61],"2395":[75,16,75,41],"2401":[75,16,75,61],"2409":[75,9,75,62],"2417":[38,33,76,6],"2425":[38,33,76,6],"2433":[38,33,76,6],"2441":[38,33,76,6],"2449":[38,33,76,6],"2457":[38,33,76,6],"2465":[38,33,76,6],"2473":[38,33,76,6],"2481":[38,33,76,6],"2489":[38,33,76,6],"2497":[38,33,76,6],"2505":[38,33,76,6],"2513":[38,33,76,6],"2521":[38,33,76,6],"2529":[38,5,76,6],"2537":[38,5,76,7],"2545":[10,1,77,2],"2553":[10,1,77,2],"2561":[10,1,77,2],"2569":[10,1,77,2],"2577":[10,1,77,2],"2585":[10,1,77,2],"2593":[10,1,77,2],"2601":[15,5,19,6],"2609":[10,1,77,2],"2617":[78,1,78,7],"2625":[79,11,79,32],"2633":[81,31,81,35],"2641":[81,31,81,39],"2649":[81,31,81,47],"2657":[81,31,81,56],"2659":[81,31,81,54],"2665":[81,31,81,72],"2673":[81,31,81,72],"2681":[81,31,81,72],"2689":[82,14,82,29],"2697":[83,20,83,25],"2705":[83,20,83,25],"2713":[83,13,83,26],"2721":[85,23,85,38],"2729":[85,46,85,61],"2737":[85,70,85,73],"2745":[85,46,85,74],"2747":[85,46,85,69],"2753":[85,77,85,78],"2761":[85,23,85,79],"2763":[85,23,85,45],"2769":[85,23,85,79],"2777":[85,23,85,79],"2785":[86,16,86,20],"2793":[86,26,86,31],"2801":[86,33,86,40],"2809":[86,16,86,41],"2811":[86,16,86,25],"2817":[86,16,86,41],"2825":[86,9,86,42],"2833":[80,13,87,6],"2841":[80,13,87,6],"2849":[80,13,87,6],"2857":[80,13,87,6],"2865":[80,13,87,6],"2873":[89,17,89,31],"2881":[89,40,89,44],"2889":[89,46,89,53],"2897":[89,17,89,54],"2899":[89,17,89,39],"2905":[89,16,89,54],"2913":[89,9,89,55],"2921":[88,36,90,6],"2929":[88,36,90,6],"2937":[88,36,90,6],"2945":[92,9,92,17],"2953":[92,22,92,27],"2961":[92,33,92,57],"2969":[92,67,92,71],"2977":[92,58,92,73],"2985":[92,29,92,74],"2993":[92,9,92,75],"2995":[92,9,92,21],"3001":[92,9,92,76],"3009":[91,32,93,6],"3017":[91,32,93,6],"3025":[91,32,93,6],"3033":[91,32,93,6],"3041":[91,32,93,6],"3049":[95,9,95,20],"3057":[95,21,95,24],"3065":[95,21,95,36],"3073":[95,9,95,37],"3081":[95,9,95,38],"3089":[96,13,96,17],"3097":[96,13,96,49],"3099":[96,13,96,47],"3105":[97,13,97,17],"3113":[97,44,97,52],"3121":[97,54,97,57],"3129":[97,54,97,66],"3137":[97,13,97,67],"3139":[97,13,97,43],"3145":[97,13,97,68],"3153":[99,9,99,13],"3161":[99,20,99,23],"3169":[99,9,99,23],"3177":[99,9,99,24],"3185":[100,9,100,13],"3193":[101,21,101,27],"3201":[101,35,101,39],"3209":[101,21,101,40],"3211":[101,21,101,34],"3217":[102,21,102,23],"3225":[103,24,103,26],"3233":[100,20,104,10],"3241":[100,9,104,10],"3249":[100,9,104,11],"3257":[94,15,105,6],"3265":[94,15,105,6],"3273":[94,15,105,6],"3281":[94,15,105,6],"3289":[107,13,107,17],"3297":[107,22,107,27],"3305":[108,24,108,49],"3313":[108,50,108,61],"3321":[108,72,108,76],"3329":[108,63,108,78],"3337":[108,20,108,79],"3345":[108,20,108,79],"3353":[108,13,108,80],"3361":[110,16,110,27],"3369":[110,16,110,27],"3377":[110,9,110,28],"3385":[106,22,111,6],"3393":[106,22,111,6],"3401":[106,22,111,6],"3409":[106,22,111,6],"3417":[106,22,111,6],"3425":[78,18,112,2],"3433":[78,1,112,2],"3441":[78,1,112,3],"3449":[1,1,112,3],"3457":[1,1,112,3],"3465":[1,1,112,3],"3473":[1,1,112,3],"3481":[1,1,112,3],"3489":[1,1,112,3],"3497":[1,1,112,3],"3505":[1,1,112,3],"3513":[1,1,112,3],"3521":[10,1,77,2],"3529":[1,1,112,3],"3537":[15,5,19,6],"3545":[15,5,19,6],"3553":[21,9,23,10],"3561":[20,41,32,6],"3569":[20,41,32,6],"3577":[34,59,36,10],"3585":[34,59,36,10],"3593":[33,44,37,6],"3601":[33,44,37,6],"3609":[39,9,41,10],"3617":[65,9,70,10],"3625":[38,33,76,6],"3633":[38,33,76,6],"3641":[10,1,77,2],"3649":[10,1,77,2],"3657":[82,9,84,10],"3665":[80,13,87,6],"3673":[80,13,87,6],"3681":[88,36,90,6],"3689":[88,36,90,6],"3697":[91,32,93,6],"3705":[91,32,93,6],"3713":[96,9,98,10],"3721":[94,15,105,6],"3729":[94,15,105,6],"3737":[107,9,109,10],"3745":[106,22,111,6],"3753":[106,22,111,6],"3761":[1,1,112,3],"3769":[1,1,112,3],"nBranches":16,"originalCodeFileName":"/home/blake/ExpoSE/Targets/ember-component-css-withbp/node_modules/ember-component-css-withbp/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/ember-component-css-withbp/node_modules/ember-component-css-withbp/index_jalangi_.js","code":"/* jshint node: true */\n'use strict';\n\nvar Funnel = require('broccoli-funnel');\nvar versionChecker = require('ember-cli-version-checker');\nvar path = require('path');\nvar fs = require('fs');\n\nvar ComponentCssPreprocessor = require('./lib/component-css-preprocessor');\nvar ComponentCssPostprocessor = require('./lib/component-css-postprocessor');\n\nfunction monkeyPatch(EmberApp) {\n  var upstreamMergeTrees = require('broccoli-merge-trees');\n  var p = require('ember-cli-preprocess-registry/preprocessors');\n  var preprocessCss = p.preprocessCss;\n  var preprocessMinifyCss = p.preprocessMinifyCss;\n\n  function mergeTrees(inputTree, options) {\n    var tree = upstreamMergeTrees(inputTree, options);\n\n    tree.description = options && options.description;\n\n    return tree;\n  }\n\n  EmberApp.prototype._filterAppTree = function() {\n    if (this._cachedFilterAppTree) {\n      return this._cachedFilterAppTree;\n    }\n\n    var excludePatterns = [].concat(\n      this._podTemplatePatterns(),\n      this._podStylePatterns(),\n      [\n        // note: do not use path.sep here Funnel uses\n        // walk-sync which always joins with `/` (not path.sep)\n        new RegExp('^styles/'),\n        new RegExp('^templates/'),\n      ]\n    );\n\n    return this._cachedFilterAppTree = new Funnel(this.trees.app, {\n      exclude: excludePatterns,\n      description: 'Funnel: Filtered App'\n    });\n  };\n\n  EmberApp.prototype._podStylePatterns = function() {\n    return this.registry.extensionsForType('css').map(function(extension) {\n      return new RegExp(extension + '$');\n    });\n  };\n\n  EmberApp.prototype.styles = function() {\n    if (fs.existsSync('app/styles/' + this.name + '.css')) {\n      throw new SilentError('Style file cannot have the name of the application - ' + this.name);\n    }\n\n    var addonTrees = this.addonTreesFor('styles');\n    var external = this._processedExternalTree();\n    var styles = new Funnel(this.trees.styles, {\n      srcDir: '/',\n      destDir: '/app/styles'\n    });\n\n    var allTrees = [this.trees.app].concat(this.addonTreesFor('app'));\n    var podStyles = new Funnel(mergeTrees(allTrees, {overwrite: true}), {\n      include: this._podStylePatterns(),\n      exclude: [ /^styles/ ],\n      destDir: '/app',\n      description: 'Funnel: Pod Styles'\n    });\n\n    var trees = [external].concat(addonTrees, podStyles, styles);\n\n    var stylesAndVendor = mergeTrees(trees, {\n      description: 'TreeMerger (stylesAndVendor)'\n    });\n\n    var options = { outputPaths: this.options.outputPaths.app.css };\n    options.registry = this.registry;\n    var preprocessedStyles = preprocessCss(stylesAndVendor, '/app/styles', '/assets', options);\n\n    var vendorStyles    = this.concatFiles(stylesAndVendor, {\n      inputFiles: this.vendorStaticStyles.concat(['vendor/addons.css']),\n      outputFile: this.options.outputPaths.vendor.css,\n      description: 'Concat: Vendor Styles'\n    });\n\n    if (this.options.minifyCSS.enabled === true) {\n      options = this.options.minifyCSS.options || {};\n      options.registry = this.registry;\n      preprocessedStyles = preprocessMinifyCss(preprocessedStyles, options);\n      vendorStyles    = preprocessMinifyCss(vendorStyles, options);\n    }\n\n    var mergedTrees = mergeTrees([\n        preprocessedStyles,\n        vendorStyles\n      ], {\n        description: 'styles'\n      });\n    return this.addonPostprocessTree('css', mergedTrees);\n  };\n}\n\nmodule.exports = {\n  name: 'ember-component-css',\n\n  // Gets the path to the pods folder\n  podDir: function() {\n    var podModulePrefix = this.app.project.config().podModulePrefix;\n    if (!podModulePrefix) { return 'app'; }\n    var podPath = podModulePrefix.substr(podModulePrefix.indexOf('/') + 1);\n    return path.join('app', podPath);\n  },\n\n  shouldSetupRegistryInIncluded: function() {\n    return !versionChecker.isAbove(this, '0.2.0');\n  },\n\n  setupPreprocessorRegistry: function(type, registry) {\n    registry.add('css', new ComponentCssPreprocessor({ addon: this }));\n  },\n\n  included: function(app) {\n    monkeyPatch(app.constructor);\n\n    if (this.shouldSetupRegistryInIncluded()) {\n      this.setupPreprocessorRegistry('parent', app.registry);\n    }\n\n    this.app = app;\n    this.pod = {\n      lookup: Object.create(null),\n      styles: '',\n      extension: ''\n    };\n  },\n\n  postprocessTree: function(type, workingTree) {\n    if (type === 'all') {\n      return new ComponentCssPostprocessor(workingTree, { addon: this });\n    }\n\n    return workingTree;\n  }\n};\n"};
jalangiLabel54:
    while (true) {
        try {
            J$.Se(3449, '/home/blake/ExpoSE/Targets/ember-component-css-withbp/node_modules/ember-component-css-withbp/index_jalangi_.js', '/home/blake/ExpoSE/Targets/ember-component-css-withbp/node_modules/ember-component-css-withbp/index.js');
            function monkeyPatch(EmberApp) {
                jalangiLabel48:
                    while (true) {
                        try {
                            J$.Fe(2545, arguments.callee, this, arguments);
                            function mergeTrees(inputTree, options) {
                                jalangiLabel43:
                                    while (true) {
                                        try {
                                            J$.Fe(601, arguments.callee, this, arguments);
                                            arguments = J$.N(609, 'arguments', arguments, 4);
                                            inputTree = J$.N(617, 'inputTree', inputTree, 4);
                                            options = J$.N(625, 'options', options, 4);
                                            J$.N(633, 'tree', tree, 0);
                                            var tree = J$.X1(521, J$.W(513, 'tree', J$.F(505, J$.R(481, 'upstreamMergeTrees', upstreamMergeTrees, 0), 0)(J$.R(489, 'inputTree', inputTree, 0), J$.R(497, 'options', options, 0)), tree, 1));
                                            J$.X1(569, J$.P(561, J$.R(529, 'tree', tree, 0), 'description', J$.C(8, J$.R(537, 'options', options, 0)) ? J$.G(553, J$.R(545, 'options', options, 0), 'description', 0) : J$._(), 0));
                                            return J$.X1(593, J$.Rt(585, J$.R(577, 'tree', tree, 0)));
                                        } catch (J$e) {
                                            J$.Ex(3537, J$e);
                                        } finally {
                                            if (J$.Fr(3545))
                                                continue jalangiLabel43;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(2553, 'arguments', arguments, 4);
                            EmberApp = J$.N(2561, 'EmberApp', EmberApp, 4);
                            J$.N(2569, 'upstreamMergeTrees', upstreamMergeTrees, 0);
                            J$.N(2577, 'p', p, 0);
                            J$.N(2585, 'preprocessCss', preprocessCss, 0);
                            J$.N(2593, 'preprocessMinifyCss', preprocessMinifyCss, 0);
                            mergeTrees = J$.N(2609, 'mergeTrees', J$.T(2601, mergeTrees, 12, false, 601), 0);
                            var upstreamMergeTrees = J$.X1(369, J$.W(361, 'upstreamMergeTrees', J$.F(353, J$.R(337, 'require', require, 2), 0)(J$.T(345, 'broccoli-merge-trees', 21, false)), upstreamMergeTrees, 1));
                            var p = J$.X1(409, J$.W(401, 'p', J$.F(393, J$.R(377, 'require', require, 2), 0)(J$.T(385, 'ember-cli-preprocess-registry/preprocessors', 21, false)), p, 1));
                            var preprocessCss = J$.X1(441, J$.W(433, 'preprocessCss', J$.G(425, J$.R(417, 'p', p, 0), 'preprocessCss', 0), preprocessCss, 1));
                            var preprocessMinifyCss = J$.X1(473, J$.W(465, 'preprocessMinifyCss', J$.G(457, J$.R(449, 'p', p, 0), 'preprocessMinifyCss', 0), preprocessMinifyCss, 1));
                            J$.X1(961, J$.P(953, J$.G(649, J$.R(641, 'EmberApp', EmberApp, 0), 'prototype', 0), '_filterAppTree', J$.T(945, function () {
                                jalangiLabel44:
                                    while (true) {
                                        try {
                                            J$.Fe(921, arguments.callee, this, arguments);
                                            arguments = J$.N(929, 'arguments', arguments, 4);
                                            J$.N(937, 'excludePatterns', excludePatterns, 0);
                                            if (J$.X1(3553, J$.C(16, J$.G(665, J$.R(657, 'this', this, 0), '_cachedFilterAppTree', 0)))) {
                                                return J$.X1(697, J$.Rt(689, J$.G(681, J$.R(673, 'this', this, 0), '_cachedFilterAppTree', 0)));
                                            }
                                            var excludePatterns = J$.X1(817, J$.W(809, 'excludePatterns', J$.M(801, J$.T(705, [], 10, false), 'concat', 0)(J$.M(721, J$.R(713, 'this', this, 0), '_podTemplatePatterns', 0)(), J$.M(737, J$.R(729, 'this', this, 0), '_podStylePatterns', 0)(), J$.T(793, [
                                                J$.F(761, J$.R(745, 'RegExp', RegExp, 2), 1)(J$.T(753, '^styles/', 21, false)),
                                                J$.F(785, J$.R(769, 'RegExp', RegExp, 2), 1)(J$.T(777, '^templates/', 21, false))
                                            ], 10, false)), excludePatterns, 1));
                                            return J$.X1(913, J$.Rt(905, J$.P(897, J$.R(825, 'this', this, 0), '_cachedFilterAppTree', J$.F(889, J$.R(833, 'Funnel', Funnel, 1), 1)(J$.G(857, J$.G(849, J$.R(841, 'this', this, 0), 'trees', 0), 'app', 0), J$.T(881, {
                                                exclude: J$.R(865, 'excludePatterns', excludePatterns, 0),
                                                description: J$.T(873, 'Funnel: Filtered App', 21, false)
                                            }, 11, false)), 0)));
                                        } catch (J$e) {
                                            J$.Ex(3561, J$e);
                                        } finally {
                                            if (J$.Fr(3569))
                                                continue jalangiLabel44;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 921), 0));
                            J$.X1(1153, J$.P(1145, J$.G(977, J$.R(969, 'EmberApp', EmberApp, 0), 'prototype', 0), '_podStylePatterns', J$.T(1137, function () {
                                jalangiLabel46:
                                    while (true) {
                                        try {
                                            J$.Fe(1121, arguments.callee, this, arguments);
                                            arguments = J$.N(1129, 'arguments', arguments, 4);
                                            return J$.X1(1113, J$.Rt(1105, J$.M(1097, J$.M(1009, J$.G(993, J$.R(985, 'this', this, 0), 'registry', 0), 'extensionsForType', 0)(J$.T(1001, 'css', 21, false)), 'map', 0)(J$.T(1089, function (extension) {
                                                jalangiLabel45:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1065, arguments.callee, this, arguments);
                                                            arguments = J$.N(1073, 'arguments', arguments, 4);
                                                            extension = J$.N(1081, 'extension', extension, 4);
                                                            return J$.X1(1057, J$.Rt(1049, J$.F(1041, J$.R(1017, 'RegExp', RegExp, 2), 1)(J$.B(10, '+', J$.R(1025, 'extension', extension, 0), J$.T(1033, '$', 21, false), 0))));
                                                        } catch (J$e) {
                                                            J$.Ex(3577, J$e);
                                                        } finally {
                                                            if (J$.Fr(3585))
                                                                continue jalangiLabel45;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 1065))));
                                        } catch (J$e) {
                                            J$.Ex(3593, J$e);
                                        } finally {
                                            if (J$.Fr(3601))
                                                continue jalangiLabel46;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1121), 0));
                            J$.X1(2537, J$.P(2529, J$.G(1169, J$.R(1161, 'EmberApp', EmberApp, 0), 'prototype', 0), 'styles', J$.T(2521, function () {
                                jalangiLabel47:
                                    while (true) {
                                        try {
                                            J$.Fe(2417, arguments.callee, this, arguments);
                                            arguments = J$.N(2425, 'arguments', arguments, 4);
                                            J$.N(2433, 'addonTrees', addonTrees, 0);
                                            J$.N(2441, 'external', external, 0);
                                            J$.N(2449, 'styles', styles, 0);
                                            J$.N(2457, 'allTrees', allTrees, 0);
                                            J$.N(2465, 'podStyles', podStyles, 0);
                                            J$.N(2473, 'trees', trees, 0);
                                            J$.N(2481, 'stylesAndVendor', stylesAndVendor, 0);
                                            J$.N(2489, 'options', options, 0);
                                            J$.N(2497, 'preprocessedStyles', preprocessedStyles, 0);
                                            J$.N(2505, 'vendorStyles', vendorStyles, 0);
                                            J$.N(2513, 'mergedTrees', mergedTrees, 0);
                                            if (J$.X1(3609, J$.C(24, J$.M(1217, J$.R(1177, 'fs', fs, 1), 'existsSync', 0)(J$.B(26, '+', J$.B(18, '+', J$.T(1185, 'app/styles/', 21, false), J$.G(1201, J$.R(1193, 'this', this, 0), 'name', 0), 0), J$.T(1209, '.css', 21, false), 0))))) {
                                                throw J$.X1(1273, J$.Th(1265, J$.F(1257, J$.R(1225, 'SilentError', SilentError, 2), 1)(J$.B(34, '+', J$.T(1233, 'Style file cannot have the name of the application - ', 21, false), J$.G(1249, J$.R(1241, 'this', this, 0), 'name', 0), 0))));
                                            }
                                            var addonTrees = J$.X1(1313, J$.W(1305, 'addonTrees', J$.M(1297, J$.R(1281, 'this', this, 0), 'addonTreesFor', 0)(J$.T(1289, 'styles', 21, false)), addonTrees, 1));
                                            var external = J$.X1(1345, J$.W(1337, 'external', J$.M(1329, J$.R(1321, 'this', this, 0), '_processedExternalTree', 0)(), external, 1));
                                            var styles = J$.X1(1425, J$.W(1417, 'styles', J$.F(1409, J$.R(1353, 'Funnel', Funnel, 1), 1)(J$.G(1377, J$.G(1369, J$.R(1361, 'this', this, 0), 'trees', 0), 'styles', 0), J$.T(1401, {
                                                srcDir: J$.T(1385, '/', 21, false),
                                                destDir: J$.T(1393, '/app/styles', 21, false)
                                            }, 11, false)), styles, 1));
                                            var allTrees = J$.X1(1505, J$.W(1497, 'allTrees', J$.M(1489, J$.T(1457, [J$.G(1449, J$.G(1441, J$.R(1433, 'this', this, 0), 'trees', 0), 'app', 0)], 10, false), 'concat', 0)(J$.M(1481, J$.R(1465, 'this', this, 0), 'addonTreesFor', 0)(J$.T(1473, 'app', 21, false))), allTrees, 1));
                                            var podStyles = J$.X1(1633, J$.W(1625, 'podStyles', J$.F(1617, J$.R(1513, 'Funnel', Funnel, 1), 1)(J$.F(1553, J$.R(1521, 'mergeTrees', mergeTrees, 0), 0)(J$.R(1529, 'allTrees', allTrees, 0), J$.T(1545, {
                                                overwrite: J$.T(1537, true, 23, false)
                                            }, 11, false)), J$.T(1609, {
                                                include: J$.M(1569, J$.R(1561, 'this', this, 0), '_podStylePatterns', 0)(),
                                                exclude: J$.T(1585, [J$.T(1577, /^styles/, 14, false)], 10, false),
                                                destDir: J$.T(1593, '/app', 21, false),
                                                description: J$.T(1601, 'Funnel: Pod Styles', 21, false)
                                            }, 11, false)), podStyles, 1));
                                            var trees = J$.X1(1697, J$.W(1689, 'trees', J$.M(1681, J$.T(1649, [J$.R(1641, 'external', external, 0)], 10, false), 'concat', 0)(J$.R(1657, 'addonTrees', addonTrees, 0), J$.R(1665, 'podStyles', podStyles, 0), J$.R(1673, 'styles', styles, 0)), trees, 1));
                                            var stylesAndVendor = J$.X1(1753, J$.W(1745, 'stylesAndVendor', J$.F(1737, J$.R(1705, 'mergeTrees', mergeTrees, 0), 0)(J$.R(1713, 'trees', trees, 0), J$.T(1729, {
                                                description: J$.T(1721, 'TreeMerger (stylesAndVendor)', 21, false)
                                            }, 11, false)), stylesAndVendor, 1));
                                            var options = J$.X1(1817, J$.W(1809, 'options', J$.T(1801, {
                                                outputPaths: J$.G(1793, J$.G(1785, J$.G(1777, J$.G(1769, J$.R(1761, 'this', this, 0), 'options', 0), 'outputPaths', 0), 'app', 0), 'css', 0)
                                            }, 11, false), options, 1));
                                            J$.X1(1857, J$.P(1849, J$.R(1825, 'options', options, 0), 'registry', J$.G(1841, J$.R(1833, 'this', this, 0), 'registry', 0), 0));
                                            var preprocessedStyles = J$.X1(1921, J$.W(1913, 'preprocessedStyles', J$.F(1905, J$.R(1865, 'preprocessCss', preprocessCss, 0), 0)(J$.R(1873, 'stylesAndVendor', stylesAndVendor, 0), J$.T(1881, '/app/styles', 21, false), J$.T(1889, '/assets', 21, false), J$.R(1897, 'options', options, 0)), preprocessedStyles, 1));
                                            var vendorStyles = J$.X1(2057, J$.W(2049, 'vendorStyles', J$.M(2041, J$.R(1929, 'this', this, 0), 'concatFiles', 0)(J$.R(1937, 'stylesAndVendor', stylesAndVendor, 0), J$.T(2033, {
                                                inputFiles: J$.M(1977, J$.G(1953, J$.R(1945, 'this', this, 0), 'vendorStaticStyles', 0), 'concat', 0)(J$.T(1969, [J$.T(1961, 'vendor/addons.css', 21, false)], 10, false)),
                                                outputFile: J$.G(2017, J$.G(2009, J$.G(2001, J$.G(1993, J$.R(1985, 'this', this, 0), 'options', 0), 'outputPaths', 0), 'vendor', 0), 'css', 0),
                                                description: J$.T(2025, 'Concat: Vendor Styles', 21, false)
                                            }, 11, false)), vendorStyles, 1));
                                            if (J$.X1(3617, J$.C(40, J$.B(42, '===', J$.G(2089, J$.G(2081, J$.G(2073, J$.R(2065, 'this', this, 0), 'options', 0), 'minifyCSS', 0), 'enabled', 0), J$.T(2097, true, 23, false), 0)))) {
                                                J$.X1(2153, options = J$.W(2145, 'options', J$.C(32, J$.G(2129, J$.G(2121, J$.G(2113, J$.R(2105, 'this', this, 0), 'options', 0), 'minifyCSS', 0), 'options', 0)) ? J$._() : J$.T(2137, {}, 11, false), options, 0));
                                                J$.X1(2193, J$.P(2185, J$.R(2161, 'options', options, 0), 'registry', J$.G(2177, J$.R(2169, 'this', this, 0), 'registry', 0), 0));
                                                J$.X1(2241, preprocessedStyles = J$.W(2233, 'preprocessedStyles', J$.F(2225, J$.R(2201, 'preprocessMinifyCss', preprocessMinifyCss, 0), 0)(J$.R(2209, 'preprocessedStyles', preprocessedStyles, 0), J$.R(2217, 'options', options, 0)), preprocessedStyles, 0));
                                                J$.X1(2289, vendorStyles = J$.W(2281, 'vendorStyles', J$.F(2273, J$.R(2249, 'preprocessMinifyCss', preprocessMinifyCss, 0), 0)(J$.R(2257, 'vendorStyles', vendorStyles, 0), J$.R(2265, 'options', options, 0)), vendorStyles, 0));
                                            }
                                            var mergedTrees = J$.X1(2361, J$.W(2353, 'mergedTrees', J$.F(2345, J$.R(2297, 'mergeTrees', mergeTrees, 0), 0)(J$.T(2321, [
                                                J$.R(2305, 'preprocessedStyles', preprocessedStyles, 0),
                                                J$.R(2313, 'vendorStyles', vendorStyles, 0)
                                            ], 10, false), J$.T(2337, {
                                                description: J$.T(2329, 'styles', 21, false)
                                            }, 11, false)), mergedTrees, 1));
                                            return J$.X1(2409, J$.Rt(2401, J$.M(2393, J$.R(2369, 'this', this, 0), 'addonPostprocessTree', 0)(J$.T(2377, 'css', 21, false), J$.R(2385, 'mergedTrees', mergedTrees, 0))));
                                        } catch (J$e) {
                                            J$.Ex(3625, J$e);
                                        } finally {
                                            if (J$.Fr(3633))
                                                continue jalangiLabel47;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 2417), 0));
                        } catch (J$e) {
                            J$.Ex(3641, J$e);
                        } finally {
                            if (J$.Fr(3649))
                                continue jalangiLabel48;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3457, '__secret__S$', __secret__S$, 0);
            J$.N(3465, '__secret__traits__', __secret__traits__, 0);
            J$.N(3473, 'Funnel', Funnel, 0);
            J$.N(3481, 'versionChecker', versionChecker, 0);
            J$.N(3489, 'path', path, 0);
            J$.N(3497, 'fs', fs, 0);
            J$.N(3505, 'ComponentCssPreprocessor', ComponentCssPreprocessor, 0);
            J$.N(3513, 'ComponentCssPostprocessor', ComponentCssPostprocessor, 0);
            monkeyPatch = J$.N(3529, 'monkeyPatch', J$.T(3521, monkeyPatch, 12, false, 2545), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var Funnel = J$.X1(129, J$.W(121, 'Funnel', J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'broccoli-funnel', 21, false)), Funnel, 3));
            var versionChecker = J$.X1(169, J$.W(161, 'versionChecker', J$.F(153, J$.R(137, 'require', require, 2), 0)(J$.T(145, 'ember-cli-version-checker', 21, false)), versionChecker, 3));
            var path = J$.X1(209, J$.W(201, 'path', J$.F(193, J$.R(177, 'require', require, 2), 0)(J$.T(185, 'path', 21, false)), path, 3));
            var fs = J$.X1(249, J$.W(241, 'fs', J$.F(233, J$.R(217, 'require', require, 2), 0)(J$.T(225, 'fs', 21, false)), fs, 3));
            var ComponentCssPreprocessor = J$.X1(289, J$.W(281, 'ComponentCssPreprocessor', J$.F(273, J$.R(257, 'require', require, 2), 0)(J$.T(265, './lib/component-css-preprocessor', 21, false)), ComponentCssPreprocessor, 3));
            var ComponentCssPostprocessor = J$.X1(329, J$.W(321, 'ComponentCssPostprocessor', J$.F(313, J$.R(297, 'require', require, 2), 0)(J$.T(305, './lib/component-css-postprocessor', 21, false)), ComponentCssPostprocessor, 3));
            J$.X1(3441, J$.P(3433, J$.R(2617, 'module', module, 2), 'exports', J$.T(3425, {
                name: J$.T(2625, 'ember-component-css', 21, false),
                podDir: J$.T(2865, function () {
                    jalangiLabel49:
                        while (true) {
                            try {
                                J$.Fe(2833, arguments.callee, this, arguments);
                                arguments = J$.N(2841, 'arguments', arguments, 4);
                                J$.N(2849, 'podModulePrefix', podModulePrefix, 0);
                                J$.N(2857, 'podPath', podPath, 0);
                                var podModulePrefix = J$.X1(2681, J$.W(2673, 'podModulePrefix', J$.G(2665, J$.M(2657, J$.G(2649, J$.G(2641, J$.R(2633, 'this', this, 0), 'app', 0), 'project', 0), 'config', 0)(), 'podModulePrefix', 0), podModulePrefix, 1));
                                if (J$.X1(3657, J$.C(48, J$.U(50, '!', J$.R(2689, 'podModulePrefix', podModulePrefix, 0))))) {
                                    return J$.X1(2713, J$.Rt(2705, J$.T(2697, 'app', 21, false)));
                                }
                                var podPath = J$.X1(2777, J$.W(2769, 'podPath', J$.M(2761, J$.R(2721, 'podModulePrefix', podModulePrefix, 0), 'substr', 0)(J$.B(58, '+', J$.M(2745, J$.R(2729, 'podModulePrefix', podModulePrefix, 0), 'indexOf', 0)(J$.T(2737, '/', 21, false)), J$.T(2753, 1, 22, false), 0)), podPath, 1));
                                return J$.X1(2825, J$.Rt(2817, J$.M(2809, J$.R(2785, 'path', path, 1), 'join', 0)(J$.T(2793, 'app', 21, false), J$.R(2801, 'podPath', podPath, 0))));
                            } catch (J$e) {
                                J$.Ex(3665, J$e);
                            } finally {
                                if (J$.Fr(3673))
                                    continue jalangiLabel49;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 2833),
                shouldSetupRegistryInIncluded: J$.T(2937, function () {
                    jalangiLabel50:
                        while (true) {
                            try {
                                J$.Fe(2921, arguments.callee, this, arguments);
                                arguments = J$.N(2929, 'arguments', arguments, 4);
                                return J$.X1(2913, J$.Rt(2905, J$.U(66, '!', J$.M(2897, J$.R(2873, 'versionChecker', versionChecker, 1), 'isAbove', 0)(J$.R(2881, 'this', this, 0), J$.T(2889, '0.2.0', 21, false)))));
                            } catch (J$e) {
                                J$.Ex(3681, J$e);
                            } finally {
                                if (J$.Fr(3689))
                                    continue jalangiLabel50;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 2921),
                setupPreprocessorRegistry: J$.T(3041, function (type, registry) {
                    jalangiLabel51:
                        while (true) {
                            try {
                                J$.Fe(3009, arguments.callee, this, arguments);
                                arguments = J$.N(3017, 'arguments', arguments, 4);
                                type = J$.N(3025, 'type', type, 4);
                                registry = J$.N(3033, 'registry', registry, 4);
                                J$.X1(3001, J$.M(2993, J$.R(2945, 'registry', registry, 0), 'add', 0)(J$.T(2953, 'css', 21, false), J$.F(2985, J$.R(2961, 'ComponentCssPreprocessor', ComponentCssPreprocessor, 1), 1)(J$.T(2977, {
                                    addon: J$.R(2969, 'this', this, 0)
                                }, 11, false))));
                            } catch (J$e) {
                                J$.Ex(3697, J$e);
                            } finally {
                                if (J$.Fr(3705))
                                    continue jalangiLabel51;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 3009),
                included: J$.T(3281, function (app) {
                    jalangiLabel52:
                        while (true) {
                            try {
                                J$.Fe(3257, arguments.callee, this, arguments);
                                arguments = J$.N(3265, 'arguments', arguments, 4);
                                app = J$.N(3273, 'app', app, 4);
                                J$.X1(3081, J$.F(3073, J$.R(3049, 'monkeyPatch', monkeyPatch, 1), 0)(J$.G(3065, J$.R(3057, 'app', app, 0), 'constructor', 0)));
                                if (J$.X1(3713, J$.C(56, J$.M(3097, J$.R(3089, 'this', this, 0), 'shouldSetupRegistryInIncluded', 0)()))) {
                                    J$.X1(3145, J$.M(3137, J$.R(3105, 'this', this, 0), 'setupPreprocessorRegistry', 0)(J$.T(3113, 'parent', 21, false), J$.G(3129, J$.R(3121, 'app', app, 0), 'registry', 0)));
                                }
                                J$.X1(3177, J$.P(3169, J$.R(3153, 'this', this, 0), 'app', J$.R(3161, 'app', app, 0), 0));
                                J$.X1(3249, J$.P(3241, J$.R(3185, 'this', this, 0), 'pod', J$.T(3233, {
                                    lookup: J$.M(3209, J$.R(3193, 'Object', Object, 2), 'create', 0)(J$.T(3201, null, 25, false)),
                                    styles: J$.T(3217, '', 21, false),
                                    extension: J$.T(3225, '', 21, false)
                                }, 11, false), 0));
                            } catch (J$e) {
                                J$.Ex(3721, J$e);
                            } finally {
                                if (J$.Fr(3729))
                                    continue jalangiLabel52;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 3257),
                postprocessTree: J$.T(3417, function (type, workingTree) {
                    jalangiLabel53:
                        while (true) {
                            try {
                                J$.Fe(3385, arguments.callee, this, arguments);
                                arguments = J$.N(3393, 'arguments', arguments, 4);
                                type = J$.N(3401, 'type', type, 4);
                                workingTree = J$.N(3409, 'workingTree', workingTree, 4);
                                if (J$.X1(3737, J$.C(64, J$.B(74, '===', J$.R(3289, 'type', type, 0), J$.T(3297, 'all', 21, false), 0)))) {
                                    return J$.X1(3353, J$.Rt(3345, J$.F(3337, J$.R(3305, 'ComponentCssPostprocessor', ComponentCssPostprocessor, 1), 1)(J$.R(3313, 'workingTree', workingTree, 0), J$.T(3329, {
                                        addon: J$.R(3321, 'this', this, 0)
                                    }, 11, false))));
                                }
                                return J$.X1(3377, J$.Rt(3369, J$.R(3361, 'workingTree', workingTree, 0)));
                            } catch (J$e) {
                                J$.Ex(3745, J$e);
                            } finally {
                                if (J$.Fr(3753))
                                    continue jalangiLabel53;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 3385)
            }, 11, false), 0));
        } catch (J$e) {
            J$.Ex(3761, J$e);
        } finally {
            if (J$.Sr(3769)) {
                J$.L();
                continue jalangiLabel54;
            } else {
                J$.L();
                break jalangiLabel54;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
