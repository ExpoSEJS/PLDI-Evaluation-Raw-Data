J$.iids = {"8":[14,28,14,38],"9":[1,20,1,27],"10":[12,18,12,32],"16":[16,9,16,25],"17":[1,28,1,32],"18":[16,9,16,25],"24":[25,9,25,18],"25":[1,20,1,33],"26":[26,16,26,31],"32":[33,9,33,27],"33":[1,20,1,33],"34":[26,16,26,43],"40":[40,13,40,34],"41":[1,20,1,33],"42":[33,9,33,27],"48":[49,9,49,27],"49":[2,26,2,38],"50":[40,13,40,34],"56":[54,13,54,34],"57":[2,26,2,45],"58":[49,9,49,27],"64":[61,17,61,37],"65":[2,26,2,45],"66":[54,13,54,34],"72":[76,17,76,37],"73":[2,26,2,45],"74":[61,17,61,37],"80":[77,9,77,23],"81":[3,1,3,13],"82":[76,17,76,37],"88":[81,13,81,34],"89":[3,1,3,14],"90":[77,9,77,23],"96":[83,20,83,41],"97":[4,11,4,18],"98":[80,9,80,31],"104":[81,13,81,34],"105":[4,19,4,37],"106":[83,20,83,41],"112":[88,13,88,34],"113":[4,11,4,38],"114":[92,13,92,18],"120":[88,13,88,34],"121":[4,11,4,38],"122":[109,9,109,31],"128":[92,13,92,18],"129":[4,11,4,38],"130":[110,13,110,19],"136":[80,9,80,31],"137":[5,13,5,20],"138":[115,13,115,19],"144":[110,13,110,19],"145":[5,21,5,30],"152":[117,20,117,32],"153":[5,13,5,31],"160":[115,13,115,19],"161":[5,13,5,31],"168":[109,9,109,31],"169":[5,13,5,31],"177":[6,13,6,20],"185":[6,21,6,29],"193":[6,13,6,30],"201":[6,13,6,36],"209":[6,13,6,36],"217":[6,13,6,36],"225":[7,31,7,32],"233":[7,31,7,32],"241":[7,31,7,32],"249":[9,5,9,9],"257":[9,21,9,23],"265":[9,5,9,23],"273":[9,5,9,24],"281":[10,5,10,9],"289":[10,22,10,26],"297":[10,5,10,26],"305":[10,5,10,27],"313":[11,5,11,9],"321":[11,19,11,24],"329":[11,5,11,24],"337":[11,5,11,25],"345":[12,5,12,9],"353":[12,18,12,23],"361":[12,28,12,32],"369":[12,5,12,32],"377":[12,5,12,33],"385":[13,5,13,9],"393":[13,17,13,21],"401":[13,5,13,21],"409":[13,5,13,22],"417":[14,5,14,9],"425":[14,22,14,27],"433":[14,28,14,32],"441":[14,36,14,38],"449":[14,40,14,41],"457":[14,43,14,44],"465":[14,18,14,45],"473":[14,5,14,45],"481":[14,5,14,46],"489":[15,5,15,9],"497":[15,5,15,15],"505":[15,23,15,28],"513":[15,5,15,28],"521":[15,5,15,29],"529":[16,9,16,16],"537":[16,9,16,21],"545":[16,24,16,25],"553":[17,9,17,13],"561":[17,25,17,32],"569":[17,34,17,38],"577":[17,34,17,44],"585":[17,9,17,45],"587":[17,9,17,24],"593":[17,9,17,46],"601":[8,1,19,2],"609":[8,1,19,2],"617":[8,1,19,2],"625":[8,1,19,2],"633":[8,1,19,2],"641":[20,1,20,5],"649":[20,16,21,2],"657":[20,16,21,2],"665":[20,16,21,2],"673":[20,16,21,2],"681":[20,1,21,2],"689":[20,1,21,3],"697":[22,1,22,5],"705":[22,20,23,2],"713":[22,20,23,2],"721":[22,20,23,2],"729":[22,20,23,2],"737":[22,1,23,2],"745":[22,1,23,3],"753":[24,1,24,5],"761":[24,1,24,15],"769":[25,9,25,13],"777":[25,9,25,18],"785":[26,16,26,20],"793":[26,16,26,25],"801":[26,28,26,31],"809":[26,34,26,43],"817":[26,16,26,43],"825":[26,9,26,44],"833":[28,16,28,25],"841":[28,16,28,25],"849":[28,9,28,26],"857":[24,31,30,2],"865":[24,31,30,2],"873":[24,31,30,2],"881":[24,31,30,2],"889":[24,1,30,2],"897":[24,1,30,3],"905":[31,1,31,5],"913":[31,1,31,15],"921":[32,17,32,23],"929":[32,29,32,33],"937":[32,29,32,42],"945":[32,17,32,43],"947":[32,17,32,28],"953":[32,17,32,43],"961":[32,17,32,43],"969":[33,9,33,14],"977":[33,9,33,21],"985":[33,26,33,27],"993":[34,16,34,19],"1001":[34,16,34,19],"1009":[34,9,34,20],"1017":[36,18,36,20],"1025":[36,21,36,25],"1033":[36,27,36,30],"1041":[36,18,36,31],"1049":[36,18,36,31],"1057":[36,18,36,31],"1065":[37,16,37,20],"1073":[37,16,37,20],"1081":[37,16,37,20],"1089":[38,12,38,17],"1097":[39,21,39,25],"1105":[39,21,39,34],"1113":[39,35,39,39],"1121":[39,21,39,40],"1129":[39,21,39,40],"1137":[39,21,39,40],"1145":[40,13,40,18],"1153":[40,30,40,34],"1161":[41,20,41,25],"1169":[41,47,41,49],"1177":[41,51,41,54],"1185":[41,20,41,55],"1187":[41,20,41,46],"1193":[41,20,41,55],"1201":[41,13,41,56],"1209":[43,20,43,23],"1217":[43,20,43,23],"1225":[43,13,43,24],"1233":[38,25,45,6],"1241":[38,25,45,6],"1249":[38,25,45,6],"1257":[38,25,45,6],"1265":[38,25,45,6],"1273":[38,25,45,6],"1281":[45,8,45,14],"1289":[38,12,45,15],"1291":[38,12,38,24],"1297":[38,12,45,15],"1305":[38,5,45,16],"1313":[31,39,46,2],"1321":[31,39,46,2],"1329":[31,39,46,2],"1337":[31,39,46,2],"1345":[31,39,46,2],"1353":[31,39,46,2],"1361":[31,39,46,2],"1369":[31,39,46,2],"1377":[31,1,46,2],"1385":[31,1,46,3],"1393":[47,1,47,5],"1401":[47,1,47,15],"1409":[48,17,48,23],"1417":[48,29,48,33],"1425":[48,29,48,42],"1433":[48,17,48,43],"1435":[48,17,48,28],"1441":[48,17,48,43],"1449":[48,17,48,43],"1457":[49,9,49,14],"1465":[49,9,49,21],"1473":[49,26,49,27],"1481":[50,16,50,19],"1489":[50,16,50,19],"1497":[50,9,50,20],"1505":[52,5,52,10],"1513":[53,21,53,25],"1521":[53,21,53,34],"1529":[53,35,53,39],"1537":[53,21,53,40],"1545":[53,21,53,40],"1553":[53,21,53,40],"1561":[54,13,54,18],"1569":[54,30,54,34],"1577":[55,19,55,24],"1585":[55,47,55,49],"1593":[55,51,55,54],"1601":[55,19,55,55],"1603":[55,19,55,46],"1609":[55,19,55,55],"1617":[55,13,55,56],"1625":[52,19,57,6],"1633":[52,19,57,6],"1641":[52,19,57,6],"1649":[52,19,57,6],"1657":[52,19,57,6],"1665":[57,8,57,12],"1673":[52,5,57,13],"1675":[52,5,52,18],"1681":[52,5,57,14],"1689":[58,12,58,14],"1697":[58,15,58,19],"1705":[58,21,58,24],"1713":[58,12,58,25],"1721":[58,12,58,25],"1729":[58,5,58,26],"1737":[47,40,59,2],"1745":[47,40,59,2],"1753":[47,40,59,2],"1761":[47,40,59,2],"1769":[47,40,59,2],"1777":[47,40,59,2],"1785":[47,1,59,2],"1793":[47,1,59,3],"1801":[60,1,60,5],"1809":[60,1,60,15],"1817":[61,17,61,26],"1825":[61,17,61,33],"1833":[61,36,61,37],"1841":[61,40,61,49],"1849":[61,50,61,51],"1857":[61,40,61,52],"1865":[61,55,61,59],"1873":[61,17,61,59],"1881":[61,17,61,59],"1889":[62,5,62,12],"1897":[63,9,63,13],"1905":[63,23,63,28],"1913":[63,23,63,41],"1921":[63,43,63,48],"1929":[63,50,63,55],"1937":[63,9,63,56],"1939":[63,9,63,22],"1945":[63,9,63,57],"1953":[62,21,64,6],"1961":[62,21,64,6],"1969":[62,21,64,6],"1977":[62,21,64,6],"1985":[64,8,64,12],"1993":[62,5,64,13],"1995":[62,5,62,20],"2001":[62,5,64,14],"2009":[60,29,65,2],"2017":[60,29,65,2],"2025":[60,29,65,2],"2033":[60,29,65,2],"2041":[60,29,65,2],"2049":[60,29,65,2],"2057":[60,1,65,2],"2065":[60,1,65,3],"2073":[67,5,67,9],"2081":[67,19,67,23],"2089":[67,5,67,23],"2097":[67,5,67,24],"2105":[68,5,68,9],"2113":[68,18,68,23],"2121":[68,5,68,23],"2129":[68,5,68,24],"2137":[69,5,69,9],"2145":[69,18,69,23],"2153":[69,5,69,23],"2161":[69,5,69,24],"2169":[70,5,70,9],"2177":[70,22,70,31],"2185":[70,5,70,31],"2193":[70,5,70,32],"2201":[66,1,71,2],"2209":[66,1,71,2],"2217":[66,1,71,2],"2225":[66,1,71,2],"2233":[72,1,72,5],"2241":[72,1,72,15],"2249":[73,21,73,33],"2257":[73,40,73,43],"2265":[73,21,73,44],"2267":[73,21,73,39],"2273":[73,21,73,44],"2281":[73,21,73,44],"2289":[74,19,74,28],"2297":[74,19,74,36],"2299":[74,19,74,34],"2305":[74,19,74,36],"2313":[74,19,74,36],"2321":[75,17,75,21],"2329":[75,17,75,30],"2337":[75,31,75,38],"2345":[75,17,75,39],"2353":[75,17,75,39],"2361":[75,17,75,39],"2369":[76,17,76,26],"2377":[76,17,76,33],"2385":[76,36,76,37],"2393":[76,40,76,49],"2401":[76,50,76,51],"2409":[76,40,76,52],"2417":[76,55,76,59],"2425":[76,17,76,59],"2433":[76,17,76,59],"2441":[77,9,77,16],"2449":[77,21,77,23],"2457":[78,9,78,16],"2465":[78,9,78,16],"2473":[80,9,80,18],"2481":[80,9,80,25],"2489":[80,30,80,31],"2497":[81,13,81,18],"2505":[81,22,81,27],"2513":[81,22,81,34],"2521":[82,23,82,28],"2529":[82,29,82,56],"2537":[82,19,82,57],"2545":[82,19,82,57],"2553":[82,13,82,58],"2561":[83,20,83,25],"2569":[83,37,83,41],"2577":[84,23,84,28],"2585":[84,29,84,67],"2593":[84,19,84,68],"2601":[84,19,84,68],"2609":[84,13,84,69],"2617":[86,9,86,13],"2625":[86,9,86,22],"2633":[86,23,86,30],"2641":[86,38,86,42],"2649":[86,43,86,48],"2657":[86,50,86,55],"2665":[86,34,86,56],"2673":[86,9,86,56],"2681":[86,9,86,57],"2689":[88,13,88,18],"2697":[88,22,88,27],"2705":[88,22,88,34],"2713":[89,23,89,28],"2721":[89,29,89,56],"2729":[89,19,89,57],"2737":[89,19,89,57],"2745":[89,13,89,58],"2753":[91,20,91,24],"2761":[91,20,91,33],"2769":[91,34,91,41],"2777":[91,20,91,42],"2785":[91,20,91,42],"2793":[91,20,91,42],"2801":[92,14,92,18],"2809":[93,13,93,17],"2817":[93,13,93,26],"2825":[93,27,93,34],"2833":[93,42,93,46],"2841":[93,51,93,54],"2849":[93,55,93,57],"2857":[93,59,93,73],"2865":[93,47,93,74],"2873":[93,76,93,80],"2881":[93,94,93,101],"2889":[93,76,93,102],"2891":[93,76,93,93],"2897":[93,104,93,109],"2905":[93,38,93,110],"2913":[93,13,93,110],"2921":[93,13,93,111],"2929":[94,13,94,17],"2937":[94,13,94,26],"2945":[94,27,94,34],"2953":[94,13,94,35],"2961":[94,45,94,54],"2969":[94,60,94,63],"2977":[94,45,94,64],"2979":[94,45,94,59],"2985":[94,66,94,71],"2993":[94,73,94,78],"3001":[94,13,94,79],"3003":[94,13,94,44],"3009":[94,13,94,80],"3017":[96,13,96,17],"3025":[96,27,96,36],"3033":[96,42,96,45],"3041":[96,27,96,46],"3043":[96,27,96,41],"3049":[96,48,96,53],"3057":[96,55,96,60],"3065":[96,13,96,61],"3067":[96,13,96,26],"3073":[96,13,96,62],"3081":[72,27,99,2],"3089":[72,27,99,2],"3097":[72,27,99,2],"3105":[72,27,99,2],"3113":[72,27,99,2],"3121":[72,27,99,2],"3129":[72,27,99,2],"3137":[72,27,99,2],"3145":[72,27,99,2],"3153":[72,27,99,2],"3161":[72,27,99,2],"3169":[72,1,99,2],"3177":[72,1,99,3],"3185":[100,1,100,5],"3193":[100,1,100,15],"3201":[101,5,101,12],"3209":[102,9,102,13],"3217":[102,26,102,31],"3225":[102,26,102,44],"3233":[102,46,102,51],"3241":[102,9,102,52],"3243":[102,9,102,25],"3249":[102,9,102,53],"3257":[101,21,103,6],"3265":[101,21,103,6],"3273":[101,21,103,6],"3281":[101,21,103,6],"3289":[103,8,103,12],"3297":[101,5,103,13],"3299":[101,5,101,20],"3305":[101,5,103,14],"3313":[100,32,104,2],"3321":[100,32,104,2],"3329":[100,32,104,2],"3337":[100,32,104,2],"3345":[100,1,104,2],"3353":[100,1,104,3],"3361":[105,1,105,5],"3369":[105,1,105,15],"3377":[106,21,106,26],"3385":[106,27,106,39],"3393":[106,41,106,44],"3401":[106,21,106,45],"3409":[106,52,106,55],"3417":[106,21,106,56],"3419":[106,21,106,51],"3425":[106,21,106,56],"3433":[106,21,106,56],"3441":[107,19,107,28],"3449":[107,19,107,36],"3451":[107,19,107,34],"3457":[107,19,107,36],"3465":[107,19,107,36],"3473":[108,17,108,21],"3481":[108,17,108,30],"3489":[108,31,108,38],"3497":[108,17,108,39],"3505":[108,17,108,39],"3513":[108,17,108,39],"3521":[109,9,109,18],"3529":[109,9,109,25],"3537":[109,30,109,31],"3545":[110,14,110,19],"3553":[111,23,111,28],"3561":[111,29,111,61],"3569":[111,19,111,62],"3577":[111,19,111,62],"3585":[111,13,111,63],"3593":[113,9,113,13],"3601":[113,9,113,22],"3609":[113,23,113,30],"3617":[113,9,113,31],"3625":[113,44,113,48],"3633":[113,44,113,56],"3641":[113,9,113,56],"3649":[113,9,113,57],"3657":[115,14,115,19],"3665":[116,23,116,28],"3673":[116,29,116,71],"3681":[116,19,116,72],"3689":[116,19,116,72],"3697":[116,13,116,73],"3705":[117,20,117,25],"3713":[117,20,117,32],"3721":[118,23,118,28],"3729":[118,29,118,64],"3737":[118,19,118,65],"3745":[118,19,118,65],"3753":[118,13,118,66],"3761":[120,9,120,14],"3769":[120,27,120,36],"3777":[120,42,120,45],"3785":[120,27,120,46],"3787":[120,27,120,41],"3793":[120,48,120,53],"3801":[120,55,120,59],"3809":[120,61,120,65],"3817":[120,9,120,66],"3819":[120,9,120,26],"3825":[120,9,120,67],"3833":[105,30,122,2],"3841":[105,30,122,2],"3849":[105,30,122,2],"3857":[105,30,122,2],"3865":[105,30,122,2],"3873":[105,30,122,2],"3881":[105,30,122,2],"3889":[105,30,122,2],"3897":[105,1,122,2],"3905":[105,1,122,3],"3913":[123,1,123,7],"3921":[123,18,123,22],"3929":[123,1,123,22],"3937":[123,1,123,23],"3945":[1,1,123,23],"3953":[1,1,123,23],"3961":[1,1,123,23],"3969":[1,1,123,23],"3977":[1,1,123,23],"3985":[1,1,123,23],"3993":[1,1,123,23],"4001":[8,1,19,2],"4009":[1,1,123,23],"4017":[66,1,71,2],"4025":[1,1,123,23],"4033":[16,5,18,6],"4041":[8,1,19,2],"4049":[8,1,19,2],"4057":[20,16,21,2],"4065":[20,16,21,2],"4073":[22,20,23,2],"4081":[22,20,23,2],"4089":[25,5,29,6],"4097":[24,31,30,2],"4105":[24,31,30,2],"4113":[33,5,35,6],"4121":[40,9,44,10],"4129":[38,25,45,6],"4137":[38,25,45,6],"4145":[31,39,46,2],"4153":[31,39,46,2],"4161":[49,5,51,6],"4169":[54,9,56,10],"4177":[52,19,57,6],"4185":[52,19,57,6],"4193":[47,40,59,2],"4201":[47,40,59,2],"4209":[61,17,61,59],"4217":[62,21,64,6],"4225":[62,21,64,6],"4233":[60,29,65,2],"4241":[60,29,65,2],"4249":[66,1,71,2],"4257":[66,1,71,2],"4265":[76,17,76,59],"4273":[77,5,79,6],"4281":[83,16,85,10],"4289":[81,9,85,10],"4297":[88,9,90,10],"4305":[92,9,97,10],"4313":[80,5,98,6],"4321":[72,27,99,2],"4329":[72,27,99,2],"4337":[101,21,103,6],"4345":[101,21,103,6],"4353":[100,32,104,2],"4361":[100,32,104,2],"4369":[110,9,112,10],"4377":[117,16,119,10],"4385":[115,9,119,10],"4393":[109,5,121,6],"4401":[105,30,122,2],"4409":[105,30,122,2],"4417":[1,1,123,23],"4425":[1,1,123,23],"nBranches":42,"originalCodeFileName":"/home/blake/ExpoSE/Targets/ember-component-css-withbp/node_modules/fs-tree-diff/lib/tree.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/ember-component-css-withbp/node_modules/fs-tree-diff/lib/tree_jalangi_.js","code":"'use strict';\n\nvar Set = require('fast-ordered-set');\nvar Entry = require('./entry');\nvar chomp = require('./util').chomp;\n\nvar ARBITRARY_START_OF_TIME = 0;\n\nfunction Tree(entries, path, isNew) {\n  this.children = { };\n  this.operation = null;\n  this.isFile = false;\n  this.isNew = isNew === true;\n  this.path = path;\n\n  this.entry = new Entry(path || '', 0, 0);\n  this.entry.mode = 16877; // TODO: better Entry constructor..\n\n  if (entries.size > 0) {\n    this.addEntries(entries, this.isNew);\n  }\n}\n\nTree.RMToken = function RMToken() { };\nTree.CreateToken = function CreateToken() { };\n\nTree.prototype.pathForChild = function (childName) {\n  if (this.path) {\n    return this.path + '/' + childName;\n  } else {\n    return childName;\n  }\n};\n\nTree.prototype.preOrderDepthReducer = function(fn, acc) {\n  var names = Object.keys(this.children);\n  if (names.length === 0) { return acc; }\n\n  var result = fn(this, acc);\n  var tree = this;\n\n  return names.reduce(function(acc, name) {\n    var child = tree.children[name];\n    if (child instanceof Tree) {\n      return child.preOrderDepthReducer(fn, acc);\n    } else {\n      return acc;\n    }\n  }, result);\n};\n\nTree.prototype.postOrderDepthReducer = function(fn, acc) {\n  var names = Object.keys(this.children);\n  if (names.length === 0) { return acc; }\n\n  names.forEach(function(name) {\n    var child = this.children[name];\n    if (child instanceof Tree) {\n      acc = child.postOrderDepthReducer(fn, acc);\n    }\n  }, this);\n\n  return fn(this, acc);\n};\n\nTree.prototype.addEntries = function (entries, _isNew) {\n  var isNew = arguments.length > 1 ? arguments[1] : true;\n\n  entries.forEach(function(entry) {\n    this.addEntry(entry.relativePath, entry, isNew);\n  }, this);\n};\n\nfunction File(entry, isNew) {\n  this.isFile = true;\n  this.isNew = isNew;\n  this.entry = entry;\n  this.operation = undefined;\n  // TODO: error if entry is a directory\n}\n\nTree.prototype.addEntry = function (relativePath, entry, _isNew) {\n  var fileParts = relativePath.split('/');\n  var current = fileParts.shift();\n  var child = this.children[current];\n  var isNew = arguments.length > 2 ? arguments[2] : true;\n\n  if (current === '') {\n    return;\n  }\n\n  if (fileParts.length === 0) {\n    if (child && child.isFile) {\n      throw new Error('Cannot add duplicate file');\n    } else if (child instanceof Tree) {\n      throw new Error('Cannot overwrite directory with file');\n    }\n\n    // add a file\n    this.children[current] = new File(entry, isNew);\n  } else {\n    if (child && child.isFile) {\n      throw new Error('Cannot add files to files');\n    }\n\n    var tree = this.children[current];\n    if (!tree) {\n      this.children[current] = new Tree(new Set([], 'relativePath'), this.pathForChild(current), isNew);\n      this.children[current].addEntry(fileParts.join('/'), entry, isNew);\n    } else {\n      tree.addEntry(fileParts.join('/'), entry, isNew);\n    }\n  }\n};\n\nTree.prototype.removeEntries = function (entries) {\n  entries.forEach(function(entry) {\n    this.removeEntry(entry.relativePath, entry);\n  }, this);\n};\n\nTree.prototype.removeEntry = function (relativePath, entry) {\n  var fileParts = chomp(relativePath, '/').split('/');\n  var current = fileParts.shift();\n  var child = this.children[current];\n\n  if (fileParts.length === 0) {\n    if (!child) {\n      throw new Error('Cannot remove nonexistant file');\n    }\n\n    this.children[current].operation = Tree.RMToken;\n  } else {\n    if (!child) {\n      throw new Error('Cannot remove from nonexistant directory');\n    } else if (child.isFile) {\n      throw new Error('Cannot remove directory from file');\n    }\n\n    child.removeEntry(fileParts.join('/'), entry, null,  null);\n  }\n};\n\nmodule.exports = Tree;\n"};
jalangiLabel320:
    while (true) {
        try {
            J$.Se(3945, '/home/blake/ExpoSE/Targets/ember-component-css-withbp/node_modules/fs-tree-diff/lib/tree_jalangi_.js', '/home/blake/ExpoSE/Targets/ember-component-css-withbp/node_modules/fs-tree-diff/lib/tree.js');
            function Tree(entries, path, isNew) {
                jalangiLabel305:
                    while (true) {
                        try {
                            J$.Fe(601, arguments.callee, this, arguments);
                            arguments = J$.N(609, 'arguments', arguments, 4);
                            entries = J$.N(617, 'entries', entries, 4);
                            path = J$.N(625, 'path', path, 4);
                            isNew = J$.N(633, 'isNew', isNew, 4);
                            J$.X1(273, J$.P(265, J$.R(249, 'this', this, 0), 'children', J$.T(257, {}, 11, false), 0));
                            J$.X1(305, J$.P(297, J$.R(281, 'this', this, 0), 'operation', J$.T(289, null, 25, false), 0));
                            J$.X1(337, J$.P(329, J$.R(313, 'this', this, 0), 'isFile', J$.T(321, false, 23, false), 0));
                            J$.X1(377, J$.P(369, J$.R(345, 'this', this, 0), 'isNew', J$.B(10, '===', J$.R(353, 'isNew', isNew, 0), J$.T(361, true, 23, false), 0), 0));
                            J$.X1(409, J$.P(401, J$.R(385, 'this', this, 0), 'path', J$.R(393, 'path', path, 0), 0));
                            J$.X1(481, J$.P(473, J$.R(417, 'this', this, 0), 'entry', J$.F(465, J$.R(425, 'Entry', Entry, 1), 1)(J$.C(8, J$.R(433, 'path', path, 0)) ? J$._() : J$.T(441, '', 21, false), J$.T(449, 0, 22, false), J$.T(457, 0, 22, false)), 0));
                            J$.X1(521, J$.P(513, J$.G(497, J$.R(489, 'this', this, 0), 'entry', 0), 'mode', J$.T(505, 16877, 22, false), 0));
                            if (J$.X1(4033, J$.C(16, J$.B(18, '>', J$.G(537, J$.R(529, 'entries', entries, 0), 'size', 0), J$.T(545, 0, 22, false), 0)))) {
                                J$.X1(593, J$.M(585, J$.R(553, 'this', this, 0), 'addEntries', 0)(J$.R(561, 'entries', entries, 0), J$.G(577, J$.R(569, 'this', this, 0), 'isNew', 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(4041, J$e);
                        } finally {
                            if (J$.Fr(4049))
                                continue jalangiLabel305;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function File(entry, isNew) {
                jalangiLabel315:
                    while (true) {
                        try {
                            J$.Fe(2201, arguments.callee, this, arguments);
                            arguments = J$.N(2209, 'arguments', arguments, 4);
                            entry = J$.N(2217, 'entry', entry, 4);
                            isNew = J$.N(2225, 'isNew', isNew, 4);
                            J$.X1(2097, J$.P(2089, J$.R(2073, 'this', this, 0), 'isFile', J$.T(2081, true, 23, false), 0));
                            J$.X1(2129, J$.P(2121, J$.R(2105, 'this', this, 0), 'isNew', J$.R(2113, 'isNew', isNew, 0), 0));
                            J$.X1(2161, J$.P(2153, J$.R(2137, 'this', this, 0), 'entry', J$.R(2145, 'entry', entry, 0), 0));
                            J$.X1(2193, J$.P(2185, J$.R(2169, 'this', this, 0), 'operation', J$.T(2177, undefined, 24, false), 0));
                        } catch (J$e) {
                            J$.Ex(4249, J$e);
                        } finally {
                            if (J$.Fr(4257))
                                continue jalangiLabel315;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(3953, '__secret__S$', __secret__S$, 0);
            J$.N(3961, '__secret__traits__', __secret__traits__, 0);
            J$.N(3969, 'Set', Set, 0);
            J$.N(3977, 'Entry', Entry, 0);
            J$.N(3985, 'chomp', chomp, 0);
            J$.N(3993, 'ARBITRARY_START_OF_TIME', ARBITRARY_START_OF_TIME, 0);
            Tree = J$.N(4009, 'Tree', J$.T(4001, Tree, 12, false, 601), 0);
            File = J$.N(4025, 'File', J$.T(4017, File, 12, false, 2201), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var Set = J$.X1(129, J$.W(121, 'Set', J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'fast-ordered-set', 21, false)), Set, 3));
            var Entry = J$.X1(169, J$.W(161, 'Entry', J$.F(153, J$.R(137, 'require', require, 2), 0)(J$.T(145, './entry', 21, false)), Entry, 3));
            var chomp = J$.X1(217, J$.W(209, 'chomp', J$.G(201, J$.F(193, J$.R(177, 'require', require, 2), 0)(J$.T(185, './util', 21, false)), 'chomp', 0), chomp, 3));
            var ARBITRARY_START_OF_TIME = J$.X1(241, J$.W(233, 'ARBITRARY_START_OF_TIME', J$.T(225, 0, 22, false), ARBITRARY_START_OF_TIME, 3));
            J$.X1(689, J$.P(681, J$.R(641, 'Tree', Tree, 1), 'RMToken', J$.T(673, function RMToken() {
                jalangiLabel306:
                    while (true) {
                        try {
                            J$.Fe(649, arguments.callee, this, arguments);
                            arguments = J$.N(657, 'arguments', arguments, 4);
                            RMToken = J$.N(665, 'RMToken', RMToken, 0);
                        } catch (J$e) {
                            J$.Ex(4057, J$e);
                        } finally {
                            if (J$.Fr(4065))
                                continue jalangiLabel306;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 649), 0));
            J$.X1(745, J$.P(737, J$.R(697, 'Tree', Tree, 1), 'CreateToken', J$.T(729, function CreateToken() {
                jalangiLabel307:
                    while (true) {
                        try {
                            J$.Fe(705, arguments.callee, this, arguments);
                            arguments = J$.N(713, 'arguments', arguments, 4);
                            CreateToken = J$.N(721, 'CreateToken', CreateToken, 0);
                        } catch (J$e) {
                            J$.Ex(4073, J$e);
                        } finally {
                            if (J$.Fr(4081))
                                continue jalangiLabel307;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 705), 0));
            J$.X1(897, J$.P(889, J$.G(761, J$.R(753, 'Tree', Tree, 1), 'prototype', 0), 'pathForChild', J$.T(881, function (childName) {
                jalangiLabel308:
                    while (true) {
                        try {
                            J$.Fe(857, arguments.callee, this, arguments);
                            arguments = J$.N(865, 'arguments', arguments, 4);
                            childName = J$.N(873, 'childName', childName, 4);
                            if (J$.X1(4089, J$.C(24, J$.G(777, J$.R(769, 'this', this, 0), 'path', 0)))) {
                                return J$.X1(825, J$.Rt(817, J$.B(34, '+', J$.B(26, '+', J$.G(793, J$.R(785, 'this', this, 0), 'path', 0), J$.T(801, '/', 21, false), 0), J$.R(809, 'childName', childName, 0), 0)));
                            } else {
                                return J$.X1(849, J$.Rt(841, J$.R(833, 'childName', childName, 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(4097, J$e);
                        } finally {
                            if (J$.Fr(4105))
                                continue jalangiLabel308;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 857), 0));
            J$.X1(1385, J$.P(1377, J$.G(913, J$.R(905, 'Tree', Tree, 1), 'prototype', 0), 'preOrderDepthReducer', J$.T(1369, function (fn, acc) {
                jalangiLabel310:
                    while (true) {
                        try {
                            J$.Fe(1313, arguments.callee, this, arguments);
                            arguments = J$.N(1321, 'arguments', arguments, 4);
                            fn = J$.N(1329, 'fn', fn, 4);
                            acc = J$.N(1337, 'acc', acc, 4);
                            J$.N(1345, 'names', names, 0);
                            J$.N(1353, 'result', result, 0);
                            J$.N(1361, 'tree', tree, 0);
                            var names = J$.X1(961, J$.W(953, 'names', J$.M(945, J$.R(921, 'Object', Object, 2), 'keys', 0)(J$.G(937, J$.R(929, 'this', this, 0), 'children', 0)), names, 1));
                            if (J$.X1(4113, J$.C(32, J$.B(42, '===', J$.G(977, J$.R(969, 'names', names, 0), 'length', 0), J$.T(985, 0, 22, false), 0)))) {
                                return J$.X1(1009, J$.Rt(1001, J$.R(993, 'acc', acc, 0)));
                            }
                            var result = J$.X1(1057, J$.W(1049, 'result', J$.F(1041, J$.R(1017, 'fn', fn, 0), 0)(J$.R(1025, 'this', this, 0), J$.R(1033, 'acc', acc, 0)), result, 1));
                            var tree = J$.X1(1081, J$.W(1073, 'tree', J$.R(1065, 'this', this, 0), tree, 1));
                            return J$.X1(1305, J$.Rt(1297, J$.M(1289, J$.R(1089, 'names', names, 0), 'reduce', 0)(J$.T(1273, function (acc, name) {
                                jalangiLabel309:
                                    while (true) {
                                        try {
                                            J$.Fe(1233, arguments.callee, this, arguments);
                                            arguments = J$.N(1241, 'arguments', arguments, 4);
                                            acc = J$.N(1249, 'acc', acc, 4);
                                            name = J$.N(1257, 'name', name, 4);
                                            J$.N(1265, 'child', child, 0);
                                            var child = J$.X1(1137, J$.W(1129, 'child', J$.G(1121, J$.G(1105, J$.R(1097, 'tree', tree, 0), 'children', 0), J$.R(1113, 'name', name, 0), 4), child, 1));
                                            if (J$.X1(4121, J$.C(40, J$.B(50, 'instanceof', J$.R(1145, 'child', child, 0), J$.R(1153, 'Tree', Tree, 1), 0)))) {
                                                return J$.X1(1201, J$.Rt(1193, J$.M(1185, J$.R(1161, 'child', child, 0), 'preOrderDepthReducer', 0)(J$.R(1169, 'fn', fn, 0), J$.R(1177, 'acc', acc, 0))));
                                            } else {
                                                return J$.X1(1225, J$.Rt(1217, J$.R(1209, 'acc', acc, 0)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(4129, J$e);
                                        } finally {
                                            if (J$.Fr(4137))
                                                continue jalangiLabel309;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1233), J$.R(1281, 'result', result, 0))));
                        } catch (J$e) {
                            J$.Ex(4145, J$e);
                        } finally {
                            if (J$.Fr(4153))
                                continue jalangiLabel310;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1313), 0));
            J$.X1(1793, J$.P(1785, J$.G(1401, J$.R(1393, 'Tree', Tree, 1), 'prototype', 0), 'postOrderDepthReducer', J$.T(1777, function (fn, acc) {
                jalangiLabel312:
                    while (true) {
                        try {
                            J$.Fe(1737, arguments.callee, this, arguments);
                            arguments = J$.N(1745, 'arguments', arguments, 4);
                            fn = J$.N(1753, 'fn', fn, 4);
                            acc = J$.N(1761, 'acc', acc, 4);
                            J$.N(1769, 'names', names, 0);
                            var names = J$.X1(1449, J$.W(1441, 'names', J$.M(1433, J$.R(1409, 'Object', Object, 2), 'keys', 0)(J$.G(1425, J$.R(1417, 'this', this, 0), 'children', 0)), names, 1));
                            if (J$.X1(4161, J$.C(48, J$.B(58, '===', J$.G(1465, J$.R(1457, 'names', names, 0), 'length', 0), J$.T(1473, 0, 22, false), 0)))) {
                                return J$.X1(1497, J$.Rt(1489, J$.R(1481, 'acc', acc, 0)));
                            }
                            J$.X1(1681, J$.M(1673, J$.R(1505, 'names', names, 0), 'forEach', 0)(J$.T(1657, function (name) {
                                jalangiLabel311:
                                    while (true) {
                                        try {
                                            J$.Fe(1625, arguments.callee, this, arguments);
                                            arguments = J$.N(1633, 'arguments', arguments, 4);
                                            name = J$.N(1641, 'name', name, 4);
                                            J$.N(1649, 'child', child, 0);
                                            var child = J$.X1(1553, J$.W(1545, 'child', J$.G(1537, J$.G(1521, J$.R(1513, 'this', this, 0), 'children', 0), J$.R(1529, 'name', name, 0), 4), child, 1));
                                            if (J$.X1(4169, J$.C(56, J$.B(66, 'instanceof', J$.R(1561, 'child', child, 0), J$.R(1569, 'Tree', Tree, 1), 0)))) {
                                                J$.X1(1617, acc = J$.W(1609, 'acc', J$.M(1601, J$.R(1577, 'child', child, 0), 'postOrderDepthReducer', 0)(J$.R(1585, 'fn', fn, 0), J$.R(1593, 'acc', acc, 0)), acc, 0));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(4177, J$e);
                                        } finally {
                                            if (J$.Fr(4185))
                                                continue jalangiLabel311;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1625), J$.R(1665, 'this', this, 0)));
                            return J$.X1(1729, J$.Rt(1721, J$.F(1713, J$.R(1689, 'fn', fn, 0), 0)(J$.R(1697, 'this', this, 0), J$.R(1705, 'acc', acc, 0))));
                        } catch (J$e) {
                            J$.Ex(4193, J$e);
                        } finally {
                            if (J$.Fr(4201))
                                continue jalangiLabel312;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1737), 0));
            J$.X1(2065, J$.P(2057, J$.G(1809, J$.R(1801, 'Tree', Tree, 1), 'prototype', 0), 'addEntries', J$.T(2049, function (entries, _isNew) {
                jalangiLabel314:
                    while (true) {
                        try {
                            J$.Fe(2009, arguments.callee, this, arguments);
                            arguments = J$.N(2017, 'arguments', arguments, 4);
                            entries = J$.N(2025, 'entries', entries, 4);
                            _isNew = J$.N(2033, '_isNew', _isNew, 4);
                            J$.N(2041, 'isNew', isNew, 0);
                            var isNew = J$.X1(1881, J$.W(1873, 'isNew', J$.X1(4209, J$.C(64, J$.B(74, '>', J$.G(1825, J$.R(1817, 'arguments', arguments, 2), 'length', 0), J$.T(1833, 1, 22, false), 0))) ? J$.G(1857, J$.R(1841, 'arguments', arguments, 2), J$.T(1849, 1, 22, false), 4) : J$.T(1865, true, 23, false), isNew, 1));
                            J$.X1(2001, J$.M(1993, J$.R(1889, 'entries', entries, 0), 'forEach', 0)(J$.T(1977, function (entry) {
                                jalangiLabel313:
                                    while (true) {
                                        try {
                                            J$.Fe(1953, arguments.callee, this, arguments);
                                            arguments = J$.N(1961, 'arguments', arguments, 4);
                                            entry = J$.N(1969, 'entry', entry, 4);
                                            J$.X1(1945, J$.M(1937, J$.R(1897, 'this', this, 0), 'addEntry', 0)(J$.G(1913, J$.R(1905, 'entry', entry, 0), 'relativePath', 0), J$.R(1921, 'entry', entry, 0), J$.R(1929, 'isNew', isNew, 0)));
                                        } catch (J$e) {
                                            J$.Ex(4217, J$e);
                                        } finally {
                                            if (J$.Fr(4225))
                                                continue jalangiLabel313;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1953), J$.R(1985, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(4233, J$e);
                        } finally {
                            if (J$.Fr(4241))
                                continue jalangiLabel314;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2009), 0));
            J$.X1(3177, J$.P(3169, J$.G(2241, J$.R(2233, 'Tree', Tree, 1), 'prototype', 0), 'addEntry', J$.T(3161, function (relativePath, entry, _isNew) {
                jalangiLabel316:
                    while (true) {
                        try {
                            J$.Fe(3081, arguments.callee, this, arguments);
                            arguments = J$.N(3089, 'arguments', arguments, 4);
                            relativePath = J$.N(3097, 'relativePath', relativePath, 4);
                            entry = J$.N(3105, 'entry', entry, 4);
                            _isNew = J$.N(3113, '_isNew', _isNew, 4);
                            J$.N(3121, 'fileParts', fileParts, 0);
                            J$.N(3129, 'current', current, 0);
                            J$.N(3137, 'child', child, 0);
                            J$.N(3145, 'isNew', isNew, 0);
                            J$.N(3153, 'tree', tree, 0);
                            var fileParts = J$.X1(2281, J$.W(2273, 'fileParts', J$.M(2265, J$.R(2249, 'relativePath', relativePath, 0), 'split', 0)(J$.T(2257, '/', 21, false)), fileParts, 1));
                            var current = J$.X1(2313, J$.W(2305, 'current', J$.M(2297, J$.R(2289, 'fileParts', fileParts, 0), 'shift', 0)(), current, 1));
                            var child = J$.X1(2361, J$.W(2353, 'child', J$.G(2345, J$.G(2329, J$.R(2321, 'this', this, 0), 'children', 0), J$.R(2337, 'current', current, 0), 4), child, 1));
                            var isNew = J$.X1(2433, J$.W(2425, 'isNew', J$.X1(4265, J$.C(72, J$.B(82, '>', J$.G(2377, J$.R(2369, 'arguments', arguments, 2), 'length', 0), J$.T(2385, 2, 22, false), 0))) ? J$.G(2409, J$.R(2393, 'arguments', arguments, 2), J$.T(2401, 2, 22, false), 4) : J$.T(2417, true, 23, false), isNew, 1));
                            if (J$.X1(4273, J$.C(80, J$.B(90, '===', J$.R(2441, 'current', current, 0), J$.T(2449, '', 21, false), 0)))) {
                                return J$.X1(2465, J$.Rt(2457, undefined));
                            }
                            if (J$.X1(4313, J$.C(136, J$.B(98, '===', J$.G(2481, J$.R(2473, 'fileParts', fileParts, 0), 'length', 0), J$.T(2489, 0, 22, false), 0)))) {
                                if (J$.X1(4289, J$.C(104, J$.C(88, J$.R(2497, 'child', child, 0)) ? J$.G(2513, J$.R(2505, 'child', child, 0), 'isFile', 0) : J$._()))) {
                                    throw J$.X1(2553, J$.Th(2545, J$.F(2537, J$.R(2521, 'Error', Error, 2), 1)(J$.T(2529, 'Cannot add duplicate file', 21, false))));
                                } else if (J$.X1(4281, J$.C(96, J$.B(106, 'instanceof', J$.R(2561, 'child', child, 0), J$.R(2569, 'Tree', Tree, 1), 0)))) {
                                    throw J$.X1(2609, J$.Th(2601, J$.F(2593, J$.R(2577, 'Error', Error, 2), 1)(J$.T(2585, 'Cannot overwrite directory with file', 21, false))));
                                }
                                J$.X1(2681, J$.P(2673, J$.G(2625, J$.R(2617, 'this', this, 0), 'children', 0), J$.R(2633, 'current', current, 0), J$.F(2665, J$.R(2641, 'File', File, 1), 1)(J$.R(2649, 'entry', entry, 0), J$.R(2657, 'isNew', isNew, 0)), 2));
                            } else {
                                if (J$.X1(4297, J$.C(120, J$.C(112, J$.R(2689, 'child', child, 0)) ? J$.G(2705, J$.R(2697, 'child', child, 0), 'isFile', 0) : J$._()))) {
                                    throw J$.X1(2745, J$.Th(2737, J$.F(2729, J$.R(2713, 'Error', Error, 2), 1)(J$.T(2721, 'Cannot add files to files', 21, false))));
                                }
                                var tree = J$.X1(2793, J$.W(2785, 'tree', J$.G(2777, J$.G(2761, J$.R(2753, 'this', this, 0), 'children', 0), J$.R(2769, 'current', current, 0), 4), tree, 1));
                                if (J$.X1(4305, J$.C(128, J$.U(114, '!', J$.R(2801, 'tree', tree, 0))))) {
                                    J$.X1(2921, J$.P(2913, J$.G(2817, J$.R(2809, 'this', this, 0), 'children', 0), J$.R(2825, 'current', current, 0), J$.F(2905, J$.R(2833, 'Tree', Tree, 1), 1)(J$.F(2865, J$.R(2841, 'Set', Set, 1), 1)(J$.T(2849, [], 10, false), J$.T(2857, 'relativePath', 21, false)), J$.M(2889, J$.R(2873, 'this', this, 0), 'pathForChild', 0)(J$.R(2881, 'current', current, 0)), J$.R(2897, 'isNew', isNew, 0)), 2));
                                    J$.X1(3009, J$.M(3001, J$.G(2953, J$.G(2937, J$.R(2929, 'this', this, 0), 'children', 0), J$.R(2945, 'current', current, 0), 4), 'addEntry', 0)(J$.M(2977, J$.R(2961, 'fileParts', fileParts, 0), 'join', 0)(J$.T(2969, '/', 21, false)), J$.R(2985, 'entry', entry, 0), J$.R(2993, 'isNew', isNew, 0)));
                                } else {
                                    J$.X1(3073, J$.M(3065, J$.R(3017, 'tree', tree, 0), 'addEntry', 0)(J$.M(3041, J$.R(3025, 'fileParts', fileParts, 0), 'join', 0)(J$.T(3033, '/', 21, false)), J$.R(3049, 'entry', entry, 0), J$.R(3057, 'isNew', isNew, 0)));
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(4321, J$e);
                        } finally {
                            if (J$.Fr(4329))
                                continue jalangiLabel316;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3081), 0));
            J$.X1(3353, J$.P(3345, J$.G(3193, J$.R(3185, 'Tree', Tree, 1), 'prototype', 0), 'removeEntries', J$.T(3337, function (entries) {
                jalangiLabel318:
                    while (true) {
                        try {
                            J$.Fe(3313, arguments.callee, this, arguments);
                            arguments = J$.N(3321, 'arguments', arguments, 4);
                            entries = J$.N(3329, 'entries', entries, 4);
                            J$.X1(3305, J$.M(3297, J$.R(3201, 'entries', entries, 0), 'forEach', 0)(J$.T(3281, function (entry) {
                                jalangiLabel317:
                                    while (true) {
                                        try {
                                            J$.Fe(3257, arguments.callee, this, arguments);
                                            arguments = J$.N(3265, 'arguments', arguments, 4);
                                            entry = J$.N(3273, 'entry', entry, 4);
                                            J$.X1(3249, J$.M(3241, J$.R(3209, 'this', this, 0), 'removeEntry', 0)(J$.G(3225, J$.R(3217, 'entry', entry, 0), 'relativePath', 0), J$.R(3233, 'entry', entry, 0)));
                                        } catch (J$e) {
                                            J$.Ex(4337, J$e);
                                        } finally {
                                            if (J$.Fr(4345))
                                                continue jalangiLabel317;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 3257), J$.R(3289, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(4353, J$e);
                        } finally {
                            if (J$.Fr(4361))
                                continue jalangiLabel318;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3313), 0));
            J$.X1(3905, J$.P(3897, J$.G(3369, J$.R(3361, 'Tree', Tree, 1), 'prototype', 0), 'removeEntry', J$.T(3889, function (relativePath, entry) {
                jalangiLabel319:
                    while (true) {
                        try {
                            J$.Fe(3833, arguments.callee, this, arguments);
                            arguments = J$.N(3841, 'arguments', arguments, 4);
                            relativePath = J$.N(3849, 'relativePath', relativePath, 4);
                            entry = J$.N(3857, 'entry', entry, 4);
                            J$.N(3865, 'fileParts', fileParts, 0);
                            J$.N(3873, 'current', current, 0);
                            J$.N(3881, 'child', child, 0);
                            var fileParts = J$.X1(3433, J$.W(3425, 'fileParts', J$.M(3417, J$.F(3401, J$.R(3377, 'chomp', chomp, 1), 0)(J$.R(3385, 'relativePath', relativePath, 0), J$.T(3393, '/', 21, false)), 'split', 0)(J$.T(3409, '/', 21, false)), fileParts, 1));
                            var current = J$.X1(3465, J$.W(3457, 'current', J$.M(3449, J$.R(3441, 'fileParts', fileParts, 0), 'shift', 0)(), current, 1));
                            var child = J$.X1(3513, J$.W(3505, 'child', J$.G(3497, J$.G(3481, J$.R(3473, 'this', this, 0), 'children', 0), J$.R(3489, 'current', current, 0), 4), child, 1));
                            if (J$.X1(4393, J$.C(168, J$.B(122, '===', J$.G(3529, J$.R(3521, 'fileParts', fileParts, 0), 'length', 0), J$.T(3537, 0, 22, false), 0)))) {
                                if (J$.X1(4369, J$.C(144, J$.U(130, '!', J$.R(3545, 'child', child, 0))))) {
                                    throw J$.X1(3585, J$.Th(3577, J$.F(3569, J$.R(3553, 'Error', Error, 2), 1)(J$.T(3561, 'Cannot remove nonexistant file', 21, false))));
                                }
                                J$.X1(3649, J$.P(3641, J$.G(3617, J$.G(3601, J$.R(3593, 'this', this, 0), 'children', 0), J$.R(3609, 'current', current, 0), 4), 'operation', J$.G(3633, J$.R(3625, 'Tree', Tree, 1), 'RMToken', 0), 0));
                            } else {
                                if (J$.X1(4385, J$.C(160, J$.U(138, '!', J$.R(3657, 'child', child, 0))))) {
                                    throw J$.X1(3697, J$.Th(3689, J$.F(3681, J$.R(3665, 'Error', Error, 2), 1)(J$.T(3673, 'Cannot remove from nonexistant directory', 21, false))));
                                } else if (J$.X1(4377, J$.C(152, J$.G(3713, J$.R(3705, 'child', child, 0), 'isFile', 0)))) {
                                    throw J$.X1(3753, J$.Th(3745, J$.F(3737, J$.R(3721, 'Error', Error, 2), 1)(J$.T(3729, 'Cannot remove directory from file', 21, false))));
                                }
                                J$.X1(3825, J$.M(3817, J$.R(3761, 'child', child, 0), 'removeEntry', 0)(J$.M(3785, J$.R(3769, 'fileParts', fileParts, 0), 'join', 0)(J$.T(3777, '/', 21, false)), J$.R(3793, 'entry', entry, 0), J$.T(3801, null, 25, false), J$.T(3809, null, 25, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(4401, J$e);
                        } finally {
                            if (J$.Fr(4409))
                                continue jalangiLabel319;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3833), 0));
            J$.X1(3937, J$.P(3929, J$.R(3913, 'module', module, 2), 'exports', J$.R(3921, 'Tree', Tree, 1), 0));
        } catch (J$e) {
            J$.Ex(4417, J$e);
        } finally {
            if (J$.Sr(4425)) {
                J$.L();
                continue jalangiLabel320;
            } else {
                J$.L();
                break jalangiLabel320;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
