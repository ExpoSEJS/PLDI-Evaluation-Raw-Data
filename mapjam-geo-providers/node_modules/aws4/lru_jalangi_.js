J$.iids = {"8":[13,9,13,21],"9":[1,20,1,27],"10":[7,21,7,29],"16":[23,13,23,27],"17":[1,28,1,32],"18":[13,9,13,21],"24":[25,13,25,27],"25":[1,20,1,33],"26":[20,9,20,21],"32":[20,9,20,21],"33":[1,20,1,33],"34":[23,13,23,27],"40":[39,9,39,21],"41":[1,20,1,33],"42":[25,13,25,27],"48":[49,9,49,31],"49":[2,26,2,38],"50":[29,9,29,24],"56":[52,9,52,31],"57":[2,26,2,45],"58":[39,9,39,21],"64":[66,9,66,25],"65":[2,26,2,45],"66":[40,9,40,34],"72":[74,16,74,33],"73":[2,26,2,45],"74":[41,9,41,24],"80":[72,9,72,31],"81":[3,1,3,7],"82":[49,9,49,31],"88":[79,16,79,33],"89":[4,16,4,24],"90":[52,9,52,31],"96":[77,9,77,30],"97":[4,25,4,29],"98":[66,9,66,25],"105":[4,12,4,30],"106":[72,9,72,31],"113":[4,12,4,30],"114":[74,16,74,33],"121":[4,5,4,31],"122":[77,9,77,30],"129":[3,18,5,2],"130":[79,16,79,33],"137":[3,18,5,2],"145":[3,18,5,2],"153":[3,18,5,2],"161":[3,1,5,2],"169":[3,1,5,3],"177":[7,5,7,9],"185":[7,21,7,25],"193":[7,28,7,29],"201":[7,5,7,29],"209":[7,5,7,30],"217":[8,5,8,9],"225":[8,16,8,22],"233":[8,30,8,34],"241":[8,16,8,35],"243":[8,16,8,29],"249":[8,5,8,35],"257":[8,5,8,36],"265":[9,5,9,9],"273":[9,21,9,37],"281":[9,17,9,39],"289":[9,5,9,39],"297":[9,5,9,40],"305":[6,1,10,2],"313":[6,1,10,2],"321":[6,1,10,2],"329":[11,1,11,9],"337":[11,1,11,19],"345":[12,16,12,20],"353":[12,16,12,24],"361":[12,25,12,28],"369":[12,16,12,29],"377":[12,16,12,29],"385":[12,16,12,29],"393":[13,9,13,13],"401":[13,17,13,21],"409":[14,16,14,25],"417":[14,16,14,25],"425":[14,9,14,26],"433":[15,5,15,9],"441":[15,15,15,19],"449":[15,5,15,20],"451":[15,5,15,14],"457":[15,5,15,21],"465":[16,12,16,16],"473":[16,12,16,20],"481":[16,12,16,20],"489":[16,5,16,21],"497":[11,26,17,2],"505":[11,26,17,2],"513":[11,26,17,2],"521":[11,26,17,2],"529":[11,26,17,2],"537":[11,1,17,2],"545":[11,1,17,3],"553":[18,1,18,9],"561":[18,1,18,19],"569":[19,16,19,20],"577":[19,16,19,24],"585":[19,25,19,28],"593":[19,16,19,29],"601":[19,16,19,29],"609":[19,16,19,29],"617":[20,9,20,13],"625":[20,17,20,21],"633":[21,9,21,13],"641":[21,20,21,23],"649":[21,9,21,23],"657":[21,9,21,24],"665":[23,14,23,18],"673":[23,14,23,27],"681":[24,13,24,17],"689":[24,13,24,25],"691":[24,13,24,23],"697":[24,13,24,26],"705":[25,14,25,18],"713":[25,14,25,27],"721":[26,20,26,25],"729":[26,20,26,25],"737":[26,13,26,26],"745":[27,20,27,36],"753":[27,37,27,40],"761":[27,42,27,45],"769":[27,16,27,46],"777":[27,16,27,46],"785":[27,9,27,47],"793":[28,9,28,13],"801":[28,9,28,17],"809":[28,18,28,21],"817":[28,25,28,29],"825":[28,9,28,29],"833":[28,9,28,30],"841":[29,9,29,13],"857":[29,9,29,24],"859":[29,9,29,24],"873":[29,9,29,25],"881":[31,5,31,9],"889":[31,15,31,19],"897":[31,5,31,20],"899":[31,5,31,14],"905":[31,5,31,21],"913":[32,12,32,16],"921":[32,12,32,16],"929":[32,5,32,17],"937":[18,26,33,2],"945":[18,26,33,2],"953":[18,26,33,2],"961":[18,26,33,2],"969":[18,26,33,2],"977":[18,26,33,2],"985":[18,1,33,2],"993":[18,1,33,3],"1001":[34,1,34,9],"1009":[34,1,34,19],"1017":[35,5,35,9],"1025":[35,5,35,14],"1033":[35,27,35,31],"1041":[35,5,35,32],"1043":[35,5,35,26],"1049":[35,5,35,33],"1057":[34,27,36,2],"1065":[34,27,36,2],"1073":[34,27,36,2],"1081":[34,27,36,2],"1089":[34,1,36,2],"1097":[34,1,36,3],"1105":[37,1,37,9],"1113":[37,1,37,19],"1121":[38,16,38,20],"1129":[38,16,38,25],"1137":[38,16,38,31],"1139":[38,16,38,29],"1145":[38,16,38,31],"1153":[38,16,38,31],"1161":[39,9,39,13],"1169":[39,17,39,21],"1177":[40,16,40,20],"1185":[40,16,40,24],"1193":[40,25,40,29],"1201":[40,25,40,33],"1209":[40,9,40,35],"1217":[41,9,41,13],"1233":[41,9,41,24],"1235":[41,9,41,24],"1249":[41,9,41,25],"1257":[37,28,43,2],"1265":[37,28,43,2],"1273":[37,28,43,2],"1281":[37,28,43,2],"1289":[37,1,43,2],"1297":[37,1,43,3],"1305":[45,5,45,9],"1313":[45,22,45,26],"1321":[45,5,45,26],"1329":[45,5,45,27],"1337":[46,5,46,9],"1345":[46,21,46,25],"1353":[46,5,46,25],"1361":[46,5,46,26],"1369":[44,1,47,2],"1377":[44,1,47,2],"1385":[48,1,48,17],"1393":[48,1,48,27],"1401":[49,9,49,13],"1409":[49,9,49,23],"1417":[49,27,49,31],"1425":[50,9,50,16],"1433":[50,9,50,16],"1441":[51,5,51,9],"1449":[51,17,51,21],"1457":[51,5,51,22],"1459":[51,5,51,16],"1465":[51,5,51,23],"1473":[52,9,52,13],"1481":[52,9,52,23],"1489":[52,27,52,31],"1497":[53,9,53,13],"1505":[53,26,53,30],"1513":[53,9,53,30],"1521":[53,9,53,31],"1529":[54,9,54,13],"1537":[54,25,54,29],"1545":[54,9,54,29],"1553":[54,9,54,30],"1561":[55,9,55,13],"1569":[55,21,55,25],"1577":[55,9,55,25],"1585":[55,9,55,26],"1593":[56,9,56,13],"1601":[56,21,56,25],"1609":[56,9,56,25],"1617":[56,9,56,26],"1625":[58,9,58,13],"1633":[58,21,58,25],"1641":[58,9,58,25],"1649":[58,9,58,26],"1657":[59,9,59,13],"1665":[59,21,59,25],"1673":[59,21,59,35],"1681":[59,9,59,35],"1689":[59,9,59,36],"1697":[60,9,60,13],"1705":[60,9,60,18],"1713":[60,26,60,30],"1721":[60,9,60,30],"1729":[60,9,60,31],"1737":[61,9,61,13],"1745":[61,26,61,30],"1753":[61,9,61,30],"1761":[61,9,61,31],"1769":[48,42,63,2],"1777":[48,42,63,2],"1785":[48,42,63,2],"1793":[48,42,63,2],"1801":[48,1,63,2],"1809":[48,1,63,3],"1817":[64,1,64,17],"1825":[64,1,64,27],"1833":[65,20,65,24],"1841":[65,20,65,33],"1849":[65,20,65,33],"1857":[65,20,65,33],"1865":[66,9,66,17],"1873":[66,21,66,25],"1881":[67,9,67,13],"1889":[67,21,67,29],"1897":[67,9,67,30],"1899":[67,9,67,20],"1905":[67,9,67,31],"1913":[69,12,69,20],"1921":[69,12,69,20],"1929":[69,5,69,21],"1937":[64,34,70,2],"1945":[64,34,70,2],"1953":[64,34,70,2],"1961":[64,34,70,2],"1969":[64,1,70,2],"1977":[64,1,70,3],"1985":[71,1,71,17],"1993":[71,1,71,27],"2001":[72,9,72,13],"2009":[72,9,72,23],"2017":[72,27,72,31],"2025":[73,9,73,13],"2033":[73,26,73,30],"2041":[73,26,73,35],"2049":[73,9,73,35],"2057":[73,9,73,36],"2065":[74,16,74,20],"2073":[74,16,74,25],"2081":[74,29,74,33],"2089":[75,9,75,13],"2097":[75,9,75,18],"2105":[75,26,75,30],"2113":[75,26,75,35],"2121":[75,9,75,35],"2129":[75,9,75,36],"2137":[77,9,77,13],"2145":[77,9,77,22],"2153":[77,26,77,30],"2161":[78,9,78,13],"2169":[78,25,78,29],"2177":[78,25,78,34],"2185":[78,9,78,34],"2193":[78,9,78,35],"2201":[79,16,79,20],"2209":[79,16,79,25],"2217":[79,29,79,33],"2225":[80,9,80,13],"2233":[80,9,80,18],"2241":[80,26,80,30],"2249":[80,26,80,35],"2257":[80,9,80,35],"2265":[80,9,80,36],"2273":[71,37,82,2],"2281":[71,37,82,2],"2289":[71,37,82,2],"2297":[71,37,82,2],"2305":[71,1,82,2],"2313":[71,1,82,3],"2321":[84,5,84,9],"2329":[84,16,84,19],"2337":[84,5,84,19],"2345":[84,5,84,20],"2353":[85,5,85,9],"2361":[85,16,85,19],"2369":[85,5,85,19],"2377":[85,5,85,20],"2385":[86,5,86,9],"2393":[86,17,86,21],"2401":[86,5,86,21],"2409":[86,5,86,22],"2417":[87,5,87,9],"2425":[87,17,87,21],"2433":[87,5,87,21],"2441":[87,5,87,22],"2449":[83,1,88,2],"2457":[83,1,88,2],"2465":[83,1,88,2],"2473":[83,1,88,2],"2481":[1,1,88,2],"2489":[1,1,88,2],"2497":[1,1,88,2],"2505":[6,1,10,2],"2513":[1,1,88,2],"2521":[44,1,47,2],"2529":[1,1,88,2],"2537":[83,1,88,2],"2545":[1,1,88,2],"2553":[3,18,5,2],"2561":[3,18,5,2],"2569":[6,1,10,2],"2577":[6,1,10,2],"2585":[13,5,14,26],"2593":[11,26,17,2],"2601":[11,26,17,2],"2609":[23,9,24,26],"2617":[25,9,26,26],"2625":[20,5,30,6],"2633":[18,26,33,2],"2641":[18,26,33,2],"2649":[34,27,36,2],"2657":[34,27,36,2],"2665":[39,5,42,6],"2673":[37,28,43,2],"2681":[37,28,43,2],"2689":[44,1,47,2],"2697":[44,1,47,2],"2705":[49,5,50,16],"2713":[52,5,62,6],"2721":[48,42,63,2],"2729":[48,42,63,2],"2737":[66,5,68,6],"2745":[64,34,70,2],"2753":[64,34,70,2],"2761":[74,12,76,6],"2769":[72,5,76,6],"2777":[79,12,81,6],"2785":[77,5,81,6],"2793":[71,37,82,2],"2801":[71,37,82,2],"2809":[83,1,88,2],"2817":[83,1,88,2],"2825":[1,1,88,2],"2833":[1,1,88,2],"nBranches":24,"originalCodeFileName":"/home/blake/ExpoSE/Targets/mapjam-geo-providers/node_modules/aws4/lru.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/mapjam-geo-providers/node_modules/aws4/lru_jalangi_.js","code":"module.exports = function(size) {\n  return new LruCache(size)\n}\n\nfunction LruCache(size) {\n  this.capacity = size | 0\n  this.map = Object.create(null)\n  this.list = new DoublyLinkedList()\n}\n\nLruCache.prototype.get = function(key) {\n  var node = this.map[key]\n  if (node == null) return undefined\n  this.used(node)\n  return node.val\n}\n\nLruCache.prototype.set = function(key, val) {\n  var node = this.map[key]\n  if (node != null) {\n    node.val = val\n  } else {\n    if (!this.capacity) this.prune()\n    if (!this.capacity) return false\n    node = new DoublyLinkedNode(key, val)\n    this.map[key] = node\n    this.capacity--\n  }\n  this.used(node)\n  return true\n}\n\nLruCache.prototype.used = function(node) {\n  this.list.moveToFront(node)\n}\n\nLruCache.prototype.prune = function() {\n  var node = this.list.pop()\n  if (node != null) {\n    delete this.map[node.key]\n    this.capacity++\n  }\n}\n\n\nfunction DoublyLinkedList() {\n  this.firstNode = null\n  this.lastNode = null\n}\n\nDoublyLinkedList.prototype.moveToFront = function(node) {\n  if (this.firstNode == node) return\n\n  this.remove(node)\n\n  if (this.firstNode == null) {\n    this.firstNode = node\n    this.lastNode = node\n    node.prev = null\n    node.next = null\n  } else {\n    node.prev = null\n    node.next = this.firstNode\n    node.next.prev = node\n    this.firstNode = node\n  }\n}\n\nDoublyLinkedList.prototype.pop = function() {\n  var lastNode = this.lastNode\n  if (lastNode != null) {\n    this.remove(lastNode)\n  }\n  return lastNode\n}\n\nDoublyLinkedList.prototype.remove = function(node) {\n  if (this.firstNode == node) {\n    this.firstNode = node.next\n  } else if (node.prev != null) {\n    node.prev.next = node.next\n  }\n  if (this.lastNode == node) {\n    this.lastNode = node.prev\n  } else if (node.next != null) {\n    node.next.prev = node.prev\n  }\n}\n\n\nfunction DoublyLinkedNode(key, val) {\n  this.key = key\n  this.val = val\n  this.prev = null\n  this.next = null\n}\n"};
jalangiLabel488:
    while (true) {
        try {
            J$.Se(2481, '/home/blake/ExpoSE/Targets/mapjam-geo-providers/node_modules/aws4/lru_jalangi_.js', '/home/blake/ExpoSE/Targets/mapjam-geo-providers/node_modules/aws4/lru.js');
            function LruCache(size) {
                jalangiLabel478:
                    while (true) {
                        try {
                            J$.Fe(305, arguments.callee, this, arguments);
                            arguments = J$.N(313, 'arguments', arguments, 4);
                            size = J$.N(321, 'size', size, 4);
                            J$.X1(209, J$.P(201, J$.R(177, 'this', this, 0), 'capacity', J$.B(10, '|', J$.R(185, 'size', size, 0), J$.T(193, 0, 22, false), 0), 0));
                            J$.X1(257, J$.P(249, J$.R(217, 'this', this, 0), 'map', J$.M(241, J$.R(225, 'Object', Object, 2), 'create', 0)(J$.T(233, null, 25, false)), 0));
                            J$.X1(297, J$.P(289, J$.R(265, 'this', this, 0), 'list', J$.F(281, J$.R(273, 'DoublyLinkedList', DoublyLinkedList, 1), 1)(), 0));
                        } catch (J$e) {
                            J$.Ex(2569, J$e);
                        } finally {
                            if (J$.Fr(2577))
                                continue jalangiLabel478;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function DoublyLinkedList() {
                jalangiLabel483:
                    while (true) {
                        try {
                            J$.Fe(1369, arguments.callee, this, arguments);
                            arguments = J$.N(1377, 'arguments', arguments, 4);
                            J$.X1(1329, J$.P(1321, J$.R(1305, 'this', this, 0), 'firstNode', J$.T(1313, null, 25, false), 0));
                            J$.X1(1361, J$.P(1353, J$.R(1337, 'this', this, 0), 'lastNode', J$.T(1345, null, 25, false), 0));
                        } catch (J$e) {
                            J$.Ex(2689, J$e);
                        } finally {
                            if (J$.Fr(2697))
                                continue jalangiLabel483;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function DoublyLinkedNode(key, val) {
                jalangiLabel487:
                    while (true) {
                        try {
                            J$.Fe(2449, arguments.callee, this, arguments);
                            arguments = J$.N(2457, 'arguments', arguments, 4);
                            key = J$.N(2465, 'key', key, 4);
                            val = J$.N(2473, 'val', val, 4);
                            J$.X1(2345, J$.P(2337, J$.R(2321, 'this', this, 0), 'key', J$.R(2329, 'key', key, 0), 0));
                            J$.X1(2377, J$.P(2369, J$.R(2353, 'this', this, 0), 'val', J$.R(2361, 'val', val, 0), 0));
                            J$.X1(2409, J$.P(2401, J$.R(2385, 'this', this, 0), 'prev', J$.T(2393, null, 25, false), 0));
                            J$.X1(2441, J$.P(2433, J$.R(2417, 'this', this, 0), 'next', J$.T(2425, null, 25, false), 0));
                        } catch (J$e) {
                            J$.Ex(2809, J$e);
                        } finally {
                            if (J$.Fr(2817))
                                continue jalangiLabel487;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2489, '__secret__S$', __secret__S$, 0);
            J$.N(2497, '__secret__traits__', __secret__traits__, 0);
            LruCache = J$.N(2513, 'LruCache', J$.T(2505, LruCache, 12, false, 305), 0);
            DoublyLinkedList = J$.N(2529, 'DoublyLinkedList', J$.T(2521, DoublyLinkedList, 12, false, 1369), 0);
            DoublyLinkedNode = J$.N(2545, 'DoublyLinkedNode', J$.T(2537, DoublyLinkedNode, 12, false, 2449), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(169, J$.P(161, J$.R(81, 'module', module, 2), 'exports', J$.T(153, function (size) {
                jalangiLabel477:
                    while (true) {
                        try {
                            J$.Fe(129, arguments.callee, this, arguments);
                            arguments = J$.N(137, 'arguments', arguments, 4);
                            size = J$.N(145, 'size', size, 4);
                            return J$.X1(121, J$.Rt(113, J$.F(105, J$.R(89, 'LruCache', LruCache, 1), 1)(J$.R(97, 'size', size, 0))));
                        } catch (J$e) {
                            J$.Ex(2553, J$e);
                        } finally {
                            if (J$.Fr(2561))
                                continue jalangiLabel477;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 129), 0));
            J$.X1(545, J$.P(537, J$.G(337, J$.R(329, 'LruCache', LruCache, 1), 'prototype', 0), 'get', J$.T(529, function (key) {
                jalangiLabel479:
                    while (true) {
                        try {
                            J$.Fe(497, arguments.callee, this, arguments);
                            arguments = J$.N(505, 'arguments', arguments, 4);
                            key = J$.N(513, 'key', key, 4);
                            J$.N(521, 'node', node, 0);
                            var node = J$.X1(385, J$.W(377, 'node', J$.G(369, J$.G(353, J$.R(345, 'this', this, 0), 'map', 0), J$.R(361, 'key', key, 0), 4), node, 1));
                            if (J$.X1(2585, J$.C(8, J$.B(18, '==', J$.R(393, 'node', node, 0), J$.T(401, null, 25, false), 0))))
                                return J$.X1(425, J$.Rt(417, J$.T(409, undefined, 24, false)));
                            J$.X1(457, J$.M(449, J$.R(433, 'this', this, 0), 'used', 0)(J$.R(441, 'node', node, 0)));
                            return J$.X1(489, J$.Rt(481, J$.G(473, J$.R(465, 'node', node, 0), 'val', 0)));
                        } catch (J$e) {
                            J$.Ex(2593, J$e);
                        } finally {
                            if (J$.Fr(2601))
                                continue jalangiLabel479;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 497), 0));
            J$.X1(993, J$.P(985, J$.G(561, J$.R(553, 'LruCache', LruCache, 1), 'prototype', 0), 'set', J$.T(977, function (key, val) {
                jalangiLabel480:
                    while (true) {
                        try {
                            J$.Fe(937, arguments.callee, this, arguments);
                            arguments = J$.N(945, 'arguments', arguments, 4);
                            key = J$.N(953, 'key', key, 4);
                            val = J$.N(961, 'val', val, 4);
                            J$.N(969, 'node', node, 0);
                            var node = J$.X1(609, J$.W(601, 'node', J$.G(593, J$.G(577, J$.R(569, 'this', this, 0), 'map', 0), J$.R(585, 'key', key, 0), 4), node, 1));
                            if (J$.X1(2625, J$.C(32, J$.B(26, '!=', J$.R(617, 'node', node, 0), J$.T(625, null, 25, false), 0)))) {
                                J$.X1(657, J$.P(649, J$.R(633, 'node', node, 0), 'val', J$.R(641, 'val', val, 0), 0));
                            } else {
                                if (J$.X1(2609, J$.C(16, J$.U(34, '!', J$.G(673, J$.R(665, 'this', this, 0), 'capacity', 0)))))
                                    J$.X1(697, J$.M(689, J$.R(681, 'this', this, 0), 'prune', 0)());
                                if (J$.X1(2617, J$.C(24, J$.U(42, '!', J$.G(713, J$.R(705, 'this', this, 0), 'capacity', 0)))))
                                    return J$.X1(737, J$.Rt(729, J$.T(721, false, 23, false)));
                                J$.X1(785, node = J$.W(777, 'node', J$.F(769, J$.R(745, 'DoublyLinkedNode', DoublyLinkedNode, 1), 1)(J$.R(753, 'key', key, 0), J$.R(761, 'val', val, 0)), node, 0));
                                J$.X1(833, J$.P(825, J$.G(801, J$.R(793, 'this', this, 0), 'map', 0), J$.R(809, 'key', key, 0), J$.R(817, 'node', node, 0), 2));
                                J$.X1(873, J$.B(50, '+', J$.A(857, J$.R(841, 'this', this, 0), 'capacity', '-', 0)(J$.T(849, 1, 22, false)), J$.T(865, 1, 22, false), 0));
                            }
                            J$.X1(905, J$.M(897, J$.R(881, 'this', this, 0), 'used', 0)(J$.R(889, 'node', node, 0)));
                            return J$.X1(929, J$.Rt(921, J$.T(913, true, 23, false)));
                        } catch (J$e) {
                            J$.Ex(2633, J$e);
                        } finally {
                            if (J$.Fr(2641))
                                continue jalangiLabel480;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 937), 0));
            J$.X1(1097, J$.P(1089, J$.G(1009, J$.R(1001, 'LruCache', LruCache, 1), 'prototype', 0), 'used', J$.T(1081, function (node) {
                jalangiLabel481:
                    while (true) {
                        try {
                            J$.Fe(1057, arguments.callee, this, arguments);
                            arguments = J$.N(1065, 'arguments', arguments, 4);
                            node = J$.N(1073, 'node', node, 4);
                            J$.X1(1049, J$.M(1041, J$.G(1025, J$.R(1017, 'this', this, 0), 'list', 0), 'moveToFront', 0)(J$.R(1033, 'node', node, 0)));
                        } catch (J$e) {
                            J$.Ex(2649, J$e);
                        } finally {
                            if (J$.Fr(2657))
                                continue jalangiLabel481;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1057), 0));
            J$.X1(1297, J$.P(1289, J$.G(1113, J$.R(1105, 'LruCache', LruCache, 1), 'prototype', 0), 'prune', J$.T(1281, function () {
                jalangiLabel482:
                    while (true) {
                        try {
                            J$.Fe(1257, arguments.callee, this, arguments);
                            arguments = J$.N(1265, 'arguments', arguments, 4);
                            J$.N(1273, 'node', node, 0);
                            var node = J$.X1(1153, J$.W(1145, 'node', J$.M(1137, J$.G(1129, J$.R(1121, 'this', this, 0), 'list', 0), 'pop', 0)(), node, 1));
                            if (J$.X1(2665, J$.C(40, J$.B(58, '!=', J$.R(1161, 'node', node, 0), J$.T(1169, null, 25, false), 0)))) {
                                J$.X1(1209, J$.B(66, 'delete', J$.G(1185, J$.R(1177, 'this', this, 0), 'map', 0), J$.G(1201, J$.R(1193, 'node', node, 0), 'key', 0), 4));
                                J$.X1(1249, J$.B(74, '-', J$.A(1233, J$.R(1217, 'this', this, 0), 'capacity', '+', 0)(J$.T(1225, 1, 22, false)), J$.T(1241, 1, 22, false), 0));
                            }
                        } catch (J$e) {
                            J$.Ex(2673, J$e);
                        } finally {
                            if (J$.Fr(2681))
                                continue jalangiLabel482;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1257), 0));
            J$.X1(1809, J$.P(1801, J$.G(1393, J$.R(1385, 'DoublyLinkedList', DoublyLinkedList, 1), 'prototype', 0), 'moveToFront', J$.T(1793, function (node) {
                jalangiLabel484:
                    while (true) {
                        try {
                            J$.Fe(1769, arguments.callee, this, arguments);
                            arguments = J$.N(1777, 'arguments', arguments, 4);
                            node = J$.N(1785, 'node', node, 4);
                            if (J$.X1(2705, J$.C(48, J$.B(82, '==', J$.G(1409, J$.R(1401, 'this', this, 0), 'firstNode', 0), J$.R(1417, 'node', node, 0), 0))))
                                return J$.X1(1433, J$.Rt(1425, undefined));
                            J$.X1(1465, J$.M(1457, J$.R(1441, 'this', this, 0), 'remove', 0)(J$.R(1449, 'node', node, 0)));
                            if (J$.X1(2713, J$.C(56, J$.B(90, '==', J$.G(1481, J$.R(1473, 'this', this, 0), 'firstNode', 0), J$.T(1489, null, 25, false), 0)))) {
                                J$.X1(1521, J$.P(1513, J$.R(1497, 'this', this, 0), 'firstNode', J$.R(1505, 'node', node, 0), 0));
                                J$.X1(1553, J$.P(1545, J$.R(1529, 'this', this, 0), 'lastNode', J$.R(1537, 'node', node, 0), 0));
                                J$.X1(1585, J$.P(1577, J$.R(1561, 'node', node, 0), 'prev', J$.T(1569, null, 25, false), 0));
                                J$.X1(1617, J$.P(1609, J$.R(1593, 'node', node, 0), 'next', J$.T(1601, null, 25, false), 0));
                            } else {
                                J$.X1(1649, J$.P(1641, J$.R(1625, 'node', node, 0), 'prev', J$.T(1633, null, 25, false), 0));
                                J$.X1(1689, J$.P(1681, J$.R(1657, 'node', node, 0), 'next', J$.G(1673, J$.R(1665, 'this', this, 0), 'firstNode', 0), 0));
                                J$.X1(1729, J$.P(1721, J$.G(1705, J$.R(1697, 'node', node, 0), 'next', 0), 'prev', J$.R(1713, 'node', node, 0), 0));
                                J$.X1(1761, J$.P(1753, J$.R(1737, 'this', this, 0), 'firstNode', J$.R(1745, 'node', node, 0), 0));
                            }
                        } catch (J$e) {
                            J$.Ex(2721, J$e);
                        } finally {
                            if (J$.Fr(2729))
                                continue jalangiLabel484;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1769), 0));
            J$.X1(1977, J$.P(1969, J$.G(1825, J$.R(1817, 'DoublyLinkedList', DoublyLinkedList, 1), 'prototype', 0), 'pop', J$.T(1961, function () {
                jalangiLabel485:
                    while (true) {
                        try {
                            J$.Fe(1937, arguments.callee, this, arguments);
                            arguments = J$.N(1945, 'arguments', arguments, 4);
                            J$.N(1953, 'lastNode', lastNode, 0);
                            var lastNode = J$.X1(1857, J$.W(1849, 'lastNode', J$.G(1841, J$.R(1833, 'this', this, 0), 'lastNode', 0), lastNode, 1));
                            if (J$.X1(2737, J$.C(64, J$.B(98, '!=', J$.R(1865, 'lastNode', lastNode, 0), J$.T(1873, null, 25, false), 0)))) {
                                J$.X1(1905, J$.M(1897, J$.R(1881, 'this', this, 0), 'remove', 0)(J$.R(1889, 'lastNode', lastNode, 0)));
                            }
                            return J$.X1(1929, J$.Rt(1921, J$.R(1913, 'lastNode', lastNode, 0)));
                        } catch (J$e) {
                            J$.Ex(2745, J$e);
                        } finally {
                            if (J$.Fr(2753))
                                continue jalangiLabel485;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1937), 0));
            J$.X1(2313, J$.P(2305, J$.G(1993, J$.R(1985, 'DoublyLinkedList', DoublyLinkedList, 1), 'prototype', 0), 'remove', J$.T(2297, function (node) {
                jalangiLabel486:
                    while (true) {
                        try {
                            J$.Fe(2273, arguments.callee, this, arguments);
                            arguments = J$.N(2281, 'arguments', arguments, 4);
                            node = J$.N(2289, 'node', node, 4);
                            if (J$.X1(2769, J$.C(80, J$.B(106, '==', J$.G(2009, J$.R(2001, 'this', this, 0), 'firstNode', 0), J$.R(2017, 'node', node, 0), 0)))) {
                                J$.X1(2057, J$.P(2049, J$.R(2025, 'this', this, 0), 'firstNode', J$.G(2041, J$.R(2033, 'node', node, 0), 'next', 0), 0));
                            } else if (J$.X1(2761, J$.C(72, J$.B(114, '!=', J$.G(2073, J$.R(2065, 'node', node, 0), 'prev', 0), J$.T(2081, null, 25, false), 0)))) {
                                J$.X1(2129, J$.P(2121, J$.G(2097, J$.R(2089, 'node', node, 0), 'prev', 0), 'next', J$.G(2113, J$.R(2105, 'node', node, 0), 'next', 0), 0));
                            }
                            if (J$.X1(2785, J$.C(96, J$.B(122, '==', J$.G(2145, J$.R(2137, 'this', this, 0), 'lastNode', 0), J$.R(2153, 'node', node, 0), 0)))) {
                                J$.X1(2193, J$.P(2185, J$.R(2161, 'this', this, 0), 'lastNode', J$.G(2177, J$.R(2169, 'node', node, 0), 'prev', 0), 0));
                            } else if (J$.X1(2777, J$.C(88, J$.B(130, '!=', J$.G(2209, J$.R(2201, 'node', node, 0), 'next', 0), J$.T(2217, null, 25, false), 0)))) {
                                J$.X1(2265, J$.P(2257, J$.G(2233, J$.R(2225, 'node', node, 0), 'next', 0), 'prev', J$.G(2249, J$.R(2241, 'node', node, 0), 'prev', 0), 0));
                            }
                        } catch (J$e) {
                            J$.Ex(2793, J$e);
                        } finally {
                            if (J$.Fr(2801))
                                continue jalangiLabel486;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2273), 0));
        } catch (J$e) {
            J$.Ex(2825, J$e);
        } finally {
            if (J$.Sr(2833)) {
                J$.L();
                continue jalangiLabel488;
            } else {
                J$.L();
                break jalangiLabel488;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
