J$.iids = {"8":[10,5,10,32],"9":[1,20,1,27],"10":[21,9,21,19],"16":[10,5,10,54],"17":[1,28,1,32],"18":[21,9,21,32],"24":[10,5,10,80],"25":[1,20,1,33],"26":[27,9,27,20],"32":[10,5,10,80],"33":[1,20,1,33],"34":[27,9,27,33],"40":[21,9,21,32],"41":[1,20,1,33],"42":[31,9,31,27],"48":[27,9,27,33],"49":[2,26,2,38],"50":[32,13,32,28],"56":[32,13,32,41],"57":[2,26,2,45],"58":[32,13,32,41],"64":[31,9,31,27],"65":[2,26,2,45],"66":[43,9,43,20],"72":[43,9,43,33],"73":[2,26,2,45],"74":[43,9,43,33],"80":[49,9,49,33],"81":[3,14,3,21],"82":[49,9,49,20],"89":[3,22,3,30],"90":[49,9,49,33],"97":[3,14,3,31],"105":[3,14,3,31],"113":[3,14,3,31],"121":[4,14,4,20],"129":[4,14,4,27],"137":[4,14,4,27],"145":[4,14,4,27],"153":[6,21,6,24],"161":[7,9,7,12],"169":[7,13,7,16],"177":[7,20,7,23],"185":[7,24,7,27],"193":[7,20,7,28],"201":[7,9,7,28],"209":[7,9,7,29],"217":[6,21,6,24],"225":[6,5,8,6],"233":[6,5,8,6],"241":[5,1,9,2],"249":[5,1,9,2],"257":[5,1,9,2],"265":[5,1,9,2],"273":[5,1,9,2],"281":[10,5,10,11],"289":[10,5,10,16],"297":[10,20,10,26],"305":[10,20,10,32],"313":[10,36,10,42],"321":[10,36,10,54],"329":[10,58,10,64],"337":[10,58,10,80],"345":[11,5,11,11],"353":[11,22,11,28],"361":[11,5,11,28],"369":[11,5,11,29],"377":[13,5,13,14],"385":[13,15,13,21],"393":[13,23,13,30],"401":[13,5,13,31],"409":[13,5,13,32],"417":[14,5,14,12],"425":[14,22,14,32],"433":[14,5,14,32],"441":[14,5,14,33],"449":[17,12,17,18],"457":[17,19,17,22],"465":[17,24,17,40],"473":[17,42,17,48],"481":[17,12,17,49],"489":[17,12,17,49],"497":[17,5,17,50],"505":[16,1,18,2],"513":[16,1,18,2],"521":[16,1,18,2],"529":[16,1,18,2],"537":[16,1,18,2],"545":[19,1,19,10],"553":[19,11,19,17],"561":[19,19,19,29],"569":[19,1,19,30],"577":[19,1,19,31],"585":[20,1,20,11],"593":[21,16,21,19],"601":[21,24,21,32],"609":[22,19,22,28],"617":[22,29,22,60],"625":[22,15,22,61],"633":[22,15,22,61],"641":[22,9,22,62],"649":[24,12,24,18],"657":[24,19,24,22],"665":[24,24,24,40],"673":[24,42,24,48],"681":[24,12,24,49],"689":[24,12,24,49],"697":[24,5,24,50],"705":[20,19,25,2],"713":[20,19,25,2],"721":[20,19,25,2],"729":[20,19,25,2],"737":[20,19,25,2],"745":[20,19,25,2],"753":[20,1,25,2],"761":[20,1,25,3],"769":[26,1,26,11],"777":[27,16,27,20],"785":[27,25,27,33],"793":[28,19,28,28],"801":[28,29,28,56],"809":[28,15,28,57],"817":[28,15,28,57],"825":[28,9,28,58],"833":[30,15,30,21],"841":[30,22,30,26],"849":[30,15,30,27],"857":[30,15,30,27],"865":[30,15,30,27],"873":[31,9,31,13],"881":[31,18,31,27],"889":[32,20,32,28],"897":[32,33,32,41],"905":[33,13,33,16],"913":[33,22,33,26],"921":[33,28,33,36],"929":[33,13,33,37],"931":[33,13,33,21],"937":[33,13,33,38],"945":[35,13,35,16],"953":[35,22,35,26],"961":[35,13,35,27],"963":[35,13,35,21],"969":[35,13,35,28],"977":[38,9,38,12],"985":[38,18,38,19],"993":[38,9,38,20],"995":[38,9,38,17],"1001":[38,9,38,21],"1009":[40,12,40,15],"1017":[40,12,40,15],"1025":[40,5,40,16],"1033":[26,20,41,2],"1041":[26,20,41,2],"1049":[26,20,41,2],"1057":[26,20,41,2],"1065":[26,20,41,2],"1073":[26,20,41,2],"1081":[26,20,41,2],"1089":[26,1,41,2],"1097":[26,1,41,3],"1105":[42,1,42,11],"1113":[43,16,43,20],"1121":[43,25,43,33],"1129":[44,19,44,28],"1137":[44,29,44,56],"1145":[44,15,44,57],"1153":[44,15,44,57],"1161":[44,9,44,58],"1169":[46,12,46,18],"1177":[46,19,46,23],"1185":[46,12,46,24],"1193":[46,12,46,24],"1201":[46,5,46,25],"1209":[42,26,47,2],"1217":[42,26,47,2],"1225":[42,26,47,2],"1233":[42,26,47,2],"1241":[42,1,47,2],"1249":[42,1,47,3],"1257":[48,1,48,11],"1265":[49,16,49,20],"1273":[49,25,49,33],"1281":[50,19,50,28],"1289":[50,29,50,56],"1297":[50,15,50,57],"1305":[50,15,50,57],"1313":[50,9,50,58],"1321":[52,12,52,18],"1329":[52,30,52,34],"1337":[52,12,52,35],"1339":[52,12,52,29],"1345":[52,12,52,35],"1353":[52,5,52,36],"1361":[48,30,53,2],"1369":[48,30,53,2],"1377":[48,30,53,2],"1385":[48,30,53,2],"1393":[48,1,53,2],"1401":[48,1,53,3],"1409":[1,1,53,3],"1417":[1,1,53,3],"1425":[1,1,53,3],"1433":[1,1,53,3],"1441":[1,1,53,3],"1449":[5,1,9,2],"1457":[1,1,53,3],"1465":[16,1,18,2],"1473":[1,1,53,3],"1481":[5,1,9,2],"1489":[5,1,9,2],"1497":[10,1,15,2],"1505":[16,1,18,2],"1513":[16,1,18,2],"1521":[21,5,23,6],"1529":[20,19,25,2],"1537":[20,19,25,2],"1545":[27,5,29,6],"1553":[32,9,36,10],"1561":[31,5,39,6],"1569":[26,20,41,2],"1577":[26,20,41,2],"1585":[43,5,45,6],"1593":[42,26,47,2],"1601":[42,26,47,2],"1609":[49,5,51,6],"1617":[48,30,53,2],"1625":[48,30,53,2],"1633":[1,1,53,3],"1641":[1,1,53,3],"nBranches":20,"originalCodeFileName":"/home/blake/ExpoSE/Targets/mapjam-geo-providers/node_modules/safe-buffer/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/mapjam-geo-providers/node_modules/safe-buffer/index_jalangi_.js","code":"/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n"};
jalangiLabel205:
    while (true) {
        try {
            J$.Se(1409, '/home/blake/ExpoSE/Targets/mapjam-geo-providers/node_modules/safe-buffer/index_jalangi_.js', '/home/blake/ExpoSE/Targets/mapjam-geo-providers/node_modules/safe-buffer/index.js');
            function copyProps(src, dst) {
                jalangiLabel199:
                    while (true) {
                        try {
                            J$.Fe(241, arguments.callee, this, arguments);
                            arguments = J$.N(249, 'arguments', arguments, 4);
                            src = J$.N(257, 'src', src, 4);
                            dst = J$.N(265, 'dst', dst, 4);
                            J$.N(273, 'key', key, 0);
                            for (J$._tm_p in J$.H(217, J$.R(153, 'src', src, 0))) {
                                var key = J$.X1(233, J$.W(225, 'key', J$._tm_p, key, 1));
                                {
                                    {
                                        J$.X1(209, J$.P(201, J$.R(161, 'dst', dst, 0), J$.R(169, 'key', key, 0), J$.G(193, J$.R(177, 'src', src, 0), J$.R(185, 'key', key, 0), 4), 2));
                                    }
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(1481, J$e);
                        } finally {
                            if (J$.Fr(1489))
                                continue jalangiLabel199;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function SafeBuffer(arg, encodingOrOffset, length) {
                jalangiLabel200:
                    while (true) {
                        try {
                            J$.Fe(505, arguments.callee, this, arguments);
                            arguments = J$.N(513, 'arguments', arguments, 4);
                            arg = J$.N(521, 'arg', arg, 4);
                            encodingOrOffset = J$.N(529, 'encodingOrOffset', encodingOrOffset, 4);
                            length = J$.N(537, 'length', length, 4);
                            return J$.X1(497, J$.Rt(489, J$.F(481, J$.R(449, 'Buffer', Buffer, 1), 0)(J$.R(457, 'arg', arg, 0), J$.R(465, 'encodingOrOffset', encodingOrOffset, 0), J$.R(473, 'length', length, 0))));
                        } catch (J$e) {
                            J$.Ex(1505, J$e);
                        } finally {
                            if (J$.Fr(1513))
                                continue jalangiLabel200;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1417, '__secret__S$', __secret__S$, 0);
            J$.N(1425, '__secret__traits__', __secret__traits__, 0);
            J$.N(1433, 'buffer', buffer, 0);
            J$.N(1441, 'Buffer', Buffer, 0);
            copyProps = J$.N(1457, 'copyProps', J$.T(1449, copyProps, 12, false, 241), 0);
            SafeBuffer = J$.N(1473, 'SafeBuffer', J$.T(1465, SafeBuffer, 12, false, 505), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var buffer = J$.X1(113, J$.W(105, 'buffer', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, 'buffer', 21, false)), buffer, 3));
            var Buffer = J$.X1(145, J$.W(137, 'Buffer', J$.G(129, J$.R(121, 'buffer', buffer, 1), 'Buffer', 0), Buffer, 3));
            if (J$.X1(1497, J$.C(32, J$.C(24, J$.C(16, J$.C(8, J$.G(289, J$.R(281, 'Buffer', Buffer, 1), 'from', 0)) ? J$.G(305, J$.R(297, 'Buffer', Buffer, 1), 'alloc', 0) : J$._()) ? J$.G(321, J$.R(313, 'Buffer', Buffer, 1), 'allocUnsafe', 0) : J$._()) ? J$.G(337, J$.R(329, 'Buffer', Buffer, 1), 'allocUnsafeSlow', 0) : J$._()))) {
                J$.X1(369, J$.P(361, J$.R(345, 'module', module, 2), 'exports', J$.R(353, 'buffer', buffer, 1), 0));
            } else {
                J$.X1(409, J$.F(401, J$.R(377, 'copyProps', copyProps, 1), 0)(J$.R(385, 'buffer', buffer, 1), J$.R(393, 'exports', exports, 2)));
                J$.X1(441, J$.P(433, J$.R(417, 'exports', exports, 2), 'Buffer', J$.R(425, 'SafeBuffer', SafeBuffer, 1), 0));
            }
            J$.X1(577, J$.F(569, J$.R(545, 'copyProps', copyProps, 1), 0)(J$.R(553, 'Buffer', Buffer, 1), J$.R(561, 'SafeBuffer', SafeBuffer, 1)));
            J$.X1(761, J$.P(753, J$.R(585, 'SafeBuffer', SafeBuffer, 1), 'from', J$.T(745, function (arg, encodingOrOffset, length) {
                jalangiLabel201:
                    while (true) {
                        try {
                            J$.Fe(705, arguments.callee, this, arguments);
                            arguments = J$.N(713, 'arguments', arguments, 4);
                            arg = J$.N(721, 'arg', arg, 4);
                            encodingOrOffset = J$.N(729, 'encodingOrOffset', encodingOrOffset, 4);
                            length = J$.N(737, 'length', length, 4);
                            if (J$.X1(1521, J$.C(40, J$.B(18, '===', J$.U(10, 'typeof', J$.R(593, 'arg', arg, 0)), J$.T(601, 'number', 21, false), 0)))) {
                                throw J$.X1(641, J$.Th(633, J$.F(625, J$.R(609, 'TypeError', TypeError, 2), 1)(J$.T(617, 'Argument must not be a number', 21, false))));
                            }
                            return J$.X1(697, J$.Rt(689, J$.F(681, J$.R(649, 'Buffer', Buffer, 1), 0)(J$.R(657, 'arg', arg, 0), J$.R(665, 'encodingOrOffset', encodingOrOffset, 0), J$.R(673, 'length', length, 0))));
                        } catch (J$e) {
                            J$.Ex(1529, J$e);
                        } finally {
                            if (J$.Fr(1537))
                                continue jalangiLabel201;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 705), 0));
            J$.X1(1097, J$.P(1089, J$.R(769, 'SafeBuffer', SafeBuffer, 1), 'alloc', J$.T(1081, function (size, fill, encoding) {
                jalangiLabel202:
                    while (true) {
                        try {
                            J$.Fe(1033, arguments.callee, this, arguments);
                            arguments = J$.N(1041, 'arguments', arguments, 4);
                            size = J$.N(1049, 'size', size, 4);
                            fill = J$.N(1057, 'fill', fill, 4);
                            encoding = J$.N(1065, 'encoding', encoding, 4);
                            J$.N(1073, 'buf', buf, 0);
                            if (J$.X1(1545, J$.C(48, J$.B(34, '!==', J$.U(26, 'typeof', J$.R(777, 'size', size, 0)), J$.T(785, 'number', 21, false), 0)))) {
                                throw J$.X1(825, J$.Th(817, J$.F(809, J$.R(793, 'TypeError', TypeError, 2), 1)(J$.T(801, 'Argument must be a number', 21, false))));
                            }
                            var buf = J$.X1(865, J$.W(857, 'buf', J$.F(849, J$.R(833, 'Buffer', Buffer, 1), 0)(J$.R(841, 'size', size, 0)), buf, 1));
                            if (J$.X1(1561, J$.C(64, J$.B(42, '!==', J$.R(873, 'fill', fill, 0), J$.T(881, undefined, 24, false), 0)))) {
                                if (J$.X1(1553, J$.C(56, J$.B(58, '===', J$.U(50, 'typeof', J$.R(889, 'encoding', encoding, 0)), J$.T(897, 'string', 21, false), 0)))) {
                                    J$.X1(937, J$.M(929, J$.R(905, 'buf', buf, 0), 'fill', 0)(J$.R(913, 'fill', fill, 0), J$.R(921, 'encoding', encoding, 0)));
                                } else {
                                    J$.X1(969, J$.M(961, J$.R(945, 'buf', buf, 0), 'fill', 0)(J$.R(953, 'fill', fill, 0)));
                                }
                            } else {
                                J$.X1(1001, J$.M(993, J$.R(977, 'buf', buf, 0), 'fill', 0)(J$.T(985, 0, 22, false)));
                            }
                            return J$.X1(1025, J$.Rt(1017, J$.R(1009, 'buf', buf, 0)));
                        } catch (J$e) {
                            J$.Ex(1569, J$e);
                        } finally {
                            if (J$.Fr(1577))
                                continue jalangiLabel202;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1033), 0));
            J$.X1(1249, J$.P(1241, J$.R(1105, 'SafeBuffer', SafeBuffer, 1), 'allocUnsafe', J$.T(1233, function (size) {
                jalangiLabel203:
                    while (true) {
                        try {
                            J$.Fe(1209, arguments.callee, this, arguments);
                            arguments = J$.N(1217, 'arguments', arguments, 4);
                            size = J$.N(1225, 'size', size, 4);
                            if (J$.X1(1585, J$.C(72, J$.B(74, '!==', J$.U(66, 'typeof', J$.R(1113, 'size', size, 0)), J$.T(1121, 'number', 21, false), 0)))) {
                                throw J$.X1(1161, J$.Th(1153, J$.F(1145, J$.R(1129, 'TypeError', TypeError, 2), 1)(J$.T(1137, 'Argument must be a number', 21, false))));
                            }
                            return J$.X1(1201, J$.Rt(1193, J$.F(1185, J$.R(1169, 'Buffer', Buffer, 1), 0)(J$.R(1177, 'size', size, 0))));
                        } catch (J$e) {
                            J$.Ex(1593, J$e);
                        } finally {
                            if (J$.Fr(1601))
                                continue jalangiLabel203;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1209), 0));
            J$.X1(1401, J$.P(1393, J$.R(1257, 'SafeBuffer', SafeBuffer, 1), 'allocUnsafeSlow', J$.T(1385, function (size) {
                jalangiLabel204:
                    while (true) {
                        try {
                            J$.Fe(1361, arguments.callee, this, arguments);
                            arguments = J$.N(1369, 'arguments', arguments, 4);
                            size = J$.N(1377, 'size', size, 4);
                            if (J$.X1(1609, J$.C(80, J$.B(90, '!==', J$.U(82, 'typeof', J$.R(1265, 'size', size, 0)), J$.T(1273, 'number', 21, false), 0)))) {
                                throw J$.X1(1313, J$.Th(1305, J$.F(1297, J$.R(1281, 'TypeError', TypeError, 2), 1)(J$.T(1289, 'Argument must be a number', 21, false))));
                            }
                            return J$.X1(1353, J$.Rt(1345, J$.M(1337, J$.R(1321, 'buffer', buffer, 1), 'SlowBuffer', 0)(J$.R(1329, 'size', size, 0))));
                        } catch (J$e) {
                            J$.Ex(1617, J$e);
                        } finally {
                            if (J$.Fr(1625))
                                continue jalangiLabel204;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1361), 0));
        } catch (J$e) {
            J$.Ex(1633, J$e);
        } finally {
            if (J$.Sr(1641)) {
                J$.L();
                continue jalangiLabel205;
            } else {
                J$.L();
                break jalangiLabel205;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
