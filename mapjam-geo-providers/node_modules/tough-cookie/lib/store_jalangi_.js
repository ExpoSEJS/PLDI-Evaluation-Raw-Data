J$.iids = {"9":[1,20,1,27],"17":[1,28,1,32],"25":[1,20,1,33],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,1,5,2],"105":[4,1,5,2],"113":[6,1,6,8],"121":[6,17,6,22],"129":[6,1,6,22],"137":[6,1,6,23],"145":[7,1,7,6],"153":[7,1,7,16],"161":[7,31,7,36],"169":[7,1,7,36],"177":[7,1,7,37],"185":[8,1,8,6],"193":[8,1,8,16],"201":[9,15,9,20],"209":[9,21,9,52],"217":[9,11,9,53],"225":[9,11,9,53],"233":[9,5,9,54],"241":[8,30,10,2],"249":[8,30,10,2],"257":[8,30,10,2],"265":[8,30,10,2],"273":[8,30,10,2],"281":[8,30,10,2],"289":[8,30,10,2],"297":[8,1,10,2],"305":[8,1,10,3],"313":[11,1,11,6],"321":[11,1,11,16],"329":[12,15,12,20],"337":[12,21,12,53],"345":[12,11,12,54],"353":[12,11,12,54],"361":[12,5,12,55],"369":[11,31,13,2],"377":[11,31,13,2],"385":[11,31,13,2],"393":[11,31,13,2],"401":[11,31,13,2],"409":[11,31,13,2],"417":[11,1,13,2],"425":[11,1,13,3],"433":[14,1,14,6],"441":[14,1,14,16],"449":[15,15,15,20],"457":[15,21,15,51],"465":[15,11,15,52],"473":[15,11,15,52],"481":[15,5,15,53],"489":[14,29,16,2],"497":[14,29,16,2],"505":[14,29,16,2],"513":[14,29,16,2],"521":[14,29,16,2],"529":[14,1,16,2],"537":[14,1,16,3],"545":[17,1,17,6],"553":[17,1,17,16],"561":[18,15,18,20],"569":[18,21,18,54],"577":[18,11,18,55],"585":[18,11,18,55],"593":[18,5,18,56],"601":[17,32,19,2],"609":[17,32,19,2],"617":[17,32,19,2],"625":[17,32,19,2],"633":[17,32,19,2],"641":[17,32,19,2],"649":[17,1,19,2],"657":[17,1,19,3],"665":[20,1,20,6],"673":[20,1,20,16],"681":[21,15,21,20],"689":[21,21,21,54],"697":[21,11,21,55],"705":[21,11,21,55],"713":[21,5,21,56],"721":[20,32,22,2],"729":[20,32,22,2],"737":[20,32,22,2],"745":[20,32,22,2],"753":[20,32,22,2],"761":[20,32,22,2],"769":[20,32,22,2],"777":[20,1,22,2],"785":[20,1,22,3],"793":[23,1,23,6],"801":[23,1,23,16],"809":[24,15,24,20],"817":[24,21,24,55],"825":[24,11,24,56],"833":[24,11,24,56],"841":[24,5,24,57],"849":[23,33,25,2],"857":[23,33,25,2],"865":[23,33,25,2],"873":[23,33,25,2],"881":[23,33,25,2],"889":[23,33,25,2],"897":[23,1,25,2],"905":[23,1,25,3],"913":[26,1,26,6],"921":[26,1,26,16],"929":[27,15,27,20],"937":[27,21,27,92],"945":[27,11,27,93],"953":[27,11,27,93],"961":[27,5,27,94],"969":[26,33,28,2],"977":[26,33,28,2],"985":[26,33,28,2],"993":[26,33,28,2],"1001":[26,1,28,2],"1009":[26,1,28,3],"1017":[1,1,28,3],"1025":[1,1,28,3],"1033":[1,1,28,3],"1041":[4,1,5,2],"1049":[1,1,28,3],"1057":[4,1,5,2],"1065":[4,1,5,2],"1073":[8,30,10,2],"1081":[8,30,10,2],"1089":[11,31,13,2],"1097":[11,31,13,2],"1105":[14,29,16,2],"1113":[14,29,16,2],"1121":[17,32,19,2],"1129":[17,32,19,2],"1137":[20,32,22,2],"1145":[20,32,22,2],"1153":[23,33,25,2],"1161":[23,33,25,2],"1169":[26,33,28,2],"1177":[26,33,28,2],"1185":[1,1,28,3],"1193":[1,1,28,3],"nBranches":0,"originalCodeFileName":"/home/blake/ExpoSE/Targets/mapjam-geo-providers/node_modules/tough-cookie/lib/store.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/mapjam-geo-providers/node_modules/tough-cookie/lib/store_jalangi_.js","code":"/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n/*jshint unused:false */\n\nfunction Store() {\n}\nexports.Store = Store;\n\n// Stores may be synchronous, but are still required to use a\n// Continuation-Passing Style API.  The CookieJar itself will expose a \"*Sync\"\n// API that converts from synchronous-callbacks to imperative style.\nStore.prototype.synchronous = false;\n\nStore.prototype.findCookie = function(domain, path, key, cb) {\n  throw new Error('findCookie is not implemented');\n};\n\nStore.prototype.findCookies = function(domain, path, cb) {\n  throw new Error('findCookies is not implemented');\n};\n\nStore.prototype.putCookie = function(cookie, cb) {\n  throw new Error('putCookie is not implemented');\n};\n\nStore.prototype.updateCookie = function(oldCookie, newCookie, cb) {\n  // recommended default implementation:\n  // return this.putCookie(newCookie, cb);\n  throw new Error('updateCookie is not implemented');\n};\n\nStore.prototype.removeCookie = function(domain, path, key, cb) {\n  throw new Error('removeCookie is not implemented');\n};\n\nStore.prototype.removeCookies = function(domain, path, cb) {\n  throw new Error('removeCookies is not implemented');\n};\n\nStore.prototype.getAllCookies = function(cb) {\n  throw new Error('getAllCookies is not implemented (therefore jar cannot be serialized)');\n};\n"};
jalangiLabel162:
    while (true) {
        try {
            J$.Se(1017, '/home/blake/ExpoSE/Targets/mapjam-geo-providers/node_modules/tough-cookie/lib/store_jalangi_.js', '/home/blake/ExpoSE/Targets/mapjam-geo-providers/node_modules/tough-cookie/lib/store.js');
            function Store() {
                jalangiLabel154:
                    while (true) {
                        try {
                            J$.Fe(97, arguments.callee, this, arguments);
                            arguments = J$.N(105, 'arguments', arguments, 4);
                        } catch (J$e) {
                            J$.Ex(1057, J$e);
                        } finally {
                            if (J$.Fr(1065))
                                continue jalangiLabel154;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1025, '__secret__S$', __secret__S$, 0);
            J$.N(1033, '__secret__traits__', __secret__traits__, 0);
            Store = J$.N(1049, 'Store', J$.T(1041, Store, 12, false, 97), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            J$.X1(137, J$.P(129, J$.R(113, 'exports', exports, 2), 'Store', J$.R(121, 'Store', Store, 1), 0));
            J$.X1(177, J$.P(169, J$.G(153, J$.R(145, 'Store', Store, 1), 'prototype', 0), 'synchronous', J$.T(161, false, 23, false), 0));
            J$.X1(305, J$.P(297, J$.G(193, J$.R(185, 'Store', Store, 1), 'prototype', 0), 'findCookie', J$.T(289, function (domain, path, key, cb) {
                jalangiLabel155:
                    while (true) {
                        try {
                            J$.Fe(241, arguments.callee, this, arguments);
                            arguments = J$.N(249, 'arguments', arguments, 4);
                            domain = J$.N(257, 'domain', domain, 4);
                            path = J$.N(265, 'path', path, 4);
                            key = J$.N(273, 'key', key, 4);
                            cb = J$.N(281, 'cb', cb, 4);
                            throw J$.X1(233, J$.Th(225, J$.F(217, J$.R(201, 'Error', Error, 2), 1)(J$.T(209, 'findCookie is not implemented', 21, false))));
                        } catch (J$e) {
                            J$.Ex(1073, J$e);
                        } finally {
                            if (J$.Fr(1081))
                                continue jalangiLabel155;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 241), 0));
            J$.X1(425, J$.P(417, J$.G(321, J$.R(313, 'Store', Store, 1), 'prototype', 0), 'findCookies', J$.T(409, function (domain, path, cb) {
                jalangiLabel156:
                    while (true) {
                        try {
                            J$.Fe(369, arguments.callee, this, arguments);
                            arguments = J$.N(377, 'arguments', arguments, 4);
                            domain = J$.N(385, 'domain', domain, 4);
                            path = J$.N(393, 'path', path, 4);
                            cb = J$.N(401, 'cb', cb, 4);
                            throw J$.X1(361, J$.Th(353, J$.F(345, J$.R(329, 'Error', Error, 2), 1)(J$.T(337, 'findCookies is not implemented', 21, false))));
                        } catch (J$e) {
                            J$.Ex(1089, J$e);
                        } finally {
                            if (J$.Fr(1097))
                                continue jalangiLabel156;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 369), 0));
            J$.X1(537, J$.P(529, J$.G(441, J$.R(433, 'Store', Store, 1), 'prototype', 0), 'putCookie', J$.T(521, function (cookie, cb) {
                jalangiLabel157:
                    while (true) {
                        try {
                            J$.Fe(489, arguments.callee, this, arguments);
                            arguments = J$.N(497, 'arguments', arguments, 4);
                            cookie = J$.N(505, 'cookie', cookie, 4);
                            cb = J$.N(513, 'cb', cb, 4);
                            throw J$.X1(481, J$.Th(473, J$.F(465, J$.R(449, 'Error', Error, 2), 1)(J$.T(457, 'putCookie is not implemented', 21, false))));
                        } catch (J$e) {
                            J$.Ex(1105, J$e);
                        } finally {
                            if (J$.Fr(1113))
                                continue jalangiLabel157;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 489), 0));
            J$.X1(657, J$.P(649, J$.G(553, J$.R(545, 'Store', Store, 1), 'prototype', 0), 'updateCookie', J$.T(641, function (oldCookie, newCookie, cb) {
                jalangiLabel158:
                    while (true) {
                        try {
                            J$.Fe(601, arguments.callee, this, arguments);
                            arguments = J$.N(609, 'arguments', arguments, 4);
                            oldCookie = J$.N(617, 'oldCookie', oldCookie, 4);
                            newCookie = J$.N(625, 'newCookie', newCookie, 4);
                            cb = J$.N(633, 'cb', cb, 4);
                            throw J$.X1(593, J$.Th(585, J$.F(577, J$.R(561, 'Error', Error, 2), 1)(J$.T(569, 'updateCookie is not implemented', 21, false))));
                        } catch (J$e) {
                            J$.Ex(1121, J$e);
                        } finally {
                            if (J$.Fr(1129))
                                continue jalangiLabel158;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 601), 0));
            J$.X1(785, J$.P(777, J$.G(673, J$.R(665, 'Store', Store, 1), 'prototype', 0), 'removeCookie', J$.T(769, function (domain, path, key, cb) {
                jalangiLabel159:
                    while (true) {
                        try {
                            J$.Fe(721, arguments.callee, this, arguments);
                            arguments = J$.N(729, 'arguments', arguments, 4);
                            domain = J$.N(737, 'domain', domain, 4);
                            path = J$.N(745, 'path', path, 4);
                            key = J$.N(753, 'key', key, 4);
                            cb = J$.N(761, 'cb', cb, 4);
                            throw J$.X1(713, J$.Th(705, J$.F(697, J$.R(681, 'Error', Error, 2), 1)(J$.T(689, 'removeCookie is not implemented', 21, false))));
                        } catch (J$e) {
                            J$.Ex(1137, J$e);
                        } finally {
                            if (J$.Fr(1145))
                                continue jalangiLabel159;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 721), 0));
            J$.X1(905, J$.P(897, J$.G(801, J$.R(793, 'Store', Store, 1), 'prototype', 0), 'removeCookies', J$.T(889, function (domain, path, cb) {
                jalangiLabel160:
                    while (true) {
                        try {
                            J$.Fe(849, arguments.callee, this, arguments);
                            arguments = J$.N(857, 'arguments', arguments, 4);
                            domain = J$.N(865, 'domain', domain, 4);
                            path = J$.N(873, 'path', path, 4);
                            cb = J$.N(881, 'cb', cb, 4);
                            throw J$.X1(841, J$.Th(833, J$.F(825, J$.R(809, 'Error', Error, 2), 1)(J$.T(817, 'removeCookies is not implemented', 21, false))));
                        } catch (J$e) {
                            J$.Ex(1153, J$e);
                        } finally {
                            if (J$.Fr(1161))
                                continue jalangiLabel160;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 849), 0));
            J$.X1(1009, J$.P(1001, J$.G(921, J$.R(913, 'Store', Store, 1), 'prototype', 0), 'getAllCookies', J$.T(993, function (cb) {
                jalangiLabel161:
                    while (true) {
                        try {
                            J$.Fe(969, arguments.callee, this, arguments);
                            arguments = J$.N(977, 'arguments', arguments, 4);
                            cb = J$.N(985, 'cb', cb, 4);
                            throw J$.X1(961, J$.Th(953, J$.F(945, J$.R(929, 'Error', Error, 2), 1)(J$.T(937, 'getAllCookies is not implemented (therefore jar cannot be serialized)', 21, false))));
                        } catch (J$e) {
                            J$.Ex(1169, J$e);
                        } finally {
                            if (J$.Fr(1177))
                                continue jalangiLabel161;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 969), 0));
        } catch (J$e) {
            J$.Ex(1185, J$e);
        } finally {
            if (J$.Sr(1193)) {
                J$.L();
                continue jalangiLabel162;
            } else {
                J$.L();
                break jalangiLabel162;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
