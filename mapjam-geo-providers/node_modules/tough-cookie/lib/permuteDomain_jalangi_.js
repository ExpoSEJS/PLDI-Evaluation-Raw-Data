J$.iids = {"8":[7,9,7,16],"9":[1,20,1,27],"10":[7,9,7,16],"16":[10,9,10,25],"17":[1,28,1,32],"18":[10,9,10,25],"24":[17,12,17,24],"25":[1,20,1,33],"26":[13,36,13,53],"33":[1,20,1,33],"34":[13,34,13,54],"41":[1,20,1,33],"42":[18,15,18,34],"49":[2,26,2,38],"50":[18,15,18,40],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,17,4,24],"105":[4,25,4,38],"113":[4,17,4,39],"121":[4,17,4,39],"129":[4,17,4,39],"137":[6,18,6,27],"145":[6,44,6,50],"153":[6,18,6,51],"155":[6,18,6,43],"161":[6,18,6,51],"169":[6,18,6,51],"177":[7,10,7,16],"185":[8,16,8,20],"193":[8,16,8,20],"201":[8,9,8,21],"209":[10,9,10,15],"217":[10,19,10,25],"225":[11,17,11,23],"233":[11,16,11,24],"241":[11,16,11,24],"249":[11,9,11,25],"257":[13,18,13,24],"265":[13,31,13,32],"273":[13,36,13,42],"281":[13,36,13,49],"289":[13,52,13,53],"297":[13,18,13,55],"299":[13,18,13,30],"305":[13,18,13,55],"313":[13,18,13,55],"321":[14,17,14,23],"329":[14,30,14,33],"337":[14,17,14,34],"339":[14,17,14,29],"345":[14,17,14,44],"347":[14,17,14,42],"353":[14,17,14,44],"361":[14,17,14,44],"369":[15,15,15,21],"377":[15,15,15,21],"385":[15,15,15,21],"393":[16,25,16,28],"401":[16,24,16,29],"409":[16,24,16,29],"417":[16,24,16,29],"425":[17,12,17,17],"433":[17,12,17,24],"441":[18,15,18,20],"449":[18,15,18,28],"451":[18,15,18,26],"457":[18,31,18,34],"465":[18,37,18,40],"473":[18,15,18,40],"481":[18,9,18,41],"489":[19,9,19,21],"497":[19,27,19,30],"505":[19,9,19,31],"507":[19,9,19,26],"513":[19,9,19,32],"521":[21,12,21,24],"529":[21,12,21,24],"537":[21,5,21,25],"545":[5,1,22,2],"553":[5,1,22,2],"561":[5,1,22,2],"569":[5,1,22,2],"577":[5,1,22,2],"585":[5,1,22,2],"593":[5,1,22,2],"601":[5,1,22,2],"609":[23,1,23,8],"617":[23,25,23,38],"625":[23,1,23,38],"633":[23,1,23,39],"641":[1,1,23,39],"649":[1,1,23,39],"657":[1,1,23,39],"665":[1,1,23,39],"673":[5,1,22,2],"681":[1,1,23,39],"689":[7,5,9,6],"697":[10,5,12,6],"705":[17,5,20,6],"713":[5,1,22,2],"721":[5,1,22,2],"729":[1,1,23,39],"737":[1,1,23,39],"nBranches":6,"originalCodeFileName":"/home/blake/ExpoSE/Targets/mapjam-geo-providers/node_modules/tough-cookie/lib/permuteDomain.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/mapjam-geo-providers/node_modules/tough-cookie/lib/permuteDomain_jalangi_.js","code":"/*!\n * Copyright (c) 2015, Salesforce.com, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of Salesforce.com nor the names of its contributors may\n * be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\"use strict\";\nvar pubsuffix = require('./pubsuffix');\n\n// Gives the permutation of all possible domainMatch()es of a given domain. The\n// array is in shortest-to-longest order.  Handy for indexing.\nfunction permuteDomain (domain) {\n  var pubSuf = pubsuffix.getPublicSuffix(domain);\n  if (!pubSuf) {\n    return null;\n  }\n  if (pubSuf == domain) {\n    return [domain];\n  }\n\n  var prefix = domain.slice(0, -(pubSuf.length + 1)); // \".example.com\"\n  var parts = prefix.split('.').reverse();\n  var cur = pubSuf;\n  var permutations = [cur];\n  while (parts.length) {\n    cur = parts.shift() + '.' + cur;\n    permutations.push(cur);\n  }\n  return permutations;\n}\n\nexports.permuteDomain = permuteDomain;\n"};
jalangiLabel182:
    while (true) {
        try {
            J$.Se(641, '/home/blake/ExpoSE/Targets/mapjam-geo-providers/node_modules/tough-cookie/lib/permuteDomain_jalangi_.js', '/home/blake/ExpoSE/Targets/mapjam-geo-providers/node_modules/tough-cookie/lib/permuteDomain.js');
            function permuteDomain(domain) {
                jalangiLabel181:
                    while (true) {
                        try {
                            J$.Fe(545, arguments.callee, this, arguments);
                            arguments = J$.N(553, 'arguments', arguments, 4);
                            domain = J$.N(561, 'domain', domain, 4);
                            J$.N(569, 'pubSuf', pubSuf, 0);
                            J$.N(577, 'prefix', prefix, 0);
                            J$.N(585, 'parts', parts, 0);
                            J$.N(593, 'cur', cur, 0);
                            J$.N(601, 'permutations', permutations, 0);
                            var pubSuf = J$.X1(169, J$.W(161, 'pubSuf', J$.M(153, J$.R(137, 'pubsuffix', pubsuffix, 1), 'getPublicSuffix', 0)(J$.R(145, 'domain', domain, 0)), pubSuf, 1));
                            if (J$.X1(689, J$.C(8, J$.U(10, '!', J$.R(177, 'pubSuf', pubSuf, 0))))) {
                                return J$.X1(201, J$.Rt(193, J$.T(185, null, 25, false)));
                            }
                            if (J$.X1(697, J$.C(16, J$.B(18, '==', J$.R(209, 'pubSuf', pubSuf, 0), J$.R(217, 'domain', domain, 0), 0)))) {
                                return J$.X1(249, J$.Rt(241, J$.T(233, [J$.R(225, 'domain', domain, 0)], 10, false)));
                            }
                            var prefix = J$.X1(313, J$.W(305, 'prefix', J$.M(297, J$.R(257, 'domain', domain, 0), 'slice', 0)(J$.T(265, 0, 22, false), J$.U(34, '-', J$.B(26, '+', J$.G(281, J$.R(273, 'pubSuf', pubSuf, 0), 'length', 0), J$.T(289, 1, 22, false), 0))), prefix, 1));
                            var parts = J$.X1(361, J$.W(353, 'parts', J$.M(345, J$.M(337, J$.R(321, 'prefix', prefix, 0), 'split', 0)(J$.T(329, '.', 21, false)), 'reverse', 0)(), parts, 1));
                            var cur = J$.X1(385, J$.W(377, 'cur', J$.R(369, 'pubSuf', pubSuf, 0), cur, 1));
                            var permutations = J$.X1(417, J$.W(409, 'permutations', J$.T(401, [J$.R(393, 'cur', cur, 0)], 10, false), permutations, 1));
                            while (J$.X1(705, J$.C(24, J$.G(433, J$.R(425, 'parts', parts, 0), 'length', 0)))) {
                                J$.X1(481, cur = J$.W(473, 'cur', J$.B(50, '+', J$.B(42, '+', J$.M(449, J$.R(441, 'parts', parts, 0), 'shift', 0)(), J$.T(457, '.', 21, false), 0), J$.R(465, 'cur', cur, 0), 0), cur, 0));
                                J$.X1(513, J$.M(505, J$.R(489, 'permutations', permutations, 0), 'push', 0)(J$.R(497, 'cur', cur, 0)));
                            }
                            return J$.X1(537, J$.Rt(529, J$.R(521, 'permutations', permutations, 0)));
                        } catch (J$e) {
                            J$.Ex(713, J$e);
                        } finally {
                            if (J$.Fr(721))
                                continue jalangiLabel181;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(649, '__secret__S$', __secret__S$, 0);
            J$.N(657, '__secret__traits__', __secret__traits__, 0);
            J$.N(665, 'pubsuffix', pubsuffix, 0);
            permuteDomain = J$.N(681, 'permuteDomain', J$.T(673, permuteDomain, 12, false, 545), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var pubsuffix = J$.X1(129, J$.W(121, 'pubsuffix', J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, './pubsuffix', 21, false)), pubsuffix, 3));
            J$.X1(633, J$.P(625, J$.R(609, 'exports', exports, 2), 'permuteDomain', J$.R(617, 'permuteDomain', permuteDomain, 1), 0));
        } catch (J$e) {
            J$.Ex(729, J$e);
        } finally {
            if (J$.Sr(737)) {
                J$.L();
                continue jalangiLabel182;
            } else {
                J$.L();
                break jalangiLabel182;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
