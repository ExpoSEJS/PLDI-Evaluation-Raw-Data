import React, { Component, PropTypes } from 'react'
import classNames from 'classnames'

export default class Menu extends Component {
    static propTypes = {
        children: PropTypes.node,
        vertical: PropTypes.bool,
        inverted: PropTypes.bool,
        className: PropTypes.string,
    }

    static contextTypes = {
        isSubMenu: PropTypes.bool,
    }

    static childContextTypes = {
        isSubMenu: PropTypes.bool,
    }

    getChildContext() {
        return {isSubMenu: true}
    }

    render() {
        var {vertical, inverted, children, className} = this.props

        className = classNames({
            ui: !this.context.isSubMenu,
            vertical: vertical,
            inverted: inverted,
        }, className, 'menu')

        return (
            <div className={className}>
                {children}
            </div>
        )
    }
}

export const Item = ({active, children, href, className}) => {
    className = classNames({
        active: active,
    }, className, 'item')

    var type = href ? 'a' : 'div'

    return React.createElement(
        type,
        {
            className: className,
            href: href,
        },
        children
    )
}

Item.propTypes = {
    active: PropTypes.bool,
    href: PropTypes.string,
    children: PropTypes.node,
    className: PropTypes.string,
}

export const Header = ({children, className}) => {
    className = classNames(className, 'header')
    return <div className={className}>{children}</div>
}

Header.propTypes = {
    children: PropTypes.node,
    className: PropTypes.string,
}