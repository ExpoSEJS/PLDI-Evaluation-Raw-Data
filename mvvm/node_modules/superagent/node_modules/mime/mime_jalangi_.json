{"8":[10,29,10,44],"9":[1,20,1,27],"10":[10,29,10,44],"16":[13,17,13,39],"17":[1,28,1,32],"18":[10,46,10,49],"24":[28,16,28,43],"25":[1,20,1,33],"32":[28,16,28,64],"33":[1,20,1,33],"34":[10,46,10,49],"40":[35,20,35,44],"41":[1,20,1,33],"42":[13,17,13,39],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,12,3,19],"89":[3,20,3,26],"97":[3,12,3,27],"105":[3,34,3,41],"113":[3,42,3,46],"121":[3,34,3,47],"129":[3,12,3,27],"137":[3,12,3,27],"145":[3,34,3,47],"153":[3,34,3,47],"161":[4,12,4,18],"169":[5,12,5,18],"177":[5,26,5,30],"185":[5,12,5,31],"187":[5,12,5,25],"193":[6,17,6,23],"201":[6,31,6,35],"209":[6,17,6,36],"211":[6,17,6,30],"217":[8,26,8,29],"225":[9,24,9,27],"233":[9,28,9,32],"241":[9,24,9,33],"249":[9,24,9,33],"257":[9,24,9,33],"265":[10,26,10,27],"273":[10,26,10,27],"281":[10,26,10,27],"289":[10,29,10,30],"297":[10,33,10,37],"305":[10,33,10,44],"321":[10,46,10,47],"329":[10,46,10,49],"345":[11,17,11,21],"353":[11,17,11,27],"361":[11,28,11,32],"369":[11,33,11,34],"377":[11,28,11,35],"385":[11,39,11,43],"393":[11,17,11,43],"401":[11,17,11,44],"409":[13,18,13,22],"417":[13,18,13,33],"425":[13,34,13,38],"433":[13,18,13,39],"441":[14,17,14,21],"449":[14,17,14,32],"457":[14,33,14,37],"465":[14,41,14,45],"473":[14,46,14,47],"481":[14,41,14,48],"489":[14,17,14,48],"497":[14,17,14,49],"505":[8,26,8,29],"513":[8,9,16,10],"521":[8,9,16,10],"529":[7,13,17,6],"537":[7,13,17,6],"545":[7,13,17,6],"553":[7,13,17,6],"561":[7,13,17,6],"569":[7,13,17,6],"577":[7,13,17,6],"585":[19,19,19,21],"593":[19,33,19,35],"601":[19,49,19,53],"609":[19,55,19,62],"617":[19,33,19,63],"619":[19,33,19,48],"625":[19,73,19,80],"633":[19,87,19,96],"641":[19,73,19,97],"643":[19,73,19,86],"649":[19,19,19,21],"657":[19,19,19,21],"665":[19,33,19,63],"673":[19,33,19,63],"681":[19,73,19,97],"689":[19,73,19,97],"697":[20,9,20,14],"705":[21,26,21,30],"713":[21,39,21,58],"721":[21,60,21,62],"729":[21,26,21,63],"731":[21,26,21,38],"737":[21,70,21,75],"745":[21,26,21,76],"747":[21,26,21,69],"753":[21,26,21,76],"761":[21,26,21,76],"769":[22,13,22,16],"777":[22,17,22,23],"785":[22,17,22,31],"787":[22,17,22,29],"793":[22,35,22,41],"801":[22,13,22,41],"809":[22,13,22,42],"817":[20,23,23,10],"825":[20,23,23,10],"833":[20,23,23,10],"841":[20,23,23,10],"849":[20,23,23,10],"857":[20,23,23,10],"865":[20,9,23,11],"867":[20,9,20,22],"873":[20,9,23,12],"881":[24,9,24,13],"889":[24,21,24,24],"897":[24,9,24,25],"899":[24,9,24,20],"905":[24,9,24,26],"913":[18,11,25,6],"921":[18,11,25,6],"929":[18,11,25,6],"937":[18,11,25,6],"945":[18,11,25,6],"953":[18,11,25,6],"961":[18,11,25,6],"969":[27,19,27,23],"977":[27,32,27,42],"985":[27,44,27,46],"993":[27,19,27,47],"995":[27,19,27,31],"1001":[27,19,27,61],"1003":[27,19,27,59],"1009":[27,19,27,61],"1017":[27,19,27,61],"1025":[28,16,28,20],"1033":[28,16,28,26],"1041":[28,27,28,30],"1049":[28,16,28,31],"1057":[28,35,28,43],"1065":[28,47,28,51],"1073":[28,47,28,64],"1081":[28,16,28,64],"1089":[28,9,28,65],"1097":[26,13,29,6],"1105":[26,13,29,6],"1113":[26,13,29,6],"1121":[26,13,29,6],"1129":[26,13,29,6],"1137":[26,13,29,6],"1145":[31,16,31,20],"1153":[31,16,31,31],"1161":[31,32,31,40],"1169":[31,16,31,41],"1177":[31,16,31,41],"1185":[31,9,31,42],"1193":[30,16,32,6],"1201":[30,16,32,6],"1209":[30,16,32,6],"1217":[30,16,32,6],"1225":[35,20,35,29],"1233":[35,35,35,43],"1241":[35,20,35,44],"1243":[35,20,35,34],"1249":[35,47,35,54],"1257":[35,57,35,65],"1265":[35,20,35,65],"1273":[35,13,35,66],"1281":[34,17,36,10],"1289":[34,17,36,10],"1297":[34,17,36,10],"1305":[34,17,36,10],"1313":[34,17,36,10],"1321":[33,15,37,6],"1329":[4,29,38,2],"1337":[4,12,38,2],"1345":[4,12,38,2],"1353":[4,12,38,2],"1361":[39,1,39,5],"1369":[39,11,39,15],"1377":[39,21,39,30],"1385":[39,32,39,50],"1393":[39,11,39,51],"1395":[39,11,39,20],"1401":[39,1,39,52],"1403":[39,1,39,10],"1409":[39,1,39,53],"1417":[40,1,40,5],"1425":[40,11,40,15],"1433":[40,21,40,30],"1441":[40,32,40,50],"1449":[40,11,40,51],"1451":[40,11,40,20],"1457":[40,1,40,52],"1459":[40,1,40,10],"1465":[40,1,40,53],"1473":[41,1,41,5],"1481":[41,21,41,25],"1489":[41,21,41,31],"1497":[41,21,41,35],"1505":[41,1,41,35],"1513":[41,1,41,36],"1521":[1,1,41,36],"1529":[1,1,41,36],"1537":[1,1,41,36],"1545":[1,1,41,36],"1553":[1,1,41,36],"1561":[1,1,41,36],"1569":[10,13,12,14],"1577":[10,13,12,14],"1585":[13,13,15,14],"1593":[7,13,17,6],"1601":[7,13,17,6],"1609":[20,23,23,10],"1617":[20,23,23,10],"1625":[18,11,25,6],"1633":[18,11,25,6],"1641":[26,13,29,6],"1649":[26,13,29,6],"1657":[30,16,32,6],"1665":[30,16,32,6],"1673":[35,20,35,65],"1681":[34,17,36,10],"1689":[34,17,36,10],"1697":[1,1,41,36],"1705":[1,1,41,36],"nBranches":10,"originalCodeFileName":"/home/blake/ExpoSE/Targets/mvvm/node_modules/superagent/node_modules/mime/mime.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/mvvm/node_modules/superagent/node_modules/mime/mime_jalangi_.js","code":"var path = require('path'),\n    fs = require('fs');\n\nvar mime = module.exports = {\n  // Map of extension to mime type\n  types: Object.create(null),\n\n  // Map of mime type to extension\n  extensions :Object.create(null),\n\n  /**\n   * Define mimetype -> extension mappings.  Each key is a mime-type that maps\n   * to an array of extensions associated with the type.  The first extension is\n   * used as the default extension for the type.\n   *\n   * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});\n   *\n   * @param map (Object) type definitions\n   */\n  define: function(map) {\n    for (var type in map) {\n      var exts = map[type];\n\n      for (var i = 0; i < exts.length; i++) {\n        mime.types[exts[i]] = type;\n      }\n\n      // Default extension is the first one we encounter\n      if (!mime.extensions[type]) {\n        mime.extensions[type] = exts[0];\n      }\n    }\n  },\n\n  /**\n   * Load an Apache2-style \".types\" file\n   *\n   * This may be called multiple times (it's expected).  Where files declare\n   * overlapping types/extensions, the last file wins.\n   *\n   * @param file (String) path of file to load.\n   */\n  load: function(file) {\n    // Read file and split into lines\n    var map = {},\n        content = fs.readFileSync(file, 'ascii'),\n        lines = content.split(/[\\r\\n]+/);\n\n    lines.forEach(function(line, lineno) {\n      // Clean up whitespace/comments, and split into fields\n      var fields = line.replace(/\\s*#.*|^\\s*|\\s*$/g, '').split(/\\s+/);\n      map[fields.shift()] = fields;\n    });\n\n    mime.define(map);\n  },\n\n  /**\n   * Lookup a mime type based on extension\n   */\n  lookup: function(path, fallback) {\n    var ext = path.replace(/.*[\\.\\/]/, '').toLowerCase();\n\n    return mime.types[ext] || fallback || mime.default_type\n  },\n\n  /**\n   * Return file extension associated with a mime type\n   */\n  extension: function(mimeType) {\n    return mime.extensions[mimeType];\n  },\n\n  /**\n   * Lookup a charset based on mime type.\n   */\n  charsets: {\n    lookup: function (mimeType, fallback) {\n      // Assume text types are utf8.  Modify mime logic as needed.\n      return (/^text\\//).test(mimeType) ? 'UTF-8' : fallback;\n    }\n  }\n};\n\n// Load our local copy of\n// http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types\nmime.load(path.join(__dirname, 'types/mime.types'));\n\n// Overlay enhancements submitted by the node.js community\nmime.load(path.join(__dirname, 'types/node.types'));\n\n// Set the default type\nmime.default_type = mime.types.bin;\n"}