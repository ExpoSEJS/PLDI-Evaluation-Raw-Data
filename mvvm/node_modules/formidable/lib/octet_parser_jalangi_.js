J$.iids = {"8":[5,9,5,39],"9":[1,20,1,27],"10":[5,11,5,38],"17":[1,28,1,32],"18":[5,9,5,39],"25":[1,20,1,33],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,20,3,27],"89":[3,28,3,36],"97":[3,20,3,37],"105":[3,20,3,50],"113":[3,59,3,66],"121":[3,67,3,73],"129":[3,59,3,74],"137":[3,20,3,50],"145":[3,20,3,50],"153":[3,59,3,74],"161":[3,59,3,74],"169":[5,11,5,15],"177":[5,27,5,38],"185":[6,20,6,31],"193":[6,32,6,39],"201":[6,16,6,40],"209":[6,16,6,40],"217":[6,9,6,41],"225":[7,5,7,17],"233":[7,23,7,27],"241":[7,5,7,28],"243":[7,5,7,22],"249":[7,5,7,29],"257":[4,1,8,2],"265":[4,1,8,2],"273":[4,1,8,2],"281":[9,1,9,5],"289":[9,15,9,26],"297":[9,28,9,40],"305":[9,1,9,41],"307":[9,1,9,14],"313":[9,1,9,42],"321":[10,1,10,8],"329":[10,23,10,34],"337":[10,1,10,34],"345":[10,1,10,35],"353":[11,1,11,12],"361":[11,1,11,22],"369":[12,5,12,9],"377":[12,15,12,21],"385":[12,23,12,29],"393":[12,5,12,30],"395":[12,5,12,14],"401":[12,5,12,31],"409":[13,12,13,18],"417":[13,12,13,25],"425":[13,12,13,25],"433":[13,5,13,26],"441":[11,31,14,2],"449":[11,31,14,2],"457":[11,31,14,2],"465":[11,31,14,2],"473":[11,1,14,2],"481":[11,1,14,3],"489":[15,1,15,12],"497":[15,1,15,22],"505":[16,5,16,9],"513":[16,15,16,20],"521":[16,5,16,21],"523":[16,5,16,14],"529":[16,5,16,22],"537":[15,29,17,2],"545":[15,29,17,2],"553":[15,29,17,2],"561":[15,1,17,2],"569":[15,1,17,3],"577":[1,1,17,3],"585":[1,1,17,3],"593":[1,1,17,3],"601":[1,1,17,3],"609":[1,1,17,3],"617":[4,1,8,2],"625":[1,1,17,3],"633":[5,5,6,41],"641":[4,1,8,2],"649":[4,1,8,2],"657":[11,31,14,2],"665":[11,31,14,2],"673":[15,29,17,2],"681":[15,29,17,2],"689":[1,1,17,3],"697":[1,1,17,3],"nBranches":2,"originalCodeFileName":"/home/blake/ExpoSE/Targets/mvvm/node_modules/formidable/lib/octet_parser.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/mvvm/node_modules/formidable/lib/octet_parser_jalangi_.js","code":"var EventEmitter = require('events').EventEmitter\n\t, util = require('util');\n\nfunction OctetParser(options){\n\tif(!(this instanceof OctetParser)) return new OctetParser(options);\n\tEventEmitter.call(this);\n}\n\nutil.inherits(OctetParser, EventEmitter);\n\nexports.OctetParser = OctetParser;\n\nOctetParser.prototype.write = function(buffer) {\n    this.emit('data', buffer);\n\treturn buffer.length;\n};\n\nOctetParser.prototype.end = function() {\n\tthis.emit('end');\n};\n"};
jalangiLabel257:
    while (true) {
        try {
            J$.Se(577, '/home/blake/ExpoSE/Targets/mvvm/node_modules/formidable/lib/octet_parser_jalangi_.js', '/home/blake/ExpoSE/Targets/mvvm/node_modules/formidable/lib/octet_parser.js');
            function OctetParser(options) {
                jalangiLabel254:
                    while (true) {
                        try {
                            J$.Fe(257, arguments.callee, this, arguments);
                            arguments = J$.N(265, 'arguments', arguments, 4);
                            options = J$.N(273, 'options', options, 4);
                            if (J$.X1(633, J$.C(8, J$.U(18, '!', J$.B(10, 'instanceof', J$.R(169, 'this', this, 0), J$.R(177, 'OctetParser', OctetParser, 1), 0)))))
                                return J$.X1(217, J$.Rt(209, J$.F(201, J$.R(185, 'OctetParser', OctetParser, 1), 1)(J$.R(193, 'options', options, 0))));
                            J$.X1(249, J$.M(241, J$.R(225, 'EventEmitter', EventEmitter, 1), 'call', 0)(J$.R(233, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(641, J$e);
                        } finally {
                            if (J$.Fr(649))
                                continue jalangiLabel254;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(585, '__secret__S$', __secret__S$, 0);
            J$.N(593, '__secret__traits__', __secret__traits__, 0);
            J$.N(601, 'EventEmitter', EventEmitter, 0);
            J$.N(609, 'util', util, 0);
            OctetParser = J$.N(625, 'OctetParser', J$.T(617, OctetParser, 12, false, 257), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var EventEmitter = J$.X1(145, J$.W(137, 'EventEmitter', J$.G(105, J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, 'events', 21, false)), 'EventEmitter', 0), EventEmitter, 3)), util = J$.X1(161, J$.W(153, 'util', J$.F(129, J$.R(113, 'require', require, 2), 0)(J$.T(121, 'util', 21, false)), util, 3));
            J$.X1(313, J$.M(305, J$.R(281, 'util', util, 1), 'inherits', 0)(J$.R(289, 'OctetParser', OctetParser, 1), J$.R(297, 'EventEmitter', EventEmitter, 1)));
            J$.X1(345, J$.P(337, J$.R(321, 'exports', exports, 2), 'OctetParser', J$.R(329, 'OctetParser', OctetParser, 1), 0));
            J$.X1(481, J$.P(473, J$.G(361, J$.R(353, 'OctetParser', OctetParser, 1), 'prototype', 0), 'write', J$.T(465, function (buffer) {
                jalangiLabel255:
                    while (true) {
                        try {
                            J$.Fe(441, arguments.callee, this, arguments);
                            arguments = J$.N(449, 'arguments', arguments, 4);
                            buffer = J$.N(457, 'buffer', buffer, 4);
                            J$.X1(401, J$.M(393, J$.R(369, 'this', this, 0), 'emit', 0)(J$.T(377, 'data', 21, false), J$.R(385, 'buffer', buffer, 0)));
                            return J$.X1(433, J$.Rt(425, J$.G(417, J$.R(409, 'buffer', buffer, 0), 'length', 0)));
                        } catch (J$e) {
                            J$.Ex(657, J$e);
                        } finally {
                            if (J$.Fr(665))
                                continue jalangiLabel255;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 441), 0));
            J$.X1(569, J$.P(561, J$.G(497, J$.R(489, 'OctetParser', OctetParser, 1), 'prototype', 0), 'end', J$.T(553, function () {
                jalangiLabel256:
                    while (true) {
                        try {
                            J$.Fe(537, arguments.callee, this, arguments);
                            arguments = J$.N(545, 'arguments', arguments, 4);
                            J$.X1(529, J$.M(521, J$.R(505, 'this', this, 0), 'emit', 0)(J$.T(513, 'end', 21, false)));
                        } catch (J$e) {
                            J$.Ex(673, J$e);
                        } finally {
                            if (J$.Fr(681))
                                continue jalangiLabel256;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 537), 0));
        } catch (J$e) {
            J$.Ex(689, J$e);
        } finally {
            if (J$.Sr(697)) {
                J$.L();
                continue jalangiLabel257;
            } else {
                J$.L();
                break jalangiLabel257;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
