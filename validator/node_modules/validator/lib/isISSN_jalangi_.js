J$.iids = {"8":[9,12,9,33],"9":[1,20,1,27],"10":[13,19,13,39],"16":[9,12,9,33],"17":[1,28,1,32],"18":[13,43,13,69],"24":[13,19,13,69],"25":[1,20,1,33],"26":[18,9,18,28],"32":[13,19,13,69],"33":[1,20,1,33],"34":[28,68,28,130],"40":[16,16,16,38],"41":[1,20,1,33],"42":[30,30,30,57],"48":[17,16,17,38],"49":[2,26,2,38],"50":[30,65,30,71],"56":[18,9,18,28],"57":[2,26,2,45],"58":[31,25,31,46],"64":[30,30,30,57],"65":[2,26,2,45],"66":[31,25,31,46],"72":[28,68,28,130],"73":[2,26,2,45],"74":[32,13,32,23],"80":[39,17,39,63],"81":[3,1,3,13],"88":[39,17,39,63],"89":[3,1,3,14],"90":[39,17,39,43],"96":[43,17,43,34],"97":[4,1,4,7],"98":[48,12,48,25],"105":[4,23,4,30],"106":[48,12,48,31],"113":[4,32,4,44],"121":[4,55,4,59],"129":[4,46,4,61],"137":[4,1,4,62],"139":[4,1,4,22],"145":[4,1,4,63],"153":[5,1,5,8],"161":[5,19,5,25],"169":[5,1,5,25],"177":[5,1,5,26],"185":[6,21,6,28],"193":[6,29,6,50],"201":[6,21,6,51],"209":[6,21,6,51],"217":[6,21,6,51],"225":[7,22,7,44],"233":[7,45,7,58],"241":[7,22,7,59],"249":[7,22,7,59],"257":[7,22,7,59],"265":[9,12,9,15],"273":[9,19,9,22],"281":[9,19,9,33],"289":[9,36,9,39],"297":[9,53,9,56],"305":[9,42,9,58],"313":[9,12,9,58],"321":[9,5,9,59],"329":[8,1,10,2],"337":[8,1,10,2],"345":[8,1,10,2],"353":[11,12,11,36],"361":[11,12,11,36],"369":[11,12,11,36],"377":[13,19,13,28],"385":[13,19,13,35],"393":[13,38,13,39],"401":[13,43,13,52],"409":[13,53,13,54],"417":[13,43,13,55],"425":[13,60,13,69],"433":[13,72,13,81],"441":[13,82,13,83],"449":[13,72,13,84],"457":[13,87,13,89],"465":[13,19,13,89],"473":[13,19,13,89],"481":[14,6,14,7],"489":[14,9,14,23],"497":[14,9,14,31],"505":[14,6,14,7],"513":[14,33,14,36],"521":[14,5,14,37],"529":[14,5,14,38],"537":[15,20,15,24],"545":[15,20,15,24],"553":[15,20,15,24],"561":[16,16,16,23],"569":[16,16,16,38],"577":[16,41,16,49],"585":[16,58,16,61],"593":[16,63,16,65],"601":[16,41,16,66],"603":[16,41,16,57],"609":[16,69,16,77],"617":[16,16,16,77],"625":[16,5,16,78],"633":[17,16,17,23],"641":[17,16,17,38],"649":[17,45,17,51],"657":[17,52,17,60],"665":[17,41,17,61],"673":[17,68,17,74],"681":[17,75,17,83],"689":[17,85,17,88],"697":[17,64,17,89],"705":[17,16,17,89],"713":[17,5,17,90],"721":[18,10,18,18],"729":[18,24,18,27],"737":[18,10,18,28],"739":[18,10,18,23],"745":[19,16,19,21],"753":[19,16,19,21],"761":[19,9,19,22],"769":[21,22,21,25],"777":[21,34,21,37],"785":[21,39,21,41],"793":[21,22,21,42],"795":[21,22,21,33],"801":[21,22,21,42],"809":[21,22,21,42],"817":[22,20,22,21],"825":[22,20,22,21],"833":[22,20,22,21],"841":[23,20,23,21],"849":[23,20,23,21],"857":[23,20,23,21],"865":[24,37,24,41],"873":[24,37,24,41],"881":[24,37,24,41],"889":[25,29,25,34],"897":[25,29,25,34],"905":[25,29,25,34],"913":[26,26,26,35],"921":[26,26,26,35],"929":[26,26,26,35],"937":[28,30,28,40],"945":[28,41,28,47],"953":[28,41,28,56],"961":[28,30,28,59],"963":[28,30,28,57],"969":[28,30,28,59],"977":[28,30,28,59],"985":[28,107,28,116],"993":[28,107,28,123],"995":[28,107,28,121],"1001":[28,107,28,123],"1009":[28,98,28,129],"1017":[28,98,28,129],"1025":[28,160,28,164],"1033":[28,160,28,164],"1041":[29,25,29,30],"1049":[29,25,29,36],"1057":[29,25,29,36],"1065":[29,25,29,36],"1073":[30,30,30,35],"1081":[30,30,30,49],"1083":[30,30,30,47],"1089":[30,54,30,57],"1097":[30,60,30,62],"1105":[30,66,30,71],"1113":[30,30,30,71],"1121":[30,30,30,71],"1129":[31,25,31,35],"1137":[31,38,31,46],"1145":[31,13,31,21],"1153":[31,13,31,46],"1161":[31,13,31,47],"1177":[32,15,32,23],"1185":[32,13,32,23],"1193":[32,13,32,24],"1201":[35,29,35,33],"1209":[35,29,35,33],"1217":[35,9,35,34],"1225":[36,26,36,29],"1233":[36,26,36,29],"1241":[36,9,36,30],"1249":[34,7,37,6],"1257":[39,18,39,43],"1265":[39,47,39,56],"1273":[39,47,39,63],"1281":[40,17,40,26],"1289":[40,17,40,35],"1291":[40,17,40,33],"1297":[40,17,40,36],"1305":[43,17,43,34],"1313":[44,23,44,37],"1321":[44,23,44,37],"1329":[44,17,44,38],"1337":[48,12,48,20],"1345":[48,23,48,25],"1353":[48,30,48,31],"1361":[48,12,48,31],"1369":[48,5,48,32],"1377":[12,1,49,2],"1385":[12,1,49,2],"1393":[12,1,49,2],"1401":[12,1,49,2],"1409":[12,1,49,2],"1417":[12,1,49,2],"1425":[12,1,49,2],"1433":[12,1,49,2],"1441":[12,1,49,2],"1449":[12,1,49,2],"1457":[12,1,49,2],"1465":[12,1,49,2],"1473":[12,1,49,2],"1481":[12,1,49,2],"1489":[12,1,49,2],"1497":[50,1,50,7],"1505":[50,18,50,25],"1513":[50,26,50,35],"1521":[50,18,50,36],"1529":[50,1,50,36],"1537":[50,1,50,37],"1545":[1,1,50,37],"1553":[1,1,50,37],"1561":[1,1,50,37],"1569":[1,1,50,37],"1577":[1,1,50,37],"1585":[8,1,10,2],"1593":[1,1,50,37],"1601":[1,1,50,37],"1609":[12,1,49,2],"1617":[1,1,50,37],"1625":[9,12,9,58],"1633":[8,1,10,2],"1641":[8,1,10,2],"1649":[13,19,13,89],"1657":[16,16,16,77],"1665":[17,16,17,89],"1673":[18,5,20,6],"1681":[30,30,30,71],"1689":[28,9,33,10],"1697":[28,9,33,10],"1705":[39,13,41,14],"1713":[43,13,45,14],"1721":[12,1,49,2],"1729":[12,1,49,2],"1737":[1,1,50,37],"1745":[1,1,50,37],"nBranches":24,"originalCodeFileName":"/home/blake/ExpoSE/Targets/validator/node_modules/validator/lib/isISSN.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/validator/node_modules/validator/lib/isISSN_jalangi_.js","code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISSN;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar issn = '^\\\\d{4}-?\\\\d{3}[\\\\dX]$';\n\nfunction isISSN(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  (0, _assertString2.default)(str);\n  var testIssn = issn;\n  testIssn = options.require_hyphen ? testIssn.replace('?', '') : testIssn;\n  testIssn = options.case_sensitive ? new RegExp(testIssn) : new RegExp(testIssn, 'i');\n  if (!testIssn.test(str)) {\n    return false;\n  }\n  var issnDigits = str.replace('-', '');\n  var position = 8;\n  var checksum = 0;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = issnDigits[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var digit = _step.value;\n\n      var digitValue = digit.toUpperCase() === 'X' ? 10 : +digit;\n      checksum += digitValue * position;\n      --position;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return checksum % 11 === 0;\n}\nmodule.exports = exports['default'];"};
jalangiLabel195:
    while (true) {
        try {
            J$.Se(1545, '/home/blake/ExpoSE/Targets/validator/node_modules/validator/lib/isISSN_jalangi_.js', '/home/blake/ExpoSE/Targets/validator/node_modules/validator/lib/isISSN.js');
            function _interopRequireDefault(obj) {
                jalangiLabel193:
                    while (true) {
                        try {
                            J$.Fe(329, arguments.callee, this, arguments);
                            arguments = J$.N(337, 'arguments', arguments, 4);
                            obj = J$.N(345, 'obj', obj, 4);
                            return J$.X1(321, J$.Rt(313, J$.X1(1625, J$.C(16, J$.C(8, J$.R(265, 'obj', obj, 0)) ? J$.G(281, J$.R(273, 'obj', obj, 0), '__esModule', 0) : J$._())) ? J$.R(289, 'obj', obj, 0) : J$.T(305, {
                                default: J$.R(297, 'obj', obj, 0)
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(1633, J$e);
                        } finally {
                            if (J$.Fr(1641))
                                continue jalangiLabel193;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function isISSN(str) {
                jalangiLabel194:
                    while (true) {
                        try {
                            J$.Fe(1377, arguments.callee, this, arguments);
                            arguments = J$.N(1385, 'arguments', arguments, 4);
                            str = J$.N(1393, 'str', str, 4);
                            J$.N(1401, 'options', options, 0);
                            J$.N(1409, 'testIssn', testIssn, 0);
                            J$.N(1417, 'issnDigits', issnDigits, 0);
                            J$.N(1425, 'position', position, 0);
                            J$.N(1433, 'checksum', checksum, 0);
                            J$.N(1441, '_iteratorNormalCompletion', _iteratorNormalCompletion, 0);
                            J$.N(1449, '_didIteratorError', _didIteratorError, 0);
                            J$.N(1457, '_iteratorError', _iteratorError, 0);
                            J$.N(1465, '_iterator', _iterator, 0);
                            J$.N(1473, '_step', _step, 0);
                            J$.N(1481, 'digit', digit, 0);
                            J$.N(1489, 'digitValue', digitValue, 0);
                            var options = J$.X1(473, J$.W(465, 'options', J$.X1(1649, J$.C(32, J$.C(24, J$.B(10, '>', J$.G(385, J$.R(377, 'arguments', arguments, 2), 'length', 0), J$.T(393, 1, 22, false), 0)) ? J$.B(18, '!==', J$.G(417, J$.R(401, 'arguments', arguments, 2), J$.T(409, 1, 22, false), 4), J$.T(425, undefined, 24, false), 0) : J$._())) ? J$.G(449, J$.R(433, 'arguments', arguments, 2), J$.T(441, 1, 22, false), 4) : J$.T(457, {}, 11, false), options, 1));
                            J$.X1(529, J$.F(521, (J$.X1(505, J$.T(481, 0, 22, false)), J$.G(497, J$.R(489, '_assertString2', _assertString2, 1), 'default', 0)), 0)(J$.R(513, 'str', str, 0)));
                            var testIssn = J$.X1(553, J$.W(545, 'testIssn', J$.R(537, 'issn', issn, 1), testIssn, 1));
                            J$.X1(625, testIssn = J$.W(617, 'testIssn', J$.X1(1657, J$.C(40, J$.G(569, J$.R(561, 'options', options, 0), 'require_hyphen', 0))) ? J$.M(601, J$.R(577, 'testIssn', testIssn, 0), 'replace', 0)(J$.T(585, '?', 21, false), J$.T(593, '', 21, false)) : J$.R(609, 'testIssn', testIssn, 0), testIssn, 0));
                            J$.X1(713, testIssn = J$.W(705, 'testIssn', J$.X1(1665, J$.C(48, J$.G(641, J$.R(633, 'options', options, 0), 'case_sensitive', 0))) ? J$.F(665, J$.R(649, 'RegExp', RegExp, 2), 1)(J$.R(657, 'testIssn', testIssn, 0)) : J$.F(697, J$.R(673, 'RegExp', RegExp, 2), 1)(J$.R(681, 'testIssn', testIssn, 0), J$.T(689, 'i', 21, false)), testIssn, 0));
                            if (J$.X1(1673, J$.C(56, J$.U(26, '!', J$.M(737, J$.R(721, 'testIssn', testIssn, 0), 'test', 0)(J$.R(729, 'str', str, 0)))))) {
                                return J$.X1(761, J$.Rt(753, J$.T(745, false, 23, false)));
                            }
                            var issnDigits = J$.X1(809, J$.W(801, 'issnDigits', J$.M(793, J$.R(769, 'str', str, 0), 'replace', 0)(J$.T(777, '-', 21, false), J$.T(785, '', 21, false)), issnDigits, 1));
                            var position = J$.X1(833, J$.W(825, 'position', J$.T(817, 8, 22, false), position, 1));
                            var checksum = J$.X1(857, J$.W(849, 'checksum', J$.T(841, 0, 22, false), checksum, 1));
                            var _iteratorNormalCompletion = J$.X1(881, J$.W(873, '_iteratorNormalCompletion', J$.T(865, true, 23, false), _iteratorNormalCompletion, 1));
                            var _didIteratorError = J$.X1(905, J$.W(897, '_didIteratorError', J$.T(889, false, 23, false), _didIteratorError, 1));
                            var _iteratorError = J$.X1(929, J$.W(921, '_iteratorError', J$.T(913, undefined, 24, false), _iteratorError, 1));
                            try {
                                for (var _iterator = J$.X1(977, J$.W(969, '_iterator', J$.M(961, J$.R(937, 'issnDigits', issnDigits, 0), J$.G(953, J$.R(945, 'Symbol', Symbol, 2), 'iterator', 0), 1)(), _iterator, 1)), _step; J$.X1(1689, J$.C(72, J$.U(34, '!', _iteratorNormalCompletion = J$.W(1017, '_iteratorNormalCompletion', J$.G(1009, _step = J$.W(1001, '_step', J$.M(993, J$.R(985, '_iterator', _iterator, 0), 'next', 0)(), _step, 0), 'done', 0), _iteratorNormalCompletion, 0)))); J$.X1(1697, _iteratorNormalCompletion = J$.W(1033, '_iteratorNormalCompletion', J$.T(1025, true, 23, false), _iteratorNormalCompletion, 0))) {
                                    var digit = J$.X1(1065, J$.W(1057, 'digit', J$.G(1049, J$.R(1041, '_step', _step, 0), 'value', 0), digit, 1));
                                    var digitValue = J$.X1(1121, J$.W(1113, 'digitValue', J$.X1(1681, J$.C(64, J$.B(42, '===', J$.M(1081, J$.R(1073, 'digit', digit, 0), 'toUpperCase', 0)(), J$.T(1089, 'X', 21, false), 0))) ? J$.T(1097, 10, 22, false) : J$.U(50, '+', J$.R(1105, 'digit', digit, 0)), digitValue, 1));
                                    J$.X1(1161, checksum = J$.W(1153, 'checksum', J$.B(66, '+', J$.R(1145, 'checksum', checksum, 0), J$.B(58, '*', J$.R(1129, 'digitValue', digitValue, 0), J$.R(1137, 'position', position, 0), 0), 0), checksum, 0));
                                    J$.X1(1193, position = J$.W(1185, 'position', J$.B(82, '-', J$.U(74, '+', J$.R(1177, 'position', position, 0)), J$.T(1169, 1, 22, false), 0), position, 0));
                                }
                            } catch (err) {
                                err = J$.N(1249, 'err', err, 1);
                                J$.X1(1217, _didIteratorError = J$.W(1209, '_didIteratorError', J$.T(1201, true, 23, false), _didIteratorError, 0));
                                J$.X1(1241, _iteratorError = J$.W(1233, '_iteratorError', J$.R(1225, 'err', err, 0), _iteratorError, 0));
                            } finally {
                                try {
                                    if (J$.X1(1705, J$.C(88, J$.C(80, J$.U(90, '!', J$.R(1257, '_iteratorNormalCompletion', _iteratorNormalCompletion, 0))) ? J$.G(1273, J$.R(1265, '_iterator', _iterator, 0), 'return', 0) : J$._()))) {
                                        J$.X1(1297, J$.M(1289, J$.R(1281, '_iterator', _iterator, 0), 'return', 0)());
                                    }
                                } finally {
                                    if (J$.X1(1713, J$.C(96, J$.R(1305, '_didIteratorError', _didIteratorError, 0)))) {
                                        throw J$.X1(1329, J$.Th(1321, J$.R(1313, '_iteratorError', _iteratorError, 0)));
                                    }
                                }
                            }
                            return J$.X1(1369, J$.Rt(1361, J$.B(106, '===', J$.B(98, '%', J$.R(1337, 'checksum', checksum, 0), J$.T(1345, 11, 22, false), 0), J$.T(1353, 0, 22, false), 0)));
                        } catch (J$e) {
                            J$.Ex(1721, J$e);
                        } finally {
                            if (J$.Fr(1729))
                                continue jalangiLabel194;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1553, '__secret__S$', __secret__S$, 0);
            J$.N(1561, '__secret__traits__', __secret__traits__, 0);
            J$.N(1569, '_assertString', _assertString, 0);
            J$.N(1577, '_assertString2', _assertString2, 0);
            _interopRequireDefault = J$.N(1593, '_interopRequireDefault', J$.T(1585, _interopRequireDefault, 12, false, 329), 0);
            J$.N(1601, 'issn', issn, 0);
            isISSN = J$.N(1617, 'isISSN', J$.T(1609, isISSN, 12, false, 1377), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            J$.X1(145, J$.M(137, J$.R(97, 'Object', Object, 2), 'defineProperty', 0)(J$.R(105, 'exports', exports, 2), J$.T(113, '__esModule', 21, false), J$.T(129, {
                value: J$.T(121, true, 23, false)
            }, 11, false)));
            J$.X1(177, J$.P(169, J$.R(153, 'exports', exports, 2), 'default', J$.R(161, 'isISSN', isISSN, 1), 0));
            var _assertString = J$.X1(217, J$.W(209, '_assertString', J$.F(201, J$.R(185, 'require', require, 2), 0)(J$.T(193, './util/assertString', 21, false)), _assertString, 3));
            var _assertString2 = J$.X1(257, J$.W(249, '_assertString2', J$.F(241, J$.R(225, '_interopRequireDefault', _interopRequireDefault, 1), 0)(J$.R(233, '_assertString', _assertString, 1)), _assertString2, 3));
            var issn = J$.X1(369, J$.W(361, 'issn', J$.T(353, '^\\d{4}-?\\d{3}[\\dX]$', 21, false), issn, 3));
            J$.X1(1537, J$.P(1529, J$.R(1497, 'module', module, 2), 'exports', J$.G(1521, J$.R(1505, 'exports', exports, 2), J$.T(1513, 'default', 21, false), 4), 0));
        } catch (J$e) {
            J$.Ex(1737, J$e);
        } finally {
            if (J$.Sr(1745)) {
                J$.L();
                continue jalangiLabel195;
            } else {
                J$.L();
                break jalangiLabel195;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
