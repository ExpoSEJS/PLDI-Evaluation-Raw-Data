J$.iids = {"8":[16,22,16,34],"9":[1,20,1,27],"10":[8,17,8,30],"16":[14,22,14,34],"17":[1,28,1,32],"18":[10,22,10,35],"24":[12,22,12,36],"25":[1,20,1,33],"26":[12,22,12,36],"32":[10,22,10,35],"33":[1,20,1,33],"34":[14,22,14,34],"40":[8,17,8,30],"41":[1,20,1,33],"42":[16,22,16,34],"48":[25,21,25,24],"49":[2,26,2,38],"50":[39,21,39,69],"56":[39,21,39,69],"57":[2,26,2,45],"58":[50,25,50,55],"64":[50,25,50,100],"65":[2,26,2,45],"66":[50,59,50,100],"72":[50,25,50,100],"73":[2,26,2,45],"74":[74,48,74,70],"80":[47,21,47,24],"81":[3,10,3,17],"82":[74,47,74,78],"88":[71,29,71,72],"89":[3,18,3,22],"90":[76,48,76,78],"96":[71,29,71,95],"97":[3,10,3,23],"98":[77,37,77,48],"104":[71,29,71,122],"105":[3,32,3,39],"106":[77,52,77,64],"112":[71,29,71,156],"113":[3,40,3,46],"114":[78,52,78,70],"120":[71,29,71,192],"121":[3,32,3,47],"122":[80,41,80,60],"128":[71,29,71,233],"129":[3,58,3,65],"130":[81,63,81,88],"136":[77,37,77,64],"137":[3,66,3,74],"138":[81,98,81,124],"144":[90,45,90,59],"145":[3,58,3,75],"146":[82,53,82,58],"152":[80,41,80,60],"153":[3,85,3,92],"154":[83,41,83,52],"160":[77,37,77,64],"161":[3,93,3,100],"168":[72,33,72,38],"169":[3,85,3,101],"170":[83,41,83,52],"176":[71,29,71,233],"177":[3,10,3,23],"178":[84,56,84,61],"184":[105,25,105,41],"185":[3,10,3,23],"186":[85,41,85,55],"193":[3,32,3,47],"201":[3,32,3,47],"202":[85,41,85,55],"209":[3,58,3,75],"210":[105,25,105,41],"217":[3,58,3,75],"218":[106,39,106,65],"225":[3,85,3,101],"226":[107,42,107,77],"233":[3,85,3,101],"234":[108,54,108,76],"241":[4,1,4,7],"242":[108,42,108,77],"249":[8,17,8,23],"250":[109,44,109,70],"257":[8,26,8,30],"258":[109,44,109,70],"265":[9,26,9,37],"266":[110,25,110,43],"273":[9,26,9,37],"281":[9,17,9,38],"282":[110,25,110,43],"289":[10,22,10,28],"290":[116,33,116,53],"297":[10,31,10,35],"298":[121,31,121,65],"305":[11,26,11,32],"313":[11,26,11,32],"321":[11,17,11,33],"329":[12,22,12,28],"337":[12,31,12,36],"345":[13,26,13,32],"353":[13,26,13,32],"361":[13,17,13,33],"369":[14,22,14,28],"377":[14,31,14,34],"385":[15,26,15,32],"393":[15,26,15,32],"401":[15,17,15,33],"409":[16,22,16,28],"417":[16,31,16,34],"425":[17,26,17,37],"433":[17,26,17,37],"441":[17,17,17,38],"449":[19,26,19,37],"457":[19,26,19,37],"465":[19,17,19,38],"473":[20,20,20,26],"481":[20,20,20,26],"489":[20,13,20,27],"497":[6,20,21,10],"505":[6,20,21,10],"513":[6,20,21,10],"521":[6,20,21,10],"529":[6,20,21,10],"537":[23,22,23,26],"545":[23,22,23,26],"553":[23,22,23,26],"561":[24,13,24,15],"569":[24,25,24,30],"577":[25,21,25,24],"585":[26,21,26,23],"593":[26,24,26,27],"601":[26,21,26,28],"609":[26,21,26,29],"617":[28,21,28,23],"625":[28,36,28,40],"633":[28,42,28,44],"641":[28,21,28,45],"643":[28,21,28,35],"649":[28,21,28,46],"657":[24,32,30,14],"665":[24,32,30,14],"673":[24,32,30,14],"681":[24,32,30,14],"689":[24,32,30,14],"697":[24,13,30,15],"699":[24,13,24,24],"705":[24,13,30,16],"713":[22,20,31,10],"721":[22,20,31,10],"729":[22,20,31,10],"737":[22,20,31,10],"745":[22,20,31,10],"753":[22,20,31,10],"761":[33,20,33,24],"769":[33,20,33,31],"777":[33,20,33,54],"785":[33,20,33,65],"793":[33,20,33,65],"801":[33,13,33,66],"809":[32,24,34,10],"817":[32,24,34,10],"825":[32,24,34,10],"833":[36,24,36,28],"841":[36,24,36,44],"843":[36,24,36,42],"849":[36,24,36,44],"857":[36,24,36,44],"865":[37,20,37,24],"873":[38,27,38,35],"881":[38,27,38,44],"889":[38,45,38,46],"897":[38,27,38,47],"905":[38,27,38,47],"913":[38,27,38,47],"921":[39,21,39,24],"929":[39,21,39,26],"937":[39,21,39,32],"945":[39,21,39,46],"947":[39,21,39,44],"953":[39,51,39,55],"961":[39,51,39,69],"963":[39,51,39,67],"969":[40,28,40,31],"977":[40,28,40,31],"985":[40,21,40,32],"993":[37,29,42,14],"1001":[37,29,42,14],"1009":[37,29,42,14],"1017":[37,29,42,14],"1025":[37,29,42,14],"1033":[37,20,42,15],"1035":[37,20,37,28],"1041":[37,20,42,15],"1049":[37,13,42,16],"1057":[35,26,43,10],"1065":[35,26,43,10],"1073":[35,26,43,10],"1081":[35,26,43,10],"1089":[35,26,43,10],"1097":[45,22,45,26],"1105":[45,22,45,26],"1113":[45,22,45,26],"1121":[46,13,46,19],"1129":[46,32,46,36],"1137":[47,21,47,24],"1145":[48,21,48,23],"1153":[48,24,48,27],"1161":[48,21,48,28],"1169":[48,21,48,29],"1177":[50,26,50,32],"1185":[50,26,50,55],"1193":[50,60,50,66],"1201":[50,60,50,89],"1209":[50,60,50,100],"1217":[51,32,51,34],"1225":[51,35,51,53],"1233":[51,32,51,54],"1241":[51,32,51,54],"1249":[51,25,51,55],"1257":[53,21,53,23],"1265":[53,33,53,39],"1273":[53,21,53,39],"1281":[53,21,53,40],"1289":[54,21,54,23],"1297":[54,24,54,28],"1305":[54,30,54,32],"1313":[54,21,54,33],"1321":[54,21,54,34],"1329":[46,38,56,14],"1337":[46,38,56,14],"1345":[46,38,56,14],"1353":[46,38,56,14],"1361":[46,38,56,14],"1369":[46,13,56,15],"1371":[46,13,46,31],"1377":[46,13,56,16],"1385":[44,22,57,10],"1393":[44,22,57,10],"1401":[44,22,57,10],"1409":[44,22,57,10],"1417":[44,22,57,10],"1425":[44,22,57,10],"1433":[59,22,59,26],"1441":[59,39,59,40],"1449":[59,54,59,55],"1457":[59,75,59,76],"1465":[59,97,59,98],"1473":[59,116,59,117],"1481":[59,130,59,132],"1489":[59,148,59,150],"1497":[60,38,60,40],"1505":[61,34,61,36],"1513":[62,28,62,30],"1521":[63,27,63,29],"1529":[64,26,64,28],"1537":[65,32,65,33],"1545":[65,31,65,34],"1553":[59,162,66,18],"1561":[59,22,59,26],"1569":[59,22,59,26],"1577":[59,39,59,40],"1585":[59,39,59,40],"1593":[59,54,59,55],"1601":[59,54,59,55],"1609":[59,75,59,76],"1617":[59,75,59,76],"1625":[59,97,59,98],"1633":[59,97,59,98],"1641":[59,116,59,117],"1649":[59,116,59,117],"1657":[59,130,59,132],"1665":[59,130,59,132],"1673":[59,148,59,150],"1681":[59,148,59,150],"1689":[59,162,66,18],"1697":[59,162,66,18],"1705":[67,13,67,17],"1713":[67,34,67,43],"1721":[67,13,67,44],"1723":[67,13,67,33],"1729":[68,17,68,25],"1737":[68,17,68,29],"1745":[69,33,69,38],"1753":[69,108,69,109],"1761":[69,126,69,127],"1769":[69,33,69,38],"1777":[69,33,69,38],"1785":[69,108,69,109],"1793":[69,108,69,109],"1801":[69,126,69,127],"1809":[69,126,69,127],"1817":[70,21,70,24],"1825":[70,21,70,30],"1833":[70,31,70,32],"1841":[70,21,70,33],"1849":[70,21,70,44],"1857":[71,29,71,34],"1865":[71,29,71,45],"1873":[71,49,71,54],"1881":[71,49,71,65],"1889":[71,49,71,72],"1897":[71,76,71,81],"1905":[71,76,71,92],"1913":[71,93,71,94],"1921":[71,76,71,95],"1929":[71,99,71,104],"1937":[71,99,71,115],"1945":[71,116,71,117],"1953":[71,99,71,118],"1961":[71,99,71,122],"1969":[71,126,71,131],"1977":[71,126,71,142],"1985":[71,143,71,144],"1993":[71,126,71,145],"2001":[71,126,71,149],"2009":[71,126,71,156],"2017":[71,160,71,165],"2025":[71,160,71,176],"2033":[71,177,71,178],"2041":[71,160,71,179],"2049":[71,160,71,183],"2057":[71,184,71,185],"2065":[71,160,71,186],"2073":[71,160,71,192],"2081":[71,196,71,201],"2089":[71,196,71,212],"2097":[71,213,71,214],"2105":[71,196,71,215],"2113":[71,196,71,219],"2121":[71,220,71,221],"2129":[71,196,71,222],"2137":[71,196,71,233],"2145":[72,33,72,38],"2153":[73,51,73,55],"2161":[73,56,73,61],"2169":[73,56,73,66],"2177":[73,67,73,68],"2185":[73,56,73,69],"2193":[73,47,73,70],"2201":[73,47,73,80],"2203":[73,47,73,78],"2209":[73,47,73,80],"2217":[73,33,73,81],"2225":[74,48,74,59],"2233":[74,62,74,70],"2241":[74,74,74,78],"2249":[74,47,74,78],"2257":[74,47,74,78],"2265":[75,51,75,56],"2273":[75,51,75,71],"2281":[75,72,75,73],"2289":[75,51,75,74],"2297":[75,51,75,74],"2305":[75,33,75,75],"2313":[76,48,76,63],"2321":[76,66,76,78],"2329":[76,48,76,78],"2337":[76,48,76,78],"2345":[77,37,77,44],"2353":[77,47,77,48],"2361":[77,52,77,60],"2369":[77,63,77,64],"2377":[78,52,78,60],"2385":[78,63,78,70],"2393":[78,52,78,70],"2401":[78,52,78,70],"2409":[79,59,79,64],"2417":[79,59,79,75],"2425":[79,76,79,77],"2433":[79,59,79,78],"2441":[79,59,79,82],"2449":[79,83,79,84],"2457":[79,59,79,85],"2465":[79,59,79,91],"2473":[79,59,79,91],"2481":[79,59,79,91],"2489":[80,41,80,56],"2497":[80,59,80,60],"2505":[81,63,81,78],"2513":[81,81,81,88],"2521":[81,98,81,106],"2529":[81,109,81,124],"2537":[81,63,81,88],"2545":[81,63,81,88],"2553":[81,98,81,124],"2561":[81,98,81,124],"2569":[82,53,82,58],"2577":[82,41,82,49],"2585":[82,41,82,58],"2593":[82,41,82,59],"2609":[83,41,83,50],"2617":[83,41,83,52],"2633":[83,41,83,53],"2641":[84,56,84,61],"2649":[84,41,84,52],"2657":[84,41,84,61],"2665":[84,41,84,62],"2681":[85,41,85,53],"2689":[85,41,85,55],"2705":[85,41,85,56],"2713":[86,41,86,48],"2721":[86,41,86,60],"2729":[86,66,86,74],"2737":[86,41,86,75],"2739":[86,41,86,65],"2745":[86,41,86,76],"2753":[87,41,87,48],"2761":[87,41,87,64],"2769":[87,70,87,85],"2777":[87,41,87,86],"2779":[87,41,87,69],"2785":[87,41,87,87],"2793":[88,41,88,48],"2801":[88,41,88,54],"2809":[88,60,88,65],"2817":[88,41,88,66],"2819":[88,41,88,59],"2825":[88,41,88,67],"2833":[89,41,89,48],"2841":[89,41,89,53],"2849":[89,59,89,70],"2857":[89,41,89,71],"2859":[89,41,89,58],"2865":[89,41,89,72],"2873":[90,45,90,50],"2881":[90,45,90,59],"2889":[91,55,91,60],"2897":[91,55,91,69],"2905":[91,70,91,71],"2913":[91,55,91,72],"2921":[91,55,91,72],"2929":[91,55,91,72],"2937":[92,45,92,52],"2945":[92,45,92,56],"2953":[93,49,93,52],"2961":[93,49,93,68],"2969":[93,69,93,70],"2977":[93,49,93,71],"2985":[94,49,94,52],"2993":[94,49,94,69],"3001":[94,70,94,71],"3009":[94,49,94,72],"3017":[92,62,95,46],"3025":[92,45,95,47],"3027":[92,45,92,61],"3033":[92,45,95,48],"3041":[100,40,100,51],"3049":[100,40,100,51],"3057":[100,29,100,52],"3065":[101,44,101,59],"3073":[101,44,101,59],"3081":[101,29,101,60],"3089":[102,37,102,41],"3097":[102,37,102,41],"3105":[102,29,102,42],"3113":[70,53,104,22],"3121":[70,53,104,22],"3129":[70,53,104,22],"3137":[70,53,104,22],"3145":[70,53,104,22],"3153":[70,53,104,22],"3161":[70,53,104,22],"3169":[70,53,104,22],"3177":[70,53,104,22],"3185":[70,53,104,22],"3193":[70,53,104,22],"3201":[70,21,104,23],"3203":[70,21,70,52],"3209":[70,21,104,24],"3217":[105,25,105,37],"3225":[105,40,105,41],"3233":[106,25,106,33],"3241":[106,39,106,50],"3249":[106,53,106,65],"3257":[106,25,106,66],"3259":[106,25,106,38],"3265":[106,25,106,67],"3273":[107,25,107,36],"3281":[107,42,107,45],"3289":[107,42,107,60],"3297":[107,61,107,62],"3305":[107,42,107,63],"3313":[107,66,107,77],"3321":[107,25,107,78],"3323":[107,25,107,41],"3329":[107,25,107,79],"3337":[108,42,108,53],"3345":[108,54,108,65],"3353":[108,54,108,72],"3361":[108,75,108,76],"3369":[108,42,108,77],"3377":[108,25,108,38],"3385":[108,25,108,77],"3393":[108,25,108,78],"3401":[109,44,109,55],"3409":[109,58,109,70],"3417":[109,25,109,40],"3425":[109,25,109,70],"3433":[109,25,109,71],"3449":[110,25,110,41],"3457":[110,25,110,43],"3473":[110,25,110,44],"3481":[111,25,111,32],"3489":[111,25,111,41],"3497":[111,47,111,54],"3505":[111,47,111,58],"3513":[111,47,111,65],"3521":[111,25,111,66],"3523":[111,25,111,46],"3529":[111,25,111,67],"3537":[68,38,113,18],"3545":[68,38,113,18],"3553":[68,38,113,18],"3561":[68,38,113,18],"3569":[68,38,113,18],"3577":[68,38,113,18],"3585":[68,38,113,18],"3593":[68,38,113,18],"3601":[68,38,113,18],"3609":[68,38,113,18],"3617":[68,38,113,18],"3625":[68,17,113,19],"3627":[68,17,68,37],"3633":[68,17,113,20],"3641":[67,53,114,14],"3649":[67,53,114,14],"3657":[67,53,114,14],"3665":[67,53,114,14],"3673":[67,13,114,15],"3675":[67,13,67,52],"3681":[67,13,114,16],"3689":[115,26,115,31],"3697":[115,32,115,39],"3705":[115,32,115,45],"3713":[115,26,115,46],"3721":[115,57,115,59],"3729":[115,70,115,76],"3737":[115,57,115,77],"3739":[115,57,115,69],"3745":[116,33,116,41],"3753":[116,44,116,53],"3761":[117,34,117,40],"3769":[118,28,118,34],"3777":[119,31,119,39],"3785":[120,36,120,49],"3793":[121,31,121,46],"3801":[121,49,121,65],"3809":[122,34,122,45],"3817":[123,30,123,37],"3825":[115,88,124,18],"3833":[115,26,115,46],"3841":[115,26,115,46],"3849":[115,57,115,77],"3857":[115,57,115,77],"3865":[115,88,124,18],"3873":[115,88,124,18],"3881":[125,20,125,26],"3889":[125,20,125,26],"3897":[125,13,125,27],"3905":[58,28,126,10],"3913":[58,28,126,10],"3921":[58,28,126,10],"3929":[58,28,126,10],"3937":[58,28,126,10],"3945":[58,28,126,10],"3953":[58,28,126,10],"3961":[58,28,126,10],"3969":[58,28,126,10],"3977":[58,28,126,10],"3985":[58,28,126,10],"3993":[58,28,126,10],"4001":[58,28,126,10],"4009":[58,28,126,10],"4017":[58,28,126,10],"4025":[5,15,127,6],"4033":[5,15,127,6],"4041":[5,15,127,6],"4049":[128,20,129,6],"4057":[128,20,129,6],"4065":[128,20,129,6],"4073":[128,20,129,6],"4081":[128,20,129,6],"4089":[130,5,130,13],"4097":[130,26,130,29],"4105":[130,5,130,29],"4113":[130,5,130,30],"4121":[131,16,131,24],"4129":[131,12,131,26],"4137":[131,12,131,26],"4145":[131,5,131,27],"4153":[4,18,132,2],"4161":[4,18,132,2],"4169":[4,18,132,2],"4177":[4,18,132,2],"4185":[4,18,132,2],"4193":[4,18,132,4],"4201":[4,1,132,4],"4209":[4,1,132,5],"4217":[1,1,132,5],"4225":[1,1,132,5],"4233":[1,1,132,5],"4241":[1,1,132,5],"4249":[1,1,132,5],"4257":[1,1,132,5],"4265":[1,1,132,5],"4273":[16,18,19,38],"4281":[14,18,19,38],"4289":[12,18,19,38],"4297":[10,18,19,38],"4305":[8,13,19,38],"4313":[6,20,21,10],"4321":[6,20,21,10],"4329":[25,17,29,18],"4337":[24,32,30,14],"4345":[24,32,30,14],"4353":[22,20,31,10],"4361":[22,20,31,10],"4369":[32,24,34,10],"4377":[32,24,34,10],"4385":[39,17,41,18],"4393":[37,29,42,14],"4401":[37,29,42,14],"4409":[35,26,43,10],"4417":[35,26,43,10],"4425":[50,21,52,22],"4433":[47,17,55,18],"4441":[46,38,56,14],"4449":[46,38,56,14],"4457":[44,22,57,10],"4465":[44,22,57,10],"4473":[90,41,96,42],"4481":[80,37,97,38],"4489":[77,33,98,34],"4497":[72,29,99,30],"4505":[71,25,103,26],"4513":[70,53,104,22],"4521":[70,53,104,22],"4529":[105,21,112,22],"4537":[68,38,113,18],"4545":[68,38,113,18],"4553":[67,53,114,14],"4561":[67,53,114,14],"4569":[58,28,126,10],"4577":[58,28,126,10],"4585":[128,20,129,6],"4593":[128,20,129,6],"4601":[4,18,132,2],"4609":[4,18,132,2],"4617":[1,1,132,5],"4625":[1,1,132,5],"nBranches":46,"originalCodeFileName":"/home/blake/ExpoSE/Targets/tcxparse/node_modules/tcxparse/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/tcxparse/node_modules/tcxparse/index_jalangi_.js","code":"var fs = require('fs')\n    , util = require('util')\n    , xml2js = require('xml2js')\n    , stdev = require('stdev')\n;\n\nmodule.exports = (function() {\n    var ret = {\n        GetRating: function(stddev)\n        {\n            var rating;\n            if (stddev < 0.02)\n                rating = \"very good\";\n            else if (stddev < 0.05)\n                rating = \"good\";\n            else if (stddev < 0.075)\n                rating = \"okay\";\n            else if (stddev < 0.1)\n                rating = \"poor\";\n            else if (stddev < 0.2)\n                rating = \"very poor\";\n            else\n                rating = \"appalling\";\n            return rating;\n        }\n        , parseFile: function(fname, cb) {\n            var me = this;\n            fs.readFile(fname, function(err, data) {\n                if (err) { \n                    cb(err);\n                } else {\n                    me.parseString(data, cb);\n                }\n            });\n        }\n        , getActivities: function() {\n            return this.result.TrainingCenterDatabase.Activities;\n        }\n        , getActivityType: function(type) {\n            var acts = this.getActivities();\n            return acts.map(function(activity) {\n                var act = activity.Activity[0];\n                if (act.$.Sport.toLowerCase() === type.toLowerCase()) {\n                    return act;\n                }\n            });\n        }\n        , parseString: function(data, cb) {\n            var me = this;\n            xml2js.parseString(data, function(err, result) {\n                if (err) {\n                    cb(err);\n                } else {\n                    if (!result.TrainingCenterDatabase || !result.TrainingCenterDatabase.Activities) {\n                        return cb('Invalid TCX file');\n                    }\n                    me.result = result;\n                    cb(null, me);\n                }\n            });\n        }\n        , getFootpodDetails: function() {\n            var me = this\n                , sumscale = 0\n                , numpoints = 0\n                , perlap_sumscale = 0\n                , perlap_numpoints = 0\n                , totalDistance = 0\n                , lapscale = []\n                , lapdistance = []\n                , lapdata = { footpoddistance: [], gpsdistance: [], scale: [], time: [], gps: [], lapindex: [ 0 ] }\n            ;\n            this.getActivityType('running').forEach(function(activity) {\n                activity.Lap.forEach(function(lap) {\n//                    console.log('Lap start time: ' + lap.$.StartTime);\n                    var valid = false\n                        , lasttime\n                        , lastdistance\n                        , currenttime\n                        , currentdistance\n                        , lapsumscale = 0\n                        , lapnumpoints = 0\n                    ;\n                    lap.Track[0].Trackpoint.forEach(function(point) {\n                        //console.log(util.inspect(point, false, null))\n                        if (point.Extensions &&\n                            point.Extensions.length &&\n                            point.Extensions[0] &&\n                            point.Extensions[0].TPX &&\n                            point.Extensions[0].TPX.length &&\n                            point.Extensions[0].TPX[0].Speed &&\n                            point.Extensions[0].TPX[0].RunCadence)\n                        {\n                            if (valid) {\n                                currenttime = new Date(point.Time[0]).getTime();\n                                var seconds = (currenttime - lasttime) / 1000.0;\n                                currentdistance = point.DistanceMeters[0];\n                                var distance = currentdistance - lastdistance;\n                                if (seconds > 0  && distance > 0) {\n                                    var gpsSpeed = distance / seconds;\n                                    var footpodspeedMPS = point.Extensions[0].TPX[0].Speed; //Meters per second!\n                                    if (footpodspeedMPS > 0) {\n                                        var footpoddistance = footpodspeedMPS * seconds\n                                            , scale = distance / footpoddistance\n                                        ;\n                                        sumscale += scale;\n                                        numpoints++;\n                                        lapsumscale += scale;\n                                        lapnumpoints++;\n                                        lapdata.gpsdistance.push(distance);\n                                        lapdata.footpoddistance.push(footpoddistance);\n                                        lapdata.scale.push(scale);\n                                        lapdata.time.push(currenttime);\n                                        if (point.Position) {\n                                            var pos = point.Position[0];\n                                            lapdata.gps.push([pos.LatitudeDegrees[0], pos.LongitudeDegrees[0]]);\n                                        }\n                                    }\n                                }\n                            }\n                            lasttime = currenttime;\n                            lastdistance = currentdistance;\n                            valid = true;\n                        }\n                    });\n\n                    if (lapnumpoints > 0)\n                    {\n                        lapscale.push(lapsumscale / lapnumpoints);\n                        lapdistance.push(lap.DistanceMeters[0] * 0.000621371); // convert to miles\n                        totalDistance += lapdistance[lapdistance.length - 1];\n                        perlap_sumscale += (lapsumscale / lapnumpoints);\n                        perlap_numpoints++;\n                        lapdata.lapindex.push(lapdata.gps.length);\n                    }\n                });\n            });\n            var stddev = stdev(lapdata.scale)\n                , rating = me.GetRating(stddev)\n                , retObj = {\n                    adjustment: (sumscale / numpoints)\n                    , consistency: rating\n                    , stdev: stddev\n                    , lapscale: lapscale\n                    , totalDistance: totalDistance\n                    , scaleLap: perlap_sumscale / perlap_numpoints\n                    , lapDistance: lapdistance\n                    , lapdata: lapdata\n                };\n            return retObj;\n            /*\n            if (summary) {\n                if (numpoints == 0) {\n                    console.log(\"No usable data was found in \" + shortname);\n                } else {\n                    console.log(shortname \n                        + \" calibration factor adjustment \" \n                        + (sumscale / numpoints)\n                        + \", Consistency is \" \n                        + rating \n                        + \" (stddev \" \n                        + stddev\n                        + \")\"\n                    );\n                }\n            }\n            */\n        }\n    };\n\n    var parseTSX = function() { };\n    parseTSX.prototype = ret;\n    return new parseTSX();\n})();\n"};
jalangiLabel56:
    while (true) {
        try {
            J$.Se(4217, '/home/blake/ExpoSE/Targets/tcxparse/node_modules/tcxparse/index_jalangi_.js', '/home/blake/ExpoSE/Targets/tcxparse/node_modules/tcxparse/index.js');
            J$.N(4225, '__secret__S$', __secret__S$, 0);
            J$.N(4233, '__secret__traits__', __secret__traits__, 0);
            J$.N(4241, 'fs', fs, 0);
            J$.N(4249, 'util', util, 0);
            J$.N(4257, 'xml2js', xml2js, 0);
            J$.N(4265, 'stdev', stdev, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var fs = J$.X1(185, J$.W(177, 'fs', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, 'fs', 21, false)), fs, 3)), util = J$.X1(201, J$.W(193, 'util', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, 'util', 21, false)), util, 3)), xml2js = J$.X1(217, J$.W(209, 'xml2js', J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, 'xml2js', 21, false)), xml2js, 3)), stdev = J$.X1(233, J$.W(225, 'stdev', J$.F(169, J$.R(153, 'require', require, 2), 0)(J$.T(161, 'stdev', 21, false)), stdev, 3));
            J$.X1(4209, J$.P(4201, J$.R(241, 'module', module, 2), 'exports', J$.F(4193, J$.T(4185, function () {
                jalangiLabel55:
                    while (true) {
                        try {
                            J$.Fe(4153, arguments.callee, this, arguments);
                            arguments = J$.N(4161, 'arguments', arguments, 4);
                            J$.N(4169, 'ret', ret, 0);
                            J$.N(4177, 'parseTSX', parseTSX, 0);
                            var ret = J$.X1(4041, J$.W(4033, 'ret', J$.T(4025, {
                                GetRating: J$.T(529, function (stddev) {
                                    jalangiLabel42:
                                        while (true) {
                                            try {
                                                J$.Fe(497, arguments.callee, this, arguments);
                                                arguments = J$.N(505, 'arguments', arguments, 4);
                                                stddev = J$.N(513, 'stddev', stddev, 4);
                                                J$.N(521, 'rating', rating, 0);
                                                var rating;
                                                if (J$.X1(4305, J$.C(40, J$.B(10, '<', J$.R(249, 'stddev', stddev, 0), J$.T(257, 0.02, 22, false), 0))))
                                                    J$.X1(281, rating = J$.W(273, 'rating', J$.T(265, 'very good', 21, false), rating, 0));
                                                else if (J$.X1(4297, J$.C(32, J$.B(18, '<', J$.R(289, 'stddev', stddev, 0), J$.T(297, 0.05, 22, false), 0))))
                                                    J$.X1(321, rating = J$.W(313, 'rating', J$.T(305, 'good', 21, false), rating, 0));
                                                else if (J$.X1(4289, J$.C(24, J$.B(26, '<', J$.R(329, 'stddev', stddev, 0), J$.T(337, 0.075, 22, false), 0))))
                                                    J$.X1(361, rating = J$.W(353, 'rating', J$.T(345, 'okay', 21, false), rating, 0));
                                                else if (J$.X1(4281, J$.C(16, J$.B(34, '<', J$.R(369, 'stddev', stddev, 0), J$.T(377, 0.1, 22, false), 0))))
                                                    J$.X1(401, rating = J$.W(393, 'rating', J$.T(385, 'poor', 21, false), rating, 0));
                                                else if (J$.X1(4273, J$.C(8, J$.B(42, '<', J$.R(409, 'stddev', stddev, 0), J$.T(417, 0.2, 22, false), 0))))
                                                    J$.X1(441, rating = J$.W(433, 'rating', J$.T(425, 'very poor', 21, false), rating, 0));
                                                else
                                                    J$.X1(465, rating = J$.W(457, 'rating', J$.T(449, 'appalling', 21, false), rating, 0));
                                                return J$.X1(489, J$.Rt(481, J$.R(473, 'rating', rating, 0)));
                                            } catch (J$e) {
                                                J$.Ex(4313, J$e);
                                            } finally {
                                                if (J$.Fr(4321))
                                                    continue jalangiLabel42;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 497),
                                parseFile: J$.T(753, function (fname, cb) {
                                    jalangiLabel44:
                                        while (true) {
                                            try {
                                                J$.Fe(713, arguments.callee, this, arguments);
                                                arguments = J$.N(721, 'arguments', arguments, 4);
                                                fname = J$.N(729, 'fname', fname, 4);
                                                cb = J$.N(737, 'cb', cb, 4);
                                                J$.N(745, 'me', me, 0);
                                                var me = J$.X1(553, J$.W(545, 'me', J$.R(537, 'this', this, 0), me, 1));
                                                J$.X1(705, J$.M(697, J$.R(561, 'fs', fs, 1), 'readFile', 0)(J$.R(569, 'fname', fname, 0), J$.T(689, function (err, data) {
                                                    jalangiLabel43:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(657, arguments.callee, this, arguments);
                                                                arguments = J$.N(665, 'arguments', arguments, 4);
                                                                err = J$.N(673, 'err', err, 4);
                                                                data = J$.N(681, 'data', data, 4);
                                                                if (J$.X1(4329, J$.C(48, J$.R(577, 'err', err, 0)))) {
                                                                    J$.X1(609, J$.F(601, J$.R(585, 'cb', cb, 0), 0)(J$.R(593, 'err', err, 0)));
                                                                } else {
                                                                    J$.X1(649, J$.M(641, J$.R(617, 'me', me, 0), 'parseString', 0)(J$.R(625, 'data', data, 0), J$.R(633, 'cb', cb, 0)));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(4337, J$e);
                                                            } finally {
                                                                if (J$.Fr(4345))
                                                                    continue jalangiLabel43;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 657)));
                                            } catch (J$e) {
                                                J$.Ex(4353, J$e);
                                            } finally {
                                                if (J$.Fr(4361))
                                                    continue jalangiLabel44;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 713),
                                getActivities: J$.T(825, function () {
                                    jalangiLabel45:
                                        while (true) {
                                            try {
                                                J$.Fe(809, arguments.callee, this, arguments);
                                                arguments = J$.N(817, 'arguments', arguments, 4);
                                                return J$.X1(801, J$.Rt(793, J$.G(785, J$.G(777, J$.G(769, J$.R(761, 'this', this, 0), 'result', 0), 'TrainingCenterDatabase', 0), 'Activities', 0)));
                                            } catch (J$e) {
                                                J$.Ex(4369, J$e);
                                            } finally {
                                                if (J$.Fr(4377))
                                                    continue jalangiLabel45;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 809),
                                getActivityType: J$.T(1089, function (type) {
                                    jalangiLabel47:
                                        while (true) {
                                            try {
                                                J$.Fe(1057, arguments.callee, this, arguments);
                                                arguments = J$.N(1065, 'arguments', arguments, 4);
                                                type = J$.N(1073, 'type', type, 4);
                                                J$.N(1081, 'acts', acts, 0);
                                                var acts = J$.X1(857, J$.W(849, 'acts', J$.M(841, J$.R(833, 'this', this, 0), 'getActivities', 0)(), acts, 1));
                                                return J$.X1(1049, J$.Rt(1041, J$.M(1033, J$.R(865, 'acts', acts, 0), 'map', 0)(J$.T(1025, function (activity) {
                                                    jalangiLabel46:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(993, arguments.callee, this, arguments);
                                                                arguments = J$.N(1001, 'arguments', arguments, 4);
                                                                activity = J$.N(1009, 'activity', activity, 4);
                                                                J$.N(1017, 'act', act, 0);
                                                                var act = J$.X1(913, J$.W(905, 'act', J$.G(897, J$.G(881, J$.R(873, 'activity', activity, 0), 'Activity', 0), J$.T(889, 0, 22, false), 4), act, 1));
                                                                if (J$.X1(4385, J$.C(56, J$.B(50, '===', J$.M(945, J$.G(937, J$.G(929, J$.R(921, 'act', act, 0), '$', 0), 'Sport', 0), 'toLowerCase', 0)(), J$.M(961, J$.R(953, 'type', type, 0), 'toLowerCase', 0)(), 0)))) {
                                                                    return J$.X1(985, J$.Rt(977, J$.R(969, 'act', act, 0)));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(4393, J$e);
                                                            } finally {
                                                                if (J$.Fr(4401))
                                                                    continue jalangiLabel46;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 993))));
                                            } catch (J$e) {
                                                J$.Ex(4409, J$e);
                                            } finally {
                                                if (J$.Fr(4417))
                                                    continue jalangiLabel47;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 1057),
                                parseString: J$.T(1425, function (data, cb) {
                                    jalangiLabel49:
                                        while (true) {
                                            try {
                                                J$.Fe(1385, arguments.callee, this, arguments);
                                                arguments = J$.N(1393, 'arguments', arguments, 4);
                                                data = J$.N(1401, 'data', data, 4);
                                                cb = J$.N(1409, 'cb', cb, 4);
                                                J$.N(1417, 'me', me, 0);
                                                var me = J$.X1(1113, J$.W(1105, 'me', J$.R(1097, 'this', this, 0), me, 1));
                                                J$.X1(1377, J$.M(1369, J$.R(1121, 'xml2js', xml2js, 1), 'parseString', 0)(J$.R(1129, 'data', data, 0), J$.T(1361, function (err, result) {
                                                    jalangiLabel48:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(1329, arguments.callee, this, arguments);
                                                                arguments = J$.N(1337, 'arguments', arguments, 4);
                                                                err = J$.N(1345, 'err', err, 4);
                                                                result = J$.N(1353, 'result', result, 4);
                                                                if (J$.X1(4433, J$.C(80, J$.R(1137, 'err', err, 0)))) {
                                                                    J$.X1(1169, J$.F(1161, J$.R(1145, 'cb', cb, 0), 0)(J$.R(1153, 'err', err, 0)));
                                                                } else {
                                                                    if (J$.X1(4425, J$.C(72, J$.C(64, J$.U(58, '!', J$.G(1185, J$.R(1177, 'result', result, 0), 'TrainingCenterDatabase', 0))) ? J$._() : J$.U(66, '!', J$.G(1209, J$.G(1201, J$.R(1193, 'result', result, 0), 'TrainingCenterDatabase', 0), 'Activities', 0))))) {
                                                                        return J$.X1(1249, J$.Rt(1241, J$.F(1233, J$.R(1217, 'cb', cb, 0), 0)(J$.T(1225, 'Invalid TCX file', 21, false))));
                                                                    }
                                                                    J$.X1(1281, J$.P(1273, J$.R(1257, 'me', me, 0), 'result', J$.R(1265, 'result', result, 0), 0));
                                                                    J$.X1(1321, J$.F(1313, J$.R(1289, 'cb', cb, 0), 0)(J$.T(1297, null, 25, false), J$.R(1305, 'me', me, 0)));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(4441, J$e);
                                                            } finally {
                                                                if (J$.Fr(4449))
                                                                    continue jalangiLabel48;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 1329)));
                                            } catch (J$e) {
                                                J$.Ex(4457, J$e);
                                            } finally {
                                                if (J$.Fr(4465))
                                                    continue jalangiLabel49;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 1385),
                                getFootpodDetails: J$.T(4017, function () {
                                    jalangiLabel53:
                                        while (true) {
                                            try {
                                                J$.Fe(3905, arguments.callee, this, arguments);
                                                arguments = J$.N(3913, 'arguments', arguments, 4);
                                                J$.N(3921, 'me', me, 0);
                                                J$.N(3929, 'sumscale', sumscale, 0);
                                                J$.N(3937, 'numpoints', numpoints, 0);
                                                J$.N(3945, 'perlap_sumscale', perlap_sumscale, 0);
                                                J$.N(3953, 'perlap_numpoints', perlap_numpoints, 0);
                                                J$.N(3961, 'totalDistance', totalDistance, 0);
                                                J$.N(3969, 'lapscale', lapscale, 0);
                                                J$.N(3977, 'lapdistance', lapdistance, 0);
                                                J$.N(3985, 'lapdata', lapdata, 0);
                                                J$.N(3993, 'stddev', stddev, 0);
                                                J$.N(4001, 'rating', rating, 0);
                                                J$.N(4009, 'retObj', retObj, 0);
                                                var me = J$.X1(1569, J$.W(1561, 'me', J$.R(1433, 'this', this, 0), me, 1)), sumscale = J$.X1(1585, J$.W(1577, 'sumscale', J$.T(1441, 0, 22, false), sumscale, 1)), numpoints = J$.X1(1601, J$.W(1593, 'numpoints', J$.T(1449, 0, 22, false), numpoints, 1)), perlap_sumscale = J$.X1(1617, J$.W(1609, 'perlap_sumscale', J$.T(1457, 0, 22, false), perlap_sumscale, 1)), perlap_numpoints = J$.X1(1633, J$.W(1625, 'perlap_numpoints', J$.T(1465, 0, 22, false), perlap_numpoints, 1)), totalDistance = J$.X1(1649, J$.W(1641, 'totalDistance', J$.T(1473, 0, 22, false), totalDistance, 1)), lapscale = J$.X1(1665, J$.W(1657, 'lapscale', J$.T(1481, [], 10, false), lapscale, 1)), lapdistance = J$.X1(1681, J$.W(1673, 'lapdistance', J$.T(1489, [], 10, false), lapdistance, 1)), lapdata = J$.X1(1697, J$.W(1689, 'lapdata', J$.T(1553, {
                                                        footpoddistance: J$.T(1497, [], 10, false),
                                                        gpsdistance: J$.T(1505, [], 10, false),
                                                        scale: J$.T(1513, [], 10, false),
                                                        time: J$.T(1521, [], 10, false),
                                                        gps: J$.T(1529, [], 10, false),
                                                        lapindex: J$.T(1545, [J$.T(1537, 0, 22, false)], 10, false)
                                                    }, 11, false), lapdata, 1));
                                                J$.X1(3681, J$.M(3673, J$.M(1721, J$.R(1705, 'this', this, 0), 'getActivityType', 0)(J$.T(1713, 'running', 21, false)), 'forEach', 0)(J$.T(3665, function (activity) {
                                                    jalangiLabel52:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(3641, arguments.callee, this, arguments);
                                                                arguments = J$.N(3649, 'arguments', arguments, 4);
                                                                activity = J$.N(3657, 'activity', activity, 4);
                                                                J$.X1(3633, J$.M(3625, J$.G(1737, J$.R(1729, 'activity', activity, 0), 'Lap', 0), 'forEach', 0)(J$.T(3617, function (lap) {
                                                                    jalangiLabel51:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(3537, arguments.callee, this, arguments);
                                                                                arguments = J$.N(3545, 'arguments', arguments, 4);
                                                                                lap = J$.N(3553, 'lap', lap, 4);
                                                                                J$.N(3561, 'valid', valid, 0);
                                                                                J$.N(3569, 'lasttime', lasttime, 0);
                                                                                J$.N(3577, 'lastdistance', lastdistance, 0);
                                                                                J$.N(3585, 'currenttime', currenttime, 0);
                                                                                J$.N(3593, 'currentdistance', currentdistance, 0);
                                                                                J$.N(3601, 'lapsumscale', lapsumscale, 0);
                                                                                J$.N(3609, 'lapnumpoints', lapnumpoints, 0);
                                                                                var valid = J$.X1(1777, J$.W(1769, 'valid', J$.T(1745, false, 23, false), valid, 1)), lasttime, lastdistance, currenttime, currentdistance, lapsumscale = J$.X1(1793, J$.W(1785, 'lapsumscale', J$.T(1753, 0, 22, false), lapsumscale, 1)), lapnumpoints = J$.X1(1809, J$.W(1801, 'lapnumpoints', J$.T(1761, 0, 22, false), lapnumpoints, 1));
                                                                                J$.X1(3209, J$.M(3201, J$.G(1849, J$.G(1841, J$.G(1825, J$.R(1817, 'lap', lap, 0), 'Track', 0), J$.T(1833, 0, 22, false), 4), 'Trackpoint', 0), 'forEach', 0)(J$.T(3193, function (point) {
                                                                                    jalangiLabel50:
                                                                                        while (true) {
                                                                                            try {
                                                                                                J$.Fe(3113, arguments.callee, this, arguments);
                                                                                                arguments = J$.N(3121, 'arguments', arguments, 4);
                                                                                                point = J$.N(3129, 'point', point, 4);
                                                                                                J$.N(3137, 'seconds', seconds, 0);
                                                                                                J$.N(3145, 'distance', distance, 0);
                                                                                                J$.N(3153, 'gpsSpeed', gpsSpeed, 0);
                                                                                                J$.N(3161, 'footpodspeedMPS', footpodspeedMPS, 0);
                                                                                                J$.N(3169, 'footpoddistance', footpoddistance, 0);
                                                                                                J$.N(3177, 'scale', scale, 0);
                                                                                                J$.N(3185, 'pos', pos, 0);
                                                                                                if (J$.X1(4505, J$.C(176, J$.C(128, J$.C(120, J$.C(112, J$.C(104, J$.C(96, J$.C(88, J$.G(1865, J$.R(1857, 'point', point, 0), 'Extensions', 0)) ? J$.G(1889, J$.G(1881, J$.R(1873, 'point', point, 0), 'Extensions', 0), 'length', 0) : J$._()) ? J$.G(1921, J$.G(1905, J$.R(1897, 'point', point, 0), 'Extensions', 0), J$.T(1913, 0, 22, false), 4) : J$._()) ? J$.G(1961, J$.G(1953, J$.G(1937, J$.R(1929, 'point', point, 0), 'Extensions', 0), J$.T(1945, 0, 22, false), 4), 'TPX', 0) : J$._()) ? J$.G(2009, J$.G(2001, J$.G(1993, J$.G(1977, J$.R(1969, 'point', point, 0), 'Extensions', 0), J$.T(1985, 0, 22, false), 4), 'TPX', 0), 'length', 0) : J$._()) ? J$.G(2073, J$.G(2065, J$.G(2049, J$.G(2041, J$.G(2025, J$.R(2017, 'point', point, 0), 'Extensions', 0), J$.T(2033, 0, 22, false), 4), 'TPX', 0), J$.T(2057, 0, 22, false), 4), 'Speed', 0) : J$._()) ? J$.G(2137, J$.G(2129, J$.G(2113, J$.G(2105, J$.G(2089, J$.R(2081, 'point', point, 0), 'Extensions', 0), J$.T(2097, 0, 22, false), 4), 'TPX', 0), J$.T(2121, 0, 22, false), 4), 'RunCadence', 0) : J$._()))) {
                                                                                                    if (J$.X1(4497, J$.C(168, J$.R(2145, 'valid', valid, 0)))) {
                                                                                                        J$.X1(2217, currenttime = J$.W(2209, 'currenttime', J$.M(2201, J$.F(2193, J$.R(2153, 'Date', Date, 2), 1)(J$.G(2185, J$.G(2169, J$.R(2161, 'point', point, 0), 'Time', 0), J$.T(2177, 0, 22, false), 4)), 'getTime', 0)(), currenttime, 0));
                                                                                                        var seconds = J$.X1(2257, J$.W(2249, 'seconds', J$.B(82, '/', J$.B(74, '-', J$.R(2225, 'currenttime', currenttime, 0), J$.R(2233, 'lasttime', lasttime, 0), 0), J$.T(2241, 1000, 22, false), 0), seconds, 1));
                                                                                                        J$.X1(2305, currentdistance = J$.W(2297, 'currentdistance', J$.G(2289, J$.G(2273, J$.R(2265, 'point', point, 0), 'DistanceMeters', 0), J$.T(2281, 0, 22, false), 4), currentdistance, 0));
                                                                                                        var distance = J$.X1(2337, J$.W(2329, 'distance', J$.B(90, '-', J$.R(2313, 'currentdistance', currentdistance, 0), J$.R(2321, 'lastdistance', lastdistance, 0), 0), distance, 1));
                                                                                                        if (J$.X1(4489, J$.C(160, J$.C(136, J$.B(98, '>', J$.R(2345, 'seconds', seconds, 0), J$.T(2353, 0, 22, false), 0)) ? J$.B(106, '>', J$.R(2361, 'distance', distance, 0), J$.T(2369, 0, 22, false), 0) : J$._()))) {
                                                                                                            var gpsSpeed = J$.X1(2401, J$.W(2393, 'gpsSpeed', J$.B(114, '/', J$.R(2377, 'distance', distance, 0), J$.R(2385, 'seconds', seconds, 0), 0), gpsSpeed, 1));
                                                                                                            var footpodspeedMPS = J$.X1(2481, J$.W(2473, 'footpodspeedMPS', J$.G(2465, J$.G(2457, J$.G(2441, J$.G(2433, J$.G(2417, J$.R(2409, 'point', point, 0), 'Extensions', 0), J$.T(2425, 0, 22, false), 4), 'TPX', 0), J$.T(2449, 0, 22, false), 4), 'Speed', 0), footpodspeedMPS, 1));
                                                                                                            if (J$.X1(4481, J$.C(152, J$.B(122, '>', J$.R(2489, 'footpodspeedMPS', footpodspeedMPS, 0), J$.T(2497, 0, 22, false), 0)))) {
                                                                                                                var footpoddistance = J$.X1(2545, J$.W(2537, 'footpoddistance', J$.B(130, '*', J$.R(2505, 'footpodspeedMPS', footpodspeedMPS, 0), J$.R(2513, 'seconds', seconds, 0), 0), footpoddistance, 1)), scale = J$.X1(2561, J$.W(2553, 'scale', J$.B(138, '/', J$.R(2521, 'distance', distance, 0), J$.R(2529, 'footpoddistance', footpoddistance, 0), 0), scale, 1));
                                                                                                                J$.X1(2593, sumscale = J$.W(2585, 'sumscale', J$.B(146, '+', J$.R(2577, 'sumscale', sumscale, 0), J$.R(2569, 'scale', scale, 0), 0), sumscale, 0));
                                                                                                                J$.X1(2633, J$.B(170, '-', numpoints = J$.W(2617, 'numpoints', J$.B(162, '+', J$.U(154, '+', J$.R(2609, 'numpoints', numpoints, 0)), J$.T(2601, 1, 22, false), 0), numpoints, 0), J$.T(2625, 1, 22, false), 0));
                                                                                                                J$.X1(2665, lapsumscale = J$.W(2657, 'lapsumscale', J$.B(178, '+', J$.R(2649, 'lapsumscale', lapsumscale, 0), J$.R(2641, 'scale', scale, 0), 0), lapsumscale, 0));
                                                                                                                J$.X1(2705, J$.B(202, '-', lapnumpoints = J$.W(2689, 'lapnumpoints', J$.B(194, '+', J$.U(186, '+', J$.R(2681, 'lapnumpoints', lapnumpoints, 0)), J$.T(2673, 1, 22, false), 0), lapnumpoints, 0), J$.T(2697, 1, 22, false), 0));
                                                                                                                J$.X1(2745, J$.M(2737, J$.G(2721, J$.R(2713, 'lapdata', lapdata, 0), 'gpsdistance', 0), 'push', 0)(J$.R(2729, 'distance', distance, 0)));
                                                                                                                J$.X1(2785, J$.M(2777, J$.G(2761, J$.R(2753, 'lapdata', lapdata, 0), 'footpoddistance', 0), 'push', 0)(J$.R(2769, 'footpoddistance', footpoddistance, 0)));
                                                                                                                J$.X1(2825, J$.M(2817, J$.G(2801, J$.R(2793, 'lapdata', lapdata, 0), 'scale', 0), 'push', 0)(J$.R(2809, 'scale', scale, 0)));
                                                                                                                J$.X1(2865, J$.M(2857, J$.G(2841, J$.R(2833, 'lapdata', lapdata, 0), 'time', 0), 'push', 0)(J$.R(2849, 'currenttime', currenttime, 0)));
                                                                                                                if (J$.X1(4473, J$.C(144, J$.G(2881, J$.R(2873, 'point', point, 0), 'Position', 0)))) {
                                                                                                                    var pos = J$.X1(2929, J$.W(2921, 'pos', J$.G(2913, J$.G(2897, J$.R(2889, 'point', point, 0), 'Position', 0), J$.T(2905, 0, 22, false), 4), pos, 1));
                                                                                                                    J$.X1(3033, J$.M(3025, J$.G(2945, J$.R(2937, 'lapdata', lapdata, 0), 'gps', 0), 'push', 0)(J$.T(3017, [
                                                                                                                        J$.G(2977, J$.G(2961, J$.R(2953, 'pos', pos, 0), 'LatitudeDegrees', 0), J$.T(2969, 0, 22, false), 4),
                                                                                                                        J$.G(3009, J$.G(2993, J$.R(2985, 'pos', pos, 0), 'LongitudeDegrees', 0), J$.T(3001, 0, 22, false), 4)
                                                                                                                    ], 10, false)));
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                    J$.X1(3057, lasttime = J$.W(3049, 'lasttime', J$.R(3041, 'currenttime', currenttime, 0), lasttime, 0));
                                                                                                    J$.X1(3081, lastdistance = J$.W(3073, 'lastdistance', J$.R(3065, 'currentdistance', currentdistance, 0), lastdistance, 0));
                                                                                                    J$.X1(3105, valid = J$.W(3097, 'valid', J$.T(3089, true, 23, false), valid, 0));
                                                                                                }
                                                                                            } catch (J$e) {
                                                                                                J$.Ex(4513, J$e);
                                                                                            } finally {
                                                                                                if (J$.Fr(4521))
                                                                                                    continue jalangiLabel50;
                                                                                                else
                                                                                                    return J$.Ra();
                                                                                            }
                                                                                        }
                                                                                }, 12, false, 3113)));
                                                                                if (J$.X1(4529, J$.C(184, J$.B(210, '>', J$.R(3217, 'lapnumpoints', lapnumpoints, 0), J$.T(3225, 0, 22, false), 0)))) {
                                                                                    J$.X1(3265, J$.M(3257, J$.R(3233, 'lapscale', lapscale, 0), 'push', 0)(J$.B(218, '/', J$.R(3241, 'lapsumscale', lapsumscale, 0), J$.R(3249, 'lapnumpoints', lapnumpoints, 0), 0)));
                                                                                    J$.X1(3329, J$.M(3321, J$.R(3273, 'lapdistance', lapdistance, 0), 'push', 0)(J$.B(226, '*', J$.G(3305, J$.G(3289, J$.R(3281, 'lap', lap, 0), 'DistanceMeters', 0), J$.T(3297, 0, 22, false), 4), J$.T(3313, 0.000621371, 22, false), 0)));
                                                                                    J$.X1(3393, totalDistance = J$.W(3385, 'totalDistance', J$.B(242, '+', J$.R(3377, 'totalDistance', totalDistance, 0), J$.G(3369, J$.R(3337, 'lapdistance', lapdistance, 0), J$.B(234, '-', J$.G(3353, J$.R(3345, 'lapdistance', lapdistance, 0), 'length', 0), J$.T(3361, 1, 22, false), 0), 4), 0), totalDistance, 0));
                                                                                    J$.X1(3433, perlap_sumscale = J$.W(3425, 'perlap_sumscale', J$.B(258, '+', J$.R(3417, 'perlap_sumscale', perlap_sumscale, 0), J$.B(250, '/', J$.R(3401, 'lapsumscale', lapsumscale, 0), J$.R(3409, 'lapnumpoints', lapnumpoints, 0), 0), 0), perlap_sumscale, 0));
                                                                                    J$.X1(3473, J$.B(282, '-', perlap_numpoints = J$.W(3457, 'perlap_numpoints', J$.B(274, '+', J$.U(266, '+', J$.R(3449, 'perlap_numpoints', perlap_numpoints, 0)), J$.T(3441, 1, 22, false), 0), perlap_numpoints, 0), J$.T(3465, 1, 22, false), 0));
                                                                                    J$.X1(3529, J$.M(3521, J$.G(3489, J$.R(3481, 'lapdata', lapdata, 0), 'lapindex', 0), 'push', 0)(J$.G(3513, J$.G(3505, J$.R(3497, 'lapdata', lapdata, 0), 'gps', 0), 'length', 0)));
                                                                                }
                                                                            } catch (J$e) {
                                                                                J$.Ex(4537, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(4545))
                                                                                    continue jalangiLabel51;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }, 12, false, 3537)));
                                                            } catch (J$e) {
                                                                J$.Ex(4553, J$e);
                                                            } finally {
                                                                if (J$.Fr(4561))
                                                                    continue jalangiLabel52;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 3641)));
                                                var stddev = J$.X1(3841, J$.W(3833, 'stddev', J$.F(3713, J$.R(3689, 'stdev', stdev, 1), 0)(J$.G(3705, J$.R(3697, 'lapdata', lapdata, 0), 'scale', 0)), stddev, 1)), rating = J$.X1(3857, J$.W(3849, 'rating', J$.M(3737, J$.R(3721, 'me', me, 0), 'GetRating', 0)(J$.R(3729, 'stddev', stddev, 0)), rating, 1)), retObj = J$.X1(3873, J$.W(3865, 'retObj', J$.T(3825, {
                                                        adjustment: J$.B(290, '/', J$.R(3745, 'sumscale', sumscale, 0), J$.R(3753, 'numpoints', numpoints, 0), 0),
                                                        consistency: J$.R(3761, 'rating', rating, 0),
                                                        stdev: J$.R(3769, 'stddev', stddev, 0),
                                                        lapscale: J$.R(3777, 'lapscale', lapscale, 0),
                                                        totalDistance: J$.R(3785, 'totalDistance', totalDistance, 0),
                                                        scaleLap: J$.B(298, '/', J$.R(3793, 'perlap_sumscale', perlap_sumscale, 0), J$.R(3801, 'perlap_numpoints', perlap_numpoints, 0), 0),
                                                        lapDistance: J$.R(3809, 'lapdistance', lapdistance, 0),
                                                        lapdata: J$.R(3817, 'lapdata', lapdata, 0)
                                                    }, 11, false), retObj, 1));
                                                return J$.X1(3897, J$.Rt(3889, J$.R(3881, 'retObj', retObj, 0)));
                                            } catch (J$e) {
                                                J$.Ex(4569, J$e);
                                            } finally {
                                                if (J$.Fr(4577))
                                                    continue jalangiLabel53;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 3905)
                            }, 11, false), ret, 1));
                            var parseTSX = J$.X1(4081, J$.W(4073, 'parseTSX', J$.T(4065, function () {
                                jalangiLabel54:
                                    while (true) {
                                        try {
                                            J$.Fe(4049, arguments.callee, this, arguments);
                                            arguments = J$.N(4057, 'arguments', arguments, 4);
                                        } catch (J$e) {
                                            J$.Ex(4585, J$e);
                                        } finally {
                                            if (J$.Fr(4593))
                                                continue jalangiLabel54;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 4049), parseTSX, 1));
                            J$.X1(4113, J$.P(4105, J$.R(4089, 'parseTSX', parseTSX, 0), 'prototype', J$.R(4097, 'ret', ret, 0), 0));
                            return J$.X1(4145, J$.Rt(4137, J$.F(4129, J$.R(4121, 'parseTSX', parseTSX, 0), 1)()));
                        } catch (J$e) {
                            J$.Ex(4601, J$e);
                        } finally {
                            if (J$.Fr(4609))
                                continue jalangiLabel55;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4153), 0)(), 0));
        } catch (J$e) {
            J$.Ex(4617, J$e);
        } finally {
            if (J$.Sr(4625)) {
                J$.L();
                continue jalangiLabel56;
            } else {
                J$.L();
                break jalangiLabel56;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
