J$.iids = {"8":[19,10,19,49],"9":[1,20,1,27],"10":[20,14,20,22],"16":[20,42,20,50],"17":[1,28,1,32],"18":[20,42,20,50],"24":[20,14,20,22],"25":[1,20,1,33],"26":[23,9,23,33],"32":[22,24,22,54],"33":[1,20,1,33],"34":[26,16,26,35],"40":[26,16,26,59],"41":[1,20,1,33],"42":[26,39,26,59],"48":[26,16,26,86],"49":[2,26,2,38],"50":[26,63,26,86],"56":[26,16,26,116],"57":[2,26,2,45],"58":[26,90,26,116],"64":[23,9,23,33],"65":[2,26,2,45],"66":[29,15,29,40],"72":[29,15,29,40],"73":[2,26,2,45],"74":[43,19,43,33],"80":[41,9,41,18],"81":[3,11,3,18],"82":[43,19,43,41],"88":[53,9,53,27],"89":[3,19,3,24],"90":[43,19,43,48],"96":[69,13,69,51],"97":[3,11,3,25],"98":[43,19,43,54],"104":[69,13,69,51],"105":[3,11,3,25],"106":[43,19,43,66],"112":[89,13,89,51],"113":[3,11,3,25],"114":[43,19,43,76],"120":[89,13,89,51],"121":[4,12,4,19],"122":[43,19,43,87],"128":[65,13,65,41],"129":[4,20,4,26],"130":[43,19,43,91],"136":[66,10,66,15],"137":[4,12,4,27],"138":[43,19,43,97],"144":[73,10,73,16],"145":[4,12,4,27],"146":[43,19,43,104],"152":[78,10,78,16],"153":[4,12,4,27],"154":[43,19,43,134],"160":[79,10,79,15],"161":[5,11,5,17],"162":[43,19,43,146],"169":[5,28,5,35],"170":[45,19,45,49],"177":[5,36,5,45],"178":[45,19,45,56],"185":[5,28,5,46],"186":[45,19,45,62],"193":[5,11,5,46],"194":[45,19,45,72],"201":[5,11,5,46],"202":[50,25,50,66],"209":[5,1,5,47],"210":[53,9,53,27],"217":[6,1,6,8],"218":[54,9,54,33],"225":[6,15,6,18],"233":[6,1,6,18],"241":[6,1,6,19],"249":[7,1,7,8],"257":[7,22,7,32],"265":[7,1,7,32],"273":[7,1,7,33],"281":[8,1,8,8],"289":[8,16,8,20],"297":[8,1,8,20],"305":[8,1,8,21],"313":[9,1,9,8],"321":[9,16,9,20],"329":[9,1,9,20],"337":[9,1,9,21],"345":[10,1,10,8],"353":[10,21,10,30],"361":[10,1,10,30],"369":[10,1,10,31],"377":[11,1,11,8],"385":[12,5,12,6],"393":[13,5,13,6],"401":[14,5,14,6],"409":[15,5,15,6],"417":[16,5,16,6],"425":[17,5,17,6],"433":[11,18,18,2],"441":[11,1,18,2],"449":[11,1,18,3],"457":[19,10,19,18],"465":[19,19,19,26],"473":[19,19,19,30],"481":[19,19,19,39],"489":[19,41,19,43],"497":[19,10,19,44],"505":[19,48,19,49],"513":[19,10,19,49],"521":[19,10,19,49],"529":[20,14,20,15],"537":[20,20,20,22],"545":[20,25,20,32],"553":[20,25,20,39],"561":[20,42,20,43],"569":[20,48,20,50],"577":[20,53,20,60],"585":[20,53,20,67],"593":[20,70,20,95],"601":[20,96,20,98],"609":[20,70,20,99],"617":[20,14,20,99],"625":[20,14,20,99],"633":[22,24,22,31],"641":[22,24,22,35],"649":[22,24,22,48],"657":[22,52,22,54],"665":[22,23,22,62],"667":[22,23,22,60],"673":[22,23,22,76],"675":[22,23,22,74],"681":[22,23,22,76],"689":[22,23,22,76],"697":[23,9,23,10],"705":[23,15,23,26],"713":[23,15,23,33],"721":[24,16,24,19],"729":[24,27,24,29],"737":[24,16,24,30],"739":[24,16,24,26],"745":[24,16,24,30],"753":[24,9,24,31],"761":[26,16,26,19],"769":[26,24,26,35],"777":[26,39,26,43],"785":[26,48,26,59],"793":[26,63,26,70],"801":[26,75,26,86],"809":[26,90,26,100],"817":[26,105,26,116],"825":[26,16,26,116],"833":[26,9,26,117],"841":[21,1,28,2],"849":[21,1,28,2],"857":[21,1,28,2],"865":[29,15,29,16],"873":[29,21,29,25],"881":[29,21,29,33],"889":[29,21,29,40],"897":[30,12,30,16],"905":[30,25,30,26],"913":[30,33,30,34],"921":[30,41,30,42],"929":[30,44,30,50],"937":[30,12,30,51],"939":[30,12,30,24],"945":[30,12,30,51],"953":[30,5,30,52],"961":[29,43,31,2],"969":[29,43,31,2],"977":[29,43,31,2],"985":[29,43,31,2],"993":[29,43,31,2],"1001":[32,12,32,16],"1009":[32,25,32,26],"1017":[32,38,32,44],"1025":[32,28,32,46],"1033":[32,12,32,47],"1035":[32,12,32,24],"1041":[32,12,32,47],"1049":[32,5,32,48],"1057":[31,5,33,2],"1065":[31,5,33,2],"1073":[31,5,33,2],"1081":[31,5,33,2],"1089":[31,5,33,2],"1097":[29,15,33,2],"1105":[29,15,33,2],"1113":[34,1,34,8],"1121":[34,1,34,19],"1129":[35,12,35,19],"1137":[35,20,35,21],"1145":[35,23,35,27],"1153":[35,23,35,37],"1161":[35,12,35,38],"1169":[35,47,35,58],"1177":[35,60,35,63],"1185":[35,12,35,64],"1187":[35,12,35,46],"1193":[35,12,35,64],"1201":[35,5,35,65],"1209":[34,24,36,2],"1217":[34,24,36,2],"1225":[34,24,36,2],"1233":[34,24,36,2],"1241":[34,1,36,2],"1249":[34,1,36,3],"1257":[38,16,38,25],"1265":[38,16,38,25],"1273":[38,16,38,25],"1281":[39,21,39,25],"1289":[39,21,39,35],"1297":[39,21,39,35],"1305":[39,21,39,35],"1313":[40,16,40,20],"1321":[40,16,40,30],"1329":[40,16,40,30],"1337":[40,16,40,30],"1345":[41,9,41,18],"1353":[42,17,42,21],"1361":[42,17,42,27],"1369":[42,17,42,27],"1377":[42,17,42,27],"1385":[43,9,43,13],"1393":[43,14,43,15],"1401":[43,19,43,29],"1409":[43,32,43,33],"1417":[43,36,43,41],"1425":[43,44,43,48],"1433":[43,51,43,54],"1441":[43,57,43,66],"1449":[43,69,43,73],"1457":[43,74,43,75],"1465":[43,69,43,76],"1473":[43,79,43,87],"1481":[43,90,43,91],"1489":[43,94,43,97],"1497":[43,100,43,104],"1505":[43,107,43,114],"1513":[43,124,43,128],"1521":[43,124,43,133],"1529":[43,107,43,134],"1531":[43,107,43,123],"1537":[43,137,43,146],"1545":[43,9,43,146],"1553":[43,9,43,147],"1561":[45,9,45,13],"1569":[45,14,45,15],"1577":[45,23,45,27],"1585":[45,19,45,29],"1593":[45,19,45,43],"1595":[45,19,45,41],"1601":[45,46,45,49],"1609":[45,52,45,56],"1617":[45,59,45,62],"1625":[45,65,45,69],"1633":[45,70,45,71],"1641":[45,65,45,72],"1649":[45,9,45,72],"1657":[45,9,45,73],"1665":[47,12,47,16],"1673":[47,12,47,16],"1681":[47,5,47,17],"1689":[37,1,48,2],"1697":[37,1,48,2],"1705":[37,1,48,2],"1713":[37,1,48,2],"1721":[37,1,48,2],"1729":[37,1,48,2],"1737":[50,12,50,18],"1745":[50,25,50,29],"1753":[50,25,50,36],"1761":[50,43,50,47],"1769":[50,49,50,58],"1777":[50,25,50,59],"1779":[50,25,50,42],"1785":[50,62,50,66],"1793":[50,12,50,67],"1795":[50,12,50,24],"1801":[50,12,50,67],"1809":[50,5,50,68],"1817":[49,1,51,2],"1825":[49,1,51,2],"1833":[53,9,53,13],"1841":[53,17,53,27],"1849":[54,16,54,23],"1857":[54,16,54,27],"1865":[54,9,54,34],"1873":[56,9,56,16],"1881":[56,9,56,20],"1889":[56,29,56,39],"1897":[56,9,56,39],"1905":[56,9,56,40],"1913":[52,1,58,2],"1921":[52,1,58,2],"1929":[52,1,58,2],"1937":[60,12,60,19],"1945":[60,12,60,23],"1953":[60,12,60,29],"1961":[60,12,60,29],"1969":[60,5,60,30],"1977":[59,1,61,2],"1985":[59,1,61,2],"1993":[64,20,64,27],"2001":[64,36,64,46],"2009":[64,20,64,47],"2011":[64,20,64,35],"2017":[64,20,64,47],"2025":[64,20,64,47],"2033":[65,13,65,21],"2041":[65,38,65,40],"2049":[65,13,65,41],"2051":[65,13,65,37],"2057":[67,22,67,25],"2065":[67,38,67,40],"2073":[67,18,67,41],"2075":[67,22,67,37],"2081":[67,18,67,41],"2089":[67,9,67,42],"2097":[68,9,68,15],"2105":[68,24,68,29],"2113":[68,9,68,29],"2121":[68,9,68,30],"2129":[69,13,69,19],"2137":[69,13,69,27],"2145":[69,31,69,37],"2153":[69,31,69,45],"2161":[69,31,69,51],"2169":[70,13,70,19],"2177":[70,13,70,27],"2185":[70,13,70,35],"2187":[70,13,70,33],"2193":[70,13,70,36],"2201":[66,10,66,15],"2209":[74,18,74,25],"2217":[74,26,74,30],"2225":[74,18,74,31],"2233":[74,18,74,31],"2241":[74,18,74,31],"2249":[75,22,75,24],"2257":[75,41,75,43],"2265":[75,58,75,63],"2273":[75,45,75,65],"2281":[75,18,75,66],"2283":[75,22,75,40],"2289":[75,18,75,66],"2297":[75,9,75,67],"2305":[76,9,76,15],"2313":[76,24,76,28],"2321":[76,9,76,28],"2329":[76,9,76,29],"2337":[73,10,73,16],"2345":[78,10,78,16],"2353":[80,19,80,26],"2361":[80,27,80,32],"2369":[80,19,80,33],"2377":[80,19,80,33],"2385":[80,19,80,33],"2393":[81,22,81,25],"2401":[82,17,82,19],"2409":[83,23,83,28],"2417":[84,23,84,27],"2425":[81,33,85,10],"2433":[81,18,85,11],"2435":[81,22,81,32],"2441":[81,18,85,11],"2449":[81,9,85,12],"2457":[86,9,86,15],"2465":[86,27,86,32],"2473":[86,9,86,32],"2481":[86,9,86,33],"2489":[87,9,87,15],"2497":[87,23,87,27],"2505":[87,9,87,27],"2513":[87,9,87,28],"2521":[88,9,88,15],"2529":[88,24,88,30],"2537":[88,9,88,30],"2545":[88,9,88,31],"2553":[89,13,89,19],"2561":[89,13,89,27],"2569":[89,31,89,37],"2577":[89,31,89,45],"2585":[89,31,89,51],"2593":[90,13,90,19],"2601":[90,13,90,27],"2609":[90,13,90,35],"2611":[90,13,90,33],"2617":[90,13,90,36],"2625":[79,10,79,15],"2633":[94,19,94,24],"2641":[94,25,94,66],"2649":[94,15,94,67],"2657":[94,15,94,67],"2665":[94,9,94,68],"2673":[96,5,96,11],"2681":[96,17,96,19],"2689":[96,5,96,19],"2697":[96,5,96,20],"2705":[97,5,97,11],"2713":[97,23,97,27],"2721":[97,5,97,27],"2729":[97,5,97,28],"2737":[98,12,98,18],"2745":[98,12,98,18],"2753":[98,5,98,19],"2761":[62,1,99,2],"2769":[62,1,99,2],"2777":[62,1,99,2],"2785":[62,1,99,2],"2793":[62,1,99,2],"2801":[62,1,99,2],"2809":[62,1,99,2],"2817":[100,1,100,8],"2825":[100,16,100,20],"2833":[100,16,100,22],"2841":[100,1,100,23],"2843":[100,1,100,15],"2849":[100,1,100,24],"2857":[1,1,100,24],"2865":[1,1,100,24],"2873":[1,1,100,24],"2881":[1,1,100,24],"2889":[1,1,100,24],"2897":[1,1,100,24],"2905":[1,1,100,24],"2913":[21,1,28,2],"2921":[1,1,100,24],"2929":[1,1,100,24],"2937":[37,1,48,2],"2945":[1,1,100,24],"2953":[49,1,51,2],"2961":[1,1,100,24],"2969":[52,1,58,2],"2977":[1,1,100,24],"2985":[59,1,61,2],"2993":[1,1,100,24],"3001":[62,1,99,2],"3009":[1,1,100,24],"3017":[20,42,20,99],"3025":[20,14,20,99],"3033":[23,5,27,6],"3041":[21,1,28,2],"3049":[21,1,28,2],"3057":[29,43,31,2],"3065":[29,43,31,2],"3073":[31,5,33,2],"3081":[31,5,33,2],"3089":[29,15,33,2],"3097":[34,24,36,2],"3105":[34,24,36,2],"3113":[41,5,46,6],"3121":[37,1,48,2],"3129":[37,1,48,2],"3137":[49,1,51,2],"3145":[49,1,51,2],"3153":[53,5,57,6],"3161":[52,1,58,2],"3169":[52,1,58,2],"3177":[59,1,61,2],"3185":[59,1,61,2],"3193":[69,9,71,10],"3201":[89,9,91,10],"3209":[65,13,65,41],"3217":[66,10,66,15],"3225":[73,10,73,16],"3233":[78,10,78,16],"3241":[79,10,79,15],"3249":[62,1,99,2],"3257":[62,1,99,2],"3265":[1,1,100,24],"3273":[1,1,100,24],"nBranches":40,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/debug/node.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/debug/node_jalangi_.js","code":"\n/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  var debugColors = (process.env.DEBUG_COLORS || '').trim().toLowerCase();\n  if (0 === debugColors.length) {\n    return tty.isatty(fd);\n  } else {\n    return '0' !== debugColors\n        && 'no' !== debugColors\n        && 'false' !== debugColors\n        && 'disabled' !== debugColors;\n  }\n}\n\n/**\n * Map %o to `util.inspect()`, since Node doesn't do that out of the box.\n */\n\nvar inspect = (4 === util.inspect.length ?\n  // node <= 0.8.x\n  function (v, colors) {\n    return util.inspect(v, void 0, void 0, colors);\n  } :\n  // node > 0.8.x\n  function (v, colors) {\n    return util.inspect(v, { colors: colors });\n  }\n);\n\nexports.formatters.o = function(v) {\n  return inspect(v, this.useColors)\n    .replace(/\\s*\\n\\s*/g, ' ');\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n  var name = this.namespace;\n\n  if (useColors) {\n    var c = this.color;\n\n    args[0] = '  \\u001b[3' + c + ';1m' + name + ' '\n      + '\\u001b[0m'\n      + args[0] + '\\u001b[3' + c + 'm'\n      + ' +' + exports.humanize(this.diff) + '\\u001b[0m';\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n  return args;\n}\n\n/**\n * Invokes `console.error()` with the specified arguments.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(this, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n"};
jalangiLabel102:
    while (true) {
        try {
            J$.Se(2857, '/home/blake/ExpoSE/Targets/node-flarum/node_modules/debug/node_jalangi_.js', '/home/blake/ExpoSE/Targets/node-flarum/node_modules/debug/node.js');
            function useColors() {
                jalangiLabel93:
                    while (true) {
                        try {
                            J$.Fe(841, arguments.callee, this, arguments);
                            arguments = J$.N(849, 'arguments', arguments, 4);
                            J$.N(857, 'debugColors', debugColors, 0);
                            var debugColors = J$.X1(689, J$.W(681, 'debugColors', J$.M(673, J$.M(665, J$.C(32, J$.G(649, J$.G(641, J$.R(633, 'process', process, 2), 'env', 0), 'DEBUG_COLORS', 0)) ? J$._() : J$.T(657, '', 21, false), 'trim', 0)(), 'toLowerCase', 0)(), debugColors, 1));
                            if (J$.X1(3033, J$.C(64, J$.B(26, '===', J$.T(697, 0, 22, false), J$.G(713, J$.R(705, 'debugColors', debugColors, 0), 'length', 0), 0)))) {
                                return J$.X1(753, J$.Rt(745, J$.M(737, J$.R(721, 'tty', tty, 1), 'isatty', 0)(J$.R(729, 'fd', fd, 1))));
                            } else {
                                return J$.X1(833, J$.Rt(825, J$.C(56, J$.C(48, J$.C(40, J$.B(34, '!==', J$.T(761, '0', 21, false), J$.R(769, 'debugColors', debugColors, 0), 0)) ? J$.B(42, '!==', J$.T(777, 'no', 21, false), J$.R(785, 'debugColors', debugColors, 0), 0) : J$._()) ? J$.B(50, '!==', J$.T(793, 'false', 21, false), J$.R(801, 'debugColors', debugColors, 0), 0) : J$._()) ? J$.B(58, '!==', J$.T(809, 'disabled', 21, false), J$.R(817, 'debugColors', debugColors, 0), 0) : J$._()));
                            }
                        } catch (J$e) {
                            J$.Ex(3041, J$e);
                        } finally {
                            if (J$.Fr(3049))
                                continue jalangiLabel93;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function formatArgs() {
                jalangiLabel97:
                    while (true) {
                        try {
                            J$.Fe(1689, arguments.callee, this, arguments);
                            arguments = J$.N(1697, 'arguments', arguments, 4);
                            J$.N(1705, 'args', args, 0);
                            J$.N(1713, 'useColors', useColors, 0);
                            J$.N(1721, 'name', name, 0);
                            J$.N(1729, 'c', c, 0);
                            var args = J$.X1(1273, J$.W(1265, 'args', J$.R(1257, 'arguments', arguments, 2), args, 1));
                            var useColors = J$.X1(1305, J$.W(1297, 'useColors', J$.G(1289, J$.R(1281, 'this', this, 0), 'useColors', 0), useColors, 1));
                            var name = J$.X1(1337, J$.W(1329, 'name', J$.G(1321, J$.R(1313, 'this', this, 0), 'namespace', 0), name, 1));
                            if (J$.X1(3113, J$.C(80, J$.R(1345, 'useColors', useColors, 0)))) {
                                var c = J$.X1(1377, J$.W(1369, 'c', J$.G(1361, J$.R(1353, 'this', this, 0), 'color', 0), c, 1));
                                J$.X1(1553, J$.P(1545, J$.R(1385, 'args', args, 0), J$.T(1393, 0, 22, false), J$.B(162, '+', J$.B(154, '+', J$.B(146, '+', J$.B(138, '+', J$.B(130, '+', J$.B(122, '+', J$.B(114, '+', J$.B(106, '+', J$.B(98, '+', J$.B(90, '+', J$.B(82, '+', J$.B(74, '+', J$.T(1401, '  \x1B[3', 21, false), J$.R(1409, 'c', c, 0), 0), J$.T(1417, ';1m', 21, false), 0), J$.R(1425, 'name', name, 0), 0), J$.T(1433, ' ', 21, false), 0), J$.T(1441, '\x1B[0m', 21, false), 0), J$.G(1465, J$.R(1449, 'args', args, 0), J$.T(1457, 0, 22, false), 4), 0), J$.T(1473, '\x1B[3', 21, false), 0), J$.R(1481, 'c', c, 0), 0), J$.T(1489, 'm', 21, false), 0), J$.T(1497, ' +', 21, false), 0), J$.M(1529, J$.R(1505, 'exports', exports, 2), 'humanize', 0)(J$.G(1521, J$.R(1513, 'this', this, 0), 'diff', 0)), 0), J$.T(1537, '\x1B[0m', 21, false), 0), 2));
                            } else {
                                J$.X1(1657, J$.P(1649, J$.R(1561, 'args', args, 0), J$.T(1569, 0, 22, false), J$.B(194, '+', J$.B(186, '+', J$.B(178, '+', J$.B(170, '+', J$.M(1593, J$.F(1585, J$.R(1577, 'Date', Date, 2), 1)(), 'toUTCString', 0)(), J$.T(1601, ' ', 21, false), 0), J$.R(1609, 'name', name, 0), 0), J$.T(1617, ' ', 21, false), 0), J$.G(1641, J$.R(1625, 'args', args, 0), J$.T(1633, 0, 22, false), 4), 0), 2));
                            }
                            return J$.X1(1681, J$.Rt(1673, J$.R(1665, 'args', args, 0)));
                        } catch (J$e) {
                            J$.Ex(3121, J$e);
                        } finally {
                            if (J$.Fr(3129))
                                continue jalangiLabel97;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function log() {
                jalangiLabel98:
                    while (true) {
                        try {
                            J$.Fe(1817, arguments.callee, this, arguments);
                            arguments = J$.N(1825, 'arguments', arguments, 4);
                            return J$.X1(1809, J$.Rt(1801, J$.M(1793, J$.R(1737, 'stream', stream, 1), 'write', 0)(J$.B(202, '+', J$.M(1777, J$.G(1753, J$.R(1745, 'util', util, 1), 'format', 0), 'apply', 0)(J$.R(1761, 'this', this, 0), J$.R(1769, 'arguments', arguments, 2)), J$.T(1785, '\n', 21, false), 0))));
                        } catch (J$e) {
                            J$.Ex(3137, J$e);
                        } finally {
                            if (J$.Fr(3145))
                                continue jalangiLabel98;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function save(namespaces) {
                jalangiLabel99:
                    while (true) {
                        try {
                            J$.Fe(1913, arguments.callee, this, arguments);
                            arguments = J$.N(1921, 'arguments', arguments, 4);
                            namespaces = J$.N(1929, 'namespaces', namespaces, 4);
                            if (J$.X1(3153, J$.C(88, J$.B(210, '==', J$.T(1833, null, 25, false), J$.R(1841, 'namespaces', namespaces, 0), 0)))) {
                                J$.X1(1865, J$.B(218, 'delete', J$.G(1857, J$.R(1849, 'process', process, 2), 'env', 0), 'DEBUG', 0));
                            } else {
                                J$.X1(1905, J$.P(1897, J$.G(1881, J$.R(1873, 'process', process, 2), 'env', 0), 'DEBUG', J$.R(1889, 'namespaces', namespaces, 0), 0));
                            }
                        } catch (J$e) {
                            J$.Ex(3161, J$e);
                        } finally {
                            if (J$.Fr(3169))
                                continue jalangiLabel99;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function load() {
                jalangiLabel100:
                    while (true) {
                        try {
                            J$.Fe(1977, arguments.callee, this, arguments);
                            arguments = J$.N(1985, 'arguments', arguments, 4);
                            return J$.X1(1969, J$.Rt(1961, J$.G(1953, J$.G(1945, J$.R(1937, 'process', process, 2), 'env', 0), 'DEBUG', 0)));
                        } catch (J$e) {
                            J$.Ex(3177, J$e);
                        } finally {
                            if (J$.Fr(3185))
                                continue jalangiLabel100;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function createWritableStdioStream(fd) {
                jalangiLabel101:
                    while (true) {
                        try {
                            J$.Fe(2761, arguments.callee, this, arguments);
                            arguments = J$.N(2769, 'arguments', arguments, 4);
                            fd = J$.N(2777, 'fd', fd, 4);
                            J$.N(2785, 'stream', stream, 0);
                            J$.N(2793, 'tty_wrap', tty_wrap, 0);
                            J$.N(2801, 'fs', fs, 0);
                            J$.N(2809, 'net', net, 0);
                            var stream;
                            var tty_wrap = J$.X1(2025, J$.W(2017, 'tty_wrap', J$.M(2009, J$.R(1993, 'process', process, 2), 'binding', 0)(J$.T(2001, 'tty_wrap', 21, false)), tty_wrap, 1));
                            switch (J$.X1(3209, J$.C1(128, J$.M(2049, J$.R(2033, 'tty_wrap', tty_wrap, 0), 'guessHandleType', 0)(J$.R(2041, 'fd', fd, 0))))) {
                            case J$.X1(3217, J$.C2(136, J$.T(2201, 'TTY', 21, false))):
                                J$.X1(2089, stream = J$.W(2081, 'stream', J$.M(2073, J$.R(2057, 'tty', tty, 1), 'WriteStream', 2)(J$.R(2065, 'fd', fd, 0)), stream, 0));
                                J$.X1(2121, J$.P(2113, J$.R(2097, 'stream', stream, 0), '_type', J$.T(2105, 'tty', 21, false), 0));
                                if (J$.X1(3193, J$.C(104, J$.C(96, J$.G(2137, J$.R(2129, 'stream', stream, 0), '_handle', 0)) ? J$.G(2161, J$.G(2153, J$.R(2145, 'stream', stream, 0), '_handle', 0), 'unref', 0) : J$._()))) {
                                    J$.X1(2193, J$.M(2185, J$.G(2177, J$.R(2169, 'stream', stream, 0), '_handle', 0), 'unref', 0)());
                                }
                                break;
                            case J$.X1(3225, J$.C2(144, J$.T(2337, 'FILE', 21, false))):
                                var fs = J$.X1(2241, J$.W(2233, 'fs', J$.F(2225, J$.R(2209, 'require', require, 2), 0)(J$.T(2217, 'fs', 21, false)), fs, 1));
                                J$.X1(2297, stream = J$.W(2289, 'stream', J$.M(2281, J$.R(2249, 'fs', fs, 0), 'SyncWriteStream', 2)(J$.R(2257, 'fd', fd, 0), J$.T(2273, {
                                    autoClose: J$.T(2265, false, 23, false)
                                }, 11, false)), stream, 0));
                                J$.X1(2329, J$.P(2321, J$.R(2305, 'stream', stream, 0), '_type', J$.T(2313, 'fs', 21, false), 0));
                                break;
                            case J$.X1(3233, J$.C2(152, J$.T(2345, 'PIPE', 21, false))):
                            case J$.X1(3241, J$.C2(160, J$.T(2625, 'TCP', 21, false))):
                                var net = J$.X1(2385, J$.W(2377, 'net', J$.F(2369, J$.R(2353, 'require', require, 2), 0)(J$.T(2361, 'net', 21, false)), net, 1));
                                J$.X1(2449, stream = J$.W(2441, 'stream', J$.M(2433, J$.R(2393, 'net', net, 0), 'Socket', 2)(J$.T(2425, {
                                    fd: J$.R(2401, 'fd', fd, 0),
                                    readable: J$.T(2409, false, 23, false),
                                    writable: J$.T(2417, true, 23, false)
                                }, 11, false)), stream, 0));
                                J$.X1(2481, J$.P(2473, J$.R(2457, 'stream', stream, 0), 'readable', J$.T(2465, false, 23, false), 0));
                                J$.X1(2513, J$.P(2505, J$.R(2489, 'stream', stream, 0), 'read', J$.T(2497, null, 25, false), 0));
                                J$.X1(2545, J$.P(2537, J$.R(2521, 'stream', stream, 0), '_type', J$.T(2529, 'pipe', 21, false), 0));
                                if (J$.X1(3201, J$.C(120, J$.C(112, J$.G(2561, J$.R(2553, 'stream', stream, 0), '_handle', 0)) ? J$.G(2585, J$.G(2577, J$.R(2569, 'stream', stream, 0), '_handle', 0), 'unref', 0) : J$._()))) {
                                    J$.X1(2617, J$.M(2609, J$.G(2601, J$.R(2593, 'stream', stream, 0), '_handle', 0), 'unref', 0)());
                                }
                                break;
                            default:
                                throw J$.X1(2665, J$.Th(2657, J$.F(2649, J$.R(2633, 'Error', Error, 2), 1)(J$.T(2641, 'Implement me. Unknown stream file type!', 21, false))));
                            }
                            J$.X1(2697, J$.P(2689, J$.R(2673, 'stream', stream, 0), 'fd', J$.R(2681, 'fd', fd, 0), 0));
                            J$.X1(2729, J$.P(2721, J$.R(2705, 'stream', stream, 0), '_isStdio', J$.T(2713, true, 23, false), 0));
                            return J$.X1(2753, J$.Rt(2745, J$.R(2737, 'stream', stream, 0)));
                        } catch (J$e) {
                            J$.Ex(3249, J$e);
                        } finally {
                            if (J$.Fr(3257))
                                continue jalangiLabel101;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2865, '__secret__S$', __secret__S$, 0);
            J$.N(2873, '__secret__traits__', __secret__traits__, 0);
            J$.N(2881, 'tty', tty, 0);
            J$.N(2889, 'util', util, 0);
            J$.N(2897, 'fd', fd, 0);
            J$.N(2905, 'stream', stream, 0);
            useColors = J$.N(2921, 'useColors', J$.T(2913, useColors, 12, false, 841), 0);
            J$.N(2929, 'inspect', inspect, 0);
            formatArgs = J$.N(2945, 'formatArgs', J$.T(2937, formatArgs, 12, false, 1689), 0);
            log = J$.N(2961, 'log', J$.T(2953, log, 12, false, 1817), 0);
            save = J$.N(2977, 'save', J$.T(2969, save, 12, false, 1913), 0);
            load = J$.N(2993, 'load', J$.T(2985, load, 12, false, 1977), 0);
            createWritableStdioStream = J$.N(3009, 'createWritableStdioStream', J$.T(3001, createWritableStdioStream, 12, false, 2761), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var tty = J$.X1(113, J$.W(105, 'tty', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, 'tty', 21, false)), tty, 3));
            var util = J$.X1(153, J$.W(145, 'util', J$.F(137, J$.R(121, 'require', require, 2), 0)(J$.T(129, 'util', 21, false)), util, 3));
            J$.X1(209, exports = J$.W(201, 'exports', J$.P(193, J$.R(161, 'module', module, 2), 'exports', J$.F(185, J$.R(169, 'require', require, 2), 0)(J$.T(177, './debug', 21, false)), 0), J$.I(typeof exports === 'undefined' ? undefined : exports), 4));
            J$.X1(241, J$.P(233, J$.R(217, 'exports', exports, 2), 'log', J$.R(225, 'log', log, 1), 0));
            J$.X1(273, J$.P(265, J$.R(249, 'exports', exports, 2), 'formatArgs', J$.R(257, 'formatArgs', formatArgs, 1), 0));
            J$.X1(305, J$.P(297, J$.R(281, 'exports', exports, 2), 'save', J$.R(289, 'save', save, 1), 0));
            J$.X1(337, J$.P(329, J$.R(313, 'exports', exports, 2), 'load', J$.R(321, 'load', load, 1), 0));
            J$.X1(369, J$.P(361, J$.R(345, 'exports', exports, 2), 'useColors', J$.R(353, 'useColors', useColors, 1), 0));
            J$.X1(449, J$.P(441, J$.R(377, 'exports', exports, 2), 'colors', J$.T(433, [
                J$.T(385, 6, 22, false),
                J$.T(393, 2, 22, false),
                J$.T(401, 3, 22, false),
                J$.T(409, 4, 22, false),
                J$.T(417, 5, 22, false),
                J$.T(425, 1, 22, false)
            ], 10, false), 0));
            var fd = J$.X1(521, J$.W(513, 'fd', J$.C(8, J$.F(497, J$.R(457, 'parseInt', parseInt, 2), 0)(J$.G(481, J$.G(473, J$.R(465, 'process', process, 2), 'env', 0), 'DEBUG_FD', 0), J$.T(489, 10, 22, false))) ? J$._() : J$.T(505, 2, 22, false), fd, 3));
            var stream = J$.X1(625, J$.W(617, 'stream', J$.X1(3025, J$.C(24, J$.B(10, '===', J$.T(529, 1, 22, false), J$.R(537, 'fd', fd, 1), 0))) ? J$.G(553, J$.R(545, 'process', process, 2), 'stdout', 0) : J$.X1(3017, J$.C(16, J$.B(18, '===', J$.T(561, 2, 22, false), J$.R(569, 'fd', fd, 1), 0))) ? J$.G(585, J$.R(577, 'process', process, 2), 'stderr', 0) : J$.F(609, J$.R(593, 'createWritableStdioStream', createWritableStdioStream, 1), 0)(J$.R(601, 'fd', fd, 1)), stream, 3));
            var inspect = J$.X1(1105, J$.W(1097, 'inspect', J$.X1(3089, J$.C(72, J$.B(66, '===', J$.T(865, 4, 22, false), J$.G(889, J$.G(881, J$.R(873, 'util', util, 1), 'inspect', 0), 'length', 0), 0))) ? J$.T(993, function (v, colors) {
                jalangiLabel94:
                    while (true) {
                        try {
                            J$.Fe(961, arguments.callee, this, arguments);
                            arguments = J$.N(969, 'arguments', arguments, 4);
                            v = J$.N(977, 'v', v, 4);
                            colors = J$.N(985, 'colors', colors, 4);
                            return J$.X1(953, J$.Rt(945, J$.M(937, J$.R(897, 'util', util, 1), 'inspect', 0)(J$.R(905, 'v', v, 0), void J$.T(913, 0, 22, false), void J$.T(921, 0, 22, false), J$.R(929, 'colors', colors, 0))));
                        } catch (J$e) {
                            J$.Ex(3057, J$e);
                        } finally {
                            if (J$.Fr(3065))
                                continue jalangiLabel94;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 961) : J$.T(1089, function (v, colors) {
                jalangiLabel95:
                    while (true) {
                        try {
                            J$.Fe(1057, arguments.callee, this, arguments);
                            arguments = J$.N(1065, 'arguments', arguments, 4);
                            v = J$.N(1073, 'v', v, 4);
                            colors = J$.N(1081, 'colors', colors, 4);
                            return J$.X1(1049, J$.Rt(1041, J$.M(1033, J$.R(1001, 'util', util, 1), 'inspect', 0)(J$.R(1009, 'v', v, 0), J$.T(1025, {
                                colors: J$.R(1017, 'colors', colors, 0)
                            }, 11, false))));
                        } catch (J$e) {
                            J$.Ex(3073, J$e);
                        } finally {
                            if (J$.Fr(3081))
                                continue jalangiLabel95;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1057), inspect, 3));
            J$.X1(1249, J$.P(1241, J$.G(1121, J$.R(1113, 'exports', exports, 2), 'formatters', 0), 'o', J$.T(1233, function (v) {
                jalangiLabel96:
                    while (true) {
                        try {
                            J$.Fe(1209, arguments.callee, this, arguments);
                            arguments = J$.N(1217, 'arguments', arguments, 4);
                            v = J$.N(1225, 'v', v, 4);
                            return J$.X1(1201, J$.Rt(1193, J$.M(1185, J$.F(1161, J$.R(1129, 'inspect', inspect, 1), 0)(J$.R(1137, 'v', v, 0), J$.G(1153, J$.R(1145, 'this', this, 0), 'useColors', 0)), 'replace', 0)(J$.T(1169, /\s*\n\s*/g, 14, false), J$.T(1177, ' ', 21, false))));
                        } catch (J$e) {
                            J$.Ex(3097, J$e);
                        } finally {
                            if (J$.Fr(3105))
                                continue jalangiLabel96;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1209), 0));
            J$.X1(2849, J$.M(2841, J$.R(2817, 'exports', exports, 2), 'enable', 0)(J$.F(2833, J$.R(2825, 'load', load, 1), 0)()));
        } catch (J$e) {
            J$.Ex(3265, J$e);
        } finally {
            if (J$.Sr(3273)) {
                J$.L();
                continue jalangiLabel102;
            } else {
                J$.L();
                break jalangiLabel102;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
