{"8":[6,9,6,18],"9":[1,20,1,27],"10":[6,9,6,18],"16":[8,56,8,66],"17":[1,28,1,32],"18":[8,17,8,26],"24":[8,17,8,26],"25":[1,20,1,33],"26":[8,41,8,52],"32":[10,15,10,27],"33":[1,20,1,33],"34":[9,9,9,31],"40":[9,9,9,31],"41":[1,20,1,33],"42":[10,15,10,27],"48":[12,12,12,25],"49":[2,26,2,38],"50":[10,30,10,44],"57":[2,26,2,45],"58":[12,12,12,17],"65":[2,26,2,45],"73":[2,26,2,45],"74":[12,12,12,17],"81":[3,1,3,7],"82":[12,12,12,25],"89":[4,15,4,17],"90":[13,13,13,24],"97":[4,15,4,17],"105":[4,15,4,17],"113":[5,15,5,19],"121":[5,15,5,26],"129":[5,15,5,26],"137":[5,15,5,26],"145":[6,9,6,10],"153":[6,15,6,18],"161":[7,16,7,19],"169":[7,16,7,19],"177":[7,9,7,20],"185":[8,17,8,22],"193":[8,25,8,26],"201":[8,29,8,33],"209":[8,38,8,39],"217":[8,41,8,46],"225":[8,49,8,52],"233":[8,29,8,53],"235":[8,29,8,37],"241":[8,56,8,61],"249":[8,65,8,66],"257":[8,17,8,66],"265":[8,17,8,66],"273":[9,9,9,17],"281":[9,22,9,31],"289":[10,15,10,23],"297":[10,26,10,27],"305":[10,30,10,38],"313":[10,41,10,44],"321":[10,47,10,55],"329":[10,15,10,55],"337":[10,9,10,56],"353":[12,12,12,15],"361":[12,12,12,17],"377":[12,20,12,25],"385":[13,9,13,12],"393":[13,13,13,16],"401":[13,19,13,24],"409":[13,28,13,32],"417":[13,33,13,36],"425":[13,28,13,37],"433":[13,9,13,37],"441":[13,9,13,38],"449":[15,12,15,15],"457":[15,12,15,15],"465":[15,5,15,16],"473":[3,18,16,2],"481":[3,18,16,2],"489":[3,18,16,2],"497":[3,18,16,2],"505":[3,18,16,2],"513":[3,18,16,2],"521":[3,18,16,2],"529":[3,18,16,2],"537":[3,18,16,2],"545":[3,1,16,2],"553":[3,1,16,3],"561":[1,1,16,3],"569":[1,1,16,3],"577":[1,1,16,3],"585":[6,5,7,20],"593":[8,17,8,66],"601":[10,15,10,55],"609":[9,5,11,6],"617":[12,5,14,6],"625":[3,18,16,2],"633":[3,18,16,2],"641":[1,1,16,3],"649":[1,1,16,3],"nBranches":12,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/sliced/lib/sliced.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/sliced/lib/sliced_jalangi_.js","code":"\n/**\n * An Array.prototype.slice.call(arguments) alternative\n *\n * @param {Object} args something with a length\n * @param {Number} slice\n * @param {Number} sliceEnd\n * @api public\n */\n\nmodule.exports = function (args, slice, sliceEnd) {\n  var ret = [];\n  var len = args.length;\n\n  if (0 === len) return ret;\n\n  var start = slice < 0\n    ? Math.max(0, slice + len)\n    : slice || 0;\n\n  if (sliceEnd !== undefined) {\n    len = sliceEnd < 0\n      ? sliceEnd + len\n      : sliceEnd\n  }\n\n  while (len-- > start) {\n    ret[len - start] = args[len];\n  }\n\n  return ret;\n}\n\n"}