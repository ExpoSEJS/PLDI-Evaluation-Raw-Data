J$.iids = {"8":[9,18,9,31],"9":[1,20,1,27],"10":[13,16,13,36],"16":[11,23,11,52],"17":[1,28,1,32],"18":[13,16,13,49],"24":[12,28,12,59],"25":[1,20,1,33],"26":[30,9,30,36],"32":[13,16,13,49],"33":[1,20,1,33],"34":[34,21,34,39],"40":[17,9,17,32],"41":[1,20,1,33],"42":[34,41,34,44],"48":[19,9,19,21],"49":[2,26,2,38],"56":[30,9,30,36],"57":[2,26,2,45],"58":[34,41,34,44],"64":[35,25,35,61],"65":[2,26,2,45],"66":[38,17,38,46],"72":[38,17,38,46],"73":[2,26,2,45],"74":[53,21,53,47],"80":[41,13,41,18],"81":[3,1,3,13],"82":[53,49,53,52],"88":[34,21,34,39],"89":[3,1,3,14],"96":[50,9,50,20],"97":[4,14,4,21],"98":[53,49,53,52],"104":[53,21,53,47],"105":[4,22,4,47],"106":[58,21,58,39],"112":[61,19,61,53],"113":[4,14,4,48],"114":[58,41,58,44],"120":[58,21,58,39],"121":[4,65,4,72],"128":[67,18,67,39],"129":[4,73,4,81],"130":[58,41,58,44],"136":[71,9,71,46],"137":[4,65,4,82],"138":[65,16,65,31],"144":[72,13,72,35],"145":[4,65,4,95],"146":[67,18,67,39],"152":[75,16,75,38],"153":[4,108,4,115],"154":[69,26,69,59],"160":[71,9,71,46],"161":[4,116,4,122],"162":[69,16,69,59],"168":[78,9,78,31],"169":[4,108,4,123],"170":[71,9,71,31],"176":[92,9,92,28],"177":[4,108,4,132],"178":[75,16,75,38],"184":[96,13,96,39],"185":[4,138,4,145],"186":[80,20,80,36],"192":[94,9,94,32],"193":[4,146,4,152],"194":[81,20,81,52],"200":[105,17,105,40],"201":[4,138,4,153],"202":[92,9,92,28],"208":[108,44,108,45],"209":[4,138,4,160],"210":[94,9,94,32],"216":[107,17,107,27],"217":[4,14,4,48],"218":[95,20,95,68],"224":[114,12,114,30],"225":[4,14,4,48],"226":[96,13,96,39],"232":[136,13,136,36],"233":[4,65,4,95],"234":[102,21,102,30],"241":[4,65,4,95],"242":[103,24,103,62],"249":[4,108,4,132],"250":[107,17,107,27],"257":[4,108,4,132],"258":[114,12,114,30],"265":[4,138,4,160],"266":[119,5,119,37],"273":[4,138,4,160],"274":[134,20,134,58],"281":[6,5,6,17],"289":[6,23,6,27],"297":[6,5,6,28],"299":[6,5,6,22],"305":[6,5,6,29],"313":[7,5,7,9],"321":[8,16,8,18],"329":[9,18,9,25],"337":[9,29,9,31],"345":[10,17,10,23],"353":[10,24,10,30],"361":[10,32,10,39],"369":[10,17,10,40],"377":[11,23,11,30],"385":[11,23,11,43],"393":[11,47,11,52],"401":[12,28,12,35],"409":[12,28,12,53],"417":[12,57,12,59],"425":[13,23,13,30],"433":[13,23,13,36],"441":[13,40,13,49],"449":[13,52,13,59],"457":[13,52,13,65],"465":[13,68,13,73],"473":[14,16,14,17],"481":[15,19,15,23],"489":[7,14,16,6],"497":[7,5,16,6],"505":[7,5,16,7],"513":[17,9,17,13],"521":[17,9,17,15],"529":[17,9,17,22],"537":[17,9,17,32],"539":[17,9,17,30],"545":[18,9,18,13],"553":[18,9,18,15],"561":[18,9,18,22],"569":[18,29,18,30],"577":[18,31,18,84],"585":[18,86,18,90],"593":[18,86,18,92],"601":[18,86,18,105],"609":[18,107,18,111],"617":[18,107,18,113],"625":[18,107,18,131],"633":[18,29,18,132],"641":[18,9,18,133],"643":[18,9,18,28],"649":[18,9,18,134],"657":[19,9,19,13],"665":[19,9,19,15],"673":[19,9,19,21],"681":[20,9,20,15],"689":[20,31,20,35],"697":[20,37,20,43],"705":[21,25,21,29],"713":[23,24,23,28],"721":[23,24,23,30],"729":[23,24,23,36],"737":[23,24,23,36],"745":[23,17,23,37],"753":[22,18,24,14],"761":[22,18,24,14],"769":[22,18,24,14],"777":[20,45,25,10],"785":[20,9,25,11],"787":[20,9,20,30],"793":[20,9,25,12],"801":[5,12,27,2],"809":[5,12,27,2],"817":[5,12,27,2],"825":[5,12,27,2],"833":[5,12,27,2],"841":[5,12,27,2],"849":[28,1,28,9],"857":[28,10,28,14],"865":[28,16,28,28],"873":[28,1,28,29],"881":[28,1,28,30],"889":[30,9,30,23],"897":[30,9,30,28],"905":[30,32,30,36],"913":[31,16,31,23],"921":[31,16,31,23],"929":[31,9,31,24],"937":[32,27,32,29],"945":[32,27,32,29],"953":[32,27,32,29],"961":[33,16,33,30],"969":[33,16,33,35],"977":[33,16,33,35],"985":[33,16,33,35],"993":[34,18,34,19],"1001":[34,18,34,19],"1009":[34,18,34,19],"1017":[34,21,34,22],"1025":[34,25,34,32],"1033":[34,25,34,39],"1049":[34,41,34,42],"1057":[34,41,34,44],"1073":[35,25,35,32],"1081":[35,33,35,34],"1089":[35,25,35,35],"1097":[35,25,35,50],"1099":[35,25,35,48],"1105":[35,25,35,55],"1113":[35,59,35,61],"1121":[35,25,35,61],"1129":[35,25,35,61],"1137":[36,21,36,25],"1145":[36,21,36,25],"1153":[36,21,36,25],"1161":[37,26,37,30],"1169":[38,17,38,26],"1177":[38,27,38,31],"1185":[38,17,38,32],"1193":[38,36,38,40],"1201":[38,41,38,45],"1209":[38,36,38,46],"1217":[39,25,39,30],"1225":[39,25,39,30],"1233":[39,17,39,31],"1241":[37,26,37,30],"1249":[37,9,40,10],"1257":[37,9,40,10],"1265":[41,13,41,18],"1273":[42,13,42,28],"1281":[42,34,42,41],"1289":[42,42,42,43],"1297":[42,34,42,44],"1305":[42,13,42,45],"1307":[42,13,42,33],"1313":[42,13,42,46],"1321":[44,12,44,27],"1329":[44,12,44,27],"1337":[44,5,44,28],"1345":[29,20,45,2],"1353":[29,20,45,2],"1361":[29,20,45,2],"1369":[29,20,45,2],"1377":[29,20,45,2],"1385":[29,20,45,2],"1393":[29,20,45,2],"1401":[29,20,45,2],"1409":[29,20,45,2],"1417":[29,20,45,2],"1425":[29,20,45,2],"1433":[29,20,45,2],"1441":[29,20,45,2],"1449":[46,1,46,5],"1457":[46,1,46,15],"1465":[47,16,47,20],"1473":[47,16,47,20],"1481":[47,16,47,20],"1489":[48,17,48,19],"1497":[48,17,48,19],"1505":[48,17,48,19],"1513":[49,19,49,21],"1521":[49,19,49,21],"1529":[49,19,49,21],"1537":[50,9,50,12],"1545":[50,9,50,20],"1553":[51,9,51,16],"1561":[51,22,51,25],"1569":[51,22,51,33],"1577":[51,9,51,34],"1579":[51,9,51,21],"1585":[51,9,51,35],"1593":[53,18,53,19],"1601":[53,18,53,19],"1609":[53,18,53,19],"1617":[53,21,53,22],"1625":[53,25,53,28],"1633":[53,25,53,40],"1641":[53,25,53,47],"1657":[53,49,53,50],"1665":[53,49,53,52],"1681":[54,9,54,16],"1689":[54,22,54,25],"1697":[54,22,54,37],"1705":[54,38,54,39],"1713":[54,22,54,40],"1721":[54,9,54,41],"1723":[54,9,54,21],"1729":[54,9,54,42],"1737":[56,15,56,27],"1745":[56,28,56,42],"1753":[56,44,56,51],"1761":[56,15,56,52],"1769":[56,15,56,52],"1777":[56,5,56,53],"1785":[57,22,57,24],"1793":[57,22,57,24],"1801":[57,22,57,24],"1809":[58,18,58,19],"1817":[58,18,58,19],"1825":[58,18,58,19],"1833":[58,21,58,22],"1841":[58,25,58,32],"1849":[58,25,58,39],"1865":[58,41,58,42],"1873":[58,41,58,44],"1889":[59,9,59,19],"1897":[60,19,60,26],"1905":[60,27,60,28],"1913":[60,19,60,29],"1921":[60,19,60,34],"1929":[61,19,61,23],"1937":[61,19,61,25],"1945":[61,19,61,31],"1953":[61,32,61,39],"1961":[61,40,61,41],"1969":[61,32,61,42],"1977":[61,32,61,47],"1985":[61,19,61,48],"1993":[61,52,61,53],"2001":[59,25,62,10],"2009":[59,9,62,11],"2011":[59,9,59,24],"2017":[59,9,62,12],"2025":[64,5,64,15],"2033":[65,16,65,17],"2041":[65,16,65,22],"2049":[65,25,65,26],"2057":[65,25,65,31],"2065":[65,16,65,31],"2073":[65,9,65,32],"2081":[64,21,66,6],"2089":[64,21,66,6],"2097":[64,21,66,6],"2105":[64,21,66,6],"2113":[64,21,66,6],"2121":[64,5,66,7],"2123":[64,5,64,20],"2129":[64,5,66,8],"2137":[67,18,67,28],"2145":[67,18,67,35],"2153":[67,38,67,39],"2161":[67,42,67,52],"2169":[67,53,67,54],"2177":[67,42,67,55],"2185":[67,42,67,60],"2193":[67,63,67,64],"2201":[67,18,67,64],"2209":[67,18,67,64],"2217":[68,18,68,28],"2225":[69,16,69,17],"2233":[69,16,69,22],"2241":[69,26,69,32],"2249":[69,35,69,39],"2257":[69,35,69,41],"2265":[69,35,69,59],"2273":[69,16,69,59],"2281":[69,9,69,60],"2289":[68,36,70,6],"2297":[68,36,70,6],"2305":[68,36,70,6],"2313":[68,36,70,6],"2321":[68,18,70,7],"2323":[68,18,68,35],"2329":[68,18,70,7],"2337":[68,5,70,8],"2345":[71,9,71,19],"2353":[71,9,71,26],"2361":[71,30,71,31],"2369":[71,35,71,38],"2377":[71,35,71,46],"2385":[72,13,72,17],"2393":[72,13,72,19],"2401":[72,13,72,26],"2409":[72,13,72,35],"2411":[72,13,72,33],"2417":[73,13,73,17],"2425":[73,13,73,19],"2433":[73,13,73,26],"2441":[73,32,73,33],"2449":[73,34,73,62],"2457":[73,64,73,67],"2465":[73,64,73,75],"2473":[73,64,73,80],"2481":[73,32,73,81],"2489":[73,13,73,82],"2491":[73,13,73,31],"2497":[73,13,73,83],"2505":[74,16,74,19],"2513":[74,16,74,27],"2521":[74,16,74,27],"2529":[74,9,74,28],"2537":[75,16,75,26],"2545":[75,16,75,33],"2553":[75,37,75,38],"2561":[76,16,76,20],"2569":[76,16,76,20],"2577":[76,9,76,21],"2585":[78,9,78,13],"2593":[78,9,78,15],"2601":[78,9,78,22],"2609":[78,9,78,31],"2611":[78,9,78,29],"2617":[79,9,79,13],"2625":[79,9,79,15],"2633":[79,9,79,22],"2641":[79,28,79,29],"2649":[79,30,79,73],"2657":[79,75,79,85],"2665":[79,86,79,87],"2673":[79,75,79,88],"2681":[79,75,79,93],"2689":[79,95,79,105],"2697":[79,106,79,107],"2705":[79,95,79,108],"2713":[79,95,79,113],"2721":[79,28,79,114],"2729":[79,9,79,115],"2731":[79,9,79,27],"2737":[79,9,79,116],"2745":[80,5,80,9],"2753":[80,5,80,11],"2761":[80,20,80,24],"2769":[80,20,80,26],"2777":[80,20,80,32],"2785":[80,35,80,36],"2793":[80,5,80,36],"2801":[80,5,80,37],"2809":[81,5,81,9],"2817":[81,5,81,11],"2825":[81,20,81,24],"2833":[81,20,81,26],"2841":[81,20,81,32],"2849":[81,35,81,45],"2857":[81,35,81,52],"2865":[81,5,81,52],"2873":[81,5,81,53],"2881":[82,12,82,15],"2889":[82,20,82,30],"2897":[82,31,82,35],"2905":[82,31,82,37],"2913":[82,31,82,43],"2921":[82,20,82,44],"2929":[82,20,82,49],"2937":[82,12,82,50],"2939":[82,12,82,19],"2945":[82,12,82,50],"2953":[82,5,82,51],"2961":[46,29,83,2],"2969":[46,29,83,2],"2977":[46,29,83,2],"2985":[46,29,83,2],"2993":[46,29,83,2],"3001":[46,29,83,2],"3009":[46,29,83,2],"3017":[46,29,83,2],"3025":[46,29,83,2],"3033":[46,29,83,2],"3041":[46,29,83,2],"3049":[46,1,83,2],"3057":[46,1,83,3],"3065":[84,1,84,5],"3073":[84,1,84,15],"3081":[84,33,85,2],"3089":[84,33,85,2],"3097":[84,33,85,2],"3105":[84,33,85,2],"3113":[84,33,85,2],"3121":[84,33,85,2],"3129":[84,1,85,2],"3137":[84,1,85,3],"3145":[86,1,86,5],"3153":[86,1,86,15],"3161":[86,31,87,2],"3169":[86,31,87,2],"3177":[86,31,87,2],"3185":[86,31,87,2],"3193":[86,31,87,2],"3201":[86,31,87,2],"3209":[86,31,87,2],"3217":[86,1,87,2],"3225":[86,1,87,3],"3233":[88,1,88,5],"3241":[88,1,88,15],"3249":[89,16,89,20],"3257":[89,16,89,20],"3265":[89,16,89,20],"3273":[90,19,90,24],"3281":[90,19,90,33],"3283":[90,19,90,31],"3289":[90,19,90,33],"3297":[90,19,90,33],"3305":[91,17,91,24],"3313":[91,17,91,31],"3321":[91,17,91,31],"3329":[91,17,91,31],"3337":[92,9,92,16],"3345":[92,9,92,23],"3353":[92,27,92,28],"3361":[93,16,93,24],"3369":[93,25,93,29],"3377":[93,31,93,35],"3385":[93,16,93,36],"3393":[93,16,93,36],"3401":[93,9,93,37],"3409":[94,9,94,13],"3417":[94,9,94,15],"3425":[94,9,94,24],"3433":[94,28,94,32],"3441":[95,24,95,28],"3449":[95,20,95,30],"3457":[95,20,95,40],"3459":[95,20,95,38],"3465":[95,43,95,47],"3473":[95,43,95,49],"3481":[95,43,95,58],"3489":[95,43,95,68],"3491":[95,43,95,66],"3497":[95,20,95,68],"3505":[95,20,95,68],"3513":[96,13,96,17],"3521":[96,20,96,24],"3529":[96,20,96,26],"3537":[96,20,96,39],"3545":[97,20,97,28],"3553":[97,29,97,33],"3561":[97,35,97,39],"3569":[97,20,97,40],"3577":[97,20,97,40],"3585":[97,13,97,41],"3593":[100,25,100,29],"3601":[100,21,100,31],"3609":[100,21,100,31],"3617":[100,21,100,31],"3625":[101,9,101,16],"3633":[101,25,101,38],"3641":[101,52,101,53],"3649":[101,40,101,55],"3657":[102,21,102,26],"3665":[102,29,102,30],"3673":[102,21,102,30],"3681":[102,13,102,31],"3689":[103,28,103,32],"3697":[103,24,103,34],"3705":[103,24,103,44],"3707":[103,24,103,42],"3713":[103,47,103,52],"3721":[103,47,103,62],"3723":[103,47,103,60],"3729":[103,24,103,62],"3737":[103,24,103,62],"3745":[104,13,104,17],"3753":[104,13,104,19],"3761":[104,13,104,25],"3769":[104,26,104,33],"3777":[104,26,104,38],"3785":[104,42,104,46],"3793":[104,13,104,46],"3801":[104,13,104,47],"3809":[105,17,105,21],"3817":[105,17,105,23],"3825":[105,17,105,30],"3833":[105,17,105,40],"3835":[105,17,105,38],"3841":[106,17,106,21],"3849":[106,17,106,23],"3857":[106,17,106,30],"3865":[106,37,106,38],"3873":[106,39,106,78],"3881":[106,80,106,87],"3889":[106,80,106,92],"3897":[106,94,106,98],"3905":[106,37,106,99],"3913":[106,17,106,100],"3915":[106,17,106,36],"3921":[106,17,106,101],"3929":[107,17,107,22],"3937":[107,26,107,27],"3945":[108,17,108,25],"3953":[108,31,108,37],"3961":[108,39,108,42],"3969":[108,44,108,45],"3977":[108,48,108,49],"3985":[108,48,108,56],"3993":[108,59,108,63],"4001":[108,17,108,64],"4003":[108,17,108,30],"4009":[108,17,108,65],"4017":[109,17,109,21],"4025":[109,17,109,23],"4033":[109,39,109,43],"4041":[109,35,109,45],"4049":[109,17,109,45],"4057":[109,17,109,46],"4065":[110,17,110,25],"4073":[110,26,110,30],"4081":[110,32,110,36],"4089":[110,17,110,37],"4097":[110,17,110,38],"4105":[101,57,112,10],"4113":[101,57,112,10],"4121":[101,57,112,10],"4129":[101,57,112,10],"4137":[101,57,112,10],"4145":[101,57,112,10],"4153":[101,9,112,11],"4155":[101,9,101,24],"4161":[101,9,112,12],"4169":[99,21,113,6],"4177":[99,21,113,6],"4185":[99,21,113,6],"4193":[99,21,113,6],"4201":[99,21,113,6],"4209":[99,21,113,6],"4217":[99,21,113,6],"4225":[114,12,114,19],"4233":[114,12,114,26],"4241":[114,29,114,30],"4249":[115,9,115,18],"4257":[115,19,115,26],"4265":[115,19,115,34],"4267":[115,19,115,32],"4273":[115,9,115,35],"4281":[115,9,115,36],"4289":[88,21,117,2],"4297":[88,21,117,2],"4305":[88,21,117,2],"4313":[88,21,117,2],"4321":[88,21,117,2],"4329":[88,21,117,2],"4337":[88,21,117,2],"4345":[88,21,117,2],"4353":[88,21,117,2],"4361":[88,21,117,2],"4369":[88,21,117,2],"4377":[88,1,117,2],"4385":[88,1,117,3],"4393":[119,12,119,16],"4401":[119,12,119,18],"4409":[119,12,119,24],"4417":[119,25,119,31],"4425":[119,25,119,36],"4433":[119,5,119,38],"4441":[118,20,120,2],"4449":[118,20,120,2],"4457":[118,20,120,2],"4465":[118,20,120,2],"4473":[118,20,120,2],"4481":[118,20,120,2],"4489":[118,20,120,2],"4497":[121,1,121,5],"4505":[121,1,121,15],"4513":[122,5,122,17],"4521":[122,18,122,22],"4529":[122,24,122,30],"4537":[122,5,122,31],"4545":[122,5,122,32],"4553":[121,24,123,2],"4561":[121,24,123,2],"4569":[121,24,123,2],"4577":[121,24,123,2],"4585":[121,1,123,2],"4593":[121,1,123,3],"4601":[124,1,124,5],"4609":[124,1,124,15],"4617":[125,5,125,17],"4625":[125,18,125,22],"4633":[125,24,125,30],"4641":[125,5,125,31],"4649":[125,5,125,32],"4657":[124,24,126,2],"4665":[124,24,126,2],"4673":[124,24,126,2],"4681":[124,24,126,2],"4689":[124,1,126,2],"4697":[124,1,126,3],"4705":[127,1,127,5],"4713":[127,1,127,15],"4721":[128,5,128,17],"4729":[128,18,128,22],"4737":[128,24,128,30],"4745":[128,5,128,31],"4753":[128,5,128,32],"4761":[127,26,129,2],"4769":[127,26,129,2],"4777":[127,26,129,2],"4785":[127,26,129,2],"4793":[127,1,129,2],"4801":[127,1,129,3],"4809":[130,1,130,5],"4817":[130,1,130,15],"4825":[131,16,131,20],"4833":[131,16,131,20],"4841":[131,16,131,20],"4849":[132,21,132,25],"4857":[132,17,132,27],"4865":[132,17,132,27],"4873":[132,17,132,27],"4881":[133,5,133,11],"4889":[133,20,133,33],"4897":[133,47,133,48],"4905":[133,35,133,50],"4913":[134,24,134,28],"4921":[134,20,134,30],"4929":[134,20,134,40],"4931":[134,20,134,38],"4937":[134,43,134,48],"4945":[134,43,134,58],"4947":[134,43,134,56],"4953":[134,20,134,58],"4961":[134,20,134,58],"4969":[135,9,135,13],"4977":[135,9,135,15],"4985":[135,9,135,21],"4993":[135,22,135,28],"5001":[135,22,135,33],"5009":[135,37,135,41],"5017":[135,9,135,41],"5025":[135,9,135,42],"5033":[136,13,136,17],"5041":[136,13,136,19],"5049":[136,13,136,26],"5057":[136,13,136,36],"5059":[136,13,136,34],"5065":[137,13,137,17],"5073":[137,13,137,19],"5081":[137,13,137,26],"5089":[137,33,137,34],"5097":[137,35,137,79],"5105":[137,81,137,87],"5113":[137,81,137,92],"5121":[137,94,137,98],"5129":[137,33,137,99],"5137":[137,13,137,100],"5139":[137,13,137,32],"5145":[137,13,137,101],"5153":[138,9,138,13],"5161":[138,9,138,15],"5169":[138,31,138,35],"5177":[138,27,138,37],"5185":[138,9,138,37],"5193":[138,9,138,38],"5201":[139,9,139,17],"5209":[139,18,139,22],"5217":[139,24,139,28],"5225":[139,9,139,29],"5233":[139,9,139,30],"5241":[133,52,140,6],"5249":[133,52,140,6],"5257":[133,52,140,6],"5265":[133,52,140,6],"5273":[133,52,140,6],"5281":[133,52,140,6],"5289":[133,5,140,7],"5291":[133,5,133,19],"5297":[133,5,140,8],"5305":[130,26,141,2],"5313":[130,26,141,2],"5321":[130,26,141,2],"5329":[130,26,141,2],"5337":[130,26,141,2],"5345":[130,26,141,2],"5353":[130,26,141,2],"5361":[130,1,141,2],"5369":[130,1,141,3],"5377":[142,1,142,7],"5385":[142,18,142,22],"5393":[142,1,142,22],"5401":[142,1,142,23],"5409":[1,1,142,23],"5417":[1,1,142,23],"5425":[1,1,142,23],"5433":[1,1,142,23],"5441":[1,1,142,23],"5449":[1,1,142,23],"5457":[1,1,142,23],"5465":[1,1,142,23],"5473":[1,1,142,23],"5481":[1,1,142,23],"5489":[13,16,13,73],"5497":[17,5,18,134],"5505":[22,18,24,14],"5513":[22,18,24,14],"5521":[19,5,26,6],"5529":[5,12,27,2],"5537":[5,12,27,2],"5545":[30,5,31,24],"5553":[38,13,39,31],"5561":[41,9,42,46],"5569":[34,5,43,6],"5577":[34,5,43,6],"5585":[29,20,45,2],"5593":[29,20,45,2],"5601":[50,5,52,6],"5609":[53,5,55,6],"5617":[53,5,55,6],"5625":[58,5,63,6],"5633":[58,5,63,6],"5641":[64,21,66,6],"5649":[64,21,66,6],"5657":[67,18,67,64],"5665":[68,36,70,6],"5673":[68,36,70,6],"5681":[72,9,73,83],"5689":[75,12,77,6],"5697":[71,5,77,6],"5705":[78,5,79,116],"5713":[46,29,83,2],"5721":[46,29,83,2],"5729":[84,33,85,2],"5737":[84,33,85,2],"5745":[86,31,87,2],"5753":[86,31,87,2],"5761":[92,5,93,37],"5769":[96,9,97,41],"5777":[94,5,98,6],"5785":[105,13,106,101],"5793":[108,44,108,63],"5801":[107,13,111,14],"5809":[101,57,112,10],"5817":[101,57,112,10],"5825":[99,21,113,6],"5833":[99,21,113,6],"5841":[114,5,116,6],"5849":[88,21,117,2],"5857":[88,21,117,2],"5865":[118,20,120,2],"5873":[118,20,120,2],"5881":[121,24,123,2],"5889":[121,24,123,2],"5897":[124,24,126,2],"5905":[124,24,126,2],"5913":[127,26,129,2],"5921":[127,26,129,2],"5929":[136,9,137,101],"5937":[133,52,140,6],"5945":[133,52,140,6],"5953":[130,26,141,2],"5961":[130,26,141,2],"5969":[1,1,142,23],"5977":[1,1,142,23],"nBranches":58,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/topologies/strategies/ping.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/topologies/strategies/ping_jalangi_.js","code":"\"use strict\";\n\nvar Logger = require('../../connection/logger')\n  , EventEmitter = require('events').EventEmitter\n  , inherits = require('util').inherits\n  , f = require('util').format;\n\n/**\n * Creates a new Ping read preference strategy instance\n * @class\n * @param {number} [options.pingInterval=5000] Ping interval to check the response time to the different servers\n * @param {number} [options.acceptableLatency=250] Acceptable latency for selecting a server for reading (in milliseconds)\n * @return {Ping} A cursor instance\n */\nvar Ping = function(options) {\n  // Add event listener\n  EventEmitter.call(this);\n\n  // Contains the ping state\n  this.s = {\n    // Contains all the ping data\n      pings: {}\n    // Set no options if none provided\n    , options: options || {}\n    // Logger\n    , logger: Logger('Ping', options)\n    // Ping interval\n    , pingInterval: options.pingInterval || 10000\n    , acceptableLatency: options.acceptableLatency || 15\n    // Debug options\n    , debug: typeof options.debug == 'boolean' ? options.debug : false\n    // Index\n    , index: 0\n    // Current ping time\n    , lastPing: null\n\n  }\n\n  // Log the options set\n  if(this.s.logger.isDebug()) this.s.logger.debug(f('ping strategy interval [%s], acceptableLatency [%s]', this.s.pingInterval, this.s.acceptableLatency));\n\n  // If we have enabled debug \n  if(this.s.debug) {\n    // Add access to the read Preference Strategies\n    Object.defineProperty(this, 'data', {\n      enumerable: true, get: function() { return this.s.pings; }\n    });    \n  }\n}\n\ninherits(Ping, EventEmitter);\n\n/**\n * @ignore\n */\nvar filterByTags = function(readPreference, servers) {\n  if(readPreference.tags == null) return servers;\n  var filteredServers = [];\n  var tags = readPreference.tags;\n\n  // Iterate over all the servers\n  for(var i = 0; i < servers.length; i++) {\n    var serverTag = servers[i].lastIsMaster().tags || {};\n    // Did we find the a matching server\n    var found = true;\n    // Check if the server is valid\n    for(var name in tags) {\n      if(serverTag[name] != tags[name]) found = false;\n    }\n\n    // Add to candidate list\n    if(found) filteredServers.push(servers[i]);\n  }\n\n  // Returned filtered servers\n  return filteredServers;\n}\n\n/**\n * Pick a server\n * @method\n * @param {State} set The current replicaset state object \n * @param {ReadPreference} readPreference The current readPreference object\n * @param {readPreferenceResultCallback} callback The callback to return the result from the function\n * @return {object}\n */\nPing.prototype.pickServer = function(set, readPreference) {\n  var self = this;\n  // Only get primary and secondaries as seeds\n  var seeds = {};\n  var servers = [];\n  if(set.primary) {\n    servers.push(set.primary);\n  }\n\n  for(var i = 0; i < set.secondaries.length; i++) {\n    servers.push(set.secondaries[i]);\n  }\n\n  // Filter by tags\n  servers = filterByTags(readPreference, servers);\n\n  // Transform the list\n  var serverList = [];\n  // for(var name in seeds) {\n  for(var i = 0; i < servers.length; i++) {\n    serverList.push({name: servers[i].name, time: self.s.pings[servers[i].name] || 0});\n  }\n\n  // Sort by time\n  serverList.sort(function(a, b) {\n    return a.time > b.time;\n  });\n\n  // Locate lowest time (picked servers are lowest time + acceptable Latency margin)\n  var lowest = serverList.length > 0 ? serverList[0].time : 0;\n\n  // Filter by latency\n  serverList = serverList.filter(function(s) {\n    return s.time <= lowest + self.s.acceptableLatency;\n  });\n\n  // No servers, default to primary\n  if(serverList.length == 0 && set.primary) {\n    if(self.s.logger.isInfo()) self.s.logger.info(f('picked primary server [%s]', set.primary.name));\n    return set.primary;\n  } else if(serverList.length == 0) {\n    return null\n  }\n\n  // We picked first server\n  if(self.s.logger.isInfo()) self.s.logger.info(f('picked server [%s] with ping latency [%s]', serverList[0].name, serverList[0].time));\n\n  // Add to the index\n  self.s.index = self.s.index + 1;\n  // Select the index\n  self.s.index = self.s.index % serverList.length;\n  // Return the first server of the sorted and filtered list\n  return set.get(serverList[self.s.index].name);\n}\n\n/**\n * Start of an operation\n * @method\n * @param {Server} server The server the operation is running against\n * @param {object} query The operation running\n * @param {Date} date The start time of the operation\n * @return {object}\n */\nPing.prototype.startOperation = function(server, query, date) {\n}\n\n/**\n * End of an operation\n * @method\n * @param {Server} server The server the operation is running against\n * @param {error} err An error from the operation\n * @param {object} result The result from the operation\n * @param {Date} date The start time of the operation\n * @return {object}\n */\nPing.prototype.endOperation = function(server, err, result, date) {\n}\n\n/**\n * High availability process running\n * @method\n * @param {State} set The current replicaset state object \n * @param {resultCallback} callback The callback to return the result from the function\n * @return {object}\n */\nPing.prototype.ha = function(topology, state, callback) {\n  var self = this;\n  var servers = state.getAll();\n  var count = servers.length;\n\n  // No servers return\n  if(servers.length == 0) return callback(null, null);\n\n  // Return if we have not yet reached the ping interval\n  if(self.s.lastPing != null) {\n    var diff = new Date().getTime() - self.s.lastPing.getTime();\n    if(diff < self.s.pingInterval) return callback(null, null);\n  }\n\n  // Execute operation\n  var operation = function(_server) {\n    var start = new Date();\n    // Execute ping against server\n    _server.command('system.$cmd', {ismaster:1}, function(err, r) {\n      count = count - 1;\n      var time = new Date().getTime() - start.getTime();\n      self.s.pings[_server.name] = time;\n      // Log info for debug\n      if(self.s.logger.isDebug()) self.s.logger.debug(f('ha latency for server [%s] is [%s] ms', _server.name, time));\n      // We are done with all the servers\n      if(count == 0) {\n        // Emit ping event\n        topology.emit('ping', err, r ? r.result : null);\n        // Update the last ping time\n        self.s.lastPing = new Date();\n        // Return\n        callback(null, null);\n      }\n    });\n  }\n\n  // Let's ping all servers\n  while(servers.length > 0) {\n    operation(servers.shift());\n  }\n}\n\nvar removeServer = function(self, server) {\n  delete self.s.pings[server.name];\n}\n\n/**\n * Server connection closed\n * @method\n * @param {Server} server The server that closed\n */\nPing.prototype.close = function(server) {\n  removeServer(this, server);\n}\n\n/**\n * Server connection errored out\n * @method\n * @param {Server} server The server that errored out\n */\nPing.prototype.error = function(server) {\n  removeServer(this, server);\n}\n\n/**\n * Server connection timeout\n * @method\n * @param {Server} server The server that timed out\n */\nPing.prototype.timeout = function(server) {\n  removeServer(this, server);\n}\n\n/**\n * Server connection happened\n * @method\n * @param {Server} server The server that connected\n * @param {resultCallback} callback The callback to return the result from the function\n */\nPing.prototype.connect = function(server, callback) {\n  var self = this;\n  // Get the command start date\n  var start = new Date();\n  // Execute ping against server\n  server.command('system.$cmd', {ismaster:1}, function(err, r) {\n    var time = new Date().getTime() - start.getTime();\n    self.s.pings[server.name] = time;\n    // Log info for debug\n    if(self.s.logger.isDebug()) self.s.logger.debug(f('connect latency for server [%s] is [%s] ms', server.name, time));\n    // Set last ping\n    self.s.lastPing = new Date();\n    // Done, return\n    callback(null, null);\n  });    \n}\n\n/**\n * This is a result from a readPreference strategy\n *\n * @callback readPreferenceResultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {Server} server The server picked by the strategy\n */\n\nmodule.exports = Ping;"};
jalangiLabel2021:
    while (true) {
        try {
            J$.Se(5409, '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/topologies/strategies/ping_jalangi_.js', '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/topologies/strategies/ping.js');
            J$.N(5417, '__secret__S$', __secret__S$, 0);
            J$.N(5425, '__secret__traits__', __secret__traits__, 0);
            J$.N(5433, 'Logger', Logger, 0);
            J$.N(5441, 'EventEmitter', EventEmitter, 0);
            J$.N(5449, 'inherits', inherits, 0);
            J$.N(5457, 'f', f, 0);
            J$.N(5465, 'Ping', Ping, 0);
            J$.N(5473, 'filterByTags', filterByTags, 0);
            J$.N(5481, 'removeServer', removeServer, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var Logger = J$.X1(225, J$.W(217, 'Logger', J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, '../../connection/logger', 21, false)), Logger, 3)), EventEmitter = J$.X1(241, J$.W(233, 'EventEmitter', J$.G(145, J$.F(137, J$.R(121, 'require', require, 2), 0)(J$.T(129, 'events', 21, false)), 'EventEmitter', 0), EventEmitter, 3)), inherits = J$.X1(257, J$.W(249, 'inherits', J$.G(177, J$.F(169, J$.R(153, 'require', require, 2), 0)(J$.T(161, 'util', 21, false)), 'inherits', 0), inherits, 3)), f = J$.X1(273, J$.W(265, 'f', J$.G(209, J$.F(201, J$.R(185, 'require', require, 2), 0)(J$.T(193, 'util', 21, false)), 'format', 0), f, 3));
            var Ping = J$.X1(841, J$.W(833, 'Ping', J$.T(825, function (options) {
                jalangiLabel2005:
                    while (true) {
                        try {
                            J$.Fe(801, arguments.callee, this, arguments);
                            arguments = J$.N(809, 'arguments', arguments, 4);
                            options = J$.N(817, 'options', options, 4);
                            J$.X1(305, J$.M(297, J$.R(281, 'EventEmitter', EventEmitter, 1), 'call', 0)(J$.R(289, 'this', this, 0)));
                            J$.X1(505, J$.P(497, J$.R(313, 'this', this, 0), 's', J$.T(489, {
                                pings: J$.T(321, {}, 11, false),
                                options: J$.C(8, J$.R(329, 'options', options, 0)) ? J$._() : J$.T(337, {}, 11, false),
                                logger: J$.F(369, J$.R(345, 'Logger', Logger, 1), 0)(J$.T(353, 'Ping', 21, false), J$.R(361, 'options', options, 0)),
                                pingInterval: J$.C(16, J$.G(385, J$.R(377, 'options', options, 0), 'pingInterval', 0)) ? J$._() : J$.T(393, 10000, 22, false),
                                acceptableLatency: J$.C(24, J$.G(409, J$.R(401, 'options', options, 0), 'acceptableLatency', 0)) ? J$._() : J$.T(417, 15, 22, false),
                                debug: J$.X1(5489, J$.C(32, J$.B(18, '==', J$.U(10, 'typeof', J$.G(433, J$.R(425, 'options', options, 0), 'debug', 0)), J$.T(441, 'boolean', 21, false), 0))) ? J$.G(457, J$.R(449, 'options', options, 0), 'debug', 0) : J$.T(465, false, 23, false),
                                index: J$.T(473, 0, 22, false),
                                lastPing: J$.T(481, null, 25, false)
                            }, 11, false), 0));
                            if (J$.X1(5497, J$.C(40, J$.M(537, J$.G(529, J$.G(521, J$.R(513, 'this', this, 0), 's', 0), 'logger', 0), 'isDebug', 0)())))
                                J$.X1(649, J$.M(641, J$.G(561, J$.G(553, J$.R(545, 'this', this, 0), 's', 0), 'logger', 0), 'debug', 0)(J$.F(633, J$.R(569, 'f', f, 1), 0)(J$.T(577, 'ping strategy interval [%s], acceptableLatency [%s]', 21, false), J$.G(601, J$.G(593, J$.R(585, 'this', this, 0), 's', 0), 'pingInterval', 0), J$.G(625, J$.G(617, J$.R(609, 'this', this, 0), 's', 0), 'acceptableLatency', 0))));
                            if (J$.X1(5521, J$.C(48, J$.G(673, J$.G(665, J$.R(657, 'this', this, 0), 's', 0), 'debug', 0)))) {
                                J$.X1(793, J$.M(785, J$.R(681, 'Object', Object, 2), 'defineProperty', 0)(J$.R(689, 'this', this, 0), J$.T(697, 'data', 21, false), J$.T(777, {
                                    enumerable: J$.T(705, true, 23, false),
                                    get: J$.T(769, function () {
                                        jalangiLabel2004:
                                            while (true) {
                                                try {
                                                    J$.Fe(753, arguments.callee, this, arguments);
                                                    arguments = J$.N(761, 'arguments', arguments, 4);
                                                    return J$.X1(745, J$.Rt(737, J$.G(729, J$.G(721, J$.R(713, 'this', this, 0), 's', 0), 'pings', 0)));
                                                } catch (J$e) {
                                                    J$.Ex(5505, J$e);
                                                } finally {
                                                    if (J$.Fr(5513))
                                                        continue jalangiLabel2004;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 753)
                                }, 11, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(5529, J$e);
                        } finally {
                            if (J$.Fr(5537))
                                continue jalangiLabel2005;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 801), Ping, 3));
            J$.X1(881, J$.F(873, J$.R(849, 'inherits', inherits, 1), 0)(J$.R(857, 'Ping', Ping, 1), J$.R(865, 'EventEmitter', EventEmitter, 1)));
            var filterByTags = J$.X1(1441, J$.W(1433, 'filterByTags', J$.T(1425, function (readPreference, servers) {
                jalangiLabel2006:
                    while (true) {
                        try {
                            J$.Fe(1345, arguments.callee, this, arguments);
                            arguments = J$.N(1353, 'arguments', arguments, 4);
                            readPreference = J$.N(1361, 'readPreference', readPreference, 4);
                            servers = J$.N(1369, 'servers', servers, 4);
                            J$.N(1377, 'filteredServers', filteredServers, 0);
                            J$.N(1385, 'tags', tags, 0);
                            J$.N(1393, 'i', i, 0);
                            J$.N(1401, 'serverTag', serverTag, 0);
                            J$.N(1409, 'found', found, 0);
                            J$.N(1417, 'name', name, 0);
                            if (J$.X1(5545, J$.C(56, J$.B(26, '==', J$.G(897, J$.R(889, 'readPreference', readPreference, 0), 'tags', 0), J$.T(905, null, 25, false), 0))))
                                return J$.X1(929, J$.Rt(921, J$.R(913, 'servers', servers, 0)));
                            var filteredServers = J$.X1(953, J$.W(945, 'filteredServers', J$.T(937, [], 10, false), filteredServers, 1));
                            var tags = J$.X1(985, J$.W(977, 'tags', J$.G(969, J$.R(961, 'readPreference', readPreference, 0), 'tags', 0), tags, 1));
                            for (var i = J$.X1(1009, J$.W(1001, 'i', J$.T(993, 0, 22, false), i, 1)); J$.X1(5569, J$.C(88, J$.B(34, '<', J$.R(1017, 'i', i, 0), J$.G(1033, J$.R(1025, 'servers', servers, 0), 'length', 0), 0))); J$.X1(5577, J$.B(58, '-', i = J$.W(1057, 'i', J$.B(50, '+', J$.U(42, '+', J$.R(1049, 'i', i, 0)), J$.T(1041, 1, 22, false), 0), i, 0), J$.T(1065, 1, 22, false), 0))) {
                                var serverTag = J$.X1(1129, J$.W(1121, 'serverTag', J$.C(64, J$.G(1105, J$.M(1097, J$.G(1089, J$.R(1073, 'servers', servers, 0), J$.R(1081, 'i', i, 0), 4), 'lastIsMaster', 0)(), 'tags', 0)) ? J$._() : J$.T(1113, {}, 11, false), serverTag, 1));
                                var found = J$.X1(1153, J$.W(1145, 'found', J$.T(1137, true, 23, false), found, 1));
                                for (J$._tm_p in J$.H(1241, J$.R(1161, 'tags', tags, 0))) {
                                    var name = J$.X1(1257, J$.W(1249, 'name', J$._tm_p, name, 1));
                                    {
                                        {
                                            if (J$.X1(5553, J$.C(72, J$.B(66, '!=', J$.G(1185, J$.R(1169, 'serverTag', serverTag, 0), J$.R(1177, 'name', name, 0), 4), J$.G(1209, J$.R(1193, 'tags', tags, 0), J$.R(1201, 'name', name, 0), 4), 0))))
                                                J$.X1(1233, found = J$.W(1225, 'found', J$.T(1217, false, 23, false), found, 0));
                                        }
                                    }
                                }
                                if (J$.X1(5561, J$.C(80, J$.R(1265, 'found', found, 0))))
                                    J$.X1(1313, J$.M(1305, J$.R(1273, 'filteredServers', filteredServers, 0), 'push', 0)(J$.G(1297, J$.R(1281, 'servers', servers, 0), J$.R(1289, 'i', i, 0), 4)));
                            }
                            return J$.X1(1337, J$.Rt(1329, J$.R(1321, 'filteredServers', filteredServers, 0)));
                        } catch (J$e) {
                            J$.Ex(5585, J$e);
                        } finally {
                            if (J$.Fr(5593))
                                continue jalangiLabel2006;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1345), filterByTags, 3));
            J$.X1(3057, J$.P(3049, J$.G(1457, J$.R(1449, 'Ping', Ping, 1), 'prototype', 0), 'pickServer', J$.T(3041, function (set, readPreference) {
                jalangiLabel2009:
                    while (true) {
                        try {
                            J$.Fe(2961, arguments.callee, this, arguments);
                            arguments = J$.N(2969, 'arguments', arguments, 4);
                            set = J$.N(2977, 'set', set, 4);
                            readPreference = J$.N(2985, 'readPreference', readPreference, 4);
                            J$.N(2993, 'self', self, 0);
                            J$.N(3001, 'seeds', seeds, 0);
                            J$.N(3009, 'servers', servers, 0);
                            J$.N(3017, 'i', i, 0);
                            J$.N(3025, 'serverList', serverList, 0);
                            J$.N(3033, 'lowest', lowest, 0);
                            var self = J$.X1(1481, J$.W(1473, 'self', J$.R(1465, 'this', this, 0), self, 1));
                            var seeds = J$.X1(1505, J$.W(1497, 'seeds', J$.T(1489, {}, 11, false), seeds, 1));
                            var servers = J$.X1(1529, J$.W(1521, 'servers', J$.T(1513, [], 10, false), servers, 1));
                            if (J$.X1(5601, J$.C(96, J$.G(1545, J$.R(1537, 'set', set, 0), 'primary', 0)))) {
                                J$.X1(1585, J$.M(1577, J$.R(1553, 'servers', servers, 0), 'push', 0)(J$.G(1569, J$.R(1561, 'set', set, 0), 'primary', 0)));
                            }
                            for (var i = J$.X1(1609, J$.W(1601, 'i', J$.T(1593, 0, 22, false), i, 1)); J$.X1(5609, J$.C(104, J$.B(74, '<', J$.R(1617, 'i', i, 0), J$.G(1641, J$.G(1633, J$.R(1625, 'set', set, 0), 'secondaries', 0), 'length', 0), 0))); J$.X1(5617, J$.B(98, '-', i = J$.W(1665, 'i', J$.B(90, '+', J$.U(82, '+', J$.R(1657, 'i', i, 0)), J$.T(1649, 1, 22, false), 0), i, 0), J$.T(1673, 1, 22, false), 0))) {
                                J$.X1(1729, J$.M(1721, J$.R(1681, 'servers', servers, 0), 'push', 0)(J$.G(1713, J$.G(1697, J$.R(1689, 'set', set, 0), 'secondaries', 0), J$.R(1705, 'i', i, 0), 4)));
                            }
                            J$.X1(1777, servers = J$.W(1769, 'servers', J$.F(1761, J$.R(1737, 'filterByTags', filterByTags, 1), 0)(J$.R(1745, 'readPreference', readPreference, 0), J$.R(1753, 'servers', servers, 0)), servers, 0));
                            var serverList = J$.X1(1801, J$.W(1793, 'serverList', J$.T(1785, [], 10, false), serverList, 1));
                            for (var i = J$.X1(1825, J$.W(1817, 'i', J$.T(1809, 0, 22, false), i, 1)); J$.X1(5625, J$.C(120, J$.B(106, '<', J$.R(1833, 'i', i, 0), J$.G(1849, J$.R(1841, 'servers', servers, 0), 'length', 0), 0))); J$.X1(5633, J$.B(130, '-', i = J$.W(1873, 'i', J$.B(122, '+', J$.U(114, '+', J$.R(1865, 'i', i, 0)), J$.T(1857, 1, 22, false), 0), i, 0), J$.T(1881, 1, 22, false), 0))) {
                                J$.X1(2017, J$.M(2009, J$.R(1889, 'serverList', serverList, 0), 'push', 0)(J$.T(2001, {
                                    name: J$.G(1921, J$.G(1913, J$.R(1897, 'servers', servers, 0), J$.R(1905, 'i', i, 0), 4), 'name', 0),
                                    time: J$.C(112, J$.G(1985, J$.G(1945, J$.G(1937, J$.R(1929, 'self', self, 0), 's', 0), 'pings', 0), J$.G(1977, J$.G(1969, J$.R(1953, 'servers', servers, 0), J$.R(1961, 'i', i, 0), 4), 'name', 0), 4)) ? J$._() : J$.T(1993, 0, 22, false)
                                }, 11, false)));
                            }
                            J$.X1(2129, J$.M(2121, J$.R(2025, 'serverList', serverList, 0), 'sort', 0)(J$.T(2113, function (a, b) {
                                jalangiLabel2007:
                                    while (true) {
                                        try {
                                            J$.Fe(2081, arguments.callee, this, arguments);
                                            arguments = J$.N(2089, 'arguments', arguments, 4);
                                            a = J$.N(2097, 'a', a, 4);
                                            b = J$.N(2105, 'b', b, 4);
                                            return J$.X1(2073, J$.Rt(2065, J$.B(138, '>', J$.G(2041, J$.R(2033, 'a', a, 0), 'time', 0), J$.G(2057, J$.R(2049, 'b', b, 0), 'time', 0), 0)));
                                        } catch (J$e) {
                                            J$.Ex(5641, J$e);
                                        } finally {
                                            if (J$.Fr(5649))
                                                continue jalangiLabel2007;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 2081)));
                            var lowest = J$.X1(2209, J$.W(2201, 'lowest', J$.X1(5657, J$.C(128, J$.B(146, '>', J$.G(2145, J$.R(2137, 'serverList', serverList, 0), 'length', 0), J$.T(2153, 0, 22, false), 0))) ? J$.G(2185, J$.G(2177, J$.R(2161, 'serverList', serverList, 0), J$.T(2169, 0, 22, false), 4), 'time', 0) : J$.T(2193, 0, 22, false), lowest, 1));
                            J$.X1(2337, serverList = J$.W(2329, 'serverList', J$.M(2321, J$.R(2217, 'serverList', serverList, 0), 'filter', 0)(J$.T(2313, function (s) {
                                jalangiLabel2008:
                                    while (true) {
                                        try {
                                            J$.Fe(2289, arguments.callee, this, arguments);
                                            arguments = J$.N(2297, 'arguments', arguments, 4);
                                            s = J$.N(2305, 's', s, 4);
                                            return J$.X1(2281, J$.Rt(2273, J$.B(162, '<=', J$.G(2233, J$.R(2225, 's', s, 0), 'time', 0), J$.B(154, '+', J$.R(2241, 'lowest', lowest, 0), J$.G(2265, J$.G(2257, J$.R(2249, 'self', self, 0), 's', 0), 'acceptableLatency', 0), 0), 0)));
                                        } catch (J$e) {
                                            J$.Ex(5665, J$e);
                                        } finally {
                                            if (J$.Fr(5673))
                                                continue jalangiLabel2008;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 2289)), serverList, 0));
                            if (J$.X1(5697, J$.C(160, J$.C(136, J$.B(170, '==', J$.G(2353, J$.R(2345, 'serverList', serverList, 0), 'length', 0), J$.T(2361, 0, 22, false), 0)) ? J$.G(2377, J$.R(2369, 'set', set, 0), 'primary', 0) : J$._()))) {
                                if (J$.X1(5681, J$.C(144, J$.M(2409, J$.G(2401, J$.G(2393, J$.R(2385, 'self', self, 0), 's', 0), 'logger', 0), 'isInfo', 0)())))
                                    J$.X1(2497, J$.M(2489, J$.G(2433, J$.G(2425, J$.R(2417, 'self', self, 0), 's', 0), 'logger', 0), 'info', 0)(J$.F(2481, J$.R(2441, 'f', f, 1), 0)(J$.T(2449, 'picked primary server [%s]', 21, false), J$.G(2473, J$.G(2465, J$.R(2457, 'set', set, 0), 'primary', 0), 'name', 0))));
                                return J$.X1(2529, J$.Rt(2521, J$.G(2513, J$.R(2505, 'set', set, 0), 'primary', 0)));
                            } else if (J$.X1(5689, J$.C(152, J$.B(178, '==', J$.G(2545, J$.R(2537, 'serverList', serverList, 0), 'length', 0), J$.T(2553, 0, 22, false), 0)))) {
                                return J$.X1(2577, J$.Rt(2569, J$.T(2561, null, 25, false)));
                            }
                            if (J$.X1(5705, J$.C(168, J$.M(2609, J$.G(2601, J$.G(2593, J$.R(2585, 'self', self, 0), 's', 0), 'logger', 0), 'isInfo', 0)())))
                                J$.X1(2737, J$.M(2729, J$.G(2633, J$.G(2625, J$.R(2617, 'self', self, 0), 's', 0), 'logger', 0), 'info', 0)(J$.F(2721, J$.R(2641, 'f', f, 1), 0)(J$.T(2649, 'picked server [%s] with ping latency [%s]', 21, false), J$.G(2681, J$.G(2673, J$.R(2657, 'serverList', serverList, 0), J$.T(2665, 0, 22, false), 4), 'name', 0), J$.G(2713, J$.G(2705, J$.R(2689, 'serverList', serverList, 0), J$.T(2697, 0, 22, false), 4), 'time', 0))));
                            J$.X1(2801, J$.P(2793, J$.G(2753, J$.R(2745, 'self', self, 0), 's', 0), 'index', J$.B(186, '+', J$.G(2777, J$.G(2769, J$.R(2761, 'self', self, 0), 's', 0), 'index', 0), J$.T(2785, 1, 22, false), 0), 0));
                            J$.X1(2873, J$.P(2865, J$.G(2817, J$.R(2809, 'self', self, 0), 's', 0), 'index', J$.B(194, '%', J$.G(2841, J$.G(2833, J$.R(2825, 'self', self, 0), 's', 0), 'index', 0), J$.G(2857, J$.R(2849, 'serverList', serverList, 0), 'length', 0), 0), 0));
                            return J$.X1(2953, J$.Rt(2945, J$.M(2937, J$.R(2881, 'set', set, 0), 'get', 0)(J$.G(2929, J$.G(2921, J$.R(2889, 'serverList', serverList, 0), J$.G(2913, J$.G(2905, J$.R(2897, 'self', self, 0), 's', 0), 'index', 0), 4), 'name', 0))));
                        } catch (J$e) {
                            J$.Ex(5713, J$e);
                        } finally {
                            if (J$.Fr(5721))
                                continue jalangiLabel2009;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2961), 0));
            J$.X1(3137, J$.P(3129, J$.G(3073, J$.R(3065, 'Ping', Ping, 1), 'prototype', 0), 'startOperation', J$.T(3121, function (server, query, date) {
                jalangiLabel2010:
                    while (true) {
                        try {
                            J$.Fe(3081, arguments.callee, this, arguments);
                            arguments = J$.N(3089, 'arguments', arguments, 4);
                            server = J$.N(3097, 'server', server, 4);
                            query = J$.N(3105, 'query', query, 4);
                            date = J$.N(3113, 'date', date, 4);
                        } catch (J$e) {
                            J$.Ex(5729, J$e);
                        } finally {
                            if (J$.Fr(5737))
                                continue jalangiLabel2010;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3081), 0));
            J$.X1(3225, J$.P(3217, J$.G(3153, J$.R(3145, 'Ping', Ping, 1), 'prototype', 0), 'endOperation', J$.T(3209, function (server, err, result, date) {
                jalangiLabel2011:
                    while (true) {
                        try {
                            J$.Fe(3161, arguments.callee, this, arguments);
                            arguments = J$.N(3169, 'arguments', arguments, 4);
                            server = J$.N(3177, 'server', server, 4);
                            err = J$.N(3185, 'err', err, 4);
                            result = J$.N(3193, 'result', result, 4);
                            date = J$.N(3201, 'date', date, 4);
                        } catch (J$e) {
                            J$.Ex(5745, J$e);
                        } finally {
                            if (J$.Fr(5753))
                                continue jalangiLabel2011;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3161), 0));
            J$.X1(4385, J$.P(4377, J$.G(3241, J$.R(3233, 'Ping', Ping, 1), 'prototype', 0), 'ha', J$.T(4369, function (topology, state, callback) {
                jalangiLabel2014:
                    while (true) {
                        try {
                            J$.Fe(4289, arguments.callee, this, arguments);
                            arguments = J$.N(4297, 'arguments', arguments, 4);
                            topology = J$.N(4305, 'topology', topology, 4);
                            state = J$.N(4313, 'state', state, 4);
                            callback = J$.N(4321, 'callback', callback, 4);
                            J$.N(4329, 'self', self, 0);
                            J$.N(4337, 'servers', servers, 0);
                            J$.N(4345, 'count', count, 0);
                            J$.N(4353, 'diff', diff, 0);
                            J$.N(4361, 'operation', operation, 0);
                            var self = J$.X1(3265, J$.W(3257, 'self', J$.R(3249, 'this', this, 0), self, 1));
                            var servers = J$.X1(3297, J$.W(3289, 'servers', J$.M(3281, J$.R(3273, 'state', state, 0), 'getAll', 0)(), servers, 1));
                            var count = J$.X1(3329, J$.W(3321, 'count', J$.G(3313, J$.R(3305, 'servers', servers, 0), 'length', 0), count, 1));
                            if (J$.X1(5761, J$.C(176, J$.B(202, '==', J$.G(3345, J$.R(3337, 'servers', servers, 0), 'length', 0), J$.T(3353, 0, 22, false), 0))))
                                return J$.X1(3401, J$.Rt(3393, J$.F(3385, J$.R(3361, 'callback', callback, 0), 0)(J$.T(3369, null, 25, false), J$.T(3377, null, 25, false))));
                            if (J$.X1(5777, J$.C(192, J$.B(210, '!=', J$.G(3425, J$.G(3417, J$.R(3409, 'self', self, 0), 's', 0), 'lastPing', 0), J$.T(3433, null, 25, false), 0)))) {
                                var diff = J$.X1(3505, J$.W(3497, 'diff', J$.B(218, '-', J$.M(3457, J$.F(3449, J$.R(3441, 'Date', Date, 2), 1)(), 'getTime', 0)(), J$.M(3489, J$.G(3481, J$.G(3473, J$.R(3465, 'self', self, 0), 's', 0), 'lastPing', 0), 'getTime', 0)(), 0), diff, 1));
                                if (J$.X1(5769, J$.C(184, J$.B(226, '<', J$.R(3513, 'diff', diff, 0), J$.G(3537, J$.G(3529, J$.R(3521, 'self', self, 0), 's', 0), 'pingInterval', 0), 0))))
                                    return J$.X1(3585, J$.Rt(3577, J$.F(3569, J$.R(3545, 'callback', callback, 0), 0)(J$.T(3553, null, 25, false), J$.T(3561, null, 25, false))));
                            }
                            var operation = J$.X1(4217, J$.W(4209, 'operation', J$.T(4201, function (_server) {
                                jalangiLabel2013:
                                    while (true) {
                                        try {
                                            J$.Fe(4169, arguments.callee, this, arguments);
                                            arguments = J$.N(4177, 'arguments', arguments, 4);
                                            _server = J$.N(4185, '_server', _server, 4);
                                            J$.N(4193, 'start', start, 0);
                                            var start = J$.X1(3617, J$.W(3609, 'start', J$.F(3601, J$.R(3593, 'Date', Date, 2), 1)(), start, 1));
                                            J$.X1(4161, J$.M(4153, J$.R(3625, '_server', _server, 0), 'command', 0)(J$.T(3633, 'system.$cmd', 21, false), J$.T(3649, {
                                                ismaster: J$.T(3641, 1, 22, false)
                                            }, 11, false), J$.T(4145, function (err, r) {
                                                jalangiLabel2012:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(4105, arguments.callee, this, arguments);
                                                            arguments = J$.N(4113, 'arguments', arguments, 4);
                                                            err = J$.N(4121, 'err', err, 4);
                                                            r = J$.N(4129, 'r', r, 4);
                                                            J$.N(4137, 'time', time, 0);
                                                            J$.X1(3681, count = J$.W(3673, 'count', J$.B(234, '-', J$.R(3657, 'count', count, 0), J$.T(3665, 1, 22, false), 0), count, 0));
                                                            var time = J$.X1(3737, J$.W(3729, 'time', J$.B(242, '-', J$.M(3705, J$.F(3697, J$.R(3689, 'Date', Date, 2), 1)(), 'getTime', 0)(), J$.M(3721, J$.R(3713, 'start', start, 0), 'getTime', 0)(), 0), time, 1));
                                                            J$.X1(3801, J$.P(3793, J$.G(3761, J$.G(3753, J$.R(3745, 'self', self, 0), 's', 0), 'pings', 0), J$.G(3777, J$.R(3769, '_server', _server, 0), 'name', 0), J$.R(3785, 'time', time, 0), 2));
                                                            if (J$.X1(5785, J$.C(200, J$.M(3833, J$.G(3825, J$.G(3817, J$.R(3809, 'self', self, 0), 's', 0), 'logger', 0), 'isDebug', 0)())))
                                                                J$.X1(3921, J$.M(3913, J$.G(3857, J$.G(3849, J$.R(3841, 'self', self, 0), 's', 0), 'logger', 0), 'debug', 0)(J$.F(3905, J$.R(3865, 'f', f, 1), 0)(J$.T(3873, 'ha latency for server [%s] is [%s] ms', 21, false), J$.G(3889, J$.R(3881, '_server', _server, 0), 'name', 0), J$.R(3897, 'time', time, 0))));
                                                            if (J$.X1(5801, J$.C(216, J$.B(250, '==', J$.R(3929, 'count', count, 0), J$.T(3937, 0, 22, false), 0)))) {
                                                                J$.X1(4009, J$.M(4001, J$.R(3945, 'topology', topology, 0), 'emit', 0)(J$.T(3953, 'ping', 21, false), J$.R(3961, 'err', err, 0), J$.X1(5793, J$.C(208, J$.R(3969, 'r', r, 0))) ? J$.G(3985, J$.R(3977, 'r', r, 0), 'result', 0) : J$.T(3993, null, 25, false)));
                                                                J$.X1(4057, J$.P(4049, J$.G(4025, J$.R(4017, 'self', self, 0), 's', 0), 'lastPing', J$.F(4041, J$.R(4033, 'Date', Date, 2), 1)(), 0));
                                                                J$.X1(4097, J$.F(4089, J$.R(4065, 'callback', callback, 0), 0)(J$.T(4073, null, 25, false), J$.T(4081, null, 25, false)));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(5809, J$e);
                                                        } finally {
                                                            if (J$.Fr(5817))
                                                                continue jalangiLabel2012;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 4105)));
                                        } catch (J$e) {
                                            J$.Ex(5825, J$e);
                                        } finally {
                                            if (J$.Fr(5833))
                                                continue jalangiLabel2013;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 4169), operation, 1));
                            while (J$.X1(5841, J$.C(224, J$.B(258, '>', J$.G(4233, J$.R(4225, 'servers', servers, 0), 'length', 0), J$.T(4241, 0, 22, false), 0)))) {
                                J$.X1(4281, J$.F(4273, J$.R(4249, 'operation', operation, 0), 0)(J$.M(4265, J$.R(4257, 'servers', servers, 0), 'shift', 0)()));
                            }
                        } catch (J$e) {
                            J$.Ex(5849, J$e);
                        } finally {
                            if (J$.Fr(5857))
                                continue jalangiLabel2014;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4289), 0));
            var removeServer = J$.X1(4489, J$.W(4481, 'removeServer', J$.T(4473, function (self, server) {
                jalangiLabel2015:
                    while (true) {
                        try {
                            J$.Fe(4441, arguments.callee, this, arguments);
                            arguments = J$.N(4449, 'arguments', arguments, 4);
                            self = J$.N(4457, 'self', self, 4);
                            server = J$.N(4465, 'server', server, 4);
                            J$.X1(4433, J$.B(266, 'delete', J$.G(4409, J$.G(4401, J$.R(4393, 'self', self, 0), 's', 0), 'pings', 0), J$.G(4425, J$.R(4417, 'server', server, 0), 'name', 0), 4));
                        } catch (J$e) {
                            J$.Ex(5865, J$e);
                        } finally {
                            if (J$.Fr(5873))
                                continue jalangiLabel2015;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4441), removeServer, 3));
            J$.X1(4593, J$.P(4585, J$.G(4505, J$.R(4497, 'Ping', Ping, 1), 'prototype', 0), 'close', J$.T(4577, function (server) {
                jalangiLabel2016:
                    while (true) {
                        try {
                            J$.Fe(4553, arguments.callee, this, arguments);
                            arguments = J$.N(4561, 'arguments', arguments, 4);
                            server = J$.N(4569, 'server', server, 4);
                            J$.X1(4545, J$.F(4537, J$.R(4513, 'removeServer', removeServer, 1), 0)(J$.R(4521, 'this', this, 0), J$.R(4529, 'server', server, 0)));
                        } catch (J$e) {
                            J$.Ex(5881, J$e);
                        } finally {
                            if (J$.Fr(5889))
                                continue jalangiLabel2016;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4553), 0));
            J$.X1(4697, J$.P(4689, J$.G(4609, J$.R(4601, 'Ping', Ping, 1), 'prototype', 0), 'error', J$.T(4681, function (server) {
                jalangiLabel2017:
                    while (true) {
                        try {
                            J$.Fe(4657, arguments.callee, this, arguments);
                            arguments = J$.N(4665, 'arguments', arguments, 4);
                            server = J$.N(4673, 'server', server, 4);
                            J$.X1(4649, J$.F(4641, J$.R(4617, 'removeServer', removeServer, 1), 0)(J$.R(4625, 'this', this, 0), J$.R(4633, 'server', server, 0)));
                        } catch (J$e) {
                            J$.Ex(5897, J$e);
                        } finally {
                            if (J$.Fr(5905))
                                continue jalangiLabel2017;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4657), 0));
            J$.X1(4801, J$.P(4793, J$.G(4713, J$.R(4705, 'Ping', Ping, 1), 'prototype', 0), 'timeout', J$.T(4785, function (server) {
                jalangiLabel2018:
                    while (true) {
                        try {
                            J$.Fe(4761, arguments.callee, this, arguments);
                            arguments = J$.N(4769, 'arguments', arguments, 4);
                            server = J$.N(4777, 'server', server, 4);
                            J$.X1(4753, J$.F(4745, J$.R(4721, 'removeServer', removeServer, 1), 0)(J$.R(4729, 'this', this, 0), J$.R(4737, 'server', server, 0)));
                        } catch (J$e) {
                            J$.Ex(5913, J$e);
                        } finally {
                            if (J$.Fr(5921))
                                continue jalangiLabel2018;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4761), 0));
            J$.X1(5369, J$.P(5361, J$.G(4817, J$.R(4809, 'Ping', Ping, 1), 'prototype', 0), 'connect', J$.T(5353, function (server, callback) {
                jalangiLabel2020:
                    while (true) {
                        try {
                            J$.Fe(5305, arguments.callee, this, arguments);
                            arguments = J$.N(5313, 'arguments', arguments, 4);
                            server = J$.N(5321, 'server', server, 4);
                            callback = J$.N(5329, 'callback', callback, 4);
                            J$.N(5337, 'self', self, 0);
                            J$.N(5345, 'start', start, 0);
                            var self = J$.X1(4841, J$.W(4833, 'self', J$.R(4825, 'this', this, 0), self, 1));
                            var start = J$.X1(4873, J$.W(4865, 'start', J$.F(4857, J$.R(4849, 'Date', Date, 2), 1)(), start, 1));
                            J$.X1(5297, J$.M(5289, J$.R(4881, 'server', server, 0), 'command', 0)(J$.T(4889, 'system.$cmd', 21, false), J$.T(4905, {
                                ismaster: J$.T(4897, 1, 22, false)
                            }, 11, false), J$.T(5281, function (err, r) {
                                jalangiLabel2019:
                                    while (true) {
                                        try {
                                            J$.Fe(5241, arguments.callee, this, arguments);
                                            arguments = J$.N(5249, 'arguments', arguments, 4);
                                            err = J$.N(5257, 'err', err, 4);
                                            r = J$.N(5265, 'r', r, 4);
                                            J$.N(5273, 'time', time, 0);
                                            var time = J$.X1(4961, J$.W(4953, 'time', J$.B(274, '-', J$.M(4929, J$.F(4921, J$.R(4913, 'Date', Date, 2), 1)(), 'getTime', 0)(), J$.M(4945, J$.R(4937, 'start', start, 0), 'getTime', 0)(), 0), time, 1));
                                            J$.X1(5025, J$.P(5017, J$.G(4985, J$.G(4977, J$.R(4969, 'self', self, 0), 's', 0), 'pings', 0), J$.G(5001, J$.R(4993, 'server', server, 0), 'name', 0), J$.R(5009, 'time', time, 0), 2));
                                            if (J$.X1(5929, J$.C(232, J$.M(5057, J$.G(5049, J$.G(5041, J$.R(5033, 'self', self, 0), 's', 0), 'logger', 0), 'isDebug', 0)())))
                                                J$.X1(5145, J$.M(5137, J$.G(5081, J$.G(5073, J$.R(5065, 'self', self, 0), 's', 0), 'logger', 0), 'debug', 0)(J$.F(5129, J$.R(5089, 'f', f, 1), 0)(J$.T(5097, 'connect latency for server [%s] is [%s] ms', 21, false), J$.G(5113, J$.R(5105, 'server', server, 0), 'name', 0), J$.R(5121, 'time', time, 0))));
                                            J$.X1(5193, J$.P(5185, J$.G(5161, J$.R(5153, 'self', self, 0), 's', 0), 'lastPing', J$.F(5177, J$.R(5169, 'Date', Date, 2), 1)(), 0));
                                            J$.X1(5233, J$.F(5225, J$.R(5201, 'callback', callback, 0), 0)(J$.T(5209, null, 25, false), J$.T(5217, null, 25, false)));
                                        } catch (J$e) {
                                            J$.Ex(5937, J$e);
                                        } finally {
                                            if (J$.Fr(5945))
                                                continue jalangiLabel2019;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 5241)));
                        } catch (J$e) {
                            J$.Ex(5953, J$e);
                        } finally {
                            if (J$.Fr(5961))
                                continue jalangiLabel2020;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5305), 0));
            J$.X1(5401, J$.P(5393, J$.R(5377, 'module', module, 2), 'exports', J$.R(5385, 'Ping', Ping, 1), 0));
        } catch (J$e) {
            J$.Ex(5969, J$e);
        } finally {
            if (J$.Sr(5977)) {
                J$.L();
                continue jalangiLabel2021;
            } else {
                J$.L();
                break jalangiLabel2021;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
