J$.iids = {"8":[46,13,46,29],"9":[1,20,1,27],"10":[42,16,42,33],"16":[49,9,49,15],"17":[1,28,1,32],"18":[49,9,49,15],"24":[51,9,51,62],"25":[1,20,1,33],"26":[51,9,51,62],"32":[61,13,61,29],"33":[1,20,1,33],"34":[57,16,57,33],"40":[64,9,64,15],"41":[1,20,1,33],"42":[64,9,64,15],"48":[84,12,84,46],"49":[2,26,2,38],"50":[84,12,84,46],"56":[103,22,103,62],"57":[2,26,2,45],"58":[99,12,99,46],"64":[105,13,105,117],"65":[2,26,2,45],"66":[105,43,105,93],"72":[105,13,105,117],"73":[2,26,2,45],"74":[105,13,105,93],"80":[109,9,109,107],"81":[3,1,3,13],"82":[109,9,109,48],"88":[109,9,109,107],"89":[3,1,3,14],"90":[109,52,109,107],"96":[112,9,112,28],"97":[4,16,4,23],"98":[112,9,112,28],"104":[119,15,119,28],"105":[4,24,4,30],"106":[114,21,114,37],"112":[121,9,121,33],"113":[4,16,4,31],"114":[114,20,114,55],"120":[123,9,123,29],"121":[4,16,4,40],"122":[121,9,121,33],"128":[126,13,126,67],"129":[4,46,4,53],"130":[123,9,123,29],"136":[126,13,126,67],"137":[4,54,4,60],"138":[126,13,126,26],"144":[129,20,129,40],"145":[4,46,4,61],"146":[126,13,126,38],"152":[130,16,130,28],"153":[4,46,4,68],"154":[126,42,126,55],"160":[136,25,136,53],"161":[4,74,4,81],"162":[126,42,126,67],"168":[137,21,137,47],"169":[4,82,4,88],"170":[129,20,129,40],"176":[138,27,138,57],"177":[4,74,4,89],"178":[146,20,146,44],"184":[140,17,140,53],"185":[4,113,4,120],"186":[146,20,146,57],"192":[146,20,146,57],"193":[4,121,4,142],"194":[149,13,149,23],"200":[152,22,152,50],"201":[4,113,4,143],"208":[155,33,155,66],"209":[4,113,4,163],"210":[149,13,149,23],"216":[161,20,161,38],"217":[4,180,4,187],"218":[161,20,161,38],"224":[191,9,191,72],"225":[4,188,4,196],"226":[191,70,191,72],"232":[199,16,199,28],"233":[4,180,4,197],"234":[191,9,191,72],"240":[197,9,197,22],"241":[4,180,4,210],"242":[197,9,197,22],"248":[208,9,208,36],"249":[4,226,4,233],"250":[199,16,199,28],"256":[215,9,215,17],"257":[4,234,4,245],"258":[208,9,208,36],"264":[247,13,247,35],"265":[4,226,4,246],"266":[230,12,230,30],"272":[230,12,230,30],"273":[4,255,4,262],"274":[254,22,254,56],"280":[254,9,254,56],"281":[4,263,4,269],"282":[262,12,262,37],"288":[254,9,254,56],"289":[4,255,4,270],"290":[265,9,265,23],"296":[265,9,265,37],"297":[4,255,4,279],"298":[265,9,265,37],"299":[4,255,4,277],"304":[267,9,267,34],"305":[4,255,4,284],"306":[267,9,267,34],"312":[269,9,269,64],"313":[4,300,4,307],"314":[269,9,269,28],"320":[269,9,269,64],"321":[4,308,4,319],"322":[269,32,269,64],"328":[276,9,276,37],"329":[4,300,4,320],"330":[276,9,276,23],"336":[278,9,278,34],"337":[4,331,4,338],"338":[276,9,276,37],"344":[280,9,280,64],"345":[4,339,4,349],"346":[278,9,278,34],"352":[280,9,280,64],"353":[4,331,4,350],"354":[280,9,280,28],"360":[287,9,287,37],"361":[4,361,4,368],"362":[280,32,280,64],"368":[289,9,289,34],"369":[4,369,4,391],"370":[287,9,287,23],"376":[291,9,291,64],"377":[4,361,4,392],"378":[287,9,287,37],"384":[291,9,291,64],"385":[4,411,4,418],"386":[289,9,289,34],"392":[298,9,298,37],"393":[4,419,4,438],"394":[291,9,291,28],"400":[300,9,300,34],"401":[4,411,4,439],"402":[291,32,291,64],"408":[303,9,303,64],"409":[4,451,4,458],"410":[298,9,298,23],"416":[303,9,303,64],"417":[4,459,4,470],"418":[298,9,298,37],"424":[308,15,308,28],"425":[4,451,4,471],"426":[300,9,300,34],"432":[317,25,317,35],"433":[4,486,4,493],"434":[303,9,303,28],"440":[316,21,316,31],"441":[4,494,4,504],"442":[303,32,303,64],"448":[313,25,313,43],"449":[4,486,4,505],"450":[313,25,313,43],"456":[309,9,309,22],"457":[4,16,4,40],"458":[313,45,313,48],"464":[326,48,326,68],"465":[4,16,4,40],"472":[330,9,330,23],"473":[4,46,4,68],"474":[313,45,313,48],"480":[333,13,333,23],"481":[4,46,4,68],"482":[315,25,315,34],"488":[339,21,339,40],"489":[4,74,4,89],"490":[316,21,316,31],"496":[340,23,340,67],"497":[4,74,4,89],"498":[330,9,330,23],"504":[348,9,348,74],"505":[4,113,4,163],"506":[348,9,348,48],"512":[348,9,348,74],"513":[4,113,4,163],"514":[348,52,348,74],"520":[363,21,363,24],"521":[4,180,4,210],"522":[355,12,355,30],"528":[365,21,365,23],"529":[4,180,4,210],"530":[362,25,362,34],"536":[368,25,368,64],"537":[4,226,4,246],"538":[365,21,365,23],"544":[376,25,376,40],"545":[4,226,4,246],"546":[367,21,367,31],"552":[378,25,378,32],"553":[4,255,4,284],"554":[368,25,368,64],"560":[367,21,367,31],"561":[4,255,4,284],"562":[376,25,376,40],"568":[355,12,355,30],"569":[4,300,4,320],"570":[387,9,387,48],"576":[387,9,387,48],"577":[4,300,4,320],"578":[397,9,397,23],"584":[395,15,395,28],"585":[4,331,4,350],"586":[410,13,410,37],"592":[397,9,397,23],"593":[4,331,4,350],"594":[412,13,412,37],"600":[402,15,402,28],"601":[4,361,4,392],"602":[414,13,414,40],"608":[410,13,410,37],"609":[4,361,4,392],"610":[414,44,414,66],"616":[412,13,412,37],"617":[4,411,4,439],"618":[417,20,417,41],"624":[414,13,414,66],"625":[4,411,4,439],"626":[418,33,418,54],"632":[417,20,417,41],"633":[4,451,4,471],"634":[426,13,426,44],"640":[414,13,414,66],"641":[4,451,4,471],"642":[431,16,431,46],"648":[420,13,420,71],"649":[4,486,4,505],"650":[457,56,457,106],"656":[420,13,420,71],"657":[4,486,4,505],"658":[481,13,481,61],"664":[423,13,423,35],"665":[5,20,5,34],"666":[494,13,494,61],"672":[426,13,426,44],"673":[5,20,5,34],"674":[505,13,505,61],"680":[429,13,429,35],"681":[5,20,5,34],"682":[534,17,534,26],"688":[453,17,453,39],"689":[6,18,6,30],"690":[534,30,534,78],"696":[431,16,431,46],"697":[6,18,6,30],"698":[537,17,537,68],"704":[462,13,462,34],"705":[6,18,6,30],"706":[537,72,537,119],"712":[478,13,478,34],"713":[7,17,7,28],"714":[537,123,537,139],"720":[481,13,481,61],"721":[7,17,7,28],"722":[541,17,541,68],"728":[485,13,485,28],"729":[7,17,7,28],"730":[541,72,541,140],"736":[491,13,491,34],"737":[8,17,8,28],"738":[541,144,541,154],"744":[494,13,494,61],"745":[8,17,8,28],"746":[545,17,545,44],"752":[502,13,502,34],"753":[8,17,8,28],"754":[548,24,548,49],"760":[505,13,505,61],"761":[10,5,10,6],"762":[556,13,556,42],"768":[513,13,513,34],"769":[10,5,10,11],"770":[559,25,559,53],"776":[526,17,526,38],"777":[11,5,11,6],"778":[559,55,559,58],"784":[534,17,534,78],"785":[11,5,11,15],"792":[534,17,534,78],"793":[12,5,12,6],"794":[559,55,559,58],"800":[537,17,537,119],"801":[12,5,12,13],"802":[561,29,561,38],"808":[537,17,537,139],"809":[13,5,13,6],"810":[562,25,562,35],"816":[537,17,537,139],"817":[13,5,13,11],"818":[578,21,578,36],"824":[541,17,541,140],"825":[14,5,14,6],"826":[578,38,578,41],"832":[541,17,541,154],"833":[14,5,14,12],"840":[541,17,541,154],"841":[15,5,15,6],"842":[578,38,578,41],"848":[548,24,548,49],"849":[15,5,15,13],"850":[582,9,582,15],"856":[545,17,545,44],"857":[16,5,16,6],"858":[587,29,587,42],"864":[553,13,553,33],"865":[16,5,16,13],"866":[593,21,593,49],"872":[556,13,556,42],"873":[17,5,17,6],"874":[593,51,593,54],"880":[562,25,562,35],"881":[17,5,17,16],"888":[559,25,559,53],"889":[18,5,18,6],"890":[593,51,593,54],"896":[579,13,579,35],"897":[18,5,18,13],"898":[594,13,594,42],"904":[578,21,578,36],"905":[19,5,19,6],"906":[601,9,601,39],"912":[582,9,582,15],"913":[19,5,19,13],"914":[605,9,605,23],"920":[594,13,594,42],"921":[9,17,20,2],"922":[605,9,605,37],"928":[593,21,593,49],"929":[9,17,20,2],"930":[616,9,616,23],"936":[600,15,600,28],"937":[9,17,20,2],"944":[601,9,601,39],"945":[21,20,21,24],"952":[605,9,605,37],"953":[21,20,21,24],"960":[610,15,610,28],"961":[21,20,21,24],"968":[616,9,616,23],"969":[22,16,22,17],"977":[22,16,22,17],"985":[22,16,22,17],"993":[24,16,24,18],"1001":[24,16,24,18],"1009":[24,16,24,18],"1017":[25,22,25,29],"1025":[26,9,26,13],"1033":[26,14,26,18],"1041":[26,22,26,29],"1049":[26,30,26,34],"1057":[26,22,26,35],"1065":[26,9,26,35],"1073":[26,9,26,36],"1081":[25,22,25,29],"1089":[25,5,27,6],"1097":[25,5,27,6],"1105":[28,12,28,16],"1113":[28,12,28,16],"1121":[28,5,28,17],"1129":[23,20,29,2],"1137":[23,20,29,2],"1145":[23,20,29,2],"1153":[23,20,29,2],"1161":[23,20,29,2],"1169":[23,20,29,2],"1177":[23,20,29,2],"1185":[23,20,29,2],"1193":[31,5,31,9],"1201":[32,27,32,29],"1209":[33,30,33,32],"1217":[34,35,34,59],"1225":[35,28,35,34],"1233":[35,28,35,44],"1241":[36,27,36,43],"1249":[37,16,37,17],"1257":[31,14,38,6],"1265":[31,5,38,6],"1273":[31,5,38,7],"1281":[30,13,39,2],"1289":[30,13,39,2],"1297":[30,13,39,2],"1305":[30,13,39,2],"1313":[30,13,39,2],"1321":[30,13,39,2],"1329":[30,13,39,2],"1337":[40,1,40,6],"1345":[40,1,40,16],"1353":[41,5,41,9],"1361":[41,5,41,11],"1369":[41,34,41,38],"1377":[41,34,41,40],"1385":[41,34,41,60],"1393":[42,17,42,18],"1401":[42,26,42,32],"1409":[42,17,42,33],"1411":[42,17,42,25],"1417":[42,16,42,33],"1425":[42,9,42,34],"1433":[41,68,43,6],"1441":[41,68,43,6],"1449":[41,68,43,6],"1457":[41,68,43,6],"1465":[41,34,43,7],"1467":[41,34,41,67],"1473":[41,5,43,7],"1481":[41,5,43,8],"1489":[44,17,44,22],"1497":[44,17,44,22],"1505":[44,17,44,22],"1513":[45,5,45,9],"1521":[45,5,45,11],"1529":[45,5,45,28],"1537":[46,13,46,14],"1545":[46,22,46,28],"1553":[46,13,46,29],"1555":[46,13,46,21],"1561":[47,21,47,25],"1569":[47,21,47,25],"1577":[47,13,47,26],"1585":[45,37,48,6],"1593":[45,37,48,6],"1601":[45,37,48,6],"1609":[45,37,48,6],"1617":[45,5,48,7],"1619":[45,5,45,36],"1625":[45,5,48,8],"1633":[49,10,49,15],"1641":[50,9,50,13],"1649":[50,9,50,15],"1657":[50,9,50,32],"1665":[50,38,50,44],"1673":[50,9,50,45],"1675":[50,9,50,37],"1681":[50,9,50,46],"1689":[51,9,51,13],"1697":[51,9,51,15],"1705":[51,9,51,33],"1713":[51,36,51,42],"1721":[51,36,51,44],"1729":[51,36,51,62],"1737":[52,9,52,13],"1745":[52,9,52,15],"1753":[52,36,52,42],"1761":[52,36,52,44],"1769":[52,36,52,62],"1777":[52,9,52,62],"1785":[52,9,52,63],"1793":[40,29,54,2],"1801":[40,29,54,2],"1809":[40,29,54,2],"1817":[40,29,54,2],"1825":[40,29,54,2],"1833":[40,1,54,2],"1841":[40,1,54,3],"1849":[55,1,55,6],"1857":[55,1,55,16],"1865":[56,5,56,9],"1873":[56,5,56,11],"1881":[56,31,56,35],"1889":[56,31,56,37],"1897":[56,31,56,54],"1905":[57,17,57,18],"1913":[57,26,57,32],"1921":[57,17,57,33],"1923":[57,17,57,25],"1929":[57,16,57,33],"1937":[57,9,57,34],"1945":[56,62,58,6],"1953":[56,62,58,6],"1961":[56,62,58,6],"1969":[56,62,58,6],"1977":[56,31,58,7],"1979":[56,31,56,61],"1985":[56,5,58,7],"1993":[56,5,58,8],"2001":[59,17,59,22],"2009":[59,17,59,22],"2017":[59,17,59,22],"2025":[60,5,60,9],"2033":[60,5,60,11],"2041":[60,5,60,31],"2049":[61,13,61,14],"2057":[61,22,61,28],"2065":[61,13,61,29],"2067":[61,13,61,21],"2073":[62,21,62,25],"2081":[62,21,62,25],"2089":[62,13,62,26],"2097":[60,40,63,6],"2105":[60,40,63,6],"2113":[60,40,63,6],"2121":[60,40,63,6],"2129":[60,5,63,7],"2131":[60,5,60,39],"2137":[60,5,63,8],"2145":[64,10,64,15],"2153":[65,9,65,13],"2161":[65,9,65,15],"2169":[65,9,65,35],"2177":[65,41,65,47],"2185":[65,9,65,48],"2187":[65,9,65,40],"2193":[65,9,65,49],"2201":[55,32,66,2],"2209":[55,32,66,2],"2217":[55,32,66,2],"2225":[55,32,66,2],"2233":[55,32,66,2],"2241":[55,1,66,2],"2249":[55,1,66,3],"2257":[67,1,67,6],"2265":[67,1,67,16],"2273":[68,12,68,16],"2281":[68,12,68,18],"2289":[68,12,68,38],"2297":[68,45,68,46],"2305":[68,12,68,47],"2307":[68,12,68,44],"2313":[68,12,68,47],"2321":[68,5,68,48],"2329":[67,39,69,2],"2337":[67,39,69,2],"2345":[67,39,69,2],"2353":[67,1,69,2],"2361":[67,1,69,3],"2369":[70,1,70,6],"2377":[70,1,70,16],"2385":[71,12,71,16],"2393":[71,12,71,18],"2401":[71,12,71,35],"2409":[71,42,71,43],"2417":[71,12,71,44],"2419":[71,12,71,41],"2425":[71,12,71,44],"2433":[71,5,71,45],"2441":[70,36,72,2],"2449":[70,36,72,2],"2457":[70,36,72,2],"2465":[70,1,72,2],"2473":[70,1,72,3],"2481":[73,1,73,6],"2489":[73,1,73,16],"2497":[74,12,74,16],"2505":[74,12,74,18],"2513":[74,12,74,35],"2521":[74,42,74,43],"2529":[74,12,74,44],"2531":[74,12,74,41],"2537":[74,52,74,56],"2545":[74,52,74,58],"2553":[74,52,74,78],"2561":[74,12,74,79],"2563":[74,12,74,51],"2569":[74,12,74,79],"2577":[74,5,74,80],"2585":[73,26,75,2],"2593":[73,26,75,2],"2601":[73,26,75,2],"2609":[73,1,75,2],"2617":[73,1,75,3],"2625":[76,1,76,6],"2633":[76,1,76,16],"2641":[77,23,77,25],"2649":[77,23,77,25],"2657":[77,23,77,25],"2665":[78,5,78,9],"2673":[78,5,78,11],"2681":[78,5,78,28],"2689":[79,23,79,34],"2697":[79,42,79,43],"2705":[79,42,79,57],"2707":[79,42,79,55],"2713":[79,23,79,58],"2715":[79,23,79,41],"2721":[79,23,79,58],"2729":[79,9,79,59],"2737":[78,37,80,6],"2745":[78,37,80,6],"2753":[78,37,80,6],"2761":[78,37,80,6],"2769":[78,5,80,7],"2771":[78,5,78,36],"2777":[78,5,80,8],"2785":[81,12,81,23],"2793":[81,12,81,23],"2801":[81,5,81,24],"2809":[76,37,82,2],"2817":[76,37,82,2],"2825":[76,37,82,2],"2833":[76,37,82,2],"2841":[76,1,82,2],"2849":[76,1,82,3],"2857":[83,1,83,6],"2865":[83,1,83,16],"2873":[84,12,84,16],"2881":[84,12,84,18],"2889":[84,12,84,35],"2897":[84,12,84,42],"2905":[84,45,84,46],"2913":[85,22,85,26],"2921":[85,22,85,28],"2929":[85,22,85,45],"2937":[85,22,85,53],"2939":[85,22,85,51],"2945":[85,22,85,53],"2953":[85,22,85,53],"2961":[87,13,87,20],"2969":[88,13,88,20],"2977":[89,13,89,22],"2985":[90,13,90,22],"2993":[86,9,91,10],"3001":[92,13,92,19],"3009":[92,39,92,40],"3017":[92,13,92,41],"3019":[92,13,92,38],"3025":[92,13,92,42],"3033":[91,19,93,10],"3041":[91,19,93,10],"3049":[91,19,93,10],"3057":[91,19,93,10],"3065":[86,9,93,11],"3067":[86,9,91,18],"3073":[86,9,93,12],"3081":[94,9,94,15],"3089":[94,9,94,25],"3091":[94,9,94,23],"3097":[94,9,94,26],"3105":[95,9,95,13],"3113":[95,9,95,15],"3121":[95,9,95,35],"3129":[95,41,95,47],"3137":[95,9,95,48],"3139":[95,9,95,40],"3145":[95,9,95,49],"3153":[83,27,97,2],"3161":[83,27,97,2],"3169":[83,27,97,2],"3177":[83,27,97,2],"3185":[83,1,97,2],"3193":[83,1,97,3],"3201":[98,1,98,6],"3209":[98,1,98,16],"3217":[99,12,99,16],"3225":[99,12,99,18],"3233":[99,12,99,35],"3241":[99,12,99,42],"3249":[99,45,99,46],"3257":[99,12,99,46],"3265":[99,5,99,47],"3273":[98,31,100,2],"3281":[98,31,100,2],"3289":[98,31,100,2],"3297":[98,1,100,2],"3305":[98,1,100,3],"3313":[101,1,101,6],"3321":[101,1,101,16],"3329":[102,16,102,20],"3337":[102,16,102,20],"3345":[102,16,102,20],"3353":[103,22,103,36],"3361":[103,40,103,54],"3369":[103,40,103,62],"3377":[103,22,103,62],"3385":[103,5,103,63],"3393":[104,19,104,23],"3401":[104,19,104,25],"3409":[104,19,104,42],"3417":[105,13,105,19],"3425":[105,13,105,21],"3433":[105,13,105,39],"3441":[105,43,105,47],"3449":[105,43,105,49],"3457":[105,43,105,67],"3465":[105,70,105,74],"3473":[105,70,105,76],"3481":[105,70,105,93],"3489":[105,97,105,103],"3497":[105,97,105,117],"3499":[105,97,105,115],"3505":[106,20,106,24],"3513":[106,20,106,24],"3521":[106,13,106,25],"3529":[104,50,108,6],"3537":[104,50,108,6],"3545":[104,50,108,6],"3553":[104,50,108,6],"3561":[104,19,108,7],"3563":[104,19,104,49],"3569":[104,19,108,7],"3577":[104,19,108,7],"3585":[109,9,109,13],"3593":[109,9,109,15],"3601":[109,9,109,40],"3609":[109,44,109,48],"3617":[109,52,109,56],"3625":[109,52,109,58],"3633":[109,52,109,83],"3641":[109,84,109,98],"3649":[109,52,109,99],"3657":[109,103,109,107],"3665":[110,16,110,20],"3673":[110,16,110,22],"3681":[110,16,110,47],"3689":[110,48,110,62],"3697":[110,16,110,63],"3705":[110,75,110,82],"3713":[110,84,110,98],"3721":[110,16,110,99],"3723":[110,16,110,74],"3729":[110,16,110,99],"3737":[110,9,110,100],"3745":[112,9,112,16],"3753":[112,9,112,23],"3761":[112,27,112,28],"3769":[113,19,113,29],"3777":[113,30,113,57],"3785":[113,15,113,58],"3793":[113,15,113,58],"3801":[113,9,113,59],"3809":[114,5,114,9],"3817":[114,5,114,11],"3825":[114,21,114,25],"3833":[114,21,114,27],"3841":[114,21,114,33],"3849":[114,36,114,37],"3857":[114,41,114,48],"3865":[114,41,114,55],"3873":[114,5,114,55],"3881":[114,5,114,56],"3889":[115,12,115,19],"3897":[115,20,115,24],"3905":[115,20,115,26],"3913":[115,20,115,32],"3921":[115,12,115,33],"3929":[115,12,115,33],"3937":[115,5,115,34],"3945":[101,30,116,2],"3953":[101,30,116,2],"3961":[101,30,116,2],"3969":[101,30,116,2],"3977":[101,30,116,2],"3985":[101,30,116,2],"3993":[101,1,116,2],"4001":[101,1,116,3],"4009":[118,16,118,20],"4017":[118,16,118,20],"4025":[118,16,118,20],"4033":[119,15,119,22],"4041":[119,26,119,28],"4049":[119,15,119,28],"4057":[119,5,119,29],"4065":[120,5,120,17],"4073":[120,23,120,27],"4081":[120,5,120,28],"4083":[120,5,120,22],"4089":[120,5,120,29],"4097":[121,10,121,15],"4105":[121,24,121,32],"4113":[121,10,121,33],"4115":[121,10,121,23],"4121":[122,19,122,29],"4129":[122,30,122,57],"4137":[122,15,122,58],"4145":[122,15,122,58],"4153":[122,9,122,59],"4161":[123,9,123,17],"4169":[123,9,123,24],"4177":[123,28,123,29],"4185":[124,19,124,29],"4193":[124,30,124,72],"4201":[124,15,124,73],"4209":[124,15,124,73],"4217":[124,9,124,74],"4225":[125,5,125,13],"4233":[126,20,126,21],"4241":[126,20,126,26],"4249":[126,30,126,38],"4257":[126,49,126,50],"4265":[126,49,126,55],"4273":[126,59,126,67],"4281":[127,23,127,33],"4289":[127,34,127,79],"4297":[127,19,127,80],"4305":[127,19,127,80],"4313":[127,13,127,81],"4321":[125,22,128,6],"4329":[125,22,128,6],"4337":[125,22,128,6],"4345":[125,22,128,6],"4353":[125,5,128,7],"4355":[125,5,125,21],"4361":[125,5,128,8],"4369":[129,20,129,32],"4377":[129,36,129,40],"4385":[129,47,129,51],"4393":[129,52,129,61],"4401":[129,43,129,62],"4409":[129,65,129,77],"4417":[129,20,129,77],"4425":[129,5,129,78],"4433":[130,16,130,23],"4441":[130,16,130,28],"4449":[130,31,130,38],"4457":[130,31,130,43],"4465":[130,46,130,58],"4473":[130,16,130,58],"4481":[130,16,130,58],"4489":[131,5,131,12],"4497":[131,20,131,24],"4505":[131,5,131,24],"4513":[131,5,131,25],"4521":[132,5,132,9],"4529":[133,19,133,27],"4537":[134,18,134,25],"4545":[135,17,135,23],"4553":[135,24,135,32],"4561":[135,34,135,41],"4569":[135,17,135,42],"4577":[136,25,136,32],"4585":[136,25,136,47],"4593":[136,51,136,53],"4601":[137,21,137,28],"4609":[137,21,137,39],"4617":[137,43,137,47],"4625":[138,27,138,34],"4633":[138,27,138,51],"4641":[138,55,138,57],"4649":[139,20,139,25],"4657":[140,17,140,24],"4665":[140,17,140,38],"4673":[140,42,140,53],"4681":[141,22,141,24],"4689":[142,23,142,35],"4697":[143,15,143,19],"4705":[144,16,144,18],"4713":[145,16,145,28],"4721":[146,27,146,34],"4729":[146,27,146,44],"4737":[146,48,146,57],"4745":[146,60,146,67],"4753":[146,60,146,77],"4761":[146,80,146,85],"4769":[147,35,147,37],"4777":[148,24,148,26],"4793":[149,13,149,21],"4801":[149,13,149,23],"4817":[150,25,150,30],"4825":[151,32,151,34],"4833":[152,22,152,29],"4841":[152,22,152,44],"4849":[152,48,152,50],"4857":[153,28,153,35],"4865":[153,28,153,53],"4873":[132,14,154,6],"4881":[132,5,154,6],"4889":[132,5,154,7],"4897":[155,5,155,12],"4905":[155,33,155,40],"4913":[155,33,155,58],"4921":[155,62,155,66],"4929":[155,5,155,66],"4937":[155,5,155,67],"4945":[156,5,156,9],"4953":[156,5,156,11],"4961":[156,30,156,35],"4969":[156,36,156,40],"4977":[156,36,156,42],"4985":[156,36,156,67],"4993":[156,69,156,73],"5001":[156,69,156,75],"5009":[156,69,156,92],"5017":[156,26,156,93],"5025":[156,5,156,93],"5033":[156,5,156,94],"5041":[157,5,157,11],"5049":[157,27,157,31],"5057":[157,33,157,39],"5065":[158,21,158,25],"5073":[160,27,160,31],"5081":[160,27,160,33],"5089":[160,27,160,45],"5097":[160,27,160,54],"5099":[160,27,160,52],"5105":[160,27,160,54],"5113":[160,27,160,54],"5121":[161,20,161,27],"5129":[161,20,161,34],"5137":[161,37,161,38],"5145":[161,41,161,48],"5153":[161,49,161,50],"5161":[161,41,161,51],"5169":[161,41,161,56],"5177":[161,59,161,63],"5185":[161,20,161,63],"5193":[161,13,161,64],"5201":[159,14,162,10],"5209":[159,14,162,10],"5217":[159,14,162,10],"5225":[159,14,162,10],"5233":[157,41,163,6],"5241":[157,5,163,7],"5243":[157,5,157,26],"5249":[157,5,163,8],"5257":[164,5,164,11],"5265":[164,27,164,31],"5273":[164,33,164,37],"5281":[165,21,165,25],"5289":[167,20,167,24],"5297":[167,20,167,26],"5305":[167,20,167,29],"5313":[167,20,167,29],"5321":[167,13,167,30],"5329":[166,14,168,10],"5337":[166,14,168,10],"5345":[166,14,168,10],"5353":[164,39,169,6],"5361":[164,5,169,7],"5363":[164,5,164,26],"5369":[164,5,169,8],"5377":[170,5,170,11],"5385":[170,27,170,31],"5393":[170,33,170,39],"5401":[171,21,171,25],"5409":[173,20,173,28],"5417":[173,20,173,28],"5425":[173,13,173,29],"5433":[172,14,174,10],"5441":[172,14,174,10],"5449":[172,14,174,10],"5457":[170,41,175,6],"5465":[170,5,175,7],"5467":[170,5,170,26],"5473":[170,5,175,8],"5481":[176,5,176,11],"5489":[176,27,176,31],"5497":[176,33,176,45],"5505":[177,21,177,25],"5513":[179,20,179,24],"5521":[179,20,179,26],"5529":[179,20,179,37],"5537":[179,20,179,37],"5545":[179,13,179,38],"5553":[178,14,180,10],"5561":[178,14,180,10],"5569":[178,14,180,10],"5577":[176,47,181,6],"5585":[176,5,181,7],"5587":[176,5,176,26],"5593":[176,5,181,8],"5601":[182,5,182,11],"5609":[182,27,182,31],"5617":[182,33,182,40],"5625":[183,21,183,25],"5633":[185,20,185,24],"5641":[185,20,185,26],"5649":[185,20,185,38],"5657":[185,20,185,38],"5665":[185,13,185,39],"5673":[184,14,186,10],"5681":[184,14,186,10],"5689":[184,14,186,10],"5697":[182,42,187,6],"5705":[182,5,187,7],"5707":[182,5,182,26],"5713":[182,5,187,8],"5721":[117,14,188,2],"5729":[117,14,188,2],"5737":[117,14,188,2],"5745":[117,14,188,2],"5753":[117,14,188,2],"5761":[117,14,188,2],"5769":[117,14,188,2],"5777":[117,14,188,2],"5785":[117,14,188,2],"5793":[189,1,189,9],"5801":[189,10,189,16],"5809":[189,18,189,30],"5817":[189,1,189,31],"5825":[189,1,189,32],"5833":[190,1,190,7],"5841":[190,1,190,17],"5849":[191,9,191,13],"5857":[191,9,191,15],"5865":[191,9,191,20],"5873":[191,9,191,30],"5881":[191,9,191,41],"5883":[191,9,191,39],"5889":[191,50,191,65],"5897":[191,9,191,66],"5899":[191,9,191,49],"5905":[191,71,191,72],"5913":[192,16,192,21],"5921":[192,16,192,21],"5929":[192,9,192,22],"5937":[193,12,193,16],"5945":[193,12,193,16],"5953":[193,5,193,17],"5961":[190,31,194,2],"5969":[190,31,194,2],"5977":[190,31,194,2],"5985":[190,1,194,2],"5993":[190,1,194,3],"6001":[195,1,195,7],"6009":[195,1,195,17],"6017":[196,17,196,21],"6025":[196,17,196,21],"6033":[196,17,196,21],"6041":[197,9,197,13],"6049":[197,17,197,22],"6057":[198,17,198,24],"6065":[198,25,198,31],"6073":[198,17,198,32],"6081":[198,17,198,41],"6083":[198,17,198,39],"6089":[198,17,198,46],"6097":[198,17,198,46],"6105":[198,9,198,47],"6113":[199,16,199,20],"6121":[199,24,199,28],"6129":[200,17,200,24],"6137":[200,25,200,31],"6145":[200,17,200,32],"6153":[200,17,200,39],"6155":[200,17,200,37],"6161":[200,17,200,44],"6169":[200,17,200,44],"6177":[200,9,200,45],"6185":[202,19,202,29],"6193":[202,30,202,31],"6201":[202,32,202,56],"6209":[202,58,202,62],"6217":[202,30,202,63],"6225":[202,15,202,64],"6233":[202,15,202,64],"6241":[202,9,202,65],"6249":[204,5,204,9],"6257":[204,5,204,11],"6265":[204,5,204,19],"6273":[204,31,204,36],"6281":[204,37,204,46],"6289":[204,27,204,47],"6297":[204,5,204,47],"6305":[204,5,204,48],"6313":[195,38,205,2],"6321":[195,38,205,2],"6329":[195,38,205,2],"6337":[195,38,205,2],"6345":[195,38,205,2],"6353":[195,1,205,2],"6361":[195,1,205,3],"6369":[206,1,206,7],"6377":[206,1,206,17],"6385":[207,28,207,32],"6393":[207,28,207,34],"6401":[207,28,207,46],"6409":[207,28,207,65],"6411":[207,28,207,63],"6417":[207,28,207,65],"6425":[207,28,207,65],"6433":[208,9,208,25],"6441":[208,9,208,32],"6449":[208,35,208,36],"6457":[209,16,209,32],"6465":[209,33,209,34],"6473":[209,16,209,35],"6481":[209,16,209,50],"6483":[209,16,209,48],"6489":[209,16,209,50],"6497":[209,9,209,51],"6505":[210,12,210,16],"6513":[210,12,210,16],"6521":[210,5,210,17],"6529":[206,33,211,2],"6537":[206,33,211,2],"6545":[206,33,211,2],"6553":[206,33,211,2],"6561":[206,1,211,2],"6569":[206,1,211,3],"6577":[212,1,212,7],"6585":[212,1,212,17],"6593":[213,16,213,20],"6601":[213,16,213,20],"6609":[213,16,213,20],"6617":[214,5,214,15],"6625":[214,16,214,30],"6633":[214,31,214,35],"6641":[214,37,214,41],"6649":[214,37,214,43],"6657":[214,16,214,44],"6665":[214,46,214,50],"6673":[214,46,214,52],"6681":[214,46,214,63],"6689":[214,5,214,64],"6697":[214,5,214,65],"6705":[215,9,215,17],"6713":[216,26,216,34],"6721":[217,13,217,17],"6729":[217,13,217,19],"6737":[217,13,217,27],"6745":[217,28,217,32],"6753":[217,36,217,44],"6761":[217,45,217,49],"6769":[217,36,217,50],"6777":[217,13,217,50],"6785":[217,13,217,51],"6793":[216,26,216,34],"6801":[216,9,217,51],"6809":[216,9,217,51],"6817":[218,5,218,9],"6825":[218,5,218,11],"6833":[218,5,218,20],"6841":[219,20,219,32],"6849":[219,33,219,37],"6857":[219,33,219,39],"6865":[219,33,219,47],"6873":[219,20,219,48],"6881":[219,20,219,48],"6889":[219,20,219,48],"6897":[220,9,220,13],"6905":[220,21,220,22],"6913":[220,21,220,27],"6921":[220,9,220,27],"6929":[220,9,220,28],"6937":[221,9,221,13],"6945":[221,21,221,22],"6953":[221,21,221,27],"6961":[221,9,221,27],"6969":[221,9,221,28],"6977":[222,9,222,13],"6985":[222,26,222,31],"6993":[222,9,222,31],"7001":[222,9,222,32],"7009":[223,9,223,13],"7017":[223,41,223,45],"7025":[223,41,223,47],"7033":[223,41,223,72],"7041":[223,9,223,72],"7049":[223,9,223,73],"7057":[224,9,224,13],"7065":[224,30,224,34],"7073":[224,30,224,36],"7081":[224,30,224,50],"7089":[224,9,224,50],"7097":[224,9,224,51],"7105":[225,9,225,13],"7113":[225,26,225,30],"7121":[225,9,225,30],"7129":[225,9,225,31],"7137":[226,9,226,13],"7145":[226,9,226,15],"7153":[226,9,226,27],"7161":[226,45,226,51],"7169":[226,52,226,56],"7177":[226,41,226,57],"7185":[226,9,226,58],"7187":[226,9,226,40],"7193":[226,9,226,59],"7201":[218,29,227,6],"7209":[218,29,227,6],"7217":[218,29,227,6],"7225":[218,29,227,6],"7233":[218,29,227,6],"7241":[218,5,227,7],"7243":[218,5,218,28],"7249":[218,5,227,8],"7257":[228,19,228,23],"7265":[228,19,228,25],"7273":[228,19,228,37],"7281":[228,19,228,59],"7283":[228,19,228,57],"7289":[228,19,228,59],"7297":[228,19,228,59],"7305":[229,5,229,9],"7313":[229,5,229,11],"7321":[229,20,229,30],"7329":[229,5,229,30],"7337":[229,5,229,31],"7345":[230,12,230,19],"7353":[230,12,230,26],"7361":[230,29,230,30],"7369":[231,22,231,29],"7377":[231,22,231,37],"7379":[231,22,231,35],"7385":[231,22,231,37],"7393":[231,22,231,37],"7401":[233,13,233,20],"7409":[234,13,234,20],"7417":[235,13,235,22],"7425":[236,13,236,22],"7433":[237,13,237,22],"7441":[238,13,238,25],"7449":[232,9,239,10],"7457":[240,13,240,19],"7465":[240,39,240,40],"7473":[240,13,240,41],"7475":[240,13,240,38],"7481":[240,13,240,42],"7489":[239,19,241,10],"7497":[239,19,241,10],"7505":[239,19,241,10],"7513":[239,19,241,10],"7521":[232,9,241,11],"7523":[232,9,239,18],"7529":[232,9,241,12],"7537":[242,9,242,15],"7545":[242,21,242,28],"7553":[242,30,242,46],"7561":[242,47,242,51],"7569":[242,53,242,57],"7577":[242,53,242,59],"7585":[242,61,242,67],"7593":[242,30,242,68],"7601":[242,9,242,69],"7603":[242,9,242,20],"7609":[242,9,242,70],"7617":[243,9,243,15],"7625":[243,21,243,28],"7633":[243,30,243,46],"7641":[243,47,243,51],"7649":[243,53,243,57],"7657":[243,53,243,59],"7665":[243,61,243,67],"7673":[243,30,243,68],"7681":[243,9,243,69],"7683":[243,9,243,20],"7689":[243,9,243,70],"7697":[244,9,244,15],"7705":[244,21,244,30],"7713":[244,32,244,48],"7721":[244,49,244,53],"7729":[244,55,244,59],"7737":[244,55,244,61],"7745":[244,63,244,69],"7753":[244,32,244,70],"7761":[244,9,244,71],"7763":[244,9,244,20],"7769":[244,9,244,72],"7777":[245,9,245,15],"7785":[245,21,245,33],"7793":[245,35,245,51],"7801":[245,52,245,56],"7809":[245,58,245,62],"7817":[245,58,245,64],"7825":[245,66,245,72],"7833":[245,35,245,73],"7841":[245,9,245,74],"7843":[245,9,245,20],"7849":[245,9,245,75],"7857":[246,9,246,15],"7865":[246,21,246,30],"7873":[246,32,246,46],"7881":[246,47,246,51],"7889":[246,53,246,57],"7897":[246,53,246,59],"7905":[246,61,246,70],"7913":[246,32,246,71],"7921":[246,9,246,72],"7923":[246,9,246,20],"7929":[246,9,246,73],"7937":[247,13,247,17],"7945":[247,13,247,19],"7953":[247,13,247,26],"7961":[247,13,247,35],"7963":[247,13,247,33],"7969":[248,13,248,17],"7977":[248,13,248,19],"7985":[248,13,248,26],"7993":[248,32,248,33],"8001":[248,34,248,59],"8009":[248,61,248,67],"8017":[248,61,248,72],"8025":[248,32,248,73],"8033":[248,13,248,74],"8035":[248,13,248,31],"8041":[248,13,248,75],"8049":[249,9,249,15],"8057":[249,9,249,25],"8059":[249,9,249,23],"8065":[249,9,249,26],"8073":[212,28,251,2],"8081":[212,28,251,2],"8089":[212,28,251,2],"8097":[212,28,251,2],"8105":[212,28,251,2],"8113":[212,28,251,2],"8121":[212,28,251,2],"8129":[212,28,251,2],"8137":[212,1,251,2],"8145":[212,1,251,3],"8153":[252,1,252,7],"8161":[252,1,252,17],"8169":[253,5,253,9],"8177":[253,5,253,11],"8185":[253,20,253,29],"8193":[253,5,253,29],"8201":[253,5,253,30],"8209":[254,9,254,18],"8217":[254,22,254,26],"8225":[254,37,254,44],"8233":[254,22,254,45],"8235":[254,22,254,36],"8241":[254,22,254,52],"8249":[254,55,254,56],"8257":[255,9,255,13],"8265":[255,19,255,26],"8273":[255,28,255,32],"8281":[255,9,255,33],"8283":[255,9,255,18],"8289":[255,9,255,34],"8297":[256,5,256,9],"8305":[256,5,256,11],"8313":[256,5,256,23],"8321":[256,5,256,33],"8323":[256,5,256,31],"8329":[256,5,256,34],"8337":[252,28,257,2],"8345":[252,28,257,2],"8353":[252,28,257,2],"8361":[252,28,257,2],"8369":[252,1,257,2],"8377":[252,1,257,3],"8385":[258,1,258,7],"8393":[258,1,258,17],"8401":[259,12,259,16],"8409":[259,12,259,18],"8417":[259,12,259,30],"8425":[259,12,259,44],"8427":[259,12,259,42],"8433":[259,12,259,44],"8441":[259,5,259,45],"8449":[258,32,260,2],"8457":[258,32,260,2],"8465":[258,32,260,2],"8473":[258,1,260,2],"8481":[258,1,260,3],"8489":[261,1,261,7],"8497":[261,1,261,17],"8505":[262,12,262,16],"8513":[262,12,262,18],"8521":[262,12,262,24],"8529":[262,28,262,37],"8537":[262,12,262,37],"8545":[262,5,262,38],"8553":[261,32,263,2],"8561":[261,32,263,2],"8569":[261,32,263,2],"8577":[261,1,263,2],"8585":[261,1,263,3],"8593":[264,1,264,7],"8601":[264,1,264,17],"8609":[265,16,265,23],"8617":[265,27,265,37],"8625":[266,20,266,27],"8633":[266,20,266,27],"8641":[266,39,266,41],"8649":[266,39,266,41],"8657":[266,9,266,27],"8665":[266,9,266,42],"8673":[267,9,267,13],"8681":[267,9,267,15],"8689":[267,9,267,21],"8697":[267,25,267,34],"8705":[268,16,268,24],"8713":[268,29,268,39],"8721":[268,40,268,41],"8729":[268,42,268,66],"8737":[268,40,268,67],"8745":[268,25,268,68],"8753":[268,16,268,69],"8761":[268,16,268,69],"8769":[268,9,268,70],"8777":[269,10,269,14],"8785":[269,10,269,28],"8787":[269,10,269,26],"8793":[269,32,269,36],"8801":[269,32,269,38],"8809":[269,32,269,56],"8817":[269,60,269,64],"8825":[270,20,270,39],"8833":[270,40,270,48],"8841":[270,20,270,49],"8849":[270,20,270,49],"8857":[270,9,270,50],"8865":[271,16,271,20],"8873":[271,16,271,22],"8881":[271,16,271,40],"8889":[271,45,271,53],"8897":[271,55,271,57],"8905":[271,59,271,62],"8913":[271,64,271,71],"8921":[271,73,271,81],"8929":[271,16,271,82],"8931":[271,16,271,44],"8937":[271,16,271,82],"8945":[271,9,271,83],"8953":[273,5,273,26],"8961":[273,27,273,31],"8969":[273,27,273,33],"8977":[273,35,273,43],"8985":[273,45,273,47],"8993":[273,49,273,52],"9001":[273,54,273,61],"9009":[273,63,273,71],"9017":[273,5,273,72],"9025":[273,5,273,73],"9033":[264,27,274,2],"9041":[264,27,274,2],"9049":[264,27,274,2],"9057":[264,27,274,2],"9065":[264,27,274,2],"9073":[264,27,274,2],"9081":[264,27,274,2],"9089":[264,1,274,2],"9097":[264,1,274,3],"9105":[275,1,275,7],"9113":[275,1,275,17],"9121":[276,16,276,23],"9129":[276,27,276,37],"9137":[277,20,277,27],"9145":[277,20,277,27],"9153":[277,39,277,41],"9161":[277,39,277,41],"9169":[277,9,277,27],"9177":[277,9,277,42],"9185":[278,9,278,13],"9193":[278,9,278,15],"9201":[278,9,278,21],"9209":[278,25,278,34],"9217":[279,16,279,24],"9225":[279,29,279,39],"9233":[279,40,279,41],"9241":[279,42,279,66],"9249":[279,40,279,67],"9257":[279,25,279,68],"9265":[279,16,279,69],"9273":[279,16,279,69],"9281":[279,9,279,70],"9289":[280,10,280,14],"9297":[280,10,280,28],"9299":[280,10,280,26],"9305":[280,32,280,36],"9313":[280,32,280,38],"9321":[280,32,280,56],"9329":[280,60,280,64],"9337":[281,20,281,39],"9345":[281,40,281,48],"9353":[281,20,281,49],"9361":[281,20,281,49],"9369":[281,9,281,50],"9377":[282,16,282,20],"9385":[282,16,282,22],"9393":[282,16,282,40],"9401":[282,45,282,53],"9409":[282,55,282,57],"9417":[282,59,282,62],"9425":[282,64,282,71],"9433":[282,73,282,81],"9441":[282,16,282,82],"9443":[282,16,282,44],"9449":[282,16,282,82],"9457":[282,9,282,83],"9465":[284,5,284,26],"9473":[284,27,284,31],"9481":[284,27,284,33],"9489":[284,35,284,43],"9497":[284,45,284,47],"9505":[284,49,284,52],"9513":[284,54,284,61],"9521":[284,63,284,71],"9529":[284,5,284,72],"9537":[284,5,284,73],"9545":[275,27,285,2],"9553":[275,27,285,2],"9561":[275,27,285,2],"9569":[275,27,285,2],"9577":[275,27,285,2],"9585":[275,27,285,2],"9593":[275,27,285,2],"9601":[275,1,285,2],"9609":[275,1,285,3],"9617":[286,1,286,7],"9625":[286,1,286,17],"9633":[287,16,287,23],"9641":[287,27,287,37],"9649":[288,20,288,27],"9657":[288,20,288,27],"9665":[288,39,288,41],"9673":[288,39,288,41],"9681":[288,9,288,27],"9689":[288,9,288,42],"9697":[289,9,289,13],"9705":[289,9,289,15],"9713":[289,9,289,21],"9721":[289,25,289,34],"9729":[290,16,290,24],"9737":[290,29,290,39],"9745":[290,40,290,41],"9753":[290,42,290,66],"9761":[290,40,290,67],"9769":[290,25,290,68],"9777":[290,16,290,69],"9785":[290,16,290,69],"9793":[290,9,290,70],"9801":[291,10,291,14],"9809":[291,10,291,28],"9811":[291,10,291,26],"9817":[291,32,291,36],"9825":[291,32,291,38],"9833":[291,32,291,56],"9841":[291,60,291,64],"9849":[292,20,292,39],"9857":[292,40,292,48],"9865":[292,20,292,49],"9873":[292,20,292,49],"9881":[292,9,292,50],"9889":[293,16,293,20],"9897":[293,16,293,22],"9905":[293,16,293,40],"9913":[293,45,293,53],"9921":[293,55,293,57],"9929":[293,59,293,62],"9937":[293,64,293,71],"9945":[293,73,293,81],"9953":[293,16,293,82],"9955":[293,16,293,44],"9961":[293,16,293,82],"9969":[293,9,293,83],"9977":[295,5,295,26],"9985":[295,27,295,31],"9993":[295,27,295,33],"10001":[295,35,295,43],"10009":[295,45,295,47],"10017":[295,49,295,52],"10025":[295,54,295,61],"10033":[295,63,295,71],"10041":[295,5,295,72],"10049":[295,5,295,73],"10057":[286,27,296,2],"10065":[286,27,296,2],"10073":[286,27,296,2],"10081":[286,27,296,2],"10089":[286,27,296,2],"10097":[286,27,296,2],"10105":[286,27,296,2],"10113":[286,1,296,2],"10121":[286,1,296,3],"10129":[297,1,297,7],"10137":[297,1,297,17],"10145":[298,16,298,23],"10153":[298,27,298,37],"10161":[299,20,299,27],"10169":[299,20,299,27],"10177":[299,39,299,41],"10185":[299,39,299,41],"10193":[299,9,299,27],"10201":[299,9,299,42],"10209":[300,9,300,13],"10217":[300,9,300,15],"10225":[300,9,300,21],"10233":[300,25,300,34],"10241":[301,16,301,24],"10249":[301,29,301,39],"10257":[301,40,301,41],"10265":[301,42,301,66],"10273":[301,40,301,67],"10281":[301,25,301,68],"10289":[301,16,301,69],"10297":[301,16,301,69],"10305":[301,9,301,70],"10313":[302,16,302,20],"10321":[302,16,302,20],"10329":[302,16,302,20],"10337":[303,10,303,14],"10345":[303,10,303,28],"10347":[303,10,303,26],"10353":[303,32,303,36],"10361":[303,32,303,38],"10369":[303,32,303,56],"10377":[303,60,303,64],"10385":[304,20,304,39],"10393":[304,40,304,48],"10401":[304,20,304,49],"10409":[304,20,304,49],"10417":[304,9,304,50],"10425":[305,16,305,20],"10433":[305,16,305,22],"10441":[305,16,305,40],"10449":[305,45,305,54],"10457":[305,56,305,58],"10465":[305,60,305,63],"10473":[305,65,305,72],"10481":[305,74,305,82],"10489":[305,16,305,83],"10491":[305,16,305,44],"10497":[305,16,305,83],"10505":[305,9,305,84],"10513":[307,18,307,22],"10521":[307,18,307,22],"10529":[307,18,307,22],"10537":[308,15,308,22],"10545":[308,26,308,28],"10553":[308,15,308,28],"10561":[308,5,308,29],"10569":[309,9,309,16],"10577":[309,9,309,22],"10585":[310,23,310,27],"10593":[310,23,310,29],"10601":[310,23,310,41],"10609":[310,23,310,50],"10611":[310,23,310,48],"10617":[310,23,310,50],"10625":[310,23,310,50],"10633":[311,21,311,28],"10641":[311,21,311,35],"10649":[311,21,311,35],"10657":[311,21,311,35],"10665":[312,22,312,26],"10673":[312,22,312,26],"10681":[312,22,312,26],"10689":[313,22,313,23],"10697":[313,22,313,23],"10705":[313,22,313,23],"10713":[313,25,313,26],"10721":[313,29,313,36],"10729":[313,29,313,43],"10745":[313,45,313,46],"10753":[313,45,313,48],"10769":[314,13,314,20],"10777":[314,21,314,22],"10785":[314,13,314,23],"10793":[314,32,314,34],"10801":[314,36,314,39],"10809":[314,41,314,48],"10817":[315,25,315,30],"10825":[315,33,315,34],"10833":[315,25,315,34],"10841":[315,17,315,35],"10849":[316,21,316,26],"10857":[316,30,316,31],"10865":[317,25,317,28],"10873":[317,25,317,35],"10881":[318,25,318,41],"10889":[318,42,318,46],"10897":[318,42,318,48],"10905":[318,50,318,52],"10913":[318,25,318,53],"10921":[318,25,318,54],"10929":[319,21,319,29],"10937":[319,30,319,33],"10945":[319,35,319,36],"10953":[319,21,319,37],"10961":[319,21,319,38],"10969":[314,50,321,14],"10977":[314,50,321,14],"10985":[314,50,321,14],"10993":[314,50,321,14],"11001":[314,50,321,14],"11009":[314,13,321,15],"11011":[314,13,314,31],"11017":[314,13,321,16],"11025":[323,9,323,16],"11033":[323,9,323,16],"11041":[326,18,326,22],"11049":[326,18,326,24],"11057":[326,18,326,36],"11065":[326,48,326,55],"11073":[326,48,326,68],"11081":[326,71,326,85],"11089":[326,71,326,93],"11097":[326,96,326,103],"11105":[326,96,326,118],"11113":[326,18,326,119],"11115":[326,18,326,47],"11121":[326,18,326,119],"11129":[326,9,326,120],"11137":[328,16,328,24],"11145":[328,25,328,28],"11153":[328,16,328,29],"11161":[328,16,328,29],"11169":[328,9,328,30],"11177":[327,7,329,6],"11185":[330,9,330,15],"11193":[330,19,330,23],"11201":[331,16,331,24],"11209":[331,29,331,39],"11217":[331,40,331,57],"11225":[331,25,331,58],"11233":[331,16,331,59],"11241":[331,16,331,59],"11249":[331,9,331,60],"11257":[332,5,332,11],"11265":[332,20,332,22],"11273":[332,24,332,27],"11281":[332,29,332,36],"11289":[333,13,333,16],"11297":[333,13,333,23],"11305":[334,13,334,29],"11313":[334,30,334,34],"11321":[334,30,334,36],"11329":[334,38,334,40],"11337":[334,13,334,41],"11345":[334,13,334,42],"11353":[335,9,335,17],"11361":[335,18,335,21],"11369":[335,23,335,24],"11377":[335,9,335,25],"11385":[335,9,335,26],"11393":[332,38,336,6],"11401":[332,38,336,6],"11409":[332,38,336,6],"11417":[332,38,336,6],"11425":[332,38,336,6],"11433":[332,5,336,7],"11435":[332,5,332,19],"11441":[332,5,336,8],"11449":[297,28,337,2],"11457":[297,28,337,2],"11465":[297,28,337,2],"11473":[297,28,337,2],"11481":[297,28,337,2],"11489":[297,28,337,2],"11497":[297,28,337,2],"11505":[297,28,337,2],"11513":[297,28,337,2],"11521":[297,28,337,2],"11529":[297,28,337,2],"11537":[297,28,337,2],"11545":[297,28,337,2],"11553":[297,1,337,2],"11561":[297,1,337,3],"11569":[338,1,338,7],"11577":[338,1,338,17],"11585":[339,21,339,34],"11593":[339,38,339,40],"11601":[339,21,339,40],"11609":[339,5,339,41],"11617":[340,23,340,36],"11625":[340,23,340,50],"11633":[340,54,340,58],"11641":[340,54,340,60],"11649":[340,54,340,67],"11657":[340,23,340,67],"11665":[340,23,340,67],"11673":[341,16,341,27],"11681":[341,28,341,32],"11689":[341,28,341,34],"11697":[341,28,341,39],"11705":[341,41,341,43],"11713":[341,45,341,48],"11721":[341,50,341,63],"11729":[341,65,341,69],"11737":[341,71,341,75],"11745":[341,71,341,77],"11753":[341,71,341,85],"11761":[341,12,341,86],"11769":[341,12,341,86],"11777":[341,5,341,87],"11785":[338,27,342,2],"11793":[338,27,342,2],"11801":[338,27,342,2],"11809":[338,27,342,2],"11817":[338,27,342,2],"11825":[338,27,342,2],"11833":[338,27,342,2],"11841":[338,1,342,2],"11849":[338,1,342,3],"11857":[343,1,343,7],"11865":[343,1,343,17],"11873":[344,19,344,24],"11881":[344,19,344,34],"11889":[344,19,344,40],"11897":[344,46,344,55],"11905":[344,57,344,58],"11913":[344,19,344,59],"11915":[344,19,344,45],"11921":[344,66,344,67],"11929":[344,19,344,68],"11931":[344,19,344,65],"11937":[344,19,344,68],"11945":[344,19,344,68],"11953":[345,16,345,20],"11961":[345,16,345,20],"11969":[345,16,345,20],"11977":[346,16,346,21],"11985":[346,16,346,31],"11993":[346,16,346,37],"12001":[346,43,346,52],"12009":[346,54,346,55],"12017":[346,16,346,56],"12019":[346,16,346,42],"12025":[346,16,346,56],"12033":[346,16,346,56],"12041":[347,20,347,24],"12049":[347,20,347,30],"12051":[347,20,347,28],"12057":[347,20,347,30],"12065":[347,20,347,30],"12073":[348,9,348,13],"12081":[348,9,348,15],"12089":[348,9,348,29],"12097":[348,30,348,39],"12105":[348,9,348,40],"12113":[348,44,348,48],"12121":[348,52,348,61],"12129":[348,65,348,74],"12137":[349,19,349,29],"12145":[349,30,349,31],"12153":[349,32,349,65],"12161":[349,67,349,76],"12169":[349,30,349,77],"12177":[349,15,349,78],"12185":[349,15,349,78],"12193":[349,9,349,79],"12201":[350,19,350,23],"12209":[350,19,350,25],"12217":[350,19,350,37],"12225":[350,19,350,56],"12227":[350,19,350,54],"12233":[350,63,350,64],"12241":[350,19,350,65],"12243":[350,19,350,62],"12249":[350,19,350,65],"12257":[350,19,350,65],"12265":[351,17,351,24],"12273":[351,17,351,31],"12281":[351,17,351,31],"12289":[351,17,351,31],"12297":[352,25,352,29],"12305":[352,25,352,29],"12313":[352,25,352,29],"12321":[353,19,353,23],"12329":[353,19,353,23],"12337":[353,19,353,23],"12345":[354,5,354,9],"12353":[354,5,354,11],"12361":[354,29,354,33],"12369":[354,5,354,33],"12377":[354,5,354,34],"12385":[355,12,355,19],"12393":[355,12,355,26],"12401":[355,29,355,30],"12409":[356,22,356,29],"12417":[356,22,356,37],"12419":[356,22,356,35],"12425":[356,22,356,37],"12433":[356,22,356,37],"12441":[358,13,358,22],"12449":[359,13,359,15],"12457":[357,35,360,10],"12465":[360,18,360,22],"12473":[360,29,360,30],"12481":[360,18,360,31],"12483":[360,18,360,28],"12489":[357,35,360,32],"12491":[357,35,360,17],"12497":[357,35,360,32],"12505":[357,35,360,32],"12513":[361,30,361,49],"12521":[362,25,362,30],"12529":[362,33,362,34],"12537":[362,25,362,34],"12545":[362,17,362,35],"12553":[363,21,363,24],"12561":[364,31,364,34],"12569":[364,31,364,34],"12577":[364,21,364,35],"12585":[365,22,365,23],"12593":[366,37,366,42],"12601":[366,37,366,42],"12609":[366,21,366,43],"12617":[367,21,367,26],"12625":[367,30,367,31],"12633":[368,25,368,29],"12641":[368,25,368,31],"12649":[368,25,368,53],"12657":[368,25,368,60],"12665":[368,63,368,64],"12673":[369,25,369,29],"12681":[369,25,369,31],"12689":[369,56,369,58],"12697":[369,25,369,58],"12705":[369,25,369,59],"12713":[370,32,370,36],"12721":[370,32,370,41],"12729":[370,48,370,52],"12737":[371,29,371,38],"12745":[372,29,372,31],"12753":[370,54,373,26],"12761":[373,34,373,38],"12769":[370,54,373,39],"12771":[370,54,373,33],"12777":[373,48,373,56],"12785":[373,47,373,57],"12793":[370,54,373,58],"12795":[370,54,373,46],"12801":[370,32,373,59],"12803":[370,32,370,47],"12809":[370,32,373,59],"12817":[370,25,373,60],"12825":[375,21,375,25],"12833":[375,21,375,27],"12841":[375,45,375,50],"12849":[375,21,375,50],"12857":[375,21,375,51],"12865":[376,25,376,32],"12873":[376,36,376,40],"12881":[377,25,377,39],"12889":[377,40,377,44],"12897":[377,40,377,46],"12905":[377,48,377,50],"12913":[377,52,377,71],"12921":[377,25,377,72],"12929":[377,25,377,73],"12937":[378,25,378,32],"12945":[379,32,379,40],"12953":[379,41,379,48],"12961":[379,50,379,55],"12969":[379,32,379,56],"12977":[379,32,379,56],"12985":[379,25,379,57],"12993":[380,21,380,29],"13001":[380,30,380,34],"13009":[380,40,380,47],"13017":[380,48,380,50],"13025":[380,52,380,56],"13033":[380,36,380,57],"13041":[380,21,380,58],"13049":[380,21,380,59],"13057":[361,58,382,14],"13065":[361,58,382,14],"13073":[361,58,382,14],"13081":[361,58,382,14],"13089":[361,58,382,14],"13097":[361,57,382,15],"13105":[361,30,382,16],"13107":[361,30,361,56],"13113":[361,30,382,16],"13121":[361,30,382,16],"13129":[383,9,383,15],"13137":[383,9,383,20],"13145":[383,27,383,33],"13153":[383,35,383,49],"13161":[383,9,383,50],"13163":[383,9,383,26],"13169":[383,9,383,51],"13177":[343,25,385,2],"13185":[343,25,385,2],"13193":[343,25,385,2],"13201":[343,25,385,2],"13209":[343,25,385,2],"13217":[343,25,385,2],"13225":[343,25,385,2],"13233":[343,25,385,2],"13241":[343,25,385,2],"13249":[343,25,385,2],"13257":[343,25,385,2],"13265":[343,25,385,2],"13273":[343,25,385,2],"13281":[343,25,385,2],"13289":[343,25,385,2],"13297":[343,25,385,2],"13305":[343,1,385,2],"13313":[343,1,385,3],"13321":[386,1,386,7],"13329":[386,1,386,17],"13337":[387,9,387,13],"13345":[387,9,387,15],"13353":[387,9,387,40],"13361":[387,44,387,48],"13369":[388,9,388,13],"13377":[388,9,388,15],"13385":[388,43,388,45],"13393":[388,9,388,45],"13401":[388,9,388,46],"13409":[389,5,389,9],"13417":[389,5,389,11],"13425":[389,5,389,36],"13433":[389,37,389,41],"13441":[389,45,389,53],"13449":[389,5,389,53],"13457":[389,5,389,54],"13465":[386,46,390,2],"13473":[386,46,390,2],"13481":[386,46,390,2],"13489":[386,46,390,2],"13497":[386,46,390,2],"13505":[386,1,390,2],"13513":[386,1,390,3],"13521":[391,1,391,7],"13529":[391,1,391,17],"13537":[392,5,392,9],"13545":[392,5,392,11],"13553":[392,5,392,25],"13561":[392,26,392,30],"13569":[392,34,392,42],"13577":[392,5,392,42],"13585":[392,5,392,43],"13593":[391,36,393,2],"13601":[391,36,393,2],"13609":[391,36,393,2],"13617":[391,36,393,2],"13625":[391,36,393,2],"13633":[391,1,393,2],"13641":[391,1,393,3],"13649":[394,1,394,7],"13657":[394,1,394,17],"13665":[395,15,395,22],"13673":[395,26,395,28],"13681":[395,15,395,28],"13689":[395,5,395,29],"13697":[396,18,396,22],"13705":[396,18,396,24],"13713":[396,18,396,36],"13721":[396,48,396,55],"13729":[396,48,396,70],"13737":[396,18,396,71],"13739":[396,18,396,47],"13745":[396,18,396,71],"13753":[396,18,396,71],"13761":[397,9,397,15],"13769":[397,19,397,23],"13777":[398,16,398,20],"13785":[398,16,398,20],"13793":[398,9,398,21],"13801":[399,12,399,18],"13809":[399,12,399,34],"13811":[399,12,399,32],"13817":[399,12,399,34],"13825":[399,5,399,35],"13833":[394,34,400,2],"13841":[394,34,400,2],"13849":[394,34,400,2],"13857":[394,34,400,2],"13865":[394,34,400,2],"13873":[394,1,400,2],"13881":[394,1,400,3],"13889":[401,1,401,7],"13897":[401,1,401,17],"13905":[402,15,402,22],"13913":[402,26,402,28],"13921":[402,15,402,28],"13929":[402,5,402,29],"13937":[403,12,403,16],"13945":[403,12,403,18],"13953":[403,12,403,30],"13961":[403,42,403,49],"13969":[403,42,403,64],"13977":[403,12,403,65],"13979":[403,12,403,41],"13985":[403,12,403,65],"13993":[403,5,403,66],"14001":[401,30,404,2],"14009":[401,30,404,2],"14017":[401,30,404,2],"14025":[401,30,404,2],"14033":[401,1,404,2],"14041":[401,1,404,3],"14049":[405,1,405,7],"14057":[405,1,405,17],"14065":[406,12,406,16],"14073":[406,12,406,18],"14081":[406,12,406,30],"14089":[406,12,406,50],"14091":[406,12,406,48],"14097":[406,12,406,50],"14105":[406,5,406,51],"14113":[405,32,407,2],"14121":[405,32,407,2],"14129":[405,32,407,2],"14137":[405,1,407,2],"14145":[405,1,407,3],"14153":[410,13,410,18],"14161":[410,13,410,24],"14169":[410,28,410,37],"14177":[411,13,411,20],"14185":[411,13,411,20],"14193":[412,13,412,18],"14201":[412,13,412,24],"14209":[412,28,412,37],"14217":[413,13,413,18],"14225":[413,33,413,38],"14233":[413,33,413,53],"14241":[413,13,413,53],"14249":[413,13,413,54],"14257":[414,13,414,18],"14265":[414,13,414,24],"14273":[414,28,414,40],"14281":[414,44,414,49],"14289":[414,44,414,61],"14297":[414,65,414,66],"14305":[415,13,415,17],"14313":[415,13,415,27],"14315":[415,13,415,25],"14321":[415,13,415,28],"14329":[416,20,416,24],"14337":[416,30,416,37],"14345":[416,43,416,53],"14353":[416,54,416,55],"14361":[416,56,416,86],"14369":[416,88,416,93],"14377":[416,88,416,108],"14385":[416,54,416,109],"14393":[416,39,416,110],"14401":[416,20,416,111],"14403":[416,20,416,29],"14409":[416,20,416,111],"14417":[416,13,416,112],"14425":[417,20,417,25],"14433":[417,29,417,41],"14441":[418,13,418,18],"14449":[418,33,418,38],"14457":[418,33,418,50],"14465":[418,53,418,54],"14473":[418,13,418,54],"14481":[418,13,418,55],"14489":[420,13,420,18],"14497":[420,13,420,30],"14505":[420,13,420,44],"14507":[420,13,420,42],"14513":[420,48,420,53],"14521":[420,48,420,71],"14529":[421,13,421,18],"14537":[421,13,421,36],"14545":[421,13,421,46],"14547":[421,13,421,44],"14553":[421,13,421,47],"14561":[423,13,423,18],"14569":[423,13,423,25],"14577":[423,13,423,35],"14579":[423,13,423,33],"14585":[424,13,424,18],"14593":[424,13,424,25],"14601":[424,32,424,33],"14609":[424,34,424,62],"14617":[424,32,424,63],"14625":[424,13,424,64],"14627":[424,13,424,31],"14633":[424,13,424,65],"14641":[425,35,425,40],"14649":[425,35,425,52],"14657":[425,35,425,74],"14659":[425,35,425,72],"14665":[425,35,425,74],"14673":[425,35,425,74],"14681":[426,13,426,32],"14689":[426,13,426,39],"14697":[426,43,426,44],"14705":[427,20,427,30],"14713":[427,31,427,45],"14721":[427,46,427,50],"14729":[427,52,427,57],"14737":[427,31,427,58],"14745":[427,60,427,65],"14753":[427,60,427,76],"14761":[427,20,427,77],"14769":[427,20,427,77],"14777":[427,13,427,78],"14785":[428,31,428,50],"14793":[428,31,428,57],"14801":[428,31,428,57],"14809":[428,31,428,57],"14817":[429,13,429,18],"14825":[429,13,429,25],"14833":[429,13,429,35],"14835":[429,13,429,33],"14841":[430,13,430,18],"14849":[430,13,430,25],"14857":[430,32,430,33],"14865":[430,34,430,84],"14873":[430,86,430,101],"14881":[430,32,430,102],"14889":[430,13,430,103],"14891":[430,13,430,31],"14897":[430,13,430,104],"14905":[431,16,431,35],"14913":[431,16,431,42],"14921":[431,45,431,46],"14929":[433,17,433,27],"14937":[435,25,435,32],"14945":[436,25,436,32],"14953":[437,25,437,34],"14961":[438,25,438,34],"14969":[439,25,439,34],"14977":[440,25,440,37],"14985":[434,34,441,22],"14993":[434,34,441,22],"15001":[434,34,441,22],"15009":[442,21,442,27],"15017":[443,25,443,32],"15025":[443,52,443,53],"15033":[443,25,443,54],"15035":[443,25,443,51],"15041":[443,25,443,55],"15049":[442,36,444,22],"15057":[442,36,444,22],"15065":[442,36,444,22],"15073":[442,36,444,22],"15081":[442,21,444,23],"15083":[442,21,442,35],"15089":[442,21,444,24],"15097":[445,21,445,28],"15105":[445,34,445,41],"15113":[445,43,445,59],"15121":[445,60,445,64],"15129":[445,66,445,71],"15137":[445,73,445,79],"15145":[445,43,445,80],"15153":[445,21,445,81],"15155":[445,21,445,33],"15161":[445,21,445,82],"15169":[446,21,446,28],"15177":[446,34,446,41],"15185":[446,43,446,59],"15193":[446,60,446,64],"15201":[446,66,446,71],"15209":[446,73,446,79],"15217":[446,43,446,80],"15225":[446,21,446,81],"15227":[446,21,446,33],"15233":[446,21,446,82],"15241":[447,21,447,28],"15249":[447,34,447,43],"15257":[447,45,447,61],"15265":[447,62,447,66],"15273":[447,68,447,73],"15281":[447,75,447,81],"15289":[447,45,447,82],"15297":[447,21,447,83],"15299":[447,21,447,33],"15305":[447,21,447,84],"15313":[448,21,448,28],"15321":[448,34,448,43],"15329":[448,45,448,59],"15337":[448,60,448,64],"15345":[448,66,448,71],"15353":[448,73,448,77],"15361":[448,45,448,78],"15369":[448,21,448,79],"15371":[448,21,448,33],"15377":[448,21,448,80],"15385":[449,21,449,28],"15393":[449,21,449,38],"15395":[449,21,449,36],"15401":[449,21,449,39],"15409":[433,28,450,18],"15417":[433,28,450,18],"15425":[433,28,450,18],"15433":[433,28,450,18],"15441":[450,20,450,21],"15449":[433,17,450,22],"15457":[433,17,450,23],"15465":[432,34,451,14],"15473":[432,34,451,14],"15481":[432,34,451,14],"15489":[432,34,451,14],"15497":[432,34,451,14],"15505":[432,34,451,14],"15513":[452,26,452,45],"15521":[452,26,452,53],"15523":[452,26,452,51],"15529":[452,26,452,53],"15537":[452,26,452,53],"15545":[453,17,453,22],"15553":[453,17,453,29],"15561":[453,17,453,39],"15563":[453,17,453,37],"15569":[454,17,454,22],"15577":[454,17,454,29],"15585":[454,36,454,37],"15593":[454,38,454,74],"15601":[454,76,454,82],"15609":[454,76,454,87],"15617":[454,36,454,88],"15625":[454,17,454,89],"15627":[454,17,454,35],"15633":[454,17,454,90],"15641":[455,13,455,27],"15649":[455,28,455,34],"15657":[455,13,455,35],"15665":[455,13,455,36],"15673":[457,16,457,26],"15681":[457,27,457,41],"15689":[457,42,457,46],"15697":[457,48,457,53],"15705":[457,27,457,54],"15713":[457,56,457,61],"15721":[457,56,457,69],"15729":[457,56,457,87],"15737":[457,90,457,95],"15745":[457,90,457,106],"15753":[457,16,457,107],"15761":[457,16,457,107],"15769":[457,9,457,108],"15777":[409,12,458,6],"15785":[409,12,458,6],"15793":[409,12,458,6],"15801":[409,12,458,6],"15809":[409,12,458,6],"15817":[409,12,458,6],"15825":[409,12,458,6],"15833":[409,12,458,6],"15841":[409,5,458,7],"15849":[408,22,459,2],"15857":[408,22,459,2],"15865":[408,22,459,2],"15873":[408,22,459,2],"15881":[408,22,459,2],"15889":[408,22,459,2],"15897":[408,22,459,2],"15905":[462,13,462,18],"15913":[462,13,462,25],"15921":[462,13,462,34],"15923":[462,13,462,32],"15929":[463,13,463,18],"15937":[463,13,463,25],"15945":[463,31,463,32],"15953":[463,33,463,71],"15961":[463,73,463,79],"15969":[463,73,463,84],"15977":[463,86,463,90],"15985":[463,101,463,104],"15993":[463,86,463,105],"15995":[463,86,463,100],"16001":[463,31,463,106],"16009":[463,13,463,107],"16011":[463,13,463,30],"16017":[463,13,463,108],"16025":[464,9,464,14],"16033":[464,9,464,26],"16041":[464,40,464,46],"16049":[464,9,464,47],"16051":[464,9,464,39],"16057":[464,9,464,48],"16065":[466,13,466,20],"16073":[467,13,467,20],"16081":[468,13,468,22],"16089":[469,13,469,22],"16097":[465,22,470,10],"16105":[465,22,470,10],"16113":[465,22,470,10],"16121":[471,9,471,15],"16129":[472,13,472,19],"16137":[472,39,472,40],"16145":[472,13,472,41],"16147":[472,13,472,38],"16153":[472,13,472,42],"16161":[471,24,473,10],"16169":[471,24,473,10],"16177":[471,24,473,10],"16185":[471,24,473,10],"16193":[471,9,473,11],"16195":[471,9,471,23],"16201":[471,9,473,12],"16209":[461,12,474,6],"16217":[461,12,474,6],"16225":[461,12,474,6],"16233":[461,12,474,6],"16241":[461,12,474,6],"16249":[461,12,474,6],"16257":[461,12,474,6],"16265":[461,5,474,7],"16273":[460,24,475,2],"16281":[460,24,475,2],"16289":[460,24,475,2],"16297":[460,24,475,2],"16305":[460,24,475,2],"16313":[460,24,475,2],"16321":[460,24,475,2],"16329":[460,24,475,2],"16337":[478,13,478,18],"16345":[478,13,478,25],"16353":[478,13,478,34],"16355":[478,13,478,32],"16361":[479,13,479,18],"16369":[479,13,479,25],"16377":[479,31,479,32],"16385":[479,33,479,64],"16393":[479,66,479,72],"16401":[479,66,479,77],"16409":[479,79,479,83],"16417":[479,94,479,97],"16425":[479,79,479,98],"16427":[479,79,479,93],"16433":[479,31,479,99],"16441":[479,13,479,100],"16443":[479,13,479,30],"16449":[479,13,479,101],"16457":[480,9,480,14],"16465":[480,9,480,26],"16473":[480,40,480,46],"16481":[480,9,480,47],"16483":[480,9,480,39],"16489":[480,9,480,48],"16497":[481,13,481,18],"16505":[481,13,481,30],"16513":[481,13,481,49],"16515":[481,13,481,47],"16521":[481,13,481,56],"16529":[481,60,481,61],"16537":[482,13,482,18],"16545":[482,27,482,39],"16553":[482,13,482,39],"16561":[482,13,482,40],"16569":[484,9,484,13],"16577":[484,19,484,25],"16585":[484,27,484,35],"16593":[484,37,484,43],"16601":[484,9,484,44],"16603":[484,9,484,18],"16609":[484,9,484,45],"16617":[485,13,485,18],"16625":[485,13,485,28],"16633":[486,13,486,17],"16641":[486,23,486,30],"16649":[486,32,486,35],"16657":[486,37,486,43],"16665":[486,13,486,44],"16667":[486,13,486,22],"16673":[486,13,486,45],"16681":[477,12,487,6],"16689":[477,12,487,6],"16697":[477,12,487,6],"16705":[477,12,487,6],"16713":[477,12,487,6],"16721":[477,12,487,6],"16729":[477,5,487,7],"16737":[476,20,488,2],"16745":[476,20,488,2],"16753":[476,20,488,2],"16761":[476,20,488,2],"16769":[476,20,488,2],"16777":[476,20,488,2],"16785":[476,20,488,2],"16793":[491,13,491,18],"16801":[491,13,491,25],"16809":[491,13,491,34],"16811":[491,13,491,32],"16817":[492,13,492,18],"16825":[492,13,492,25],"16833":[492,31,492,32],"16841":[492,33,492,54],"16849":[492,56,492,62],"16857":[492,56,492,67],"16865":[492,31,492,68],"16873":[492,13,492,69],"16875":[492,13,492,30],"16881":[492,13,492,70],"16889":[493,9,493,14],"16897":[493,9,493,26],"16905":[493,40,493,46],"16913":[493,9,493,47],"16915":[493,9,493,39],"16921":[493,9,493,48],"16929":[494,13,494,18],"16937":[494,13,494,30],"16945":[494,13,494,49],"16947":[494,13,494,47],"16953":[494,13,494,56],"16961":[494,60,494,61],"16969":[495,13,495,18],"16977":[495,27,495,39],"16985":[495,13,495,39],"16993":[495,13,495,40],"17001":[497,9,497,13],"17009":[497,19,497,25],"17017":[497,27,497,35],"17025":[497,37,497,43],"17033":[497,9,497,44],"17035":[497,9,497,18],"17041":[497,9,497,45],"17049":[490,12,498,6],"17057":[490,12,498,6],"17065":[490,12,498,6],"17073":[490,12,498,6],"17081":[490,12,498,6],"17089":[490,12,498,6],"17097":[490,5,498,7],"17105":[489,22,499,2],"17113":[489,22,499,2],"17121":[489,22,499,2],"17129":[489,22,499,2],"17137":[489,22,499,2],"17145":[489,22,499,2],"17153":[489,22,499,2],"17161":[502,13,502,18],"17169":[502,13,502,25],"17177":[502,13,502,34],"17179":[502,13,502,32],"17185":[503,13,503,18],"17193":[503,13,503,25],"17201":[503,31,503,32],"17209":[503,33,503,51],"17217":[503,53,503,59],"17225":[503,53,503,64],"17233":[503,31,503,65],"17241":[503,13,503,66],"17243":[503,13,503,30],"17249":[503,13,503,67],"17257":[504,9,504,14],"17265":[504,9,504,26],"17273":[504,40,504,46],"17281":[504,9,504,47],"17283":[504,9,504,39],"17289":[504,9,504,48],"17297":[505,13,505,18],"17305":[505,13,505,30],"17313":[505,13,505,49],"17315":[505,13,505,47],"17321":[505,13,505,56],"17329":[505,60,505,61],"17337":[506,13,506,18],"17345":[506,27,506,39],"17353":[506,13,506,39],"17361":[506,13,506,40],"17369":[508,9,508,13],"17377":[508,19,508,25],"17385":[508,27,508,35],"17393":[508,37,508,43],"17401":[508,9,508,44],"17403":[508,9,508,18],"17409":[508,9,508,45],"17417":[501,12,509,6],"17425":[501,12,509,6],"17433":[501,12,509,6],"17441":[501,12,509,6],"17449":[501,12,509,6],"17457":[501,12,509,6],"17465":[501,5,509,7],"17473":[500,20,510,2],"17481":[500,20,510,2],"17489":[500,20,510,2],"17497":[500,20,510,2],"17505":[500,20,510,2],"17513":[500,20,510,2],"17521":[500,20,510,2],"17529":[513,13,513,18],"17537":[513,13,513,25],"17545":[513,13,513,34],"17547":[513,13,513,32],"17553":[514,13,514,18],"17561":[514,13,514,25],"17569":[514,31,514,32],"17577":[514,33,514,50],"17585":[514,52,514,58],"17593":[514,52,514,63],"17601":[514,31,514,64],"17609":[514,13,514,65],"17611":[514,13,514,30],"17617":[514,13,514,66],"17625":[516,13,516,20],"17633":[517,13,517,20],"17641":[518,13,518,22],"17649":[519,13,519,22],"17657":[520,13,520,22],"17665":[521,13,521,25],"17673":[515,9,522,10],"17681":[523,13,523,19],"17689":[523,39,523,40],"17697":[523,13,523,41],"17699":[523,13,523,38],"17705":[523,13,523,42],"17713":[522,19,524,10],"17721":[522,19,524,10],"17729":[522,19,524,10],"17737":[522,19,524,10],"17745":[515,9,524,11],"17747":[515,9,522,18],"17753":[515,9,524,12],"17761":[526,17,526,24],"17769":[526,17,526,38],"17771":[526,17,526,36],"17777":[527,17,527,24],"17785":[527,30,527,37],"17793":[527,39,527,51],"17801":[527,52,527,56],"17809":[527,58,527,63],"17817":[527,39,527,64],"17825":[527,17,527,65],"17827":[527,17,527,29],"17833":[527,17,527,66],"17841":[528,17,528,24],"17849":[528,30,528,37],"17857":[528,39,528,51],"17865":[528,52,528,56],"17873":[528,58,528,63],"17881":[528,39,528,64],"17889":[528,17,528,65],"17891":[528,17,528,29],"17897":[528,17,528,66],"17905":[529,17,529,24],"17913":[529,30,529,39],"17921":[529,41,529,55],"17929":[529,56,529,60],"17937":[529,62,529,67],"17945":[529,41,529,68],"17953":[529,17,529,69],"17955":[529,17,529,29],"17961":[529,17,529,70],"17969":[530,17,530,24],"17977":[530,30,530,42],"17985":[530,44,530,58],"17993":[530,59,530,63],"18001":[530,65,530,70],"18009":[530,44,530,71],"18017":[530,17,530,72],"18019":[530,17,530,29],"18025":[530,17,530,73],"18033":[532,13,532,17],"18041":[532,23,532,31],"18049":[532,33,532,41],"18057":[532,43,532,50],"18065":[532,13,532,51],"18067":[532,13,532,22],"18073":[532,13,532,52],"18081":[533,13,533,18],"18089":[533,13,533,30],"18097":[533,41,533,48],"18105":[533,13,533,49],"18107":[533,13,533,40],"18113":[533,13,533,50],"18121":[534,17,534,21],"18129":[534,25,534,26],"18137":[534,30,534,35],"18145":[534,30,534,47],"18153":[534,30,534,66],"18155":[534,30,534,64],"18161":[534,30,534,73],"18169":[534,77,534,78],"18177":[535,17,535,21],"18185":[535,27,535,38],"18193":[535,40,535,47],"18201":[535,17,535,48],"18203":[535,17,535,26],"18209":[535,17,535,49],"18217":[537,17,537,22],"18225":[537,17,537,34],"18233":[537,17,537,56],"18235":[537,17,537,54],"18241":[537,17,537,63],"18249":[537,67,537,68],"18257":[537,72,537,77],"18265":[537,72,537,89],"18273":[537,72,537,108],"18275":[537,72,537,106],"18281":[537,72,537,115],"18289":[537,118,537,119],"18297":[537,124,537,129],"18305":[537,124,537,139],"18313":[538,17,538,22],"18321":[538,35,538,39],"18329":[538,17,538,39],"18337":[538,17,538,40],"18345":[539,17,539,21],"18353":[539,27,539,38],"18361":[539,17,539,39],"18363":[539,17,539,26],"18369":[539,17,539,40],"18377":[541,17,541,22],"18385":[541,17,541,34],"18393":[541,17,541,56],"18395":[541,17,541,54],"18401":[541,17,541,63],"18409":[541,67,541,68],"18417":[541,72,541,77],"18425":[541,72,541,89],"18433":[541,72,541,108],"18435":[541,72,541,106],"18441":[541,72,541,115],"18449":[541,119,541,124],"18457":[541,119,541,133],"18465":[541,119,541,140],"18473":[541,145,541,150],"18481":[541,145,541,154],"18489":[542,17,542,22],"18497":[542,29,542,33],"18505":[542,17,542,33],"18513":[542,17,542,34],"18521":[543,17,543,21],"18529":[543,27,543,32],"18537":[543,17,543,33],"18539":[543,17,543,26],"18545":[543,17,543,34],"18553":[545,17,545,22],"18561":[545,17,545,28],"18569":[545,32,545,44],"18577":[546,17,546,22],"18585":[546,31,546,40],"18593":[546,17,546,40],"18601":[546,17,546,41],"18609":[547,17,547,21],"18617":[547,27,547,38],"18625":[547,40,547,44],"18633":[547,17,547,45],"18635":[547,17,547,26],"18641":[547,17,547,46],"18649":[548,24,548,29],"18657":[548,24,548,35],"18665":[548,39,548,49],"18673":[549,17,549,22],"18681":[549,31,549,40],"18689":[549,17,549,40],"18697":[549,17,549,41],"18705":[550,17,550,21],"18713":[550,27,550,36],"18721":[550,38,550,42],"18729":[550,17,550,43],"18731":[550,17,550,26],"18737":[550,17,550,44],"18745":[525,32,552,10],"18753":[525,32,552,10],"18761":[525,32,552,10],"18769":[525,32,552,10],"18777":[525,32,552,10],"18785":[525,32,552,10],"18793":[553,13,553,18],"18801":[553,13,553,33],"18809":[554,13,554,18],"18817":[554,13,554,40],"18825":[554,46,554,52],"18833":[554,13,554,53],"18835":[554,13,554,45],"18841":[554,13,554,54],"18849":[556,13,556,18],"18857":[556,13,556,30],"18865":[556,13,556,37],"18873":[556,41,556,42],"18881":[557,20,557,36],"18889":[557,37,557,43],"18897":[557,20,557,44],"18905":[557,20,557,44],"18913":[557,13,557,45],"18921":[558,21,558,26],"18929":[558,21,558,38],"18937":[558,21,558,45],"18945":[558,21,558,45],"18953":[558,21,558,45],"18961":[559,22,559,23],"18969":[559,22,559,23],"18977":[559,22,559,23],"18985":[559,25,559,26],"18993":[559,29,559,34],"19001":[559,29,559,46],"19009":[559,29,559,53],"19025":[559,55,559,56],"19033":[559,55,559,58],"19049":[560,13,560,19],"19057":[560,13,560,24],"19065":[560,31,560,37],"19073":[560,39,560,44],"19081":[560,39,560,56],"19089":[560,57,560,58],"19097":[560,39,560,59],"19105":[561,29,561,34],"19113":[561,37,561,38],"19121":[561,29,561,38],"19129":[561,21,561,39],"19137":[562,25,562,30],"19145":[562,34,562,35],"19153":[563,25,563,41],"19161":[563,42,563,48],"19169":[563,25,563,49],"19177":[563,25,563,50],"19185":[560,68,564,18],"19193":[560,68,564,18],"19201":[560,68,564,18],"19209":[560,68,564,18],"19217":[560,68,564,18],"19225":[560,67,564,19],"19233":[560,39,564,20],"19235":[560,39,560,66],"19241":[560,13,564,21],"19243":[560,13,560,30],"19249":[560,13,564,22],"19257":[512,12,566,6],"19265":[512,12,566,6],"19273":[512,12,566,6],"19281":[512,12,566,6],"19289":[512,12,566,6],"19297":[512,12,566,6],"19305":[512,12,566,6],"19313":[512,12,566,6],"19321":[512,5,566,7],"19329":[511,22,567,2],"19337":[511,22,567,2],"19345":[511,22,567,2],"19353":[511,22,567,2],"19361":[511,22,567,2],"19369":[511,22,567,2],"19377":[511,22,567,2],"19385":[511,22,567,2],"19393":[569,17,569,22],"19401":[569,17,569,22],"19409":[569,17,569,22],"19417":[571,9,571,16],"19425":[572,9,572,16],"19433":[573,9,573,18],"19441":[574,9,574,18],"19449":[570,5,575,6],"19457":[576,9,576,15],"19465":[576,35,576,36],"19473":[576,9,576,37],"19475":[576,9,576,34],"19481":[576,9,576,38],"19489":[575,15,577,6],"19497":[575,15,577,6],"19505":[575,15,577,6],"19513":[575,15,577,6],"19521":[570,5,577,7],"19523":[570,5,575,14],"19529":[570,5,577,8],"19537":[578,18,578,19],"19545":[578,18,578,19],"19553":[578,18,578,19],"19561":[578,21,578,22],"19569":[578,25,578,29],"19577":[578,25,578,36],"19593":[578,38,578,39],"19601":[578,38,578,41],"19617":[579,13,579,17],"19625":[579,18,579,19],"19633":[579,13,579,20],"19641":[579,28,579,34],"19649":[579,13,579,35],"19651":[579,13,579,27],"19657":[580,21,580,25],"19665":[580,21,580,25],"19673":[580,13,580,26],"19681":[582,10,582,15],"19689":[583,9,583,13],"19697":[583,19,583,25],"19705":[583,9,583,26],"19707":[583,9,583,18],"19713":[583,9,583,27],"19721":[568,27,585,2],"19729":[568,27,585,2],"19737":[568,27,585,2],"19745":[568,27,585,2],"19753":[568,27,585,2],"19761":[568,27,585,2],"19769":[568,27,585,2],"19777":[568,27,585,2],"19785":[568,27,585,2],"19793":[587,5,587,21],"19801":[587,22,587,27],"19809":[587,29,587,31],"19817":[587,34,587,42],"19825":[587,5,587,43],"19833":[587,5,587,44],"19841":[588,5,588,10],"19849":[588,5,588,22],"19857":[588,28,588,47],"19865":[588,5,588,48],"19867":[588,5,588,27],"19873":[588,5,588,49],"19881":[586,22,589,2],"19889":[586,22,589,2],"19897":[586,22,589,2],"19905":[586,22,589,2],"19913":[586,22,589,2],"19921":[586,22,589,2],"19929":[586,22,589,2],"19937":[586,22,589,2],"19945":[591,14,591,16],"19953":[591,23,591,26],"19961":[591,14,591,27],"19963":[591,14,591,22],"19969":[591,28,591,29],"19977":[591,14,591,30],"19985":[591,14,591,30],"19993":[591,14,591,30],"20001":[592,31,592,33],"20009":[592,31,592,33],"20017":[592,31,592,33],"20025":[593,18,593,19],"20033":[593,18,593,19],"20041":[593,18,593,19],"20049":[593,21,593,22],"20057":[593,25,593,30],"20065":[593,25,593,42],"20073":[593,25,593,49],"20089":[593,51,593,52],"20097":[593,51,593,54],"20113":[594,13,594,18],"20121":[594,13,594,30],"20129":[594,31,594,32],"20137":[594,13,594,33],"20145":[594,34,594,35],"20153":[594,13,594,36],"20161":[594,40,594,42],"20169":[595,13,595,32],"20177":[595,38,595,43],"20185":[595,38,595,55],"20193":[595,56,595,57],"20201":[595,38,595,58],"20209":[595,13,595,59],"20211":[595,13,595,37],"20217":[595,13,595,60],"20225":[597,5,597,10],"20233":[597,25,597,44],"20241":[597,5,597,44],"20249":[597,5,597,45],"20257":[590,24,598,2],"20265":[590,24,598,2],"20273":[590,24,598,2],"20281":[590,24,598,2],"20289":[590,24,598,2],"20297":[590,24,598,2],"20305":[590,24,598,2],"20313":[590,24,598,2],"20321":[590,24,598,2],"20329":[590,24,598,2],"20337":[600,15,600,22],"20345":[600,26,600,28],"20353":[600,15,600,28],"20361":[600,5,600,29],"20369":[601,9,601,16],"20377":[601,9,601,31],"20385":[601,35,601,39],"20393":[602,16,602,19],"20401":[602,16,602,19],"20409":[602,9,602,20],"20417":[599,29,603,2],"20425":[599,29,603,2],"20433":[599,29,603,2],"20441":[599,29,603,2],"20449":[599,29,603,2],"20457":[599,29,603,2],"20465":[599,29,603,2],"20473":[605,16,605,23],"20481":[605,27,605,37],"20489":[606,20,606,27],"20497":[606,20,606,27],"20505":[606,9,606,28],"20513":[607,19,607,21],"20521":[607,19,607,21],"20529":[607,9,607,22],"20537":[609,18,609,22],"20545":[609,18,609,22],"20553":[609,18,609,22],"20561":[610,15,610,22],"20569":[610,26,610,28],"20577":[610,15,610,28],"20585":[610,5,610,29],"20593":[612,18,612,23],"20601":[612,18,612,35],"20609":[612,18,612,48],"20611":[612,18,612,46],"20617":[612,18,612,48],"20625":[612,9,612,49],"20633":[614,16,614,24],"20641":[614,25,614,28],"20649":[614,16,614,29],"20657":[614,16,614,29],"20665":[614,9,614,30],"20673":[613,7,615,6],"20681":[616,9,616,15],"20689":[616,19,616,23],"20697":[617,16,617,24],"20705":[617,29,617,39],"20713":[617,40,617,57],"20721":[617,25,617,58],"20729":[617,16,617,59],"20737":[617,16,617,59],"20745":[617,9,617,60],"20753":[618,5,618,11],"20761":[618,12,618,14],"20769":[618,16,618,18],"20777":[618,20,618,23],"20785":[618,25,618,32],"20793":[618,34,618,42],"20801":[618,5,618,43],"20803":[618,5,618,15],"20809":[618,5,618,44],"20817":[604,29,619,2],"20825":[604,29,619,2],"20833":[604,29,619,2],"20841":[604,29,619,2],"20849":[604,29,619,2],"20857":[604,29,619,2],"20865":[604,29,619,2],"20873":[604,29,619,2],"20881":[604,29,619,2],"20889":[604,29,619,2],"20897":[604,29,619,2],"20905":[604,29,619,2],"20913":[620,1,620,7],"20921":[620,18,620,24],"20929":[620,1,620,24],"20937":[620,1,620,25],"20945":[1,1,620,25],"20953":[1,1,620,25],"20961":[1,1,620,25],"20969":[1,1,620,25],"20977":[1,1,620,25],"20985":[1,1,620,25],"20993":[1,1,620,25],"21001":[1,1,620,25],"21009":[1,1,620,25],"21017":[1,1,620,25],"21025":[1,1,620,25],"21033":[1,1,620,25],"21041":[1,1,620,25],"21049":[1,1,620,25],"21057":[1,1,620,25],"21065":[1,1,620,25],"21073":[1,1,620,25],"21081":[1,1,620,25],"21089":[1,1,620,25],"21097":[1,1,620,25],"21105":[1,1,620,25],"21113":[1,1,620,25],"21121":[1,1,620,25],"21129":[1,1,620,25],"21137":[1,1,620,25],"21145":[1,1,620,25],"21153":[1,1,620,25],"21161":[1,1,620,25],"21169":[1,1,620,25],"21177":[1,1,620,25],"21185":[1,1,620,25],"21193":[1,1,620,25],"21201":[1,1,620,25],"21209":[1,1,620,25],"21217":[1,1,620,25],"21225":[1,1,620,25],"21233":[23,20,29,2],"21241":[23,20,29,2],"21249":[30,13,39,2],"21257":[30,13,39,2],"21265":[41,68,43,6],"21273":[41,68,43,6],"21281":[46,9,47,26],"21289":[45,37,48,6],"21297":[45,37,48,6],"21305":[49,5,50,46],"21313":[51,5,53,6],"21321":[40,29,54,2],"21329":[40,29,54,2],"21337":[56,62,58,6],"21345":[56,62,58,6],"21353":[61,9,62,26],"21361":[60,40,63,6],"21369":[60,40,63,6],"21377":[64,5,65,49],"21385":[55,32,66,2],"21393":[55,32,66,2],"21401":[67,39,69,2],"21409":[67,39,69,2],"21417":[70,36,72,2],"21425":[70,36,72,2],"21433":[73,26,75,2],"21441":[73,26,75,2],"21449":[78,37,80,6],"21457":[78,37,80,6],"21465":[76,37,82,2],"21473":[76,37,82,2],"21481":[91,19,93,10],"21489":[91,19,93,10],"21497":[84,5,96,6],"21505":[83,27,97,2],"21513":[83,27,97,2],"21521":[98,31,100,2],"21529":[98,31,100,2],"21537":[105,9,107,10],"21545":[104,50,108,6],"21553":[104,50,108,6],"21561":[109,5,111,6],"21569":[112,5,113,59],"21577":[101,30,116,2],"21585":[101,30,116,2],"21593":[121,5,122,59],"21601":[123,5,124,74],"21609":[126,9,127,81],"21617":[125,22,128,6],"21625":[125,22,128,6],"21633":[129,20,129,77],"21641":[130,16,130,58],"21649":[146,20,146,85],"21657":[161,20,161,63],"21665":[159,14,162,10],"21673":[159,14,162,10],"21681":[166,14,168,10],"21689":[166,14,168,10],"21697":[172,14,174,10],"21705":[172,14,174,10],"21713":[178,14,180,10],"21721":[178,14,180,10],"21729":[184,14,186,10],"21737":[184,14,186,10],"21745":[117,14,188,2],"21753":[117,14,188,2],"21761":[191,5,192,22],"21769":[190,31,194,2],"21777":[190,31,194,2],"21785":[199,12,203,6],"21793":[197,5,203,6],"21801":[195,38,205,2],"21809":[195,38,205,2],"21817":[208,5,209,51],"21825":[206,33,211,2],"21833":[206,33,211,2],"21841":[215,5,217,51],"21849":[218,29,227,6],"21857":[218,29,227,6],"21865":[239,19,241,10],"21873":[239,19,241,10],"21881":[247,9,248,75],"21889":[230,5,250,6],"21897":[212,28,251,2],"21905":[212,28,251,2],"21913":[254,5,255,34],"21921":[252,28,257,2],"21929":[252,28,257,2],"21937":[258,32,260,2],"21945":[258,32,260,2],"21953":[261,32,263,2],"21961":[261,32,263,2],"21969":[265,5,266,42],"21977":[267,5,268,70],"21985":[269,5,272,6],"21993":[264,27,274,2],"22001":[264,27,274,2],"22009":[276,5,277,42],"22017":[278,5,279,70],"22025":[280,5,283,6],"22033":[275,27,285,2],"22041":[275,27,285,2],"22049":[287,5,288,42],"22057":[289,5,290,70],"22065":[291,5,294,6],"22073":[286,27,296,2],"22081":[286,27,296,2],"22089":[298,5,299,42],"22097":[300,5,301,70],"22105":[303,5,306,6],"22113":[317,21,318,54],"22121":[316,17,320,18],"22129":[314,50,321,14],"22137":[314,50,321,14],"22145":[313,9,322,10],"22153":[313,9,322,10],"22161":[309,5,324,6],"22169":[326,48,326,118],"22177":[330,5,331,60],"22185":[333,9,334,42],"22193":[332,38,336,6],"22201":[332,38,336,6],"22209":[297,28,337,2],"22217":[297,28,337,2],"22225":[338,27,342,2],"22233":[338,27,342,2],"22241":[348,5,349,79],"22249":[363,17,364,35],"22257":[365,17,366,43],"22265":[368,21,374,22],"22273":[376,21,377,73],"22281":[378,21,379,57],"22289":[367,17,381,18],"22297":[361,58,382,14],"22305":[361,58,382,14],"22313":[355,5,384,6],"22321":[343,25,385,2],"22329":[343,25,385,2],"22337":[387,5,388,46],"22345":[386,46,390,2],"22353":[386,46,390,2],"22361":[391,36,393,2],"22369":[391,36,393,2],"22377":[397,5,398,21],"22385":[394,34,400,2],"22393":[394,34,400,2],"22401":[401,30,404,2],"22409":[401,30,404,2],"22417":[405,32,407,2],"22425":[405,32,407,2],"22433":[410,9,411,20],"22441":[412,9,413,54],"22449":[417,16,419,10],"22457":[414,9,419,10],"22465":[420,9,422,10],"22473":[423,9,424,65],"22481":[426,9,427,78],"22489":[429,9,430,104],"22497":[442,36,444,22],"22505":[442,36,444,22],"22513":[433,28,450,18],"22521":[433,28,450,18],"22529":[432,34,451,14],"22537":[432,34,451,14],"22545":[453,13,454,90],"22553":[431,9,456,10],"22561":[409,12,458,6],"22569":[409,12,458,6],"22577":[408,22,459,2],"22585":[408,22,459,2],"22593":[462,9,463,108],"22601":[471,24,473,10],"22609":[471,24,473,10],"22617":[461,12,474,6],"22625":[461,12,474,6],"22633":[460,24,475,2],"22641":[460,24,475,2],"22649":[478,9,479,101],"22657":[481,9,483,10],"22665":[485,9,486,45],"22673":[477,12,487,6],"22681":[477,12,487,6],"22689":[476,20,488,2],"22697":[476,20,488,2],"22705":[491,9,492,70],"22713":[494,9,496,10],"22721":[490,12,498,6],"22729":[490,12,498,6],"22737":[489,22,499,2],"22745":[489,22,499,2],"22753":[502,9,503,67],"22761":[505,9,507,10],"22769":[501,12,509,6],"22777":[501,12,509,6],"22785":[500,20,510,2],"22793":[500,20,510,2],"22801":[513,9,514,66],"22809":[522,19,524,10],"22817":[522,19,524,10],"22825":[526,13,531,14],"22833":[534,13,536,14],"22841":[537,13,540,14],"22849":[541,13,544,14],"22857":[548,20,551,14],"22865":[545,13,551,14],"22873":[525,32,552,10],"22881":[525,32,552,10],"22889":[553,9,555,10],"22897":[556,9,557,45],"22905":[562,21,563,50],"22913":[560,68,564,18],"22921":[560,68,564,18],"22929":[559,9,565,10],"22937":[559,9,565,10],"22945":[512,12,566,6],"22953":[512,12,566,6],"22961":[511,22,567,2],"22969":[511,22,567,2],"22977":[575,15,577,6],"22985":[575,15,577,6],"22993":[579,9,580,26],"23001":[578,5,581,6],"23009":[578,5,581,6],"23017":[582,5,584,6],"23025":[568,27,585,2],"23033":[568,27,585,2],"23041":[586,22,589,2],"23049":[586,22,589,2],"23057":[594,9,595,60],"23065":[593,5,596,6],"23073":[593,5,596,6],"23081":[590,24,598,2],"23089":[590,24,598,2],"23097":[601,5,602,20],"23105":[599,29,603,2],"23113":[599,29,603,2],"23121":[605,5,608,6],"23129":[616,5,617,60],"23137":[604,29,619,2],"23145":[604,29,619,2],"23153":[1,1,620,25],"23161":[1,1,620,25],"nBranches":242,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/topologies/mongos.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/topologies/mongos_jalangi_.js","code":"\"use strict\";\n\nvar inherits = require('util').inherits\n  , f = require('util').format\n  , b = require('bson')\n  , bindToCurrentDomain = require('../connection/utils').bindToCurrentDomain\n  , EventEmitter = require('events').EventEmitter\n  , BasicCursor = require('../cursor')\n  , BSON = require('bson').native().BSON\n  , BasicCursor = require('../cursor')\n  , Server = require('./server')\n  , Logger = require('../connection/logger')\n  , ReadPreference = require('./read_preference')\n  , Session = require('./session')\n  , MongoError = require('../error');\n\n/**\n * @fileOverview The **Mongos** class is a class that represents a Mongos Proxy topology and is\n * used to construct connections.\n *\n * @example\n * var Mongos = require('mongodb-core').Mongos\n *   , ReadPreference = require('mongodb-core').ReadPreference\n *   , assert = require('assert');\n *\n * var server = new Mongos([{host: 'localhost', port: 30000}]);\n * // Wait for the connection event\n * server.on('connect', function(server) {\n *   server.destroy();\n * });\n *\n * // Start connecting\n * server.connect();\n */\n\nvar DISCONNECTED = 'disconnected';\nvar CONNECTING = 'connecting';\nvar CONNECTED = 'connected';\nvar DESTROYED = 'destroyed';\n\n// All bson types\nvar bsonTypes = [b.Long, b.ObjectID, b.Binary, b.Code, b.DBRef, b.Symbol, b.Double, b.Timestamp, b.MaxKey, b.MinKey];\n// BSON parser\nvar bsonInstance = null;\n\n// Instance id\nvar mongosId = 0;\n\n//\n// Clone the options\nvar cloneOptions = function(options) {\n  var opts = {};\n  for(var name in options) {\n    opts[name] = options[name];\n  }\n  return opts;\n}\n\nvar State = function(readPreferenceStrategies, localThresholdMS) {\n  // Internal state\n  this.s = {\n      connectedServers: []\n    , disconnectedServers: []\n    , readPreferenceStrategies: readPreferenceStrategies\n    , lowerBoundLatency: Number.MAX_VALUE\n    , localThresholdMS: localThresholdMS\n    , index: 0\n  }\n}\n\n//\n// A Mongos connected\nState.prototype.connected = function(server) {\n  // Locate in disconnected servers and remove\n  this.s.disconnectedServers = this.s.disconnectedServers.filter(function(s) {\n    return !s.equals(server);\n  });\n\n  var found = false;\n  // Check if the server exists\n  this.s.connectedServers.forEach(function(s) {\n    if(s.equals(server)) found = true;\n  });\n\n  // Add to disconnected list if it does not already exist\n  if(!found) this.s.connectedServers.push(server);\n\n  // Adjust lower bound\n  if(this.s.lowerBoundLatency > server.s.isMasterLatencyMS) {\n    this.s.lowerBoundLatency = server.s.isMasterLatencyMS;\n  }\n}\n\n//\n// A Mongos disconnected\nState.prototype.disconnected = function(server) {\n  // Locate in disconnected servers and remove\n  this.s.connectedServers = this.s.connectedServers.filter(function(s) {\n    return !s.equals(server);\n  });\n\n  var found = false;\n  // Check if the server exists\n  this.s.disconnectedServers.forEach(function(s) {\n    if(s.equals(server)) found = true;\n  });\n\n  // Add to disconnected list if it does not already exist\n  if(!found) this.s.disconnectedServers.push(server);\n}\n\n//\n// Return the list of disconnected servers\nState.prototype.disconnectedServers = function() {\n  return this.s.disconnectedServers.slice(0);\n}\n\n//\n// Get connectedServers\nState.prototype.connectedServers = function() {\n  return this.s.connectedServers.slice(0)\n}\n\n//\n// Get all servers\nState.prototype.getAll = function() {\n  return this.s.connectedServers.slice(0).concat(this.s.disconnectedServers);\n}\n\n//\n// Get all connections\nState.prototype.getAllConnections = function() {\n  var connections = [];\n\n  this.s.connectedServers.forEach(function(e) {\n    connections = connections.concat(e.connections());\n  });\n  return connections;\n}\n\n//\n// Destroy the state\nState.prototype.destroy = function() {\n  // Destroy any connected servers\n  while(this.s.connectedServers.length > 0) {\n    var server = this.s.connectedServers.shift();\n\n    // Remove any non used handlers\n    ['error', 'close', 'timeout', 'connect'].forEach(function(e) {\n      server.removeAllListeners(e);\n    })\n\n    // Server destroy\n    server.destroy();\n    // Add to list of disconnected servers\n    this.s.disconnectedServers.push(server);\n  }\n}\n\n//\n// Are we connected\nState.prototype.isConnected = function() {\n  return this.s.connectedServers.length > 0;\n}\n\n//\n// Pick a server\nState.prototype.pickServer = function(readPreference) {\n  var self = this;\n  readPreference = readPreference || ReadPreference.primary;\n\n  // Filter out the possible servers\n  var servers = this.s.connectedServers.filter(function(server) {\n    if((server.s.isMasterLatencyMS <= (self.s.lowerBoundLatency + self.s.localThresholdMS))\n      && server.isConnected()) {\n      return true;\n    }\n  });\n\n  // Do we have a custom readPreference strategy, use it\n  if(this.s.readPreferenceStrategies != null && this.s.readPreferenceStrategies[readPreference] != null) {\n    return this.s.readPreferenceStrategies[readPreference].pickServer(servers, readPreference);\n  }\n\n  // No valid connections\n  if(servers.length == 0) throw new MongoError(\"no mongos proxy available\");\n\n  // Update index\n  this.s.index = (this.s.index + 1) % servers.length;\n\n  // Pick first one\n  return servers[this.s.index];\n}\n\n/**\n * Creates a new Mongos instance\n * @class\n * @param {array} seedlist A list of seeds for the replicaset\n * @param {number} [options.reconnectTries=30] Reconnect retries for HA if no servers available\n * @param {number} [options.haInterval=5000] The High availability period for replicaset inquiry\n * @param {boolean} [options.emitError=false] Server will emit errors events\n * @param {Cursor} [options.cursorFactory=Cursor] The cursor factory class used for all query cursors\n * @param {number} [options.size=5] Server connection pool size\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=0] Initial delay before TCP keep alive enabled\n * @param {number} [options.localThresholdMS=15] Cutoff latency point in MS for MongoS proxy selection\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {number} [options.connectionTimeout=1000] TCP Connection timeout setting\n * @param {number} [options.socketTimeout=0] TCP Socket timeout setting\n * @param {boolean} [options.singleBufferSerializtion=true] Serialize into single buffer, trade of peak memory for serialization speed\n * @param {boolean} [options.ssl=false] Use SSL for connection\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {Buffer} [options.ca] SSL Certificate store binary buffer\n * @param {Buffer} [options.cert] SSL Certificate binary buffer\n * @param {Buffer} [options.key] SSL Key file binary buffer\n * @param {string} [options.passphrase] SSL Certificate pass phrase\n * @param {boolean} [options.rejectUnauthorized=true] Reject unauthorized server certificates\n * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits\n * @return {Mongos} A cursor instance\n * @fires Mongos#connect\n * @fires Mongos#joined\n * @fires Mongos#left\n */\nvar Mongos = function(seedlist, options) {\n  var self = this;\n  options = options || {};\n\n  // Add event listener\n  EventEmitter.call(this);\n\n  // Validate seedlist\n  if(!Array.isArray(seedlist)) throw new MongoError(\"seedlist must be an array\");\n  // Validate list\n  if(seedlist.length == 0) throw new MongoError(\"seedlist must contain at least one entry\");\n  // Validate entries\n  seedlist.forEach(function(e) {\n    if(typeof e.host != 'string' || typeof e.port != 'number')\n      throw new MongoError(\"seedlist entry must contain a host and port\");\n  });\n\n  // BSON Parser, ensure we have a single instance\n  bsonInstance = bsonInstance == null ? new BSON(bsonTypes) : bsonInstance;\n  // Pick the right bson parser\n  var bson = options.bson ? options.bson : bsonInstance;\n  // Add bson parser to options\n  options.bson = bson;\n\n  // The Mongos state\n  this.s = {\n    // Seed list for sharding passed in\n      seedlist: seedlist\n    // Passed in options\n    , options: options\n    // Logger\n    , logger: Logger('Mongos', options)\n    // Reconnect tries\n    , reconnectTries: options.reconnectTries || 30\n    // Ha interval\n    , haInterval: options.haInterval || 5000\n    // localThresholdMS\n    , localThresholdMS: options.localThresholdMS || 15\n    // Have omitted fullsetup\n    , fullsetup: false\n    // Cursor factory\n    , Cursor: options.cursorFactory || BasicCursor\n    // Current credentials used for auth\n    , credentials: []\n    // BSON Parser\n    , bsonInstance: bsonInstance\n    , bson: bson\n    // Pings\n    , pings: {}\n    // Default state\n    , state: DISCONNECTED\n    // Swallow or emit errors\n    , emitError: typeof options.emitError == 'boolean' ? options.emitError : false\n    // Contains any alternate strategies for picking\n    , readPreferenceStrategies: {}\n    // Auth providers\n    , authProviders: {}\n    // Unique instance id\n    , id: mongosId++\n    // Authentication in progress\n    , authInProgress: false\n    // Servers added while auth in progress\n    , authInProgressServers: []\n    // Current retries left\n    , retriesLeft: options.reconnectTries || 30\n    // Do we have a not connected handler\n    , disconnectHandler: options.disconnectHandler\n  }\n\n  // Set up the connection timeout for the options\n  options.connectionTimeout = options.connectionTimeout || 1000;\n\n  // Create a new state for the mongos\n  this.s.mongosState = new State(this.s.readPreferenceStrategies, this.s.localThresholdMS);\n\n  // BSON property (find a server and pass it along)\n  Object.defineProperty(this, 'bson', {\n    enumerable: true, get: function() {\n      var servers = self.s.mongosState.getAll();\n      return servers.length > 0 ? servers[0].bson : null;\n    }\n  });\n\n  Object.defineProperty(this, 'id', {\n    enumerable:true, get: function() { return self.s.id; }\n  });\n\n  Object.defineProperty(this, 'type', {\n    enumerable:true, get: function() { return 'mongos'; }\n  });\n\n  Object.defineProperty(this, 'haInterval', {\n    enumerable:true, get: function() { return self.s.haInterval; }\n  });\n\n  Object.defineProperty(this, 'state', {\n    enumerable:true, get: function() { return self.s.mongosState; }\n  });\n}\n\ninherits(Mongos, EventEmitter);\n\n/**\n * Name of BSON parser currently used\n * @method\n * @return {string}\n */\nMongos.prototype.parserType = function() {\n  if(this.s.bson.serialize.toString().indexOf('[native code]') != -1)\n    return 'c++';\n  return 'js';\n}\n\n/**\n * Execute a command\n * @method\n * @param {string} type Type of BSON parser to use (c++ or js)\n */\nMongos.prototype.setBSONParserType = function(type) {\n  var nBSON = null;\n\n  if(type == 'c++') {\n    nBSON = require('bson').native().BSON;\n  } else if(type == 'js') {\n    nBSON = require('bson').pure().BSON;\n  } else {\n    throw new MongoError(f(\"% parser not supported\", type));\n  }\n\n  this.s.options.bson = new nBSON(bsonTypes);\n}\n\n/**\n * Returns the last known ismaster document for this server\n * @method\n * @return {object}\n */\nMongos.prototype.lastIsMaster = function() {\n  var connectedServers = this.s.mongosState.connectedServers();\n  if(connectedServers.length > 0) return connectedServers[0].lastIsMaster();\n  return null;\n}\n\n/**\n * Initiate server connect\n * @method\n */\nMongos.prototype.connect = function(_options) {\n  var self = this;\n  // Start replicaset inquiry process\n  setTimeout(mongosInquirer(self, self.s), self.s.haInterval);\n  // Additional options\n  if(_options) for(var name in _options) self.s.options[name] = _options[name];\n  // For all entries in the seedlist build a server instance\n  self.s.seedlist.forEach(function(e) {\n    // Clone options\n    var opts = cloneOptions(self.s.options);\n    // Add host and port\n    opts.host = e.host;\n    opts.port = e.port;\n    opts.reconnect = false;\n    opts.readPreferenceStrategies = self.s.readPreferenceStrategies;\n    // Share the auth store\n    opts.authProviders = self.s.authProviders;\n    // Don't emit errors\n    opts.emitError = true;\n    // Create a new Server\n    self.s.mongosState.disconnected(new Server(opts));\n  });\n\n  // Get the disconnected servers\n  var servers = self.s.mongosState.disconnectedServers();\n\n  // Set connecting state\n  this.s.state = CONNECTING;\n\n  // Attempt to connect to all the servers\n  while(servers.length > 0) {\n    // Get the server\n    var server = servers.shift();\n\n    // Remove any non used handlers\n    ['error', 'close', 'timeout', 'connect', 'message', 'parseError'].forEach(function(e) {\n      server.removeAllListeners(e);\n    });\n\n    // Set up the event handlers\n    server.once('error', errorHandlerTemp(self, self.s, server));\n    server.once('close', errorHandlerTemp(self, self.s, server));\n    server.once('timeout', errorHandlerTemp(self, self.s, server));\n    server.once('parseError', errorHandlerTemp(self, self.s, server));\n    server.once('connect', connectHandler(self, self.s, 'connect'));\n\n    if(self.s.logger.isInfo()) self.s.logger.info(f('connecting to server %s', server.name));\n    // Attempt to connect\n    server.connect();\n  }\n}\n\n/**\n * Destroy the server connection\n * @method\n */\nMongos.prototype.destroy = function(emitClose) {\n  this.s.state = DESTROYED;\n  // Emit close\n  if(emitClose && self.listeners('close').length > 0) self.emit('close', self);\n  // Destroy the state\n  this.s.mongosState.destroy();\n}\n\n/**\n * Figure out if the server is connected\n * @method\n * @return {boolean}\n */\nMongos.prototype.isConnected = function() {\n  return this.s.mongosState.isConnected();\n}\n\n/**\n * Figure out if the server instance was destroyed by calling destroy\n * @method\n * @return {boolean}\n */\nMongos.prototype.isDestroyed = function() {\n  return this.s.state  == DESTROYED;\n}\n\n//\n// Operations\n//\n\n/**\n * Insert one or more documents\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of documents to insert\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {opResultCallback} callback A callback function\n */\nMongos.prototype.insert = function(ns, ops, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  if(this.s.state == DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if(!this.isConnected() && this.s.disconnectHandler != null) {\n    callback = bindToCurrentDomain(callback);\n    return this.s.disconnectHandler.add('insert', ns, ops, options, callback);\n  }\n\n  executeWriteOperation(this.s, 'insert', ns, ops, options, callback);\n}\n\n/**\n * Perform one or more update operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of updates\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {opResultCallback} callback A callback function\n */\nMongos.prototype.update = function(ns, ops, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  if(this.s.state == DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if(!this.isConnected() && this.s.disconnectHandler != null) {\n    callback = bindToCurrentDomain(callback);\n    return this.s.disconnectHandler.add('update', ns, ops, options, callback);\n  }\n\n  executeWriteOperation(this.s, 'update', ns, ops, options, callback);\n}\n\n/**\n * Perform one or more remove operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of removes\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {opResultCallback} callback A callback function\n */\nMongos.prototype.remove = function(ns, ops, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  if(this.s.state == DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if(!this.isConnected() && this.s.disconnectHandler != null) {\n    callback = bindToCurrentDomain(callback);\n    return this.s.disconnectHandler.add('remove', ns, ops, options, callback);\n  }\n\n  executeWriteOperation(this.s, 'remove', ns, ops, options, callback);\n}\n\n/**\n * Execute a command\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object} cmd The command hash\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Connection} [options.connection] Specify connection object to execute command against\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {opResultCallback} callback A callback function\n */\nMongos.prototype.command = function(ns, cmd, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  if(this.s.state == DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n  var self = this;\n\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if(!self.isConnected() && self.s.disconnectHandler != null) {\n    callback = bindToCurrentDomain(callback);\n    return self.s.disconnectHandler.add('command', ns, cmd, options, callback);\n  }\n\n  var server = null;\n  // Ensure we have no options\n  options = options || {};\n\n  // We need to execute the command on all servers\n  if(options.onAll) {\n    var servers = self.s.mongosState.getAll();\n    var count = servers.length;\n    var cmdErr = null;\n\n    for(var i = 0; i < servers.length; i++) {\n      servers[i].command(ns, cmd, options, function(err, r) {\n        count = count - 1;\n        // Finished executing command\n        if(count == 0) {\n          // Was it a logout command clear any credentials\n          if(cmd.logout) clearCredentials(self.s, ns);\n          // Return the error\n          callback(err, r);\n        }\n      });\n    }\n\n    return;\n  }\n\n\n  try {\n    // Get a primary\n    server = self.s.mongosState.pickServer(options.writeConcern ? ReadPreference.primary : options.readPreference);\n  } catch(err) {\n    return callback(err);\n  }\n\n  // No server returned we had an error\n  if(server == null) return callback(new MongoError(\"no mongos found\"));\n  server.command(ns, cmd, options, function(err, r) {\n    // Was it a logout command clear any credentials\n    if(cmd.logout) clearCredentials(self.s, ns);\n    callback(err, r);\n  });\n}\n\n/**\n * Perform one or more remove operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {{object}|{Long}} cmd Can be either a command returning a cursor or a cursorId\n * @param {object} [options.batchSize=0] Batchsize for the operation\n * @param {array} [options.documents=[]] Initial documents list for cursor\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {opResultCallback} callback A callback function\n */\nMongos.prototype.cursor = function(ns, cmd, cursorOptions) {\n  cursorOptions = cursorOptions || {};\n  var FinalCursor = cursorOptions.cursorFactory || this.s.Cursor;\n  return new FinalCursor(this.s.bson, ns, cmd, cursorOptions, this, this.s.options);\n}\n\n/**\n * Authenticate using a specified mechanism\n * @method\n * @param {string} mechanism The Auth mechanism we are invoking\n * @param {string} db The db we are invoking the mechanism against\n * @param {...object} param Parameters for the specific mechanism\n * @param {authResultCallback} callback A callback function\n */\nMongos.prototype.auth = function(mechanism, db) {\n  var allArgs = Array.prototype.slice.call(arguments, 0).slice(0);\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 2);\n  var callback = args.pop();\n\n  // If we don't have the mechanism fail\n  if(this.s.authProviders[mechanism] == null && mechanism != 'default')\n    throw new MongoError(f(\"auth provider %s does not exist\", mechanism));\n\n  // Authenticate against all the servers\n  var servers = this.s.mongosState.connectedServers().slice(0);\n  var count = servers.length;\n  // Correct authentication\n  var authenticated = true;\n  var authErr = null;\n  // Set auth in progress\n  this.s.authInProgress = true;\n\n  // Authenticate against all servers\n  while(servers.length > 0) {\n    var server = servers.shift();\n    // Arguments without a callback\n    var argsWithoutCallback = [mechanism, db].concat(args.slice(0));\n    // Create arguments\n    var finalArguments = argsWithoutCallback.concat([function(err, r) {\n      count = count - 1;\n      if(err) authErr = err;\n      if(!r) authenticated = false;\n\n      // We are done\n      if(count == 0) {\n        // We have more servers that are not authenticated, let's authenticate\n        if(self.s.authInProgressServers.length > 0) {\n          self.s.authInProgressServers = [];\n          return self.auth.apply(self, [mechanism, db].concat(args).concat([callback]));\n        }\n\n        // Auth is done\n        self.s.authInProgress = false;\n        // Add successful credentials\n        if(authErr == null) addCredentials(self.s, db, argsWithoutCallback);\n        // Return the auth error\n        if(authErr) return callback(authErr, false);\n        // Successfully authenticated session\n        callback(null, new Session({}, self));\n      }\n    }]);\n\n    // Execute the auth\n    server.auth.apply(server, finalArguments);\n  }\n}\n\n//\n// Plugin methods\n//\n\n/**\n * Add custom read preference strategy\n * @method\n * @param {string} name Name of the read preference strategy\n * @param {object} strategy Strategy object instance\n */\nMongos.prototype.addReadPreferenceStrategy = function(name, strategy) {\n  if(this.s.readPreferenceStrategies == null) this.s.readPreferenceStrategies = {};\n  this.s.readPreferenceStrategies[name] = strategy;\n}\n\n/**\n * Add custom authentication mechanism\n * @method\n * @param {string} name Name of the authentication mechanism\n * @param {object} provider Authentication object instance\n */\nMongos.prototype.addAuthProvider = function(name, provider) {\n  this.s.authProviders[name] = provider;\n}\n\n/**\n * Get connection\n * @method\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @return {Connection}\n */\nMongos.prototype.getConnection = function(options) {\n  // Ensure we have no options\n  options = options || {};\n  // Pick the right server based on readPreference\n  var server = this.s.mongosState.pickServer(options.readPreference);\n  if(server == null) return null;\n  // Return connection\n  return server.getConnection();\n}\n\n/**\n * Get server\n * @method\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @return {Server}\n */\nMongos.prototype.getServer = function(options) {\n  // Ensure we have no options\n  options = options || {};\n  // Pick the right server based on readPreference\n  return this.s.mongosState.pickServer(options.readPreference);\n}\n\n/**\n * All raw connections\n * @method\n * @return {Connection[]}\n */\nMongos.prototype.connections = function() {\n  return this.s.mongosState.getAllConnections();\n}\n\n//\n// Inquires about state changes\n//\nvar mongosInquirer = function(self, state) {\n  return function() {\n    if(state.state == DESTROYED) return\n    if(state.state == CONNECTED) state.retriesLeft = state.reconnectTries;\n\n    // If we have a disconnected site\n    if(state.state == DISCONNECTED && state.retriesLeft == 0) {\n      self.destroy();\n      return self.emit('error', new MongoError(f('failed to reconnect after %s', state.reconnectTries)));\n    } else if(state == DISCONNECTED) {\n      state.retriesLeft = state.retriesLeft - 1;\n    }\n\n    // If we have a primary and a disconnect handler, execute\n    // buffered operations\n    if(state.mongosState.isConnected() && state.disconnectHandler) {\n      state.disconnectHandler.execute();\n    }\n\n    // Log the information\n    if(state.logger.isDebug()) state.logger.debug(f('mongos ha proceess running'));\n\n    // Let's query any disconnected proxies\n    var disconnectedServers = state.mongosState.disconnectedServers();\n    if(disconnectedServers.length == 0) return setTimeout(mongosInquirer(self, state), state.haInterval);\n\n    // Count of connections waiting to be connected\n    var connectionCount = disconnectedServers.length;\n    if(state.logger.isDebug()) state.logger.debug(f('mongos ha proceess found %d disconnected proxies', connectionCount));\n\n    // Let's attempt to reconnect\n    while(disconnectedServers.length > 0) {\n      // Connect to proxy\n      var connectToProxy = function(_server) {\n        setTimeout(function() {\n          var events = ['error', 'close', 'timeout', 'connect', 'message', 'parseError'];\n          // Remove any listeners\n          events.forEach(function(e) {\n            _server.removeAllListeners(e);\n          });\n\n          // Set up the event handlers\n          _server.once('error', errorHandlerTemp(self, state, server));\n          _server.once('close', errorHandlerTemp(self, state, server));\n          _server.once('timeout', errorHandlerTemp(self, state, server));\n          _server.once('connect', connectHandler(self, state, 'ha'));\n          // Start connect\n          _server.connect();\n        }, 1);\n      }\n\n      var server = disconnectedServers.shift();\n      if(state.logger.isDebug()) state.logger.debug(f('attempting to connect to server %s', server.name));\n      connectToProxy(server);\n    }\n\n    // Let's keep monitoring but wait for possible timeout to happen\n    return setTimeout(mongosInquirer(self, state), state.options.connectionTimeout + state.haInterval);\n  }\n}\n\n//\n// Error handler for initial connect\nvar errorHandlerTemp = function(self, state, server) {\n  return function(err, server) {\n    // Log the information\n    if(state.logger.isInfo()) state.logger.info(f('server %s disconnected with error %s',  server.name, JSON.stringify(err)));\n\n    // Signal disconnect of server\n    state.mongosState.disconnected(server);\n\n    // Remove any non used handlers\n    var events = ['error', 'close', 'timeout', 'connect'];\n    events.forEach(function(e) {\n      server.removeAllListeners(e);\n    })\n  }\n}\n\n//\n// Handlers\nvar errorHandler = function(self, state) {\n  return function(err, server) {\n    if(state.logger.isInfo()) state.logger.info(f('server %s errored out with %s', server.name, JSON.stringify(err)));\n    state.mongosState.disconnected(server);\n    // No more servers left emit close\n    if(state.mongosState.connectedServers().length == 0) {\n      state.state = DISCONNECTED;\n    }\n\n    // Signal server left\n    self.emit('left', 'mongos', server);\n    if(state.emitError) self.emit('error', err, server);\n  }\n}\n\nvar timeoutHandler = function(self, state) {\n  return function(err, server) {\n    if(state.logger.isInfo()) state.logger.info(f('server %s timed out', server.name));\n    state.mongosState.disconnected(server);\n\n    // No more servers emit close event if no entries left\n    if(state.mongosState.connectedServers().length == 0) {\n      state.state = DISCONNECTED;\n    }\n\n    // Signal server left\n    self.emit('left', 'mongos', server);\n  }\n}\n\nvar closeHandler = function(self, state) {\n  return function(err, server) {\n    if(state.logger.isInfo()) state.logger.info(f('server %s closed', server.name));\n    state.mongosState.disconnected(server);\n\n    // No more servers left emit close\n    if(state.mongosState.connectedServers().length == 0) {\n      state.state = DISCONNECTED;\n    }\n\n    // Signal server left\n    self.emit('left', 'mongos', server);\n  }\n}\n\n// Connect handler\nvar connectHandler = function(self, state, e) {\n  return function(server) {\n    if(state.logger.isInfo()) state.logger.info(f('connected to %s', server.name));\n\n    // Remove any non used handlers\n    ['error', 'close', 'timeout', 'connect', 'message', 'parseError'].forEach(function(e) {\n      server.removeAllListeners(e);\n    });\n\n    // finish processing the server\n    var processNewServer = function(_server) {\n      // Add the server handling code\n      if(_server.isConnected()) {\n        _server.once('error', errorHandler(self, state));\n        _server.once('close', closeHandler(self, state));\n        _server.once('timeout', timeoutHandler(self, state));\n        _server.once('parseError', timeoutHandler(self, state));\n      }\n\n      // Emit joined event\n      self.emit('joined', 'mongos', _server);\n\n      // Add to list connected servers\n      state.mongosState.connected(_server);\n\n      // Do we have a reconnect event\n      if('ha' == e && state.mongosState.connectedServers().length == 1) {\n        self.emit('reconnect', _server);\n      }\n\n      // Full setup\n      if(state.mongosState.disconnectedServers().length == 0 &&\n        state.mongosState.connectedServers().length > 0 &&\n        !state.fullsetup) {\n        state.fullsetup = true;\n        self.emit('fullsetup');\n      }\n\n      // all connected\n      if(state.mongosState.disconnectedServers().length == 0 &&\n        state.mongosState.connectedServers().length == state.seedlist.length &&\n        !state.all) {\n        state.all = true;\n        self.emit('all');\n      }\n\n      // Set connected\n      if(state.state == DISCONNECTED) {\n        state.state = CONNECTED;\n        self.emit('reconnect', self);\n      } else if(state.state == CONNECTING) {\n        state.state = CONNECTED;\n        self.emit('connect', self);\n      }\n    }\n\n    // Is there an authentication process ongoing\n    if(state.authInProgress) {\n      state.authInProgressServers.push(server);\n    }\n\n    // No credentials just process server\n    if(state.credentials.length == 0) return processNewServer(server);\n\n    // Do we have credentials, let's apply them all\n    var count = state.credentials.length;\n    // Apply the credentials\n    for(var i = 0; i < state.credentials.length; i++) {\n      server.auth.apply(server, state.credentials[i].concat([function(err, r) {\n        count = count - 1;\n        if(count == 0) processNewServer(server);\n      }]));\n    }\n  }\n}\n\n//\n// Add server to the list if it does not exist\nvar addToListIfNotExist = function(list, server) {\n  var found = false;\n\n  // Remove any non used handlers\n  ['error', 'close', 'timeout', 'connect'].forEach(function(e) {\n    server.removeAllListeners(e);\n  })\n\n  // Check if the server already exists\n  for(var i = 0; i < list.length; i++) {\n    if(list[i].equals(server)) found = true;\n  }\n\n  if(!found) {\n    list.push(server);\n  }\n}\n\n// Add the new credential for a db, removing the old\n// credential from the cache\nvar addCredentials = function(state, db, argsWithoutCallback) {\n  // Remove any credentials for the db\n  clearCredentials(state, db + \".dummy\");\n  // Add new credentials to list\n  state.credentials.push(argsWithoutCallback);\n}\n\n// Clear out credentials for a namespace\nvar clearCredentials = function(state, ns) {\n  var db = ns.split('.')[0];\n  var filteredCredentials = [];\n\n  // Filter out all credentials for the db the user is logging out off\n  for(var i = 0; i < state.credentials.length; i++) {\n    if(state.credentials[i][1] != db) filteredCredentials.push(state.credentials[i]);\n  }\n\n  // Set new list of credentials\n  state.credentials = filteredCredentials;\n}\n\nvar processReadPreference = function(cmd, options) {\n  options = options || {}\n  // No read preference specified\n  if(options.readPreference == null) return cmd;\n}\n\n//\n// Execute write operation\nvar executeWriteOperation = function(state, op, ns, ops, options, callback) {\n  if(typeof options == 'function') {\n    callback = options;\n    options = {};\n  }\n\n  var server = null;\n  // Ensure we have no options\n  options = options || {};\n  try {\n    // Get a primary\n    server = state.mongosState.pickServer();\n  } catch(err) {\n    return callback(err);\n  }\n\n  // No server returned we had an error\n  if(server == null) return callback(new MongoError(\"no mongos found\"));\n  // Execute the command\n  server[op](ns, ops, options, callback);\n}\n\n/**\n * A mongos connect event, used to verify that the connection is up and running\n *\n * @event Mongos#connect\n * @type {Mongos}\n */\n\n/**\n * A server member left the mongos list\n *\n * @event Mongos#left\n * @type {Mongos}\n * @param {string} type The type of member that left (mongos)\n * @param {Server} server The server object that left\n */\n\n/**\n * A server member joined the mongos list\n *\n * @event Mongos#joined\n * @type {Mongos}\n * @param {string} type The type of member that left (mongos)\n * @param {Server} server The server object that joined\n */\n\nmodule.exports = Mongos;\n"};
jalangiLabel2129:
    while (true) {
        try {
            J$.Se(20945, '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/topologies/mongos_jalangi_.js', '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/topologies/mongos.js');
            J$.N(20953, '__secret__S$', __secret__S$, 0);
            J$.N(20961, '__secret__traits__', __secret__traits__, 0);
            J$.N(20969, 'inherits', inherits, 0);
            J$.N(20977, 'f', f, 0);
            J$.N(20985, 'b', b, 0);
            J$.N(20993, 'bindToCurrentDomain', bindToCurrentDomain, 0);
            J$.N(21001, 'EventEmitter', EventEmitter, 0);
            J$.N(21009, 'BasicCursor', BasicCursor, 0);
            J$.N(21017, 'BSON', BSON, 0);
            J$.N(21025, 'Server', Server, 0);
            J$.N(21033, 'Logger', Logger, 0);
            J$.N(21041, 'ReadPreference', ReadPreference, 0);
            J$.N(21049, 'Session', Session, 0);
            J$.N(21057, 'MongoError', MongoError, 0);
            J$.N(21065, 'DISCONNECTED', DISCONNECTED, 0);
            J$.N(21073, 'CONNECTING', CONNECTING, 0);
            J$.N(21081, 'CONNECTED', CONNECTED, 0);
            J$.N(21089, 'DESTROYED', DESTROYED, 0);
            J$.N(21097, 'bsonTypes', bsonTypes, 0);
            J$.N(21105, 'bsonInstance', bsonInstance, 0);
            J$.N(21113, 'mongosId', mongosId, 0);
            J$.N(21121, 'cloneOptions', cloneOptions, 0);
            J$.N(21129, 'State', State, 0);
            J$.N(21137, 'Mongos', Mongos, 0);
            J$.N(21145, 'mongosInquirer', mongosInquirer, 0);
            J$.N(21153, 'errorHandlerTemp', errorHandlerTemp, 0);
            J$.N(21161, 'errorHandler', errorHandler, 0);
            J$.N(21169, 'timeoutHandler', timeoutHandler, 0);
            J$.N(21177, 'closeHandler', closeHandler, 0);
            J$.N(21185, 'connectHandler', connectHandler, 0);
            J$.N(21193, 'addToListIfNotExist', addToListIfNotExist, 0);
            J$.N(21201, 'addCredentials', addCredentials, 0);
            J$.N(21209, 'clearCredentials', clearCredentials, 0);
            J$.N(21217, 'processReadPreference', processReadPreference, 0);
            J$.N(21225, 'executeWriteOperation', executeWriteOperation, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var inherits = J$.X1(465, J$.W(457, 'inherits', J$.G(121, J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'util', 21, false)), 'inherits', 0), inherits, 3)), f = J$.X1(481, J$.W(473, 'f', J$.G(153, J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, 'util', 21, false)), 'format', 0), f, 3)), b = J$.X1(497, J$.W(489, 'b', J$.F(177, J$.R(161, 'require', require, 2), 0)(J$.T(169, 'bson', 21, false)), b, 3)), bindToCurrentDomain = J$.X1(513, J$.W(505, 'bindToCurrentDomain', J$.G(209, J$.F(201, J$.R(185, 'require', require, 2), 0)(J$.T(193, '../connection/utils', 21, false)), 'bindToCurrentDomain', 0), bindToCurrentDomain, 3)), EventEmitter = J$.X1(529, J$.W(521, 'EventEmitter', J$.G(241, J$.F(233, J$.R(217, 'require', require, 2), 0)(J$.T(225, 'events', 21, false)), 'EventEmitter', 0), EventEmitter, 3)), BasicCursor = J$.X1(545, J$.W(537, 'BasicCursor', J$.F(265, J$.R(249, 'require', require, 2), 0)(J$.T(257, '../cursor', 21, false)), BasicCursor, 3)), BSON = J$.X1(561, J$.W(553, 'BSON', J$.G(305, J$.M(297, J$.F(289, J$.R(273, 'require', require, 2), 0)(J$.T(281, 'bson', 21, false)), 'native', 0)(), 'BSON', 0), BSON, 3)), BasicCursor = J$.X1(577, J$.W(569, 'BasicCursor', J$.F(329, J$.R(313, 'require', require, 2), 0)(J$.T(321, '../cursor', 21, false)), BasicCursor, 3)), Server = J$.X1(593, J$.W(585, 'Server', J$.F(353, J$.R(337, 'require', require, 2), 0)(J$.T(345, './server', 21, false)), Server, 3)), Logger = J$.X1(609, J$.W(601, 'Logger', J$.F(377, J$.R(361, 'require', require, 2), 0)(J$.T(369, '../connection/logger', 21, false)), Logger, 3)), ReadPreference = J$.X1(625, J$.W(617, 'ReadPreference', J$.F(401, J$.R(385, 'require', require, 2), 0)(J$.T(393, './read_preference', 21, false)), ReadPreference, 3)), Session = J$.X1(641, J$.W(633, 'Session', J$.F(425, J$.R(409, 'require', require, 2), 0)(J$.T(417, './session', 21, false)), Session, 3)), MongoError = J$.X1(657, J$.W(649, 'MongoError', J$.F(449, J$.R(433, 'require', require, 2), 0)(J$.T(441, '../error', 21, false)), MongoError, 3));
            var DISCONNECTED = J$.X1(681, J$.W(673, 'DISCONNECTED', J$.T(665, 'disconnected', 21, false), DISCONNECTED, 3));
            var CONNECTING = J$.X1(705, J$.W(697, 'CONNECTING', J$.T(689, 'connecting', 21, false), CONNECTING, 3));
            var CONNECTED = J$.X1(729, J$.W(721, 'CONNECTED', J$.T(713, 'connected', 21, false), CONNECTED, 3));
            var DESTROYED = J$.X1(753, J$.W(745, 'DESTROYED', J$.T(737, 'destroyed', 21, false), DESTROYED, 3));
            var bsonTypes = J$.X1(937, J$.W(929, 'bsonTypes', J$.T(921, [
                J$.G(769, J$.R(761, 'b', b, 1), 'Long', 0),
                J$.G(785, J$.R(777, 'b', b, 1), 'ObjectID', 0),
                J$.G(801, J$.R(793, 'b', b, 1), 'Binary', 0),
                J$.G(817, J$.R(809, 'b', b, 1), 'Code', 0),
                J$.G(833, J$.R(825, 'b', b, 1), 'DBRef', 0),
                J$.G(849, J$.R(841, 'b', b, 1), 'Symbol', 0),
                J$.G(865, J$.R(857, 'b', b, 1), 'Double', 0),
                J$.G(881, J$.R(873, 'b', b, 1), 'Timestamp', 0),
                J$.G(897, J$.R(889, 'b', b, 1), 'MaxKey', 0),
                J$.G(913, J$.R(905, 'b', b, 1), 'MinKey', 0)
            ], 10, false), bsonTypes, 3));
            var bsonInstance = J$.X1(961, J$.W(953, 'bsonInstance', J$.T(945, null, 25, false), bsonInstance, 3));
            var mongosId = J$.X1(985, J$.W(977, 'mongosId', J$.T(969, 0, 22, false), mongosId, 3));
            var cloneOptions = J$.X1(1185, J$.W(1177, 'cloneOptions', J$.T(1169, function (options) {
                jalangiLabel2056:
                    while (true) {
                        try {
                            J$.Fe(1129, arguments.callee, this, arguments);
                            arguments = J$.N(1137, 'arguments', arguments, 4);
                            options = J$.N(1145, 'options', options, 4);
                            J$.N(1153, 'opts', opts, 0);
                            J$.N(1161, 'name', name, 0);
                            var opts = J$.X1(1009, J$.W(1001, 'opts', J$.T(993, {}, 11, false), opts, 1));
                            for (J$._tm_p in J$.H(1081, J$.R(1017, 'options', options, 0))) {
                                var name = J$.X1(1097, J$.W(1089, 'name', J$._tm_p, name, 1));
                                {
                                    {
                                        J$.X1(1073, J$.P(1065, J$.R(1025, 'opts', opts, 0), J$.R(1033, 'name', name, 0), J$.G(1057, J$.R(1041, 'options', options, 0), J$.R(1049, 'name', name, 0), 4), 2));
                                    }
                                }
                            }
                            return J$.X1(1121, J$.Rt(1113, J$.R(1105, 'opts', opts, 0)));
                        } catch (J$e) {
                            J$.Ex(21233, J$e);
                        } finally {
                            if (J$.Fr(21241))
                                continue jalangiLabel2056;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1129), cloneOptions, 3));
            var State = J$.X1(1329, J$.W(1321, 'State', J$.T(1313, function (readPreferenceStrategies, localThresholdMS) {
                jalangiLabel2057:
                    while (true) {
                        try {
                            J$.Fe(1281, arguments.callee, this, arguments);
                            arguments = J$.N(1289, 'arguments', arguments, 4);
                            readPreferenceStrategies = J$.N(1297, 'readPreferenceStrategies', readPreferenceStrategies, 4);
                            localThresholdMS = J$.N(1305, 'localThresholdMS', localThresholdMS, 4);
                            J$.X1(1273, J$.P(1265, J$.R(1193, 'this', this, 0), 's', J$.T(1257, {
                                connectedServers: J$.T(1201, [], 10, false),
                                disconnectedServers: J$.T(1209, [], 10, false),
                                readPreferenceStrategies: J$.R(1217, 'readPreferenceStrategies', readPreferenceStrategies, 0),
                                lowerBoundLatency: J$.G(1233, J$.R(1225, 'Number', Number, 2), 'MAX_VALUE', 0),
                                localThresholdMS: J$.R(1241, 'localThresholdMS', localThresholdMS, 0),
                                index: J$.T(1249, 0, 22, false)
                            }, 11, false), 0));
                        } catch (J$e) {
                            J$.Ex(21249, J$e);
                        } finally {
                            if (J$.Fr(21257))
                                continue jalangiLabel2057;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1281), State, 3));
            J$.X1(1841, J$.P(1833, J$.G(1345, J$.R(1337, 'State', State, 1), 'prototype', 0), 'connected', J$.T(1825, function (server) {
                jalangiLabel2060:
                    while (true) {
                        try {
                            J$.Fe(1793, arguments.callee, this, arguments);
                            arguments = J$.N(1801, 'arguments', arguments, 4);
                            server = J$.N(1809, 'server', server, 4);
                            J$.N(1817, 'found', found, 0);
                            J$.X1(1481, J$.P(1473, J$.G(1361, J$.R(1353, 'this', this, 0), 's', 0), 'disconnectedServers', J$.M(1465, J$.G(1385, J$.G(1377, J$.R(1369, 'this', this, 0), 's', 0), 'disconnectedServers', 0), 'filter', 0)(J$.T(1457, function (s) {
                                jalangiLabel2058:
                                    while (true) {
                                        try {
                                            J$.Fe(1433, arguments.callee, this, arguments);
                                            arguments = J$.N(1441, 'arguments', arguments, 4);
                                            s = J$.N(1449, 's', s, 4);
                                            return J$.X1(1425, J$.Rt(1417, J$.U(10, '!', J$.M(1409, J$.R(1393, 's', s, 0), 'equals', 0)(J$.R(1401, 'server', server, 0)))));
                                        } catch (J$e) {
                                            J$.Ex(21265, J$e);
                                        } finally {
                                            if (J$.Fr(21273))
                                                continue jalangiLabel2058;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1433)), 0));
                            var found = J$.X1(1505, J$.W(1497, 'found', J$.T(1489, false, 23, false), found, 1));
                            J$.X1(1625, J$.M(1617, J$.G(1529, J$.G(1521, J$.R(1513, 'this', this, 0), 's', 0), 'connectedServers', 0), 'forEach', 0)(J$.T(1609, function (s) {
                                jalangiLabel2059:
                                    while (true) {
                                        try {
                                            J$.Fe(1585, arguments.callee, this, arguments);
                                            arguments = J$.N(1593, 'arguments', arguments, 4);
                                            s = J$.N(1601, 's', s, 4);
                                            if (J$.X1(21281, J$.C(8, J$.M(1553, J$.R(1537, 's', s, 0), 'equals', 0)(J$.R(1545, 'server', server, 0)))))
                                                J$.X1(1577, found = J$.W(1569, 'found', J$.T(1561, true, 23, false), found, 0));
                                        } catch (J$e) {
                                            J$.Ex(21289, J$e);
                                        } finally {
                                            if (J$.Fr(21297))
                                                continue jalangiLabel2059;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1585)));
                            if (J$.X1(21305, J$.C(16, J$.U(18, '!', J$.R(1633, 'found', found, 0)))))
                                J$.X1(1681, J$.M(1673, J$.G(1657, J$.G(1649, J$.R(1641, 'this', this, 0), 's', 0), 'connectedServers', 0), 'push', 0)(J$.R(1665, 'server', server, 0)));
                            if (J$.X1(21313, J$.C(24, J$.B(26, '>', J$.G(1705, J$.G(1697, J$.R(1689, 'this', this, 0), 's', 0), 'lowerBoundLatency', 0), J$.G(1729, J$.G(1721, J$.R(1713, 'server', server, 0), 's', 0), 'isMasterLatencyMS', 0), 0)))) {
                                J$.X1(1785, J$.P(1777, J$.G(1745, J$.R(1737, 'this', this, 0), 's', 0), 'lowerBoundLatency', J$.G(1769, J$.G(1761, J$.R(1753, 'server', server, 0), 's', 0), 'isMasterLatencyMS', 0), 0));
                            }
                        } catch (J$e) {
                            J$.Ex(21321, J$e);
                        } finally {
                            if (J$.Fr(21329))
                                continue jalangiLabel2060;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1793), 0));
            J$.X1(2249, J$.P(2241, J$.G(1857, J$.R(1849, 'State', State, 1), 'prototype', 0), 'disconnected', J$.T(2233, function (server) {
                jalangiLabel2063:
                    while (true) {
                        try {
                            J$.Fe(2201, arguments.callee, this, arguments);
                            arguments = J$.N(2209, 'arguments', arguments, 4);
                            server = J$.N(2217, 'server', server, 4);
                            J$.N(2225, 'found', found, 0);
                            J$.X1(1993, J$.P(1985, J$.G(1873, J$.R(1865, 'this', this, 0), 's', 0), 'connectedServers', J$.M(1977, J$.G(1897, J$.G(1889, J$.R(1881, 'this', this, 0), 's', 0), 'connectedServers', 0), 'filter', 0)(J$.T(1969, function (s) {
                                jalangiLabel2061:
                                    while (true) {
                                        try {
                                            J$.Fe(1945, arguments.callee, this, arguments);
                                            arguments = J$.N(1953, 'arguments', arguments, 4);
                                            s = J$.N(1961, 's', s, 4);
                                            return J$.X1(1937, J$.Rt(1929, J$.U(34, '!', J$.M(1921, J$.R(1905, 's', s, 0), 'equals', 0)(J$.R(1913, 'server', server, 0)))));
                                        } catch (J$e) {
                                            J$.Ex(21337, J$e);
                                        } finally {
                                            if (J$.Fr(21345))
                                                continue jalangiLabel2061;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1945)), 0));
                            var found = J$.X1(2017, J$.W(2009, 'found', J$.T(2001, false, 23, false), found, 1));
                            J$.X1(2137, J$.M(2129, J$.G(2041, J$.G(2033, J$.R(2025, 'this', this, 0), 's', 0), 'disconnectedServers', 0), 'forEach', 0)(J$.T(2121, function (s) {
                                jalangiLabel2062:
                                    while (true) {
                                        try {
                                            J$.Fe(2097, arguments.callee, this, arguments);
                                            arguments = J$.N(2105, 'arguments', arguments, 4);
                                            s = J$.N(2113, 's', s, 4);
                                            if (J$.X1(21353, J$.C(32, J$.M(2065, J$.R(2049, 's', s, 0), 'equals', 0)(J$.R(2057, 'server', server, 0)))))
                                                J$.X1(2089, found = J$.W(2081, 'found', J$.T(2073, true, 23, false), found, 0));
                                        } catch (J$e) {
                                            J$.Ex(21361, J$e);
                                        } finally {
                                            if (J$.Fr(21369))
                                                continue jalangiLabel2062;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 2097)));
                            if (J$.X1(21377, J$.C(40, J$.U(42, '!', J$.R(2145, 'found', found, 0)))))
                                J$.X1(2193, J$.M(2185, J$.G(2169, J$.G(2161, J$.R(2153, 'this', this, 0), 's', 0), 'disconnectedServers', 0), 'push', 0)(J$.R(2177, 'server', server, 0)));
                        } catch (J$e) {
                            J$.Ex(21385, J$e);
                        } finally {
                            if (J$.Fr(21393))
                                continue jalangiLabel2063;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2201), 0));
            J$.X1(2361, J$.P(2353, J$.G(2265, J$.R(2257, 'State', State, 1), 'prototype', 0), 'disconnectedServers', J$.T(2345, function () {
                jalangiLabel2064:
                    while (true) {
                        try {
                            J$.Fe(2329, arguments.callee, this, arguments);
                            arguments = J$.N(2337, 'arguments', arguments, 4);
                            return J$.X1(2321, J$.Rt(2313, J$.M(2305, J$.G(2289, J$.G(2281, J$.R(2273, 'this', this, 0), 's', 0), 'disconnectedServers', 0), 'slice', 0)(J$.T(2297, 0, 22, false))));
                        } catch (J$e) {
                            J$.Ex(21401, J$e);
                        } finally {
                            if (J$.Fr(21409))
                                continue jalangiLabel2064;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2329), 0));
            J$.X1(2473, J$.P(2465, J$.G(2377, J$.R(2369, 'State', State, 1), 'prototype', 0), 'connectedServers', J$.T(2457, function () {
                jalangiLabel2065:
                    while (true) {
                        try {
                            J$.Fe(2441, arguments.callee, this, arguments);
                            arguments = J$.N(2449, 'arguments', arguments, 4);
                            return J$.X1(2433, J$.Rt(2425, J$.M(2417, J$.G(2401, J$.G(2393, J$.R(2385, 'this', this, 0), 's', 0), 'connectedServers', 0), 'slice', 0)(J$.T(2409, 0, 22, false))));
                        } catch (J$e) {
                            J$.Ex(21417, J$e);
                        } finally {
                            if (J$.Fr(21425))
                                continue jalangiLabel2065;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2441), 0));
            J$.X1(2617, J$.P(2609, J$.G(2489, J$.R(2481, 'State', State, 1), 'prototype', 0), 'getAll', J$.T(2601, function () {
                jalangiLabel2066:
                    while (true) {
                        try {
                            J$.Fe(2585, arguments.callee, this, arguments);
                            arguments = J$.N(2593, 'arguments', arguments, 4);
                            return J$.X1(2577, J$.Rt(2569, J$.M(2561, J$.M(2529, J$.G(2513, J$.G(2505, J$.R(2497, 'this', this, 0), 's', 0), 'connectedServers', 0), 'slice', 0)(J$.T(2521, 0, 22, false)), 'concat', 0)(J$.G(2553, J$.G(2545, J$.R(2537, 'this', this, 0), 's', 0), 'disconnectedServers', 0))));
                        } catch (J$e) {
                            J$.Ex(21433, J$e);
                        } finally {
                            if (J$.Fr(21441))
                                continue jalangiLabel2066;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2585), 0));
            J$.X1(2849, J$.P(2841, J$.G(2633, J$.R(2625, 'State', State, 1), 'prototype', 0), 'getAllConnections', J$.T(2833, function () {
                jalangiLabel2068:
                    while (true) {
                        try {
                            J$.Fe(2809, arguments.callee, this, arguments);
                            arguments = J$.N(2817, 'arguments', arguments, 4);
                            J$.N(2825, 'connections', connections, 0);
                            var connections = J$.X1(2657, J$.W(2649, 'connections', J$.T(2641, [], 10, false), connections, 1));
                            J$.X1(2777, J$.M(2769, J$.G(2681, J$.G(2673, J$.R(2665, 'this', this, 0), 's', 0), 'connectedServers', 0), 'forEach', 0)(J$.T(2761, function (e) {
                                jalangiLabel2067:
                                    while (true) {
                                        try {
                                            J$.Fe(2737, arguments.callee, this, arguments);
                                            arguments = J$.N(2745, 'arguments', arguments, 4);
                                            e = J$.N(2753, 'e', e, 4);
                                            J$.X1(2729, connections = J$.W(2721, 'connections', J$.M(2713, J$.R(2689, 'connections', connections, 0), 'concat', 0)(J$.M(2705, J$.R(2697, 'e', e, 0), 'connections', 0)()), connections, 0));
                                        } catch (J$e) {
                                            J$.Ex(21449, J$e);
                                        } finally {
                                            if (J$.Fr(21457))
                                                continue jalangiLabel2067;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 2737)));
                            return J$.X1(2801, J$.Rt(2793, J$.R(2785, 'connections', connections, 0)));
                        } catch (J$e) {
                            J$.Ex(21465, J$e);
                        } finally {
                            if (J$.Fr(21473))
                                continue jalangiLabel2068;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2809), 0));
            J$.X1(3193, J$.P(3185, J$.G(2865, J$.R(2857, 'State', State, 1), 'prototype', 0), 'destroy', J$.T(3177, function () {
                jalangiLabel2070:
                    while (true) {
                        try {
                            J$.Fe(3153, arguments.callee, this, arguments);
                            arguments = J$.N(3161, 'arguments', arguments, 4);
                            J$.N(3169, 'server', server, 0);
                            while (J$.X1(21497, J$.C(48, J$.B(50, '>', J$.G(2897, J$.G(2889, J$.G(2881, J$.R(2873, 'this', this, 0), 's', 0), 'connectedServers', 0), 'length', 0), J$.T(2905, 0, 22, false), 0)))) {
                                var server = J$.X1(2953, J$.W(2945, 'server', J$.M(2937, J$.G(2929, J$.G(2921, J$.R(2913, 'this', this, 0), 's', 0), 'connectedServers', 0), 'shift', 0)(), server, 1));
                                J$.X1(3073, J$.M(3065, J$.T(2993, [
                                    J$.T(2961, 'error', 21, false),
                                    J$.T(2969, 'close', 21, false),
                                    J$.T(2977, 'timeout', 21, false),
                                    J$.T(2985, 'connect', 21, false)
                                ], 10, false), 'forEach', 0)(J$.T(3057, function (e) {
                                    jalangiLabel2069:
                                        while (true) {
                                            try {
                                                J$.Fe(3033, arguments.callee, this, arguments);
                                                arguments = J$.N(3041, 'arguments', arguments, 4);
                                                e = J$.N(3049, 'e', e, 4);
                                                J$.X1(3025, J$.M(3017, J$.R(3001, 'server', server, 0), 'removeAllListeners', 0)(J$.R(3009, 'e', e, 0)));
                                            } catch (J$e) {
                                                J$.Ex(21481, J$e);
                                            } finally {
                                                if (J$.Fr(21489))
                                                    continue jalangiLabel2069;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 3033)));
                                J$.X1(3097, J$.M(3089, J$.R(3081, 'server', server, 0), 'destroy', 0)());
                                J$.X1(3145, J$.M(3137, J$.G(3121, J$.G(3113, J$.R(3105, 'this', this, 0), 's', 0), 'disconnectedServers', 0), 'push', 0)(J$.R(3129, 'server', server, 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(21505, J$e);
                        } finally {
                            if (J$.Fr(21513))
                                continue jalangiLabel2070;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3153), 0));
            J$.X1(3305, J$.P(3297, J$.G(3209, J$.R(3201, 'State', State, 1), 'prototype', 0), 'isConnected', J$.T(3289, function () {
                jalangiLabel2071:
                    while (true) {
                        try {
                            J$.Fe(3273, arguments.callee, this, arguments);
                            arguments = J$.N(3281, 'arguments', arguments, 4);
                            return J$.X1(3265, J$.Rt(3257, J$.B(58, '>', J$.G(3241, J$.G(3233, J$.G(3225, J$.R(3217, 'this', this, 0), 's', 0), 'connectedServers', 0), 'length', 0), J$.T(3249, 0, 22, false), 0)));
                        } catch (J$e) {
                            J$.Ex(21521, J$e);
                        } finally {
                            if (J$.Fr(21529))
                                continue jalangiLabel2071;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3273), 0));
            J$.X1(4001, J$.P(3993, J$.G(3321, J$.R(3313, 'State', State, 1), 'prototype', 0), 'pickServer', J$.T(3985, function (readPreference) {
                jalangiLabel2073:
                    while (true) {
                        try {
                            J$.Fe(3945, arguments.callee, this, arguments);
                            arguments = J$.N(3953, 'arguments', arguments, 4);
                            readPreference = J$.N(3961, 'readPreference', readPreference, 4);
                            J$.N(3969, 'self', self, 0);
                            J$.N(3977, 'servers', servers, 0);
                            var self = J$.X1(3345, J$.W(3337, 'self', J$.R(3329, 'this', this, 0), self, 1));
                            J$.X1(3385, readPreference = J$.W(3377, 'readPreference', J$.C(56, J$.R(3353, 'readPreference', readPreference, 0)) ? J$._() : J$.G(3369, J$.R(3361, 'ReadPreference', ReadPreference, 1), 'primary', 0), readPreference, 0));
                            var servers = J$.X1(3577, J$.W(3569, 'servers', J$.M(3561, J$.G(3409, J$.G(3401, J$.R(3393, 'this', this, 0), 's', 0), 'connectedServers', 0), 'filter', 0)(J$.T(3553, function (server) {
                                jalangiLabel2072:
                                    while (true) {
                                        try {
                                            J$.Fe(3529, arguments.callee, this, arguments);
                                            arguments = J$.N(3537, 'arguments', arguments, 4);
                                            server = J$.N(3545, 'server', server, 4);
                                            if (J$.X1(21537, J$.C(72, J$.C(64, J$.B(74, '<=', J$.G(3433, J$.G(3425, J$.R(3417, 'server', server, 0), 's', 0), 'isMasterLatencyMS', 0), J$.B(66, '+', J$.G(3457, J$.G(3449, J$.R(3441, 'self', self, 0), 's', 0), 'lowerBoundLatency', 0), J$.G(3481, J$.G(3473, J$.R(3465, 'self', self, 0), 's', 0), 'localThresholdMS', 0), 0), 0)) ? J$.M(3497, J$.R(3489, 'server', server, 0), 'isConnected', 0)() : J$._()))) {
                                                return J$.X1(3521, J$.Rt(3513, J$.T(3505, true, 23, false)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(21545, J$e);
                                        } finally {
                                            if (J$.Fr(21553))
                                                continue jalangiLabel2072;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 3529)), servers, 1));
                            if (J$.X1(21561, J$.C(88, J$.C(80, J$.B(82, '!=', J$.G(3601, J$.G(3593, J$.R(3585, 'this', this, 0), 's', 0), 'readPreferenceStrategies', 0), J$.T(3609, null, 25, false), 0)) ? J$.B(90, '!=', J$.G(3649, J$.G(3633, J$.G(3625, J$.R(3617, 'this', this, 0), 's', 0), 'readPreferenceStrategies', 0), J$.R(3641, 'readPreference', readPreference, 0), 4), J$.T(3657, null, 25, false), 0) : J$._()))) {
                                return J$.X1(3737, J$.Rt(3729, J$.M(3721, J$.G(3697, J$.G(3681, J$.G(3673, J$.R(3665, 'this', this, 0), 's', 0), 'readPreferenceStrategies', 0), J$.R(3689, 'readPreference', readPreference, 0), 4), 'pickServer', 0)(J$.R(3705, 'servers', servers, 0), J$.R(3713, 'readPreference', readPreference, 0))));
                            }
                            if (J$.X1(21569, J$.C(96, J$.B(98, '==', J$.G(3753, J$.R(3745, 'servers', servers, 0), 'length', 0), J$.T(3761, 0, 22, false), 0))))
                                throw J$.X1(3801, J$.Th(3793, J$.F(3785, J$.R(3769, 'MongoError', MongoError, 1), 1)(J$.T(3777, 'no mongos proxy available', 21, false))));
                            J$.X1(3881, J$.P(3873, J$.G(3817, J$.R(3809, 'this', this, 0), 's', 0), 'index', J$.B(114, '%', J$.B(106, '+', J$.G(3841, J$.G(3833, J$.R(3825, 'this', this, 0), 's', 0), 'index', 0), J$.T(3849, 1, 22, false), 0), J$.G(3865, J$.R(3857, 'servers', servers, 0), 'length', 0), 0), 0));
                            return J$.X1(3937, J$.Rt(3929, J$.G(3921, J$.R(3889, 'servers', servers, 0), J$.G(3913, J$.G(3905, J$.R(3897, 'this', this, 0), 's', 0), 'index', 0), 4)));
                        } catch (J$e) {
                            J$.Ex(21577, J$e);
                        } finally {
                            if (J$.Fr(21585))
                                continue jalangiLabel2073;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3945), 0));
            var Mongos = J$.X1(5785, J$.W(5777, 'Mongos', J$.T(5769, function (seedlist, options) {
                jalangiLabel2080:
                    while (true) {
                        try {
                            J$.Fe(5721, arguments.callee, this, arguments);
                            arguments = J$.N(5729, 'arguments', arguments, 4);
                            seedlist = J$.N(5737, 'seedlist', seedlist, 4);
                            options = J$.N(5745, 'options', options, 4);
                            J$.N(5753, 'self', self, 0);
                            J$.N(5761, 'bson', bson, 0);
                            var self = J$.X1(4025, J$.W(4017, 'self', J$.R(4009, 'this', this, 0), self, 1));
                            J$.X1(4057, options = J$.W(4049, 'options', J$.C(104, J$.R(4033, 'options', options, 0)) ? J$._() : J$.T(4041, {}, 11, false), options, 0));
                            J$.X1(4089, J$.M(4081, J$.R(4065, 'EventEmitter', EventEmitter, 1), 'call', 0)(J$.R(4073, 'this', this, 0)));
                            if (J$.X1(21593, J$.C(112, J$.U(122, '!', J$.M(4113, J$.R(4097, 'Array', Array, 2), 'isArray', 0)(J$.R(4105, 'seedlist', seedlist, 0))))))
                                throw J$.X1(4153, J$.Th(4145, J$.F(4137, J$.R(4121, 'MongoError', MongoError, 1), 1)(J$.T(4129, 'seedlist must be an array', 21, false))));
                            if (J$.X1(21601, J$.C(120, J$.B(130, '==', J$.G(4169, J$.R(4161, 'seedlist', seedlist, 0), 'length', 0), J$.T(4177, 0, 22, false), 0))))
                                throw J$.X1(4217, J$.Th(4209, J$.F(4201, J$.R(4185, 'MongoError', MongoError, 1), 1)(J$.T(4193, 'seedlist must contain at least one entry', 21, false))));
                            J$.X1(4361, J$.M(4353, J$.R(4225, 'seedlist', seedlist, 0), 'forEach', 0)(J$.T(4345, function (e) {
                                jalangiLabel2074:
                                    while (true) {
                                        try {
                                            J$.Fe(4321, arguments.callee, this, arguments);
                                            arguments = J$.N(4329, 'arguments', arguments, 4);
                                            e = J$.N(4337, 'e', e, 4);
                                            if (J$.X1(21609, J$.C(136, J$.C(128, J$.B(146, '!=', J$.U(138, 'typeof', J$.G(4241, J$.R(4233, 'e', e, 0), 'host', 0)), J$.T(4249, 'string', 21, false), 0)) ? J$._() : J$.B(162, '!=', J$.U(154, 'typeof', J$.G(4265, J$.R(4257, 'e', e, 0), 'port', 0)), J$.T(4273, 'number', 21, false), 0))))
                                                throw J$.X1(4313, J$.Th(4305, J$.F(4297, J$.R(4281, 'MongoError', MongoError, 1), 1)(J$.T(4289, 'seedlist entry must contain a host and port', 21, false))));
                                        } catch (J$e) {
                                            J$.Ex(21617, J$e);
                                        } finally {
                                            if (J$.Fr(21625))
                                                continue jalangiLabel2074;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 4321)));
                            J$.X1(4425, bsonInstance = J$.W(4417, 'bsonInstance', J$.X1(21633, J$.C(144, J$.B(170, '==', J$.R(4369, 'bsonInstance', bsonInstance, 1), J$.T(4377, null, 25, false), 0))) ? J$.F(4401, J$.R(4385, 'BSON', BSON, 1), 1)(J$.R(4393, 'bsonTypes', bsonTypes, 1)) : J$.R(4409, 'bsonInstance', bsonInstance, 1), bsonInstance, 2));
                            var bson = J$.X1(4481, J$.W(4473, 'bson', J$.X1(21641, J$.C(152, J$.G(4441, J$.R(4433, 'options', options, 0), 'bson', 0))) ? J$.G(4457, J$.R(4449, 'options', options, 0), 'bson', 0) : J$.R(4465, 'bsonInstance', bsonInstance, 1), bson, 1));
                            J$.X1(4513, J$.P(4505, J$.R(4489, 'options', options, 0), 'bson', J$.R(4497, 'bson', bson, 0), 0));
                            J$.X1(4889, J$.P(4881, J$.R(4521, 'this', this, 0), 's', J$.T(4873, {
                                seedlist: J$.R(4529, 'seedlist', seedlist, 0),
                                options: J$.R(4537, 'options', options, 0),
                                logger: J$.F(4569, J$.R(4545, 'Logger', Logger, 1), 0)(J$.T(4553, 'Mongos', 21, false), J$.R(4561, 'options', options, 0)),
                                reconnectTries: J$.C(160, J$.G(4585, J$.R(4577, 'options', options, 0), 'reconnectTries', 0)) ? J$._() : J$.T(4593, 30, 22, false),
                                haInterval: J$.C(168, J$.G(4609, J$.R(4601, 'options', options, 0), 'haInterval', 0)) ? J$._() : J$.T(4617, 5000, 22, false),
                                localThresholdMS: J$.C(176, J$.G(4633, J$.R(4625, 'options', options, 0), 'localThresholdMS', 0)) ? J$._() : J$.T(4641, 15, 22, false),
                                fullsetup: J$.T(4649, false, 23, false),
                                Cursor: J$.C(184, J$.G(4665, J$.R(4657, 'options', options, 0), 'cursorFactory', 0)) ? J$._() : J$.R(4673, 'BasicCursor', BasicCursor, 1),
                                credentials: J$.T(4681, [], 10, false),
                                bsonInstance: J$.R(4689, 'bsonInstance', bsonInstance, 1),
                                bson: J$.R(4697, 'bson', bson, 0),
                                pings: J$.T(4705, {}, 11, false),
                                state: J$.R(4713, 'DISCONNECTED', DISCONNECTED, 1),
                                emitError: J$.X1(21649, J$.C(192, J$.B(186, '==', J$.U(178, 'typeof', J$.G(4729, J$.R(4721, 'options', options, 0), 'emitError', 0)), J$.T(4737, 'boolean', 21, false), 0))) ? J$.G(4753, J$.R(4745, 'options', options, 0), 'emitError', 0) : J$.T(4761, false, 23, false),
                                readPreferenceStrategies: J$.T(4769, {}, 11, false),
                                authProviders: J$.T(4777, {}, 11, false),
                                id: J$.B(210, '-', mongosId = J$.W(4801, 'mongosId', J$.B(202, '+', J$.U(194, '+', J$.R(4793, 'mongosId', mongosId, 1)), J$.T(4785, 1, 22, false), 0), mongosId, 2), J$.T(4809, 1, 22, false), 0),
                                authInProgress: J$.T(4817, false, 23, false),
                                authInProgressServers: J$.T(4825, [], 10, false),
                                retriesLeft: J$.C(200, J$.G(4841, J$.R(4833, 'options', options, 0), 'reconnectTries', 0)) ? J$._() : J$.T(4849, 30, 22, false),
                                disconnectHandler: J$.G(4865, J$.R(4857, 'options', options, 0), 'disconnectHandler', 0)
                            }, 11, false), 0));
                            J$.X1(4937, J$.P(4929, J$.R(4897, 'options', options, 0), 'connectionTimeout', J$.C(208, J$.G(4913, J$.R(4905, 'options', options, 0), 'connectionTimeout', 0)) ? J$._() : J$.T(4921, 1000, 22, false), 0));
                            J$.X1(5033, J$.P(5025, J$.G(4953, J$.R(4945, 'this', this, 0), 's', 0), 'mongosState', J$.F(5017, J$.R(4961, 'State', State, 1), 1)(J$.G(4985, J$.G(4977, J$.R(4969, 'this', this, 0), 's', 0), 'readPreferenceStrategies', 0), J$.G(5009, J$.G(5001, J$.R(4993, 'this', this, 0), 's', 0), 'localThresholdMS', 0)), 0));
                            J$.X1(5249, J$.M(5241, J$.R(5041, 'Object', Object, 2), 'defineProperty', 0)(J$.R(5049, 'this', this, 0), J$.T(5057, 'bson', 21, false), J$.T(5233, {
                                enumerable: J$.T(5065, true, 23, false),
                                get: J$.T(5225, function () {
                                    jalangiLabel2075:
                                        while (true) {
                                            try {
                                                J$.Fe(5201, arguments.callee, this, arguments);
                                                arguments = J$.N(5209, 'arguments', arguments, 4);
                                                J$.N(5217, 'servers', servers, 0);
                                                var servers = J$.X1(5113, J$.W(5105, 'servers', J$.M(5097, J$.G(5089, J$.G(5081, J$.R(5073, 'self', self, 0), 's', 0), 'mongosState', 0), 'getAll', 0)(), servers, 1));
                                                return J$.X1(5193, J$.Rt(5185, J$.X1(21657, J$.C(216, J$.B(218, '>', J$.G(5129, J$.R(5121, 'servers', servers, 0), 'length', 0), J$.T(5137, 0, 22, false), 0))) ? J$.G(5169, J$.G(5161, J$.R(5145, 'servers', servers, 0), J$.T(5153, 0, 22, false), 4), 'bson', 0) : J$.T(5177, null, 25, false)));
                                            } catch (J$e) {
                                                J$.Ex(21665, J$e);
                                            } finally {
                                                if (J$.Fr(21673))
                                                    continue jalangiLabel2075;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 5201)
                            }, 11, false)));
                            J$.X1(5369, J$.M(5361, J$.R(5257, 'Object', Object, 2), 'defineProperty', 0)(J$.R(5265, 'this', this, 0), J$.T(5273, 'id', 21, false), J$.T(5353, {
                                enumerable: J$.T(5281, true, 23, false),
                                get: J$.T(5345, function () {
                                    jalangiLabel2076:
                                        while (true) {
                                            try {
                                                J$.Fe(5329, arguments.callee, this, arguments);
                                                arguments = J$.N(5337, 'arguments', arguments, 4);
                                                return J$.X1(5321, J$.Rt(5313, J$.G(5305, J$.G(5297, J$.R(5289, 'self', self, 0), 's', 0), 'id', 0)));
                                            } catch (J$e) {
                                                J$.Ex(21681, J$e);
                                            } finally {
                                                if (J$.Fr(21689))
                                                    continue jalangiLabel2076;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 5329)
                            }, 11, false)));
                            J$.X1(5473, J$.M(5465, J$.R(5377, 'Object', Object, 2), 'defineProperty', 0)(J$.R(5385, 'this', this, 0), J$.T(5393, 'type', 21, false), J$.T(5457, {
                                enumerable: J$.T(5401, true, 23, false),
                                get: J$.T(5449, function () {
                                    jalangiLabel2077:
                                        while (true) {
                                            try {
                                                J$.Fe(5433, arguments.callee, this, arguments);
                                                arguments = J$.N(5441, 'arguments', arguments, 4);
                                                return J$.X1(5425, J$.Rt(5417, J$.T(5409, 'mongos', 21, false)));
                                            } catch (J$e) {
                                                J$.Ex(21697, J$e);
                                            } finally {
                                                if (J$.Fr(21705))
                                                    continue jalangiLabel2077;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 5433)
                            }, 11, false)));
                            J$.X1(5593, J$.M(5585, J$.R(5481, 'Object', Object, 2), 'defineProperty', 0)(J$.R(5489, 'this', this, 0), J$.T(5497, 'haInterval', 21, false), J$.T(5577, {
                                enumerable: J$.T(5505, true, 23, false),
                                get: J$.T(5569, function () {
                                    jalangiLabel2078:
                                        while (true) {
                                            try {
                                                J$.Fe(5553, arguments.callee, this, arguments);
                                                arguments = J$.N(5561, 'arguments', arguments, 4);
                                                return J$.X1(5545, J$.Rt(5537, J$.G(5529, J$.G(5521, J$.R(5513, 'self', self, 0), 's', 0), 'haInterval', 0)));
                                            } catch (J$e) {
                                                J$.Ex(21713, J$e);
                                            } finally {
                                                if (J$.Fr(21721))
                                                    continue jalangiLabel2078;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 5553)
                            }, 11, false)));
                            J$.X1(5713, J$.M(5705, J$.R(5601, 'Object', Object, 2), 'defineProperty', 0)(J$.R(5609, 'this', this, 0), J$.T(5617, 'state', 21, false), J$.T(5697, {
                                enumerable: J$.T(5625, true, 23, false),
                                get: J$.T(5689, function () {
                                    jalangiLabel2079:
                                        while (true) {
                                            try {
                                                J$.Fe(5673, arguments.callee, this, arguments);
                                                arguments = J$.N(5681, 'arguments', arguments, 4);
                                                return J$.X1(5665, J$.Rt(5657, J$.G(5649, J$.G(5641, J$.R(5633, 'self', self, 0), 's', 0), 'mongosState', 0)));
                                            } catch (J$e) {
                                                J$.Ex(21729, J$e);
                                            } finally {
                                                if (J$.Fr(21737))
                                                    continue jalangiLabel2079;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 5673)
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(21745, J$e);
                        } finally {
                            if (J$.Fr(21753))
                                continue jalangiLabel2080;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5721), Mongos, 3));
            J$.X1(5825, J$.F(5817, J$.R(5793, 'inherits', inherits, 1), 0)(J$.R(5801, 'Mongos', Mongos, 1), J$.R(5809, 'EventEmitter', EventEmitter, 1)));
            J$.X1(5993, J$.P(5985, J$.G(5841, J$.R(5833, 'Mongos', Mongos, 1), 'prototype', 0), 'parserType', J$.T(5977, function () {
                jalangiLabel2081:
                    while (true) {
                        try {
                            J$.Fe(5961, arguments.callee, this, arguments);
                            arguments = J$.N(5969, 'arguments', arguments, 4);
                            if (J$.X1(21761, J$.C(224, J$.B(234, '!=', J$.M(5897, J$.M(5881, J$.G(5873, J$.G(5865, J$.G(5857, J$.R(5849, 'this', this, 0), 's', 0), 'bson', 0), 'serialize', 0), 'toString', 0)(), 'indexOf', 0)(J$.T(5889, '[native code]', 21, false)), J$.U(226, '-', J$.T(5905, 1, 22, false)), 0))))
                                return J$.X1(5929, J$.Rt(5921, J$.T(5913, 'c++', 21, false)));
                            return J$.X1(5953, J$.Rt(5945, J$.T(5937, 'js', 21, false)));
                        } catch (J$e) {
                            J$.Ex(21769, J$e);
                        } finally {
                            if (J$.Fr(21777))
                                continue jalangiLabel2081;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5961), 0));
            J$.X1(6361, J$.P(6353, J$.G(6009, J$.R(6001, 'Mongos', Mongos, 1), 'prototype', 0), 'setBSONParserType', J$.T(6345, function (type) {
                jalangiLabel2082:
                    while (true) {
                        try {
                            J$.Fe(6313, arguments.callee, this, arguments);
                            arguments = J$.N(6321, 'arguments', arguments, 4);
                            type = J$.N(6329, 'type', type, 4);
                            J$.N(6337, 'nBSON', nBSON, 0);
                            var nBSON = J$.X1(6033, J$.W(6025, 'nBSON', J$.T(6017, null, 25, false), nBSON, 1));
                            if (J$.X1(21793, J$.C(240, J$.B(242, '==', J$.R(6041, 'type', type, 0), J$.T(6049, 'c++', 21, false), 0)))) {
                                J$.X1(6105, nBSON = J$.W(6097, 'nBSON', J$.G(6089, J$.M(6081, J$.F(6073, J$.R(6057, 'require', require, 2), 0)(J$.T(6065, 'bson', 21, false)), 'native', 0)(), 'BSON', 0), nBSON, 0));
                            } else if (J$.X1(21785, J$.C(232, J$.B(250, '==', J$.R(6113, 'type', type, 0), J$.T(6121, 'js', 21, false), 0)))) {
                                J$.X1(6177, nBSON = J$.W(6169, 'nBSON', J$.G(6161, J$.M(6153, J$.F(6145, J$.R(6129, 'require', require, 2), 0)(J$.T(6137, 'bson', 21, false)), 'pure', 0)(), 'BSON', 0), nBSON, 0));
                            } else {
                                throw J$.X1(6241, J$.Th(6233, J$.F(6225, J$.R(6185, 'MongoError', MongoError, 1), 1)(J$.F(6217, J$.R(6193, 'f', f, 1), 0)(J$.T(6201, '% parser not supported', 21, false), J$.R(6209, 'type', type, 0)))));
                            }
                            J$.X1(6305, J$.P(6297, J$.G(6265, J$.G(6257, J$.R(6249, 'this', this, 0), 's', 0), 'options', 0), 'bson', J$.F(6289, J$.R(6273, 'nBSON', nBSON, 0), 1)(J$.R(6281, 'bsonTypes', bsonTypes, 1)), 0));
                        } catch (J$e) {
                            J$.Ex(21801, J$e);
                        } finally {
                            if (J$.Fr(21809))
                                continue jalangiLabel2082;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 6313), 0));
            J$.X1(6569, J$.P(6561, J$.G(6377, J$.R(6369, 'Mongos', Mongos, 1), 'prototype', 0), 'lastIsMaster', J$.T(6553, function () {
                jalangiLabel2083:
                    while (true) {
                        try {
                            J$.Fe(6529, arguments.callee, this, arguments);
                            arguments = J$.N(6537, 'arguments', arguments, 4);
                            J$.N(6545, 'connectedServers', connectedServers, 0);
                            var connectedServers = J$.X1(6425, J$.W(6417, 'connectedServers', J$.M(6409, J$.G(6401, J$.G(6393, J$.R(6385, 'this', this, 0), 's', 0), 'mongosState', 0), 'connectedServers', 0)(), connectedServers, 1));
                            if (J$.X1(21817, J$.C(248, J$.B(258, '>', J$.G(6441, J$.R(6433, 'connectedServers', connectedServers, 0), 'length', 0), J$.T(6449, 0, 22, false), 0))))
                                return J$.X1(6497, J$.Rt(6489, J$.M(6481, J$.G(6473, J$.R(6457, 'connectedServers', connectedServers, 0), J$.T(6465, 0, 22, false), 4), 'lastIsMaster', 0)()));
                            return J$.X1(6521, J$.Rt(6513, J$.T(6505, null, 25, false)));
                        } catch (J$e) {
                            J$.Ex(21825, J$e);
                        } finally {
                            if (J$.Fr(21833))
                                continue jalangiLabel2083;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 6529), 0));
            J$.X1(8145, J$.P(8137, J$.G(6585, J$.R(6577, 'Mongos', Mongos, 1), 'prototype', 0), 'connect', J$.T(8129, function (_options) {
                jalangiLabel2086:
                    while (true) {
                        try {
                            J$.Fe(8073, arguments.callee, this, arguments);
                            arguments = J$.N(8081, 'arguments', arguments, 4);
                            _options = J$.N(8089, '_options', _options, 4);
                            J$.N(8097, 'self', self, 0);
                            J$.N(8105, 'name', name, 0);
                            J$.N(8113, 'servers', servers, 0);
                            J$.N(8121, 'server', server, 0);
                            var self = J$.X1(6609, J$.W(6601, 'self', J$.R(6593, 'this', this, 0), self, 1));
                            J$.X1(6697, J$.F(6689, J$.R(6617, 'setTimeout', setTimeout, 2), 0)(J$.F(6657, J$.R(6625, 'mongosInquirer', mongosInquirer, 1), 0)(J$.R(6633, 'self', self, 0), J$.G(6649, J$.R(6641, 'self', self, 0), 's', 0)), J$.G(6681, J$.G(6673, J$.R(6665, 'self', self, 0), 's', 0), 'haInterval', 0)));
                            if (J$.X1(21841, J$.C(256, J$.R(6705, '_options', _options, 0))))
                                for (J$._tm_p in J$.H(6793, J$.R(6713, '_options', _options, 0))) {
                                var name = J$.X1(6809, J$.W(6801, 'name', J$._tm_p, name, 1));
                                {
                                    J$.X1(6785, J$.P(6777, J$.G(6737, J$.G(6729, J$.R(6721, 'self', self, 0), 's', 0), 'options', 0), J$.R(6745, 'name', name, 0), J$.G(6769, J$.R(6753, '_options', _options, 0), J$.R(6761, 'name', name, 0), 4), 2));
                                }
                            }
                            J$.X1(7249, J$.M(7241, J$.G(6833, J$.G(6825, J$.R(6817, 'self', self, 0), 's', 0), 'seedlist', 0), 'forEach', 0)(J$.T(7233, function (e) {
                                jalangiLabel2084:
                                    while (true) {
                                        try {
                                            J$.Fe(7201, arguments.callee, this, arguments);
                                            arguments = J$.N(7209, 'arguments', arguments, 4);
                                            e = J$.N(7217, 'e', e, 4);
                                            J$.N(7225, 'opts', opts, 0);
                                            var opts = J$.X1(6889, J$.W(6881, 'opts', J$.F(6873, J$.R(6841, 'cloneOptions', cloneOptions, 1), 0)(J$.G(6865, J$.G(6857, J$.R(6849, 'self', self, 0), 's', 0), 'options', 0)), opts, 1));
                                            J$.X1(6929, J$.P(6921, J$.R(6897, 'opts', opts, 0), 'host', J$.G(6913, J$.R(6905, 'e', e, 0), 'host', 0), 0));
                                            J$.X1(6969, J$.P(6961, J$.R(6937, 'opts', opts, 0), 'port', J$.G(6953, J$.R(6945, 'e', e, 0), 'port', 0), 0));
                                            J$.X1(7001, J$.P(6993, J$.R(6977, 'opts', opts, 0), 'reconnect', J$.T(6985, false, 23, false), 0));
                                            J$.X1(7049, J$.P(7041, J$.R(7009, 'opts', opts, 0), 'readPreferenceStrategies', J$.G(7033, J$.G(7025, J$.R(7017, 'self', self, 0), 's', 0), 'readPreferenceStrategies', 0), 0));
                                            J$.X1(7097, J$.P(7089, J$.R(7057, 'opts', opts, 0), 'authProviders', J$.G(7081, J$.G(7073, J$.R(7065, 'self', self, 0), 's', 0), 'authProviders', 0), 0));
                                            J$.X1(7129, J$.P(7121, J$.R(7105, 'opts', opts, 0), 'emitError', J$.T(7113, true, 23, false), 0));
                                            J$.X1(7193, J$.M(7185, J$.G(7153, J$.G(7145, J$.R(7137, 'self', self, 0), 's', 0), 'mongosState', 0), 'disconnected', 0)(J$.F(7177, J$.R(7161, 'Server', Server, 1), 1)(J$.R(7169, 'opts', opts, 0))));
                                        } catch (J$e) {
                                            J$.Ex(21849, J$e);
                                        } finally {
                                            if (J$.Fr(21857))
                                                continue jalangiLabel2084;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 7201)));
                            var servers = J$.X1(7297, J$.W(7289, 'servers', J$.M(7281, J$.G(7273, J$.G(7265, J$.R(7257, 'self', self, 0), 's', 0), 'mongosState', 0), 'disconnectedServers', 0)(), servers, 1));
                            J$.X1(7337, J$.P(7329, J$.G(7313, J$.R(7305, 'this', this, 0), 's', 0), 'state', J$.R(7321, 'CONNECTING', CONNECTING, 1), 0));
                            while (J$.X1(21889, J$.C(272, J$.B(266, '>', J$.G(7353, J$.R(7345, 'servers', servers, 0), 'length', 0), J$.T(7361, 0, 22, false), 0)))) {
                                var server = J$.X1(7393, J$.W(7385, 'server', J$.M(7377, J$.R(7369, 'servers', servers, 0), 'shift', 0)(), server, 1));
                                J$.X1(7529, J$.M(7521, J$.T(7449, [
                                    J$.T(7401, 'error', 21, false),
                                    J$.T(7409, 'close', 21, false),
                                    J$.T(7417, 'timeout', 21, false),
                                    J$.T(7425, 'connect', 21, false),
                                    J$.T(7433, 'message', 21, false),
                                    J$.T(7441, 'parseError', 21, false)
                                ], 10, false), 'forEach', 0)(J$.T(7513, function (e) {
                                    jalangiLabel2085:
                                        while (true) {
                                            try {
                                                J$.Fe(7489, arguments.callee, this, arguments);
                                                arguments = J$.N(7497, 'arguments', arguments, 4);
                                                e = J$.N(7505, 'e', e, 4);
                                                J$.X1(7481, J$.M(7473, J$.R(7457, 'server', server, 0), 'removeAllListeners', 0)(J$.R(7465, 'e', e, 0)));
                                            } catch (J$e) {
                                                J$.Ex(21865, J$e);
                                            } finally {
                                                if (J$.Fr(21873))
                                                    continue jalangiLabel2085;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 7489)));
                                J$.X1(7609, J$.M(7601, J$.R(7537, 'server', server, 0), 'once', 0)(J$.T(7545, 'error', 21, false), J$.F(7593, J$.R(7553, 'errorHandlerTemp', errorHandlerTemp, 1), 0)(J$.R(7561, 'self', self, 0), J$.G(7577, J$.R(7569, 'self', self, 0), 's', 0), J$.R(7585, 'server', server, 0))));
                                J$.X1(7689, J$.M(7681, J$.R(7617, 'server', server, 0), 'once', 0)(J$.T(7625, 'close', 21, false), J$.F(7673, J$.R(7633, 'errorHandlerTemp', errorHandlerTemp, 1), 0)(J$.R(7641, 'self', self, 0), J$.G(7657, J$.R(7649, 'self', self, 0), 's', 0), J$.R(7665, 'server', server, 0))));
                                J$.X1(7769, J$.M(7761, J$.R(7697, 'server', server, 0), 'once', 0)(J$.T(7705, 'timeout', 21, false), J$.F(7753, J$.R(7713, 'errorHandlerTemp', errorHandlerTemp, 1), 0)(J$.R(7721, 'self', self, 0), J$.G(7737, J$.R(7729, 'self', self, 0), 's', 0), J$.R(7745, 'server', server, 0))));
                                J$.X1(7849, J$.M(7841, J$.R(7777, 'server', server, 0), 'once', 0)(J$.T(7785, 'parseError', 21, false), J$.F(7833, J$.R(7793, 'errorHandlerTemp', errorHandlerTemp, 1), 0)(J$.R(7801, 'self', self, 0), J$.G(7817, J$.R(7809, 'self', self, 0), 's', 0), J$.R(7825, 'server', server, 0))));
                                J$.X1(7929, J$.M(7921, J$.R(7857, 'server', server, 0), 'once', 0)(J$.T(7865, 'connect', 21, false), J$.F(7913, J$.R(7873, 'connectHandler', connectHandler, 1), 0)(J$.R(7881, 'self', self, 0), J$.G(7897, J$.R(7889, 'self', self, 0), 's', 0), J$.T(7905, 'connect', 21, false))));
                                if (J$.X1(21881, J$.C(264, J$.M(7961, J$.G(7953, J$.G(7945, J$.R(7937, 'self', self, 0), 's', 0), 'logger', 0), 'isInfo', 0)())))
                                    J$.X1(8041, J$.M(8033, J$.G(7985, J$.G(7977, J$.R(7969, 'self', self, 0), 's', 0), 'logger', 0), 'info', 0)(J$.F(8025, J$.R(7993, 'f', f, 1), 0)(J$.T(8001, 'connecting to server %s', 21, false), J$.G(8017, J$.R(8009, 'server', server, 0), 'name', 0))));
                                J$.X1(8065, J$.M(8057, J$.R(8049, 'server', server, 0), 'connect', 0)());
                            }
                        } catch (J$e) {
                            J$.Ex(21897, J$e);
                        } finally {
                            if (J$.Fr(21905))
                                continue jalangiLabel2086;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 8073), 0));
            J$.X1(8377, J$.P(8369, J$.G(8161, J$.R(8153, 'Mongos', Mongos, 1), 'prototype', 0), 'destroy', J$.T(8361, function (emitClose) {
                jalangiLabel2087:
                    while (true) {
                        try {
                            J$.Fe(8337, arguments.callee, this, arguments);
                            arguments = J$.N(8345, 'arguments', arguments, 4);
                            emitClose = J$.N(8353, 'emitClose', emitClose, 4);
                            J$.X1(8201, J$.P(8193, J$.G(8177, J$.R(8169, 'this', this, 0), 's', 0), 'state', J$.R(8185, 'DESTROYED', DESTROYED, 1), 0));
                            if (J$.X1(21913, J$.C(288, J$.C(280, J$.R(8209, 'emitClose', emitClose, 0)) ? J$.B(274, '>', J$.G(8241, J$.M(8233, J$.R(8217, 'self', self, 2), 'listeners', 0)(J$.T(8225, 'close', 21, false)), 'length', 0), J$.T(8249, 0, 22, false), 0) : J$._())))
                                J$.X1(8289, J$.M(8281, J$.R(8257, 'self', self, 2), 'emit', 0)(J$.T(8265, 'close', 21, false), J$.R(8273, 'self', self, 2)));
                            J$.X1(8329, J$.M(8321, J$.G(8313, J$.G(8305, J$.R(8297, 'this', this, 0), 's', 0), 'mongosState', 0), 'destroy', 0)());
                        } catch (J$e) {
                            J$.Ex(21921, J$e);
                        } finally {
                            if (J$.Fr(21929))
                                continue jalangiLabel2087;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 8337), 0));
            J$.X1(8481, J$.P(8473, J$.G(8393, J$.R(8385, 'Mongos', Mongos, 1), 'prototype', 0), 'isConnected', J$.T(8465, function () {
                jalangiLabel2088:
                    while (true) {
                        try {
                            J$.Fe(8449, arguments.callee, this, arguments);
                            arguments = J$.N(8457, 'arguments', arguments, 4);
                            return J$.X1(8441, J$.Rt(8433, J$.M(8425, J$.G(8417, J$.G(8409, J$.R(8401, 'this', this, 0), 's', 0), 'mongosState', 0), 'isConnected', 0)()));
                        } catch (J$e) {
                            J$.Ex(21937, J$e);
                        } finally {
                            if (J$.Fr(21945))
                                continue jalangiLabel2088;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 8449), 0));
            J$.X1(8585, J$.P(8577, J$.G(8497, J$.R(8489, 'Mongos', Mongos, 1), 'prototype', 0), 'isDestroyed', J$.T(8569, function () {
                jalangiLabel2089:
                    while (true) {
                        try {
                            J$.Fe(8553, arguments.callee, this, arguments);
                            arguments = J$.N(8561, 'arguments', arguments, 4);
                            return J$.X1(8545, J$.Rt(8537, J$.B(282, '==', J$.G(8521, J$.G(8513, J$.R(8505, 'this', this, 0), 's', 0), 'state', 0), J$.R(8529, 'DESTROYED', DESTROYED, 1), 0)));
                        } catch (J$e) {
                            J$.Ex(21953, J$e);
                        } finally {
                            if (J$.Fr(21961))
                                continue jalangiLabel2089;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 8553), 0));
            J$.X1(9097, J$.P(9089, J$.G(8601, J$.R(8593, 'Mongos', Mongos, 1), 'prototype', 0), 'insert', J$.T(9081, function (ns, ops, options, callback) {
                jalangiLabel2090:
                    while (true) {
                        try {
                            J$.Fe(9033, arguments.callee, this, arguments);
                            arguments = J$.N(9041, 'arguments', arguments, 4);
                            ns = J$.N(9049, 'ns', ns, 4);
                            ops = J$.N(9057, 'ops', ops, 4);
                            options = J$.N(9065, 'options', options, 4);
                            callback = J$.N(9073, 'callback', callback, 4);
                            if (J$.X1(21969, J$.C(296, J$.B(298, '==', J$.U(290, 'typeof', J$.R(8609, 'options', options, 0)), J$.T(8617, 'function', 21, false), 0))))
                                J$.X1(8665, (J$.X1(8657, callback = J$.W(8633, 'callback', J$.R(8625, 'options', options, 0), callback, 0)), options = J$.W(8649, 'options', J$.T(8641, {}, 11, false), options, 0)));
                            if (J$.X1(21977, J$.C(304, J$.B(306, '==', J$.G(8689, J$.G(8681, J$.R(8673, 'this', this, 0), 's', 0), 'state', 0), J$.R(8697, 'DESTROYED', DESTROYED, 1), 0))))
                                return J$.X1(8769, J$.Rt(8761, J$.F(8753, J$.R(8705, 'callback', callback, 0), 0)(J$.F(8745, J$.R(8713, 'MongoError', MongoError, 1), 1)(J$.F(8737, J$.R(8721, 'f', f, 1), 0)(J$.T(8729, 'topology was destroyed', 21, false))))));
                            if (J$.X1(21985, J$.C(320, J$.C(312, J$.U(314, '!', J$.M(8785, J$.R(8777, 'this', this, 0), 'isConnected', 0)())) ? J$.B(322, '!=', J$.G(8809, J$.G(8801, J$.R(8793, 'this', this, 0), 's', 0), 'disconnectHandler', 0), J$.T(8817, null, 25, false), 0) : J$._()))) {
                                J$.X1(8857, callback = J$.W(8849, 'callback', J$.F(8841, J$.R(8825, 'bindToCurrentDomain', bindToCurrentDomain, 1), 0)(J$.R(8833, 'callback', callback, 0)), callback, 0));
                                return J$.X1(8945, J$.Rt(8937, J$.M(8929, J$.G(8881, J$.G(8873, J$.R(8865, 'this', this, 0), 's', 0), 'disconnectHandler', 0), 'add', 0)(J$.T(8889, 'insert', 21, false), J$.R(8897, 'ns', ns, 0), J$.R(8905, 'ops', ops, 0), J$.R(8913, 'options', options, 0), J$.R(8921, 'callback', callback, 0))));
                            }
                            J$.X1(9025, J$.F(9017, J$.R(8953, 'executeWriteOperation', executeWriteOperation, 1), 0)(J$.G(8969, J$.R(8961, 'this', this, 0), 's', 0), J$.T(8977, 'insert', 21, false), J$.R(8985, 'ns', ns, 0), J$.R(8993, 'ops', ops, 0), J$.R(9001, 'options', options, 0), J$.R(9009, 'callback', callback, 0)));
                        } catch (J$e) {
                            J$.Ex(21993, J$e);
                        } finally {
                            if (J$.Fr(22001))
                                continue jalangiLabel2090;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 9033), 0));
            J$.X1(9609, J$.P(9601, J$.G(9113, J$.R(9105, 'Mongos', Mongos, 1), 'prototype', 0), 'update', J$.T(9593, function (ns, ops, options, callback) {
                jalangiLabel2091:
                    while (true) {
                        try {
                            J$.Fe(9545, arguments.callee, this, arguments);
                            arguments = J$.N(9553, 'arguments', arguments, 4);
                            ns = J$.N(9561, 'ns', ns, 4);
                            ops = J$.N(9569, 'ops', ops, 4);
                            options = J$.N(9577, 'options', options, 4);
                            callback = J$.N(9585, 'callback', callback, 4);
                            if (J$.X1(22009, J$.C(328, J$.B(338, '==', J$.U(330, 'typeof', J$.R(9121, 'options', options, 0)), J$.T(9129, 'function', 21, false), 0))))
                                J$.X1(9177, (J$.X1(9169, callback = J$.W(9145, 'callback', J$.R(9137, 'options', options, 0), callback, 0)), options = J$.W(9161, 'options', J$.T(9153, {}, 11, false), options, 0)));
                            if (J$.X1(22017, J$.C(336, J$.B(346, '==', J$.G(9201, J$.G(9193, J$.R(9185, 'this', this, 0), 's', 0), 'state', 0), J$.R(9209, 'DESTROYED', DESTROYED, 1), 0))))
                                return J$.X1(9281, J$.Rt(9273, J$.F(9265, J$.R(9217, 'callback', callback, 0), 0)(J$.F(9257, J$.R(9225, 'MongoError', MongoError, 1), 1)(J$.F(9249, J$.R(9233, 'f', f, 1), 0)(J$.T(9241, 'topology was destroyed', 21, false))))));
                            if (J$.X1(22025, J$.C(352, J$.C(344, J$.U(354, '!', J$.M(9297, J$.R(9289, 'this', this, 0), 'isConnected', 0)())) ? J$.B(362, '!=', J$.G(9321, J$.G(9313, J$.R(9305, 'this', this, 0), 's', 0), 'disconnectHandler', 0), J$.T(9329, null, 25, false), 0) : J$._()))) {
                                J$.X1(9369, callback = J$.W(9361, 'callback', J$.F(9353, J$.R(9337, 'bindToCurrentDomain', bindToCurrentDomain, 1), 0)(J$.R(9345, 'callback', callback, 0)), callback, 0));
                                return J$.X1(9457, J$.Rt(9449, J$.M(9441, J$.G(9393, J$.G(9385, J$.R(9377, 'this', this, 0), 's', 0), 'disconnectHandler', 0), 'add', 0)(J$.T(9401, 'update', 21, false), J$.R(9409, 'ns', ns, 0), J$.R(9417, 'ops', ops, 0), J$.R(9425, 'options', options, 0), J$.R(9433, 'callback', callback, 0))));
                            }
                            J$.X1(9537, J$.F(9529, J$.R(9465, 'executeWriteOperation', executeWriteOperation, 1), 0)(J$.G(9481, J$.R(9473, 'this', this, 0), 's', 0), J$.T(9489, 'update', 21, false), J$.R(9497, 'ns', ns, 0), J$.R(9505, 'ops', ops, 0), J$.R(9513, 'options', options, 0), J$.R(9521, 'callback', callback, 0)));
                        } catch (J$e) {
                            J$.Ex(22033, J$e);
                        } finally {
                            if (J$.Fr(22041))
                                continue jalangiLabel2091;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 9545), 0));
            J$.X1(10121, J$.P(10113, J$.G(9625, J$.R(9617, 'Mongos', Mongos, 1), 'prototype', 0), 'remove', J$.T(10105, function (ns, ops, options, callback) {
                jalangiLabel2092:
                    while (true) {
                        try {
                            J$.Fe(10057, arguments.callee, this, arguments);
                            arguments = J$.N(10065, 'arguments', arguments, 4);
                            ns = J$.N(10073, 'ns', ns, 4);
                            ops = J$.N(10081, 'ops', ops, 4);
                            options = J$.N(10089, 'options', options, 4);
                            callback = J$.N(10097, 'callback', callback, 4);
                            if (J$.X1(22049, J$.C(360, J$.B(378, '==', J$.U(370, 'typeof', J$.R(9633, 'options', options, 0)), J$.T(9641, 'function', 21, false), 0))))
                                J$.X1(9689, (J$.X1(9681, callback = J$.W(9657, 'callback', J$.R(9649, 'options', options, 0), callback, 0)), options = J$.W(9673, 'options', J$.T(9665, {}, 11, false), options, 0)));
                            if (J$.X1(22057, J$.C(368, J$.B(386, '==', J$.G(9713, J$.G(9705, J$.R(9697, 'this', this, 0), 's', 0), 'state', 0), J$.R(9721, 'DESTROYED', DESTROYED, 1), 0))))
                                return J$.X1(9793, J$.Rt(9785, J$.F(9777, J$.R(9729, 'callback', callback, 0), 0)(J$.F(9769, J$.R(9737, 'MongoError', MongoError, 1), 1)(J$.F(9761, J$.R(9745, 'f', f, 1), 0)(J$.T(9753, 'topology was destroyed', 21, false))))));
                            if (J$.X1(22065, J$.C(384, J$.C(376, J$.U(394, '!', J$.M(9809, J$.R(9801, 'this', this, 0), 'isConnected', 0)())) ? J$.B(402, '!=', J$.G(9833, J$.G(9825, J$.R(9817, 'this', this, 0), 's', 0), 'disconnectHandler', 0), J$.T(9841, null, 25, false), 0) : J$._()))) {
                                J$.X1(9881, callback = J$.W(9873, 'callback', J$.F(9865, J$.R(9849, 'bindToCurrentDomain', bindToCurrentDomain, 1), 0)(J$.R(9857, 'callback', callback, 0)), callback, 0));
                                return J$.X1(9969, J$.Rt(9961, J$.M(9953, J$.G(9905, J$.G(9897, J$.R(9889, 'this', this, 0), 's', 0), 'disconnectHandler', 0), 'add', 0)(J$.T(9913, 'remove', 21, false), J$.R(9921, 'ns', ns, 0), J$.R(9929, 'ops', ops, 0), J$.R(9937, 'options', options, 0), J$.R(9945, 'callback', callback, 0))));
                            }
                            J$.X1(10049, J$.F(10041, J$.R(9977, 'executeWriteOperation', executeWriteOperation, 1), 0)(J$.G(9993, J$.R(9985, 'this', this, 0), 's', 0), J$.T(10001, 'remove', 21, false), J$.R(10009, 'ns', ns, 0), J$.R(10017, 'ops', ops, 0), J$.R(10025, 'options', options, 0), J$.R(10033, 'callback', callback, 0)));
                        } catch (J$e) {
                            J$.Ex(22073, J$e);
                        } finally {
                            if (J$.Fr(22081))
                                continue jalangiLabel2092;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 10057), 0));
            J$.X1(11561, J$.P(11553, J$.G(10137, J$.R(10129, 'Mongos', Mongos, 1), 'prototype', 0), 'command', J$.T(11545, function (ns, cmd, options, callback) {
                jalangiLabel2095:
                    while (true) {
                        try {
                            J$.Fe(11449, arguments.callee, this, arguments);
                            arguments = J$.N(11457, 'arguments', arguments, 4);
                            ns = J$.N(11465, 'ns', ns, 4);
                            cmd = J$.N(11473, 'cmd', cmd, 4);
                            options = J$.N(11481, 'options', options, 4);
                            callback = J$.N(11489, 'callback', callback, 4);
                            J$.N(11497, 'self', self, 0);
                            J$.N(11505, 'server', server, 0);
                            J$.N(11513, 'servers', servers, 0);
                            J$.N(11521, 'count', count, 0);
                            J$.N(11529, 'cmdErr', cmdErr, 0);
                            J$.N(11537, 'i', i, 0);
                            if (J$.X1(22089, J$.C(392, J$.B(418, '==', J$.U(410, 'typeof', J$.R(10145, 'options', options, 0)), J$.T(10153, 'function', 21, false), 0))))
                                J$.X1(10201, (J$.X1(10193, callback = J$.W(10169, 'callback', J$.R(10161, 'options', options, 0), callback, 0)), options = J$.W(10185, 'options', J$.T(10177, {}, 11, false), options, 0)));
                            if (J$.X1(22097, J$.C(400, J$.B(426, '==', J$.G(10225, J$.G(10217, J$.R(10209, 'this', this, 0), 's', 0), 'state', 0), J$.R(10233, 'DESTROYED', DESTROYED, 1), 0))))
                                return J$.X1(10305, J$.Rt(10297, J$.F(10289, J$.R(10241, 'callback', callback, 0), 0)(J$.F(10281, J$.R(10249, 'MongoError', MongoError, 1), 1)(J$.F(10273, J$.R(10257, 'f', f, 1), 0)(J$.T(10265, 'topology was destroyed', 21, false))))));
                            var self = J$.X1(10329, J$.W(10321, 'self', J$.R(10313, 'this', this, 0), self, 1));
                            if (J$.X1(22105, J$.C(416, J$.C(408, J$.U(434, '!', J$.M(10345, J$.R(10337, 'self', self, 0), 'isConnected', 0)())) ? J$.B(442, '!=', J$.G(10369, J$.G(10361, J$.R(10353, 'self', self, 0), 's', 0), 'disconnectHandler', 0), J$.T(10377, null, 25, false), 0) : J$._()))) {
                                J$.X1(10417, callback = J$.W(10409, 'callback', J$.F(10401, J$.R(10385, 'bindToCurrentDomain', bindToCurrentDomain, 1), 0)(J$.R(10393, 'callback', callback, 0)), callback, 0));
                                return J$.X1(10505, J$.Rt(10497, J$.M(10489, J$.G(10441, J$.G(10433, J$.R(10425, 'self', self, 0), 's', 0), 'disconnectHandler', 0), 'add', 0)(J$.T(10449, 'command', 21, false), J$.R(10457, 'ns', ns, 0), J$.R(10465, 'cmd', cmd, 0), J$.R(10473, 'options', options, 0), J$.R(10481, 'callback', callback, 0))));
                            }
                            var server = J$.X1(10529, J$.W(10521, 'server', J$.T(10513, null, 25, false), server, 1));
                            J$.X1(10561, options = J$.W(10553, 'options', J$.C(424, J$.R(10537, 'options', options, 0)) ? J$._() : J$.T(10545, {}, 11, false), options, 0));
                            if (J$.X1(22161, J$.C(456, J$.G(10577, J$.R(10569, 'options', options, 0), 'onAll', 0)))) {
                                var servers = J$.X1(10625, J$.W(10617, 'servers', J$.M(10609, J$.G(10601, J$.G(10593, J$.R(10585, 'self', self, 0), 's', 0), 'mongosState', 0), 'getAll', 0)(), servers, 1));
                                var count = J$.X1(10657, J$.W(10649, 'count', J$.G(10641, J$.R(10633, 'servers', servers, 0), 'length', 0), count, 1));
                                var cmdErr = J$.X1(10681, J$.W(10673, 'cmdErr', J$.T(10665, null, 25, false), cmdErr, 1));
                                for (var i = J$.X1(10705, J$.W(10697, 'i', J$.T(10689, 0, 22, false), i, 1)); J$.X1(22145, J$.C(448, J$.B(450, '<', J$.R(10713, 'i', i, 0), J$.G(10729, J$.R(10721, 'servers', servers, 0), 'length', 0), 0))); J$.X1(22153, J$.B(474, '-', i = J$.W(10753, 'i', J$.B(466, '+', J$.U(458, '+', J$.R(10745, 'i', i, 0)), J$.T(10737, 1, 22, false), 0), i, 0), J$.T(10761, 1, 22, false), 0))) {
                                    J$.X1(11017, J$.M(11009, J$.G(10785, J$.R(10769, 'servers', servers, 0), J$.R(10777, 'i', i, 0), 4), 'command', 0)(J$.R(10793, 'ns', ns, 0), J$.R(10801, 'cmd', cmd, 0), J$.R(10809, 'options', options, 0), J$.T(11001, function (err, r) {
                                        jalangiLabel2093:
                                            while (true) {
                                                try {
                                                    J$.Fe(10969, arguments.callee, this, arguments);
                                                    arguments = J$.N(10977, 'arguments', arguments, 4);
                                                    err = J$.N(10985, 'err', err, 4);
                                                    r = J$.N(10993, 'r', r, 4);
                                                    J$.X1(10841, count = J$.W(10833, 'count', J$.B(482, '-', J$.R(10817, 'count', count, 0), J$.T(10825, 1, 22, false), 0), count, 0));
                                                    if (J$.X1(22121, J$.C(440, J$.B(490, '==', J$.R(10849, 'count', count, 0), J$.T(10857, 0, 22, false), 0)))) {
                                                        if (J$.X1(22113, J$.C(432, J$.G(10873, J$.R(10865, 'cmd', cmd, 0), 'logout', 0))))
                                                            J$.X1(10921, J$.F(10913, J$.R(10881, 'clearCredentials', clearCredentials, 1), 0)(J$.G(10897, J$.R(10889, 'self', self, 0), 's', 0), J$.R(10905, 'ns', ns, 0)));
                                                        J$.X1(10961, J$.F(10953, J$.R(10929, 'callback', callback, 0), 0)(J$.R(10937, 'err', err, 0), J$.R(10945, 'r', r, 0)));
                                                    }
                                                } catch (J$e) {
                                                    J$.Ex(22129, J$e);
                                                } finally {
                                                    if (J$.Fr(22137))
                                                        continue jalangiLabel2093;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 10969)));
                                }
                                return J$.X1(11033, J$.Rt(11025, undefined));
                            }
                            try {
                                J$.X1(11129, server = J$.W(11121, 'server', J$.M(11113, J$.G(11057, J$.G(11049, J$.R(11041, 'self', self, 0), 's', 0), 'mongosState', 0), 'pickServer', 0)(J$.X1(22169, J$.C(464, J$.G(11073, J$.R(11065, 'options', options, 0), 'writeConcern', 0))) ? J$.G(11089, J$.R(11081, 'ReadPreference', ReadPreference, 1), 'primary', 0) : J$.G(11105, J$.R(11097, 'options', options, 0), 'readPreference', 0)), server, 0));
                            } catch (err) {
                                err = J$.N(11177, 'err', err, 1);
                                return J$.X1(11169, J$.Rt(11161, J$.F(11153, J$.R(11137, 'callback', callback, 0), 0)(J$.R(11145, 'err', err, 0))));
                            }
                            if (J$.X1(22177, J$.C(472, J$.B(498, '==', J$.R(11185, 'server', server, 0), J$.T(11193, null, 25, false), 0))))
                                return J$.X1(11249, J$.Rt(11241, J$.F(11233, J$.R(11201, 'callback', callback, 0), 0)(J$.F(11225, J$.R(11209, 'MongoError', MongoError, 1), 1)(J$.T(11217, 'no mongos found', 21, false)))));
                            J$.X1(11441, J$.M(11433, J$.R(11257, 'server', server, 0), 'command', 0)(J$.R(11265, 'ns', ns, 0), J$.R(11273, 'cmd', cmd, 0), J$.R(11281, 'options', options, 0), J$.T(11425, function (err, r) {
                                jalangiLabel2094:
                                    while (true) {
                                        try {
                                            J$.Fe(11393, arguments.callee, this, arguments);
                                            arguments = J$.N(11401, 'arguments', arguments, 4);
                                            err = J$.N(11409, 'err', err, 4);
                                            r = J$.N(11417, 'r', r, 4);
                                            if (J$.X1(22185, J$.C(480, J$.G(11297, J$.R(11289, 'cmd', cmd, 0), 'logout', 0))))
                                                J$.X1(11345, J$.F(11337, J$.R(11305, 'clearCredentials', clearCredentials, 1), 0)(J$.G(11321, J$.R(11313, 'self', self, 0), 's', 0), J$.R(11329, 'ns', ns, 0)));
                                            J$.X1(11385, J$.F(11377, J$.R(11353, 'callback', callback, 0), 0)(J$.R(11361, 'err', err, 0), J$.R(11369, 'r', r, 0)));
                                        } catch (J$e) {
                                            J$.Ex(22193, J$e);
                                        } finally {
                                            if (J$.Fr(22201))
                                                continue jalangiLabel2094;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 11393)));
                        } catch (J$e) {
                            J$.Ex(22209, J$e);
                        } finally {
                            if (J$.Fr(22217))
                                continue jalangiLabel2095;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 11449), 0));
            J$.X1(11849, J$.P(11841, J$.G(11577, J$.R(11569, 'Mongos', Mongos, 1), 'prototype', 0), 'cursor', J$.T(11833, function (ns, cmd, cursorOptions) {
                jalangiLabel2096:
                    while (true) {
                        try {
                            J$.Fe(11785, arguments.callee, this, arguments);
                            arguments = J$.N(11793, 'arguments', arguments, 4);
                            ns = J$.N(11801, 'ns', ns, 4);
                            cmd = J$.N(11809, 'cmd', cmd, 4);
                            cursorOptions = J$.N(11817, 'cursorOptions', cursorOptions, 4);
                            J$.N(11825, 'FinalCursor', FinalCursor, 0);
                            J$.X1(11609, cursorOptions = J$.W(11601, 'cursorOptions', J$.C(488, J$.R(11585, 'cursorOptions', cursorOptions, 0)) ? J$._() : J$.T(11593, {}, 11, false), cursorOptions, 0));
                            var FinalCursor = J$.X1(11665, J$.W(11657, 'FinalCursor', J$.C(496, J$.G(11625, J$.R(11617, 'cursorOptions', cursorOptions, 0), 'cursorFactory', 0)) ? J$._() : J$.G(11649, J$.G(11641, J$.R(11633, 'this', this, 0), 's', 0), 'Cursor', 0), FinalCursor, 1));
                            return J$.X1(11777, J$.Rt(11769, J$.F(11761, J$.R(11673, 'FinalCursor', FinalCursor, 0), 1)(J$.G(11697, J$.G(11689, J$.R(11681, 'this', this, 0), 's', 0), 'bson', 0), J$.R(11705, 'ns', ns, 0), J$.R(11713, 'cmd', cmd, 0), J$.R(11721, 'cursorOptions', cursorOptions, 0), J$.R(11729, 'this', this, 0), J$.G(11753, J$.G(11745, J$.R(11737, 'this', this, 0), 's', 0), 'options', 0))));
                        } catch (J$e) {
                            J$.Ex(22225, J$e);
                        } finally {
                            if (J$.Fr(22233))
                                continue jalangiLabel2096;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 11785), 0));
            J$.X1(13313, J$.P(13305, J$.G(11865, J$.R(11857, 'Mongos', Mongos, 1), 'prototype', 0), 'auth', J$.T(13297, function (mechanism, db) {
                jalangiLabel2098:
                    while (true) {
                        try {
                            J$.Fe(13177, arguments.callee, this, arguments);
                            arguments = J$.N(13185, 'arguments', arguments, 4);
                            mechanism = J$.N(13193, 'mechanism', mechanism, 4);
                            db = J$.N(13201, 'db', db, 4);
                            J$.N(13209, 'allArgs', allArgs, 0);
                            J$.N(13217, 'self', self, 0);
                            J$.N(13225, 'args', args, 0);
                            J$.N(13233, 'callback', callback, 0);
                            J$.N(13241, 'servers', servers, 0);
                            J$.N(13249, 'count', count, 0);
                            J$.N(13257, 'authenticated', authenticated, 0);
                            J$.N(13265, 'authErr', authErr, 0);
                            J$.N(13273, 'server', server, 0);
                            J$.N(13281, 'argsWithoutCallback', argsWithoutCallback, 0);
                            J$.N(13289, 'finalArguments', finalArguments, 0);
                            var allArgs = J$.X1(11945, J$.W(11937, 'allArgs', J$.M(11929, J$.M(11913, J$.G(11889, J$.G(11881, J$.R(11873, 'Array', Array, 2), 'prototype', 0), 'slice', 0), 'call', 0)(J$.R(11897, 'arguments', arguments, 2), J$.T(11905, 0, 22, false)), 'slice', 0)(J$.T(11921, 0, 22, false)), allArgs, 1));
                            var self = J$.X1(11969, J$.W(11961, 'self', J$.R(11953, 'this', this, 0), self, 1));
                            var args = J$.X1(12033, J$.W(12025, 'args', J$.M(12017, J$.G(11993, J$.G(11985, J$.R(11977, 'Array', Array, 2), 'prototype', 0), 'slice', 0), 'call', 0)(J$.R(12001, 'arguments', arguments, 2), J$.T(12009, 2, 22, false)), args, 1));
                            var callback = J$.X1(12065, J$.W(12057, 'callback', J$.M(12049, J$.R(12041, 'args', args, 0), 'pop', 0)(), callback, 1));
                            if (J$.X1(22241, J$.C(512, J$.C(504, J$.B(506, '==', J$.G(12105, J$.G(12089, J$.G(12081, J$.R(12073, 'this', this, 0), 's', 0), 'authProviders', 0), J$.R(12097, 'mechanism', mechanism, 0), 4), J$.T(12113, null, 25, false), 0)) ? J$.B(514, '!=', J$.R(12121, 'mechanism', mechanism, 0), J$.T(12129, 'default', 21, false), 0) : J$._())))
                                throw J$.X1(12193, J$.Th(12185, J$.F(12177, J$.R(12137, 'MongoError', MongoError, 1), 1)(J$.F(12169, J$.R(12145, 'f', f, 1), 0)(J$.T(12153, 'auth provider %s does not exist', 21, false), J$.R(12161, 'mechanism', mechanism, 0)))));
                            var servers = J$.X1(12257, J$.W(12249, 'servers', J$.M(12241, J$.M(12225, J$.G(12217, J$.G(12209, J$.R(12201, 'this', this, 0), 's', 0), 'mongosState', 0), 'connectedServers', 0)(), 'slice', 0)(J$.T(12233, 0, 22, false)), servers, 1));
                            var count = J$.X1(12289, J$.W(12281, 'count', J$.G(12273, J$.R(12265, 'servers', servers, 0), 'length', 0), count, 1));
                            var authenticated = J$.X1(12313, J$.W(12305, 'authenticated', J$.T(12297, true, 23, false), authenticated, 1));
                            var authErr = J$.X1(12337, J$.W(12329, 'authErr', J$.T(12321, null, 25, false), authErr, 1));
                            J$.X1(12377, J$.P(12369, J$.G(12353, J$.R(12345, 'this', this, 0), 's', 0), 'authInProgress', J$.T(12361, true, 23, false), 0));
                            while (J$.X1(22313, J$.C(568, J$.B(522, '>', J$.G(12393, J$.R(12385, 'servers', servers, 0), 'length', 0), J$.T(12401, 0, 22, false), 0)))) {
                                var server = J$.X1(12433, J$.W(12425, 'server', J$.M(12417, J$.R(12409, 'servers', servers, 0), 'shift', 0)(), server, 1));
                                var argsWithoutCallback = J$.X1(12505, J$.W(12497, 'argsWithoutCallback', J$.M(12489, J$.T(12457, [
                                    J$.R(12441, 'mechanism', mechanism, 0),
                                    J$.R(12449, 'db', db, 0)
                                ], 10, false), 'concat', 0)(J$.M(12481, J$.R(12465, 'args', args, 0), 'slice', 0)(J$.T(12473, 0, 22, false))), argsWithoutCallback, 1));
                                var finalArguments = J$.X1(13121, J$.W(13113, 'finalArguments', J$.M(13105, J$.R(12513, 'argsWithoutCallback', argsWithoutCallback, 0), 'concat', 0)(J$.T(13097, [J$.T(13089, function (err, r) {
                                        jalangiLabel2097:
                                            while (true) {
                                                try {
                                                    J$.Fe(13057, arguments.callee, this, arguments);
                                                    arguments = J$.N(13065, 'arguments', arguments, 4);
                                                    err = J$.N(13073, 'err', err, 4);
                                                    r = J$.N(13081, 'r', r, 4);
                                                    J$.X1(12545, count = J$.W(12537, 'count', J$.B(530, '-', J$.R(12521, 'count', count, 0), J$.T(12529, 1, 22, false), 0), count, 0));
                                                    if (J$.X1(22249, J$.C(520, J$.R(12553, 'err', err, 0))))
                                                        J$.X1(12577, authErr = J$.W(12569, 'authErr', J$.R(12561, 'err', err, 0), authErr, 0));
                                                    if (J$.X1(22257, J$.C(528, J$.U(538, '!', J$.R(12585, 'r', r, 0)))))
                                                        J$.X1(12609, authenticated = J$.W(12601, 'authenticated', J$.T(12593, false, 23, false), authenticated, 0));
                                                    if (J$.X1(22289, J$.C(560, J$.B(546, '==', J$.R(12617, 'count', count, 0), J$.T(12625, 0, 22, false), 0)))) {
                                                        if (J$.X1(22265, J$.C(536, J$.B(554, '>', J$.G(12657, J$.G(12649, J$.G(12641, J$.R(12633, 'self', self, 0), 's', 0), 'authInProgressServers', 0), 'length', 0), J$.T(12665, 0, 22, false), 0)))) {
                                                            J$.X1(12705, J$.P(12697, J$.G(12681, J$.R(12673, 'self', self, 0), 's', 0), 'authInProgressServers', J$.T(12689, [], 10, false), 0));
                                                            return J$.X1(12817, J$.Rt(12809, J$.M(12801, J$.G(12721, J$.R(12713, 'self', self, 0), 'auth', 0), 'apply', 0)(J$.R(12729, 'self', self, 0), J$.M(12793, J$.M(12769, J$.T(12753, [
                                                                J$.R(12737, 'mechanism', mechanism, 0),
                                                                J$.R(12745, 'db', db, 0)
                                                            ], 10, false), 'concat', 0)(J$.R(12761, 'args', args, 0)), 'concat', 0)(J$.T(12785, [J$.R(12777, 'callback', callback, 0)], 10, false)))));
                                                        }
                                                        J$.X1(12857, J$.P(12849, J$.G(12833, J$.R(12825, 'self', self, 0), 's', 0), 'authInProgress', J$.T(12841, false, 23, false), 0));
                                                        if (J$.X1(22273, J$.C(544, J$.B(562, '==', J$.R(12865, 'authErr', authErr, 0), J$.T(12873, null, 25, false), 0))))
                                                            J$.X1(12929, J$.F(12921, J$.R(12881, 'addCredentials', addCredentials, 1), 0)(J$.G(12897, J$.R(12889, 'self', self, 0), 's', 0), J$.R(12905, 'db', db, 0), J$.R(12913, 'argsWithoutCallback', argsWithoutCallback, 0)));
                                                        if (J$.X1(22281, J$.C(552, J$.R(12937, 'authErr', authErr, 0))))
                                                            return J$.X1(12985, J$.Rt(12977, J$.F(12969, J$.R(12945, 'callback', callback, 0), 0)(J$.R(12953, 'authErr', authErr, 0), J$.T(12961, false, 23, false))));
                                                        J$.X1(13049, J$.F(13041, J$.R(12993, 'callback', callback, 0), 0)(J$.T(13001, null, 25, false), J$.F(13033, J$.R(13009, 'Session', Session, 1), 1)(J$.T(13017, {}, 11, false), J$.R(13025, 'self', self, 0))));
                                                    }
                                                } catch (J$e) {
                                                    J$.Ex(22297, J$e);
                                                } finally {
                                                    if (J$.Fr(22305))
                                                        continue jalangiLabel2097;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 13057)], 10, false)), finalArguments, 1));
                                J$.X1(13169, J$.M(13161, J$.G(13137, J$.R(13129, 'server', server, 0), 'auth', 0), 'apply', 0)(J$.R(13145, 'server', server, 0), J$.R(13153, 'finalArguments', finalArguments, 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(22321, J$e);
                        } finally {
                            if (J$.Fr(22329))
                                continue jalangiLabel2098;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 13177), 0));
            J$.X1(13513, J$.P(13505, J$.G(13329, J$.R(13321, 'Mongos', Mongos, 1), 'prototype', 0), 'addReadPreferenceStrategy', J$.T(13497, function (name, strategy) {
                jalangiLabel2099:
                    while (true) {
                        try {
                            J$.Fe(13465, arguments.callee, this, arguments);
                            arguments = J$.N(13473, 'arguments', arguments, 4);
                            name = J$.N(13481, 'name', name, 4);
                            strategy = J$.N(13489, 'strategy', strategy, 4);
                            if (J$.X1(22337, J$.C(576, J$.B(570, '==', J$.G(13353, J$.G(13345, J$.R(13337, 'this', this, 0), 's', 0), 'readPreferenceStrategies', 0), J$.T(13361, null, 25, false), 0))))
                                J$.X1(13401, J$.P(13393, J$.G(13377, J$.R(13369, 'this', this, 0), 's', 0), 'readPreferenceStrategies', J$.T(13385, {}, 11, false), 0));
                            J$.X1(13457, J$.P(13449, J$.G(13425, J$.G(13417, J$.R(13409, 'this', this, 0), 's', 0), 'readPreferenceStrategies', 0), J$.R(13433, 'name', name, 0), J$.R(13441, 'strategy', strategy, 0), 2));
                        } catch (J$e) {
                            J$.Ex(22345, J$e);
                        } finally {
                            if (J$.Fr(22353))
                                continue jalangiLabel2099;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 13465), 0));
            J$.X1(13641, J$.P(13633, J$.G(13529, J$.R(13521, 'Mongos', Mongos, 1), 'prototype', 0), 'addAuthProvider', J$.T(13625, function (name, provider) {
                jalangiLabel2100:
                    while (true) {
                        try {
                            J$.Fe(13593, arguments.callee, this, arguments);
                            arguments = J$.N(13601, 'arguments', arguments, 4);
                            name = J$.N(13609, 'name', name, 4);
                            provider = J$.N(13617, 'provider', provider, 4);
                            J$.X1(13585, J$.P(13577, J$.G(13553, J$.G(13545, J$.R(13537, 'this', this, 0), 's', 0), 'authProviders', 0), J$.R(13561, 'name', name, 0), J$.R(13569, 'provider', provider, 0), 2));
                        } catch (J$e) {
                            J$.Ex(22361, J$e);
                        } finally {
                            if (J$.Fr(22369))
                                continue jalangiLabel2100;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 13593), 0));
            J$.X1(13881, J$.P(13873, J$.G(13657, J$.R(13649, 'Mongos', Mongos, 1), 'prototype', 0), 'getConnection', J$.T(13865, function (options) {
                jalangiLabel2101:
                    while (true) {
                        try {
                            J$.Fe(13833, arguments.callee, this, arguments);
                            arguments = J$.N(13841, 'arguments', arguments, 4);
                            options = J$.N(13849, 'options', options, 4);
                            J$.N(13857, 'server', server, 0);
                            J$.X1(13689, options = J$.W(13681, 'options', J$.C(584, J$.R(13665, 'options', options, 0)) ? J$._() : J$.T(13673, {}, 11, false), options, 0));
                            var server = J$.X1(13753, J$.W(13745, 'server', J$.M(13737, J$.G(13713, J$.G(13705, J$.R(13697, 'this', this, 0), 's', 0), 'mongosState', 0), 'pickServer', 0)(J$.G(13729, J$.R(13721, 'options', options, 0), 'readPreference', 0)), server, 1));
                            if (J$.X1(22377, J$.C(592, J$.B(578, '==', J$.R(13761, 'server', server, 0), J$.T(13769, null, 25, false), 0))))
                                return J$.X1(13793, J$.Rt(13785, J$.T(13777, null, 25, false)));
                            return J$.X1(13825, J$.Rt(13817, J$.M(13809, J$.R(13801, 'server', server, 0), 'getConnection', 0)()));
                        } catch (J$e) {
                            J$.Ex(22385, J$e);
                        } finally {
                            if (J$.Fr(22393))
                                continue jalangiLabel2101;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 13833), 0));
            J$.X1(14041, J$.P(14033, J$.G(13897, J$.R(13889, 'Mongos', Mongos, 1), 'prototype', 0), 'getServer', J$.T(14025, function (options) {
                jalangiLabel2102:
                    while (true) {
                        try {
                            J$.Fe(14001, arguments.callee, this, arguments);
                            arguments = J$.N(14009, 'arguments', arguments, 4);
                            options = J$.N(14017, 'options', options, 4);
                            J$.X1(13929, options = J$.W(13921, 'options', J$.C(600, J$.R(13905, 'options', options, 0)) ? J$._() : J$.T(13913, {}, 11, false), options, 0));
                            return J$.X1(13993, J$.Rt(13985, J$.M(13977, J$.G(13953, J$.G(13945, J$.R(13937, 'this', this, 0), 's', 0), 'mongosState', 0), 'pickServer', 0)(J$.G(13969, J$.R(13961, 'options', options, 0), 'readPreference', 0))));
                        } catch (J$e) {
                            J$.Ex(22401, J$e);
                        } finally {
                            if (J$.Fr(22409))
                                continue jalangiLabel2102;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 14001), 0));
            J$.X1(14145, J$.P(14137, J$.G(14057, J$.R(14049, 'Mongos', Mongos, 1), 'prototype', 0), 'connections', J$.T(14129, function () {
                jalangiLabel2103:
                    while (true) {
                        try {
                            J$.Fe(14113, arguments.callee, this, arguments);
                            arguments = J$.N(14121, 'arguments', arguments, 4);
                            return J$.X1(14105, J$.Rt(14097, J$.M(14089, J$.G(14081, J$.G(14073, J$.R(14065, 'this', this, 0), 's', 0), 'mongosState', 0), 'getAllConnections', 0)()));
                        } catch (J$e) {
                            J$.Ex(22417, J$e);
                        } finally {
                            if (J$.Fr(22425))
                                continue jalangiLabel2103;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 14113), 0));
            var mongosInquirer = J$.X1(15897, J$.W(15889, 'mongosInquirer', J$.T(15881, function (self, state) {
                jalangiLabel2108:
                    while (true) {
                        try {
                            J$.Fe(15849, arguments.callee, this, arguments);
                            arguments = J$.N(15857, 'arguments', arguments, 4);
                            self = J$.N(15865, 'self', self, 4);
                            state = J$.N(15873, 'state', state, 4);
                            return J$.X1(15841, J$.Rt(15833, J$.T(15825, function () {
                                jalangiLabel2107:
                                    while (true) {
                                        try {
                                            J$.Fe(15777, arguments.callee, this, arguments);
                                            arguments = J$.N(15785, 'arguments', arguments, 4);
                                            J$.N(15793, 'disconnectedServers', disconnectedServers, 0);
                                            J$.N(15801, 'connectionCount', connectionCount, 0);
                                            J$.N(15809, 'connectToProxy', connectToProxy, 0);
                                            J$.N(15817, 'server', server, 0);
                                            if (J$.X1(22433, J$.C(608, J$.B(586, '==', J$.G(14161, J$.R(14153, 'state', state, 0), 'state', 0), J$.R(14169, 'DESTROYED', DESTROYED, 1), 0))))
                                                return J$.X1(14185, J$.Rt(14177, undefined));
                                            if (J$.X1(22441, J$.C(616, J$.B(594, '==', J$.G(14201, J$.R(14193, 'state', state, 0), 'state', 0), J$.R(14209, 'CONNECTED', CONNECTED, 1), 0))))
                                                J$.X1(14249, J$.P(14241, J$.R(14217, 'state', state, 0), 'retriesLeft', J$.G(14233, J$.R(14225, 'state', state, 0), 'reconnectTries', 0), 0));
                                            if (J$.X1(22457, J$.C(640, J$.C(624, J$.B(602, '==', J$.G(14265, J$.R(14257, 'state', state, 0), 'state', 0), J$.R(14273, 'DISCONNECTED', DISCONNECTED, 1), 0)) ? J$.B(610, '==', J$.G(14289, J$.R(14281, 'state', state, 0), 'retriesLeft', 0), J$.T(14297, 0, 22, false), 0) : J$._()))) {
                                                J$.X1(14321, J$.M(14313, J$.R(14305, 'self', self, 0), 'destroy', 0)());
                                                return J$.X1(14417, J$.Rt(14409, J$.M(14401, J$.R(14329, 'self', self, 0), 'emit', 0)(J$.T(14337, 'error', 21, false), J$.F(14393, J$.R(14345, 'MongoError', MongoError, 1), 1)(J$.F(14385, J$.R(14353, 'f', f, 1), 0)(J$.T(14361, 'failed to reconnect after %s', 21, false), J$.G(14377, J$.R(14369, 'state', state, 0), 'reconnectTries', 0))))));
                                            } else if (J$.X1(22449, J$.C(632, J$.B(618, '==', J$.R(14425, 'state', state, 0), J$.R(14433, 'DISCONNECTED', DISCONNECTED, 1), 0)))) {
                                                J$.X1(14481, J$.P(14473, J$.R(14441, 'state', state, 0), 'retriesLeft', J$.B(626, '-', J$.G(14457, J$.R(14449, 'state', state, 0), 'retriesLeft', 0), J$.T(14465, 1, 22, false), 0), 0));
                                            }
                                            if (J$.X1(22465, J$.C(656, J$.C(648, J$.M(14505, J$.G(14497, J$.R(14489, 'state', state, 0), 'mongosState', 0), 'isConnected', 0)()) ? J$.G(14521, J$.R(14513, 'state', state, 0), 'disconnectHandler', 0) : J$._()))) {
                                                J$.X1(14553, J$.M(14545, J$.G(14537, J$.R(14529, 'state', state, 0), 'disconnectHandler', 0), 'execute', 0)());
                                            }
                                            if (J$.X1(22473, J$.C(664, J$.M(14577, J$.G(14569, J$.R(14561, 'state', state, 0), 'logger', 0), 'isDebug', 0)())))
                                                J$.X1(14633, J$.M(14625, J$.G(14593, J$.R(14585, 'state', state, 0), 'logger', 0), 'debug', 0)(J$.F(14617, J$.R(14601, 'f', f, 1), 0)(J$.T(14609, 'mongos ha proceess running', 21, false))));
                                            var disconnectedServers = J$.X1(14673, J$.W(14665, 'disconnectedServers', J$.M(14657, J$.G(14649, J$.R(14641, 'state', state, 0), 'mongosState', 0), 'disconnectedServers', 0)(), disconnectedServers, 1));
                                            if (J$.X1(22481, J$.C(672, J$.B(634, '==', J$.G(14689, J$.R(14681, 'disconnectedServers', disconnectedServers, 0), 'length', 0), J$.T(14697, 0, 22, false), 0))))
                                                return J$.X1(14777, J$.Rt(14769, J$.F(14761, J$.R(14705, 'setTimeout', setTimeout, 2), 0)(J$.F(14737, J$.R(14713, 'mongosInquirer', mongosInquirer, 1), 0)(J$.R(14721, 'self', self, 0), J$.R(14729, 'state', state, 0)), J$.G(14753, J$.R(14745, 'state', state, 0), 'haInterval', 0))));
                                            var connectionCount = J$.X1(14809, J$.W(14801, 'connectionCount', J$.G(14793, J$.R(14785, 'disconnectedServers', disconnectedServers, 0), 'length', 0), connectionCount, 1));
                                            if (J$.X1(22489, J$.C(680, J$.M(14833, J$.G(14825, J$.R(14817, 'state', state, 0), 'logger', 0), 'isDebug', 0)())))
                                                J$.X1(14897, J$.M(14889, J$.G(14849, J$.R(14841, 'state', state, 0), 'logger', 0), 'debug', 0)(J$.F(14881, J$.R(14857, 'f', f, 1), 0)(J$.T(14865, 'mongos ha proceess found %d disconnected proxies', 21, false), J$.R(14873, 'connectionCount', connectionCount, 0))));
                                            while (J$.X1(22553, J$.C(696, J$.B(642, '>', J$.G(14913, J$.R(14905, 'disconnectedServers', disconnectedServers, 0), 'length', 0), J$.T(14921, 0, 22, false), 0)))) {
                                                var connectToProxy = J$.X1(15505, J$.W(15497, 'connectToProxy', J$.T(15489, function (_server) {
                                                    jalangiLabel2106:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(15465, arguments.callee, this, arguments);
                                                                arguments = J$.N(15473, 'arguments', arguments, 4);
                                                                _server = J$.N(15481, '_server', _server, 4);
                                                                J$.X1(15457, J$.F(15449, J$.R(14929, 'setTimeout', setTimeout, 2), 0)(J$.T(15433, function () {
                                                                    jalangiLabel2105:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(15409, arguments.callee, this, arguments);
                                                                                arguments = J$.N(15417, 'arguments', arguments, 4);
                                                                                J$.N(15425, 'events', events, 0);
                                                                                var events = J$.X1(15001, J$.W(14993, 'events', J$.T(14985, [
                                                                                    J$.T(14937, 'error', 21, false),
                                                                                    J$.T(14945, 'close', 21, false),
                                                                                    J$.T(14953, 'timeout', 21, false),
                                                                                    J$.T(14961, 'connect', 21, false),
                                                                                    J$.T(14969, 'message', 21, false),
                                                                                    J$.T(14977, 'parseError', 21, false)
                                                                                ], 10, false), events, 1));
                                                                                J$.X1(15089, J$.M(15081, J$.R(15009, 'events', events, 0), 'forEach', 0)(J$.T(15073, function (e) {
                                                                                    jalangiLabel2104:
                                                                                        while (true) {
                                                                                            try {
                                                                                                J$.Fe(15049, arguments.callee, this, arguments);
                                                                                                arguments = J$.N(15057, 'arguments', arguments, 4);
                                                                                                e = J$.N(15065, 'e', e, 4);
                                                                                                J$.X1(15041, J$.M(15033, J$.R(15017, '_server', _server, 0), 'removeAllListeners', 0)(J$.R(15025, 'e', e, 0)));
                                                                                            } catch (J$e) {
                                                                                                J$.Ex(22497, J$e);
                                                                                            } finally {
                                                                                                if (J$.Fr(22505))
                                                                                                    continue jalangiLabel2104;
                                                                                                else
                                                                                                    return J$.Ra();
                                                                                            }
                                                                                        }
                                                                                }, 12, false, 15049)));
                                                                                J$.X1(15161, J$.M(15153, J$.R(15097, '_server', _server, 0), 'once', 0)(J$.T(15105, 'error', 21, false), J$.F(15145, J$.R(15113, 'errorHandlerTemp', errorHandlerTemp, 1), 0)(J$.R(15121, 'self', self, 0), J$.R(15129, 'state', state, 0), J$.R(15137, 'server', server, 0))));
                                                                                J$.X1(15233, J$.M(15225, J$.R(15169, '_server', _server, 0), 'once', 0)(J$.T(15177, 'close', 21, false), J$.F(15217, J$.R(15185, 'errorHandlerTemp', errorHandlerTemp, 1), 0)(J$.R(15193, 'self', self, 0), J$.R(15201, 'state', state, 0), J$.R(15209, 'server', server, 0))));
                                                                                J$.X1(15305, J$.M(15297, J$.R(15241, '_server', _server, 0), 'once', 0)(J$.T(15249, 'timeout', 21, false), J$.F(15289, J$.R(15257, 'errorHandlerTemp', errorHandlerTemp, 1), 0)(J$.R(15265, 'self', self, 0), J$.R(15273, 'state', state, 0), J$.R(15281, 'server', server, 0))));
                                                                                J$.X1(15377, J$.M(15369, J$.R(15313, '_server', _server, 0), 'once', 0)(J$.T(15321, 'connect', 21, false), J$.F(15361, J$.R(15329, 'connectHandler', connectHandler, 1), 0)(J$.R(15337, 'self', self, 0), J$.R(15345, 'state', state, 0), J$.T(15353, 'ha', 21, false))));
                                                                                J$.X1(15401, J$.M(15393, J$.R(15385, '_server', _server, 0), 'connect', 0)());
                                                                            } catch (J$e) {
                                                                                J$.Ex(22513, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(22521))
                                                                                    continue jalangiLabel2105;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }, 12, false, 15409), J$.T(15441, 1, 22, false)));
                                                            } catch (J$e) {
                                                                J$.Ex(22529, J$e);
                                                            } finally {
                                                                if (J$.Fr(22537))
                                                                    continue jalangiLabel2106;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 15465), connectToProxy, 1));
                                                var server = J$.X1(15537, J$.W(15529, 'server', J$.M(15521, J$.R(15513, 'disconnectedServers', disconnectedServers, 0), 'shift', 0)(), server, 1));
                                                if (J$.X1(22545, J$.C(688, J$.M(15561, J$.G(15553, J$.R(15545, 'state', state, 0), 'logger', 0), 'isDebug', 0)())))
                                                    J$.X1(15633, J$.M(15625, J$.G(15577, J$.R(15569, 'state', state, 0), 'logger', 0), 'debug', 0)(J$.F(15617, J$.R(15585, 'f', f, 1), 0)(J$.T(15593, 'attempting to connect to server %s', 21, false), J$.G(15609, J$.R(15601, 'server', server, 0), 'name', 0))));
                                                J$.X1(15665, J$.F(15657, J$.R(15641, 'connectToProxy', connectToProxy, 0), 0)(J$.R(15649, 'server', server, 0)));
                                            }
                                            return J$.X1(15769, J$.Rt(15761, J$.F(15753, J$.R(15673, 'setTimeout', setTimeout, 2), 0)(J$.F(15705, J$.R(15681, 'mongosInquirer', mongosInquirer, 1), 0)(J$.R(15689, 'self', self, 0), J$.R(15697, 'state', state, 0)), J$.B(650, '+', J$.G(15729, J$.G(15721, J$.R(15713, 'state', state, 0), 'options', 0), 'connectionTimeout', 0), J$.G(15745, J$.R(15737, 'state', state, 0), 'haInterval', 0), 0))));
                                        } catch (J$e) {
                                            J$.Ex(22561, J$e);
                                        } finally {
                                            if (J$.Fr(22569))
                                                continue jalangiLabel2107;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 15777)));
                        } catch (J$e) {
                            J$.Ex(22577, J$e);
                        } finally {
                            if (J$.Fr(22585))
                                continue jalangiLabel2108;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 15849), mongosInquirer, 3));
            var errorHandlerTemp = J$.X1(16329, J$.W(16321, 'errorHandlerTemp', J$.T(16313, function (self, state, server) {
                jalangiLabel2111:
                    while (true) {
                        try {
                            J$.Fe(16273, arguments.callee, this, arguments);
                            arguments = J$.N(16281, 'arguments', arguments, 4);
                            self = J$.N(16289, 'self', self, 4);
                            state = J$.N(16297, 'state', state, 4);
                            server = J$.N(16305, 'server', server, 4);
                            return J$.X1(16265, J$.Rt(16257, J$.T(16249, function (err, server) {
                                jalangiLabel2110:
                                    while (true) {
                                        try {
                                            J$.Fe(16209, arguments.callee, this, arguments);
                                            arguments = J$.N(16217, 'arguments', arguments, 4);
                                            err = J$.N(16225, 'err', err, 4);
                                            server = J$.N(16233, 'server', server, 4);
                                            J$.N(16241, 'events', events, 0);
                                            if (J$.X1(22593, J$.C(704, J$.M(15921, J$.G(15913, J$.R(15905, 'state', state, 0), 'logger', 0), 'isInfo', 0)())))
                                                J$.X1(16017, J$.M(16009, J$.G(15937, J$.R(15929, 'state', state, 0), 'logger', 0), 'info', 0)(J$.F(16001, J$.R(15945, 'f', f, 1), 0)(J$.T(15953, 'server %s disconnected with error %s', 21, false), J$.G(15969, J$.R(15961, 'server', server, 0), 'name', 0), J$.M(15993, J$.R(15977, 'JSON', JSON, 2), 'stringify', 0)(J$.R(15985, 'err', err, 0)))));
                                            J$.X1(16057, J$.M(16049, J$.G(16033, J$.R(16025, 'state', state, 0), 'mongosState', 0), 'disconnected', 0)(J$.R(16041, 'server', server, 0)));
                                            var events = J$.X1(16113, J$.W(16105, 'events', J$.T(16097, [
                                                J$.T(16065, 'error', 21, false),
                                                J$.T(16073, 'close', 21, false),
                                                J$.T(16081, 'timeout', 21, false),
                                                J$.T(16089, 'connect', 21, false)
                                            ], 10, false), events, 1));
                                            J$.X1(16201, J$.M(16193, J$.R(16121, 'events', events, 0), 'forEach', 0)(J$.T(16185, function (e) {
                                                jalangiLabel2109:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(16161, arguments.callee, this, arguments);
                                                            arguments = J$.N(16169, 'arguments', arguments, 4);
                                                            e = J$.N(16177, 'e', e, 4);
                                                            J$.X1(16153, J$.M(16145, J$.R(16129, 'server', server, 0), 'removeAllListeners', 0)(J$.R(16137, 'e', e, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(22601, J$e);
                                                        } finally {
                                                            if (J$.Fr(22609))
                                                                continue jalangiLabel2109;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 16161)));
                                        } catch (J$e) {
                                            J$.Ex(22617, J$e);
                                        } finally {
                                            if (J$.Fr(22625))
                                                continue jalangiLabel2110;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 16209)));
                        } catch (J$e) {
                            J$.Ex(22633, J$e);
                        } finally {
                            if (J$.Fr(22641))
                                continue jalangiLabel2111;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 16273), errorHandlerTemp, 3));
            var errorHandler = J$.X1(16785, J$.W(16777, 'errorHandler', J$.T(16769, function (self, state) {
                jalangiLabel2113:
                    while (true) {
                        try {
                            J$.Fe(16737, arguments.callee, this, arguments);
                            arguments = J$.N(16745, 'arguments', arguments, 4);
                            self = J$.N(16753, 'self', self, 4);
                            state = J$.N(16761, 'state', state, 4);
                            return J$.X1(16729, J$.Rt(16721, J$.T(16713, function (err, server) {
                                jalangiLabel2112:
                                    while (true) {
                                        try {
                                            J$.Fe(16681, arguments.callee, this, arguments);
                                            arguments = J$.N(16689, 'arguments', arguments, 4);
                                            err = J$.N(16697, 'err', err, 4);
                                            server = J$.N(16705, 'server', server, 4);
                                            if (J$.X1(22649, J$.C(712, J$.M(16353, J$.G(16345, J$.R(16337, 'state', state, 0), 'logger', 0), 'isInfo', 0)())))
                                                J$.X1(16449, J$.M(16441, J$.G(16369, J$.R(16361, 'state', state, 0), 'logger', 0), 'info', 0)(J$.F(16433, J$.R(16377, 'f', f, 1), 0)(J$.T(16385, 'server %s errored out with %s', 21, false), J$.G(16401, J$.R(16393, 'server', server, 0), 'name', 0), J$.M(16425, J$.R(16409, 'JSON', JSON, 2), 'stringify', 0)(J$.R(16417, 'err', err, 0)))));
                                            J$.X1(16489, J$.M(16481, J$.G(16465, J$.R(16457, 'state', state, 0), 'mongosState', 0), 'disconnected', 0)(J$.R(16473, 'server', server, 0)));
                                            if (J$.X1(22657, J$.C(720, J$.B(658, '==', J$.G(16521, J$.M(16513, J$.G(16505, J$.R(16497, 'state', state, 0), 'mongosState', 0), 'connectedServers', 0)(), 'length', 0), J$.T(16529, 0, 22, false), 0)))) {
                                                J$.X1(16561, J$.P(16553, J$.R(16537, 'state', state, 0), 'state', J$.R(16545, 'DISCONNECTED', DISCONNECTED, 1), 0));
                                            }
                                            J$.X1(16609, J$.M(16601, J$.R(16569, 'self', self, 0), 'emit', 0)(J$.T(16577, 'left', 21, false), J$.T(16585, 'mongos', 21, false), J$.R(16593, 'server', server, 0)));
                                            if (J$.X1(22665, J$.C(728, J$.G(16625, J$.R(16617, 'state', state, 0), 'emitError', 0))))
                                                J$.X1(16673, J$.M(16665, J$.R(16633, 'self', self, 0), 'emit', 0)(J$.T(16641, 'error', 21, false), J$.R(16649, 'err', err, 0), J$.R(16657, 'server', server, 0)));
                                        } catch (J$e) {
                                            J$.Ex(22673, J$e);
                                        } finally {
                                            if (J$.Fr(22681))
                                                continue jalangiLabel2112;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 16681)));
                        } catch (J$e) {
                            J$.Ex(22689, J$e);
                        } finally {
                            if (J$.Fr(22697))
                                continue jalangiLabel2113;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 16737), errorHandler, 3));
            var timeoutHandler = J$.X1(17153, J$.W(17145, 'timeoutHandler', J$.T(17137, function (self, state) {
                jalangiLabel2115:
                    while (true) {
                        try {
                            J$.Fe(17105, arguments.callee, this, arguments);
                            arguments = J$.N(17113, 'arguments', arguments, 4);
                            self = J$.N(17121, 'self', self, 4);
                            state = J$.N(17129, 'state', state, 4);
                            return J$.X1(17097, J$.Rt(17089, J$.T(17081, function (err, server) {
                                jalangiLabel2114:
                                    while (true) {
                                        try {
                                            J$.Fe(17049, arguments.callee, this, arguments);
                                            arguments = J$.N(17057, 'arguments', arguments, 4);
                                            err = J$.N(17065, 'err', err, 4);
                                            server = J$.N(17073, 'server', server, 4);
                                            if (J$.X1(22705, J$.C(736, J$.M(16809, J$.G(16801, J$.R(16793, 'state', state, 0), 'logger', 0), 'isInfo', 0)())))
                                                J$.X1(16881, J$.M(16873, J$.G(16825, J$.R(16817, 'state', state, 0), 'logger', 0), 'info', 0)(J$.F(16865, J$.R(16833, 'f', f, 1), 0)(J$.T(16841, 'server %s timed out', 21, false), J$.G(16857, J$.R(16849, 'server', server, 0), 'name', 0))));
                                            J$.X1(16921, J$.M(16913, J$.G(16897, J$.R(16889, 'state', state, 0), 'mongosState', 0), 'disconnected', 0)(J$.R(16905, 'server', server, 0)));
                                            if (J$.X1(22713, J$.C(744, J$.B(666, '==', J$.G(16953, J$.M(16945, J$.G(16937, J$.R(16929, 'state', state, 0), 'mongosState', 0), 'connectedServers', 0)(), 'length', 0), J$.T(16961, 0, 22, false), 0)))) {
                                                J$.X1(16993, J$.P(16985, J$.R(16969, 'state', state, 0), 'state', J$.R(16977, 'DISCONNECTED', DISCONNECTED, 1), 0));
                                            }
                                            J$.X1(17041, J$.M(17033, J$.R(17001, 'self', self, 0), 'emit', 0)(J$.T(17009, 'left', 21, false), J$.T(17017, 'mongos', 21, false), J$.R(17025, 'server', server, 0)));
                                        } catch (J$e) {
                                            J$.Ex(22721, J$e);
                                        } finally {
                                            if (J$.Fr(22729))
                                                continue jalangiLabel2114;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 17049)));
                        } catch (J$e) {
                            J$.Ex(22737, J$e);
                        } finally {
                            if (J$.Fr(22745))
                                continue jalangiLabel2115;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 17105), timeoutHandler, 3));
            var closeHandler = J$.X1(17521, J$.W(17513, 'closeHandler', J$.T(17505, function (self, state) {
                jalangiLabel2117:
                    while (true) {
                        try {
                            J$.Fe(17473, arguments.callee, this, arguments);
                            arguments = J$.N(17481, 'arguments', arguments, 4);
                            self = J$.N(17489, 'self', self, 4);
                            state = J$.N(17497, 'state', state, 4);
                            return J$.X1(17465, J$.Rt(17457, J$.T(17449, function (err, server) {
                                jalangiLabel2116:
                                    while (true) {
                                        try {
                                            J$.Fe(17417, arguments.callee, this, arguments);
                                            arguments = J$.N(17425, 'arguments', arguments, 4);
                                            err = J$.N(17433, 'err', err, 4);
                                            server = J$.N(17441, 'server', server, 4);
                                            if (J$.X1(22753, J$.C(752, J$.M(17177, J$.G(17169, J$.R(17161, 'state', state, 0), 'logger', 0), 'isInfo', 0)())))
                                                J$.X1(17249, J$.M(17241, J$.G(17193, J$.R(17185, 'state', state, 0), 'logger', 0), 'info', 0)(J$.F(17233, J$.R(17201, 'f', f, 1), 0)(J$.T(17209, 'server %s closed', 21, false), J$.G(17225, J$.R(17217, 'server', server, 0), 'name', 0))));
                                            J$.X1(17289, J$.M(17281, J$.G(17265, J$.R(17257, 'state', state, 0), 'mongosState', 0), 'disconnected', 0)(J$.R(17273, 'server', server, 0)));
                                            if (J$.X1(22761, J$.C(760, J$.B(674, '==', J$.G(17321, J$.M(17313, J$.G(17305, J$.R(17297, 'state', state, 0), 'mongosState', 0), 'connectedServers', 0)(), 'length', 0), J$.T(17329, 0, 22, false), 0)))) {
                                                J$.X1(17361, J$.P(17353, J$.R(17337, 'state', state, 0), 'state', J$.R(17345, 'DISCONNECTED', DISCONNECTED, 1), 0));
                                            }
                                            J$.X1(17409, J$.M(17401, J$.R(17369, 'self', self, 0), 'emit', 0)(J$.T(17377, 'left', 21, false), J$.T(17385, 'mongos', 21, false), J$.R(17393, 'server', server, 0)));
                                        } catch (J$e) {
                                            J$.Ex(22769, J$e);
                                        } finally {
                                            if (J$.Fr(22777))
                                                continue jalangiLabel2116;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 17417)));
                        } catch (J$e) {
                            J$.Ex(22785, J$e);
                        } finally {
                            if (J$.Fr(22793))
                                continue jalangiLabel2117;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 17473), closeHandler, 3));
            var connectHandler = J$.X1(19385, J$.W(19377, 'connectHandler', J$.T(19369, function (self, state, e) {
                jalangiLabel2122:
                    while (true) {
                        try {
                            J$.Fe(19329, arguments.callee, this, arguments);
                            arguments = J$.N(19337, 'arguments', arguments, 4);
                            self = J$.N(19345, 'self', self, 4);
                            state = J$.N(19353, 'state', state, 4);
                            e = J$.N(19361, 'e', e, 4);
                            return J$.X1(19321, J$.Rt(19313, J$.T(19305, function (server) {
                                jalangiLabel2121:
                                    while (true) {
                                        try {
                                            J$.Fe(19257, arguments.callee, this, arguments);
                                            arguments = J$.N(19265, 'arguments', arguments, 4);
                                            server = J$.N(19273, 'server', server, 4);
                                            J$.N(19281, 'processNewServer', processNewServer, 0);
                                            J$.N(19289, 'count', count, 0);
                                            J$.N(19297, 'i', i, 0);
                                            if (J$.X1(22801, J$.C(768, J$.M(17545, J$.G(17537, J$.R(17529, 'state', state, 0), 'logger', 0), 'isInfo', 0)())))
                                                J$.X1(17617, J$.M(17609, J$.G(17561, J$.R(17553, 'state', state, 0), 'logger', 0), 'info', 0)(J$.F(17601, J$.R(17569, 'f', f, 1), 0)(J$.T(17577, 'connected to %s', 21, false), J$.G(17593, J$.R(17585, 'server', server, 0), 'name', 0))));
                                            J$.X1(17753, J$.M(17745, J$.T(17673, [
                                                J$.T(17625, 'error', 21, false),
                                                J$.T(17633, 'close', 21, false),
                                                J$.T(17641, 'timeout', 21, false),
                                                J$.T(17649, 'connect', 21, false),
                                                J$.T(17657, 'message', 21, false),
                                                J$.T(17665, 'parseError', 21, false)
                                            ], 10, false), 'forEach', 0)(J$.T(17737, function (e) {
                                                jalangiLabel2118:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(17713, arguments.callee, this, arguments);
                                                            arguments = J$.N(17721, 'arguments', arguments, 4);
                                                            e = J$.N(17729, 'e', e, 4);
                                                            J$.X1(17705, J$.M(17697, J$.R(17681, 'server', server, 0), 'removeAllListeners', 0)(J$.R(17689, 'e', e, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(22809, J$e);
                                                        } finally {
                                                            if (J$.Fr(22817))
                                                                continue jalangiLabel2118;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 17713)));
                                            var processNewServer = J$.X1(18785, J$.W(18777, 'processNewServer', J$.T(18769, function (_server) {
                                                jalangiLabel2119:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(18745, arguments.callee, this, arguments);
                                                            arguments = J$.N(18753, 'arguments', arguments, 4);
                                                            _server = J$.N(18761, '_server', _server, 4);
                                                            if (J$.X1(22825, J$.C(776, J$.M(17769, J$.R(17761, '_server', _server, 0), 'isConnected', 0)()))) {
                                                                J$.X1(17833, J$.M(17825, J$.R(17777, '_server', _server, 0), 'once', 0)(J$.T(17785, 'error', 21, false), J$.F(17817, J$.R(17793, 'errorHandler', errorHandler, 1), 0)(J$.R(17801, 'self', self, 0), J$.R(17809, 'state', state, 0))));
                                                                J$.X1(17897, J$.M(17889, J$.R(17841, '_server', _server, 0), 'once', 0)(J$.T(17849, 'close', 21, false), J$.F(17881, J$.R(17857, 'closeHandler', closeHandler, 1), 0)(J$.R(17865, 'self', self, 0), J$.R(17873, 'state', state, 0))));
                                                                J$.X1(17961, J$.M(17953, J$.R(17905, '_server', _server, 0), 'once', 0)(J$.T(17913, 'timeout', 21, false), J$.F(17945, J$.R(17921, 'timeoutHandler', timeoutHandler, 1), 0)(J$.R(17929, 'self', self, 0), J$.R(17937, 'state', state, 0))));
                                                                J$.X1(18025, J$.M(18017, J$.R(17969, '_server', _server, 0), 'once', 0)(J$.T(17977, 'parseError', 21, false), J$.F(18009, J$.R(17985, 'timeoutHandler', timeoutHandler, 1), 0)(J$.R(17993, 'self', self, 0), J$.R(18001, 'state', state, 0))));
                                                            }
                                                            J$.X1(18073, J$.M(18065, J$.R(18033, 'self', self, 0), 'emit', 0)(J$.T(18041, 'joined', 21, false), J$.T(18049, 'mongos', 21, false), J$.R(18057, '_server', _server, 0)));
                                                            J$.X1(18113, J$.M(18105, J$.G(18089, J$.R(18081, 'state', state, 0), 'mongosState', 0), 'connected', 0)(J$.R(18097, '_server', _server, 0)));
                                                            if (J$.X1(22833, J$.C(792, J$.C(784, J$.B(682, '==', J$.T(18121, 'ha', 21, false), J$.R(18129, 'e', e, 0), 0)) ? J$.B(690, '==', J$.G(18161, J$.M(18153, J$.G(18145, J$.R(18137, 'state', state, 0), 'mongosState', 0), 'connectedServers', 0)(), 'length', 0), J$.T(18169, 1, 22, false), 0) : J$._()))) {
                                                                J$.X1(18209, J$.M(18201, J$.R(18177, 'self', self, 0), 'emit', 0)(J$.T(18185, 'reconnect', 21, false), J$.R(18193, '_server', _server, 0)));
                                                            }
                                                            if (J$.X1(22841, J$.C(816, J$.C(808, J$.C(800, J$.B(698, '==', J$.G(18241, J$.M(18233, J$.G(18225, J$.R(18217, 'state', state, 0), 'mongosState', 0), 'disconnectedServers', 0)(), 'length', 0), J$.T(18249, 0, 22, false), 0)) ? J$.B(706, '>', J$.G(18281, J$.M(18273, J$.G(18265, J$.R(18257, 'state', state, 0), 'mongosState', 0), 'connectedServers', 0)(), 'length', 0), J$.T(18289, 0, 22, false), 0) : J$._()) ? J$.U(714, '!', J$.G(18305, J$.R(18297, 'state', state, 0), 'fullsetup', 0)) : J$._()))) {
                                                                J$.X1(18337, J$.P(18329, J$.R(18313, 'state', state, 0), 'fullsetup', J$.T(18321, true, 23, false), 0));
                                                                J$.X1(18369, J$.M(18361, J$.R(18345, 'self', self, 0), 'emit', 0)(J$.T(18353, 'fullsetup', 21, false)));
                                                            }
                                                            if (J$.X1(22849, J$.C(840, J$.C(832, J$.C(824, J$.B(722, '==', J$.G(18401, J$.M(18393, J$.G(18385, J$.R(18377, 'state', state, 0), 'mongosState', 0), 'disconnectedServers', 0)(), 'length', 0), J$.T(18409, 0, 22, false), 0)) ? J$.B(730, '==', J$.G(18441, J$.M(18433, J$.G(18425, J$.R(18417, 'state', state, 0), 'mongosState', 0), 'connectedServers', 0)(), 'length', 0), J$.G(18465, J$.G(18457, J$.R(18449, 'state', state, 0), 'seedlist', 0), 'length', 0), 0) : J$._()) ? J$.U(738, '!', J$.G(18481, J$.R(18473, 'state', state, 0), 'all', 0)) : J$._()))) {
                                                                J$.X1(18513, J$.P(18505, J$.R(18489, 'state', state, 0), 'all', J$.T(18497, true, 23, false), 0));
                                                                J$.X1(18545, J$.M(18537, J$.R(18521, 'self', self, 0), 'emit', 0)(J$.T(18529, 'all', 21, false)));
                                                            }
                                                            if (J$.X1(22865, J$.C(856, J$.B(746, '==', J$.G(18561, J$.R(18553, 'state', state, 0), 'state', 0), J$.R(18569, 'DISCONNECTED', DISCONNECTED, 1), 0)))) {
                                                                J$.X1(18601, J$.P(18593, J$.R(18577, 'state', state, 0), 'state', J$.R(18585, 'CONNECTED', CONNECTED, 1), 0));
                                                                J$.X1(18641, J$.M(18633, J$.R(18609, 'self', self, 0), 'emit', 0)(J$.T(18617, 'reconnect', 21, false), J$.R(18625, 'self', self, 0)));
                                                            } else if (J$.X1(22857, J$.C(848, J$.B(754, '==', J$.G(18657, J$.R(18649, 'state', state, 0), 'state', 0), J$.R(18665, 'CONNECTING', CONNECTING, 1), 0)))) {
                                                                J$.X1(18697, J$.P(18689, J$.R(18673, 'state', state, 0), 'state', J$.R(18681, 'CONNECTED', CONNECTED, 1), 0));
                                                                J$.X1(18737, J$.M(18729, J$.R(18705, 'self', self, 0), 'emit', 0)(J$.T(18713, 'connect', 21, false), J$.R(18721, 'self', self, 0)));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(22873, J$e);
                                                        } finally {
                                                            if (J$.Fr(22881))
                                                                continue jalangiLabel2119;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 18745), processNewServer, 1));
                                            if (J$.X1(22889, J$.C(864, J$.G(18801, J$.R(18793, 'state', state, 0), 'authInProgress', 0)))) {
                                                J$.X1(18841, J$.M(18833, J$.G(18817, J$.R(18809, 'state', state, 0), 'authInProgressServers', 0), 'push', 0)(J$.R(18825, 'server', server, 0)));
                                            }
                                            if (J$.X1(22897, J$.C(872, J$.B(762, '==', J$.G(18865, J$.G(18857, J$.R(18849, 'state', state, 0), 'credentials', 0), 'length', 0), J$.T(18873, 0, 22, false), 0))))
                                                return J$.X1(18913, J$.Rt(18905, J$.F(18897, J$.R(18881, 'processNewServer', processNewServer, 0), 0)(J$.R(18889, 'server', server, 0))));
                                            var count = J$.X1(18953, J$.W(18945, 'count', J$.G(18937, J$.G(18929, J$.R(18921, 'state', state, 0), 'credentials', 0), 'length', 0), count, 1));
                                            for (var i = J$.X1(18977, J$.W(18969, 'i', J$.T(18961, 0, 22, false), i, 1)); J$.X1(22929, J$.C(888, J$.B(770, '<', J$.R(18985, 'i', i, 0), J$.G(19009, J$.G(19001, J$.R(18993, 'state', state, 0), 'credentials', 0), 'length', 0), 0))); J$.X1(22937, J$.B(794, '-', i = J$.W(19033, 'i', J$.B(786, '+', J$.U(778, '+', J$.R(19025, 'i', i, 0)), J$.T(19017, 1, 22, false), 0), i, 0), J$.T(19041, 1, 22, false), 0))) {
                                                J$.X1(19249, J$.M(19241, J$.G(19057, J$.R(19049, 'server', server, 0), 'auth', 0), 'apply', 0)(J$.R(19065, 'server', server, 0), J$.M(19233, J$.G(19097, J$.G(19081, J$.R(19073, 'state', state, 0), 'credentials', 0), J$.R(19089, 'i', i, 0), 4), 'concat', 0)(J$.T(19225, [J$.T(19217, function (err, r) {
                                                        jalangiLabel2120:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(19185, arguments.callee, this, arguments);
                                                                    arguments = J$.N(19193, 'arguments', arguments, 4);
                                                                    err = J$.N(19201, 'err', err, 4);
                                                                    r = J$.N(19209, 'r', r, 4);
                                                                    J$.X1(19129, count = J$.W(19121, 'count', J$.B(802, '-', J$.R(19105, 'count', count, 0), J$.T(19113, 1, 22, false), 0), count, 0));
                                                                    if (J$.X1(22905, J$.C(880, J$.B(810, '==', J$.R(19137, 'count', count, 0), J$.T(19145, 0, 22, false), 0))))
                                                                        J$.X1(19177, J$.F(19169, J$.R(19153, 'processNewServer', processNewServer, 0), 0)(J$.R(19161, 'server', server, 0)));
                                                                } catch (J$e) {
                                                                    J$.Ex(22913, J$e);
                                                                } finally {
                                                                    if (J$.Fr(22921))
                                                                        continue jalangiLabel2120;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false, 19185)], 10, false))));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(22945, J$e);
                                        } finally {
                                            if (J$.Fr(22953))
                                                continue jalangiLabel2121;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 19257)));
                        } catch (J$e) {
                            J$.Ex(22961, J$e);
                        } finally {
                            if (J$.Fr(22969))
                                continue jalangiLabel2122;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 19329), connectHandler, 3));
            var addToListIfNotExist = J$.X1(19785, J$.W(19777, 'addToListIfNotExist', J$.T(19769, function (list, server) {
                jalangiLabel2124:
                    while (true) {
                        try {
                            J$.Fe(19721, arguments.callee, this, arguments);
                            arguments = J$.N(19729, 'arguments', arguments, 4);
                            list = J$.N(19737, 'list', list, 4);
                            server = J$.N(19745, 'server', server, 4);
                            J$.N(19753, 'found', found, 0);
                            J$.N(19761, 'i', i, 0);
                            var found = J$.X1(19409, J$.W(19401, 'found', J$.T(19393, false, 23, false), found, 1));
                            J$.X1(19529, J$.M(19521, J$.T(19449, [
                                J$.T(19417, 'error', 21, false),
                                J$.T(19425, 'close', 21, false),
                                J$.T(19433, 'timeout', 21, false),
                                J$.T(19441, 'connect', 21, false)
                            ], 10, false), 'forEach', 0)(J$.T(19513, function (e) {
                                jalangiLabel2123:
                                    while (true) {
                                        try {
                                            J$.Fe(19489, arguments.callee, this, arguments);
                                            arguments = J$.N(19497, 'arguments', arguments, 4);
                                            e = J$.N(19505, 'e', e, 4);
                                            J$.X1(19481, J$.M(19473, J$.R(19457, 'server', server, 0), 'removeAllListeners', 0)(J$.R(19465, 'e', e, 0)));
                                        } catch (J$e) {
                                            J$.Ex(22977, J$e);
                                        } finally {
                                            if (J$.Fr(22985))
                                                continue jalangiLabel2123;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 19489)));
                            for (var i = J$.X1(19553, J$.W(19545, 'i', J$.T(19537, 0, 22, false), i, 1)); J$.X1(23001, J$.C(904, J$.B(818, '<', J$.R(19561, 'i', i, 0), J$.G(19577, J$.R(19569, 'list', list, 0), 'length', 0), 0))); J$.X1(23009, J$.B(842, '-', i = J$.W(19601, 'i', J$.B(834, '+', J$.U(826, '+', J$.R(19593, 'i', i, 0)), J$.T(19585, 1, 22, false), 0), i, 0), J$.T(19609, 1, 22, false), 0))) {
                                if (J$.X1(22993, J$.C(896, J$.M(19649, J$.G(19633, J$.R(19617, 'list', list, 0), J$.R(19625, 'i', i, 0), 4), 'equals', 0)(J$.R(19641, 'server', server, 0)))))
                                    J$.X1(19673, found = J$.W(19665, 'found', J$.T(19657, true, 23, false), found, 0));
                            }
                            if (J$.X1(23017, J$.C(912, J$.U(850, '!', J$.R(19681, 'found', found, 0))))) {
                                J$.X1(19713, J$.M(19705, J$.R(19689, 'list', list, 0), 'push', 0)(J$.R(19697, 'server', server, 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(23025, J$e);
                        } finally {
                            if (J$.Fr(23033))
                                continue jalangiLabel2124;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 19721), addToListIfNotExist, 3));
            var addCredentials = J$.X1(19937, J$.W(19929, 'addCredentials', J$.T(19921, function (state, db, argsWithoutCallback) {
                jalangiLabel2125:
                    while (true) {
                        try {
                            J$.Fe(19881, arguments.callee, this, arguments);
                            arguments = J$.N(19889, 'arguments', arguments, 4);
                            state = J$.N(19897, 'state', state, 4);
                            db = J$.N(19905, 'db', db, 4);
                            argsWithoutCallback = J$.N(19913, 'argsWithoutCallback', argsWithoutCallback, 4);
                            J$.X1(19833, J$.F(19825, J$.R(19793, 'clearCredentials', clearCredentials, 1), 0)(J$.R(19801, 'state', state, 0), J$.B(858, '+', J$.R(19809, 'db', db, 0), J$.T(19817, '.dummy', 21, false), 0)));
                            J$.X1(19873, J$.M(19865, J$.G(19849, J$.R(19841, 'state', state, 0), 'credentials', 0), 'push', 0)(J$.R(19857, 'argsWithoutCallback', argsWithoutCallback, 0)));
                        } catch (J$e) {
                            J$.Ex(23041, J$e);
                        } finally {
                            if (J$.Fr(23049))
                                continue jalangiLabel2125;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 19881), addCredentials, 3));
            var clearCredentials = J$.X1(20329, J$.W(20321, 'clearCredentials', J$.T(20313, function (state, ns) {
                jalangiLabel2126:
                    while (true) {
                        try {
                            J$.Fe(20257, arguments.callee, this, arguments);
                            arguments = J$.N(20265, 'arguments', arguments, 4);
                            state = J$.N(20273, 'state', state, 4);
                            ns = J$.N(20281, 'ns', ns, 4);
                            J$.N(20289, 'db', db, 0);
                            J$.N(20297, 'filteredCredentials', filteredCredentials, 0);
                            J$.N(20305, 'i', i, 0);
                            var db = J$.X1(19993, J$.W(19985, 'db', J$.G(19977, J$.M(19961, J$.R(19945, 'ns', ns, 0), 'split', 0)(J$.T(19953, '.', 21, false)), J$.T(19969, 0, 22, false), 4), db, 1));
                            var filteredCredentials = J$.X1(20017, J$.W(20009, 'filteredCredentials', J$.T(20001, [], 10, false), filteredCredentials, 1));
                            for (var i = J$.X1(20041, J$.W(20033, 'i', J$.T(20025, 0, 22, false), i, 1)); J$.X1(23065, J$.C(928, J$.B(866, '<', J$.R(20049, 'i', i, 0), J$.G(20073, J$.G(20065, J$.R(20057, 'state', state, 0), 'credentials', 0), 'length', 0), 0))); J$.X1(23073, J$.B(890, '-', i = J$.W(20097, 'i', J$.B(882, '+', J$.U(874, '+', J$.R(20089, 'i', i, 0)), J$.T(20081, 1, 22, false), 0), i, 0), J$.T(20105, 1, 22, false), 0))) {
                                if (J$.X1(23057, J$.C(920, J$.B(898, '!=', J$.G(20153, J$.G(20137, J$.G(20121, J$.R(20113, 'state', state, 0), 'credentials', 0), J$.R(20129, 'i', i, 0), 4), J$.T(20145, 1, 22, false), 4), J$.R(20161, 'db', db, 0), 0))))
                                    J$.X1(20217, J$.M(20209, J$.R(20169, 'filteredCredentials', filteredCredentials, 0), 'push', 0)(J$.G(20201, J$.G(20185, J$.R(20177, 'state', state, 0), 'credentials', 0), J$.R(20193, 'i', i, 0), 4)));
                            }
                            J$.X1(20249, J$.P(20241, J$.R(20225, 'state', state, 0), 'credentials', J$.R(20233, 'filteredCredentials', filteredCredentials, 0), 0));
                        } catch (J$e) {
                            J$.Ex(23081, J$e);
                        } finally {
                            if (J$.Fr(23089))
                                continue jalangiLabel2126;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 20257), clearCredentials, 3));
            var processReadPreference = J$.X1(20465, J$.W(20457, 'processReadPreference', J$.T(20449, function (cmd, options) {
                jalangiLabel2127:
                    while (true) {
                        try {
                            J$.Fe(20417, arguments.callee, this, arguments);
                            arguments = J$.N(20425, 'arguments', arguments, 4);
                            cmd = J$.N(20433, 'cmd', cmd, 4);
                            options = J$.N(20441, 'options', options, 4);
                            J$.X1(20361, options = J$.W(20353, 'options', J$.C(936, J$.R(20337, 'options', options, 0)) ? J$._() : J$.T(20345, {}, 11, false), options, 0));
                            if (J$.X1(23097, J$.C(944, J$.B(906, '==', J$.G(20377, J$.R(20369, 'options', options, 0), 'readPreference', 0), J$.T(20385, null, 25, false), 0))))
                                return J$.X1(20409, J$.Rt(20401, J$.R(20393, 'cmd', cmd, 0)));
                        } catch (J$e) {
                            J$.Ex(23105, J$e);
                        } finally {
                            if (J$.Fr(23113))
                                continue jalangiLabel2127;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 20417), processReadPreference, 3));
            var executeWriteOperation = J$.X1(20905, J$.W(20897, 'executeWriteOperation', J$.T(20889, function (state, op, ns, ops, options, callback) {
                jalangiLabel2128:
                    while (true) {
                        try {
                            J$.Fe(20817, arguments.callee, this, arguments);
                            arguments = J$.N(20825, 'arguments', arguments, 4);
                            state = J$.N(20833, 'state', state, 4);
                            op = J$.N(20841, 'op', op, 4);
                            ns = J$.N(20849, 'ns', ns, 4);
                            ops = J$.N(20857, 'ops', ops, 4);
                            options = J$.N(20865, 'options', options, 4);
                            callback = J$.N(20873, 'callback', callback, 4);
                            J$.N(20881, 'server', server, 0);
                            if (J$.X1(23121, J$.C(952, J$.B(922, '==', J$.U(914, 'typeof', J$.R(20473, 'options', options, 0)), J$.T(20481, 'function', 21, false), 0)))) {
                                J$.X1(20505, callback = J$.W(20497, 'callback', J$.R(20489, 'options', options, 0), callback, 0));
                                J$.X1(20529, options = J$.W(20521, 'options', J$.T(20513, {}, 11, false), options, 0));
                            }
                            var server = J$.X1(20553, J$.W(20545, 'server', J$.T(20537, null, 25, false), server, 1));
                            J$.X1(20585, options = J$.W(20577, 'options', J$.C(960, J$.R(20561, 'options', options, 0)) ? J$._() : J$.T(20569, {}, 11, false), options, 0));
                            try {
                                J$.X1(20625, server = J$.W(20617, 'server', J$.M(20609, J$.G(20601, J$.R(20593, 'state', state, 0), 'mongosState', 0), 'pickServer', 0)(), server, 0));
                            } catch (err) {
                                err = J$.N(20673, 'err', err, 1);
                                return J$.X1(20665, J$.Rt(20657, J$.F(20649, J$.R(20633, 'callback', callback, 0), 0)(J$.R(20641, 'err', err, 0))));
                            }
                            if (J$.X1(23129, J$.C(968, J$.B(930, '==', J$.R(20681, 'server', server, 0), J$.T(20689, null, 25, false), 0))))
                                return J$.X1(20745, J$.Rt(20737, J$.F(20729, J$.R(20697, 'callback', callback, 0), 0)(J$.F(20721, J$.R(20705, 'MongoError', MongoError, 1), 1)(J$.T(20713, 'no mongos found', 21, false)))));
                            J$.X1(20809, J$.M(20801, J$.R(20753, 'server', server, 0), J$.R(20761, 'op', op, 0), 1)(J$.R(20769, 'ns', ns, 0), J$.R(20777, 'ops', ops, 0), J$.R(20785, 'options', options, 0), J$.R(20793, 'callback', callback, 0)));
                        } catch (J$e) {
                            J$.Ex(23137, J$e);
                        } finally {
                            if (J$.Fr(23145))
                                continue jalangiLabel2128;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 20817), executeWriteOperation, 3));
            J$.X1(20937, J$.P(20929, J$.R(20913, 'module', module, 2), 'exports', J$.R(20921, 'Mongos', Mongos, 1), 0));
        } catch (J$e) {
            J$.Ex(23153, J$e);
        } finally {
            if (J$.Sr(23161)) {
                J$.L();
                continue jalangiLabel2129;
            } else {
                J$.L();
                break jalangiLabel2129;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
