J$.iids = {"8":[35,13,35,37],"9":[1,20,1,27],"10":[23,15,23,27],"16":[48,9,48,35],"17":[1,28,1,32],"24":[50,12,50,42],"25":[1,20,1,33],"26":[23,15,23,27],"32":[53,9,53,35],"33":[1,20,1,33],"34":[35,13,35,37],"40":[55,12,55,69],"41":[1,20,1,33],"42":[37,13,37,38],"48":[65,9,65,43],"49":[2,26,2,38],"50":[44,5,44,30],"56":[65,9,65,43],"57":[2,26,2,45],"58":[48,9,48,35],"64":[74,12,74,72],"65":[2,26,2,45],"66":[50,12,50,42],"72":[77,9,77,45],"73":[2,26,2,45],"74":[53,9,53,35],"80":[77,9,77,45],"81":[3,1,3,13],"82":[55,12,55,57],"88":[80,9,80,45],"89":[3,1,3,14],"90":[55,12,55,69],"96":[80,9,80,45],"97":[4,16,4,23],"98":[58,5,58,30],"104":[86,9,86,22],"105":[4,24,4,30],"106":[65,9,65,23],"112":[86,9,86,41],"113":[4,16,4,31],"114":[65,27,65,43],"120":[86,9,86,41],"121":[4,16,4,40],"122":[74,27,74,60],"128":[89,9,89,41],"129":[4,46,4,53],"130":[74,27,74,72],"136":[99,13,99,45],"137":[4,54,4,60],"138":[77,19,77,45],"144":[125,13,125,29],"145":[4,46,4,61],"146":[80,19,80,45],"152":[131,21,131,31],"153":[4,46,4,68],"154":[89,9,89,41],"160":[128,25,128,40],"161":[4,92,4,99],"162":[92,35,92,66],"168":[150,17,150,39],"169":[4,100,4,121],"170":[98,39,98,70],"176":[161,13,161,68],"177":[4,92,4,122],"178":[99,13,99,45],"184":[161,13,161,68],"185":[4,92,4,142],"186":[125,13,125,29],"192":[164,13,164,51],"193":[4,159,4,166],"194":[128,25,128,40],"200":[166,13,166,34],"201":[4,167,4,175],"202":[128,42,128,45],"208":[168,13,168,28],"209":[4,159,4,176],"216":[171,13,171,66],"217":[4,159,4,189],"218":[128,42,128,45],"224":[171,13,171,66],"225":[4,198,4,205],"226":[130,25,130,34],"232":[173,13,173,28],"233":[4,206,4,226],"234":[131,21,131,31],"240":[181,13,181,68],"241":[4,198,4,227],"242":[161,13,161,40],"248":[181,13,181,68],"249":[4,233,4,240],"250":[161,44,161,68],"256":[184,13,184,51],"257":[4,241,4,247],"258":[164,13,164,51],"264":[186,13,186,34],"265":[4,233,4,248],"266":[171,32,171,66],"272":[188,13,188,28],"273":[4,258,4,265],"274":[181,13,181,40],"280":[190,13,190,47],"281":[4,266,4,290],"282":[181,44,181,68],"288":[192,13,192,28],"289":[4,258,4,291],"290":[184,13,184,51],"296":[201,13,201,68],"297":[4,258,4,297],"298":[190,13,190,47],"304":[201,13,201,68],"305":[4,312,4,319],"306":[201,13,201,40],"312":[204,13,204,51],"313":[4,320,4,330],"314":[201,44,201,68],"320":[206,13,206,34],"321":[4,312,4,331],"322":[204,13,204,51],"328":[208,13,208,28],"329":[4,350,4,357],"330":[220,13,220,40],"336":[211,13,211,28],"337":[4,358,4,377],"338":[220,44,220,68],"344":[220,13,220,68],"345":[4,350,4,378],"346":[223,13,223,51],"352":[220,13,220,68],"353":[4,394,4,401],"354":[240,13,240,29],"360":[223,13,223,51],"361":[4,402,4,413],"362":[243,25,243,40],"368":[225,13,225,34],"369":[4,394,4,414],"370":[243,42,243,45],"376":[227,13,227,28],"377":[4,432,4,439],"384":[230,13,230,28],"385":[4,440,4,458],"386":[243,42,243,45],"392":[240,13,240,29],"393":[4,432,4,459],"394":[245,25,245,34],"400":[246,21,246,31],"401":[4,481,4,488],"402":[246,21,246,31],"408":[243,25,243,40],"409":[4,489,4,510],"410":[260,43,260,71],"416":[256,21,256,24],"417":[4,481,4,511],"418":[261,21,261,25],"424":[261,21,261,25],"425":[4,481,4,529],"426":[269,21,269,43],"432":[267,21,267,42],"433":[4,545,4,552],"434":[269,47,269,80],"440":[269,21,269,80],"441":[4,553,4,574],"442":[275,21,275,59],"448":[269,21,269,80],"449":[4,545,4,575],"450":[293,9,293,24],"456":[273,21,273,56],"457":[4,545,4,587],"458":[293,9,293,38],"464":[273,21,273,56],"465":[4,604,4,611],"466":[303,9,303,26],"472":[275,21,275,59],"473":[4,612,4,633],"474":[310,32,310,48],"480":[288,9,288,10],"481":[4,604,4,634],"482":[311,21,311,38],"488":[295,17,295,57],"489":[4,604,4,647],"490":[345,9,345,29],"496":[293,9,293,38],"497":[4,656,4,663],"498":[354,20,354,44],"504":[303,9,303,26],"505":[4,664,4,670],"506":[354,20,354,57],"512":[311,21,311,38],"513":[4,656,4,671],"514":[357,20,357,44],"520":[306,13,306,53],"521":[4,656,4,680],"522":[357,20,357,57],"523":[4,656,4,678],"528":[345,9,345,29],"529":[4,656,4,685],"530":[362,13,362,23],"536":[348,26,348,54],"537":[4,718,4,725],"544":[354,20,354,57],"545":[4,726,4,755],"546":[362,13,362,23],"552":[356,28,356,61],"553":[4,718,4,756],"554":[393,9,393,22],"560":[357,20,357,57],"561":[4,786,4,793],"562":[395,16,395,28],"568":[361,24,361,51],"569":[4,794,4,823],"570":[411,9,411,37],"576":[365,30,365,95],"577":[4,786,4,824],"578":[411,9,411,50],"584":[366,17,366,53],"585":[4,856,4,863],"586":[419,9,419,21],"592":[368,15,368,27],"593":[4,864,4,893],"594":[434,22,434,56],"600":[374,19,374,31],"601":[4,856,4,894],"602":[451,12,451,37],"608":[395,16,395,28],"609":[4,906,4,913],"610":[456,9,456,48],"616":[393,9,393,22],"617":[4,914,4,925],"618":[463,9,463,50],"624":[410,16,410,30],"625":[4,906,4,926],"626":[474,25,474,47],"632":[411,9,411,50],"633":[4,937,4,944],"634":[474,49,474,52],"640":[414,9,414,20],"641":[4,945,4,967],"648":[419,9,419,21],"649":[4,937,4,968],"650":[474,49,474,52],"656":[432,9,432,32],"657":[4,980,4,987],"658":[479,25,479,34],"664":[434,9,434,56],"665":[4,988,4,1005],"666":[480,21,480,31],"672":[434,9,434,56],"673":[4,980,4,1006],"674":[486,25,486,34],"680":[437,9,437,20],"681":[4,1015,4,1022],"682":[487,21,487,31],"688":[441,9,441,25],"689":[4,1023,4,1037],"690":[534,9,534,23],"696":[446,9,446,20],"697":[4,1015,4,1038],"698":[534,9,534,37],"704":[456,9,456,48],"705":[4,1048,4,1055],"706":[537,9,537,34],"712":[462,22,462,68],"713":[4,1056,4,1071],"714":[540,37,540,85],"720":[463,11,463,49],"721":[4,1048,4,1072],"722":[540,35,540,86],"728":[463,9,463,50],"729":[4,1083,4,1090],"730":[549,9,549,28],"736":[466,9,466,32],"737":[4,1091,4,1107],"738":[549,32,549,64],"744":[480,21,480,31],"745":[4,1083,4,1108],"746":[553,9,553,35],"752":[484,21,484,24],"753":[4,1117,4,1124],"754":[556,17,556,37],"760":[494,25,494,30],"761":[4,1125,4,1139],"762":[556,17,556,50],"768":[487,21,487,31],"769":[4,1117,4,1140],"770":[557,21,557,45],"776":[474,25,474,47],"777":[4,1154,4,1161],"778":[557,21,557,58],"784":[470,9,470,14],"785":[4,1162,4,1177],"786":[558,30,558,63],"792":[520,13,520,16],"793":[4,1154,4,1178],"794":[558,30,558,76],"800":[522,13,522,73],"801":[4,16,4,40],"802":[559,27,559,57],"808":[522,13,522,103],"809":[4,16,4,40],"810":[559,27,559,70],"816":[522,13,522,134],"817":[4,46,4,68],"818":[562,25,562,27],"824":[522,13,522,134],"825":[4,46,4,68],"826":[569,9,569,28],"832":[534,9,534,37],"833":[4,92,4,142],"834":[573,21,573,35],"840":[537,9,537,34],"841":[4,92,4,142],"842":[573,37,573,40],"848":[539,15,539,28],"849":[4,159,4,189],"856":[540,9,540,86],"857":[4,159,4,189],"858":[573,37,573,40],"864":[540,9,540,86],"865":[4,198,4,227],"866":[577,9,577,48],"872":[543,9,543,32],"873":[4,198,4,227],"874":[585,9,585,34],"880":[549,9,549,64],"881":[4,233,4,248],"882":[595,21,595,39],"888":[549,9,549,64],"889":[4,233,4,248],"890":[595,41,595,44],"896":[553,9,553,35],"897":[4,258,4,297],"904":[556,17,556,50],"905":[4,258,4,297],"906":[595,41,595,44],"912":[557,21,557,58],"913":[4,312,4,331],"914":[605,30,605,48],"920":[558,30,558,76],"921":[4,312,4,331],"922":[615,17,615,36],"928":[559,27,559,70],"929":[4,350,4,378],"930":[623,33,623,51],"936":[565,9,565,27],"937":[4,350,4,378],"938":[623,53,623,56],"944":[567,9,567,24],"945":[4,394,4,414],"952":[569,9,569,28],"953":[4,394,4,414],"954":[623,53,623,56],"960":[573,21,573,35],"961":[4,432,4,459],"962":[638,9,638,23],"968":[577,9,577,48],"969":[4,432,4,459],"970":[638,9,638,37],"976":[584,22,584,68],"977":[4,481,4,529],"978":[641,9,641,34],"984":[585,9,585,34],"985":[4,481,4,529],"986":[643,9,643,28],"992":[588,9,588,32],"993":[4,545,4,587],"994":[643,32,643,64],"1000":[603,17,603,25],"1001":[4,545,4,587],"1002":[651,9,651,23],"1008":[606,17,606,20],"1009":[4,604,4,647],"1010":[651,9,651,37],"1016":[610,17,610,77],"1017":[4,604,4,647],"1018":[654,9,654,34],"1024":[610,17,610,107],"1025":[4,656,4,685],"1026":[656,9,656,28],"1032":[610,17,610,138],"1033":[4,656,4,685],"1034":[656,32,656,64],"1040":[610,17,610,138],"1041":[4,718,4,756],"1042":[664,9,664,23],"1048":[623,33,623,51],"1049":[4,718,4,756],"1050":[664,9,664,37],"1056":[615,17,615,36],"1057":[4,786,4,824],"1058":[667,9,667,34],"1064":[595,21,595,39],"1065":[4,786,4,824],"1066":[669,9,669,28],"1072":[638,9,638,37],"1073":[4,856,4,894],"1074":[669,32,669,64],"1080":[641,9,641,34],"1081":[4,856,4,894],"1082":[680,9,680,48],"1088":[643,9,643,64],"1089":[4,906,4,926],"1090":[680,52,680,74],"1096":[643,9,643,64],"1097":[4,906,4,926],"1098":[682,9,682,31],"1104":[647,11,647,29],"1105":[4,937,4,968],"1106":[682,54,682,89],"1112":[651,9,651,37],"1113":[4,937,4,968],"1114":[684,16,684,38],"1120":[654,9,654,34],"1121":[4,980,4,1006],"1122":[694,17,694,19],"1128":[656,9,656,64],"1129":[4,980,4,1006],"1130":[702,9,702,48],"1136":[656,9,656,64],"1137":[4,1015,4,1038],"1138":[711,9,711,22],"1144":[660,11,660,29],"1145":[4,1015,4,1038],"1146":[711,9,711,34],"1152":[664,9,664,37],"1153":[4,1048,4,1072],"1154":[712,16,712,35],"1160":[667,9,667,34],"1161":[4,1048,4,1072],"1162":[714,16,714,40],"1168":[669,9,669,64],"1169":[4,1083,4,1108],"1170":[732,73,732,75],"1176":[669,9,669,64],"1177":[4,1083,4,1108],"1178":[732,9,732,75],"1184":[673,11,673,29],"1185":[4,1117,4,1140],"1192":[680,9,680,74],"1193":[4,1117,4,1140],"1200":[680,9,680,74],"1201":[4,1154,4,1178],"1208":[682,9,682,50],"1209":[4,1154,4,1178],"1216":[682,9,682,89],"1217":[6,5,6,6],"1224":[684,16,684,38],"1225":[6,5,6,11],"1232":[682,9,682,89],"1233":[7,5,7,6],"1240":[692,17,692,20],"1241":[7,5,7,15],"1248":[694,17,694,19],"1249":[8,5,8,6],"1256":[702,9,702,48],"1257":[8,5,8,13],"1264":[711,9,711,34],"1265":[9,5,9,6],"1272":[713,9,713,30],"1273":[9,5,9,11],"1280":[713,9,713,30],"1281":[10,5,10,6],"1288":[732,9,732,75],"1289":[10,5,10,12],"1296":[738,21,738,40],"1297":[11,5,11,6],"1304":[739,23,739,62],"1305":[11,5,11,13],"1313":[12,5,12,6],"1321":[12,5,12,13],"1329":[13,5,13,6],"1337":[13,5,13,16],"1345":[14,5,14,6],"1353":[14,5,14,13],"1361":[15,5,15,6],"1369":[15,5,15,13],"1377":[5,17,16,2],"1385":[5,17,16,2],"1393":[5,17,16,2],"1401":[17,20,17,24],"1409":[17,20,17,24],"1417":[17,20,17,24],"1425":[18,16,18,17],"1433":[18,16,18,17],"1441":[18,16,18,17],"1449":[19,18,19,19],"1457":[19,18,19,19],"1465":[19,18,19,19],"1473":[21,16,21,20],"1481":[21,16,21,20],"1489":[21,16,21,20],"1497":[22,5,22,9],"1505":[22,22,22,24],"1513":[22,5,22,24],"1521":[22,5,22,25],"1529":[23,5,23,9],"1545":[23,15,23,25],"1553":[23,15,23,27],"1569":[23,5,23,27],"1577":[23,5,23,28],"1585":[24,5,24,9],"1593":[24,17,24,25],"1601":[24,5,24,25],"1609":[24,5,24,26],"1617":[20,17,25,2],"1625":[20,17,25,2],"1633":[20,17,25,2],"1641":[20,17,25,2],"1649":[20,17,25,2],"1657":[20,17,25,2],"1665":[27,16,27,18],"1673":[27,16,27,18],"1681":[27,16,27,18],"1689":[28,22,28,29],"1697":[29,9,29,13],"1705":[29,14,29,18],"1713":[29,22,29,29],"1721":[29,30,29,34],"1729":[29,22,29,35],"1737":[29,9,29,35],"1745":[29,9,29,36],"1753":[28,22,28,29],"1761":[28,5,30,6],"1769":[28,5,30,6],"1777":[31,12,31,16],"1785":[31,12,31,16],"1793":[31,5,31,17],"1801":[26,20,32,2],"1809":[26,20,32,2],"1817":[26,20,32,2],"1825":[26,20,32,2],"1833":[26,20,32,2],"1841":[26,20,32,2],"1849":[26,20,32,2],"1857":[26,20,32,2],"1865":[33,1,33,10],"1873":[33,1,33,20],"1881":[34,20,34,24],"1889":[34,20,34,34],"1897":[35,14,35,19],"1905":[35,20,35,28],"1913":[35,29,35,31],"1921":[35,33,35,35],"1929":[35,20,35,36],"1937":[35,14,35,37],"1945":[36,28,36,32],"1953":[36,28,36,42],"1961":[36,43,36,45],"1969":[36,28,36,46],"1977":[36,28,36,46],"1985":[36,28,36,46],"1993":[37,20,37,24],"2001":[37,20,37,34],"2009":[37,35,37,37],"2017":[37,13,37,39],"2025":[38,13,38,21],"2033":[38,22,38,25],"2041":[38,27,38,31],"2049":[38,13,38,32],"2057":[38,13,38,33],"2065":[34,20,34,34],"2073":[34,5,40,6],"2081":[34,5,40,6],"2089":[33,29,41,2],"2097":[33,29,41,2],"2105":[33,29,41,2],"2113":[33,29,41,2],"2121":[33,29,41,2],"2129":[33,29,41,2],"2137":[33,1,41,2],"2145":[33,1,41,3],"2153":[42,1,42,10],"2161":[42,1,42,20],"2169":[43,20,43,24],"2177":[43,20,43,34],"2185":[43,35,43,37],"2193":[43,20,43,38],"2201":[43,20,43,38],"2209":[43,20,43,38],"2217":[44,12,44,16],"2225":[44,12,44,26],"2233":[44,27,44,29],"2241":[44,5,44,31],"2249":[45,5,45,13],"2257":[45,14,45,17],"2265":[45,19,45,24],"2273":[45,5,45,25],"2281":[45,5,45,26],"2289":[42,28,46,2],"2297":[42,28,46,2],"2305":[42,28,46,2],"2313":[42,28,46,2],"2321":[42,28,46,2],"2329":[42,28,46,2],"2337":[42,28,46,2],"2345":[42,1,46,2],"2353":[42,1,46,3],"2361":[47,1,47,10],"2369":[47,1,47,20],"2377":[48,9,48,13],"2385":[48,9,48,23],"2393":[48,24,48,26],"2401":[48,9,48,27],"2409":[48,31,48,35],"2417":[49,16,49,21],"2425":[49,16,49,21],"2433":[49,9,49,22],"2441":[50,12,50,16],"2449":[50,12,50,26],"2457":[50,27,50,29],"2465":[50,12,50,30],"2473":[50,12,50,34],"2481":[50,38,50,42],"2489":[50,45,50,49],"2497":[50,52,50,57],"2505":[50,12,50,57],"2513":[50,5,50,58],"2521":[47,27,51,2],"2529":[47,27,51,2],"2537":[47,27,51,2],"2545":[47,27,51,2],"2553":[47,1,51,2],"2561":[47,1,51,3],"2569":[52,1,52,10],"2577":[52,1,52,20],"2585":[53,9,53,13],"2593":[53,9,53,23],"2601":[53,24,53,26],"2609":[53,9,53,27],"2617":[53,31,53,35],"2625":[54,16,54,21],"2633":[54,16,54,21],"2641":[54,9,54,22],"2649":[55,19,55,23],"2657":[55,19,55,33],"2665":[55,34,55,36],"2673":[55,19,55,37],"2681":[55,19,55,57],"2689":[55,61,55,69],"2697":[55,72,55,76],"2705":[55,72,55,86],"2713":[55,87,55,89],"2721":[55,72,55,90],"2729":[55,72,55,110],"2737":[55,113,55,117],"2745":[55,12,55,117],"2753":[55,5,55,118],"2761":[52,43,56,2],"2769":[52,43,56,2],"2777":[52,43,56,2],"2785":[52,43,56,2],"2793":[52,1,56,2],"2801":[52,1,56,3],"2809":[57,1,57,10],"2817":[57,1,57,20],"2825":[58,12,58,16],"2833":[58,12,58,26],"2841":[58,27,58,29],"2849":[58,5,58,31],"2857":[57,34,59,2],"2865":[57,34,59,2],"2873":[57,34,59,2],"2881":[57,34,59,2],"2889":[57,1,59,2],"2897":[57,1,59,3],"2905":[60,1,60,10],"2913":[60,1,60,20],"2921":[61,5,61,9],"2929":[61,5,61,19],"2937":[61,20,61,22],"2945":[61,26,61,45],"2953":[61,46,61,54],"2961":[61,26,61,55],"2969":[61,5,61,55],"2977":[61,5,61,56],"2985":[60,32,62,2],"2993":[60,32,62,2],"3001":[60,32,62,2],"3009":[60,32,62,2],"3017":[60,32,62,2],"3025":[60,1,62,2],"3033":[60,1,62,3],"3041":[64,18,64,25],"3049":[64,18,64,32],"3057":[64,18,64,32],"3065":[64,18,64,32],"3073":[65,9,65,15],"3081":[65,19,65,23],"3089":[65,27,65,35],"3097":[65,39,65,43],"3105":[66,16,66,24],"3113":[66,16,66,24],"3121":[66,9,66,25],"3129":[67,12,67,18],"3137":[67,24,67,32],"3145":[67,12,67,33],"3147":[67,12,67,23],"3153":[67,12,67,33],"3161":[67,5,67,34],"3169":[63,27,68,2],"3177":[63,27,68,2],"3185":[63,27,68,2],"3193":[63,27,68,2],"3201":[63,27,68,2],"3209":[63,27,68,2],"3217":[63,27,68,2],"3225":[69,20,69,34],"3233":[69,20,69,34],"3241":[69,20,69,34],"3249":[70,18,70,30],"3257":[70,18,70,30],"3265":[70,18,70,30],"3273":[71,17,71,28],"3281":[71,17,71,28],"3289":[71,17,71,28],"3297":[72,17,72,28],"3305":[72,17,72,28],"3313":[72,17,72,28],"3321":[74,12,74,14],"3329":[74,12,74,23],"3337":[74,34,74,36],"3345":[74,34,74,45],"3353":[74,34,74,60],"3361":[74,64,74,72],"3369":[74,12,74,72],"3377":[74,5,74,73],"3385":[73,22,75,2],"3393":[73,22,75,2],"3401":[73,22,75,2],"3409":[73,22,75,2],"3417":[73,22,75,2],"3425":[73,22,75,2],"3433":[77,9,77,15],"3441":[77,19,77,25],"3449":[77,19,77,40],"3457":[77,44,77,45],"3465":[78,20,78,47],"3473":[78,52,78,77],"3481":[78,48,78,79],"3489":[78,16,78,80],"3497":[78,16,78,80],"3505":[78,9,78,81],"3513":[80,9,80,15],"3521":[80,19,80,25],"3529":[80,19,80,40],"3537":[80,44,80,45],"3545":[81,20,81,45],"3553":[81,16,81,47],"3561":[81,16,81,47],"3569":[81,9,81,48],"3577":[83,16,83,44],"3585":[83,12,83,46],"3593":[83,12,83,46],"3601":[83,5,83,47],"3609":[76,33,84,2],"3617":[76,33,84,2],"3625":[76,33,84,2],"3633":[76,33,84,2],"3641":[76,33,84,2],"3649":[76,33,84,2],"3657":[86,9,86,13],"3665":[86,17,86,22],"3673":[86,26,86,31],"3681":[86,26,86,41],"3689":[87,9,87,14],"3697":[87,9,87,24],"3705":[87,35,87,45],"3713":[87,46,87,47],"3721":[87,48,87,95],"3729":[87,97,87,101],"3737":[87,97,87,106],"3745":[87,46,87,107],"3753":[87,31,87,108],"3761":[87,9,87,109],"3763":[87,9,87,30],"3769":[87,9,87,110],"3777":[89,9,89,14],"3785":[89,9,89,36],"3793":[89,40,89,41],"3801":[90,16,90,20],"3809":[90,29,90,33],"3817":[90,35,90,39],"3825":[90,16,90,40],"3827":[90,16,90,28],"3833":[90,16,90,40],"3841":[90,9,90,41],"3849":[92,5,92,10],"3857":[92,35,92,40],"3865":[92,35,92,62],"3873":[92,65,92,66],"3881":[92,5,92,66],"3889":[92,5,92,67],"3897":[93,5,93,10],"3905":[93,19,93,29],"3913":[93,5,93,29],"3921":[93,5,93,30],"3929":[94,5,94,10],"3937":[94,22,94,26],"3945":[94,27,94,32],"3953":[94,27,94,40],"3961":[94,18,94,41],"3969":[94,5,94,41],"3977":[94,5,94,42],"3985":[96,9,96,14],"3993":[96,23,96,35],"4001":[96,9,96,35],"4009":[96,9,96,36],"4017":[97,9,97,14],"4025":[97,9,97,19],"4033":[97,9,97,29],"4035":[97,9,97,27],"4041":[97,9,97,30],"4049":[98,9,98,14],"4057":[98,39,98,44],"4065":[98,39,98,66],"4073":[98,69,98,70],"4081":[98,9,98,70],"4089":[98,9,98,71],"4097":[99,13,99,18],"4105":[99,13,99,40],"4113":[99,44,99,45],"4121":[100,13,100,17],"4129":[100,26,100,35],"4137":[100,13,100,35],"4145":[100,13,100,36],"4153":[101,13,101,17],"4161":[101,23,101,30],"4169":[101,32,101,33],"4177":[101,34,101,79],"4185":[101,81,101,86],"4193":[101,81,101,94],"4201":[101,81,101,99],"4209":[101,101,101,106],"4217":[101,101,101,114],"4225":[101,101,101,119],"4233":[101,121,101,126],"4241":[101,121,101,141],"4249":[101,32,101,142],"4257":[101,13,101,143],"4259":[101,13,101,22],"4265":[101,13,101,144],"4273":[103,13,103,23],"4281":[104,17,104,32],"4289":[104,33,104,37],"4297":[104,39,104,44],"4305":[104,17,104,45],"4313":[104,17,104,46],"4321":[103,24,105,14],"4329":[103,24,105,14],"4337":[103,24,105,14],"4345":[105,16,105,21],"4353":[105,16,105,39],"4361":[103,13,105,40],"4369":[103,13,105,41],"4377":[95,33,107,6],"4385":[95,33,107,6],"4393":[95,33,107,6],"4401":[95,33,107,6],"4409":[95,33,107,6],"4417":[95,33,107,6],"4425":[108,5,108,10],"4433":[108,5,108,15],"4441":[108,21,108,30],"4449":[109,9,109,14],"4457":[109,39,109,44],"4465":[109,39,109,59],"4473":[109,9,109,59],"4481":[109,9,109,60],"4489":[111,13,111,20],"4497":[112,13,112,20],"4505":[113,13,113,22],"4513":[114,13,114,25],"4521":[110,22,115,10],"4529":[110,22,115,10],"4537":[110,22,115,10],"4545":[116,9,116,15],"4553":[117,13,117,18],"4561":[117,13,117,23],"4569":[117,43,117,44],"4577":[117,13,117,45],"4579":[117,13,117,42],"4585":[117,13,117,46],"4593":[116,24,118,10],"4601":[116,24,118,10],"4609":[116,24,118,10],"4617":[116,24,118,10],"4625":[116,9,118,11],"4627":[116,9,116,23],"4633":[116,9,118,12],"4641":[119,9,119,14],"4649":[119,23,119,32],"4657":[119,9,119,32],"4665":[119,9,119,33],"4673":[120,9,120,14],"4681":[120,9,120,19],"4689":[120,25,120,32],"4697":[120,34,120,55],"4705":[120,9,120,56],"4707":[120,9,120,24],"4713":[120,9,120,57],"4721":[121,9,121,14],"4729":[121,9,121,19],"4737":[121,25,121,32],"4745":[121,34,121,46],"4753":[121,47,121,51],"4761":[121,53,121,58],"4769":[121,34,121,59],"4777":[121,9,121,60],"4779":[121,9,121,24],"4785":[121,9,121,61],"4793":[122,9,122,14],"4801":[122,9,122,19],"4809":[122,25,122,34],"4817":[122,36,122,50],"4825":[122,51,122,55],"4833":[122,57,122,62],"4841":[122,36,122,63],"4849":[122,9,122,64],"4851":[122,9,122,24],"4857":[122,9,122,65],"4865":[123,9,123,14],"4873":[123,9,123,19],"4881":[123,25,123,37],"4889":[123,39,123,56],"4897":[123,57,123,61],"4905":[123,63,123,68],"4913":[123,39,123,69],"4921":[123,9,123,70],"4923":[123,9,123,24],"4929":[123,9,123,71],"4937":[124,20,124,26],"4945":[124,32,124,37],"4953":[124,32,124,51],"4961":[124,20,124,52],"4963":[124,20,124,31],"4969":[124,20,124,52],"4977":[124,20,124,52],"4985":[125,13,125,17],"4993":[125,13,125,24],"5001":[125,28,125,29],"5009":[126,20,126,24],"5017":[126,30,126,41],"5025":[126,43,126,47],"5033":[126,20,126,48],"5035":[126,20,126,29],"5041":[126,20,126,48],"5049":[126,13,126,49],"5057":[127,21,127,25],"5065":[127,21,127,32],"5073":[127,21,127,32],"5081":[127,21,127,32],"5089":[128,22,128,23],"5097":[128,22,128,23],"5105":[128,22,128,23],"5113":[128,25,128,26],"5121":[128,29,128,33],"5129":[128,29,128,40],"5145":[128,42,128,43],"5153":[128,42,128,45],"5169":[129,13,129,18],"5177":[129,13,129,32],"5185":[129,33,129,37],"5193":[129,38,129,39],"5201":[129,33,129,40],"5209":[129,13,129,41],"5217":[129,57,129,61],"5225":[129,63,129,68],"5233":[129,63,129,73],"5241":[130,25,130,30],"5249":[130,33,130,34],"5257":[130,25,130,34],"5265":[130,17,130,35],"5273":[131,21,131,26],"5281":[131,30,131,31],"5289":[132,28,132,32],"5297":[132,38,132,49],"5305":[132,51,132,55],"5313":[132,28,132,56],"5315":[132,28,132,37],"5321":[132,28,132,56],"5329":[132,21,132,57],"5337":[129,75,134,14],"5345":[129,75,134,14],"5353":[129,75,134,14],"5361":[129,75,134,14],"5369":[129,75,134,14],"5377":[129,13,134,15],"5379":[129,13,129,56],"5385":[129,13,134,16],"5393":[108,32,136,6],"5401":[108,32,136,6],"5409":[108,32,136,6],"5417":[108,32,136,6],"5425":[108,32,136,6],"5433":[108,32,136,6],"5441":[108,32,136,6],"5449":[108,5,136,7],"5451":[108,5,108,20],"5457":[108,5,136,8],"5465":[137,5,137,10],"5473":[137,5,137,15],"5481":[137,21,137,28],"5489":[137,30,137,42],"5497":[137,43,137,47],"5505":[137,49,137,54],"5513":[137,30,137,55],"5521":[137,5,137,56],"5523":[137,5,137,20],"5529":[137,5,137,57],"5537":[138,5,138,10],"5545":[138,5,138,15],"5553":[138,21,138,28],"5561":[138,30,138,42],"5569":[138,43,138,47],"5577":[138,49,138,54],"5585":[138,30,138,55],"5593":[138,5,138,56],"5595":[138,5,138,20],"5601":[138,5,138,57],"5609":[139,5,139,10],"5617":[139,5,139,15],"5625":[139,21,139,30],"5633":[139,32,139,44],"5641":[139,45,139,49],"5649":[139,51,139,56],"5657":[139,32,139,57],"5665":[139,5,139,58],"5667":[139,5,139,20],"5673":[139,5,139,59],"5681":[140,5,140,10],"5689":[140,5,140,15],"5697":[140,21,140,33],"5705":[140,35,140,47],"5713":[140,48,140,52],"5721":[140,54,140,59],"5729":[140,35,140,60],"5737":[140,5,140,61],"5739":[140,5,140,20],"5745":[140,5,140,62],"5753":[141,5,141,10],"5761":[141,5,141,15],"5769":[141,5,141,25],"5771":[141,5,141,23],"5777":[141,5,141,26],"5785":[85,23,142,2],"5793":[85,23,142,2],"5801":[85,23,142,2],"5809":[85,23,142,2],"5817":[85,23,142,2],"5825":[85,23,142,2],"5833":[85,23,142,2],"5841":[85,23,142,2],"5849":[146,13,146,21],"5857":[147,22,147,27],"5865":[147,22,147,37],"5873":[147,42,147,50],"5881":[147,42,147,61],"5889":[147,22,147,62],"5891":[147,22,147,41],"5897":[148,38,148,43],"5905":[148,38,148,53],"5913":[148,74,148,82],"5921":[148,74,148,93],"5929":[148,38,148,94],"5931":[148,38,148,73],"5937":[146,28,149,14],"5945":[146,13,149,15],"5947":[146,13,146,27],"5953":[146,13,149,16],"5961":[150,17,150,22],"5969":[150,17,150,29],"5977":[150,17,150,39],"5979":[150,17,150,37],"5985":[151,17,151,22],"5993":[151,17,151,29],"6001":[151,36,151,37],"6009":[151,38,151,69],"6017":[151,71,151,79],"6025":[151,71,151,83],"6033":[151,93,151,98],"6041":[151,71,151,99],"6043":[151,71,151,92],"6049":[151,101,151,105],"6057":[151,101,151,110],"6065":[151,36,151,111],"6073":[151,17,151,112],"6075":[151,17,151,35],"6081":[151,17,151,113],"6089":[152,13,152,18],"6097":[152,13,152,28],"6105":[152,34,152,42],"6113":[152,34,152,53],"6121":[152,55,152,59],"6129":[152,61,152,69],"6137":[152,13,152,70],"6139":[152,13,152,33],"6145":[152,13,152,71],"6153":[154,13,154,18],"6161":[154,13,154,28],"6169":[154,39,154,49],"6177":[154,50,154,53],"6185":[154,35,154,54],"6193":[154,13,154,55],"6195":[154,13,154,34],"6201":[154,13,154,56],"6209":[155,13,155,17],"6217":[155,13,155,27],"6219":[155,13,155,25],"6225":[155,13,155,28],"6233":[153,11,156,10],"6241":[144,12,157,6],"6249":[144,12,157,6],"6257":[144,12,157,6],"6265":[144,12,157,6],"6273":[144,12,157,6],"6281":[144,12,157,6],"6289":[144,5,157,7],"6297":[143,22,158,2],"6305":[143,22,158,2],"6313":[143,22,158,2],"6321":[143,22,158,2],"6329":[143,22,158,2],"6337":[143,22,158,2],"6345":[143,22,158,2],"6353":[161,13,161,18],"6361":[161,13,161,24],"6369":[161,28,161,40],"6377":[161,44,161,49],"6385":[161,44,161,55],"6393":[161,59,161,68],"6401":[162,13,162,20],"6409":[162,13,162,20],"6417":[163,9,163,14],"6425":[163,23,163,35],"6433":[163,9,163,35],"6441":[163,9,163,36],"6449":[164,13,164,18],"6457":[164,13,164,43],"6465":[164,47,164,51],"6473":[165,13,165,29],"6481":[165,30,165,34],"6489":[165,36,165,40],"6497":[165,36,165,42],"6505":[165,44,165,51],"6513":[165,54,165,58],"6521":[165,53,165,59],"6529":[165,13,165,60],"6537":[165,13,165,61],"6545":[166,13,166,18],"6553":[166,13,166,25],"6561":[166,13,166,34],"6563":[166,13,166,32],"6569":[167,13,167,18],"6577":[167,13,167,25],"6585":[167,31,167,32],"6593":[167,33,167,64],"6601":[167,66,167,70],"6609":[167,66,167,75],"6617":[167,77,167,81],"6625":[167,92,167,95],"6633":[167,77,167,96],"6635":[167,77,167,91],"6641":[167,31,167,97],"6649":[167,13,167,98],"6651":[167,13,167,30],"6657":[167,13,167,99],"6665":[168,13,168,18],"6673":[168,13,168,28],"6681":[169,13,169,18],"6689":[169,13,169,28],"6697":[169,39,169,49],"6705":[169,50,169,51],"6713":[169,52,169,84],"6721":[169,86,169,90],"6729":[169,86,169,95],"6737":[169,97,169,101],"6745":[169,112,169,115],"6753":[169,97,169,116],"6755":[169,97,169,111],"6761":[169,50,169,117],"6769":[169,35,169,118],"6777":[169,13,169,119],"6779":[169,13,169,34],"6785":[169,13,169,120],"6793":[170,9,170,13],"6801":[170,9,170,23],"6803":[170,9,170,21],"6809":[170,9,170,24],"6817":[171,13,171,18],"6825":[171,13,171,28],"6833":[171,32,171,36],"6841":[171,47,171,54],"6849":[171,32,171,55],"6851":[171,32,171,46],"6857":[171,32,171,62],"6865":[171,65,171,66],"6873":[172,13,172,17],"6881":[172,23,172,30],"6889":[172,32,172,35],"6897":[172,37,172,41],"6905":[172,13,172,42],"6907":[172,13,172,22],"6913":[172,13,172,43],"6921":[173,13,173,18],"6929":[173,13,173,28],"6937":[174,13,174,23],"6945":[175,17,175,32],"6953":[175,33,175,37],"6961":[175,39,175,44],"6969":[175,17,175,45],"6977":[175,17,175,46],"6985":[174,24,176,14],"6993":[174,24,176,14],"7001":[174,24,176,14],"7009":[176,16,176,21],"7017":[176,16,176,39],"7025":[174,13,176,40],"7033":[174,13,176,41],"7041":[160,12,177,6],"7049":[160,12,177,6],"7057":[160,12,177,6],"7065":[160,12,177,6],"7073":[160,12,177,6],"7081":[160,12,177,6],"7089":[160,5,177,7],"7097":[159,20,178,2],"7105":[159,20,178,2],"7113":[159,20,178,2],"7121":[159,20,178,2],"7129":[159,20,178,2],"7137":[159,20,178,2],"7145":[159,20,178,2],"7153":[181,13,181,18],"7161":[181,13,181,24],"7169":[181,28,181,40],"7177":[181,44,181,49],"7185":[181,44,181,55],"7193":[181,59,181,68],"7201":[182,13,182,20],"7209":[182,13,182,20],"7217":[183,9,183,14],"7225":[183,23,183,35],"7233":[183,9,183,35],"7241":[183,9,183,36],"7249":[184,13,184,18],"7257":[184,13,184,43],"7265":[184,47,184,51],"7273":[185,13,185,29],"7281":[185,30,185,34],"7289":[185,36,185,40],"7297":[185,36,185,42],"7305":[185,44,185,51],"7313":[185,54,185,58],"7321":[185,53,185,59],"7329":[185,13,185,60],"7337":[185,13,185,61],"7345":[186,13,186,18],"7353":[186,13,186,25],"7361":[186,13,186,34],"7363":[186,13,186,32],"7369":[187,13,187,18],"7377":[187,13,187,25],"7385":[187,31,187,32],"7393":[187,33,187,64],"7401":[187,66,187,70],"7409":[187,66,187,75],"7417":[187,77,187,81],"7425":[187,92,187,95],"7433":[187,77,187,96],"7435":[187,77,187,91],"7441":[187,31,187,97],"7449":[187,13,187,98],"7451":[187,13,187,30],"7457":[187,13,187,99],"7465":[188,13,188,18],"7473":[188,13,188,28],"7481":[189,13,189,18],"7489":[189,13,189,28],"7497":[189,39,189,49],"7505":[189,50,189,51],"7513":[189,52,189,84],"7521":[189,86,189,90],"7529":[189,86,189,95],"7537":[189,97,189,101],"7545":[189,112,189,115],"7553":[189,97,189,116],"7555":[189,97,189,111],"7561":[189,50,189,117],"7569":[189,35,189,118],"7577":[189,13,189,119],"7579":[189,13,189,34],"7585":[189,13,189,120],"7593":[190,13,190,17],"7601":[190,28,190,35],"7609":[190,13,190,36],"7611":[190,13,190,27],"7617":[190,13,190,43],"7625":[190,46,190,47],"7633":[191,13,191,17],"7641":[191,23,191,30],"7649":[191,32,191,35],"7657":[191,37,191,41],"7665":[191,13,191,42],"7667":[191,13,191,22],"7673":[191,13,191,43],"7681":[192,13,192,18],"7689":[192,13,192,28],"7697":[193,13,193,23],"7705":[194,17,194,32],"7713":[194,33,194,37],"7721":[194,39,194,44],"7729":[194,17,194,45],"7737":[194,17,194,46],"7745":[193,24,195,14],"7753":[193,24,195,14],"7761":[193,24,195,14],"7769":[195,16,195,21],"7777":[195,16,195,39],"7785":[193,13,195,40],"7793":[193,13,195,41],"7801":[196,9,196,13],"7809":[196,9,196,23],"7811":[196,9,196,21],"7817":[196,9,196,24],"7825":[180,12,197,6],"7833":[180,12,197,6],"7841":[180,12,197,6],"7849":[180,12,197,6],"7857":[180,12,197,6],"7865":[180,12,197,6],"7873":[180,5,197,7],"7881":[179,25,198,2],"7889":[179,25,198,2],"7897":[179,25,198,2],"7905":[179,25,198,2],"7913":[179,25,198,2],"7921":[179,25,198,2],"7929":[179,25,198,2],"7937":[201,13,201,18],"7945":[201,13,201,24],"7953":[201,28,201,40],"7961":[201,44,201,49],"7969":[201,44,201,55],"7977":[201,59,201,68],"7985":[202,13,202,20],"7993":[202,13,202,20],"8001":[203,9,203,14],"8009":[203,23,203,35],"8017":[203,9,203,35],"8025":[203,9,203,36],"8033":[204,13,204,18],"8041":[204,13,204,43],"8049":[204,47,204,51],"8057":[205,13,205,29],"8065":[205,30,205,34],"8073":[205,36,205,40],"8081":[205,36,205,42],"8089":[205,44,205,53],"8097":[205,56,205,60],"8105":[205,55,205,61],"8113":[205,13,205,62],"8121":[205,13,205,63],"8129":[206,13,206,18],"8137":[206,13,206,25],"8145":[206,13,206,34],"8147":[206,13,206,32],"8153":[207,13,207,18],"8161":[207,13,207,25],"8169":[207,31,207,32],"8177":[207,33,207,54],"8185":[207,56,207,60],"8193":[207,56,207,65],"8201":[207,31,207,66],"8209":[207,13,207,67],"8211":[207,13,207,30],"8217":[207,13,207,68],"8225":[208,13,208,18],"8233":[208,13,208,28],"8241":[209,13,209,18],"8249":[209,13,209,28],"8257":[209,39,209,49],"8265":[209,50,209,51],"8273":[209,52,209,73],"8281":[209,75,209,79],"8289":[209,75,209,84],"8297":[209,50,209,85],"8305":[209,35,209,86],"8313":[209,13,209,87],"8315":[209,13,209,34],"8321":[209,13,209,88],"8329":[210,9,210,13],"8337":[210,19,210,28],"8345":[210,30,210,33],"8353":[210,35,210,39],"8361":[210,9,210,40],"8363":[210,9,210,18],"8369":[210,9,210,41],"8377":[211,13,211,18],"8385":[211,13,211,28],"8393":[212,13,212,23],"8401":[213,17,213,32],"8409":[213,33,213,37],"8417":[213,39,213,44],"8425":[213,17,213,45],"8433":[213,17,213,46],"8441":[212,24,214,14],"8449":[212,24,214,14],"8457":[212,24,214,14],"8465":[214,16,214,21],"8473":[214,16,214,39],"8481":[212,13,214,40],"8489":[212,13,214,41],"8497":[215,9,215,13],"8505":[215,9,215,23],"8507":[215,9,215,21],"8513":[215,9,215,24],"8521":[200,12,216,6],"8529":[200,12,216,6],"8537":[200,12,216,6],"8545":[200,12,216,6],"8553":[200,12,216,6],"8561":[200,12,216,6],"8569":[200,5,216,7],"8577":[199,22,217,2],"8585":[199,22,217,2],"8593":[199,22,217,2],"8601":[199,22,217,2],"8609":[199,22,217,2],"8617":[199,22,217,2],"8625":[199,22,217,2],"8633":[220,13,220,18],"8641":[220,13,220,24],"8649":[220,28,220,40],"8657":[220,44,220,49],"8665":[220,44,220,55],"8673":[220,59,220,68],"8681":[221,13,221,20],"8689":[221,13,221,20],"8697":[222,9,222,14],"8705":[222,23,222,35],"8713":[222,9,222,35],"8721":[222,9,222,36],"8729":[223,13,223,18],"8737":[223,13,223,43],"8745":[223,47,223,51],"8753":[224,13,224,29],"8761":[224,30,224,34],"8769":[224,36,224,40],"8777":[224,36,224,42],"8785":[224,44,224,51],"8793":[224,54,224,58],"8801":[224,53,224,59],"8809":[224,13,224,60],"8817":[224,13,224,61],"8825":[225,13,225,18],"8833":[225,13,225,25],"8841":[225,13,225,34],"8843":[225,13,225,32],"8849":[226,13,226,18],"8857":[226,13,226,25],"8865":[226,31,226,32],"8873":[226,33,226,51],"8881":[226,53,226,57],"8889":[226,53,226,62],"8897":[226,31,226,63],"8905":[226,13,226,64],"8907":[226,13,226,30],"8913":[226,13,226,65],"8921":[227,13,227,18],"8929":[227,13,227,28],"8937":[228,13,228,18],"8945":[228,13,228,28],"8953":[228,39,228,49],"8961":[228,50,228,51],"8969":[228,52,228,78],"8977":[228,80,228,84],"8985":[228,80,228,89],"8993":[228,50,228,90],"9001":[228,35,228,91],"9009":[228,13,228,92],"9011":[228,13,228,34],"9017":[228,13,228,93],"9025":[229,9,229,13],"9033":[229,19,229,26],"9041":[229,28,229,31],"9049":[229,33,229,37],"9057":[229,9,229,38],"9059":[229,9,229,18],"9065":[229,9,229,39],"9073":[230,13,230,18],"9081":[230,13,230,28],"9089":[231,13,231,23],"9097":[232,17,232,32],"9105":[232,33,232,37],"9113":[232,39,232,44],"9121":[232,17,232,45],"9129":[232,17,232,46],"9137":[231,24,233,14],"9145":[231,24,233,14],"9153":[231,24,233,14],"9161":[233,16,233,21],"9169":[233,16,233,39],"9177":[231,13,233,40],"9185":[231,13,233,41],"9193":[234,9,234,13],"9201":[234,9,234,23],"9203":[234,9,234,21],"9209":[234,9,234,24],"9217":[219,12,235,6],"9225":[219,12,235,6],"9233":[219,12,235,6],"9241":[219,12,235,6],"9249":[219,12,235,6],"9257":[219,12,235,6],"9265":[219,5,235,7],"9273":[218,20,236,2],"9281":[218,20,236,2],"9289":[218,20,236,2],"9297":[218,20,236,2],"9305":[218,20,236,2],"9313":[218,20,236,2],"9321":[218,20,236,2],"9329":[239,20,239,26],"9337":[239,32,239,37],"9345":[239,32,239,51],"9353":[239,20,239,52],"9355":[239,20,239,31],"9361":[239,20,239,52],"9369":[239,20,239,52],"9377":[240,13,240,17],"9385":[240,13,240,24],"9393":[240,28,240,29],"9401":[241,20,241,28],"9409":[241,29,241,33],"9417":[241,35,241,39],"9425":[241,20,241,40],"9433":[241,20,241,40],"9441":[241,13,241,41],"9449":[242,21,242,25],"9457":[242,21,242,32],"9465":[242,21,242,32],"9473":[242,21,242,32],"9481":[243,22,243,23],"9489":[243,22,243,23],"9497":[243,22,243,23],"9505":[243,25,243,26],"9513":[243,29,243,33],"9521":[243,29,243,40],"9537":[243,42,243,43],"9545":[243,42,243,45],"9561":[244,13,244,18],"9569":[244,13,244,32],"9577":[244,33,244,37],"9585":[244,38,244,39],"9593":[244,33,244,40],"9601":[244,13,244,41],"9609":[244,57,244,61],"9617":[244,63,244,68],"9625":[244,63,244,73],"9633":[245,25,245,30],"9641":[245,33,245,34],"9649":[245,25,245,34],"9657":[245,17,245,35],"9665":[246,21,246,26],"9673":[246,30,246,31],"9681":[247,28,247,36],"9689":[247,37,247,41],"9697":[247,43,247,47],"9705":[247,28,247,48],"9713":[247,28,247,48],"9721":[247,21,247,49],"9729":[244,75,249,14],"9737":[244,75,249,14],"9745":[244,75,249,14],"9753":[244,75,249,14],"9761":[244,75,249,14],"9769":[244,13,249,15],"9771":[244,13,244,56],"9777":[244,13,249,16],"9785":[238,32,251,6],"9793":[238,32,251,6],"9801":[238,32,251,6],"9809":[238,32,251,6],"9817":[238,32,251,6],"9825":[238,32,251,6],"9833":[238,32,251,6],"9841":[238,32,251,6],"9849":[238,32,251,6],"9857":[253,9,253,29],"9865":[254,29,254,33],"9873":[254,25,254,35],"9881":[254,25,254,45],"9883":[254,25,254,43],"9889":[254,25,254,45],"9897":[254,25,254,45],"9905":[255,13,255,17],"9913":[255,26,255,38],"9921":[255,52,255,56],"9929":[255,40,255,58],"9937":[256,21,256,24],"9945":[257,21,257,26],"9953":[257,35,257,47],"9961":[257,21,257,47],"9969":[257,21,257,48],"9977":[258,28,258,32],"9985":[258,38,258,45],"9993":[258,47,258,50],"10001":[258,52,258,56],"10009":[258,28,258,57],"10011":[258,28,258,37],"10017":[258,28,258,57],"10025":[258,21,258,58],"10033":[260,17,260,22],"10041":[260,47,260,51],"10049":[260,43,260,53],"10057":[260,43,260,63],"10059":[260,43,260,61],"10065":[260,66,260,71],"10073":[260,17,260,71],"10081":[260,17,260,72],"10089":[261,22,261,25],"10097":[262,21,262,26],"10105":[262,38,262,39],"10113":[262,38,262,46],"10121":[262,21,262,46],"10129":[262,21,262,47],"10137":[264,17,264,21],"10145":[264,27,264,37],"10153":[264,39,264,40],"10161":[264,39,264,47],"10169":[264,49,264,53],"10177":[264,17,264,54],"10179":[264,17,264,26],"10185":[264,17,264,55],"10193":[265,17,265,22],"10201":[265,45,265,70],"10209":[265,71,265,76],"10217":[265,71,265,85],"10225":[265,45,265,86],"10233":[265,17,265,86],"10241":[265,17,265,87],"10249":[266,17,266,22],"10257":[266,17,266,30],"10265":[266,53,266,58],"10273":[266,53,266,78],"10281":[266,17,266,78],"10289":[266,17,266,79],"10297":[267,21,267,26],"10305":[267,21,267,33],"10313":[267,21,267,42],"10315":[267,21,267,40],"10321":[268,21,268,26],"10329":[268,21,268,33],"10337":[268,39,268,40],"10345":[268,41,268,81],"10353":[268,83,268,87],"10361":[268,83,268,92],"10369":[268,94,268,98],"10377":[268,109,268,110],"10385":[268,109,268,117],"10393":[268,94,268,118],"10395":[268,94,268,108],"10401":[268,39,268,119],"10409":[268,21,268,120],"10411":[268,21,268,38],"10417":[268,21,268,121],"10425":[269,22,269,36],"10433":[269,37,269,42],"10441":[269,22,269,43],"10449":[269,47,269,52],"10457":[269,47,269,72],"10465":[269,76,269,80],"10473":[270,21,270,26],"10481":[270,35,270,47],"10489":[270,21,270,47],"10497":[270,21,270,48],"10505":[271,28,271,32],"10513":[271,38,271,45],"10521":[271,51,271,61],"10529":[271,62,271,92],"10537":[271,47,271,93],"10545":[271,95,271,99],"10553":[271,28,271,100],"10555":[271,28,271,37],"10561":[271,28,271,100],"10569":[271,21,271,101],"10577":[273,21,273,26],"10585":[273,21,273,35],"10593":[273,39,273,44],"10601":[273,39,273,53],"10609":[273,39,273,56],"10617":[274,21,274,26],"10625":[274,21,274,40],"10633":[274,48,274,53],"10641":[274,48,274,62],"10649":[274,48,274,65],"10657":[274,21,274,65],"10665":[274,21,274,66],"10673":[275,21,275,26],"10681":[275,21,275,51],"10689":[275,55,275,59],"10697":[276,21,276,26],"10705":[276,35,276,44],"10713":[276,21,276,44],"10721":[276,21,276,45],"10729":[277,28,277,32],"10737":[277,38,277,47],"10745":[277,49,277,53],"10753":[277,28,277,54],"10755":[277,28,277,37],"10761":[277,28,277,54],"10769":[277,21,277,55],"10777":[279,17,279,33],"10785":[279,34,279,38],"10793":[279,40,279,44],"10801":[279,40,279,46],"10809":[279,48,279,57],"10817":[279,60,279,64],"10825":[279,59,279,65],"10833":[280,21,280,26],"10841":[280,35,280,44],"10849":[280,21,280,44],"10857":[280,21,280,45],"10865":[281,28,281,32],"10873":[281,38,281,47],"10881":[281,49,281,53],"10889":[281,28,281,54],"10891":[281,28,281,37],"10897":[281,28,281,54],"10905":[281,21,281,55],"10913":[279,67,282,18],"10921":[279,67,282,18],"10929":[279,67,282,18],"10937":[279,67,282,18],"10945":[279,67,282,18],"10953":[279,17,282,19],"10961":[279,17,282,20],"10969":[255,60,283,14],"10977":[255,60,283,14],"10985":[255,60,283,14],"10993":[255,60,283,14],"11001":[255,60,283,14],"11009":[255,13,283,15],"11011":[255,13,255,25],"11017":[255,13,283,16],"11025":[253,30,284,10],"11033":[253,30,284,10],"11041":[253,30,284,10],"11049":[253,30,284,10],"11057":[253,9,284,11],"11065":[253,9,284,12],"11073":[252,12,285,6],"11081":[252,12,285,6],"11089":[252,12,285,6],"11097":[252,12,285,6],"11105":[252,12,285,6],"11113":[252,5,285,7],"11121":[237,22,286,2],"11129":[237,22,286,2],"11137":[237,22,286,2],"11145":[237,22,286,2],"11153":[237,22,286,2],"11161":[237,22,286,2],"11169":[237,22,286,2],"11177":[237,22,286,2],"11185":[288,9,288,10],"11193":[289,16,289,17],"11201":[289,16,289,27],"11203":[289,16,289,25],"11209":[289,16,289,27],"11217":[289,9,289,28],"11225":[290,12,290,17],"11233":[290,12,290,17],"11241":[290,5,290,18],"11249":[287,15,291,2],"11257":[287,15,291,2],"11265":[287,15,291,2],"11273":[287,15,291,2],"11281":[287,15,291,2],"11289":[287,15,291,2],"11297":[293,16,293,24],"11305":[293,28,293,38],"11313":[294,26,294,31],"11321":[294,26,294,56],"11329":[295,17,295,22],"11337":[295,17,295,47],"11345":[295,48,295,52],"11353":[295,17,295,53],"11361":[295,54,295,56],"11369":[295,17,295,57],"11377":[296,29,296,34],"11385":[296,29,296,59],"11393":[296,60,296,64],"11401":[296,29,296,65],"11409":[296,29,296,65],"11417":[296,29,296,65],"11425":[297,17,297,22],"11433":[297,23,297,25],"11441":[297,17,297,26],"11449":[297,33,297,38],"11457":[297,40,297,46],"11465":[297,17,297,47],"11467":[297,17,297,32],"11473":[297,17,297,48],"11481":[294,26,294,56],"11489":[294,9,299,10],"11497":[294,9,299,10],"11505":[300,9,300,16],"11513":[300,9,300,16],"11521":[302,24,302,30],"11529":[302,36,302,41],"11537":[302,36,302,66],"11545":[302,24,302,67],"11547":[302,24,302,35],"11553":[302,24,302,74],"11561":[302,24,302,74],"11569":[302,24,302,74],"11577":[303,9,303,21],"11585":[303,25,303,26],"11593":[304,16,304,24],"11601":[304,25,304,29],"11609":[304,31,304,35],"11617":[304,16,304,36],"11625":[304,16,304,36],"11633":[304,9,304,37],"11641":[305,22,305,27],"11649":[305,22,305,52],"11657":[306,13,306,18],"11665":[306,13,306,43],"11673":[306,44,306,48],"11681":[306,13,306,49],"11689":[306,50,306,52],"11697":[306,13,306,53],"11705":[307,25,307,30],"11713":[307,25,307,55],"11721":[307,56,307,60],"11729":[307,25,307,61],"11737":[307,25,307,61],"11745":[307,25,307,61],"11753":[308,27,308,33],"11761":[308,40,308,41],"11769":[308,27,308,42],"11771":[308,27,308,39],"11777":[308,27,308,42],"11785":[308,27,308,42],"11793":[309,13,309,20],"11801":[310,32,310,44],"11809":[310,47,310,48],"11817":[310,32,310,48],"11825":[310,17,310,49],"11833":[311,21,311,33],"11841":[311,37,311,38],"11849":[312,21,312,29],"11857":[312,30,312,34],"11865":[312,36,312,40],"11873":[312,21,312,41],"11881":[312,21,312,42],"11889":[309,26,314,14],"11897":[309,26,314,14],"11905":[309,26,314,14],"11913":[309,26,314,14],"11921":[309,26,314,14],"11929":[309,13,314,15],"11931":[309,13,309,25],"11937":[309,13,314,16],"11945":[315,13,315,18],"11953":[315,19,315,21],"11961":[315,13,315,22],"11969":[315,29,315,34],"11977":[315,36,315,43],"11985":[315,13,315,44],"11987":[315,13,315,28],"11993":[315,13,315,45],"12001":[305,22,305,52],"12009":[305,5,317,6],"12017":[305,5,317,6],"12025":[292,24,318,2],"12033":[292,24,318,2],"12041":[292,24,318,2],"12049":[292,24,318,2],"12057":[292,24,318,2],"12065":[292,24,318,2],"12073":[292,24,318,2],"12081":[292,24,318,2],"12089":[292,24,318,2],"12097":[292,24,318,2],"12105":[292,24,318,2],"12113":[292,24,318,2],"12121":[292,24,318,2],"12129":[292,24,318,2],"12137":[320,5,320,16],"12145":[321,5,321,21],"12153":[322,5,322,24],"12161":[323,5,323,16],"12169":[324,5,324,20],"12177":[325,5,325,11],"12185":[326,5,326,11],"12193":[327,5,327,11],"12201":[328,5,328,16],"12209":[329,5,329,28],"12217":[330,5,330,14],"12225":[331,5,331,24],"12233":[332,5,332,26],"12241":[333,5,333,20],"12249":[334,5,334,31],"12257":[335,5,335,10],"12265":[336,5,336,9],"12273":[337,5,337,11],"12281":[338,5,338,10],"12289":[339,5,339,25],"12297":[340,5,340,19],"12305":[319,19,341,2],"12313":[319,19,341,2],"12321":[319,19,341,2],"12329":[343,16,343,20],"12337":[343,16,343,20],"12345":[343,16,343,20],"12353":[344,5,344,17],"12361":[344,23,344,27],"12369":[344,5,344,28],"12371":[344,5,344,22],"12377":[344,5,344,29],"12385":[345,9,345,21],"12393":[345,25,345,29],"12401":[346,28,346,32],"12409":[346,33,346,42],"12417":[346,24,346,43],"12425":[346,24,346,43],"12433":[346,9,346,44],"12441":[348,26,348,33],"12449":[348,26,348,48],"12457":[348,52,348,54],"12465":[348,26,348,54],"12473":[348,26,348,54],"12481":[349,5,349,9],"12489":[350,18,350,25],"12497":[351,24,351,33],"12505":[351,20,351,35],"12513":[352,17,352,23],"12521":[352,24,352,32],"12529":[352,34,352,41],"12537":[352,17,352,42],"12545":[353,16,353,28],"12553":[354,27,354,34],"12561":[354,27,354,44],"12569":[354,48,354,57],"12577":[354,60,354,67],"12585":[354,60,354,77],"12593":[354,80,354,84],"12601":[355,25,355,39],"12609":[356,28,356,35],"12617":[356,28,356,53],"12625":[356,57,356,61],"12633":[357,27,357,34],"12641":[357,27,357,44],"12649":[357,48,357,57],"12657":[357,60,357,67],"12665":[357,60,357,77],"12673":[357,80,357,85],"12681":[358,32,358,46],"12689":[359,19,359,23],"12697":[360,35,360,42],"12705":[360,35,360,67],"12713":[361,24,361,31],"12721":[361,24,361,45],"12729":[361,49,361,51],"12745":[362,13,362,21],"12753":[362,13,362,23],"12769":[363,14,363,21],"12777":[363,14,363,25],"12785":[364,28,364,35],"12793":[364,28,364,53],"12801":[365,30,365,37],"12809":[365,30,365,57],"12817":[365,65,365,93],"12825":[365,61,365,95],"12833":[366,17,366,24],"12841":[366,17,366,38],"12849":[366,42,366,53],"12857":[367,23,367,35],"12865":[368,15,368,22],"12873":[368,15,368,27],"12881":[368,30,368,37],"12889":[368,30,368,42],"12897":[368,45,368,57],"12905":[369,15,369,19],"12913":[370,28,370,29],"12921":[372,19,372,26],"12929":[372,19,372,31],"12937":[373,19,373,26],"12945":[373,19,373,31],"12953":[374,19,374,26],"12961":[374,19,374,31],"12969":[374,34,374,35],"12977":[374,36,374,43],"12985":[374,45,374,52],"12993":[374,45,374,57],"13001":[374,59,374,66],"13009":[374,59,374,71],"13017":[374,34,374,72],"13025":[374,75,374,82],"13033":[374,75,374,87],"13041":[371,24,375,10],"13049":[349,14,376,6],"13057":[349,5,376,6],"13065":[349,5,376,7],"13073":[377,13,377,17],"13081":[377,13,377,19],"13089":[377,13,377,19],"13097":[377,13,377,19],"13105":[378,5,378,12],"13113":[378,20,378,21],"13121":[378,20,378,26],"13129":[378,5,378,26],"13137":[378,5,378,27],"13145":[379,5,379,16],"13153":[379,17,379,21],"13161":[379,23,379,29],"13169":[379,31,379,37],"13177":[379,39,379,40],"13185":[379,39,379,54],"13193":[379,56,379,58],"13201":[379,5,379,59],"13209":[379,5,379,60],"13217":[380,5,380,16],"13225":[380,17,380,21],"13233":[380,23,380,29],"13241":[380,31,380,37],"13249":[380,39,380,40],"13257":[380,39,380,48],"13265":[380,50,380,52],"13273":[380,5,380,53],"13281":[380,5,380,54],"13289":[381,5,381,16],"13297":[381,17,381,21],"13305":[381,23,381,44],"13313":[381,46,381,67],"13321":[381,69,381,70],"13329":[381,69,381,78],"13337":[381,80,381,82],"13345":[381,5,381,83],"13353":[381,5,381,84],"13361":[382,5,382,22],"13369":[382,23,382,27],"13377":[382,29,382,33],"13385":[382,35,382,36],"13393":[382,35,382,39],"13401":[382,5,382,40],"13409":[382,5,382,41],"13417":[383,5,383,9],"13425":[383,26,383,35],"13433":[383,41,383,48],"13441":[383,37,383,50],"13449":[383,5,383,51],"13451":[383,5,383,25],"13457":[383,5,383,52],"13465":[384,5,384,9],"13473":[384,26,384,32],"13481":[384,38,384,42],"13489":[384,34,384,44],"13497":[384,5,384,45],"13499":[384,5,384,25],"13505":[384,5,384,46],"13513":[385,5,385,9],"13521":[385,26,385,33],"13529":[385,39,385,44],"13537":[385,35,385,46],"13545":[385,5,385,47],"13547":[385,5,385,25],"13553":[385,5,385,48],"13561":[386,5,386,9],"13569":[386,26,386,34],"13577":[386,40,386,46],"13585":[386,36,386,48],"13593":[386,5,386,49],"13595":[386,5,386,25],"13601":[386,5,386,50],"13609":[387,5,387,9],"13617":[387,26,387,32],"13625":[387,38,387,42],"13633":[387,34,387,44],"13641":[387,5,387,45],"13643":[387,5,387,25],"13649":[387,5,387,46],"13657":[388,5,388,9],"13665":[388,26,388,39],"13673":[388,45,388,54],"13681":[388,41,388,56],"13689":[388,5,388,57],"13691":[388,5,388,25],"13697":[388,5,388,58],"13705":[342,14,389,2],"13713":[342,14,389,2],"13721":[342,14,389,2],"13729":[342,14,389,2],"13737":[342,14,389,2],"13745":[342,14,389,2],"13753":[342,14,389,2],"13761":[342,14,389,2],"13769":[342,14,389,2],"13777":[390,1,390,9],"13785":[390,10,390,16],"13793":[390,18,390,30],"13801":[390,1,390,31],"13809":[390,1,390,32],"13817":[391,1,391,7],"13825":[391,1,391,17],"13833":[392,17,392,21],"13841":[392,17,392,21],"13849":[392,17,392,21],"13857":[393,9,393,13],"13865":[393,17,393,22],"13873":[394,17,394,24],"13881":[394,25,394,31],"13889":[394,17,394,32],"13897":[394,17,394,41],"13899":[394,17,394,39],"13905":[394,17,394,46],"13913":[394,17,394,46],"13921":[394,9,394,47],"13929":[395,16,395,20],"13937":[395,24,395,28],"13945":[396,17,396,24],"13953":[396,25,396,31],"13961":[396,17,396,32],"13969":[396,17,396,39],"13971":[396,17,396,37],"13977":[396,17,396,44],"13985":[396,17,396,44],"13993":[396,9,396,45],"14001":[398,19,398,29],"14009":[398,30,398,31],"14017":[398,32,398,56],"14025":[398,58,398,62],"14033":[398,30,398,63],"14041":[398,15,398,64],"14049":[398,15,398,64],"14057":[398,9,398,65],"14065":[400,5,400,9],"14073":[400,5,400,11],"14081":[400,5,400,19],"14089":[400,31,400,36],"14097":[400,37,400,46],"14105":[400,27,400,47],"14113":[400,5,400,47],"14121":[400,5,400,48],"14129":[391,38,401,2],"14137":[391,38,401,2],"14145":[391,38,401,2],"14153":[391,38,401,2],"14161":[391,38,401,2],"14169":[391,1,401,2],"14177":[391,1,401,3],"14185":[402,1,402,7],"14193":[402,1,402,17],"14201":[403,5,403,9],"14209":[403,5,403,11],"14217":[403,5,403,16],"14225":[403,32,403,46],"14233":[403,5,403,47],"14235":[403,5,403,31],"14241":[403,5,403,48],"14249":[402,35,404,2],"14257":[402,35,404,2],"14265":[402,35,404,2],"14273":[402,35,404,2],"14281":[402,1,404,2],"14289":[402,1,404,3],"14297":[405,1,405,7],"14305":[405,1,405,17],"14313":[406,12,406,16],"14321":[406,12,406,18],"14329":[406,12,406,27],"14337":[406,12,406,27],"14345":[406,5,406,28],"14353":[405,33,407,2],"14361":[405,33,407,2],"14369":[405,33,407,2],"14377":[405,1,407,2],"14385":[405,1,407,3],"14393":[408,1,408,7],"14401":[408,1,408,17],"14409":[409,16,409,20],"14417":[409,16,409,20],"14425":[409,16,409,20],"14433":[410,16,410,24],"14441":[410,28,410,30],"14449":[410,16,410,30],"14457":[410,5,410,31],"14465":[411,16,411,24],"14473":[411,16,411,37],"14481":[411,41,411,50],"14489":[412,9,412,13],"14497":[412,9,412,15],"14505":[412,9,412,23],"14513":[412,39,412,47],"14521":[412,39,412,60],"14529":[412,9,412,60],"14537":[412,9,412,61],"14545":[414,9,414,13],"14553":[414,9,414,15],"14561":[414,9,414,20],"14569":[415,9,415,13],"14577":[415,9,415,15],"14585":[415,9,415,20],"14593":[415,9,415,30],"14595":[415,9,415,28],"14601":[415,9,415,31],"14609":[416,9,416,13],"14617":[416,9,416,15],"14625":[416,23,416,27],"14633":[416,9,416,27],"14641":[416,9,416,28],"14649":[418,5,418,9],"14657":[418,5,418,11],"14665":[418,20,418,30],"14673":[418,5,418,30],"14681":[418,5,418,31],"14689":[419,10,419,14],"14697":[419,10,419,16],"14705":[419,10,419,21],"14713":[420,9,420,13],"14721":[420,9,420,15],"14729":[420,9,420,23],"14737":[420,41,420,55],"14745":[420,56,420,60],"14753":[420,62,420,66],"14761":[420,62,420,68],"14769":[420,41,420,69],"14777":[420,9,420,69],"14785":[420,9,420,70],"14793":[421,9,421,13],"14801":[421,9,421,15],"14809":[421,27,421,31],"14817":[421,32,421,36],"14825":[421,32,421,38],"14833":[421,32,421,46],"14841":[421,23,421,47],"14849":[421,9,421,47],"14857":[421,9,421,48],"14865":[423,5,423,9],"14873":[423,5,423,11],"14881":[423,5,423,16],"14889":[423,22,423,31],"14897":[423,33,423,47],"14905":[423,48,423,52],"14913":[423,54,423,58],"14921":[423,54,423,60],"14929":[423,33,423,61],"14937":[423,5,423,62],"14939":[423,5,423,21],"14945":[423,5,423,63],"14953":[424,5,424,9],"14961":[424,5,424,11],"14969":[424,5,424,16],"14977":[424,22,424,29],"14985":[424,31,424,43],"14993":[424,44,424,48],"15001":[424,50,424,54],"15009":[424,50,424,56],"15017":[424,31,424,57],"15025":[424,5,424,58],"15027":[424,5,424,21],"15033":[424,5,424,59],"15041":[425,5,425,9],"15049":[425,5,425,11],"15057":[425,5,425,16],"15065":[425,22,425,29],"15073":[425,31,425,43],"15081":[425,44,425,48],"15089":[425,50,425,54],"15097":[425,50,425,56],"15105":[425,31,425,57],"15113":[425,5,425,58],"15115":[425,5,425,21],"15121":[425,5,425,59],"15129":[426,5,426,9],"15137":[426,5,426,11],"15145":[426,5,426,16],"15153":[426,22,426,31],"15161":[426,33,426,47],"15169":[426,48,426,52],"15177":[426,54,426,58],"15185":[426,54,426,60],"15193":[426,33,426,61],"15201":[426,5,426,62],"15203":[426,5,426,21],"15209":[426,5,426,63],"15217":[427,5,427,9],"15225":[427,5,427,11],"15233":[427,5,427,16],"15241":[427,22,427,34],"15249":[427,36,427,53],"15257":[427,54,427,58],"15265":[427,60,427,64],"15273":[427,60,427,66],"15281":[427,36,427,67],"15289":[427,5,427,68],"15291":[427,5,427,21],"15297":[427,5,427,69],"15305":[428,5,428,9],"15313":[428,5,428,11],"15321":[428,5,428,16],"15329":[428,5,428,26],"15331":[428,5,428,24],"15337":[428,5,428,27],"15345":[408,28,429,2],"15353":[408,28,429,2],"15361":[408,28,429,2],"15369":[408,28,429,2],"15377":[408,28,429,2],"15385":[408,1,429,2],"15393":[408,1,429,3],"15401":[430,1,430,7],"15409":[430,1,430,17],"15417":[431,16,431,20],"15425":[431,16,431,20],"15433":[431,16,431,20],"15441":[432,9,432,13],"15449":[432,9,432,15],"15457":[432,9,432,22],"15465":[432,9,432,32],"15467":[432,9,432,30],"15473":[433,9,433,13],"15481":[433,9,433,15],"15489":[433,9,433,22],"15497":[433,29,433,30],"15505":[433,31,433,60],"15513":[433,62,433,66],"15521":[433,62,433,71],"15529":[433,29,433,72],"15537":[433,9,433,73],"15539":[433,9,433,28],"15545":[433,9,433,74],"15553":[434,9,434,18],"15561":[434,22,434,26],"15569":[434,37,434,44],"15577":[434,22,434,45],"15579":[434,22,434,36],"15585":[434,22,434,52],"15593":[434,55,434,56],"15601":[435,9,435,13],"15609":[435,19,435,26],"15617":[435,28,435,32],"15625":[435,34,435,38],"15633":[435,9,435,39],"15635":[435,9,435,18],"15641":[435,9,435,40],"15649":[437,9,437,20],"15657":[438,9,438,13],"15665":[438,19,438,28],"15673":[438,30,438,34],"15681":[438,9,438,35],"15683":[438,9,438,18],"15689":[438,9,438,36],"15697":[439,5,439,9],"15705":[439,5,439,11],"15713":[439,20,439,29],"15721":[439,5,439,29],"15729":[439,5,439,30],"15737":[440,5,440,9],"15745":[440,5,440,11],"15753":[440,5,440,16],"15761":[440,5,440,26],"15763":[440,5,440,24],"15769":[440,5,440,27],"15777":[441,9,441,13],"15785":[441,9,441,15],"15793":[441,9,441,25],"15801":[442,9,442,13],"15809":[442,9,442,15],"15817":[442,9,442,25],"15825":[442,36,442,46],"15833":[442,47,442,48],"15841":[442,49,442,75],"15849":[442,77,442,81],"15857":[442,77,442,86],"15865":[442,47,442,87],"15873":[442,32,442,88],"15881":[442,9,442,89],"15883":[442,9,442,31],"15889":[442,9,442,90],"15897":[430,28,443,2],"15905":[430,28,443,2],"15913":[430,28,443,2],"15921":[430,28,443,2],"15929":[430,28,443,2],"15937":[430,28,443,2],"15945":[430,1,443,2],"15953":[430,1,443,3],"15961":[444,1,444,7],"15969":[444,1,444,17],"15977":[445,16,445,20],"15985":[445,16,445,20],"15993":[445,16,445,20],"16001":[446,9,446,13],"16009":[446,9,446,15],"16017":[446,9,446,20],"16025":[447,16,447,20],"16033":[447,16,447,22],"16041":[447,16,447,27],"16049":[447,16,447,41],"16051":[447,16,447,39],"16057":[447,16,447,41],"16065":[447,9,447,42],"16073":[448,12,448,17],"16081":[448,12,448,17],"16089":[448,5,448,18],"16097":[444,32,449,2],"16105":[444,32,449,2],"16113":[444,32,449,2],"16121":[444,32,449,2],"16129":[444,1,449,2],"16137":[444,1,449,3],"16145":[450,1,450,7],"16153":[450,1,450,17],"16161":[451,12,451,16],"16169":[451,12,451,18],"16177":[451,12,451,24],"16185":[451,28,451,37],"16193":[451,12,451,37],"16201":[451,5,451,38],"16209":[450,32,452,2],"16217":[450,32,452,2],"16225":[450,32,452,2],"16233":[450,1,452,2],"16241":[450,1,452,3],"16249":[454,21,454,26],"16257":[454,27,454,31],"16265":[454,27,454,33],"16273":[454,27,454,38],"16281":[454,40,454,42],"16289":[454,44,454,47],"16297":[454,49,454,61],"16305":[454,17,454,62],"16313":[454,17,454,62],"16321":[454,17,454,62],"16329":[455,5,455,10],"16337":[455,21,455,28],"16345":[455,29,455,36],"16353":[455,29,455,51],"16361":[455,21,455,52],"16369":[455,5,455,52],"16377":[455,5,455,53],"16385":[456,9,456,13],"16393":[456,9,456,15],"16401":[456,9,456,40],"16409":[456,44,456,48],"16417":[457,9,457,25],"16425":[457,26,457,30],"16433":[457,32,457,36],"16441":[457,32,457,38],"16449":[457,40,457,56],"16457":[458,13,458,17],"16465":[459,13,459,18],"16473":[460,17,460,21],"16481":[460,13,460,23],"16489":[457,58,461,10],"16497":[457,9,461,11],"16505":[457,9,461,12],"16513":[462,22,462,29],"16521":[462,22,462,40],"16529":[462,44,462,48],"16537":[462,44,462,50],"16545":[462,44,462,55],"16553":[462,60,462,67],"16561":[462,44,462,68],"16563":[462,44,462,59],"16569":[462,22,462,68],"16577":[462,22,462,68],"16585":[463,11,463,21],"16593":[463,25,463,35],"16601":[463,25,463,49],"16603":[463,25,463,47],"16609":[464,16,464,24],"16617":[464,29,464,39],"16625":[464,40,464,41],"16633":[464,42,464,80],"16641":[464,82,464,86],"16649":[464,82,464,91],"16657":[464,40,464,92],"16665":[464,25,464,93],"16673":[464,16,464,94],"16681":[464,16,464,94],"16689":[464,9,464,95],"16697":[466,9,466,13],"16705":[466,9,466,15],"16713":[466,9,466,22],"16721":[466,9,466,32],"16723":[466,9,466,30],"16729":[467,20,467,30],"16737":[467,20,467,39],"16739":[467,20,467,37],"16745":[467,20,467,39],"16753":[467,20,467,39],"16761":[468,9,468,13],"16769":[468,9,468,15],"16777":[468,9,468,22],"16785":[468,29,468,30],"16793":[468,31,468,96],"16801":[468,98,468,102],"16809":[468,113,468,116],"16817":[468,98,468,117],"16819":[468,98,468,112],"16825":[468,119,468,123],"16833":[468,119,468,126],"16841":[468,128,468,132],"16849":[468,128,468,137],"16857":[468,139,468,143],"16865":[468,139,468,148],"16873":[468,29,468,149],"16881":[468,9,468,150],"16883":[468,9,468,28],"16889":[468,9,468,151],"16897":[470,9,470,14],"16905":[471,27,471,31],"16913":[471,27,471,33],"16921":[471,27,471,38],"16929":[471,27,471,47],"16931":[471,27,471,45],"16937":[471,27,471,47],"16945":[471,27,471,47],"16953":[472,21,472,32],"16961":[472,21,472,39],"16969":[472,21,472,39],"16977":[472,21,472,39],"16985":[473,21,473,25],"16993":[473,21,473,25],"17001":[473,21,473,25],"17009":[474,22,474,23],"17017":[474,22,474,23],"17025":[474,22,474,23],"17033":[474,25,474,26],"17041":[474,29,474,40],"17049":[474,29,474,47],"17065":[474,49,474,50],"17073":[474,49,474,52],"17089":[476,17,476,22],"17097":[476,17,476,37],"17099":[476,17,476,35],"17105":[476,17,476,38],"17113":[477,17,477,28],"17121":[477,29,477,30],"17129":[477,17,477,31],"17137":[477,38,477,43],"17145":[477,38,477,51],"17147":[477,38,477,49],"17153":[477,17,477,52],"17155":[477,17,477,37],"17161":[477,17,477,53],"17169":[479,25,479,30],"17177":[479,33,479,34],"17185":[479,25,479,34],"17193":[479,17,479,35],"17201":[480,21,480,26],"17209":[480,30,480,31],"17217":[481,28,481,36],"17225":[481,37,481,47],"17233":[481,55,481,58],"17241":[481,37,481,59],"17243":[481,37,481,54],"17249":[481,28,481,60],"17257":[481,28,481,60],"17265":[481,21,481,61],"17273":[478,15,482,14],"17281":[483,13,483,17],"17289":[483,13,483,19],"17297":[483,13,483,29],"17305":[483,39,483,44],"17313":[483,39,483,54],"17321":[484,21,484,24],"17329":[485,29,485,32],"17337":[485,29,485,32],"17345":[485,21,485,33],"17353":[486,25,486,30],"17361":[486,33,486,34],"17369":[486,25,486,34],"17377":[486,17,486,35],"17385":[487,21,487,26],"17393":[487,30,487,31],"17401":[488,21,488,37],"17409":[488,38,488,42],"17417":[488,44,488,48],"17425":[488,44,488,50],"17433":[488,52,488,66],"17441":[489,25,489,29],"17449":[490,25,490,30],"17457":[491,25,491,31],"17465":[492,29,492,33],"17473":[492,25,492,35],"17481":[488,68,493,22],"17489":[488,21,493,23],"17497":[488,21,493,24],"17505":[494,25,494,30],"17513":[495,32,495,40],"17521":[495,41,495,51],"17529":[495,59,495,64],"17537":[495,41,495,65],"17539":[495,41,495,58],"17545":[495,32,495,66],"17553":[495,32,495,66],"17561":[495,25,495,67],"17569":[497,25,497,33],"17577":[497,34,497,38],"17585":[497,44,497,57],"17593":[497,58,497,64],"17601":[497,58,497,74],"17609":[497,75,497,76],"17617":[497,58,497,77],"17625":[497,79,497,90],"17633":[497,40,497,91],"17641":[497,25,497,92],"17649":[497,25,497,93],"17657":[499,25,499,32],"17665":[500,35,500,38],"17673":[500,35,500,38],"17681":[500,29,500,39],"17689":[499,42,501,26],"17697":[499,42,501,26],"17705":[499,42,501,26],"17713":[499,25,501,27],"17715":[499,25,499,41],"17721":[499,25,501,28],"17729":[498,23,502,22],"17737":[483,56,504,14],"17745":[483,56,504,14],"17753":[483,56,504,14],"17761":[483,56,504,14],"17769":[483,56,504,14],"17777":[483,13,504,15],"17779":[483,13,483,38],"17785":[483,13,504,16],"17793":[506,9,506,16],"17801":[506,9,506,16],"17809":[509,9,509,19],"17817":[509,26,509,31],"17825":[509,26,509,39],"17827":[509,26,509,37],"17833":[509,9,509,40],"17835":[509,9,509,25],"17841":[509,9,509,41],"17849":[511,16,511,24],"17857":[511,25,511,35],"17865":[511,43,511,46],"17873":[511,25,511,47],"17875":[511,25,511,42],"17881":[511,16,511,48],"17889":[511,16,511,48],"17897":[511,9,511,49],"17905":[510,7,512,6],"17913":[513,5,513,9],"17921":[513,5,513,11],"17929":[513,5,513,21],"17937":[513,31,513,36],"17945":[513,31,513,46],"17953":[514,9,514,25],"17961":[514,26,514,30],"17969":[514,32,514,36],"17977":[514,32,514,38],"17985":[514,40,514,54],"17993":[515,13,515,17],"18001":[516,13,516,16],"18009":[517,13,517,19],"18017":[518,17,518,21],"18025":[518,13,518,23],"18033":[514,56,519,10],"18041":[514,9,519,11],"18049":[514,9,519,12],"18057":[520,13,520,16],"18065":[521,20,521,28],"18073":[521,29,521,32],"18081":[521,20,521,33],"18089":[521,20,521,33],"18097":[521,13,521,34],"18105":[522,13,522,19],"18113":[522,13,522,29],"18121":[522,30,522,31],"18129":[522,13,522,32],"18137":[522,33,522,39],"18145":[522,13,522,40],"18153":[522,44,522,50],"18161":[522,44,522,60],"18169":[522,61,522,62],"18177":[522,44,522,63],"18185":[522,64,522,72],"18193":[522,44,522,73],"18201":[522,77,522,83],"18209":[522,77,522,93],"18217":[522,94,522,95],"18225":[522,77,522,96],"18233":[522,97,522,102],"18241":[522,77,522,103],"18249":[522,107,522,113],"18257":[522,107,522,123],"18265":[522,124,522,125],"18273":[522,107,522,126],"18281":[522,127,522,133],"18289":[522,107,522,134],"18297":[523,20,523,28],"18305":[523,29,523,39],"18313":[523,47,523,53],"18321":[523,47,523,63],"18329":[523,64,523,65],"18337":[523,47,523,66],"18345":[523,29,523,67],"18347":[523,29,523,46],"18353":[523,20,523,68],"18361":[523,20,523,68],"18369":[523,13,523,69],"18377":[525,13,525,21],"18385":[525,22,525,26],"18393":[525,32,525,45],"18401":[525,46,525,52],"18409":[525,46,525,62],"18417":[525,63,525,64],"18425":[525,46,525,65],"18433":[525,67,525,77],"18441":[525,28,525,78],"18449":[525,13,525,79],"18457":[525,13,525,80],"18465":[527,13,527,20],"18473":[528,23,528,26],"18481":[528,23,528,26],"18489":[528,17,528,27],"18497":[527,30,529,14],"18505":[527,30,529,14],"18513":[527,30,529,14],"18521":[527,13,529,15],"18523":[527,13,527,29],"18529":[527,13,529,16],"18537":[526,11,530,10],"18545":[513,48,531,6],"18553":[513,48,531,6],"18561":[513,48,531,6],"18569":[513,48,531,6],"18577":[513,48,531,6],"18585":[513,5,531,7],"18587":[513,5,513,30],"18593":[513,5,531,8],"18601":[453,30,532,2],"18609":[453,30,532,2],"18617":[453,30,532,2],"18625":[453,30,532,2],"18633":[453,30,532,2],"18641":[453,30,532,2],"18649":[453,30,532,2],"18657":[453,30,532,2],"18665":[453,30,532,2],"18673":[453,30,532,2],"18681":[453,30,532,2],"18689":[453,30,532,2],"18697":[453,30,532,2],"18705":[453,30,532,2],"18713":[453,30,532,2],"18721":[453,30,532,2],"18729":[453,30,532,2],"18737":[453,30,532,2],"18745":[453,30,532,2],"18753":[533,1,533,7],"18761":[533,1,533,17],"18769":[534,16,534,23],"18777":[534,27,534,37],"18785":[535,20,535,27],"18793":[535,20,535,27],"18801":[535,39,535,41],"18809":[535,39,535,41],"18817":[535,9,535,27],"18825":[535,9,535,42],"18833":[536,16,536,20],"18841":[536,16,536,20],"18849":[536,16,536,20],"18857":[537,9,537,13],"18865":[537,9,537,15],"18873":[537,9,537,21],"18881":[537,25,537,34],"18889":[538,16,538,24],"18897":[538,29,538,39],"18905":[538,40,538,41],"18913":[538,42,538,66],"18921":[538,40,538,67],"18929":[538,25,538,68],"18937":[538,16,538,69],"18945":[538,16,538,69],"18953":[538,9,538,70],"18961":[539,15,539,22],"18969":[539,26,539,28],"18977":[539,15,539,28],"18985":[539,5,539,29],"18993":[540,9,540,16],"19001":[540,9,540,31],"19009":[540,37,540,44],"19017":[540,37,540,59],"19025":[540,71,540,85],"19033":[541,19,541,24],"19041":[541,25,541,79],"19049":[541,15,541,80],"19057":[541,15,541,80],"19065":[541,9,541,81],"19073":[543,9,543,13],"19081":[543,9,543,15],"19089":[543,9,543,22],"19097":[543,9,543,32],"19099":[543,9,543,30],"19105":[544,9,544,13],"19113":[544,9,544,15],"19121":[544,9,544,22],"19129":[544,29,544,30],"19137":[544,31,544,66],"19145":[544,68,544,72],"19153":[545,17,545,19],"19161":[546,18,546,21],"19169":[547,22,547,34],"19177":[547,35,547,46],"19185":[547,48,547,55],"19193":[547,22,547,56],"19201":[544,83,548,10],"19209":[544,68,548,11],"19211":[544,68,544,82],"19217":[548,13,548,17],"19225":[548,13,548,22],"19233":[544,29,548,23],"19241":[544,9,548,24],"19243":[544,9,544,28],"19249":[544,9,548,25],"19257":[549,10,549,14],"19265":[549,10,549,28],"19267":[549,10,549,26],"19273":[549,32,549,36],"19281":[549,32,549,38],"19289":[549,32,549,56],"19297":[549,60,549,64],"19305":[550,20,550,39],"19313":[550,40,550,48],"19321":[550,20,550,49],"19329":[550,20,550,49],"19337":[550,9,550,50],"19345":[551,16,551,20],"19353":[551,16,551,22],"19361":[551,16,551,40],"19369":[551,45,551,54],"19377":[551,56,551,58],"19385":[551,60,551,63],"19393":[551,65,551,72],"19401":[551,74,551,82],"19409":[551,16,551,83],"19411":[551,16,551,44],"19417":[551,16,551,83],"19425":[551,9,551,84],"19433":[553,10,553,14],"19441":[553,10,553,16],"19449":[553,10,553,21],"19457":[553,10,553,35],"19459":[553,10,553,33],"19465":[554,16,554,24],"19473":[554,29,554,39],"19481":[554,40,554,41],"19489":[554,42,554,80],"19497":[554,82,554,86],"19505":[554,82,554,91],"19513":[554,40,554,92],"19521":[554,25,554,93],"19529":[554,16,554,94],"19537":[554,16,554,94],"19545":[554,9,554,95],"19553":[556,24,556,31],"19561":[556,24,556,37],"19569":[556,41,556,50],"19577":[556,53,556,60],"19585":[556,53,556,66],"19593":[556,69,556,74],"19601":[556,17,556,74],"19609":[556,17,556,74],"19617":[557,28,557,35],"19625":[557,28,557,45],"19633":[557,49,557,58],"19641":[557,61,557,68],"19649":[557,61,557,78],"19657":[557,81,557,86],"19665":[557,21,557,86],"19673":[557,21,557,86],"19681":[558,37,558,44],"19689":[558,37,558,63],"19697":[558,67,558,76],"19705":[558,79,558,86],"19713":[558,79,558,105],"19721":[558,108,558,113],"19729":[558,30,558,113],"19737":[558,30,558,113],"19745":[559,34,559,41],"19753":[559,34,559,57],"19761":[559,61,559,70],"19769":[559,73,559,80],"19777":[559,73,559,96],"19785":[559,99,559,104],"19793":[559,27,559,104],"19801":[559,27,559,104],"19809":[561,23,561,24],"19817":[562,26,562,27],"19825":[563,20,563,29],"19833":[560,24,564,6],"19841":[560,24,564,6],"19849":[560,24,564,6],"19857":[565,9,565,27],"19865":[566,9,566,21],"19873":[566,43,566,61],"19881":[566,9,566,61],"19889":[566,9,566,62],"19897":[567,9,567,24],"19905":[568,9,568,21],"19913":[568,40,568,55],"19921":[568,9,568,55],"19929":[568,9,568,56],"19937":[569,10,569,15],"19945":[569,24,569,27],"19953":[569,10,569,28],"19955":[569,10,569,23],"19961":[570,16,570,38],"19969":[570,39,570,43],"19977":[570,45,570,47],"19985":[570,49,570,52],"19993":[570,54,570,66],"20001":[570,68,570,75],"20009":[570,77,570,82],"20017":[570,84,570,92],"20025":[570,16,570,93],"20033":[570,16,570,93],"20041":[570,9,570,94],"20049":[572,23,572,28],"20057":[572,29,572,32],"20065":[572,29,572,39],"20073":[572,19,572,40],"20081":[572,19,572,40],"20089":[572,19,572,40],"20097":[573,18,573,19],"20105":[573,18,573,19],"20113":[573,18,573,19],"20121":[573,21,573,22],"20129":[573,25,573,28],"20137":[573,25,573,35],"20153":[573,37,573,38],"20161":[573,37,573,40],"20177":[574,9,574,16],"20185":[574,17,574,18],"20193":[574,26,574,31],"20201":[574,32,574,36],"20209":[574,32,574,38],"20217":[574,32,574,43],"20225":[574,45,574,47],"20233":[574,49,574,52],"20241":[574,53,574,54],"20249":[574,49,574,55],"20257":[574,57,574,69],"20265":[574,22,574,70],"20273":[574,9,574,70],"20281":[574,9,574,71],"20289":[575,9,575,16],"20297":[575,17,575,18],"20305":[575,9,575,19],"20313":[575,30,575,37],"20321":[575,38,575,45],"20329":[575,38,575,60],"20337":[575,30,575,61],"20345":[575,9,575,61],"20353":[575,9,575,62],"20361":[577,9,577,13],"20369":[577,9,577,15],"20377":[577,9,577,40],"20385":[577,44,577,48],"20393":[578,9,578,25],"20401":[578,26,578,30],"20409":[578,32,578,36],"20417":[578,32,578,38],"20425":[578,40,578,56],"20433":[579,13,579,17],"20441":[580,13,580,20],"20449":[581,17,581,21],"20457":[581,13,581,23],"20465":[578,58,582,10],"20473":[578,9,582,11],"20481":[578,9,582,12],"20489":[584,22,584,29],"20497":[584,22,584,40],"20505":[584,44,584,48],"20513":[584,44,584,50],"20521":[584,44,584,55],"20529":[584,60,584,67],"20537":[584,44,584,68],"20539":[584,44,584,59],"20545":[584,22,584,68],"20553":[584,22,584,68],"20561":[585,10,585,20],"20569":[585,10,585,34],"20571":[585,10,585,32],"20577":[586,16,586,24],"20585":[586,29,586,39],"20593":[586,40,586,41],"20601":[586,42,586,80],"20609":[586,82,586,86],"20617":[586,82,586,91],"20625":[586,40,586,92],"20633":[586,25,586,93],"20641":[586,16,586,94],"20649":[586,16,586,94],"20657":[586,9,586,95],"20665":[588,9,588,13],"20673":[588,9,588,15],"20681":[588,9,588,22],"20689":[588,9,588,32],"20691":[588,9,588,30],"20697":[589,20,589,30],"20705":[589,20,589,39],"20707":[589,20,589,37],"20713":[589,20,589,39],"20721":[589,20,589,39],"20729":[590,9,590,13],"20737":[590,9,590,15],"20745":[590,9,590,22],"20753":[590,29,590,30],"20761":[590,31,590,96],"20769":[590,98,590,102],"20777":[590,113,590,120],"20785":[590,98,590,121],"20787":[590,98,590,112],"20793":[590,123,590,127],"20801":[590,123,590,130],"20809":[590,132,590,136],"20817":[590,132,590,141],"20825":[590,143,590,147],"20833":[590,143,590,152],"20841":[590,29,590,153],"20849":[590,9,590,154],"20851":[590,9,590,28],"20857":[590,9,590,155],"20865":[592,20,592,25],"20873":[592,20,592,25],"20881":[592,20,592,25],"20889":[593,26,593,33],"20897":[593,26,593,40],"20905":[593,26,593,40],"20913":[593,26,593,40],"20921":[594,19,594,21],"20929":[594,19,594,21],"20937":[594,19,594,21],"20945":[595,18,595,19],"20953":[595,18,595,19],"20961":[595,18,595,19],"20969":[595,21,595,22],"20977":[595,25,595,32],"20985":[595,25,595,39],"21001":[595,41,595,42],"21009":[595,41,595,44],"21025":[596,21,596,28],"21033":[596,29,596,30],"21041":[596,21,596,31],"21049":[596,21,596,31],"21057":[596,21,596,31],"21065":[598,13,598,23],"21073":[598,30,598,35],"21081":[598,30,598,43],"21083":[598,30,598,41],"21089":[598,13,598,44],"21091":[598,13,598,29],"21097":[598,13,598,45],"21105":[600,20,600,28],"21113":[600,29,600,39],"21121":[600,47,600,50],"21129":[600,29,600,51],"21131":[600,29,600,46],"21137":[600,20,600,52],"21145":[600,20,600,52],"21153":[600,13,600,53],"21161":[599,11,601,10],"21169":[602,9,602,13],"21177":[602,9,602,15],"21185":[602,9,602,25],"21193":[602,35,602,40],"21201":[602,35,602,50],"21209":[603,17,603,25],"21217":[604,17,604,24],"21225":[604,17,604,24],"21233":[605,30,605,44],"21241":[605,47,605,48],"21249":[605,30,605,48],"21257":[605,13,605,49],"21265":[606,17,606,20],"21273":[607,28,607,32],"21281":[607,28,607,32],"21289":[607,17,607,33],"21297":[608,24,608,32],"21305":[608,33,608,36],"21313":[608,24,608,37],"21321":[608,24,608,37],"21329":[608,17,608,38],"21337":[610,17,610,23],"21345":[610,17,610,33],"21353":[610,34,610,35],"21361":[610,17,610,36],"21369":[610,37,610,43],"21377":[610,17,610,44],"21385":[610,48,610,54],"21393":[610,48,610,64],"21401":[610,65,610,66],"21409":[610,48,610,67],"21417":[610,68,610,76],"21425":[610,48,610,77],"21433":[610,81,610,87],"21441":[610,81,610,97],"21449":[610,98,610,99],"21457":[610,81,610,100],"21465":[610,101,610,106],"21473":[610,81,610,107],"21481":[610,111,610,117],"21489":[610,111,610,127],"21497":[610,128,610,129],"21505":[610,111,610,130],"21513":[610,131,610,137],"21521":[610,111,610,138],"21529":[611,28,611,32],"21537":[611,28,611,32],"21545":[611,17,611,33],"21553":[612,24,612,32],"21561":[612,33,612,43],"21569":[612,51,612,57],"21577":[612,51,612,67],"21585":[612,68,612,69],"21593":[612,51,612,70],"21601":[612,33,612,71],"21603":[612,33,612,50],"21609":[612,24,612,72],"21617":[612,24,612,72],"21625":[612,17,612,73],"21633":[614,13,614,20],"21641":[614,26,614,32],"21649":[614,26,614,42],"21657":[614,43,614,44],"21665":[614,26,614,45],"21673":[614,13,614,46],"21675":[614,13,614,25],"21681":[614,13,614,47],"21689":[615,17,615,31],"21697":[615,35,615,36],"21705":[616,17,616,33],"21713":[616,34,616,38],"21721":[616,40,616,44],"21729":[616,40,616,46],"21737":[616,48,616,62],"21745":[617,21,617,25],"21753":[618,21,618,24],"21761":[619,21,619,27],"21769":[620,25,620,29],"21777":[620,21,620,31],"21785":[616,64,621,18],"21793":[616,17,621,19],"21801":[616,17,621,20],"21809":[622,42,622,47],"21817":[622,48,622,55],"21825":[622,48,622,62],"21833":[622,38,622,63],"21841":[622,38,622,63],"21849":[622,38,622,63],"21857":[623,30,623,31],"21865":[623,30,623,31],"21873":[623,30,623,31],"21881":[623,33,623,34],"21889":[623,37,623,44],"21897":[623,37,623,51],"21913":[623,53,623,54],"21921":[623,53,623,56],"21937":[624,21,624,35],"21945":[624,36,624,37],"21953":[624,45,624,58],"21961":[624,59,624,66],"21969":[624,67,624,68],"21977":[624,59,624,69],"21985":[624,71,624,81],"21993":[624,41,624,82],"22001":[624,21,624,82],"22009":[624,21,624,83],"22017":[627,21,627,29],"22025":[627,30,627,34],"22033":[627,36,627,50],"22041":[627,21,627,51],"22049":[627,21,627,52],"22057":[629,21,629,28],"22065":[630,31,630,34],"22073":[630,31,630,34],"22081":[630,25,630,35],"22089":[629,38,631,22],"22097":[629,38,631,22],"22105":[629,38,631,22],"22113":[629,21,631,23],"22115":[629,21,629,37],"22121":[629,21,631,24],"22129":[628,19,632,18],"22137":[602,52,634,10],"22145":[602,52,634,10],"22153":[602,52,634,10],"22161":[602,52,634,10],"22169":[602,52,634,10],"22177":[602,52,634,10],"22185":[602,52,634,10],"22193":[602,9,634,11],"22195":[602,9,602,34],"22201":[602,9,634,12],"22209":[533,28,636,2],"22217":[533,28,636,2],"22225":[533,28,636,2],"22233":[533,28,636,2],"22241":[533,28,636,2],"22249":[533,28,636,2],"22257":[533,28,636,2],"22265":[533,28,636,2],"22273":[533,28,636,2],"22281":[533,28,636,2],"22289":[533,28,636,2],"22297":[533,28,636,2],"22305":[533,28,636,2],"22313":[533,28,636,2],"22321":[533,28,636,2],"22329":[533,28,636,2],"22337":[533,28,636,2],"22345":[533,28,636,2],"22353":[533,28,636,2],"22361":[533,28,636,2],"22369":[533,28,636,2],"22377":[533,1,636,2],"22385":[533,1,636,3],"22393":[637,1,637,7],"22401":[637,1,637,17],"22409":[638,16,638,23],"22417":[638,27,638,37],"22425":[639,20,639,27],"22433":[639,20,639,27],"22441":[639,39,639,41],"22449":[639,39,639,41],"22457":[639,9,639,27],"22465":[639,9,639,42],"22473":[640,16,640,20],"22481":[640,16,640,20],"22489":[640,16,640,20],"22497":[641,9,641,13],"22505":[641,9,641,15],"22513":[641,9,641,21],"22521":[641,25,641,34],"22529":[642,16,642,24],"22537":[642,29,642,39],"22545":[642,40,642,41],"22553":[642,42,642,66],"22561":[642,40,642,67],"22569":[642,25,642,68],"22577":[642,16,642,69],"22585":[642,16,642,69],"22593":[642,9,642,70],"22601":[643,10,643,14],"22609":[643,10,643,28],"22611":[643,10,643,26],"22617":[643,32,643,36],"22625":[643,32,643,38],"22633":[643,32,643,56],"22641":[643,60,643,64],"22649":[644,20,644,39],"22657":[644,40,644,48],"22665":[644,20,644,49],"22673":[644,20,644,49],"22681":[644,9,644,50],"22689":[645,16,645,20],"22697":[645,16,645,22],"22705":[645,16,645,40],"22713":[645,45,645,53],"22721":[645,55,645,57],"22729":[645,59,645,62],"22737":[645,64,645,71],"22745":[645,73,645,81],"22753":[645,16,645,82],"22755":[645,16,645,44],"22761":[645,16,645,82],"22769":[645,9,645,83],"22777":[647,11,647,16],"22785":[647,25,647,28],"22793":[647,11,647,29],"22795":[647,11,647,24],"22801":[647,32,647,35],"22809":[647,39,647,42],"22817":[647,38,647,43],"22825":[647,11,647,43],"22833":[647,5,647,44],"22841":[648,12,648,16],"22849":[648,12,648,18],"22857":[648,12,648,38],"22865":[648,46,648,50],"22873":[648,52,648,56],"22881":[648,52,648,58],"22889":[648,52,648,67],"22897":[648,69,648,71],"22905":[648,73,648,77],"22913":[648,73,648,79],"22921":[648,73,648,84],"22929":[648,86,648,90],"22937":[648,86,648,92],"22945":[648,86,648,97],"22953":[648,99,648,103],"22961":[648,99,648,105],"22969":[648,99,648,115],"22977":[648,117,648,120],"22985":[648,122,648,129],"22993":[648,131,648,139],"23001":[648,12,648,140],"23003":[648,12,648,45],"23009":[648,12,648,140],"23017":[648,5,648,141],"23025":[637,27,649,2],"23033":[637,27,649,2],"23041":[637,27,649,2],"23049":[637,27,649,2],"23057":[637,27,649,2],"23065":[637,27,649,2],"23073":[637,27,649,2],"23081":[637,27,649,2],"23089":[637,1,649,2],"23097":[637,1,649,3],"23105":[650,1,650,7],"23113":[650,1,650,17],"23121":[651,16,651,23],"23129":[651,27,651,37],"23137":[652,20,652,27],"23145":[652,20,652,27],"23153":[652,39,652,41],"23161":[652,39,652,41],"23169":[652,9,652,27],"23177":[652,9,652,42],"23185":[653,16,653,20],"23193":[653,16,653,20],"23201":[653,16,653,20],"23209":[654,9,654,13],"23217":[654,9,654,15],"23225":[654,9,654,21],"23233":[654,25,654,34],"23241":[655,16,655,24],"23249":[655,29,655,39],"23257":[655,40,655,41],"23265":[655,42,655,66],"23273":[655,40,655,67],"23281":[655,25,655,68],"23289":[655,16,655,69],"23297":[655,16,655,69],"23305":[655,9,655,70],"23313":[656,10,656,14],"23321":[656,10,656,28],"23323":[656,10,656,26],"23329":[656,32,656,36],"23337":[656,32,656,38],"23345":[656,32,656,56],"23353":[656,60,656,64],"23361":[657,20,657,39],"23369":[657,40,657,48],"23377":[657,20,657,49],"23385":[657,20,657,49],"23393":[657,9,657,50],"23401":[658,16,658,20],"23409":[658,16,658,22],"23417":[658,16,658,40],"23425":[658,45,658,53],"23433":[658,55,658,57],"23441":[658,59,658,62],"23449":[658,64,658,71],"23457":[658,73,658,81],"23465":[658,16,658,82],"23467":[658,16,658,44],"23473":[658,16,658,82],"23481":[658,9,658,83],"23489":[660,11,660,16],"23497":[660,25,660,28],"23505":[660,11,660,29],"23507":[660,11,660,24],"23513":[660,32,660,35],"23521":[660,39,660,42],"23529":[660,38,660,43],"23537":[660,11,660,43],"23545":[660,5,660,44],"23553":[661,12,661,16],"23561":[661,12,661,18],"23569":[661,12,661,38],"23577":[661,46,661,50],"23585":[661,52,661,56],"23593":[661,52,661,58],"23601":[661,52,661,67],"23609":[661,69,661,71],"23617":[661,73,661,77],"23625":[661,73,661,79],"23633":[661,73,661,84],"23641":[661,86,661,90],"23649":[661,86,661,92],"23657":[661,86,661,97],"23665":[661,99,661,103],"23673":[661,99,661,105],"23681":[661,99,661,115],"23689":[661,117,661,120],"23697":[661,122,661,129],"23705":[661,131,661,139],"23713":[661,12,661,140],"23715":[661,12,661,45],"23721":[661,12,661,140],"23729":[661,5,661,141],"23737":[650,27,662,2],"23745":[650,27,662,2],"23753":[650,27,662,2],"23761":[650,27,662,2],"23769":[650,27,662,2],"23777":[650,27,662,2],"23785":[650,27,662,2],"23793":[650,27,662,2],"23801":[650,1,662,2],"23809":[650,1,662,3],"23817":[663,1,663,7],"23825":[663,1,663,17],"23833":[664,16,664,23],"23841":[664,27,664,37],"23849":[665,20,665,27],"23857":[665,20,665,27],"23865":[665,39,665,41],"23873":[665,39,665,41],"23881":[665,9,665,27],"23889":[665,9,665,42],"23897":[666,16,666,20],"23905":[666,16,666,20],"23913":[666,16,666,20],"23921":[667,9,667,13],"23929":[667,9,667,15],"23937":[667,9,667,21],"23945":[667,25,667,34],"23953":[668,16,668,24],"23961":[668,29,668,39],"23969":[668,40,668,41],"23977":[668,42,668,66],"23985":[668,40,668,67],"23993":[668,25,668,68],"24001":[668,16,668,69],"24009":[668,16,668,69],"24017":[668,9,668,70],"24025":[669,10,669,14],"24033":[669,10,669,28],"24035":[669,10,669,26],"24041":[669,32,669,36],"24049":[669,32,669,38],"24057":[669,32,669,56],"24065":[669,60,669,64],"24073":[670,20,670,39],"24081":[670,40,670,48],"24089":[670,20,670,49],"24097":[670,20,670,49],"24105":[670,9,670,50],"24113":[671,16,671,20],"24121":[671,16,671,22],"24129":[671,16,671,40],"24137":[671,45,671,53],"24145":[671,55,671,57],"24153":[671,59,671,62],"24161":[671,64,671,71],"24169":[671,73,671,81],"24177":[671,16,671,82],"24179":[671,16,671,44],"24185":[671,16,671,82],"24193":[671,9,671,83],"24201":[673,11,673,16],"24209":[673,25,673,28],"24217":[673,11,673,29],"24219":[673,11,673,24],"24225":[673,32,673,35],"24233":[673,39,673,42],"24241":[673,38,673,43],"24249":[673,11,673,43],"24257":[673,5,673,44],"24265":[674,12,674,16],"24273":[674,12,674,18],"24281":[674,12,674,38],"24289":[674,46,674,50],"24297":[674,52,674,56],"24305":[674,52,674,58],"24313":[674,52,674,67],"24321":[674,69,674,71],"24329":[674,73,674,77],"24337":[674,73,674,79],"24345":[674,73,674,84],"24353":[674,86,674,90],"24361":[674,86,674,92],"24369":[674,86,674,97],"24377":[674,99,674,103],"24385":[674,99,674,105],"24393":[674,99,674,115],"24401":[674,117,674,120],"24409":[674,122,674,129],"24417":[674,131,674,139],"24425":[674,12,674,140],"24427":[674,12,674,45],"24433":[674,12,674,140],"24441":[674,5,674,141],"24449":[663,27,675,2],"24457":[663,27,675,2],"24465":[663,27,675,2],"24473":[663,27,675,2],"24481":[663,27,675,2],"24489":[663,27,675,2],"24497":[663,27,675,2],"24505":[663,27,675,2],"24513":[663,1,675,2],"24521":[663,1,675,3],"24529":[676,1,676,7],"24537":[676,1,676,17],"24545":[677,16,677,20],"24553":[677,16,677,20],"24561":[677,16,677,20],"24569":[678,16,678,21],"24577":[678,16,678,31],"24585":[678,16,678,37],"24593":[678,43,678,52],"24601":[678,54,678,55],"24609":[678,16,678,56],"24611":[678,16,678,42],"24617":[678,16,678,56],"24625":[678,16,678,56],"24633":[679,20,679,24],"24641":[679,20,679,30],"24643":[679,20,679,28],"24649":[679,20,679,30],"24657":[679,20,679,30],"24665":[680,9,680,13],"24673":[680,9,680,15],"24681":[680,9,680,29],"24689":[680,30,680,39],"24697":[680,9,680,40],"24705":[680,44,680,48],"24713":[680,52,680,61],"24721":[680,65,680,74],"24729":[681,19,681,29],"24737":[681,30,681,31],"24745":[681,32,681,65],"24753":[681,67,681,76],"24761":[681,30,681,77],"24769":[681,15,681,78],"24777":[681,15,681,78],"24785":[681,9,681,79],"24793":[682,9,682,18],"24801":[682,22,682,31],"24809":[682,35,682,39],"24817":[682,35,682,41],"24825":[682,35,682,50],"24833":[682,54,682,58],"24841":[682,54,682,60],"24849":[682,54,682,69],"24857":[682,54,682,84],"24865":[682,88,682,89],"24873":[683,21,683,34],"24881":[683,21,683,34],"24889":[683,9,683,35],"24897":[684,16,684,25],"24905":[684,29,684,38],"24913":[685,21,685,30],"24921":[685,21,685,30],"24929":[685,9,685,31],"24937":[688,9,688,13],"24945":[689,9,689,13],"24953":[689,9,689,15],"24961":[689,9,689,20],"24969":[690,9,690,11],"24977":[687,26,691,6],"24985":[691,14,691,18],"24993":[691,25,691,26],"25001":[691,14,691,27],"25003":[691,14,691,24],"25009":[687,26,691,28],"25011":[687,26,691,13],"25017":[692,17,692,20],"25025":[693,24,693,32],"25033":[693,33,693,36],"25041":[693,24,693,37],"25049":[693,24,693,37],"25057":[693,17,693,38],"25065":[694,18,694,19],"25073":[695,24,695,32],"25081":[695,37,695,47],"25089":[695,48,695,72],"25097":[695,33,695,73],"25105":[695,24,695,74],"25113":[695,24,695,74],"25121":[695,17,695,75],"25129":[696,13,696,21],"25137":[696,22,696,26],"25145":[696,32,696,39],"25153":[696,40,696,42],"25161":[696,44,696,48],"25169":[696,28,696,49],"25177":[696,13,696,50],"25185":[696,13,696,51],"25193":[691,37,697,10],"25201":[691,37,697,10],"25209":[691,37,697,10],"25217":[691,37,697,10],"25225":[691,37,697,10],"25233":[691,36,697,11],"25241":[687,26,697,12],"25243":[687,26,691,35],"25249":[687,26,697,12],"25257":[687,26,697,12],"25265":[698,5,698,9],"25273":[698,5,698,11],"25281":[698,5,698,25],"25289":[698,26,698,35],"25297":[698,5,698,36],"25305":[698,5,698,41],"25313":[698,48,698,52],"25321":[698,48,698,54],"25329":[698,48,698,68],"25337":[698,69,698,78],"25345":[698,48,698,79],"25353":[698,81,698,95],"25361":[698,5,698,96],"25363":[698,5,698,47],"25369":[698,5,698,97],"25377":[676,25,699,2],"25385":[676,25,699,2],"25393":[676,25,699,2],"25401":[676,25,699,2],"25409":[676,25,699,2],"25417":[676,25,699,2],"25425":[676,25,699,2],"25433":[676,25,699,2],"25441":[676,25,699,2],"25449":[676,1,699,2],"25457":[676,1,699,3],"25465":[700,1,700,7],"25473":[700,1,700,17],"25481":[701,16,701,20],"25489":[701,16,701,20],"25497":[701,16,701,20],"25505":[702,9,702,13],"25513":[702,9,702,15],"25521":[702,9,702,40],"25529":[702,44,702,48],"25537":[703,9,703,13],"25545":[703,9,703,15],"25553":[703,43,703,45],"25561":[703,9,703,45],"25569":[703,9,703,46],"25577":[704,5,704,9],"25585":[704,5,704,11],"25593":[704,5,704,36],"25601":[704,37,704,41],"25609":[704,45,704,53],"25617":[704,5,704,53],"25625":[704,5,704,54],"25633":[700,46,705,2],"25641":[700,46,705,2],"25649":[700,46,705,2],"25657":[700,46,705,2],"25665":[700,46,705,2],"25673":[700,46,705,2],"25681":[700,1,705,2],"25689":[700,1,705,3],"25697":[706,1,706,7],"25705":[706,1,706,17],"25713":[707,16,707,20],"25721":[707,16,707,20],"25729":[707,16,707,20],"25737":[708,5,708,9],"25745":[708,5,708,11],"25753":[708,5,708,25],"25761":[708,26,708,30],"25769":[708,34,708,42],"25777":[708,5,708,42],"25785":[708,5,708,43],"25793":[706,36,709,2],"25801":[706,36,709,2],"25809":[706,36,709,2],"25817":[706,36,709,2],"25825":[706,36,709,2],"25833":[706,36,709,2],"25841":[706,1,709,2],"25849":[706,1,709,3],"25857":[710,1,710,7],"25865":[710,1,710,17],"25873":[711,16,711,22],"25881":[711,26,711,34],"25889":[712,16,712,22],"25897":[712,26,712,30],"25905":[712,26,712,35],"25913":[712,16,712,35],"25921":[712,9,712,36],"25929":[713,9,713,15],"25937":[713,19,713,25],"25945":[713,19,713,30],"25953":[714,16,714,22],"25961":[714,16,714,27],"25969":[714,31,714,35],"25977":[714,31,714,40],"25985":[714,16,714,40],"25993":[714,9,714,41],"26001":[716,12,716,17],"26009":[716,12,716,17],"26017":[716,5,716,18],"26025":[710,27,717,2],"26033":[710,27,717,2],"26041":[710,27,717,2],"26049":[710,27,717,2],"26057":[710,1,717,2],"26065":[710,1,717,3],"26073":[718,1,718,7],"26081":[718,1,718,17],"26089":[719,12,719,16],"26097":[719,12,719,18],"26105":[719,12,719,23],"26113":[719,12,719,32],"26115":[719,12,719,30],"26121":[719,12,719,32],"26129":[719,5,719,33],"26137":[718,32,720,2],"26145":[718,32,720,2],"26153":[718,32,720,2],"26161":[718,1,720,2],"26169":[718,1,720,3],"26177":[721,1,721,7],"26185":[721,1,721,17],"26193":[722,12,722,16],"26201":[722,12,722,16],"26209":[722,5,722,17],"26217":[721,30,723,2],"26225":[721,30,723,2],"26233":[721,30,723,2],"26241":[721,30,723,2],"26249":[721,1,723,2],"26257":[721,1,723,3],"26265":[724,1,724,7],"26273":[724,1,724,17],"26281":[725,12,725,16],"26289":[725,12,725,18],"26297":[725,12,725,23],"26305":[725,12,725,29],"26307":[725,12,725,27],"26313":[725,12,725,29],"26321":[725,5,725,30],"26329":[724,34,726,2],"26337":[724,34,726,2],"26345":[724,34,726,2],"26353":[724,34,726,2],"26361":[724,1,726,2],"26369":[724,1,726,3],"26377":[727,1,727,7],"26385":[727,1,727,17],"26393":[728,12,728,16],"26401":[728,12,728,18],"26409":[728,12,728,28],"26417":[728,12,728,28],"26425":[728,5,728,29],"26433":[727,33,729,2],"26441":[727,33,729,2],"26449":[727,33,729,2],"26457":[727,1,729,2],"26465":[727,1,729,3],"26473":[730,1,730,7],"26481":[730,1,730,17],"26489":[731,13,731,17],"26497":[731,13,731,19],"26505":[731,13,731,19],"26513":[731,13,731,19],"26521":[732,9,732,10],"26529":[732,9,732,18],"26537":[732,9,732,23],"26545":[732,9,732,33],"26553":[732,9,732,44],"26555":[732,9,732,42],"26561":[732,53,732,68],"26569":[732,9,732,69],"26571":[732,9,732,52],"26577":[732,74,732,75],"26585":[733,16,733,21],"26593":[733,16,733,21],"26601":[733,9,733,22],"26609":[734,12,734,16],"26617":[734,12,734,16],"26625":[734,5,734,17],"26633":[730,31,735,2],"26641":[730,31,735,2],"26649":[730,31,735,2],"26657":[730,31,735,2],"26665":[730,1,735,2],"26673":[730,1,735,3],"26681":[736,1,736,7],"26689":[736,1,736,17],"26697":[737,13,737,17],"26705":[737,13,737,19],"26713":[737,13,737,19],"26721":[737,13,737,19],"26729":[738,21,738,34],"26737":[738,38,738,40],"26745":[738,21,738,40],"26753":[738,5,738,41],"26761":[739,23,739,36],"26769":[739,23,739,50],"26777":[739,54,739,55],"26785":[739,54,739,62],"26793":[739,23,739,62],"26801":[739,23,739,62],"26809":[740,16,740,27],"26817":[740,28,740,29],"26825":[740,28,740,34],"26833":[740,36,740,38],"26841":[740,40,740,43],"26849":[740,45,740,58],"26857":[740,60,740,64],"26865":[740,66,740,67],"26873":[740,66,740,75],"26881":[740,12,740,76],"26889":[740,12,740,76],"26897":[740,5,740,77],"26905":[736,27,741,2],"26913":[736,27,741,2],"26921":[736,27,741,2],"26929":[736,27,741,2],"26937":[736,27,741,2],"26945":[736,27,741,2],"26953":[736,27,741,2],"26961":[736,27,741,2],"26969":[736,1,741,2],"26977":[736,1,741,3],"26985":[742,1,742,7],"26993":[742,18,742,24],"27001":[742,1,742,24],"27009":[742,1,742,25],"27017":[1,1,742,25],"27025":[1,1,742,25],"27033":[1,1,742,25],"27041":[1,1,742,25],"27049":[1,1,742,25],"27057":[1,1,742,25],"27065":[1,1,742,25],"27073":[1,1,742,25],"27081":[1,1,742,25],"27089":[1,1,742,25],"27097":[1,1,742,25],"27105":[1,1,742,25],"27113":[1,1,742,25],"27121":[1,1,742,25],"27129":[1,1,742,25],"27137":[1,1,742,25],"27145":[1,1,742,25],"27153":[1,1,742,25],"27161":[1,1,742,25],"27169":[1,1,742,25],"27177":[1,1,742,25],"27185":[1,1,742,25],"27193":[1,1,742,25],"27201":[1,1,742,25],"27209":[1,1,742,25],"27217":[1,1,742,25],"27225":[1,1,742,25],"27233":[1,1,742,25],"27241":[1,1,742,25],"27249":[1,1,742,25],"27257":[1,1,742,25],"27265":[1,1,742,25],"27273":[1,1,742,25],"27281":[1,1,742,25],"27289":[1,1,742,25],"27297":[1,1,742,25],"27305":[1,1,742,25],"27313":[1,1,742,25],"27321":[1,1,742,25],"27329":[1,1,742,25],"27337":[1,1,742,25],"27345":[1,1,742,25],"27353":[1,1,742,25],"27361":[1,1,742,25],"27369":[1,1,742,25],"27377":[1,1,742,25],"27385":[1,1,742,25],"27393":[1,1,742,25],"27401":[1,1,742,25],"27409":[1,1,742,25],"27417":[1,1,742,25],"27425":[1,1,742,25],"27433":[1,1,742,25],"27441":[20,17,25,2],"27449":[20,17,25,2],"27457":[26,20,32,2],"27465":[26,20,32,2],"27473":[35,9,39,10],"27481":[33,29,41,2],"27489":[33,29,41,2],"27497":[42,28,46,2],"27505":[42,28,46,2],"27513":[48,5,49,22],"27521":[50,12,50,57],"27529":[47,27,51,2],"27537":[47,27,51,2],"27545":[53,5,54,22],"27553":[55,12,55,117],"27561":[52,43,56,2],"27569":[52,43,56,2],"27577":[57,34,59,2],"27585":[57,34,59,2],"27593":[60,32,62,2],"27601":[60,32,62,2],"27609":[65,5,66,25],"27617":[63,27,68,2],"27625":[63,27,68,2],"27633":[73,22,75,2],"27641":[73,22,75,2],"27649":[77,5,79,6],"27657":[80,5,82,6],"27665":[76,33,84,2],"27673":[76,33,84,2],"27681":[86,5,88,6],"27689":[89,5,91,6],"27697":[103,24,105,14],"27705":[103,24,105,14],"27713":[99,9,106,10],"27721":[95,33,107,6],"27729":[95,33,107,6],"27737":[116,24,118,10],"27745":[116,24,118,10],"27753":[125,9,126,49],"27761":[131,17,133,18],"27769":[129,75,134,14],"27777":[129,75,134,14],"27785":[128,9,135,10],"27793":[128,9,135,10],"27801":[108,32,136,6],"27809":[108,32,136,6],"27817":[85,23,142,2],"27825":[85,23,142,2],"27833":[150,13,151,113],"27841":[144,12,157,6],"27849":[144,12,157,6],"27857":[143,22,158,2],"27865":[143,22,158,2],"27873":[161,9,162,20],"27881":[164,9,165,61],"27889":[166,9,167,99],"27897":[168,9,169,120],"27905":[171,9,172,43],"27913":[174,24,176,14],"27921":[174,24,176,14],"27929":[173,9,176,41],"27937":[160,12,177,6],"27945":[160,12,177,6],"27953":[159,20,178,2],"27961":[159,20,178,2],"27969":[181,9,182,20],"27977":[184,9,185,61],"27985":[186,9,187,99],"27993":[188,9,189,120],"28001":[190,9,191,43],"28009":[193,24,195,14],"28017":[193,24,195,14],"28025":[192,9,195,41],"28033":[180,12,197,6],"28041":[180,12,197,6],"28049":[179,25,198,2],"28057":[179,25,198,2],"28065":[201,9,202,20],"28073":[204,9,205,63],"28081":[206,9,207,68],"28089":[208,9,209,88],"28097":[212,24,214,14],"28105":[212,24,214,14],"28113":[211,9,214,41],"28121":[200,12,216,6],"28129":[200,12,216,6],"28137":[199,22,217,2],"28145":[199,22,217,2],"28153":[220,9,221,20],"28161":[223,9,224,61],"28169":[225,9,226,65],"28177":[227,9,228,93],"28185":[231,24,233,14],"28193":[231,24,233,14],"28201":[230,9,233,41],"28209":[219,12,235,6],"28217":[219,12,235,6],"28225":[218,20,236,2],"28233":[218,20,236,2],"28241":[240,9,241,41],"28249":[246,17,248,18],"28257":[244,75,249,14],"28265":[244,75,249,14],"28273":[243,9,250,10],"28281":[243,9,250,10],"28289":[238,32,251,6],"28297":[238,32,251,6],"28305":[256,17,259,18],"28313":[261,17,263,18],"28321":[267,17,268,121],"28329":[269,17,272,18],"28337":[273,17,274,66],"28345":[275,17,278,18],"28353":[279,67,282,18],"28361":[279,67,282,18],"28369":[255,60,283,14],"28377":[255,60,283,14],"28385":[253,30,284,10],"28393":[253,30,284,10],"28401":[252,12,285,6],"28409":[252,12,285,6],"28417":[237,22,286,2],"28425":[237,22,286,2],"28433":[288,5,289,28],"28441":[287,15,291,2],"28449":[287,15,291,2],"28457":[295,13,298,14],"28465":[293,5,301,6],"28473":[303,5,304,37],"28481":[311,17,313,18],"28489":[309,26,314,14],"28497":[309,26,314,14],"28505":[306,9,316,10],"28513":[292,24,318,2],"28521":[292,24,318,2],"28529":[345,5,347,6],"28537":[354,20,354,84],"28545":[357,20,357,85],"28553":[368,15,368,57],"28561":[374,19,374,87],"28569":[342,14,389,2],"28577":[342,14,389,2],"28585":[395,12,399,6],"28593":[393,5,399,6],"28601":[391,38,401,2],"28609":[391,38,401,2],"28617":[402,35,404,2],"28625":[402,35,404,2],"28633":[405,33,407,2],"28641":[405,33,407,2],"28649":[411,5,413,6],"28657":[414,5,417,6],"28665":[419,5,422,6],"28673":[408,28,429,2],"28681":[408,28,429,2],"28689":[432,5,433,74],"28697":[434,5,436,6],"28705":[437,5,438,36],"28713":[441,5,442,90],"28721":[430,28,443,2],"28729":[430,28,443,2],"28737":[446,5,447,42],"28745":[444,32,449,2],"28753":[444,32,449,2],"28761":[450,32,452,2],"28769":[450,32,452,2],"28777":[456,5,461,12],"28785":[463,5,465,6],"28793":[466,5,469,6],"28801":[480,17,481,61],"28809":[484,17,485,33],"28817":[494,21,495,67],"28825":[499,42,501,26],"28833":[499,42,501,26],"28841":[487,17,503,18],"28849":[483,56,504,14],"28857":[483,56,504,14],"28865":[474,9,505,10],"28873":[474,9,505,10],"28881":[470,5,507,6],"28889":[520,9,521,34],"28897":[522,9,523,69],"28905":[527,30,529,14],"28913":[527,30,529,14],"28921":[513,48,531,6],"28929":[513,48,531,6],"28937":[453,30,532,2],"28945":[453,30,532,2],"28953":[534,5,535,42],"28961":[537,5,538,70],"28969":[540,5,542,6],"28977":[543,5,548,25],"28985":[549,5,552,6],"28993":[553,5,555,6],"29001":[556,17,556,74],"29009":[557,21,557,86],"29017":[558,30,558,113],"29025":[559,27,559,104],"29033":[565,5,566,62],"29041":[567,5,568,56],"29049":[569,5,571,6],"29057":[573,5,576,6],"29065":[573,5,576,6],"29073":[577,5,583,6],"29081":[585,5,587,6],"29089":[588,5,591,6],"29097":[603,13,604,24],"29105":[606,13,609,14],"29113":[610,13,613,14],"29121":[623,17,625,18],"29129":[623,17,625,18],"29137":[629,38,631,22],"29145":[629,38,631,22],"29153":[615,13,633,14],"29161":[602,52,634,10],"29169":[602,52,634,10],"29177":[595,5,635,6],"29185":[595,5,635,6],"29193":[533,28,636,2],"29201":[533,28,636,2],"29209":[638,5,639,42],"29217":[641,5,642,70],"29225":[643,5,646,6],"29233":[647,11,647,43],"29241":[637,27,649,2],"29249":[637,27,649,2],"29257":[651,5,652,42],"29265":[654,5,655,70],"29273":[656,5,659,6],"29281":[660,11,660,43],"29289":[650,27,662,2],"29297":[650,27,662,2],"29305":[664,5,665,42],"29313":[667,5,668,70],"29321":[669,5,672,6],"29329":[673,11,673,43],"29337":[663,27,675,2],"29345":[663,27,675,2],"29353":[680,5,681,79],"29361":[684,12,686,6],"29369":[682,5,686,6],"29377":[692,13,693,38],"29385":[694,13,695,75],"29393":[691,37,697,10],"29401":[691,37,697,10],"29409":[676,25,699,2],"29417":[676,25,699,2],"29425":[702,5,703,46],"29433":[700,46,705,2],"29441":[700,46,705,2],"29449":[706,36,709,2],"29457":[706,36,709,2],"29465":[711,5,712,36],"29473":[713,5,715,6],"29481":[710,27,717,2],"29489":[710,27,717,2],"29497":[718,32,720,2],"29505":[718,32,720,2],"29513":[721,30,723,2],"29521":[721,30,723,2],"29529":[724,34,726,2],"29537":[724,34,726,2],"29545":[727,33,729,2],"29553":[727,33,729,2],"29561":[732,5,733,22],"29569":[730,31,735,2],"29577":[730,31,735,2],"29585":[736,27,741,2],"29593":[736,27,741,2],"29601":[1,1,742,25],"29609":[1,1,742,25],"nBranches":326,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/topologies/server.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/topologies/server_jalangi_.js","code":" \"use strict\";\n\nvar inherits = require('util').inherits\n  , f = require('util').format\n  , bindToCurrentDomain = require('../connection/utils').bindToCurrentDomain\n  , EventEmitter = require('events').EventEmitter\n  , Pool = require('../connection/pool')\n  , b = require('bson')\n  , Query = require('../connection/commands').Query\n  , MongoError = require('../error')\n  , ReadPreference = require('./read_preference')\n  , BasicCursor = require('../cursor')\n  , CommandResult = require('./command_result')\n  , getSingleProperty = require('../connection/utils').getSingleProperty\n  , getProperty = require('../connection/utils').getProperty\n  , debugOptions = require('../connection/utils').debugOptions\n  , BSON = require('bson').native().BSON\n  , PreTwoSixWireProtocolSupport = require('../wireprotocol/2_4_support')\n  , TwoSixWireProtocolSupport = require('../wireprotocol/2_6_support')\n  , ThreeTwoWireProtocolSupport = require('../wireprotocol/3_2_support')\n  , Session = require('./session')\n  , Logger = require('../connection/logger')\n  , MongoCR = require('../auth/mongocr')\n  , X509 = require('../auth/x509')\n  , Plain = require('../auth/plain')\n  , GSSAPI = require('../auth/gssapi')\n  , SSPI = require('../auth/sspi')\n  , ScramSHA1 = require('../auth/scram');\n\n/**\n * @fileOverview The **Server** class is a class that represents a single server topology and is\n * used to construct connections.\n *\n * @example\n * var Server = require('mongodb-core').Server\n *   , ReadPreference = require('mongodb-core').ReadPreference\n *   , assert = require('assert');\n *\n * var server = new Server({host: 'localhost', port: 27017});\n * // Wait for the connection event\n * server.on('connect', function(server) {\n *   server.destroy();\n * });\n *\n * // Start connecting\n * server.connect();\n */\n\n// All bson types\nvar bsonTypes = [b.Long, b.ObjectID, b.Binary, b.Code, b.DBRef, b.Symbol, b.Double, b.Timestamp, b.MaxKey, b.MinKey];\n// BSON parser\nvar bsonInstance = null;\n// Server instance id\nvar serverId = 0;\n// Callbacks instance id\nvar callbackId = 0;\n\n// Single store for all callbacks\nvar Callbacks = function() {\n  // EventEmitter.call(this);\n  var self = this;\n  // Callbacks\n  this.callbacks = {};\n  // Set the callbacks id\n  this.id = callbackId++;\n  // Set the type to server\n  this.type = 'server';\n}\n\n//\n// Clone the options\nvar cloneOptions = function(options) {\n  var opts = {};\n  for(var name in options) {\n    opts[name] = options[name];\n  }\n  return opts;\n}\n\n//\n// Flush all callbacks\nCallbacks.prototype.flush = function(err) {\n  for(var id in this.callbacks) {\n    if(!isNaN(parseInt(id, 10))) {\n      var callback = this.callbacks[id];\n      delete this.callbacks[id];\n      callback(err, null);\n    }\n  }\n}\n\nCallbacks.prototype.emit = function(id, err, value) {\n  var callback = this.callbacks[id];\n  delete this.callbacks[id];\n  callback(err, value);\n}\n\nCallbacks.prototype.raw = function(id) {\n  if(this.callbacks[id] == null) return false;\n  return this.callbacks[id].raw == true ? true : false\n}\n\nCallbacks.prototype.documentsReturnedIn = function(id) {\n  if(this.callbacks[id] == null) return false;\n  return typeof this.callbacks[id].documentsReturnedIn == 'string' ? this.callbacks[id].documentsReturnedIn : null;\n}\n\nCallbacks.prototype.unregister = function(id) {\n  delete this.callbacks[id];\n}\n\nCallbacks.prototype.register = function(id, callback) {\n  this.callbacks[id] = bindToCurrentDomain(callback);\n}\n\n/**\n * @ignore\n */\nvar bindToCurrentDomain = function(callback) {\n  var domain = process.domain;\n  if(domain == null || callback == null) return callback;\n  return domain.bind(callback);\n}\n\nvar DISCONNECTED = 'disconnected';\nvar CONNECTING = 'connecting';\nvar CONNECTED = 'connected';\nvar DESTROYED = 'destroyed';\n\n// Supports server\nvar supportsServer = function(_s) {\n  return _s.ismaster && typeof _s.ismaster.minWireVersion == 'number';\n}\n\n//\n// createWireProtocolHandler\nvar createWireProtocolHandler = function(result) {\n  // 3.2 wire protocol handler\n  if(result && result.maxWireVersion >= 4) {\n    return new ThreeTwoWireProtocolSupport(new TwoSixWireProtocolSupport());\n  }\n\n  // 2.6 wire protocol handler\n  if(result && result.maxWireVersion >= 2) {\n    return new TwoSixWireProtocolSupport();\n  }\n\n  // 2.4 or earlier wire protocol handler\n  return new PreTwoSixWireProtocolSupport();\n}\n\n//\n// Reconnect server\nvar reconnectServer = function(self, state) {\n  // Flush out any left over callbacks\n  if(self && state && state.callbacks) {\n    state.callbacks.flush(new MongoError(f(\"server %s received a broken socket pipe error\", self.name)));\n  }\n\n  // If the current reconnect retries is 0 stop attempting to reconnect\n  if(state.currentReconnectRetry == 0) {\n    return self.destroy(true, true);\n  }\n\n  // Adjust the number of retries\n  state.currentReconnectRetry = state.currentReconnectRetry - 1;\n\n  // Set status to connecting\n  state.state = CONNECTING;\n  // Create a new Pool\n  state.pool = new Pool(state.options);\n  // error handler\n  var reconnectErrorHandler = function(err) {\n    // Set the state to disconnected so we can peform a proper reconnect\n    state.state = DISCONNECTED;\n    // Destroy the pool\n    state.pool.destroy();\n    // Adjust the number of retries\n    state.currentReconnectRetry = state.currentReconnectRetry - 1;\n    // No more retries\n    if(state.currentReconnectRetry <= 0) {\n      self.state = DESTROYED;\n      self.emit('error', f('failed to connect to %s:%s after %s retries', state.options.host, state.options.port, state.reconnectTries));\n    } else {\n      setTimeout(function() {\n        reconnectServer(self, state);\n      }, state.reconnectInterval);\n    }\n  }\n\n  //\n  // Attempt to connect\n  state.pool.once('connect', function() {\n    // Reset retries\n    state.currentReconnectRetry = state.reconnectTries;\n\n    // Remove any non used handlers\n    var events = ['error', 'close', 'timeout', 'parseError'];\n    events.forEach(function(e) {\n      state.pool.removeAllListeners(e);\n    });\n\n    // Set connected state\n    state.state = CONNECTED;\n\n    // Add proper handlers\n    state.pool.once('error', reconnectErrorHandler);\n    state.pool.once('close', closeHandler(self, state));\n    state.pool.once('timeout', timeoutHandler(self, state));\n    state.pool.once('parseError', fatalErrorHandler(self, state));\n\n    // We need to ensure we have re-authenticated\n    var keys = Object.keys(state.authProviders);\n    if(keys.length == 0) return self.emit('reconnect', self);\n\n    // Execute all providers\n    var count = keys.length;\n    // Iterate over keys\n    for(var i = 0; i < keys.length; i++) {\n      state.authProviders[keys[i]].reauthenticate(self, state.pool, function(err, r) {\n        count = count - 1;\n        // We are done, emit reconnect event\n        if(count == 0) {\n          return self.emit('reconnect', self);\n        }\n      });\n    }\n  });\n\n  //\n  // Handle connection failure\n  state.pool.once('error', errorHandler(self, state));\n  state.pool.once('close', errorHandler(self, state));\n  state.pool.once('timeout', errorHandler(self, state));\n  state.pool.once('parseError', errorHandler(self, state));\n\n  // Connect pool\n  state.pool.connect();\n}\n\n//\n// Handlers\nvar messageHandler = function(self, state) {\n  return function(response, connection) {\n    try {\n      // Parse the message\n      response.parse({raw: state.callbacks.raw(response.responseTo), documentsReturnedIn: state.callbacks.documentsReturnedIn(response.responseTo)});\n      if(state.logger.isDebug()) state.logger.debug(f('message [%s] received from %s', response.raw.toString('hex'), self.name));\n      state.callbacks.emit(response.responseTo, null, response);\n    } catch (err) {\n      state.callbacks.flush(new MongoError(err));\n      self.destroy();\n    }\n  }\n}\n\nvar errorHandler = function(self, state) {\n  return function(err, connection) {\n    if(state.state == DISCONNECTED || state.state == DESTROYED) return;\n    // Set disconnected state\n    state.state = DISCONNECTED;\n    if(state.readPreferenceStrategies != null) notifyStrategies(self, self.s, 'error', [self]);\n    if(state.logger.isInfo()) state.logger.info(f('server %s errored out with %s', self.name, JSON.stringify(err)));\n    // Flush out all the callbacks\n    if(state.callbacks) state.callbacks.flush(new MongoError(f(\"server %s received an error %s\", self.name, JSON.stringify(err))));\n    // Destroy all connections\n    self.destroy();\n    // Emit error event\n    if(state.emitError && self.listeners('error').length > 0) self.emit('error', err, self);\n    // If we specified the driver to reconnect perform it\n    if(state.reconnect) setTimeout(function() {\n      reconnectServer(self, state)\n    }, state.reconnectInterval);\n  }\n}\n\nvar fatalErrorHandler = function(self, state) {\n  return function(err, connection) {\n    if(state.state == DISCONNECTED || state.state == DESTROYED) return;\n    // Set disconnected state\n    state.state = DISCONNECTED;\n\n    if(state.readPreferenceStrategies != null) notifyStrategies(self, self.s, 'error', [self]);\n    if(state.logger.isInfo()) state.logger.info(f('server %s errored out with %s', self.name, JSON.stringify(err)));\n    // Flush out all the callbacks\n    if(state.callbacks) state.callbacks.flush(new MongoError(f(\"server %s received an error %s\", self.name, JSON.stringify(err))));\n    // Emit error event\n    if(self.listeners('error').length > 0) self.emit('error', err, self);\n    // If we specified the driver to reconnect perform it\n    if(state.reconnect) setTimeout(function() {\n      // state.currentReconnectRetry = state.reconnectTries,\n      reconnectServer(self, state)\n    }, state.reconnectInterval);\n    // Destroy all connections\n    self.destroy();\n  }\n}\n\nvar timeoutHandler = function(self, state) {\n  return function(err, connection) {\n    if(state.state == DISCONNECTED || state.state == DESTROYED) return;\n    // Set disconnected state\n    state.state = DISCONNECTED;\n\n    if(state.readPreferenceStrategies != null) notifyStrategies(self, self.s, 'timeout', [self]);\n    if(state.logger.isInfo()) state.logger.info(f('server %s timed out', self.name));\n    // Flush out all the callbacks\n    if(state.callbacks) state.callbacks.flush(new MongoError(f(\"server %s timed out\", self.name)));\n    // Emit error event\n    self.emit('timeout', err, self);\n    // If we specified the driver to reconnect perform it\n    if(state.reconnect) setTimeout(function() {\n      // state.currentReconnectRetry = state.reconnectTries,\n      reconnectServer(self, state)\n    }, state.reconnectInterval);\n    // Destroy all connections\n    self.destroy();\n  }\n}\n\nvar closeHandler = function(self, state) {\n  return function(err, connection) {\n    if(state.state == DISCONNECTED || state.state == DESTROYED) return;\n    // Set disconnected state\n    state.state = DISCONNECTED;\n\n    if(state.readPreferenceStrategies != null) notifyStrategies(self, self.s, 'close', [self]);\n    if(state.logger.isInfo()) state.logger.info(f('server %s closed', self.name));\n    // Flush out all the callbacks\n    if(state.callbacks) state.callbacks.flush(new MongoError(f(\"server %s sockets closed\", self.name)));\n    // Emit error event\n    self.emit('close', err, self);\n    // If we specified the driver to reconnect perform it\n    if(state.reconnect) setTimeout(function() {\n      // state.currentReconnectRetry = state.reconnectTries,\n      reconnectServer(self, state)\n    }, state.reconnectInterval);\n    // Destroy all connections\n    self.destroy();\n  }\n}\n\nvar connectHandler = function(self, state) {\n  // Apply all stored authentications\n  var applyAuthentications = function(callback) {\n    // We need to ensure we have re-authenticated\n    var keys = Object.keys(state.authProviders);\n    if(keys.length == 0) return callback(null, null);\n\n    // Execute all providers\n    var count = keys.length;\n    // Iterate over keys\n    for(var i = 0; i < keys.length; i++) {\n      state.authProviders[keys[i]].reauthenticate(self, state.pool, function(err, r) {\n        count = count - 1;\n        // We are done, emit reconnect event\n        if(count == 0) {\n          return callback(null, null);\n        }\n      });\n    }\n  }\n\n  return function(connection) {\n    // Apply any applyAuthentications\n    applyAuthentications(function() {\n      // Get the actual latency of the ismaster\n      var start = new Date().getTime();\n      // Execute an ismaster\n      self.command('admin.$cmd', {ismaster:true}, function(err, r) {\n        if(err) {\n          state.state = DISCONNECTED;\n          return self.emit('close', err, self);\n        }\n\n        // Set the latency for this instance\n        state.isMasterLatencyMS = new Date().getTime() - start;\n\n        // Set the current ismaster\n        if(!err) {\n          state.ismaster = r.result;\n        }\n\n        // Emit the ismaster\n        self.emit('ismaster', r.result, self);\n\n        // Determine the wire protocol handler\n        state.wireProtocolHandler = createWireProtocolHandler(state.ismaster);\n\n        // Set the wireProtocolHandler\n        state.options.wireProtocolHandler = state.wireProtocolHandler;\n\n        // Log the ismaster if available\n        if(state.logger.isInfo()) state.logger.info(f('server %s connected with ismaster [%s]', self.name, JSON.stringify(r.result)));\n\n        // Validate if we it's a server we can connect to\n        if(!supportsServer(state) && state.wireProtocolHandler == null) {\n          state.state = DISCONNECTED\n          return self.emit('error', new MongoError(\"non supported server version\"), self);\n        }\n\n        // Set the details\n        if(state.ismaster && state.ismaster.me) state.serverDetails.name = state.ismaster.me;\n\n        // No read preference strategies just emit connect\n        if(state.readPreferenceStrategies == null) {\n          state.state = CONNECTED;\n          return self.emit('connect', self);\n        }\n\n        // Signal connect to all readPreferences\n        notifyStrategies(self, self.s, 'connect', [self], function(err, result) {\n          state.state = CONNECTED;\n          return self.emit('connect', self);\n        });\n      });\n    });\n  }\n}\n\nvar slaveOk = function(r) {\n  if(r) return r.slaveOk()\n  return false;\n}\n\n//\n// Execute readPreference Strategies\nvar notifyStrategies = function(self, state, op, params, callback) {\n  if(typeof callback != 'function') {\n    // Notify query start to any read Preference strategies\n    for(var name in state.readPreferenceStrategies) {\n      if(state.readPreferenceStrategies[name][op]) {\n        var strat = state.readPreferenceStrategies[name];\n        strat[op].apply(strat, params);\n      }\n    }\n    // Finish up\n    return;\n  }\n\n  // Execute the async callbacks\n  var nPreferences = Object.keys(state.readPreferenceStrategies).length;\n  if(nPreferences == 0) return callback(null, null);\n  for(var name in state.readPreferenceStrategies) {\n    if(state.readPreferenceStrategies[name][op]) {\n      var strat = state.readPreferenceStrategies[name];\n      // Add a callback to params\n      var cParams = params.slice(0);\n      cParams.push(function(err, r) {\n        nPreferences = nPreferences - 1;\n        if(nPreferences == 0) {\n          callback(null, null);\n        }\n      })\n      // Execute the readPreference\n      strat[op].apply(strat, cParams);\n    }\n  }\n}\n\nvar debugFields = ['reconnect', 'reconnectTries', 'reconnectInterval', 'emitError', 'cursorFactory', 'host'\n  , 'port', 'size', 'keepAlive', 'keepAliveInitialDelay', 'noDelay', 'connectionTimeout', 'checkServerIdentity'\n  , 'socketTimeout', 'singleBufferSerializtion', 'ssl', 'ca', 'cert', 'key', 'rejectUnauthorized', 'promoteLongs'];\n\n/**\n * Creates a new Server instance\n * @class\n * @param {boolean} [options.reconnect=true] Server will attempt to reconnect on loss of connection\n * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times\n * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries\n * @param {boolean} [options.emitError=false] Server will emit errors events\n * @param {Cursor} [options.cursorFactory=Cursor] The cursor factory class used for all query cursors\n * @param {string} options.host The server host\n * @param {number} options.port The server port\n * @param {number} [options.size=5] Server connection pool size\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=0] Initial delay before TCP keep alive enabled\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {number} [options.connectionTimeout=0] TCP Connection timeout setting\n * @param {number} [options.socketTimeout=0] TCP Socket timeout setting\n * @param {boolean} [options.ssl=false] Use SSL for connection\n * @param {boolean|function} [options.checkServerIdentity=true] Ensure we check server identify during SSL, set to false to disable checking. Only works for Node 0.12.x or higher. You can pass in a boolean or your own checkServerIdentity override function.\n * @param {Buffer} [options.ca] SSL Certificate store binary buffer\n * @param {Buffer} [options.cert] SSL Certificate binary buffer\n * @param {Buffer} [options.key] SSL Key file binary buffer\n * @param {string} [options.passphrase] SSL Certificate pass phrase\n * @param {boolean} [options.rejectUnauthorized=true] Reject unauthorized server certificates\n * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits\n * @return {Server} A cursor instance\n * @fires Server#connect\n * @fires Server#close\n * @fires Server#error\n * @fires Server#timeout\n * @fires Server#parseError\n * @fires Server#reconnect\n */\nvar Server = function(options) {\n  var self = this;\n\n  // Add event listener\n  EventEmitter.call(this);\n\n  // BSON Parser, ensure we have a single instance\n  if(bsonInstance == null) {\n    bsonInstance = new BSON(bsonTypes);\n  }\n\n  // Reconnect retries\n  var reconnectTries = options.reconnectTries || 30;\n\n  // Keeps all the internal state of the server\n  this.s = {\n    // Options\n      options: options\n    // Contains all the callbacks\n    , callbacks: new Callbacks()\n    // Logger\n    , logger: Logger('Server', options)\n    // Server state\n    , state: DISCONNECTED\n    // Reconnect option\n    , reconnect: typeof options.reconnect == 'boolean' ? options.reconnect :  true\n    , reconnectTries: reconnectTries\n    , reconnectInterval: options.reconnectInterval || 1000\n    // Swallow or emit errors\n    , emitError: typeof options.emitError == 'boolean' ? options.emitError : false\n    // Current state\n    , currentReconnectRetry: reconnectTries\n    // Contains the ismaster\n    , ismaster: null\n    // Contains any alternate strategies for picking\n    , readPreferenceStrategies: options.readPreferenceStrategies\n    // Auth providers\n    , authProviders: options.authProviders || {}\n    // Server instance id\n    , id: serverId++\n    // Grouping tag used for debugging purposes\n    , tag: options.tag\n    // Do we have a not connected handler\n    , disconnectHandler: options.disconnectHandler\n    // wireProtocolHandler methods\n    , wireProtocolHandler: options.wireProtocolHandler || new PreTwoSixWireProtocolSupport()\n    // Factory overrides\n    , Cursor: options.cursorFactory || BasicCursor\n    // BSON Parser, ensure we have a single instance\n    , bsonInstance: bsonInstance\n    // Pick the right bson parser\n    , bson: options.bson ? options.bson : bsonInstance\n    // Internal connection pool\n    , pool: null\n    // Is master latency\n    , isMasterLatencyMS: 0\n    // Server details\n    , serverDetails: {\n        host: options.host\n      , port: options.port\n      , name: options.port ? f(\"%s:%s\", options.host, options.port) : options.host\n    }\n  }\n\n  // Reference state\n  var s = this.s;\n\n  // Add bson parser to options\n  options.bson = s.bson;\n\n  // Set error properties\n  getProperty(this, 'name', 'name', s.serverDetails, {});\n  getProperty(this, 'bson', 'bson', s.options, {});\n  getProperty(this, 'wireProtocolHandler', 'wireProtocolHandler', s.options, {});\n  getSingleProperty(this, 'id', s.id);\n\n  // Add auth providers\n  this.addAuthProvider('mongocr', new MongoCR());\n  this.addAuthProvider('x509', new X509());\n  this.addAuthProvider('plain', new Plain());\n  this.addAuthProvider('gssapi', new GSSAPI());\n  this.addAuthProvider('sspi', new SSPI());\n  this.addAuthProvider('scram-sha-1', new ScramSHA1());\n}\n\ninherits(Server, EventEmitter);\n\n/**\n * Execute a command\n * @method\n * @param {string} type Type of BSON parser to use (c++ or js)\n */\nServer.prototype.setBSONParserType = function(type) {\n  var nBSON = null;\n\n  if(type == 'c++') {\n    nBSON = require('bson').native().BSON;\n  } else if(type == 'js') {\n    nBSON = require('bson').pure().BSON;\n  } else {\n    throw new MongoError(f(\"% parser not supported\", type));\n  }\n\n  this.s.options.bson = new nBSON(bsonTypes);\n}\n\n/**\n * Reduce the poolSize to the provided max connections value\n * @method\n * @param {number} maxConnections reduce the poolsize to maxConnections\n */\nServer.prototype.capConnections = function(maxConnections) {\n  this.s.pool.capConnections(maxConnections);\n}\n\n/**\n * Returns the last known ismaster document for this server\n * @method\n * @return {object}\n */\nServer.prototype.lastIsMaster = function() {\n  return this.s.ismaster;\n}\n\n/**\n * Initiate server connect\n * @method\n */\nServer.prototype.connect = function(_options) {\n  var self = this;\n  // Set server specific settings\n  _options = _options || {}\n  // Set the promotion\n  if(typeof _options.promoteLongs == 'boolean')  {\n    self.s.options.promoteLongs = _options.promoteLongs;\n  }\n\n  // Destroy existing pool\n  if(self.s.pool) {\n    self.s.pool.destroy();\n    self.s.pool = null;\n  }\n\n  // Set the state to connection\n  self.s.state = CONNECTING;\n  // Create a new connection pool\n  if(!self.s.pool) {\n    self.s.options.messageHandler = messageHandler(self, self.s);\n    self.s.pool = new Pool(self.s.options);\n  }\n\n  // Add all the event handlers\n  self.s.pool.once('timeout', timeoutHandler(self, self.s));\n  self.s.pool.once('close', closeHandler(self, self.s));\n  self.s.pool.once('error', errorHandler(self, self.s));\n  self.s.pool.once('connect', connectHandler(self, self.s));\n  self.s.pool.once('parseError', fatalErrorHandler(self, self.s));\n\n  // Connect the pool\n  self.s.pool.connect();\n}\n\n/**\n * Destroy the server connection\n * @method\n */\nServer.prototype.destroy = function(emitClose, emitDestroy) {\n  var self = this;\n  if(self.s.logger.isDebug()) self.s.logger.debug(f('destroy called on server %s', self.name));\n\n  // Emit close\n  if(emitClose && self.listeners('close').length > 0) {\n    self.emit('close', null, self);\n  }\n\n  // Emit destroy event\n  if(emitDestroy) self.emit('destroy', self);\n  // Set state as destroyed\n  self.s.state = DESTROYED;\n  // Close the pool\n  self.s.pool.destroy();\n  // Flush out all the callbacks\n  if(self.s.callbacks) self.s.callbacks.flush(new MongoError(f(\"server %s sockets closed\", self.name)));\n}\n\n/**\n * Figure out if the server is connected\n * @method\n * @return {boolean}\n */\nServer.prototype.isConnected = function() {\n  var self = this;\n  if(self.s.pool) return self.s.pool.isConnected();\n  return false;\n}\n\n/**\n * Figure out if the server instance was destroyed by calling destroy\n * @method\n * @return {boolean}\n */\nServer.prototype.isDestroyed = function() {\n  return this.s.state == DESTROYED;\n}\n\nvar executeSingleOperation = function(self, ns, cmd, queryOptions, options, onAll, callback) {\n  // Create a query instance\n  var query = new Query(self.s.bson, ns, cmd, queryOptions);\n  // Set slave OK\n  query.slaveOk = slaveOk(options.readPreference);\n\n  // Notify query start to any read Preference strategies\n  if(self.s.readPreferenceStrategies != null)\n    notifyStrategies(self, self.s, 'startOperation', [self, query, new Date()]);\n\n  // Get a connection (either passed or from the pool)\n  var connection = options.connection || self.s.pool.get(options);\n\n  // Double check if we have a valid connection\n  // Checking that the connection exists to avoid an uncaught exception in case there is an issue with the pool\n  if(!(connection && connection.isConnected())) {\n    return callback(new MongoError(f(\"no connection available to server %s\", self.name)));\n  }\n\n  // Print cmd and execution connection if in debug mode for logging\n  if(self.s.logger.isDebug()) {\n    var json = connection.toJSON();\n    self.s.logger.debug(f('cmd [%s] about to be executed on connection with id %s at %s:%s', JSON.stringify(cmd), json.id, json.host, json.port));\n  }\n\n  // Execute multiple queries\n  if(onAll) {\n    var connections = self.s.pool.getAll();\n    var total = connections.length;\n    // We have an error\n    var error = null;\n    // Execute on all connections\n    for(var i = 0; i < connections.length; i++) {\n      try {\n        query.incRequestId();\n        connections[i].write(query.toBin());\n      } catch(err) {\n        total = total - 1;\n        if(total == 0) return callback(MongoError.create(err));\n      }\n\n      // Register the callback\n      self.s.callbacks.register(query.requestId, function(err, result) {\n        if(err) error = err;\n        total = total - 1;\n\n        // Done\n        if(total == 0) {\n          // Notify end of command\n          notifyStrategies(self, self.s, 'endOperation', [self, error, result, new Date()]);\n          if(error) return callback(MongoError.create(error));\n          // Execute callback, catch and rethrow if needed\n          try { callback(null, new CommandResult(result.documents[0], connections)); }\n          catch(err) { process.nextTick(function() { throw err}); }\n        }\n      });\n    }\n\n    return;\n  }\n\n  // Execute a single command query\n  try {\n    connection.write(query.toBin());\n  } catch(err) {\n    return callback(MongoError.create(err));\n  }\n\n  // Register the callback\n  self.s.callbacks.register(query.requestId, function(err, result) {\n    // Notify end of command\n    notifyStrategies(self, self.s, 'endOperation', [self, err, result, new Date()]);\n    if(err) return callback(err);\n    if(result.documents[0]['$err']\n      || result.documents[0]['errmsg']\n      || result.documents[0]['err']\n      || result.documents[0]['code']) return callback(MongoError.create(result.documents[0]));\n      // Execute callback, catch and rethrow if needed\n      try { callback(null, new CommandResult(result.documents[0], connection)); }\n      catch(err) { process.nextTick(function() { throw err}); }\n  });\n}\n\n/**\n * Execute a command\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object} cmd The command hash\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Connection} [options.connection] Specify connection object to execute command against\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {opResultCallback} callback A callback function\n */\nServer.prototype.command = function(ns, cmd, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  var self = this;\n  if(this.s.state == DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n  // Ensure we have no options\n  options = options || {};\n  // Do we have a read Preference it need to be of type ReadPreference\n  if(options.readPreference && !(options.readPreference instanceof ReadPreference)) {\n    throw new Error(\"readPreference must be an instance of ReadPreference\");\n  }\n\n  // Debug log\n  if(self.s.logger.isDebug()) self.s.logger.debug(f('executing command [%s] against %s', JSON.stringify({\n    ns: ns, cmd: cmd, options: debugOptions(debugFields, options)\n  }), self.name));\n\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if(!self.isConnected() && self.s.disconnectHandler != null) {\n    callback = bindToCurrentDomain(callback);\n    return self.s.disconnectHandler.add('command', ns, cmd, options, callback);\n  }\n\n  // If we have no connection error\n  if(!self.s.pool.isConnected()) {\n    return callback(new MongoError(f(\"no connection available to server %s\", self.name)));\n  }\n\n  // Execute on all connections\n  var onAll = typeof options.onAll == 'boolean' ? options.onAll : false;\n\n  // Check keys\n  var checkKeys = typeof options.checkKeys == 'boolean' ? options.checkKeys: false;\n\n  // Serialize function\n  var serializeFunctions = typeof options.serializeFunctions == 'boolean' ? options.serializeFunctions : false;\n\n  // Ignore undefined values\n  var ignoreUndefined = typeof options.ignoreUndefined == 'boolean' ? options.ignoreUndefined : false;\n\n  // Query options\n  var queryOptions = {\n    numberToSkip: 0, numberToReturn: -1, checkKeys: checkKeys\n  };\n\n  // Set up the serialize functions and ignore undefined\n  if(serializeFunctions) queryOptions.serializeFunctions = serializeFunctions;\n  if(ignoreUndefined) queryOptions.ignoreUndefined = ignoreUndefined;\n\n  // Single operation execution\n  if(!Array.isArray(cmd)) {\n    return executeSingleOperation(self, ns, cmd, queryOptions, options, onAll, callback);\n  }\n\n  // Build commands for each of the instances\n  var queries = new Array(cmd.length);\n  for(var i = 0; i < cmd.length; i++) {\n    queries[i] = new Query(self.s.bson, ns, cmd[i], queryOptions);\n    queries[i].slaveOk = slaveOk(options.readPreference);\n  }\n\n  // Notify query start to any read Preference strategies\n  if(self.s.readPreferenceStrategies != null) {\n    notifyStrategies(self, self.s, 'startOperation', [self, queries, new Date()]);\n  }\n\n  // Get a connection (either passed or from the pool)\n  var connection = options.connection || self.s.pool.get(options);\n\n  // Double check if we have a valid connection\n  if(!connection.isConnected()) {\n    return callback(new MongoError(f(\"no connection available to server %s\", self.name)));\n  }\n\n  // Print cmd and execution connection if in debug mode for logging\n  if(self.s.logger.isDebug()) {\n    var json = connection.toJSON();\n    self.s.logger.debug(f('cmd [%s] about to be executed on connection with id %s at %s:%s', JSON.stringify(queries), json.id, json.host, json.port));\n  }\n\n  // Canceled operations\n  var canceled = false;\n  // Number of operations left\n  var operationsLeft = queries.length;\n  // Results\n  var results = [];\n\n  // We need to nest the callbacks\n  for(var i = 0; i < queries.length; i++) {\n    // Get the query object\n    var query = queries[i];\n\n    // Execute a single command query\n    try {\n      connection.write(query.toBin());\n    } catch(err) {\n      return callback(MongoError.create(err));\n    }\n\n    // Register the callback\n    self.s.callbacks.register(query.requestId, function(err, result) {\n      // If it's canceled ignore the operation\n      if(canceled) return;\n      // Update the current index\n      operationsLeft = operationsLeft - 1;\n\n      // If we have an error cancel the operation\n      if(err) {\n        canceled = true;\n        return callback(err);\n      }\n\n      // Return the result\n      if(result.documents[0]['$err']\n        || result.documents[0]['errmsg']\n        || result.documents[0]['err']\n        || result.documents[0]['code']) {\n\n        // Set to canceled\n        canceled = true;\n        // Return the error\n        return callback(MongoError.create(result.documents[0]));\n      }\n\n      // Push results\n      results.push(result.documents[0]);\n\n      // We are done, return the result\n      if(operationsLeft == 0) {\n        // Notify end of command\n        notifyStrategies(self, self.s, 'endOperation', [self, err, result, new Date()]);\n\n        // Turn into command results\n        var commandResults = new Array(results.length);\n        for(var i = 0; i < results.length; i++) {\n          commandResults[i] = new CommandResult(results[i], connection);\n        }\n\n        // Execute callback, catch and rethrow if needed\n        try { callback(null, commandResults); }\n        catch(err) { process.nextTick(function() { throw err}); }\n      }\n    });\n  }\n}\n\n/**\n * Insert one or more documents\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of documents to insert\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {opResultCallback} callback A callback function\n */\nServer.prototype.insert = function(ns, ops, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  var self = this;\n  if(this.s.state == DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if(!self.isConnected() && self.s.disconnectHandler != null) {\n    callback = bindToCurrentDomain(callback);\n    return self.s.disconnectHandler.add('insert', ns, ops, options, callback);\n  }\n\n  // Setup the docs as an array\n  ops = Array.isArray(ops) ? ops : [ops];\n  // Execute write\n  return self.s.wireProtocolHandler.insert(self, self.s.ismaster, ns, self.s.bson, self.s.pool, self.s.callbacks, ops, options, callback);\n}\n\n/**\n * Perform one or more update operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of updates\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {opResultCallback} callback A callback function\n */\nServer.prototype.update = function(ns, ops, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  var self = this;\n  if(this.s.state == DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if(!self.isConnected() && self.s.disconnectHandler != null) {\n    callback = bindToCurrentDomain(callback);\n    return self.s.disconnectHandler.add('update', ns, ops, options, callback);\n  }\n\n  // Setup the docs as an array\n  ops = Array.isArray(ops) ? ops : [ops];\n\n  // Execute write\n  return self.s.wireProtocolHandler.update(self, self.s.ismaster, ns, self.s.bson, self.s.pool, self.s.callbacks, ops, options, callback);\n}\n\n/**\n * Perform one or more remove operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of removes\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {opResultCallback} callback A callback function\n */\nServer.prototype.remove = function(ns, ops, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  var self = this;\n  if(this.s.state == DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if(!self.isConnected() && self.s.disconnectHandler != null) {\n    callback = bindToCurrentDomain(callback);\n    return self.s.disconnectHandler.add('remove', ns, ops, options, callback);\n  }\n\n  // Setup the docs as an array\n  ops = Array.isArray(ops) ? ops : [ops];\n  // Execute write\n  return self.s.wireProtocolHandler.remove(self, self.s.ismaster, ns, self.s.bson, self.s.pool, self.s.callbacks, ops, options, callback);\n}\n\n/**\n * Authenticate using a specified mechanism\n * @method\n * @param {string} mechanism The Auth mechanism we are invoking\n * @param {string} db The db we are invoking the mechanism against\n * @param {...object} param Parameters for the specific mechanism\n * @param {authResultCallback} callback A callback function\n */\nServer.prototype.auth = function(mechanism, db) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 2);\n  var callback = args.pop();\n\n  // If we don't have the mechanism fail\n  if(self.s.authProviders[mechanism] == null && mechanism != 'default')\n    throw new MongoError(f(\"auth provider %s does not exist\", mechanism));\n\n  // If we have the default mechanism we pick mechanism based on the wire\n  // protocol max version. If it's >= 3 then scram-sha1 otherwise mongodb-cr\n  if(mechanism == 'default' && self.s.ismaster && self.s.ismaster.maxWireVersion >= 3) {\n    mechanism = 'scram-sha-1';\n  } else if(mechanism == 'default') {\n    mechanism = 'mongocr';\n  }\n\n  // Actual arguments\n  var finalArguments = [self, self.s.pool, db].concat(args.slice(0)).concat([function(err, r) {\n    if(err) return callback(err);\n    if(!r) return callback(new MongoError('could not authenticate'));\n    callback(null, new Session({}, self));\n  }]);\n\n  // Let's invoke the auth mechanism\n  self.s.authProviders[mechanism].auth.apply(self.s.authProviders[mechanism], finalArguments);\n}\n\n//\n// Plugin methods\n//\n\n/**\n * Add custom read preference strategy\n * @method\n * @param {string} name Name of the read preference strategy\n * @param {object} strategy Strategy object instance\n */\nServer.prototype.addReadPreferenceStrategy = function(name, strategy) {\n  var self = this;\n  if(self.s.readPreferenceStrategies == null) self.s.readPreferenceStrategies = {};\n  self.s.readPreferenceStrategies[name] = strategy;\n}\n\n/**\n * Add custom authentication mechanism\n * @method\n * @param {string} name Name of the authentication mechanism\n * @param {object} provider Authentication object instance\n */\nServer.prototype.addAuthProvider = function(name, provider) {\n  var self = this;\n  self.s.authProviders[name] = provider;\n}\n\n/**\n * Compare two server instances\n * @method\n * @param {Server} server Server to compare equality against\n * @return {boolean}\n */\nServer.prototype.equals = function(server) {\n  if(typeof server == 'string') return server == this.name;\n\n  if(server && server.name) {\n    return server.name == this.name;\n  }\n\n  return false;\n}\n\n/**\n * All raw connections\n * @method\n * @return {Connection[]}\n */\nServer.prototype.connections = function() {\n  return this.s.pool.getAll();\n}\n\n/**\n * Get server\n * @method\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @return {Server}\n */\nServer.prototype.getServer = function(options) {\n  return this;\n}\n\n/**\n * Get connection\n * @method\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @return {Connection}\n */\nServer.prototype.getConnection = function(options) {\n  return this.s.pool.get();\n}\n\n/**\n * Get callbacks object\n * @method\n * @return {Callbacks}\n */\nServer.prototype.getCallbacks = function() {\n  return this.s.callbacks;\n}\n\n/**\n * Name of BSON parser currently used\n * @method\n * @return {string}\n */\nServer.prototype.parserType = function() {\n  var s = this.s;\n  if(s.options.bson.serialize.toString().indexOf('[native code]') != -1)\n    return 'c++';\n  return 'js';\n}\n\n// // Command\n// {\n//     find: ns\n//   , query: <object>\n//   , limit: <n>\n//   , fields: <object>\n//   , skip: <n>\n//   , hint: <string>\n//   , explain: <boolean>\n//   , snapshot: <boolean>\n//   , batchSize: <n>\n//   , returnKey: <boolean>\n//   , maxScan: <n>\n//   , min: <n>\n//   , max: <n>\n//   , showDiskLoc: <boolean>\n//   , comment: <string>\n//   , maxTimeMS: <n>\n//   , raw: <boolean>\n//   , readPreference: <ReadPreference>\n//   , tailable: <boolean>\n//   , oplogReplay: <boolean>\n//   , noCursorTimeout: <boolean>\n//   , awaitdata: <boolean>\n//   , exhaust: <boolean>\n//   , partial: <boolean>\n// }\n\n/**\n * Get a new cursor\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {{object}|{Long}} cmd Can be either a command returning a cursor or a cursorId\n * @param {object} [options.batchSize=0] Batchsize for the operation\n * @param {array} [options.documents=[]] Initial documents list for cursor\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {opResultCallback} callback A callback function\n */\nServer.prototype.cursor = function(ns, cmd, cursorOptions) {\n  var s = this.s;\n  cursorOptions = cursorOptions || {};\n  // Set up final cursor type\n  var FinalCursor = cursorOptions.cursorFactory || s.Cursor;\n  // Return the cursor\n  return new FinalCursor(s.bson, ns, cmd, cursorOptions, this, s.options);\n}\n\n/**\n * A server connect event, used to verify that the connection is up and running\n *\n * @event Server#connect\n * @type {Server}\n */\n\n/**\n * The server connection closed, all pool connections closed\n *\n * @event Server#close\n * @type {Server}\n */\n\n/**\n * The server connection caused an error, all pool connections closed\n *\n * @event Server#error\n * @type {Server}\n */\n\n/**\n * The server connection timed out, all pool connections closed\n *\n * @event Server#timeout\n * @type {Server}\n */\n\n/**\n * The driver experienced an invalid message, all pool connections closed\n *\n * @event Server#parseError\n * @type {Server}\n */\n\n/**\n * The server reestablished the connection\n *\n * @event Server#reconnect\n * @type {Server}\n */\n\n/**\n * This is an insert result callback\n *\n * @callback opResultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {CommandResult} command result\n */\n\n/**\n * This is an authentication result callback\n *\n * @callback authResultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {Session} an authenticated session\n */\n\nmodule.exports = Server;\n"};
jalangiLabel1407:
    while (true) {
        try {
            J$.Se(27017, '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/topologies/server_jalangi_.js', '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/topologies/server.js');
            J$.N(27025, '__secret__S$', __secret__S$, 0);
            J$.N(27033, '__secret__traits__', __secret__traits__, 0);
            J$.N(27041, 'inherits', inherits, 0);
            J$.N(27049, 'f', f, 0);
            J$.N(27057, 'bindToCurrentDomain', bindToCurrentDomain, 0);
            J$.N(27065, 'EventEmitter', EventEmitter, 0);
            J$.N(27073, 'Pool', Pool, 0);
            J$.N(27081, 'b', b, 0);
            J$.N(27089, 'Query', Query, 0);
            J$.N(27097, 'MongoError', MongoError, 0);
            J$.N(27105, 'ReadPreference', ReadPreference, 0);
            J$.N(27113, 'BasicCursor', BasicCursor, 0);
            J$.N(27121, 'CommandResult', CommandResult, 0);
            J$.N(27129, 'getSingleProperty', getSingleProperty, 0);
            J$.N(27137, 'getProperty', getProperty, 0);
            J$.N(27145, 'debugOptions', debugOptions, 0);
            J$.N(27153, 'BSON', BSON, 0);
            J$.N(27161, 'PreTwoSixWireProtocolSupport', PreTwoSixWireProtocolSupport, 0);
            J$.N(27169, 'TwoSixWireProtocolSupport', TwoSixWireProtocolSupport, 0);
            J$.N(27177, 'ThreeTwoWireProtocolSupport', ThreeTwoWireProtocolSupport, 0);
            J$.N(27185, 'Session', Session, 0);
            J$.N(27193, 'Logger', Logger, 0);
            J$.N(27201, 'MongoCR', MongoCR, 0);
            J$.N(27209, 'X509', X509, 0);
            J$.N(27217, 'Plain', Plain, 0);
            J$.N(27225, 'GSSAPI', GSSAPI, 0);
            J$.N(27233, 'SSPI', SSPI, 0);
            J$.N(27241, 'ScramSHA1', ScramSHA1, 0);
            J$.N(27249, 'bsonTypes', bsonTypes, 0);
            J$.N(27257, 'bsonInstance', bsonInstance, 0);
            J$.N(27265, 'serverId', serverId, 0);
            J$.N(27273, 'callbackId', callbackId, 0);
            J$.N(27281, 'Callbacks', Callbacks, 0);
            J$.N(27289, 'cloneOptions', cloneOptions, 0);
            J$.N(27297, 'DISCONNECTED', DISCONNECTED, 0);
            J$.N(27305, 'CONNECTING', CONNECTING, 0);
            J$.N(27313, 'CONNECTED', CONNECTED, 0);
            J$.N(27321, 'DESTROYED', DESTROYED, 0);
            J$.N(27329, 'supportsServer', supportsServer, 0);
            J$.N(27337, 'createWireProtocolHandler', createWireProtocolHandler, 0);
            J$.N(27345, 'reconnectServer', reconnectServer, 0);
            J$.N(27353, 'messageHandler', messageHandler, 0);
            J$.N(27361, 'errorHandler', errorHandler, 0);
            J$.N(27369, 'fatalErrorHandler', fatalErrorHandler, 0);
            J$.N(27377, 'timeoutHandler', timeoutHandler, 0);
            J$.N(27385, 'closeHandler', closeHandler, 0);
            J$.N(27393, 'connectHandler', connectHandler, 0);
            J$.N(27401, 'slaveOk', slaveOk, 0);
            J$.N(27409, 'notifyStrategies', notifyStrategies, 0);
            J$.N(27417, 'debugFields', debugFields, 0);
            J$.N(27425, 'Server', Server, 0);
            J$.N(27433, 'executeSingleOperation', executeSingleOperation, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var inherits = J$.X1(809, J$.W(801, 'inherits', J$.G(121, J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'util', 21, false)), 'inherits', 0), inherits, 3)), f = J$.X1(825, J$.W(817, 'f', J$.G(153, J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, 'util', 21, false)), 'format', 0), f, 3)), bindToCurrentDomain = J$.X1(841, J$.W(833, 'bindToCurrentDomain', J$.G(185, J$.F(177, J$.R(161, 'require', require, 2), 0)(J$.T(169, '../connection/utils', 21, false)), 'bindToCurrentDomain', 0), bindToCurrentDomain, 3)), EventEmitter = J$.X1(857, J$.W(849, 'EventEmitter', J$.G(217, J$.F(209, J$.R(193, 'require', require, 2), 0)(J$.T(201, 'events', 21, false)), 'EventEmitter', 0), EventEmitter, 3)), Pool = J$.X1(873, J$.W(865, 'Pool', J$.F(241, J$.R(225, 'require', require, 2), 0)(J$.T(233, '../connection/pool', 21, false)), Pool, 3)), b = J$.X1(889, J$.W(881, 'b', J$.F(265, J$.R(249, 'require', require, 2), 0)(J$.T(257, 'bson', 21, false)), b, 3)), Query = J$.X1(905, J$.W(897, 'Query', J$.G(297, J$.F(289, J$.R(273, 'require', require, 2), 0)(J$.T(281, '../connection/commands', 21, false)), 'Query', 0), Query, 3)), MongoError = J$.X1(921, J$.W(913, 'MongoError', J$.F(321, J$.R(305, 'require', require, 2), 0)(J$.T(313, '../error', 21, false)), MongoError, 3)), ReadPreference = J$.X1(937, J$.W(929, 'ReadPreference', J$.F(345, J$.R(329, 'require', require, 2), 0)(J$.T(337, './read_preference', 21, false)), ReadPreference, 3)), BasicCursor = J$.X1(953, J$.W(945, 'BasicCursor', J$.F(369, J$.R(353, 'require', require, 2), 0)(J$.T(361, '../cursor', 21, false)), BasicCursor, 3)), CommandResult = J$.X1(969, J$.W(961, 'CommandResult', J$.F(393, J$.R(377, 'require', require, 2), 0)(J$.T(385, './command_result', 21, false)), CommandResult, 3)), getSingleProperty = J$.X1(985, J$.W(977, 'getSingleProperty', J$.G(425, J$.F(417, J$.R(401, 'require', require, 2), 0)(J$.T(409, '../connection/utils', 21, false)), 'getSingleProperty', 0), getSingleProperty, 3)), getProperty = J$.X1(1001, J$.W(993, 'getProperty', J$.G(457, J$.F(449, J$.R(433, 'require', require, 2), 0)(J$.T(441, '../connection/utils', 21, false)), 'getProperty', 0), getProperty, 3)), debugOptions = J$.X1(1017, J$.W(1009, 'debugOptions', J$.G(489, J$.F(481, J$.R(465, 'require', require, 2), 0)(J$.T(473, '../connection/utils', 21, false)), 'debugOptions', 0), debugOptions, 3)), BSON = J$.X1(1033, J$.W(1025, 'BSON', J$.G(529, J$.M(521, J$.F(513, J$.R(497, 'require', require, 2), 0)(J$.T(505, 'bson', 21, false)), 'native', 0)(), 'BSON', 0), BSON, 3)), PreTwoSixWireProtocolSupport = J$.X1(1049, J$.W(1041, 'PreTwoSixWireProtocolSupport', J$.F(553, J$.R(537, 'require', require, 2), 0)(J$.T(545, '../wireprotocol/2_4_support', 21, false)), PreTwoSixWireProtocolSupport, 3)), TwoSixWireProtocolSupport = J$.X1(1065, J$.W(1057, 'TwoSixWireProtocolSupport', J$.F(577, J$.R(561, 'require', require, 2), 0)(J$.T(569, '../wireprotocol/2_6_support', 21, false)), TwoSixWireProtocolSupport, 3)), ThreeTwoWireProtocolSupport = J$.X1(1081, J$.W(1073, 'ThreeTwoWireProtocolSupport', J$.F(601, J$.R(585, 'require', require, 2), 0)(J$.T(593, '../wireprotocol/3_2_support', 21, false)), ThreeTwoWireProtocolSupport, 3)), Session = J$.X1(1097, J$.W(1089, 'Session', J$.F(625, J$.R(609, 'require', require, 2), 0)(J$.T(617, './session', 21, false)), Session, 3)), Logger = J$.X1(1113, J$.W(1105, 'Logger', J$.F(649, J$.R(633, 'require', require, 2), 0)(J$.T(641, '../connection/logger', 21, false)), Logger, 3)), MongoCR = J$.X1(1129, J$.W(1121, 'MongoCR', J$.F(673, J$.R(657, 'require', require, 2), 0)(J$.T(665, '../auth/mongocr', 21, false)), MongoCR, 3)), X509 = J$.X1(1145, J$.W(1137, 'X509', J$.F(697, J$.R(681, 'require', require, 2), 0)(J$.T(689, '../auth/x509', 21, false)), X509, 3)), Plain = J$.X1(1161, J$.W(1153, 'Plain', J$.F(721, J$.R(705, 'require', require, 2), 0)(J$.T(713, '../auth/plain', 21, false)), Plain, 3)), GSSAPI = J$.X1(1177, J$.W(1169, 'GSSAPI', J$.F(745, J$.R(729, 'require', require, 2), 0)(J$.T(737, '../auth/gssapi', 21, false)), GSSAPI, 3)), SSPI = J$.X1(1193, J$.W(1185, 'SSPI', J$.F(769, J$.R(753, 'require', require, 2), 0)(J$.T(761, '../auth/sspi', 21, false)), SSPI, 3)), ScramSHA1 = J$.X1(1209, J$.W(1201, 'ScramSHA1', J$.F(793, J$.R(777, 'require', require, 2), 0)(J$.T(785, '../auth/scram', 21, false)), ScramSHA1, 3));
            var bsonTypes = J$.X1(1393, J$.W(1385, 'bsonTypes', J$.T(1377, [
                J$.G(1225, J$.R(1217, 'b', b, 1), 'Long', 0),
                J$.G(1241, J$.R(1233, 'b', b, 1), 'ObjectID', 0),
                J$.G(1257, J$.R(1249, 'b', b, 1), 'Binary', 0),
                J$.G(1273, J$.R(1265, 'b', b, 1), 'Code', 0),
                J$.G(1289, J$.R(1281, 'b', b, 1), 'DBRef', 0),
                J$.G(1305, J$.R(1297, 'b', b, 1), 'Symbol', 0),
                J$.G(1321, J$.R(1313, 'b', b, 1), 'Double', 0),
                J$.G(1337, J$.R(1329, 'b', b, 1), 'Timestamp', 0),
                J$.G(1353, J$.R(1345, 'b', b, 1), 'MaxKey', 0),
                J$.G(1369, J$.R(1361, 'b', b, 1), 'MinKey', 0)
            ], 10, false), bsonTypes, 3));
            var bsonInstance = J$.X1(1417, J$.W(1409, 'bsonInstance', J$.T(1401, null, 25, false), bsonInstance, 3));
            var serverId = J$.X1(1441, J$.W(1433, 'serverId', J$.T(1425, 0, 22, false), serverId, 3));
            var callbackId = J$.X1(1465, J$.W(1457, 'callbackId', J$.T(1449, 0, 22, false), callbackId, 3));
            var Callbacks = J$.X1(1657, J$.W(1649, 'Callbacks', J$.T(1641, function () {
                jalangiLabel1336:
                    while (true) {
                        try {
                            J$.Fe(1617, arguments.callee, this, arguments);
                            arguments = J$.N(1625, 'arguments', arguments, 4);
                            J$.N(1633, 'self', self, 0);
                            var self = J$.X1(1489, J$.W(1481, 'self', J$.R(1473, 'this', this, 0), self, 1));
                            J$.X1(1521, J$.P(1513, J$.R(1497, 'this', this, 0), 'callbacks', J$.T(1505, {}, 11, false), 0));
                            J$.X1(1577, J$.P(1569, J$.R(1529, 'this', this, 0), 'id', J$.B(26, '-', callbackId = J$.W(1553, 'callbackId', J$.B(18, '+', J$.U(10, '+', J$.R(1545, 'callbackId', callbackId, 1)), J$.T(1537, 1, 22, false), 0), callbackId, 2), J$.T(1561, 1, 22, false), 0), 0));
                            J$.X1(1609, J$.P(1601, J$.R(1585, 'this', this, 0), 'type', J$.T(1593, 'server', 21, false), 0));
                        } catch (J$e) {
                            J$.Ex(27441, J$e);
                        } finally {
                            if (J$.Fr(27449))
                                continue jalangiLabel1336;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1617), Callbacks, 3));
            var cloneOptions = J$.X1(1857, J$.W(1849, 'cloneOptions', J$.T(1841, function (options) {
                jalangiLabel1337:
                    while (true) {
                        try {
                            J$.Fe(1801, arguments.callee, this, arguments);
                            arguments = J$.N(1809, 'arguments', arguments, 4);
                            options = J$.N(1817, 'options', options, 4);
                            J$.N(1825, 'opts', opts, 0);
                            J$.N(1833, 'name', name, 0);
                            var opts = J$.X1(1681, J$.W(1673, 'opts', J$.T(1665, {}, 11, false), opts, 1));
                            for (J$._tm_p in J$.H(1753, J$.R(1689, 'options', options, 0))) {
                                var name = J$.X1(1769, J$.W(1761, 'name', J$._tm_p, name, 1));
                                {
                                    {
                                        J$.X1(1745, J$.P(1737, J$.R(1697, 'opts', opts, 0), J$.R(1705, 'name', name, 0), J$.G(1729, J$.R(1713, 'options', options, 0), J$.R(1721, 'name', name, 0), 4), 2));
                                    }
                                }
                            }
                            return J$.X1(1793, J$.Rt(1785, J$.R(1777, 'opts', opts, 0)));
                        } catch (J$e) {
                            J$.Ex(27457, J$e);
                        } finally {
                            if (J$.Fr(27465))
                                continue jalangiLabel1337;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1801), cloneOptions, 3));
            J$.X1(2145, J$.P(2137, J$.G(1873, J$.R(1865, 'Callbacks', Callbacks, 1), 'prototype', 0), 'flush', J$.T(2129, function (err) {
                jalangiLabel1338:
                    while (true) {
                        try {
                            J$.Fe(2089, arguments.callee, this, arguments);
                            arguments = J$.N(2097, 'arguments', arguments, 4);
                            err = J$.N(2105, 'err', err, 4);
                            J$.N(2113, 'id', id, 0);
                            J$.N(2121, 'callback', callback, 0);
                            for (J$._tm_p in J$.H(2065, J$.G(1889, J$.R(1881, 'this', this, 0), 'callbacks', 0))) {
                                var id = J$.X1(2081, J$.W(2073, 'id', J$._tm_p, id, 1));
                                {
                                    {
                                        if (J$.X1(27473, J$.C(8, J$.U(34, '!', J$.F(1937, J$.R(1897, 'isNaN', isNaN, 2), 0)(J$.F(1929, J$.R(1905, 'parseInt', parseInt, 2), 0)(J$.R(1913, 'id', id, 0), J$.T(1921, 10, 22, false))))))) {
                                            var callback = J$.X1(1985, J$.W(1977, 'callback', J$.G(1969, J$.G(1953, J$.R(1945, 'this', this, 0), 'callbacks', 0), J$.R(1961, 'id', id, 0), 4), callback, 1));
                                            J$.X1(2017, J$.B(42, 'delete', J$.G(2001, J$.R(1993, 'this', this, 0), 'callbacks', 0), J$.R(2009, 'id', id, 0), 4));
                                            J$.X1(2057, J$.F(2049, J$.R(2025, 'callback', callback, 0), 0)(J$.R(2033, 'err', err, 0), J$.T(2041, null, 25, false)));
                                        }
                                    }
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(27481, J$e);
                        } finally {
                            if (J$.Fr(27489))
                                continue jalangiLabel1338;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2089), 0));
            J$.X1(2353, J$.P(2345, J$.G(2161, J$.R(2153, 'Callbacks', Callbacks, 1), 'prototype', 0), 'emit', J$.T(2337, function (id, err, value) {
                jalangiLabel1339:
                    while (true) {
                        try {
                            J$.Fe(2289, arguments.callee, this, arguments);
                            arguments = J$.N(2297, 'arguments', arguments, 4);
                            id = J$.N(2305, 'id', id, 4);
                            err = J$.N(2313, 'err', err, 4);
                            value = J$.N(2321, 'value', value, 4);
                            J$.N(2329, 'callback', callback, 0);
                            var callback = J$.X1(2209, J$.W(2201, 'callback', J$.G(2193, J$.G(2177, J$.R(2169, 'this', this, 0), 'callbacks', 0), J$.R(2185, 'id', id, 0), 4), callback, 1));
                            J$.X1(2241, J$.B(50, 'delete', J$.G(2225, J$.R(2217, 'this', this, 0), 'callbacks', 0), J$.R(2233, 'id', id, 0), 4));
                            J$.X1(2281, J$.F(2273, J$.R(2249, 'callback', callback, 0), 0)(J$.R(2257, 'err', err, 0), J$.R(2265, 'value', value, 0)));
                        } catch (J$e) {
                            J$.Ex(27497, J$e);
                        } finally {
                            if (J$.Fr(27505))
                                continue jalangiLabel1339;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2289), 0));
            J$.X1(2561, J$.P(2553, J$.G(2369, J$.R(2361, 'Callbacks', Callbacks, 1), 'prototype', 0), 'raw', J$.T(2545, function (id) {
                jalangiLabel1340:
                    while (true) {
                        try {
                            J$.Fe(2521, arguments.callee, this, arguments);
                            arguments = J$.N(2529, 'arguments', arguments, 4);
                            id = J$.N(2537, 'id', id, 4);
                            if (J$.X1(27513, J$.C(16, J$.B(58, '==', J$.G(2401, J$.G(2385, J$.R(2377, 'this', this, 0), 'callbacks', 0), J$.R(2393, 'id', id, 0), 4), J$.T(2409, null, 25, false), 0))))
                                return J$.X1(2433, J$.Rt(2425, J$.T(2417, false, 23, false)));
                            return J$.X1(2513, J$.Rt(2505, J$.X1(27521, J$.C(24, J$.B(66, '==', J$.G(2473, J$.G(2465, J$.G(2449, J$.R(2441, 'this', this, 0), 'callbacks', 0), J$.R(2457, 'id', id, 0), 4), 'raw', 0), J$.T(2481, true, 23, false), 0))) ? J$.T(2489, true, 23, false) : J$.T(2497, false, 23, false)));
                        } catch (J$e) {
                            J$.Ex(27529, J$e);
                        } finally {
                            if (J$.Fr(27537))
                                continue jalangiLabel1340;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2521), 0));
            J$.X1(2801, J$.P(2793, J$.G(2577, J$.R(2569, 'Callbacks', Callbacks, 1), 'prototype', 0), 'documentsReturnedIn', J$.T(2785, function (id) {
                jalangiLabel1341:
                    while (true) {
                        try {
                            J$.Fe(2761, arguments.callee, this, arguments);
                            arguments = J$.N(2769, 'arguments', arguments, 4);
                            id = J$.N(2777, 'id', id, 4);
                            if (J$.X1(27545, J$.C(32, J$.B(74, '==', J$.G(2609, J$.G(2593, J$.R(2585, 'this', this, 0), 'callbacks', 0), J$.R(2601, 'id', id, 0), 4), J$.T(2617, null, 25, false), 0))))
                                return J$.X1(2641, J$.Rt(2633, J$.T(2625, false, 23, false)));
                            return J$.X1(2753, J$.Rt(2745, J$.X1(27553, J$.C(40, J$.B(90, '==', J$.U(82, 'typeof', J$.G(2681, J$.G(2673, J$.G(2657, J$.R(2649, 'this', this, 0), 'callbacks', 0), J$.R(2665, 'id', id, 0), 4), 'documentsReturnedIn', 0)), J$.T(2689, 'string', 21, false), 0))) ? J$.G(2729, J$.G(2721, J$.G(2705, J$.R(2697, 'this', this, 0), 'callbacks', 0), J$.R(2713, 'id', id, 0), 4), 'documentsReturnedIn', 0) : J$.T(2737, null, 25, false)));
                        } catch (J$e) {
                            J$.Ex(27561, J$e);
                        } finally {
                            if (J$.Fr(27569))
                                continue jalangiLabel1341;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2761), 0));
            J$.X1(2897, J$.P(2889, J$.G(2817, J$.R(2809, 'Callbacks', Callbacks, 1), 'prototype', 0), 'unregister', J$.T(2881, function (id) {
                jalangiLabel1342:
                    while (true) {
                        try {
                            J$.Fe(2857, arguments.callee, this, arguments);
                            arguments = J$.N(2865, 'arguments', arguments, 4);
                            id = J$.N(2873, 'id', id, 4);
                            J$.X1(2849, J$.B(98, 'delete', J$.G(2833, J$.R(2825, 'this', this, 0), 'callbacks', 0), J$.R(2841, 'id', id, 0), 4));
                        } catch (J$e) {
                            J$.Ex(27577, J$e);
                        } finally {
                            if (J$.Fr(27585))
                                continue jalangiLabel1342;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2857), 0));
            J$.X1(3033, J$.P(3025, J$.G(2913, J$.R(2905, 'Callbacks', Callbacks, 1), 'prototype', 0), 'register', J$.T(3017, function (id, callback) {
                jalangiLabel1343:
                    while (true) {
                        try {
                            J$.Fe(2985, arguments.callee, this, arguments);
                            arguments = J$.N(2993, 'arguments', arguments, 4);
                            id = J$.N(3001, 'id', id, 4);
                            callback = J$.N(3009, 'callback', callback, 4);
                            J$.X1(2977, J$.P(2969, J$.G(2929, J$.R(2921, 'this', this, 0), 'callbacks', 0), J$.R(2937, 'id', id, 0), J$.F(2961, J$.R(2945, 'bindToCurrentDomain', bindToCurrentDomain, 1), 0)(J$.R(2953, 'callback', callback, 0)), 2));
                        } catch (J$e) {
                            J$.Ex(27593, J$e);
                        } finally {
                            if (J$.Fr(27601))
                                continue jalangiLabel1343;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2985), 0));
            var bindToCurrentDomain = J$.X1(3217, J$.W(3209, 'bindToCurrentDomain', J$.T(3201, function (callback) {
                jalangiLabel1344:
                    while (true) {
                        try {
                            J$.Fe(3169, arguments.callee, this, arguments);
                            arguments = J$.N(3177, 'arguments', arguments, 4);
                            callback = J$.N(3185, 'callback', callback, 4);
                            J$.N(3193, 'domain', domain, 0);
                            var domain = J$.X1(3065, J$.W(3057, 'domain', J$.G(3049, J$.R(3041, 'process', process, 2), 'domain', 0), domain, 1));
                            if (J$.X1(27609, J$.C(56, J$.C(48, J$.B(106, '==', J$.R(3073, 'domain', domain, 0), J$.T(3081, null, 25, false), 0)) ? J$._() : J$.B(114, '==', J$.R(3089, 'callback', callback, 0), J$.T(3097, null, 25, false), 0))))
                                return J$.X1(3121, J$.Rt(3113, J$.R(3105, 'callback', callback, 0)));
                            return J$.X1(3161, J$.Rt(3153, J$.M(3145, J$.R(3129, 'domain', domain, 0), 'bind', 0)(J$.R(3137, 'callback', callback, 0))));
                        } catch (J$e) {
                            J$.Ex(27617, J$e);
                        } finally {
                            if (J$.Fr(27625))
                                continue jalangiLabel1344;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3169), bindToCurrentDomain, 3));
            var DISCONNECTED = J$.X1(3241, J$.W(3233, 'DISCONNECTED', J$.T(3225, 'disconnected', 21, false), DISCONNECTED, 3));
            var CONNECTING = J$.X1(3265, J$.W(3257, 'CONNECTING', J$.T(3249, 'connecting', 21, false), CONNECTING, 3));
            var CONNECTED = J$.X1(3289, J$.W(3281, 'CONNECTED', J$.T(3273, 'connected', 21, false), CONNECTED, 3));
            var DESTROYED = J$.X1(3313, J$.W(3305, 'DESTROYED', J$.T(3297, 'destroyed', 21, false), DESTROYED, 3));
            var supportsServer = J$.X1(3425, J$.W(3417, 'supportsServer', J$.T(3409, function (_s) {
                jalangiLabel1345:
                    while (true) {
                        try {
                            J$.Fe(3385, arguments.callee, this, arguments);
                            arguments = J$.N(3393, 'arguments', arguments, 4);
                            _s = J$.N(3401, '_s', _s, 4);
                            return J$.X1(3377, J$.Rt(3369, J$.C(64, J$.G(3329, J$.R(3321, '_s', _s, 0), 'ismaster', 0)) ? J$.B(130, '==', J$.U(122, 'typeof', J$.G(3353, J$.G(3345, J$.R(3337, '_s', _s, 0), 'ismaster', 0), 'minWireVersion', 0)), J$.T(3361, 'number', 21, false), 0) : J$._()));
                        } catch (J$e) {
                            J$.Ex(27633, J$e);
                        } finally {
                            if (J$.Fr(27641))
                                continue jalangiLabel1345;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3385), supportsServer, 3));
            var createWireProtocolHandler = J$.X1(3649, J$.W(3641, 'createWireProtocolHandler', J$.T(3633, function (result) {
                jalangiLabel1346:
                    while (true) {
                        try {
                            J$.Fe(3609, arguments.callee, this, arguments);
                            arguments = J$.N(3617, 'arguments', arguments, 4);
                            result = J$.N(3625, 'result', result, 4);
                            if (J$.X1(27649, J$.C(80, J$.C(72, J$.R(3433, 'result', result, 0)) ? J$.B(138, '>=', J$.G(3449, J$.R(3441, 'result', result, 0), 'maxWireVersion', 0), J$.T(3457, 4, 22, false), 0) : J$._()))) {
                                return J$.X1(3505, J$.Rt(3497, J$.F(3489, J$.R(3465, 'ThreeTwoWireProtocolSupport', ThreeTwoWireProtocolSupport, 1), 1)(J$.F(3481, J$.R(3473, 'TwoSixWireProtocolSupport', TwoSixWireProtocolSupport, 1), 1)())));
                            }
                            if (J$.X1(27657, J$.C(96, J$.C(88, J$.R(3513, 'result', result, 0)) ? J$.B(146, '>=', J$.G(3529, J$.R(3521, 'result', result, 0), 'maxWireVersion', 0), J$.T(3537, 2, 22, false), 0) : J$._()))) {
                                return J$.X1(3569, J$.Rt(3561, J$.F(3553, J$.R(3545, 'TwoSixWireProtocolSupport', TwoSixWireProtocolSupport, 1), 1)()));
                            }
                            return J$.X1(3601, J$.Rt(3593, J$.F(3585, J$.R(3577, 'PreTwoSixWireProtocolSupport', PreTwoSixWireProtocolSupport, 1), 1)()));
                        } catch (J$e) {
                            J$.Ex(27665, J$e);
                        } finally {
                            if (J$.Fr(27673))
                                continue jalangiLabel1346;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3609), createWireProtocolHandler, 3));
            var reconnectServer = J$.X1(5841, J$.W(5833, 'reconnectServer', J$.T(5825, function (self, state) {
                jalangiLabel1352:
                    while (true) {
                        try {
                            J$.Fe(5785, arguments.callee, this, arguments);
                            arguments = J$.N(5793, 'arguments', arguments, 4);
                            self = J$.N(5801, 'self', self, 4);
                            state = J$.N(5809, 'state', state, 4);
                            J$.N(5817, 'reconnectErrorHandler', reconnectErrorHandler, 0);
                            if (J$.X1(27681, J$.C(120, J$.C(112, J$.C(104, J$.R(3657, 'self', self, 0)) ? J$.R(3665, 'state', state, 0) : J$._()) ? J$.G(3681, J$.R(3673, 'state', state, 0), 'callbacks', 0) : J$._()))) {
                                J$.X1(3769, J$.M(3761, J$.G(3697, J$.R(3689, 'state', state, 0), 'callbacks', 0), 'flush', 0)(J$.F(3753, J$.R(3705, 'MongoError', MongoError, 1), 1)(J$.F(3745, J$.R(3713, 'f', f, 1), 0)(J$.T(3721, 'server %s received a broken socket pipe error', 21, false), J$.G(3737, J$.R(3729, 'self', self, 0), 'name', 0)))));
                            }
                            if (J$.X1(27689, J$.C(128, J$.B(154, '==', J$.G(3785, J$.R(3777, 'state', state, 0), 'currentReconnectRetry', 0), J$.T(3793, 0, 22, false), 0)))) {
                                return J$.X1(3841, J$.Rt(3833, J$.M(3825, J$.R(3801, 'self', self, 0), 'destroy', 0)(J$.T(3809, true, 23, false), J$.T(3817, true, 23, false))));
                            }
                            J$.X1(3889, J$.P(3881, J$.R(3849, 'state', state, 0), 'currentReconnectRetry', J$.B(162, '-', J$.G(3865, J$.R(3857, 'state', state, 0), 'currentReconnectRetry', 0), J$.T(3873, 1, 22, false), 0), 0));
                            J$.X1(3921, J$.P(3913, J$.R(3897, 'state', state, 0), 'state', J$.R(3905, 'CONNECTING', CONNECTING, 1), 0));
                            J$.X1(3977, J$.P(3969, J$.R(3929, 'state', state, 0), 'pool', J$.F(3961, J$.R(3937, 'Pool', Pool, 1), 1)(J$.G(3953, J$.R(3945, 'state', state, 0), 'options', 0)), 0));
                            var reconnectErrorHandler = J$.X1(4417, J$.W(4409, 'reconnectErrorHandler', J$.T(4401, function (err) {
                                jalangiLabel1348:
                                    while (true) {
                                        try {
                                            J$.Fe(4377, arguments.callee, this, arguments);
                                            arguments = J$.N(4385, 'arguments', arguments, 4);
                                            err = J$.N(4393, 'err', err, 4);
                                            J$.X1(4009, J$.P(4001, J$.R(3985, 'state', state, 0), 'state', J$.R(3993, 'DISCONNECTED', DISCONNECTED, 1), 0));
                                            J$.X1(4041, J$.M(4033, J$.G(4025, J$.R(4017, 'state', state, 0), 'pool', 0), 'destroy', 0)());
                                            J$.X1(4089, J$.P(4081, J$.R(4049, 'state', state, 0), 'currentReconnectRetry', J$.B(170, '-', J$.G(4065, J$.R(4057, 'state', state, 0), 'currentReconnectRetry', 0), J$.T(4073, 1, 22, false), 0), 0));
                                            if (J$.X1(27713, J$.C(136, J$.B(178, '<=', J$.G(4105, J$.R(4097, 'state', state, 0), 'currentReconnectRetry', 0), J$.T(4113, 0, 22, false), 0)))) {
                                                J$.X1(4145, J$.P(4137, J$.R(4121, 'self', self, 0), 'state', J$.R(4129, 'DESTROYED', DESTROYED, 1), 0));
                                                J$.X1(4265, J$.M(4257, J$.R(4153, 'self', self, 0), 'emit', 0)(J$.T(4161, 'error', 21, false), J$.F(4249, J$.R(4169, 'f', f, 1), 0)(J$.T(4177, 'failed to connect to %s:%s after %s retries', 21, false), J$.G(4201, J$.G(4193, J$.R(4185, 'state', state, 0), 'options', 0), 'host', 0), J$.G(4225, J$.G(4217, J$.R(4209, 'state', state, 0), 'options', 0), 'port', 0), J$.G(4241, J$.R(4233, 'state', state, 0), 'reconnectTries', 0))));
                                            } else {
                                                J$.X1(4369, J$.F(4361, J$.R(4273, 'setTimeout', setTimeout, 2), 0)(J$.T(4337, function () {
                                                    jalangiLabel1347:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(4321, arguments.callee, this, arguments);
                                                                arguments = J$.N(4329, 'arguments', arguments, 4);
                                                                J$.X1(4313, J$.F(4305, J$.R(4281, 'reconnectServer', reconnectServer, 1), 0)(J$.R(4289, 'self', self, 0), J$.R(4297, 'state', state, 0)));
                                                            } catch (J$e) {
                                                                J$.Ex(27697, J$e);
                                                            } finally {
                                                                if (J$.Fr(27705))
                                                                    continue jalangiLabel1347;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 4321), J$.G(4353, J$.R(4345, 'state', state, 0), 'reconnectInterval', 0)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(27721, J$e);
                                        } finally {
                                            if (J$.Fr(27729))
                                                continue jalangiLabel1348;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 4377), reconnectErrorHandler, 1));
                            J$.X1(5457, J$.M(5449, J$.G(4433, J$.R(4425, 'state', state, 0), 'pool', 0), 'once', 0)(J$.T(4441, 'connect', 21, false), J$.T(5441, function () {
                                jalangiLabel1351:
                                    while (true) {
                                        try {
                                            J$.Fe(5393, arguments.callee, this, arguments);
                                            arguments = J$.N(5401, 'arguments', arguments, 4);
                                            J$.N(5409, 'events', events, 0);
                                            J$.N(5417, 'keys', keys, 0);
                                            J$.N(5425, 'count', count, 0);
                                            J$.N(5433, 'i', i, 0);
                                            J$.X1(4481, J$.P(4473, J$.R(4449, 'state', state, 0), 'currentReconnectRetry', J$.G(4465, J$.R(4457, 'state', state, 0), 'reconnectTries', 0), 0));
                                            var events = J$.X1(4537, J$.W(4529, 'events', J$.T(4521, [
                                                J$.T(4489, 'error', 21, false),
                                                J$.T(4497, 'close', 21, false),
                                                J$.T(4505, 'timeout', 21, false),
                                                J$.T(4513, 'parseError', 21, false)
                                            ], 10, false), events, 1));
                                            J$.X1(4633, J$.M(4625, J$.R(4545, 'events', events, 0), 'forEach', 0)(J$.T(4617, function (e) {
                                                jalangiLabel1349:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(4593, arguments.callee, this, arguments);
                                                            arguments = J$.N(4601, 'arguments', arguments, 4);
                                                            e = J$.N(4609, 'e', e, 4);
                                                            J$.X1(4585, J$.M(4577, J$.G(4561, J$.R(4553, 'state', state, 0), 'pool', 0), 'removeAllListeners', 0)(J$.R(4569, 'e', e, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(27737, J$e);
                                                        } finally {
                                                            if (J$.Fr(27745))
                                                                continue jalangiLabel1349;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 4593)));
                                            J$.X1(4665, J$.P(4657, J$.R(4641, 'state', state, 0), 'state', J$.R(4649, 'CONNECTED', CONNECTED, 1), 0));
                                            J$.X1(4713, J$.M(4705, J$.G(4681, J$.R(4673, 'state', state, 0), 'pool', 0), 'once', 0)(J$.T(4689, 'error', 21, false), J$.R(4697, 'reconnectErrorHandler', reconnectErrorHandler, 0)));
                                            J$.X1(4785, J$.M(4777, J$.G(4729, J$.R(4721, 'state', state, 0), 'pool', 0), 'once', 0)(J$.T(4737, 'close', 21, false), J$.F(4769, J$.R(4745, 'closeHandler', closeHandler, 1), 0)(J$.R(4753, 'self', self, 0), J$.R(4761, 'state', state, 0))));
                                            J$.X1(4857, J$.M(4849, J$.G(4801, J$.R(4793, 'state', state, 0), 'pool', 0), 'once', 0)(J$.T(4809, 'timeout', 21, false), J$.F(4841, J$.R(4817, 'timeoutHandler', timeoutHandler, 1), 0)(J$.R(4825, 'self', self, 0), J$.R(4833, 'state', state, 0))));
                                            J$.X1(4929, J$.M(4921, J$.G(4873, J$.R(4865, 'state', state, 0), 'pool', 0), 'once', 0)(J$.T(4881, 'parseError', 21, false), J$.F(4913, J$.R(4889, 'fatalErrorHandler', fatalErrorHandler, 1), 0)(J$.R(4897, 'self', self, 0), J$.R(4905, 'state', state, 0))));
                                            var keys = J$.X1(4977, J$.W(4969, 'keys', J$.M(4961, J$.R(4937, 'Object', Object, 2), 'keys', 0)(J$.G(4953, J$.R(4945, 'state', state, 0), 'authProviders', 0)), keys, 1));
                                            if (J$.X1(27753, J$.C(144, J$.B(186, '==', J$.G(4993, J$.R(4985, 'keys', keys, 0), 'length', 0), J$.T(5001, 0, 22, false), 0))))
                                                return J$.X1(5049, J$.Rt(5041, J$.M(5033, J$.R(5009, 'self', self, 0), 'emit', 0)(J$.T(5017, 'reconnect', 21, false), J$.R(5025, 'self', self, 0))));
                                            var count = J$.X1(5081, J$.W(5073, 'count', J$.G(5065, J$.R(5057, 'keys', keys, 0), 'length', 0), count, 1));
                                            for (var i = J$.X1(5105, J$.W(5097, 'i', J$.T(5089, 0, 22, false), i, 1)); J$.X1(27785, J$.C(160, J$.B(194, '<', J$.R(5113, 'i', i, 0), J$.G(5129, J$.R(5121, 'keys', keys, 0), 'length', 0), 0))); J$.X1(27793, J$.B(218, '-', i = J$.W(5153, 'i', J$.B(210, '+', J$.U(202, '+', J$.R(5145, 'i', i, 0)), J$.T(5137, 1, 22, false), 0), i, 0), J$.T(5161, 1, 22, false), 0))) {
                                                J$.X1(5385, J$.M(5377, J$.G(5209, J$.G(5177, J$.R(5169, 'state', state, 0), 'authProviders', 0), J$.G(5201, J$.R(5185, 'keys', keys, 0), J$.R(5193, 'i', i, 0), 4), 4), 'reauthenticate', 0)(J$.R(5217, 'self', self, 0), J$.G(5233, J$.R(5225, 'state', state, 0), 'pool', 0), J$.T(5369, function (err, r) {
                                                    jalangiLabel1350:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(5337, arguments.callee, this, arguments);
                                                                arguments = J$.N(5345, 'arguments', arguments, 4);
                                                                err = J$.N(5353, 'err', err, 4);
                                                                r = J$.N(5361, 'r', r, 4);
                                                                J$.X1(5265, count = J$.W(5257, 'count', J$.B(226, '-', J$.R(5241, 'count', count, 0), J$.T(5249, 1, 22, false), 0), count, 0));
                                                                if (J$.X1(27761, J$.C(152, J$.B(234, '==', J$.R(5273, 'count', count, 0), J$.T(5281, 0, 22, false), 0)))) {
                                                                    return J$.X1(5329, J$.Rt(5321, J$.M(5313, J$.R(5289, 'self', self, 0), 'emit', 0)(J$.T(5297, 'reconnect', 21, false), J$.R(5305, 'self', self, 0))));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(27769, J$e);
                                                            } finally {
                                                                if (J$.Fr(27777))
                                                                    continue jalangiLabel1350;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 5337)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(27801, J$e);
                                        } finally {
                                            if (J$.Fr(27809))
                                                continue jalangiLabel1351;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 5393)));
                            J$.X1(5529, J$.M(5521, J$.G(5473, J$.R(5465, 'state', state, 0), 'pool', 0), 'once', 0)(J$.T(5481, 'error', 21, false), J$.F(5513, J$.R(5489, 'errorHandler', errorHandler, 1), 0)(J$.R(5497, 'self', self, 0), J$.R(5505, 'state', state, 0))));
                            J$.X1(5601, J$.M(5593, J$.G(5545, J$.R(5537, 'state', state, 0), 'pool', 0), 'once', 0)(J$.T(5553, 'close', 21, false), J$.F(5585, J$.R(5561, 'errorHandler', errorHandler, 1), 0)(J$.R(5569, 'self', self, 0), J$.R(5577, 'state', state, 0))));
                            J$.X1(5673, J$.M(5665, J$.G(5617, J$.R(5609, 'state', state, 0), 'pool', 0), 'once', 0)(J$.T(5625, 'timeout', 21, false), J$.F(5657, J$.R(5633, 'errorHandler', errorHandler, 1), 0)(J$.R(5641, 'self', self, 0), J$.R(5649, 'state', state, 0))));
                            J$.X1(5745, J$.M(5737, J$.G(5689, J$.R(5681, 'state', state, 0), 'pool', 0), 'once', 0)(J$.T(5697, 'parseError', 21, false), J$.F(5729, J$.R(5705, 'errorHandler', errorHandler, 1), 0)(J$.R(5713, 'self', self, 0), J$.R(5721, 'state', state, 0))));
                            J$.X1(5777, J$.M(5769, J$.G(5761, J$.R(5753, 'state', state, 0), 'pool', 0), 'connect', 0)());
                        } catch (J$e) {
                            J$.Ex(27817, J$e);
                        } finally {
                            if (J$.Fr(27825))
                                continue jalangiLabel1352;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5785), reconnectServer, 3));
            var messageHandler = J$.X1(6345, J$.W(6337, 'messageHandler', J$.T(6329, function (self, state) {
                jalangiLabel1354:
                    while (true) {
                        try {
                            J$.Fe(6297, arguments.callee, this, arguments);
                            arguments = J$.N(6305, 'arguments', arguments, 4);
                            self = J$.N(6313, 'self', self, 4);
                            state = J$.N(6321, 'state', state, 4);
                            return J$.X1(6289, J$.Rt(6281, J$.T(6273, function (response, connection) {
                                jalangiLabel1353:
                                    while (true) {
                                        try {
                                            J$.Fe(6241, arguments.callee, this, arguments);
                                            arguments = J$.N(6249, 'arguments', arguments, 4);
                                            response = J$.N(6257, 'response', response, 4);
                                            connection = J$.N(6265, 'connection', connection, 4);
                                            try {
                                                J$.X1(5953, J$.M(5945, J$.R(5849, 'response', response, 0), 'parse', 0)(J$.T(5937, {
                                                    raw: J$.M(5889, J$.G(5865, J$.R(5857, 'state', state, 0), 'callbacks', 0), 'raw', 0)(J$.G(5881, J$.R(5873, 'response', response, 0), 'responseTo', 0)),
                                                    documentsReturnedIn: J$.M(5929, J$.G(5905, J$.R(5897, 'state', state, 0), 'callbacks', 0), 'documentsReturnedIn', 0)(J$.G(5921, J$.R(5913, 'response', response, 0), 'responseTo', 0))
                                                }, 11, false)));
                                                if (J$.X1(27833, J$.C(168, J$.M(5977, J$.G(5969, J$.R(5961, 'state', state, 0), 'logger', 0), 'isDebug', 0)())))
                                                    J$.X1(6081, J$.M(6073, J$.G(5993, J$.R(5985, 'state', state, 0), 'logger', 0), 'debug', 0)(J$.F(6065, J$.R(6001, 'f', f, 1), 0)(J$.T(6009, 'message [%s] received from %s', 21, false), J$.M(6041, J$.G(6025, J$.R(6017, 'response', response, 0), 'raw', 0), 'toString', 0)(J$.T(6033, 'hex', 21, false)), J$.G(6057, J$.R(6049, 'self', self, 0), 'name', 0))));
                                                J$.X1(6145, J$.M(6137, J$.G(6097, J$.R(6089, 'state', state, 0), 'callbacks', 0), 'emit', 0)(J$.G(6113, J$.R(6105, 'response', response, 0), 'responseTo', 0), J$.T(6121, null, 25, false), J$.R(6129, 'response', response, 0)));
                                            } catch (err) {
                                                err = J$.N(6233, 'err', err, 1);
                                                J$.X1(6201, J$.M(6193, J$.G(6161, J$.R(6153, 'state', state, 0), 'callbacks', 0), 'flush', 0)(J$.F(6185, J$.R(6169, 'MongoError', MongoError, 1), 1)(J$.R(6177, 'err', err, 0))));
                                                J$.X1(6225, J$.M(6217, J$.R(6209, 'self', self, 0), 'destroy', 0)());
                                            }
                                        } catch (J$e) {
                                            J$.Ex(27841, J$e);
                                        } finally {
                                            if (J$.Fr(27849))
                                                continue jalangiLabel1353;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 6241)));
                        } catch (J$e) {
                            J$.Ex(27857, J$e);
                        } finally {
                            if (J$.Fr(27865))
                                continue jalangiLabel1354;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 6297), messageHandler, 3));
            var errorHandler = J$.X1(7145, J$.W(7137, 'errorHandler', J$.T(7129, function (self, state) {
                jalangiLabel1357:
                    while (true) {
                        try {
                            J$.Fe(7097, arguments.callee, this, arguments);
                            arguments = J$.N(7105, 'arguments', arguments, 4);
                            self = J$.N(7113, 'self', self, 4);
                            state = J$.N(7121, 'state', state, 4);
                            return J$.X1(7089, J$.Rt(7081, J$.T(7073, function (err, connection) {
                                jalangiLabel1356:
                                    while (true) {
                                        try {
                                            J$.Fe(7041, arguments.callee, this, arguments);
                                            arguments = J$.N(7049, 'arguments', arguments, 4);
                                            err = J$.N(7057, 'err', err, 4);
                                            connection = J$.N(7065, 'connection', connection, 4);
                                            if (J$.X1(27873, J$.C(184, J$.C(176, J$.B(242, '==', J$.G(6361, J$.R(6353, 'state', state, 0), 'state', 0), J$.R(6369, 'DISCONNECTED', DISCONNECTED, 1), 0)) ? J$._() : J$.B(250, '==', J$.G(6385, J$.R(6377, 'state', state, 0), 'state', 0), J$.R(6393, 'DESTROYED', DESTROYED, 1), 0))))
                                                return J$.X1(6409, J$.Rt(6401, undefined));
                                            J$.X1(6441, J$.P(6433, J$.R(6417, 'state', state, 0), 'state', J$.R(6425, 'DISCONNECTED', DISCONNECTED, 1), 0));
                                            if (J$.X1(27881, J$.C(192, J$.B(258, '!=', J$.G(6457, J$.R(6449, 'state', state, 0), 'readPreferenceStrategies', 0), J$.T(6465, null, 25, false), 0))))
                                                J$.X1(6537, J$.F(6529, J$.R(6473, 'notifyStrategies', notifyStrategies, 1), 0)(J$.R(6481, 'self', self, 0), J$.G(6497, J$.R(6489, 'self', self, 0), 's', 0), J$.T(6505, 'error', 21, false), J$.T(6521, [J$.R(6513, 'self', self, 0)], 10, false)));
                                            if (J$.X1(27889, J$.C(200, J$.M(6561, J$.G(6553, J$.R(6545, 'state', state, 0), 'logger', 0), 'isInfo', 0)())))
                                                J$.X1(6657, J$.M(6649, J$.G(6577, J$.R(6569, 'state', state, 0), 'logger', 0), 'info', 0)(J$.F(6641, J$.R(6585, 'f', f, 1), 0)(J$.T(6593, 'server %s errored out with %s', 21, false), J$.G(6609, J$.R(6601, 'self', self, 0), 'name', 0), J$.M(6633, J$.R(6617, 'JSON', JSON, 2), 'stringify', 0)(J$.R(6625, 'err', err, 0)))));
                                            if (J$.X1(27897, J$.C(208, J$.G(6673, J$.R(6665, 'state', state, 0), 'callbacks', 0))))
                                                J$.X1(6785, J$.M(6777, J$.G(6689, J$.R(6681, 'state', state, 0), 'callbacks', 0), 'flush', 0)(J$.F(6769, J$.R(6697, 'MongoError', MongoError, 1), 1)(J$.F(6761, J$.R(6705, 'f', f, 1), 0)(J$.T(6713, 'server %s received an error %s', 21, false), J$.G(6729, J$.R(6721, 'self', self, 0), 'name', 0), J$.M(6753, J$.R(6737, 'JSON', JSON, 2), 'stringify', 0)(J$.R(6745, 'err', err, 0))))));
                                            J$.X1(6809, J$.M(6801, J$.R(6793, 'self', self, 0), 'destroy', 0)());
                                            if (J$.X1(27905, J$.C(224, J$.C(216, J$.G(6825, J$.R(6817, 'state', state, 0), 'emitError', 0)) ? J$.B(266, '>', J$.G(6857, J$.M(6849, J$.R(6833, 'self', self, 0), 'listeners', 0)(J$.T(6841, 'error', 21, false)), 'length', 0), J$.T(6865, 0, 22, false), 0) : J$._())))
                                                J$.X1(6913, J$.M(6905, J$.R(6873, 'self', self, 0), 'emit', 0)(J$.T(6881, 'error', 21, false), J$.R(6889, 'err', err, 0), J$.R(6897, 'self', self, 0)));
                                            if (J$.X1(27929, J$.C(232, J$.G(6929, J$.R(6921, 'state', state, 0), 'reconnect', 0))))
                                                J$.X1(7033, J$.F(7025, J$.R(6937, 'setTimeout', setTimeout, 2), 0)(J$.T(7001, function () {
                                                jalangiLabel1355:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(6985, arguments.callee, this, arguments);
                                                            arguments = J$.N(6993, 'arguments', arguments, 4);
                                                            J$.X1(6977, J$.F(6969, J$.R(6945, 'reconnectServer', reconnectServer, 1), 0)(J$.R(6953, 'self', self, 0), J$.R(6961, 'state', state, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(27913, J$e);
                                                        } finally {
                                                            if (J$.Fr(27921))
                                                                continue jalangiLabel1355;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 6985), J$.G(7017, J$.R(7009, 'state', state, 0), 'reconnectInterval', 0)));
                                        } catch (J$e) {
                                            J$.Ex(27937, J$e);
                                        } finally {
                                            if (J$.Fr(27945))
                                                continue jalangiLabel1356;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 7041)));
                        } catch (J$e) {
                            J$.Ex(27953, J$e);
                        } finally {
                            if (J$.Fr(27961))
                                continue jalangiLabel1357;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 7097), errorHandler, 3));
            var fatalErrorHandler = J$.X1(7929, J$.W(7921, 'fatalErrorHandler', J$.T(7913, function (self, state) {
                jalangiLabel1360:
                    while (true) {
                        try {
                            J$.Fe(7881, arguments.callee, this, arguments);
                            arguments = J$.N(7889, 'arguments', arguments, 4);
                            self = J$.N(7897, 'self', self, 4);
                            state = J$.N(7905, 'state', state, 4);
                            return J$.X1(7873, J$.Rt(7865, J$.T(7857, function (err, connection) {
                                jalangiLabel1359:
                                    while (true) {
                                        try {
                                            J$.Fe(7825, arguments.callee, this, arguments);
                                            arguments = J$.N(7833, 'arguments', arguments, 4);
                                            err = J$.N(7841, 'err', err, 4);
                                            connection = J$.N(7849, 'connection', connection, 4);
                                            if (J$.X1(27969, J$.C(248, J$.C(240, J$.B(274, '==', J$.G(7161, J$.R(7153, 'state', state, 0), 'state', 0), J$.R(7169, 'DISCONNECTED', DISCONNECTED, 1), 0)) ? J$._() : J$.B(282, '==', J$.G(7185, J$.R(7177, 'state', state, 0), 'state', 0), J$.R(7193, 'DESTROYED', DESTROYED, 1), 0))))
                                                return J$.X1(7209, J$.Rt(7201, undefined));
                                            J$.X1(7241, J$.P(7233, J$.R(7217, 'state', state, 0), 'state', J$.R(7225, 'DISCONNECTED', DISCONNECTED, 1), 0));
                                            if (J$.X1(27977, J$.C(256, J$.B(290, '!=', J$.G(7257, J$.R(7249, 'state', state, 0), 'readPreferenceStrategies', 0), J$.T(7265, null, 25, false), 0))))
                                                J$.X1(7337, J$.F(7329, J$.R(7273, 'notifyStrategies', notifyStrategies, 1), 0)(J$.R(7281, 'self', self, 0), J$.G(7297, J$.R(7289, 'self', self, 0), 's', 0), J$.T(7305, 'error', 21, false), J$.T(7321, [J$.R(7313, 'self', self, 0)], 10, false)));
                                            if (J$.X1(27985, J$.C(264, J$.M(7361, J$.G(7353, J$.R(7345, 'state', state, 0), 'logger', 0), 'isInfo', 0)())))
                                                J$.X1(7457, J$.M(7449, J$.G(7377, J$.R(7369, 'state', state, 0), 'logger', 0), 'info', 0)(J$.F(7441, J$.R(7385, 'f', f, 1), 0)(J$.T(7393, 'server %s errored out with %s', 21, false), J$.G(7409, J$.R(7401, 'self', self, 0), 'name', 0), J$.M(7433, J$.R(7417, 'JSON', JSON, 2), 'stringify', 0)(J$.R(7425, 'err', err, 0)))));
                                            if (J$.X1(27993, J$.C(272, J$.G(7473, J$.R(7465, 'state', state, 0), 'callbacks', 0))))
                                                J$.X1(7585, J$.M(7577, J$.G(7489, J$.R(7481, 'state', state, 0), 'callbacks', 0), 'flush', 0)(J$.F(7569, J$.R(7497, 'MongoError', MongoError, 1), 1)(J$.F(7561, J$.R(7505, 'f', f, 1), 0)(J$.T(7513, 'server %s received an error %s', 21, false), J$.G(7529, J$.R(7521, 'self', self, 0), 'name', 0), J$.M(7553, J$.R(7537, 'JSON', JSON, 2), 'stringify', 0)(J$.R(7545, 'err', err, 0))))));
                                            if (J$.X1(28001, J$.C(280, J$.B(298, '>', J$.G(7617, J$.M(7609, J$.R(7593, 'self', self, 0), 'listeners', 0)(J$.T(7601, 'error', 21, false)), 'length', 0), J$.T(7625, 0, 22, false), 0))))
                                                J$.X1(7673, J$.M(7665, J$.R(7633, 'self', self, 0), 'emit', 0)(J$.T(7641, 'error', 21, false), J$.R(7649, 'err', err, 0), J$.R(7657, 'self', self, 0)));
                                            if (J$.X1(28025, J$.C(288, J$.G(7689, J$.R(7681, 'state', state, 0), 'reconnect', 0))))
                                                J$.X1(7793, J$.F(7785, J$.R(7697, 'setTimeout', setTimeout, 2), 0)(J$.T(7761, function () {
                                                jalangiLabel1358:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(7745, arguments.callee, this, arguments);
                                                            arguments = J$.N(7753, 'arguments', arguments, 4);
                                                            J$.X1(7737, J$.F(7729, J$.R(7705, 'reconnectServer', reconnectServer, 1), 0)(J$.R(7713, 'self', self, 0), J$.R(7721, 'state', state, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(28009, J$e);
                                                        } finally {
                                                            if (J$.Fr(28017))
                                                                continue jalangiLabel1358;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 7745), J$.G(7777, J$.R(7769, 'state', state, 0), 'reconnectInterval', 0)));
                                            J$.X1(7817, J$.M(7809, J$.R(7801, 'self', self, 0), 'destroy', 0)());
                                        } catch (J$e) {
                                            J$.Ex(28033, J$e);
                                        } finally {
                                            if (J$.Fr(28041))
                                                continue jalangiLabel1359;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 7825)));
                        } catch (J$e) {
                            J$.Ex(28049, J$e);
                        } finally {
                            if (J$.Fr(28057))
                                continue jalangiLabel1360;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 7881), fatalErrorHandler, 3));
            var timeoutHandler = J$.X1(8625, J$.W(8617, 'timeoutHandler', J$.T(8609, function (self, state) {
                jalangiLabel1363:
                    while (true) {
                        try {
                            J$.Fe(8577, arguments.callee, this, arguments);
                            arguments = J$.N(8585, 'arguments', arguments, 4);
                            self = J$.N(8593, 'self', self, 4);
                            state = J$.N(8601, 'state', state, 4);
                            return J$.X1(8569, J$.Rt(8561, J$.T(8553, function (err, connection) {
                                jalangiLabel1362:
                                    while (true) {
                                        try {
                                            J$.Fe(8521, arguments.callee, this, arguments);
                                            arguments = J$.N(8529, 'arguments', arguments, 4);
                                            err = J$.N(8537, 'err', err, 4);
                                            connection = J$.N(8545, 'connection', connection, 4);
                                            if (J$.X1(28065, J$.C(304, J$.C(296, J$.B(306, '==', J$.G(7945, J$.R(7937, 'state', state, 0), 'state', 0), J$.R(7953, 'DISCONNECTED', DISCONNECTED, 1), 0)) ? J$._() : J$.B(314, '==', J$.G(7969, J$.R(7961, 'state', state, 0), 'state', 0), J$.R(7977, 'DESTROYED', DESTROYED, 1), 0))))
                                                return J$.X1(7993, J$.Rt(7985, undefined));
                                            J$.X1(8025, J$.P(8017, J$.R(8001, 'state', state, 0), 'state', J$.R(8009, 'DISCONNECTED', DISCONNECTED, 1), 0));
                                            if (J$.X1(28073, J$.C(312, J$.B(322, '!=', J$.G(8041, J$.R(8033, 'state', state, 0), 'readPreferenceStrategies', 0), J$.T(8049, null, 25, false), 0))))
                                                J$.X1(8121, J$.F(8113, J$.R(8057, 'notifyStrategies', notifyStrategies, 1), 0)(J$.R(8065, 'self', self, 0), J$.G(8081, J$.R(8073, 'self', self, 0), 's', 0), J$.T(8089, 'timeout', 21, false), J$.T(8105, [J$.R(8097, 'self', self, 0)], 10, false)));
                                            if (J$.X1(28081, J$.C(320, J$.M(8145, J$.G(8137, J$.R(8129, 'state', state, 0), 'logger', 0), 'isInfo', 0)())))
                                                J$.X1(8217, J$.M(8209, J$.G(8161, J$.R(8153, 'state', state, 0), 'logger', 0), 'info', 0)(J$.F(8201, J$.R(8169, 'f', f, 1), 0)(J$.T(8177, 'server %s timed out', 21, false), J$.G(8193, J$.R(8185, 'self', self, 0), 'name', 0))));
                                            if (J$.X1(28089, J$.C(328, J$.G(8233, J$.R(8225, 'state', state, 0), 'callbacks', 0))))
                                                J$.X1(8321, J$.M(8313, J$.G(8249, J$.R(8241, 'state', state, 0), 'callbacks', 0), 'flush', 0)(J$.F(8305, J$.R(8257, 'MongoError', MongoError, 1), 1)(J$.F(8297, J$.R(8265, 'f', f, 1), 0)(J$.T(8273, 'server %s timed out', 21, false), J$.G(8289, J$.R(8281, 'self', self, 0), 'name', 0)))));
                                            J$.X1(8369, J$.M(8361, J$.R(8329, 'self', self, 0), 'emit', 0)(J$.T(8337, 'timeout', 21, false), J$.R(8345, 'err', err, 0), J$.R(8353, 'self', self, 0)));
                                            if (J$.X1(28113, J$.C(336, J$.G(8385, J$.R(8377, 'state', state, 0), 'reconnect', 0))))
                                                J$.X1(8489, J$.F(8481, J$.R(8393, 'setTimeout', setTimeout, 2), 0)(J$.T(8457, function () {
                                                jalangiLabel1361:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(8441, arguments.callee, this, arguments);
                                                            arguments = J$.N(8449, 'arguments', arguments, 4);
                                                            J$.X1(8433, J$.F(8425, J$.R(8401, 'reconnectServer', reconnectServer, 1), 0)(J$.R(8409, 'self', self, 0), J$.R(8417, 'state', state, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(28097, J$e);
                                                        } finally {
                                                            if (J$.Fr(28105))
                                                                continue jalangiLabel1361;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 8441), J$.G(8473, J$.R(8465, 'state', state, 0), 'reconnectInterval', 0)));
                                            J$.X1(8513, J$.M(8505, J$.R(8497, 'self', self, 0), 'destroy', 0)());
                                        } catch (J$e) {
                                            J$.Ex(28121, J$e);
                                        } finally {
                                            if (J$.Fr(28129))
                                                continue jalangiLabel1362;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 8521)));
                        } catch (J$e) {
                            J$.Ex(28137, J$e);
                        } finally {
                            if (J$.Fr(28145))
                                continue jalangiLabel1363;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 8577), timeoutHandler, 3));
            var closeHandler = J$.X1(9321, J$.W(9313, 'closeHandler', J$.T(9305, function (self, state) {
                jalangiLabel1366:
                    while (true) {
                        try {
                            J$.Fe(9273, arguments.callee, this, arguments);
                            arguments = J$.N(9281, 'arguments', arguments, 4);
                            self = J$.N(9289, 'self', self, 4);
                            state = J$.N(9297, 'state', state, 4);
                            return J$.X1(9265, J$.Rt(9257, J$.T(9249, function (err, connection) {
                                jalangiLabel1365:
                                    while (true) {
                                        try {
                                            J$.Fe(9217, arguments.callee, this, arguments);
                                            arguments = J$.N(9225, 'arguments', arguments, 4);
                                            err = J$.N(9233, 'err', err, 4);
                                            connection = J$.N(9241, 'connection', connection, 4);
                                            if (J$.X1(28153, J$.C(352, J$.C(344, J$.B(330, '==', J$.G(8641, J$.R(8633, 'state', state, 0), 'state', 0), J$.R(8649, 'DISCONNECTED', DISCONNECTED, 1), 0)) ? J$._() : J$.B(338, '==', J$.G(8665, J$.R(8657, 'state', state, 0), 'state', 0), J$.R(8673, 'DESTROYED', DESTROYED, 1), 0))))
                                                return J$.X1(8689, J$.Rt(8681, undefined));
                                            J$.X1(8721, J$.P(8713, J$.R(8697, 'state', state, 0), 'state', J$.R(8705, 'DISCONNECTED', DISCONNECTED, 1), 0));
                                            if (J$.X1(28161, J$.C(360, J$.B(346, '!=', J$.G(8737, J$.R(8729, 'state', state, 0), 'readPreferenceStrategies', 0), J$.T(8745, null, 25, false), 0))))
                                                J$.X1(8817, J$.F(8809, J$.R(8753, 'notifyStrategies', notifyStrategies, 1), 0)(J$.R(8761, 'self', self, 0), J$.G(8777, J$.R(8769, 'self', self, 0), 's', 0), J$.T(8785, 'close', 21, false), J$.T(8801, [J$.R(8793, 'self', self, 0)], 10, false)));
                                            if (J$.X1(28169, J$.C(368, J$.M(8841, J$.G(8833, J$.R(8825, 'state', state, 0), 'logger', 0), 'isInfo', 0)())))
                                                J$.X1(8913, J$.M(8905, J$.G(8857, J$.R(8849, 'state', state, 0), 'logger', 0), 'info', 0)(J$.F(8897, J$.R(8865, 'f', f, 1), 0)(J$.T(8873, 'server %s closed', 21, false), J$.G(8889, J$.R(8881, 'self', self, 0), 'name', 0))));
                                            if (J$.X1(28177, J$.C(376, J$.G(8929, J$.R(8921, 'state', state, 0), 'callbacks', 0))))
                                                J$.X1(9017, J$.M(9009, J$.G(8945, J$.R(8937, 'state', state, 0), 'callbacks', 0), 'flush', 0)(J$.F(9001, J$.R(8953, 'MongoError', MongoError, 1), 1)(J$.F(8993, J$.R(8961, 'f', f, 1), 0)(J$.T(8969, 'server %s sockets closed', 21, false), J$.G(8985, J$.R(8977, 'self', self, 0), 'name', 0)))));
                                            J$.X1(9065, J$.M(9057, J$.R(9025, 'self', self, 0), 'emit', 0)(J$.T(9033, 'close', 21, false), J$.R(9041, 'err', err, 0), J$.R(9049, 'self', self, 0)));
                                            if (J$.X1(28201, J$.C(384, J$.G(9081, J$.R(9073, 'state', state, 0), 'reconnect', 0))))
                                                J$.X1(9185, J$.F(9177, J$.R(9089, 'setTimeout', setTimeout, 2), 0)(J$.T(9153, function () {
                                                jalangiLabel1364:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(9137, arguments.callee, this, arguments);
                                                            arguments = J$.N(9145, 'arguments', arguments, 4);
                                                            J$.X1(9129, J$.F(9121, J$.R(9097, 'reconnectServer', reconnectServer, 1), 0)(J$.R(9105, 'self', self, 0), J$.R(9113, 'state', state, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(28185, J$e);
                                                        } finally {
                                                            if (J$.Fr(28193))
                                                                continue jalangiLabel1364;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 9137), J$.G(9169, J$.R(9161, 'state', state, 0), 'reconnectInterval', 0)));
                                            J$.X1(9209, J$.M(9201, J$.R(9193, 'self', self, 0), 'destroy', 0)());
                                        } catch (J$e) {
                                            J$.Ex(28209, J$e);
                                        } finally {
                                            if (J$.Fr(28217))
                                                continue jalangiLabel1365;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 9217)));
                        } catch (J$e) {
                            J$.Ex(28225, J$e);
                        } finally {
                            if (J$.Fr(28233))
                                continue jalangiLabel1366;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 9273), closeHandler, 3));
            var connectHandler = J$.X1(11177, J$.W(11169, 'connectHandler', J$.T(11161, function (self, state) {
                jalangiLabel1373:
                    while (true) {
                        try {
                            J$.Fe(11121, arguments.callee, this, arguments);
                            arguments = J$.N(11129, 'arguments', arguments, 4);
                            self = J$.N(11137, 'self', self, 4);
                            state = J$.N(11145, 'state', state, 4);
                            J$.N(11153, 'applyAuthentications', applyAuthentications, 0);
                            var applyAuthentications = J$.X1(9849, J$.W(9841, 'applyAuthentications', J$.T(9833, function (callback) {
                                jalangiLabel1368:
                                    while (true) {
                                        try {
                                            J$.Fe(9785, arguments.callee, this, arguments);
                                            arguments = J$.N(9793, 'arguments', arguments, 4);
                                            callback = J$.N(9801, 'callback', callback, 4);
                                            J$.N(9809, 'keys', keys, 0);
                                            J$.N(9817, 'count', count, 0);
                                            J$.N(9825, 'i', i, 0);
                                            var keys = J$.X1(9369, J$.W(9361, 'keys', J$.M(9353, J$.R(9329, 'Object', Object, 2), 'keys', 0)(J$.G(9345, J$.R(9337, 'state', state, 0), 'authProviders', 0)), keys, 1));
                                            if (J$.X1(28241, J$.C(392, J$.B(354, '==', J$.G(9385, J$.R(9377, 'keys', keys, 0), 'length', 0), J$.T(9393, 0, 22, false), 0))))
                                                return J$.X1(9441, J$.Rt(9433, J$.F(9425, J$.R(9401, 'callback', callback, 0), 0)(J$.T(9409, null, 25, false), J$.T(9417, null, 25, false))));
                                            var count = J$.X1(9473, J$.W(9465, 'count', J$.G(9457, J$.R(9449, 'keys', keys, 0), 'length', 0), count, 1));
                                            for (var i = J$.X1(9497, J$.W(9489, 'i', J$.T(9481, 0, 22, false), i, 1)); J$.X1(28273, J$.C(408, J$.B(362, '<', J$.R(9505, 'i', i, 0), J$.G(9521, J$.R(9513, 'keys', keys, 0), 'length', 0), 0))); J$.X1(28281, J$.B(386, '-', i = J$.W(9545, 'i', J$.B(378, '+', J$.U(370, '+', J$.R(9537, 'i', i, 0)), J$.T(9529, 1, 22, false), 0), i, 0), J$.T(9553, 1, 22, false), 0))) {
                                                J$.X1(9777, J$.M(9769, J$.G(9601, J$.G(9569, J$.R(9561, 'state', state, 0), 'authProviders', 0), J$.G(9593, J$.R(9577, 'keys', keys, 0), J$.R(9585, 'i', i, 0), 4), 4), 'reauthenticate', 0)(J$.R(9609, 'self', self, 0), J$.G(9625, J$.R(9617, 'state', state, 0), 'pool', 0), J$.T(9761, function (err, r) {
                                                    jalangiLabel1367:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(9729, arguments.callee, this, arguments);
                                                                arguments = J$.N(9737, 'arguments', arguments, 4);
                                                                err = J$.N(9745, 'err', err, 4);
                                                                r = J$.N(9753, 'r', r, 4);
                                                                J$.X1(9657, count = J$.W(9649, 'count', J$.B(394, '-', J$.R(9633, 'count', count, 0), J$.T(9641, 1, 22, false), 0), count, 0));
                                                                if (J$.X1(28249, J$.C(400, J$.B(402, '==', J$.R(9665, 'count', count, 0), J$.T(9673, 0, 22, false), 0)))) {
                                                                    return J$.X1(9721, J$.Rt(9713, J$.F(9705, J$.R(9681, 'callback', callback, 0), 0)(J$.T(9689, null, 25, false), J$.T(9697, null, 25, false))));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(28257, J$e);
                                                            } finally {
                                                                if (J$.Fr(28265))
                                                                    continue jalangiLabel1367;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 9729)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(28289, J$e);
                                        } finally {
                                            if (J$.Fr(28297))
                                                continue jalangiLabel1368;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 9785), applyAuthentications, 1));
                            return J$.X1(11113, J$.Rt(11105, J$.T(11097, function (connection) {
                                jalangiLabel1372:
                                    while (true) {
                                        try {
                                            J$.Fe(11073, arguments.callee, this, arguments);
                                            arguments = J$.N(11081, 'arguments', arguments, 4);
                                            connection = J$.N(11089, 'connection', connection, 4);
                                            J$.X1(11065, J$.F(11057, J$.R(9857, 'applyAuthentications', applyAuthentications, 0), 0)(J$.T(11049, function () {
                                                jalangiLabel1371:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(11025, arguments.callee, this, arguments);
                                                            arguments = J$.N(11033, 'arguments', arguments, 4);
                                                            J$.N(11041, 'start', start, 0);
                                                            var start = J$.X1(9897, J$.W(9889, 'start', J$.M(9881, J$.F(9873, J$.R(9865, 'Date', Date, 2), 1)(), 'getTime', 0)(), start, 1));
                                                            J$.X1(11017, J$.M(11009, J$.R(9905, 'self', self, 0), 'command', 0)(J$.T(9913, 'admin.$cmd', 21, false), J$.T(9929, {
                                                                ismaster: J$.T(9921, true, 23, false)
                                                            }, 11, false), J$.T(11001, function (err, r) {
                                                                jalangiLabel1370:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(10969, arguments.callee, this, arguments);
                                                                            arguments = J$.N(10977, 'arguments', arguments, 4);
                                                                            err = J$.N(10985, 'err', err, 4);
                                                                            r = J$.N(10993, 'r', r, 4);
                                                                            if (J$.X1(28305, J$.C(416, J$.R(9937, 'err', err, 0)))) {
                                                                                J$.X1(9969, J$.P(9961, J$.R(9945, 'state', state, 0), 'state', J$.R(9953, 'DISCONNECTED', DISCONNECTED, 1), 0));
                                                                                return J$.X1(10025, J$.Rt(10017, J$.M(10009, J$.R(9977, 'self', self, 0), 'emit', 0)(J$.T(9985, 'close', 21, false), J$.R(9993, 'err', err, 0), J$.R(10001, 'self', self, 0))));
                                                                            }
                                                                            J$.X1(10081, J$.P(10073, J$.R(10033, 'state', state, 0), 'isMasterLatencyMS', J$.B(410, '-', J$.M(10057, J$.F(10049, J$.R(10041, 'Date', Date, 2), 1)(), 'getTime', 0)(), J$.R(10065, 'start', start, 0), 0), 0));
                                                                            if (J$.X1(28313, J$.C(424, J$.U(418, '!', J$.R(10089, 'err', err, 0))))) {
                                                                                J$.X1(10129, J$.P(10121, J$.R(10097, 'state', state, 0), 'ismaster', J$.G(10113, J$.R(10105, 'r', r, 0), 'result', 0), 0));
                                                                            }
                                                                            J$.X1(10185, J$.M(10177, J$.R(10137, 'self', self, 0), 'emit', 0)(J$.T(10145, 'ismaster', 21, false), J$.G(10161, J$.R(10153, 'r', r, 0), 'result', 0), J$.R(10169, 'self', self, 0)));
                                                                            J$.X1(10241, J$.P(10233, J$.R(10193, 'state', state, 0), 'wireProtocolHandler', J$.F(10225, J$.R(10201, 'createWireProtocolHandler', createWireProtocolHandler, 1), 0)(J$.G(10217, J$.R(10209, 'state', state, 0), 'ismaster', 0)), 0));
                                                                            J$.X1(10289, J$.P(10281, J$.G(10257, J$.R(10249, 'state', state, 0), 'options', 0), 'wireProtocolHandler', J$.G(10273, J$.R(10265, 'state', state, 0), 'wireProtocolHandler', 0), 0));
                                                                            if (J$.X1(28321, J$.C(432, J$.M(10313, J$.G(10305, J$.R(10297, 'state', state, 0), 'logger', 0), 'isInfo', 0)())))
                                                                                J$.X1(10417, J$.M(10409, J$.G(10329, J$.R(10321, 'state', state, 0), 'logger', 0), 'info', 0)(J$.F(10401, J$.R(10337, 'f', f, 1), 0)(J$.T(10345, 'server %s connected with ismaster [%s]', 21, false), J$.G(10361, J$.R(10353, 'self', self, 0), 'name', 0), J$.M(10393, J$.R(10369, 'JSON', JSON, 2), 'stringify', 0)(J$.G(10385, J$.R(10377, 'r', r, 0), 'result', 0)))));
                                                                            if (J$.X1(28329, J$.C(448, J$.C(440, J$.U(426, '!', J$.F(10441, J$.R(10425, 'supportsServer', supportsServer, 1), 0)(J$.R(10433, 'state', state, 0)))) ? J$.B(434, '==', J$.G(10457, J$.R(10449, 'state', state, 0), 'wireProtocolHandler', 0), J$.T(10465, null, 25, false), 0) : J$._()))) {
                                                                                J$.X1(10497, J$.P(10489, J$.R(10473, 'state', state, 0), 'state', J$.R(10481, 'DISCONNECTED', DISCONNECTED, 1), 0));
                                                                                return J$.X1(10569, J$.Rt(10561, J$.M(10553, J$.R(10505, 'self', self, 0), 'emit', 0)(J$.T(10513, 'error', 21, false), J$.F(10537, J$.R(10521, 'MongoError', MongoError, 1), 1)(J$.T(10529, 'non supported server version', 21, false)), J$.R(10545, 'self', self, 0))));
                                                                            }
                                                                            if (J$.X1(28337, J$.C(464, J$.C(456, J$.G(10585, J$.R(10577, 'state', state, 0), 'ismaster', 0)) ? J$.G(10609, J$.G(10601, J$.R(10593, 'state', state, 0), 'ismaster', 0), 'me', 0) : J$._())))
                                                                                J$.X1(10665, J$.P(10657, J$.G(10625, J$.R(10617, 'state', state, 0), 'serverDetails', 0), 'name', J$.G(10649, J$.G(10641, J$.R(10633, 'state', state, 0), 'ismaster', 0), 'me', 0), 0));
                                                                            if (J$.X1(28345, J$.C(472, J$.B(442, '==', J$.G(10681, J$.R(10673, 'state', state, 0), 'readPreferenceStrategies', 0), J$.T(10689, null, 25, false), 0)))) {
                                                                                J$.X1(10721, J$.P(10713, J$.R(10697, 'state', state, 0), 'state', J$.R(10705, 'CONNECTED', CONNECTED, 1), 0));
                                                                                return J$.X1(10769, J$.Rt(10761, J$.M(10753, J$.R(10729, 'self', self, 0), 'emit', 0)(J$.T(10737, 'connect', 21, false), J$.R(10745, 'self', self, 0))));
                                                                            }
                                                                            J$.X1(10961, J$.F(10953, J$.R(10777, 'notifyStrategies', notifyStrategies, 1), 0)(J$.R(10785, 'self', self, 0), J$.G(10801, J$.R(10793, 'self', self, 0), 's', 0), J$.T(10809, 'connect', 21, false), J$.T(10825, [J$.R(10817, 'self', self, 0)], 10, false), J$.T(10945, function (err, result) {
                                                                                jalangiLabel1369:
                                                                                    while (true) {
                                                                                        try {
                                                                                            J$.Fe(10913, arguments.callee, this, arguments);
                                                                                            arguments = J$.N(10921, 'arguments', arguments, 4);
                                                                                            err = J$.N(10929, 'err', err, 4);
                                                                                            result = J$.N(10937, 'result', result, 4);
                                                                                            J$.X1(10857, J$.P(10849, J$.R(10833, 'state', state, 0), 'state', J$.R(10841, 'CONNECTED', CONNECTED, 1), 0));
                                                                                            return J$.X1(10905, J$.Rt(10897, J$.M(10889, J$.R(10865, 'self', self, 0), 'emit', 0)(J$.T(10873, 'connect', 21, false), J$.R(10881, 'self', self, 0))));
                                                                                        } catch (J$e) {
                                                                                            J$.Ex(28353, J$e);
                                                                                        } finally {
                                                                                            if (J$.Fr(28361))
                                                                                                continue jalangiLabel1369;
                                                                                            else
                                                                                                return J$.Ra();
                                                                                        }
                                                                                    }
                                                                            }, 12, false, 10913)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(28369, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(28377))
                                                                                continue jalangiLabel1370;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false, 10969)));
                                                        } catch (J$e) {
                                                            J$.Ex(28385, J$e);
                                                        } finally {
                                                            if (J$.Fr(28393))
                                                                continue jalangiLabel1371;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 11025)));
                                        } catch (J$e) {
                                            J$.Ex(28401, J$e);
                                        } finally {
                                            if (J$.Fr(28409))
                                                continue jalangiLabel1372;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 11073)));
                        } catch (J$e) {
                            J$.Ex(28417, J$e);
                        } finally {
                            if (J$.Fr(28425))
                                continue jalangiLabel1373;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 11121), connectHandler, 3));
            var slaveOk = J$.X1(11289, J$.W(11281, 'slaveOk', J$.T(11273, function (r) {
                jalangiLabel1374:
                    while (true) {
                        try {
                            J$.Fe(11249, arguments.callee, this, arguments);
                            arguments = J$.N(11257, 'arguments', arguments, 4);
                            r = J$.N(11265, 'r', r, 4);
                            if (J$.X1(28433, J$.C(480, J$.R(11185, 'r', r, 0))))
                                return J$.X1(11217, J$.Rt(11209, J$.M(11201, J$.R(11193, 'r', r, 0), 'slaveOk', 0)()));
                            return J$.X1(11241, J$.Rt(11233, J$.T(11225, false, 23, false)));
                        } catch (J$e) {
                            J$.Ex(28441, J$e);
                        } finally {
                            if (J$.Fr(28449))
                                continue jalangiLabel1374;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 11249), slaveOk, 3));
            var notifyStrategies = J$.X1(12129, J$.W(12121, 'notifyStrategies', J$.T(12113, function (self, state, op, params, callback) {
                jalangiLabel1376:
                    while (true) {
                        try {
                            J$.Fe(12025, arguments.callee, this, arguments);
                            arguments = J$.N(12033, 'arguments', arguments, 4);
                            self = J$.N(12041, 'self', self, 4);
                            state = J$.N(12049, 'state', state, 4);
                            op = J$.N(12057, 'op', op, 4);
                            params = J$.N(12065, 'params', params, 4);
                            callback = J$.N(12073, 'callback', callback, 4);
                            J$.N(12081, 'name', name, 0);
                            J$.N(12089, 'strat', strat, 0);
                            J$.N(12097, 'nPreferences', nPreferences, 0);
                            J$.N(12105, 'cParams', cParams, 0);
                            if (J$.X1(28465, J$.C(496, J$.B(458, '!=', J$.U(450, 'typeof', J$.R(11297, 'callback', callback, 0)), J$.T(11305, 'function', 21, false), 0)))) {
                                for (J$._tm_p in J$.H(11481, J$.G(11321, J$.R(11313, 'state', state, 0), 'readPreferenceStrategies', 0))) {
                                    var name = J$.X1(11497, J$.W(11489, 'name', J$._tm_p, name, 1));
                                    {
                                        {
                                            if (J$.X1(28457, J$.C(488, J$.G(11369, J$.G(11353, J$.G(11337, J$.R(11329, 'state', state, 0), 'readPreferenceStrategies', 0), J$.R(11345, 'name', name, 0), 4), J$.R(11361, 'op', op, 0), 4)))) {
                                                var strat = J$.X1(11417, J$.W(11409, 'strat', J$.G(11401, J$.G(11385, J$.R(11377, 'state', state, 0), 'readPreferenceStrategies', 0), J$.R(11393, 'name', name, 0), 4), strat, 1));
                                                J$.X1(11473, J$.M(11465, J$.G(11441, J$.R(11425, 'strat', strat, 0), J$.R(11433, 'op', op, 0), 4), 'apply', 0)(J$.R(11449, 'strat', strat, 0), J$.R(11457, 'params', params, 0)));
                                            }
                                        }
                                    }
                                }
                                return J$.X1(11513, J$.Rt(11505, undefined));
                            }
                            var nPreferences = J$.X1(11569, J$.W(11561, 'nPreferences', J$.G(11553, J$.M(11545, J$.R(11521, 'Object', Object, 2), 'keys', 0)(J$.G(11537, J$.R(11529, 'state', state, 0), 'readPreferenceStrategies', 0)), 'length', 0), nPreferences, 1));
                            if (J$.X1(28473, J$.C(504, J$.B(466, '==', J$.R(11577, 'nPreferences', nPreferences, 0), J$.T(11585, 0, 22, false), 0))))
                                return J$.X1(11633, J$.Rt(11625, J$.F(11617, J$.R(11593, 'callback', callback, 0), 0)(J$.T(11601, null, 25, false), J$.T(11609, null, 25, false))));
                            for (J$._tm_p in J$.H(12001, J$.G(11649, J$.R(11641, 'state', state, 0), 'readPreferenceStrategies', 0))) {
                                var name = J$.X1(12017, J$.W(12009, 'name', J$._tm_p, name, 1));
                                {
                                    {
                                        if (J$.X1(28505, J$.C(520, J$.G(11697, J$.G(11681, J$.G(11665, J$.R(11657, 'state', state, 0), 'readPreferenceStrategies', 0), J$.R(11673, 'name', name, 0), 4), J$.R(11689, 'op', op, 0), 4)))) {
                                            var strat = J$.X1(11745, J$.W(11737, 'strat', J$.G(11729, J$.G(11713, J$.R(11705, 'state', state, 0), 'readPreferenceStrategies', 0), J$.R(11721, 'name', name, 0), 4), strat, 1));
                                            var cParams = J$.X1(11785, J$.W(11777, 'cParams', J$.M(11769, J$.R(11753, 'params', params, 0), 'slice', 0)(J$.T(11761, 0, 22, false)), cParams, 1));
                                            J$.X1(11937, J$.M(11929, J$.R(11793, 'cParams', cParams, 0), 'push', 0)(J$.T(11921, function (err, r) {
                                                jalangiLabel1375:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(11889, arguments.callee, this, arguments);
                                                            arguments = J$.N(11897, 'arguments', arguments, 4);
                                                            err = J$.N(11905, 'err', err, 4);
                                                            r = J$.N(11913, 'r', r, 4);
                                                            J$.X1(11825, nPreferences = J$.W(11817, 'nPreferences', J$.B(474, '-', J$.R(11801, 'nPreferences', nPreferences, 0), J$.T(11809, 1, 22, false), 0), nPreferences, 0));
                                                            if (J$.X1(28481, J$.C(512, J$.B(482, '==', J$.R(11833, 'nPreferences', nPreferences, 0), J$.T(11841, 0, 22, false), 0)))) {
                                                                J$.X1(11881, J$.F(11873, J$.R(11849, 'callback', callback, 0), 0)(J$.T(11857, null, 25, false), J$.T(11865, null, 25, false)));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(28489, J$e);
                                                        } finally {
                                                            if (J$.Fr(28497))
                                                                continue jalangiLabel1375;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 11889)));
                                            J$.X1(11993, J$.M(11985, J$.G(11961, J$.R(11945, 'strat', strat, 0), J$.R(11953, 'op', op, 0), 4), 'apply', 0)(J$.R(11969, 'strat', strat, 0), J$.R(11977, 'cParams', cParams, 0)));
                                        }
                                    }
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(28513, J$e);
                        } finally {
                            if (J$.Fr(28521))
                                continue jalangiLabel1376;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 12025), notifyStrategies, 3));
            var debugFields = J$.X1(12321, J$.W(12313, 'debugFields', J$.T(12305, [
                J$.T(12137, 'reconnect', 21, false),
                J$.T(12145, 'reconnectTries', 21, false),
                J$.T(12153, 'reconnectInterval', 21, false),
                J$.T(12161, 'emitError', 21, false),
                J$.T(12169, 'cursorFactory', 21, false),
                J$.T(12177, 'host', 21, false),
                J$.T(12185, 'port', 21, false),
                J$.T(12193, 'size', 21, false),
                J$.T(12201, 'keepAlive', 21, false),
                J$.T(12209, 'keepAliveInitialDelay', 21, false),
                J$.T(12217, 'noDelay', 21, false),
                J$.T(12225, 'connectionTimeout', 21, false),
                J$.T(12233, 'checkServerIdentity', 21, false),
                J$.T(12241, 'socketTimeout', 21, false),
                J$.T(12249, 'singleBufferSerializtion', 21, false),
                J$.T(12257, 'ssl', 21, false),
                J$.T(12265, 'ca', 21, false),
                J$.T(12273, 'cert', 21, false),
                J$.T(12281, 'key', 21, false),
                J$.T(12289, 'rejectUnauthorized', 21, false),
                J$.T(12297, 'promoteLongs', 21, false)
            ], 10, false), debugFields, 3));
            var Server = J$.X1(13769, J$.W(13761, 'Server', J$.T(13753, function (options) {
                jalangiLabel1377:
                    while (true) {
                        try {
                            J$.Fe(13705, arguments.callee, this, arguments);
                            arguments = J$.N(13713, 'arguments', arguments, 4);
                            options = J$.N(13721, 'options', options, 4);
                            J$.N(13729, 'self', self, 0);
                            J$.N(13737, 'reconnectTries', reconnectTries, 0);
                            J$.N(13745, 's', s, 0);
                            var self = J$.X1(12345, J$.W(12337, 'self', J$.R(12329, 'this', this, 0), self, 1));
                            J$.X1(12377, J$.M(12369, J$.R(12353, 'EventEmitter', EventEmitter, 1), 'call', 0)(J$.R(12361, 'this', this, 0)));
                            if (J$.X1(28529, J$.C(528, J$.B(490, '==', J$.R(12385, 'bsonInstance', bsonInstance, 1), J$.T(12393, null, 25, false), 0)))) {
                                J$.X1(12433, bsonInstance = J$.W(12425, 'bsonInstance', J$.F(12417, J$.R(12401, 'BSON', BSON, 1), 1)(J$.R(12409, 'bsonTypes', bsonTypes, 1)), bsonInstance, 2));
                            }
                            var reconnectTries = J$.X1(12473, J$.W(12465, 'reconnectTries', J$.C(536, J$.G(12449, J$.R(12441, 'options', options, 0), 'reconnectTries', 0)) ? J$._() : J$.T(12457, 30, 22, false), reconnectTries, 1));
                            J$.X1(13065, J$.P(13057, J$.R(12481, 'this', this, 0), 's', J$.T(13049, {
                                options: J$.R(12489, 'options', options, 0),
                                callbacks: J$.F(12505, J$.R(12497, 'Callbacks', Callbacks, 1), 1)(),
                                logger: J$.F(12537, J$.R(12513, 'Logger', Logger, 1), 0)(J$.T(12521, 'Server', 21, false), J$.R(12529, 'options', options, 0)),
                                state: J$.R(12545, 'DISCONNECTED', DISCONNECTED, 1),
                                reconnect: J$.X1(28537, J$.C(544, J$.B(506, '==', J$.U(498, 'typeof', J$.G(12561, J$.R(12553, 'options', options, 0), 'reconnect', 0)), J$.T(12569, 'boolean', 21, false), 0))) ? J$.G(12585, J$.R(12577, 'options', options, 0), 'reconnect', 0) : J$.T(12593, true, 23, false),
                                reconnectTries: J$.R(12601, 'reconnectTries', reconnectTries, 0),
                                reconnectInterval: J$.C(552, J$.G(12617, J$.R(12609, 'options', options, 0), 'reconnectInterval', 0)) ? J$._() : J$.T(12625, 1000, 22, false),
                                emitError: J$.X1(28545, J$.C(560, J$.B(522, '==', J$.U(514, 'typeof', J$.G(12641, J$.R(12633, 'options', options, 0), 'emitError', 0)), J$.T(12649, 'boolean', 21, false), 0))) ? J$.G(12665, J$.R(12657, 'options', options, 0), 'emitError', 0) : J$.T(12673, false, 23, false),
                                currentReconnectRetry: J$.R(12681, 'reconnectTries', reconnectTries, 0),
                                ismaster: J$.T(12689, null, 25, false),
                                readPreferenceStrategies: J$.G(12705, J$.R(12697, 'options', options, 0), 'readPreferenceStrategies', 0),
                                authProviders: J$.C(568, J$.G(12721, J$.R(12713, 'options', options, 0), 'authProviders', 0)) ? J$._() : J$.T(12729, {}, 11, false),
                                id: J$.B(546, '-', serverId = J$.W(12753, 'serverId', J$.B(538, '+', J$.U(530, '+', J$.R(12745, 'serverId', serverId, 1)), J$.T(12737, 1, 22, false), 0), serverId, 2), J$.T(12761, 1, 22, false), 0),
                                tag: J$.G(12777, J$.R(12769, 'options', options, 0), 'tag', 0),
                                disconnectHandler: J$.G(12793, J$.R(12785, 'options', options, 0), 'disconnectHandler', 0),
                                wireProtocolHandler: J$.C(576, J$.G(12809, J$.R(12801, 'options', options, 0), 'wireProtocolHandler', 0)) ? J$._() : J$.F(12825, J$.R(12817, 'PreTwoSixWireProtocolSupport', PreTwoSixWireProtocolSupport, 1), 1)(),
                                Cursor: J$.C(584, J$.G(12841, J$.R(12833, 'options', options, 0), 'cursorFactory', 0)) ? J$._() : J$.R(12849, 'BasicCursor', BasicCursor, 1),
                                bsonInstance: J$.R(12857, 'bsonInstance', bsonInstance, 1),
                                bson: J$.X1(28553, J$.C(592, J$.G(12873, J$.R(12865, 'options', options, 0), 'bson', 0))) ? J$.G(12889, J$.R(12881, 'options', options, 0), 'bson', 0) : J$.R(12897, 'bsonInstance', bsonInstance, 1),
                                pool: J$.T(12905, null, 25, false),
                                isMasterLatencyMS: J$.T(12913, 0, 22, false),
                                serverDetails: J$.T(13041, {
                                    host: J$.G(12929, J$.R(12921, 'options', options, 0), 'host', 0),
                                    port: J$.G(12945, J$.R(12937, 'options', options, 0), 'port', 0),
                                    name: J$.X1(28561, J$.C(600, J$.G(12961, J$.R(12953, 'options', options, 0), 'port', 0))) ? J$.F(13017, J$.R(12969, 'f', f, 1), 0)(J$.T(12977, '%s:%s', 21, false), J$.G(12993, J$.R(12985, 'options', options, 0), 'host', 0), J$.G(13009, J$.R(13001, 'options', options, 0), 'port', 0)) : J$.G(13033, J$.R(13025, 'options', options, 0), 'host', 0)
                                }, 11, false)
                            }, 11, false), 0));
                            var s = J$.X1(13097, J$.W(13089, 's', J$.G(13081, J$.R(13073, 'this', this, 0), 's', 0), s, 1));
                            J$.X1(13137, J$.P(13129, J$.R(13105, 'options', options, 0), 'bson', J$.G(13121, J$.R(13113, 's', s, 0), 'bson', 0), 0));
                            J$.X1(13209, J$.F(13201, J$.R(13145, 'getProperty', getProperty, 1), 0)(J$.R(13153, 'this', this, 0), J$.T(13161, 'name', 21, false), J$.T(13169, 'name', 21, false), J$.G(13185, J$.R(13177, 's', s, 0), 'serverDetails', 0), J$.T(13193, {}, 11, false)));
                            J$.X1(13281, J$.F(13273, J$.R(13217, 'getProperty', getProperty, 1), 0)(J$.R(13225, 'this', this, 0), J$.T(13233, 'bson', 21, false), J$.T(13241, 'bson', 21, false), J$.G(13257, J$.R(13249, 's', s, 0), 'options', 0), J$.T(13265, {}, 11, false)));
                            J$.X1(13353, J$.F(13345, J$.R(13289, 'getProperty', getProperty, 1), 0)(J$.R(13297, 'this', this, 0), J$.T(13305, 'wireProtocolHandler', 21, false), J$.T(13313, 'wireProtocolHandler', 21, false), J$.G(13329, J$.R(13321, 's', s, 0), 'options', 0), J$.T(13337, {}, 11, false)));
                            J$.X1(13409, J$.F(13401, J$.R(13361, 'getSingleProperty', getSingleProperty, 1), 0)(J$.R(13369, 'this', this, 0), J$.T(13377, 'id', 21, false), J$.G(13393, J$.R(13385, 's', s, 0), 'id', 0)));
                            J$.X1(13457, J$.M(13449, J$.R(13417, 'this', this, 0), 'addAuthProvider', 0)(J$.T(13425, 'mongocr', 21, false), J$.F(13441, J$.R(13433, 'MongoCR', MongoCR, 1), 1)()));
                            J$.X1(13505, J$.M(13497, J$.R(13465, 'this', this, 0), 'addAuthProvider', 0)(J$.T(13473, 'x509', 21, false), J$.F(13489, J$.R(13481, 'X509', X509, 1), 1)()));
                            J$.X1(13553, J$.M(13545, J$.R(13513, 'this', this, 0), 'addAuthProvider', 0)(J$.T(13521, 'plain', 21, false), J$.F(13537, J$.R(13529, 'Plain', Plain, 1), 1)()));
                            J$.X1(13601, J$.M(13593, J$.R(13561, 'this', this, 0), 'addAuthProvider', 0)(J$.T(13569, 'gssapi', 21, false), J$.F(13585, J$.R(13577, 'GSSAPI', GSSAPI, 1), 1)()));
                            J$.X1(13649, J$.M(13641, J$.R(13609, 'this', this, 0), 'addAuthProvider', 0)(J$.T(13617, 'sspi', 21, false), J$.F(13633, J$.R(13625, 'SSPI', SSPI, 1), 1)()));
                            J$.X1(13697, J$.M(13689, J$.R(13657, 'this', this, 0), 'addAuthProvider', 0)(J$.T(13665, 'scram-sha-1', 21, false), J$.F(13681, J$.R(13673, 'ScramSHA1', ScramSHA1, 1), 1)()));
                        } catch (J$e) {
                            J$.Ex(28569, J$e);
                        } finally {
                            if (J$.Fr(28577))
                                continue jalangiLabel1377;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 13705), Server, 3));
            J$.X1(13809, J$.F(13801, J$.R(13777, 'inherits', inherits, 1), 0)(J$.R(13785, 'Server', Server, 1), J$.R(13793, 'EventEmitter', EventEmitter, 1)));
            J$.X1(14177, J$.P(14169, J$.G(13825, J$.R(13817, 'Server', Server, 1), 'prototype', 0), 'setBSONParserType', J$.T(14161, function (type) {
                jalangiLabel1378:
                    while (true) {
                        try {
                            J$.Fe(14129, arguments.callee, this, arguments);
                            arguments = J$.N(14137, 'arguments', arguments, 4);
                            type = J$.N(14145, 'type', type, 4);
                            J$.N(14153, 'nBSON', nBSON, 0);
                            var nBSON = J$.X1(13849, J$.W(13841, 'nBSON', J$.T(13833, null, 25, false), nBSON, 1));
                            if (J$.X1(28593, J$.C(616, J$.B(554, '==', J$.R(13857, 'type', type, 0), J$.T(13865, 'c++', 21, false), 0)))) {
                                J$.X1(13921, nBSON = J$.W(13913, 'nBSON', J$.G(13905, J$.M(13897, J$.F(13889, J$.R(13873, 'require', require, 2), 0)(J$.T(13881, 'bson', 21, false)), 'native', 0)(), 'BSON', 0), nBSON, 0));
                            } else if (J$.X1(28585, J$.C(608, J$.B(562, '==', J$.R(13929, 'type', type, 0), J$.T(13937, 'js', 21, false), 0)))) {
                                J$.X1(13993, nBSON = J$.W(13985, 'nBSON', J$.G(13977, J$.M(13969, J$.F(13961, J$.R(13945, 'require', require, 2), 0)(J$.T(13953, 'bson', 21, false)), 'pure', 0)(), 'BSON', 0), nBSON, 0));
                            } else {
                                throw J$.X1(14057, J$.Th(14049, J$.F(14041, J$.R(14001, 'MongoError', MongoError, 1), 1)(J$.F(14033, J$.R(14009, 'f', f, 1), 0)(J$.T(14017, '% parser not supported', 21, false), J$.R(14025, 'type', type, 0)))));
                            }
                            J$.X1(14121, J$.P(14113, J$.G(14081, J$.G(14073, J$.R(14065, 'this', this, 0), 's', 0), 'options', 0), 'bson', J$.F(14105, J$.R(14089, 'nBSON', nBSON, 0), 1)(J$.R(14097, 'bsonTypes', bsonTypes, 1)), 0));
                        } catch (J$e) {
                            J$.Ex(28601, J$e);
                        } finally {
                            if (J$.Fr(28609))
                                continue jalangiLabel1378;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 14129), 0));
            J$.X1(14289, J$.P(14281, J$.G(14193, J$.R(14185, 'Server', Server, 1), 'prototype', 0), 'capConnections', J$.T(14273, function (maxConnections) {
                jalangiLabel1379:
                    while (true) {
                        try {
                            J$.Fe(14249, arguments.callee, this, arguments);
                            arguments = J$.N(14257, 'arguments', arguments, 4);
                            maxConnections = J$.N(14265, 'maxConnections', maxConnections, 4);
                            J$.X1(14241, J$.M(14233, J$.G(14217, J$.G(14209, J$.R(14201, 'this', this, 0), 's', 0), 'pool', 0), 'capConnections', 0)(J$.R(14225, 'maxConnections', maxConnections, 0)));
                        } catch (J$e) {
                            J$.Ex(28617, J$e);
                        } finally {
                            if (J$.Fr(28625))
                                continue jalangiLabel1379;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 14249), 0));
            J$.X1(14385, J$.P(14377, J$.G(14305, J$.R(14297, 'Server', Server, 1), 'prototype', 0), 'lastIsMaster', J$.T(14369, function () {
                jalangiLabel1380:
                    while (true) {
                        try {
                            J$.Fe(14353, arguments.callee, this, arguments);
                            arguments = J$.N(14361, 'arguments', arguments, 4);
                            return J$.X1(14345, J$.Rt(14337, J$.G(14329, J$.G(14321, J$.R(14313, 'this', this, 0), 's', 0), 'ismaster', 0)));
                        } catch (J$e) {
                            J$.Ex(28633, J$e);
                        } finally {
                            if (J$.Fr(28641))
                                continue jalangiLabel1380;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 14353), 0));
            J$.X1(15393, J$.P(15385, J$.G(14401, J$.R(14393, 'Server', Server, 1), 'prototype', 0), 'connect', J$.T(15377, function (_options) {
                jalangiLabel1381:
                    while (true) {
                        try {
                            J$.Fe(15345, arguments.callee, this, arguments);
                            arguments = J$.N(15353, 'arguments', arguments, 4);
                            _options = J$.N(15361, '_options', _options, 4);
                            J$.N(15369, 'self', self, 0);
                            var self = J$.X1(14425, J$.W(14417, 'self', J$.R(14409, 'this', this, 0), self, 1));
                            J$.X1(14457, _options = J$.W(14449, '_options', J$.C(624, J$.R(14433, '_options', _options, 0)) ? J$._() : J$.T(14441, {}, 11, false), _options, 0));
                            if (J$.X1(28649, J$.C(632, J$.B(578, '==', J$.U(570, 'typeof', J$.G(14473, J$.R(14465, '_options', _options, 0), 'promoteLongs', 0)), J$.T(14481, 'boolean', 21, false), 0)))) {
                                J$.X1(14537, J$.P(14529, J$.G(14505, J$.G(14497, J$.R(14489, 'self', self, 0), 's', 0), 'options', 0), 'promoteLongs', J$.G(14521, J$.R(14513, '_options', _options, 0), 'promoteLongs', 0), 0));
                            }
                            if (J$.X1(28657, J$.C(640, J$.G(14561, J$.G(14553, J$.R(14545, 'self', self, 0), 's', 0), 'pool', 0)))) {
                                J$.X1(14601, J$.M(14593, J$.G(14585, J$.G(14577, J$.R(14569, 'self', self, 0), 's', 0), 'pool', 0), 'destroy', 0)());
                                J$.X1(14641, J$.P(14633, J$.G(14617, J$.R(14609, 'self', self, 0), 's', 0), 'pool', J$.T(14625, null, 25, false), 0));
                            }
                            J$.X1(14681, J$.P(14673, J$.G(14657, J$.R(14649, 'self', self, 0), 's', 0), 'state', J$.R(14665, 'CONNECTING', CONNECTING, 1), 0));
                            if (J$.X1(28665, J$.C(648, J$.U(586, '!', J$.G(14705, J$.G(14697, J$.R(14689, 'self', self, 0), 's', 0), 'pool', 0))))) {
                                J$.X1(14785, J$.P(14777, J$.G(14729, J$.G(14721, J$.R(14713, 'self', self, 0), 's', 0), 'options', 0), 'messageHandler', J$.F(14769, J$.R(14737, 'messageHandler', messageHandler, 1), 0)(J$.R(14745, 'self', self, 0), J$.G(14761, J$.R(14753, 'self', self, 0), 's', 0)), 0));
                                J$.X1(14857, J$.P(14849, J$.G(14801, J$.R(14793, 'self', self, 0), 's', 0), 'pool', J$.F(14841, J$.R(14809, 'Pool', Pool, 1), 1)(J$.G(14833, J$.G(14825, J$.R(14817, 'self', self, 0), 's', 0), 'options', 0)), 0));
                            }
                            J$.X1(14945, J$.M(14937, J$.G(14881, J$.G(14873, J$.R(14865, 'self', self, 0), 's', 0), 'pool', 0), 'once', 0)(J$.T(14889, 'timeout', 21, false), J$.F(14929, J$.R(14897, 'timeoutHandler', timeoutHandler, 1), 0)(J$.R(14905, 'self', self, 0), J$.G(14921, J$.R(14913, 'self', self, 0), 's', 0))));
                            J$.X1(15033, J$.M(15025, J$.G(14969, J$.G(14961, J$.R(14953, 'self', self, 0), 's', 0), 'pool', 0), 'once', 0)(J$.T(14977, 'close', 21, false), J$.F(15017, J$.R(14985, 'closeHandler', closeHandler, 1), 0)(J$.R(14993, 'self', self, 0), J$.G(15009, J$.R(15001, 'self', self, 0), 's', 0))));
                            J$.X1(15121, J$.M(15113, J$.G(15057, J$.G(15049, J$.R(15041, 'self', self, 0), 's', 0), 'pool', 0), 'once', 0)(J$.T(15065, 'error', 21, false), J$.F(15105, J$.R(15073, 'errorHandler', errorHandler, 1), 0)(J$.R(15081, 'self', self, 0), J$.G(15097, J$.R(15089, 'self', self, 0), 's', 0))));
                            J$.X1(15209, J$.M(15201, J$.G(15145, J$.G(15137, J$.R(15129, 'self', self, 0), 's', 0), 'pool', 0), 'once', 0)(J$.T(15153, 'connect', 21, false), J$.F(15193, J$.R(15161, 'connectHandler', connectHandler, 1), 0)(J$.R(15169, 'self', self, 0), J$.G(15185, J$.R(15177, 'self', self, 0), 's', 0))));
                            J$.X1(15297, J$.M(15289, J$.G(15233, J$.G(15225, J$.R(15217, 'self', self, 0), 's', 0), 'pool', 0), 'once', 0)(J$.T(15241, 'parseError', 21, false), J$.F(15281, J$.R(15249, 'fatalErrorHandler', fatalErrorHandler, 1), 0)(J$.R(15257, 'self', self, 0), J$.G(15273, J$.R(15265, 'self', self, 0), 's', 0))));
                            J$.X1(15337, J$.M(15329, J$.G(15321, J$.G(15313, J$.R(15305, 'self', self, 0), 's', 0), 'pool', 0), 'connect', 0)());
                        } catch (J$e) {
                            J$.Ex(28673, J$e);
                        } finally {
                            if (J$.Fr(28681))
                                continue jalangiLabel1381;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 15345), 0));
            J$.X1(15953, J$.P(15945, J$.G(15409, J$.R(15401, 'Server', Server, 1), 'prototype', 0), 'destroy', J$.T(15937, function (emitClose, emitDestroy) {
                jalangiLabel1382:
                    while (true) {
                        try {
                            J$.Fe(15897, arguments.callee, this, arguments);
                            arguments = J$.N(15905, 'arguments', arguments, 4);
                            emitClose = J$.N(15913, 'emitClose', emitClose, 4);
                            emitDestroy = J$.N(15921, 'emitDestroy', emitDestroy, 4);
                            J$.N(15929, 'self', self, 0);
                            var self = J$.X1(15433, J$.W(15425, 'self', J$.R(15417, 'this', this, 0), self, 1));
                            if (J$.X1(28689, J$.C(656, J$.M(15465, J$.G(15457, J$.G(15449, J$.R(15441, 'self', self, 0), 's', 0), 'logger', 0), 'isDebug', 0)())))
                                J$.X1(15545, J$.M(15537, J$.G(15489, J$.G(15481, J$.R(15473, 'self', self, 0), 's', 0), 'logger', 0), 'debug', 0)(J$.F(15529, J$.R(15497, 'f', f, 1), 0)(J$.T(15505, 'destroy called on server %s', 21, false), J$.G(15521, J$.R(15513, 'self', self, 0), 'name', 0))));
                            if (J$.X1(28697, J$.C(672, J$.C(664, J$.R(15553, 'emitClose', emitClose, 0)) ? J$.B(594, '>', J$.G(15585, J$.M(15577, J$.R(15561, 'self', self, 0), 'listeners', 0)(J$.T(15569, 'close', 21, false)), 'length', 0), J$.T(15593, 0, 22, false), 0) : J$._()))) {
                                J$.X1(15641, J$.M(15633, J$.R(15601, 'self', self, 0), 'emit', 0)(J$.T(15609, 'close', 21, false), J$.T(15617, null, 25, false), J$.R(15625, 'self', self, 0)));
                            }
                            if (J$.X1(28705, J$.C(680, J$.R(15649, 'emitDestroy', emitDestroy, 0))))
                                J$.X1(15689, J$.M(15681, J$.R(15657, 'self', self, 0), 'emit', 0)(J$.T(15665, 'destroy', 21, false), J$.R(15673, 'self', self, 0)));
                            J$.X1(15729, J$.P(15721, J$.G(15705, J$.R(15697, 'self', self, 0), 's', 0), 'state', J$.R(15713, 'DESTROYED', DESTROYED, 1), 0));
                            J$.X1(15769, J$.M(15761, J$.G(15753, J$.G(15745, J$.R(15737, 'self', self, 0), 's', 0), 'pool', 0), 'destroy', 0)());
                            if (J$.X1(28713, J$.C(688, J$.G(15793, J$.G(15785, J$.R(15777, 'self', self, 0), 's', 0), 'callbacks', 0))))
                                J$.X1(15889, J$.M(15881, J$.G(15817, J$.G(15809, J$.R(15801, 'self', self, 0), 's', 0), 'callbacks', 0), 'flush', 0)(J$.F(15873, J$.R(15825, 'MongoError', MongoError, 1), 1)(J$.F(15865, J$.R(15833, 'f', f, 1), 0)(J$.T(15841, 'server %s sockets closed', 21, false), J$.G(15857, J$.R(15849, 'self', self, 0), 'name', 0)))));
                        } catch (J$e) {
                            J$.Ex(28721, J$e);
                        } finally {
                            if (J$.Fr(28729))
                                continue jalangiLabel1382;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 15897), 0));
            J$.X1(16137, J$.P(16129, J$.G(15969, J$.R(15961, 'Server', Server, 1), 'prototype', 0), 'isConnected', J$.T(16121, function () {
                jalangiLabel1383:
                    while (true) {
                        try {
                            J$.Fe(16097, arguments.callee, this, arguments);
                            arguments = J$.N(16105, 'arguments', arguments, 4);
                            J$.N(16113, 'self', self, 0);
                            var self = J$.X1(15993, J$.W(15985, 'self', J$.R(15977, 'this', this, 0), self, 1));
                            if (J$.X1(28737, J$.C(696, J$.G(16017, J$.G(16009, J$.R(16001, 'self', self, 0), 's', 0), 'pool', 0))))
                                return J$.X1(16065, J$.Rt(16057, J$.M(16049, J$.G(16041, J$.G(16033, J$.R(16025, 'self', self, 0), 's', 0), 'pool', 0), 'isConnected', 0)()));
                            return J$.X1(16089, J$.Rt(16081, J$.T(16073, false, 23, false)));
                        } catch (J$e) {
                            J$.Ex(28745, J$e);
                        } finally {
                            if (J$.Fr(28753))
                                continue jalangiLabel1383;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 16097), 0));
            J$.X1(16241, J$.P(16233, J$.G(16153, J$.R(16145, 'Server', Server, 1), 'prototype', 0), 'isDestroyed', J$.T(16225, function () {
                jalangiLabel1384:
                    while (true) {
                        try {
                            J$.Fe(16209, arguments.callee, this, arguments);
                            arguments = J$.N(16217, 'arguments', arguments, 4);
                            return J$.X1(16201, J$.Rt(16193, J$.B(602, '==', J$.G(16177, J$.G(16169, J$.R(16161, 'this', this, 0), 's', 0), 'state', 0), J$.R(16185, 'DESTROYED', DESTROYED, 1), 0)));
                        } catch (J$e) {
                            J$.Ex(28761, J$e);
                        } finally {
                            if (J$.Fr(28769))
                                continue jalangiLabel1384;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 16209), 0));
            var executeSingleOperation = J$.X1(18745, J$.W(18737, 'executeSingleOperation', J$.T(18729, function (self, ns, cmd, queryOptions, options, onAll, callback) {
                jalangiLabel1389:
                    while (true) {
                        try {
                            J$.Fe(18601, arguments.callee, this, arguments);
                            arguments = J$.N(18609, 'arguments', arguments, 4);
                            self = J$.N(18617, 'self', self, 4);
                            ns = J$.N(18625, 'ns', ns, 4);
                            cmd = J$.N(18633, 'cmd', cmd, 4);
                            queryOptions = J$.N(18641, 'queryOptions', queryOptions, 4);
                            options = J$.N(18649, 'options', options, 4);
                            onAll = J$.N(18657, 'onAll', onAll, 4);
                            callback = J$.N(18665, 'callback', callback, 4);
                            J$.N(18673, 'query', query, 0);
                            J$.N(18681, 'connection', connection, 0);
                            J$.N(18689, 'json', json, 0);
                            J$.N(18697, 'connections', connections, 0);
                            J$.N(18705, 'total', total, 0);
                            J$.N(18713, 'error', error, 0);
                            J$.N(18721, 'i', i, 0);
                            var query = J$.X1(16321, J$.W(16313, 'query', J$.F(16305, J$.R(16249, 'Query', Query, 1), 1)(J$.G(16273, J$.G(16265, J$.R(16257, 'self', self, 0), 's', 0), 'bson', 0), J$.R(16281, 'ns', ns, 0), J$.R(16289, 'cmd', cmd, 0), J$.R(16297, 'queryOptions', queryOptions, 0)), query, 1));
                            J$.X1(16377, J$.P(16369, J$.R(16329, 'query', query, 0), 'slaveOk', J$.F(16361, J$.R(16337, 'slaveOk', slaveOk, 1), 0)(J$.G(16353, J$.R(16345, 'options', options, 0), 'readPreference', 0)), 0));
                            if (J$.X1(28777, J$.C(704, J$.B(610, '!=', J$.G(16401, J$.G(16393, J$.R(16385, 'self', self, 0), 's', 0), 'readPreferenceStrategies', 0), J$.T(16409, null, 25, false), 0))))
                                J$.X1(16505, J$.F(16497, J$.R(16417, 'notifyStrategies', notifyStrategies, 1), 0)(J$.R(16425, 'self', self, 0), J$.G(16441, J$.R(16433, 'self', self, 0), 's', 0), J$.T(16449, 'startOperation', 21, false), J$.T(16489, [
                                J$.R(16457, 'self', self, 0),
                                J$.R(16465, 'query', query, 0),
                                J$.F(16481, J$.R(16473, 'Date', Date, 2), 1)()
                            ], 10, false)));
                            var connection = J$.X1(16577, J$.W(16569, 'connection', J$.C(712, J$.G(16521, J$.R(16513, 'options', options, 0), 'connection', 0)) ? J$._() : J$.M(16561, J$.G(16545, J$.G(16537, J$.R(16529, 'self', self, 0), 's', 0), 'pool', 0), 'get', 0)(J$.R(16553, 'options', options, 0)), connection, 1));
                            if (J$.X1(28785, J$.C(728, J$.U(618, '!', J$.C(720, J$.R(16585, 'connection', connection, 0)) ? J$.M(16601, J$.R(16593, 'connection', connection, 0), 'isConnected', 0)() : J$._())))) {
                                return J$.X1(16689, J$.Rt(16681, J$.F(16673, J$.R(16609, 'callback', callback, 0), 0)(J$.F(16665, J$.R(16617, 'MongoError', MongoError, 1), 1)(J$.F(16657, J$.R(16625, 'f', f, 1), 0)(J$.T(16633, 'no connection available to server %s', 21, false), J$.G(16649, J$.R(16641, 'self', self, 0), 'name', 0))))));
                            }
                            if (J$.X1(28793, J$.C(736, J$.M(16721, J$.G(16713, J$.G(16705, J$.R(16697, 'self', self, 0), 's', 0), 'logger', 0), 'isDebug', 0)()))) {
                                var json = J$.X1(16753, J$.W(16745, 'json', J$.M(16737, J$.R(16729, 'connection', connection, 0), 'toJSON', 0)(), json, 1));
                                J$.X1(16889, J$.M(16881, J$.G(16777, J$.G(16769, J$.R(16761, 'self', self, 0), 's', 0), 'logger', 0), 'debug', 0)(J$.F(16873, J$.R(16785, 'f', f, 1), 0)(J$.T(16793, 'cmd [%s] about to be executed on connection with id %s at %s:%s', 21, false), J$.M(16817, J$.R(16801, 'JSON', JSON, 2), 'stringify', 0)(J$.R(16809, 'cmd', cmd, 0)), J$.G(16833, J$.R(16825, 'json', json, 0), 'id', 0), J$.G(16849, J$.R(16841, 'json', json, 0), 'host', 0), J$.G(16865, J$.R(16857, 'json', json, 0), 'port', 0))));
                            }
                            if (J$.X1(28881, J$.C(784, J$.R(16897, 'onAll', onAll, 0)))) {
                                var connections = J$.X1(16945, J$.W(16937, 'connections', J$.M(16929, J$.G(16921, J$.G(16913, J$.R(16905, 'self', self, 0), 's', 0), 'pool', 0), 'getAll', 0)(), connections, 1));
                                var total = J$.X1(16977, J$.W(16969, 'total', J$.G(16961, J$.R(16953, 'connections', connections, 0), 'length', 0), total, 1));
                                var error = J$.X1(17001, J$.W(16993, 'error', J$.T(16985, null, 25, false), error, 1));
                                for (var i = J$.X1(17025, J$.W(17017, 'i', J$.T(17009, 0, 22, false), i, 1)); J$.X1(28865, J$.C(776, J$.B(626, '<', J$.R(17033, 'i', i, 0), J$.G(17049, J$.R(17041, 'connections', connections, 0), 'length', 0), 0))); J$.X1(28873, J$.B(650, '-', i = J$.W(17073, 'i', J$.B(642, '+', J$.U(634, '+', J$.R(17065, 'i', i, 0)), J$.T(17057, 1, 22, false), 0), i, 0), J$.T(17081, 1, 22, false), 0))) {
                                    try {
                                        J$.X1(17105, J$.M(17097, J$.R(17089, 'query', query, 0), 'incRequestId', 0)());
                                        J$.X1(17161, J$.M(17153, J$.G(17129, J$.R(17113, 'connections', connections, 0), J$.R(17121, 'i', i, 0), 4), 'write', 0)(J$.M(17145, J$.R(17137, 'query', query, 0), 'toBin', 0)()));
                                    } catch (err) {
                                        err = J$.N(17273, 'err', err, 1);
                                        J$.X1(17193, total = J$.W(17185, 'total', J$.B(658, '-', J$.R(17169, 'total', total, 0), J$.T(17177, 1, 22, false), 0), total, 0));
                                        if (J$.X1(28801, J$.C(744, J$.B(666, '==', J$.R(17201, 'total', total, 0), J$.T(17209, 0, 22, false), 0))))
                                            return J$.X1(17265, J$.Rt(17257, J$.F(17249, J$.R(17217, 'callback', callback, 0), 0)(J$.M(17241, J$.R(17225, 'MongoError', MongoError, 1), 'create', 0)(J$.R(17233, 'err', err, 0)))));
                                    }
                                    J$.X1(17785, J$.M(17777, J$.G(17297, J$.G(17289, J$.R(17281, 'self', self, 0), 's', 0), 'callbacks', 0), 'register', 0)(J$.G(17313, J$.R(17305, 'query', query, 0), 'requestId', 0), J$.T(17769, function (err, result) {
                                        jalangiLabel1386:
                                            while (true) {
                                                try {
                                                    J$.Fe(17737, arguments.callee, this, arguments);
                                                    arguments = J$.N(17745, 'arguments', arguments, 4);
                                                    err = J$.N(17753, 'err', err, 4);
                                                    result = J$.N(17761, 'result', result, 4);
                                                    if (J$.X1(28809, J$.C(752, J$.R(17321, 'err', err, 0))))
                                                        J$.X1(17345, error = J$.W(17337, 'error', J$.R(17329, 'err', err, 0), error, 0));
                                                    J$.X1(17377, total = J$.W(17369, 'total', J$.B(674, '-', J$.R(17353, 'total', total, 0), J$.T(17361, 1, 22, false), 0), total, 0));
                                                    if (J$.X1(28841, J$.C(768, J$.B(682, '==', J$.R(17385, 'total', total, 0), J$.T(17393, 0, 22, false), 0)))) {
                                                        J$.X1(17497, J$.F(17489, J$.R(17401, 'notifyStrategies', notifyStrategies, 1), 0)(J$.R(17409, 'self', self, 0), J$.G(17425, J$.R(17417, 'self', self, 0), 's', 0), J$.T(17433, 'endOperation', 21, false), J$.T(17481, [
                                                            J$.R(17441, 'self', self, 0),
                                                            J$.R(17449, 'error', error, 0),
                                                            J$.R(17457, 'result', result, 0),
                                                            J$.F(17473, J$.R(17465, 'Date', Date, 2), 1)()
                                                        ], 10, false)));
                                                        if (J$.X1(28817, J$.C(760, J$.R(17505, 'error', error, 0))))
                                                            return J$.X1(17561, J$.Rt(17553, J$.F(17545, J$.R(17513, 'callback', callback, 0), 0)(J$.M(17537, J$.R(17521, 'MongoError', MongoError, 1), 'create', 0)(J$.R(17529, 'error', error, 0)))));
                                                        try {
                                                            J$.X1(17649, J$.F(17641, J$.R(17569, 'callback', callback, 0), 0)(J$.T(17577, null, 25, false), J$.F(17633, J$.R(17585, 'CommandResult', CommandResult, 1), 1)(J$.G(17617, J$.G(17601, J$.R(17593, 'result', result, 0), 'documents', 0), J$.T(17609, 0, 22, false), 4), J$.R(17625, 'connections', connections, 0))));
                                                        } catch (err) {
                                                            err = J$.N(17729, 'err', err, 1);
                                                            J$.X1(17721, J$.M(17713, J$.R(17657, 'process', process, 2), 'nextTick', 0)(J$.T(17705, function () {
                                                                jalangiLabel1385:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(17689, arguments.callee, this, arguments);
                                                                            arguments = J$.N(17697, 'arguments', arguments, 4);
                                                                            throw J$.X1(17681, J$.Th(17673, J$.R(17665, 'err', err, 0)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(28825, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(28833))
                                                                                continue jalangiLabel1385;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false, 17689)));
                                                        }
                                                    }
                                                } catch (J$e) {
                                                    J$.Ex(28849, J$e);
                                                } finally {
                                                    if (J$.Fr(28857))
                                                        continue jalangiLabel1386;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 17737)));
                                }
                                return J$.X1(17801, J$.Rt(17793, undefined));
                            }
                            try {
                                J$.X1(17841, J$.M(17833, J$.R(17809, 'connection', connection, 0), 'write', 0)(J$.M(17825, J$.R(17817, 'query', query, 0), 'toBin', 0)()));
                            } catch (err) {
                                err = J$.N(17905, 'err', err, 1);
                                return J$.X1(17897, J$.Rt(17889, J$.F(17881, J$.R(17849, 'callback', callback, 0), 0)(J$.M(17873, J$.R(17857, 'MongoError', MongoError, 1), 'create', 0)(J$.R(17865, 'err', err, 0)))));
                            }
                            J$.X1(18593, J$.M(18585, J$.G(17929, J$.G(17921, J$.R(17913, 'self', self, 0), 's', 0), 'callbacks', 0), 'register', 0)(J$.G(17945, J$.R(17937, 'query', query, 0), 'requestId', 0), J$.T(18577, function (err, result) {
                                jalangiLabel1388:
                                    while (true) {
                                        try {
                                            J$.Fe(18545, arguments.callee, this, arguments);
                                            arguments = J$.N(18553, 'arguments', arguments, 4);
                                            err = J$.N(18561, 'err', err, 4);
                                            result = J$.N(18569, 'result', result, 4);
                                            J$.X1(18049, J$.F(18041, J$.R(17953, 'notifyStrategies', notifyStrategies, 1), 0)(J$.R(17961, 'self', self, 0), J$.G(17977, J$.R(17969, 'self', self, 0), 's', 0), J$.T(17985, 'endOperation', 21, false), J$.T(18033, [
                                                J$.R(17993, 'self', self, 0),
                                                J$.R(18001, 'err', err, 0),
                                                J$.R(18009, 'result', result, 0),
                                                J$.F(18025, J$.R(18017, 'Date', Date, 2), 1)()
                                            ], 10, false)));
                                            if (J$.X1(28889, J$.C(792, J$.R(18057, 'err', err, 0))))
                                                return J$.X1(18097, J$.Rt(18089, J$.F(18081, J$.R(18065, 'callback', callback, 0), 0)(J$.R(18073, 'err', err, 0))));
                                            if (J$.X1(28897, J$.C(824, J$.C(816, J$.C(808, J$.C(800, J$.G(18145, J$.G(18129, J$.G(18113, J$.R(18105, 'result', result, 0), 'documents', 0), J$.T(18121, 0, 22, false), 4), J$.T(18137, '$err', 21, false), 4)) ? J$._() : J$.G(18193, J$.G(18177, J$.G(18161, J$.R(18153, 'result', result, 0), 'documents', 0), J$.T(18169, 0, 22, false), 4), J$.T(18185, 'errmsg', 21, false), 4)) ? J$._() : J$.G(18241, J$.G(18225, J$.G(18209, J$.R(18201, 'result', result, 0), 'documents', 0), J$.T(18217, 0, 22, false), 4), J$.T(18233, 'err', 21, false), 4)) ? J$._() : J$.G(18289, J$.G(18273, J$.G(18257, J$.R(18249, 'result', result, 0), 'documents', 0), J$.T(18265, 0, 22, false), 4), J$.T(18281, 'code', 21, false), 4))))
                                                return J$.X1(18369, J$.Rt(18361, J$.F(18353, J$.R(18297, 'callback', callback, 0), 0)(J$.M(18345, J$.R(18305, 'MongoError', MongoError, 1), 'create', 0)(J$.G(18337, J$.G(18321, J$.R(18313, 'result', result, 0), 'documents', 0), J$.T(18329, 0, 22, false), 4)))));
                                            try {
                                                J$.X1(18457, J$.F(18449, J$.R(18377, 'callback', callback, 0), 0)(J$.T(18385, null, 25, false), J$.F(18441, J$.R(18393, 'CommandResult', CommandResult, 1), 1)(J$.G(18425, J$.G(18409, J$.R(18401, 'result', result, 0), 'documents', 0), J$.T(18417, 0, 22, false), 4), J$.R(18433, 'connection', connection, 0))));
                                            } catch (err) {
                                                err = J$.N(18537, 'err', err, 1);
                                                J$.X1(18529, J$.M(18521, J$.R(18465, 'process', process, 2), 'nextTick', 0)(J$.T(18513, function () {
                                                    jalangiLabel1387:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(18497, arguments.callee, this, arguments);
                                                                arguments = J$.N(18505, 'arguments', arguments, 4);
                                                                throw J$.X1(18489, J$.Th(18481, J$.R(18473, 'err', err, 0)));
                                                            } catch (J$e) {
                                                                J$.Ex(28905, J$e);
                                                            } finally {
                                                                if (J$.Fr(28913))
                                                                    continue jalangiLabel1387;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 18497)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(28921, J$e);
                                        } finally {
                                            if (J$.Fr(28929))
                                                continue jalangiLabel1388;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 18545)));
                        } catch (J$e) {
                            J$.Ex(28937, J$e);
                        } finally {
                            if (J$.Fr(28945))
                                continue jalangiLabel1389;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 18601), executeSingleOperation, 3));
            J$.X1(22385, J$.P(22377, J$.G(18761, J$.R(18753, 'Server', Server, 1), 'prototype', 0), 'command', J$.T(22369, function (ns, cmd, options, callback) {
                jalangiLabel1392:
                    while (true) {
                        try {
                            J$.Fe(22209, arguments.callee, this, arguments);
                            arguments = J$.N(22217, 'arguments', arguments, 4);
                            ns = J$.N(22225, 'ns', ns, 4);
                            cmd = J$.N(22233, 'cmd', cmd, 4);
                            options = J$.N(22241, 'options', options, 4);
                            callback = J$.N(22249, 'callback', callback, 4);
                            J$.N(22257, 'self', self, 0);
                            J$.N(22265, 'onAll', onAll, 0);
                            J$.N(22273, 'checkKeys', checkKeys, 0);
                            J$.N(22281, 'serializeFunctions', serializeFunctions, 0);
                            J$.N(22289, 'ignoreUndefined', ignoreUndefined, 0);
                            J$.N(22297, 'queryOptions', queryOptions, 0);
                            J$.N(22305, 'queries', queries, 0);
                            J$.N(22313, 'i', i, 0);
                            J$.N(22321, 'connection', connection, 0);
                            J$.N(22329, 'json', json, 0);
                            J$.N(22337, 'canceled', canceled, 0);
                            J$.N(22345, 'operationsLeft', operationsLeft, 0);
                            J$.N(22353, 'results', results, 0);
                            J$.N(22361, 'query', query, 0);
                            if (J$.X1(28953, J$.C(832, J$.B(698, '==', J$.U(690, 'typeof', J$.R(18769, 'options', options, 0)), J$.T(18777, 'function', 21, false), 0))))
                                J$.X1(18825, (J$.X1(18817, callback = J$.W(18793, 'callback', J$.R(18785, 'options', options, 0), callback, 0)), options = J$.W(18809, 'options', J$.T(18801, {}, 11, false), options, 0)));
                            var self = J$.X1(18849, J$.W(18841, 'self', J$.R(18833, 'this', this, 0), self, 1));
                            if (J$.X1(28961, J$.C(840, J$.B(706, '==', J$.G(18873, J$.G(18865, J$.R(18857, 'this', this, 0), 's', 0), 'state', 0), J$.R(18881, 'DESTROYED', DESTROYED, 1), 0))))
                                return J$.X1(18953, J$.Rt(18945, J$.F(18937, J$.R(18889, 'callback', callback, 0), 0)(J$.F(18929, J$.R(18897, 'MongoError', MongoError, 1), 1)(J$.F(18921, J$.R(18905, 'f', f, 1), 0)(J$.T(18913, 'topology was destroyed', 21, false))))));
                            J$.X1(18985, options = J$.W(18977, 'options', J$.C(848, J$.R(18961, 'options', options, 0)) ? J$._() : J$.T(18969, {}, 11, false), options, 0));
                            if (J$.X1(28969, J$.C(864, J$.C(856, J$.G(19001, J$.R(18993, 'options', options, 0), 'readPreference', 0)) ? J$.U(722, '!', J$.B(714, 'instanceof', J$.G(19017, J$.R(19009, 'options', options, 0), 'readPreference', 0), J$.R(19025, 'ReadPreference', ReadPreference, 1), 0)) : J$._()))) {
                                throw J$.X1(19065, J$.Th(19057, J$.F(19049, J$.R(19033, 'Error', Error, 2), 1)(J$.T(19041, 'readPreference must be an instance of ReadPreference', 21, false))));
                            }
                            if (J$.X1(28977, J$.C(872, J$.M(19097, J$.G(19089, J$.G(19081, J$.R(19073, 'self', self, 0), 's', 0), 'logger', 0), 'isDebug', 0)())))
                                J$.X1(19249, J$.M(19241, J$.G(19121, J$.G(19113, J$.R(19105, 'self', self, 0), 's', 0), 'logger', 0), 'debug', 0)(J$.F(19233, J$.R(19129, 'f', f, 1), 0)(J$.T(19137, 'executing command [%s] against %s', 21, false), J$.M(19209, J$.R(19145, 'JSON', JSON, 2), 'stringify', 0)(J$.T(19201, {
                                ns: J$.R(19153, 'ns', ns, 0),
                                cmd: J$.R(19161, 'cmd', cmd, 0),
                                options: J$.F(19193, J$.R(19169, 'debugOptions', debugOptions, 1), 0)(J$.R(19177, 'debugFields', debugFields, 1), J$.R(19185, 'options', options, 0))
                            }, 11, false)), J$.G(19225, J$.R(19217, 'self', self, 0), 'name', 0))));
                            if (J$.X1(28985, J$.C(888, J$.C(880, J$.U(730, '!', J$.M(19265, J$.R(19257, 'self', self, 0), 'isConnected', 0)())) ? J$.B(738, '!=', J$.G(19289, J$.G(19281, J$.R(19273, 'self', self, 0), 's', 0), 'disconnectHandler', 0), J$.T(19297, null, 25, false), 0) : J$._()))) {
                                J$.X1(19337, callback = J$.W(19329, 'callback', J$.F(19321, J$.R(19305, 'bindToCurrentDomain', bindToCurrentDomain, 1), 0)(J$.R(19313, 'callback', callback, 0)), callback, 0));
                                return J$.X1(19425, J$.Rt(19417, J$.M(19409, J$.G(19361, J$.G(19353, J$.R(19345, 'self', self, 0), 's', 0), 'disconnectHandler', 0), 'add', 0)(J$.T(19369, 'command', 21, false), J$.R(19377, 'ns', ns, 0), J$.R(19385, 'cmd', cmd, 0), J$.R(19393, 'options', options, 0), J$.R(19401, 'callback', callback, 0))));
                            }
                            if (J$.X1(28993, J$.C(896, J$.U(746, '!', J$.M(19457, J$.G(19449, J$.G(19441, J$.R(19433, 'self', self, 0), 's', 0), 'pool', 0), 'isConnected', 0)())))) {
                                return J$.X1(19545, J$.Rt(19537, J$.F(19529, J$.R(19465, 'callback', callback, 0), 0)(J$.F(19521, J$.R(19473, 'MongoError', MongoError, 1), 1)(J$.F(19513, J$.R(19481, 'f', f, 1), 0)(J$.T(19489, 'no connection available to server %s', 21, false), J$.G(19505, J$.R(19497, 'self', self, 0), 'name', 0))))));
                            }
                            var onAll = J$.X1(19609, J$.W(19601, 'onAll', J$.X1(29001, J$.C(904, J$.B(762, '==', J$.U(754, 'typeof', J$.G(19561, J$.R(19553, 'options', options, 0), 'onAll', 0)), J$.T(19569, 'boolean', 21, false), 0))) ? J$.G(19585, J$.R(19577, 'options', options, 0), 'onAll', 0) : J$.T(19593, false, 23, false), onAll, 1));
                            var checkKeys = J$.X1(19673, J$.W(19665, 'checkKeys', J$.X1(29009, J$.C(912, J$.B(778, '==', J$.U(770, 'typeof', J$.G(19625, J$.R(19617, 'options', options, 0), 'checkKeys', 0)), J$.T(19633, 'boolean', 21, false), 0))) ? J$.G(19649, J$.R(19641, 'options', options, 0), 'checkKeys', 0) : J$.T(19657, false, 23, false), checkKeys, 1));
                            var serializeFunctions = J$.X1(19737, J$.W(19729, 'serializeFunctions', J$.X1(29017, J$.C(920, J$.B(794, '==', J$.U(786, 'typeof', J$.G(19689, J$.R(19681, 'options', options, 0), 'serializeFunctions', 0)), J$.T(19697, 'boolean', 21, false), 0))) ? J$.G(19713, J$.R(19705, 'options', options, 0), 'serializeFunctions', 0) : J$.T(19721, false, 23, false), serializeFunctions, 1));
                            var ignoreUndefined = J$.X1(19801, J$.W(19793, 'ignoreUndefined', J$.X1(29025, J$.C(928, J$.B(810, '==', J$.U(802, 'typeof', J$.G(19753, J$.R(19745, 'options', options, 0), 'ignoreUndefined', 0)), J$.T(19761, 'boolean', 21, false), 0))) ? J$.G(19777, J$.R(19769, 'options', options, 0), 'ignoreUndefined', 0) : J$.T(19785, false, 23, false), ignoreUndefined, 1));
                            var queryOptions = J$.X1(19849, J$.W(19841, 'queryOptions', J$.T(19833, {
                                numberToSkip: J$.T(19809, 0, 22, false),
                                numberToReturn: J$.U(818, '-', J$.T(19817, 1, 22, false)),
                                checkKeys: J$.R(19825, 'checkKeys', checkKeys, 0)
                            }, 11, false), queryOptions, 1));
                            if (J$.X1(29033, J$.C(936, J$.R(19857, 'serializeFunctions', serializeFunctions, 0))))
                                J$.X1(19889, J$.P(19881, J$.R(19865, 'queryOptions', queryOptions, 0), 'serializeFunctions', J$.R(19873, 'serializeFunctions', serializeFunctions, 0), 0));
                            if (J$.X1(29041, J$.C(944, J$.R(19897, 'ignoreUndefined', ignoreUndefined, 0))))
                                J$.X1(19929, J$.P(19921, J$.R(19905, 'queryOptions', queryOptions, 0), 'ignoreUndefined', J$.R(19913, 'ignoreUndefined', ignoreUndefined, 0), 0));
                            if (J$.X1(29049, J$.C(952, J$.U(826, '!', J$.M(19953, J$.R(19937, 'Array', Array, 2), 'isArray', 0)(J$.R(19945, 'cmd', cmd, 0)))))) {
                                return J$.X1(20041, J$.Rt(20033, J$.F(20025, J$.R(19961, 'executeSingleOperation', executeSingleOperation, 1), 0)(J$.R(19969, 'self', self, 0), J$.R(19977, 'ns', ns, 0), J$.R(19985, 'cmd', cmd, 0), J$.R(19993, 'queryOptions', queryOptions, 0), J$.R(20001, 'options', options, 0), J$.R(20009, 'onAll', onAll, 0), J$.R(20017, 'callback', callback, 0))));
                            }
                            var queries = J$.X1(20089, J$.W(20081, 'queries', J$.F(20073, J$.R(20049, 'Array', Array, 2), 1)(J$.G(20065, J$.R(20057, 'cmd', cmd, 0), 'length', 0)), queries, 1));
                            for (var i = J$.X1(20113, J$.W(20105, 'i', J$.T(20097, 0, 22, false), i, 1)); J$.X1(29057, J$.C(960, J$.B(834, '<', J$.R(20121, 'i', i, 0), J$.G(20137, J$.R(20129, 'cmd', cmd, 0), 'length', 0), 0))); J$.X1(29065, J$.B(858, '-', i = J$.W(20161, 'i', J$.B(850, '+', J$.U(842, '+', J$.R(20153, 'i', i, 0)), J$.T(20145, 1, 22, false), 0), i, 0), J$.T(20169, 1, 22, false), 0))) {
                                J$.X1(20281, J$.P(20273, J$.R(20177, 'queries', queries, 0), J$.R(20185, 'i', i, 0), J$.F(20265, J$.R(20193, 'Query', Query, 1), 1)(J$.G(20217, J$.G(20209, J$.R(20201, 'self', self, 0), 's', 0), 'bson', 0), J$.R(20225, 'ns', ns, 0), J$.G(20249, J$.R(20233, 'cmd', cmd, 0), J$.R(20241, 'i', i, 0), 4), J$.R(20257, 'queryOptions', queryOptions, 0)), 2));
                                J$.X1(20353, J$.P(20345, J$.G(20305, J$.R(20289, 'queries', queries, 0), J$.R(20297, 'i', i, 0), 4), 'slaveOk', J$.F(20337, J$.R(20313, 'slaveOk', slaveOk, 1), 0)(J$.G(20329, J$.R(20321, 'options', options, 0), 'readPreference', 0)), 0));
                            }
                            if (J$.X1(29073, J$.C(968, J$.B(866, '!=', J$.G(20377, J$.G(20369, J$.R(20361, 'self', self, 0), 's', 0), 'readPreferenceStrategies', 0), J$.T(20385, null, 25, false), 0)))) {
                                J$.X1(20481, J$.F(20473, J$.R(20393, 'notifyStrategies', notifyStrategies, 1), 0)(J$.R(20401, 'self', self, 0), J$.G(20417, J$.R(20409, 'self', self, 0), 's', 0), J$.T(20425, 'startOperation', 21, false), J$.T(20465, [
                                    J$.R(20433, 'self', self, 0),
                                    J$.R(20441, 'queries', queries, 0),
                                    J$.F(20457, J$.R(20449, 'Date', Date, 2), 1)()
                                ], 10, false)));
                            }
                            var connection = J$.X1(20553, J$.W(20545, 'connection', J$.C(976, J$.G(20497, J$.R(20489, 'options', options, 0), 'connection', 0)) ? J$._() : J$.M(20537, J$.G(20521, J$.G(20513, J$.R(20505, 'self', self, 0), 's', 0), 'pool', 0), 'get', 0)(J$.R(20529, 'options', options, 0)), connection, 1));
                            if (J$.X1(29081, J$.C(984, J$.U(874, '!', J$.M(20569, J$.R(20561, 'connection', connection, 0), 'isConnected', 0)())))) {
                                return J$.X1(20657, J$.Rt(20649, J$.F(20641, J$.R(20577, 'callback', callback, 0), 0)(J$.F(20633, J$.R(20585, 'MongoError', MongoError, 1), 1)(J$.F(20625, J$.R(20593, 'f', f, 1), 0)(J$.T(20601, 'no connection available to server %s', 21, false), J$.G(20617, J$.R(20609, 'self', self, 0), 'name', 0))))));
                            }
                            if (J$.X1(29089, J$.C(992, J$.M(20689, J$.G(20681, J$.G(20673, J$.R(20665, 'self', self, 0), 's', 0), 'logger', 0), 'isDebug', 0)()))) {
                                var json = J$.X1(20721, J$.W(20713, 'json', J$.M(20705, J$.R(20697, 'connection', connection, 0), 'toJSON', 0)(), json, 1));
                                J$.X1(20857, J$.M(20849, J$.G(20745, J$.G(20737, J$.R(20729, 'self', self, 0), 's', 0), 'logger', 0), 'debug', 0)(J$.F(20841, J$.R(20753, 'f', f, 1), 0)(J$.T(20761, 'cmd [%s] about to be executed on connection with id %s at %s:%s', 21, false), J$.M(20785, J$.R(20769, 'JSON', JSON, 2), 'stringify', 0)(J$.R(20777, 'queries', queries, 0)), J$.G(20801, J$.R(20793, 'json', json, 0), 'id', 0), J$.G(20817, J$.R(20809, 'json', json, 0), 'host', 0), J$.G(20833, J$.R(20825, 'json', json, 0), 'port', 0))));
                            }
                            var canceled = J$.X1(20881, J$.W(20873, 'canceled', J$.T(20865, false, 23, false), canceled, 1));
                            var operationsLeft = J$.X1(20913, J$.W(20905, 'operationsLeft', J$.G(20897, J$.R(20889, 'queries', queries, 0), 'length', 0), operationsLeft, 1));
                            var results = J$.X1(20937, J$.W(20929, 'results', J$.T(20921, [], 10, false), results, 1));
                            for (var i = J$.X1(20961, J$.W(20953, 'i', J$.T(20945, 0, 22, false), i, 1)); J$.X1(29177, J$.C(1064, J$.B(882, '<', J$.R(20969, 'i', i, 0), J$.G(20985, J$.R(20977, 'queries', queries, 0), 'length', 0), 0))); J$.X1(29185, J$.B(906, '-', i = J$.W(21009, 'i', J$.B(898, '+', J$.U(890, '+', J$.R(21001, 'i', i, 0)), J$.T(20993, 1, 22, false), 0), i, 0), J$.T(21017, 1, 22, false), 0))) {
                                var query = J$.X1(21057, J$.W(21049, 'query', J$.G(21041, J$.R(21025, 'queries', queries, 0), J$.R(21033, 'i', i, 0), 4), query, 1));
                                try {
                                    J$.X1(21097, J$.M(21089, J$.R(21065, 'connection', connection, 0), 'write', 0)(J$.M(21081, J$.R(21073, 'query', query, 0), 'toBin', 0)()));
                                } catch (err) {
                                    err = J$.N(21161, 'err', err, 1);
                                    return J$.X1(21153, J$.Rt(21145, J$.F(21137, J$.R(21105, 'callback', callback, 0), 0)(J$.M(21129, J$.R(21113, 'MongoError', MongoError, 1), 'create', 0)(J$.R(21121, 'err', err, 0)))));
                                }
                                J$.X1(22201, J$.M(22193, J$.G(21185, J$.G(21177, J$.R(21169, 'self', self, 0), 's', 0), 'callbacks', 0), 'register', 0)(J$.G(21201, J$.R(21193, 'query', query, 0), 'requestId', 0), J$.T(22185, function (err, result) {
                                    jalangiLabel1391:
                                        while (true) {
                                            try {
                                                J$.Fe(22137, arguments.callee, this, arguments);
                                                arguments = J$.N(22145, 'arguments', arguments, 4);
                                                err = J$.N(22153, 'err', err, 4);
                                                result = J$.N(22161, 'result', result, 4);
                                                J$.N(22169, 'commandResults', commandResults, 0);
                                                J$.N(22177, 'i', i, 0);
                                                if (J$.X1(29097, J$.C(1000, J$.R(21209, 'canceled', canceled, 0))))
                                                    return J$.X1(21225, J$.Rt(21217, undefined));
                                                J$.X1(21257, operationsLeft = J$.W(21249, 'operationsLeft', J$.B(914, '-', J$.R(21233, 'operationsLeft', operationsLeft, 0), J$.T(21241, 1, 22, false), 0), operationsLeft, 0));
                                                if (J$.X1(29105, J$.C(1008, J$.R(21265, 'err', err, 0)))) {
                                                    J$.X1(21289, canceled = J$.W(21281, 'canceled', J$.T(21273, true, 23, false), canceled, 0));
                                                    return J$.X1(21329, J$.Rt(21321, J$.F(21313, J$.R(21297, 'callback', callback, 0), 0)(J$.R(21305, 'err', err, 0))));
                                                }
                                                if (J$.X1(29113, J$.C(1040, J$.C(1032, J$.C(1024, J$.C(1016, J$.G(21377, J$.G(21361, J$.G(21345, J$.R(21337, 'result', result, 0), 'documents', 0), J$.T(21353, 0, 22, false), 4), J$.T(21369, '$err', 21, false), 4)) ? J$._() : J$.G(21425, J$.G(21409, J$.G(21393, J$.R(21385, 'result', result, 0), 'documents', 0), J$.T(21401, 0, 22, false), 4), J$.T(21417, 'errmsg', 21, false), 4)) ? J$._() : J$.G(21473, J$.G(21457, J$.G(21441, J$.R(21433, 'result', result, 0), 'documents', 0), J$.T(21449, 0, 22, false), 4), J$.T(21465, 'err', 21, false), 4)) ? J$._() : J$.G(21521, J$.G(21505, J$.G(21489, J$.R(21481, 'result', result, 0), 'documents', 0), J$.T(21497, 0, 22, false), 4), J$.T(21513, 'code', 21, false), 4)))) {
                                                    J$.X1(21545, canceled = J$.W(21537, 'canceled', J$.T(21529, true, 23, false), canceled, 0));
                                                    return J$.X1(21625, J$.Rt(21617, J$.F(21609, J$.R(21553, 'callback', callback, 0), 0)(J$.M(21601, J$.R(21561, 'MongoError', MongoError, 1), 'create', 0)(J$.G(21593, J$.G(21577, J$.R(21569, 'result', result, 0), 'documents', 0), J$.T(21585, 0, 22, false), 4)))));
                                                }
                                                J$.X1(21681, J$.M(21673, J$.R(21633, 'results', results, 0), 'push', 0)(J$.G(21665, J$.G(21649, J$.R(21641, 'result', result, 0), 'documents', 0), J$.T(21657, 0, 22, false), 4)));
                                                if (J$.X1(29153, J$.C(1056, J$.B(922, '==', J$.R(21689, 'operationsLeft', operationsLeft, 0), J$.T(21697, 0, 22, false), 0)))) {
                                                    J$.X1(21801, J$.F(21793, J$.R(21705, 'notifyStrategies', notifyStrategies, 1), 0)(J$.R(21713, 'self', self, 0), J$.G(21729, J$.R(21721, 'self', self, 0), 's', 0), J$.T(21737, 'endOperation', 21, false), J$.T(21785, [
                                                        J$.R(21745, 'self', self, 0),
                                                        J$.R(21753, 'err', err, 0),
                                                        J$.R(21761, 'result', result, 0),
                                                        J$.F(21777, J$.R(21769, 'Date', Date, 2), 1)()
                                                    ], 10, false)));
                                                    var commandResults = J$.X1(21849, J$.W(21841, 'commandResults', J$.F(21833, J$.R(21809, 'Array', Array, 2), 1)(J$.G(21825, J$.R(21817, 'results', results, 0), 'length', 0)), commandResults, 1));
                                                    for (var i = J$.X1(21873, J$.W(21865, 'i', J$.T(21857, 0, 22, false), i, 1)); J$.X1(29121, J$.C(1048, J$.B(930, '<', J$.R(21881, 'i', i, 0), J$.G(21897, J$.R(21889, 'results', results, 0), 'length', 0), 0))); J$.X1(29129, J$.B(954, '-', i = J$.W(21921, 'i', J$.B(946, '+', J$.U(938, '+', J$.R(21913, 'i', i, 0)), J$.T(21905, 1, 22, false), 0), i, 0), J$.T(21929, 1, 22, false), 0))) {
                                                        J$.X1(22009, J$.P(22001, J$.R(21937, 'commandResults', commandResults, 0), J$.R(21945, 'i', i, 0), J$.F(21993, J$.R(21953, 'CommandResult', CommandResult, 1), 1)(J$.G(21977, J$.R(21961, 'results', results, 0), J$.R(21969, 'i', i, 0), 4), J$.R(21985, 'connection', connection, 0)), 2));
                                                    }
                                                    try {
                                                        J$.X1(22049, J$.F(22041, J$.R(22017, 'callback', callback, 0), 0)(J$.T(22025, null, 25, false), J$.R(22033, 'commandResults', commandResults, 0)));
                                                    } catch (err) {
                                                        err = J$.N(22129, 'err', err, 1);
                                                        J$.X1(22121, J$.M(22113, J$.R(22057, 'process', process, 2), 'nextTick', 0)(J$.T(22105, function () {
                                                            jalangiLabel1390:
                                                                while (true) {
                                                                    try {
                                                                        J$.Fe(22089, arguments.callee, this, arguments);
                                                                        arguments = J$.N(22097, 'arguments', arguments, 4);
                                                                        throw J$.X1(22081, J$.Th(22073, J$.R(22065, 'err', err, 0)));
                                                                    } catch (J$e) {
                                                                        J$.Ex(29137, J$e);
                                                                    } finally {
                                                                        if (J$.Fr(29145))
                                                                            continue jalangiLabel1390;
                                                                        else
                                                                            return J$.Ra();
                                                                    }
                                                                }
                                                        }, 12, false, 22089)));
                                                    }
                                                }
                                            } catch (J$e) {
                                                J$.Ex(29161, J$e);
                                            } finally {
                                                if (J$.Fr(29169))
                                                    continue jalangiLabel1391;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 22137)));
                            }
                        } catch (J$e) {
                            J$.Ex(29193, J$e);
                        } finally {
                            if (J$.Fr(29201))
                                continue jalangiLabel1392;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 22209), 0));
            J$.X1(23097, J$.P(23089, J$.G(22401, J$.R(22393, 'Server', Server, 1), 'prototype', 0), 'insert', J$.T(23081, function (ns, ops, options, callback) {
                jalangiLabel1393:
                    while (true) {
                        try {
                            J$.Fe(23025, arguments.callee, this, arguments);
                            arguments = J$.N(23033, 'arguments', arguments, 4);
                            ns = J$.N(23041, 'ns', ns, 4);
                            ops = J$.N(23049, 'ops', ops, 4);
                            options = J$.N(23057, 'options', options, 4);
                            callback = J$.N(23065, 'callback', callback, 4);
                            J$.N(23073, 'self', self, 0);
                            if (J$.X1(29209, J$.C(1072, J$.B(970, '==', J$.U(962, 'typeof', J$.R(22409, 'options', options, 0)), J$.T(22417, 'function', 21, false), 0))))
                                J$.X1(22465, (J$.X1(22457, callback = J$.W(22433, 'callback', J$.R(22425, 'options', options, 0), callback, 0)), options = J$.W(22449, 'options', J$.T(22441, {}, 11, false), options, 0)));
                            var self = J$.X1(22489, J$.W(22481, 'self', J$.R(22473, 'this', this, 0), self, 1));
                            if (J$.X1(29217, J$.C(1080, J$.B(978, '==', J$.G(22513, J$.G(22505, J$.R(22497, 'this', this, 0), 's', 0), 'state', 0), J$.R(22521, 'DESTROYED', DESTROYED, 1), 0))))
                                return J$.X1(22593, J$.Rt(22585, J$.F(22577, J$.R(22529, 'callback', callback, 0), 0)(J$.F(22569, J$.R(22537, 'MongoError', MongoError, 1), 1)(J$.F(22561, J$.R(22545, 'f', f, 1), 0)(J$.T(22553, 'topology was destroyed', 21, false))))));
                            if (J$.X1(29225, J$.C(1096, J$.C(1088, J$.U(986, '!', J$.M(22609, J$.R(22601, 'self', self, 0), 'isConnected', 0)())) ? J$.B(994, '!=', J$.G(22633, J$.G(22625, J$.R(22617, 'self', self, 0), 's', 0), 'disconnectHandler', 0), J$.T(22641, null, 25, false), 0) : J$._()))) {
                                J$.X1(22681, callback = J$.W(22673, 'callback', J$.F(22665, J$.R(22649, 'bindToCurrentDomain', bindToCurrentDomain, 1), 0)(J$.R(22657, 'callback', callback, 0)), callback, 0));
                                return J$.X1(22769, J$.Rt(22761, J$.M(22753, J$.G(22705, J$.G(22697, J$.R(22689, 'self', self, 0), 's', 0), 'disconnectHandler', 0), 'add', 0)(J$.T(22713, 'insert', 21, false), J$.R(22721, 'ns', ns, 0), J$.R(22729, 'ops', ops, 0), J$.R(22737, 'options', options, 0), J$.R(22745, 'callback', callback, 0))));
                            }
                            J$.X1(22833, ops = J$.W(22825, 'ops', J$.X1(29233, J$.C(1104, J$.M(22793, J$.R(22777, 'Array', Array, 2), 'isArray', 0)(J$.R(22785, 'ops', ops, 0)))) ? J$.R(22801, 'ops', ops, 0) : J$.T(22817, [J$.R(22809, 'ops', ops, 0)], 10, false), ops, 0));
                            return J$.X1(23017, J$.Rt(23009, J$.M(23001, J$.G(22857, J$.G(22849, J$.R(22841, 'self', self, 0), 's', 0), 'wireProtocolHandler', 0), 'insert', 0)(J$.R(22865, 'self', self, 0), J$.G(22889, J$.G(22881, J$.R(22873, 'self', self, 0), 's', 0), 'ismaster', 0), J$.R(22897, 'ns', ns, 0), J$.G(22921, J$.G(22913, J$.R(22905, 'self', self, 0), 's', 0), 'bson', 0), J$.G(22945, J$.G(22937, J$.R(22929, 'self', self, 0), 's', 0), 'pool', 0), J$.G(22969, J$.G(22961, J$.R(22953, 'self', self, 0), 's', 0), 'callbacks', 0), J$.R(22977, 'ops', ops, 0), J$.R(22985, 'options', options, 0), J$.R(22993, 'callback', callback, 0))));
                        } catch (J$e) {
                            J$.Ex(29241, J$e);
                        } finally {
                            if (J$.Fr(29249))
                                continue jalangiLabel1393;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 23025), 0));
            J$.X1(23809, J$.P(23801, J$.G(23113, J$.R(23105, 'Server', Server, 1), 'prototype', 0), 'update', J$.T(23793, function (ns, ops, options, callback) {
                jalangiLabel1394:
                    while (true) {
                        try {
                            J$.Fe(23737, arguments.callee, this, arguments);
                            arguments = J$.N(23745, 'arguments', arguments, 4);
                            ns = J$.N(23753, 'ns', ns, 4);
                            ops = J$.N(23761, 'ops', ops, 4);
                            options = J$.N(23769, 'options', options, 4);
                            callback = J$.N(23777, 'callback', callback, 4);
                            J$.N(23785, 'self', self, 0);
                            if (J$.X1(29257, J$.C(1112, J$.B(1010, '==', J$.U(1002, 'typeof', J$.R(23121, 'options', options, 0)), J$.T(23129, 'function', 21, false), 0))))
                                J$.X1(23177, (J$.X1(23169, callback = J$.W(23145, 'callback', J$.R(23137, 'options', options, 0), callback, 0)), options = J$.W(23161, 'options', J$.T(23153, {}, 11, false), options, 0)));
                            var self = J$.X1(23201, J$.W(23193, 'self', J$.R(23185, 'this', this, 0), self, 1));
                            if (J$.X1(29265, J$.C(1120, J$.B(1018, '==', J$.G(23225, J$.G(23217, J$.R(23209, 'this', this, 0), 's', 0), 'state', 0), J$.R(23233, 'DESTROYED', DESTROYED, 1), 0))))
                                return J$.X1(23305, J$.Rt(23297, J$.F(23289, J$.R(23241, 'callback', callback, 0), 0)(J$.F(23281, J$.R(23249, 'MongoError', MongoError, 1), 1)(J$.F(23273, J$.R(23257, 'f', f, 1), 0)(J$.T(23265, 'topology was destroyed', 21, false))))));
                            if (J$.X1(29273, J$.C(1136, J$.C(1128, J$.U(1026, '!', J$.M(23321, J$.R(23313, 'self', self, 0), 'isConnected', 0)())) ? J$.B(1034, '!=', J$.G(23345, J$.G(23337, J$.R(23329, 'self', self, 0), 's', 0), 'disconnectHandler', 0), J$.T(23353, null, 25, false), 0) : J$._()))) {
                                J$.X1(23393, callback = J$.W(23385, 'callback', J$.F(23377, J$.R(23361, 'bindToCurrentDomain', bindToCurrentDomain, 1), 0)(J$.R(23369, 'callback', callback, 0)), callback, 0));
                                return J$.X1(23481, J$.Rt(23473, J$.M(23465, J$.G(23417, J$.G(23409, J$.R(23401, 'self', self, 0), 's', 0), 'disconnectHandler', 0), 'add', 0)(J$.T(23425, 'update', 21, false), J$.R(23433, 'ns', ns, 0), J$.R(23441, 'ops', ops, 0), J$.R(23449, 'options', options, 0), J$.R(23457, 'callback', callback, 0))));
                            }
                            J$.X1(23545, ops = J$.W(23537, 'ops', J$.X1(29281, J$.C(1144, J$.M(23505, J$.R(23489, 'Array', Array, 2), 'isArray', 0)(J$.R(23497, 'ops', ops, 0)))) ? J$.R(23513, 'ops', ops, 0) : J$.T(23529, [J$.R(23521, 'ops', ops, 0)], 10, false), ops, 0));
                            return J$.X1(23729, J$.Rt(23721, J$.M(23713, J$.G(23569, J$.G(23561, J$.R(23553, 'self', self, 0), 's', 0), 'wireProtocolHandler', 0), 'update', 0)(J$.R(23577, 'self', self, 0), J$.G(23601, J$.G(23593, J$.R(23585, 'self', self, 0), 's', 0), 'ismaster', 0), J$.R(23609, 'ns', ns, 0), J$.G(23633, J$.G(23625, J$.R(23617, 'self', self, 0), 's', 0), 'bson', 0), J$.G(23657, J$.G(23649, J$.R(23641, 'self', self, 0), 's', 0), 'pool', 0), J$.G(23681, J$.G(23673, J$.R(23665, 'self', self, 0), 's', 0), 'callbacks', 0), J$.R(23689, 'ops', ops, 0), J$.R(23697, 'options', options, 0), J$.R(23705, 'callback', callback, 0))));
                        } catch (J$e) {
                            J$.Ex(29289, J$e);
                        } finally {
                            if (J$.Fr(29297))
                                continue jalangiLabel1394;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 23737), 0));
            J$.X1(24521, J$.P(24513, J$.G(23825, J$.R(23817, 'Server', Server, 1), 'prototype', 0), 'remove', J$.T(24505, function (ns, ops, options, callback) {
                jalangiLabel1395:
                    while (true) {
                        try {
                            J$.Fe(24449, arguments.callee, this, arguments);
                            arguments = J$.N(24457, 'arguments', arguments, 4);
                            ns = J$.N(24465, 'ns', ns, 4);
                            ops = J$.N(24473, 'ops', ops, 4);
                            options = J$.N(24481, 'options', options, 4);
                            callback = J$.N(24489, 'callback', callback, 4);
                            J$.N(24497, 'self', self, 0);
                            if (J$.X1(29305, J$.C(1152, J$.B(1050, '==', J$.U(1042, 'typeof', J$.R(23833, 'options', options, 0)), J$.T(23841, 'function', 21, false), 0))))
                                J$.X1(23889, (J$.X1(23881, callback = J$.W(23857, 'callback', J$.R(23849, 'options', options, 0), callback, 0)), options = J$.W(23873, 'options', J$.T(23865, {}, 11, false), options, 0)));
                            var self = J$.X1(23913, J$.W(23905, 'self', J$.R(23897, 'this', this, 0), self, 1));
                            if (J$.X1(29313, J$.C(1160, J$.B(1058, '==', J$.G(23937, J$.G(23929, J$.R(23921, 'this', this, 0), 's', 0), 'state', 0), J$.R(23945, 'DESTROYED', DESTROYED, 1), 0))))
                                return J$.X1(24017, J$.Rt(24009, J$.F(24001, J$.R(23953, 'callback', callback, 0), 0)(J$.F(23993, J$.R(23961, 'MongoError', MongoError, 1), 1)(J$.F(23985, J$.R(23969, 'f', f, 1), 0)(J$.T(23977, 'topology was destroyed', 21, false))))));
                            if (J$.X1(29321, J$.C(1176, J$.C(1168, J$.U(1066, '!', J$.M(24033, J$.R(24025, 'self', self, 0), 'isConnected', 0)())) ? J$.B(1074, '!=', J$.G(24057, J$.G(24049, J$.R(24041, 'self', self, 0), 's', 0), 'disconnectHandler', 0), J$.T(24065, null, 25, false), 0) : J$._()))) {
                                J$.X1(24105, callback = J$.W(24097, 'callback', J$.F(24089, J$.R(24073, 'bindToCurrentDomain', bindToCurrentDomain, 1), 0)(J$.R(24081, 'callback', callback, 0)), callback, 0));
                                return J$.X1(24193, J$.Rt(24185, J$.M(24177, J$.G(24129, J$.G(24121, J$.R(24113, 'self', self, 0), 's', 0), 'disconnectHandler', 0), 'add', 0)(J$.T(24137, 'remove', 21, false), J$.R(24145, 'ns', ns, 0), J$.R(24153, 'ops', ops, 0), J$.R(24161, 'options', options, 0), J$.R(24169, 'callback', callback, 0))));
                            }
                            J$.X1(24257, ops = J$.W(24249, 'ops', J$.X1(29329, J$.C(1184, J$.M(24217, J$.R(24201, 'Array', Array, 2), 'isArray', 0)(J$.R(24209, 'ops', ops, 0)))) ? J$.R(24225, 'ops', ops, 0) : J$.T(24241, [J$.R(24233, 'ops', ops, 0)], 10, false), ops, 0));
                            return J$.X1(24441, J$.Rt(24433, J$.M(24425, J$.G(24281, J$.G(24273, J$.R(24265, 'self', self, 0), 's', 0), 'wireProtocolHandler', 0), 'remove', 0)(J$.R(24289, 'self', self, 0), J$.G(24313, J$.G(24305, J$.R(24297, 'self', self, 0), 's', 0), 'ismaster', 0), J$.R(24321, 'ns', ns, 0), J$.G(24345, J$.G(24337, J$.R(24329, 'self', self, 0), 's', 0), 'bson', 0), J$.G(24369, J$.G(24361, J$.R(24353, 'self', self, 0), 's', 0), 'pool', 0), J$.G(24393, J$.G(24385, J$.R(24377, 'self', self, 0), 's', 0), 'callbacks', 0), J$.R(24401, 'ops', ops, 0), J$.R(24409, 'options', options, 0), J$.R(24417, 'callback', callback, 0))));
                        } catch (J$e) {
                            J$.Ex(29337, J$e);
                        } finally {
                            if (J$.Fr(29345))
                                continue jalangiLabel1395;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 24449), 0));
            J$.X1(25457, J$.P(25449, J$.G(24537, J$.R(24529, 'Server', Server, 1), 'prototype', 0), 'auth', J$.T(25441, function (mechanism, db) {
                jalangiLabel1397:
                    while (true) {
                        try {
                            J$.Fe(25377, arguments.callee, this, arguments);
                            arguments = J$.N(25385, 'arguments', arguments, 4);
                            mechanism = J$.N(25393, 'mechanism', mechanism, 4);
                            db = J$.N(25401, 'db', db, 4);
                            J$.N(25409, 'self', self, 0);
                            J$.N(25417, 'args', args, 0);
                            J$.N(25425, 'callback', callback, 0);
                            J$.N(25433, 'finalArguments', finalArguments, 0);
                            var self = J$.X1(24561, J$.W(24553, 'self', J$.R(24545, 'this', this, 0), self, 1));
                            var args = J$.X1(24625, J$.W(24617, 'args', J$.M(24609, J$.G(24585, J$.G(24577, J$.R(24569, 'Array', Array, 2), 'prototype', 0), 'slice', 0), 'call', 0)(J$.R(24593, 'arguments', arguments, 2), J$.T(24601, 2, 22, false)), args, 1));
                            var callback = J$.X1(24657, J$.W(24649, 'callback', J$.M(24641, J$.R(24633, 'args', args, 0), 'pop', 0)(), callback, 1));
                            if (J$.X1(29353, J$.C(1200, J$.C(1192, J$.B(1082, '==', J$.G(24697, J$.G(24681, J$.G(24673, J$.R(24665, 'self', self, 0), 's', 0), 'authProviders', 0), J$.R(24689, 'mechanism', mechanism, 0), 4), J$.T(24705, null, 25, false), 0)) ? J$.B(1090, '!=', J$.R(24713, 'mechanism', mechanism, 0), J$.T(24721, 'default', 21, false), 0) : J$._())))
                                throw J$.X1(24785, J$.Th(24777, J$.F(24769, J$.R(24729, 'MongoError', MongoError, 1), 1)(J$.F(24761, J$.R(24737, 'f', f, 1), 0)(J$.T(24745, 'auth provider %s does not exist', 21, false), J$.R(24753, 'mechanism', mechanism, 0)))));
                            if (J$.X1(29369, J$.C(1232, J$.C(1216, J$.C(1208, J$.B(1098, '==', J$.R(24793, 'mechanism', mechanism, 0), J$.T(24801, 'default', 21, false), 0)) ? J$.G(24825, J$.G(24817, J$.R(24809, 'self', self, 0), 's', 0), 'ismaster', 0) : J$._()) ? J$.B(1106, '>=', J$.G(24857, J$.G(24849, J$.G(24841, J$.R(24833, 'self', self, 0), 's', 0), 'ismaster', 0), 'maxWireVersion', 0), J$.T(24865, 3, 22, false), 0) : J$._()))) {
                                J$.X1(24889, mechanism = J$.W(24881, 'mechanism', J$.T(24873, 'scram-sha-1', 21, false), mechanism, 0));
                            } else if (J$.X1(29361, J$.C(1224, J$.B(1114, '==', J$.R(24897, 'mechanism', mechanism, 0), J$.T(24905, 'default', 21, false), 0)))) {
                                J$.X1(24929, mechanism = J$.W(24921, 'mechanism', J$.T(24913, 'mongocr', 21, false), mechanism, 0));
                            }
                            var finalArguments = J$.X1(25257, J$.W(25249, 'finalArguments', J$.M(25241, J$.M(25009, J$.T(24977, [
                                J$.R(24937, 'self', self, 0),
                                J$.G(24961, J$.G(24953, J$.R(24945, 'self', self, 0), 's', 0), 'pool', 0),
                                J$.R(24969, 'db', db, 0)
                            ], 10, false), 'concat', 0)(J$.M(25001, J$.R(24985, 'args', args, 0), 'slice', 0)(J$.T(24993, 0, 22, false))), 'concat', 0)(J$.T(25233, [J$.T(25225, function (err, r) {
                                    jalangiLabel1396:
                                        while (true) {
                                            try {
                                                J$.Fe(25193, arguments.callee, this, arguments);
                                                arguments = J$.N(25201, 'arguments', arguments, 4);
                                                err = J$.N(25209, 'err', err, 4);
                                                r = J$.N(25217, 'r', r, 4);
                                                if (J$.X1(29377, J$.C(1240, J$.R(25017, 'err', err, 0))))
                                                    return J$.X1(25057, J$.Rt(25049, J$.F(25041, J$.R(25025, 'callback', callback, 0), 0)(J$.R(25033, 'err', err, 0))));
                                                if (J$.X1(29385, J$.C(1248, J$.U(1122, '!', J$.R(25065, 'r', r, 0)))))
                                                    return J$.X1(25121, J$.Rt(25113, J$.F(25105, J$.R(25073, 'callback', callback, 0), 0)(J$.F(25097, J$.R(25081, 'MongoError', MongoError, 1), 1)(J$.T(25089, 'could not authenticate', 21, false)))));
                                                J$.X1(25185, J$.F(25177, J$.R(25129, 'callback', callback, 0), 0)(J$.T(25137, null, 25, false), J$.F(25169, J$.R(25145, 'Session', Session, 1), 1)(J$.T(25153, {}, 11, false), J$.R(25161, 'self', self, 0))));
                                            } catch (J$e) {
                                                J$.Ex(29393, J$e);
                                            } finally {
                                                if (J$.Fr(29401))
                                                    continue jalangiLabel1396;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 25193)], 10, false)), finalArguments, 1));
                            J$.X1(25369, J$.M(25361, J$.G(25305, J$.G(25297, J$.G(25281, J$.G(25273, J$.R(25265, 'self', self, 0), 's', 0), 'authProviders', 0), J$.R(25289, 'mechanism', mechanism, 0), 4), 'auth', 0), 'apply', 0)(J$.G(25345, J$.G(25329, J$.G(25321, J$.R(25313, 'self', self, 0), 's', 0), 'authProviders', 0), J$.R(25337, 'mechanism', mechanism, 0), 4), J$.R(25353, 'finalArguments', finalArguments, 0)));
                        } catch (J$e) {
                            J$.Ex(29409, J$e);
                        } finally {
                            if (J$.Fr(29417))
                                continue jalangiLabel1397;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 25377), 0));
            J$.X1(25689, J$.P(25681, J$.G(25473, J$.R(25465, 'Server', Server, 1), 'prototype', 0), 'addReadPreferenceStrategy', J$.T(25673, function (name, strategy) {
                jalangiLabel1398:
                    while (true) {
                        try {
                            J$.Fe(25633, arguments.callee, this, arguments);
                            arguments = J$.N(25641, 'arguments', arguments, 4);
                            name = J$.N(25649, 'name', name, 4);
                            strategy = J$.N(25657, 'strategy', strategy, 4);
                            J$.N(25665, 'self', self, 0);
                            var self = J$.X1(25497, J$.W(25489, 'self', J$.R(25481, 'this', this, 0), self, 1));
                            if (J$.X1(29425, J$.C(1256, J$.B(1130, '==', J$.G(25521, J$.G(25513, J$.R(25505, 'self', self, 0), 's', 0), 'readPreferenceStrategies', 0), J$.T(25529, null, 25, false), 0))))
                                J$.X1(25569, J$.P(25561, J$.G(25545, J$.R(25537, 'self', self, 0), 's', 0), 'readPreferenceStrategies', J$.T(25553, {}, 11, false), 0));
                            J$.X1(25625, J$.P(25617, J$.G(25593, J$.G(25585, J$.R(25577, 'self', self, 0), 's', 0), 'readPreferenceStrategies', 0), J$.R(25601, 'name', name, 0), J$.R(25609, 'strategy', strategy, 0), 2));
                        } catch (J$e) {
                            J$.Ex(29433, J$e);
                        } finally {
                            if (J$.Fr(29441))
                                continue jalangiLabel1398;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 25633), 0));
            J$.X1(25849, J$.P(25841, J$.G(25705, J$.R(25697, 'Server', Server, 1), 'prototype', 0), 'addAuthProvider', J$.T(25833, function (name, provider) {
                jalangiLabel1399:
                    while (true) {
                        try {
                            J$.Fe(25793, arguments.callee, this, arguments);
                            arguments = J$.N(25801, 'arguments', arguments, 4);
                            name = J$.N(25809, 'name', name, 4);
                            provider = J$.N(25817, 'provider', provider, 4);
                            J$.N(25825, 'self', self, 0);
                            var self = J$.X1(25729, J$.W(25721, 'self', J$.R(25713, 'this', this, 0), self, 1));
                            J$.X1(25785, J$.P(25777, J$.G(25753, J$.G(25745, J$.R(25737, 'self', self, 0), 's', 0), 'authProviders', 0), J$.R(25761, 'name', name, 0), J$.R(25769, 'provider', provider, 0), 2));
                        } catch (J$e) {
                            J$.Ex(29449, J$e);
                        } finally {
                            if (J$.Fr(29457))
                                continue jalangiLabel1399;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 25793), 0));
            J$.X1(26065, J$.P(26057, J$.G(25865, J$.R(25857, 'Server', Server, 1), 'prototype', 0), 'equals', J$.T(26049, function (server) {
                jalangiLabel1400:
                    while (true) {
                        try {
                            J$.Fe(26025, arguments.callee, this, arguments);
                            arguments = J$.N(26033, 'arguments', arguments, 4);
                            server = J$.N(26041, 'server', server, 4);
                            if (J$.X1(29465, J$.C(1264, J$.B(1146, '==', J$.U(1138, 'typeof', J$.R(25873, 'server', server, 0)), J$.T(25881, 'string', 21, false), 0))))
                                return J$.X1(25921, J$.Rt(25913, J$.B(1154, '==', J$.R(25889, 'server', server, 0), J$.G(25905, J$.R(25897, 'this', this, 0), 'name', 0), 0)));
                            if (J$.X1(29473, J$.C(1280, J$.C(1272, J$.R(25929, 'server', server, 0)) ? J$.G(25945, J$.R(25937, 'server', server, 0), 'name', 0) : J$._()))) {
                                return J$.X1(25993, J$.Rt(25985, J$.B(1162, '==', J$.G(25961, J$.R(25953, 'server', server, 0), 'name', 0), J$.G(25977, J$.R(25969, 'this', this, 0), 'name', 0), 0)));
                            }
                            return J$.X1(26017, J$.Rt(26009, J$.T(26001, false, 23, false)));
                        } catch (J$e) {
                            J$.Ex(29481, J$e);
                        } finally {
                            if (J$.Fr(29489))
                                continue jalangiLabel1400;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 26025), 0));
            J$.X1(26169, J$.P(26161, J$.G(26081, J$.R(26073, 'Server', Server, 1), 'prototype', 0), 'connections', J$.T(26153, function () {
                jalangiLabel1401:
                    while (true) {
                        try {
                            J$.Fe(26137, arguments.callee, this, arguments);
                            arguments = J$.N(26145, 'arguments', arguments, 4);
                            return J$.X1(26129, J$.Rt(26121, J$.M(26113, J$.G(26105, J$.G(26097, J$.R(26089, 'this', this, 0), 's', 0), 'pool', 0), 'getAll', 0)()));
                        } catch (J$e) {
                            J$.Ex(29497, J$e);
                        } finally {
                            if (J$.Fr(29505))
                                continue jalangiLabel1401;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 26137), 0));
            J$.X1(26257, J$.P(26249, J$.G(26185, J$.R(26177, 'Server', Server, 1), 'prototype', 0), 'getServer', J$.T(26241, function (options) {
                jalangiLabel1402:
                    while (true) {
                        try {
                            J$.Fe(26217, arguments.callee, this, arguments);
                            arguments = J$.N(26225, 'arguments', arguments, 4);
                            options = J$.N(26233, 'options', options, 4);
                            return J$.X1(26209, J$.Rt(26201, J$.R(26193, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(29513, J$e);
                        } finally {
                            if (J$.Fr(29521))
                                continue jalangiLabel1402;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 26217), 0));
            J$.X1(26369, J$.P(26361, J$.G(26273, J$.R(26265, 'Server', Server, 1), 'prototype', 0), 'getConnection', J$.T(26353, function (options) {
                jalangiLabel1403:
                    while (true) {
                        try {
                            J$.Fe(26329, arguments.callee, this, arguments);
                            arguments = J$.N(26337, 'arguments', arguments, 4);
                            options = J$.N(26345, 'options', options, 4);
                            return J$.X1(26321, J$.Rt(26313, J$.M(26305, J$.G(26297, J$.G(26289, J$.R(26281, 'this', this, 0), 's', 0), 'pool', 0), 'get', 0)()));
                        } catch (J$e) {
                            J$.Ex(29529, J$e);
                        } finally {
                            if (J$.Fr(29537))
                                continue jalangiLabel1403;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 26329), 0));
            J$.X1(26465, J$.P(26457, J$.G(26385, J$.R(26377, 'Server', Server, 1), 'prototype', 0), 'getCallbacks', J$.T(26449, function () {
                jalangiLabel1404:
                    while (true) {
                        try {
                            J$.Fe(26433, arguments.callee, this, arguments);
                            arguments = J$.N(26441, 'arguments', arguments, 4);
                            return J$.X1(26425, J$.Rt(26417, J$.G(26409, J$.G(26401, J$.R(26393, 'this', this, 0), 's', 0), 'callbacks', 0)));
                        } catch (J$e) {
                            J$.Ex(29545, J$e);
                        } finally {
                            if (J$.Fr(29553))
                                continue jalangiLabel1404;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 26433), 0));
            J$.X1(26673, J$.P(26665, J$.G(26481, J$.R(26473, 'Server', Server, 1), 'prototype', 0), 'parserType', J$.T(26657, function () {
                jalangiLabel1405:
                    while (true) {
                        try {
                            J$.Fe(26633, arguments.callee, this, arguments);
                            arguments = J$.N(26641, 'arguments', arguments, 4);
                            J$.N(26649, 's', s, 0);
                            var s = J$.X1(26513, J$.W(26505, 's', J$.G(26497, J$.R(26489, 'this', this, 0), 's', 0), s, 1));
                            if (J$.X1(29561, J$.C(1288, J$.B(1178, '!=', J$.M(26569, J$.M(26553, J$.G(26545, J$.G(26537, J$.G(26529, J$.R(26521, 's', s, 0), 'options', 0), 'bson', 0), 'serialize', 0), 'toString', 0)(), 'indexOf', 0)(J$.T(26561, '[native code]', 21, false)), J$.U(1170, '-', J$.T(26577, 1, 22, false)), 0))))
                                return J$.X1(26601, J$.Rt(26593, J$.T(26585, 'c++', 21, false)));
                            return J$.X1(26625, J$.Rt(26617, J$.T(26609, 'js', 21, false)));
                        } catch (J$e) {
                            J$.Ex(29569, J$e);
                        } finally {
                            if (J$.Fr(29577))
                                continue jalangiLabel1405;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 26633), 0));
            J$.X1(26977, J$.P(26969, J$.G(26689, J$.R(26681, 'Server', Server, 1), 'prototype', 0), 'cursor', J$.T(26961, function (ns, cmd, cursorOptions) {
                jalangiLabel1406:
                    while (true) {
                        try {
                            J$.Fe(26905, arguments.callee, this, arguments);
                            arguments = J$.N(26913, 'arguments', arguments, 4);
                            ns = J$.N(26921, 'ns', ns, 4);
                            cmd = J$.N(26929, 'cmd', cmd, 4);
                            cursorOptions = J$.N(26937, 'cursorOptions', cursorOptions, 4);
                            J$.N(26945, 's', s, 0);
                            J$.N(26953, 'FinalCursor', FinalCursor, 0);
                            var s = J$.X1(26721, J$.W(26713, 's', J$.G(26705, J$.R(26697, 'this', this, 0), 's', 0), s, 1));
                            J$.X1(26753, cursorOptions = J$.W(26745, 'cursorOptions', J$.C(1296, J$.R(26729, 'cursorOptions', cursorOptions, 0)) ? J$._() : J$.T(26737, {}, 11, false), cursorOptions, 0));
                            var FinalCursor = J$.X1(26801, J$.W(26793, 'FinalCursor', J$.C(1304, J$.G(26769, J$.R(26761, 'cursorOptions', cursorOptions, 0), 'cursorFactory', 0)) ? J$._() : J$.G(26785, J$.R(26777, 's', s, 0), 'Cursor', 0), FinalCursor, 1));
                            return J$.X1(26897, J$.Rt(26889, J$.F(26881, J$.R(26809, 'FinalCursor', FinalCursor, 0), 1)(J$.G(26825, J$.R(26817, 's', s, 0), 'bson', 0), J$.R(26833, 'ns', ns, 0), J$.R(26841, 'cmd', cmd, 0), J$.R(26849, 'cursorOptions', cursorOptions, 0), J$.R(26857, 'this', this, 0), J$.G(26873, J$.R(26865, 's', s, 0), 'options', 0))));
                        } catch (J$e) {
                            J$.Ex(29585, J$e);
                        } finally {
                            if (J$.Fr(29593))
                                continue jalangiLabel1406;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 26905), 0));
            J$.X1(27009, J$.P(27001, J$.R(26985, 'module', module, 2), 'exports', J$.R(26993, 'Server', Server, 1), 0));
        } catch (J$e) {
            J$.Ex(29601, J$e);
        } finally {
            if (J$.Sr(29609)) {
                J$.L();
                continue jalangiLabel1407;
            } else {
                J$.L();
                break jalangiLabel1407;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
