J$.iids = {"8":[11,12,11,70],"9":[1,20,1,27],"10":[11,12,11,33],"16":[11,12,11,107],"17":[1,28,1,32],"18":[11,37,11,70],"24":[19,21,19,37],"25":[1,20,1,33],"26":[11,74,11,107],"32":[26,9,26,36],"33":[1,20,1,33],"34":[19,21,19,37],"40":[28,9,28,36],"41":[1,20,1,33],"42":[19,39,19,42],"48":[30,9,30,29],"49":[2,26,2,38],"56":[37,9,37,28],"57":[2,26,2,45],"58":[19,39,19,42],"64":[39,9,39,28],"65":[2,26,2,45],"66":[26,9,26,24],"72":[43,25,43,37],"73":[2,26,2,45],"74":[26,9,26,36],"80":[47,25,47,37],"81":[3,1,3,13],"82":[28,9,28,24],"88":[42,9,42,28],"89":[3,1,3,14],"90":[28,9,28,36],"96":[65,21,65,39],"97":[4,9,4,16],"98":[30,9,30,29],"104":[75,9,75,19],"105":[4,17,4,23],"106":[33,16,33,36],"112":[99,28,99,46],"113":[4,9,4,24],"114":[33,16,33,47],"120":[96,28,96,44],"121":[4,9,4,31],"122":[37,9,37,28],"128":[92,21,92,24],"129":[4,42,4,49],"130":[39,9,39,28],"136":[109,21,109,65],"137":[4,50,4,58],"138":[42,9,42,28],"144":[113,25,113,44],"145":[4,42,4,59],"146":[43,25,43,37],"152":[112,28,112,39],"153":[4,70,4,77],"154":[43,39,43,42],"160":[109,21,109,65],"161":[4,78,4,84],"168":[126,25,126,67],"169":[4,70,4,85],"170":[43,39,43,42],"176":[130,29,130,48],"177":[4,70,4,92],"178":[44,22,44,33],"184":[129,32,129,42],"185":[4,107,4,114],"186":[47,25,47,37],"192":[126,25,126,67],"193":[4,115,4,125],"194":[47,39,47,42],"200":[124,21,124,49],"201":[4,107,4,126],"208":[174,25,174,52],"209":[4,9,4,31],"210":[47,39,47,42],"216":[174,25,174,52],"217":[4,9,4,31],"218":[48,22,48,33],"224":[80,12,80,34],"225":[4,42,4,59],"226":[65,25,65,39],"232":[195,13,195,40],"233":[4,42,4,59],"234":[65,21,65,39],"240":[194,21,194,41],"241":[4,70,4,92],"242":[65,41,65,44],"248":[200,9,200,15],"249":[4,70,4,92],"256":[205,9,205,19],"257":[4,107,4,126],"258":[65,41,65,44],"264":[210,17,210,27],"265":[4,107,4,126],"266":[75,9,75,19],"272":[207,21,207,46],"273":[6,5,6,9],"274":[80,12,80,34],"281":[6,15,6,17],"282":[93,48,93,76],"289":[6,5,6,17],"290":[104,48,104,76],"297":[6,5,6,18],"298":[109,21,109,32],"305":[7,5,7,9],"306":[109,36,109,65],"313":[7,21,7,29],"314":[112,28,112,39],"321":[7,5,7,29],"322":[113,25,113,44],"329":[7,5,7,30],"330":[120,25,120,34],"337":[8,5,8,9],"338":[124,21,124,49],"345":[8,21,8,29],"346":[125,29,125,38],"353":[8,5,8,29],"354":[126,25,126,35],"361":[8,5,8,30],"362":[126,39,126,67],"369":[5,19,9,2],"370":[129,32,129,42],"377":[5,19,9,2],"378":[130,29,130,48],"385":[5,19,9,2],"386":[174,30,174,52],"393":[5,19,9,2],"394":[194,21,194,41],"401":[5,19,9,2],"402":[194,43,194,46],"409":[5,19,9,2],"417":[5,19,9,2],"418":[194,43,194,46],"425":[5,19,9,2],"426":[200,9,200,15],"433":[10,1,10,12],"434":[205,9,205,19],"441":[10,1,10,22],"442":[207,21,207,46],"449":[11,12,11,19],"450":[207,48,207,51],"457":[11,12,11,22],"465":[11,26,11,30],"466":[207,48,207,51],"473":[11,26,11,33],"474":[209,21,209,30],"481":[11,37,11,44],"482":[210,17,210,27],"489":[11,37,11,53],"497":[11,57,11,61],"505":[11,57,11,70],"513":[11,74,11,81],"521":[11,74,11,90],"529":[11,94,11,98],"537":[11,94,11,107],"545":[11,12,11,107],"553":[11,5,11,108],"561":[10,31,12,2],"569":[10,31,12,2],"577":[10,31,12,2],"585":[10,31,12,2],"593":[10,1,12,2],"601":[10,1,12,3],"609":[14,5,14,9],"617":[14,22,14,24],"625":[14,5,14,24],"633":[14,5,14,25],"641":[13,17,15,2],"649":[13,17,15,2],"657":[13,17,15,2],"665":[13,17,15,2],"673":[13,17,15,2],"681":[17,16,17,18],"689":[17,16,17,18],"697":[17,16,17,18],"705":[18,17,18,24],"713":[18,31,18,34],"721":[18,17,18,35],"723":[18,17,18,30],"729":[18,17,18,35],"737":[18,17,18,35],"745":[19,18,19,19],"753":[19,18,19,19],"761":[19,18,19,19],"769":[19,21,19,22],"777":[19,25,19,30],"785":[19,25,19,37],"801":[19,39,19,40],"809":[19,39,19,42],"825":[20,26,20,31],"833":[20,32,20,33],"841":[20,26,20,34],"849":[20,41,20,44],"857":[20,26,20,45],"859":[20,26,20,40],"865":[20,26,20,45],"873":[20,26,20,45],"881":[21,9,21,13],"889":[21,14,21,24],"897":[21,25,21,26],"905":[21,14,21,27],"913":[21,31,21,41],"921":[21,42,21,43],"929":[21,31,21,44],"937":[21,9,21,44],"945":[21,9,21,45],"953":[23,12,23,16],"961":[23,12,23,16],"969":[23,5,23,17],"977":[16,20,24,2],"985":[16,20,24,2],"993":[16,20,24,2],"1001":[16,20,24,2],"1009":[16,20,24,2],"1017":[16,20,24,2],"1025":[16,20,24,2],"1033":[16,20,24,2],"1041":[16,20,24,2],"1049":[16,20,24,2],"1057":[26,16,26,24],"1065":[26,28,26,36],"1073":[27,19,27,29],"1081":[27,30,27,57],"1089":[27,15,27,58],"1097":[27,15,27,58],"1105":[27,9,27,59],"1113":[28,16,28,24],"1121":[28,28,28,36],"1129":[29,19,29,29],"1137":[29,30,29,57],"1145":[29,15,29,58],"1153":[29,15,29,58],"1161":[29,9,29,59],"1169":[30,9,30,17],"1177":[30,9,30,24],"1185":[30,28,30,29],"1193":[31,19,31,29],"1201":[31,30,31,56],"1209":[31,15,31,57],"1217":[31,15,31,57],"1225":[31,9,31,58],"1233":[32,15,32,21],"1241":[32,33,32,38],"1249":[32,15,32,39],"1251":[32,15,32,32],"1257":[32,15,32,39],"1265":[32,15,32,39],"1273":[33,5,33,8],"1281":[33,16,33,24],"1289":[33,27,33,36],"1297":[33,39,33,47],"1305":[33,5,33,48],"1307":[33,5,33,15],"1313":[33,5,33,49],"1321":[34,12,34,15],"1329":[34,23,34,28],"1337":[34,12,34,29],"1339":[34,12,34,22],"1345":[34,12,34,29],"1353":[34,5,34,30],"1361":[25,22,35,2],"1369":[25,22,35,2],"1377":[25,22,35,2],"1385":[25,22,35,2],"1393":[25,22,35,2],"1401":[25,22,35,2],"1409":[25,22,35,2],"1417":[25,22,35,2],"1425":[37,10,37,16],"1433":[37,26,37,27],"1441":[37,10,37,28],"1443":[37,10,37,25],"1449":[38,17,38,23],"1457":[38,24,38,25],"1465":[38,13,38,26],"1473":[38,13,38,26],"1481":[38,9,38,27],"1489":[39,10,39,16],"1497":[39,26,39,27],"1505":[39,10,39,28],"1507":[39,10,39,25],"1513":[40,17,40,23],"1521":[40,24,40,25],"1529":[40,13,40,26],"1537":[40,13,40,26],"1545":[40,9,40,27],"1553":[41,15,41,17],"1561":[41,15,41,17],"1569":[41,15,41,17],"1577":[42,9,42,10],"1585":[42,9,42,17],"1593":[42,20,42,21],"1601":[42,20,42,28],"1609":[43,22,43,23],"1617":[43,22,43,23],"1625":[43,22,43,23],"1633":[43,25,43,26],"1641":[43,29,43,30],"1649":[43,29,43,37],"1665":[43,39,43,40],"1673":[43,39,43,42],"1689":[44,13,44,16],"1697":[44,22,44,23],"1705":[44,24,44,25],"1713":[44,22,44,26],"1721":[44,29,44,30],"1729":[44,31,44,32],"1737":[44,29,44,33],"1745":[44,13,44,34],"1747":[44,13,44,21],"1753":[44,13,44,35],"1761":[47,22,47,23],"1769":[47,22,47,23],"1777":[47,22,47,23],"1785":[47,25,47,26],"1793":[47,29,47,30],"1801":[47,29,47,37],"1817":[47,39,47,40],"1825":[47,39,47,42],"1841":[48,13,48,16],"1849":[48,22,48,23],"1857":[48,24,48,25],"1865":[48,22,48,26],"1873":[48,29,48,30],"1881":[48,31,48,32],"1889":[48,29,48,33],"1897":[48,13,48,34],"1899":[48,13,48,21],"1905":[48,13,48,35],"1913":[51,16,51,22],"1921":[51,23,51,26],"1929":[51,12,51,27],"1937":[51,12,51,27],"1945":[51,5,51,28],"1953":[36,11,52,2],"1961":[36,11,52,2],"1969":[36,11,52,2],"1977":[36,11,52,2],"1985":[36,11,52,2],"1993":[36,11,52,2],"2001":[36,11,52,2],"2009":[36,11,52,2],"2017":[36,11,52,2],"2025":[55,20,55,26],"2033":[55,38,55,44],"2041":[55,46,55,50],"2049":[55,20,55,51],"2051":[55,20,55,37],"2057":[55,20,55,51],"2065":[55,20,55,51],"2073":[56,9,56,13],"2081":[56,21,56,24],"2089":[56,9,56,25],"2091":[56,9,56,20],"2097":[56,9,56,26],"2105":[57,20,57,26],"2113":[57,27,57,31],"2121":[57,39,57,47],"2129":[57,27,57,48],"2131":[57,27,57,38],"2137":[57,50,57,58],"2145":[57,16,57,59],"2153":[57,16,57,59],"2161":[57,9,57,60],"2169":[54,18,58,6],"2177":[54,18,58,6],"2185":[54,18,58,6],"2193":[54,18,58,6],"2201":[54,18,58,6],"2209":[54,18,58,6],"2217":[54,18,58,6],"2225":[59,12,59,18],"2233":[60,9,60,13],"2241":[61,13,61,19],"2249":[61,20,61,32],"2257":[61,9,61,33],"2265":[59,26,62,6],"2273":[59,12,62,7],"2275":[59,12,59,25],"2281":[59,12,62,7],"2289":[59,5,62,8],"2297":[63,14,63,20],"2305":[63,21,63,25],"2313":[63,14,63,26],"2321":[63,14,63,26],"2329":[63,14,63,26],"2337":[64,14,64,16],"2345":[64,14,64,16],"2353":[64,14,64,16],"2361":[65,18,65,19],"2369":[65,18,65,19],"2377":[65,18,65,19],"2385":[65,21,65,22],"2393":[65,25,65,35],"2401":[65,38,65,39],"2417":[65,41,65,42],"2425":[65,41,65,44],"2441":[66,14,66,20],"2449":[66,21,66,23],"2457":[66,14,66,24],"2465":[66,14,66,24],"2473":[66,9,66,25],"2481":[67,14,67,17],"2489":[67,18,67,20],"2497":[67,22,67,24],"2505":[67,14,67,25],"2513":[67,14,67,25],"2521":[67,9,67,26],"2529":[69,12,69,14],"2537":[69,12,69,14],"2545":[69,5,69,15],"2553":[53,10,70,2],"2561":[53,10,70,2],"2569":[53,10,70,2],"2577":[53,10,70,2],"2585":[53,10,70,2],"2593":[53,10,70,2],"2601":[53,10,70,2],"2609":[53,10,70,2],"2617":[53,10,70,2],"2625":[53,10,70,2],"2633":[53,10,70,2],"2641":[53,10,70,2],"2649":[71,1,71,10],"2657":[71,1,71,20],"2665":[72,16,72,20],"2673":[72,16,72,20],"2681":[72,16,72,20],"2689":[73,23,73,27],"2697":[73,23,73,36],"2699":[73,23,73,34],"2705":[73,23,73,36],"2713":[73,23,73,36],"2721":[74,17,74,28],"2729":[74,17,74,35],"2737":[74,17,74,35],"2745":[74,17,74,35],"2753":[75,9,75,14],"2761":[75,18,75,19],"2769":[76,16,76,24],"2777":[76,25,76,29],"2785":[76,31,76,35],"2793":[76,16,76,36],"2801":[76,16,76,36],"2809":[76,9,76,37],"2817":[77,36,77,37],"2825":[77,36,77,37],"2833":[77,36,77,37],"2841":[78,28,78,33],"2849":[78,28,78,33],"2857":[78,28,78,33],"2865":[79,23,79,27],"2873":[79,23,79,27],"2881":[79,23,79,27],"2889":[80,12,80,23],"2897":[80,12,80,30],"2905":[80,33,80,34],"2913":[82,24,82,32],"2921":[82,41,82,44],"2929":[82,46,82,51],"2937":[82,24,82,52],"2939":[82,24,82,40],"2945":[82,61,82,64],"2953":[82,66,82,71],"2961":[82,24,82,72],"2963":[82,24,82,60],"2969":[82,24,82,72],"2977":[82,13,82,73],"2985":[83,25,83,31],"2993":[83,44,83,46],"3001":[83,25,83,47],"3003":[83,25,83,43],"3009":[83,57,83,65],"3017":[83,25,83,66],"3019":[83,25,83,56],"3025":[83,25,83,66],"3033":[83,25,83,66],"3041":[84,29,84,30],"3049":[84,31,84,42],"3057":[84,44,84,52],"3065":[84,54,84,59],"3073":[84,29,84,60],"3081":[84,29,84,60],"3089":[84,29,84,60],"3097":[86,28,86,29],"3105":[87,28,87,41],"3113":[88,30,88,36],"3121":[88,37,88,38],"3129":[88,39,88,46],"3137":[88,48,88,57],"3145":[88,37,88,58],"3153":[88,26,88,59],"3161":[89,32,89,33],"3169":[85,23,90,14],"3177":[85,23,90,14],"3185":[85,23,90,14],"3193":[92,21,92,24],"3201":[93,48,93,72],"3209":[93,75,93,76],"3217":[93,48,93,76],"3225":[93,21,93,77],"3233":[94,35,94,38],"3241":[94,35,94,38],"3249":[94,21,94,39],"3257":[95,28,95,33],"3265":[95,28,95,33],"3273":[95,21,95,34],"3281":[96,28,96,29],"3289":[96,28,96,36],"3297":[96,37,96,43],"3305":[96,28,96,44],"3313":[97,35,97,36],"3321":[97,35,97,43],"3329":[97,35,97,43],"3337":[97,21,97,44],"3345":[98,28,98,33],"3353":[98,28,98,33],"3361":[98,21,98,34],"3369":[99,28,99,29],"3377":[99,28,99,36],"3385":[99,37,99,45],"3393":[99,28,99,46],"3401":[100,35,100,36],"3409":[100,35,100,43],"3417":[100,35,100,43],"3425":[100,21,100,44],"3433":[101,28,101,33],"3441":[101,28,101,33],"3449":[101,21,101,34],"3457":[103,40,103,44],"3465":[103,40,103,44],"3473":[103,21,103,45],"3481":[104,48,104,72],"3489":[104,75,104,76],"3497":[104,48,104,76],"3505":[104,21,104,77],"3513":[106,24,106,28],"3521":[106,24,106,28],"3529":[106,17,106,29],"3537":[91,31,107,14],"3545":[91,31,107,14],"3553":[91,31,107,14],"3561":[91,31,107,14],"3569":[91,31,107,14],"3577":[91,31,107,14],"3585":[91,31,107,14],"3593":[109,21,109,27],"3601":[109,31,109,32],"3609":[109,36,109,61],"3617":[109,64,109,65],"3625":[110,21,110,35],"3633":[110,36,110,40],"3641":[110,36,110,50],"3649":[110,56,110,67],"3657":[110,68,110,70],"3665":[110,72,110,80],"3673":[110,82,110,90],"3681":[110,52,110,91],"3689":[110,21,110,92],"3697":[110,21,110,93],"3705":[111,28,111,36],"3713":[111,37,111,41],"3721":[111,43,111,47],"3729":[111,28,111,48],"3737":[111,28,111,48],"3745":[111,21,111,49],"3753":[112,28,112,34],"3761":[112,38,112,39],"3769":[113,25,113,36],"3777":[113,40,113,44],"3785":[114,43,114,53],"3793":[114,54,114,55],"3801":[114,56,114,92],"3809":[114,54,114,93],"3817":[114,39,114,94],"3825":[114,39,114,94],"3833":[114,25,114,95],"3841":[115,28,115,36],"3849":[115,37,115,48],"3857":[115,50,115,55],"3865":[115,28,115,56],"3873":[115,28,115,56],"3881":[115,21,115,57],"3889":[108,26,117,14],"3897":[108,26,117,14],"3905":[108,26,117,14],"3913":[108,26,117,14],"3921":[108,26,117,14],"3929":[108,26,117,14],"3937":[108,26,117,14],"3945":[119,17,119,28],"3953":[119,29,119,33],"3961":[119,35,119,37],"3969":[119,17,119,38],"3977":[119,17,119,39],"3985":[120,25,120,30],"3993":[120,33,120,34],"4001":[120,25,120,34],"4009":[120,17,120,35],"4017":[121,17,121,23],"4025":[121,24,121,29],"4033":[121,31,121,55],"4041":[121,17,121,56],"4049":[121,17,121,57],"4057":[118,29,122,14],"4065":[118,29,122,14],"4073":[118,29,122,14],"4081":[118,29,122,14],"4089":[118,29,122,14],"4097":[118,29,122,14],"4105":[118,29,122,14],"4113":[123,13,123,19],"4121":[123,28,123,29],"4129":[123,30,123,39],"4137":[123,41,123,43],"4145":[123,28,123,44],"4153":[123,46,123,49],"4161":[123,65,123,75],"4169":[123,51,123,77],"4177":[124,21,124,32],"4185":[124,33,124,36],"4193":[124,38,124,39],"4201":[124,21,124,40],"4209":[124,44,124,49],"4217":[125,29,125,34],"4225":[125,37,125,38],"4233":[125,29,125,38],"4241":[125,21,125,39],"4249":[126,25,126,30],"4257":[126,34,126,35],"4265":[126,39,126,63],"4273":[126,66,126,67],"4281":[127,25,127,39],"4289":[127,40,127,44],"4297":[127,40,127,54],"4305":[127,60,127,71],"4313":[127,72,127,74],"4321":[127,76,127,84],"4329":[127,86,127,94],"4337":[127,56,127,95],"4345":[127,25,127,96],"4353":[127,25,127,97],"4361":[128,32,128,40],"4369":[128,41,128,45],"4377":[128,47,128,51],"4385":[128,32,128,52],"4393":[128,32,128,52],"4401":[128,25,128,53],"4409":[129,32,129,37],"4417":[129,41,129,42],"4425":[130,29,130,40],"4433":[130,44,130,48],"4441":[131,47,131,57],"4449":[131,58,131,59],"4457":[131,60,131,96],"4465":[131,58,131,97],"4473":[131,43,131,98],"4481":[131,43,131,98],"4489":[131,29,131,99],"4497":[132,32,132,40],"4505":[132,41,132,52],"4513":[132,54,132,59],"4521":[132,32,132,60],"4529":[132,32,132,60],"4537":[132,25,132,61],"4545":[134,21,134,28],"4553":[134,21,134,28],"4561":[136,28,136,40],"4569":[136,41,136,42],"4577":[136,41,136,49],"4585":[136,41,136,57],"4593":[136,41,136,65],"4595":[136,41,136,63],"4601":[136,28,136,66],"4609":[136,28,136,66],"4617":[136,28,136,66],"4625":[137,34,137,42],"4633":[137,43,137,47],"4641":[137,43,137,49],"4649":[137,51,137,53],"4657":[137,34,137,54],"4665":[137,34,137,54],"4673":[137,34,137,54],"4681":[138,28,138,32],"4689":[138,28,138,34],"4697":[138,28,138,34],"4705":[138,28,138,34],"4713":[139,30,139,34],"4721":[139,30,139,36],"4729":[139,30,139,36],"4737":[139,30,139,36],"4745":[140,36,140,37],"4753":[140,38,140,51],"4761":[140,53,140,59],"4769":[140,36,140,60],"4777":[140,36,140,60],"4785":[140,36,140,60],"4793":[141,35,141,49],"4801":[141,50,141,58],"4809":[141,60,141,68],"4817":[141,35,141,69],"4825":[141,35,141,69],"4833":[141,35,141,69],"4841":[142,38,142,40],"4849":[142,41,142,52],"4857":[142,58,142,64],"4865":[142,65,142,69],"4873":[142,71,142,79],"4881":[142,54,142,80],"4889":[142,82,142,92],"4897":[142,38,142,93],"4905":[142,38,142,93],"4913":[142,38,142,93],"4921":[143,28,143,34],"4929":[143,46,143,52],"4937":[143,54,143,68],"4945":[143,28,143,69],"4947":[143,28,143,45],"4953":[143,28,143,69],"4961":[143,28,143,69],"4969":[144,17,144,21],"4977":[144,33,144,39],"4985":[144,40,144,52],"4993":[144,29,144,53],"5001":[144,17,144,54],"5003":[144,17,144,28],"5009":[144,17,144,55],"5017":[145,37,145,43],"5025":[145,44,145,48],"5033":[145,56,145,64],"5041":[145,44,145,65],"5043":[145,44,145,55],"5049":[145,67,145,75],"5057":[145,33,145,76],"5065":[145,33,145,76],"5073":[145,33,145,76],"5081":[146,28,146,34],"5089":[146,46,146,52],"5097":[146,28,146,53],"5099":[146,28,146,45],"5105":[146,28,146,53],"5113":[146,28,146,53],"5121":[147,17,147,21],"5129":[147,29,147,38],"5137":[147,17,147,39],"5139":[147,17,147,28],"5145":[147,17,147,40],"5153":[148,37,148,43],"5161":[148,44,148,48],"5169":[148,56,148,64],"5177":[148,44,148,65],"5179":[148,44,148,55],"5185":[148,67,148,75],"5193":[148,33,148,76],"5201":[148,33,148,76],"5209":[148,33,148,76],"5217":[150,21,150,30],"5225":[151,21,151,22],"5233":[151,21,151,29],"5241":[151,21,151,37],"5249":[151,21,151,45],"5251":[151,21,151,43],"5257":[151,55,151,63],"5265":[151,21,151,64],"5267":[151,21,151,54],"5273":[152,21,152,33],"5281":[149,31,153,18],"5289":[153,24,153,27],"5297":[149,31,153,28],"5299":[149,31,153,23],"5305":[149,31,153,28],"5313":[149,31,153,28],"5321":[154,28,154,34],"5329":[154,46,154,52],"5337":[154,54,154,63],"5345":[154,28,154,64],"5347":[154,28,154,45],"5353":[154,28,154,64],"5361":[154,28,154,64],"5369":[155,17,155,21],"5377":[155,33,155,39],"5385":[155,40,155,47],"5393":[155,29,155,48],"5401":[155,17,155,49],"5403":[155,17,155,28],"5409":[155,17,155,50],"5417":[156,37,156,43],"5425":[156,44,156,48],"5433":[156,56,156,64],"5441":[156,44,156,65],"5443":[156,44,156,55],"5449":[156,67,156,75],"5457":[156,33,156,76],"5465":[156,33,156,76],"5473":[156,33,156,76],"5481":[157,35,157,36],"5489":[157,37,157,43],"5497":[157,49,157,55],"5505":[157,56,157,59],"5513":[157,60,157,69],"5521":[157,71,157,80],"5529":[157,56,157,81],"5537":[157,45,157,82],"5545":[157,92,157,100],"5553":[157,45,157,101],"5555":[157,45,157,91],"5561":[157,35,157,102],"5569":[157,35,157,102],"5577":[157,35,157,102],"5585":[159,21,159,33],"5593":[160,21,160,32],"5601":[158,35,161,18],"5609":[161,24,161,27],"5617":[158,35,161,28],"5619":[158,35,161,23],"5625":[158,35,161,28],"5633":[158,35,161,28],"5641":[162,28,162,34],"5649":[162,46,162,52],"5657":[162,54,162,68],"5665":[162,28,162,69],"5667":[162,28,162,45],"5673":[162,28,162,69],"5681":[162,28,162,69],"5689":[163,17,163,21],"5697":[163,33,163,39],"5705":[163,40,163,52],"5713":[163,29,163,53],"5721":[163,17,163,54],"5723":[163,17,163,28],"5729":[163,17,163,55],"5737":[164,37,164,43],"5745":[164,44,164,48],"5753":[164,56,164,64],"5761":[164,44,164,65],"5763":[164,44,164,55],"5769":[164,67,164,75],"5777":[164,33,164,76],"5785":[164,33,164,76],"5793":[164,33,164,76],"5801":[165,28,165,34],"5809":[165,46,165,52],"5817":[165,54,165,63],"5825":[165,28,165,64],"5827":[165,28,165,45],"5833":[165,28,165,64],"5841":[165,28,165,64],"5849":[166,17,166,21],"5857":[166,33,166,39],"5865":[166,40,166,47],"5873":[166,29,166,48],"5881":[166,17,166,49],"5883":[166,17,166,28],"5889":[166,17,166,50],"5897":[167,37,167,43],"5905":[167,44,167,48],"5913":[167,56,167,64],"5921":[167,44,167,65],"5923":[167,44,167,55],"5929":[167,67,167,75],"5937":[167,33,167,76],"5945":[167,33,167,76],"5953":[167,33,167,76],"5961":[169,35,169,36],"5969":[170,37,170,38],"5977":[170,37,170,45],"5985":[170,37,170,60],"5993":[171,34,171,40],"6001":[171,45,171,51],"6009":[171,52,171,63],"6017":[171,41,171,64],"6025":[171,30,171,65],"6033":[168,27,172,18],"6041":[168,27,172,18],"6049":[168,27,172,18],"6057":[173,17,173,23],"6065":[173,32,173,33],"6073":[173,34,173,43],"6081":[173,45,173,47],"6089":[173,32,173,48],"6097":[173,50,173,53],"6105":[173,69,173,79],"6113":[173,55,173,81],"6121":[174,25,174,26],"6129":[174,30,174,31],"6137":[174,30,174,38],"6145":[174,30,174,43],"6153":[174,47,174,52],"6161":[176,43,176,44],"6169":[177,45,177,46],"6177":[177,45,177,53],"6185":[177,45,177,68],"6193":[178,42,178,48],"6201":[178,49,178,50],"6209":[178,38,178,51],"6217":[175,35,179,26],"6225":[175,35,179,26],"6233":[175,35,179,26],"6241":[180,25,180,31],"6249":[180,40,180,41],"6257":[180,42,180,51],"6265":[180,53,180,55],"6273":[180,40,180,56],"6281":[180,58,180,61],"6289":[180,77,180,87],"6297":[180,63,180,89],"6305":[181,29,181,38],"6313":[181,39,181,42],"6321":[181,44,181,45],"6329":[181,29,181,46],"6337":[181,29,181,47],"6345":[180,91,182,26],"6353":[180,91,182,26],"6361":[180,91,182,26],"6369":[180,91,182,26],"6377":[180,91,182,26],"6385":[180,25,182,27],"6387":[180,25,180,39],"6393":[180,25,182,28],"6401":[184,25,184,34],"6409":[184,35,184,38],"6417":[184,40,184,41],"6425":[184,25,184,42],"6433":[184,25,184,43],"6441":[173,83,186,18],"6449":[173,83,186,18],"6457":[173,83,186,18],"6465":[173,83,186,18],"6473":[173,83,186,18],"6481":[173,83,186,18],"6489":[173,17,186,19],"6491":[173,17,173,31],"6497":[173,17,186,20],"6505":[123,79,187,14],"6513":[123,79,187,14],"6521":[123,79,187,14],"6529":[123,79,187,14],"6537":[123,79,187,14],"6545":[123,79,187,14],"6553":[123,79,187,14],"6561":[123,79,187,14],"6569":[123,79,187,14],"6577":[123,79,187,14],"6585":[123,79,187,14],"6593":[123,79,187,14],"6601":[123,79,187,14],"6609":[123,79,187,14],"6617":[123,79,187,14],"6625":[123,79,187,14],"6633":[123,79,187,14],"6641":[123,79,187,14],"6649":[123,79,187,14],"6657":[123,79,187,14],"6665":[123,79,187,14],"6673":[123,79,187,14],"6681":[123,79,187,14],"6689":[123,13,187,15],"6691":[123,13,123,27],"6697":[123,13,187,16],"6705":[81,28,188,10],"6713":[81,28,188,10],"6721":[81,28,188,10],"6729":[81,28,188,10],"6737":[81,28,188,10],"6745":[81,28,188,10],"6753":[81,28,188,10],"6761":[81,28,188,10],"6769":[81,28,188,10],"6777":[81,28,188,10],"6785":[81,28,188,10],"6793":[81,28,188,10],"6801":[189,9,189,21],"6809":[189,22,189,33],"6817":[189,22,189,41],"6819":[189,22,189,39],"6825":[189,9,189,42],"6833":[189,9,189,43],"6841":[71,28,191,2],"6849":[71,28,191,2],"6857":[71,28,191,2],"6865":[71,28,191,2],"6873":[71,28,191,2],"6881":[71,28,191,2],"6889":[71,28,191,2],"6897":[71,28,191,2],"6905":[71,28,191,2],"6913":[71,28,191,2],"6921":[71,28,191,2],"6929":[71,28,191,2],"6937":[71,28,191,2],"6945":[71,28,191,2],"6953":[71,28,191,2],"6961":[71,28,191,2],"6969":[71,1,191,2],"6977":[71,1,191,3],"6985":[193,17,193,22],"6993":[193,17,193,22],"7001":[193,17,193,22],"7009":[194,18,194,19],"7017":[194,18,194,19],"7025":[194,18,194,19],"7033":[194,21,194,22],"7041":[194,25,194,34],"7049":[194,25,194,41],"7065":[194,43,194,44],"7073":[194,43,194,46],"7089":[195,13,195,22],"7097":[195,23,195,24],"7105":[195,13,195,25],"7113":[195,32,195,39],"7121":[195,13,195,40],"7123":[195,13,195,31],"7129":[196,21,196,25],"7137":[196,21,196,25],"7145":[196,13,196,26],"7153":[200,10,200,15],"7161":[201,9,201,18],"7169":[201,24,201,31],"7177":[201,9,201,32],"7179":[201,9,201,23],"7185":[201,9,201,33],"7193":[192,22,202,2],"7201":[192,22,202,2],"7209":[192,22,202,2],"7217":[192,22,202,2],"7225":[192,22,202,2],"7233":[192,22,202,2],"7241":[192,22,202,2],"7249":[192,22,202,2],"7257":[192,22,202,2],"7265":[203,1,203,10],"7273":[203,1,203,20],"7281":[204,17,204,21],"7289":[204,17,204,31],"7297":[204,17,204,38],"7305":[204,17,204,38],"7313":[204,17,204,38],"7321":[205,9,205,14],"7329":[205,18,205,19],"7337":[206,16,206,24],"7345":[206,25,206,29],"7353":[206,31,206,35],"7361":[206,16,206,36],"7369":[206,16,206,36],"7377":[206,9,206,37],"7385":[207,18,207,19],"7393":[207,18,207,19],"7401":[207,18,207,19],"7409":[207,21,207,22],"7417":[207,25,207,29],"7425":[207,25,207,39],"7433":[207,25,207,46],"7449":[207,48,207,49],"7457":[207,48,207,51],"7473":[208,9,208,13],"7481":[208,19,208,25],"7489":[208,27,208,31],"7497":[208,33,208,37],"7505":[208,33,208,47],"7513":[208,48,208,49],"7521":[208,33,208,50],"7529":[208,33,208,53],"7537":[208,55,208,59],"7545":[208,55,208,69],"7553":[208,70,208,71],"7561":[208,55,208,72],"7569":[208,55,208,81],"7577":[208,83,208,87],"7585":[208,83,208,97],"7593":[208,98,208,99],"7601":[208,83,208,100],"7609":[208,83,208,109],"7617":[209,21,209,26],"7625":[209,29,209,30],"7633":[209,21,209,30],"7641":[209,13,209,31],"7649":[210,17,210,22],"7657":[210,26,210,27],"7665":[211,17,211,25],"7673":[211,26,211,30],"7681":[211,32,211,36],"7689":[211,17,211,37],"7697":[211,17,211,38],"7705":[208,111,213,10],"7713":[208,111,213,10],"7721":[208,111,213,10],"7729":[208,111,213,10],"7737":[208,111,213,10],"7745":[208,9,213,11],"7747":[208,9,208,18],"7753":[208,9,213,12],"7761":[203,38,215,2],"7769":[203,38,215,2],"7777":[203,38,215,2],"7785":[203,38,215,2],"7793":[203,38,215,2],"7801":[203,38,215,2],"7809":[203,38,215,2],"7817":[203,38,215,2],"7825":[203,1,215,2],"7833":[203,1,215,3],"7841":[216,1,216,7],"7849":[216,18,216,27],"7857":[216,1,216,27],"7865":[216,1,216,28],"7873":[1,1,216,28],"7881":[1,1,216,28],"7889":[1,1,216,28],"7897":[1,1,216,28],"7905":[1,1,216,28],"7913":[1,1,216,28],"7921":[1,1,216,28],"7929":[1,1,216,28],"7937":[1,1,216,28],"7945":[1,1,216,28],"7953":[1,1,216,28],"7961":[1,1,216,28],"7969":[1,1,216,28],"7977":[1,1,216,28],"7985":[5,19,9,2],"7993":[5,19,9,2],"8001":[10,31,12,2],"8009":[10,31,12,2],"8017":[13,17,15,2],"8025":[13,17,15,2],"8033":[19,5,22,6],"8041":[19,5,22,6],"8049":[16,20,24,2],"8057":[16,20,24,2],"8065":[26,5,27,59],"8073":[28,5,29,59],"8081":[30,5,31,58],"8089":[25,22,35,2],"8097":[25,22,35,2],"8105":[37,5,38,27],"8113":[39,5,40,27],"8121":[43,9,45,10],"8129":[43,9,45,10],"8137":[47,9,49,10],"8145":[47,9,49,10],"8153":[42,5,50,6],"8161":[36,11,52,2],"8169":[36,11,52,2],"8177":[54,18,58,6],"8185":[54,18,58,6],"8193":[65,5,68,6],"8201":[65,5,68,6],"8209":[53,10,70,2],"8217":[53,10,70,2],"8225":[75,5,76,37],"8233":[99,24,105,18],"8241":[96,24,105,18],"8249":[92,17,105,18],"8257":[91,31,107,14],"8265":[91,31,107,14],"8273":[113,21,114,95],"8281":[112,24,116,18],"8289":[109,17,116,18],"8297":[108,26,117,14],"8305":[108,26,117,14],"8313":[118,29,122,14],"8321":[118,29,122,14],"8329":[130,25,131,99],"8337":[129,28,133,22],"8345":[126,21,133,22],"8353":[124,17,135,18],"8361":[180,91,182,26],"8369":[180,91,182,26],"8377":[174,21,185,22],"8385":[173,83,186,18],"8393":[173,83,186,18],"8401":[123,79,187,14],"8409":[123,79,187,14],"8417":[81,28,188,10],"8425":[81,28,188,10],"8433":[80,5,190,6],"8441":[71,28,191,2],"8449":[71,28,191,2],"8457":[195,9,198,10],"8465":[194,5,199,6],"8473":[194,5,199,6],"8481":[200,5,201,33],"8489":[192,22,202,2],"8497":[192,22,202,2],"8505":[205,5,206,37],"8513":[210,13,212,14],"8521":[208,111,213,10],"8529":[208,111,213,10],"8537":[207,5,214,6],"8545":[207,5,214,6],"8553":[203,38,215,2],"8561":[203,38,215,2],"8569":[1,1,216,28],"8577":[1,1,216,28],"nBranches":68,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/auth/scram.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/auth/scram_jalangi_.js","code":"\"use strict\";\n\nvar f = require('util').format\n  , crypto = require('crypto')\n  , Binary = require('bson').Binary\n  , MongoError = require('../error');\n\nvar AuthSession = function(db, username, password) {\n  this.db = db;\n  this.username = username;\n  this.password = password;\n} \n\nAuthSession.prototype.equal = function(session) {\n  return session.db == this.db \n    && session.username == this.username\n    && session.password == this.password;\n}\n\n/**\n * Creates a new ScramSHA1 authentication mechanism\n * @class\n * @return {ScramSHA1} A cursor instance\n */\nvar ScramSHA1 = function() {\n  this.authStore = [];\n}\n\nvar parsePayload = function(payload) {\n  var dict = {};\n  var parts = payload.split(',');\n\n  for(var i = 0; i < parts.length; i++) {\n    var valueParts = parts[i].split('=');\n    dict[valueParts[0]] = valueParts[1];\n  }\n\n  return dict;\n}\n\nvar passwordDigest = function(username, password) {\n  if(typeof username != 'string') throw new MongoError(\"username must be a string\");\n  if(typeof password != 'string') throw new MongoError(\"password must be a string\");\n  if(password.length == 0) throw new MongoError(\"password cannot be empty\");\n  // Use node md5 generator\n  var md5 = crypto.createHash('md5');\n  // Generate keys used for authentication\n  md5.update(username + \":mongo:\" + password);\n  return md5.digest('hex');\n}\n\n// XOR two buffers\nvar xor = function(a, b) {\n  if (!Buffer.isBuffer(a)) a = new Buffer(a)\n  if (!Buffer.isBuffer(b)) b = new Buffer(b)\n  var res = []\n  if (a.length > b.length) {\n    for (var i = 0; i < b.length; i++) {\n      res.push(a[i] ^ b[i])\n    }\n  } else {\n    for (var i = 0; i < a.length; i++) {\n      res.push(a[i] ^ b[i])\n    }\n  }\n  return new Buffer(res);\n}\n\n// Create a final digest\nvar hi = function(data, salt, iterations) {\n  // Create digest\n  var digest = function(msg) {\n    var hmac = crypto.createHmac('sha1', data);\n    hmac.update(msg);\n    return new Buffer(hmac.digest('base64'), 'base64');\n  }\n\n  // Create variables\n  salt = Buffer.concat([salt, new Buffer('\\x00\\x00\\x00\\x01')])\n  var ui = digest(salt);\n  var u1 = ui;\n  \n  for(var i = 0; i < iterations - 1; i++) {\n    u1 = digest(u1);\n    ui = xor(ui, u1);\n  }\n\n  return ui;\n}\n\n/**\n * Authenticate\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {Pool} pool Connection pool for this topology\n * @param {string} db Name of the database\n * @param {string} username Username\n * @param {string} password Password\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nScramSHA1.prototype.auth = function(server, pool, db, username, password, callback) {\n  var self = this;\n  // Get all the connections\n  var connections = pool.getAll();\n  // Total connections\n  var count = connections.length;\n  if(count == 0) return callback(null, null);\n\n  // Valid connections\n  var numberOfValidConnections = 0;\n  var credentialsValid = false;\n  var errorObject = null;\n\n  // For each connection we need to authenticate\n  while(connections.length > 0) {    \n    // Execute MongoCR\n    var executeScram = function(connection) {\n      // Clean up the user\n      username = username.replace('=', \"=3D\").replace(',', '=2C');\n\n      // Create a random nonce\n      var nonce = crypto.randomBytes(24).toString('base64');\n      // var nonce = 'MsQUY9iw0T9fx2MUEz6LZPwGuhVvWAhc'\n      var firstBare = f(\"n=%s,r=%s\", username, nonce);\n\n      // Build command structure\n      var cmd = {\n          saslStart: 1\n        , mechanism: 'SCRAM-SHA-1'\n        , payload: new Binary(f(\"n,,%s\", firstBare))\n        , autoAuthorize: 1\n      }\n\n      // Handle the error\n      var handleError = function(err, r) {\n        if(err) {\n          numberOfValidConnections = numberOfValidConnections - 1;            \n          errorObject = err; return false;\n        } else if(r.result['$err']) {\n          errorObject = r.result; return false;\n        } else if(r.result['errmsg']) {\n          errorObject = r.result; return false;\n        } else {\n          credentialsValid = true;\n          numberOfValidConnections = numberOfValidConnections + 1;            \n        }\n\n        return true\n      }\n\n      // Finish up\n      var finish = function(_count, _numberOfValidConnections) {\n        if(_count == 0 && _numberOfValidConnections > 0) {\n          // Store the auth details\n          addAuthSession(self.authStore, new AuthSession(db, username, password));\n          // Return correct authentication\n          return callback(null, true);\n        } else if(_count == 0) {\n          if(errorObject == null) errorObject = new MongoError(f(\"failed to authenticate using scram\"));\n          return callback(errorObject, false);\n        }\n      }\n\n      var handleEnd = function(_err, _r) {\n        // Handle any error\n        handleError(_err, _r)\n        // Adjust the number of connections\n        count = count - 1;\n        // Execute the finish\n        finish(count, numberOfValidConnections);                \n      }\n\n      // Execute start sasl command\n      server.command(f(\"%s.$cmd\", db)\n        , cmd, { connection: connection }, function(err, r) {\n        \n        // Do we have an error, handle it\n        if(handleError(err, r) == false) {\n          count = count - 1;\n\n          if(count == 0 && numberOfValidConnections > 0) {\n            // Store the auth details\n            addAuthSession(self.authStore, new AuthSession(db, username, password));\n            // Return correct authentication\n            return callback(null, true);\n          } else if(count == 0) {\n            if(errorObject == null) errorObject = new MongoError(f(\"failed to authenticate using scram\"));\n            return callback(errorObject, false);\n          }\n\n          return;\n        }\n\n        // Get the dictionary\n        var dict = parsePayload(r.result.payload.value())\n\n        // Unpack dictionary\n        var iterations = parseInt(dict.i, 10);\n        var salt = dict.s;\n        var rnonce = dict.r;\n\n        // Set up start of proof\n        var withoutProof = f(\"c=biws,r=%s\", rnonce);\n        var passwordDig = passwordDigest(username, password);\n        var saltedPassword = hi(passwordDig\n            , new Buffer(salt, 'base64')\n            , iterations);\n        \n        // Create the client key\n        var hmac = crypto.createHmac('sha1', saltedPassword);\n        hmac.update(new Buffer(\"Client Key\"));\n        var clientKey = new Buffer(hmac.digest('base64'), 'base64');\n\n        // Create the stored key\n        var hash = crypto.createHash('sha1');\n        hash.update(clientKey);\n        var storedKey = new Buffer(hash.digest('base64'), 'base64');\n\n        // Create the authentication message\n        var authMsg = [firstBare, r.result.payload.value().toString('base64'), withoutProof].join(',');\n\n        // Create client signature\n        var hmac = crypto.createHmac('sha1', storedKey);\n        hmac.update(new Buffer(authMsg));          \n        var clientSig = new Buffer(hmac.digest('base64'), 'base64');\n\n        // Create client proof\n        var clientProof = f(\"p=%s\", new Buffer(xor(clientKey, clientSig)).toString('base64'));\n\n        // Create client final\n        var clientFinal = [withoutProof, clientProof].join(',');\n\n        // Generate server key\n        var hmac = crypto.createHmac('sha1', saltedPassword);\n        hmac.update(new Buffer('Server Key'))\n        var serverKey = new Buffer(hmac.digest('base64'), 'base64');\n\n        // Generate server signature\n        var hmac = crypto.createHmac('sha1', serverKey);\n        hmac.update(new Buffer(authMsg))\n        var serverSig = new Buffer(hmac.digest('base64'), 'base64');\n\n        //\n        // Create continue message\n        var cmd = {\n            saslContinue: 1\n          , conversationId: r.result.conversationId\n          , payload: new Binary(new Buffer(clientFinal))\n        }\n\n        //\n        // Execute sasl continue\n        server.command(f(\"%s.$cmd\", db)\n          , cmd, { connection: connection }, function(err, r) {\n            if(r && r.result.done == false) {\n              var cmd = {\n                  saslContinue: 1\n                , conversationId: r.result.conversationId\n                , payload: new Buffer(0)\n              }\n\n              server.command(f(\"%s.$cmd\", db)\n                , cmd, { connection: connection }, function(err, r) {\n                  handleEnd(err, r);\n              });\n            } else {\n              handleEnd(err, r);\n            }\n        });\n      });\n    }\n\n    // Get the connection\n    executeScram(connections.shift());\n  }\n}\n\n// Add to store only if it does not exist\nvar addAuthSession = function(authStore, session) {\n  var found = false;\n\n  for(var i = 0; i < authStore.length; i++) {\n    if(authStore[i].equal(session)) {\n      found = true;\n      break;\n    }\n  }\n\n  if(!found) authStore.push(session);\n}\n\n/**\n * Re authenticate pool\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {Pool} pool Connection pool for this topology\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nScramSHA1.prototype.reauthenticate = function(server, pool, callback) {\n  var count = this.authStore.length;\n  if(count == 0) return callback(null, null);\n  // Iterate over all the auth details stored\n  for(var i = 0; i < this.authStore.length; i++) {\n    this.auth(server, pool, this.authStore[i].db, this.authStore[i].username, this.authStore[i].password, function(err, r) {\n      count = count - 1;\n      // Done re-authenticating\n      if(count == 0) {\n        callback(null, null);\n      }\n    });\n  }\n}\n\n\nmodule.exports = ScramSHA1;\n"};
jalangiLabel1918:
    while (true) {
        try {
            J$.Se(7873, '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/auth/scram_jalangi_.js', '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/auth/scram.js');
            J$.N(7881, '__secret__S$', __secret__S$, 0);
            J$.N(7889, '__secret__traits__', __secret__traits__, 0);
            J$.N(7897, 'f', f, 0);
            J$.N(7905, 'crypto', crypto, 0);
            J$.N(7913, 'Binary', Binary, 0);
            J$.N(7921, 'MongoError', MongoError, 0);
            J$.N(7929, 'AuthSession', AuthSession, 0);
            J$.N(7937, 'ScramSHA1', ScramSHA1, 0);
            J$.N(7945, 'parsePayload', parsePayload, 0);
            J$.N(7953, 'passwordDigest', passwordDigest, 0);
            J$.N(7961, 'xor', xor, 0);
            J$.N(7969, 'hi', hi, 0);
            J$.N(7977, 'addAuthSession', addAuthSession, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var f = J$.X1(217, J$.W(209, 'f', J$.G(121, J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'util', 21, false)), 'format', 0), f, 3)), crypto = J$.X1(233, J$.W(225, 'crypto', J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, 'crypto', 21, false)), crypto, 3)), Binary = J$.X1(249, J$.W(241, 'Binary', J$.G(177, J$.F(169, J$.R(153, 'require', require, 2), 0)(J$.T(161, 'bson', 21, false)), 'Binary', 0), Binary, 3)), MongoError = J$.X1(265, J$.W(257, 'MongoError', J$.F(201, J$.R(185, 'require', require, 2), 0)(J$.T(193, '../error', 21, false)), MongoError, 3));
            var AuthSession = J$.X1(425, J$.W(417, 'AuthSession', J$.T(409, function (db, username, password) {
                jalangiLabel1899:
                    while (true) {
                        try {
                            J$.Fe(369, arguments.callee, this, arguments);
                            arguments = J$.N(377, 'arguments', arguments, 4);
                            db = J$.N(385, 'db', db, 4);
                            username = J$.N(393, 'username', username, 4);
                            password = J$.N(401, 'password', password, 4);
                            J$.X1(297, J$.P(289, J$.R(273, 'this', this, 0), 'db', J$.R(281, 'db', db, 0), 0));
                            J$.X1(329, J$.P(321, J$.R(305, 'this', this, 0), 'username', J$.R(313, 'username', username, 0), 0));
                            J$.X1(361, J$.P(353, J$.R(337, 'this', this, 0), 'password', J$.R(345, 'password', password, 0), 0));
                        } catch (J$e) {
                            J$.Ex(7985, J$e);
                        } finally {
                            if (J$.Fr(7993))
                                continue jalangiLabel1899;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 369), AuthSession, 3));
            J$.X1(601, J$.P(593, J$.G(441, J$.R(433, 'AuthSession', AuthSession, 1), 'prototype', 0), 'equal', J$.T(585, function (session) {
                jalangiLabel1900:
                    while (true) {
                        try {
                            J$.Fe(561, arguments.callee, this, arguments);
                            arguments = J$.N(569, 'arguments', arguments, 4);
                            session = J$.N(577, 'session', session, 4);
                            return J$.X1(553, J$.Rt(545, J$.C(16, J$.C(8, J$.B(10, '==', J$.G(457, J$.R(449, 'session', session, 0), 'db', 0), J$.G(473, J$.R(465, 'this', this, 0), 'db', 0), 0)) ? J$.B(18, '==', J$.G(489, J$.R(481, 'session', session, 0), 'username', 0), J$.G(505, J$.R(497, 'this', this, 0), 'username', 0), 0) : J$._()) ? J$.B(26, '==', J$.G(521, J$.R(513, 'session', session, 0), 'password', 0), J$.G(537, J$.R(529, 'this', this, 0), 'password', 0), 0) : J$._()));
                        } catch (J$e) {
                            J$.Ex(8001, J$e);
                        } finally {
                            if (J$.Fr(8009))
                                continue jalangiLabel1900;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 561), 0));
            var ScramSHA1 = J$.X1(673, J$.W(665, 'ScramSHA1', J$.T(657, function () {
                jalangiLabel1901:
                    while (true) {
                        try {
                            J$.Fe(641, arguments.callee, this, arguments);
                            arguments = J$.N(649, 'arguments', arguments, 4);
                            J$.X1(633, J$.P(625, J$.R(609, 'this', this, 0), 'authStore', J$.T(617, [], 10, false), 0));
                        } catch (J$e) {
                            J$.Ex(8017, J$e);
                        } finally {
                            if (J$.Fr(8025))
                                continue jalangiLabel1901;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 641), ScramSHA1, 3));
            var parsePayload = J$.X1(1049, J$.W(1041, 'parsePayload', J$.T(1033, function (payload) {
                jalangiLabel1902:
                    while (true) {
                        try {
                            J$.Fe(977, arguments.callee, this, arguments);
                            arguments = J$.N(985, 'arguments', arguments, 4);
                            payload = J$.N(993, 'payload', payload, 4);
                            J$.N(1001, 'dict', dict, 0);
                            J$.N(1009, 'parts', parts, 0);
                            J$.N(1017, 'i', i, 0);
                            J$.N(1025, 'valueParts', valueParts, 0);
                            var dict = J$.X1(697, J$.W(689, 'dict', J$.T(681, {}, 11, false), dict, 1));
                            var parts = J$.X1(737, J$.W(729, 'parts', J$.M(721, J$.R(705, 'payload', payload, 0), 'split', 0)(J$.T(713, ',', 21, false)), parts, 1));
                            for (var i = J$.X1(761, J$.W(753, 'i', J$.T(745, 0, 22, false), i, 1)); J$.X1(8033, J$.C(24, J$.B(34, '<', J$.R(769, 'i', i, 0), J$.G(785, J$.R(777, 'parts', parts, 0), 'length', 0), 0))); J$.X1(8041, J$.B(58, '-', i = J$.W(809, 'i', J$.B(50, '+', J$.U(42, '+', J$.R(801, 'i', i, 0)), J$.T(793, 1, 22, false), 0), i, 0), J$.T(817, 1, 22, false), 0))) {
                                var valueParts = J$.X1(873, J$.W(865, 'valueParts', J$.M(857, J$.G(841, J$.R(825, 'parts', parts, 0), J$.R(833, 'i', i, 0), 4), 'split', 0)(J$.T(849, '=', 21, false)), valueParts, 1));
                                J$.X1(945, J$.P(937, J$.R(881, 'dict', dict, 0), J$.G(905, J$.R(889, 'valueParts', valueParts, 0), J$.T(897, 0, 22, false), 4), J$.G(929, J$.R(913, 'valueParts', valueParts, 0), J$.T(921, 1, 22, false), 4), 2));
                            }
                            return J$.X1(969, J$.Rt(961, J$.R(953, 'dict', dict, 0)));
                        } catch (J$e) {
                            J$.Ex(8049, J$e);
                        } finally {
                            if (J$.Fr(8057))
                                continue jalangiLabel1902;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 977), parsePayload, 3));
            var passwordDigest = J$.X1(1417, J$.W(1409, 'passwordDigest', J$.T(1401, function (username, password) {
                jalangiLabel1903:
                    while (true) {
                        try {
                            J$.Fe(1361, arguments.callee, this, arguments);
                            arguments = J$.N(1369, 'arguments', arguments, 4);
                            username = J$.N(1377, 'username', username, 4);
                            password = J$.N(1385, 'password', password, 4);
                            J$.N(1393, 'md5', md5, 0);
                            if (J$.X1(8065, J$.C(32, J$.B(74, '!=', J$.U(66, 'typeof', J$.R(1057, 'username', username, 0)), J$.T(1065, 'string', 21, false), 0))))
                                throw J$.X1(1105, J$.Th(1097, J$.F(1089, J$.R(1073, 'MongoError', MongoError, 1), 1)(J$.T(1081, 'username must be a string', 21, false))));
                            if (J$.X1(8073, J$.C(40, J$.B(90, '!=', J$.U(82, 'typeof', J$.R(1113, 'password', password, 0)), J$.T(1121, 'string', 21, false), 0))))
                                throw J$.X1(1161, J$.Th(1153, J$.F(1145, J$.R(1129, 'MongoError', MongoError, 1), 1)(J$.T(1137, 'password must be a string', 21, false))));
                            if (J$.X1(8081, J$.C(48, J$.B(98, '==', J$.G(1177, J$.R(1169, 'password', password, 0), 'length', 0), J$.T(1185, 0, 22, false), 0))))
                                throw J$.X1(1225, J$.Th(1217, J$.F(1209, J$.R(1193, 'MongoError', MongoError, 1), 1)(J$.T(1201, 'password cannot be empty', 21, false))));
                            var md5 = J$.X1(1265, J$.W(1257, 'md5', J$.M(1249, J$.R(1233, 'crypto', crypto, 1), 'createHash', 0)(J$.T(1241, 'md5', 21, false)), md5, 1));
                            J$.X1(1313, J$.M(1305, J$.R(1273, 'md5', md5, 0), 'update', 0)(J$.B(114, '+', J$.B(106, '+', J$.R(1281, 'username', username, 0), J$.T(1289, ':mongo:', 21, false), 0), J$.R(1297, 'password', password, 0), 0)));
                            return J$.X1(1353, J$.Rt(1345, J$.M(1337, J$.R(1321, 'md5', md5, 0), 'digest', 0)(J$.T(1329, 'hex', 21, false))));
                        } catch (J$e) {
                            J$.Ex(8089, J$e);
                        } finally {
                            if (J$.Fr(8097))
                                continue jalangiLabel1903;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1361), passwordDigest, 3));
            var xor = J$.X1(2017, J$.W(2009, 'xor', J$.T(2001, function (a, b) {
                jalangiLabel1904:
                    while (true) {
                        try {
                            J$.Fe(1953, arguments.callee, this, arguments);
                            arguments = J$.N(1961, 'arguments', arguments, 4);
                            a = J$.N(1969, 'a', a, 4);
                            b = J$.N(1977, 'b', b, 4);
                            J$.N(1985, 'res', res, 0);
                            J$.N(1993, 'i', i, 0);
                            if (J$.X1(8105, J$.C(56, J$.U(122, '!', J$.M(1441, J$.R(1425, 'Buffer', Buffer, 2), 'isBuffer', 0)(J$.R(1433, 'a', a, 0))))))
                                J$.X1(1481, a = J$.W(1473, 'a', J$.F(1465, J$.R(1449, 'Buffer', Buffer, 2), 1)(J$.R(1457, 'a', a, 0)), a, 0));
                            if (J$.X1(8113, J$.C(64, J$.U(130, '!', J$.M(1505, J$.R(1489, 'Buffer', Buffer, 2), 'isBuffer', 0)(J$.R(1497, 'b', b, 0))))))
                                J$.X1(1545, b = J$.W(1537, 'b', J$.F(1529, J$.R(1513, 'Buffer', Buffer, 2), 1)(J$.R(1521, 'b', b, 0)), b, 0));
                            var res = J$.X1(1569, J$.W(1561, 'res', J$.T(1553, [], 10, false), res, 1));
                            if (J$.X1(8153, J$.C(88, J$.B(138, '>', J$.G(1585, J$.R(1577, 'a', a, 0), 'length', 0), J$.G(1601, J$.R(1593, 'b', b, 0), 'length', 0), 0)))) {
                                for (var i = J$.X1(1625, J$.W(1617, 'i', J$.T(1609, 0, 22, false), i, 1)); J$.X1(8121, J$.C(72, J$.B(146, '<', J$.R(1633, 'i', i, 0), J$.G(1649, J$.R(1641, 'b', b, 0), 'length', 0), 0))); J$.X1(8129, J$.B(170, '-', i = J$.W(1673, 'i', J$.B(162, '+', J$.U(154, '+', J$.R(1665, 'i', i, 0)), J$.T(1657, 1, 22, false), 0), i, 0), J$.T(1681, 1, 22, false), 0))) {
                                    J$.X1(1753, J$.M(1745, J$.R(1689, 'res', res, 0), 'push', 0)(J$.B(178, '^', J$.G(1713, J$.R(1697, 'a', a, 0), J$.R(1705, 'i', i, 0), 4), J$.G(1737, J$.R(1721, 'b', b, 0), J$.R(1729, 'i', i, 0), 4), 0)));
                                }
                            } else {
                                for (var i = J$.X1(1777, J$.W(1769, 'i', J$.T(1761, 0, 22, false), i, 1)); J$.X1(8137, J$.C(80, J$.B(186, '<', J$.R(1785, 'i', i, 0), J$.G(1801, J$.R(1793, 'a', a, 0), 'length', 0), 0))); J$.X1(8145, J$.B(210, '-', i = J$.W(1825, 'i', J$.B(202, '+', J$.U(194, '+', J$.R(1817, 'i', i, 0)), J$.T(1809, 1, 22, false), 0), i, 0), J$.T(1833, 1, 22, false), 0))) {
                                    J$.X1(1905, J$.M(1897, J$.R(1841, 'res', res, 0), 'push', 0)(J$.B(218, '^', J$.G(1865, J$.R(1849, 'a', a, 0), J$.R(1857, 'i', i, 0), 4), J$.G(1889, J$.R(1873, 'b', b, 0), J$.R(1881, 'i', i, 0), 4), 0)));
                                }
                            }
                            return J$.X1(1945, J$.Rt(1937, J$.F(1929, J$.R(1913, 'Buffer', Buffer, 2), 1)(J$.R(1921, 'res', res, 0))));
                        } catch (J$e) {
                            J$.Ex(8161, J$e);
                        } finally {
                            if (J$.Fr(8169))
                                continue jalangiLabel1904;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1953), xor, 3));
            var hi = J$.X1(2641, J$.W(2633, 'hi', J$.T(2625, function (data, salt, iterations) {
                jalangiLabel1906:
                    while (true) {
                        try {
                            J$.Fe(2553, arguments.callee, this, arguments);
                            arguments = J$.N(2561, 'arguments', arguments, 4);
                            data = J$.N(2569, 'data', data, 4);
                            salt = J$.N(2577, 'salt', salt, 4);
                            iterations = J$.N(2585, 'iterations', iterations, 4);
                            J$.N(2593, 'digest', digest, 0);
                            J$.N(2601, 'ui', ui, 0);
                            J$.N(2609, 'u1', u1, 0);
                            J$.N(2617, 'i', i, 0);
                            var digest = J$.X1(2217, J$.W(2209, 'digest', J$.T(2201, function (msg) {
                                jalangiLabel1905:
                                    while (true) {
                                        try {
                                            J$.Fe(2169, arguments.callee, this, arguments);
                                            arguments = J$.N(2177, 'arguments', arguments, 4);
                                            msg = J$.N(2185, 'msg', msg, 4);
                                            J$.N(2193, 'hmac', hmac, 0);
                                            var hmac = J$.X1(2065, J$.W(2057, 'hmac', J$.M(2049, J$.R(2025, 'crypto', crypto, 1), 'createHmac', 0)(J$.T(2033, 'sha1', 21, false), J$.R(2041, 'data', data, 0)), hmac, 1));
                                            J$.X1(2097, J$.M(2089, J$.R(2073, 'hmac', hmac, 0), 'update', 0)(J$.R(2081, 'msg', msg, 0)));
                                            return J$.X1(2161, J$.Rt(2153, J$.F(2145, J$.R(2105, 'Buffer', Buffer, 2), 1)(J$.M(2129, J$.R(2113, 'hmac', hmac, 0), 'digest', 0)(J$.T(2121, 'base64', 21, false)), J$.T(2137, 'base64', 21, false))));
                                        } catch (J$e) {
                                            J$.Ex(8177, J$e);
                                        } finally {
                                            if (J$.Fr(8185))
                                                continue jalangiLabel1905;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 2169), digest, 1));
                            J$.X1(2289, salt = J$.W(2281, 'salt', J$.M(2273, J$.R(2225, 'Buffer', Buffer, 2), 'concat', 0)(J$.T(2265, [
                                J$.R(2233, 'salt', salt, 0),
                                J$.F(2257, J$.R(2241, 'Buffer', Buffer, 2), 1)(J$.T(2249, '\0\0\0\x01', 21, false))
                            ], 10, false)), salt, 0));
                            var ui = J$.X1(2329, J$.W(2321, 'ui', J$.F(2313, J$.R(2297, 'digest', digest, 0), 0)(J$.R(2305, 'salt', salt, 0)), ui, 1));
                            var u1 = J$.X1(2353, J$.W(2345, 'u1', J$.R(2337, 'ui', ui, 0), u1, 1));
                            for (var i = J$.X1(2377, J$.W(2369, 'i', J$.T(2361, 0, 22, false), i, 1)); J$.X1(8193, J$.C(96, J$.B(234, '<', J$.R(2385, 'i', i, 0), J$.B(226, '-', J$.R(2393, 'iterations', iterations, 0), J$.T(2401, 1, 22, false), 0), 0))); J$.X1(8201, J$.B(258, '-', i = J$.W(2425, 'i', J$.B(250, '+', J$.U(242, '+', J$.R(2417, 'i', i, 0)), J$.T(2409, 1, 22, false), 0), i, 0), J$.T(2433, 1, 22, false), 0))) {
                                J$.X1(2473, u1 = J$.W(2465, 'u1', J$.F(2457, J$.R(2441, 'digest', digest, 0), 0)(J$.R(2449, 'u1', u1, 0)), u1, 0));
                                J$.X1(2521, ui = J$.W(2513, 'ui', J$.F(2505, J$.R(2481, 'xor', xor, 1), 0)(J$.R(2489, 'ui', ui, 0), J$.R(2497, 'u1', u1, 0)), ui, 0));
                            }
                            return J$.X1(2545, J$.Rt(2537, J$.R(2529, 'ui', ui, 0)));
                        } catch (J$e) {
                            J$.Ex(8209, J$e);
                        } finally {
                            if (J$.Fr(8217))
                                continue jalangiLabel1906;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2553), hi, 3));
            J$.X1(6977, J$.P(6969, J$.G(2657, J$.R(2649, 'ScramSHA1', ScramSHA1, 1), 'prototype', 0), 'auth', J$.T(6961, function (server, pool, db, username, password, callback) {
                jalangiLabel1914:
                    while (true) {
                        try {
                            J$.Fe(6841, arguments.callee, this, arguments);
                            arguments = J$.N(6849, 'arguments', arguments, 4);
                            server = J$.N(6857, 'server', server, 4);
                            pool = J$.N(6865, 'pool', pool, 4);
                            db = J$.N(6873, 'db', db, 4);
                            username = J$.N(6881, 'username', username, 4);
                            password = J$.N(6889, 'password', password, 4);
                            callback = J$.N(6897, 'callback', callback, 4);
                            J$.N(6905, 'self', self, 0);
                            J$.N(6913, 'connections', connections, 0);
                            J$.N(6921, 'count', count, 0);
                            J$.N(6929, 'numberOfValidConnections', numberOfValidConnections, 0);
                            J$.N(6937, 'credentialsValid', credentialsValid, 0);
                            J$.N(6945, 'errorObject', errorObject, 0);
                            J$.N(6953, 'executeScram', executeScram, 0);
                            var self = J$.X1(2681, J$.W(2673, 'self', J$.R(2665, 'this', this, 0), self, 1));
                            var connections = J$.X1(2713, J$.W(2705, 'connections', J$.M(2697, J$.R(2689, 'pool', pool, 0), 'getAll', 0)(), connections, 1));
                            var count = J$.X1(2745, J$.W(2737, 'count', J$.G(2729, J$.R(2721, 'connections', connections, 0), 'length', 0), count, 1));
                            if (J$.X1(8225, J$.C(104, J$.B(266, '==', J$.R(2753, 'count', count, 0), J$.T(2761, 0, 22, false), 0))))
                                return J$.X1(2809, J$.Rt(2801, J$.F(2793, J$.R(2769, 'callback', callback, 0), 0)(J$.T(2777, null, 25, false), J$.T(2785, null, 25, false))));
                            var numberOfValidConnections = J$.X1(2833, J$.W(2825, 'numberOfValidConnections', J$.T(2817, 0, 22, false), numberOfValidConnections, 1));
                            var credentialsValid = J$.X1(2857, J$.W(2849, 'credentialsValid', J$.T(2841, false, 23, false), credentialsValid, 1));
                            var errorObject = J$.X1(2881, J$.W(2873, 'errorObject', J$.T(2865, null, 25, false), errorObject, 1));
                            while (J$.X1(8433, J$.C(224, J$.B(274, '>', J$.G(2897, J$.R(2889, 'connections', connections, 0), 'length', 0), J$.T(2905, 0, 22, false), 0)))) {
                                var executeScram = J$.X1(6793, J$.W(6785, 'executeScram', J$.T(6777, function (connection) {
                                    jalangiLabel1913:
                                        while (true) {
                                            try {
                                                J$.Fe(6705, arguments.callee, this, arguments);
                                                arguments = J$.N(6713, 'arguments', arguments, 4);
                                                connection = J$.N(6721, 'connection', connection, 4);
                                                J$.N(6729, 'nonce', nonce, 0);
                                                J$.N(6737, 'firstBare', firstBare, 0);
                                                J$.N(6745, 'cmd', cmd, 0);
                                                J$.N(6753, 'handleError', handleError, 0);
                                                J$.N(6761, 'finish', finish, 0);
                                                J$.N(6769, 'handleEnd', handleEnd, 0);
                                                J$.X1(2977, username = J$.W(2969, 'username', J$.M(2961, J$.M(2937, J$.R(2913, 'username', username, 0), 'replace', 0)(J$.T(2921, '=', 21, false), J$.T(2929, '=3D', 21, false)), 'replace', 0)(J$.T(2945, ',', 21, false), J$.T(2953, '=2C', 21, false)), username, 0));
                                                var nonce = J$.X1(3033, J$.W(3025, 'nonce', J$.M(3017, J$.M(3001, J$.R(2985, 'crypto', crypto, 1), 'randomBytes', 0)(J$.T(2993, 24, 22, false)), 'toString', 0)(J$.T(3009, 'base64', 21, false)), nonce, 1));
                                                var firstBare = J$.X1(3089, J$.W(3081, 'firstBare', J$.F(3073, J$.R(3041, 'f', f, 1), 0)(J$.T(3049, 'n=%s,r=%s', 21, false), J$.R(3057, 'username', username, 0), J$.R(3065, 'nonce', nonce, 0)), firstBare, 1));
                                                var cmd = J$.X1(3185, J$.W(3177, 'cmd', J$.T(3169, {
                                                    saslStart: J$.T(3097, 1, 22, false),
                                                    mechanism: J$.T(3105, 'SCRAM-SHA-1', 21, false),
                                                    payload: J$.F(3153, J$.R(3113, 'Binary', Binary, 1), 1)(J$.F(3145, J$.R(3121, 'f', f, 1), 0)(J$.T(3129, 'n,,%s', 21, false), J$.R(3137, 'firstBare', firstBare, 0))),
                                                    autoAuthorize: J$.T(3161, 1, 22, false)
                                                }, 11, false), cmd, 1));
                                                var handleError = J$.X1(3585, J$.W(3577, 'handleError', J$.T(3569, function (err, r) {
                                                    jalangiLabel1907:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(3537, arguments.callee, this, arguments);
                                                                arguments = J$.N(3545, 'arguments', arguments, 4);
                                                                err = J$.N(3553, 'err', err, 4);
                                                                r = J$.N(3561, 'r', r, 4);
                                                                if (J$.X1(8249, J$.C(128, J$.R(3193, 'err', err, 0)))) {
                                                                    J$.X1(3225, numberOfValidConnections = J$.W(3217, 'numberOfValidConnections', J$.B(282, '-', J$.R(3201, 'numberOfValidConnections', numberOfValidConnections, 0), J$.T(3209, 1, 22, false), 0), numberOfValidConnections, 0));
                                                                    J$.X1(3249, errorObject = J$.W(3241, 'errorObject', J$.R(3233, 'err', err, 0), errorObject, 0));
                                                                    return J$.X1(3273, J$.Rt(3265, J$.T(3257, false, 23, false)));
                                                                } else if (J$.X1(8241, J$.C(120, J$.G(3305, J$.G(3289, J$.R(3281, 'r', r, 0), 'result', 0), J$.T(3297, '$err', 21, false), 4)))) {
                                                                    J$.X1(3337, errorObject = J$.W(3329, 'errorObject', J$.G(3321, J$.R(3313, 'r', r, 0), 'result', 0), errorObject, 0));
                                                                    return J$.X1(3361, J$.Rt(3353, J$.T(3345, false, 23, false)));
                                                                } else if (J$.X1(8233, J$.C(112, J$.G(3393, J$.G(3377, J$.R(3369, 'r', r, 0), 'result', 0), J$.T(3385, 'errmsg', 21, false), 4)))) {
                                                                    J$.X1(3425, errorObject = J$.W(3417, 'errorObject', J$.G(3409, J$.R(3401, 'r', r, 0), 'result', 0), errorObject, 0));
                                                                    return J$.X1(3449, J$.Rt(3441, J$.T(3433, false, 23, false)));
                                                                } else {
                                                                    J$.X1(3473, credentialsValid = J$.W(3465, 'credentialsValid', J$.T(3457, true, 23, false), credentialsValid, 0));
                                                                    J$.X1(3505, numberOfValidConnections = J$.W(3497, 'numberOfValidConnections', J$.B(290, '+', J$.R(3481, 'numberOfValidConnections', numberOfValidConnections, 0), J$.T(3489, 1, 22, false), 0), numberOfValidConnections, 0));
                                                                }
                                                                return J$.X1(3529, J$.Rt(3521, J$.T(3513, true, 23, false)));
                                                            } catch (J$e) {
                                                                J$.Ex(8257, J$e);
                                                            } finally {
                                                                if (J$.Fr(8265))
                                                                    continue jalangiLabel1907;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 3537), handleError, 1));
                                                var finish = J$.X1(3937, J$.W(3929, 'finish', J$.T(3921, function (_count, _numberOfValidConnections) {
                                                    jalangiLabel1908:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(3889, arguments.callee, this, arguments);
                                                                arguments = J$.N(3897, 'arguments', arguments, 4);
                                                                _count = J$.N(3905, '_count', _count, 4);
                                                                _numberOfValidConnections = J$.N(3913, '_numberOfValidConnections', _numberOfValidConnections, 4);
                                                                if (J$.X1(8289, J$.C(160, J$.C(136, J$.B(298, '==', J$.R(3593, '_count', _count, 0), J$.T(3601, 0, 22, false), 0)) ? J$.B(306, '>', J$.R(3609, '_numberOfValidConnections', _numberOfValidConnections, 0), J$.T(3617, 0, 22, false), 0) : J$._()))) {
                                                                    J$.X1(3697, J$.F(3689, J$.R(3625, 'addAuthSession', addAuthSession, 1), 0)(J$.G(3641, J$.R(3633, 'self', self, 0), 'authStore', 0), J$.F(3681, J$.R(3649, 'AuthSession', AuthSession, 1), 1)(J$.R(3657, 'db', db, 0), J$.R(3665, 'username', username, 0), J$.R(3673, 'password', password, 0))));
                                                                    return J$.X1(3745, J$.Rt(3737, J$.F(3729, J$.R(3705, 'callback', callback, 0), 0)(J$.T(3713, null, 25, false), J$.T(3721, true, 23, false))));
                                                                } else if (J$.X1(8281, J$.C(152, J$.B(314, '==', J$.R(3753, '_count', _count, 0), J$.T(3761, 0, 22, false), 0)))) {
                                                                    if (J$.X1(8273, J$.C(144, J$.B(322, '==', J$.R(3769, 'errorObject', errorObject, 0), J$.T(3777, null, 25, false), 0))))
                                                                        J$.X1(3833, errorObject = J$.W(3825, 'errorObject', J$.F(3817, J$.R(3785, 'MongoError', MongoError, 1), 1)(J$.F(3809, J$.R(3793, 'f', f, 1), 0)(J$.T(3801, 'failed to authenticate using scram', 21, false))), errorObject, 0));
                                                                    return J$.X1(3881, J$.Rt(3873, J$.F(3865, J$.R(3841, 'callback', callback, 0), 0)(J$.R(3849, 'errorObject', errorObject, 0), J$.T(3857, false, 23, false))));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(8297, J$e);
                                                            } finally {
                                                                if (J$.Fr(8305))
                                                                    continue jalangiLabel1908;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 3889), finish, 1));
                                                var handleEnd = J$.X1(4105, J$.W(4097, 'handleEnd', J$.T(4089, function (_err, _r) {
                                                    jalangiLabel1909:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(4057, arguments.callee, this, arguments);
                                                                arguments = J$.N(4065, 'arguments', arguments, 4);
                                                                _err = J$.N(4073, '_err', _err, 4);
                                                                _r = J$.N(4081, '_r', _r, 4);
                                                                J$.X1(3977, J$.F(3969, J$.R(3945, 'handleError', handleError, 0), 0)(J$.R(3953, '_err', _err, 0), J$.R(3961, '_r', _r, 0)));
                                                                J$.X1(4009, count = J$.W(4001, 'count', J$.B(330, '-', J$.R(3985, 'count', count, 0), J$.T(3993, 1, 22, false), 0), count, 0));
                                                                J$.X1(4049, J$.F(4041, J$.R(4017, 'finish', finish, 0), 0)(J$.R(4025, 'count', count, 0), J$.R(4033, 'numberOfValidConnections', numberOfValidConnections, 0)));
                                                            } catch (J$e) {
                                                                J$.Ex(8313, J$e);
                                                            } finally {
                                                                if (J$.Fr(8321))
                                                                    continue jalangiLabel1909;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 4057), handleEnd, 1));
                                                J$.X1(6697, J$.M(6689, J$.R(4113, 'server', server, 0), 'command', 0)(J$.F(4145, J$.R(4121, 'f', f, 1), 0)(J$.T(4129, '%s.$cmd', 21, false), J$.R(4137, 'db', db, 0)), J$.R(4153, 'cmd', cmd, 0), J$.T(4169, {
                                                    connection: J$.R(4161, 'connection', connection, 0)
                                                }, 11, false), J$.T(6681, function (err, r) {
                                                    jalangiLabel1912:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(6505, arguments.callee, this, arguments);
                                                                arguments = J$.N(6513, 'arguments', arguments, 4);
                                                                err = J$.N(6521, 'err', err, 4);
                                                                r = J$.N(6529, 'r', r, 4);
                                                                J$.N(6537, 'dict', dict, 0);
                                                                J$.N(6545, 'iterations', iterations, 0);
                                                                J$.N(6553, 'salt', salt, 0);
                                                                J$.N(6561, 'rnonce', rnonce, 0);
                                                                J$.N(6569, 'withoutProof', withoutProof, 0);
                                                                J$.N(6577, 'passwordDig', passwordDig, 0);
                                                                J$.N(6585, 'saltedPassword', saltedPassword, 0);
                                                                J$.N(6593, 'hmac', hmac, 0);
                                                                J$.N(6601, 'clientKey', clientKey, 0);
                                                                J$.N(6609, 'hash', hash, 0);
                                                                J$.N(6617, 'storedKey', storedKey, 0);
                                                                J$.N(6625, 'authMsg', authMsg, 0);
                                                                J$.N(6633, 'clientSig', clientSig, 0);
                                                                J$.N(6641, 'clientProof', clientProof, 0);
                                                                J$.N(6649, 'clientFinal', clientFinal, 0);
                                                                J$.N(6657, 'serverKey', serverKey, 0);
                                                                J$.N(6665, 'serverSig', serverSig, 0);
                                                                J$.N(6673, 'cmd', cmd, 0);
                                                                if (J$.X1(8353, J$.C(200, J$.B(338, '==', J$.F(4201, J$.R(4177, 'handleError', handleError, 0), 0)(J$.R(4185, 'err', err, 0), J$.R(4193, 'r', r, 0)), J$.T(4209, false, 23, false), 0)))) {
                                                                    J$.X1(4241, count = J$.W(4233, 'count', J$.B(346, '-', J$.R(4217, 'count', count, 0), J$.T(4225, 1, 22, false), 0), count, 0));
                                                                    if (J$.X1(8345, J$.C(192, J$.C(168, J$.B(354, '==', J$.R(4249, 'count', count, 0), J$.T(4257, 0, 22, false), 0)) ? J$.B(362, '>', J$.R(4265, 'numberOfValidConnections', numberOfValidConnections, 0), J$.T(4273, 0, 22, false), 0) : J$._()))) {
                                                                        J$.X1(4353, J$.F(4345, J$.R(4281, 'addAuthSession', addAuthSession, 1), 0)(J$.G(4297, J$.R(4289, 'self', self, 0), 'authStore', 0), J$.F(4337, J$.R(4305, 'AuthSession', AuthSession, 1), 1)(J$.R(4313, 'db', db, 0), J$.R(4321, 'username', username, 0), J$.R(4329, 'password', password, 0))));
                                                                        return J$.X1(4401, J$.Rt(4393, J$.F(4385, J$.R(4361, 'callback', callback, 0), 0)(J$.T(4369, null, 25, false), J$.T(4377, true, 23, false))));
                                                                    } else if (J$.X1(8337, J$.C(184, J$.B(370, '==', J$.R(4409, 'count', count, 0), J$.T(4417, 0, 22, false), 0)))) {
                                                                        if (J$.X1(8329, J$.C(176, J$.B(378, '==', J$.R(4425, 'errorObject', errorObject, 0), J$.T(4433, null, 25, false), 0))))
                                                                            J$.X1(4489, errorObject = J$.W(4481, 'errorObject', J$.F(4473, J$.R(4441, 'MongoError', MongoError, 1), 1)(J$.F(4465, J$.R(4449, 'f', f, 1), 0)(J$.T(4457, 'failed to authenticate using scram', 21, false))), errorObject, 0));
                                                                        return J$.X1(4537, J$.Rt(4529, J$.F(4521, J$.R(4497, 'callback', callback, 0), 0)(J$.R(4505, 'errorObject', errorObject, 0), J$.T(4513, false, 23, false))));
                                                                    }
                                                                    return J$.X1(4553, J$.Rt(4545, undefined));
                                                                }
                                                                var dict = J$.X1(4617, J$.W(4609, 'dict', J$.F(4601, J$.R(4561, 'parsePayload', parsePayload, 1), 0)(J$.M(4593, J$.G(4585, J$.G(4577, J$.R(4569, 'r', r, 0), 'result', 0), 'payload', 0), 'value', 0)()), dict, 1));
                                                                var iterations = J$.X1(4673, J$.W(4665, 'iterations', J$.F(4657, J$.R(4625, 'parseInt', parseInt, 2), 0)(J$.G(4641, J$.R(4633, 'dict', dict, 0), 'i', 0), J$.T(4649, 10, 22, false)), iterations, 1));
                                                                var salt = J$.X1(4705, J$.W(4697, 'salt', J$.G(4689, J$.R(4681, 'dict', dict, 0), 's', 0), salt, 1));
                                                                var rnonce = J$.X1(4737, J$.W(4729, 'rnonce', J$.G(4721, J$.R(4713, 'dict', dict, 0), 'r', 0), rnonce, 1));
                                                                var withoutProof = J$.X1(4785, J$.W(4777, 'withoutProof', J$.F(4769, J$.R(4745, 'f', f, 1), 0)(J$.T(4753, 'c=biws,r=%s', 21, false), J$.R(4761, 'rnonce', rnonce, 0)), withoutProof, 1));
                                                                var passwordDig = J$.X1(4833, J$.W(4825, 'passwordDig', J$.F(4817, J$.R(4793, 'passwordDigest', passwordDigest, 1), 0)(J$.R(4801, 'username', username, 0), J$.R(4809, 'password', password, 0)), passwordDig, 1));
                                                                var saltedPassword = J$.X1(4913, J$.W(4905, 'saltedPassword', J$.F(4897, J$.R(4841, 'hi', hi, 1), 0)(J$.R(4849, 'passwordDig', passwordDig, 0), J$.F(4881, J$.R(4857, 'Buffer', Buffer, 2), 1)(J$.R(4865, 'salt', salt, 0), J$.T(4873, 'base64', 21, false)), J$.R(4889, 'iterations', iterations, 0)), saltedPassword, 1));
                                                                var hmac = J$.X1(4961, J$.W(4953, 'hmac', J$.M(4945, J$.R(4921, 'crypto', crypto, 1), 'createHmac', 0)(J$.T(4929, 'sha1', 21, false), J$.R(4937, 'saltedPassword', saltedPassword, 0)), hmac, 1));
                                                                J$.X1(5009, J$.M(5001, J$.R(4969, 'hmac', hmac, 0), 'update', 0)(J$.F(4993, J$.R(4977, 'Buffer', Buffer, 2), 1)(J$.T(4985, 'Client Key', 21, false))));
                                                                var clientKey = J$.X1(5073, J$.W(5065, 'clientKey', J$.F(5057, J$.R(5017, 'Buffer', Buffer, 2), 1)(J$.M(5041, J$.R(5025, 'hmac', hmac, 0), 'digest', 0)(J$.T(5033, 'base64', 21, false)), J$.T(5049, 'base64', 21, false)), clientKey, 1));
                                                                var hash = J$.X1(5113, J$.W(5105, 'hash', J$.M(5097, J$.R(5081, 'crypto', crypto, 1), 'createHash', 0)(J$.T(5089, 'sha1', 21, false)), hash, 1));
                                                                J$.X1(5145, J$.M(5137, J$.R(5121, 'hash', hash, 0), 'update', 0)(J$.R(5129, 'clientKey', clientKey, 0)));
                                                                var storedKey = J$.X1(5209, J$.W(5201, 'storedKey', J$.F(5193, J$.R(5153, 'Buffer', Buffer, 2), 1)(J$.M(5177, J$.R(5161, 'hash', hash, 0), 'digest', 0)(J$.T(5169, 'base64', 21, false)), J$.T(5185, 'base64', 21, false)), storedKey, 1));
                                                                var authMsg = J$.X1(5313, J$.W(5305, 'authMsg', J$.M(5297, J$.T(5281, [
                                                                    J$.R(5217, 'firstBare', firstBare, 0),
                                                                    J$.M(5265, J$.M(5249, J$.G(5241, J$.G(5233, J$.R(5225, 'r', r, 0), 'result', 0), 'payload', 0), 'value', 0)(), 'toString', 0)(J$.T(5257, 'base64', 21, false)),
                                                                    J$.R(5273, 'withoutProof', withoutProof, 0)
                                                                ], 10, false), 'join', 0)(J$.T(5289, ',', 21, false)), authMsg, 1));
                                                                var hmac = J$.X1(5361, J$.W(5353, 'hmac', J$.M(5345, J$.R(5321, 'crypto', crypto, 1), 'createHmac', 0)(J$.T(5329, 'sha1', 21, false), J$.R(5337, 'storedKey', storedKey, 0)), hmac, 1));
                                                                J$.X1(5409, J$.M(5401, J$.R(5369, 'hmac', hmac, 0), 'update', 0)(J$.F(5393, J$.R(5377, 'Buffer', Buffer, 2), 1)(J$.R(5385, 'authMsg', authMsg, 0))));
                                                                var clientSig = J$.X1(5473, J$.W(5465, 'clientSig', J$.F(5457, J$.R(5417, 'Buffer', Buffer, 2), 1)(J$.M(5441, J$.R(5425, 'hmac', hmac, 0), 'digest', 0)(J$.T(5433, 'base64', 21, false)), J$.T(5449, 'base64', 21, false)), clientSig, 1));
                                                                var clientProof = J$.X1(5577, J$.W(5569, 'clientProof', J$.F(5561, J$.R(5481, 'f', f, 1), 0)(J$.T(5489, 'p=%s', 21, false), J$.M(5553, J$.F(5537, J$.R(5497, 'Buffer', Buffer, 2), 1)(J$.F(5529, J$.R(5505, 'xor', xor, 1), 0)(J$.R(5513, 'clientKey', clientKey, 0), J$.R(5521, 'clientSig', clientSig, 0))), 'toString', 0)(J$.T(5545, 'base64', 21, false))), clientProof, 1));
                                                                var clientFinal = J$.X1(5633, J$.W(5625, 'clientFinal', J$.M(5617, J$.T(5601, [
                                                                    J$.R(5585, 'withoutProof', withoutProof, 0),
                                                                    J$.R(5593, 'clientProof', clientProof, 0)
                                                                ], 10, false), 'join', 0)(J$.T(5609, ',', 21, false)), clientFinal, 1));
                                                                var hmac = J$.X1(5681, J$.W(5673, 'hmac', J$.M(5665, J$.R(5641, 'crypto', crypto, 1), 'createHmac', 0)(J$.T(5649, 'sha1', 21, false), J$.R(5657, 'saltedPassword', saltedPassword, 0)), hmac, 1));
                                                                J$.X1(5729, J$.M(5721, J$.R(5689, 'hmac', hmac, 0), 'update', 0)(J$.F(5713, J$.R(5697, 'Buffer', Buffer, 2), 1)(J$.T(5705, 'Server Key', 21, false))));
                                                                var serverKey = J$.X1(5793, J$.W(5785, 'serverKey', J$.F(5777, J$.R(5737, 'Buffer', Buffer, 2), 1)(J$.M(5761, J$.R(5745, 'hmac', hmac, 0), 'digest', 0)(J$.T(5753, 'base64', 21, false)), J$.T(5769, 'base64', 21, false)), serverKey, 1));
                                                                var hmac = J$.X1(5841, J$.W(5833, 'hmac', J$.M(5825, J$.R(5801, 'crypto', crypto, 1), 'createHmac', 0)(J$.T(5809, 'sha1', 21, false), J$.R(5817, 'serverKey', serverKey, 0)), hmac, 1));
                                                                J$.X1(5889, J$.M(5881, J$.R(5849, 'hmac', hmac, 0), 'update', 0)(J$.F(5873, J$.R(5857, 'Buffer', Buffer, 2), 1)(J$.R(5865, 'authMsg', authMsg, 0))));
                                                                var serverSig = J$.X1(5953, J$.W(5945, 'serverSig', J$.F(5937, J$.R(5897, 'Buffer', Buffer, 2), 1)(J$.M(5921, J$.R(5905, 'hmac', hmac, 0), 'digest', 0)(J$.T(5913, 'base64', 21, false)), J$.T(5929, 'base64', 21, false)), serverSig, 1));
                                                                var cmd = J$.X1(6049, J$.W(6041, 'cmd', J$.T(6033, {
                                                                    saslContinue: J$.T(5961, 1, 22, false),
                                                                    conversationId: J$.G(5985, J$.G(5977, J$.R(5969, 'r', r, 0), 'result', 0), 'conversationId', 0),
                                                                    payload: J$.F(6025, J$.R(5993, 'Binary', Binary, 1), 1)(J$.F(6017, J$.R(6001, 'Buffer', Buffer, 2), 1)(J$.R(6009, 'clientFinal', clientFinal, 0)))
                                                                }, 11, false), cmd, 1));
                                                                J$.X1(6497, J$.M(6489, J$.R(6057, 'server', server, 0), 'command', 0)(J$.F(6089, J$.R(6065, 'f', f, 1), 0)(J$.T(6073, '%s.$cmd', 21, false), J$.R(6081, 'db', db, 0)), J$.R(6097, 'cmd', cmd, 0), J$.T(6113, {
                                                                    connection: J$.R(6105, 'connection', connection, 0)
                                                                }, 11, false), J$.T(6481, function (err, r) {
                                                                    jalangiLabel1911:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(6441, arguments.callee, this, arguments);
                                                                                arguments = J$.N(6449, 'arguments', arguments, 4);
                                                                                err = J$.N(6457, 'err', err, 4);
                                                                                r = J$.N(6465, 'r', r, 4);
                                                                                J$.N(6473, 'cmd', cmd, 0);
                                                                                if (J$.X1(8377, J$.C(216, J$.C(208, J$.R(6121, 'r', r, 0)) ? J$.B(386, '==', J$.G(6145, J$.G(6137, J$.R(6129, 'r', r, 0), 'result', 0), 'done', 0), J$.T(6153, false, 23, false), 0) : J$._()))) {
                                                                                    var cmd = J$.X1(6233, J$.W(6225, 'cmd', J$.T(6217, {
                                                                                        saslContinue: J$.T(6161, 1, 22, false),
                                                                                        conversationId: J$.G(6185, J$.G(6177, J$.R(6169, 'r', r, 0), 'result', 0), 'conversationId', 0),
                                                                                        payload: J$.F(6209, J$.R(6193, 'Buffer', Buffer, 2), 1)(J$.T(6201, 0, 22, false))
                                                                                    }, 11, false), cmd, 1));
                                                                                    J$.X1(6393, J$.M(6385, J$.R(6241, 'server', server, 0), 'command', 0)(J$.F(6273, J$.R(6249, 'f', f, 1), 0)(J$.T(6257, '%s.$cmd', 21, false), J$.R(6265, 'db', db, 0)), J$.R(6281, 'cmd', cmd, 0), J$.T(6297, {
                                                                                        connection: J$.R(6289, 'connection', connection, 0)
                                                                                    }, 11, false), J$.T(6377, function (err, r) {
                                                                                        jalangiLabel1910:
                                                                                            while (true) {
                                                                                                try {
                                                                                                    J$.Fe(6345, arguments.callee, this, arguments);
                                                                                                    arguments = J$.N(6353, 'arguments', arguments, 4);
                                                                                                    err = J$.N(6361, 'err', err, 4);
                                                                                                    r = J$.N(6369, 'r', r, 4);
                                                                                                    J$.X1(6337, J$.F(6329, J$.R(6305, 'handleEnd', handleEnd, 0), 0)(J$.R(6313, 'err', err, 0), J$.R(6321, 'r', r, 0)));
                                                                                                } catch (J$e) {
                                                                                                    J$.Ex(8361, J$e);
                                                                                                } finally {
                                                                                                    if (J$.Fr(8369))
                                                                                                        continue jalangiLabel1910;
                                                                                                    else
                                                                                                        return J$.Ra();
                                                                                                }
                                                                                            }
                                                                                    }, 12, false, 6345)));
                                                                                } else {
                                                                                    J$.X1(6433, J$.F(6425, J$.R(6401, 'handleEnd', handleEnd, 0), 0)(J$.R(6409, 'err', err, 0), J$.R(6417, 'r', r, 0)));
                                                                                }
                                                                            } catch (J$e) {
                                                                                J$.Ex(8385, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(8393))
                                                                                    continue jalangiLabel1911;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }, 12, false, 6441)));
                                                            } catch (J$e) {
                                                                J$.Ex(8401, J$e);
                                                            } finally {
                                                                if (J$.Fr(8409))
                                                                    continue jalangiLabel1912;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 6505)));
                                            } catch (J$e) {
                                                J$.Ex(8417, J$e);
                                            } finally {
                                                if (J$.Fr(8425))
                                                    continue jalangiLabel1913;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 6705), executeScram, 1));
                                J$.X1(6833, J$.F(6825, J$.R(6801, 'executeScram', executeScram, 0), 0)(J$.M(6817, J$.R(6809, 'connections', connections, 0), 'shift', 0)()));
                            }
                        } catch (J$e) {
                            J$.Ex(8441, J$e);
                        } finally {
                            if (J$.Fr(8449))
                                continue jalangiLabel1914;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 6841), 0));
            var addAuthSession = J$.X1(7257, J$.W(7249, 'addAuthSession', J$.T(7241, function (authStore, session) {
                jalangiLabel1915:
                    while (true) {
                        try {
                            J$.Fe(7193, arguments.callee, this, arguments);
                            arguments = J$.N(7201, 'arguments', arguments, 4);
                            authStore = J$.N(7209, 'authStore', authStore, 4);
                            session = J$.N(7217, 'session', session, 4);
                            J$.N(7225, 'found', found, 0);
                            J$.N(7233, 'i', i, 0);
                            var found = J$.X1(7001, J$.W(6993, 'found', J$.T(6985, false, 23, false), found, 1));
                            for (var i = J$.X1(7025, J$.W(7017, 'i', J$.T(7009, 0, 22, false), i, 1)); J$.X1(8465, J$.C(240, J$.B(394, '<', J$.R(7033, 'i', i, 0), J$.G(7049, J$.R(7041, 'authStore', authStore, 0), 'length', 0), 0))); J$.X1(8473, J$.B(418, '-', i = J$.W(7073, 'i', J$.B(410, '+', J$.U(402, '+', J$.R(7065, 'i', i, 0)), J$.T(7057, 1, 22, false), 0), i, 0), J$.T(7081, 1, 22, false), 0))) {
                                if (J$.X1(8457, J$.C(232, J$.M(7121, J$.G(7105, J$.R(7089, 'authStore', authStore, 0), J$.R(7097, 'i', i, 0), 4), 'equal', 0)(J$.R(7113, 'session', session, 0))))) {
                                    J$.X1(7145, found = J$.W(7137, 'found', J$.T(7129, true, 23, false), found, 0));
                                    break;
                                }
                            }
                            if (J$.X1(8481, J$.C(248, J$.U(426, '!', J$.R(7153, 'found', found, 0)))))
                                J$.X1(7185, J$.M(7177, J$.R(7161, 'authStore', authStore, 0), 'push', 0)(J$.R(7169, 'session', session, 0)));
                        } catch (J$e) {
                            J$.Ex(8489, J$e);
                        } finally {
                            if (J$.Fr(8497))
                                continue jalangiLabel1915;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 7193), addAuthSession, 3));
            J$.X1(7833, J$.P(7825, J$.G(7273, J$.R(7265, 'ScramSHA1', ScramSHA1, 1), 'prototype', 0), 'reauthenticate', J$.T(7817, function (server, pool, callback) {
                jalangiLabel1917:
                    while (true) {
                        try {
                            J$.Fe(7761, arguments.callee, this, arguments);
                            arguments = J$.N(7769, 'arguments', arguments, 4);
                            server = J$.N(7777, 'server', server, 4);
                            pool = J$.N(7785, 'pool', pool, 4);
                            callback = J$.N(7793, 'callback', callback, 4);
                            J$.N(7801, 'count', count, 0);
                            J$.N(7809, 'i', i, 0);
                            var count = J$.X1(7313, J$.W(7305, 'count', J$.G(7297, J$.G(7289, J$.R(7281, 'this', this, 0), 'authStore', 0), 'length', 0), count, 1));
                            if (J$.X1(8505, J$.C(256, J$.B(434, '==', J$.R(7321, 'count', count, 0), J$.T(7329, 0, 22, false), 0))))
                                return J$.X1(7377, J$.Rt(7369, J$.F(7361, J$.R(7337, 'callback', callback, 0), 0)(J$.T(7345, null, 25, false), J$.T(7353, null, 25, false))));
                            for (var i = J$.X1(7401, J$.W(7393, 'i', J$.T(7385, 0, 22, false), i, 1)); J$.X1(8537, J$.C(272, J$.B(442, '<', J$.R(7409, 'i', i, 0), J$.G(7433, J$.G(7425, J$.R(7417, 'this', this, 0), 'authStore', 0), 'length', 0), 0))); J$.X1(8545, J$.B(466, '-', i = J$.W(7457, 'i', J$.B(458, '+', J$.U(450, '+', J$.R(7449, 'i', i, 0)), J$.T(7441, 1, 22, false), 0), i, 0), J$.T(7465, 1, 22, false), 0))) {
                                J$.X1(7753, J$.M(7745, J$.R(7473, 'this', this, 0), 'auth', 0)(J$.R(7481, 'server', server, 0), J$.R(7489, 'pool', pool, 0), J$.G(7529, J$.G(7521, J$.G(7505, J$.R(7497, 'this', this, 0), 'authStore', 0), J$.R(7513, 'i', i, 0), 4), 'db', 0), J$.G(7569, J$.G(7561, J$.G(7545, J$.R(7537, 'this', this, 0), 'authStore', 0), J$.R(7553, 'i', i, 0), 4), 'username', 0), J$.G(7609, J$.G(7601, J$.G(7585, J$.R(7577, 'this', this, 0), 'authStore', 0), J$.R(7593, 'i', i, 0), 4), 'password', 0), J$.T(7737, function (err, r) {
                                    jalangiLabel1916:
                                        while (true) {
                                            try {
                                                J$.Fe(7705, arguments.callee, this, arguments);
                                                arguments = J$.N(7713, 'arguments', arguments, 4);
                                                err = J$.N(7721, 'err', err, 4);
                                                r = J$.N(7729, 'r', r, 4);
                                                J$.X1(7641, count = J$.W(7633, 'count', J$.B(474, '-', J$.R(7617, 'count', count, 0), J$.T(7625, 1, 22, false), 0), count, 0));
                                                if (J$.X1(8513, J$.C(264, J$.B(482, '==', J$.R(7649, 'count', count, 0), J$.T(7657, 0, 22, false), 0)))) {
                                                    J$.X1(7697, J$.F(7689, J$.R(7665, 'callback', callback, 0), 0)(J$.T(7673, null, 25, false), J$.T(7681, null, 25, false)));
                                                }
                                            } catch (J$e) {
                                                J$.Ex(8521, J$e);
                                            } finally {
                                                if (J$.Fr(8529))
                                                    continue jalangiLabel1916;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 7705)));
                            }
                        } catch (J$e) {
                            J$.Ex(8553, J$e);
                        } finally {
                            if (J$.Fr(8561))
                                continue jalangiLabel1917;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 7761), 0));
            J$.X1(7865, J$.P(7857, J$.R(7841, 'module', module, 2), 'exports', J$.R(7849, 'ScramSHA1', ScramSHA1, 1), 0));
        } catch (J$e) {
            J$.Ex(8569, J$e);
        } finally {
            if (J$.Sr(8577)) {
                J$.L();
                continue jalangiLabel1918;
            } else {
                J$.L();
                break jalangiLabel1918;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
