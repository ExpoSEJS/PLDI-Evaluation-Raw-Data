J$.iids = {"8":[11,12,11,70],"9":[1,20,1,27],"10":[11,12,11,33],"16":[11,12,11,107],"17":[1,28,1,32],"18":[11,37,11,70],"24":[20,9,20,19],"25":[1,20,1,33],"26":[11,74,11,107],"32":[40,28,40,46],"33":[1,20,1,33],"34":[20,9,20,19],"40":[38,28,38,44],"41":[1,20,1,33],"42":[25,12,25,34],"48":[36,21,36,24],"49":[2,26,2,38],"50":[35,25,35,34],"56":[46,21,46,63],"57":[2,26,2,45],"58":[44,48,44,76],"64":[50,25,50,44],"65":[2,26,2,45],"66":[46,21,46,31],"72":[49,28,49,38],"73":[2,26,2,45],"74":[46,35,46,63],"80":[46,21,46,63],"81":[3,1,3,13],"82":[49,28,49,38],"88":[25,12,25,34],"89":[3,1,3,14],"90":[50,25,50,44],"96":[62,13,62,40],"97":[4,9,4,16],"98":[61,21,61,41],"104":[61,21,61,41],"105":[4,17,4,23],"106":[61,43,61,46],"112":[67,9,67,15],"113":[4,9,4,24],"120":[72,9,72,19],"121":[4,9,4,31],"122":[61,43,61,46],"128":[77,17,77,27],"129":[4,42,4,49],"130":[67,9,67,15],"136":[74,21,74,46],"137":[4,50,4,58],"138":[72,9,72,19],"145":[4,42,4,59],"146":[74,21,74,46],"153":[4,70,4,77],"154":[74,48,74,51],"161":[4,78,4,84],"169":[4,70,4,85],"170":[74,48,74,51],"177":[4,70,4,92],"178":[76,21,76,30],"185":[4,107,4,114],"186":[77,17,77,27],"193":[4,115,4,125],"201":[4,107,4,126],"209":[4,9,4,31],"217":[4,9,4,31],"225":[4,42,4,59],"233":[4,42,4,59],"241":[4,70,4,92],"249":[4,70,4,92],"257":[4,107,4,126],"265":[4,107,4,126],"273":[6,5,6,9],"281":[6,15,6,17],"289":[6,5,6,17],"297":[6,5,6,18],"305":[7,5,7,9],"313":[7,21,7,29],"321":[7,5,7,29],"329":[7,5,7,30],"337":[8,5,8,9],"345":[8,21,8,29],"353":[8,5,8,29],"361":[8,5,8,30],"369":[5,19,9,2],"377":[5,19,9,2],"385":[5,19,9,2],"393":[5,19,9,2],"401":[5,19,9,2],"409":[5,19,9,2],"417":[5,19,9,2],"425":[5,19,9,2],"433":[10,1,10,12],"441":[10,1,10,22],"449":[11,12,11,19],"457":[11,12,11,22],"465":[11,26,11,30],"473":[11,26,11,33],"481":[11,37,11,44],"489":[11,37,11,53],"497":[11,57,11,61],"505":[11,57,11,70],"513":[11,74,11,81],"521":[11,74,11,90],"529":[11,94,11,98],"537":[11,94,11,107],"545":[11,12,11,107],"553":[11,5,11,108],"561":[10,31,12,2],"569":[10,31,12,2],"577":[10,31,12,2],"585":[10,31,12,2],"593":[10,1,12,2],"601":[10,1,12,3],"609":[14,5,14,9],"617":[14,22,14,24],"625":[14,5,14,24],"633":[14,5,14,25],"641":[13,13,15,2],"649":[13,13,15,2],"657":[13,13,15,2],"665":[13,13,15,2],"673":[13,13,15,2],"681":[16,1,16,6],"689":[16,1,16,16],"697":[17,16,17,20],"705":[17,16,17,20],"713":[17,16,17,20],"721":[18,23,18,27],"729":[18,23,18,36],"731":[18,23,18,34],"737":[18,23,18,36],"745":[18,23,18,36],"753":[19,17,19,28],"761":[19,17,19,35],"769":[19,17,19,35],"777":[19,17,19,35],"785":[20,9,20,14],"793":[20,18,20,19],"801":[21,16,21,24],"809":[21,25,21,29],"817":[21,31,21,35],"825":[21,16,21,36],"833":[21,16,21,36],"841":[21,9,21,37],"849":[22,36,22,37],"857":[22,36,22,37],"865":[22,36,22,37],"873":[23,28,23,33],"881":[23,28,23,33],"889":[23,28,23,33],"897":[24,23,24,27],"905":[24,23,24,27],"913":[24,23,24,27],"921":[25,12,25,23],"929":[25,12,25,30],"937":[25,33,25,34],"945":[27,31,27,37],"953":[27,38,27,39],"961":[27,40,27,50],"969":[27,52,27,60],"977":[27,62,27,70],"985":[27,38,27,71],"993":[27,27,27,72],"1001":[27,27,27,72],"1009":[27,27,27,72],"1017":[29,28,29,29],"1025":[30,28,30,35],"1033":[31,26,31,33],"1041":[32,32,32,33],"1049":[28,27,33,14],"1057":[28,27,33,14],"1065":[28,27,33,14],"1073":[34,13,34,19],"1081":[34,28,34,44],"1089":[34,46,34,53],"1097":[34,69,34,79],"1105":[34,55,34,81],"1113":[35,25,35,30],"1121":[35,33,35,34],"1129":[35,25,35,34],"1137":[35,17,35,35],"1145":[36,21,36,24],"1153":[37,35,37,38],"1161":[37,35,37,38],"1169":[37,21,37,39],"1177":[38,28,38,29],"1185":[38,28,38,36],"1193":[38,37,38,43],"1201":[38,28,38,44],"1209":[39,35,39,36],"1217":[39,35,39,43],"1225":[39,35,39,43],"1233":[39,21,39,44],"1241":[40,28,40,29],"1249":[40,28,40,36],"1257":[40,37,40,45],"1265":[40,28,40,46],"1273":[41,35,41,36],"1281":[41,35,41,43],"1289":[41,35,41,43],"1297":[41,21,41,44],"1305":[43,40,43,44],"1313":[43,40,43,44],"1321":[43,21,43,45],"1329":[44,48,44,72],"1337":[44,75,44,76],"1345":[44,48,44,76],"1353":[44,21,44,77],"1361":[46,21,46,26],"1369":[46,30,46,31],"1377":[46,35,46,59],"1385":[46,62,46,63],"1393":[47,21,47,35],"1401":[47,36,47,40],"1409":[47,36,47,50],"1417":[47,56,47,67],"1425":[47,68,47,70],"1433":[47,72,47,80],"1441":[47,82,47,90],"1449":[47,52,47,91],"1457":[47,21,47,92],"1465":[47,21,47,93],"1473":[48,21,48,29],"1481":[48,30,48,34],"1489":[48,36,48,40],"1497":[48,21,48,41],"1505":[48,21,48,42],"1513":[49,28,49,33],"1521":[49,37,49,38],"1529":[50,25,50,36],"1537":[50,40,50,44],"1545":[51,43,51,53],"1553":[51,54,51,55],"1561":[51,56,51,94],"1569":[51,54,51,95],"1577":[51,39,51,96],"1585":[51,39,51,96],"1593":[51,25,51,97],"1601":[52,21,52,29],"1609":[52,30,52,41],"1617":[52,43,52,48],"1625":[52,21,52,49],"1633":[52,21,52,50],"1641":[34,83,54,14],"1649":[34,83,54,14],"1657":[34,83,54,14],"1665":[34,83,54,14],"1673":[34,83,54,14],"1681":[34,13,54,15],"1683":[34,13,34,27],"1689":[34,13,54,16],"1697":[26,23,55,10],"1705":[26,23,55,10],"1713":[26,23,55,10],"1721":[26,23,55,10],"1729":[26,23,55,10],"1737":[26,23,55,10],"1745":[26,23,55,10],"1753":[26,23,55,10],"1761":[56,9,56,16],"1769":[56,17,56,28],"1777":[56,17,56,36],"1779":[56,17,56,34],"1785":[56,9,56,37],"1793":[56,9,56,38],"1801":[16,24,58,2],"1809":[16,24,58,2],"1817":[16,24,58,2],"1825":[16,24,58,2],"1833":[16,24,58,2],"1841":[16,24,58,2],"1849":[16,24,58,2],"1857":[16,24,58,2],"1865":[16,24,58,2],"1873":[16,24,58,2],"1881":[16,24,58,2],"1889":[16,24,58,2],"1897":[16,24,58,2],"1905":[16,24,58,2],"1913":[16,24,58,2],"1921":[16,24,58,2],"1929":[16,1,58,2],"1937":[16,1,58,3],"1945":[60,17,60,22],"1953":[60,17,60,22],"1961":[60,17,60,22],"1969":[61,18,61,19],"1977":[61,18,61,19],"1985":[61,18,61,19],"1993":[61,21,61,22],"2001":[61,25,61,34],"2009":[61,25,61,41],"2025":[61,43,61,44],"2033":[61,43,61,46],"2049":[62,13,62,22],"2057":[62,23,62,24],"2065":[62,13,62,25],"2073":[62,32,62,39],"2081":[62,13,62,40],"2083":[62,13,62,31],"2089":[63,21,63,25],"2097":[63,21,63,25],"2105":[63,13,63,26],"2113":[67,10,67,15],"2121":[68,9,68,18],"2129":[68,24,68,31],"2137":[68,9,68,32],"2139":[68,9,68,23],"2145":[68,9,68,33],"2153":[59,22,69,2],"2161":[59,22,69,2],"2169":[59,22,69,2],"2177":[59,22,69,2],"2185":[59,22,69,2],"2193":[59,22,69,2],"2201":[59,22,69,2],"2209":[59,22,69,2],"2217":[59,22,69,2],"2225":[70,1,70,6],"2233":[70,1,70,16],"2241":[71,17,71,21],"2249":[71,17,71,31],"2257":[71,17,71,38],"2265":[71,17,71,38],"2273":[71,17,71,38],"2281":[72,9,72,14],"2289":[72,18,72,19],"2297":[73,16,73,24],"2305":[73,25,73,29],"2313":[73,31,73,35],"2321":[73,16,73,36],"2329":[73,16,73,36],"2337":[73,9,73,37],"2345":[74,18,74,19],"2353":[74,18,74,19],"2361":[74,18,74,19],"2369":[74,21,74,22],"2377":[74,25,74,29],"2385":[74,25,74,39],"2393":[74,25,74,46],"2409":[74,48,74,49],"2417":[74,48,74,51],"2433":[75,9,75,13],"2441":[75,19,75,25],"2449":[75,27,75,31],"2457":[75,33,75,37],"2465":[75,33,75,47],"2473":[75,48,75,49],"2481":[75,33,75,50],"2489":[75,33,75,53],"2497":[75,55,75,59],"2505":[75,55,75,69],"2513":[75,70,75,71],"2521":[75,55,75,72],"2529":[75,55,75,81],"2537":[75,83,75,87],"2545":[75,83,75,97],"2553":[75,98,75,99],"2561":[75,83,75,100],"2569":[75,83,75,109],"2577":[76,21,76,26],"2585":[76,29,76,30],"2593":[76,21,76,30],"2601":[76,13,76,31],"2609":[77,17,77,22],"2617":[77,26,77,27],"2625":[78,17,78,25],"2633":[78,26,78,30],"2641":[78,32,78,36],"2649":[78,17,78,37],"2657":[78,17,78,38],"2665":[75,111,80,10],"2673":[75,111,80,10],"2681":[75,111,80,10],"2689":[75,111,80,10],"2697":[75,111,80,10],"2705":[75,9,80,11],"2707":[75,9,75,18],"2713":[75,9,80,12],"2721":[70,34,82,2],"2729":[70,34,82,2],"2737":[70,34,82,2],"2745":[70,34,82,2],"2753":[70,34,82,2],"2761":[70,34,82,2],"2769":[70,34,82,2],"2777":[70,34,82,2],"2785":[70,1,82,2],"2793":[70,1,82,3],"2801":[83,1,83,7],"2809":[83,18,83,23],"2817":[83,1,83,23],"2825":[83,1,83,24],"2833":[1,1,83,24],"2841":[1,1,83,24],"2849":[1,1,83,24],"2857":[1,1,83,24],"2865":[1,1,83,24],"2873":[1,1,83,24],"2881":[1,1,83,24],"2889":[1,1,83,24],"2897":[1,1,83,24],"2905":[1,1,83,24],"2913":[5,19,9,2],"2921":[5,19,9,2],"2929":[10,31,12,2],"2937":[10,31,12,2],"2945":[13,13,15,2],"2953":[13,13,15,2],"2961":[20,5,21,37],"2969":[40,24,45,18],"2977":[38,24,45,18],"2985":[36,17,45,18],"2993":[50,21,51,97],"3001":[49,24,53,18],"3009":[46,17,53,18],"3017":[34,83,54,14],"3025":[34,83,54,14],"3033":[26,23,55,10],"3041":[26,23,55,10],"3049":[25,5,57,6],"3057":[16,24,58,2],"3065":[16,24,58,2],"3073":[62,9,65,10],"3081":[61,5,66,6],"3089":[61,5,66,6],"3097":[67,5,68,33],"3105":[59,22,69,2],"3113":[59,22,69,2],"3121":[72,5,73,37],"3129":[77,13,79,14],"3137":[75,111,80,10],"3145":[75,111,80,10],"3153":[74,5,81,6],"3161":[74,5,81,6],"3169":[70,34,82,2],"3177":[70,34,82,2],"3185":[1,1,83,24],"3193":[1,1,83,24],"nBranches":34,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/auth/plain.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/auth/plain_jalangi_.js","code":"\"use strict\";\n\nvar f = require('util').format\n  , crypto = require('crypto')\n  , Binary = require('bson').Binary\n  , MongoError = require('../error');\n\nvar AuthSession = function(db, username, password) {\n  this.db = db;\n  this.username = username;\n  this.password = password;\n}\n\nAuthSession.prototype.equal = function(session) {\n  return session.db == this.db \n    && session.username == this.username\n    && session.password == this.password;\n}\n\n/**\n * Creates a new Plain authentication mechanism\n * @class\n * @return {Plain} A cursor instance\n */\nvar Plain = function() {\n  this.authStore = [];\n}\n\n/**\n * Authenticate\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {Pool} pool Connection pool for this topology\n * @param {string} db Name of the database\n * @param {string} username Username\n * @param {string} password Password\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nPlain.prototype.auth = function(server, pool, db, username, password, callback) {\n  var self = this;\n  // Get all the connections\n  var connections = pool.getAll();\n  // Total connections\n  var count = connections.length;\n  if(count == 0) return callback(null, null);\n\n  // Valid connections\n  var numberOfValidConnections = 0;\n  var credentialsValid = false;\n  var errorObject = null;\n\n  // For each connection we need to authenticate\n  while(connections.length > 0) {    \n    // Execute MongoCR\n    var execute = function(connection) {\n      // Create payload\n      var payload = new Binary(f(\"\\x00%s\\x00%s\", username, password));\n\n      // Let's start the sasl process\n      var command = {\n          saslStart: 1\n        , mechanism: 'PLAIN'\n        , payload: payload\n        , autoAuthorize: 1\n      };\n\n      // Let's start the process\n      server.command(\"$external.$cmd\"\n        , command\n        , { connection: connection }, function(err, r) {\n        // Adjust count\n        count = count - 1;\n\n        // If we have an error\n        if(err) {\n          errorObject = err;\n        } else if(r.result['$err']) {\n          errorObject = r.result;\n        } else if(r.result['errmsg']) {\n          errorObject = r.result;\n        } else {\n          credentialsValid = true;\n          numberOfValidConnections = numberOfValidConnections + 1;\n        }\n\n        // We have authenticated all connections\n        if(count == 0 && numberOfValidConnections > 0) {\n          // Store the auth details\n          addAuthSession(self.authStore, new AuthSession(db, username, password));\n          // Return correct authentication\n          callback(null, true);\n        } else if(count == 0) {\n          if(errorObject == null) errorObject = new MongoError(f(\"failed to authenticate using mongocr\"));\n          callback(errorObject, false);\n        }\n      });\n    }\n\n    // Get the connection\n    execute(connections.shift());\n  }\n}\n\n// Add to store only if it does not exist\nvar addAuthSession = function(authStore, session) {\n  var found = false;\n\n  for(var i = 0; i < authStore.length; i++) {\n    if(authStore[i].equal(session)) {\n      found = true;\n      break;\n    }\n  }\n\n  if(!found) authStore.push(session);\n}\n\n/**\n * Re authenticate pool\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {Pool} pool Connection pool for this topology\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nPlain.prototype.reauthenticate = function(server, pool, callback) {\n  var count = this.authStore.length;\n  if(count == 0) return callback(null, null);\n  // Iterate over all the auth details stored\n  for(var i = 0; i < this.authStore.length; i++) {\n    this.auth(server, pool, this.authStore[i].db, this.authStore[i].username, this.authStore[i].password, function(err, r) {\n      count = count - 1;\n      // Done re-authenticating\n      if(count == 0) {\n        callback(null, null);\n      }\n    });\n  }\n}\n\n/**\n * This is a result from a authentication strategy\n *\n * @callback authResultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {boolean} result The result of the authentication process\n */\n\nmodule.exports = Plain;"};
jalangiLabel1857:
    while (true) {
        try {
            J$.Se(2833, '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/auth/plain_jalangi_.js', '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/auth/plain.js');
            J$.N(2841, '__secret__S$', __secret__S$, 0);
            J$.N(2849, '__secret__traits__', __secret__traits__, 0);
            J$.N(2857, 'f', f, 0);
            J$.N(2865, 'crypto', crypto, 0);
            J$.N(2873, 'Binary', Binary, 0);
            J$.N(2881, 'MongoError', MongoError, 0);
            J$.N(2889, 'AuthSession', AuthSession, 0);
            J$.N(2897, 'Plain', Plain, 0);
            J$.N(2905, 'addAuthSession', addAuthSession, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var f = J$.X1(217, J$.W(209, 'f', J$.G(121, J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'util', 21, false)), 'format', 0), f, 3)), crypto = J$.X1(233, J$.W(225, 'crypto', J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, 'crypto', 21, false)), crypto, 3)), Binary = J$.X1(249, J$.W(241, 'Binary', J$.G(177, J$.F(169, J$.R(153, 'require', require, 2), 0)(J$.T(161, 'bson', 21, false)), 'Binary', 0), Binary, 3)), MongoError = J$.X1(265, J$.W(257, 'MongoError', J$.F(201, J$.R(185, 'require', require, 2), 0)(J$.T(193, '../error', 21, false)), MongoError, 3));
            var AuthSession = J$.X1(425, J$.W(417, 'AuthSession', J$.T(409, function (db, username, password) {
                jalangiLabel1848:
                    while (true) {
                        try {
                            J$.Fe(369, arguments.callee, this, arguments);
                            arguments = J$.N(377, 'arguments', arguments, 4);
                            db = J$.N(385, 'db', db, 4);
                            username = J$.N(393, 'username', username, 4);
                            password = J$.N(401, 'password', password, 4);
                            J$.X1(297, J$.P(289, J$.R(273, 'this', this, 0), 'db', J$.R(281, 'db', db, 0), 0));
                            J$.X1(329, J$.P(321, J$.R(305, 'this', this, 0), 'username', J$.R(313, 'username', username, 0), 0));
                            J$.X1(361, J$.P(353, J$.R(337, 'this', this, 0), 'password', J$.R(345, 'password', password, 0), 0));
                        } catch (J$e) {
                            J$.Ex(2913, J$e);
                        } finally {
                            if (J$.Fr(2921))
                                continue jalangiLabel1848;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 369), AuthSession, 3));
            J$.X1(601, J$.P(593, J$.G(441, J$.R(433, 'AuthSession', AuthSession, 1), 'prototype', 0), 'equal', J$.T(585, function (session) {
                jalangiLabel1849:
                    while (true) {
                        try {
                            J$.Fe(561, arguments.callee, this, arguments);
                            arguments = J$.N(569, 'arguments', arguments, 4);
                            session = J$.N(577, 'session', session, 4);
                            return J$.X1(553, J$.Rt(545, J$.C(16, J$.C(8, J$.B(10, '==', J$.G(457, J$.R(449, 'session', session, 0), 'db', 0), J$.G(473, J$.R(465, 'this', this, 0), 'db', 0), 0)) ? J$.B(18, '==', J$.G(489, J$.R(481, 'session', session, 0), 'username', 0), J$.G(505, J$.R(497, 'this', this, 0), 'username', 0), 0) : J$._()) ? J$.B(26, '==', J$.G(521, J$.R(513, 'session', session, 0), 'password', 0), J$.G(537, J$.R(529, 'this', this, 0), 'password', 0), 0) : J$._()));
                        } catch (J$e) {
                            J$.Ex(2929, J$e);
                        } finally {
                            if (J$.Fr(2937))
                                continue jalangiLabel1849;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 561), 0));
            var Plain = J$.X1(673, J$.W(665, 'Plain', J$.T(657, function () {
                jalangiLabel1850:
                    while (true) {
                        try {
                            J$.Fe(641, arguments.callee, this, arguments);
                            arguments = J$.N(649, 'arguments', arguments, 4);
                            J$.X1(633, J$.P(625, J$.R(609, 'this', this, 0), 'authStore', J$.T(617, [], 10, false), 0));
                        } catch (J$e) {
                            J$.Ex(2945, J$e);
                        } finally {
                            if (J$.Fr(2953))
                                continue jalangiLabel1850;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 641), Plain, 3));
            J$.X1(1937, J$.P(1929, J$.G(689, J$.R(681, 'Plain', Plain, 1), 'prototype', 0), 'auth', J$.T(1921, function (server, pool, db, username, password, callback) {
                jalangiLabel1853:
                    while (true) {
                        try {
                            J$.Fe(1801, arguments.callee, this, arguments);
                            arguments = J$.N(1809, 'arguments', arguments, 4);
                            server = J$.N(1817, 'server', server, 4);
                            pool = J$.N(1825, 'pool', pool, 4);
                            db = J$.N(1833, 'db', db, 4);
                            username = J$.N(1841, 'username', username, 4);
                            password = J$.N(1849, 'password', password, 4);
                            callback = J$.N(1857, 'callback', callback, 4);
                            J$.N(1865, 'self', self, 0);
                            J$.N(1873, 'connections', connections, 0);
                            J$.N(1881, 'count', count, 0);
                            J$.N(1889, 'numberOfValidConnections', numberOfValidConnections, 0);
                            J$.N(1897, 'credentialsValid', credentialsValid, 0);
                            J$.N(1905, 'errorObject', errorObject, 0);
                            J$.N(1913, 'execute', execute, 0);
                            var self = J$.X1(713, J$.W(705, 'self', J$.R(697, 'this', this, 0), self, 1));
                            var connections = J$.X1(745, J$.W(737, 'connections', J$.M(729, J$.R(721, 'pool', pool, 0), 'getAll', 0)(), connections, 1));
                            var count = J$.X1(777, J$.W(769, 'count', J$.G(761, J$.R(753, 'connections', connections, 0), 'length', 0), count, 1));
                            if (J$.X1(2961, J$.C(24, J$.B(34, '==', J$.R(785, 'count', count, 0), J$.T(793, 0, 22, false), 0))))
                                return J$.X1(841, J$.Rt(833, J$.F(825, J$.R(801, 'callback', callback, 0), 0)(J$.T(809, null, 25, false), J$.T(817, null, 25, false))));
                            var numberOfValidConnections = J$.X1(865, J$.W(857, 'numberOfValidConnections', J$.T(849, 0, 22, false), numberOfValidConnections, 1));
                            var credentialsValid = J$.X1(889, J$.W(881, 'credentialsValid', J$.T(873, false, 23, false), credentialsValid, 1));
                            var errorObject = J$.X1(913, J$.W(905, 'errorObject', J$.T(897, null, 25, false), errorObject, 1));
                            while (J$.X1(3049, J$.C(88, J$.B(42, '>', J$.G(929, J$.R(921, 'connections', connections, 0), 'length', 0), J$.T(937, 0, 22, false), 0)))) {
                                var execute = J$.X1(1753, J$.W(1745, 'execute', J$.T(1737, function (connection) {
                                    jalangiLabel1852:
                                        while (true) {
                                            try {
                                                J$.Fe(1697, arguments.callee, this, arguments);
                                                arguments = J$.N(1705, 'arguments', arguments, 4);
                                                connection = J$.N(1713, 'connection', connection, 4);
                                                J$.N(1721, 'payload', payload, 0);
                                                J$.N(1729, 'command', command, 0);
                                                var payload = J$.X1(1009, J$.W(1001, 'payload', J$.F(993, J$.R(945, 'Binary', Binary, 1), 1)(J$.F(985, J$.R(953, 'f', f, 1), 0)(J$.T(961, '\0%s\0%s', 21, false), J$.R(969, 'username', username, 0), J$.R(977, 'password', password, 0))), payload, 1));
                                                var command = J$.X1(1065, J$.W(1057, 'command', J$.T(1049, {
                                                    saslStart: J$.T(1017, 1, 22, false),
                                                    mechanism: J$.T(1025, 'PLAIN', 21, false),
                                                    payload: J$.R(1033, 'payload', payload, 0),
                                                    autoAuthorize: J$.T(1041, 1, 22, false)
                                                }, 11, false), command, 1));
                                                J$.X1(1689, J$.M(1681, J$.R(1073, 'server', server, 0), 'command', 0)(J$.T(1081, '$external.$cmd', 21, false), J$.R(1089, 'command', command, 0), J$.T(1105, {
                                                    connection: J$.R(1097, 'connection', connection, 0)
                                                }, 11, false), J$.T(1673, function (err, r) {
                                                    jalangiLabel1851:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(1641, arguments.callee, this, arguments);
                                                                arguments = J$.N(1649, 'arguments', arguments, 4);
                                                                err = J$.N(1657, 'err', err, 4);
                                                                r = J$.N(1665, 'r', r, 4);
                                                                J$.X1(1137, count = J$.W(1129, 'count', J$.B(50, '-', J$.R(1113, 'count', count, 0), J$.T(1121, 1, 22, false), 0), count, 0));
                                                                if (J$.X1(2985, J$.C(48, J$.R(1145, 'err', err, 0)))) {
                                                                    J$.X1(1169, errorObject = J$.W(1161, 'errorObject', J$.R(1153, 'err', err, 0), errorObject, 0));
                                                                } else if (J$.X1(2977, J$.C(40, J$.G(1201, J$.G(1185, J$.R(1177, 'r', r, 0), 'result', 0), J$.T(1193, '$err', 21, false), 4)))) {
                                                                    J$.X1(1233, errorObject = J$.W(1225, 'errorObject', J$.G(1217, J$.R(1209, 'r', r, 0), 'result', 0), errorObject, 0));
                                                                } else if (J$.X1(2969, J$.C(32, J$.G(1265, J$.G(1249, J$.R(1241, 'r', r, 0), 'result', 0), J$.T(1257, 'errmsg', 21, false), 4)))) {
                                                                    J$.X1(1297, errorObject = J$.W(1289, 'errorObject', J$.G(1281, J$.R(1273, 'r', r, 0), 'result', 0), errorObject, 0));
                                                                } else {
                                                                    J$.X1(1321, credentialsValid = J$.W(1313, 'credentialsValid', J$.T(1305, true, 23, false), credentialsValid, 0));
                                                                    J$.X1(1353, numberOfValidConnections = J$.W(1345, 'numberOfValidConnections', J$.B(58, '+', J$.R(1329, 'numberOfValidConnections', numberOfValidConnections, 0), J$.T(1337, 1, 22, false), 0), numberOfValidConnections, 0));
                                                                }
                                                                if (J$.X1(3009, J$.C(80, J$.C(56, J$.B(66, '==', J$.R(1361, 'count', count, 0), J$.T(1369, 0, 22, false), 0)) ? J$.B(74, '>', J$.R(1377, 'numberOfValidConnections', numberOfValidConnections, 0), J$.T(1385, 0, 22, false), 0) : J$._()))) {
                                                                    J$.X1(1465, J$.F(1457, J$.R(1393, 'addAuthSession', addAuthSession, 1), 0)(J$.G(1409, J$.R(1401, 'self', self, 0), 'authStore', 0), J$.F(1449, J$.R(1417, 'AuthSession', AuthSession, 1), 1)(J$.R(1425, 'db', db, 0), J$.R(1433, 'username', username, 0), J$.R(1441, 'password', password, 0))));
                                                                    J$.X1(1505, J$.F(1497, J$.R(1473, 'callback', callback, 0), 0)(J$.T(1481, null, 25, false), J$.T(1489, true, 23, false)));
                                                                } else if (J$.X1(3001, J$.C(72, J$.B(82, '==', J$.R(1513, 'count', count, 0), J$.T(1521, 0, 22, false), 0)))) {
                                                                    if (J$.X1(2993, J$.C(64, J$.B(90, '==', J$.R(1529, 'errorObject', errorObject, 0), J$.T(1537, null, 25, false), 0))))
                                                                        J$.X1(1593, errorObject = J$.W(1585, 'errorObject', J$.F(1577, J$.R(1545, 'MongoError', MongoError, 1), 1)(J$.F(1569, J$.R(1553, 'f', f, 1), 0)(J$.T(1561, 'failed to authenticate using mongocr', 21, false))), errorObject, 0));
                                                                    J$.X1(1633, J$.F(1625, J$.R(1601, 'callback', callback, 0), 0)(J$.R(1609, 'errorObject', errorObject, 0), J$.T(1617, false, 23, false)));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(3017, J$e);
                                                            } finally {
                                                                if (J$.Fr(3025))
                                                                    continue jalangiLabel1851;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 1641)));
                                            } catch (J$e) {
                                                J$.Ex(3033, J$e);
                                            } finally {
                                                if (J$.Fr(3041))
                                                    continue jalangiLabel1852;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 1697), execute, 1));
                                J$.X1(1793, J$.F(1785, J$.R(1761, 'execute', execute, 0), 0)(J$.M(1777, J$.R(1769, 'connections', connections, 0), 'shift', 0)()));
                            }
                        } catch (J$e) {
                            J$.Ex(3057, J$e);
                        } finally {
                            if (J$.Fr(3065))
                                continue jalangiLabel1853;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1801), 0));
            var addAuthSession = J$.X1(2217, J$.W(2209, 'addAuthSession', J$.T(2201, function (authStore, session) {
                jalangiLabel1854:
                    while (true) {
                        try {
                            J$.Fe(2153, arguments.callee, this, arguments);
                            arguments = J$.N(2161, 'arguments', arguments, 4);
                            authStore = J$.N(2169, 'authStore', authStore, 4);
                            session = J$.N(2177, 'session', session, 4);
                            J$.N(2185, 'found', found, 0);
                            J$.N(2193, 'i', i, 0);
                            var found = J$.X1(1961, J$.W(1953, 'found', J$.T(1945, false, 23, false), found, 1));
                            for (var i = J$.X1(1985, J$.W(1977, 'i', J$.T(1969, 0, 22, false), i, 1)); J$.X1(3081, J$.C(104, J$.B(98, '<', J$.R(1993, 'i', i, 0), J$.G(2009, J$.R(2001, 'authStore', authStore, 0), 'length', 0), 0))); J$.X1(3089, J$.B(122, '-', i = J$.W(2033, 'i', J$.B(114, '+', J$.U(106, '+', J$.R(2025, 'i', i, 0)), J$.T(2017, 1, 22, false), 0), i, 0), J$.T(2041, 1, 22, false), 0))) {
                                if (J$.X1(3073, J$.C(96, J$.M(2081, J$.G(2065, J$.R(2049, 'authStore', authStore, 0), J$.R(2057, 'i', i, 0), 4), 'equal', 0)(J$.R(2073, 'session', session, 0))))) {
                                    J$.X1(2105, found = J$.W(2097, 'found', J$.T(2089, true, 23, false), found, 0));
                                    break;
                                }
                            }
                            if (J$.X1(3097, J$.C(112, J$.U(130, '!', J$.R(2113, 'found', found, 0)))))
                                J$.X1(2145, J$.M(2137, J$.R(2121, 'authStore', authStore, 0), 'push', 0)(J$.R(2129, 'session', session, 0)));
                        } catch (J$e) {
                            J$.Ex(3105, J$e);
                        } finally {
                            if (J$.Fr(3113))
                                continue jalangiLabel1854;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2153), addAuthSession, 3));
            J$.X1(2793, J$.P(2785, J$.G(2233, J$.R(2225, 'Plain', Plain, 1), 'prototype', 0), 'reauthenticate', J$.T(2777, function (server, pool, callback) {
                jalangiLabel1856:
                    while (true) {
                        try {
                            J$.Fe(2721, arguments.callee, this, arguments);
                            arguments = J$.N(2729, 'arguments', arguments, 4);
                            server = J$.N(2737, 'server', server, 4);
                            pool = J$.N(2745, 'pool', pool, 4);
                            callback = J$.N(2753, 'callback', callback, 4);
                            J$.N(2761, 'count', count, 0);
                            J$.N(2769, 'i', i, 0);
                            var count = J$.X1(2273, J$.W(2265, 'count', J$.G(2257, J$.G(2249, J$.R(2241, 'this', this, 0), 'authStore', 0), 'length', 0), count, 1));
                            if (J$.X1(3121, J$.C(120, J$.B(138, '==', J$.R(2281, 'count', count, 0), J$.T(2289, 0, 22, false), 0))))
                                return J$.X1(2337, J$.Rt(2329, J$.F(2321, J$.R(2297, 'callback', callback, 0), 0)(J$.T(2305, null, 25, false), J$.T(2313, null, 25, false))));
                            for (var i = J$.X1(2361, J$.W(2353, 'i', J$.T(2345, 0, 22, false), i, 1)); J$.X1(3153, J$.C(136, J$.B(146, '<', J$.R(2369, 'i', i, 0), J$.G(2393, J$.G(2385, J$.R(2377, 'this', this, 0), 'authStore', 0), 'length', 0), 0))); J$.X1(3161, J$.B(170, '-', i = J$.W(2417, 'i', J$.B(162, '+', J$.U(154, '+', J$.R(2409, 'i', i, 0)), J$.T(2401, 1, 22, false), 0), i, 0), J$.T(2425, 1, 22, false), 0))) {
                                J$.X1(2713, J$.M(2705, J$.R(2433, 'this', this, 0), 'auth', 0)(J$.R(2441, 'server', server, 0), J$.R(2449, 'pool', pool, 0), J$.G(2489, J$.G(2481, J$.G(2465, J$.R(2457, 'this', this, 0), 'authStore', 0), J$.R(2473, 'i', i, 0), 4), 'db', 0), J$.G(2529, J$.G(2521, J$.G(2505, J$.R(2497, 'this', this, 0), 'authStore', 0), J$.R(2513, 'i', i, 0), 4), 'username', 0), J$.G(2569, J$.G(2561, J$.G(2545, J$.R(2537, 'this', this, 0), 'authStore', 0), J$.R(2553, 'i', i, 0), 4), 'password', 0), J$.T(2697, function (err, r) {
                                    jalangiLabel1855:
                                        while (true) {
                                            try {
                                                J$.Fe(2665, arguments.callee, this, arguments);
                                                arguments = J$.N(2673, 'arguments', arguments, 4);
                                                err = J$.N(2681, 'err', err, 4);
                                                r = J$.N(2689, 'r', r, 4);
                                                J$.X1(2601, count = J$.W(2593, 'count', J$.B(178, '-', J$.R(2577, 'count', count, 0), J$.T(2585, 1, 22, false), 0), count, 0));
                                                if (J$.X1(3129, J$.C(128, J$.B(186, '==', J$.R(2609, 'count', count, 0), J$.T(2617, 0, 22, false), 0)))) {
                                                    J$.X1(2657, J$.F(2649, J$.R(2625, 'callback', callback, 0), 0)(J$.T(2633, null, 25, false), J$.T(2641, null, 25, false)));
                                                }
                                            } catch (J$e) {
                                                J$.Ex(3137, J$e);
                                            } finally {
                                                if (J$.Fr(3145))
                                                    continue jalangiLabel1855;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 2665)));
                            }
                        } catch (J$e) {
                            J$.Ex(3169, J$e);
                        } finally {
                            if (J$.Fr(3177))
                                continue jalangiLabel1856;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2721), 0));
            J$.X1(2825, J$.P(2817, J$.R(2801, 'module', module, 2), 'exports', J$.R(2809, 'Plain', Plain, 1), 0));
        } catch (J$e) {
            J$.Ex(3185, J$e);
        } finally {
            if (J$.Sr(3193)) {
                J$.L();
                continue jalangiLabel1857;
            } else {
                J$.L();
                break jalangiLabel1857;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
