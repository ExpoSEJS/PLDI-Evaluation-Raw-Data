J$.iids = {"8":[11,12,11,70],"9":[1,20,1,27],"10":[11,12,11,33],"16":[11,12,11,107],"17":[1,28,1,32],"18":[11,37,11,70],"24":[20,9,20,19],"25":[1,20,1,33],"26":[11,74,11,107],"32":[38,28,38,46],"33":[1,20,1,33],"34":[20,9,20,19],"40":[36,28,36,44],"41":[1,20,1,33],"42":[25,12,25,34],"48":[34,21,34,24],"49":[2,26,2,38],"50":[33,25,33,34],"56":[44,21,44,63],"57":[2,26,2,45],"58":[42,48,42,76],"64":[48,25,48,44],"65":[2,26,2,45],"66":[44,21,44,31],"72":[47,28,47,38],"73":[2,26,2,45],"74":[44,35,44,63],"80":[44,21,44,63],"81":[3,1,3,13],"82":[47,28,47,38],"88":[25,12,25,34],"89":[3,1,3,14],"90":[48,25,48,44],"96":[60,13,60,40],"97":[4,9,4,16],"98":[59,21,59,41],"104":[59,21,59,41],"105":[4,17,4,23],"106":[59,43,59,46],"112":[65,9,65,15],"113":[4,9,4,24],"120":[70,9,70,19],"121":[4,9,4,31],"122":[59,43,59,46],"128":[75,17,75,27],"129":[4,42,4,49],"130":[65,9,65,15],"136":[72,21,72,46],"137":[4,50,4,58],"138":[70,9,70,19],"145":[4,42,4,59],"146":[72,21,72,46],"153":[4,74,4,81],"154":[72,48,72,51],"161":[4,82,4,92],"169":[4,74,4,93],"170":[72,48,72,51],"177":[4,9,4,31],"178":[74,21,74,30],"185":[4,9,4,31],"186":[75,17,75,27],"193":[4,42,4,59],"201":[4,42,4,59],"209":[4,74,4,93],"217":[4,74,4,93],"225":[6,5,6,9],"233":[6,15,6,17],"241":[6,5,6,17],"249":[6,5,6,18],"257":[7,5,7,9],"265":[7,21,7,29],"273":[7,5,7,29],"281":[7,5,7,30],"289":[8,5,8,9],"297":[8,21,8,29],"305":[8,5,8,29],"313":[8,5,8,30],"321":[5,19,9,2],"329":[5,19,9,2],"337":[5,19,9,2],"345":[5,19,9,2],"353":[5,19,9,2],"361":[5,19,9,2],"369":[5,19,9,2],"377":[5,19,9,2],"385":[10,1,10,12],"393":[10,1,10,22],"401":[11,12,11,19],"409":[11,12,11,22],"417":[11,26,11,30],"425":[11,26,11,33],"433":[11,37,11,44],"441":[11,37,11,53],"449":[11,57,11,61],"457":[11,57,11,70],"465":[11,74,11,81],"473":[11,74,11,90],"481":[11,94,11,98],"489":[11,94,11,107],"497":[11,12,11,107],"505":[11,5,11,108],"513":[10,31,12,2],"521":[10,31,12,2],"529":[10,31,12,2],"537":[10,31,12,2],"545":[10,1,12,2],"553":[10,1,12,3],"561":[14,5,14,9],"569":[14,22,14,24],"577":[14,5,14,24],"585":[14,5,14,25],"593":[13,12,15,2],"601":[13,12,15,2],"609":[13,12,15,2],"617":[13,12,15,2],"625":[13,12,15,2],"633":[16,1,16,5],"641":[16,1,16,15],"649":[17,16,17,20],"657":[17,16,17,20],"665":[17,16,17,20],"673":[18,23,18,27],"681":[18,23,18,36],"683":[18,23,18,34],"689":[18,23,18,36],"697":[18,23,18,36],"705":[19,17,19,28],"713":[19,17,19,35],"721":[19,17,19,35],"729":[19,17,19,35],"737":[20,9,20,14],"745":[20,18,20,19],"753":[21,16,21,24],"761":[21,25,21,29],"769":[21,31,21,35],"777":[21,16,21,36],"785":[21,16,21,36],"793":[21,9,21,37],"801":[22,36,22,37],"809":[22,36,22,37],"817":[22,36,22,37],"825":[23,28,23,33],"833":[23,28,23,33],"841":[23,28,23,33],"849":[24,23,24,27],"857":[24,23,24,27],"865":[24,23,24,27],"873":[25,12,25,23],"881":[25,12,25,30],"889":[25,33,25,34],"897":[28,31,28,32],"905":[29,28,29,42],"913":[30,23,30,31],"921":[27,27,31,14],"929":[27,27,31,14],"937":[27,27,31,14],"945":[32,13,32,19],"953":[32,28,32,44],"961":[32,46,32,53],"969":[32,69,32,79],"977":[32,55,32,81],"985":[33,25,33,30],"993":[33,33,33,34],"1001":[33,25,33,34],"1009":[33,17,33,35],"1017":[34,21,34,24],"1025":[35,35,35,38],"1033":[35,35,35,38],"1041":[35,21,35,39],"1049":[36,28,36,29],"1057":[36,28,36,36],"1065":[36,37,36,43],"1073":[36,28,36,44],"1081":[37,35,37,36],"1089":[37,35,37,43],"1097":[37,35,37,43],"1105":[37,21,37,44],"1113":[38,28,38,29],"1121":[38,28,38,36],"1129":[38,37,38,45],"1137":[38,28,38,46],"1145":[39,35,39,36],"1153":[39,35,39,43],"1161":[39,35,39,43],"1169":[39,21,39,44],"1177":[41,40,41,44],"1185":[41,40,41,44],"1193":[41,21,41,45],"1201":[42,48,42,72],"1209":[42,75,42,76],"1217":[42,48,42,76],"1225":[42,21,42,77],"1233":[44,21,44,26],"1241":[44,30,44,31],"1249":[44,35,44,59],"1257":[44,62,44,63],"1265":[45,21,45,35],"1273":[45,36,45,40],"1281":[45,36,45,50],"1289":[45,56,45,67],"1297":[45,68,45,70],"1305":[45,72,45,80],"1313":[45,82,45,90],"1321":[45,52,45,91],"1329":[45,21,45,92],"1337":[45,21,45,93],"1345":[46,21,46,29],"1353":[46,30,46,34],"1361":[46,36,46,40],"1369":[46,21,46,41],"1377":[46,21,46,42],"1385":[47,28,47,33],"1393":[47,37,47,38],"1401":[48,25,48,36],"1409":[48,40,48,44],"1417":[49,43,49,53],"1425":[49,54,49,55],"1433":[49,56,49,94],"1441":[49,54,49,95],"1449":[49,39,49,96],"1457":[49,39,49,96],"1465":[49,25,49,97],"1473":[50,21,50,29],"1481":[50,30,50,41],"1489":[50,43,50,48],"1497":[50,21,50,49],"1505":[50,21,50,50],"1513":[32,83,52,14],"1521":[32,83,52,14],"1529":[32,83,52,14],"1537":[32,83,52,14],"1545":[32,83,52,14],"1553":[32,13,52,15],"1555":[32,13,32,27],"1561":[32,13,52,16],"1569":[26,23,53,10],"1577":[26,23,53,10],"1585":[26,23,53,10],"1593":[26,23,53,10],"1601":[26,23,53,10],"1609":[26,23,53,10],"1617":[26,23,53,10],"1625":[54,9,54,16],"1633":[54,17,54,28],"1641":[54,17,54,36],"1643":[54,17,54,34],"1649":[54,9,54,37],"1657":[54,9,54,38],"1665":[16,23,56,2],"1673":[16,23,56,2],"1681":[16,23,56,2],"1689":[16,23,56,2],"1697":[16,23,56,2],"1705":[16,23,56,2],"1713":[16,23,56,2],"1721":[16,23,56,2],"1729":[16,23,56,2],"1737":[16,23,56,2],"1745":[16,23,56,2],"1753":[16,23,56,2],"1761":[16,23,56,2],"1769":[16,23,56,2],"1777":[16,23,56,2],"1785":[16,23,56,2],"1793":[16,1,56,2],"1801":[16,1,56,3],"1809":[58,17,58,22],"1817":[58,17,58,22],"1825":[58,17,58,22],"1833":[59,18,59,19],"1841":[59,18,59,19],"1849":[59,18,59,19],"1857":[59,21,59,22],"1865":[59,25,59,34],"1873":[59,25,59,41],"1889":[59,43,59,44],"1897":[59,43,59,46],"1913":[60,13,60,22],"1921":[60,23,60,24],"1929":[60,13,60,25],"1937":[60,32,60,39],"1945":[60,13,60,40],"1947":[60,13,60,31],"1953":[61,21,61,25],"1961":[61,21,61,25],"1969":[61,13,61,26],"1977":[65,10,65,15],"1985":[66,9,66,18],"1993":[66,24,66,31],"2001":[66,9,66,32],"2003":[66,9,66,23],"2009":[66,9,66,33],"2017":[57,22,67,2],"2025":[57,22,67,2],"2033":[57,22,67,2],"2041":[57,22,67,2],"2049":[57,22,67,2],"2057":[57,22,67,2],"2065":[57,22,67,2],"2073":[57,22,67,2],"2081":[57,22,67,2],"2089":[68,1,68,5],"2097":[68,1,68,15],"2105":[69,17,69,21],"2113":[69,17,69,31],"2121":[69,17,69,38],"2129":[69,17,69,38],"2137":[69,17,69,38],"2145":[70,9,70,14],"2153":[70,18,70,19],"2161":[71,16,71,24],"2169":[71,25,71,29],"2177":[71,31,71,35],"2185":[71,16,71,36],"2193":[71,16,71,36],"2201":[71,9,71,37],"2209":[72,18,72,19],"2217":[72,18,72,19],"2225":[72,18,72,19],"2233":[72,21,72,22],"2241":[72,25,72,29],"2249":[72,25,72,39],"2257":[72,25,72,46],"2273":[72,48,72,49],"2281":[72,48,72,51],"2297":[73,9,73,13],"2305":[73,19,73,25],"2313":[73,27,73,31],"2321":[73,33,73,37],"2329":[73,33,73,47],"2337":[73,48,73,49],"2345":[73,33,73,50],"2353":[73,33,73,53],"2361":[73,55,73,59],"2369":[73,55,73,69],"2377":[73,70,73,71],"2385":[73,55,73,72],"2393":[73,55,73,81],"2401":[73,83,73,87],"2409":[73,83,73,97],"2417":[73,98,73,99],"2425":[73,83,73,100],"2433":[73,83,73,109],"2441":[74,21,74,26],"2449":[74,29,74,30],"2457":[74,21,74,30],"2465":[74,13,74,31],"2473":[75,17,75,22],"2481":[75,26,75,27],"2489":[76,17,76,25],"2497":[76,26,76,30],"2505":[76,32,76,36],"2513":[76,17,76,37],"2521":[76,17,76,38],"2529":[73,111,78,10],"2537":[73,111,78,10],"2545":[73,111,78,10],"2553":[73,111,78,10],"2561":[73,111,78,10],"2569":[73,9,78,11],"2571":[73,9,73,18],"2577":[73,9,78,12],"2585":[68,33,80,2],"2593":[68,33,80,2],"2601":[68,33,80,2],"2609":[68,33,80,2],"2617":[68,33,80,2],"2625":[68,33,80,2],"2633":[68,33,80,2],"2641":[68,33,80,2],"2649":[68,1,80,2],"2657":[68,1,80,3],"2665":[81,1,81,7],"2673":[81,18,81,22],"2681":[81,1,81,22],"2689":[81,1,81,23],"2697":[1,1,81,23],"2705":[1,1,81,23],"2713":[1,1,81,23],"2721":[1,1,81,23],"2729":[1,1,81,23],"2737":[1,1,81,23],"2745":[1,1,81,23],"2753":[1,1,81,23],"2761":[1,1,81,23],"2769":[5,19,9,2],"2777":[5,19,9,2],"2785":[10,31,12,2],"2793":[10,31,12,2],"2801":[13,12,15,2],"2809":[13,12,15,2],"2817":[20,5,21,37],"2825":[38,24,43,18],"2833":[36,24,43,18],"2841":[34,17,43,18],"2849":[48,21,49,97],"2857":[47,24,51,18],"2865":[44,17,51,18],"2873":[32,83,52,14],"2881":[32,83,52,14],"2889":[26,23,53,10],"2897":[26,23,53,10],"2905":[25,5,55,6],"2913":[16,23,56,2],"2921":[16,23,56,2],"2929":[60,9,63,10],"2937":[59,5,64,6],"2945":[59,5,64,6],"2953":[65,5,66,33],"2961":[57,22,67,2],"2969":[57,22,67,2],"2977":[70,5,71,37],"2985":[75,13,77,14],"2993":[73,111,78,10],"3001":[73,111,78,10],"3009":[72,5,79,6],"3017":[72,5,79,6],"3025":[68,33,80,2],"3033":[68,33,80,2],"3041":[1,1,81,23],"3049":[1,1,81,23],"nBranches":34,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/auth/x509.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/auth/x509_jalangi_.js","code":"\"use strict\";\n\nvar f = require('util').format\n  , crypto = require('crypto')\n  , MongoError = require('../error');\n\nvar AuthSession = function(db, username, password) {\n  this.db = db;\n  this.username = username;\n  this.password = password;\n}\n\nAuthSession.prototype.equal = function(session) {\n  return session.db == this.db \n    && session.username == this.username\n    && session.password == this.password;\n}\n\n/**\n * Creates a new X509 authentication mechanism\n * @class\n * @return {X509} A cursor instance\n */\nvar X509 = function() {\n  this.authStore = [];\n}\n\n/**\n * Authenticate\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {Pool} pool Connection pool for this topology\n * @param {string} db Name of the database\n * @param {string} username Username\n * @param {string} password Password\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nX509.prototype.auth = function(server, pool, db, username, password, callback) {\n  var self = this;\n  // Get all the connections\n  var connections = pool.getAll();\n  // Total connections\n  var count = connections.length;\n  if(count == 0) return callback(null, null);\n\n  // Valid connections\n  var numberOfValidConnections = 0;\n  var credentialsValid = false;\n  var errorObject = null;\n\n  // For each connection we need to authenticate\n  while(connections.length > 0) {    \n    // Execute MongoCR\n    var execute = function(connection) {\n      // Let's start the sasl process\n      var command = {\n          authenticate: 1\n        , mechanism: 'MONGODB-X509'\n        , user: username\n      };\n\n      // Let's start the process\n      server.command(\"$external.$cmd\"\n        , command\n        , { connection: connection }, function(err, r) {\n        // Adjust count\n        count = count - 1;\n\n        // If we have an error\n        if(err) {\n          errorObject = err;\n        } else if(r.result['$err']) {\n          errorObject = r.result;\n        } else if(r.result['errmsg']) {\n          errorObject = r.result;\n        } else {\n          credentialsValid = true;\n          numberOfValidConnections = numberOfValidConnections + 1;\n        }\n\n        // We have authenticated all connections\n        if(count == 0 && numberOfValidConnections > 0) {\n          // Store the auth details\n          addAuthSession(self.authStore, new AuthSession(db, username, password));\n          // Return correct authentication\n          callback(null, true);\n        } else if(count == 0) {\n          if(errorObject == null) errorObject = new MongoError(f(\"failed to authenticate using mongocr\"));\n          callback(errorObject, false);\n        }\n      });\n    }\n\n    // Get the connection\n    execute(connections.shift());\n  }\n}\n\n// Add to store only if it does not exist\nvar addAuthSession = function(authStore, session) {\n  var found = false;\n\n  for(var i = 0; i < authStore.length; i++) {\n    if(authStore[i].equal(session)) {\n      found = true;\n      break;\n    }\n  }\n\n  if(!found) authStore.push(session);\n}\n\n/**\n * Re authenticate pool\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {Pool} pool Connection pool for this topology\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nX509.prototype.reauthenticate = function(server, pool, callback) {\n  var count = this.authStore.length;\n  if(count == 0) return callback(null, null);\n  // Iterate over all the auth details stored\n  for(var i = 0; i < this.authStore.length; i++) {\n    this.auth(server, pool, this.authStore[i].db, this.authStore[i].username, this.authStore[i].password, function(err, r) {\n      count = count - 1;\n      // Done re-authenticating\n      if(count == 0) {\n        callback(null, null);\n      }\n    });\n  }\n}\n\n/**\n * This is a result from a authentication strategy\n *\n * @callback authResultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {boolean} result The result of the authentication process\n */\n\nmodule.exports = X509;"};
jalangiLabel1847:
    while (true) {
        try {
            J$.Se(2697, '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/auth/x509_jalangi_.js', '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/auth/x509.js');
            J$.N(2705, '__secret__S$', __secret__S$, 0);
            J$.N(2713, '__secret__traits__', __secret__traits__, 0);
            J$.N(2721, 'f', f, 0);
            J$.N(2729, 'crypto', crypto, 0);
            J$.N(2737, 'MongoError', MongoError, 0);
            J$.N(2745, 'AuthSession', AuthSession, 0);
            J$.N(2753, 'X509', X509, 0);
            J$.N(2761, 'addAuthSession', addAuthSession, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var f = J$.X1(185, J$.W(177, 'f', J$.G(121, J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'util', 21, false)), 'format', 0), f, 3)), crypto = J$.X1(201, J$.W(193, 'crypto', J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, 'crypto', 21, false)), crypto, 3)), MongoError = J$.X1(217, J$.W(209, 'MongoError', J$.F(169, J$.R(153, 'require', require, 2), 0)(J$.T(161, '../error', 21, false)), MongoError, 3));
            var AuthSession = J$.X1(377, J$.W(369, 'AuthSession', J$.T(361, function (db, username, password) {
                jalangiLabel1838:
                    while (true) {
                        try {
                            J$.Fe(321, arguments.callee, this, arguments);
                            arguments = J$.N(329, 'arguments', arguments, 4);
                            db = J$.N(337, 'db', db, 4);
                            username = J$.N(345, 'username', username, 4);
                            password = J$.N(353, 'password', password, 4);
                            J$.X1(249, J$.P(241, J$.R(225, 'this', this, 0), 'db', J$.R(233, 'db', db, 0), 0));
                            J$.X1(281, J$.P(273, J$.R(257, 'this', this, 0), 'username', J$.R(265, 'username', username, 0), 0));
                            J$.X1(313, J$.P(305, J$.R(289, 'this', this, 0), 'password', J$.R(297, 'password', password, 0), 0));
                        } catch (J$e) {
                            J$.Ex(2769, J$e);
                        } finally {
                            if (J$.Fr(2777))
                                continue jalangiLabel1838;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 321), AuthSession, 3));
            J$.X1(553, J$.P(545, J$.G(393, J$.R(385, 'AuthSession', AuthSession, 1), 'prototype', 0), 'equal', J$.T(537, function (session) {
                jalangiLabel1839:
                    while (true) {
                        try {
                            J$.Fe(513, arguments.callee, this, arguments);
                            arguments = J$.N(521, 'arguments', arguments, 4);
                            session = J$.N(529, 'session', session, 4);
                            return J$.X1(505, J$.Rt(497, J$.C(16, J$.C(8, J$.B(10, '==', J$.G(409, J$.R(401, 'session', session, 0), 'db', 0), J$.G(425, J$.R(417, 'this', this, 0), 'db', 0), 0)) ? J$.B(18, '==', J$.G(441, J$.R(433, 'session', session, 0), 'username', 0), J$.G(457, J$.R(449, 'this', this, 0), 'username', 0), 0) : J$._()) ? J$.B(26, '==', J$.G(473, J$.R(465, 'session', session, 0), 'password', 0), J$.G(489, J$.R(481, 'this', this, 0), 'password', 0), 0) : J$._()));
                        } catch (J$e) {
                            J$.Ex(2785, J$e);
                        } finally {
                            if (J$.Fr(2793))
                                continue jalangiLabel1839;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 513), 0));
            var X509 = J$.X1(625, J$.W(617, 'X509', J$.T(609, function () {
                jalangiLabel1840:
                    while (true) {
                        try {
                            J$.Fe(593, arguments.callee, this, arguments);
                            arguments = J$.N(601, 'arguments', arguments, 4);
                            J$.X1(585, J$.P(577, J$.R(561, 'this', this, 0), 'authStore', J$.T(569, [], 10, false), 0));
                        } catch (J$e) {
                            J$.Ex(2801, J$e);
                        } finally {
                            if (J$.Fr(2809))
                                continue jalangiLabel1840;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 593), X509, 3));
            J$.X1(1801, J$.P(1793, J$.G(641, J$.R(633, 'X509', X509, 1), 'prototype', 0), 'auth', J$.T(1785, function (server, pool, db, username, password, callback) {
                jalangiLabel1843:
                    while (true) {
                        try {
                            J$.Fe(1665, arguments.callee, this, arguments);
                            arguments = J$.N(1673, 'arguments', arguments, 4);
                            server = J$.N(1681, 'server', server, 4);
                            pool = J$.N(1689, 'pool', pool, 4);
                            db = J$.N(1697, 'db', db, 4);
                            username = J$.N(1705, 'username', username, 4);
                            password = J$.N(1713, 'password', password, 4);
                            callback = J$.N(1721, 'callback', callback, 4);
                            J$.N(1729, 'self', self, 0);
                            J$.N(1737, 'connections', connections, 0);
                            J$.N(1745, 'count', count, 0);
                            J$.N(1753, 'numberOfValidConnections', numberOfValidConnections, 0);
                            J$.N(1761, 'credentialsValid', credentialsValid, 0);
                            J$.N(1769, 'errorObject', errorObject, 0);
                            J$.N(1777, 'execute', execute, 0);
                            var self = J$.X1(665, J$.W(657, 'self', J$.R(649, 'this', this, 0), self, 1));
                            var connections = J$.X1(697, J$.W(689, 'connections', J$.M(681, J$.R(673, 'pool', pool, 0), 'getAll', 0)(), connections, 1));
                            var count = J$.X1(729, J$.W(721, 'count', J$.G(713, J$.R(705, 'connections', connections, 0), 'length', 0), count, 1));
                            if (J$.X1(2817, J$.C(24, J$.B(34, '==', J$.R(737, 'count', count, 0), J$.T(745, 0, 22, false), 0))))
                                return J$.X1(793, J$.Rt(785, J$.F(777, J$.R(753, 'callback', callback, 0), 0)(J$.T(761, null, 25, false), J$.T(769, null, 25, false))));
                            var numberOfValidConnections = J$.X1(817, J$.W(809, 'numberOfValidConnections', J$.T(801, 0, 22, false), numberOfValidConnections, 1));
                            var credentialsValid = J$.X1(841, J$.W(833, 'credentialsValid', J$.T(825, false, 23, false), credentialsValid, 1));
                            var errorObject = J$.X1(865, J$.W(857, 'errorObject', J$.T(849, null, 25, false), errorObject, 1));
                            while (J$.X1(2905, J$.C(88, J$.B(42, '>', J$.G(881, J$.R(873, 'connections', connections, 0), 'length', 0), J$.T(889, 0, 22, false), 0)))) {
                                var execute = J$.X1(1617, J$.W(1609, 'execute', J$.T(1601, function (connection) {
                                    jalangiLabel1842:
                                        while (true) {
                                            try {
                                                J$.Fe(1569, arguments.callee, this, arguments);
                                                arguments = J$.N(1577, 'arguments', arguments, 4);
                                                connection = J$.N(1585, 'connection', connection, 4);
                                                J$.N(1593, 'command', command, 0);
                                                var command = J$.X1(937, J$.W(929, 'command', J$.T(921, {
                                                    authenticate: J$.T(897, 1, 22, false),
                                                    mechanism: J$.T(905, 'MONGODB-X509', 21, false),
                                                    user: J$.R(913, 'username', username, 0)
                                                }, 11, false), command, 1));
                                                J$.X1(1561, J$.M(1553, J$.R(945, 'server', server, 0), 'command', 0)(J$.T(953, '$external.$cmd', 21, false), J$.R(961, 'command', command, 0), J$.T(977, {
                                                    connection: J$.R(969, 'connection', connection, 0)
                                                }, 11, false), J$.T(1545, function (err, r) {
                                                    jalangiLabel1841:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(1513, arguments.callee, this, arguments);
                                                                arguments = J$.N(1521, 'arguments', arguments, 4);
                                                                err = J$.N(1529, 'err', err, 4);
                                                                r = J$.N(1537, 'r', r, 4);
                                                                J$.X1(1009, count = J$.W(1001, 'count', J$.B(50, '-', J$.R(985, 'count', count, 0), J$.T(993, 1, 22, false), 0), count, 0));
                                                                if (J$.X1(2841, J$.C(48, J$.R(1017, 'err', err, 0)))) {
                                                                    J$.X1(1041, errorObject = J$.W(1033, 'errorObject', J$.R(1025, 'err', err, 0), errorObject, 0));
                                                                } else if (J$.X1(2833, J$.C(40, J$.G(1073, J$.G(1057, J$.R(1049, 'r', r, 0), 'result', 0), J$.T(1065, '$err', 21, false), 4)))) {
                                                                    J$.X1(1105, errorObject = J$.W(1097, 'errorObject', J$.G(1089, J$.R(1081, 'r', r, 0), 'result', 0), errorObject, 0));
                                                                } else if (J$.X1(2825, J$.C(32, J$.G(1137, J$.G(1121, J$.R(1113, 'r', r, 0), 'result', 0), J$.T(1129, 'errmsg', 21, false), 4)))) {
                                                                    J$.X1(1169, errorObject = J$.W(1161, 'errorObject', J$.G(1153, J$.R(1145, 'r', r, 0), 'result', 0), errorObject, 0));
                                                                } else {
                                                                    J$.X1(1193, credentialsValid = J$.W(1185, 'credentialsValid', J$.T(1177, true, 23, false), credentialsValid, 0));
                                                                    J$.X1(1225, numberOfValidConnections = J$.W(1217, 'numberOfValidConnections', J$.B(58, '+', J$.R(1201, 'numberOfValidConnections', numberOfValidConnections, 0), J$.T(1209, 1, 22, false), 0), numberOfValidConnections, 0));
                                                                }
                                                                if (J$.X1(2865, J$.C(80, J$.C(56, J$.B(66, '==', J$.R(1233, 'count', count, 0), J$.T(1241, 0, 22, false), 0)) ? J$.B(74, '>', J$.R(1249, 'numberOfValidConnections', numberOfValidConnections, 0), J$.T(1257, 0, 22, false), 0) : J$._()))) {
                                                                    J$.X1(1337, J$.F(1329, J$.R(1265, 'addAuthSession', addAuthSession, 1), 0)(J$.G(1281, J$.R(1273, 'self', self, 0), 'authStore', 0), J$.F(1321, J$.R(1289, 'AuthSession', AuthSession, 1), 1)(J$.R(1297, 'db', db, 0), J$.R(1305, 'username', username, 0), J$.R(1313, 'password', password, 0))));
                                                                    J$.X1(1377, J$.F(1369, J$.R(1345, 'callback', callback, 0), 0)(J$.T(1353, null, 25, false), J$.T(1361, true, 23, false)));
                                                                } else if (J$.X1(2857, J$.C(72, J$.B(82, '==', J$.R(1385, 'count', count, 0), J$.T(1393, 0, 22, false), 0)))) {
                                                                    if (J$.X1(2849, J$.C(64, J$.B(90, '==', J$.R(1401, 'errorObject', errorObject, 0), J$.T(1409, null, 25, false), 0))))
                                                                        J$.X1(1465, errorObject = J$.W(1457, 'errorObject', J$.F(1449, J$.R(1417, 'MongoError', MongoError, 1), 1)(J$.F(1441, J$.R(1425, 'f', f, 1), 0)(J$.T(1433, 'failed to authenticate using mongocr', 21, false))), errorObject, 0));
                                                                    J$.X1(1505, J$.F(1497, J$.R(1473, 'callback', callback, 0), 0)(J$.R(1481, 'errorObject', errorObject, 0), J$.T(1489, false, 23, false)));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(2873, J$e);
                                                            } finally {
                                                                if (J$.Fr(2881))
                                                                    continue jalangiLabel1841;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 1513)));
                                            } catch (J$e) {
                                                J$.Ex(2889, J$e);
                                            } finally {
                                                if (J$.Fr(2897))
                                                    continue jalangiLabel1842;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 1569), execute, 1));
                                J$.X1(1657, J$.F(1649, J$.R(1625, 'execute', execute, 0), 0)(J$.M(1641, J$.R(1633, 'connections', connections, 0), 'shift', 0)()));
                            }
                        } catch (J$e) {
                            J$.Ex(2913, J$e);
                        } finally {
                            if (J$.Fr(2921))
                                continue jalangiLabel1843;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1665), 0));
            var addAuthSession = J$.X1(2081, J$.W(2073, 'addAuthSession', J$.T(2065, function (authStore, session) {
                jalangiLabel1844:
                    while (true) {
                        try {
                            J$.Fe(2017, arguments.callee, this, arguments);
                            arguments = J$.N(2025, 'arguments', arguments, 4);
                            authStore = J$.N(2033, 'authStore', authStore, 4);
                            session = J$.N(2041, 'session', session, 4);
                            J$.N(2049, 'found', found, 0);
                            J$.N(2057, 'i', i, 0);
                            var found = J$.X1(1825, J$.W(1817, 'found', J$.T(1809, false, 23, false), found, 1));
                            for (var i = J$.X1(1849, J$.W(1841, 'i', J$.T(1833, 0, 22, false), i, 1)); J$.X1(2937, J$.C(104, J$.B(98, '<', J$.R(1857, 'i', i, 0), J$.G(1873, J$.R(1865, 'authStore', authStore, 0), 'length', 0), 0))); J$.X1(2945, J$.B(122, '-', i = J$.W(1897, 'i', J$.B(114, '+', J$.U(106, '+', J$.R(1889, 'i', i, 0)), J$.T(1881, 1, 22, false), 0), i, 0), J$.T(1905, 1, 22, false), 0))) {
                                if (J$.X1(2929, J$.C(96, J$.M(1945, J$.G(1929, J$.R(1913, 'authStore', authStore, 0), J$.R(1921, 'i', i, 0), 4), 'equal', 0)(J$.R(1937, 'session', session, 0))))) {
                                    J$.X1(1969, found = J$.W(1961, 'found', J$.T(1953, true, 23, false), found, 0));
                                    break;
                                }
                            }
                            if (J$.X1(2953, J$.C(112, J$.U(130, '!', J$.R(1977, 'found', found, 0)))))
                                J$.X1(2009, J$.M(2001, J$.R(1985, 'authStore', authStore, 0), 'push', 0)(J$.R(1993, 'session', session, 0)));
                        } catch (J$e) {
                            J$.Ex(2961, J$e);
                        } finally {
                            if (J$.Fr(2969))
                                continue jalangiLabel1844;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2017), addAuthSession, 3));
            J$.X1(2657, J$.P(2649, J$.G(2097, J$.R(2089, 'X509', X509, 1), 'prototype', 0), 'reauthenticate', J$.T(2641, function (server, pool, callback) {
                jalangiLabel1846:
                    while (true) {
                        try {
                            J$.Fe(2585, arguments.callee, this, arguments);
                            arguments = J$.N(2593, 'arguments', arguments, 4);
                            server = J$.N(2601, 'server', server, 4);
                            pool = J$.N(2609, 'pool', pool, 4);
                            callback = J$.N(2617, 'callback', callback, 4);
                            J$.N(2625, 'count', count, 0);
                            J$.N(2633, 'i', i, 0);
                            var count = J$.X1(2137, J$.W(2129, 'count', J$.G(2121, J$.G(2113, J$.R(2105, 'this', this, 0), 'authStore', 0), 'length', 0), count, 1));
                            if (J$.X1(2977, J$.C(120, J$.B(138, '==', J$.R(2145, 'count', count, 0), J$.T(2153, 0, 22, false), 0))))
                                return J$.X1(2201, J$.Rt(2193, J$.F(2185, J$.R(2161, 'callback', callback, 0), 0)(J$.T(2169, null, 25, false), J$.T(2177, null, 25, false))));
                            for (var i = J$.X1(2225, J$.W(2217, 'i', J$.T(2209, 0, 22, false), i, 1)); J$.X1(3009, J$.C(136, J$.B(146, '<', J$.R(2233, 'i', i, 0), J$.G(2257, J$.G(2249, J$.R(2241, 'this', this, 0), 'authStore', 0), 'length', 0), 0))); J$.X1(3017, J$.B(170, '-', i = J$.W(2281, 'i', J$.B(162, '+', J$.U(154, '+', J$.R(2273, 'i', i, 0)), J$.T(2265, 1, 22, false), 0), i, 0), J$.T(2289, 1, 22, false), 0))) {
                                J$.X1(2577, J$.M(2569, J$.R(2297, 'this', this, 0), 'auth', 0)(J$.R(2305, 'server', server, 0), J$.R(2313, 'pool', pool, 0), J$.G(2353, J$.G(2345, J$.G(2329, J$.R(2321, 'this', this, 0), 'authStore', 0), J$.R(2337, 'i', i, 0), 4), 'db', 0), J$.G(2393, J$.G(2385, J$.G(2369, J$.R(2361, 'this', this, 0), 'authStore', 0), J$.R(2377, 'i', i, 0), 4), 'username', 0), J$.G(2433, J$.G(2425, J$.G(2409, J$.R(2401, 'this', this, 0), 'authStore', 0), J$.R(2417, 'i', i, 0), 4), 'password', 0), J$.T(2561, function (err, r) {
                                    jalangiLabel1845:
                                        while (true) {
                                            try {
                                                J$.Fe(2529, arguments.callee, this, arguments);
                                                arguments = J$.N(2537, 'arguments', arguments, 4);
                                                err = J$.N(2545, 'err', err, 4);
                                                r = J$.N(2553, 'r', r, 4);
                                                J$.X1(2465, count = J$.W(2457, 'count', J$.B(178, '-', J$.R(2441, 'count', count, 0), J$.T(2449, 1, 22, false), 0), count, 0));
                                                if (J$.X1(2985, J$.C(128, J$.B(186, '==', J$.R(2473, 'count', count, 0), J$.T(2481, 0, 22, false), 0)))) {
                                                    J$.X1(2521, J$.F(2513, J$.R(2489, 'callback', callback, 0), 0)(J$.T(2497, null, 25, false), J$.T(2505, null, 25, false)));
                                                }
                                            } catch (J$e) {
                                                J$.Ex(2993, J$e);
                                            } finally {
                                                if (J$.Fr(3001))
                                                    continue jalangiLabel1845;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 2529)));
                            }
                        } catch (J$e) {
                            J$.Ex(3025, J$e);
                        } finally {
                            if (J$.Fr(3033))
                                continue jalangiLabel1846;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2585), 0));
            J$.X1(2689, J$.P(2681, J$.R(2665, 'module', module, 2), 'exports', J$.R(2673, 'X509', X509, 1), 0));
        } catch (J$e) {
            J$.Ex(3041, J$e);
        } finally {
            if (J$.Sr(3049)) {
                J$.L();
                continue jalangiLabel1847;
            } else {
                J$.L();
                break jalangiLabel1847;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
