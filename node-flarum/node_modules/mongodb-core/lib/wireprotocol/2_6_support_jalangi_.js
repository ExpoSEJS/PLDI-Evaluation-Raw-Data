J$.iids = {"8":[8,9,8,24],"9":[1,20,1,27],"10":[8,9,8,24],"16":[10,9,10,37],"17":[1,28,1,32],"18":[10,9,10,23],"24":[16,19,16,54],"25":[1,20,1,33],"26":[10,9,10,37],"32":[17,24,17,50],"33":[1,20,1,33],"34":[16,19,16,41],"40":[22,9,22,61],"41":[1,20,1,33],"42":[16,19,16,54],"48":[22,9,22,61],"49":[2,26,2,38],"50":[22,25,22,61],"56":[26,9,26,25],"57":[2,26,2,45],"58":[26,9,26,25],"64":[28,9,28,35],"65":[2,26,2,45],"66":[56,32,56,38],"72":[30,9,30,32],"73":[2,26,2,45],"74":[56,14,56,38],"80":[45,9,45,47],"81":[3,1,3,13],"82":[56,13,56,44],"88":[45,9,45,47],"89":[3,1,3,14],"90":[59,24,59,41],"96":[48,9,48,17],"97":[4,14,4,21],"98":[59,24,59,53],"104":[54,13,54,16],"105":[4,22,4,34],"106":[73,16,73,44],"112":[56,13,56,44],"113":[4,14,4,35],"114":[82,9,82,30],"120":[59,24,59,53],"121":[4,14,4,42],"122":[82,9,82,42],"128":[64,9,64,12],"129":[4,53,4,60],"130":[84,11,84,51],"136":[74,16,74,19],"137":[4,61,4,73],"138":[84,9,84,52],"144":[73,16,73,44],"145":[4,53,4,74],"146":[92,9,92,31],"152":[71,9,71,17],"153":[4,53,4,81],"154":[94,16,94,37],"160":[81,26,81,81],"161":[4,92,4,99],"162":[94,41,94,82],"168":[82,9,82,42],"169":[4,100,4,112],"170":[94,86,94,107],"176":[84,9,84,52],"177":[4,92,4,113],"178":[94,111,94,137],"184":[86,9,86,27],"185":[4,92,4,120],"186":[102,9,102,34],"192":[89,15,89,28],"193":[4,130,4,137],"194":[127,26,127,51],"200":[90,29,90,67],"201":[4,138,4,162],"202":[136,28,136,60],"208":[94,16,94,82],"209":[4,130,4,163],"210":[141,9,141,34],"216":[94,86,94,137],"217":[4,130,4,169],"218":[143,30,143,63],"224":[94,16,94,137],"225":[4,178,4,185],"226":[143,30,143,76],"232":[94,16,94,137],"233":[4,186,4,207],"234":[144,27,144,57],"240":[92,9,92,31],"241":[4,178,4,208],"242":[144,27,144,70],"248":[99,24,99,45],"249":[4,178,4,213],"250":[154,9,154,28],"256":[102,9,102,52],"257":[4,228,4,235],"258":[154,9,154,41],"264":[102,9,102,52],"265":[4,236,4,260],"266":[157,9,157,31],"272":[106,9,106,17],"273":[4,228,4,261],"274":[157,9,157,44],"280":[108,9,108,17],"281":[4,228,4,272],"282":[160,9,160,35],"288":[110,9,110,21],"289":[4,284,4,291],"290":[160,9,160,48],"296":[112,9,112,22],"297":[4,292,4,316],"298":[163,9,163,29],"304":[114,9,114,20],"305":[4,284,4,317],"306":[163,9,163,42],"312":[116,9,116,16],"313":[4,284,4,325],"314":[166,9,166,27],"320":[118,9,118,16],"321":[4,335,4,342],"322":[166,9,166,40],"328":[120,9,120,24],"329":[4,343,4,367],"330":[169,9,169,27],"336":[122,9,122,20],"337":[4,335,4,368],"338":[169,9,169,40],"344":[124,9,124,22],"345":[4,335,4,374],"346":[176,9,176,30],"352":[127,36,127,50],"353":[4,393,4,400],"354":[176,9,176,42],"360":[126,9,126,20],"361":[4,401,4,432],"362":[178,11,178,51],"368":[131,9,131,28],"369":[4,393,4,433],"370":[178,9,178,52],"376":[136,9,136,60],"377":[4,439,4,446],"378":[189,30,189,63],"384":[136,9,136,60],"385":[4,447,4,453],"386":[189,30,189,76],"392":[139,9,139,24],"393":[4,439,4,454],"394":[190,27,190,57],"400":[143,30,143,76],"401":[4,439,4,461],"402":[190,27,190,70],"408":[144,27,144,70],"409":[4,479,4,486],"410":[191,28,191,60],"416":[154,9,154,41],"417":[4,487,4,517],"418":[195,9,195,34],"424":[157,9,157,44],"425":[4,479,4,518],"426":[196,9,196,34],"432":[160,9,160,48],"433":[4,533,4,540],"434":[196,56,196,94],"440":[163,9,163,42],"441":[4,541,4,551],"442":[204,25,204,27],"448":[166,9,166,40],"449":[4,533,4,552],"450":[214,9,214,23],"456":[169,9,169,40],"457":[4,561,4,568],"458":[214,27,214,43],"464":[175,26,175,81],"465":[4,569,4,575],"472":[176,9,176,42],"473":[4,561,4,576],"480":[178,9,178,52],"481":[4,561,4,581],"488":[180,9,180,27],"489":[4,14,4,42],"496":[183,15,183,28],"497":[4,14,4,42],"504":[189,30,189,76],"505":[4,53,4,81],"512":[190,27,190,70],"513":[4,53,4,81],"520":[191,9,191,60],"521":[4,92,4,120],"528":[191,9,191,60],"529":[4,92,4,120],"536":[194,9,194,24],"537":[4,130,4,169],"544":[196,9,196,52],"545":[4,130,4,169],"552":[196,9,196,94],"553":[4,178,4,213],"560":[196,9,196,94],"561":[4,178,4,213],"568":[214,9,214,43],"569":[4,228,4,272],"576":[214,9,214,43],"577":[4,228,4,272],"585":[4,284,4,325],"593":[4,284,4,325],"601":[4,335,4,374],"609":[4,335,4,374],"617":[4,393,4,433],"625":[4,393,4,433],"633":[4,439,4,461],"641":[4,439,4,461],"649":[4,479,4,518],"657":[4,479,4,518],"665":[4,533,4,552],"673":[4,533,4,552],"681":[4,561,4,581],"689":[4,561,4,581],"697":[5,20,6,2],"705":[5,20,6,2],"713":[5,20,6,2],"721":[5,20,6,2],"729":[5,20,6,2],"737":[8,9,8,12],"745":[8,9,8,19],"753":[8,23,8,24],"761":[9,19,9,29],"769":[9,30,9,73],"777":[9,15,9,74],"785":[9,15,9,74],"793":[9,9,9,75],"801":[10,16,10,23],"809":[10,27,10,37],"817":[11,20,11,27],"825":[11,20,11,27],"833":[11,9,11,28],"841":[12,19,12,21],"849":[12,19,12,21],"857":[12,9,12,22],"865":[14,13,14,15],"873":[14,22,14,25],"881":[14,13,14,26],"883":[14,13,14,21],"889":[14,13,14,26],"897":[14,13,14,26],"905":[15,13,15,14],"913":[15,13,15,22],"915":[15,13,15,20],"921":[15,13,15,22],"929":[15,13,15,22],"937":[16,26,16,33],"945":[16,26,16,41],"953":[16,45,16,54],"961":[16,57,16,64],"969":[16,57,16,72],"977":[16,75,16,79],"985":[16,19,16,79],"993":[16,19,16,79],"1001":[17,24,17,31],"1009":[17,24,17,44],"1017":[17,48,17,50],"1025":[17,24,17,50],"1033":[17,24,17,50],"1041":[18,24,18,26],"1049":[18,24,18,26],"1057":[18,24,18,26],"1065":[19,5,19,17],"1073":[19,18,19,22],"1081":[19,26,19,27],"1089":[19,33,19,36],"1097":[19,26,19,37],"1099":[19,26,19,32],"1105":[19,5,19,37],"1113":[19,5,19,38],"1121":[20,5,20,17],"1129":[20,18,20,26],"1137":[20,30,20,33],"1145":[20,5,20,33],"1153":[20,5,20,34],"1161":[21,5,21,17],"1169":[21,28,21,35],"1177":[21,5,21,35],"1185":[21,5,21,36],"1193":[22,9,22,21],"1201":[22,25,22,31],"1209":[22,37,22,49],"1217":[22,25,22,50],"1219":[22,25,22,36],"1225":[22,25,22,57],"1233":[22,60,22,61],"1241":[23,9,23,21],"1249":[23,37,23,49],"1257":[23,9,23,49],"1265":[23,9,23,50],"1273":[25,16,25,18],"1281":[25,16,25,18],"1289":[25,16,25,18],"1297":[26,9,26,13],"1305":[26,17,26,25],"1313":[27,9,27,13],"1321":[27,26,27,30],"1329":[27,9,27,30],"1337":[27,9,27,31],"1345":[28,9,28,16],"1353":[28,9,28,35],"1361":[29,9,29,13],"1369":[29,35,29,42],"1377":[29,35,29,61],"1385":[29,9,29,61],"1393":[29,9,29,62],"1401":[30,9,30,16],"1409":[30,9,30,32],"1417":[31,9,31,13],"1425":[31,32,31,39],"1433":[31,32,31,55],"1441":[31,9,31,55],"1449":[31,9,31,56],"1457":[32,5,32,13],"1465":[32,22,32,23],"1473":[32,24,32,33],"1481":[32,35,32,36],"1489":[32,22,32,37],"1497":[32,39,32,51],"1505":[32,53,32,57],"1513":[32,59,32,67],"1521":[32,5,32,68],"1523":[32,5,32,21],"1529":[32,5,32,69],"1537":[7,20,33,2],"1545":[7,20,33,2],"1553":[7,20,33,2],"1561":[7,20,33,2],"1569":[7,20,33,2],"1577":[7,20,33,2],"1585":[7,20,33,2],"1593":[7,20,33,2],"1601":[7,20,33,2],"1609":[7,20,33,2],"1617":[7,20,33,2],"1625":[7,20,33,2],"1633":[7,20,33,2],"1641":[7,20,33,2],"1649":[7,20,33,2],"1657":[7,20,33,2],"1665":[7,20,33,2],"1673":[7,20,33,2],"1681":[34,1,34,13],"1689":[34,1,34,23],"1697":[35,5,35,17],"1705":[35,18,35,26],"1713":[35,28,35,36],"1721":[35,38,35,49],"1729":[35,51,35,53],"1737":[35,55,35,58],"1745":[35,60,35,67],"1753":[35,69,35,77],"1761":[35,5,35,78],"1769":[35,5,35,79],"1777":[34,33,36,2],"1785":[34,33,36,2],"1793":[34,33,36,2],"1801":[34,33,36,2],"1809":[34,33,36,2],"1817":[34,33,36,2],"1825":[34,33,36,2],"1833":[34,33,36,2],"1841":[34,33,36,2],"1849":[34,33,36,2],"1857":[34,33,36,2],"1865":[34,33,36,2],"1873":[34,1,36,2],"1881":[34,1,36,3],"1889":[37,1,37,13],"1897":[37,1,37,23],"1905":[38,5,38,17],"1913":[38,18,38,26],"1921":[38,28,38,36],"1929":[38,38,38,47],"1937":[38,49,38,51],"1945":[38,53,38,56],"1953":[38,58,38,65],"1961":[38,67,38,75],"1969":[38,5,38,76],"1977":[38,5,38,77],"1985":[37,33,39,2],"1993":[37,33,39,2],"2001":[37,33,39,2],"2009":[37,33,39,2],"2017":[37,33,39,2],"2025":[37,33,39,2],"2033":[37,33,39,2],"2041":[37,33,39,2],"2049":[37,33,39,2],"2057":[37,33,39,2],"2065":[37,33,39,2],"2073":[37,33,39,2],"2081":[37,1,39,2],"2089":[37,1,39,3],"2097":[40,1,40,13],"2105":[40,1,40,23],"2113":[41,5,41,17],"2121":[41,18,41,26],"2129":[41,28,41,36],"2137":[41,38,41,47],"2145":[41,49,41,51],"2153":[41,53,41,56],"2161":[41,58,41,65],"2169":[41,67,41,75],"2177":[41,5,41,76],"2185":[41,5,41,77],"2193":[40,33,42,2],"2201":[40,33,42,2],"2209":[40,33,42,2],"2217":[40,33,42,2],"2225":[40,33,42,2],"2233":[40,33,42,2],"2241":[40,33,42,2],"2249":[40,33,42,2],"2257":[40,33,42,2],"2265":[40,33,42,2],"2273":[40,33,42,2],"2281":[40,33,42,2],"2289":[40,1,42,2],"2297":[40,1,42,3],"2305":[43,1,43,13],"2313":[43,1,43,23],"2321":[44,26,44,36],"2329":[44,37,44,41],"2337":[44,44,44,52],"2345":[44,43,44,53],"2353":[44,22,44,54],"2361":[44,22,44,54],"2369":[44,22,44,54],"2377":[45,9,45,19],"2385":[45,23,45,33],"2393":[45,23,45,47],"2395":[45,23,45,45],"2401":[46,9,46,19],"2409":[46,26,46,36],"2417":[46,26,46,44],"2419":[46,26,46,42],"2425":[46,9,46,45],"2427":[46,9,46,25],"2433":[46,9,46,46],"2441":[47,16,47,20],"2449":[47,16,47,25],"2457":[47,16,47,25],"2465":[47,5,47,26],"2473":[48,9,48,17],"2481":[49,9,49,17],"2489":[49,18,49,22],"2497":[49,24,49,28],"2505":[49,9,49,29],"2513":[49,9,49,30],"2521":[43,37,50,2],"2529":[43,37,50,2],"2537":[43,37,50,2],"2545":[43,37,50,2],"2553":[43,37,50,2],"2561":[43,37,50,2],"2569":[43,37,50,2],"2577":[43,37,50,2],"2585":[43,37,50,2],"2593":[43,37,50,2],"2601":[43,1,50,2],"2609":[43,1,50,3],"2617":[51,1,51,13],"2625":[51,1,51,23],"2633":[52,23,52,30],"2641":[52,31,52,35],"2649":[52,37,52,39],"2657":[52,41,52,52],"2665":[52,41,52,61],"2673":[52,81,52,90],"2681":[52,63,52,92],"2689":[52,19,52,93],"2697":[52,19,52,93],"2705":[52,19,52,93],"2713":[54,13,54,16],"2721":[55,20,55,28],"2729":[55,29,55,32],"2737":[55,20,55,33],"2745":[55,20,55,33],"2753":[55,13,55,34],"2761":[56,14,56,15],"2769":[56,14,56,29],"2777":[56,32,56,33],"2785":[56,37,56,38],"2793":[56,43,56,44],"2801":[57,20,57,28],"2809":[57,33,57,43],"2817":[57,44,57,72],"2825":[57,29,57,73],"2833":[57,75,57,79],"2841":[57,20,57,80],"2849":[57,20,57,80],"2857":[57,13,57,81],"2865":[59,31,59,32],"2873":[59,31,59,41],"2881":[59,45,59,53],"2889":[59,56,59,60],"2897":[59,72,59,73],"2905":[59,72,59,82],"2913":[59,56,59,83],"2915":[59,56,59,71],"2921":[59,86,59,87],"2929":[59,86,59,96],"2937":[59,24,59,96],"2945":[59,24,59,96],"2953":[60,9,60,20],"2961":[60,33,60,34],"2969":[60,33,60,44],"2977":[60,9,60,44],"2985":[60,9,60,45],"2993":[61,9,61,20],"3001":[61,32,61,40],"3009":[61,9,61,40],"3017":[61,9,61,41],"3025":[62,9,62,17],"3033":[62,18,62,22],"3041":[62,9,62,23],"3049":[62,9,62,24],"3057":[53,25,63,6],"3065":[53,25,63,6],"3073":[53,25,63,6],"3081":[53,25,63,6],"3089":[53,25,63,6],"3097":[53,25,63,6],"3105":[53,25,63,6],"3113":[53,25,63,6],"3121":[64,9,64,12],"3129":[65,9,65,22],"3137":[65,29,65,32],"3145":[65,9,65,32],"3153":[65,9,65,33],"3161":[67,5,67,14],"3169":[67,24,67,31],"3177":[67,24,67,41],"3185":[67,43,67,56],"3193":[67,5,67,57],"3195":[67,5,67,23],"3201":[67,5,67,58],"3209":[68,5,68,15],"3217":[68,22,68,29],"3225":[68,22,68,37],"3227":[68,22,68,35],"3233":[68,5,68,38],"3235":[68,5,68,21],"3241":[68,5,68,39],"3249":[51,34,69,2],"3257":[51,34,69,2],"3265":[51,34,69,2],"3273":[51,34,69,2],"3281":[51,34,69,2],"3289":[51,34,69,2],"3297":[51,34,69,2],"3305":[51,34,69,2],"3313":[51,34,69,2],"3321":[51,34,69,2],"3329":[51,34,69,2],"3337":[51,34,69,2],"3345":[51,34,69,2],"3353":[51,34,69,2],"3361":[51,1,69,2],"3369":[51,1,69,3],"3377":[70,1,70,13],"3385":[70,1,70,23],"3393":[71,9,71,12],"3401":[71,9,71,17],"3409":[72,16,72,32],"3417":[72,33,72,37],"3425":[72,39,72,41],"3433":[72,43,72,46],"3441":[72,48,72,59],"3449":[72,61,72,69],"3457":[72,71,72,78],"3465":[72,16,72,79],"3473":[72,16,72,79],"3481":[72,9,72,80],"3489":[73,16,73,27],"3497":[73,16,73,36],"3505":[73,40,73,44],"3513":[74,16,74,19],"3521":[75,16,75,28],"3529":[75,29,75,33],"3537":[75,35,75,37],"3545":[75,39,75,42],"3553":[75,44,75,55],"3561":[75,57,75,65],"3569":[75,67,75,74],"3577":[75,16,75,75],"3585":[75,16,75,75],"3593":[75,9,75,76],"3601":[77,19,77,29],"3609":[77,30,77,31],"3617":[77,32,77,69],"3625":[77,71,77,75],"3633":[77,86,77,89],"3641":[77,71,77,90],"3643":[77,71,77,85],"3649":[77,30,77,91],"3657":[77,15,77,92],"3665":[77,15,77,92],"3673":[77,9,77,93],"3681":[70,34,79,2],"3689":[70,34,79,2],"3697":[70,34,79,2],"3705":[70,34,79,2],"3713":[70,34,79,2],"3721":[70,34,79,2],"3729":[70,34,79,2],"3737":[70,34,79,2],"3745":[70,34,79,2],"3753":[70,1,79,2],"3761":[70,1,79,3],"3769":[81,26,81,33],"3777":[81,26,81,48],"3785":[81,56,81,70],"3793":[81,71,81,80],"3801":[81,52,81,81],"3809":[81,26,81,81],"3817":[81,26,81,81],"3825":[82,16,82,30],"3833":[82,34,82,42],"3841":[83,30,83,44],"3849":[83,45,83,59],"3857":[83,26,83,60],"3865":[83,26,83,60],"3873":[83,9,83,61],"3881":[84,11,84,25],"3889":[84,37,84,51],"3897":[85,19,85,29],"3905":[85,30,85,80],"3913":[85,15,85,81],"3921":[85,15,85,81],"3929":[85,9,85,82],"3937":[86,9,86,12],"3945":[86,9,86,27],"3953":[87,26,87,29],"3961":[87,26,87,44],"3969":[87,26,87,44],"3977":[87,9,87,45],"3985":[89,15,89,22],"3993":[89,26,89,28],"4001":[89,15,89,28],"4009":[89,5,89,29],"4017":[90,5,90,16],"4025":[90,29,90,32],"4033":[90,29,90,42],"4041":[90,46,90,57],"4049":[90,46,90,67],"4057":[90,5,90,67],"4065":[90,5,90,68],"4073":[91,26,91,27],"4081":[91,26,91,27],"4089":[91,26,91,27],"4097":[92,9,92,20],"4105":[92,9,92,26],"4113":[92,30,92,31],"4121":[93,26,93,37],"4129":[93,26,93,47],"4137":[93,26,93,47],"4145":[93,9,93,48],"4153":[94,16,94,27],"4161":[94,16,94,33],"4169":[94,36,94,37],"4177":[94,41,94,52],"4185":[94,41,94,58],"4193":[94,61,94,72],"4201":[94,61,94,82],"4209":[94,86,94,97],"4217":[94,86,94,103],"4225":[94,106,94,107],"4233":[94,111,94,122],"4241":[94,111,94,132],"4249":[94,136,94,137],"4257":[95,26,95,37],"4265":[95,26,95,43],"4273":[95,26,95,43],"4281":[95,9,95,44],"4289":[97,26,97,37],"4297":[97,26,97,47],"4305":[97,26,97,47],"4313":[97,9,97,48],"4321":[99,24,99,35],"4329":[99,24,99,40],"4337":[99,44,99,45],"4345":[99,24,99,45],"4353":[99,24,99,45],"4361":[100,19,100,21],"4369":[100,19,100,21],"4377":[100,19,100,21],"4385":[101,31,101,36],"4393":[101,31,101,36],"4401":[101,31,101,36],"4409":[102,9,102,17],"4417":[102,9,102,22],"4425":[102,26,102,34],"4433":[102,38,102,52],"4441":[103,9,103,16],"4449":[103,17,103,34],"4457":[103,38,103,52],"4465":[103,38,103,61],"4467":[103,38,103,59],"4473":[103,9,103,61],"4481":[103,9,103,62],"4489":[104,31,104,35],"4497":[104,31,104,35],"4505":[104,9,104,36],"4513":[106,9,106,12],"4521":[106,9,106,17],"4529":[107,9,107,16],"4537":[107,17,107,26],"4545":[107,30,107,33],"4553":[107,30,107,38],"4561":[107,9,107,38],"4569":[107,62,107,66],"4577":[107,62,107,66],"4585":[107,9,107,38],"4593":[107,9,107,67],"4601":[108,9,108,12],"4609":[108,9,108,17],"4617":[109,9,109,16],"4625":[109,17,109,24],"4633":[109,28,109,31],"4641":[109,28,109,36],"4649":[109,9,109,36],"4657":[109,60,109,64],"4665":[109,60,109,64],"4673":[109,9,109,36],"4681":[109,9,109,65],"4689":[110,9,110,12],"4697":[110,9,110,21],"4705":[111,9,111,16],"4713":[111,17,111,28],"4721":[111,32,111,35],"4729":[111,32,111,44],"4737":[111,9,111,44],"4745":[111,68,111,72],"4753":[111,68,111,72],"4761":[111,9,111,44],"4769":[111,9,111,73],"4777":[112,9,112,12],"4785":[112,9,112,22],"4793":[113,9,113,16],"4801":[113,17,113,29],"4809":[113,33,113,36],"4817":[113,33,113,46],"4825":[113,9,113,46],"4833":[113,70,113,74],"4841":[113,70,113,74],"4849":[113,9,113,46],"4857":[113,9,113,75],"4865":[114,9,114,12],"4873":[114,9,114,20],"4881":[115,9,115,16],"4889":[115,17,115,27],"4897":[115,31,115,34],"4905":[115,31,115,42],"4913":[115,9,115,42],"4921":[115,66,115,70],"4929":[115,66,115,70],"4937":[115,9,115,42],"4945":[115,9,115,71],"4953":[116,9,116,12],"4961":[116,9,116,16],"4969":[117,9,117,16],"4977":[117,17,117,23],"4985":[117,27,117,30],"4993":[117,27,117,34],"5001":[117,9,117,34],"5009":[117,58,117,62],"5017":[117,58,117,62],"5025":[117,9,117,34],"5033":[117,9,117,63],"5041":[118,9,118,12],"5049":[118,9,118,16],"5057":[119,9,119,16],"5065":[119,17,119,23],"5073":[119,27,119,30],"5081":[119,27,119,34],"5089":[119,9,119,34],"5097":[119,58,119,62],"5105":[119,58,119,62],"5113":[119,9,119,34],"5121":[119,9,119,63],"5129":[120,9,120,12],"5137":[120,9,120,24],"5145":[121,9,121,16],"5153":[121,17,121,31],"5161":[121,35,121,38],"5169":[121,35,121,50],"5177":[121,9,121,50],"5185":[121,74,121,78],"5193":[121,74,121,78],"5201":[121,9,121,50],"5209":[121,9,121,79],"5217":[122,9,122,12],"5225":[122,9,122,20],"5233":[123,9,123,16],"5241":[123,17,123,27],"5249":[123,31,123,34],"5257":[123,31,123,42],"5265":[123,9,123,42],"5273":[123,66,123,70],"5281":[123,66,123,70],"5289":[123,9,123,42],"5297":[123,9,123,71],"5305":[124,9,124,12],"5313":[124,9,124,22],"5321":[125,9,125,16],"5329":[125,17,125,29],"5337":[125,33,125,36],"5345":[125,33,125,46],"5353":[125,9,125,46],"5361":[125,70,125,74],"5369":[125,70,125,74],"5377":[125,9,125,46],"5385":[125,9,125,75],"5393":[126,9,126,12],"5401":[126,9,126,20],"5409":[127,27,127,31],"5417":[127,36,127,39],"5425":[127,36,127,45],"5433":[127,49,127,50],"5441":[127,27,127,51],"5443":[127,27,127,35],"5449":[127,26,127,51],"5457":[127,9,127,52],"5465":[128,31,128,35],"5473":[128,31,128,35],"5481":[128,9,128,36],"5489":[129,9,129,16],"5497":[129,17,129,27],"5505":[129,31,129,35],"5513":[129,9,129,35],"5521":[129,9,129,36],"5529":[131,9,131,28],"5537":[132,9,132,16],"5545":[132,17,132,25],"5553":[132,29,132,32],"5561":[132,29,132,38],"5569":[132,9,132,38],"5577":[132,9,132,39],"5585":[134,19,134,22],"5593":[134,19,134,28],"5601":[134,19,134,28],"5609":[134,9,134,29],"5617":[136,9,136,12],"5625":[136,9,136,24],"5633":[136,28,136,31],"5641":[136,28,136,43],"5649":[136,28,136,49],"5657":[136,53,136,60],"5665":[137,19,137,29],"5673":[137,30,137,31],"5681":[137,32,137,96],"5689":[137,98,137,101],"5697":[137,98,137,113],"5705":[137,98,137,119],"5713":[137,30,137,120],"5721":[137,15,137,121],"5729":[137,15,137,121],"5737":[137,9,137,122],"5745":[139,9,139,12],"5753":[139,9,139,24],"5761":[140,15,140,19],"5769":[140,20,140,23],"5777":[140,15,140,24],"5785":[140,15,140,24],"5793":[140,9,140,25],"5801":[141,16,141,19],"5809":[141,20,141,33],"5817":[141,9,141,35],"5825":[143,37,143,44],"5833":[143,37,143,63],"5841":[143,67,143,76],"5849":[143,79,143,86],"5857":[143,79,143,105],"5865":[143,108,143,113],"5873":[143,30,143,113],"5881":[143,30,143,113],"5889":[144,34,144,41],"5897":[144,34,144,57],"5905":[144,61,144,70],"5913":[144,73,144,80],"5921":[144,73,144,96],"5929":[144,99,144,104],"5937":[144,27,144,104],"5945":[144,27,144,104],"5953":[145,21,145,26],"5961":[145,27,145,31],"5969":[145,33,145,35],"5977":[145,37,145,44],"5985":[146,23,146,35],"5993":[147,25,147,39],"6001":[148,20,148,25],"6009":[149,30,149,33],"6017":[149,30,149,40],"6025":[150,29,150,47],"6033":[151,26,151,41],"6041":[145,46,152,6],"6049":[145,17,152,7],"6057":[145,17,152,7],"6065":[145,17,152,7],"6073":[153,5,153,10],"6081":[153,21,153,35],"6089":[153,21,153,45],"6091":[153,21,153,43],"6097":[153,5,153,45],"6105":[153,5,153,46],"6113":[154,16,154,19],"6121":[154,16,154,28],"6129":[154,32,154,41],"6137":[155,9,155,14],"6145":[155,26,155,29],"6153":[155,26,155,38],"6161":[155,9,155,38],"6169":[155,9,155,39],"6177":[157,16,157,19],"6185":[157,16,157,31],"6193":[157,35,157,44],"6201":[158,9,158,14],"6209":[158,29,158,32],"6217":[158,29,158,44],"6225":[158,9,158,44],"6233":[158,9,158,45],"6241":[160,16,160,19],"6249":[160,16,160,35],"6257":[160,39,160,48],"6265":[161,9,161,14],"6273":[161,33,161,36],"6281":[161,33,161,52],"6289":[161,9,161,52],"6297":[161,9,161,53],"6305":[163,16,163,19],"6313":[163,16,163,29],"6321":[163,33,163,42],"6329":[164,9,164,14],"6337":[164,27,164,30],"6345":[164,27,164,40],"6353":[164,9,164,40],"6361":[164,9,164,41],"6369":[166,16,166,19],"6377":[166,16,166,27],"6385":[166,31,166,40],"6393":[167,9,167,14],"6401":[167,25,167,28],"6409":[167,25,167,36],"6417":[167,9,167,36],"6425":[167,9,167,37],"6433":[169,16,169,19],"6441":[169,16,169,27],"6449":[169,31,169,40],"6457":[170,9,170,14],"6465":[170,25,170,28],"6473":[170,25,170,36],"6481":[170,9,170,36],"6489":[170,9,170,37],"6497":[172,12,172,17],"6505":[172,12,172,17],"6513":[172,5,172,18],"6521":[80,24,173,2],"6529":[80,24,173,2],"6537":[80,24,173,2],"6545":[80,24,173,2],"6553":[80,24,173,2],"6561":[80,24,173,2],"6569":[80,24,173,2],"6577":[80,24,173,2],"6585":[80,24,173,2],"6593":[80,24,173,2],"6601":[80,24,173,2],"6609":[80,24,173,2],"6617":[80,24,173,2],"6625":[80,24,173,2],"6633":[80,24,173,2],"6641":[80,24,173,2],"6649":[80,24,173,2],"6657":[80,24,173,2],"6665":[80,24,173,2],"6673":[175,26,175,33],"6681":[175,26,175,48],"6689":[175,56,175,70],"6697":[175,71,175,80],"6705":[175,52,175,81],"6713":[175,26,175,81],"6721":[175,26,175,81],"6729":[176,16,176,30],"6737":[176,34,176,42],"6745":[177,30,177,44],"6753":[177,45,177,59],"6761":[177,26,177,60],"6769":[177,26,177,60],"6777":[177,9,177,61],"6785":[178,11,178,25],"6793":[178,37,178,51],"6801":[179,19,179,29],"6809":[179,30,179,80],"6817":[179,15,179,81],"6825":[179,15,179,81],"6833":[179,9,179,82],"6841":[180,9,180,12],"6849":[180,9,180,27],"6857":[181,26,181,29],"6865":[181,26,181,44],"6873":[181,26,181,44],"6881":[181,9,181,45],"6889":[183,15,183,22],"6897":[183,26,183,28],"6905":[183,15,183,28],"6913":[183,5,183,29],"6921":[184,20,184,22],"6929":[184,20,184,22],"6937":[184,20,184,22],"6945":[185,22,185,25],"6953":[186,9,186,17],"6961":[186,18,186,22],"6969":[186,26,186,29],"6977":[186,30,186,34],"6985":[186,26,186,35],"6993":[186,9,186,35],"7001":[186,9,186,36],"7009":[185,22,185,25],"7017":[185,5,187,6],"7025":[185,5,187,6],"7033":[188,17,188,19],"7041":[188,26,188,30],"7049":[188,17,188,31],"7051":[188,17,188,25],"7057":[188,17,188,31],"7065":[188,17,188,31],"7073":[189,37,189,44],"7081":[189,37,189,63],"7089":[189,67,189,76],"7097":[189,79,189,86],"7105":[189,79,189,105],"7113":[189,108,189,113],"7121":[189,30,189,113],"7129":[189,30,189,113],"7137":[190,34,190,41],"7145":[190,34,190,57],"7153":[190,61,190,70],"7161":[190,73,190,80],"7169":[190,73,190,96],"7177":[190,99,190,104],"7185":[190,27,190,104],"7193":[190,27,190,104],"7201":[191,9,191,12],"7209":[191,9,191,24],"7217":[191,28,191,31],"7225":[191,28,191,43],"7233":[191,28,191,49],"7241":[191,53,191,60],"7249":[192,19,192,29],"7257":[192,30,192,31],"7265":[192,32,192,94],"7273":[192,96,192,100],"7281":[192,111,192,114],"7289":[192,96,192,115],"7291":[192,96,192,110],"7297":[192,117,192,120],"7305":[192,117,192,132],"7313":[192,117,192,138],"7321":[192,30,192,139],"7329":[192,15,192,140],"7337":[192,15,192,140],"7345":[192,9,192,141],"7353":[194,9,194,12],"7361":[194,9,194,24],"7369":[195,16,195,19],"7377":[195,20,195,33],"7385":[195,9,195,35],"7393":[196,9,196,17],"7401":[196,9,196,22],"7409":[196,26,196,34],"7417":[196,38,196,52],"7425":[196,56,196,70],"7433":[196,56,196,81],"7441":[196,85,196,94],"7449":[198,23,198,31],"7457":[199,32,199,46],"7465":[199,32,199,55],"7467":[199,32,199,53],"7473":[197,20,200,10],"7481":[197,20,200,10],"7489":[197,9,200,11],"7497":[202,21,202,26],"7505":[202,27,202,31],"7513":[202,33,202,34],"7521":[202,35,202,44],"7529":[202,46,202,51],"7537":[202,46,202,59],"7539":[202,46,202,57],"7545":[202,33,202,60],"7553":[202,62,202,70],"7561":[203,23,203,24],"7569":[204,26,204,27],"7577":[205,20,205,25],"7585":[206,29,206,47],"7593":[207,26,207,41],"7601":[202,72,208,6],"7609":[202,17,208,7],"7617":[202,17,208,7],"7625":[202,17,208,7],"7633":[209,5,209,10],"7641":[209,21,209,35],"7649":[209,21,209,45],"7651":[209,21,209,43],"7657":[209,5,209,45],"7665":[209,5,209,46],"7673":[210,12,210,17],"7681":[210,12,210,17],"7689":[210,5,210,18],"7697":[174,20,211,2],"7705":[174,20,211,2],"7713":[174,20,211,2],"7721":[174,20,211,2],"7729":[174,20,211,2],"7737":[174,20,211,2],"7745":[174,20,211,2],"7753":[174,20,211,2],"7761":[174,20,211,2],"7769":[174,20,211,2],"7777":[174,20,211,2],"7785":[174,20,211,2],"7793":[174,20,211,2],"7801":[174,20,211,2],"7809":[174,20,211,2],"7817":[174,20,211,2],"7825":[174,20,211,2],"7833":[174,20,211,2],"7841":[213,18,213,25],"7849":[213,18,213,32],"7857":[213,18,213,32],"7865":[213,18,213,32],"7873":[214,9,214,15],"7881":[214,19,214,23],"7889":[214,27,214,35],"7897":[214,39,214,43],"7905":[215,16,215,24],"7913":[215,16,215,24],"7921":[215,9,215,25],"7929":[217,16,217,22],"7937":[217,28,217,36],"7945":[217,16,217,37],"7947":[217,16,217,27],"7953":[217,16,217,37],"7961":[217,9,217,38],"7969":[212,27,219,2],"7977":[212,27,219,2],"7985":[212,27,219,2],"7993":[212,27,219,2],"8001":[212,27,219,2],"8009":[212,27,219,2],"8017":[212,27,219,2],"8025":[220,1,220,7],"8033":[220,18,220,30],"8041":[220,1,220,30],"8049":[220,1,220,31],"8057":[1,1,220,31],"8065":[1,1,220,31],"8073":[1,1,220,31],"8081":[1,1,220,31],"8089":[1,1,220,31],"8097":[1,1,220,31],"8105":[1,1,220,31],"8113":[1,1,220,31],"8121":[1,1,220,31],"8129":[1,1,220,31],"8137":[1,1,220,31],"8145":[1,1,220,31],"8153":[1,1,220,31],"8161":[1,1,220,31],"8169":[1,1,220,31],"8177":[1,1,220,31],"8185":[1,1,220,31],"8193":[1,1,220,31],"8201":[1,1,220,31],"8209":[1,1,220,31],"8217":[5,20,6,2],"8225":[5,20,6,2],"8233":[8,5,9,75],"8241":[10,5,13,6],"8249":[16,19,16,79],"8257":[22,5,24,6],"8265":[26,5,27,31],"8273":[28,5,29,62],"8281":[30,5,31,56],"8289":[7,20,33,2],"8297":[7,20,33,2],"8305":[34,33,36,2],"8313":[34,33,36,2],"8321":[37,33,39,2],"8329":[37,33,39,2],"8337":[40,33,42,2],"8345":[40,33,42,2],"8353":[45,5,46,46],"8361":[48,5,49,30],"8369":[43,37,50,2],"8377":[43,37,50,2],"8385":[54,9,55,34],"8393":[56,9,58,10],"8401":[59,24,59,96],"8409":[53,25,63,6],"8417":[53,25,63,6],"8425":[64,5,66,6],"8433":[51,34,69,2],"8441":[51,34,69,2],"8449":[74,12,78,6],"8457":[73,12,78,6],"8465":[71,5,78,6],"8473":[70,34,79,2],"8481":[70,34,79,2],"8489":[82,5,83,61],"8497":[84,5,85,82],"8505":[86,5,88,6],"8513":[94,12,98,6],"8521":[92,5,98,6],"8529":[102,5,105,6],"8537":[106,5,107,67],"8545":[108,5,109,65],"8553":[110,5,111,73],"8561":[112,5,113,75],"8569":[114,5,115,71],"8577":[116,5,117,63],"8585":[118,5,119,63],"8593":[120,5,121,79],"8601":[122,5,123,71],"8609":[124,5,125,75],"8617":[126,5,130,6],"8625":[131,5,135,6],"8633":[136,5,138,6],"8641":[139,5,142,6],"8649":[143,30,143,113],"8657":[144,27,144,104],"8665":[154,5,156,6],"8673":[157,5,159,6],"8681":[160,5,162,6],"8689":[163,5,165,6],"8697":[166,5,168,6],"8705":[169,5,171,6],"8713":[80,24,173,2],"8721":[80,24,173,2],"8729":[176,5,177,61],"8737":[178,5,179,82],"8745":[180,5,182,6],"8753":[189,30,189,113],"8761":[190,27,190,104],"8769":[191,5,193,6],"8777":[194,5,195,35],"8785":[196,5,201,6],"8793":[174,20,211,2],"8801":[174,20,211,2],"8809":[214,5,218,6],"8817":[212,27,219,2],"8825":[212,27,219,2],"8833":[1,1,220,31],"8841":[1,1,220,31],"nBranches":144,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/wireprotocol/2_6_support.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/wireprotocol/2_6_support_jalangi_.js","code":"\"use strict\";\n\nvar Insert = require('./commands').Insert\n  , Update = require('./commands').Update\n  , Remove = require('./commands').Remove\n  , Query = require('../connection/commands').Query\n  , copy = require('../connection/utils').copy\n  , KillCursor = require('../connection/commands').KillCursor\n  , GetMore = require('../connection/commands').GetMore\n  , Query = require('../connection/commands').Query\n  , ReadPreference = require('../topologies/read_preference')\n  , f = require('util').format\n  , CommandResult = require('../topologies/command_result')\n  , MongoError = require('../error')\n  , Long = require('bson').Long;\n\nvar WireProtocol = function() {}\n\n//\n// Execute a write operation\nvar executeWrite = function(topology, type, opsField, ns, ops, options, callback) {\n  if(ops.length == 0) throw new MongoError(\"insert must contain at least one document\");\n  if(typeof options == 'function') {\n    callback = options;\n    options = {};\n  }\n\n  // Split the ns up to get db and collection\n  var p = ns.split(\".\");\n  var d = p.shift();\n  // Options\n  var ordered = typeof options.ordered == 'boolean' ? options.ordered : true;\n  var writeConcern = options.writeConcern || {};\n  // return skeleton\n  var writeCommand = {};\n  writeCommand[type] = p.join('.');\n  writeCommand[opsField] = ops;\n  writeCommand.ordered = ordered;\n\n  // Did we specify a write concern\n  if(writeConcern && Object.keys(writeConcern).length > 0) {\n    writeCommand.writeConcern = writeConcern;\n  }\n\n  // Options object\n  var opts = {};\n  if(type == 'insert') opts.checkKeys = true;\n  // Ensure we support serialization of functions\n  if(options.serializeFunctions) opts.serializeFunctions = options.serializeFunctions;\n  if(options.ignoreUndefined) opts.ignoreUndefined = options.ignoreUndefined;\n  // Execute command\n  topology.command(f(\"%s.$cmd\", d), writeCommand, opts, callback);\n}\n\n//\n// Needs to support legacy mass insert as well as ordered/unordered legacy\n// emulation\n//\nWireProtocol.prototype.insert = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) {\n  executeWrite(topology, 'insert', 'documents', ns, ops, options, callback);\n}\n\nWireProtocol.prototype.update = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) {\n  executeWrite(topology, 'update', 'updates', ns, ops, options, callback);\n}\n\nWireProtocol.prototype.remove = function(topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) {\n  executeWrite(topology, 'delete', 'deletes', ns, ops, options, callback);\n}\n\nWireProtocol.prototype.killCursor = function(bson, ns, cursorId, connection, callbacks, callback) {\n  // Create a kill cursor command\n  var killCursor = new KillCursor(bson, [cursorId]);\n  // Execute the kill cursor command\n  if(connection && connection.isConnected()) connection.write(killCursor.toBin());\n  // Set cursor to 0\n  cursorId = Long.ZERO;\n  // Return to caller\n  if(callback) callback(null, null);\n}\n\nWireProtocol.prototype.getMore = function(bson, ns, cursorState, batchSize, raw, connection, callbacks, options, callback) {\n  // Create getMore command\n  var getMore = new GetMore(bson, ns, cursorState.cursorId, {numberToReturn: batchSize});\n\n  // Query callback\n  var queryCallback = function(err, r) {\n    if(err) return callback(err);\n\n    // If we have a timed out query or a cursor that was killed\n    if((r.responseFlags & (1 << 0)) != 0) {\n      return callback(new MongoError(\"cursor killed or timed out\"), null);\n    }\n\n    // Ensure we have a Long valie cursor id\n    var cursorId = typeof r.cursorId == 'number'\n      ? Long.fromNumber(r.cursorId)\n      : r.cursorId;\n\n    // Set all the values\n    cursorState.documents = r.documents;\n    cursorState.cursorId = cursorId;\n\n    // Return\n    callback(null);\n  }\n\n  // If we have a raw query decorate the function\n  if(raw) {\n    queryCallback.raw = raw;\n  }\n\n  // Register a callback\n  callbacks.register(getMore.requestId, queryCallback);\n  // Write out the getMore command\n  connection.write(getMore.toBin());\n}\n\nWireProtocol.prototype.command = function(bson, ns, cmd, cursorState, topology, options) {\n  // Establish type of command\n  if(cmd.find) {\n    return setupClassicFind(bson, ns, cmd, cursorState, topology, options)\n  } else if(cursorState.cursorId != null) {\n  } else if(cmd) {\n    return setupCommand(bson, ns, cmd, cursorState, topology, options);\n  } else {\n    throw new MongoError(f(\"command %s does not return a cursor\", JSON.stringify(cmd)));\n  }\n}\n\n//\n// Execute a find command\nvar setupClassicFind = function(bson, ns, cmd, cursorState, topology, options) {\n  var readPreference = options.readPreference || new ReadPreference('primary');\n  if(typeof readPreference == 'string') readPreference = new ReadPreference(readPreference);\n  if(!(readPreference instanceof ReadPreference)) throw new MongoError('readPreference must be a ReadPreference instance');\n\n  // Does the cmd have a readPreference\n  if(cmd.readPreference) {\n    readPreference = cmd.readPreference;\n  }\n\n  // Ensure we have at least some options\n  options = options || {};\n  // Set the optional batchSize\n  cursorState.batchSize = cmd.batchSize || cursorState.batchSize;\n  var numberToReturn = 0;\n\n  // Unpack the limit and batchSize values\n  if(cursorState.limit == 0) {\n    numberToReturn = cursorState.batchSize;\n  } else if(cursorState.limit < 0 || cursorState.limit < cursorState.batchSize || (cursorState.limit > 0 && cursorState.batchSize == 0)) {\n    numberToReturn = cursorState.limit;\n  } else {\n    numberToReturn = cursorState.batchSize;\n  }\n\n  var numberToSkip = cursorState.skip || 0;\n  // Build actual find command\n  var findCmd = {};\n  // Using special modifier\n  var usesSpecialModifier = false;\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if(topology.type == 'mongos' && readPreference) {\n    findCmd['$readPreference'] = readPreference.toJSON();\n    usesSpecialModifier = true;\n  }\n\n  // Add special modifiers to the query\n  if(cmd.sort) findCmd['orderby'] = cmd.sort, usesSpecialModifier = true;\n  if(cmd.hint) findCmd['$hint'] = cmd.hint, usesSpecialModifier = true;\n  if(cmd.snapshot) findCmd['$snapshot'] = cmd.snapshot, usesSpecialModifier = true;\n  if(cmd.returnKey) findCmd['$returnKey'] = cmd.returnKey, usesSpecialModifier = true;\n  if(cmd.maxScan) findCmd['$maxScan'] = cmd.maxScan, usesSpecialModifier = true;\n  if(cmd.min) findCmd['$min'] = cmd.min, usesSpecialModifier = true;\n  if(cmd.max) findCmd['$max'] = cmd.max, usesSpecialModifier = true;\n  if(cmd.showDiskLoc) findCmd['$showDiskLoc'] = cmd.showDiskLoc, usesSpecialModifier = true;\n  if(cmd.comment) findCmd['$comment'] = cmd.comment, usesSpecialModifier = true;\n  if(cmd.maxTimeMS) findCmd['$maxTimeMS'] = cmd.maxTimeMS, usesSpecialModifier = true;\n\n  if(cmd.explain) {\n\t// nToReturn must be 0 (match all) or negative (match N and close cursor)\n\t// nToReturn > 0 will give explain results equivalent to limit(0)\n    numberToReturn = -Math.abs(cmd.limit || 0);\n    usesSpecialModifier = true;\n    findCmd['$explain'] = true;\n  }\n\n  // If we have a special modifier\n  if(usesSpecialModifier) {\n    findCmd['$query'] = cmd.query;\n  } else {\n    findCmd = cmd.query;\n  }\n\n  // Throw on majority readConcern passed in\n  if(cmd.readConcern && cmd.readConcern.level != 'local') {\n    throw new MongoError(f('server find command does not support a readConcern level of %s', cmd.readConcern.level));\n  }\n\n  // Remove readConcern, ensure no failing commands\n  if(cmd.readConcern) {\n    cmd = copy(cmd);\n    delete cmd['readConcern'];\n  }\n\n  // Serialize functions\n  var serializeFunctions = typeof options.serializeFunctions == 'boolean'\n    ? options.serializeFunctions : false;\n  var ignoreUndefined = typeof options.ignoreUndefined == 'boolean'\n    ? options.ignoreUndefined : false;\n\n  // Build Query object\n  var query = new Query(bson, ns, findCmd, {\n      numberToSkip: numberToSkip, numberToReturn: numberToReturn\n    , checkKeys: false, returnFieldSelector: cmd.fields\n    , serializeFunctions: serializeFunctions\n    , ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Set up the option bits for wire protocol\n  if(typeof cmd.tailable == 'boolean') {\n    query.tailable = cmd.tailable;\n  }\n\n  if(typeof cmd.oplogReplay == 'boolean') {\n    query.oplogReplay = cmd.oplogReplay;\n  }\n\n  if(typeof cmd.noCursorTimeout == 'boolean') {\n    query.noCursorTimeout = cmd.noCursorTimeout;\n  }\n\n  if(typeof cmd.awaitData == 'boolean') {\n    query.awaitData = cmd.awaitData;\n  }\n\n  if(typeof cmd.exhaust == 'boolean') {\n    query.exhaust = cmd.exhaust;\n  }\n\n  if(typeof cmd.partial == 'boolean') {\n    query.partial = cmd.partial;\n  }\n\n  // Return the query\n  return query;\n}\n\n//\n// Set up a command cursor\nvar setupCommand = function(bson, ns, cmd, cursorState, topology, options) {\n  var readPreference = options.readPreference || new ReadPreference('primary');\n  if(typeof readPreference == 'string') readPreference = new ReadPreference(readPreference);\n  if(!(readPreference instanceof ReadPreference)) throw new MongoError('readPreference must be a ReadPreference instance');\n\n  // Does the cmd have a readPreference\n  if(cmd.readPreference) {\n    readPreference = cmd.readPreference;\n  }\n\n  // Set empty options object\n  options = options || {}\n\n  // Final query\n  var finalCmd = {};\n  for(var name in cmd) {\n    finalCmd[name] = cmd[name];\n  }\n\n  // Build command namespace\n  var parts = ns.split(/\\./);\n\n  // Serialize functions\n  var serializeFunctions = typeof options.serializeFunctions == 'boolean'\n    ? options.serializeFunctions : false;\n\n  var ignoreUndefined = typeof options.ignoreUndefined == 'boolean'\n    ? options.ignoreUndefined : false;\n\n  // Throw on majority readConcern passed in\n  if(cmd.readConcern && cmd.readConcern.level != 'local') {\n    throw new MongoError(f('server %s command does not support a readConcern level of %s', JSON.stringify(cmd), cmd.readConcern.level));\n  }\n\n  // Remove readConcern, ensure no failing commands\n  if(cmd.readConcern) delete cmd['readConcern'];\n\n  // We have a Mongos topology, check if we need to add a readPreference\n  if(topology.type == 'mongos'\n    && readPreference\n    && readPreference.preference != 'primary') {\n    finalCmd = {\n      '$query': finalCmd,\n      '$readPreference': readPreference.toJSON()\n    };\n  }\n\n  // Build Query object\n  var query = new Query(bson, f('%s.$cmd', parts.shift()), finalCmd, {\n      numberToSkip: 0, numberToReturn: -1\n    , checkKeys: false, serializeFunctions: serializeFunctions\n    , ignoreUndefined: ignoreUndefined\n  });\n\n  // Set query flags\n  query.slaveOk = readPreference.slaveOk();\n\n  // Return the query\n  return query;\n}\n\n/**\n * @ignore\n */\nvar bindToCurrentDomain = function(callback) {\n  var domain = process.domain;\n  if(domain == null || callback == null) {\n    return callback;\n  } else {\n    return domain.bind(callback);\n  }\n}\n\nmodule.exports = WireProtocol;\n"};
jalangiLabel1805:
    while (true) {
        try {
            J$.Se(8057, '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/wireprotocol/2_6_support_jalangi_.js', '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb-core/lib/wireprotocol/2_6_support.js');
            J$.N(8065, '__secret__S$', __secret__S$, 0);
            J$.N(8073, '__secret__traits__', __secret__traits__, 0);
            J$.N(8081, 'Insert', Insert, 0);
            J$.N(8089, 'Update', Update, 0);
            J$.N(8097, 'Remove', Remove, 0);
            J$.N(8105, 'Query', Query, 0);
            J$.N(8113, 'copy', copy, 0);
            J$.N(8121, 'KillCursor', KillCursor, 0);
            J$.N(8129, 'GetMore', GetMore, 0);
            J$.N(8137, 'ReadPreference', ReadPreference, 0);
            J$.N(8145, 'f', f, 0);
            J$.N(8153, 'CommandResult', CommandResult, 0);
            J$.N(8161, 'MongoError', MongoError, 0);
            J$.N(8169, 'Long', Long, 0);
            J$.N(8177, 'WireProtocol', WireProtocol, 0);
            J$.N(8185, 'executeWrite', executeWrite, 0);
            J$.N(8193, 'setupClassicFind', setupClassicFind, 0);
            J$.N(8201, 'setupCommand', setupCommand, 0);
            J$.N(8209, 'bindToCurrentDomain', bindToCurrentDomain, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var Insert = J$.X1(497, J$.W(489, 'Insert', J$.G(121, J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, './commands', 21, false)), 'Insert', 0), Insert, 3)), Update = J$.X1(513, J$.W(505, 'Update', J$.G(153, J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, './commands', 21, false)), 'Update', 0), Update, 3)), Remove = J$.X1(529, J$.W(521, 'Remove', J$.G(185, J$.F(177, J$.R(161, 'require', require, 2), 0)(J$.T(169, './commands', 21, false)), 'Remove', 0), Remove, 3)), Query = J$.X1(545, J$.W(537, 'Query', J$.G(217, J$.F(209, J$.R(193, 'require', require, 2), 0)(J$.T(201, '../connection/commands', 21, false)), 'Query', 0), Query, 3)), copy = J$.X1(561, J$.W(553, 'copy', J$.G(249, J$.F(241, J$.R(225, 'require', require, 2), 0)(J$.T(233, '../connection/utils', 21, false)), 'copy', 0), copy, 3)), KillCursor = J$.X1(577, J$.W(569, 'KillCursor', J$.G(281, J$.F(273, J$.R(257, 'require', require, 2), 0)(J$.T(265, '../connection/commands', 21, false)), 'KillCursor', 0), KillCursor, 3)), GetMore = J$.X1(593, J$.W(585, 'GetMore', J$.G(313, J$.F(305, J$.R(289, 'require', require, 2), 0)(J$.T(297, '../connection/commands', 21, false)), 'GetMore', 0), GetMore, 3)), Query = J$.X1(609, J$.W(601, 'Query', J$.G(345, J$.F(337, J$.R(321, 'require', require, 2), 0)(J$.T(329, '../connection/commands', 21, false)), 'Query', 0), Query, 3)), ReadPreference = J$.X1(625, J$.W(617, 'ReadPreference', J$.F(369, J$.R(353, 'require', require, 2), 0)(J$.T(361, '../topologies/read_preference', 21, false)), ReadPreference, 3)), f = J$.X1(641, J$.W(633, 'f', J$.G(401, J$.F(393, J$.R(377, 'require', require, 2), 0)(J$.T(385, 'util', 21, false)), 'format', 0), f, 3)), CommandResult = J$.X1(657, J$.W(649, 'CommandResult', J$.F(425, J$.R(409, 'require', require, 2), 0)(J$.T(417, '../topologies/command_result', 21, false)), CommandResult, 3)), MongoError = J$.X1(673, J$.W(665, 'MongoError', J$.F(449, J$.R(433, 'require', require, 2), 0)(J$.T(441, '../error', 21, false)), MongoError, 3)), Long = J$.X1(689, J$.W(681, 'Long', J$.G(481, J$.F(473, J$.R(457, 'require', require, 2), 0)(J$.T(465, 'bson', 21, false)), 'Long', 0), Long, 3));
            var WireProtocol = J$.X1(729, J$.W(721, 'WireProtocol', J$.T(713, function () {
                jalangiLabel1793:
                    while (true) {
                        try {
                            J$.Fe(697, arguments.callee, this, arguments);
                            arguments = J$.N(705, 'arguments', arguments, 4);
                        } catch (J$e) {
                            J$.Ex(8217, J$e);
                        } finally {
                            if (J$.Fr(8225))
                                continue jalangiLabel1793;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 697), WireProtocol, 3));
            var executeWrite = J$.X1(1673, J$.W(1665, 'executeWrite', J$.T(1657, function (topology, type, opsField, ns, ops, options, callback) {
                jalangiLabel1794:
                    while (true) {
                        try {
                            J$.Fe(1537, arguments.callee, this, arguments);
                            arguments = J$.N(1545, 'arguments', arguments, 4);
                            topology = J$.N(1553, 'topology', topology, 4);
                            type = J$.N(1561, 'type', type, 4);
                            opsField = J$.N(1569, 'opsField', opsField, 4);
                            ns = J$.N(1577, 'ns', ns, 4);
                            ops = J$.N(1585, 'ops', ops, 4);
                            options = J$.N(1593, 'options', options, 4);
                            callback = J$.N(1601, 'callback', callback, 4);
                            J$.N(1609, 'p', p, 0);
                            J$.N(1617, 'd', d, 0);
                            J$.N(1625, 'ordered', ordered, 0);
                            J$.N(1633, 'writeConcern', writeConcern, 0);
                            J$.N(1641, 'writeCommand', writeCommand, 0);
                            J$.N(1649, 'opts', opts, 0);
                            if (J$.X1(8233, J$.C(8, J$.B(10, '==', J$.G(745, J$.R(737, 'ops', ops, 0), 'length', 0), J$.T(753, 0, 22, false), 0))))
                                throw J$.X1(793, J$.Th(785, J$.F(777, J$.R(761, 'MongoError', MongoError, 1), 1)(J$.T(769, 'insert must contain at least one document', 21, false))));
                            if (J$.X1(8241, J$.C(16, J$.B(26, '==', J$.U(18, 'typeof', J$.R(801, 'options', options, 0)), J$.T(809, 'function', 21, false), 0)))) {
                                J$.X1(833, callback = J$.W(825, 'callback', J$.R(817, 'options', options, 0), callback, 0));
                                J$.X1(857, options = J$.W(849, 'options', J$.T(841, {}, 11, false), options, 0));
                            }
                            var p = J$.X1(897, J$.W(889, 'p', J$.M(881, J$.R(865, 'ns', ns, 0), 'split', 0)(J$.T(873, '.', 21, false)), p, 1));
                            var d = J$.X1(929, J$.W(921, 'd', J$.M(913, J$.R(905, 'p', p, 0), 'shift', 0)(), d, 1));
                            var ordered = J$.X1(993, J$.W(985, 'ordered', J$.X1(8249, J$.C(24, J$.B(42, '==', J$.U(34, 'typeof', J$.G(945, J$.R(937, 'options', options, 0), 'ordered', 0)), J$.T(953, 'boolean', 21, false), 0))) ? J$.G(969, J$.R(961, 'options', options, 0), 'ordered', 0) : J$.T(977, true, 23, false), ordered, 1));
                            var writeConcern = J$.X1(1033, J$.W(1025, 'writeConcern', J$.C(32, J$.G(1009, J$.R(1001, 'options', options, 0), 'writeConcern', 0)) ? J$._() : J$.T(1017, {}, 11, false), writeConcern, 1));
                            var writeCommand = J$.X1(1057, J$.W(1049, 'writeCommand', J$.T(1041, {}, 11, false), writeCommand, 1));
                            J$.X1(1113, J$.P(1105, J$.R(1065, 'writeCommand', writeCommand, 0), J$.R(1073, 'type', type, 0), J$.M(1097, J$.R(1081, 'p', p, 0), 'join', 0)(J$.T(1089, '.', 21, false)), 2));
                            J$.X1(1153, J$.P(1145, J$.R(1121, 'writeCommand', writeCommand, 0), J$.R(1129, 'opsField', opsField, 0), J$.R(1137, 'ops', ops, 0), 2));
                            J$.X1(1185, J$.P(1177, J$.R(1161, 'writeCommand', writeCommand, 0), 'ordered', J$.R(1169, 'ordered', ordered, 0), 0));
                            if (J$.X1(8257, J$.C(48, J$.C(40, J$.R(1193, 'writeConcern', writeConcern, 0)) ? J$.B(50, '>', J$.G(1225, J$.M(1217, J$.R(1201, 'Object', Object, 2), 'keys', 0)(J$.R(1209, 'writeConcern', writeConcern, 0)), 'length', 0), J$.T(1233, 0, 22, false), 0) : J$._()))) {
                                J$.X1(1265, J$.P(1257, J$.R(1241, 'writeCommand', writeCommand, 0), 'writeConcern', J$.R(1249, 'writeConcern', writeConcern, 0), 0));
                            }
                            var opts = J$.X1(1289, J$.W(1281, 'opts', J$.T(1273, {}, 11, false), opts, 1));
                            if (J$.X1(8265, J$.C(56, J$.B(58, '==', J$.R(1297, 'type', type, 0), J$.T(1305, 'insert', 21, false), 0))))
                                J$.X1(1337, J$.P(1329, J$.R(1313, 'opts', opts, 0), 'checkKeys', J$.T(1321, true, 23, false), 0));
                            if (J$.X1(8273, J$.C(64, J$.G(1353, J$.R(1345, 'options', options, 0), 'serializeFunctions', 0))))
                                J$.X1(1393, J$.P(1385, J$.R(1361, 'opts', opts, 0), 'serializeFunctions', J$.G(1377, J$.R(1369, 'options', options, 0), 'serializeFunctions', 0), 0));
                            if (J$.X1(8281, J$.C(72, J$.G(1409, J$.R(1401, 'options', options, 0), 'ignoreUndefined', 0))))
                                J$.X1(1449, J$.P(1441, J$.R(1417, 'opts', opts, 0), 'ignoreUndefined', J$.G(1433, J$.R(1425, 'options', options, 0), 'ignoreUndefined', 0), 0));
                            J$.X1(1529, J$.M(1521, J$.R(1457, 'topology', topology, 0), 'command', 0)(J$.F(1489, J$.R(1465, 'f', f, 1), 0)(J$.T(1473, '%s.$cmd', 21, false), J$.R(1481, 'd', d, 0)), J$.R(1497, 'writeCommand', writeCommand, 0), J$.R(1505, 'opts', opts, 0), J$.R(1513, 'callback', callback, 0)));
                        } catch (J$e) {
                            J$.Ex(8289, J$e);
                        } finally {
                            if (J$.Fr(8297))
                                continue jalangiLabel1794;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1537), executeWrite, 3));
            J$.X1(1881, J$.P(1873, J$.G(1689, J$.R(1681, 'WireProtocol', WireProtocol, 1), 'prototype', 0), 'insert', J$.T(1865, function (topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) {
                jalangiLabel1795:
                    while (true) {
                        try {
                            J$.Fe(1777, arguments.callee, this, arguments);
                            arguments = J$.N(1785, 'arguments', arguments, 4);
                            topology = J$.N(1793, 'topology', topology, 4);
                            ismaster = J$.N(1801, 'ismaster', ismaster, 4);
                            ns = J$.N(1809, 'ns', ns, 4);
                            bson = J$.N(1817, 'bson', bson, 4);
                            pool = J$.N(1825, 'pool', pool, 4);
                            callbacks = J$.N(1833, 'callbacks', callbacks, 4);
                            ops = J$.N(1841, 'ops', ops, 4);
                            options = J$.N(1849, 'options', options, 4);
                            callback = J$.N(1857, 'callback', callback, 4);
                            J$.X1(1769, J$.F(1761, J$.R(1697, 'executeWrite', executeWrite, 1), 0)(J$.R(1705, 'topology', topology, 0), J$.T(1713, 'insert', 21, false), J$.T(1721, 'documents', 21, false), J$.R(1729, 'ns', ns, 0), J$.R(1737, 'ops', ops, 0), J$.R(1745, 'options', options, 0), J$.R(1753, 'callback', callback, 0)));
                        } catch (J$e) {
                            J$.Ex(8305, J$e);
                        } finally {
                            if (J$.Fr(8313))
                                continue jalangiLabel1795;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1777), 0));
            J$.X1(2089, J$.P(2081, J$.G(1897, J$.R(1889, 'WireProtocol', WireProtocol, 1), 'prototype', 0), 'update', J$.T(2073, function (topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) {
                jalangiLabel1796:
                    while (true) {
                        try {
                            J$.Fe(1985, arguments.callee, this, arguments);
                            arguments = J$.N(1993, 'arguments', arguments, 4);
                            topology = J$.N(2001, 'topology', topology, 4);
                            ismaster = J$.N(2009, 'ismaster', ismaster, 4);
                            ns = J$.N(2017, 'ns', ns, 4);
                            bson = J$.N(2025, 'bson', bson, 4);
                            pool = J$.N(2033, 'pool', pool, 4);
                            callbacks = J$.N(2041, 'callbacks', callbacks, 4);
                            ops = J$.N(2049, 'ops', ops, 4);
                            options = J$.N(2057, 'options', options, 4);
                            callback = J$.N(2065, 'callback', callback, 4);
                            J$.X1(1977, J$.F(1969, J$.R(1905, 'executeWrite', executeWrite, 1), 0)(J$.R(1913, 'topology', topology, 0), J$.T(1921, 'update', 21, false), J$.T(1929, 'updates', 21, false), J$.R(1937, 'ns', ns, 0), J$.R(1945, 'ops', ops, 0), J$.R(1953, 'options', options, 0), J$.R(1961, 'callback', callback, 0)));
                        } catch (J$e) {
                            J$.Ex(8321, J$e);
                        } finally {
                            if (J$.Fr(8329))
                                continue jalangiLabel1796;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1985), 0));
            J$.X1(2297, J$.P(2289, J$.G(2105, J$.R(2097, 'WireProtocol', WireProtocol, 1), 'prototype', 0), 'remove', J$.T(2281, function (topology, ismaster, ns, bson, pool, callbacks, ops, options, callback) {
                jalangiLabel1797:
                    while (true) {
                        try {
                            J$.Fe(2193, arguments.callee, this, arguments);
                            arguments = J$.N(2201, 'arguments', arguments, 4);
                            topology = J$.N(2209, 'topology', topology, 4);
                            ismaster = J$.N(2217, 'ismaster', ismaster, 4);
                            ns = J$.N(2225, 'ns', ns, 4);
                            bson = J$.N(2233, 'bson', bson, 4);
                            pool = J$.N(2241, 'pool', pool, 4);
                            callbacks = J$.N(2249, 'callbacks', callbacks, 4);
                            ops = J$.N(2257, 'ops', ops, 4);
                            options = J$.N(2265, 'options', options, 4);
                            callback = J$.N(2273, 'callback', callback, 4);
                            J$.X1(2185, J$.F(2177, J$.R(2113, 'executeWrite', executeWrite, 1), 0)(J$.R(2121, 'topology', topology, 0), J$.T(2129, 'delete', 21, false), J$.T(2137, 'deletes', 21, false), J$.R(2145, 'ns', ns, 0), J$.R(2153, 'ops', ops, 0), J$.R(2161, 'options', options, 0), J$.R(2169, 'callback', callback, 0)));
                        } catch (J$e) {
                            J$.Ex(8337, J$e);
                        } finally {
                            if (J$.Fr(8345))
                                continue jalangiLabel1797;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2193), 0));
            J$.X1(2609, J$.P(2601, J$.G(2313, J$.R(2305, 'WireProtocol', WireProtocol, 1), 'prototype', 0), 'killCursor', J$.T(2593, function (bson, ns, cursorId, connection, callbacks, callback) {
                jalangiLabel1798:
                    while (true) {
                        try {
                            J$.Fe(2521, arguments.callee, this, arguments);
                            arguments = J$.N(2529, 'arguments', arguments, 4);
                            bson = J$.N(2537, 'bson', bson, 4);
                            ns = J$.N(2545, 'ns', ns, 4);
                            cursorId = J$.N(2553, 'cursorId', cursorId, 4);
                            connection = J$.N(2561, 'connection', connection, 4);
                            callbacks = J$.N(2569, 'callbacks', callbacks, 4);
                            callback = J$.N(2577, 'callback', callback, 4);
                            J$.N(2585, 'killCursor', killCursor, 0);
                            var killCursor = J$.X1(2369, J$.W(2361, 'killCursor', J$.F(2353, J$.R(2321, 'KillCursor', KillCursor, 1), 1)(J$.R(2329, 'bson', bson, 0), J$.T(2345, [J$.R(2337, 'cursorId', cursorId, 0)], 10, false)), killCursor, 1));
                            if (J$.X1(8353, J$.C(88, J$.C(80, J$.R(2377, 'connection', connection, 0)) ? J$.M(2393, J$.R(2385, 'connection', connection, 0), 'isConnected', 0)() : J$._())))
                                J$.X1(2433, J$.M(2425, J$.R(2401, 'connection', connection, 0), 'write', 0)(J$.M(2417, J$.R(2409, 'killCursor', killCursor, 0), 'toBin', 0)()));
                            J$.X1(2465, cursorId = J$.W(2457, 'cursorId', J$.G(2449, J$.R(2441, 'Long', Long, 1), 'ZERO', 0), cursorId, 0));
                            if (J$.X1(8361, J$.C(96, J$.R(2473, 'callback', callback, 0))))
                                J$.X1(2513, J$.F(2505, J$.R(2481, 'callback', callback, 0), 0)(J$.T(2489, null, 25, false), J$.T(2497, null, 25, false)));
                        } catch (J$e) {
                            J$.Ex(8369, J$e);
                        } finally {
                            if (J$.Fr(8377))
                                continue jalangiLabel1798;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2521), 0));
            J$.X1(3369, J$.P(3361, J$.G(2625, J$.R(2617, 'WireProtocol', WireProtocol, 1), 'prototype', 0), 'getMore', J$.T(3353, function (bson, ns, cursorState, batchSize, raw, connection, callbacks, options, callback) {
                jalangiLabel1800:
                    while (true) {
                        try {
                            J$.Fe(3249, arguments.callee, this, arguments);
                            arguments = J$.N(3257, 'arguments', arguments, 4);
                            bson = J$.N(3265, 'bson', bson, 4);
                            ns = J$.N(3273, 'ns', ns, 4);
                            cursorState = J$.N(3281, 'cursorState', cursorState, 4);
                            batchSize = J$.N(3289, 'batchSize', batchSize, 4);
                            raw = J$.N(3297, 'raw', raw, 4);
                            connection = J$.N(3305, 'connection', connection, 4);
                            callbacks = J$.N(3313, 'callbacks', callbacks, 4);
                            options = J$.N(3321, 'options', options, 4);
                            callback = J$.N(3329, 'callback', callback, 4);
                            J$.N(3337, 'getMore', getMore, 0);
                            J$.N(3345, 'queryCallback', queryCallback, 0);
                            var getMore = J$.X1(2705, J$.W(2697, 'getMore', J$.F(2689, J$.R(2633, 'GetMore', GetMore, 1), 1)(J$.R(2641, 'bson', bson, 0), J$.R(2649, 'ns', ns, 0), J$.G(2665, J$.R(2657, 'cursorState', cursorState, 0), 'cursorId', 0), J$.T(2681, {
                                numberToReturn: J$.R(2673, 'batchSize', batchSize, 0)
                            }, 11, false)), getMore, 1));
                            var queryCallback = J$.X1(3113, J$.W(3105, 'queryCallback', J$.T(3097, function (err, r) {
                                jalangiLabel1799:
                                    while (true) {
                                        try {
                                            J$.Fe(3057, arguments.callee, this, arguments);
                                            arguments = J$.N(3065, 'arguments', arguments, 4);
                                            err = J$.N(3073, 'err', err, 4);
                                            r = J$.N(3081, 'r', r, 4);
                                            J$.N(3089, 'cursorId', cursorId, 0);
                                            if (J$.X1(8385, J$.C(104, J$.R(2713, 'err', err, 0))))
                                                return J$.X1(2753, J$.Rt(2745, J$.F(2737, J$.R(2721, 'callback', callback, 0), 0)(J$.R(2729, 'err', err, 0))));
                                            if (J$.X1(8393, J$.C(112, J$.B(82, '!=', J$.B(74, '&', J$.G(2769, J$.R(2761, 'r', r, 0), 'responseFlags', 0), J$.B(66, '<<', J$.T(2777, 1, 22, false), J$.T(2785, 0, 22, false), 0), 0), J$.T(2793, 0, 22, false), 0)))) {
                                                return J$.X1(2857, J$.Rt(2849, J$.F(2841, J$.R(2801, 'callback', callback, 0), 0)(J$.F(2825, J$.R(2809, 'MongoError', MongoError, 1), 1)(J$.T(2817, 'cursor killed or timed out', 21, false)), J$.T(2833, null, 25, false))));
                                            }
                                            var cursorId = J$.X1(2945, J$.W(2937, 'cursorId', J$.X1(8401, J$.C(120, J$.B(98, '==', J$.U(90, 'typeof', J$.G(2873, J$.R(2865, 'r', r, 0), 'cursorId', 0)), J$.T(2881, 'number', 21, false), 0))) ? J$.M(2913, J$.R(2889, 'Long', Long, 1), 'fromNumber', 0)(J$.G(2905, J$.R(2897, 'r', r, 0), 'cursorId', 0)) : J$.G(2929, J$.R(2921, 'r', r, 0), 'cursorId', 0), cursorId, 1));
                                            J$.X1(2985, J$.P(2977, J$.R(2953, 'cursorState', cursorState, 0), 'documents', J$.G(2969, J$.R(2961, 'r', r, 0), 'documents', 0), 0));
                                            J$.X1(3017, J$.P(3009, J$.R(2993, 'cursorState', cursorState, 0), 'cursorId', J$.R(3001, 'cursorId', cursorId, 0), 0));
                                            J$.X1(3049, J$.F(3041, J$.R(3025, 'callback', callback, 0), 0)(J$.T(3033, null, 25, false)));
                                        } catch (J$e) {
                                            J$.Ex(8409, J$e);
                                        } finally {
                                            if (J$.Fr(8417))
                                                continue jalangiLabel1799;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 3057), queryCallback, 1));
                            if (J$.X1(8425, J$.C(128, J$.R(3121, 'raw', raw, 0)))) {
                                J$.X1(3153, J$.P(3145, J$.R(3129, 'queryCallback', queryCallback, 0), 'raw', J$.R(3137, 'raw', raw, 0), 0));
                            }
                            J$.X1(3201, J$.M(3193, J$.R(3161, 'callbacks', callbacks, 0), 'register', 0)(J$.G(3177, J$.R(3169, 'getMore', getMore, 0), 'requestId', 0), J$.R(3185, 'queryCallback', queryCallback, 0)));
                            J$.X1(3241, J$.M(3233, J$.R(3209, 'connection', connection, 0), 'write', 0)(J$.M(3225, J$.R(3217, 'getMore', getMore, 0), 'toBin', 0)()));
                        } catch (J$e) {
                            J$.Ex(8433, J$e);
                        } finally {
                            if (J$.Fr(8441))
                                continue jalangiLabel1800;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3249), 0));
            J$.X1(3761, J$.P(3753, J$.G(3385, J$.R(3377, 'WireProtocol', WireProtocol, 1), 'prototype', 0), 'command', J$.T(3745, function (bson, ns, cmd, cursorState, topology, options) {
                jalangiLabel1801:
                    while (true) {
                        try {
                            J$.Fe(3681, arguments.callee, this, arguments);
                            arguments = J$.N(3689, 'arguments', arguments, 4);
                            bson = J$.N(3697, 'bson', bson, 4);
                            ns = J$.N(3705, 'ns', ns, 4);
                            cmd = J$.N(3713, 'cmd', cmd, 4);
                            cursorState = J$.N(3721, 'cursorState', cursorState, 4);
                            topology = J$.N(3729, 'topology', topology, 4);
                            options = J$.N(3737, 'options', options, 4);
                            if (J$.X1(8465, J$.C(152, J$.G(3401, J$.R(3393, 'cmd', cmd, 0), 'find', 0)))) {
                                return J$.X1(3481, J$.Rt(3473, J$.F(3465, J$.R(3409, 'setupClassicFind', setupClassicFind, 1), 0)(J$.R(3417, 'bson', bson, 0), J$.R(3425, 'ns', ns, 0), J$.R(3433, 'cmd', cmd, 0), J$.R(3441, 'cursorState', cursorState, 0), J$.R(3449, 'topology', topology, 0), J$.R(3457, 'options', options, 0))));
                            } else if (J$.X1(8457, J$.C(144, J$.B(106, '!=', J$.G(3497, J$.R(3489, 'cursorState', cursorState, 0), 'cursorId', 0), J$.T(3505, null, 25, false), 0)))) {
                            } else if (J$.X1(8449, J$.C(136, J$.R(3513, 'cmd', cmd, 0)))) {
                                return J$.X1(3593, J$.Rt(3585, J$.F(3577, J$.R(3521, 'setupCommand', setupCommand, 1), 0)(J$.R(3529, 'bson', bson, 0), J$.R(3537, 'ns', ns, 0), J$.R(3545, 'cmd', cmd, 0), J$.R(3553, 'cursorState', cursorState, 0), J$.R(3561, 'topology', topology, 0), J$.R(3569, 'options', options, 0))));
                            } else {
                                throw J$.X1(3673, J$.Th(3665, J$.F(3657, J$.R(3601, 'MongoError', MongoError, 1), 1)(J$.F(3649, J$.R(3609, 'f', f, 1), 0)(J$.T(3617, 'command %s does not return a cursor', 21, false), J$.M(3641, J$.R(3625, 'JSON', JSON, 2), 'stringify', 0)(J$.R(3633, 'cmd', cmd, 0))))));
                            }
                        } catch (J$e) {
                            J$.Ex(8473, J$e);
                        } finally {
                            if (J$.Fr(8481))
                                continue jalangiLabel1801;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3681), 0));
            var setupClassicFind = J$.X1(6665, J$.W(6657, 'setupClassicFind', J$.T(6649, function (bson, ns, cmd, cursorState, topology, options) {
                jalangiLabel1802:
                    while (true) {
                        try {
                            J$.Fe(6521, arguments.callee, this, arguments);
                            arguments = J$.N(6529, 'arguments', arguments, 4);
                            bson = J$.N(6537, 'bson', bson, 4);
                            ns = J$.N(6545, 'ns', ns, 4);
                            cmd = J$.N(6553, 'cmd', cmd, 4);
                            cursorState = J$.N(6561, 'cursorState', cursorState, 4);
                            topology = J$.N(6569, 'topology', topology, 4);
                            options = J$.N(6577, 'options', options, 4);
                            J$.N(6585, 'readPreference', readPreference, 0);
                            J$.N(6593, 'numberToReturn', numberToReturn, 0);
                            J$.N(6601, 'numberToSkip', numberToSkip, 0);
                            J$.N(6609, 'findCmd', findCmd, 0);
                            J$.N(6617, 'usesSpecialModifier', usesSpecialModifier, 0);
                            J$.N(6625, 'serializeFunctions', serializeFunctions, 0);
                            J$.N(6633, 'ignoreUndefined', ignoreUndefined, 0);
                            J$.N(6641, 'query', query, 0);
                            var readPreference = J$.X1(3817, J$.W(3809, 'readPreference', J$.C(160, J$.G(3777, J$.R(3769, 'options', options, 0), 'readPreference', 0)) ? J$._() : J$.F(3801, J$.R(3785, 'ReadPreference', ReadPreference, 1), 1)(J$.T(3793, 'primary', 21, false)), readPreference, 1));
                            if (J$.X1(8489, J$.C(168, J$.B(122, '==', J$.U(114, 'typeof', J$.R(3825, 'readPreference', readPreference, 0)), J$.T(3833, 'string', 21, false), 0))))
                                J$.X1(3873, readPreference = J$.W(3865, 'readPreference', J$.F(3857, J$.R(3841, 'ReadPreference', ReadPreference, 1), 1)(J$.R(3849, 'readPreference', readPreference, 0)), readPreference, 0));
                            if (J$.X1(8497, J$.C(176, J$.U(138, '!', J$.B(130, 'instanceof', J$.R(3881, 'readPreference', readPreference, 0), J$.R(3889, 'ReadPreference', ReadPreference, 1), 0)))))
                                throw J$.X1(3929, J$.Th(3921, J$.F(3913, J$.R(3897, 'MongoError', MongoError, 1), 1)(J$.T(3905, 'readPreference must be a ReadPreference instance', 21, false))));
                            if (J$.X1(8505, J$.C(184, J$.G(3945, J$.R(3937, 'cmd', cmd, 0), 'readPreference', 0)))) {
                                J$.X1(3977, readPreference = J$.W(3969, 'readPreference', J$.G(3961, J$.R(3953, 'cmd', cmd, 0), 'readPreference', 0), readPreference, 0));
                            }
                            J$.X1(4009, options = J$.W(4001, 'options', J$.C(192, J$.R(3985, 'options', options, 0)) ? J$._() : J$.T(3993, {}, 11, false), options, 0));
                            J$.X1(4065, J$.P(4057, J$.R(4017, 'cursorState', cursorState, 0), 'batchSize', J$.C(200, J$.G(4033, J$.R(4025, 'cmd', cmd, 0), 'batchSize', 0)) ? J$._() : J$.G(4049, J$.R(4041, 'cursorState', cursorState, 0), 'batchSize', 0), 0));
                            var numberToReturn = J$.X1(4089, J$.W(4081, 'numberToReturn', J$.T(4073, 0, 22, false), numberToReturn, 1));
                            if (J$.X1(8521, J$.C(240, J$.B(146, '==', J$.G(4105, J$.R(4097, 'cursorState', cursorState, 0), 'limit', 0), J$.T(4113, 0, 22, false), 0)))) {
                                J$.X1(4145, numberToReturn = J$.W(4137, 'numberToReturn', J$.G(4129, J$.R(4121, 'cursorState', cursorState, 0), 'batchSize', 0), numberToReturn, 0));
                            } else if (J$.X1(8513, J$.C(232, J$.C(224, J$.C(208, J$.B(154, '<', J$.G(4161, J$.R(4153, 'cursorState', cursorState, 0), 'limit', 0), J$.T(4169, 0, 22, false), 0)) ? J$._() : J$.B(162, '<', J$.G(4185, J$.R(4177, 'cursorState', cursorState, 0), 'limit', 0), J$.G(4201, J$.R(4193, 'cursorState', cursorState, 0), 'batchSize', 0), 0)) ? J$._() : J$.C(216, J$.B(170, '>', J$.G(4217, J$.R(4209, 'cursorState', cursorState, 0), 'limit', 0), J$.T(4225, 0, 22, false), 0)) ? J$.B(178, '==', J$.G(4241, J$.R(4233, 'cursorState', cursorState, 0), 'batchSize', 0), J$.T(4249, 0, 22, false), 0) : J$._()))) {
                                J$.X1(4281, numberToReturn = J$.W(4273, 'numberToReturn', J$.G(4265, J$.R(4257, 'cursorState', cursorState, 0), 'limit', 0), numberToReturn, 0));
                            } else {
                                J$.X1(4313, numberToReturn = J$.W(4305, 'numberToReturn', J$.G(4297, J$.R(4289, 'cursorState', cursorState, 0), 'batchSize', 0), numberToReturn, 0));
                            }
                            var numberToSkip = J$.X1(4353, J$.W(4345, 'numberToSkip', J$.C(248, J$.G(4329, J$.R(4321, 'cursorState', cursorState, 0), 'skip', 0)) ? J$._() : J$.T(4337, 0, 22, false), numberToSkip, 1));
                            var findCmd = J$.X1(4377, J$.W(4369, 'findCmd', J$.T(4361, {}, 11, false), findCmd, 1));
                            var usesSpecialModifier = J$.X1(4401, J$.W(4393, 'usesSpecialModifier', J$.T(4385, false, 23, false), usesSpecialModifier, 1));
                            if (J$.X1(8529, J$.C(264, J$.C(256, J$.B(186, '==', J$.G(4417, J$.R(4409, 'topology', topology, 0), 'type', 0), J$.T(4425, 'mongos', 21, false), 0)) ? J$.R(4433, 'readPreference', readPreference, 0) : J$._()))) {
                                J$.X1(4481, J$.P(4473, J$.R(4441, 'findCmd', findCmd, 0), J$.T(4449, '$readPreference', 21, false), J$.M(4465, J$.R(4457, 'readPreference', readPreference, 0), 'toJSON', 0)(), 2));
                                J$.X1(4505, usesSpecialModifier = J$.W(4497, 'usesSpecialModifier', J$.T(4489, true, 23, false), usesSpecialModifier, 0));
                            }
                            if (J$.X1(8537, J$.C(272, J$.G(4521, J$.R(4513, 'cmd', cmd, 0), 'sort', 0))))
                                J$.X1(4593, (J$.X1(4585, J$.P(4561, J$.R(4529, 'findCmd', findCmd, 0), J$.T(4537, 'orderby', 21, false), J$.G(4553, J$.R(4545, 'cmd', cmd, 0), 'sort', 0), 2)), usesSpecialModifier = J$.W(4577, 'usesSpecialModifier', J$.T(4569, true, 23, false), usesSpecialModifier, 0)));
                            if (J$.X1(8545, J$.C(280, J$.G(4609, J$.R(4601, 'cmd', cmd, 0), 'hint', 0))))
                                J$.X1(4681, (J$.X1(4673, J$.P(4649, J$.R(4617, 'findCmd', findCmd, 0), J$.T(4625, '$hint', 21, false), J$.G(4641, J$.R(4633, 'cmd', cmd, 0), 'hint', 0), 2)), usesSpecialModifier = J$.W(4665, 'usesSpecialModifier', J$.T(4657, true, 23, false), usesSpecialModifier, 0)));
                            if (J$.X1(8553, J$.C(288, J$.G(4697, J$.R(4689, 'cmd', cmd, 0), 'snapshot', 0))))
                                J$.X1(4769, (J$.X1(4761, J$.P(4737, J$.R(4705, 'findCmd', findCmd, 0), J$.T(4713, '$snapshot', 21, false), J$.G(4729, J$.R(4721, 'cmd', cmd, 0), 'snapshot', 0), 2)), usesSpecialModifier = J$.W(4753, 'usesSpecialModifier', J$.T(4745, true, 23, false), usesSpecialModifier, 0)));
                            if (J$.X1(8561, J$.C(296, J$.G(4785, J$.R(4777, 'cmd', cmd, 0), 'returnKey', 0))))
                                J$.X1(4857, (J$.X1(4849, J$.P(4825, J$.R(4793, 'findCmd', findCmd, 0), J$.T(4801, '$returnKey', 21, false), J$.G(4817, J$.R(4809, 'cmd', cmd, 0), 'returnKey', 0), 2)), usesSpecialModifier = J$.W(4841, 'usesSpecialModifier', J$.T(4833, true, 23, false), usesSpecialModifier, 0)));
                            if (J$.X1(8569, J$.C(304, J$.G(4873, J$.R(4865, 'cmd', cmd, 0), 'maxScan', 0))))
                                J$.X1(4945, (J$.X1(4937, J$.P(4913, J$.R(4881, 'findCmd', findCmd, 0), J$.T(4889, '$maxScan', 21, false), J$.G(4905, J$.R(4897, 'cmd', cmd, 0), 'maxScan', 0), 2)), usesSpecialModifier = J$.W(4929, 'usesSpecialModifier', J$.T(4921, true, 23, false), usesSpecialModifier, 0)));
                            if (J$.X1(8577, J$.C(312, J$.G(4961, J$.R(4953, 'cmd', cmd, 0), 'min', 0))))
                                J$.X1(5033, (J$.X1(5025, J$.P(5001, J$.R(4969, 'findCmd', findCmd, 0), J$.T(4977, '$min', 21, false), J$.G(4993, J$.R(4985, 'cmd', cmd, 0), 'min', 0), 2)), usesSpecialModifier = J$.W(5017, 'usesSpecialModifier', J$.T(5009, true, 23, false), usesSpecialModifier, 0)));
                            if (J$.X1(8585, J$.C(320, J$.G(5049, J$.R(5041, 'cmd', cmd, 0), 'max', 0))))
                                J$.X1(5121, (J$.X1(5113, J$.P(5089, J$.R(5057, 'findCmd', findCmd, 0), J$.T(5065, '$max', 21, false), J$.G(5081, J$.R(5073, 'cmd', cmd, 0), 'max', 0), 2)), usesSpecialModifier = J$.W(5105, 'usesSpecialModifier', J$.T(5097, true, 23, false), usesSpecialModifier, 0)));
                            if (J$.X1(8593, J$.C(328, J$.G(5137, J$.R(5129, 'cmd', cmd, 0), 'showDiskLoc', 0))))
                                J$.X1(5209, (J$.X1(5201, J$.P(5177, J$.R(5145, 'findCmd', findCmd, 0), J$.T(5153, '$showDiskLoc', 21, false), J$.G(5169, J$.R(5161, 'cmd', cmd, 0), 'showDiskLoc', 0), 2)), usesSpecialModifier = J$.W(5193, 'usesSpecialModifier', J$.T(5185, true, 23, false), usesSpecialModifier, 0)));
                            if (J$.X1(8601, J$.C(336, J$.G(5225, J$.R(5217, 'cmd', cmd, 0), 'comment', 0))))
                                J$.X1(5297, (J$.X1(5289, J$.P(5265, J$.R(5233, 'findCmd', findCmd, 0), J$.T(5241, '$comment', 21, false), J$.G(5257, J$.R(5249, 'cmd', cmd, 0), 'comment', 0), 2)), usesSpecialModifier = J$.W(5281, 'usesSpecialModifier', J$.T(5273, true, 23, false), usesSpecialModifier, 0)));
                            if (J$.X1(8609, J$.C(344, J$.G(5313, J$.R(5305, 'cmd', cmd, 0), 'maxTimeMS', 0))))
                                J$.X1(5385, (J$.X1(5377, J$.P(5353, J$.R(5321, 'findCmd', findCmd, 0), J$.T(5329, '$maxTimeMS', 21, false), J$.G(5345, J$.R(5337, 'cmd', cmd, 0), 'maxTimeMS', 0), 2)), usesSpecialModifier = J$.W(5369, 'usesSpecialModifier', J$.T(5361, true, 23, false), usesSpecialModifier, 0)));
                            if (J$.X1(8617, J$.C(360, J$.G(5401, J$.R(5393, 'cmd', cmd, 0), 'explain', 0)))) {
                                J$.X1(5457, numberToReturn = J$.W(5449, 'numberToReturn', J$.U(194, '-', J$.M(5441, J$.R(5409, 'Math', Math, 2), 'abs', 0)(J$.C(352, J$.G(5425, J$.R(5417, 'cmd', cmd, 0), 'limit', 0)) ? J$._() : J$.T(5433, 0, 22, false))), numberToReturn, 0));
                                J$.X1(5481, usesSpecialModifier = J$.W(5473, 'usesSpecialModifier', J$.T(5465, true, 23, false), usesSpecialModifier, 0));
                                J$.X1(5521, J$.P(5513, J$.R(5489, 'findCmd', findCmd, 0), J$.T(5497, '$explain', 21, false), J$.T(5505, true, 23, false), 2));
                            }
                            if (J$.X1(8625, J$.C(368, J$.R(5529, 'usesSpecialModifier', usesSpecialModifier, 0)))) {
                                J$.X1(5577, J$.P(5569, J$.R(5537, 'findCmd', findCmd, 0), J$.T(5545, '$query', 21, false), J$.G(5561, J$.R(5553, 'cmd', cmd, 0), 'query', 0), 2));
                            } else {
                                J$.X1(5609, findCmd = J$.W(5601, 'findCmd', J$.G(5593, J$.R(5585, 'cmd', cmd, 0), 'query', 0), findCmd, 0));
                            }
                            if (J$.X1(8633, J$.C(384, J$.C(376, J$.G(5625, J$.R(5617, 'cmd', cmd, 0), 'readConcern', 0)) ? J$.B(202, '!=', J$.G(5649, J$.G(5641, J$.R(5633, 'cmd', cmd, 0), 'readConcern', 0), 'level', 0), J$.T(5657, 'local', 21, false), 0) : J$._()))) {
                                throw J$.X1(5737, J$.Th(5729, J$.F(5721, J$.R(5665, 'MongoError', MongoError, 1), 1)(J$.F(5713, J$.R(5673, 'f', f, 1), 0)(J$.T(5681, 'server find command does not support a readConcern level of %s', 21, false), J$.G(5705, J$.G(5697, J$.R(5689, 'cmd', cmd, 0), 'readConcern', 0), 'level', 0)))));
                            }
                            if (J$.X1(8641, J$.C(392, J$.G(5753, J$.R(5745, 'cmd', cmd, 0), 'readConcern', 0)))) {
                                J$.X1(5793, cmd = J$.W(5785, 'cmd', J$.F(5777, J$.R(5761, 'copy', copy, 1), 0)(J$.R(5769, 'cmd', cmd, 0)), cmd, 0));
                                J$.X1(5817, J$.B(210, 'delete', J$.R(5801, 'cmd', cmd, 0), J$.T(5809, 'readConcern', 21, false), 4));
                            }
                            var serializeFunctions = J$.X1(5881, J$.W(5873, 'serializeFunctions', J$.X1(8649, J$.C(400, J$.B(226, '==', J$.U(218, 'typeof', J$.G(5833, J$.R(5825, 'options', options, 0), 'serializeFunctions', 0)), J$.T(5841, 'boolean', 21, false), 0))) ? J$.G(5857, J$.R(5849, 'options', options, 0), 'serializeFunctions', 0) : J$.T(5865, false, 23, false), serializeFunctions, 1));
                            var ignoreUndefined = J$.X1(5945, J$.W(5937, 'ignoreUndefined', J$.X1(8657, J$.C(408, J$.B(242, '==', J$.U(234, 'typeof', J$.G(5897, J$.R(5889, 'options', options, 0), 'ignoreUndefined', 0)), J$.T(5905, 'boolean', 21, false), 0))) ? J$.G(5921, J$.R(5913, 'options', options, 0), 'ignoreUndefined', 0) : J$.T(5929, false, 23, false), ignoreUndefined, 1));
                            var query = J$.X1(6065, J$.W(6057, 'query', J$.F(6049, J$.R(5953, 'Query', Query, 1), 1)(J$.R(5961, 'bson', bson, 0), J$.R(5969, 'ns', ns, 0), J$.R(5977, 'findCmd', findCmd, 0), J$.T(6041, {
                                numberToSkip: J$.R(5985, 'numberToSkip', numberToSkip, 0),
                                numberToReturn: J$.R(5993, 'numberToReturn', numberToReturn, 0),
                                checkKeys: J$.T(6001, false, 23, false),
                                returnFieldSelector: J$.G(6017, J$.R(6009, 'cmd', cmd, 0), 'fields', 0),
                                serializeFunctions: J$.R(6025, 'serializeFunctions', serializeFunctions, 0),
                                ignoreUndefined: J$.R(6033, 'ignoreUndefined', ignoreUndefined, 0)
                            }, 11, false)), query, 1));
                            J$.X1(6105, J$.P(6097, J$.R(6073, 'query', query, 0), 'slaveOk', J$.M(6089, J$.R(6081, 'readPreference', readPreference, 0), 'slaveOk', 0)(), 0));
                            if (J$.X1(8665, J$.C(416, J$.B(258, '==', J$.U(250, 'typeof', J$.G(6121, J$.R(6113, 'cmd', cmd, 0), 'tailable', 0)), J$.T(6129, 'boolean', 21, false), 0)))) {
                                J$.X1(6169, J$.P(6161, J$.R(6137, 'query', query, 0), 'tailable', J$.G(6153, J$.R(6145, 'cmd', cmd, 0), 'tailable', 0), 0));
                            }
                            if (J$.X1(8673, J$.C(424, J$.B(274, '==', J$.U(266, 'typeof', J$.G(6185, J$.R(6177, 'cmd', cmd, 0), 'oplogReplay', 0)), J$.T(6193, 'boolean', 21, false), 0)))) {
                                J$.X1(6233, J$.P(6225, J$.R(6201, 'query', query, 0), 'oplogReplay', J$.G(6217, J$.R(6209, 'cmd', cmd, 0), 'oplogReplay', 0), 0));
                            }
                            if (J$.X1(8681, J$.C(432, J$.B(290, '==', J$.U(282, 'typeof', J$.G(6249, J$.R(6241, 'cmd', cmd, 0), 'noCursorTimeout', 0)), J$.T(6257, 'boolean', 21, false), 0)))) {
                                J$.X1(6297, J$.P(6289, J$.R(6265, 'query', query, 0), 'noCursorTimeout', J$.G(6281, J$.R(6273, 'cmd', cmd, 0), 'noCursorTimeout', 0), 0));
                            }
                            if (J$.X1(8689, J$.C(440, J$.B(306, '==', J$.U(298, 'typeof', J$.G(6313, J$.R(6305, 'cmd', cmd, 0), 'awaitData', 0)), J$.T(6321, 'boolean', 21, false), 0)))) {
                                J$.X1(6361, J$.P(6353, J$.R(6329, 'query', query, 0), 'awaitData', J$.G(6345, J$.R(6337, 'cmd', cmd, 0), 'awaitData', 0), 0));
                            }
                            if (J$.X1(8697, J$.C(448, J$.B(322, '==', J$.U(314, 'typeof', J$.G(6377, J$.R(6369, 'cmd', cmd, 0), 'exhaust', 0)), J$.T(6385, 'boolean', 21, false), 0)))) {
                                J$.X1(6425, J$.P(6417, J$.R(6393, 'query', query, 0), 'exhaust', J$.G(6409, J$.R(6401, 'cmd', cmd, 0), 'exhaust', 0), 0));
                            }
                            if (J$.X1(8705, J$.C(456, J$.B(338, '==', J$.U(330, 'typeof', J$.G(6441, J$.R(6433, 'cmd', cmd, 0), 'partial', 0)), J$.T(6449, 'boolean', 21, false), 0)))) {
                                J$.X1(6489, J$.P(6481, J$.R(6457, 'query', query, 0), 'partial', J$.G(6473, J$.R(6465, 'cmd', cmd, 0), 'partial', 0), 0));
                            }
                            return J$.X1(6513, J$.Rt(6505, J$.R(6497, 'query', query, 0)));
                        } catch (J$e) {
                            J$.Ex(8713, J$e);
                        } finally {
                            if (J$.Fr(8721))
                                continue jalangiLabel1802;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 6521), setupClassicFind, 3));
            var setupCommand = J$.X1(7833, J$.W(7825, 'setupCommand', J$.T(7817, function (bson, ns, cmd, cursorState, topology, options) {
                jalangiLabel1803:
                    while (true) {
                        try {
                            J$.Fe(7697, arguments.callee, this, arguments);
                            arguments = J$.N(7705, 'arguments', arguments, 4);
                            bson = J$.N(7713, 'bson', bson, 4);
                            ns = J$.N(7721, 'ns', ns, 4);
                            cmd = J$.N(7729, 'cmd', cmd, 4);
                            cursorState = J$.N(7737, 'cursorState', cursorState, 4);
                            topology = J$.N(7745, 'topology', topology, 4);
                            options = J$.N(7753, 'options', options, 4);
                            J$.N(7761, 'readPreference', readPreference, 0);
                            J$.N(7769, 'finalCmd', finalCmd, 0);
                            J$.N(7777, 'name', name, 0);
                            J$.N(7785, 'parts', parts, 0);
                            J$.N(7793, 'serializeFunctions', serializeFunctions, 0);
                            J$.N(7801, 'ignoreUndefined', ignoreUndefined, 0);
                            J$.N(7809, 'query', query, 0);
                            var readPreference = J$.X1(6721, J$.W(6713, 'readPreference', J$.C(464, J$.G(6681, J$.R(6673, 'options', options, 0), 'readPreference', 0)) ? J$._() : J$.F(6705, J$.R(6689, 'ReadPreference', ReadPreference, 1), 1)(J$.T(6697, 'primary', 21, false)), readPreference, 1));
                            if (J$.X1(8729, J$.C(472, J$.B(354, '==', J$.U(346, 'typeof', J$.R(6729, 'readPreference', readPreference, 0)), J$.T(6737, 'string', 21, false), 0))))
                                J$.X1(6777, readPreference = J$.W(6769, 'readPreference', J$.F(6761, J$.R(6745, 'ReadPreference', ReadPreference, 1), 1)(J$.R(6753, 'readPreference', readPreference, 0)), readPreference, 0));
                            if (J$.X1(8737, J$.C(480, J$.U(370, '!', J$.B(362, 'instanceof', J$.R(6785, 'readPreference', readPreference, 0), J$.R(6793, 'ReadPreference', ReadPreference, 1), 0)))))
                                throw J$.X1(6833, J$.Th(6825, J$.F(6817, J$.R(6801, 'MongoError', MongoError, 1), 1)(J$.T(6809, 'readPreference must be a ReadPreference instance', 21, false))));
                            if (J$.X1(8745, J$.C(488, J$.G(6849, J$.R(6841, 'cmd', cmd, 0), 'readPreference', 0)))) {
                                J$.X1(6881, readPreference = J$.W(6873, 'readPreference', J$.G(6865, J$.R(6857, 'cmd', cmd, 0), 'readPreference', 0), readPreference, 0));
                            }
                            J$.X1(6913, options = J$.W(6905, 'options', J$.C(496, J$.R(6889, 'options', options, 0)) ? J$._() : J$.T(6897, {}, 11, false), options, 0));
                            var finalCmd = J$.X1(6937, J$.W(6929, 'finalCmd', J$.T(6921, {}, 11, false), finalCmd, 1));
                            for (J$._tm_p in J$.H(7009, J$.R(6945, 'cmd', cmd, 0))) {
                                var name = J$.X1(7025, J$.W(7017, 'name', J$._tm_p, name, 1));
                                {
                                    {
                                        J$.X1(7001, J$.P(6993, J$.R(6953, 'finalCmd', finalCmd, 0), J$.R(6961, 'name', name, 0), J$.G(6985, J$.R(6969, 'cmd', cmd, 0), J$.R(6977, 'name', name, 0), 4), 2));
                                    }
                                }
                            }
                            var parts = J$.X1(7065, J$.W(7057, 'parts', J$.M(7049, J$.R(7033, 'ns', ns, 0), 'split', 0)(J$.T(7041, /\./, 14, false)), parts, 1));
                            var serializeFunctions = J$.X1(7129, J$.W(7121, 'serializeFunctions', J$.X1(8753, J$.C(504, J$.B(386, '==', J$.U(378, 'typeof', J$.G(7081, J$.R(7073, 'options', options, 0), 'serializeFunctions', 0)), J$.T(7089, 'boolean', 21, false), 0))) ? J$.G(7105, J$.R(7097, 'options', options, 0), 'serializeFunctions', 0) : J$.T(7113, false, 23, false), serializeFunctions, 1));
                            var ignoreUndefined = J$.X1(7193, J$.W(7185, 'ignoreUndefined', J$.X1(8761, J$.C(512, J$.B(402, '==', J$.U(394, 'typeof', J$.G(7145, J$.R(7137, 'options', options, 0), 'ignoreUndefined', 0)), J$.T(7153, 'boolean', 21, false), 0))) ? J$.G(7169, J$.R(7161, 'options', options, 0), 'ignoreUndefined', 0) : J$.T(7177, false, 23, false), ignoreUndefined, 1));
                            if (J$.X1(8769, J$.C(528, J$.C(520, J$.G(7209, J$.R(7201, 'cmd', cmd, 0), 'readConcern', 0)) ? J$.B(410, '!=', J$.G(7233, J$.G(7225, J$.R(7217, 'cmd', cmd, 0), 'readConcern', 0), 'level', 0), J$.T(7241, 'local', 21, false), 0) : J$._()))) {
                                throw J$.X1(7345, J$.Th(7337, J$.F(7329, J$.R(7249, 'MongoError', MongoError, 1), 1)(J$.F(7321, J$.R(7257, 'f', f, 1), 0)(J$.T(7265, 'server %s command does not support a readConcern level of %s', 21, false), J$.M(7289, J$.R(7273, 'JSON', JSON, 2), 'stringify', 0)(J$.R(7281, 'cmd', cmd, 0)), J$.G(7313, J$.G(7305, J$.R(7297, 'cmd', cmd, 0), 'readConcern', 0), 'level', 0)))));
                            }
                            if (J$.X1(8777, J$.C(536, J$.G(7361, J$.R(7353, 'cmd', cmd, 0), 'readConcern', 0))))
                                J$.X1(7385, J$.B(418, 'delete', J$.R(7369, 'cmd', cmd, 0), J$.T(7377, 'readConcern', 21, false), 4));
                            if (J$.X1(8785, J$.C(560, J$.C(552, J$.C(544, J$.B(426, '==', J$.G(7401, J$.R(7393, 'topology', topology, 0), 'type', 0), J$.T(7409, 'mongos', 21, false), 0)) ? J$.R(7417, 'readPreference', readPreference, 0) : J$._()) ? J$.B(434, '!=', J$.G(7433, J$.R(7425, 'readPreference', readPreference, 0), 'preference', 0), J$.T(7441, 'primary', 21, false), 0) : J$._()))) {
                                J$.X1(7489, finalCmd = J$.W(7481, 'finalCmd', J$.T(7473, {
                                    '$query': J$.R(7449, 'finalCmd', finalCmd, 0),
                                    '$readPreference': J$.M(7465, J$.R(7457, 'readPreference', readPreference, 0), 'toJSON', 0)()
                                }, 11, false), finalCmd, 0));
                            }
                            var query = J$.X1(7625, J$.W(7617, 'query', J$.F(7609, J$.R(7497, 'Query', Query, 1), 1)(J$.R(7505, 'bson', bson, 0), J$.F(7545, J$.R(7513, 'f', f, 1), 0)(J$.T(7521, '%s.$cmd', 21, false), J$.M(7537, J$.R(7529, 'parts', parts, 0), 'shift', 0)()), J$.R(7553, 'finalCmd', finalCmd, 0), J$.T(7601, {
                                numberToSkip: J$.T(7561, 0, 22, false),
                                numberToReturn: J$.U(442, '-', J$.T(7569, 1, 22, false)),
                                checkKeys: J$.T(7577, false, 23, false),
                                serializeFunctions: J$.R(7585, 'serializeFunctions', serializeFunctions, 0),
                                ignoreUndefined: J$.R(7593, 'ignoreUndefined', ignoreUndefined, 0)
                            }, 11, false)), query, 1));
                            J$.X1(7665, J$.P(7657, J$.R(7633, 'query', query, 0), 'slaveOk', J$.M(7649, J$.R(7641, 'readPreference', readPreference, 0), 'slaveOk', 0)(), 0));
                            return J$.X1(7689, J$.Rt(7681, J$.R(7673, 'query', query, 0)));
                        } catch (J$e) {
                            J$.Ex(8793, J$e);
                        } finally {
                            if (J$.Fr(8801))
                                continue jalangiLabel1803;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 7697), setupCommand, 3));
            var bindToCurrentDomain = J$.X1(8017, J$.W(8009, 'bindToCurrentDomain', J$.T(8001, function (callback) {
                jalangiLabel1804:
                    while (true) {
                        try {
                            J$.Fe(7969, arguments.callee, this, arguments);
                            arguments = J$.N(7977, 'arguments', arguments, 4);
                            callback = J$.N(7985, 'callback', callback, 4);
                            J$.N(7993, 'domain', domain, 0);
                            var domain = J$.X1(7865, J$.W(7857, 'domain', J$.G(7849, J$.R(7841, 'process', process, 2), 'domain', 0), domain, 1));
                            if (J$.X1(8809, J$.C(576, J$.C(568, J$.B(450, '==', J$.R(7873, 'domain', domain, 0), J$.T(7881, null, 25, false), 0)) ? J$._() : J$.B(458, '==', J$.R(7889, 'callback', callback, 0), J$.T(7897, null, 25, false), 0)))) {
                                return J$.X1(7921, J$.Rt(7913, J$.R(7905, 'callback', callback, 0)));
                            } else {
                                return J$.X1(7961, J$.Rt(7953, J$.M(7945, J$.R(7929, 'domain', domain, 0), 'bind', 0)(J$.R(7937, 'callback', callback, 0))));
                            }
                        } catch (J$e) {
                            J$.Ex(8817, J$e);
                        } finally {
                            if (J$.Fr(8825))
                                continue jalangiLabel1804;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 7969), bindToCurrentDomain, 3));
            J$.X1(8049, J$.P(8041, J$.R(8025, 'module', module, 2), 'exports', J$.R(8033, 'WireProtocol', WireProtocol, 1), 0));
        } catch (J$e) {
            J$.Ex(8833, J$e);
        } finally {
            if (J$.Sr(8841)) {
                J$.L();
                continue jalangiLabel1805;
            } else {
                J$.L();
                break jalangiLabel1805;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
