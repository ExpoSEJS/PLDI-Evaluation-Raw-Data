{"8":[8,9,8,16],"9":[1,20,1,27],"10":[8,9,8,11],"16":[15,20,15,30],"17":[1,28,1,32],"18":[8,9,8,16],"24":[12,13,12,25],"25":[1,20,1,33],"26":[9,16,9,18],"32":[18,13,18,27],"33":[1,20,1,33],"34":[10,25,10,30],"40":[20,13,20,39],"41":[1,20,1,33],"42":[13,21,13,31],"48":[20,13,20,54],"49":[2,26,2,38],"50":[14,19,14,27],"56":[20,13,20,67],"57":[2,26,2,45],"58":[16,19,16,27],"64":[20,13,20,67],"65":[2,26,2,45],"66":[18,19,18,27],"72":[28,12,28,17],"73":[2,26,2,45],"74":[18,13,18,27],"81":[3,1,3,13],"82":[19,19,19,27],"89":[3,1,3,14],"90":[20,43,20,54],"97":[4,1,4,7],"98":[20,58,20,67],"105":[4,18,4,29],"106":[28,26,28,28],"113":[4,1,4,29],"121":[4,1,4,30],"129":[6,17,6,21],"137":[6,17,6,21],"145":[6,17,6,21],"153":[7,13,7,16],"161":[7,25,7,28],"169":[7,13,7,29],"171":[7,13,7,24],"177":[7,13,7,29],"185":[7,13,7,29],"193":[8,10,8,11],"201":[8,15,8,16],"209":[9,17,9,18],"217":[9,16,9,18],"225":[9,9,9,19],"233":[10,15,10,18],"241":[10,25,10,26],"249":[10,29,10,30],"257":[10,15,10,31],"259":[10,15,10,24],"265":[10,38,10,41],"273":[10,15,10,42],"275":[10,15,10,37],"281":[11,21,11,26],"289":[11,33,11,36],"297":[11,21,11,37],"299":[11,21,11,32],"305":[11,47,11,55],"313":[11,56,11,61],"321":[11,62,11,63],"329":[11,56,11,64],"337":[11,66,11,68],"345":[11,47,11,69],"353":[11,77,11,85],"361":[11,86,11,91],"369":[11,92,11,93],"377":[11,86,11,94],"385":[11,96,11,98],"393":[11,77,11,99],"401":[11,21,11,37],"409":[11,21,11,37],"417":[11,47,11,69],"425":[11,47,11,69],"433":[11,77,11,99],"441":[11,77,11,99],"449":[12,13,12,18],"457":[12,19,12,24],"465":[12,13,12,25],"473":[13,21,13,25],"481":[13,28,13,31],"489":[13,21,13,31],"497":[13,13,13,32],"505":[14,19,14,23],"513":[14,26,14,27],"521":[14,19,14,27],"529":[14,13,14,28],"537":[15,20,15,25],"545":[15,26,15,29],"553":[15,20,15,30],"561":[16,19,16,23],"569":[16,26,16,27],"577":[16,19,16,27],"585":[16,13,16,28],"593":[18,13,18,16],"601":[18,19,18,23],"609":[18,26,18,27],"617":[19,19,19,23],"625":[19,26,19,27],"633":[19,19,19,27],"641":[19,13,19,28],"649":[20,13,20,18],"657":[20,19,20,24],"665":[20,13,20,25],"673":[20,29,20,34],"681":[20,35,20,38],"689":[20,29,20,39],"697":[20,43,20,48],"705":[20,51,20,54],"713":[20,58,20,63],"721":[20,66,20,67],"729":[21,21,21,26],"737":[21,21,21,26],"745":[21,13,21,27],"753":[23,20,23,25],"761":[24,18,24,21],"769":[22,16,25,10],"777":[22,16,25,10],"785":[22,9,25,11],"793":[10,47,26,6],"801":[10,47,26,6],"809":[10,47,26,6],"817":[10,47,26,6],"825":[10,47,26,6],"833":[10,47,26,6],"841":[10,15,26,7],"843":[10,15,10,46],"849":[10,15,26,7],"857":[10,15,26,7],"865":[27,5,27,8],"873":[27,16,27,19],"881":[27,26,27,27],"889":[27,29,27,30],"897":[27,16,27,31],"899":[27,16,27,25],"905":[27,5,27,31],"913":[27,5,27,32],"921":[28,12,28,17],"929":[28,20,28,23],"937":[28,27,28,28],"945":[28,12,28,28],"953":[28,5,28,29],"961":[5,1,29,2],"969":[5,1,29,2],"977":[5,1,29,2],"985":[5,1,29,2],"993":[5,1,29,2],"1001":[5,1,29,2],"1009":[5,1,29,2],"1017":[1,1,29,2],"1025":[1,1,29,2],"1033":[1,1,29,2],"1041":[5,1,29,2],"1049":[1,1,29,2],"1057":[8,5,9,19],"1065":[15,16,17,10],"1073":[12,9,17,10],"1081":[18,9,19,28],"1089":[20,9,21,27],"1097":[10,47,26,6],"1105":[10,47,26,6],"1113":[28,12,28,28],"1121":[5,1,29,2],"1129":[5,1,29,2],"1137":[1,1,29,2],"1145":[1,1,29,2],"nBranches":18,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/range-parser/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/range-parser/index_jalangi_.js","code":"/*!\n * range-parser\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = rangeParser;\n\n/**\n * Parse \"Range\" header `str` relative to the given file `size`.\n *\n * @param {Number} size\n * @param {String} str\n * @return {Array}\n * @public\n */\n\nfunction rangeParser(size, str) {\n  var valid = true;\n  var i = str.indexOf('=');\n\n  if (-1 == i) return -2;\n\n  var arr = str.slice(i + 1).split(',').map(function(range){\n    var range = range.split('-')\n      , start = parseInt(range[0], 10)\n      , end = parseInt(range[1], 10);\n\n    // -nnn\n    if (isNaN(start)) {\n      start = size - end;\n      end = size - 1;\n    // nnn-\n    } else if (isNaN(end)) {\n      end = size - 1;\n    }\n\n    // limit last-byte-pos to current length\n    if (end > size - 1) end = size - 1;\n\n    // invalid\n    if (isNaN(start)\n      || isNaN(end)\n      || start > end\n      || start < 0) valid = false;\n\n    return {\n      start: start,\n      end: end\n    };\n  });\n\n  arr.type = str.slice(0, i);\n\n  return valid ? arr : -1;\n}\n"}