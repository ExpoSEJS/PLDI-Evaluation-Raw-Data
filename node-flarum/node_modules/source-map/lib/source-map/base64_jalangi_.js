J$.iids = {"8":[3,5,3,33],"9":[1,20,1,27],"10":[3,5,3,18],"16":[9,13,9,56],"17":[1,28,1,32],"18":[3,5,3,33],"24":[9,13,9,56],"25":[1,20,1,33],"26":[9,13,9,24],"32":[25,13,25,49],"33":[1,20,1,33],"34":[9,28,9,56],"40":[25,13,25,49],"41":[1,20,1,33],"42":[12,29,12,67],"48":[28,13,28,55],"49":[2,26,2,38],"50":[25,13,25,29],"56":[28,13,28,55],"57":[2,26,2,45],"58":[25,33,25,49],"64":[31,13,31,49],"65":[2,26,2,45],"66":[26,20,26,35],"72":[31,13,31,49],"73":[2,26,2,45],"74":[28,13,28,32],"80":[34,13,34,29],"81":[3,12,3,18],"82":[28,36,28,55],"88":[37,13,37,30],"89":[3,23,3,33],"90":[29,20,29,38],"97":[4,18,4,25],"98":[29,20,29,53],"105":[4,26,4,36],"106":[31,13,31,29],"113":[4,18,4,37],"114":[31,33,31,49],"121":[4,38,4,44],"122":[32,20,32,35],"129":[4,46,4,53],"130":[32,20,32,50],"137":[4,18,4,54],"138":[34,13,34,29],"145":[4,18,4,54],"146":[37,13,37,30],"153":[4,18,4,54],"154":[40,16,40,18],"161":[6,1,6,7],"169":[7,24,7,90],"177":[7,97,7,99],"185":[7,24,7,100],"187":[7,24,7,96],"193":[7,24,7,100],"201":[7,24,7,100],"209":[8,5,8,12],"217":[9,13,9,14],"225":[9,18,9,24],"233":[9,28,9,34],"241":[9,37,9,49],"249":[9,37,9,56],"257":[10,20,10,32],"265":[10,33,10,39],"273":[10,20,10,40],"281":[10,20,10,40],"289":[10,13,10,41],"297":[12,19,12,28],"305":[12,29,12,57],"313":[12,60,12,67],"321":[12,15,12,68],"329":[12,15,12,68],"337":[12,9,12,69],"345":[8,22,13,6],"353":[8,22,13,6],"361":[8,22,13,6],"369":[8,22,13,6],"377":[8,5,13,6],"385":[8,5,13,7],"393":[14,5,14,12],"401":[15,20,15,22],"409":[15,20,15,22],"417":[15,20,15,22],"425":[16,20,16,22],"433":[16,20,16,22],"441":[16,20,16,22],"449":[17,23,17,25],"457":[17,23,17,25],"465":[17,23,17,25],"473":[18,23,18,26],"481":[18,23,18,26],"489":[18,23,18,26],"497":[19,20,19,22],"505":[19,20,19,22],"513":[19,20,19,22],"521":[20,20,20,22],"529":[20,20,20,22],"537":[20,20,20,22],"545":[21,20,21,22],"553":[21,20,21,22],"561":[21,20,21,22],"569":[22,21,22,23],"577":[22,21,22,23],"585":[22,21,22,23],"593":[23,28,23,30],"601":[23,28,23,30],"609":[23,28,23,30],"617":[24,28,24,30],"625":[24,28,24,30],"633":[24,28,24,30],"641":[25,13,25,17],"649":[25,21,25,29],"657":[25,33,25,41],"665":[25,45,25,49],"673":[26,20,26,28],"681":[26,31,26,35],"689":[26,20,26,35],"697":[26,13,26,36],"705":[28,13,28,20],"713":[28,24,28,32],"721":[28,36,28,44],"729":[28,48,28,55],"737":[29,20,29,28],"745":[29,31,29,38],"753":[29,41,29,53],"761":[29,20,29,53],"769":[29,13,29,54],"777":[31,13,31,17],"785":[31,21,31,29],"793":[31,33,31,41],"801":[31,45,31,49],"809":[32,20,32,28],"817":[32,31,32,35],"825":[32,38,32,50],"833":[32,20,32,50],"841":[32,13,32,51],"849":[34,13,34,21],"857":[34,25,34,29],"865":[35,20,35,22],"873":[35,20,35,22],"881":[35,13,35,23],"889":[37,13,37,21],"897":[37,25,37,30],"905":[38,20,38,22],"913":[38,20,38,22],"921":[38,13,38,23],"929":[40,17,40,18],"937":[40,16,40,18],"945":[40,9,40,19],"953":[14,22,41,6],"961":[14,22,41,6],"969":[14,22,41,6],"977":[14,22,41,6],"985":[14,22,41,6],"993":[14,22,41,6],"1001":[14,22,41,6],"1009":[14,22,41,6],"1017":[14,22,41,6],"1025":[14,22,41,6],"1033":[14,22,41,6],"1041":[14,22,41,6],"1049":[14,22,41,6],"1057":[14,22,41,6],"1065":[14,5,41,6],"1073":[14,5,41,7],"1081":[6,8,42,2],"1089":[6,8,42,2],"1097":[6,8,42,2],"1105":[6,8,42,2],"1113":[6,8,42,2],"1121":[6,8,42,2],"1129":[6,8,42,2],"1137":[6,1,42,3],"1145":[6,1,42,4],"1153":[1,1,42,4],"1161":[1,1,42,4],"1169":[1,1,42,4],"1177":[1,1,42,4],"1185":[3,1,5,2],"1193":[9,9,11,10],"1201":[8,22,13,6],"1209":[8,22,13,6],"1217":[25,9,27,10],"1225":[28,9,30,10],"1233":[31,9,33,10],"1241":[34,9,36,10],"1249":[37,9,39,10],"1257":[14,22,41,6],"1265":[14,22,41,6],"1273":[6,8,42,2],"1281":[6,8,42,2],"1289":[1,1,42,4],"1297":[1,1,42,4],"nBranches":22,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/source-map/lib/source-map/base64.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/source-map/lib/source-map/base64_jalangi_.js","code":"/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n  /**\n   * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n   */\n  exports.encode = function (number) {\n    if (0 <= number && number < intToCharMap.length) {\n      return intToCharMap[number];\n    }\n    throw new TypeError(\"Must be between 0 and 63: \" + aNumber);\n  };\n\n  /**\n   * Decode a single base 64 character code digit to an integer. Returns -1 on\n   * failure.\n   */\n  exports.decode = function (charCode) {\n    var bigA = 65;     // 'A'\n    var bigZ = 90;     // 'Z'\n\n    var littleA = 97;  // 'a'\n    var littleZ = 122; // 'z'\n\n    var zero = 48;     // '0'\n    var nine = 57;     // '9'\n\n    var plus = 43;     // '+'\n    var slash = 47;    // '/'\n\n    var littleOffset = 26;\n    var numberOffset = 52;\n\n    // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n    if (bigA <= charCode && charCode <= bigZ) {\n      return (charCode - bigA);\n    }\n\n    // 26 - 51: abcdefghijklmnopqrstuvwxyz\n    if (littleA <= charCode && charCode <= littleZ) {\n      return (charCode - littleA + littleOffset);\n    }\n\n    // 52 - 61: 0123456789\n    if (zero <= charCode && charCode <= nine) {\n      return (charCode - zero + numberOffset);\n    }\n\n    // 62: +\n    if (charCode == plus) {\n      return 62;\n    }\n\n    // 63: /\n    if (charCode == slash) {\n      return 63;\n    }\n\n    // Invalid base64 digit.\n    return -1;\n  };\n\n});\n"};
jalangiLabel1140:
    while (true) {
        try {
            J$.Se(1153, '/home/blake/ExpoSE/Targets/node-flarum/node_modules/source-map/lib/source-map/base64_jalangi_.js', '/home/blake/ExpoSE/Targets/node-flarum/node_modules/source-map/lib/source-map/base64.js');
            J$.N(1161, '__secret__S$', __secret__S$, 0);
            J$.N(1169, '__secret__traits__', __secret__traits__, 0);
            J$.N(1177, 'define', define, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            if (J$.X1(1185, J$.C(8, J$.B(18, '!==', J$.U(10, 'typeof', J$.R(81, 'define', define, 1)), J$.T(89, 'function', 21, false), 0)))) {
                var define = J$.X1(153, J$.W(145, 'define', J$.F(137, J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'amdefine', 21, false)), 0)(J$.R(121, 'module', module, 2), J$.R(129, 'require', require, 2)), define, 3));
            }
            J$.X1(1145, J$.F(1137, J$.R(161, 'define', define, 1), 0)(J$.T(1129, function (require, exports, module) {
                jalangiLabel1139:
                    while (true) {
                        try {
                            J$.Fe(1081, arguments.callee, this, arguments);
                            arguments = J$.N(1089, 'arguments', arguments, 4);
                            require = J$.N(1097, 'require', require, 4);
                            exports = J$.N(1105, 'exports', exports, 4);
                            module = J$.N(1113, 'module', module, 4);
                            J$.N(1121, 'intToCharMap', intToCharMap, 0);
                            var intToCharMap = J$.X1(201, J$.W(193, 'intToCharMap', J$.M(185, J$.T(169, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/', 21, false), 'split', 0)(J$.T(177, '', 21, false)), intToCharMap, 1));
                            J$.X1(385, J$.P(377, J$.R(209, 'exports', exports, 0), 'encode', J$.T(369, function (number) {
                                jalangiLabel1137:
                                    while (true) {
                                        try {
                                            J$.Fe(345, arguments.callee, this, arguments);
                                            arguments = J$.N(353, 'arguments', arguments, 4);
                                            number = J$.N(361, 'number', number, 4);
                                            if (J$.X1(1193, J$.C(24, J$.C(16, J$.B(26, '<=', J$.T(217, 0, 22, false), J$.R(225, 'number', number, 0), 0)) ? J$.B(34, '<', J$.R(233, 'number', number, 0), J$.G(249, J$.R(241, 'intToCharMap', intToCharMap, 0), 'length', 0), 0) : J$._()))) {
                                                return J$.X1(289, J$.Rt(281, J$.G(273, J$.R(257, 'intToCharMap', intToCharMap, 0), J$.R(265, 'number', number, 0), 4)));
                                            }
                                            throw J$.X1(337, J$.Th(329, J$.F(321, J$.R(297, 'TypeError', TypeError, 2), 1)(J$.B(42, '+', J$.T(305, 'Must be between 0 and 63: ', 21, false), J$.R(313, 'aNumber', aNumber, 2), 0))));
                                        } catch (J$e) {
                                            J$.Ex(1201, J$e);
                                        } finally {
                                            if (J$.Fr(1209))
                                                continue jalangiLabel1137;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 345), 0));
                            J$.X1(1073, J$.P(1065, J$.R(393, 'exports', exports, 0), 'decode', J$.T(1057, function (charCode) {
                                jalangiLabel1138:
                                    while (true) {
                                        try {
                                            J$.Fe(953, arguments.callee, this, arguments);
                                            arguments = J$.N(961, 'arguments', arguments, 4);
                                            charCode = J$.N(969, 'charCode', charCode, 4);
                                            J$.N(977, 'bigA', bigA, 0);
                                            J$.N(985, 'bigZ', bigZ, 0);
                                            J$.N(993, 'littleA', littleA, 0);
                                            J$.N(1001, 'littleZ', littleZ, 0);
                                            J$.N(1009, 'zero', zero, 0);
                                            J$.N(1017, 'nine', nine, 0);
                                            J$.N(1025, 'plus', plus, 0);
                                            J$.N(1033, 'slash', slash, 0);
                                            J$.N(1041, 'littleOffset', littleOffset, 0);
                                            J$.N(1049, 'numberOffset', numberOffset, 0);
                                            var bigA = J$.X1(417, J$.W(409, 'bigA', J$.T(401, 65, 22, false), bigA, 1));
                                            var bigZ = J$.X1(441, J$.W(433, 'bigZ', J$.T(425, 90, 22, false), bigZ, 1));
                                            var littleA = J$.X1(465, J$.W(457, 'littleA', J$.T(449, 97, 22, false), littleA, 1));
                                            var littleZ = J$.X1(489, J$.W(481, 'littleZ', J$.T(473, 122, 22, false), littleZ, 1));
                                            var zero = J$.X1(513, J$.W(505, 'zero', J$.T(497, 48, 22, false), zero, 1));
                                            var nine = J$.X1(537, J$.W(529, 'nine', J$.T(521, 57, 22, false), nine, 1));
                                            var plus = J$.X1(561, J$.W(553, 'plus', J$.T(545, 43, 22, false), plus, 1));
                                            var slash = J$.X1(585, J$.W(577, 'slash', J$.T(569, 47, 22, false), slash, 1));
                                            var littleOffset = J$.X1(609, J$.W(601, 'littleOffset', J$.T(593, 26, 22, false), littleOffset, 1));
                                            var numberOffset = J$.X1(633, J$.W(625, 'numberOffset', J$.T(617, 52, 22, false), numberOffset, 1));
                                            if (J$.X1(1217, J$.C(40, J$.C(32, J$.B(50, '<=', J$.R(641, 'bigA', bigA, 0), J$.R(649, 'charCode', charCode, 0), 0)) ? J$.B(58, '<=', J$.R(657, 'charCode', charCode, 0), J$.R(665, 'bigZ', bigZ, 0), 0) : J$._()))) {
                                                return J$.X1(697, J$.Rt(689, J$.B(66, '-', J$.R(673, 'charCode', charCode, 0), J$.R(681, 'bigA', bigA, 0), 0)));
                                            }
                                            if (J$.X1(1225, J$.C(56, J$.C(48, J$.B(74, '<=', J$.R(705, 'littleA', littleA, 0), J$.R(713, 'charCode', charCode, 0), 0)) ? J$.B(82, '<=', J$.R(721, 'charCode', charCode, 0), J$.R(729, 'littleZ', littleZ, 0), 0) : J$._()))) {
                                                return J$.X1(769, J$.Rt(761, J$.B(98, '+', J$.B(90, '-', J$.R(737, 'charCode', charCode, 0), J$.R(745, 'littleA', littleA, 0), 0), J$.R(753, 'littleOffset', littleOffset, 0), 0)));
                                            }
                                            if (J$.X1(1233, J$.C(72, J$.C(64, J$.B(106, '<=', J$.R(777, 'zero', zero, 0), J$.R(785, 'charCode', charCode, 0), 0)) ? J$.B(114, '<=', J$.R(793, 'charCode', charCode, 0), J$.R(801, 'nine', nine, 0), 0) : J$._()))) {
                                                return J$.X1(841, J$.Rt(833, J$.B(130, '+', J$.B(122, '-', J$.R(809, 'charCode', charCode, 0), J$.R(817, 'zero', zero, 0), 0), J$.R(825, 'numberOffset', numberOffset, 0), 0)));
                                            }
                                            if (J$.X1(1241, J$.C(80, J$.B(138, '==', J$.R(849, 'charCode', charCode, 0), J$.R(857, 'plus', plus, 0), 0)))) {
                                                return J$.X1(881, J$.Rt(873, J$.T(865, 62, 22, false)));
                                            }
                                            if (J$.X1(1249, J$.C(88, J$.B(146, '==', J$.R(889, 'charCode', charCode, 0), J$.R(897, 'slash', slash, 0), 0)))) {
                                                return J$.X1(921, J$.Rt(913, J$.T(905, 63, 22, false)));
                                            }
                                            return J$.X1(945, J$.Rt(937, J$.U(154, '-', J$.T(929, 1, 22, false))));
                                        } catch (J$e) {
                                            J$.Ex(1257, J$e);
                                        } finally {
                                            if (J$.Fr(1265))
                                                continue jalangiLabel1138;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 953), 0));
                        } catch (J$e) {
                            J$.Ex(1273, J$e);
                        } finally {
                            if (J$.Fr(1281))
                                continue jalangiLabel1139;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1081)));
        } catch (J$e) {
            J$.Ex(1289, J$e);
        } finally {
            if (J$.Sr(1297)) {
                J$.L();
                continue jalangiLabel1140;
            } else {
                J$.L();
                break jalangiLabel1140;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
