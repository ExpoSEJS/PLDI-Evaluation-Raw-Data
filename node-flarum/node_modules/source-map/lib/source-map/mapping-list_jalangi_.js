J$.iids = {"8":[3,5,3,33],"9":[1,20,1,27],"10":[3,5,3,18],"16":[13,33,13,69],"17":[1,28,1,32],"18":[3,5,3,33],"24":[13,16,13,69],"25":[1,20,1,33],"26":[13,16,13,29],"32":[13,16,13,138],"33":[1,20,1,33],"34":[13,33,13,47],"40":[28,13,28,57],"41":[1,20,1,33],"42":[13,51,13,69],"48":[37,13,37,26],"49":[2,26,2,38],"50":[13,73,13,138],"57":[2,26,2,45],"58":[19,28,19,30],"65":[2,26,2,45],"66":[37,13,37,26],"73":[2,26,2,45],"81":[3,12,3,18],"89":[3,23,3,33],"97":[4,18,4,25],"105":[4,26,4,36],"113":[4,18,4,37],"121":[4,38,4,44],"129":[4,46,4,53],"137":[4,18,4,54],"145":[4,18,4,54],"153":[4,18,4,54],"161":[6,1,6,7],"169":[7,16,7,23],"177":[7,24,7,32],"185":[7,16,7,33],"193":[7,16,7,33],"201":[7,16,7,33],"209":[9,21,9,29],"217":[9,21,9,43],"225":[9,21,9,43],"233":[9,21,9,43],"241":[10,21,10,29],"249":[10,21,10,43],"257":[10,21,10,43],"265":[10,21,10,43],"273":[11,23,11,31],"281":[11,23,11,47],"289":[11,23,11,47],"297":[11,23,11,47],"305":[12,23,12,31],"313":[12,23,12,47],"321":[12,23,12,47],"329":[12,23,12,47],"337":[13,16,13,21],"345":[13,24,13,29],"353":[13,33,13,38],"361":[13,42,13,47],"369":[13,51,13,58],"377":[13,62,13,69],"385":[13,73,13,77],"393":[13,114,13,122],"401":[13,124,13,132],"409":[13,73,13,133],"411":[13,73,13,113],"417":[13,137,13,138],"425":[13,16,13,138],"433":[13,9,13,139],"441":[8,5,14,6],"449":[8,5,14,6],"457":[8,5,14,6],"465":[8,5,14,6],"473":[8,5,14,6],"481":[8,5,14,6],"489":[8,5,14,6],"497":[8,5,14,6],"505":[16,9,16,13],"513":[16,23,16,25],"521":[16,9,16,25],"529":[16,9,16,26],"537":[17,9,17,13],"545":[17,24,17,28],"553":[17,9,17,28],"561":[17,9,17,29],"569":[18,9,18,13],"577":[19,29,19,30],"585":[20,30,20,31],"593":[18,22,21,10],"601":[18,9,21,10],"609":[18,9,21,11],"617":[15,5,22,6],"625":[15,5,22,6],"633":[23,5,23,16],"641":[23,5,23,26],"649":[24,9,24,13],"657":[24,9,24,20],"665":[24,29,24,38],"673":[24,40,24,48],"681":[24,9,24,49],"683":[24,9,24,28],"689":[24,9,24,50],"697":[23,45,25,6],"705":[23,45,25,6],"713":[23,45,25,6],"721":[23,45,25,6],"729":[23,45,25,6],"737":[23,45,25,6],"745":[23,5,25,6],"753":[23,5,25,7],"761":[26,5,26,16],"769":[26,5,26,26],"777":[28,13,28,35],"785":[28,36,28,40],"793":[28,36,28,46],"801":[28,48,28,56],"809":[28,13,28,57],"817":[29,13,29,17],"825":[29,26,29,34],"833":[29,13,29,34],"841":[29,13,29,35],"849":[30,13,30,17],"857":[30,13,30,24],"865":[30,30,30,38],"873":[30,13,30,39],"875":[30,13,30,29],"881":[30,13,30,40],"889":[32,13,32,17],"897":[32,28,32,33],"905":[32,13,32,33],"913":[32,13,32,34],"921":[33,13,33,17],"929":[33,13,33,24],"937":[33,30,33,38],"945":[33,13,33,39],"947":[33,13,33,29],"953":[33,13,33,40],"961":[26,33,35,6],"969":[26,33,35,6],"977":[26,33,35,6],"985":[26,33,35,6],"993":[26,33,35,6],"1001":[26,33,35,6],"1009":[26,5,35,6],"1017":[26,5,35,7],"1025":[36,5,36,16],"1033":[36,5,36,26],"1041":[37,14,37,18],"1049":[37,14,37,26],"1057":[38,13,38,17],"1065":[38,13,38,24],"1073":[38,30,38,34],"1081":[38,30,38,70],"1089":[38,13,38,71],"1091":[38,13,38,29],"1097":[38,13,38,72],"1105":[39,13,39,17],"1113":[39,28,39,32],"1121":[39,13,39,32],"1129":[39,13,39,33],"1137":[41,16,41,20],"1145":[41,16,41,27],"1153":[41,16,41,27],"1161":[41,9,41,28],"1169":[36,37,42,6],"1177":[36,37,42,6],"1185":[36,37,42,6],"1193":[36,37,42,6],"1201":[36,5,42,6],"1209":[36,5,42,7],"1217":[43,5,43,12],"1225":[43,27,43,38],"1233":[43,5,43,38],"1241":[43,5,43,39],"1249":[6,8,44,2],"1257":[6,8,44,2],"1265":[6,8,44,2],"1273":[6,8,44,2],"1281":[6,8,44,2],"1289":[6,8,44,2],"1297":[8,5,14,6],"1305":[6,8,44,2],"1313":[15,5,22,6],"1321":[6,8,44,2],"1329":[6,8,44,2],"1337":[6,1,44,3],"1345":[6,1,44,4],"1353":[1,1,44,4],"1361":[1,1,44,4],"1369":[1,1,44,4],"1377":[1,1,44,4],"1385":[3,1,5,2],"1393":[8,5,14,6],"1401":[8,5,14,6],"1409":[15,5,22,6],"1417":[15,5,22,6],"1425":[23,45,25,6],"1433":[23,45,25,6],"1441":[28,9,34,10],"1449":[26,33,35,6],"1457":[26,33,35,6],"1465":[37,9,40,10],"1473":[36,37,42,6],"1481":[36,37,42,6],"1489":[6,8,44,2],"1497":[6,8,44,2],"1505":[1,1,44,4],"1513":[1,1,44,4],"nBranches":12,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/source-map/lib/source-map/mapping-list.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/source-map/lib/source-map/mapping-list_jalangi_.js","code":"/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var util = require('./util');\n\n  /**\n   * Determine whether mappingB is after mappingA with respect to generated\n   * position.\n   */\n  function generatedPositionAfter(mappingA, mappingB) {\n    // Optimized for most common case\n    var lineA = mappingA.generatedLine;\n    var lineB = mappingB.generatedLine;\n    var columnA = mappingA.generatedColumn;\n    var columnB = mappingB.generatedColumn;\n    return lineB > lineA || lineB == lineA && columnB >= columnA ||\n           util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n  }\n\n  /**\n   * A data structure to provide a sorted view of accumulated mappings in a\n   * performance conscious manner. It trades a neglibable overhead in general\n   * case for a large speedup in case of mappings being added in order.\n   */\n  function MappingList() {\n    this._array = [];\n    this._sorted = true;\n    // Serves as infimum\n    this._last = {generatedLine: -1, generatedColumn: 0};\n  }\n\n  /**\n   * Iterate through internal items. This method takes the same arguments that\n   * `Array.prototype.forEach` takes.\n   *\n   * NOTE: The order of the mappings is NOT guaranteed.\n   */\n  MappingList.prototype.unsortedForEach =\n    function MappingList_forEach(aCallback, aThisArg) {\n      this._array.forEach(aCallback, aThisArg);\n    };\n\n  /**\n   * Add the given source mapping.\n   *\n   * @param Object aMapping\n   */\n  MappingList.prototype.add = function MappingList_add(aMapping) {\n    var mapping;\n    if (generatedPositionAfter(this._last, aMapping)) {\n      this._last = aMapping;\n      this._array.push(aMapping);\n    } else {\n      this._sorted = false;\n      this._array.push(aMapping);\n    }\n  };\n\n  /**\n   * Returns the flat, sorted array of mappings. The mappings are sorted by\n   * generated position.\n   *\n   * WARNING: This method returns internal data without copying, for\n   * performance. The return value must NOT be mutated, and should be treated as\n   * an immutable borrow. If you want to take ownership, you must make your own\n   * copy.\n   */\n  MappingList.prototype.toArray = function MappingList_toArray() {\n    if (!this._sorted) {\n      this._array.sort(util.compareByGeneratedPositionsInflated);\n      this._sorted = true;\n    }\n    return this._array;\n  };\n\n  exports.MappingList = MappingList;\n\n});\n"};
jalangiLabel1171:
    while (true) {
        try {
            J$.Se(1353, '/home/blake/ExpoSE/Targets/node-flarum/node_modules/source-map/lib/source-map/mapping-list_jalangi_.js', '/home/blake/ExpoSE/Targets/node-flarum/node_modules/source-map/lib/source-map/mapping-list.js');
            J$.N(1361, '__secret__S$', __secret__S$, 0);
            J$.N(1369, '__secret__traits__', __secret__traits__, 0);
            J$.N(1377, 'define', define, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            if (J$.X1(1385, J$.C(8, J$.B(18, '!==', J$.U(10, 'typeof', J$.R(81, 'define', define, 1)), J$.T(89, 'function', 21, false), 0)))) {
                var define = J$.X1(153, J$.W(145, 'define', J$.F(137, J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'amdefine', 21, false)), 0)(J$.R(121, 'module', module, 2), J$.R(129, 'require', require, 2)), define, 3));
            }
            J$.X1(1345, J$.F(1337, J$.R(161, 'define', define, 1), 0)(J$.T(1329, function (require, exports, module) {
                jalangiLabel1170:
                    while (true) {
                        try {
                            J$.Fe(1249, arguments.callee, this, arguments);
                            function generatedPositionAfter(mappingA, mappingB) {
                                jalangiLabel1165:
                                    while (true) {
                                        try {
                                            J$.Fe(441, arguments.callee, this, arguments);
                                            arguments = J$.N(449, 'arguments', arguments, 4);
                                            mappingA = J$.N(457, 'mappingA', mappingA, 4);
                                            mappingB = J$.N(465, 'mappingB', mappingB, 4);
                                            J$.N(473, 'lineA', lineA, 0);
                                            J$.N(481, 'lineB', lineB, 0);
                                            J$.N(489, 'columnA', columnA, 0);
                                            J$.N(497, 'columnB', columnB, 0);
                                            var lineA = J$.X1(233, J$.W(225, 'lineA', J$.G(217, J$.R(209, 'mappingA', mappingA, 0), 'generatedLine', 0), lineA, 1));
                                            var lineB = J$.X1(265, J$.W(257, 'lineB', J$.G(249, J$.R(241, 'mappingB', mappingB, 0), 'generatedLine', 0), lineB, 1));
                                            var columnA = J$.X1(297, J$.W(289, 'columnA', J$.G(281, J$.R(273, 'mappingA', mappingA, 0), 'generatedColumn', 0), columnA, 1));
                                            var columnB = J$.X1(329, J$.W(321, 'columnB', J$.G(313, J$.R(305, 'mappingB', mappingB, 0), 'generatedColumn', 0), columnB, 1));
                                            return J$.X1(433, J$.Rt(425, J$.C(32, J$.C(24, J$.B(26, '>', J$.R(337, 'lineB', lineB, 0), J$.R(345, 'lineA', lineA, 0), 0)) ? J$._() : J$.C(16, J$.B(34, '==', J$.R(353, 'lineB', lineB, 0), J$.R(361, 'lineA', lineA, 0), 0)) ? J$.B(42, '>=', J$.R(369, 'columnB', columnB, 0), J$.R(377, 'columnA', columnA, 0), 0) : J$._()) ? J$._() : J$.B(50, '<=', J$.M(409, J$.R(385, 'util', util, 0), 'compareByGeneratedPositionsInflated', 0)(J$.R(393, 'mappingA', mappingA, 0), J$.R(401, 'mappingB', mappingB, 0)), J$.T(417, 0, 22, false), 0)));
                                        } catch (J$e) {
                                            J$.Ex(1393, J$e);
                                        } finally {
                                            if (J$.Fr(1401))
                                                continue jalangiLabel1165;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function MappingList() {
                                jalangiLabel1166:
                                    while (true) {
                                        try {
                                            J$.Fe(617, arguments.callee, this, arguments);
                                            arguments = J$.N(625, 'arguments', arguments, 4);
                                            J$.X1(529, J$.P(521, J$.R(505, 'this', this, 0), '_array', J$.T(513, [], 10, false), 0));
                                            J$.X1(561, J$.P(553, J$.R(537, 'this', this, 0), '_sorted', J$.T(545, true, 23, false), 0));
                                            J$.X1(609, J$.P(601, J$.R(569, 'this', this, 0), '_last', J$.T(593, {
                                                generatedLine: J$.U(58, '-', J$.T(577, 1, 22, false)),
                                                generatedColumn: J$.T(585, 0, 22, false)
                                            }, 11, false), 0));
                                        } catch (J$e) {
                                            J$.Ex(1409, J$e);
                                        } finally {
                                            if (J$.Fr(1417))
                                                continue jalangiLabel1166;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(1257, 'arguments', arguments, 4);
                            require = J$.N(1265, 'require', require, 4);
                            exports = J$.N(1273, 'exports', exports, 4);
                            module = J$.N(1281, 'module', module, 4);
                            J$.N(1289, 'util', util, 0);
                            generatedPositionAfter = J$.N(1305, 'generatedPositionAfter', J$.T(1297, generatedPositionAfter, 12, false, 441), 0);
                            MappingList = J$.N(1321, 'MappingList', J$.T(1313, MappingList, 12, false, 617), 0);
                            var util = J$.X1(201, J$.W(193, 'util', J$.F(185, J$.R(169, 'require', require, 0), 0)(J$.T(177, './util', 21, false)), util, 1));
                            J$.X1(753, J$.P(745, J$.G(641, J$.R(633, 'MappingList', MappingList, 0), 'prototype', 0), 'unsortedForEach', J$.T(737, function MappingList_forEach(aCallback, aThisArg) {
                                jalangiLabel1167:
                                    while (true) {
                                        try {
                                            J$.Fe(697, arguments.callee, this, arguments);
                                            arguments = J$.N(705, 'arguments', arguments, 4);
                                            MappingList_forEach = J$.N(713, 'MappingList_forEach', MappingList_forEach, 0);
                                            aCallback = J$.N(721, 'aCallback', aCallback, 4);
                                            aThisArg = J$.N(729, 'aThisArg', aThisArg, 4);
                                            J$.X1(689, J$.M(681, J$.G(657, J$.R(649, 'this', this, 0), '_array', 0), 'forEach', 0)(J$.R(665, 'aCallback', aCallback, 0), J$.R(673, 'aThisArg', aThisArg, 0)));
                                        } catch (J$e) {
                                            J$.Ex(1425, J$e);
                                        } finally {
                                            if (J$.Fr(1433))
                                                continue jalangiLabel1167;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 697), 0));
                            J$.X1(1017, J$.P(1009, J$.G(769, J$.R(761, 'MappingList', MappingList, 0), 'prototype', 0), 'add', J$.T(1001, function MappingList_add(aMapping) {
                                jalangiLabel1168:
                                    while (true) {
                                        try {
                                            J$.Fe(961, arguments.callee, this, arguments);
                                            arguments = J$.N(969, 'arguments', arguments, 4);
                                            MappingList_add = J$.N(977, 'MappingList_add', MappingList_add, 0);
                                            aMapping = J$.N(985, 'aMapping', aMapping, 4);
                                            J$.N(993, 'mapping', mapping, 0);
                                            var mapping;
                                            if (J$.X1(1441, J$.C(40, J$.F(809, J$.R(777, 'generatedPositionAfter', generatedPositionAfter, 0), 0)(J$.G(793, J$.R(785, 'this', this, 0), '_last', 0), J$.R(801, 'aMapping', aMapping, 0))))) {
                                                J$.X1(841, J$.P(833, J$.R(817, 'this', this, 0), '_last', J$.R(825, 'aMapping', aMapping, 0), 0));
                                                J$.X1(881, J$.M(873, J$.G(857, J$.R(849, 'this', this, 0), '_array', 0), 'push', 0)(J$.R(865, 'aMapping', aMapping, 0)));
                                            } else {
                                                J$.X1(913, J$.P(905, J$.R(889, 'this', this, 0), '_sorted', J$.T(897, false, 23, false), 0));
                                                J$.X1(953, J$.M(945, J$.G(929, J$.R(921, 'this', this, 0), '_array', 0), 'push', 0)(J$.R(937, 'aMapping', aMapping, 0)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(1449, J$e);
                                        } finally {
                                            if (J$.Fr(1457))
                                                continue jalangiLabel1168;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 961), 0));
                            J$.X1(1209, J$.P(1201, J$.G(1033, J$.R(1025, 'MappingList', MappingList, 0), 'prototype', 0), 'toArray', J$.T(1193, function MappingList_toArray() {
                                jalangiLabel1169:
                                    while (true) {
                                        try {
                                            J$.Fe(1169, arguments.callee, this, arguments);
                                            arguments = J$.N(1177, 'arguments', arguments, 4);
                                            MappingList_toArray = J$.N(1185, 'MappingList_toArray', MappingList_toArray, 0);
                                            if (J$.X1(1465, J$.C(48, J$.U(66, '!', J$.G(1049, J$.R(1041, 'this', this, 0), '_sorted', 0))))) {
                                                J$.X1(1097, J$.M(1089, J$.G(1065, J$.R(1057, 'this', this, 0), '_array', 0), 'sort', 0)(J$.G(1081, J$.R(1073, 'util', util, 0), 'compareByGeneratedPositionsInflated', 0)));
                                                J$.X1(1129, J$.P(1121, J$.R(1105, 'this', this, 0), '_sorted', J$.T(1113, true, 23, false), 0));
                                            }
                                            return J$.X1(1161, J$.Rt(1153, J$.G(1145, J$.R(1137, 'this', this, 0), '_array', 0)));
                                        } catch (J$e) {
                                            J$.Ex(1473, J$e);
                                        } finally {
                                            if (J$.Fr(1481))
                                                continue jalangiLabel1169;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1169), 0));
                            J$.X1(1241, J$.P(1233, J$.R(1217, 'exports', exports, 0), 'MappingList', J$.R(1225, 'MappingList', MappingList, 0), 0));
                        } catch (J$e) {
                            J$.Ex(1489, J$e);
                        } finally {
                            if (J$.Fr(1497))
                                continue jalangiLabel1170;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1249)));
        } catch (J$e) {
            J$.Ex(1505, J$e);
        } finally {
            if (J$.Sr(1513)) {
                J$.L();
                continue jalangiLabel1171;
            } else {
                J$.L();
                break jalangiLabel1171;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
