J$.iids = {"8":[15,16,15,29],"9":[1,20,1,27],"10":[20,9,20,18],"16":[20,9,20,41],"17":[1,28,1,32],"18":[20,22,20,41],"24":[20,9,20,41],"25":[1,20,1,33],"26":[24,9,24,18],"32":[25,20,25,49],"33":[1,20,1,33],"34":[25,20,25,49],"40":[24,9,24,18],"41":[1,20,1,33],"42":[25,52,25,76],"48":[28,9,28,32],"49":[2,26,2,38],"50":[26,21,26,29],"56":[38,21,38,46],"57":[2,26,2,45],"58":[28,9,28,32],"64":[38,21,38,46],"65":[2,26,2,45],"66":[38,21,38,37],"72":[55,9,55,30],"73":[2,26,2,45],"74":[38,41,38,46],"80":[55,9,55,30],"81":[3,1,3,13],"82":[38,48,38,51],"88":[60,9,60,30],"89":[3,1,3,14],"96":[60,9,60,30],"97":[4,13,4,20],"98":[38,48,38,51],"105":[4,21,4,28],"106":[58,43,58,56],"113":[4,13,4,29],"121":[4,30,4,44],"129":[4,13,4,45],"137":[4,13,4,45],"145":[4,13,4,45],"153":[5,12,5,19],"161":[5,20,5,26],"169":[5,12,5,27],"177":[5,12,5,27],"185":[5,12,5,27],"193":[6,10,6,17],"201":[6,18,6,22],"209":[6,10,6,23],"217":[6,10,6,23],"225":[6,10,6,23],"233":[7,13,7,20],"241":[7,21,7,30],"249":[7,13,7,31],"257":[7,13,7,31],"265":[7,13,7,31],"273":[8,15,8,19],"281":[8,15,8,27],"289":[8,15,8,27],"297":[8,15,8,27],"305":[9,16,9,20],"313":[9,16,9,29],"321":[9,16,9,29],"329":[9,16,9,29],"337":[10,15,10,19],"345":[10,15,10,27],"353":[10,15,10,27],"361":[10,15,10,27],"369":[11,12,11,16],"377":[11,12,11,21],"385":[11,12,11,21],"393":[11,12,11,21],"401":[12,15,12,19],"409":[12,15,12,27],"417":[12,15,12,27],"425":[12,15,12,27],"433":[13,1,13,7],"441":[13,18,13,22],"449":[13,1,13,22],"457":[13,1,13,23],"465":[15,16,15,23],"473":[15,27,15,29],"481":[15,16,15,29],"489":[15,16,15,29],"497":[16,5,16,9],"505":[16,26,16,30],"513":[16,26,16,44],"521":[16,5,16,44],"529":[16,5,16,45],"537":[17,5,17,9],"545":[17,16,17,23],"553":[17,24,17,28],"561":[17,16,17,29],"569":[17,5,17,29],"577":[17,5,17,30],"585":[18,5,18,9],"593":[18,17,18,21],"601":[18,5,18,21],"609":[18,5,18,22],"617":[19,5,19,9],"625":[19,17,19,21],"633":[19,17,19,26],"641":[19,5,19,26],"649":[19,5,19,27],"657":[20,10,20,14],"665":[20,10,20,18],"673":[20,23,20,27],"681":[20,23,20,41],"689":[21,19,21,24],"697":[21,25,21,89],"705":[21,15,21,90],"713":[21,15,21,90],"721":[21,9,21,91],"729":[23,20,23,24],"737":[23,20,23,24],"745":[23,20,23,24],"753":[24,10,24,14],"761":[24,10,24,18],"769":[25,9,25,13],"777":[25,20,25,24],"785":[25,20,25,38],"793":[25,39,25,40],"801":[25,20,25,41],"809":[25,46,25,49],"817":[25,52,25,55],"825":[25,58,25,62],"833":[25,58,25,76],"841":[25,79,25,83],"849":[25,79,25,97],"857":[25,9,25,97],"865":[25,9,25,98],"873":[26,21,26,25],"881":[26,21,26,29],"889":[26,9,26,17],"897":[26,9,26,29],"905":[26,9,26,30],"913":[28,10,28,14],"921":[28,10,28,22],"929":[28,23,28,27],"937":[28,23,28,31],"945":[28,10,28,32],"953":[29,9,29,13],"961":[29,9,29,21],"969":[29,22,29,26],"977":[29,22,29,30],"985":[29,34,29,41],"993":[29,42,29,46],"1001":[29,42,29,50],"1009":[29,58,29,59],"1017":[29,42,29,60],"1019":[29,42,29,57],"1025":[29,34,29,61],"1033":[29,34,29,71],"1041":[29,9,29,71],"1049":[29,9,29,72],"1057":[31,5,31,9],"1065":[31,19,31,23],"1073":[31,19,31,31],"1081":[31,32,31,36],"1089":[31,32,31,40],"1097":[31,19,31,41],"1105":[31,5,31,41],"1113":[31,5,31,42],"1121":[32,5,32,9],"1129":[32,17,32,21],"1137":[32,29,32,37],"1145":[32,17,32,38],"1147":[32,17,32,28],"1153":[32,5,32,38],"1161":[32,5,32,39],"1169":[14,1,33,2],"1177":[14,1,33,2],"1185":[14,1,33,2],"1193":[14,1,33,2],"1201":[14,1,33,2],"1209":[14,1,33,2],"1217":[34,1,34,5],"1225":[34,1,34,15],"1233":[36,17,36,19],"1241":[36,27,36,31],"1249":[36,27,36,36],"1257":[36,17,36,37],"1259":[36,17,36,26],"1265":[36,17,36,37],"1273":[36,17,36,37],"1281":[37,5,37,10],"1289":[37,11,37,24],"1297":[37,26,37,30],"1305":[37,5,37,31],"1313":[37,5,37,32],"1321":[38,18,38,19],"1329":[38,18,38,19],"1337":[38,18,38,19],"1345":[38,21,38,22],"1353":[38,25,38,30],"1361":[38,25,38,37],"1369":[38,42,38,46],"1385":[38,48,38,49],"1393":[38,48,38,51],"1409":[39,20,39,25],"1417":[39,26,39,27],"1425":[39,20,39,28],"1433":[39,20,39,28],"1441":[39,20,39,28],"1449":[40,19,40,26],"1457":[40,27,40,31],"1465":[40,33,40,37],"1473":[40,19,40,38],"1481":[40,19,40,38],"1489":[40,19,40,38],"1497":[41,19,41,26],"1505":[41,27,41,30],"1513":[41,19,41,31],"1521":[41,19,41,31],"1529":[41,19,41,31],"1537":[42,20,42,28],"1545":[42,29,42,32],"1553":[42,20,42,33],"1561":[42,20,42,33],"1569":[42,20,42,33],"1577":[43,16,43,20],"1585":[43,29,43,32],"1593":[43,34,43,38],"1601":[43,16,43,39],"1603":[43,16,43,28],"1609":[43,16,43,39],"1617":[43,9,43,40],"1625":[45,12,45,16],"1633":[45,12,45,16],"1641":[45,5,45,17],"1649":[34,25,46,2],"1657":[34,25,46,2],"1665":[34,25,46,2],"1673":[34,25,46,2],"1681":[34,25,46,2],"1689":[34,25,46,2],"1697":[34,25,46,2],"1705":[34,25,46,2],"1713":[34,25,46,2],"1721":[34,25,46,2],"1729":[34,25,46,2],"1737":[34,25,46,2],"1745":[34,1,46,2],"1753":[34,1,46,3],"1761":[47,1,47,5],"1769":[47,1,47,15],"1777":[48,5,48,10],"1785":[48,11,48,24],"1793":[48,26,48,30],"1801":[48,26,48,35],"1809":[48,5,48,36],"1817":[48,5,48,37],"1825":[49,5,49,9],"1833":[49,17,49,21],"1841":[49,17,49,26],"1849":[49,28,49,35],"1857":[49,37,49,45],"1865":[49,5,49,46],"1867":[49,5,49,16],"1873":[49,5,49,47],"1881":[47,25,50,2],"1889":[47,25,50,2],"1897":[47,25,50,2],"1905":[47,25,50,2],"1913":[47,25,50,2],"1921":[47,25,50,2],"1929":[47,1,50,2],"1937":[47,1,50,3],"1945":[51,1,51,5],"1953":[51,1,51,15],"1961":[52,15,52,19],"1969":[52,15,52,23],"1977":[52,15,52,23],"1985":[52,15,52,23],"1993":[53,16,53,20],"2001":[53,21,53,24],"2009":[53,26,53,30],"2017":[53,16,53,31],"2025":[53,16,53,31],"2033":[53,16,53,31],"2041":[54,16,54,23],"2049":[54,24,54,28],"2057":[54,16,54,29],"2065":[54,16,54,29],"2073":[54,16,54,29],"2081":[55,9,55,13],"2089":[55,17,55,21],"2097":[55,17,55,30],"2099":[55,17,55,28],"2105":[56,16,56,20],"2113":[56,16,56,20],"2121":[56,9,56,21],"2129":[58,12,58,16],"2137":[58,17,58,20],"2145":[58,22,58,30],"2153":[58,31,58,35],"2161":[58,37,58,40],"2169":[58,22,58,41],"2177":[58,43,58,50],"2185":[58,53,58,56],"2193":[58,12,58,57],"2201":[58,12,58,57],"2209":[58,5,58,58],"2217":[59,12,59,19],"2225":[59,20,59,24],"2233":[59,12,59,25],"2241":[59,12,59,25],"2249":[59,5,59,26],"2257":[60,9,60,13],"2265":[60,17,60,21],"2273":[60,17,60,30],"2275":[60,17,60,28],"2281":[61,16,61,20],"2289":[61,16,61,20],"2297":[61,9,61,21],"2305":[51,26,63,2],"2313":[51,26,63,2],"2321":[51,26,63,2],"2329":[51,26,63,2],"2337":[51,26,63,2],"2345":[51,26,63,2],"2353":[51,26,63,2],"2361":[51,26,63,2],"2369":[51,26,63,2],"2377":[51,1,63,2],"2385":[51,1,63,3],"2393":[65,5,65,10],"2401":[65,11,65,22],"2409":[65,24,65,28],"2417":[65,5,65,29],"2425":[65,5,65,30],"2433":[67,16,67,18],"2441":[67,28,67,32],"2449":[67,16,67,33],"2451":[67,16,67,27],"2457":[67,16,67,33],"2465":[67,9,67,34],"2473":[69,16,69,25],"2481":[69,16,69,25],"2489":[69,9,69,26],"2497":[68,7,70,6],"2505":[64,1,71,2],"2513":[64,1,71,2],"2521":[64,1,71,2],"2529":[1,1,71,2],"2537":[1,1,71,2],"2545":[1,1,71,2],"2553":[1,1,71,2],"2561":[1,1,71,2],"2569":[1,1,71,2],"2577":[1,1,71,2],"2585":[1,1,71,2],"2593":[1,1,71,2],"2601":[1,1,71,2],"2609":[1,1,71,2],"2617":[1,1,71,2],"2625":[14,1,33,2],"2633":[1,1,71,2],"2641":[64,1,71,2],"2649":[1,1,71,2],"2657":[20,5,22,6],"2665":[25,20,25,97],"2673":[24,5,27,6],"2681":[28,5,30,6],"2689":[14,1,33,2],"2697":[14,1,33,2],"2705":[38,5,44,6],"2713":[38,5,44,6],"2721":[34,25,46,2],"2729":[34,25,46,2],"2737":[47,25,50,2],"2745":[47,25,50,2],"2753":[55,5,57,6],"2761":[60,5,62,6],"2769":[51,26,63,2],"2777":[51,26,63,2],"2785":[64,1,71,2],"2793":[64,1,71,2],"2801":[1,1,71,2],"2809":[1,1,71,2],"nBranches":24,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/express/lib/view.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/express/lib/view_jalangi_.js","code":"/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:view');\nvar path = require('path');\nvar fs = require('fs');\nvar utils = require('./utils');\n\n/**\n * Module variables.\n * @private\n */\n\nvar dirname = path.dirname;\nvar basename = path.basename;\nvar extname = path.extname;\nvar join = path.join;\nvar resolve = path.resolve;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = View;\n\n/**\n * Initialize a new `View` with the given `name`.\n *\n * Options:\n *\n *   - `defaultEngine` the default template engine name\n *   - `engines` template engine require() cache\n *   - `root` root path for view lookup\n *\n * @param {string} name\n * @param {object} options\n * @public\n */\n\nfunction View(name, options) {\n  var opts = options || {};\n\n  this.defaultEngine = opts.defaultEngine;\n  this.ext = extname(name);\n  this.name = name;\n  this.root = opts.root;\n\n  if (!this.ext && !this.defaultEngine) {\n    throw new Error('No default engine was specified and no extension was provided.');\n  }\n\n  var fileName = name;\n\n  if (!this.ext) {\n    // get extension from default engine name\n    this.ext = this.defaultEngine[0] !== '.'\n      ? '.' + this.defaultEngine\n      : this.defaultEngine;\n\n    fileName += this.ext;\n  }\n\n  if (!opts.engines[this.ext]) {\n    // load engine\n    opts.engines[this.ext] = require(this.ext.substr(1)).__express;\n  }\n\n  // store loaded engine\n  this.engine = opts.engines[this.ext];\n\n  // lookup path\n  this.path = this.lookup(fileName);\n}\n\n/**\n * Lookup view by the given `name`\n *\n * @param {string} name\n * @private\n */\n\nView.prototype.lookup = function lookup(name) {\n  var path;\n  var roots = [].concat(this.root);\n\n  debug('lookup \"%s\"', name);\n\n  for (var i = 0; i < roots.length && !path; i++) {\n    var root = roots[i];\n\n    // resolve the path\n    var loc = resolve(root, name);\n    var dir = dirname(loc);\n    var file = basename(loc);\n\n    // resolve the file\n    path = this.resolve(dir, file);\n  }\n\n  return path;\n};\n\n/**\n * Render with the given options.\n *\n * @param {object} options\n * @param {function} callback\n * @private\n */\n\nView.prototype.render = function render(options, callback) {\n  debug('render \"%s\"', this.path);\n  this.engine(this.path, options, callback);\n};\n\n/**\n * Resolve the file within the given directory.\n *\n * @param {string} dir\n * @param {string} file\n * @private\n */\n\nView.prototype.resolve = function resolve(dir, file) {\n  var ext = this.ext;\n\n  // <path>.<ext>\n  var path = join(dir, file);\n  var stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n\n  // <path>/index.<ext>\n  path = join(dir, basename(file, ext), 'index' + ext);\n  stat = tryStat(path);\n\n  if (stat && stat.isFile()) {\n    return path;\n  }\n};\n\n/**\n * Return a stat, maybe.\n *\n * @param {string} path\n * @return {fs.Stats}\n * @private\n */\n\nfunction tryStat(path) {\n  debug('stat \"%s\"', path);\n\n  try {\n    return fs.statSync(path);\n  } catch (e) {\n    return undefined;\n  }\n}\n"};
jalangiLabel268:
    while (true) {
        try {
            J$.Se(2529, '/home/blake/ExpoSE/Targets/node-flarum/node_modules/express/lib/view_jalangi_.js', '/home/blake/ExpoSE/Targets/node-flarum/node_modules/express/lib/view.js');
            function View(name, options) {
                jalangiLabel263:
                    while (true) {
                        try {
                            J$.Fe(1169, arguments.callee, this, arguments);
                            arguments = J$.N(1177, 'arguments', arguments, 4);
                            name = J$.N(1185, 'name', name, 4);
                            options = J$.N(1193, 'options', options, 4);
                            J$.N(1201, 'opts', opts, 0);
                            J$.N(1209, 'fileName', fileName, 0);
                            var opts = J$.X1(489, J$.W(481, 'opts', J$.C(8, J$.R(465, 'options', options, 0)) ? J$._() : J$.T(473, {}, 11, false), opts, 1));
                            J$.X1(529, J$.P(521, J$.R(497, 'this', this, 0), 'defaultEngine', J$.G(513, J$.R(505, 'opts', opts, 0), 'defaultEngine', 0), 0));
                            J$.X1(577, J$.P(569, J$.R(537, 'this', this, 0), 'ext', J$.F(561, J$.R(545, 'extname', extname, 1), 0)(J$.R(553, 'name', name, 0)), 0));
                            J$.X1(609, J$.P(601, J$.R(585, 'this', this, 0), 'name', J$.R(593, 'name', name, 0), 0));
                            J$.X1(649, J$.P(641, J$.R(617, 'this', this, 0), 'root', J$.G(633, J$.R(625, 'opts', opts, 0), 'root', 0), 0));
                            if (J$.X1(2657, J$.C(24, J$.C(16, J$.U(10, '!', J$.G(665, J$.R(657, 'this', this, 0), 'ext', 0))) ? J$.U(18, '!', J$.G(681, J$.R(673, 'this', this, 0), 'defaultEngine', 0)) : J$._()))) {
                                throw J$.X1(721, J$.Th(713, J$.F(705, J$.R(689, 'Error', Error, 2), 1)(J$.T(697, 'No default engine was specified and no extension was provided.', 21, false))));
                            }
                            var fileName = J$.X1(745, J$.W(737, 'fileName', J$.R(729, 'name', name, 0), fileName, 1));
                            if (J$.X1(2673, J$.C(40, J$.U(26, '!', J$.G(761, J$.R(753, 'this', this, 0), 'ext', 0))))) {
                                J$.X1(865, J$.P(857, J$.R(769, 'this', this, 0), 'ext', J$.X1(2665, J$.C(32, J$.B(34, '!==', J$.G(801, J$.G(785, J$.R(777, 'this', this, 0), 'defaultEngine', 0), J$.T(793, 0, 22, false), 4), J$.T(809, '.', 21, false), 0))) ? J$.B(42, '+', J$.T(817, '.', 21, false), J$.G(833, J$.R(825, 'this', this, 0), 'defaultEngine', 0), 0) : J$.G(849, J$.R(841, 'this', this, 0), 'defaultEngine', 0), 0));
                                J$.X1(905, fileName = J$.W(897, 'fileName', J$.B(50, '+', J$.R(889, 'fileName', fileName, 0), J$.G(881, J$.R(873, 'this', this, 0), 'ext', 0), 0), fileName, 0));
                            }
                            if (J$.X1(2681, J$.C(48, J$.U(58, '!', J$.G(945, J$.G(921, J$.R(913, 'opts', opts, 0), 'engines', 0), J$.G(937, J$.R(929, 'this', this, 0), 'ext', 0), 4))))) {
                                J$.X1(1049, J$.P(1041, J$.G(961, J$.R(953, 'opts', opts, 0), 'engines', 0), J$.G(977, J$.R(969, 'this', this, 0), 'ext', 0), J$.G(1033, J$.F(1025, J$.R(985, 'require', require, 2), 0)(J$.M(1017, J$.G(1001, J$.R(993, 'this', this, 0), 'ext', 0), 'substr', 0)(J$.T(1009, 1, 22, false))), '__express', 0), 2));
                            }
                            J$.X1(1113, J$.P(1105, J$.R(1057, 'this', this, 0), 'engine', J$.G(1097, J$.G(1073, J$.R(1065, 'opts', opts, 0), 'engines', 0), J$.G(1089, J$.R(1081, 'this', this, 0), 'ext', 0), 4), 0));
                            J$.X1(1161, J$.P(1153, J$.R(1121, 'this', this, 0), 'path', J$.M(1145, J$.R(1129, 'this', this, 0), 'lookup', 0)(J$.R(1137, 'fileName', fileName, 0)), 0));
                        } catch (J$e) {
                            J$.Ex(2689, J$e);
                        } finally {
                            if (J$.Fr(2697))
                                continue jalangiLabel263;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function tryStat(path) {
                jalangiLabel267:
                    while (true) {
                        try {
                            J$.Fe(2505, arguments.callee, this, arguments);
                            arguments = J$.N(2513, 'arguments', arguments, 4);
                            path = J$.N(2521, 'path', path, 4);
                            J$.X1(2425, J$.F(2417, J$.R(2393, 'debug', debug, 1), 0)(J$.T(2401, 'stat "%s"', 21, false), J$.R(2409, 'path', path, 0)));
                            try {
                                return J$.X1(2465, J$.Rt(2457, J$.M(2449, J$.R(2433, 'fs', fs, 1), 'statSync', 0)(J$.R(2441, 'path', path, 0))));
                            } catch (e) {
                                e = J$.N(2497, 'e', e, 1);
                                return J$.X1(2489, J$.Rt(2481, J$.T(2473, undefined, 24, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(2785, J$e);
                        } finally {
                            if (J$.Fr(2793))
                                continue jalangiLabel267;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2537, '__secret__S$', __secret__S$, 0);
            J$.N(2545, '__secret__traits__', __secret__traits__, 0);
            J$.N(2553, 'debug', debug, 0);
            J$.N(2561, 'path', path, 0);
            J$.N(2569, 'fs', fs, 0);
            J$.N(2577, 'utils', utils, 0);
            J$.N(2585, 'dirname', dirname, 0);
            J$.N(2593, 'basename', basename, 0);
            J$.N(2601, 'extname', extname, 0);
            J$.N(2609, 'join', join, 0);
            J$.N(2617, 'resolve', resolve, 0);
            View = J$.N(2633, 'View', J$.T(2625, View, 12, false, 1169), 0);
            tryStat = J$.N(2649, 'tryStat', J$.T(2641, tryStat, 12, false, 2505), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var debug = J$.X1(145, J$.W(137, 'debug', J$.F(129, J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'debug', 21, false)), 0)(J$.T(121, 'express:view', 21, false)), debug, 3));
            var path = J$.X1(185, J$.W(177, 'path', J$.F(169, J$.R(153, 'require', require, 2), 0)(J$.T(161, 'path', 21, false)), path, 3));
            var fs = J$.X1(225, J$.W(217, 'fs', J$.F(209, J$.R(193, 'require', require, 2), 0)(J$.T(201, 'fs', 21, false)), fs, 3));
            var utils = J$.X1(265, J$.W(257, 'utils', J$.F(249, J$.R(233, 'require', require, 2), 0)(J$.T(241, './utils', 21, false)), utils, 3));
            var dirname = J$.X1(297, J$.W(289, 'dirname', J$.G(281, J$.R(273, 'path', path, 1), 'dirname', 0), dirname, 3));
            var basename = J$.X1(329, J$.W(321, 'basename', J$.G(313, J$.R(305, 'path', path, 1), 'basename', 0), basename, 3));
            var extname = J$.X1(361, J$.W(353, 'extname', J$.G(345, J$.R(337, 'path', path, 1), 'extname', 0), extname, 3));
            var join = J$.X1(393, J$.W(385, 'join', J$.G(377, J$.R(369, 'path', path, 1), 'join', 0), join, 3));
            var resolve = J$.X1(425, J$.W(417, 'resolve', J$.G(409, J$.R(401, 'path', path, 1), 'resolve', 0), resolve, 3));
            J$.X1(457, J$.P(449, J$.R(433, 'module', module, 2), 'exports', J$.R(441, 'View', View, 1), 0));
            J$.X1(1753, J$.P(1745, J$.G(1225, J$.R(1217, 'View', View, 1), 'prototype', 0), 'lookup', J$.T(1737, function lookup(name) {
                jalangiLabel264:
                    while (true) {
                        try {
                            J$.Fe(1649, arguments.callee, this, arguments);
                            arguments = J$.N(1657, 'arguments', arguments, 4);
                            lookup = J$.N(1665, 'lookup', lookup, 0);
                            name = J$.N(1673, 'name', name, 4);
                            J$.N(1681, 'path', path, 0);
                            J$.N(1689, 'roots', roots, 0);
                            J$.N(1697, 'i', i, 0);
                            J$.N(1705, 'root', root, 0);
                            J$.N(1713, 'loc', loc, 0);
                            J$.N(1721, 'dir', dir, 0);
                            J$.N(1729, 'file', file, 0);
                            var path;
                            var roots = J$.X1(1273, J$.W(1265, 'roots', J$.M(1257, J$.T(1233, [], 10, false), 'concat', 0)(J$.G(1249, J$.R(1241, 'this', this, 0), 'root', 0)), roots, 1));
                            J$.X1(1313, J$.F(1305, J$.R(1281, 'debug', debug, 1), 0)(J$.T(1289, 'lookup "%s"', 21, false), J$.R(1297, 'name', name, 0)));
                            for (var i = J$.X1(1337, J$.W(1329, 'i', J$.T(1321, 0, 22, false), i, 1)); J$.X1(2705, J$.C(64, J$.C(56, J$.B(66, '<', J$.R(1345, 'i', i, 0), J$.G(1361, J$.R(1353, 'roots', roots, 0), 'length', 0), 0)) ? J$.U(74, '!', J$.R(1369, 'path', path, 0)) : J$._())); J$.X1(2713, J$.B(98, '-', i = J$.W(1393, 'i', J$.B(90, '+', J$.U(82, '+', J$.R(1385, 'i', i, 0)), J$.T(1377, 1, 22, false), 0), i, 0), J$.T(1401, 1, 22, false), 0))) {
                                var root = J$.X1(1441, J$.W(1433, 'root', J$.G(1425, J$.R(1409, 'roots', roots, 0), J$.R(1417, 'i', i, 0), 4), root, 1));
                                var loc = J$.X1(1489, J$.W(1481, 'loc', J$.F(1473, J$.R(1449, 'resolve', resolve, 1), 0)(J$.R(1457, 'root', root, 0), J$.R(1465, 'name', name, 0)), loc, 1));
                                var dir = J$.X1(1529, J$.W(1521, 'dir', J$.F(1513, J$.R(1497, 'dirname', dirname, 1), 0)(J$.R(1505, 'loc', loc, 0)), dir, 1));
                                var file = J$.X1(1569, J$.W(1561, 'file', J$.F(1553, J$.R(1537, 'basename', basename, 1), 0)(J$.R(1545, 'loc', loc, 0)), file, 1));
                                J$.X1(1617, path = J$.W(1609, 'path', J$.M(1601, J$.R(1577, 'this', this, 0), 'resolve', 0)(J$.R(1585, 'dir', dir, 0), J$.R(1593, 'file', file, 0)), path, 0));
                            }
                            return J$.X1(1641, J$.Rt(1633, J$.R(1625, 'path', path, 0)));
                        } catch (J$e) {
                            J$.Ex(2721, J$e);
                        } finally {
                            if (J$.Fr(2729))
                                continue jalangiLabel264;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1649), 0));
            J$.X1(1937, J$.P(1929, J$.G(1769, J$.R(1761, 'View', View, 1), 'prototype', 0), 'render', J$.T(1921, function render(options, callback) {
                jalangiLabel265:
                    while (true) {
                        try {
                            J$.Fe(1881, arguments.callee, this, arguments);
                            arguments = J$.N(1889, 'arguments', arguments, 4);
                            render = J$.N(1897, 'render', render, 0);
                            options = J$.N(1905, 'options', options, 4);
                            callback = J$.N(1913, 'callback', callback, 4);
                            J$.X1(1817, J$.F(1809, J$.R(1777, 'debug', debug, 1), 0)(J$.T(1785, 'render "%s"', 21, false), J$.G(1801, J$.R(1793, 'this', this, 0), 'path', 0)));
                            J$.X1(1873, J$.M(1865, J$.R(1825, 'this', this, 0), 'engine', 0)(J$.G(1841, J$.R(1833, 'this', this, 0), 'path', 0), J$.R(1849, 'options', options, 0), J$.R(1857, 'callback', callback, 0)));
                        } catch (J$e) {
                            J$.Ex(2737, J$e);
                        } finally {
                            if (J$.Fr(2745))
                                continue jalangiLabel265;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1881), 0));
            J$.X1(2385, J$.P(2377, J$.G(1953, J$.R(1945, 'View', View, 1), 'prototype', 0), 'resolve', J$.T(2369, function resolve(dir, file) {
                jalangiLabel266:
                    while (true) {
                        try {
                            J$.Fe(2305, arguments.callee, this, arguments);
                            arguments = J$.N(2313, 'arguments', arguments, 4);
                            resolve = J$.N(2321, 'resolve', resolve, 0);
                            dir = J$.N(2329, 'dir', dir, 4);
                            file = J$.N(2337, 'file', file, 4);
                            J$.N(2345, 'ext', ext, 0);
                            J$.N(2353, 'path', path, 0);
                            J$.N(2361, 'stat', stat, 0);
                            var ext = J$.X1(1985, J$.W(1977, 'ext', J$.G(1969, J$.R(1961, 'this', this, 0), 'ext', 0), ext, 1));
                            var path = J$.X1(2033, J$.W(2025, 'path', J$.F(2017, J$.R(1993, 'join', join, 1), 0)(J$.R(2001, 'dir', dir, 0), J$.R(2009, 'file', file, 0)), path, 1));
                            var stat = J$.X1(2073, J$.W(2065, 'stat', J$.F(2057, J$.R(2041, 'tryStat', tryStat, 1), 0)(J$.R(2049, 'path', path, 0)), stat, 1));
                            if (J$.X1(2753, J$.C(80, J$.C(72, J$.R(2081, 'stat', stat, 0)) ? J$.M(2097, J$.R(2089, 'stat', stat, 0), 'isFile', 0)() : J$._()))) {
                                return J$.X1(2121, J$.Rt(2113, J$.R(2105, 'path', path, 0)));
                            }
                            J$.X1(2209, path = J$.W(2201, 'path', J$.F(2193, J$.R(2129, 'join', join, 1), 0)(J$.R(2137, 'dir', dir, 0), J$.F(2169, J$.R(2145, 'basename', basename, 1), 0)(J$.R(2153, 'file', file, 0), J$.R(2161, 'ext', ext, 0)), J$.B(106, '+', J$.T(2177, 'index', 21, false), J$.R(2185, 'ext', ext, 0), 0)), path, 0));
                            J$.X1(2249, stat = J$.W(2241, 'stat', J$.F(2233, J$.R(2217, 'tryStat', tryStat, 1), 0)(J$.R(2225, 'path', path, 0)), stat, 0));
                            if (J$.X1(2761, J$.C(96, J$.C(88, J$.R(2257, 'stat', stat, 0)) ? J$.M(2273, J$.R(2265, 'stat', stat, 0), 'isFile', 0)() : J$._()))) {
                                return J$.X1(2297, J$.Rt(2289, J$.R(2281, 'path', path, 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(2769, J$e);
                        } finally {
                            if (J$.Fr(2777))
                                continue jalangiLabel266;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2305), 0));
        } catch (J$e) {
            J$.Ex(2801, J$e);
        } finally {
            if (J$.Sr(2809)) {
                J$.L();
                continue jalangiLabel268;
            } else {
                J$.L();
                break jalangiLabel268;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
