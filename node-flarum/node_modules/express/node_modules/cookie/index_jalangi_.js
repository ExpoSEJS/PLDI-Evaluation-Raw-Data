J$.iids = {"8":[9,9,9,32],"9":[1,20,1,27],"10":[9,9,9,19],"16":[13,15,13,28],"17":[1,28,1,32],"18":[9,9,9,32],"24":[15,15,15,35],"25":[1,20,1,33],"26":[18,13,18,23],"32":[18,13,18,23],"33":[1,20,1,33],"34":[22,31,22,39],"40":[23,13,23,26],"41":[1,20,1,33],"48":[26,13,26,34],"49":[2,26,2,38],"50":[23,13,23,26],"56":[33,15,33,28],"57":[2,26,2,45],"58":[24,32,24,34],"64":[34,15,34,35],"65":[2,26,2,45],"66":[26,13,26,34],"72":[35,9,35,39],"73":[2,26,2,45],"74":[35,9,35,39],"80":[39,9,39,49],"81":[3,1,3,8],"82":[39,18,39,49],"88":[39,9,39,49],"89":[3,17,3,22],"90":[42,18,42,28],"96":[45,13,45,26],"97":[3,1,3,22],"98":[42,18,42,36],"104":[43,9,43,27],"105":[3,1,3,23],"106":[43,9,43,27],"112":[50,13,50,49],"113":[4,1,4,8],"114":[44,22,44,36],"120":[49,9,49,19],"121":[4,21,4,30],"122":[47,20,47,39],"128":[56,13,56,47],"129":[4,1,4,30],"130":[50,13,50,49],"136":[55,9,55,17],"137":[4,1,4,31],"138":[53,20,53,42],"144":[61,9,61,20],"145":[5,14,5,32],"146":[56,13,56,47],"152":[63,9,63,21],"153":[5,14,5,32],"154":[59,20,59,38],"160":[65,9,65,19],"161":[5,14,5,32],"162":[62,20,62,58],"169":[6,14,6,32],"177":[6,14,6,32],"185":[6,14,6,32],"193":[7,26,7,65],"201":[7,26,7,65],"209":[7,26,7,65],"217":[9,16,9,19],"225":[9,24,9,32],"233":[10,19,10,28],"241":[10,29,10,60],"249":[10,15,10,61],"257":[10,15,10,61],"265":[10,9,10,62],"273":[12,15,12,17],"281":[12,15,12,17],"289":[12,15,12,17],"297":[13,15,13,22],"305":[13,26,13,28],"313":[13,15,13,28],"321":[13,15,13,28],"329":[14,17,14,20],"337":[14,27,14,32],"345":[14,17,14,33],"347":[14,17,14,26],"353":[14,17,14,33],"361":[14,17,14,33],"369":[15,15,15,18],"377":[15,15,15,25],"385":[15,29,15,35],"393":[15,15,15,35],"401":[15,15,15,35],"409":[16,5,16,10],"417":[17,22,17,26],"425":[17,35,17,38],"433":[17,22,17,39],"435":[17,22,17,34],"441":[17,22,17,39],"449":[17,22,17,39],"457":[18,13,18,19],"465":[18,22,18,23],"473":[19,13,19,20],"481":[19,13,19,20],"489":[21,19,21,23],"497":[21,31,21,32],"505":[21,34,21,40],"513":[21,19,21,41],"515":[21,19,21,30],"521":[21,19,21,48],"523":[21,19,21,46],"529":[21,19,21,48],"537":[21,19,21,48],"545":[22,19,22,23],"561":[22,33,22,39],"569":[22,31,22,39],"577":[22,41,22,45],"585":[22,41,22,52],"593":[22,19,22,53],"595":[22,19,22,30],"601":[22,19,22,60],"603":[22,19,22,58],"609":[22,19,22,60],"617":[22,19,22,60],"625":[23,13,23,16],"633":[23,20,23,23],"641":[23,24,23,25],"649":[23,20,23,26],"657":[24,19,24,22],"665":[24,29,24,30],"673":[24,33,24,34],"681":[24,19,24,35],"683":[24,19,24,28],"689":[24,19,24,35],"697":[24,13,24,36],"705":[26,13,26,22],"713":[26,26,26,29],"721":[26,30,26,33],"729":[26,26,26,34],"737":[27,13,27,16],"745":[27,17,27,20],"753":[27,24,27,33],"761":[27,34,27,37],"769":[27,39,27,42],"777":[27,24,27,43],"785":[27,13,27,43],"793":[27,13,27,44],"801":[16,19,29,6],"809":[16,19,29,6],"817":[16,19,29,6],"825":[16,19,29,6],"833":[16,19,29,6],"841":[16,19,29,6],"849":[16,19,29,6],"857":[16,5,29,7],"859":[16,5,16,18],"865":[16,5,29,8],"873":[30,12,30,15],"881":[30,12,30,15],"889":[30,5,30,16],"897":[8,1,31,2],"905":[8,1,31,2],"913":[8,1,31,2],"921":[8,1,31,2],"929":[8,1,31,2],"937":[8,1,31,2],"945":[8,1,31,2],"953":[8,1,31,2],"961":[33,15,33,22],"969":[33,26,33,28],"977":[33,15,33,28],"985":[33,15,33,28],"993":[34,15,34,18],"1001":[34,15,34,25],"1009":[34,29,34,35],"1017":[34,15,34,35],"1025":[34,15,34,35],"1033":[35,10,35,28],"1041":[35,34,35,38],"1049":[35,10,35,39],"1051":[35,10,35,33],"1057":[36,19,36,28],"1065":[36,29,36,55],"1073":[36,15,36,56],"1081":[36,15,36,56],"1089":[36,9,36,57],"1097":[38,17,38,20],"1105":[38,21,38,24],"1113":[38,17,38,25],"1121":[38,17,38,25],"1129":[38,17,38,25],"1137":[39,9,39,14],"1145":[39,19,39,37],"1153":[39,43,39,48],"1161":[39,19,39,49],"1163":[39,19,39,42],"1169":[40,19,40,28],"1177":[40,29,40,54],"1185":[40,15,40,55],"1193":[40,15,40,55],"1201":[40,9,40,56],"1209":[42,18,42,22],"1217":[42,25,42,28],"1225":[42,31,42,36],"1233":[42,17,42,37],"1241":[42,17,42,37],"1249":[42,17,42,37],"1257":[43,9,43,13],"1265":[43,17,43,20],"1273":[43,17,43,27],"1281":[44,22,44,25],"1289":[44,22,44,32],"1297":[44,35,44,36],"1305":[44,22,44,36],"1313":[44,22,44,36],"1321":[45,13,45,18],"1329":[45,19,45,25],"1337":[45,13,45,26],"1345":[46,23,46,28],"1353":[46,29,46,56],"1361":[46,19,46,57],"1369":[46,19,46,57],"1377":[46,13,46,58],"1385":[47,9,47,14],"1393":[47,20,47,30],"1401":[47,33,47,39],"1409":[47,9,47,40],"1411":[47,9,47,19],"1417":[47,9,47,41],"1425":[49,9,49,12],"1433":[49,9,49,19],"1441":[50,14,50,32],"1449":[50,38,50,41],"1457":[50,38,50,48],"1465":[50,14,50,49],"1467":[50,14,50,37],"1473":[51,23,51,32],"1481":[51,33,51,59],"1489":[51,19,51,60],"1497":[51,19,51,60],"1505":[51,13,51,61],"1513":[53,9,53,14],"1521":[53,20,53,29],"1529":[53,32,53,35],"1537":[53,32,53,42],"1545":[53,9,53,43],"1547":[53,9,53,19],"1553":[53,9,53,44],"1561":[55,9,55,12],"1569":[55,9,55,17],"1577":[56,14,56,32],"1585":[56,38,56,41],"1593":[56,38,56,46],"1601":[56,14,56,47],"1603":[56,14,56,37],"1609":[57,23,57,32],"1617":[57,33,57,57],"1625":[57,19,57,58],"1633":[57,19,57,58],"1641":[57,13,57,59],"1649":[59,9,59,14],"1657":[59,20,59,27],"1665":[59,30,59,33],"1673":[59,30,59,38],"1681":[59,9,59,39],"1683":[59,9,59,19],"1689":[59,9,59,40],"1697":[61,9,61,12],"1705":[61,9,61,20],"1713":[62,9,62,14],"1721":[62,20,62,30],"1729":[62,33,62,36],"1737":[62,33,62,44],"1745":[62,33,62,58],"1747":[62,33,62,56],"1753":[62,9,62,59],"1755":[62,9,62,19],"1761":[62,9,62,60],"1769":[63,9,63,12],"1777":[63,9,63,21],"1785":[64,9,64,14],"1793":[64,20,64,30],"1801":[64,9,64,31],"1803":[64,9,64,19],"1809":[64,9,64,32],"1817":[65,9,65,12],"1825":[65,9,65,19],"1833":[66,9,66,14],"1841":[66,20,66,28],"1849":[66,9,66,29],"1851":[66,9,66,19],"1857":[66,9,66,30],"1865":[67,12,67,17],"1873":[67,23,67,27],"1881":[67,12,67,28],"1883":[67,12,67,22],"1889":[67,12,67,28],"1897":[67,5,67,29],"1905":[32,1,68,2],"1913":[32,1,68,2],"1921":[32,1,68,2],"1929":[32,1,68,2],"1937":[32,1,68,2],"1945":[32,1,68,2],"1953":[32,1,68,2],"1961":[32,1,68,2],"1969":[32,1,68,2],"1977":[32,1,68,2],"1985":[71,16,71,22],"1993":[71,23,71,26],"2001":[71,16,71,27],"2009":[71,16,71,27],"2017":[71,9,71,28],"2025":[73,16,73,19],"2033":[73,16,73,19],"2041":[73,9,73,20],"2049":[72,7,74,6],"2057":[69,1,75,2],"2065":[69,1,75,2],"2073":[69,1,75,2],"2081":[69,1,75,2],"2089":[1,1,75,2],"2097":[1,1,75,2],"2105":[1,1,75,2],"2113":[1,1,75,2],"2121":[1,1,75,2],"2129":[1,1,75,2],"2137":[8,1,31,2],"2145":[1,1,75,2],"2153":[32,1,68,2],"2161":[1,1,75,2],"2169":[69,1,75,2],"2177":[1,1,75,2],"2185":[9,5,11,6],"2193":[18,9,20,10],"2201":[23,9,25,10],"2209":[26,9,28,10],"2217":[16,19,29,6],"2225":[16,19,29,6],"2233":[8,1,31,2],"2241":[8,1,31,2],"2249":[35,5,37,6],"2257":[39,5,41,6],"2265":[45,9,46,58],"2273":[43,5,48,6],"2281":[50,9,52,10],"2289":[49,5,54,6],"2297":[56,9,58,10],"2305":[55,5,60,6],"2313":[61,5,62,60],"2321":[63,5,64,32],"2329":[65,5,66,30],"2337":[32,1,68,2],"2345":[32,1,68,2],"2353":[69,1,75,2],"2361":[69,1,75,2],"2369":[1,1,75,2],"2377":[1,1,75,2],"nBranches":40,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/express/node_modules/cookie/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/express/node_modules/cookie/index_jalangi_.js","code":"/*!\r\n * cookie\r\n * Copyright(c) 2012-2014 Roman Shtylman\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nexports.parse = parse;\r\nexports.serialize = serialize;\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar decode = decodeURIComponent;\r\nvar encode = encodeURIComponent;\r\n\r\n/**\r\n * RegExp to match field-content in RFC 7230 sec 3.2\r\n *\r\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\r\n * field-vchar   = VCHAR / obs-text\r\n * obs-text      = %x80-FF\r\n */\r\n\r\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\r\n\r\n/**\r\n * Parse a cookie header.\r\n *\r\n * Parse the given cookie header string into an object\r\n * The object has the various cookies as keys(names) => values\r\n *\r\n * @param {string} str\r\n * @param {object} [options]\r\n * @return {object}\r\n * @public\r\n */\r\n\r\nfunction parse(str, options) {\r\n  if (typeof str !== 'string') {\r\n    throw new TypeError('argument str must be a string');\r\n  }\r\n\r\n  var obj = {}\r\n  var opt = options || {};\r\n  var pairs = str.split(/; */);\r\n  var dec = opt.decode || decode;\r\n\r\n  pairs.forEach(function(pair) {\r\n    var eq_idx = pair.indexOf('=')\r\n\r\n    // skip things that don't look like key=value\r\n    if (eq_idx < 0) {\r\n      return;\r\n    }\r\n\r\n    var key = pair.substr(0, eq_idx).trim()\r\n    var val = pair.substr(++eq_idx, pair.length).trim();\r\n\r\n    // quoted values\r\n    if ('\"' == val[0]) {\r\n      val = val.slice(1, -1);\r\n    }\r\n\r\n    // only assign once\r\n    if (undefined == obj[key]) {\r\n      obj[key] = tryDecode(val, dec);\r\n    }\r\n  });\r\n\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Serialize data into a cookie header.\r\n *\r\n * Serialize the a name value pair into a cookie string suitable for\r\n * http headers. An optional options object specified cookie parameters.\r\n *\r\n * serialize('foo', 'bar', { httpOnly: true })\r\n *   => \"foo=bar; httpOnly\"\r\n *\r\n * @param {string} name\r\n * @param {string} val\r\n * @param {object} [options]\r\n * @return {string}\r\n * @public\r\n */\r\n\r\nfunction serialize(name, val, options) {\r\n  var opt = options || {};\r\n  var enc = opt.encode || encode;\r\n\r\n  if (!fieldContentRegExp.test(name)) {\r\n    throw new TypeError('argument name is invalid');\r\n  }\r\n\r\n  var value = enc(val);\r\n\r\n  if (value && !fieldContentRegExp.test(value)) {\r\n    throw new TypeError('argument val is invalid');\r\n  }\r\n\r\n  var pairs = [name + '=' + value];\r\n\r\n  if (null != opt.maxAge) {\r\n    var maxAge = opt.maxAge - 0;\r\n    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\r\n    pairs.push('Max-Age=' + maxAge);\r\n  }\r\n\r\n  if (opt.domain) {\r\n    if (!fieldContentRegExp.test(opt.domain)) {\r\n      throw new TypeError('option domain is invalid');\r\n    }\r\n\r\n    pairs.push('Domain=' + opt.domain);\r\n  }\r\n\r\n  if (opt.path) {\r\n    if (!fieldContentRegExp.test(opt.path)) {\r\n      throw new TypeError('option path is invalid');\r\n    }\r\n\r\n    pairs.push('Path=' + opt.path);\r\n  }\r\n\r\n  if (opt.expires) pairs.push('Expires=' + opt.expires.toUTCString());\r\n  if (opt.httpOnly) pairs.push('HttpOnly');\r\n  if (opt.secure) pairs.push('Secure');\r\n\r\n  return pairs.join('; ');\r\n}\r\n\r\n/**\r\n * Try decoding a string using a decoding function.\r\n *\r\n * @param {string} str\r\n * @param {function} decode\r\n * @private\r\n */\r\n\r\nfunction tryDecode(str, decode) {\r\n  try {\r\n    return decode(str);\r\n  } catch (e) {\r\n    return str;\r\n  }\r\n}\r\n"};
jalangiLabel620:
    while (true) {
        try {
            J$.Se(2089, '/home/blake/ExpoSE/Targets/node-flarum/node_modules/express/node_modules/cookie/index_jalangi_.js', '/home/blake/ExpoSE/Targets/node-flarum/node_modules/express/node_modules/cookie/index.js');
            function parse(str, options) {
                jalangiLabel617:
                    while (true) {
                        try {
                            J$.Fe(897, arguments.callee, this, arguments);
                            arguments = J$.N(905, 'arguments', arguments, 4);
                            str = J$.N(913, 'str', str, 4);
                            options = J$.N(921, 'options', options, 4);
                            J$.N(929, 'obj', obj, 0);
                            J$.N(937, 'opt', opt, 0);
                            J$.N(945, 'pairs', pairs, 0);
                            J$.N(953, 'dec', dec, 0);
                            if (J$.X1(2185, J$.C(8, J$.B(18, '!==', J$.U(10, 'typeof', J$.R(217, 'str', str, 0)), J$.T(225, 'string', 21, false), 0)))) {
                                throw J$.X1(265, J$.Th(257, J$.F(249, J$.R(233, 'TypeError', TypeError, 2), 1)(J$.T(241, 'argument str must be a string', 21, false))));
                            }
                            var obj = J$.X1(289, J$.W(281, 'obj', J$.T(273, {}, 11, false), obj, 1));
                            var opt = J$.X1(321, J$.W(313, 'opt', J$.C(16, J$.R(297, 'options', options, 0)) ? J$._() : J$.T(305, {}, 11, false), opt, 1));
                            var pairs = J$.X1(361, J$.W(353, 'pairs', J$.M(345, J$.R(329, 'str', str, 0), 'split', 0)(J$.T(337, /; */, 14, false)), pairs, 1));
                            var dec = J$.X1(401, J$.W(393, 'dec', J$.C(24, J$.G(377, J$.R(369, 'opt', opt, 0), 'decode', 0)) ? J$._() : J$.R(385, 'decode', decode, 1), dec, 1));
                            J$.X1(865, J$.M(857, J$.R(409, 'pairs', pairs, 0), 'forEach', 0)(J$.T(849, function (pair) {
                                jalangiLabel616:
                                    while (true) {
                                        try {
                                            J$.Fe(801, arguments.callee, this, arguments);
                                            arguments = J$.N(809, 'arguments', arguments, 4);
                                            pair = J$.N(817, 'pair', pair, 4);
                                            J$.N(825, 'eq_idx', eq_idx, 0);
                                            J$.N(833, 'key', key, 0);
                                            J$.N(841, 'val', val, 0);
                                            var eq_idx = J$.X1(449, J$.W(441, 'eq_idx', J$.M(433, J$.R(417, 'pair', pair, 0), 'indexOf', 0)(J$.T(425, '=', 21, false)), eq_idx, 1));
                                            if (J$.X1(2193, J$.C(32, J$.B(26, '<', J$.R(457, 'eq_idx', eq_idx, 0), J$.T(465, 0, 22, false), 0)))) {
                                                return J$.X1(481, J$.Rt(473, undefined));
                                            }
                                            var key = J$.X1(537, J$.W(529, 'key', J$.M(521, J$.M(513, J$.R(489, 'pair', pair, 0), 'substr', 0)(J$.T(497, 0, 22, false), J$.R(505, 'eq_idx', eq_idx, 0)), 'trim', 0)(), key, 1));
                                            var val = J$.X1(617, J$.W(609, 'val', J$.M(601, J$.M(593, J$.R(545, 'pair', pair, 0), 'substr', 0)(eq_idx = J$.W(569, 'eq_idx', J$.B(42, '+', J$.U(34, '+', J$.R(561, 'eq_idx', eq_idx, 0)), J$.T(553, 1, 22, false), 0), eq_idx, 0), J$.G(585, J$.R(577, 'pair', pair, 0), 'length', 0)), 'trim', 0)(), val, 1));
                                            if (J$.X1(2201, J$.C(40, J$.B(50, '==', J$.T(625, '"', 21, false), J$.G(649, J$.R(633, 'val', val, 0), J$.T(641, 0, 22, false), 4), 0)))) {
                                                J$.X1(697, val = J$.W(689, 'val', J$.M(681, J$.R(657, 'val', val, 0), 'slice', 0)(J$.T(665, 1, 22, false), J$.U(58, '-', J$.T(673, 1, 22, false))), val, 0));
                                            }
                                            if (J$.X1(2209, J$.C(48, J$.B(66, '==', J$.T(705, undefined, 24, false), J$.G(729, J$.R(713, 'obj', obj, 0), J$.R(721, 'key', key, 0), 4), 0)))) {
                                                J$.X1(793, J$.P(785, J$.R(737, 'obj', obj, 0), J$.R(745, 'key', key, 0), J$.F(777, J$.R(753, 'tryDecode', tryDecode, 1), 0)(J$.R(761, 'val', val, 0), J$.R(769, 'dec', dec, 0)), 2));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(2217, J$e);
                                        } finally {
                                            if (J$.Fr(2225))
                                                continue jalangiLabel616;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 801)));
                            return J$.X1(889, J$.Rt(881, J$.R(873, 'obj', obj, 0)));
                        } catch (J$e) {
                            J$.Ex(2233, J$e);
                        } finally {
                            if (J$.Fr(2241))
                                continue jalangiLabel617;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function serialize(name, val, options) {
                jalangiLabel618:
                    while (true) {
                        try {
                            J$.Fe(1905, arguments.callee, this, arguments);
                            arguments = J$.N(1913, 'arguments', arguments, 4);
                            name = J$.N(1921, 'name', name, 4);
                            val = J$.N(1929, 'val', val, 4);
                            options = J$.N(1937, 'options', options, 4);
                            J$.N(1945, 'opt', opt, 0);
                            J$.N(1953, 'enc', enc, 0);
                            J$.N(1961, 'value', value, 0);
                            J$.N(1969, 'pairs', pairs, 0);
                            J$.N(1977, 'maxAge', maxAge, 0);
                            var opt = J$.X1(985, J$.W(977, 'opt', J$.C(56, J$.R(961, 'options', options, 0)) ? J$._() : J$.T(969, {}, 11, false), opt, 1));
                            var enc = J$.X1(1025, J$.W(1017, 'enc', J$.C(64, J$.G(1001, J$.R(993, 'opt', opt, 0), 'encode', 0)) ? J$._() : J$.R(1009, 'encode', encode, 1), enc, 1));
                            if (J$.X1(2249, J$.C(72, J$.U(74, '!', J$.M(1049, J$.R(1033, 'fieldContentRegExp', fieldContentRegExp, 1), 'test', 0)(J$.R(1041, 'name', name, 0)))))) {
                                throw J$.X1(1089, J$.Th(1081, J$.F(1073, J$.R(1057, 'TypeError', TypeError, 2), 1)(J$.T(1065, 'argument name is invalid', 21, false))));
                            }
                            var value = J$.X1(1129, J$.W(1121, 'value', J$.F(1113, J$.R(1097, 'enc', enc, 0), 0)(J$.R(1105, 'val', val, 0)), value, 1));
                            if (J$.X1(2257, J$.C(88, J$.C(80, J$.R(1137, 'value', value, 0)) ? J$.U(82, '!', J$.M(1161, J$.R(1145, 'fieldContentRegExp', fieldContentRegExp, 1), 'test', 0)(J$.R(1153, 'value', value, 0))) : J$._()))) {
                                throw J$.X1(1201, J$.Th(1193, J$.F(1185, J$.R(1169, 'TypeError', TypeError, 2), 1)(J$.T(1177, 'argument val is invalid', 21, false))));
                            }
                            var pairs = J$.X1(1249, J$.W(1241, 'pairs', J$.T(1233, [J$.B(98, '+', J$.B(90, '+', J$.R(1209, 'name', name, 0), J$.T(1217, '=', 21, false), 0), J$.R(1225, 'value', value, 0), 0)], 10, false), pairs, 1));
                            if (J$.X1(2273, J$.C(104, J$.B(106, '!=', J$.T(1257, null, 25, false), J$.G(1273, J$.R(1265, 'opt', opt, 0), 'maxAge', 0), 0)))) {
                                var maxAge = J$.X1(1313, J$.W(1305, 'maxAge', J$.B(114, '-', J$.G(1289, J$.R(1281, 'opt', opt, 0), 'maxAge', 0), J$.T(1297, 0, 22, false), 0), maxAge, 1));
                                if (J$.X1(2265, J$.C(96, J$.F(1337, J$.R(1321, 'isNaN', isNaN, 2), 0)(J$.R(1329, 'maxAge', maxAge, 0)))))
                                    throw J$.X1(1377, J$.Th(1369, J$.F(1361, J$.R(1345, 'Error', Error, 2), 1)(J$.T(1353, 'maxAge should be a Number', 21, false))));
                                J$.X1(1417, J$.M(1409, J$.R(1385, 'pairs', pairs, 0), 'push', 0)(J$.B(122, '+', J$.T(1393, 'Max-Age=', 21, false), J$.R(1401, 'maxAge', maxAge, 0), 0)));
                            }
                            if (J$.X1(2289, J$.C(120, J$.G(1433, J$.R(1425, 'opt', opt, 0), 'domain', 0)))) {
                                if (J$.X1(2281, J$.C(112, J$.U(130, '!', J$.M(1465, J$.R(1441, 'fieldContentRegExp', fieldContentRegExp, 1), 'test', 0)(J$.G(1457, J$.R(1449, 'opt', opt, 0), 'domain', 0)))))) {
                                    throw J$.X1(1505, J$.Th(1497, J$.F(1489, J$.R(1473, 'TypeError', TypeError, 2), 1)(J$.T(1481, 'option domain is invalid', 21, false))));
                                }
                                J$.X1(1553, J$.M(1545, J$.R(1513, 'pairs', pairs, 0), 'push', 0)(J$.B(138, '+', J$.T(1521, 'Domain=', 21, false), J$.G(1537, J$.R(1529, 'opt', opt, 0), 'domain', 0), 0)));
                            }
                            if (J$.X1(2305, J$.C(136, J$.G(1569, J$.R(1561, 'opt', opt, 0), 'path', 0)))) {
                                if (J$.X1(2297, J$.C(128, J$.U(146, '!', J$.M(1601, J$.R(1577, 'fieldContentRegExp', fieldContentRegExp, 1), 'test', 0)(J$.G(1593, J$.R(1585, 'opt', opt, 0), 'path', 0)))))) {
                                    throw J$.X1(1641, J$.Th(1633, J$.F(1625, J$.R(1609, 'TypeError', TypeError, 2), 1)(J$.T(1617, 'option path is invalid', 21, false))));
                                }
                                J$.X1(1689, J$.M(1681, J$.R(1649, 'pairs', pairs, 0), 'push', 0)(J$.B(154, '+', J$.T(1657, 'Path=', 21, false), J$.G(1673, J$.R(1665, 'opt', opt, 0), 'path', 0), 0)));
                            }
                            if (J$.X1(2313, J$.C(144, J$.G(1705, J$.R(1697, 'opt', opt, 0), 'expires', 0))))
                                J$.X1(1761, J$.M(1753, J$.R(1713, 'pairs', pairs, 0), 'push', 0)(J$.B(162, '+', J$.T(1721, 'Expires=', 21, false), J$.M(1745, J$.G(1737, J$.R(1729, 'opt', opt, 0), 'expires', 0), 'toUTCString', 0)(), 0)));
                            if (J$.X1(2321, J$.C(152, J$.G(1777, J$.R(1769, 'opt', opt, 0), 'httpOnly', 0))))
                                J$.X1(1809, J$.M(1801, J$.R(1785, 'pairs', pairs, 0), 'push', 0)(J$.T(1793, 'HttpOnly', 21, false)));
                            if (J$.X1(2329, J$.C(160, J$.G(1825, J$.R(1817, 'opt', opt, 0), 'secure', 0))))
                                J$.X1(1857, J$.M(1849, J$.R(1833, 'pairs', pairs, 0), 'push', 0)(J$.T(1841, 'Secure', 21, false)));
                            return J$.X1(1897, J$.Rt(1889, J$.M(1881, J$.R(1865, 'pairs', pairs, 0), 'join', 0)(J$.T(1873, '; ', 21, false))));
                        } catch (J$e) {
                            J$.Ex(2337, J$e);
                        } finally {
                            if (J$.Fr(2345))
                                continue jalangiLabel618;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function tryDecode(str, decode) {
                jalangiLabel619:
                    while (true) {
                        try {
                            J$.Fe(2057, arguments.callee, this, arguments);
                            arguments = J$.N(2065, 'arguments', arguments, 4);
                            str = J$.N(2073, 'str', str, 4);
                            decode = J$.N(2081, 'decode', decode, 4);
                            try {
                                return J$.X1(2017, J$.Rt(2009, J$.F(2001, J$.R(1985, 'decode', decode, 0), 0)(J$.R(1993, 'str', str, 0))));
                            } catch (e) {
                                e = J$.N(2049, 'e', e, 1);
                                return J$.X1(2041, J$.Rt(2033, J$.R(2025, 'str', str, 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(2353, J$e);
                        } finally {
                            if (J$.Fr(2361))
                                continue jalangiLabel619;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2097, '__secret__S$', __secret__S$, 0);
            J$.N(2105, '__secret__traits__', __secret__traits__, 0);
            J$.N(2113, 'decode', decode, 0);
            J$.N(2121, 'encode', encode, 0);
            J$.N(2129, 'fieldContentRegExp', fieldContentRegExp, 0);
            parse = J$.N(2145, 'parse', J$.T(2137, parse, 12, false, 897), 0);
            serialize = J$.N(2161, 'serialize', J$.T(2153, serialize, 12, false, 1905), 0);
            tryDecode = J$.N(2177, 'tryDecode', J$.T(2169, tryDecode, 12, false, 2057), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(105, J$.P(97, J$.R(81, 'exports', exports, 2), 'parse', J$.R(89, 'parse', parse, 1), 0));
            J$.X1(137, J$.P(129, J$.R(113, 'exports', exports, 2), 'serialize', J$.R(121, 'serialize', serialize, 1), 0));
            var decode = J$.X1(161, J$.W(153, 'decode', J$.R(145, 'decodeURIComponent', decodeURIComponent, 2), decode, 3));
            var encode = J$.X1(185, J$.W(177, 'encode', J$.R(169, 'encodeURIComponent', encodeURIComponent, 2), encode, 3));
            var fieldContentRegExp = J$.X1(209, J$.W(201, 'fieldContentRegExp', J$.T(193, /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/, 14, false), fieldContentRegExp, 3));
        } catch (J$e) {
            J$.Ex(2369, J$e);
        } finally {
            if (J$.Sr(2377)) {
                J$.L();
                continue jalangiLabel620;
            } else {
                J$.L();
                break jalangiLabel620;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
