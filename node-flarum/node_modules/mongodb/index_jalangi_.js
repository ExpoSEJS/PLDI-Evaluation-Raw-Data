J$.iids = {"8":[33,9,33,37],"9":[1,20,1,27],"10":[33,9,33,23],"17":[1,28,1,32],"18":[33,9,33,37],"25":[1,20,1,33],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,12,3,19],"89":[3,20,3,34],"97":[3,12,3,35],"105":[3,55,3,62],"113":[3,63,3,74],"121":[3,55,3,75],"129":[3,12,3,35],"137":[3,12,3,35],"145":[3,55,3,75],"153":[3,55,3,75],"161":[4,15,4,22],"169":[4,23,4,43],"177":[4,15,4,44],"185":[4,15,4,52],"193":[4,15,4,52],"201":[4,15,4,52],"209":[5,1,5,8],"217":[5,22,5,26],"225":[5,22,5,37],"233":[5,1,5,37],"241":[5,1,5,38],"249":[6,1,6,8],"257":[6,17,6,24],"265":[6,25,6,38],"273":[6,17,6,39],"281":[6,1,6,39],"289":[6,1,6,40],"297":[7,1,7,8],"305":[7,23,7,30],"313":[7,31,7,51],"321":[7,23,7,52],"329":[7,1,7,52],"337":[7,1,7,53],"345":[8,1,8,8],"353":[8,14,8,21],"361":[8,22,8,32],"369":[8,14,8,33],"377":[8,1,8,33],"385":[8,1,8,34],"393":[9,1,9,8],"401":[9,22,9,29],"409":[9,30,9,48],"417":[9,22,9,49],"425":[9,1,9,49],"433":[9,1,9,50],"441":[10,1,10,8],"449":[10,18,10,25],"457":[10,26,10,40],"465":[10,18,10,41],"473":[10,1,10,41],"481":[10,1,10,42],"489":[11,1,11,8],"497":[11,19,11,26],"505":[11,27,11,42],"513":[11,19,11,43],"521":[11,1,11,43],"529":[11,1,11,44],"537":[12,1,12,8],"545":[12,18,12,25],"553":[12,26,12,40],"561":[12,18,12,41],"569":[12,1,12,41],"577":[12,1,12,42],"585":[13,1,13,8],"593":[13,26,13,33],"601":[13,34,13,57],"609":[13,26,13,58],"617":[13,1,13,58],"625":[13,1,13,59],"633":[14,1,14,8],"641":[14,21,14,28],"649":[14,29,14,54],"657":[14,21,14,55],"665":[14,1,14,55],"673":[14,1,14,56],"681":[15,1,15,8],"689":[15,17,15,24],"697":[15,25,15,45],"705":[15,17,15,46],"713":[15,1,15,46],"721":[15,1,15,47],"729":[16,1,16,8],"737":[16,18,16,22],"745":[16,18,16,29],"753":[16,1,16,29],"761":[16,1,16,30],"769":[17,1,17,8],"777":[17,18,17,25],"785":[17,26,17,40],"793":[17,18,17,41],"801":[17,1,17,41],"809":[17,1,17,42],"817":[18,1,18,8],"825":[18,24,18,31],"833":[18,32,18,53],"841":[18,24,18,54],"849":[18,1,18,54],"857":[18,1,18,55],"865":[19,1,19,8],"873":[19,18,19,22],"881":[19,18,19,27],"889":[19,18,19,34],"897":[19,1,19,34],"905":[19,1,19,35],"913":[20,1,20,8],"921":[20,16,20,20],"929":[20,16,20,25],"937":[20,16,20,30],"945":[20,1,20,30],"953":[20,1,20,31],"961":[21,1,21,8],"969":[21,15,21,19],"977":[21,15,21,24],"985":[21,15,21,28],"993":[21,1,21,28],"1001":[21,1,21,29],"1009":[22,1,22,8],"1017":[22,17,22,21],"1025":[22,17,22,26],"1033":[22,17,22,32],"1041":[22,1,22,32],"1049":[22,1,22,33],"1057":[23,1,23,8],"1065":[23,18,23,22],"1073":[23,18,23,27],"1081":[23,18,23,34],"1089":[23,1,23,34],"1097":[23,1,23,35],"1105":[24,1,24,8],"1113":[24,16,24,20],"1121":[24,16,24,25],"1129":[24,16,24,30],"1137":[24,1,24,30],"1145":[24,1,24,31],"1153":[25,1,25,8],"1161":[25,18,25,22],"1169":[25,18,25,27],"1177":[25,18,25,34],"1185":[25,1,25,34],"1193":[25,1,25,35],"1201":[26,1,26,8],"1209":[26,18,26,22],"1217":[26,18,26,27],"1225":[26,18,26,34],"1233":[26,1,26,34],"1241":[26,1,26,35],"1249":[27,1,27,8],"1257":[27,20,27,24],"1265":[27,20,27,29],"1273":[27,20,27,38],"1281":[27,1,27,38],"1289":[27,1,27,39],"1297":[28,1,28,8],"1305":[28,20,28,24],"1313":[28,20,28,29],"1321":[28,20,28,38],"1329":[28,1,28,38],"1337":[28,1,28,39],"1345":[29,1,29,8],"1353":[29,18,29,22],"1361":[29,18,29,27],"1369":[29,18,29,34],"1377":[29,1,29,34],"1385":[29,1,29,35],"1393":[30,1,30,8],"1401":[30,21,30,25],"1409":[30,21,30,30],"1417":[30,21,30,40],"1425":[30,1,30,40],"1433":[30,1,30,41],"1441":[31,1,31,8],"1449":[31,19,31,26],"1457":[31,1,31,26],"1465":[31,1,31,27],"1473":[32,1,32,8],"1481":[33,16,33,23],"1489":[33,27,33,37],"1497":[34,20,34,27],"1505":[34,20,34,27],"1513":[34,39,34,41],"1521":[34,39,34,41],"1529":[34,9,34,27],"1537":[34,9,34,42],"1545":[35,16,35,31],"1553":[35,32,35,36],"1561":[35,38,35,45],"1569":[35,47,35,55],"1577":[35,12,35,56],"1585":[35,12,35,56],"1593":[35,5,35,57],"1601":[32,22,36,2],"1609":[32,22,36,2],"1617":[32,22,36,2],"1625":[32,22,36,2],"1633":[32,22,36,2],"1641":[32,1,36,2],"1649":[32,1,36,3],"1657":[37,1,37,7],"1665":[37,18,37,25],"1673":[37,1,37,25],"1681":[37,1,37,26],"1689":[1,1,37,26],"1697":[1,1,37,26],"1705":[1,1,37,26],"1713":[1,1,37,26],"1721":[1,1,37,26],"1729":[1,1,37,26],"1737":[33,5,34,42],"1745":[32,22,36,2],"1753":[32,22,36,2],"1761":[1,1,37,26],"1769":[1,1,37,26],"nBranches":2,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb/index_jalangi_.js","code":"// Core module\nvar core = require('mongodb-core'),\n  Instrumentation = require('./lib/apm');\n\n// Set up the connect function\nvar connect = require('./lib/mongo_client').connect;\n\n// Expose error class\nconnect.MongoError = core.MongoError;\n\n// Actual driver classes exported\nconnect.Admin = require('./lib/admin');\nconnect.MongoClient = require('./lib/mongo_client');\nconnect.Db = require('./lib/db');\nconnect.Collection = require('./lib/collection');\nconnect.Server = require('./lib/server');\nconnect.ReplSet = require('./lib/replset');\nconnect.Mongos = require('./lib/mongos');\nconnect.ReadPreference = require('./lib/read_preference');\nconnect.GridStore = require('./lib/gridfs/grid_store');\nconnect.Chunk = require('./lib/gridfs/chunk');\nconnect.Logger = core.Logger;\nconnect.Cursor = require('./lib/cursor');\nconnect.GridFSBucket = require('./lib/gridfs-stream');\n\n// BSON types exported\nconnect.Binary = core.BSON.Binary;\nconnect.Code = core.BSON.Code;\nconnect.Map = core.BSON.Map;\nconnect.DBRef = core.BSON.DBRef;\nconnect.Double = core.BSON.Double;\nconnect.Long = core.BSON.Long;\nconnect.MinKey = core.BSON.MinKey;\nconnect.MaxKey = core.BSON.MaxKey;\nconnect.ObjectID = core.BSON.ObjectID;\nconnect.ObjectId = core.BSON.ObjectID;\nconnect.Symbol = core.BSON.Symbol;\nconnect.Timestamp = core.BSON.Timestamp;\n\n// Add connect method\nconnect.connect = connect;\n\n// Set up the instrumentation method\nconnect.instrument = function(options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  return new Instrumentation(core, options, callback);\n}\n\n// Set our exports to be the connect function\nmodule.exports = connect;\n"};
jalangiLabel1331:
    while (true) {
        try {
            J$.Se(1689, '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb/index_jalangi_.js', '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb/index.js');
            J$.N(1697, '__secret__S$', __secret__S$, 0);
            J$.N(1705, '__secret__traits__', __secret__traits__, 0);
            J$.N(1713, 'core', core, 0);
            J$.N(1721, 'Instrumentation', Instrumentation, 0);
            J$.N(1729, 'connect', connect, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var core = J$.X1(137, J$.W(129, 'core', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, 'mongodb-core', 21, false)), core, 3)), Instrumentation = J$.X1(153, J$.W(145, 'Instrumentation', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, './lib/apm', 21, false)), Instrumentation, 3));
            var connect = J$.X1(201, J$.W(193, 'connect', J$.G(185, J$.F(177, J$.R(161, 'require', require, 2), 0)(J$.T(169, './lib/mongo_client', 21, false)), 'connect', 0), connect, 3));
            J$.X1(241, J$.P(233, J$.R(209, 'connect', connect, 1), 'MongoError', J$.G(225, J$.R(217, 'core', core, 1), 'MongoError', 0), 0));
            J$.X1(289, J$.P(281, J$.R(249, 'connect', connect, 1), 'Admin', J$.F(273, J$.R(257, 'require', require, 2), 0)(J$.T(265, './lib/admin', 21, false)), 0));
            J$.X1(337, J$.P(329, J$.R(297, 'connect', connect, 1), 'MongoClient', J$.F(321, J$.R(305, 'require', require, 2), 0)(J$.T(313, './lib/mongo_client', 21, false)), 0));
            J$.X1(385, J$.P(377, J$.R(345, 'connect', connect, 1), 'Db', J$.F(369, J$.R(353, 'require', require, 2), 0)(J$.T(361, './lib/db', 21, false)), 0));
            J$.X1(433, J$.P(425, J$.R(393, 'connect', connect, 1), 'Collection', J$.F(417, J$.R(401, 'require', require, 2), 0)(J$.T(409, './lib/collection', 21, false)), 0));
            J$.X1(481, J$.P(473, J$.R(441, 'connect', connect, 1), 'Server', J$.F(465, J$.R(449, 'require', require, 2), 0)(J$.T(457, './lib/server', 21, false)), 0));
            J$.X1(529, J$.P(521, J$.R(489, 'connect', connect, 1), 'ReplSet', J$.F(513, J$.R(497, 'require', require, 2), 0)(J$.T(505, './lib/replset', 21, false)), 0));
            J$.X1(577, J$.P(569, J$.R(537, 'connect', connect, 1), 'Mongos', J$.F(561, J$.R(545, 'require', require, 2), 0)(J$.T(553, './lib/mongos', 21, false)), 0));
            J$.X1(625, J$.P(617, J$.R(585, 'connect', connect, 1), 'ReadPreference', J$.F(609, J$.R(593, 'require', require, 2), 0)(J$.T(601, './lib/read_preference', 21, false)), 0));
            J$.X1(673, J$.P(665, J$.R(633, 'connect', connect, 1), 'GridStore', J$.F(657, J$.R(641, 'require', require, 2), 0)(J$.T(649, './lib/gridfs/grid_store', 21, false)), 0));
            J$.X1(721, J$.P(713, J$.R(681, 'connect', connect, 1), 'Chunk', J$.F(705, J$.R(689, 'require', require, 2), 0)(J$.T(697, './lib/gridfs/chunk', 21, false)), 0));
            J$.X1(761, J$.P(753, J$.R(729, 'connect', connect, 1), 'Logger', J$.G(745, J$.R(737, 'core', core, 1), 'Logger', 0), 0));
            J$.X1(809, J$.P(801, J$.R(769, 'connect', connect, 1), 'Cursor', J$.F(793, J$.R(777, 'require', require, 2), 0)(J$.T(785, './lib/cursor', 21, false)), 0));
            J$.X1(857, J$.P(849, J$.R(817, 'connect', connect, 1), 'GridFSBucket', J$.F(841, J$.R(825, 'require', require, 2), 0)(J$.T(833, './lib/gridfs-stream', 21, false)), 0));
            J$.X1(905, J$.P(897, J$.R(865, 'connect', connect, 1), 'Binary', J$.G(889, J$.G(881, J$.R(873, 'core', core, 1), 'BSON', 0), 'Binary', 0), 0));
            J$.X1(953, J$.P(945, J$.R(913, 'connect', connect, 1), 'Code', J$.G(937, J$.G(929, J$.R(921, 'core', core, 1), 'BSON', 0), 'Code', 0), 0));
            J$.X1(1001, J$.P(993, J$.R(961, 'connect', connect, 1), 'Map', J$.G(985, J$.G(977, J$.R(969, 'core', core, 1), 'BSON', 0), 'Map', 0), 0));
            J$.X1(1049, J$.P(1041, J$.R(1009, 'connect', connect, 1), 'DBRef', J$.G(1033, J$.G(1025, J$.R(1017, 'core', core, 1), 'BSON', 0), 'DBRef', 0), 0));
            J$.X1(1097, J$.P(1089, J$.R(1057, 'connect', connect, 1), 'Double', J$.G(1081, J$.G(1073, J$.R(1065, 'core', core, 1), 'BSON', 0), 'Double', 0), 0));
            J$.X1(1145, J$.P(1137, J$.R(1105, 'connect', connect, 1), 'Long', J$.G(1129, J$.G(1121, J$.R(1113, 'core', core, 1), 'BSON', 0), 'Long', 0), 0));
            J$.X1(1193, J$.P(1185, J$.R(1153, 'connect', connect, 1), 'MinKey', J$.G(1177, J$.G(1169, J$.R(1161, 'core', core, 1), 'BSON', 0), 'MinKey', 0), 0));
            J$.X1(1241, J$.P(1233, J$.R(1201, 'connect', connect, 1), 'MaxKey', J$.G(1225, J$.G(1217, J$.R(1209, 'core', core, 1), 'BSON', 0), 'MaxKey', 0), 0));
            J$.X1(1289, J$.P(1281, J$.R(1249, 'connect', connect, 1), 'ObjectID', J$.G(1273, J$.G(1265, J$.R(1257, 'core', core, 1), 'BSON', 0), 'ObjectID', 0), 0));
            J$.X1(1337, J$.P(1329, J$.R(1297, 'connect', connect, 1), 'ObjectId', J$.G(1321, J$.G(1313, J$.R(1305, 'core', core, 1), 'BSON', 0), 'ObjectID', 0), 0));
            J$.X1(1385, J$.P(1377, J$.R(1345, 'connect', connect, 1), 'Symbol', J$.G(1369, J$.G(1361, J$.R(1353, 'core', core, 1), 'BSON', 0), 'Symbol', 0), 0));
            J$.X1(1433, J$.P(1425, J$.R(1393, 'connect', connect, 1), 'Timestamp', J$.G(1417, J$.G(1409, J$.R(1401, 'core', core, 1), 'BSON', 0), 'Timestamp', 0), 0));
            J$.X1(1465, J$.P(1457, J$.R(1441, 'connect', connect, 1), 'connect', J$.R(1449, 'connect', connect, 1), 0));
            J$.X1(1649, J$.P(1641, J$.R(1473, 'connect', connect, 1), 'instrument', J$.T(1633, function (options, callback) {
                jalangiLabel1330:
                    while (true) {
                        try {
                            J$.Fe(1601, arguments.callee, this, arguments);
                            arguments = J$.N(1609, 'arguments', arguments, 4);
                            options = J$.N(1617, 'options', options, 4);
                            callback = J$.N(1625, 'callback', callback, 4);
                            if (J$.X1(1737, J$.C(8, J$.B(18, '==', J$.U(10, 'typeof', J$.R(1481, 'options', options, 0)), J$.T(1489, 'function', 21, false), 0))))
                                J$.X1(1537, (J$.X1(1529, callback = J$.W(1505, 'callback', J$.R(1497, 'options', options, 0), callback, 0)), options = J$.W(1521, 'options', J$.T(1513, {}, 11, false), options, 0)));
                            return J$.X1(1593, J$.Rt(1585, J$.F(1577, J$.R(1545, 'Instrumentation', Instrumentation, 1), 1)(J$.R(1553, 'core', core, 1), J$.R(1561, 'options', options, 0), J$.R(1569, 'callback', callback, 0))));
                        } catch (J$e) {
                            J$.Ex(1745, J$e);
                        } finally {
                            if (J$.Fr(1753))
                                continue jalangiLabel1330;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1601), 0));
            J$.X1(1681, J$.P(1673, J$.R(1657, 'module', module, 2), 'exports', J$.R(1665, 'connect', connect, 1), 0));
        } catch (J$e) {
            J$.Ex(1761, J$e);
        } finally {
            if (J$.Sr(1769)) {
                J$.L();
                continue jalangiLabel1331;
            } else {
                J$.L();
                break jalangiLabel1331;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
