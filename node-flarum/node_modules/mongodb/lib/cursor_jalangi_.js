J$.iids = {"8":[4,477,4,542],"9":[1,20,1,27],"10":[26,9,26,24],"16":[22,27,22,55],"17":[1,28,1,32],"18":[27,26,27,47],"24":[23,33,23,69],"25":[1,20,1,33],"26":[27,26,27,61],"32":[27,26,27,61],"33":[1,20,1,33],"34":[45,20,45,58],"40":[26,9,26,24],"41":[1,20,1,33],"42":[56,9,56,24],"48":[61,21,61,25],"49":[2,26,2,38],"50":[56,9,56,38],"56":[57,13,57,30],"57":[2,26,2,45],"58":[61,21,61,25],"64":[56,9,56,38],"65":[2,26,2,45],"66":[73,21,73,50],"72":[73,21,73,67],"73":[2,26,2,45],"74":[77,21,77,25],"80":[73,21,73,67],"81":[3,1,3,13],"82":[91,9,91,24],"88":[75,21,75,24],"89":[3,1,3,14],"90":[91,9,91,38],"96":[77,21,77,25],"97":[4,16,4,23],"98":[118,9,118,38],"104":[69,13,69,30],"105":[4,24,4,30],"106":[118,42,118,69],"112":[92,13,92,30],"113":[4,16,4,31],"114":[132,9,132,38],"120":[91,9,91,38],"121":[4,16,4,40],"122":[132,42,132,69],"128":[101,13,101,30],"129":[4,46,4,53],"130":[146,9,146,38],"136":[107,17,107,20],"137":[4,54,4,60],"138":[146,42,146,69],"144":[118,9,118,69],"145":[4,46,4,61],"146":[160,9,160,38],"152":[118,9,118,86],"153":[4,46,4,68],"154":[160,42,160,69],"160":[118,9,118,86],"161":[4,80,4,87],"162":[174,9,174,38],"168":[132,9,132,69],"169":[4,88,4,97],"170":[174,42,174,69],"176":[132,9,132,86],"177":[4,80,4,98],"178":[188,9,188,38],"184":[132,9,132,86],"185":[4,80,4,106],"186":[188,42,188,69],"192":[146,9,146,69],"193":[4,128,4,135],"194":[202,9,202,38],"200":[146,9,146,86],"201":[4,136,4,145],"202":[202,42,202,69],"208":[146,9,146,86],"209":[4,128,4,146],"210":[216,9,216,38],"216":[160,9,160,69],"217":[4,128,4,164],"218":[216,42,216,69],"224":[160,9,160,86],"225":[4,189,4,196],"226":[230,9,230,38],"232":[160,9,160,86],"233":[4,197,4,206],"234":[230,42,230,69],"240":[174,9,174,69],"241":[4,189,4,207],"242":[235,34,235,36],"248":[174,9,174,86],"249":[4,189,4,228],"250":[235,9,235,36],"256":[174,9,174,86],"257":[4,247,4,254],"258":[241,9,241,35],"264":[188,9,188,69],"265":[4,255,4,264],"266":[251,9,251,38],"272":[188,9,188,86],"273":[4,247,4,265],"274":[251,42,251,69],"280":[188,9,188,86],"281":[4,247,4,280],"282":[256,32,256,34],"288":[202,9,202,69],"289":[4,291,4,298],"290":[256,9,256,34],"296":[202,9,202,86],"297":[4,299,4,313],"298":[261,9,261,21],"304":[202,9,202,86],"305":[4,291,4,314],"306":[261,9,261,34],"312":[216,9,216,69],"313":[4,291,4,321],"314":[275,9,275,38],"320":[216,9,216,86],"321":[4,338,4,345],"322":[275,42,275,69],"328":[216,9,216,86],"329":[4,346,4,354],"330":[280,9,280,23],"336":[230,9,230,69],"337":[4,338,4,355],"338":[287,9,287,27],"344":[230,9,230,86],"345":[4,338,4,368],"346":[297,9,297,38],"352":[230,9,230,86],"353":[4,387,4,394],"354":[297,42,297,69],"360":[235,9,235,36],"361":[4,395,4,414],"362":[311,9,311,21],"368":[241,9,241,35],"369":[4,387,4,415],"370":[311,9,311,33],"376":[251,9,251,69],"377":[4,430,4,437],"378":[316,9,316,38],"384":[251,9,251,86],"385":[4,438,4,452],"386":[316,42,316,69],"392":[251,9,251,86],"393":[4,430,4,453],"394":[330,9,330,21],"400":[256,9,256,34],"401":[4,430,4,464],"402":[330,9,330,33],"408":[261,9,261,34],"409":[4,477,4,484],"410":[335,9,335,38],"416":[275,9,275,69],"417":[4,485,4,493],"418":[335,42,335,69],"424":[275,9,275,86],"425":[4,477,4,494],"426":[355,9,355,38],"432":[275,9,275,86],"433":[4,477,4,503],"434":[355,42,355,69],"440":[280,9,280,23],"441":[4,507,4,514],"442":[374,9,374,38],"448":[287,9,287,27],"449":[4,515,4,532],"450":[374,42,374,69],"456":[297,9,297,69],"457":[4,507,4,533],"458":[386,17,386,30],"464":[297,9,297,86],"465":[4,507,4,542],"466":[388,24,388,38],"472":[297,9,297,86],"473":[4,553,4,560],"474":[389,28,389,30],"480":[311,9,311,33],"481":[4,561,4,573],"482":[390,24,390,33],"488":[316,9,316,69],"489":[4,553,4,574],"490":[390,45,390,47],"496":[316,9,316,86],"497":[4,589,4,596],"498":[390,37,390,47],"504":[316,9,316,86],"505":[4,597,4,611],"506":[398,9,398,26],"512":[330,9,330,33],"513":[4,589,4,612],"514":[419,9,419,38],"520":[335,9,335,69],"521":[4,589,4,619],"522":[424,9,424,21],"528":[335,9,335,86],"529":[4,627,4,634],"530":[424,9,424,33],"536":[335,9,335,86],"537":[4,635,4,649],"538":[444,9,444,36],"544":[355,9,355,69],"545":[4,627,4,650],"546":[444,40,444,69],"552":[355,9,355,86],"553":[4,627,4,655],"554":[449,9,449,21],"560":[355,9,355,86],"561":[4,627,4,659],"562":[449,9,449,33],"568":[369,9,369,32],"569":[4,669,4,676],"570":[469,9,469,36],"576":[374,9,374,69],"577":[4,677,4,691],"578":[469,40,469,69],"584":[374,9,374,86],"585":[4,669,4,692],"586":[474,9,474,21],"592":[374,9,374,86],"593":[4,669,4,698],"594":[474,9,474,33],"600":[380,9,380,56],"601":[4,721,4,728],"602":[490,9,490,38],"608":[390,24,390,47],"609":[4,729,4,743],"610":[495,9,495,36],"616":[390,24,390,47],"617":[4,721,4,744],"618":[503,36,503,70],"624":[388,24,388,38],"625":[4,721,4,759],"626":[505,36,505,69],"632":[386,17,386,30],"633":[4,16,4,40],"634":[506,45,506,78],"640":[380,9,380,56],"641":[4,16,4,40],"642":[508,21,508,55],"648":[398,9,398,26],"649":[4,46,4,68],"650":[524,9,524,34],"656":[414,9,414,32],"657":[4,46,4,68],"658":[544,9,544,18],"664":[419,9,419,55],"665":[4,80,4,106],"666":[551,9,551,38],"672":[419,9,419,55],"673":[4,80,4,106],"674":[557,9,557,36],"680":[424,9,424,33],"681":[4,128,4,164],"682":[560,9,560,33],"688":[439,9,439,32],"689":[4,128,4,164],"690":[568,17,568,29],"696":[444,9,444,69],"697":[4,189,4,228],"698":[572,17,572,62],"704":[444,9,444,86],"705":[4,189,4,228],"706":[584,13,584,24],"712":[444,9,444,86],"713":[4,247,4,280],"714":[588,13,588,24],"720":[449,9,449,33],"721":[4,247,4,280],"722":[601,9,601,36],"728":[464,9,464,32],"729":[4,291,4,321],"730":[606,9,606,36],"736":[469,9,469,69],"737":[4,291,4,321],"738":[608,16,608,24],"744":[469,9,469,86],"745":[4,338,4,368],"746":[608,16,608,36],"752":[469,9,469,86],"753":[4,338,4,368],"754":[610,16,610,47],"760":[474,9,474,33],"761":[4,387,4,415],"762":[627,9,627,24],"768":[490,42,490,70],"769":[4,387,4,415],"770":[627,9,627,38],"776":[490,9,490,70],"777":[4,430,4,464],"778":[645,17,645,28],"784":[490,9,490,70],"785":[4,430,4,464],"786":[650,17,650,41],"792":[495,9,495,55],"793":[4,477,4,542],"794":[652,42,652,70],"800":[495,9,495,55],"801":[4,477,4,542],"802":[652,42,652,84],"808":[503,13,503,32],"809":[4,553,4,574],"810":[668,9,668,33],"816":[503,13,503,70],"817":[4,553,4,574],"818":[673,9,673,20],"824":[503,13,503,70],"825":[4,589,4,619],"826":[673,9,673,34],"832":[505,13,505,32],"833":[4,589,4,619],"834":[676,9,676,24],"840":[505,13,505,69],"841":[4,627,4,659],"842":[676,9,676,38],"848":[508,21,508,55],"849":[4,627,4,659],"850":[687,9,687,30],"856":[505,13,505,69],"857":[4,669,4,698],"858":[687,9,687,44],"864":[514,13,514,16],"865":[4,669,4,698],"866":[692,13,692,37],"872":[524,9,524,34],"873":[4,721,4,759],"874":[692,13,692,49],"880":[544,9,544,18],"881":[4,721,4,759],"882":[694,13,694,38],"888":[549,9,549,26],"889":[6,5,6,15],"890":[694,13,694,50],"896":[551,9,551,55],"897":[7,5,7,18],"898":[699,35,699,48],"904":[551,9,551,55],"905":[8,5,8,22],"906":[702,9,702,30],"912":[557,9,557,36],"913":[9,5,9,16],"914":[702,9,702,42],"920":[561,16,561,41],"921":[10,5,10,14],"922":[704,30,704,57],"928":[566,17,566,20],"929":[11,5,11,14],"930":[704,30,704,69],"936":[568,17,568,29],"937":[5,13,12,2],"938":[718,25,718,27],"944":[572,17,572,62],"945":[5,13,12,2],"946":[724,13,724,41],"952":[560,9,560,33],"953":[5,13,12,2],"954":[739,9,739,24],"960":[580,13,580,16],"961":[14,5,14,22],"962":[739,9,739,38],"968":[584,13,584,24],"969":[15,5,15,28],"970":[789,9,789,41],"976":[588,13,588,36],"977":[13,14,16,2],"978":[791,9,791,24],"984":[588,13,588,36],"985":[13,14,16,2],"986":[791,9,791,38],"992":[601,9,601,36],"993":[13,14,16,2],"994":[807,9,807,38],"1000":[610,16,610,47],"1001":[18,5,18,15],"1002":[812,17,812,31],"1008":[608,16,608,36],"1009":[18,22,18,26],"1010":[814,44,814,78],"1016":[606,9,606,36],"1017":[18,28,18,33],"1018":[820,13,820,50],"1024":[622,9,622,32],"1025":[18,28,18,43],"1026":[820,13,820,64],"1032":[627,9,627,38],"1033":[18,28,18,49],"1034":[820,68,820,82],"1040":[631,17,631,20],"1041":[18,55,18,64],"1042":[823,44,823,82],"1048":[643,17,643,20],"1049":[18,66,18,67],"1050":[823,44,823,96],"1056":[645,17,645,28],"1057":[18,28,18,68],"1058":[823,100,823,114],"1059":[18,28,18,54],"1064":[652,21,652,84],"1065":[18,5,18,69],"1066":[832,13,832,18],"1067":[18,5,18,21],"1072":[652,21,652,84],"1073":[18,5,18,70],"1074":[832,22,832,29],"1080":[650,17,650,41],"1081":[19,16,19,20],"1082":[841,13,841,18],"1088":[668,9,668,33],"1089":[19,16,19,20],"1090":[841,22,841,29],"1096":[673,9,673,34],"1097":[19,16,19,20],"1098":[846,13,846,25],"1104":[675,12,675,22],"1105":[20,17,20,23],"1106":[854,35,854,47],"1112":[676,9,676,38],"1113":[20,17,20,28],"1120":[680,17,680,20],"1121":[20,17,20,28],"1128":[687,9,687,44],"1129":[20,17,20,28],"1136":[692,13,692,49],"1137":[21,25,21,27],"1144":[694,13,694,50],"1145":[21,25,21,27],"1152":[691,9,691,23],"1153":[21,25,21,27],"1160":[704,16,704,69],"1161":[22,27,22,34],"1168":[704,16,704,69],"1169":[22,27,22,50],"1176":[702,9,702,42],"1177":[22,54,22,55],"1184":[710,9,710,18],"1185":[22,27,22,55],"1192":[712,9,712,19],"1193":[22,27,22,55],"1200":[714,9,714,28],"1201":[23,33,23,40],"1208":[722,13,722,16],"1209":[23,33,23,62],"1216":[724,46,724,99],"1217":[23,66,23,69],"1224":[724,46,724,130],"1225":[23,33,23,69],"1232":[724,13,724,131],"1233":[23,33,23,69],"1240":[724,13,724,131],"1241":[24,34,24,49],"1248":[739,9,739,38],"1249":[24,34,24,49],"1256":[769,9,769,12],"1257":[24,34,24,49],"1264":[777,28,777,41],"1265":[25,26,25,33],"1272":[788,9,788,31],"1273":[25,26,25,48],"1280":[791,9,791,38],"1281":[25,26,25,48],"1288":[795,17,795,20],"1289":[25,26,25,48],"1296":[807,9,807,55],"1297":[26,10,26,24],"1304":[807,9,807,55],"1305":[27,33,27,39],"1312":[812,17,812,31],"1313":[27,33,27,47],"1320":[814,17,814,78],"1321":[27,51,27,61],"1328":[814,17,814,78],"1329":[27,64,27,70],"1336":[811,13,811,16],"1337":[27,64,27,78],"1344":[820,13,820,82],"1345":[27,81,27,88],"1352":[820,13,820,82],"1353":[27,89,27,102],"1360":[823,13,823,96],"1361":[27,81,27,103],"1368":[823,13,823,114],"1369":[27,81,27,111],"1376":[823,13,823,114],"1377":[27,26,27,111],"1384":[832,13,832,29],"1385":[27,9,27,112],"1392":[832,13,832,29],"1393":[29,5,29,13],"1400":[841,13,841,29],"1401":[29,19,29,23],"1408":[841,13,841,29],"1409":[29,39,29,43],"1416":[844,18,844,33],"1417":[29,25,29,45],"1424":[846,13,846,25],"1425":[29,5,29,46],"1427":[29,5,29,18],"1433":[29,5,29,47],"1441":[30,5,30,9],"1449":[31,26,31,41],"1457":[32,32,32,53],"1465":[33,33,33,55],"1473":[34,16,34,21],"1481":[35,24,35,37],"1489":[36,15,36,19],"1497":[37,13,37,15],"1505":[38,14,38,17],"1513":[39,18,39,25],"1521":[40,19,40,27],"1529":[41,26,41,41],"1537":[42,25,42,39],"1545":[43,21,43,25],"1553":[30,14,44,6],"1561":[30,5,44,6],"1569":[30,5,44,7],"1577":[45,5,45,9],"1585":[45,20,45,24],"1593":[45,20,45,26],"1601":[45,20,45,34],"1609":[45,20,45,50],"1617":[45,54,45,58],"1625":[45,5,45,58],"1633":[45,5,45,59],"1641":[46,5,46,9],"1649":[46,22,46,26],"1657":[46,22,46,28],"1665":[46,22,46,32],"1673":[46,22,46,37],"1681":[46,5,46,37],"1689":[46,5,46,38],"1697":[17,14,47,2],"1705":[17,14,47,2],"1713":[17,14,47,2],"1721":[17,14,47,2],"1729":[17,14,47,2],"1737":[17,14,47,2],"1745":[17,14,47,2],"1753":[17,14,47,2],"1761":[17,14,47,2],"1769":[17,14,47,2],"1777":[17,14,47,2],"1785":[17,14,47,2],"1793":[17,14,47,2],"1801":[17,14,47,2],"1809":[17,14,47,2],"1817":[17,14,47,2],"1825":[17,14,47,2],"1833":[17,14,47,2],"1841":[48,1,48,9],"1849":[48,10,48,16],"1857":[48,18,48,26],"1865":[48,1,48,27],"1873":[48,1,48,28],"1881":[49,1,49,11],"1889":[49,1,49,21],"1897":[49,30,49,40],"1905":[49,30,49,50],"1913":[49,30,49,55],"1921":[49,1,49,55],"1929":[49,1,49,56],"1937":[50,18,50,28],"1945":[50,18,50,38],"1953":[51,5,51,11],"1961":[51,5,51,21],"1969":[51,22,51,26],"1977":[51,30,51,40],"1985":[51,30,51,50],"1993":[51,51,51,55],"2001":[51,30,51,56],"2009":[51,5,51,56],"2017":[51,5,51,57],"2025":[50,18,50,38],"2033":[50,1,52,2],"2041":[50,1,52,2],"2049":[53,14,53,20],"2057":[53,34,53,40],"2065":[53,41,53,49],"2073":[53,51,53,57],"2081":[53,59,53,63],"2089":[53,30,53,64],"2097":[53,14,53,64],"2105":[53,14,53,64],"2113":[53,14,53,64],"2121":[54,1,54,7],"2129":[54,1,54,17],"2137":[55,16,55,20],"2145":[55,16,55,20],"2153":[55,16,55,20],"2161":[56,16,56,24],"2169":[56,28,56,38],"2177":[57,13,57,17],"2185":[57,13,57,19],"2193":[57,13,57,30],"2201":[58,20,58,28],"2209":[58,29,58,33],"2217":[58,35,58,39],"2225":[58,20,58,40],"2233":[58,20,58,40],"2241":[58,13,58,41],"2249":[60,20,60,30],"2257":[60,31,60,35],"2265":[61,22,61,25],"2273":[62,28,62,36],"2281":[62,37,62,41],"2289":[62,43,62,48],"2297":[62,28,62,49],"2305":[62,28,62,49],"2313":[62,21,62,50],"2321":[63,17,63,21],"2329":[63,17,63,23],"2337":[63,37,63,40],"2345":[63,17,63,40],"2353":[63,17,63,41],"2361":[64,17,64,25],"2369":[64,26,64,30],"2377":[64,32,64,36],"2385":[64,17,64,37],"2393":[64,17,64,38],"2401":[60,37,65,14],"2409":[60,37,65,14],"2417":[60,37,65,14],"2425":[60,37,65,14],"2433":[60,37,65,14],"2441":[60,20,65,15],"2449":[60,20,65,15],"2457":[60,13,65,16],"2465":[68,16,68,20],"2473":[68,16,68,22],"2481":[69,13,69,17],"2489":[69,13,69,19],"2497":[69,13,69,30],"2505":[70,13,70,20],"2513":[70,21,70,25],"2521":[70,13,70,26],"2529":[70,13,70,27],"2537":[72,13,72,23],"2545":[72,24,72,28],"2553":[73,21,73,25],"2561":[73,21,73,27],"2569":[73,21,73,33],"2577":[73,37,73,43],"2585":[73,37,73,50],"2593":[73,54,73,58],"2601":[73,54,73,67],"2603":[73,54,73,65],"2609":[74,28,74,35],"2617":[74,36,74,41],"2625":[74,28,74,42],"2633":[74,28,74,42],"2641":[74,21,74,43],"2649":[75,21,75,24],"2657":[76,28,76,34],"2665":[76,35,76,38],"2673":[76,28,76,39],"2681":[76,28,76,39],"2689":[76,21,76,40],"2697":[77,22,77,25],"2705":[78,28,78,35],"2713":[78,36,78,41],"2721":[78,28,78,42],"2729":[78,28,78,42],"2737":[78,21,78,43],"2745":[79,17,79,21],"2753":[79,17,79,23],"2761":[79,37,79,40],"2769":[79,17,79,40],"2777":[79,17,79,41],"2785":[80,17,80,24],"2793":[80,25,80,29],"2801":[80,17,80,30],"2809":[80,17,80,31],"2817":[72,30,81,14],"2825":[72,30,81,14],"2833":[72,30,81,14],"2841":[72,30,81,14],"2849":[72,30,81,14],"2857":[72,13,81,15],"2865":[72,13,81,16],"2873":[68,38,83,6],"2881":[68,38,83,6],"2889":[68,38,83,6],"2897":[68,38,83,6],"2905":[68,38,83,6],"2913":[68,12,83,7],"2915":[68,16,68,37],"2921":[68,12,83,7],"2929":[68,5,83,8],"2937":[54,28,84,2],"2945":[54,28,84,2],"2953":[54,28,84,2],"2961":[54,28,84,2],"2969":[54,28,84,2],"2977":[54,1,84,2],"2985":[54,1,84,3],"2993":[85,1,85,7],"3001":[85,20,85,29],"3009":[86,15,86,19],"3017":[87,14,87,18],"3025":[85,31,88,2],"3033":[85,1,88,3],"3035":[85,1,85,19],"3041":[85,1,88,4],"3049":[89,1,89,7],"3057":[89,1,89,17],"3065":[90,16,90,20],"3073":[90,16,90,20],"3081":[90,16,90,20],"3089":[91,16,91,24],"3097":[91,28,91,38],"3105":[92,13,92,17],"3113":[92,13,92,19],"3121":[92,13,92,30],"3129":[93,23,93,27],"3137":[93,23,93,29],"3145":[93,23,93,40],"3153":[93,23,93,40],"3161":[93,23,93,40],"3169":[94,13,94,17],"3177":[94,13,94,19],"3185":[94,33,94,37],"3193":[94,13,94,37],"3201":[94,13,94,38],"3209":[95,20,95,28],"3217":[95,29,95,33],"3225":[95,35,95,38],"3233":[95,20,95,39],"3241":[95,20,95,39],"3249":[95,13,95,40],"3257":[97,16,97,26],"3265":[97,27,97,31],"3273":[97,33,97,41],"3281":[97,16,97,42],"3289":[97,16,97,42],"3297":[97,9,97,43],"3305":[100,16,100,20],"3313":[100,16,100,22],"3321":[101,13,101,17],"3329":[101,13,101,19],"3337":[101,13,101,30],"3345":[102,23,102,27],"3353":[102,23,102,29],"3361":[102,23,102,40],"3369":[102,23,102,40],"3377":[102,23,102,40],"3385":[103,13,103,17],"3393":[103,13,103,19],"3401":[103,33,103,37],"3409":[103,13,103,37],"3417":[103,13,103,38],"3425":[104,20,104,27],"3433":[104,28,104,31],"3441":[104,20,104,32],"3449":[104,20,104,32],"3457":[104,13,104,33],"3465":[106,9,106,19],"3473":[106,20,106,24],"3481":[107,17,107,20],"3489":[108,24,108,30],"3497":[108,31,108,34],"3505":[108,24,108,35],"3513":[108,24,108,35],"3521":[108,17,108,36],"3529":[109,13,109,20],"3537":[109,21,109,22],"3545":[109,13,109,23],"3553":[109,13,109,24],"3561":[106,26,110,10],"3569":[106,26,110,10],"3577":[106,26,110,10],"3585":[106,26,110,10],"3593":[106,26,110,10],"3601":[106,9,110,11],"3609":[106,9,110,12],"3617":[100,38,111,6],"3625":[100,38,111,6],"3633":[100,38,111,6],"3641":[100,38,111,6],"3649":[100,38,111,6],"3657":[100,38,111,6],"3665":[100,12,111,7],"3667":[100,16,100,37],"3673":[100,12,111,7],"3681":[100,5,111,8],"3689":[89,25,112,2],"3697":[89,25,112,2],"3705":[89,25,112,2],"3713":[89,25,112,2],"3721":[89,25,112,2],"3729":[89,25,112,2],"3737":[89,1,112,2],"3745":[89,1,112,3],"3753":[113,1,113,7],"3761":[113,20,113,26],"3769":[114,15,114,19],"3777":[115,14,115,18],"3785":[113,28,116,2],"3793":[113,1,116,3],"3795":[113,1,113,19],"3801":[113,1,116,4],"3809":[117,1,117,7],"3817":[117,1,117,17],"3825":[118,9,118,13],"3833":[118,9,118,15],"3841":[118,9,118,21],"3849":[118,25,118,31],"3857":[118,25,118,38],"3865":[118,42,118,46],"3873":[118,42,118,48],"3881":[118,42,118,54],"3889":[118,58,118,64],"3897":[118,58,118,69],"3905":[118,73,118,77],"3913":[118,73,118,86],"3915":[118,73,118,84],"3921":[119,15,119,25],"3929":[120,22,120,40],"3937":[121,21,121,25],"3945":[119,33,122,10],"3953":[119,15,122,11],"3955":[119,15,119,32],"3961":[119,15,122,11],"3969":[119,9,122,12],"3977":[123,5,123,9],"3985":[123,5,123,11],"3993":[123,5,123,15],"4001":[123,24,123,30],"4009":[123,5,123,30],"4017":[123,5,123,31],"4025":[124,12,124,16],"4033":[124,12,124,16],"4041":[124,5,124,17],"4049":[117,27,125,2],"4057":[117,27,125,2],"4065":[117,27,125,2],"4073":[117,27,125,2],"4081":[117,1,125,2],"4089":[117,1,125,3],"4097":[126,1,126,7],"4105":[126,20,126,28],"4113":[127,15,127,20],"4121":[128,14,128,19],"4129":[129,15,129,21],"4137":[129,14,129,22],"4145":[126,30,130,2],"4153":[126,1,130,3],"4155":[126,1,126,19],"4161":[126,1,130,4],"4169":[131,1,131,7],"4177":[131,1,131,17],"4185":[132,9,132,13],"4193":[132,9,132,15],"4201":[132,9,132,21],"4209":[132,25,132,31],"4217":[132,25,132,38],"4225":[132,42,132,46],"4233":[132,42,132,48],"4241":[132,42,132,54],"4249":[132,58,132,64],"4257":[132,58,132,69],"4265":[132,73,132,77],"4273":[132,73,132,86],"4275":[132,73,132,84],"4281":[133,15,133,25],"4289":[134,22,134,40],"4297":[135,21,135,25],"4305":[133,33,136,10],"4313":[133,15,136,11],"4315":[133,15,133,32],"4321":[133,15,136,11],"4329":[133,9,136,12],"4337":[137,5,137,9],"4345":[137,5,137,11],"4353":[137,5,137,15],"4361":[137,26,137,33],"4369":[137,5,137,33],"4377":[137,5,137,34],"4385":[138,12,138,16],"4393":[138,12,138,16],"4401":[138,5,138,17],"4409":[131,28,139,2],"4417":[131,28,139,2],"4425":[131,28,139,2],"4433":[131,28,139,2],"4441":[131,1,139,2],"4449":[131,1,139,3],"4457":[140,1,140,7],"4465":[140,20,140,29],"4473":[141,15,141,20],"4481":[142,14,142,19],"4489":[143,15,143,21],"4497":[143,14,143,22],"4505":[140,31,144,2],"4513":[140,1,144,3],"4515":[140,1,140,19],"4521":[140,1,144,4],"4529":[145,1,145,7],"4537":[145,1,145,17],"4545":[146,9,146,13],"4553":[146,9,146,15],"4561":[146,9,146,21],"4569":[146,25,146,31],"4577":[146,25,146,38],"4585":[146,42,146,46],"4593":[146,42,146,48],"4601":[146,42,146,54],"4609":[146,58,146,64],"4617":[146,58,146,69],"4625":[146,73,146,77],"4633":[146,73,146,86],"4635":[146,73,146,84],"4641":[147,15,147,25],"4649":[148,22,148,40],"4657":[149,21,149,25],"4665":[147,33,150,10],"4673":[147,15,150,11],"4675":[147,15,147,32],"4681":[147,15,150,11],"4689":[147,9,150,12],"4697":[151,5,151,9],"4705":[151,5,151,11],"4713":[151,5,151,15],"4721":[151,23,151,27],"4729":[151,5,151,27],"4737":[151,5,151,28],"4745":[152,12,152,16],"4753":[152,12,152,16],"4761":[152,5,152,17],"4769":[145,25,153,2],"4777":[145,25,153,2],"4785":[145,25,153,2],"4793":[145,25,153,2],"4801":[145,1,153,2],"4809":[145,1,153,3],"4817":[154,1,154,7],"4825":[154,20,154,26],"4833":[155,15,155,20],"4841":[156,14,156,19],"4849":[157,15,157,21],"4857":[157,14,157,22],"4865":[154,28,158,2],"4873":[154,1,158,3],"4875":[154,1,154,19],"4881":[154,1,158,4],"4889":[159,1,159,7],"4897":[159,1,159,17],"4905":[160,9,160,13],"4913":[160,9,160,15],"4921":[160,9,160,21],"4929":[160,25,160,31],"4937":[160,25,160,38],"4945":[160,42,160,46],"4953":[160,42,160,48],"4961":[160,42,160,54],"4969":[160,58,160,64],"4977":[160,58,160,69],"4985":[160,73,160,77],"4993":[160,73,160,86],"4995":[160,73,160,84],"5001":[161,15,161,25],"5009":[162,22,162,40],"5017":[163,21,163,25],"5025":[161,33,164,10],"5033":[161,15,164,11],"5035":[161,15,161,32],"5041":[161,15,164,11],"5049":[161,9,164,12],"5057":[165,5,165,9],"5065":[165,5,165,11],"5073":[165,5,165,15],"5081":[165,22,165,25],"5089":[165,5,165,25],"5097":[165,5,165,26],"5105":[166,12,166,16],"5113":[166,12,166,16],"5121":[166,5,166,17],"5129":[159,24,167,2],"5137":[159,24,167,2],"5145":[159,24,167,2],"5153":[159,24,167,2],"5161":[159,1,167,2],"5169":[159,1,167,3],"5177":[168,1,168,7],"5185":[168,20,168,25],"5193":[169,15,169,20],"5201":[170,14,170,19],"5209":[171,15,171,21],"5217":[171,14,171,22],"5225":[168,27,172,2],"5233":[168,1,172,3],"5235":[168,1,168,19],"5241":[168,1,172,4],"5249":[173,1,173,7],"5257":[173,1,173,17],"5265":[174,9,174,13],"5273":[174,9,174,15],"5281":[174,9,174,21],"5289":[174,25,174,31],"5297":[174,25,174,38],"5305":[174,42,174,46],"5313":[174,42,174,48],"5321":[174,42,174,54],"5329":[174,58,174,64],"5337":[174,58,174,69],"5345":[174,73,174,77],"5353":[174,73,174,86],"5355":[174,73,174,84],"5361":[175,15,175,25],"5369":[176,22,176,40],"5377":[177,21,177,25],"5385":[175,33,178,10],"5393":[175,15,178,11],"5395":[175,15,175,32],"5401":[175,15,178,11],"5409":[175,9,178,12],"5417":[179,5,179,9],"5425":[179,5,179,11],"5433":[179,5,179,15],"5441":[179,22,179,25],"5449":[179,5,179,25],"5457":[179,5,179,26],"5465":[180,12,180,16],"5473":[180,12,180,16],"5481":[180,5,180,17],"5489":[173,24,181,2],"5497":[173,24,181,2],"5505":[173,24,181,2],"5513":[173,24,181,2],"5521":[173,1,181,2],"5529":[173,1,181,3],"5537":[182,1,182,7],"5545":[182,20,182,25],"5553":[183,15,183,20],"5561":[184,14,184,19],"5569":[185,15,185,21],"5577":[185,14,185,22],"5585":[182,27,186,2],"5593":[182,1,186,3],"5595":[182,1,182,19],"5601":[182,1,186,4],"5609":[187,1,187,7],"5617":[187,1,187,17],"5625":[188,9,188,13],"5633":[188,9,188,15],"5641":[188,9,188,21],"5649":[188,25,188,31],"5657":[188,25,188,38],"5665":[188,42,188,46],"5673":[188,42,188,48],"5681":[188,42,188,54],"5689":[188,58,188,64],"5697":[188,58,188,69],"5705":[188,73,188,77],"5713":[188,73,188,86],"5715":[188,73,188,84],"5721":[189,15,189,25],"5729":[190,22,190,40],"5737":[191,21,191,25],"5745":[189,33,192,10],"5753":[189,15,192,11],"5755":[189,15,189,32],"5761":[189,15,192,11],"5769":[189,9,192,12],"5777":[193,5,193,9],"5785":[193,5,193,11],"5793":[193,5,193,15],"5801":[193,28,193,33],"5809":[193,5,193,33],"5817":[193,5,193,34],"5825":[194,12,194,16],"5833":[194,12,194,16],"5841":[194,5,194,17],"5849":[187,30,195,2],"5857":[187,30,195,2],"5865":[187,30,195,2],"5873":[187,30,195,2],"5881":[187,1,195,2],"5889":[187,1,195,3],"5897":[196,1,196,7],"5905":[196,20,196,31],"5913":[197,15,197,20],"5921":[198,14,198,19],"5929":[199,15,199,21],"5937":[199,14,199,22],"5945":[196,33,200,2],"5953":[196,1,200,3],"5955":[196,1,196,19],"5961":[196,1,200,4],"5969":[201,1,201,7],"5977":[201,1,201,17],"5985":[202,9,202,13],"5993":[202,9,202,15],"6001":[202,9,202,21],"6009":[202,25,202,31],"6017":[202,25,202,38],"6025":[202,42,202,46],"6033":[202,42,202,48],"6041":[202,42,202,54],"6049":[202,58,202,64],"6057":[202,58,202,69],"6065":[202,73,202,77],"6073":[202,73,202,86],"6075":[202,73,202,84],"6081":[203,15,203,25],"6089":[204,22,204,40],"6097":[205,21,205,25],"6105":[203,33,206,10],"6113":[203,15,206,11],"6115":[203,15,203,32],"6121":[203,15,206,11],"6129":[203,9,206,12],"6137":[207,5,207,9],"6145":[207,5,207,11],"6153":[207,5,207,15],"6161":[207,30,207,35],"6169":[207,5,207,35],"6177":[207,5,207,36],"6185":[208,12,208,16],"6193":[208,12,208,16],"6201":[208,5,208,17],"6209":[201,33,209,2],"6217":[201,33,209,2],"6225":[201,33,209,2],"6233":[201,33,209,2],"6241":[201,1,209,2],"6249":[201,1,209,3],"6257":[210,1,210,7],"6265":[210,20,210,34],"6273":[211,15,211,20],"6281":[212,14,212,19],"6289":[213,15,213,21],"6297":[213,14,213,22],"6305":[210,36,214,2],"6313":[210,1,214,3],"6315":[210,1,210,19],"6321":[210,1,214,4],"6329":[215,1,215,7],"6337":[215,1,215,17],"6345":[216,9,216,13],"6353":[216,9,216,15],"6361":[216,9,216,21],"6369":[216,25,216,31],"6377":[216,25,216,38],"6385":[216,42,216,46],"6393":[216,42,216,48],"6401":[216,42,216,54],"6409":[216,58,216,64],"6417":[216,58,216,69],"6425":[216,73,216,77],"6433":[216,73,216,86],"6435":[216,73,216,84],"6441":[217,15,217,25],"6449":[218,22,218,40],"6457":[219,21,219,25],"6465":[217,33,220,10],"6473":[217,15,220,11],"6475":[217,15,217,32],"6481":[217,15,220,11],"6489":[217,9,220,12],"6497":[221,5,221,9],"6505":[221,5,221,11],"6513":[221,5,221,15],"6521":[221,27,221,32],"6529":[221,5,221,32],"6537":[221,5,221,33],"6545":[222,12,222,16],"6553":[222,12,222,16],"6561":[222,5,222,17],"6569":[215,29,223,2],"6577":[215,29,223,2],"6585":[215,29,223,2],"6593":[215,29,223,2],"6601":[215,1,223,2],"6609":[215,1,223,3],"6617":[224,1,224,7],"6625":[224,20,224,30],"6633":[225,15,225,20],"6641":[226,14,226,19],"6649":[227,15,227,21],"6657":[227,14,227,22],"6665":[224,32,228,2],"6673":[224,1,228,3],"6675":[224,1,224,19],"6681":[224,1,228,4],"6689":[229,1,229,7],"6697":[229,1,229,17],"6705":[230,9,230,13],"6713":[230,9,230,15],"6721":[230,9,230,21],"6729":[230,25,230,31],"6737":[230,25,230,38],"6745":[230,42,230,46],"6753":[230,42,230,48],"6761":[230,42,230,54],"6769":[230,58,230,64],"6777":[230,58,230,69],"6785":[230,73,230,77],"6793":[230,73,230,86],"6795":[230,73,230,84],"6801":[231,15,231,25],"6809":[232,22,232,40],"6817":[233,21,233,25],"6825":[231,33,234,10],"6833":[231,15,234,11],"6835":[231,15,231,32],"6841":[231,15,234,11],"6849":[231,9,234,12],"6857":[235,9,235,15],"6865":[235,24,235,29],"6873":[235,9,235,30],"6875":[235,9,235,23],"6881":[235,35,235,36],"6889":[236,15,236,25],"6897":[237,22,237,23],"6905":[237,24,237,61],"6913":[237,63,237,68],"6921":[237,70,237,76],"6929":[237,22,237,77],"6937":[238,21,238,25],"6945":[236,33,239,10],"6953":[236,15,239,11],"6955":[236,15,236,32],"6961":[236,15,239,11],"6969":[236,9,239,12],"6977":[240,5,240,9],"6985":[240,5,240,11],"6993":[240,12,240,17],"7001":[240,21,240,26],"7009":[240,5,240,26],"7017":[240,5,240,27],"7025":[241,9,241,14],"7033":[241,18,241,35],"7041":[242,9,242,13],"7049":[242,9,242,15],"7057":[242,41,242,46],"7065":[242,9,242,46],"7073":[242,9,242,47],"7081":[243,12,243,16],"7089":[243,12,243,16],"7097":[243,5,243,17],"7105":[229,36,244,2],"7113":[229,36,244,2],"7121":[229,36,244,2],"7129":[229,36,244,2],"7137":[229,36,244,2],"7145":[229,1,244,2],"7153":[229,1,244,3],"7161":[245,1,245,7],"7169":[245,20,245,37],"7177":[246,15,246,20],"7185":[247,14,247,19],"7193":[248,15,248,21],"7201":[248,14,248,22],"7209":[245,39,249,2],"7217":[245,1,249,3],"7219":[245,1,245,19],"7225":[245,1,249,4],"7233":[250,1,250,7],"7241":[250,1,250,17],"7249":[251,9,251,13],"7257":[251,9,251,15],"7265":[251,9,251,21],"7273":[251,25,251,31],"7281":[251,25,251,38],"7289":[251,42,251,46],"7297":[251,42,251,48],"7305":[251,42,251,54],"7313":[251,58,251,64],"7321":[251,58,251,69],"7329":[251,73,251,77],"7337":[251,73,251,86],"7339":[251,73,251,84],"7345":[252,15,252,25],"7353":[253,22,253,40],"7361":[254,21,254,25],"7369":[252,33,255,10],"7377":[252,15,255,11],"7379":[252,15,252,32],"7385":[252,15,255,11],"7393":[252,9,255,12],"7401":[256,9,256,14],"7409":[256,23,256,27],"7417":[256,9,256,28],"7419":[256,9,256,22],"7425":[256,33,256,34],"7433":[257,15,257,25],"7441":[258,22,258,23],"7449":[258,24,258,57],"7457":[258,59,258,63],"7465":[258,65,258,70],"7473":[258,22,258,71],"7481":[259,21,259,25],"7489":[257,33,260,10],"7497":[257,15,260,11],"7499":[257,15,257,32],"7505":[257,15,260,11],"7513":[257,9,260,12],"7521":[261,16,261,21],"7529":[261,25,261,34],"7537":[262,15,262,25],"7545":[263,22,263,23],"7553":[263,24,263,57],"7561":[263,59,263,63],"7569":[263,22,263,64],"7577":[264,21,264,25],"7585":[262,33,265,10],"7593":[262,15,265,11],"7595":[262,15,262,32],"7601":[262,15,265,11],"7609":[262,9,265,12],"7617":[266,5,266,9],"7625":[266,5,266,11],"7633":[266,5,266,15],"7641":[266,16,266,20],"7649":[266,24,266,29],"7657":[266,5,266,29],"7665":[266,5,266,30],"7673":[267,12,267,16],"7681":[267,12,267,16],"7689":[267,5,267,17],"7697":[250,34,268,2],"7705":[250,34,268,2],"7713":[250,34,268,2],"7721":[250,34,268,2],"7729":[250,34,268,2],"7737":[250,1,268,2],"7745":[250,1,268,3],"7753":[269,1,269,7],"7761":[269,20,269,35],"7769":[270,15,270,20],"7777":[271,14,271,19],"7785":[272,15,272,21],"7793":[272,14,272,22],"7801":[269,37,273,2],"7809":[269,1,273,3],"7811":[269,1,269,19],"7817":[269,1,273,4],"7825":[274,1,274,7],"7833":[274,1,274,17],"7841":[275,9,275,13],"7849":[275,9,275,15],"7857":[275,9,275,21],"7865":[275,25,275,31],"7873":[275,25,275,38],"7881":[275,42,275,46],"7889":[275,42,275,48],"7897":[275,42,275,54],"7905":[275,58,275,64],"7913":[275,58,275,69],"7921":[275,73,275,77],"7929":[275,73,275,86],"7931":[275,73,275,84],"7937":[276,15,276,25],"7945":[277,22,277,40],"7953":[278,21,278,25],"7961":[276,33,279,10],"7969":[276,15,279,11],"7971":[276,15,276,32],"7977":[276,15,279,11],"7985":[276,9,279,12],"7993":[280,9,280,13],"8001":[280,14,280,15],"8009":[280,9,280,16],"8017":[280,20,280,23],"8025":[281,15,281,25],"8033":[282,22,282,23],"8041":[282,24,282,58],"8049":[282,22,282,59],"8057":[283,21,283,25],"8065":[281,33,284,10],"8073":[281,15,284,11],"8075":[281,15,281,32],"8081":[281,15,284,11],"8089":[281,9,284,12],"8097":[285,17,285,21],"8105":[285,29,285,30],"8113":[285,17,285,31],"8115":[285,17,285,28],"8121":[285,17,285,31],"8129":[285,17,285,31],"8137":[286,5,286,9],"8145":[286,5,286,11],"8153":[286,5,286,15],"8161":[286,16,286,21],"8169":[286,25,286,30],"8177":[286,5,286,30],"8185":[286,5,286,31],"8193":[287,9,287,14],"8201":[287,18,287,27],"8209":[288,9,288,13],"8217":[288,9,288,15],"8225":[288,9,288,19],"8233":[288,27,288,31],"8241":[288,27,288,33],"8249":[288,27,288,37],"8257":[288,38,288,43],"8265":[288,27,288,44],"8273":[288,9,288,44],"8281":[288,9,288,45],"8289":[289,12,289,16],"8297":[289,12,289,16],"8305":[289,5,289,17],"8313":[274,37,290,2],"8321":[274,37,290,2],"8329":[274,37,290,2],"8337":[274,37,290,2],"8345":[274,37,290,2],"8353":[274,37,290,2],"8361":[274,1,290,2],"8369":[274,1,290,3],"8377":[291,1,291,7],"8385":[291,20,291,38],"8393":[292,15,292,20],"8401":[293,14,293,19],"8409":[294,15,294,21],"8417":[294,14,294,22],"8425":[291,40,295,2],"8433":[291,1,295,3],"8435":[291,1,291,19],"8441":[291,1,295,4],"8449":[296,1,296,7],"8457":[296,1,296,17],"8465":[297,9,297,13],"8473":[297,9,297,15],"8481":[297,9,297,21],"8489":[297,25,297,31],"8497":[297,25,297,38],"8505":[297,42,297,46],"8513":[297,42,297,48],"8521":[297,42,297,54],"8529":[297,58,297,64],"8537":[297,58,297,69],"8545":[297,73,297,77],"8553":[297,73,297,86],"8555":[297,73,297,84],"8561":[298,15,298,25],"8569":[299,22,299,40],"8577":[300,21,300,25],"8585":[298,33,301,10],"8593":[298,15,301,11],"8595":[298,15,298,32],"8601":[298,15,301,11],"8609":[298,9,301,12],"8617":[302,5,302,9],"8625":[302,5,302,11],"8633":[302,5,302,15],"8641":[302,26,302,31],"8649":[302,5,302,31],"8657":[302,5,302,32],"8665":[303,12,303,16],"8673":[303,12,303,16],"8681":[303,5,303,17],"8689":[296,28,304,2],"8697":[296,28,304,2],"8705":[296,28,304,2],"8713":[296,28,304,2],"8721":[296,1,304,2],"8729":[296,1,304,3],"8737":[305,1,305,7],"8745":[305,20,305,29],"8753":[306,15,306,20],"8761":[307,14,307,19],"8769":[308,15,308,21],"8777":[308,14,308,22],"8785":[305,31,309,2],"8793":[305,1,309,3],"8795":[305,1,305,19],"8801":[305,1,309,4],"8809":[310,1,310,7],"8817":[310,1,310,17],"8825":[311,16,311,21],"8833":[311,25,311,33],"8841":[312,15,312,25],"8849":[313,22,313,55],"8857":[314,21,314,25],"8865":[312,33,315,10],"8873":[312,15,315,11],"8875":[312,15,312,32],"8881":[312,15,315,11],"8889":[312,9,315,12],"8897":[316,9,316,13],"8905":[316,9,316,15],"8913":[316,9,316,21],"8921":[316,25,316,31],"8929":[316,25,316,38],"8937":[316,42,316,46],"8945":[316,42,316,48],"8953":[316,42,316,54],"8961":[316,58,316,64],"8969":[316,58,316,69],"8977":[316,73,316,77],"8985":[316,73,316,86],"8987":[316,73,316,84],"8993":[317,15,317,25],"9001":[318,22,318,40],"9009":[319,21,319,25],"9017":[317,33,320,10],"9025":[317,15,320,11],"9027":[317,15,317,32],"9033":[317,15,320,11],"9041":[317,9,320,12],"9049":[321,5,321,9],"9057":[321,5,321,11],"9065":[321,5,321,15],"9073":[321,33,321,38],"9081":[321,5,321,38],"9089":[321,5,321,39],"9097":[322,12,322,16],"9105":[322,12,322,16],"9113":[322,5,322,17],"9121":[310,35,323,2],"9129":[310,35,323,2],"9137":[310,35,323,2],"9145":[310,35,323,2],"9153":[310,1,323,2],"9161":[310,1,323,3],"9169":[324,1,324,7],"9177":[324,20,324,36],"9185":[325,15,325,20],"9193":[326,14,326,19],"9201":[327,15,327,21],"9209":[327,14,327,22],"9217":[324,38,328,2],"9225":[324,1,328,3],"9227":[324,1,324,19],"9233":[324,1,328,4],"9241":[329,1,329,7],"9249":[329,1,329,17],"9257":[330,16,330,21],"9265":[330,25,330,33],"9273":[331,15,331,25],"9281":[332,22,332,50],"9289":[333,21,333,25],"9297":[331,33,334,10],"9305":[331,15,334,11],"9307":[331,15,331,32],"9313":[331,15,334,11],"9321":[331,9,334,12],"9329":[335,9,335,13],"9337":[335,9,335,15],"9345":[335,9,335,21],"9353":[335,25,335,31],"9361":[335,25,335,38],"9369":[335,42,335,46],"9377":[335,42,335,48],"9385":[335,42,335,54],"9393":[335,58,335,64],"9401":[335,58,335,69],"9409":[335,73,335,77],"9417":[335,73,335,86],"9419":[335,73,335,84],"9425":[336,15,336,25],"9433":[337,22,337,40],"9441":[338,21,338,25],"9449":[336,33,339,10],"9457":[336,15,339,11],"9459":[336,15,336,32],"9465":[336,15,339,11],"9473":[336,9,339,12],"9481":[340,5,340,9],"9489":[340,5,340,11],"9497":[340,5,340,15],"9505":[340,28,340,33],"9513":[340,5,340,33],"9521":[340,5,340,34],"9529":[341,12,341,16],"9537":[341,12,341,16],"9545":[341,5,341,17],"9553":[329,30,342,2],"9561":[329,30,342,2],"9569":[329,30,342,2],"9577":[329,30,342,2],"9585":[329,1,342,2],"9593":[329,1,342,3],"9601":[343,1,343,7],"9609":[343,20,343,31],"9617":[344,15,344,20],"9625":[345,14,345,19],"9633":[346,15,346,21],"9641":[346,14,346,22],"9649":[343,33,347,2],"9657":[343,1,347,3],"9659":[343,1,343,19],"9665":[343,1,347,4],"9673":[348,1,348,7],"9681":[348,1,348,17],"9689":[348,30,348,36],"9697":[348,30,348,46],"9705":[348,30,348,56],"9713":[348,1,348,56],"9721":[348,1,348,57],"9729":[349,1,349,7],"9737":[349,20,349,31],"9745":[350,15,350,20],"9753":[351,14,351,19],"9761":[352,15,352,21],"9769":[352,14,352,22],"9777":[349,33,353,2],"9785":[349,1,353,3],"9787":[349,1,349,19],"9793":[349,1,353,4],"9801":[354,1,354,7],"9809":[354,1,354,17],"9817":[355,9,355,13],"9825":[355,9,355,15],"9833":[355,9,355,21],"9841":[355,25,355,31],"9849":[355,25,355,38],"9857":[355,42,355,46],"9865":[355,42,355,48],"9873":[355,42,355,54],"9881":[355,58,355,64],"9889":[355,58,355,69],"9897":[355,73,355,77],"9905":[355,73,355,86],"9907":[355,73,355,84],"9913":[356,15,356,25],"9921":[357,22,357,40],"9929":[358,21,358,25],"9937":[356,33,359,10],"9945":[356,15,359,11],"9947":[356,15,356,32],"9953":[356,15,359,11],"9961":[356,9,359,12],"9969":[360,5,360,9],"9977":[360,5,360,11],"9985":[360,5,360,15],"9993":[360,25,360,30],"10001":[360,5,360,30],"10009":[360,5,360,31],"10017":[361,12,361,16],"10025":[361,12,361,16],"10033":[361,5,361,17],"10041":[354,28,362,2],"10049":[354,28,362,2],"10057":[354,28,362,2],"10065":[354,28,362,2],"10073":[354,1,362,2],"10081":[354,1,362,3],"10089":[363,1,363,7],"10097":[363,20,363,29],"10105":[364,15,364,20],"10113":[365,14,365,19],"10121":[366,15,366,21],"10129":[366,14,366,22],"10137":[363,31,367,2],"10145":[363,1,367,3],"10147":[363,1,363,19],"10153":[363,1,367,4],"10161":[368,1,368,7],"10169":[368,1,368,17],"10177":[369,9,369,13],"10185":[369,9,369,15],"10193":[369,9,369,23],"10201":[369,9,369,32],"10209":[370,15,370,25],"10217":[371,22,371,64],"10225":[372,21,372,25],"10233":[370,33,373,10],"10241":[370,15,373,11],"10243":[370,15,370,32],"10249":[370,15,373,11],"10257":[370,9,373,12],"10265":[374,9,374,13],"10273":[374,9,374,15],"10281":[374,9,374,21],"10289":[374,25,374,31],"10297":[374,25,374,38],"10305":[374,42,374,46],"10313":[374,42,374,48],"10321":[374,42,374,54],"10329":[374,58,374,64],"10337":[374,58,374,69],"10345":[374,73,374,77],"10353":[374,73,374,86],"10355":[374,73,374,84],"10361":[375,15,375,25],"10369":[376,22,376,40],"10377":[377,21,377,25],"10385":[375,33,378,10],"10393":[375,15,378,11],"10395":[375,15,375,32],"10401":[375,15,378,11],"10409":[375,9,378,12],"10417":[379,17,379,26],"10425":[379,17,379,26],"10433":[379,17,379,26],"10441":[380,9,380,14],"10449":[380,23,380,28],"10457":[380,9,380,29],"10459":[380,9,380,22],"10465":[380,33,380,38],"10473":[380,47,380,52],"10481":[380,53,380,54],"10489":[380,47,380,55],"10497":[380,33,380,56],"10499":[380,33,380,46],"10505":[381,21,381,24],"10513":[381,25,381,30],"10521":[383,17,383,18],"10529":[383,19,383,20],"10537":[383,17,383,21],"10545":[384,17,384,21],"10553":[382,25,385,14],"10561":[382,25,385,14],"10569":[382,25,385,14],"10577":[386,17,386,18],"10585":[386,19,386,20],"10593":[386,17,386,21],"10601":[386,25,386,30],"10609":[387,17,387,22],"10617":[387,23,387,24],"10625":[387,28,387,29],"10633":[387,17,387,29],"10641":[387,17,387,30],"10649":[388,24,388,25],"10657":[388,26,388,27],"10665":[388,24,388,28],"10673":[388,32,388,38],"10681":[389,17,389,22],"10689":[389,23,389,24],"10697":[389,29,389,30],"10705":[389,17,389,30],"10713":[389,17,389,31],"10721":[390,24,390,25],"10729":[390,26,390,27],"10737":[390,24,390,28],"10745":[390,32,390,33],"10753":[390,37,390,38],"10761":[390,39,390,40],"10769":[390,37,390,41],"10777":[390,46,390,47],"10785":[391,17,391,22],"10793":[391,23,391,24],"10801":[391,28,391,29],"10809":[391,30,391,31],"10817":[391,28,391,32],"10825":[391,17,391,32],"10833":[391,17,391,33],"10841":[393,27,393,37],"10849":[393,38,393,165],"10857":[393,23,393,166],"10865":[393,23,393,166],"10873":[393,17,393,167],"10881":[395,20,395,25],"10889":[395,20,395,25],"10897":[395,13,395,26],"10905":[381,35,396,10],"10913":[381,35,396,10],"10921":[381,35,396,10],"10929":[381,35,396,10],"10937":[381,35,396,10],"10945":[381,25,396,11],"10947":[381,25,381,34],"10953":[381,17,396,12],"10961":[381,17,396,12],"10969":[381,9,396,13],"10977":[398,9,398,18],"10985":[398,22,398,26],"10993":[400,17,400,26],"11001":[401,17,401,26],"11009":[399,18,402,14],"11017":[399,17,402,15],"11025":[399,17,402,15],"11033":[399,9,402,16],"11041":[404,5,404,9],"11049":[404,5,404,11],"11057":[404,5,404,15],"11065":[404,23,404,28],"11073":[404,5,404,28],"11081":[404,5,404,29],"11089":[405,5,405,9],"11097":[405,22,405,27],"11105":[405,5,405,27],"11113":[405,5,405,28],"11121":[406,12,406,16],"11129":[406,12,406,16],"11137":[406,5,406,17],"11145":[368,25,407,2],"11153":[368,25,407,2],"11161":[368,25,407,2],"11169":[368,25,407,2],"11177":[368,25,407,2],"11185":[368,25,407,2],"11193":[368,1,407,2],"11201":[368,1,407,3],"11209":[408,1,408,7],"11217":[408,20,408,26],"11225":[409,15,409,20],"11233":[410,14,410,19],"11241":[411,15,411,21],"11249":[411,14,411,22],"11257":[408,28,412,2],"11265":[408,1,412,3],"11267":[408,1,408,19],"11273":[408,1,412,4],"11281":[413,1,413,7],"11289":[413,1,413,17],"11297":[414,9,414,13],"11305":[414,9,414,15],"11313":[414,9,414,23],"11321":[414,9,414,32],"11329":[415,15,415,25],"11337":[416,22,416,66],"11345":[417,21,417,25],"11353":[415,33,418,10],"11361":[415,15,418,11],"11363":[415,15,415,32],"11369":[415,15,418,11],"11377":[415,9,418,12],"11385":[419,9,419,13],"11393":[419,9,419,15],"11401":[419,9,419,21],"11409":[419,25,419,31],"11417":[419,25,419,38],"11425":[419,42,419,46],"11433":[419,42,419,55],"11435":[419,42,419,53],"11441":[420,15,420,25],"11449":[421,22,421,40],"11457":[422,21,422,25],"11465":[420,33,423,10],"11473":[420,15,423,11],"11475":[420,15,420,32],"11481":[420,15,423,11],"11489":[420,9,423,12],"11497":[424,16,424,21],"11505":[424,25,424,33],"11513":[425,15,425,25],"11521":[426,22,426,53],"11529":[427,21,427,25],"11537":[425,33,428,10],"11545":[425,15,428,11],"11547":[425,15,425,32],"11553":[425,15,428,11],"11561":[425,9,428,12],"11569":[429,5,429,9],"11577":[429,5,429,11],"11585":[429,5,429,15],"11593":[429,28,429,33],"11601":[429,5,429,33],"11609":[429,5,429,34],"11617":[430,5,430,9],"11625":[430,29,430,34],"11633":[430,5,430,35],"11635":[430,5,430,28],"11641":[430,5,430,36],"11649":[431,12,431,16],"11657":[431,12,431,16],"11665":[431,5,431,17],"11673":[413,30,432,2],"11681":[413,30,432,2],"11689":[413,30,432,2],"11697":[413,30,432,2],"11705":[413,1,432,2],"11713":[413,1,432,3],"11721":[433,1,433,7],"11729":[433,20,433,31],"11737":[434,15,434,20],"11745":[435,14,435,19],"11753":[436,15,436,21],"11761":[436,14,436,22],"11769":[433,33,437,2],"11777":[433,1,437,3],"11779":[433,1,433,19],"11785":[433,1,437,4],"11793":[438,1,438,7],"11801":[438,1,438,17],"11809":[439,9,439,13],"11817":[439,9,439,15],"11825":[439,9,439,23],"11833":[439,9,439,32],"11841":[440,15,440,25],"11849":[441,22,441,62],"11857":[442,21,442,25],"11865":[440,33,443,10],"11873":[440,15,443,11],"11875":[440,15,440,32],"11881":[440,15,443,11],"11889":[440,9,443,12],"11897":[444,9,444,13],"11905":[444,9,444,15],"11913":[444,9,444,21],"11921":[444,25,444,31],"11929":[444,25,444,36],"11937":[444,40,444,44],"11945":[444,40,444,46],"11953":[444,40,444,52],"11961":[444,56,444,62],"11969":[444,56,444,69],"11977":[444,73,444,77],"11985":[444,73,444,86],"11987":[444,73,444,84],"11993":[445,15,445,25],"12001":[446,22,446,40],"12009":[447,21,447,25],"12017":[445,33,448,10],"12025":[445,15,448,11],"12027":[445,15,445,32],"12033":[445,15,448,11],"12041":[445,9,448,12],"12049":[449,16,449,21],"12057":[449,25,449,33],"12065":[450,15,450,25],"12073":[451,22,451,49],"12081":[452,21,452,25],"12089":[450,33,453,10],"12097":[450,15,453,11],"12099":[450,15,450,32],"12105":[450,15,453,11],"12113":[450,9,453,12],"12121":[454,5,454,9],"12129":[454,5,454,11],"12137":[454,5,454,15],"12145":[454,24,454,29],"12153":[454,5,454,29],"12161":[454,5,454,30],"12169":[455,5,455,9],"12177":[455,25,455,30],"12185":[455,5,455,31],"12187":[455,5,455,24],"12193":[455,5,455,32],"12201":[456,12,456,16],"12209":[456,12,456,16],"12217":[456,5,456,17],"12225":[438,26,457,2],"12233":[438,26,457,2],"12241":[438,26,457,2],"12249":[438,26,457,2],"12257":[438,1,457,2],"12265":[438,1,457,3],"12273":[458,1,458,7],"12281":[458,20,458,27],"12289":[459,15,459,20],"12297":[460,14,460,19],"12305":[461,15,461,21],"12313":[461,14,461,22],"12321":[458,29,462,2],"12329":[458,1,462,3],"12331":[458,1,458,19],"12337":[458,1,462,4],"12345":[463,1,463,7],"12353":[463,1,463,17],"12361":[464,9,464,13],"12369":[464,9,464,15],"12377":[464,9,464,23],"12385":[464,9,464,32],"12393":[465,15,465,25],"12401":[466,22,466,61],"12409":[467,21,467,25],"12417":[465,33,468,10],"12425":[465,15,468,11],"12427":[465,15,465,32],"12433":[465,15,468,11],"12441":[465,9,468,12],"12449":[469,9,469,13],"12457":[469,9,469,15],"12465":[469,9,469,21],"12473":[469,25,469,31],"12481":[469,25,469,36],"12489":[469,40,469,44],"12497":[469,40,469,46],"12505":[469,40,469,52],"12513":[469,56,469,62],"12521":[469,56,469,69],"12529":[469,73,469,77],"12537":[469,73,469,86],"12539":[469,73,469,84],"12545":[470,15,470,25],"12553":[471,22,471,40],"12561":[472,21,472,25],"12569":[470,33,473,10],"12577":[470,15,473,11],"12579":[470,15,470,32],"12585":[470,15,473,11],"12593":[470,9,473,12],"12601":[474,16,474,21],"12609":[474,25,474,33],"12617":[475,15,475,25],"12625":[476,22,476,48],"12633":[477,21,477,25],"12641":[475,33,478,10],"12649":[475,15,478,11],"12651":[475,15,475,32],"12657":[475,15,478,11],"12665":[475,9,478,12],"12673":[479,5,479,9],"12681":[479,5,479,11],"12689":[479,5,479,15],"12697":[479,23,479,28],"12705":[479,5,479,28],"12713":[479,5,479,29],"12721":[480,5,480,9],"12729":[480,24,480,29],"12737":[480,5,480,30],"12739":[480,5,480,23],"12745":[480,5,480,31],"12753":[481,12,481,16],"12761":[481,12,481,16],"12769":[481,5,481,17],"12777":[463,25,482,2],"12785":[463,25,482,2],"12793":[463,25,482,2],"12801":[463,25,482,2],"12809":[463,1,482,2],"12817":[463,1,482,3],"12825":[483,1,483,7],"12833":[483,20,483,26],"12841":[484,15,484,20],"12849":[485,14,485,19],"12857":[486,15,486,21],"12865":[486,14,486,22],"12873":[483,28,487,2],"12881":[483,1,487,3],"12883":[483,1,483,19],"12889":[483,1,487,4],"12897":[488,1,488,7],"12905":[488,1,488,17],"12913":[488,31,488,37],"12921":[488,31,488,47],"12929":[488,31,488,52],"12937":[488,1,488,52],"12945":[488,1,488,53],"12953":[490,9,490,13],"12961":[490,9,490,15],"12969":[490,9,490,21],"12977":[490,25,490,31],"12985":[490,25,490,38],"12993":[490,42,490,46],"13001":[490,42,490,53],"13009":[490,57,490,61],"13017":[490,57,490,70],"13019":[490,57,490,68],"13025":[491,16,491,30],"13033":[491,31,491,39],"13041":[491,41,491,51],"13049":[492,22,492,40],"13057":[493,21,493,25],"13065":[491,59,494,10],"13073":[491,41,494,11],"13075":[491,41,491,58],"13081":[491,16,494,12],"13089":[491,16,494,12],"13097":[491,9,494,13],"13105":[495,9,495,13],"13113":[495,9,495,15],"13121":[495,9,495,21],"13129":[495,25,495,31],"13137":[495,25,495,36],"13145":[495,40,495,44],"13153":[495,40,495,46],"13161":[495,40,495,50],"13169":[495,40,495,55],"13177":[497,13,497,17],"13185":[497,13,497,19],"13193":[497,13,497,23],"13201":[497,31,497,51],"13209":[497,52,497,56],"13217":[497,52,497,58],"13225":[497,52,497,62],"13233":[497,52,497,67],"13241":[497,31,497,68],"13249":[497,13,497,68],"13257":[497,13,497,69],"13265":[499,20,499,34],"13273":[499,35,499,43],"13281":[499,45,499,48],"13289":[499,20,499,49],"13297":[499,20,499,49],"13305":[499,13,499,50],"13313":[498,11,500,10],"13321":[502,5,502,9],"13329":[503,13,503,16],"13337":[503,20,503,23],"13345":[503,20,503,32],"13353":[503,36,503,40],"13361":[503,36,503,42],"13369":[503,36,503,65],"13377":[503,69,503,70],"13385":[504,20,504,28],"13393":[504,29,504,32],"13401":[504,20,504,33],"13409":[504,20,504,33],"13417":[504,13,504,34],"13425":[505,13,505,16],"13433":[505,20,505,23],"13441":[505,20,505,32],"13449":[505,36,505,40],"13457":[505,36,505,42],"13465":[505,36,505,65],"13473":[505,68,505,69],"13481":[506,13,506,17],"13489":[506,13,506,19],"13497":[506,45,506,49],"13505":[506,45,506,51],"13513":[506,45,506,74],"13521":[506,77,506,78],"13529":[506,13,506,78],"13537":[506,13,506,79],"13545":[507,20,507,30],"13553":[508,21,508,25],"13561":[508,21,508,37],"13569":[508,21,508,50],"13577":[508,54,508,55],"13585":[509,21,509,25],"13593":[509,21,509,34],"13595":[509,21,509,32],"13601":[509,21,509,35],"13609":[510,17,510,21],"13617":[510,33,510,41],"13625":[510,17,510,42],"13627":[510,17,510,32],"13633":[510,17,510,43],"13641":[507,31,511,14],"13649":[507,31,511,14],"13657":[507,31,511,14],"13665":[511,16,511,20],"13673":[511,16,511,22],"13681":[511,16,511,44],"13689":[507,20,511,45],"13697":[507,20,511,45],"13705":[507,13,511,46],"13713":[513,9,513,13],"13721":[513,9,513,15],"13729":[513,24,513,30],"13737":[513,24,513,35],"13745":[513,9,513,35],"13753":[513,9,513,36],"13761":[514,13,514,16],"13769":[515,20,515,34],"13777":[515,35,515,43],"13785":[515,45,515,48],"13793":[515,20,515,49],"13801":[515,20,515,49],"13809":[515,13,515,50],"13817":[516,9,516,23],"13825":[516,24,516,32],"13833":[516,34,516,38],"13841":[516,40,516,43],"13849":[516,9,516,44],"13857":[516,9,516,45],"13865":[502,16,517,6],"13873":[502,16,517,6],"13881":[502,16,517,6],"13889":[502,16,517,6],"13897":[502,16,517,6],"13905":[502,5,517,7],"13907":[502,5,502,15],"13913":[502,5,517,8],"13921":[489,18,518,2],"13929":[489,18,518,2],"13937":[489,18,518,2],"13945":[489,18,518,2],"13953":[489,18,518,2],"13961":[489,18,518,2],"13969":[489,18,518,2],"13977":[519,1,519,7],"13985":[519,20,519,32],"13993":[520,15,520,19],"14001":[521,14,521,18],"14009":[519,34,522,2],"14017":[519,1,522,3],"14019":[519,1,519,19],"14025":[519,1,522,4],"14033":[524,9,524,13],"14041":[524,9,524,29],"14043":[524,9,524,27],"14049":[524,33,524,34],"14057":[525,9,525,16],"14065":[525,9,525,16],"14073":[526,5,526,9],"14081":[526,16,526,24],"14089":[526,5,526,25],"14091":[526,5,526,15],"14097":[526,5,526,26],"14105":[527,12,527,16],"14113":[527,12,527,16],"14121":[527,5,527,17],"14129":[523,12,528,2],"14137":[523,12,528,2],"14145":[523,12,528,2],"14153":[523,12,528,2],"14161":[523,12,528,2],"14169":[523,12,528,2],"14177":[523,12,528,2],"14185":[529,1,529,7],"14193":[529,1,529,17],"14201":[529,25,529,31],"14209":[529,25,529,41],"14217":[529,25,529,52],"14225":[529,1,529,52],"14233":[529,1,529,53],"14241":[530,1,530,7],"14249":[530,20,530,26],"14257":[531,15,531,19],"14265":[532,14,532,18],"14273":[530,28,533,2],"14281":[530,1,533,3],"14283":[530,1,530,19],"14289":[530,1,533,4],"14297":[534,1,534,7],"14305":[534,1,534,17],"14313":[535,5,535,9],"14321":[535,5,535,18],"14323":[535,5,535,16],"14329":[535,5,535,19],"14337":[536,5,536,9],"14345":[536,5,536,11],"14353":[536,20,536,26],"14361":[536,20,536,31],"14369":[536,5,536,31],"14377":[536,5,536,32],"14385":[537,5,537,10],"14393":[537,11,537,15],"14401":[537,17,537,25],"14409":[537,5,537,26],"14417":[537,5,537,27],"14425":[534,25,538,2],"14433":[534,25,538,2],"14441":[534,25,538,2],"14449":[534,25,538,2],"14457":[534,1,538,2],"14465":[534,1,538,3],"14473":[539,1,539,7],"14481":[539,20,539,26],"14489":[540,15,540,19],"14497":[541,14,541,19],"14505":[539,28,542,2],"14513":[539,1,542,3],"14515":[539,1,539,19],"14521":[539,1,542,4],"14529":[544,10,544,18],"14537":[545,15,545,25],"14545":[546,22,546,45],"14553":[547,21,547,25],"14561":[545,33,548,10],"14569":[545,15,548,11],"14571":[545,15,545,32],"14577":[545,15,548,11],"14585":[545,9,548,12],"14593":[549,9,549,13],"14601":[549,9,549,26],"14603":[549,9,549,24],"14609":[550,9,550,16],"14617":[550,9,550,16],"14625":[551,9,551,13],"14633":[551,9,551,15],"14641":[551,9,551,21],"14649":[551,25,551,31],"14657":[551,25,551,38],"14665":[551,42,551,46],"14673":[551,42,551,55],"14675":[551,42,551,53],"14681":[552,16,552,30],"14689":[552,31,552,39],"14697":[552,41,552,51],"14705":[553,22,553,40],"14713":[554,21,554,25],"14721":[552,59,555,10],"14729":[552,41,555,11],"14731":[552,41,552,58],"14737":[552,16,555,12],"14745":[552,16,555,12],"14753":[552,9,555,13],"14761":[557,9,557,13],"14769":[557,9,557,15],"14777":[557,9,557,21],"14785":[557,25,557,31],"14793":[557,25,557,36],"14801":[558,9,558,13],"14809":[558,9,558,15],"14817":[558,24,558,30],"14825":[558,24,558,35],"14833":[558,9,558,35],"14841":[558,9,558,36],"14849":[559,14,559,18],"14857":[559,14,559,18],"14865":[559,14,559,18],"14873":[560,9,560,13],"14881":[560,9,560,29],"14883":[560,9,560,27],"14889":[560,32,560,33],"14897":[561,21,561,25],"14905":[561,26,561,30],"14913":[561,32,561,40],"14921":[561,21,561,41],"14929":[561,21,561,41],"14937":[562,13,562,15],"14945":[562,16,562,20],"14953":[562,22,562,30],"14961":[562,13,562,31],"14969":[562,13,562,32],"14977":[563,9,563,14],"14985":[563,15,563,19],"14993":[563,21,563,29],"15001":[563,9,563,30],"15009":[563,9,563,31],"15017":[565,9,565,13],"15025":[566,17,566,20],"15033":[567,24,567,38],"15041":[567,39,567,47],"15049":[567,49,567,52],"15057":[567,24,567,53],"15065":[567,24,567,53],"15073":[567,17,567,54],"15081":[568,17,568,21],"15089":[568,25,568,29],"15097":[569,17,569,21],"15105":[569,17,569,23],"15113":[569,32,569,38],"15121":[569,32,569,45],"15129":[569,17,569,45],"15137":[569,17,569,46],"15145":[570,24,570,38],"15153":[570,39,570,47],"15161":[570,49,570,53],"15169":[570,55,570,59],"15177":[570,24,570,60],"15185":[570,24,570,60],"15193":[570,17,570,61],"15201":[572,17,572,31],"15209":[572,32,572,40],"15217":[572,42,572,46],"15225":[572,48,572,52],"15233":[572,17,572,53],"15241":[572,57,572,62],"15249":[573,17,573,24],"15257":[573,17,573,24],"15265":[574,13,574,18],"15273":[574,19,574,23],"15281":[574,25,574,33],"15289":[574,13,574,34],"15297":[574,13,574,35],"15305":[565,19,575,10],"15313":[565,19,575,10],"15321":[565,19,575,10],"15329":[565,19,575,10],"15337":[565,19,575,10],"15345":[565,9,575,11],"15347":[565,9,565,18],"15353":[565,9,575,12],"15361":[543,13,577,2],"15369":[543,13,577,2],"15377":[543,13,577,2],"15385":[543,13,577,2],"15393":[543,13,577,2],"15401":[543,13,577,2],"15409":[543,13,577,2],"15417":[543,13,577,2],"15425":[578,1,578,7],"15433":[578,1,578,17],"15441":[579,5,579,9],"15449":[580,13,580,16],"15457":[581,13,581,21],"15465":[581,22,581,25],"15473":[581,13,581,26],"15481":[581,13,581,27],"15489":[582,20,582,25],"15497":[582,20,582,25],"15505":[582,13,582,26],"15513":[584,13,584,16],"15521":[584,20,584,24],"15529":[585,13,585,21],"15537":[585,22,585,25],"15545":[585,13,585,26],"15553":[585,13,585,27],"15561":[586,20,586,24],"15569":[586,20,586,24],"15577":[586,13,586,25],"15585":[588,13,588,16],"15593":[588,20,588,24],"15601":[588,28,588,36],"15609":[589,36,589,44],"15617":[589,36,589,44],"15625":[589,36,589,44],"15633":[590,24,590,28],"15641":[590,24,590,28],"15649":[590,13,590,29],"15657":[591,13,591,29],"15665":[591,30,591,34],"15673":[591,13,591,35],"15681":[591,13,591,36],"15689":[592,20,592,25],"15697":[592,20,592,25],"15705":[592,13,592,26],"15713":[579,15,594,6],"15721":[579,15,594,6],"15729":[579,15,594,6],"15737":[579,15,594,6],"15745":[579,15,594,6],"15753":[579,15,594,6],"15761":[579,5,594,7],"15763":[579,5,579,14],"15769":[579,5,594,8],"15777":[578,28,595,2],"15785":[578,28,595,2],"15793":[578,28,595,2],"15801":[578,28,595,2],"15809":[578,28,595,2],"15817":[578,1,595,2],"15825":[578,1,595,3],"15833":[596,1,596,7],"15841":[596,20,596,29],"15849":[597,15,597,19],"15857":[598,14,598,19],"15865":[596,31,599,2],"15873":[596,1,599,3],"15875":[596,1,596,19],"15881":[596,1,599,4],"15889":[600,1,600,7],"15897":[600,1,600,17],"15905":[601,9,601,13],"15913":[601,9,601,15],"15921":[601,9,601,21],"15929":[601,25,601,31],"15937":[601,25,601,36],"15945":[602,15,602,25],"15953":[603,22,603,90],"15961":[604,21,604,25],"15969":[602,33,605,10],"15977":[602,15,605,11],"15979":[602,15,602,32],"15985":[602,15,605,11],"15993":[602,9,605,12],"16001":[606,9,606,10],"16009":[606,22,606,36],"16017":[607,9,607,13],"16025":[607,9,607,15],"16033":[607,9,607,23],"16041":[607,45,607,63],"16049":[607,64,607,65],"16057":[607,64,607,70],"16065":[607,72,607,73],"16073":[607,72,607,78],"16081":[607,41,607,79],"16089":[607,9,607,79],"16097":[607,9,607,80],"16105":[608,23,608,24],"16113":[608,28,608,36],"16121":[609,9,609,13],"16129":[609,9,609,15],"16137":[609,9,609,23],"16145":[609,45,609,63],"16153":[609,64,609,65],"16161":[609,41,609,66],"16169":[609,9,609,66],"16177":[609,9,609,67],"16185":[610,16,610,17],"16193":[610,29,610,47],"16201":[611,9,611,13],"16209":[611,9,611,15],"16217":[611,9,611,23],"16225":[611,41,611,42],"16233":[611,9,611,42],"16241":[611,9,611,43],"16249":[613,12,613,16],"16257":[613,12,613,16],"16265":[613,5,613,17],"16273":[600,38,614,2],"16281":[600,38,614,2],"16289":[600,38,614,2],"16297":[600,38,614,2],"16305":[600,1,614,2],"16313":[600,1,614,3],"16321":[615,1,615,7],"16329":[615,20,615,39],"16337":[616,15,616,20],"16345":[617,14,617,19],"16353":[618,15,618,21],"16361":[618,14,618,22],"16369":[615,41,619,2],"16377":[615,1,619,3],"16379":[615,1,615,19],"16385":[615,1,619,4],"16393":[620,1,620,7],"16401":[620,1,620,17],"16409":[621,16,621,20],"16417":[621,16,621,20],"16425":[621,16,621,20],"16433":[622,9,622,13],"16441":[622,9,622,15],"16449":[622,9,622,23],"16457":[622,9,622,32],"16465":[623,15,623,25],"16473":[624,22,624,68],"16481":[625,21,625,25],"16489":[623,33,626,10],"16497":[623,15,626,11],"16499":[623,15,623,32],"16505":[623,15,626,11],"16513":[623,9,626,12],"16521":[627,16,627,24],"16529":[627,28,627,38],"16537":[628,16,628,23],"16545":[628,24,628,28],"16553":[628,30,628,38],"16561":[628,16,628,39],"16569":[628,16,628,39],"16577":[628,9,628,40],"16585":[629,16,629,20],"16593":[629,16,629,22],"16601":[630,9,630,16],"16609":[630,17,630,21],"16617":[631,17,631,20],"16625":[632,24,632,30],"16633":[632,31,632,34],"16641":[632,24,632,35],"16649":[632,24,632,35],"16657":[632,17,632,36],"16665":[633,13,633,20],"16673":[633,21,633,22],"16681":[633,13,633,23],"16689":[633,13,633,24],"16697":[630,23,634,10],"16705":[630,23,634,10],"16713":[630,23,634,10],"16721":[630,23,634,10],"16729":[630,23,634,10],"16737":[630,9,634,11],"16745":[630,9,634,12],"16753":[629,38,635,6],"16761":[629,38,635,6],"16769":[629,38,635,6],"16777":[629,38,635,6],"16785":[629,38,635,6],"16793":[629,12,635,7],"16795":[629,16,629,37],"16801":[629,12,635,7],"16809":[629,5,635,8],"16817":[620,28,636,2],"16825":[620,28,636,2],"16833":[620,28,636,2],"16841":[620,28,636,2],"16849":[620,28,636,2],"16857":[620,1,636,2],"16865":[620,1,636,3],"16873":[638,17,638,19],"16881":[638,17,638,19],"16889":[638,17,638,19],"16897":[639,5,639,9],"16905":[639,5,639,18],"16907":[639,5,639,16],"16913":[639,5,639,19],"16921":[640,5,640,9],"16929":[640,5,640,11],"16937":[640,20,640,26],"16945":[640,20,640,31],"16953":[640,5,640,31],"16961":[640,5,640,32],"16969":[642,9,642,13],"16977":[643,17,643,20],"16985":[644,24,644,38],"16993":[644,39,644,47],"17001":[644,49,644,52],"17009":[644,24,644,53],"17017":[644,24,644,53],"17025":[644,17,644,54],"17033":[645,17,645,20],"17041":[645,24,645,28],"17049":[646,17,646,21],"17057":[646,17,646,23],"17065":[646,32,646,38],"17073":[646,32,646,45],"17081":[646,17,646,45],"17089":[646,17,646,46],"17097":[647,24,647,38],"17105":[647,39,647,47],"17113":[647,49,647,53],"17121":[647,55,647,60],"17129":[647,24,647,61],"17137":[647,24,647,61],"17145":[647,17,647,62],"17153":[649,13,649,18],"17161":[649,24,649,27],"17169":[649,13,649,28],"17171":[649,13,649,23],"17177":[649,13,649,29],"17185":[650,17,650,21],"17193":[650,17,650,37],"17195":[650,17,650,35],"17201":[650,40,650,41],"17209":[651,28,651,32],"17217":[651,55,651,59],"17225":[651,55,651,75],"17227":[651,55,651,73],"17233":[651,28,651,76],"17235":[651,28,651,54],"17241":[651,28,651,76],"17249":[651,28,651,76],"17257":[652,21,652,25],"17265":[652,21,652,27],"17273":[652,21,652,38],"17281":[652,49,652,53],"17289":[652,49,652,55],"17297":[652,49,652,66],"17305":[652,49,652,70],"17313":[652,74,652,84],"17321":[653,28,653,32],"17329":[653,37,653,41],"17337":[653,37,653,43],"17345":[653,37,653,54],"17353":[653,37,653,58],"17361":[653,28,653,59],"17363":[653,28,653,36],"17369":[653,28,653,59],"17377":[653,21,653,60],"17385":[655,25,655,30],"17393":[655,38,655,42],"17401":[655,25,655,43],"17403":[655,25,655,37],"17409":[655,25,655,43],"17417":[655,17,655,44],"17425":[657,13,657,22],"17433":[657,13,657,24],"17441":[657,13,657,25],"17449":[642,20,658,10],"17457":[642,20,658,10],"17465":[642,20,658,10],"17473":[642,20,658,10],"17481":[642,20,658,10],"17489":[642,20,658,10],"17497":[642,9,658,11],"17499":[642,9,642,19],"17505":[642,9,658,12],"17513":[641,21,659,6],"17521":[641,21,659,6],"17529":[641,21,659,6],"17537":[641,21,659,6],"17545":[641,21,659,6],"17553":[660,5,660,14],"17561":[660,5,660,16],"17569":[660,5,660,17],"17577":[637,15,661,2],"17585":[637,15,661,2],"17593":[637,15,661,2],"17601":[637,15,661,2],"17609":[637,15,661,2],"17617":[637,15,661,2],"17625":[637,15,661,2],"17633":[637,15,661,2],"17641":[637,15,661,2],"17649":[662,1,662,7],"17657":[662,20,662,29],"17665":[663,15,663,19],"17673":[664,14,664,18],"17681":[662,31,665,2],"17689":[662,1,665,3],"17691":[662,1,662,19],"17697":[662,1,665,4],"17705":[666,1,666,7],"17713":[666,1,666,17],"17721":[667,16,667,20],"17729":[667,16,667,20],"17737":[667,16,667,20],"17745":[668,9,668,13],"17753":[668,9,668,15],"17761":[668,9,668,19],"17769":[668,9,668,25],"17777":[668,29,668,33],"17785":[669,15,669,25],"17793":[670,22,670,64],"17801":[671,21,671,25],"17809":[669,33,672,10],"17817":[669,15,672,11],"17819":[669,15,669,32],"17825":[669,15,672,11],"17833":[669,9,672,12],"17841":[673,16,673,20],"17849":[673,24,673,34],"17857":[674,20,674,24],"17865":[674,20,674,24],"17873":[674,33,674,35],"17881":[674,33,674,35],"17889":[674,9,674,24],"17897":[674,9,674,36],"17905":[675,12,675,16],"17913":[675,20,675,22],"17921":[675,12,675,22],"17929":[675,5,675,23],"17937":[676,16,676,24],"17945":[676,28,676,38],"17953":[677,16,677,21],"17961":[677,22,677,26],"17969":[677,28,677,42],"17977":[677,44,677,48],"17985":[677,50,677,58],"17993":[677,16,677,59],"18001":[677,16,677,59],"18009":[677,9,677,60],"18017":[678,16,678,20],"18025":[678,16,678,22],"18033":[679,9,679,14],"18041":[679,15,679,19],"18049":[679,21,679,35],"18057":[679,37,679,41],"18065":[680,17,680,20],"18073":[681,24,681,30],"18081":[681,31,681,34],"18089":[681,24,681,35],"18097":[681,24,681,35],"18105":[681,17,681,36],"18113":[682,13,682,20],"18121":[682,21,682,22],"18129":[682,13,682,23],"18137":[682,13,682,24],"18145":[679,43,683,10],"18153":[679,43,683,10],"18161":[679,43,683,10],"18169":[679,43,683,10],"18177":[679,43,683,10],"18185":[679,9,683,11],"18193":[679,9,683,12],"18201":[678,38,684,6],"18209":[678,38,684,6],"18217":[678,38,684,6],"18225":[678,38,684,6],"18233":[678,38,684,6],"18241":[678,12,684,7],"18243":[678,16,678,37],"18249":[678,12,684,7],"18257":[678,5,684,8],"18265":[666,26,685,2],"18273":[666,26,685,2],"18281":[666,26,685,2],"18289":[666,26,685,2],"18297":[666,26,685,2],"18305":[666,26,685,2],"18313":[666,26,685,2],"18321":[666,1,685,2],"18329":[666,1,685,3],"18337":[687,16,687,30],"18345":[687,34,687,44],"18353":[688,20,688,34],"18361":[688,20,688,34],"18369":[688,9,688,35],"18377":[689,26,689,30],"18385":[689,26,689,30],"18393":[689,9,689,31],"18401":[691,9,691,23],"18409":[692,20,692,24],"18417":[692,20,692,37],"18419":[692,20,692,35],"18425":[692,41,692,49],"18433":[693,13,693,17],"18441":[693,25,693,29],"18449":[693,25,693,42],"18451":[693,25,693,40],"18457":[693,13,693,42],"18465":[693,13,693,43],"18473":[694,20,694,24],"18481":[694,20,694,38],"18483":[694,20,694,36],"18489":[694,42,694,50],"18497":[695,13,695,17],"18505":[695,26,695,30],"18513":[695,26,695,44],"18515":[695,26,695,42],"18521":[695,13,695,44],"18529":[695,13,695,45],"18537":[697,21,697,25],"18545":[697,21,697,27],"18553":[697,21,697,30],"18561":[697,39,697,42],"18569":[697,21,697,43],"18571":[697,21,697,38],"18577":[697,21,697,43],"18585":[697,21,697,43],"18593":[699,18,699,22],"18601":[699,18,699,24],"18609":[699,18,699,27],"18617":[699,35,699,44],"18625":[699,47,699,48],"18633":[699,18,699,49],"18635":[699,18,699,34],"18641":[700,18,700,22],"18649":[700,18,700,24],"18657":[700,18,700,28],"18665":[700,18,700,34],"18673":[698,19,701,6],"18681":[698,19,701,6],"18689":[698,19,701,6],"18697":[702,16,702,20],"18705":[702,16,702,30],"18713":[702,34,702,42],"18721":[703,9,703,16],"18729":[703,29,703,33],"18737":[703,29,703,43],"18745":[703,9,703,43],"18753":[703,9,703,44],"18761":[704,16,704,20],"18769":[704,16,704,22],"18777":[704,16,704,26],"18785":[704,37,704,41],"18793":[704,37,704,43],"18801":[704,37,704,47],"18809":[704,37,704,57],"18817":[704,61,704,69],"18825":[705,9,705,16],"18833":[705,29,705,33],"18841":[705,29,705,35],"18849":[705,29,705,39],"18857":[705,29,705,49],"18865":[705,9,705,49],"18873":[705,9,705,50],"18881":[707,18,707,22],"18889":[707,18,707,24],"18897":[707,18,707,33],"18905":[707,44,707,48],"18913":[707,18,707,49],"18915":[707,18,707,43],"18921":[707,18,707,49],"18929":[707,18,707,49],"18937":[708,22,708,26],"18945":[708,22,708,28],"18953":[708,22,708,37],"18961":[708,52,708,56],"18969":[708,22,708,57],"18971":[708,22,708,51],"18977":[708,22,708,57],"18985":[708,22,708,57],"18993":[709,21,709,27],"19001":[709,21,709,42],"19003":[709,21,709,40],"19009":[709,21,709,42],"19017":[709,21,709,42],"19025":[710,9,710,13],"19033":[710,9,710,18],"19041":[711,9,711,16],"19049":[711,24,711,28],"19057":[711,24,711,33],"19065":[711,9,711,33],"19073":[711,9,711,34],"19081":[712,9,712,13],"19089":[712,9,712,19],"19097":[713,9,713,16],"19105":[713,25,713,29],"19113":[713,25,713,35],"19121":[713,9,713,35],"19129":[713,9,713,36],"19137":[714,9,714,13],"19145":[714,9,714,15],"19153":[714,9,714,23],"19161":[714,9,714,28],"19169":[715,9,715,16],"19177":[715,24,715,28],"19185":[715,24,715,30],"19193":[715,24,715,38],"19201":[715,24,715,43],"19209":[715,9,715,43],"19217":[715,9,715,44],"19225":[716,21,716,26],"19233":[716,27,716,31],"19241":[716,27,716,33],"19249":[716,27,716,38],"19257":[716,40,716,41],"19265":[716,42,716,51],"19273":[716,53,716,57],"19281":[716,53,716,59],"19289":[716,53,716,62],"19297":[716,70,716,71],"19305":[716,73,716,82],"19313":[716,53,716,83],"19315":[716,53,716,69],"19321":[716,40,716,84],"19329":[716,86,716,93],"19337":[717,23,717,24],"19345":[718,26,718,27],"19353":[719,20,719,25],"19361":[716,95,720,6],"19369":[716,17,720,7],"19377":[716,17,720,7],"19385":[716,17,720,7],"19393":[721,5,721,14],"19401":[721,24,721,29],"19409":[721,24,721,39],"19417":[722,13,722,16],"19425":[723,20,723,34],"19433":[723,35,723,43],"19441":[723,45,723,48],"19449":[723,20,723,49],"19457":[723,20,723,49],"19465":[723,13,723,50],"19473":[724,13,724,19],"19481":[724,13,724,29],"19489":[724,13,724,36],"19497":[724,40,724,41],"19505":[724,46,724,52],"19513":[724,46,724,62],"19521":[724,63,724,64],"19529":[724,46,724,65],"19537":[724,46,724,72],"19545":[724,76,724,82],"19553":[724,76,724,92],"19561":[724,93,724,94],"19569":[724,76,724,95],"19577":[724,76,724,99],"19585":[724,103,724,109],"19593":[724,103,724,119],"19601":[724,120,724,121],"19609":[724,103,724,122],"19617":[724,123,724,129],"19625":[724,103,724,130],"19633":[725,20,725,34],"19641":[725,35,725,43],"19649":[725,45,725,55],"19657":[725,63,725,69],"19665":[725,63,725,79],"19673":[725,80,725,81],"19681":[725,63,725,82],"19689":[725,45,725,83],"19691":[725,45,725,62],"19697":[725,20,725,84],"19705":[725,20,725,84],"19713":[725,13,725,85],"19721":[727,9,727,23],"19729":[727,24,727,32],"19737":[727,34,727,38],"19745":[727,40,727,46],"19753":[727,40,727,56],"19761":[727,57,727,58],"19769":[727,40,727,59],"19777":[727,40,727,61],"19785":[727,9,727,62],"19793":[727,9,727,63],"19801":[721,41,728,6],"19809":[721,41,728,6],"19817":[721,41,728,6],"19825":[721,41,728,6],"19833":[721,41,728,6],"19841":[721,5,728,7],"19843":[721,5,721,23],"19849":[721,5,728,8],"19857":[729,5,729,15],"19865":[729,22,729,27],"19873":[729,22,729,35],"19875":[729,22,729,33],"19881":[729,5,729,36],"19883":[729,5,729,21],"19889":[729,5,729,37],"19897":[686,13,730,2],"19905":[686,13,730,2],"19913":[686,13,730,2],"19921":[686,13,730,2],"19929":[686,13,730,2],"19937":[686,13,730,2],"19945":[686,13,730,2],"19953":[686,13,730,2],"19961":[686,13,730,2],"19969":[686,13,730,2],"19977":[686,13,730,2],"19985":[686,13,730,2],"19993":[686,13,730,2],"20001":[686,13,730,2],"20009":[686,13,730,2],"20017":[731,1,731,7],"20025":[731,20,731,27],"20033":[732,15,732,19],"20041":[733,14,733,18],"20049":[731,29,734,2],"20057":[731,1,734,3],"20059":[731,1,731,19],"20065":[731,1,734,4],"20073":[735,1,735,7],"20081":[735,1,735,17],"20089":[736,5,736,9],"20097":[736,5,736,11],"20105":[736,20,736,26],"20113":[736,20,736,33],"20121":[736,5,736,33],"20129":[736,5,736,34],"20137":[737,5,737,9],"20145":[737,5,737,16],"20147":[737,5,737,14],"20153":[737,5,737,17],"20161":[738,5,738,9],"20169":[738,15,738,22],"20177":[738,5,738,23],"20179":[738,5,738,14],"20185":[738,5,738,24],"20193":[739,16,739,24],"20201":[739,28,739,38],"20209":[740,16,740,30],"20217":[740,31,740,39],"20225":[740,41,740,45],"20233":[740,47,740,51],"20241":[740,16,740,52],"20249":[740,16,740,52],"20257":[740,9,740,53],"20265":[741,16,741,20],"20273":[741,16,741,22],"20281":[742,9,742,16],"20289":[742,9,742,18],"20297":[742,9,742,19],"20305":[741,38,743,6],"20313":[741,38,743,6],"20321":[741,38,743,6],"20329":[741,38,743,6],"20337":[741,38,743,6],"20345":[741,12,743,7],"20347":[741,16,741,37],"20353":[741,12,743,7],"20361":[741,5,743,8],"20369":[735,26,744,2],"20377":[735,26,744,2],"20385":[735,26,744,2],"20393":[735,26,744,2],"20401":[735,1,744,2],"20409":[735,1,744,3],"20417":[745,1,745,7],"20425":[745,20,745,27],"20433":[746,15,746,19],"20441":[747,14,747,18],"20449":[745,29,748,2],"20457":[745,1,748,3],"20459":[745,1,745,19],"20465":[745,1,748,4],"20473":[749,1,749,7],"20481":[749,1,749,17],"20489":[750,5,750,9],"20497":[750,5,750,21],"20505":[750,42,750,51],"20513":[750,35,750,53],"20521":[750,5,750,53],"20529":[750,5,750,54],"20537":[751,12,751,16],"20545":[751,12,751,16],"20553":[751,5,751,17],"20561":[749,24,752,2],"20569":[749,24,752,2],"20577":[749,24,752,2],"20585":[749,24,752,2],"20593":[749,1,752,2],"20601":[749,1,752,3],"20609":[753,1,753,7],"20617":[753,20,753,25],"20625":[754,15,754,20],"20633":[755,14,755,19],"20641":[756,15,756,21],"20649":[756,14,756,22],"20657":[753,27,757,2],"20665":[753,1,757,3],"20667":[753,1,753,19],"20673":[753,1,757,4],"20681":[758,1,758,7],"20689":[758,1,758,17],"20697":[759,12,759,16],"20705":[759,12,759,25],"20707":[759,12,759,23],"20713":[759,12,759,25],"20721":[759,5,759,26],"20729":[758,29,760,2],"20737":[758,29,760,2],"20745":[758,29,760,2],"20753":[758,1,760,2],"20761":[758,1,760,3],"20769":[761,1,761,7],"20777":[761,20,761,30],"20785":[762,15,762,20],"20793":[763,14,763,19],"20801":[764,15,764,22],"20809":[764,14,764,23],"20817":[761,32,765,2],"20825":[761,1,765,3],"20827":[761,1,761,19],"20833":[761,1,765,4],"20841":[766,1,766,7],"20849":[766,1,766,17],"20857":[767,5,767,9],"20865":[767,5,767,17],"20867":[767,5,767,15],"20873":[767,5,767,18],"20881":[768,5,768,9],"20889":[768,5,768,17],"20891":[768,5,768,15],"20897":[768,5,768,18],"20905":[769,9,769,12],"20913":[770,9,770,13],"20921":[770,19,770,26],"20929":[770,28,770,31],"20937":[770,9,770,32],"20939":[770,9,770,18],"20945":[770,9,770,33],"20953":[766,28,771,2],"20961":[766,28,771,2],"20969":[766,28,771,2],"20977":[766,28,771,2],"20985":[766,1,771,2],"20993":[766,1,771,3],"21001":[772,1,772,7],"21009":[772,20,772,29],"21017":[773,15,773,20],"21025":[774,14,774,19],"21033":[772,31,775,2],"21041":[772,1,775,3],"21043":[772,1,772,19],"21049":[772,1,775,4],"21057":[776,1,776,7],"21065":[776,1,776,17],"21073":[777,5,777,9],"21081":[777,5,777,11],"21089":[777,28,777,35],"21097":[777,39,777,41],"21105":[777,5,777,41],"21113":[777,5,777,42],"21121":[778,12,778,16],"21129":[778,12,778,16],"21137":[778,5,778,17],"21145":[776,27,779,2],"21153":[776,27,779,2],"21161":[776,27,779,2],"21169":[776,27,779,2],"21177":[776,1,779,2],"21185":[776,1,779,3],"21193":[780,1,780,7],"21201":[780,20,780,28],"21209":[781,15,781,20],"21217":[782,14,782,19],"21225":[783,15,783,21],"21233":[783,14,783,22],"21241":[780,30,784,2],"21249":[780,1,784,3],"21251":[780,1,780,19],"21257":[780,1,784,4],"21265":[785,1,785,7],"21273":[785,1,785,17],"21281":[786,16,786,20],"21289":[786,16,786,20],"21297":[786,16,786,20],"21305":[787,5,787,9],"21313":[787,5,787,11],"21321":[787,5,787,15],"21329":[787,26,787,30],"21337":[787,5,787,30],"21345":[787,5,787,31],"21353":[788,9,788,13],"21361":[788,9,788,15],"21369":[788,9,788,19],"21377":[788,9,788,31],"21385":[789,16,789,20],"21393":[789,16,789,22],"21401":[789,16,789,26],"21409":[789,27,789,40],"21417":[789,9,789,42],"21425":[791,16,791,24],"21433":[791,28,791,38],"21441":[792,16,792,20],"21449":[792,27,792,35],"21457":[792,16,792,36],"21459":[792,16,792,26],"21465":[792,16,792,36],"21473":[792,9,792,37],"21481":[793,16,793,20],"21489":[793,16,793,22],"21497":[794,9,794,13],"21505":[795,17,795,20],"21513":[796,24,796,30],"21521":[796,31,796,34],"21529":[796,24,796,35],"21537":[796,24,796,35],"21545":[796,17,796,36],"21553":[797,13,797,20],"21561":[797,21,797,22],"21569":[797,13,797,23],"21577":[797,13,797,24],"21585":[794,20,798,10],"21593":[794,20,798,10],"21601":[794,20,798,10],"21609":[794,20,798,10],"21617":[794,20,798,10],"21625":[794,9,798,11],"21627":[794,9,794,19],"21633":[794,9,798,12],"21641":[793,38,799,6],"21649":[793,38,799,6],"21657":[793,38,799,6],"21665":[793,38,799,6],"21673":[793,38,799,6],"21681":[793,12,799,7],"21683":[793,16,793,37],"21689":[793,12,799,7],"21697":[793,5,799,8],"21705":[785,28,800,2],"21713":[785,28,800,2],"21721":[785,28,800,2],"21729":[785,28,800,2],"21737":[785,28,800,2],"21745":[785,1,800,2],"21753":[785,1,800,3],"21761":[801,1,801,7],"21769":[801,20,801,29],"21777":[802,15,802,19],"21785":[803,14,803,18],"21793":[801,31,804,2],"21801":[801,1,804,3],"21803":[801,1,801,19],"21809":[801,1,804,4],"21817":[805,1,805,7],"21825":[805,1,805,17],"21833":[806,16,806,20],"21841":[806,16,806,20],"21849":[806,16,806,20],"21857":[807,9,807,13],"21865":[807,9,807,15],"21873":[807,9,807,21],"21881":[807,25,807,31],"21889":[807,25,807,38],"21897":[807,42,807,46],"21905":[807,42,807,55],"21907":[807,42,807,53],"21913":[808,16,808,20],"21921":[808,26,808,30],"21929":[808,16,808,31],"21931":[808,16,808,25],"21937":[808,16,808,31],"21945":[808,9,808,32],"21953":[810,5,810,9],"21961":[811,13,811,16],"21969":[812,18,812,22],"21977":[812,18,812,31],"21979":[812,18,812,29],"21985":[813,17,813,21],"21993":[813,17,813,29],"21995":[813,17,813,27],"22001":[813,17,813,30],"22009":[814,17,814,21],"22017":[814,32,814,39],"22025":[814,17,814,40],"22027":[814,17,814,31],"22033":[814,44,814,48],"22041":[814,59,814,66],"22049":[814,44,814,67],"22051":[814,44,814,58],"22057":[814,44,814,74],"22065":[814,77,814,78],"22073":[815,17,815,21],"22081":[815,27,815,34],"22089":[815,36,815,39],"22097":[815,17,815,40],"22099":[815,17,815,26],"22105":[815,17,815,41],"22113":[817,13,817,17],"22121":[817,23,817,28],"22129":[817,13,817,29],"22131":[817,13,817,22],"22137":[817,13,817,30],"22145":[818,20,818,24],"22153":[818,30,818,38],"22161":[818,20,818,39],"22163":[818,20,818,29],"22169":[818,20,818,39],"22177":[818,13,818,40],"22185":[820,20,820,24],"22193":[820,20,820,26],"22201":[820,20,820,40],"22209":[820,20,820,50],"22217":[820,54,820,64],"22225":[820,68,820,74],"22233":[820,78,820,82],"22241":[821,20,821,24],"22249":[821,30,821,34],"22257":[821,30,821,36],"22265":[821,30,821,50],"22273":[821,61,821,67],"22281":[821,30,821,68],"22283":[821,30,821,60],"22289":[821,20,821,69],"22291":[821,20,821,29],"22297":[821,20,821,69],"22305":[821,13,821,70],"22313":[823,13,823,17],"22321":[823,13,823,29],"22329":[823,13,823,40],"22337":[823,51,823,55],"22345":[823,51,823,67],"22353":[823,51,823,78],"22361":[823,51,823,82],"22369":[823,86,823,96],"22377":[823,100,823,106],"22385":[823,110,823,114],"22393":[824,20,824,24],"22401":[824,30,824,34],"22409":[824,30,824,46],"22417":[824,30,824,57],"22425":[824,62,824,68],"22433":[824,30,824,69],"22435":[824,30,824,61],"22441":[824,20,824,70],"22443":[824,20,824,29],"22449":[824,20,824,70],"22457":[824,13,824,71],"22465":[826,9,826,13],"22473":[826,19,826,25],"22481":[826,9,826,26],"22483":[826,9,826,18],"22489":[826,9,826,27],"22497":[810,21,827,6],"22505":[810,21,827,6],"22513":[810,21,827,6],"22521":[810,21,827,6],"22529":[810,21,827,6],"22537":[810,5,827,7],"22539":[810,5,810,20],"22545":[810,5,827,8],"22553":[805,26,828,2],"22561":[805,26,828,2],"22569":[805,26,828,2],"22577":[805,26,828,2],"22585":[805,26,828,2],"22593":[805,1,828,2],"22601":[805,1,828,3],"22609":[829,1,829,7],"22617":[829,23,829,29],"22625":[829,23,829,39],"22633":[829,41,829,57],"22641":[830,17,830,21],"22649":[832,14,832,18],"22657":[832,23,832,27],"22665":[832,23,832,29],"22673":[833,20,833,24],"22681":[833,20,833,24],"22689":[833,13,833,25],"22697":[835,16,835,20],"22705":[835,16,835,22],"22713":[835,16,835,30],"22721":[835,16,835,45],"22729":[835,16,835,45],"22737":[835,9,835,46],"22745":[831,10,836,6],"22753":[831,10,836,6],"22761":[831,10,836,6],"22769":[829,59,837,2],"22777":[829,1,837,3],"22779":[829,1,829,22],"22785":[829,1,837,4],"22793":[838,1,838,7],"22801":[838,23,838,29],"22809":[838,23,838,39],"22817":[838,41,838,52],"22825":[839,17,839,21],"22833":[841,14,841,18],"22841":[841,23,841,27],"22849":[841,23,841,29],"22857":[842,20,842,24],"22865":[842,20,842,24],"22873":[842,13,842,25],"22881":[844,18,844,22],"22889":[844,18,844,24],"22897":[844,18,844,27],"22905":[844,31,844,33],"22913":[844,18,844,33],"22921":[844,18,844,33],"22929":[845,24,845,26],"22937":[845,35,845,38],"22945":[845,24,845,39],"22947":[845,24,845,34],"22953":[845,24,845,39],"22961":[845,24,845,39],"22969":[846,13,846,21],"22977":[846,24,846,25],"22985":[848,27,848,31],"22993":[848,27,848,33],"23001":[848,27,848,36],"23009":[849,29,849,31],"23017":[847,20,850,14],"23025":[847,20,850,14],"23033":[847,13,850,15],"23041":[853,23,853,25],"23049":[853,33,853,34],"23057":[853,36,853,44],"23065":[853,23,853,45],"23067":[853,23,853,32],"23073":[854,25,854,27],"23081":[854,35,854,43],"23089":[854,46,854,47],"23097":[854,25,854,48],"23099":[854,25,854,34],"23105":[852,16,855,10],"23113":[852,16,855,10],"23121":[852,9,855,11],"23129":[840,10,856,6],"23137":[840,10,856,6],"23145":[840,10,856,6],"23153":[840,10,856,6],"23161":[840,10,856,6],"23169":[838,54,857,2],"23177":[838,1,857,3],"23179":[838,1,838,22],"23185":[838,1,857,4],"23193":[858,1,858,7],"23201":[858,15,858,16],"23209":[858,1,858,16],"23217":[858,1,858,17],"23225":[859,1,859,7],"23233":[859,15,859,16],"23241":[859,1,859,16],"23249":[859,1,859,17],"23257":[860,1,860,7],"23265":[860,17,860,18],"23273":[860,1,860,18],"23281":[860,1,860,19],"23289":[861,1,861,7],"23297":[861,19,861,20],"23305":[861,1,861,20],"23313":[861,1,861,21],"23321":[862,1,862,7],"23329":[862,18,862,24],"23337":[862,1,862,24],"23345":[862,1,862,25],"23353":[1,1,862,25],"23361":[1,1,862,25],"23369":[1,1,862,25],"23377":[1,1,862,25],"23385":[1,1,862,25],"23393":[1,1,862,25],"23401":[1,1,862,25],"23409":[1,1,862,25],"23417":[1,1,862,25],"23425":[1,1,862,25],"23433":[1,1,862,25],"23441":[1,1,862,25],"23449":[1,1,862,25],"23457":[1,1,862,25],"23465":[1,1,862,25],"23473":[1,1,862,25],"23481":[1,1,862,25],"23489":[1,1,862,25],"23497":[1,1,862,25],"23505":[1,1,862,25],"23513":[1,1,862,25],"23521":[1,1,862,25],"23529":[1,1,862,25],"23537":[1,1,862,25],"23545":[1,1,862,25],"23553":[1,1,862,25],"23561":[1,1,862,25],"23569":[1,1,862,25],"23577":[1,1,862,25],"23585":[27,26,27,111],"23593":[26,5,28,6],"23601":[17,14,47,2],"23609":[17,14,47,2],"23617":[61,17,62,50],"23625":[60,37,65,14],"23633":[60,37,65,14],"23641":[57,9,66,10],"23649":[56,5,67,6],"23657":[73,17,74,43],"23665":[75,17,76,40],"23673":[77,17,78,43],"23681":[72,30,81,14],"23689":[72,30,81,14],"23697":[69,9,82,10],"23705":[68,38,83,6],"23713":[68,38,83,6],"23721":[54,28,84,2],"23729":[54,28,84,2],"23737":[92,9,96,10],"23745":[91,5,98,6],"23753":[101,9,105,10],"23761":[107,13,108,36],"23769":[106,26,110,10],"23777":[106,26,110,10],"23785":[100,38,111,6],"23793":[100,38,111,6],"23801":[89,25,112,2],"23809":[89,25,112,2],"23817":[118,5,122,12],"23825":[117,27,125,2],"23833":[117,27,125,2],"23841":[132,5,136,12],"23849":[131,28,139,2],"23857":[131,28,139,2],"23865":[146,5,150,12],"23873":[145,25,153,2],"23881":[145,25,153,2],"23889":[160,5,164,12],"23897":[159,24,167,2],"23905":[159,24,167,2],"23913":[174,5,178,12],"23921":[173,24,181,2],"23929":[173,24,181,2],"23937":[188,5,192,12],"23945":[187,30,195,2],"23953":[187,30,195,2],"23961":[202,5,206,12],"23969":[201,33,209,2],"23977":[201,33,209,2],"23985":[216,5,220,12],"23993":[215,29,223,2],"24001":[215,29,223,2],"24009":[230,5,234,12],"24017":[235,5,239,12],"24025":[241,5,242,47],"24033":[229,36,244,2],"24041":[229,36,244,2],"24049":[251,5,255,12],"24057":[256,5,260,12],"24065":[261,5,265,12],"24073":[250,34,268,2],"24081":[250,34,268,2],"24089":[275,5,279,12],"24097":[280,5,284,12],"24105":[287,5,288,45],"24113":[274,37,290,2],"24121":[274,37,290,2],"24129":[297,5,301,12],"24137":[296,28,304,2],"24145":[296,28,304,2],"24153":[311,5,315,12],"24161":[316,5,320,12],"24169":[310,35,323,2],"24177":[310,35,323,2],"24185":[330,5,334,12],"24193":[335,5,339,12],"24201":[329,30,342,2],"24209":[329,30,342,2],"24217":[355,5,359,12],"24225":[354,28,362,2],"24233":[354,28,362,2],"24241":[369,5,373,12],"24249":[374,5,378,12],"24257":[390,20,394,14],"24265":[388,20,394,14],"24273":[386,13,394,14],"24281":[381,35,396,10],"24289":[381,35,396,10],"24297":[380,5,397,6],"24305":[398,5,403,6],"24313":[368,25,407,2],"24321":[368,25,407,2],"24329":[414,5,418,12],"24337":[419,5,423,12],"24345":[424,5,428,12],"24353":[413,30,432,2],"24361":[413,30,432,2],"24369":[439,5,443,12],"24377":[444,5,448,12],"24385":[449,5,453,12],"24393":[438,26,457,2],"24401":[438,26,457,2],"24409":[464,5,468,12],"24417":[469,5,473,12],"24425":[474,5,478,12],"24433":[463,25,482,2],"24441":[463,25,482,2],"24449":[490,5,494,13],"24457":[495,5,501,6],"24465":[503,9,504,34],"24473":[508,17,509,35],"24481":[507,31,511,14],"24489":[507,31,511,14],"24497":[505,9,512,10],"24505":[514,9,515,50],"24513":[502,16,517,6],"24521":[502,16,517,6],"24529":[489,18,518,2],"24537":[489,18,518,2],"24545":[524,5,525,16],"24553":[523,12,528,2],"24561":[523,12,528,2],"24569":[534,25,538,2],"24577":[534,25,538,2],"24585":[544,5,548,12],"24593":[549,5,550,16],"24601":[551,5,556,6],"24609":[557,5,558,36],"24617":[561,9,562,32],"24625":[566,13,567,54],"24633":[568,13,571,14],"24641":[572,13,573,24],"24649":[565,19,575,10],"24657":[565,19,575,10],"24665":[560,5,576,6],"24673":[543,13,577,2],"24681":[543,13,577,2],"24689":[580,9,583,10],"24697":[584,9,587,10],"24705":[588,9,593,10],"24713":[579,15,594,6],"24721":[579,15,594,6],"24729":[578,28,595,2],"24737":[578,28,595,2],"24745":[601,5,605,12],"24753":[610,12,612,6],"24761":[608,12,612,6],"24769":[606,5,612,6],"24777":[600,38,614,2],"24785":[600,38,614,2],"24793":[622,5,626,12],"24801":[627,5,628,40],"24809":[631,13,632,36],"24817":[630,23,634,10],"24825":[630,23,634,10],"24833":[629,38,635,6],"24841":[629,38,635,6],"24849":[620,28,636,2],"24857":[620,28,636,2],"24865":[643,13,644,54],"24873":[645,13,648,14],"24881":[652,17,654,18],"24889":[650,13,656,14],"24897":[642,20,658,10],"24905":[642,20,658,10],"24913":[641,21,659,6],"24921":[641,21,659,6],"24929":[637,15,661,2],"24937":[637,15,661,2],"24945":[668,5,672,12],"24953":[673,5,674,36],"24961":[676,5,677,60],"24969":[680,13,681,36],"24977":[679,43,683,10],"24985":[679,43,683,10],"24993":[678,38,684,6],"25001":[678,38,684,6],"25009":[666,26,685,2],"25017":[666,26,685,2],"25025":[687,5,690,6],"25033":[692,9,693,43],"25041":[694,9,695,45],"25049":[691,5,696,6],"25057":[704,12,706,6],"25065":[702,5,706,6],"25073":[710,5,711,34],"25081":[712,5,713,36],"25089":[714,5,715,44],"25097":[722,9,723,50],"25105":[724,9,726,10],"25113":[721,41,728,6],"25121":[721,41,728,6],"25129":[686,13,730,2],"25137":[686,13,730,2],"25145":[739,5,740,53],"25153":[741,38,743,6],"25161":[741,38,743,6],"25169":[735,26,744,2],"25177":[735,26,744,2],"25185":[749,24,752,2],"25193":[749,24,752,2],"25201":[758,29,760,2],"25209":[758,29,760,2],"25217":[769,5,770,33],"25225":[766,28,771,2],"25233":[766,28,771,2],"25241":[776,27,779,2],"25249":[776,27,779,2],"25257":[788,5,790,6],"25265":[791,5,792,37],"25273":[795,13,796,36],"25281":[794,20,798,10],"25289":[794,20,798,10],"25297":[793,38,799,6],"25305":[793,38,799,6],"25313":[785,28,800,2],"25321":[785,28,800,2],"25329":[807,5,809,6],"25337":[812,13,813,30],"25345":[814,13,816,14],"25353":[811,9,819,10],"25361":[820,9,822,10],"25369":[823,9,825,10],"25377":[810,21,827,6],"25385":[810,21,827,6],"25393":[805,26,828,2],"25401":[805,26,828,2],"25409":[832,9,834,10],"25417":[831,10,836,6],"25425":[831,10,836,6],"25433":[841,9,843,10],"25441":[846,9,851,10],"25449":[840,10,856,6],"25457":[840,10,856,6],"25465":[1,1,862,25],"25473":[1,1,862,25],"nBranches":356,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb/lib/cursor.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb/lib/cursor_jalangi_.js","code":"\"use strict\";\n\nvar inherits = require('util').inherits\n  , f = require('util').format\n  , toError = require('./utils').toError\n  , getSingleProperty = require('./utils').getSingleProperty\n  , formattedOrderClause = require('./utils').formattedOrderClause\n  , handleCallback = require('./utils').handleCallback\n  , Logger = require('mongodb-core').Logger\n  , EventEmitter = require('events').EventEmitter\n  , ReadPreference = require('./read_preference')\n  , MongoError = require('mongodb-core').MongoError\n  , Readable = require('stream').Readable || require('readable-stream').Readable\n  , Define = require('./metadata')\n  , CoreCursor = require('mongodb-core').Cursor\n  , Map = require('mongodb-core').BSON.Map\n  , Query = require('mongodb-core').Query\n  , CoreReadPreference = require('mongodb-core').ReadPreference;\n\n/**\n * @fileOverview The **Cursor** class is an internal class that embodies a cursor on MongoDB\n * allowing for iteration over the results returned from the underlying query. It supports\n * one by one document iteration, conversion to an array or can be iterated as a Node 0.10.X\n * or higher stream\n *\n * **CURSORS Cannot directly be instantiated**\n * @example\n * var MongoClient = require('mongodb').MongoClient,\n *   test = require('assert');\n * // Connection url\n * var url = 'mongodb://localhost:27017/test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, db) {\n *   // Create a collection we want to drop later\n *   var col = db.collection('createIndexExample1');\n *   // Insert a bunch of documents\n *   col.insert([{a:1, b:1}\n *     , {a:2, b:2}, {a:3, b:3}\n *     , {a:4, b:4}], {w:1}, function(err, result) {\n *     test.equal(null, err);\n *\n *     // Show that duplicate records got dropped\n *     col.find({}).toArray(function(err, items) {\n *       test.equal(null, err);\n *       test.equal(4, items.length);\n *       db.close();\n *     });\n *   });\n * });\n */\n\n/**\n * Namespace provided by the mongodb-core and node.js\n * @external CoreCursor\n * @external Readable\n */\n\n// Flags allowed for cursor\nvar flags = ['tailable', 'oplogReplay', 'noCursorTimeout', 'awaitData', 'exhaust', 'partial'];\nvar fields = ['numberOfRetries', 'tailableRetryInterval'];\n\n/**\n * Creates a new Cursor instance (INTERNAL TYPE, do not instantiate directly)\n * @class Cursor\n * @extends external:CoreCursor\n * @extends external:Readable\n * @property {string} sortValue Cursor query sort setting.\n * @property {boolean} timeout Is Cursor able to time out.\n * @property {ReadPreference} readPreference Get cursor ReadPreference.\n * @fires Cursor#data\n * @fires Cursor#end\n * @fires Cursor#close\n * @fires Cursor#readable\n * @return {Cursor} a Cursor instance.\n * @example\n * Cursor cursor options.\n *\n * collection.find({}).project({a:1})                             // Create a projection of field a\n * collection.find({}).skip(1).limit(10)                          // Skip 1 and limit 10\n * collection.find({}).batchSize(5)                               // Set batchSize on cursor to 5\n * collection.find({}).filter({a:1})                              // Set query on the cursor\n * collection.find({}).comment('add a comment')                   // Add a comment to the query, allowing to correlate queries\n * collection.find({}).addCursorFlag('tailable', true)            // Set cursor as tailable\n * collection.find({}).addCursorFlag('oplogReplay', true)         // Set cursor as oplogReplay\n * collection.find({}).addCursorFlag('noCursorTimeout', true)     // Set cursor as noCursorTimeout\n * collection.find({}).addCursorFlag('awaitData', true)           // Set cursor as awaitData\n * collection.find({}).addCursorFlag('exhaust', true)             // Set cursor as exhaust\n * collection.find({}).addCursorFlag('partial', true)             // Set cursor as partial\n * collection.find({}).addQueryModifier('$orderby', {a:1})        // Set $orderby {a:1}\n * collection.find({}).max(10)                                    // Set the cursor maxScan\n * collection.find({}).maxScan(10)                                // Set the cursor maxScan\n * collection.find({}).maxTimeMS(1000)                            // Set the cursor maxTimeMS\n * collection.find({}).min(100)                                   // Set the cursor min\n * collection.find({}).returnKey(10)                              // Set the cursor returnKey\n * collection.find({}).setReadPreference(ReadPreference.PRIMARY)  // Set the cursor readPreference\n * collection.find({}).showRecordId(true)                         // Set the cursor showRecordId\n * collection.find({}).snapshot(true)                             // Set the cursor snapshot\n * collection.find({}).sort([['a', 1]])                           // Sets the sort order of the cursor query\n * collection.find({}).hint('a_1')                                // Set the cursor hint\n *\n * All options are chainable, so one can do the following.\n *\n * collection.find({}).maxTimeMS(1000).maxScan(100).skip(1).toArray(..)\n */\nvar Cursor = function(bson, ns, cmd, options, topology, topologyOptions) {\n  CoreCursor.apply(this, Array.prototype.slice.call(arguments, 0));\n  var self = this;\n  var state = Cursor.INIT;\n  var streamOptions = {};\n\n  // Tailable cursor options\n  var numberOfRetries = options.numberOfRetries || 5;\n  var tailableRetryInterval = options.tailableRetryInterval || 500;\n  var currentNumberOfRetries = numberOfRetries;\n\n  // Get the promiseLibrary\n  var promiseLibrary = options.promiseLibrary;\n\n  // No promise library selected fall back\n  if(!promiseLibrary) {\n    promiseLibrary = typeof global.Promise == 'function' ?\n      global.Promise : require('es6-promise').Promise;\n  }\n\n  // Set up\n  Readable.call(this, {objectMode: true});\n\n  // Internal cursor state\n  this.s = {\n    // Tailable cursor options\n      numberOfRetries: numberOfRetries\n    , tailableRetryInterval: tailableRetryInterval\n    , currentNumberOfRetries: currentNumberOfRetries\n    // State\n    , state: state\n    // Stream options\n    , streamOptions: streamOptions\n    // BSON\n    , bson: bson\n    // Namespace\n    , ns: ns\n    // Command\n    , cmd: cmd\n    // Options\n    , options: options\n    // Topology\n    , topology: topology\n    // Topology options\n    , topologyOptions: topologyOptions\n    // Promise library\n    , promiseLibrary: promiseLibrary\n    // Current doc\n    , currentDoc: null\n  }\n\n  // Legacy fields\n  this.timeout = self.s.options.noCursorTimeout == true;\n  this.sortValue = self.s.cmd.sort;\n}\n\n/**\n * Cursor stream data event, fired for each document in the cursor.\n *\n * @event Cursor#data\n * @type {object}\n */\n\n/**\n * Cursor stream end event\n *\n * @event Cursor#end\n * @type {null}\n */\n\n/**\n * Cursor stream close event\n *\n * @event Cursor#close\n * @type {null}\n */\n\n/**\n * Cursor stream readable event\n *\n * @event Cursor#readable\n * @type {null}\n */\n\n// Inherit from Readable\ninherits(Cursor, Readable);\n\n// Map core cursor _next method so we can apply mapping\nCoreCursor.prototype._next = CoreCursor.prototype.next;\n\nfor(var name in CoreCursor.prototype) {\n  Cursor.prototype[name] = CoreCursor.prototype[name];\n}\n\nvar define = Cursor.define = new Define('Cursor', Cursor, true);\n\n/**\n * Check if there is any document still available in the cursor\n * @method\n * @param {Cursor~resultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.hasNext = function(callback) {\n  var self = this;\n\n  // Execute using callback\n  if(typeof callback == 'function') {\n    if(self.s.currentDoc){\n      return callback(null, true);\n    } else {\n      return nextObject(self, function(err, doc) {\n        if(!doc) return callback(null, false);\n        self.s.currentDoc = doc;\n        callback(null, true);\n      });\n    }\n  }\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    if(self.s.currentDoc){\n      resolve(true);\n    } else {\n      nextObject(self, function(err, doc) {\n        if(self.s.state == Cursor.CLOSED || self.isDead()) return resolve(false);\n        if(err) return reject(err);\n        if(!doc) return resolve(false);\n        self.s.currentDoc = doc;\n        resolve(true);\n      });\n    }\n  });\n}\n\ndefine.classMethod('hasNext', {callback: true, promise:true});\n\n/**\n * Get the next available document from the cursor, returns null if no more documents are available.\n * @method\n * @param {Cursor~resultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.next = function(callback) {\n  var self = this;\n\n  // Execute using callback\n  if(typeof callback == 'function') {\n    // Return the currentDoc if someone called hasNext first\n    if(self.s.currentDoc) {\n      var doc = self.s.currentDoc;\n      self.s.currentDoc = null;\n      return callback(null, doc);\n    }\n\n    // Return the next object\n    return nextObject(self, callback)\n  };\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    // Return the currentDoc if someone called hasNext first\n    if(self.s.currentDoc) {\n      var doc = self.s.currentDoc;\n      self.s.currentDoc = null;\n      return resolve(doc);\n    }\n\n    nextObject(self, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\ndefine.classMethod('next', {callback: true, promise:true});\n\n/**\n * Set the cursor query\n * @method\n * @param {object} filter The filter object used for the cursor.\n * @return {Cursor}\n */\nCursor.prototype.filter = function(filter) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  this.s.cmd.query = filter;\n  return this;\n}\n\ndefine.classMethod('filter', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Set the cursor maxScan\n * @method\n * @param {object} maxScan Constrains the query to only scan the specified number of documents when fulfilling the query\n * @return {Cursor}\n */\nCursor.prototype.maxScan = function(maxScan) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  this.s.cmd.maxScan = maxScan;\n  return this;\n}\n\ndefine.classMethod('maxScan', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Set the cursor hint\n * @method\n * @param {object} hint If specified, then the query system will only consider plans using the hinted index.\n * @return {Cursor}\n */\nCursor.prototype.hint = function(hint) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  this.s.cmd.hint = hint;\n  return this;\n}\n\ndefine.classMethod('hint', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Set the cursor min\n * @method\n * @param {object} min Specify a $min value to specify the inclusive lower bound for a specific index in order to constrain the results of find(). The $min specifies the lower bound for all keys of a specific index in order.\n * @return {Cursor}\n */\nCursor.prototype.min = function(min) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  this.s.cmd.min = min;\n  return this;\n}\n\ndefine.classMethod('min', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Set the cursor max\n * @method\n * @param {object} max Specify a $max value to specify the exclusive upper bound for a specific index in order to constrain the results of find(). The $max specifies the upper bound for all keys of a specific index in order.\n * @return {Cursor}\n */\nCursor.prototype.max = function(max) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  this.s.cmd.max = max;\n  return this;\n}\n\ndefine.classMethod('max', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Set the cursor returnKey\n * @method\n * @param {object} returnKey Only return the index field or fields for the results of the query. If $returnKey is set to true and the query does not use an index to perform the read operation, the returned documents will not contain any fields. Use one of the following forms:\n * @return {Cursor}\n */\nCursor.prototype.returnKey = function(value) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  this.s.cmd.returnKey = value;\n  return this;\n}\n\ndefine.classMethod('returnKey', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Set the cursor showRecordId\n * @method\n * @param {object} showRecordId The $showDiskLoc option has now been deprecated and replaced with the showRecordId field. $showDiskLoc will still be accepted for OP_QUERY stye find.\n * @return {Cursor}\n */\nCursor.prototype.showRecordId = function(value) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  this.s.cmd.showDiskLoc = value;\n  return this;\n}\n\ndefine.classMethod('showRecordId', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Set the cursor snapshot\n * @method\n * @param {object} snapshot The $snapshot operator prevents the cursor from returning a document more than once because an intervening write operation results in a move of the document.\n * @return {Cursor}\n */\nCursor.prototype.snapshot = function(value) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  this.s.cmd.snapshot = value;\n  return this;\n}\n\ndefine.classMethod('snapshot', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Set a node.js specific cursor option\n * @method\n * @param {string} field The cursor option to set ['numberOfRetries', 'tailableRetryInterval'].\n * @param {object} value The field value.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.setCursorOption = function(field, value) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  if(fields.indexOf(field) == -1) throw MongoError.create({message: f(\"option %s not a supported option %s\", field, fields), driver:true });\n  this.s[field] = value;\n  if(field == 'numberOfRetries')\n    this.s.currentNumberOfRetries = value;\n  return this;\n}\n\ndefine.classMethod('setCursorOption', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Add a cursor flag to the cursor\n * @method\n * @param {string} flag The flag to set, must be one of following ['tailable', 'oplogReplay', 'noCursorTimeout', 'awaitData', 'exhaust', 'partial'].\n * @param {boolean} value The flag boolean value.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.addCursorFlag = function(flag, value) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  if(flags.indexOf(flag) == -1) throw MongoError.create({message: f(\"flag %s not a supported flag %s\", flag, flags), driver:true });\n  if(typeof value != 'boolean') throw MongoError.create({message: f(\"flag %s must be a boolean value\", flag), driver:true});\n  this.s.cmd[flag] = value;\n  return this;\n}\n\ndefine.classMethod('addCursorFlag', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Add a query modifier to the cursor query\n * @method\n * @param {string} name The query modifier (must start with $, such as $orderby etc)\n * @param {boolean} value The flag boolean value.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.addQueryModifier = function(name, value) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  if(name[0] != '$') throw MongoError.create({message: f(\"%s is not a valid query modifier\"), driver:true});\n  // Strip of the $\n  var field = name.substr(1);\n  // Set on the command\n  this.s.cmd[field] = value;\n  // Deal with the special case for sort\n  if(field == 'orderby') this.s.cmd.sort = this.s.cmd[field];\n  return this;\n}\n\ndefine.classMethod('addQueryModifier', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Add a comment to the cursor query allowing for tracking the comment in the log.\n * @method\n * @param {string} value The comment attached to this query.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.comment = function(value) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  this.s.cmd.comment = value;\n  return this;\n}\n\ndefine.classMethod('comment', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Set a maxAwaitTimeMS on a tailing cursor query to allow to customize the timeout value for the option awaitData (Only supported on MongoDB 3.2 or higher, ignored otherwise)\n * @method\n * @param {number} value Number of milliseconds to wait before aborting the tailed query.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.maxAwaitTimeMS = function(value) {\n  if(typeof value != 'number') throw MongoError.create({message: \"maxAwaitTimeMS must be a number\", driver:true});\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  this.s.cmd.maxAwaitTimeMS = value;\n  return this;\n}\n\ndefine.classMethod('maxAwaitTimeMS', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Set a maxTimeMS on the cursor query, allowing for hard timeout limits on queries (Only supported on MongoDB 2.6 or higher)\n * @method\n * @param {number} value Number of milliseconds to wait before aborting the query.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.maxTimeMS = function(value) {\n  if(typeof value != 'number') throw MongoError.create({message: \"maxTimeMS must be a number\", driver:true});\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  this.s.cmd.maxTimeMS = value;\n  return this;\n}\n\ndefine.classMethod('maxTimeMS', {callback: false, promise:false, returns: [Cursor]});\n\nCursor.prototype.maxTimeMs = Cursor.prototype.maxTimeMS;\n\ndefine.classMethod('maxTimeMs', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Sets a field projection for the query.\n * @method\n * @param {object} value The field projection object.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.project = function(value) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  this.s.cmd.fields = value;\n  return this;\n}\n\ndefine.classMethod('project', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Sets the sort order of the cursor query.\n * @method\n * @param {(string|array|object)} keyOrList The key or keys set for the sort.\n * @param {number} [direction] The direction of the sorting (1 or -1).\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.sort = function(keyOrList, direction) {\n  if(this.s.options.tailable) throw MongoError.create({message: \"Tailable cursor doesn't support sorting\", driver:true});\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  var order = keyOrList;\n\n  // We have an array of arrays, we need to preserve the order of the sort\n  // so we will us a Map\n  if(Array.isArray(order) && Array.isArray(order[0])) {\n    order = new Map(order.map(function(x) {\n      var value = [x[0], null];\n      if(x[1] == 'asc') {\n        value[1] = 1;\n      } else if(x[1] == 'desc') {\n        value[1] = -1;\n      } else if(x[1] == 1 || x[1] == -1) {\n        value[1] = x[1];\n      } else {\n        throw new MongoError(\"Illegal sort clause, must be of the form [['field1', '(ascending|descending)'], ['field2', '(ascending|descending)']]\");\n      }\n\n      return value;\n    }));\n  }\n\n  if(direction != null) {\n    order = [[keyOrList, direction]];\n  }\n\n  this.s.cmd.sort = order;\n  this.sortValue = order;\n  return this;\n}\n\ndefine.classMethod('sort', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Set the batch size for the cursor.\n * @method\n * @param {number} value The batchSize for the cursor.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.batchSize = function(value) {\n  if(this.s.options.tailable) throw MongoError.create({message: \"Tailable cursor doesn't support batchSize\", driver:true});\n  if(this.s.state == Cursor.CLOSED || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  if(typeof value != 'number') throw MongoError.create({message: \"batchSize requires an integer\", driver:true});\n  this.s.cmd.batchSize = value;\n  this.setCursorBatchSize(value);\n  return this;\n}\n\ndefine.classMethod('batchSize', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Set the limit for the cursor.\n * @method\n * @param {number} value The limit for the cursor query.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.limit = function(value) {\n  if(this.s.options.tailable) throw MongoError.create({message: \"Tailable cursor doesn't support limit\", driver:true});\n  if(this.s.state == Cursor.OPEN || this.s.state == Cursor.CLOSED || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  if(typeof value != 'number') throw MongoError.create({message: \"limit requires an integer\", driver:true});\n  this.s.cmd.limit = value;\n  // this.cursorLimit = value;\n  this.setCursorLimit(value);\n  return this;\n}\n\ndefine.classMethod('limit', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Set the skip for the cursor.\n * @method\n * @param {number} value The skip for the cursor query.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.skip = function(value) {\n  if(this.s.options.tailable) throw MongoError.create({message: \"Tailable cursor doesn't support skip\", driver:true});\n  if(this.s.state == Cursor.OPEN || this.s.state == Cursor.CLOSED || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  if(typeof value != 'number') throw MongoError.create({message: \"skip requires an integer\", driver:true});\n  this.s.cmd.skip = value;\n  this.setCursorSkip(value);\n  return this;\n}\n\ndefine.classMethod('skip', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * The callback format for results\n * @callback Cursor~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {(object|null|boolean)} result The result object if the command was executed successfully.\n */\n\n/**\n * Clone the cursor\n * @function external:CoreCursor#clone\n * @return {Cursor}\n */\n\n/**\n * Resets the cursor\n * @function external:CoreCursor#rewind\n * @return {null}\n */\n\n/**\n * Get the next available document from the cursor, returns null if no more documents are available.\n * @method\n * @param {Cursor~resultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @deprecated\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.nextObject = Cursor.prototype.next;\n\nvar nextObject = function(self, callback) {\n  if(self.s.state == Cursor.CLOSED || self.isDead && self.isDead()) return handleCallback(callback, MongoError.create({message: \"Cursor is closed\", driver:true}));\n  if(self.s.state == Cursor.INIT && self.s.cmd.sort) {\n    try {\n      self.s.cmd.sort = formattedOrderClause(self.s.cmd.sort);\n    } catch(err) {\n      return handleCallback(callback, err);\n    }\n  }\n\n  // Get the next object\n  self._next(function(err, doc) {\n    if(err && err.tailable && self.s.currentNumberOfRetries == 0) return callback(err);\n    if(err && err.tailable && self.s.currentNumberOfRetries > 0) {\n      self.s.currentNumberOfRetries = self.s.currentNumberOfRetries - 1;\n\n      return setTimeout(function() {\n        // Rewind the cursor only when it has not actually read any documents yet\n        if(self.cursorState.currentLimit == 0) self.rewind();\n        // Read the next document, forcing a re-issue of query if no cursorId exists\n        self.nextObject(callback);\n      }, self.s.tailableRetryInterval);\n    }\n\n    self.s.state = Cursor.OPEN;\n    if(err) return handleCallback(callback, err);\n    handleCallback(callback, null, doc);\n  });\n}\n\ndefine.classMethod('nextObject', {callback: true, promise:true});\n\n// Trampoline emptying the number of retrieved items\n// without incurring a nextTick operation\nvar loop = function(self, callback) {\n  // No more items we are done\n  if(self.bufferedCount() == 0) return;\n  // Get the next document\n  self._next(callback);\n  // Loop\n  return loop;\n}\n\nCursor.prototype.next = Cursor.prototype.nextObject;\n\ndefine.classMethod('next', {callback: true, promise:true});\n\n/**\n * Iterates over all the documents for this cursor. As with **{cursor.toArray}**,\n * not all of the elements will be iterated if this cursor had been previouly accessed.\n * In that case, **{cursor.rewind}** can be used to reset the cursor. However, unlike\n * **{cursor.toArray}**, the cursor will only hold a maximum of batch size elements\n * at any given time if batch size is specified. Otherwise, the caller is responsible\n * for making sure that the entire result can fit the memory.\n * @method\n * @deprecated\n * @param {Cursor~resultCallback} callback The result callback.\n * @throws {MongoError}\n * @return {null}\n */\nCursor.prototype.each = function(callback) {\n  // Rewind cursor state\n  this.rewind();\n  // Set current cursor to INIT\n  this.s.state = Cursor.INIT;\n  // Run the query\n  _each(this, callback);\n};\n\ndefine.classMethod('each', {callback: true, promise:false});\n\n// Run the each loop\nvar _each = function(self, callback) {\n  if(!callback) throw MongoError.create({message: 'callback is mandatory', driver:true});\n  if(self.isNotified()) return;\n  if(self.s.state == Cursor.CLOSED || self.isDead()) {\n    return handleCallback(callback, MongoError.create({message: \"Cursor is closed\", driver:true}));\n  }\n\n  if(self.s.state == Cursor.INIT) self.s.state = Cursor.OPEN;\n\n  // Define function to avoid global scope escape\n  var fn = null;\n  // Trampoline all the entries\n  if(self.bufferedCount() > 0) {\n    while(fn = loop(self, callback)) fn(self, callback);\n    _each(self, callback);\n  } else {\n    self.next(function(err, item) {\n      if(err) return handleCallback(callback, err);\n      if(item == null) {\n        self.s.state = Cursor.CLOSED;\n        return handleCallback(callback, null, null);\n      }\n\n      if(handleCallback(callback, null, item) == false) return;\n      _each(self, callback);\n    })\n  }\n}\n\n/**\n * The callback format for the forEach iterator method\n * @callback Cursor~iteratorCallback\n * @param {Object} doc An emitted document for the iterator\n */\n\n/**\n * The callback error format for the forEach iterator method\n * @callback Cursor~endCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n */\n\n/**\n * Iterates over all the documents for this cursor using the iterator, callback pattern.\n * @method\n * @param {Cursor~iteratorCallback} iterator The iteration callback.\n * @param {Cursor~endCallback} callback The end callback.\n * @throws {MongoError}\n * @return {null}\n */\nCursor.prototype.forEach = function(iterator, callback) {\n  this.each(function(err, doc){\n    if(err) { callback(err); return false; }\n    if(doc != null) { iterator(doc); return true; }\n    if(doc == null && callback) {\n      var internalCallback = callback;\n      callback = null;\n      internalCallback(null);\n      return false;\n    }\n  });\n}\n\ndefine.classMethod('forEach', {callback: true, promise:false});\n\n/**\n * Set the ReadPreference for the cursor.\n * @method\n * @param {(string|ReadPreference)} readPreference The new read preference for the cursor.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.setReadPreference = function(r) {\n  if(this.s.state != Cursor.INIT) throw MongoError.create({message: 'cannot change cursor readPreference after cursor has been accessed', driver:true});\n  if(r instanceof ReadPreference) {\n    this.s.options.readPreference = new CoreReadPreference(r.mode, r.tags);\n  } else if(typeof r == 'string'){\n    this.s.options.readPreference = new CoreReadPreference(r);\n  } else if(r instanceof CoreReadPreference) {\n    this.s.options.readPreference = r;\n  }\n\n  return this;\n}\n\ndefine.classMethod('setReadPreference', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * The callback format for results\n * @callback Cursor~toArrayResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object[]} documents All the documents the satisfy the cursor.\n */\n\n/**\n * Returns an array of documents. The caller is responsible for making sure that there\n * is enough memory to store the results. Note that the array only contain partial\n * results when this cursor had been previouly accessed. In that case,\n * cursor.rewind() can be used to reset the cursor.\n * @method\n * @param {Cursor~toArrayResultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.toArray = function(callback) {\n  var self = this;\n  if(self.s.options.tailable) throw MongoError.create({message: 'Tailable cursor cannot be converted to array', driver:true});\n\n  // Execute using callback\n  if(typeof callback == 'function') return toArray(self, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    toArray(self, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar toArray = function(self, callback) {\n  var items = [];\n\n  // Reset cursor\n  self.rewind();\n  self.s.state = Cursor.INIT;\n\n  // Fetch all the documents\n  var fetchDocs = function() {\n    self._next(function(err, doc) {\n      if(err) return handleCallback(callback, err);\n      if(doc == null) {\n        self.s.state = Cursor.CLOSED;\n        return handleCallback(callback, null, items);\n      }\n\n      // Add doc to items\n      items.push(doc)\n\n      // Get all buffered objects\n      if(self.bufferedCount() > 0) {\n        var docs = self.readBufferedDocuments(self.bufferedCount())\n\n        // Transform the doc if transform method added\n        if(self.s.transforms && typeof self.s.transforms.doc == 'function') {\n          docs = docs.map(self.s.transforms.doc);\n        }\n\n        items = items.concat(docs);\n      }\n\n      // Attempt a fetch\n      fetchDocs();\n    })\n  }\n\n  fetchDocs();\n}\n\ndefine.classMethod('toArray', {callback: true, promise:true});\n\n/**\n * The callback format for results\n * @callback Cursor~countResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {number} count The count of documents.\n */\n\n/**\n * Get the count of documents for this cursor\n * @method\n * @param {boolean} applySkipLimit Should the count command apply limit and skip settings on the cursor or in the passed in options.\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.skip=null] The number of documents to skip.\n * @param {number} [options.limit=null] The maximum amounts to count before aborting.\n * @param {number} [options.maxTimeMS=null] Number of miliseconds to wait before aborting the query.\n * @param {string} [options.hint=null] An index name hint for the query.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {Cursor~countResultCallback} [callback] The result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.count = function(applySkipLimit, opts, callback) {\n  var self = this;\n  if(self.s.cmd.query == null) throw MongoError.create({message: \"count can only be used with find command\", driver:true});\n  if(typeof opts == 'function') callback = opts, opts = {};\n  opts = opts || {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return count(self, applySkipLimit, opts, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    count(self, applySkipLimit, opts, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar count = function(self, applySkipLimit, opts, callback) {\n  if(typeof applySkipLimit == 'function') {\n    callback = applySkipLimit;\n    applySkipLimit = true;\n  }\n\n  if(applySkipLimit) {\n    if(typeof self.cursorSkip() == 'number') opts.skip = self.cursorSkip();\n    if(typeof self.cursorLimit() == 'number') opts.limit = self.cursorLimit();\n  }\n\n  // Command\n  var delimiter = self.s.ns.indexOf('.');\n\n  var command = {\n    'count': self.s.ns.substr(delimiter+1), 'query': self.s.cmd.query\n  }\n\n  if(typeof opts.maxTimeMS == 'number') {\n    command.maxTimeMS = opts.maxTimeMS;\n  } else if(self.s.cmd && typeof self.s.cmd.maxTimeMS == 'number') {\n    command.maxTimeMS = self.s.cmd.maxTimeMS;\n  }\n\n  // Get a server\n  var server = self.s.topology.getServer(opts);\n  // Get a connection\n  var connection = self.s.topology.getConnection(opts);\n  // Get the callbacks\n  var callbacks = server.getCallbacks();\n\n  // Merge in any options\n  if(opts.skip) command.skip = opts.skip;\n  if(opts.limit) command.limit = opts.limit;\n  if(self.s.options.hint) command.hint = self.s.options.hint;\n\n  // Build Query object\n  var query = new Query(self.s.bson, f(\"%s.$cmd\", self.s.ns.substr(0, delimiter)), command, {\n      numberToSkip: 0, numberToReturn: -1\n    , checkKeys: false\n  });\n\n  // Set up callback\n  callbacks.register(query.requestId, function(err, result) {\n    if(err) return handleCallback(callback, err);\n    if(result.documents.length == 1\n      && (result.documents[0].errmsg\n      || result.documents[0].err\n      || result.documents[0]['$err'])) {\n      return handleCallback(callback, MongoError.create(result.documents[0]));\n    }\n    handleCallback(callback, null, result.documents[0].n);\n  });\n\n  // Write the initial command out\n  connection.write(query.toBin());\n}\n\ndefine.classMethod('count', {callback: true, promise:true});\n\n/**\n * Close the cursor, sending a KillCursor command and emitting close.\n * @method\n * @param {Cursor~resultCallback} [callback] The result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.close = function(callback) {\n  this.s.state = Cursor.CLOSED;\n  // Kill the cursor\n  this.kill();\n  // Emit the close event for the cursor\n  this.emit('close');\n  // Callback if provided\n  if(typeof callback == 'function') return handleCallback(callback, null, this);\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    resolve();\n  });\n}\n\ndefine.classMethod('close', {callback: true, promise:true});\n\n/**\n * Map all documents using the provided function\n * @method\n * @param {function} [transform] The mapping transformation method.\n * @return {null}\n */\nCursor.prototype.map = function(transform) {\n  this.cursorState.transforms = { doc: transform };\n  return this;\n}\n\ndefine.classMethod('map', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Is the cursor closed\n * @method\n * @return {boolean}\n */\nCursor.prototype.isClosed = function() {\n  return this.isDead();\n}\n\ndefine.classMethod('isClosed', {callback: false, promise:false, returns: [Boolean]});\n\nCursor.prototype.destroy = function(err) {\n  this.pause();\n  this.close();\n  if(err) this.emit('error', err);\n}\n\ndefine.classMethod('destroy', {callback: false, promise:false});\n\n/**\n * Return a modified Readable stream including a possible transform method.\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {function} [options.transform=null] A transformation method applied to each document emitted by the stream.\n * @return {Cursor}\n */\nCursor.prototype.stream = function(options) {\n  this.s.streamOptions = options || {};\n  return this;\n}\n\ndefine.classMethod('stream', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Execute the explain for the cursor\n * @method\n * @param {Cursor~resultCallback} [callback] The result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.explain = function(callback) {\n  var self = this;\n  this.s.cmd.explain = true;\n\n  // Do we have a readConcern\n  if(this.s.cmd.readConcern) {\n    delete this.s.cmd['readConcern'];\n  }\n\n  // Execute using callback\n  if(typeof callback == 'function') return this._next(callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    self._next(function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\ndefine.classMethod('explain', {callback: true, promise:true});\n\nCursor.prototype._read = function(n) {\n  var self = this;\n  if(self.s.state == Cursor.CLOSED || self.isDead()) {\n    return self.push(null);\n  }\n\n  // Get the next item\n  self.nextObject(function(err, result) {\n    if(err) {\n      if(!self.isDead()) self.close();\n      if(self.listeners('error') && self.listeners('error').length > 0) {\n        self.emit('error', err);\n      }\n\n      // Emit end event\n      self.emit('end');\n      return self.emit('finish');\n    }\n\n    // If we provided a transformation method\n    if(typeof self.s.streamOptions.transform == 'function' && result != null) {\n      return self.push(self.s.streamOptions.transform(result));\n    }\n\n    // If we provided a map function\n    if(self.cursorState.transforms && typeof self.cursorState.transforms.doc == 'function' && result != null) {\n      return self.push(self.cursorState.transforms.doc(result));\n    }\n\n    // Return the result\n    self.push(result);\n  });\n}\n\nObject.defineProperty(Cursor.prototype, 'readPreference', {\n  enumerable:true,\n  get: function() {\n    if (!this || !this.s) {\n      return null;\n    }\n\n    return this.s.options.readPreference;\n  }\n});\n\nObject.defineProperty(Cursor.prototype, 'namespace', {\n  enumerable: true,\n  get: function() {\n    if (!this || !this.s) {\n      return null;\n    }\n\n    // TODO: refactor this logic into core\n    var ns = this.s.ns || '';\n    var firstDot = ns.indexOf('.');\n    if (firstDot < 0) {\n      return {\n        database: this.s.ns,\n        collection: ''\n      };\n    }\n    return {\n      database: ns.substr(0, firstDot),\n      collection: ns.substr(firstDot + 1)\n    };\n  }\n});\n\n/**\n * The read() method pulls some data out of the internal buffer and returns it. If there is no data available, then it will return null.\n * @function external:Readable#read\n * @param {number} size Optional argument to specify how much data to read.\n * @return {(String | Buffer | null)}\n */\n\n/**\n * Call this function to cause the stream to return strings of the specified encoding instead of Buffer objects.\n * @function external:Readable#setEncoding\n * @param {string} encoding The encoding to use.\n * @return {null}\n */\n\n/**\n * This method will cause the readable stream to resume emitting data events.\n * @function external:Readable#resume\n * @return {null}\n */\n\n/**\n * This method will cause a stream in flowing-mode to stop emitting data events. Any data that becomes available will remain in the internal buffer.\n * @function external:Readable#pause\n * @return {null}\n */\n\n/**\n * This method pulls all the data out of a readable stream, and writes it to the supplied destination, automatically managing the flow so that the destination is not overwhelmed by a fast readable stream.\n * @function external:Readable#pipe\n * @param {Writable} destination The destination for writing data\n * @param {object} [options] Pipe options\n * @return {null}\n */\n\n/**\n * This method will remove the hooks set up for a previous pipe() call.\n * @function external:Readable#unpipe\n * @param {Writable} [destination] The destination for writing data\n * @return {null}\n */\n\n/**\n * This is useful in certain cases where a stream is being consumed by a parser, which needs to \"un-consume\" some data that it has optimistically pulled out of the source, so that the stream can be passed on to some other party.\n * @function external:Readable#unshift\n * @param {(Buffer|string)} chunk Chunk of data to unshift onto the read queue.\n * @return {null}\n */\n\n/**\n * Versions of Node prior to v0.10 had streams that did not implement the entire Streams API as it is today. (See \"Compatibility\" below for more information.)\n * @function external:Readable#wrap\n * @param {Stream} stream An \"old style\" readable stream.\n * @return {null}\n */\n\nCursor.INIT = 0;\nCursor.OPEN = 1;\nCursor.CLOSED = 2;\nCursor.GET_MORE = 3;\n\nmodule.exports = Cursor;\n"};
jalangiLabel2258:
    while (true) {
        try {
            J$.Se(23353, '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb/lib/cursor_jalangi_.js', '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb/lib/cursor.js');
            J$.N(23361, '__secret__S$', __secret__S$, 0);
            J$.N(23369, '__secret__traits__', __secret__traits__, 0);
            J$.N(23377, 'inherits', inherits, 0);
            J$.N(23385, 'f', f, 0);
            J$.N(23393, 'toError', toError, 0);
            J$.N(23401, 'getSingleProperty', getSingleProperty, 0);
            J$.N(23409, 'formattedOrderClause', formattedOrderClause, 0);
            J$.N(23417, 'handleCallback', handleCallback, 0);
            J$.N(23425, 'Logger', Logger, 0);
            J$.N(23433, 'EventEmitter', EventEmitter, 0);
            J$.N(23441, 'ReadPreference', ReadPreference, 0);
            J$.N(23449, 'MongoError', MongoError, 0);
            J$.N(23457, 'Readable', Readable, 0);
            J$.N(23465, 'Define', Define, 0);
            J$.N(23473, 'CoreCursor', CoreCursor, 0);
            J$.N(23481, 'Map', Map, 0);
            J$.N(23489, 'Query', Query, 0);
            J$.N(23497, 'CoreReadPreference', CoreReadPreference, 0);
            J$.N(23505, 'flags', flags, 0);
            J$.N(23513, 'fields', fields, 0);
            J$.N(23521, 'Cursor', Cursor, 0);
            J$.N(23529, 'name', name, 0);
            J$.N(23537, 'define', define, 0);
            J$.N(23545, 'nextObject', nextObject, 0);
            J$.N(23553, 'loop', loop, 0);
            J$.N(23561, '_each', _each, 0);
            J$.N(23569, 'toArray', toArray, 0);
            J$.N(23577, 'count', count, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var inherits = J$.X1(641, J$.W(633, 'inherits', J$.G(121, J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'util', 21, false)), 'inherits', 0), inherits, 3)), f = J$.X1(657, J$.W(649, 'f', J$.G(153, J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, 'util', 21, false)), 'format', 0), f, 3)), toError = J$.X1(673, J$.W(665, 'toError', J$.G(185, J$.F(177, J$.R(161, 'require', require, 2), 0)(J$.T(169, './utils', 21, false)), 'toError', 0), toError, 3)), getSingleProperty = J$.X1(689, J$.W(681, 'getSingleProperty', J$.G(217, J$.F(209, J$.R(193, 'require', require, 2), 0)(J$.T(201, './utils', 21, false)), 'getSingleProperty', 0), getSingleProperty, 3)), formattedOrderClause = J$.X1(705, J$.W(697, 'formattedOrderClause', J$.G(249, J$.F(241, J$.R(225, 'require', require, 2), 0)(J$.T(233, './utils', 21, false)), 'formattedOrderClause', 0), formattedOrderClause, 3)), handleCallback = J$.X1(721, J$.W(713, 'handleCallback', J$.G(281, J$.F(273, J$.R(257, 'require', require, 2), 0)(J$.T(265, './utils', 21, false)), 'handleCallback', 0), handleCallback, 3)), Logger = J$.X1(737, J$.W(729, 'Logger', J$.G(313, J$.F(305, J$.R(289, 'require', require, 2), 0)(J$.T(297, 'mongodb-core', 21, false)), 'Logger', 0), Logger, 3)), EventEmitter = J$.X1(753, J$.W(745, 'EventEmitter', J$.G(345, J$.F(337, J$.R(321, 'require', require, 2), 0)(J$.T(329, 'events', 21, false)), 'EventEmitter', 0), EventEmitter, 3)), ReadPreference = J$.X1(769, J$.W(761, 'ReadPreference', J$.F(369, J$.R(353, 'require', require, 2), 0)(J$.T(361, './read_preference', 21, false)), ReadPreference, 3)), MongoError = J$.X1(785, J$.W(777, 'MongoError', J$.G(401, J$.F(393, J$.R(377, 'require', require, 2), 0)(J$.T(385, 'mongodb-core', 21, false)), 'MongoError', 0), MongoError, 3)), Readable = J$.X1(801, J$.W(793, 'Readable', J$.C(8, J$.G(433, J$.F(425, J$.R(409, 'require', require, 2), 0)(J$.T(417, 'stream', 21, false)), 'Readable', 0)) ? J$._() : J$.G(465, J$.F(457, J$.R(441, 'require', require, 2), 0)(J$.T(449, 'readable-stream', 21, false)), 'Readable', 0), Readable, 3)), Define = J$.X1(817, J$.W(809, 'Define', J$.F(489, J$.R(473, 'require', require, 2), 0)(J$.T(481, './metadata', 21, false)), Define, 3)), CoreCursor = J$.X1(833, J$.W(825, 'CoreCursor', J$.G(521, J$.F(513, J$.R(497, 'require', require, 2), 0)(J$.T(505, 'mongodb-core', 21, false)), 'Cursor', 0), CoreCursor, 3)), Map = J$.X1(849, J$.W(841, 'Map', J$.G(561, J$.G(553, J$.F(545, J$.R(529, 'require', require, 2), 0)(J$.T(537, 'mongodb-core', 21, false)), 'BSON', 0), 'Map', 0), Map, 3)), Query = J$.X1(865, J$.W(857, 'Query', J$.G(593, J$.F(585, J$.R(569, 'require', require, 2), 0)(J$.T(577, 'mongodb-core', 21, false)), 'Query', 0), Query, 3)), CoreReadPreference = J$.X1(881, J$.W(873, 'CoreReadPreference', J$.G(625, J$.F(617, J$.R(601, 'require', require, 2), 0)(J$.T(609, 'mongodb-core', 21, false)), 'ReadPreference', 0), CoreReadPreference, 3));
            var flags = J$.X1(953, J$.W(945, 'flags', J$.T(937, [
                J$.T(889, 'tailable', 21, false),
                J$.T(897, 'oplogReplay', 21, false),
                J$.T(905, 'noCursorTimeout', 21, false),
                J$.T(913, 'awaitData', 21, false),
                J$.T(921, 'exhaust', 21, false),
                J$.T(929, 'partial', 21, false)
            ], 10, false), flags, 3));
            var fields = J$.X1(993, J$.W(985, 'fields', J$.T(977, [
                J$.T(961, 'numberOfRetries', 21, false),
                J$.T(969, 'tailableRetryInterval', 21, false)
            ], 10, false), fields, 3));
            var Cursor = J$.X1(1833, J$.W(1825, 'Cursor', J$.T(1817, function (bson, ns, cmd, options, topology, topologyOptions) {
                jalangiLabel2196:
                    while (true) {
                        try {
                            J$.Fe(1697, arguments.callee, this, arguments);
                            arguments = J$.N(1705, 'arguments', arguments, 4);
                            bson = J$.N(1713, 'bson', bson, 4);
                            ns = J$.N(1721, 'ns', ns, 4);
                            cmd = J$.N(1729, 'cmd', cmd, 4);
                            options = J$.N(1737, 'options', options, 4);
                            topology = J$.N(1745, 'topology', topology, 4);
                            topologyOptions = J$.N(1753, 'topologyOptions', topologyOptions, 4);
                            J$.N(1761, 'self', self, 0);
                            J$.N(1769, 'state', state, 0);
                            J$.N(1777, 'streamOptions', streamOptions, 0);
                            J$.N(1785, 'numberOfRetries', numberOfRetries, 0);
                            J$.N(1793, 'tailableRetryInterval', tailableRetryInterval, 0);
                            J$.N(1801, 'currentNumberOfRetries', currentNumberOfRetries, 0);
                            J$.N(1809, 'promiseLibrary', promiseLibrary, 0);
                            J$.X1(1073, J$.M(1065, J$.R(1001, 'CoreCursor', CoreCursor, 1), 'apply', 0)(J$.R(1009, 'this', this, 0), J$.M(1057, J$.G(1033, J$.G(1025, J$.R(1017, 'Array', Array, 2), 'prototype', 0), 'slice', 0), 'call', 0)(J$.R(1041, 'arguments', arguments, 2), J$.T(1049, 0, 22, false))));
                            var self = J$.X1(1097, J$.W(1089, 'self', J$.R(1081, 'this', this, 0), self, 1));
                            var state = J$.X1(1129, J$.W(1121, 'state', J$.G(1113, J$.R(1105, 'Cursor', Cursor, 1), 'INIT', 0), state, 1));
                            var streamOptions = J$.X1(1153, J$.W(1145, 'streamOptions', J$.T(1137, {}, 11, false), streamOptions, 1));
                            var numberOfRetries = J$.X1(1193, J$.W(1185, 'numberOfRetries', J$.C(16, J$.G(1169, J$.R(1161, 'options', options, 0), 'numberOfRetries', 0)) ? J$._() : J$.T(1177, 5, 22, false), numberOfRetries, 1));
                            var tailableRetryInterval = J$.X1(1233, J$.W(1225, 'tailableRetryInterval', J$.C(24, J$.G(1209, J$.R(1201, 'options', options, 0), 'tailableRetryInterval', 0)) ? J$._() : J$.T(1217, 500, 22, false), tailableRetryInterval, 1));
                            var currentNumberOfRetries = J$.X1(1257, J$.W(1249, 'currentNumberOfRetries', J$.R(1241, 'numberOfRetries', numberOfRetries, 0), currentNumberOfRetries, 1));
                            var promiseLibrary = J$.X1(1289, J$.W(1281, 'promiseLibrary', J$.G(1273, J$.R(1265, 'options', options, 0), 'promiseLibrary', 0), promiseLibrary, 1));
                            if (J$.X1(23593, J$.C(40, J$.U(10, '!', J$.R(1297, 'promiseLibrary', promiseLibrary, 0))))) {
                                J$.X1(1385, promiseLibrary = J$.W(1377, 'promiseLibrary', J$.X1(23585, J$.C(32, J$.B(26, '==', J$.U(18, 'typeof', J$.G(1313, J$.R(1305, 'global', global, 2), 'Promise', 0)), J$.T(1321, 'function', 21, false), 0))) ? J$.G(1337, J$.R(1329, 'global', global, 2), 'Promise', 0) : J$.G(1369, J$.F(1361, J$.R(1345, 'require', require, 2), 0)(J$.T(1353, 'es6-promise', 21, false)), 'Promise', 0), promiseLibrary, 0));
                            }
                            J$.X1(1433, J$.M(1425, J$.R(1393, 'Readable', Readable, 1), 'call', 0)(J$.R(1401, 'this', this, 0), J$.T(1417, {
                                objectMode: J$.T(1409, true, 23, false)
                            }, 11, false)));
                            J$.X1(1569, J$.P(1561, J$.R(1441, 'this', this, 0), 's', J$.T(1553, {
                                numberOfRetries: J$.R(1449, 'numberOfRetries', numberOfRetries, 0),
                                tailableRetryInterval: J$.R(1457, 'tailableRetryInterval', tailableRetryInterval, 0),
                                currentNumberOfRetries: J$.R(1465, 'currentNumberOfRetries', currentNumberOfRetries, 0),
                                state: J$.R(1473, 'state', state, 0),
                                streamOptions: J$.R(1481, 'streamOptions', streamOptions, 0),
                                bson: J$.R(1489, 'bson', bson, 0),
                                ns: J$.R(1497, 'ns', ns, 0),
                                cmd: J$.R(1505, 'cmd', cmd, 0),
                                options: J$.R(1513, 'options', options, 0),
                                topology: J$.R(1521, 'topology', topology, 0),
                                topologyOptions: J$.R(1529, 'topologyOptions', topologyOptions, 0),
                                promiseLibrary: J$.R(1537, 'promiseLibrary', promiseLibrary, 0),
                                currentDoc: J$.T(1545, null, 25, false)
                            }, 11, false), 0));
                            J$.X1(1633, J$.P(1625, J$.R(1577, 'this', this, 0), 'timeout', J$.B(34, '==', J$.G(1609, J$.G(1601, J$.G(1593, J$.R(1585, 'self', self, 0), 's', 0), 'options', 0), 'noCursorTimeout', 0), J$.T(1617, true, 23, false), 0), 0));
                            J$.X1(1689, J$.P(1681, J$.R(1641, 'this', this, 0), 'sortValue', J$.G(1673, J$.G(1665, J$.G(1657, J$.R(1649, 'self', self, 0), 's', 0), 'cmd', 0), 'sort', 0), 0));
                        } catch (J$e) {
                            J$.Ex(23601, J$e);
                        } finally {
                            if (J$.Fr(23609))
                                continue jalangiLabel2196;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1697), Cursor, 3));
            J$.X1(1873, J$.F(1865, J$.R(1841, 'inherits', inherits, 1), 0)(J$.R(1849, 'Cursor', Cursor, 1), J$.R(1857, 'Readable', Readable, 1)));
            J$.X1(1929, J$.P(1921, J$.G(1889, J$.R(1881, 'CoreCursor', CoreCursor, 1), 'prototype', 0), '_next', J$.G(1913, J$.G(1905, J$.R(1897, 'CoreCursor', CoreCursor, 1), 'prototype', 0), 'next', 0), 0));
            for (J$._tm_p in J$.H(2025, J$.G(1945, J$.R(1937, 'CoreCursor', CoreCursor, 1), 'prototype', 0))) {
                var name = J$.X1(2041, J$.W(2033, 'name', J$._tm_p, name, 3));
                {
                    {
                        J$.X1(2017, J$.P(2009, J$.G(1961, J$.R(1953, 'Cursor', Cursor, 1), 'prototype', 0), J$.R(1969, 'name', name, 1), J$.G(2001, J$.G(1985, J$.R(1977, 'CoreCursor', CoreCursor, 1), 'prototype', 0), J$.R(1993, 'name', name, 1), 4), 2));
                    }
                }
            }
            var define = J$.X1(2113, J$.W(2105, 'define', J$.P(2097, J$.R(2049, 'Cursor', Cursor, 1), 'define', J$.F(2089, J$.R(2057, 'Define', Define, 1), 1)(J$.T(2065, 'Cursor', 21, false), J$.R(2073, 'Cursor', Cursor, 1), J$.T(2081, true, 23, false)), 0), define, 3));
            J$.X1(2985, J$.P(2977, J$.G(2129, J$.R(2121, 'Cursor', Cursor, 1), 'prototype', 0), 'hasNext', J$.T(2969, function (callback) {
                jalangiLabel2200:
                    while (true) {
                        try {
                            J$.Fe(2937, arguments.callee, this, arguments);
                            arguments = J$.N(2945, 'arguments', arguments, 4);
                            callback = J$.N(2953, 'callback', callback, 4);
                            J$.N(2961, 'self', self, 0);
                            var self = J$.X1(2153, J$.W(2145, 'self', J$.R(2137, 'this', this, 0), self, 1));
                            if (J$.X1(23649, J$.C(64, J$.B(50, '==', J$.U(42, 'typeof', J$.R(2161, 'callback', callback, 0)), J$.T(2169, 'function', 21, false), 0)))) {
                                if (J$.X1(23641, J$.C(56, J$.G(2193, J$.G(2185, J$.R(2177, 'self', self, 0), 's', 0), 'currentDoc', 0)))) {
                                    return J$.X1(2241, J$.Rt(2233, J$.F(2225, J$.R(2201, 'callback', callback, 0), 0)(J$.T(2209, null, 25, false), J$.T(2217, true, 23, false))));
                                } else {
                                    return J$.X1(2457, J$.Rt(2449, J$.F(2441, J$.R(2249, 'nextObject', nextObject, 1), 0)(J$.R(2257, 'self', self, 0), J$.T(2433, function (err, doc) {
                                        jalangiLabel2197:
                                            while (true) {
                                                try {
                                                    J$.Fe(2401, arguments.callee, this, arguments);
                                                    arguments = J$.N(2409, 'arguments', arguments, 4);
                                                    err = J$.N(2417, 'err', err, 4);
                                                    doc = J$.N(2425, 'doc', doc, 4);
                                                    if (J$.X1(23617, J$.C(48, J$.U(58, '!', J$.R(2265, 'doc', doc, 0)))))
                                                        return J$.X1(2313, J$.Rt(2305, J$.F(2297, J$.R(2273, 'callback', callback, 0), 0)(J$.T(2281, null, 25, false), J$.T(2289, false, 23, false))));
                                                    J$.X1(2353, J$.P(2345, J$.G(2329, J$.R(2321, 'self', self, 0), 's', 0), 'currentDoc', J$.R(2337, 'doc', doc, 0), 0));
                                                    J$.X1(2393, J$.F(2385, J$.R(2361, 'callback', callback, 0), 0)(J$.T(2369, null, 25, false), J$.T(2377, true, 23, false)));
                                                } catch (J$e) {
                                                    J$.Ex(23625, J$e);
                                                } finally {
                                                    if (J$.Fr(23633))
                                                        continue jalangiLabel2197;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 2401))));
                                }
                            }
                            return J$.X1(2929, J$.Rt(2921, J$.M(2913, J$.G(2473, J$.R(2465, 'this', this, 0), 's', 0), 'promiseLibrary', 2)(J$.T(2905, function (resolve, reject) {
                                jalangiLabel2199:
                                    while (true) {
                                        try {
                                            J$.Fe(2873, arguments.callee, this, arguments);
                                            arguments = J$.N(2881, 'arguments', arguments, 4);
                                            resolve = J$.N(2889, 'resolve', resolve, 4);
                                            reject = J$.N(2897, 'reject', reject, 4);
                                            if (J$.X1(23697, J$.C(104, J$.G(2497, J$.G(2489, J$.R(2481, 'self', self, 0), 's', 0), 'currentDoc', 0)))) {
                                                J$.X1(2529, J$.F(2521, J$.R(2505, 'resolve', resolve, 0), 0)(J$.T(2513, true, 23, false)));
                                            } else {
                                                J$.X1(2865, J$.F(2857, J$.R(2537, 'nextObject', nextObject, 1), 0)(J$.R(2545, 'self', self, 0), J$.T(2849, function (err, doc) {
                                                    jalangiLabel2198:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(2817, arguments.callee, this, arguments);
                                                                arguments = J$.N(2825, 'arguments', arguments, 4);
                                                                err = J$.N(2833, 'err', err, 4);
                                                                doc = J$.N(2841, 'doc', doc, 4);
                                                                if (J$.X1(23657, J$.C(80, J$.C(72, J$.B(66, '==', J$.G(2569, J$.G(2561, J$.R(2553, 'self', self, 0), 's', 0), 'state', 0), J$.G(2585, J$.R(2577, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.M(2601, J$.R(2593, 'self', self, 0), 'isDead', 0)())))
                                                                    return J$.X1(2641, J$.Rt(2633, J$.F(2625, J$.R(2609, 'resolve', resolve, 0), 0)(J$.T(2617, false, 23, false))));
                                                                if (J$.X1(23665, J$.C(88, J$.R(2649, 'err', err, 0))))
                                                                    return J$.X1(2689, J$.Rt(2681, J$.F(2673, J$.R(2657, 'reject', reject, 0), 0)(J$.R(2665, 'err', err, 0))));
                                                                if (J$.X1(23673, J$.C(96, J$.U(74, '!', J$.R(2697, 'doc', doc, 0)))))
                                                                    return J$.X1(2737, J$.Rt(2729, J$.F(2721, J$.R(2705, 'resolve', resolve, 0), 0)(J$.T(2713, false, 23, false))));
                                                                J$.X1(2777, J$.P(2769, J$.G(2753, J$.R(2745, 'self', self, 0), 's', 0), 'currentDoc', J$.R(2761, 'doc', doc, 0), 0));
                                                                J$.X1(2809, J$.F(2801, J$.R(2785, 'resolve', resolve, 0), 0)(J$.T(2793, true, 23, false)));
                                                            } catch (J$e) {
                                                                J$.Ex(23681, J$e);
                                                            } finally {
                                                                if (J$.Fr(23689))
                                                                    continue jalangiLabel2198;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 2817)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(23705, J$e);
                                        } finally {
                                            if (J$.Fr(23713))
                                                continue jalangiLabel2199;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 2873))));
                        } catch (J$e) {
                            J$.Ex(23721, J$e);
                        } finally {
                            if (J$.Fr(23729))
                                continue jalangiLabel2200;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2937), 0));
            J$.X1(3041, J$.M(3033, J$.R(2993, 'define', define, 1), 'classMethod', 0)(J$.T(3001, 'hasNext', 21, false), J$.T(3025, {
                callback: J$.T(3009, true, 23, false),
                promise: J$.T(3017, true, 23, false)
            }, 11, false)));
            J$.X1(3745, J$.P(3737, J$.G(3057, J$.R(3049, 'Cursor', Cursor, 1), 'prototype', 0), 'next', J$.T(3729, function (callback) {
                jalangiLabel2203:
                    while (true) {
                        try {
                            J$.Fe(3689, arguments.callee, this, arguments);
                            arguments = J$.N(3697, 'arguments', arguments, 4);
                            callback = J$.N(3705, 'callback', callback, 4);
                            J$.N(3713, 'self', self, 0);
                            J$.N(3721, 'doc', doc, 0);
                            var self = J$.X1(3081, J$.W(3073, 'self', J$.R(3065, 'this', this, 0), self, 1));
                            if (J$.X1(23745, J$.C(120, J$.B(90, '==', J$.U(82, 'typeof', J$.R(3089, 'callback', callback, 0)), J$.T(3097, 'function', 21, false), 0)))) {
                                if (J$.X1(23737, J$.C(112, J$.G(3121, J$.G(3113, J$.R(3105, 'self', self, 0), 's', 0), 'currentDoc', 0)))) {
                                    var doc = J$.X1(3161, J$.W(3153, 'doc', J$.G(3145, J$.G(3137, J$.R(3129, 'self', self, 0), 's', 0), 'currentDoc', 0), doc, 1));
                                    J$.X1(3201, J$.P(3193, J$.G(3177, J$.R(3169, 'self', self, 0), 's', 0), 'currentDoc', J$.T(3185, null, 25, false), 0));
                                    return J$.X1(3249, J$.Rt(3241, J$.F(3233, J$.R(3209, 'callback', callback, 0), 0)(J$.T(3217, null, 25, false), J$.R(3225, 'doc', doc, 0))));
                                }
                                return J$.X1(3297, J$.Rt(3289, J$.F(3281, J$.R(3257, 'nextObject', nextObject, 1), 0)(J$.R(3265, 'self', self, 0), J$.R(3273, 'callback', callback, 0))));
                            }
                            ;
                            return J$.X1(3681, J$.Rt(3673, J$.M(3665, J$.G(3313, J$.R(3305, 'this', this, 0), 's', 0), 'promiseLibrary', 2)(J$.T(3657, function (resolve, reject) {
                                jalangiLabel2202:
                                    while (true) {
                                        try {
                                            J$.Fe(3617, arguments.callee, this, arguments);
                                            arguments = J$.N(3625, 'arguments', arguments, 4);
                                            resolve = J$.N(3633, 'resolve', resolve, 4);
                                            reject = J$.N(3641, 'reject', reject, 4);
                                            J$.N(3649, 'doc', doc, 0);
                                            if (J$.X1(23753, J$.C(128, J$.G(3337, J$.G(3329, J$.R(3321, 'self', self, 0), 's', 0), 'currentDoc', 0)))) {
                                                var doc = J$.X1(3377, J$.W(3369, 'doc', J$.G(3361, J$.G(3353, J$.R(3345, 'self', self, 0), 's', 0), 'currentDoc', 0), doc, 1));
                                                J$.X1(3417, J$.P(3409, J$.G(3393, J$.R(3385, 'self', self, 0), 's', 0), 'currentDoc', J$.T(3401, null, 25, false), 0));
                                                return J$.X1(3457, J$.Rt(3449, J$.F(3441, J$.R(3425, 'resolve', resolve, 0), 0)(J$.R(3433, 'doc', doc, 0))));
                                            }
                                            J$.X1(3609, J$.F(3601, J$.R(3465, 'nextObject', nextObject, 1), 0)(J$.R(3473, 'self', self, 0), J$.T(3593, function (err, r) {
                                                jalangiLabel2201:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(3561, arguments.callee, this, arguments);
                                                            arguments = J$.N(3569, 'arguments', arguments, 4);
                                                            err = J$.N(3577, 'err', err, 4);
                                                            r = J$.N(3585, 'r', r, 4);
                                                            if (J$.X1(23761, J$.C(136, J$.R(3481, 'err', err, 0))))
                                                                return J$.X1(3521, J$.Rt(3513, J$.F(3505, J$.R(3489, 'reject', reject, 0), 0)(J$.R(3497, 'err', err, 0))));
                                                            J$.X1(3553, J$.F(3545, J$.R(3529, 'resolve', resolve, 0), 0)(J$.R(3537, 'r', r, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(23769, J$e);
                                                        } finally {
                                                            if (J$.Fr(23777))
                                                                continue jalangiLabel2201;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 3561)));
                                        } catch (J$e) {
                                            J$.Ex(23785, J$e);
                                        } finally {
                                            if (J$.Fr(23793))
                                                continue jalangiLabel2202;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 3617))));
                        } catch (J$e) {
                            J$.Ex(23801, J$e);
                        } finally {
                            if (J$.Fr(23809))
                                continue jalangiLabel2203;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3689), 0));
            J$.X1(3801, J$.M(3793, J$.R(3753, 'define', define, 1), 'classMethod', 0)(J$.T(3761, 'next', 21, false), J$.T(3785, {
                callback: J$.T(3769, true, 23, false),
                promise: J$.T(3777, true, 23, false)
            }, 11, false)));
            J$.X1(4089, J$.P(4081, J$.G(3817, J$.R(3809, 'Cursor', Cursor, 1), 'prototype', 0), 'filter', J$.T(4073, function (filter) {
                jalangiLabel2204:
                    while (true) {
                        try {
                            J$.Fe(4049, arguments.callee, this, arguments);
                            arguments = J$.N(4057, 'arguments', arguments, 4);
                            filter = J$.N(4065, 'filter', filter, 4);
                            if (J$.X1(23817, J$.C(160, J$.C(152, J$.C(144, J$.B(98, '==', J$.G(3841, J$.G(3833, J$.R(3825, 'this', this, 0), 's', 0), 'state', 0), J$.G(3857, J$.R(3849, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(106, '==', J$.G(3881, J$.G(3873, J$.R(3865, 'this', this, 0), 's', 0), 'state', 0), J$.G(3897, J$.R(3889, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(3913, J$.R(3905, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(3969, J$.Th(3961, J$.M(3953, J$.R(3921, 'MongoError', MongoError, 1), 'create', 0)(J$.T(3945, {
                                message: J$.T(3929, 'Cursor is closed', 21, false),
                                driver: J$.T(3937, true, 23, false)
                            }, 11, false))));
                            J$.X1(4017, J$.P(4009, J$.G(3993, J$.G(3985, J$.R(3977, 'this', this, 0), 's', 0), 'cmd', 0), 'query', J$.R(4001, 'filter', filter, 0), 0));
                            return J$.X1(4041, J$.Rt(4033, J$.R(4025, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23825, J$e);
                        } finally {
                            if (J$.Fr(23833))
                                continue jalangiLabel2204;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4049), 0));
            J$.X1(4161, J$.M(4153, J$.R(4097, 'define', define, 1), 'classMethod', 0)(J$.T(4105, 'filter', 21, false), J$.T(4145, {
                callback: J$.T(4113, false, 23, false),
                promise: J$.T(4121, false, 23, false),
                returns: J$.T(4137, [J$.R(4129, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(4449, J$.P(4441, J$.G(4177, J$.R(4169, 'Cursor', Cursor, 1), 'prototype', 0), 'maxScan', J$.T(4433, function (maxScan) {
                jalangiLabel2205:
                    while (true) {
                        try {
                            J$.Fe(4409, arguments.callee, this, arguments);
                            arguments = J$.N(4417, 'arguments', arguments, 4);
                            maxScan = J$.N(4425, 'maxScan', maxScan, 4);
                            if (J$.X1(23841, J$.C(184, J$.C(176, J$.C(168, J$.B(114, '==', J$.G(4201, J$.G(4193, J$.R(4185, 'this', this, 0), 's', 0), 'state', 0), J$.G(4217, J$.R(4209, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(122, '==', J$.G(4241, J$.G(4233, J$.R(4225, 'this', this, 0), 's', 0), 'state', 0), J$.G(4257, J$.R(4249, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(4273, J$.R(4265, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(4329, J$.Th(4321, J$.M(4313, J$.R(4281, 'MongoError', MongoError, 1), 'create', 0)(J$.T(4305, {
                                message: J$.T(4289, 'Cursor is closed', 21, false),
                                driver: J$.T(4297, true, 23, false)
                            }, 11, false))));
                            J$.X1(4377, J$.P(4369, J$.G(4353, J$.G(4345, J$.R(4337, 'this', this, 0), 's', 0), 'cmd', 0), 'maxScan', J$.R(4361, 'maxScan', maxScan, 0), 0));
                            return J$.X1(4401, J$.Rt(4393, J$.R(4385, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23849, J$e);
                        } finally {
                            if (J$.Fr(23857))
                                continue jalangiLabel2205;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4409), 0));
            J$.X1(4521, J$.M(4513, J$.R(4457, 'define', define, 1), 'classMethod', 0)(J$.T(4465, 'maxScan', 21, false), J$.T(4505, {
                callback: J$.T(4473, false, 23, false),
                promise: J$.T(4481, false, 23, false),
                returns: J$.T(4497, [J$.R(4489, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(4809, J$.P(4801, J$.G(4537, J$.R(4529, 'Cursor', Cursor, 1), 'prototype', 0), 'hint', J$.T(4793, function (hint) {
                jalangiLabel2206:
                    while (true) {
                        try {
                            J$.Fe(4769, arguments.callee, this, arguments);
                            arguments = J$.N(4777, 'arguments', arguments, 4);
                            hint = J$.N(4785, 'hint', hint, 4);
                            if (J$.X1(23865, J$.C(208, J$.C(200, J$.C(192, J$.B(130, '==', J$.G(4561, J$.G(4553, J$.R(4545, 'this', this, 0), 's', 0), 'state', 0), J$.G(4577, J$.R(4569, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(138, '==', J$.G(4601, J$.G(4593, J$.R(4585, 'this', this, 0), 's', 0), 'state', 0), J$.G(4617, J$.R(4609, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(4633, J$.R(4625, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(4689, J$.Th(4681, J$.M(4673, J$.R(4641, 'MongoError', MongoError, 1), 'create', 0)(J$.T(4665, {
                                message: J$.T(4649, 'Cursor is closed', 21, false),
                                driver: J$.T(4657, true, 23, false)
                            }, 11, false))));
                            J$.X1(4737, J$.P(4729, J$.G(4713, J$.G(4705, J$.R(4697, 'this', this, 0), 's', 0), 'cmd', 0), 'hint', J$.R(4721, 'hint', hint, 0), 0));
                            return J$.X1(4761, J$.Rt(4753, J$.R(4745, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23873, J$e);
                        } finally {
                            if (J$.Fr(23881))
                                continue jalangiLabel2206;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4769), 0));
            J$.X1(4881, J$.M(4873, J$.R(4817, 'define', define, 1), 'classMethod', 0)(J$.T(4825, 'hint', 21, false), J$.T(4865, {
                callback: J$.T(4833, false, 23, false),
                promise: J$.T(4841, false, 23, false),
                returns: J$.T(4857, [J$.R(4849, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(5169, J$.P(5161, J$.G(4897, J$.R(4889, 'Cursor', Cursor, 1), 'prototype', 0), 'min', J$.T(5153, function (min) {
                jalangiLabel2207:
                    while (true) {
                        try {
                            J$.Fe(5129, arguments.callee, this, arguments);
                            arguments = J$.N(5137, 'arguments', arguments, 4);
                            min = J$.N(5145, 'min', min, 4);
                            if (J$.X1(23889, J$.C(232, J$.C(224, J$.C(216, J$.B(146, '==', J$.G(4921, J$.G(4913, J$.R(4905, 'this', this, 0), 's', 0), 'state', 0), J$.G(4937, J$.R(4929, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(154, '==', J$.G(4961, J$.G(4953, J$.R(4945, 'this', this, 0), 's', 0), 'state', 0), J$.G(4977, J$.R(4969, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(4993, J$.R(4985, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(5049, J$.Th(5041, J$.M(5033, J$.R(5001, 'MongoError', MongoError, 1), 'create', 0)(J$.T(5025, {
                                message: J$.T(5009, 'Cursor is closed', 21, false),
                                driver: J$.T(5017, true, 23, false)
                            }, 11, false))));
                            J$.X1(5097, J$.P(5089, J$.G(5073, J$.G(5065, J$.R(5057, 'this', this, 0), 's', 0), 'cmd', 0), 'min', J$.R(5081, 'min', min, 0), 0));
                            return J$.X1(5121, J$.Rt(5113, J$.R(5105, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23897, J$e);
                        } finally {
                            if (J$.Fr(23905))
                                continue jalangiLabel2207;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5129), 0));
            J$.X1(5241, J$.M(5233, J$.R(5177, 'define', define, 1), 'classMethod', 0)(J$.T(5185, 'min', 21, false), J$.T(5225, {
                callback: J$.T(5193, false, 23, false),
                promise: J$.T(5201, false, 23, false),
                returns: J$.T(5217, [J$.R(5209, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(5529, J$.P(5521, J$.G(5257, J$.R(5249, 'Cursor', Cursor, 1), 'prototype', 0), 'max', J$.T(5513, function (max) {
                jalangiLabel2208:
                    while (true) {
                        try {
                            J$.Fe(5489, arguments.callee, this, arguments);
                            arguments = J$.N(5497, 'arguments', arguments, 4);
                            max = J$.N(5505, 'max', max, 4);
                            if (J$.X1(23913, J$.C(256, J$.C(248, J$.C(240, J$.B(162, '==', J$.G(5281, J$.G(5273, J$.R(5265, 'this', this, 0), 's', 0), 'state', 0), J$.G(5297, J$.R(5289, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(170, '==', J$.G(5321, J$.G(5313, J$.R(5305, 'this', this, 0), 's', 0), 'state', 0), J$.G(5337, J$.R(5329, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(5353, J$.R(5345, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(5409, J$.Th(5401, J$.M(5393, J$.R(5361, 'MongoError', MongoError, 1), 'create', 0)(J$.T(5385, {
                                message: J$.T(5369, 'Cursor is closed', 21, false),
                                driver: J$.T(5377, true, 23, false)
                            }, 11, false))));
                            J$.X1(5457, J$.P(5449, J$.G(5433, J$.G(5425, J$.R(5417, 'this', this, 0), 's', 0), 'cmd', 0), 'max', J$.R(5441, 'max', max, 0), 0));
                            return J$.X1(5481, J$.Rt(5473, J$.R(5465, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23921, J$e);
                        } finally {
                            if (J$.Fr(23929))
                                continue jalangiLabel2208;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5489), 0));
            J$.X1(5601, J$.M(5593, J$.R(5537, 'define', define, 1), 'classMethod', 0)(J$.T(5545, 'max', 21, false), J$.T(5585, {
                callback: J$.T(5553, false, 23, false),
                promise: J$.T(5561, false, 23, false),
                returns: J$.T(5577, [J$.R(5569, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(5889, J$.P(5881, J$.G(5617, J$.R(5609, 'Cursor', Cursor, 1), 'prototype', 0), 'returnKey', J$.T(5873, function (value) {
                jalangiLabel2209:
                    while (true) {
                        try {
                            J$.Fe(5849, arguments.callee, this, arguments);
                            arguments = J$.N(5857, 'arguments', arguments, 4);
                            value = J$.N(5865, 'value', value, 4);
                            if (J$.X1(23937, J$.C(280, J$.C(272, J$.C(264, J$.B(178, '==', J$.G(5641, J$.G(5633, J$.R(5625, 'this', this, 0), 's', 0), 'state', 0), J$.G(5657, J$.R(5649, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(186, '==', J$.G(5681, J$.G(5673, J$.R(5665, 'this', this, 0), 's', 0), 'state', 0), J$.G(5697, J$.R(5689, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(5713, J$.R(5705, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(5769, J$.Th(5761, J$.M(5753, J$.R(5721, 'MongoError', MongoError, 1), 'create', 0)(J$.T(5745, {
                                message: J$.T(5729, 'Cursor is closed', 21, false),
                                driver: J$.T(5737, true, 23, false)
                            }, 11, false))));
                            J$.X1(5817, J$.P(5809, J$.G(5793, J$.G(5785, J$.R(5777, 'this', this, 0), 's', 0), 'cmd', 0), 'returnKey', J$.R(5801, 'value', value, 0), 0));
                            return J$.X1(5841, J$.Rt(5833, J$.R(5825, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23945, J$e);
                        } finally {
                            if (J$.Fr(23953))
                                continue jalangiLabel2209;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5849), 0));
            J$.X1(5961, J$.M(5953, J$.R(5897, 'define', define, 1), 'classMethod', 0)(J$.T(5905, 'returnKey', 21, false), J$.T(5945, {
                callback: J$.T(5913, false, 23, false),
                promise: J$.T(5921, false, 23, false),
                returns: J$.T(5937, [J$.R(5929, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(6249, J$.P(6241, J$.G(5977, J$.R(5969, 'Cursor', Cursor, 1), 'prototype', 0), 'showRecordId', J$.T(6233, function (value) {
                jalangiLabel2210:
                    while (true) {
                        try {
                            J$.Fe(6209, arguments.callee, this, arguments);
                            arguments = J$.N(6217, 'arguments', arguments, 4);
                            value = J$.N(6225, 'value', value, 4);
                            if (J$.X1(23961, J$.C(304, J$.C(296, J$.C(288, J$.B(194, '==', J$.G(6001, J$.G(5993, J$.R(5985, 'this', this, 0), 's', 0), 'state', 0), J$.G(6017, J$.R(6009, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(202, '==', J$.G(6041, J$.G(6033, J$.R(6025, 'this', this, 0), 's', 0), 'state', 0), J$.G(6057, J$.R(6049, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(6073, J$.R(6065, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(6129, J$.Th(6121, J$.M(6113, J$.R(6081, 'MongoError', MongoError, 1), 'create', 0)(J$.T(6105, {
                                message: J$.T(6089, 'Cursor is closed', 21, false),
                                driver: J$.T(6097, true, 23, false)
                            }, 11, false))));
                            J$.X1(6177, J$.P(6169, J$.G(6153, J$.G(6145, J$.R(6137, 'this', this, 0), 's', 0), 'cmd', 0), 'showDiskLoc', J$.R(6161, 'value', value, 0), 0));
                            return J$.X1(6201, J$.Rt(6193, J$.R(6185, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23969, J$e);
                        } finally {
                            if (J$.Fr(23977))
                                continue jalangiLabel2210;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 6209), 0));
            J$.X1(6321, J$.M(6313, J$.R(6257, 'define', define, 1), 'classMethod', 0)(J$.T(6265, 'showRecordId', 21, false), J$.T(6305, {
                callback: J$.T(6273, false, 23, false),
                promise: J$.T(6281, false, 23, false),
                returns: J$.T(6297, [J$.R(6289, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(6609, J$.P(6601, J$.G(6337, J$.R(6329, 'Cursor', Cursor, 1), 'prototype', 0), 'snapshot', J$.T(6593, function (value) {
                jalangiLabel2211:
                    while (true) {
                        try {
                            J$.Fe(6569, arguments.callee, this, arguments);
                            arguments = J$.N(6577, 'arguments', arguments, 4);
                            value = J$.N(6585, 'value', value, 4);
                            if (J$.X1(23985, J$.C(328, J$.C(320, J$.C(312, J$.B(210, '==', J$.G(6361, J$.G(6353, J$.R(6345, 'this', this, 0), 's', 0), 'state', 0), J$.G(6377, J$.R(6369, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(218, '==', J$.G(6401, J$.G(6393, J$.R(6385, 'this', this, 0), 's', 0), 'state', 0), J$.G(6417, J$.R(6409, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(6433, J$.R(6425, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(6489, J$.Th(6481, J$.M(6473, J$.R(6441, 'MongoError', MongoError, 1), 'create', 0)(J$.T(6465, {
                                message: J$.T(6449, 'Cursor is closed', 21, false),
                                driver: J$.T(6457, true, 23, false)
                            }, 11, false))));
                            J$.X1(6537, J$.P(6529, J$.G(6513, J$.G(6505, J$.R(6497, 'this', this, 0), 's', 0), 'cmd', 0), 'snapshot', J$.R(6521, 'value', value, 0), 0));
                            return J$.X1(6561, J$.Rt(6553, J$.R(6545, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23993, J$e);
                        } finally {
                            if (J$.Fr(24001))
                                continue jalangiLabel2211;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 6569), 0));
            J$.X1(6681, J$.M(6673, J$.R(6617, 'define', define, 1), 'classMethod', 0)(J$.T(6625, 'snapshot', 21, false), J$.T(6665, {
                callback: J$.T(6633, false, 23, false),
                promise: J$.T(6641, false, 23, false),
                returns: J$.T(6657, [J$.R(6649, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(7153, J$.P(7145, J$.G(6697, J$.R(6689, 'Cursor', Cursor, 1), 'prototype', 0), 'setCursorOption', J$.T(7137, function (field, value) {
                jalangiLabel2212:
                    while (true) {
                        try {
                            J$.Fe(7105, arguments.callee, this, arguments);
                            arguments = J$.N(7113, 'arguments', arguments, 4);
                            field = J$.N(7121, 'field', field, 4);
                            value = J$.N(7129, 'value', value, 4);
                            if (J$.X1(24009, J$.C(352, J$.C(344, J$.C(336, J$.B(226, '==', J$.G(6721, J$.G(6713, J$.R(6705, 'this', this, 0), 's', 0), 'state', 0), J$.G(6737, J$.R(6729, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(234, '==', J$.G(6761, J$.G(6753, J$.R(6745, 'this', this, 0), 's', 0), 'state', 0), J$.G(6777, J$.R(6769, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(6793, J$.R(6785, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(6849, J$.Th(6841, J$.M(6833, J$.R(6801, 'MongoError', MongoError, 1), 'create', 0)(J$.T(6825, {
                                message: J$.T(6809, 'Cursor is closed', 21, false),
                                driver: J$.T(6817, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(24017, J$.C(360, J$.B(250, '==', J$.M(6873, J$.R(6857, 'fields', fields, 1), 'indexOf', 0)(J$.R(6865, 'field', field, 0)), J$.U(242, '-', J$.T(6881, 1, 22, false)), 0))))
                                throw J$.X1(6969, J$.Th(6961, J$.M(6953, J$.R(6889, 'MongoError', MongoError, 1), 'create', 0)(J$.T(6945, {
                                message: J$.F(6929, J$.R(6897, 'f', f, 1), 0)(J$.T(6905, 'option %s not a supported option %s', 21, false), J$.R(6913, 'field', field, 0), J$.R(6921, 'fields', fields, 1)),
                                driver: J$.T(6937, true, 23, false)
                            }, 11, false))));
                            J$.X1(7017, J$.P(7009, J$.G(6985, J$.R(6977, 'this', this, 0), 's', 0), J$.R(6993, 'field', field, 0), J$.R(7001, 'value', value, 0), 2));
                            if (J$.X1(24025, J$.C(368, J$.B(258, '==', J$.R(7025, 'field', field, 0), J$.T(7033, 'numberOfRetries', 21, false), 0))))
                                J$.X1(7073, J$.P(7065, J$.G(7049, J$.R(7041, 'this', this, 0), 's', 0), 'currentNumberOfRetries', J$.R(7057, 'value', value, 0), 0));
                            return J$.X1(7097, J$.Rt(7089, J$.R(7081, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(24033, J$e);
                        } finally {
                            if (J$.Fr(24041))
                                continue jalangiLabel2212;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 7105), 0));
            J$.X1(7225, J$.M(7217, J$.R(7161, 'define', define, 1), 'classMethod', 0)(J$.T(7169, 'setCursorOption', 21, false), J$.T(7209, {
                callback: J$.T(7177, false, 23, false),
                promise: J$.T(7185, false, 23, false),
                returns: J$.T(7201, [J$.R(7193, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(7745, J$.P(7737, J$.G(7241, J$.R(7233, 'Cursor', Cursor, 1), 'prototype', 0), 'addCursorFlag', J$.T(7729, function (flag, value) {
                jalangiLabel2213:
                    while (true) {
                        try {
                            J$.Fe(7697, arguments.callee, this, arguments);
                            arguments = J$.N(7705, 'arguments', arguments, 4);
                            flag = J$.N(7713, 'flag', flag, 4);
                            value = J$.N(7721, 'value', value, 4);
                            if (J$.X1(24049, J$.C(392, J$.C(384, J$.C(376, J$.B(266, '==', J$.G(7265, J$.G(7257, J$.R(7249, 'this', this, 0), 's', 0), 'state', 0), J$.G(7281, J$.R(7273, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(274, '==', J$.G(7305, J$.G(7297, J$.R(7289, 'this', this, 0), 's', 0), 'state', 0), J$.G(7321, J$.R(7313, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(7337, J$.R(7329, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(7393, J$.Th(7385, J$.M(7377, J$.R(7345, 'MongoError', MongoError, 1), 'create', 0)(J$.T(7369, {
                                message: J$.T(7353, 'Cursor is closed', 21, false),
                                driver: J$.T(7361, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(24057, J$.C(400, J$.B(290, '==', J$.M(7417, J$.R(7401, 'flags', flags, 1), 'indexOf', 0)(J$.R(7409, 'flag', flag, 0)), J$.U(282, '-', J$.T(7425, 1, 22, false)), 0))))
                                throw J$.X1(7513, J$.Th(7505, J$.M(7497, J$.R(7433, 'MongoError', MongoError, 1), 'create', 0)(J$.T(7489, {
                                message: J$.F(7473, J$.R(7441, 'f', f, 1), 0)(J$.T(7449, 'flag %s not a supported flag %s', 21, false), J$.R(7457, 'flag', flag, 0), J$.R(7465, 'flags', flags, 1)),
                                driver: J$.T(7481, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(24065, J$.C(408, J$.B(306, '!=', J$.U(298, 'typeof', J$.R(7521, 'value', value, 0)), J$.T(7529, 'boolean', 21, false), 0))))
                                throw J$.X1(7609, J$.Th(7601, J$.M(7593, J$.R(7537, 'MongoError', MongoError, 1), 'create', 0)(J$.T(7585, {
                                message: J$.F(7569, J$.R(7545, 'f', f, 1), 0)(J$.T(7553, 'flag %s must be a boolean value', 21, false), J$.R(7561, 'flag', flag, 0)),
                                driver: J$.T(7577, true, 23, false)
                            }, 11, false))));
                            J$.X1(7665, J$.P(7657, J$.G(7633, J$.G(7625, J$.R(7617, 'this', this, 0), 's', 0), 'cmd', 0), J$.R(7641, 'flag', flag, 0), J$.R(7649, 'value', value, 0), 2));
                            return J$.X1(7689, J$.Rt(7681, J$.R(7673, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(24073, J$e);
                        } finally {
                            if (J$.Fr(24081))
                                continue jalangiLabel2213;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 7697), 0));
            J$.X1(7817, J$.M(7809, J$.R(7753, 'define', define, 1), 'classMethod', 0)(J$.T(7761, 'addCursorFlag', 21, false), J$.T(7801, {
                callback: J$.T(7769, false, 23, false),
                promise: J$.T(7777, false, 23, false),
                returns: J$.T(7793, [J$.R(7785, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(8369, J$.P(8361, J$.G(7833, J$.R(7825, 'Cursor', Cursor, 1), 'prototype', 0), 'addQueryModifier', J$.T(8353, function (name, value) {
                jalangiLabel2214:
                    while (true) {
                        try {
                            J$.Fe(8313, arguments.callee, this, arguments);
                            arguments = J$.N(8321, 'arguments', arguments, 4);
                            name = J$.N(8329, 'name', name, 4);
                            value = J$.N(8337, 'value', value, 4);
                            J$.N(8345, 'field', field, 0);
                            if (J$.X1(24089, J$.C(432, J$.C(424, J$.C(416, J$.B(314, '==', J$.G(7857, J$.G(7849, J$.R(7841, 'this', this, 0), 's', 0), 'state', 0), J$.G(7873, J$.R(7865, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(322, '==', J$.G(7897, J$.G(7889, J$.R(7881, 'this', this, 0), 's', 0), 'state', 0), J$.G(7913, J$.R(7905, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(7929, J$.R(7921, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(7985, J$.Th(7977, J$.M(7969, J$.R(7937, 'MongoError', MongoError, 1), 'create', 0)(J$.T(7961, {
                                message: J$.T(7945, 'Cursor is closed', 21, false),
                                driver: J$.T(7953, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(24097, J$.C(440, J$.B(330, '!=', J$.G(8009, J$.R(7993, 'name', name, 0), J$.T(8001, 0, 22, false), 4), J$.T(8017, '$', 21, false), 0))))
                                throw J$.X1(8089, J$.Th(8081, J$.M(8073, J$.R(8025, 'MongoError', MongoError, 1), 'create', 0)(J$.T(8065, {
                                message: J$.F(8049, J$.R(8033, 'f', f, 1), 0)(J$.T(8041, '%s is not a valid query modifier', 21, false)),
                                driver: J$.T(8057, true, 23, false)
                            }, 11, false))));
                            var field = J$.X1(8129, J$.W(8121, 'field', J$.M(8113, J$.R(8097, 'name', name, 0), 'substr', 0)(J$.T(8105, 1, 22, false)), field, 1));
                            J$.X1(8185, J$.P(8177, J$.G(8153, J$.G(8145, J$.R(8137, 'this', this, 0), 's', 0), 'cmd', 0), J$.R(8161, 'field', field, 0), J$.R(8169, 'value', value, 0), 2));
                            if (J$.X1(24105, J$.C(448, J$.B(338, '==', J$.R(8193, 'field', field, 0), J$.T(8201, 'orderby', 21, false), 0))))
                                J$.X1(8281, J$.P(8273, J$.G(8225, J$.G(8217, J$.R(8209, 'this', this, 0), 's', 0), 'cmd', 0), 'sort', J$.G(8265, J$.G(8249, J$.G(8241, J$.R(8233, 'this', this, 0), 's', 0), 'cmd', 0), J$.R(8257, 'field', field, 0), 4), 0));
                            return J$.X1(8305, J$.Rt(8297, J$.R(8289, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(24113, J$e);
                        } finally {
                            if (J$.Fr(24121))
                                continue jalangiLabel2214;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 8313), 0));
            J$.X1(8441, J$.M(8433, J$.R(8377, 'define', define, 1), 'classMethod', 0)(J$.T(8385, 'addQueryModifier', 21, false), J$.T(8425, {
                callback: J$.T(8393, false, 23, false),
                promise: J$.T(8401, false, 23, false),
                returns: J$.T(8417, [J$.R(8409, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(8729, J$.P(8721, J$.G(8457, J$.R(8449, 'Cursor', Cursor, 1), 'prototype', 0), 'comment', J$.T(8713, function (value) {
                jalangiLabel2215:
                    while (true) {
                        try {
                            J$.Fe(8689, arguments.callee, this, arguments);
                            arguments = J$.N(8697, 'arguments', arguments, 4);
                            value = J$.N(8705, 'value', value, 4);
                            if (J$.X1(24129, J$.C(472, J$.C(464, J$.C(456, J$.B(346, '==', J$.G(8481, J$.G(8473, J$.R(8465, 'this', this, 0), 's', 0), 'state', 0), J$.G(8497, J$.R(8489, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(354, '==', J$.G(8521, J$.G(8513, J$.R(8505, 'this', this, 0), 's', 0), 'state', 0), J$.G(8537, J$.R(8529, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(8553, J$.R(8545, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(8609, J$.Th(8601, J$.M(8593, J$.R(8561, 'MongoError', MongoError, 1), 'create', 0)(J$.T(8585, {
                                message: J$.T(8569, 'Cursor is closed', 21, false),
                                driver: J$.T(8577, true, 23, false)
                            }, 11, false))));
                            J$.X1(8657, J$.P(8649, J$.G(8633, J$.G(8625, J$.R(8617, 'this', this, 0), 's', 0), 'cmd', 0), 'comment', J$.R(8641, 'value', value, 0), 0));
                            return J$.X1(8681, J$.Rt(8673, J$.R(8665, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(24137, J$e);
                        } finally {
                            if (J$.Fr(24145))
                                continue jalangiLabel2215;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 8689), 0));
            J$.X1(8801, J$.M(8793, J$.R(8737, 'define', define, 1), 'classMethod', 0)(J$.T(8745, 'comment', 21, false), J$.T(8785, {
                callback: J$.T(8753, false, 23, false),
                promise: J$.T(8761, false, 23, false),
                returns: J$.T(8777, [J$.R(8769, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(9161, J$.P(9153, J$.G(8817, J$.R(8809, 'Cursor', Cursor, 1), 'prototype', 0), 'maxAwaitTimeMS', J$.T(9145, function (value) {
                jalangiLabel2216:
                    while (true) {
                        try {
                            J$.Fe(9121, arguments.callee, this, arguments);
                            arguments = J$.N(9129, 'arguments', arguments, 4);
                            value = J$.N(9137, 'value', value, 4);
                            if (J$.X1(24153, J$.C(480, J$.B(370, '!=', J$.U(362, 'typeof', J$.R(8825, 'value', value, 0)), J$.T(8833, 'number', 21, false), 0))))
                                throw J$.X1(8889, J$.Th(8881, J$.M(8873, J$.R(8841, 'MongoError', MongoError, 1), 'create', 0)(J$.T(8865, {
                                message: J$.T(8849, 'maxAwaitTimeMS must be a number', 21, false),
                                driver: J$.T(8857, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(24161, J$.C(504, J$.C(496, J$.C(488, J$.B(378, '==', J$.G(8913, J$.G(8905, J$.R(8897, 'this', this, 0), 's', 0), 'state', 0), J$.G(8929, J$.R(8921, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(386, '==', J$.G(8953, J$.G(8945, J$.R(8937, 'this', this, 0), 's', 0), 'state', 0), J$.G(8969, J$.R(8961, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(8985, J$.R(8977, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(9041, J$.Th(9033, J$.M(9025, J$.R(8993, 'MongoError', MongoError, 1), 'create', 0)(J$.T(9017, {
                                message: J$.T(9001, 'Cursor is closed', 21, false),
                                driver: J$.T(9009, true, 23, false)
                            }, 11, false))));
                            J$.X1(9089, J$.P(9081, J$.G(9065, J$.G(9057, J$.R(9049, 'this', this, 0), 's', 0), 'cmd', 0), 'maxAwaitTimeMS', J$.R(9073, 'value', value, 0), 0));
                            return J$.X1(9113, J$.Rt(9105, J$.R(9097, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(24169, J$e);
                        } finally {
                            if (J$.Fr(24177))
                                continue jalangiLabel2216;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 9121), 0));
            J$.X1(9233, J$.M(9225, J$.R(9169, 'define', define, 1), 'classMethod', 0)(J$.T(9177, 'maxAwaitTimeMS', 21, false), J$.T(9217, {
                callback: J$.T(9185, false, 23, false),
                promise: J$.T(9193, false, 23, false),
                returns: J$.T(9209, [J$.R(9201, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(9593, J$.P(9585, J$.G(9249, J$.R(9241, 'Cursor', Cursor, 1), 'prototype', 0), 'maxTimeMS', J$.T(9577, function (value) {
                jalangiLabel2217:
                    while (true) {
                        try {
                            J$.Fe(9553, arguments.callee, this, arguments);
                            arguments = J$.N(9561, 'arguments', arguments, 4);
                            value = J$.N(9569, 'value', value, 4);
                            if (J$.X1(24185, J$.C(512, J$.B(402, '!=', J$.U(394, 'typeof', J$.R(9257, 'value', value, 0)), J$.T(9265, 'number', 21, false), 0))))
                                throw J$.X1(9321, J$.Th(9313, J$.M(9305, J$.R(9273, 'MongoError', MongoError, 1), 'create', 0)(J$.T(9297, {
                                message: J$.T(9281, 'maxTimeMS must be a number', 21, false),
                                driver: J$.T(9289, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(24193, J$.C(536, J$.C(528, J$.C(520, J$.B(410, '==', J$.G(9345, J$.G(9337, J$.R(9329, 'this', this, 0), 's', 0), 'state', 0), J$.G(9361, J$.R(9353, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(418, '==', J$.G(9385, J$.G(9377, J$.R(9369, 'this', this, 0), 's', 0), 'state', 0), J$.G(9401, J$.R(9393, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(9417, J$.R(9409, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(9473, J$.Th(9465, J$.M(9457, J$.R(9425, 'MongoError', MongoError, 1), 'create', 0)(J$.T(9449, {
                                message: J$.T(9433, 'Cursor is closed', 21, false),
                                driver: J$.T(9441, true, 23, false)
                            }, 11, false))));
                            J$.X1(9521, J$.P(9513, J$.G(9497, J$.G(9489, J$.R(9481, 'this', this, 0), 's', 0), 'cmd', 0), 'maxTimeMS', J$.R(9505, 'value', value, 0), 0));
                            return J$.X1(9545, J$.Rt(9537, J$.R(9529, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(24201, J$e);
                        } finally {
                            if (J$.Fr(24209))
                                continue jalangiLabel2217;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 9553), 0));
            J$.X1(9665, J$.M(9657, J$.R(9601, 'define', define, 1), 'classMethod', 0)(J$.T(9609, 'maxTimeMS', 21, false), J$.T(9649, {
                callback: J$.T(9617, false, 23, false),
                promise: J$.T(9625, false, 23, false),
                returns: J$.T(9641, [J$.R(9633, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(9721, J$.P(9713, J$.G(9681, J$.R(9673, 'Cursor', Cursor, 1), 'prototype', 0), 'maxTimeMs', J$.G(9705, J$.G(9697, J$.R(9689, 'Cursor', Cursor, 1), 'prototype', 0), 'maxTimeMS', 0), 0));
            J$.X1(9793, J$.M(9785, J$.R(9729, 'define', define, 1), 'classMethod', 0)(J$.T(9737, 'maxTimeMs', 21, false), J$.T(9777, {
                callback: J$.T(9745, false, 23, false),
                promise: J$.T(9753, false, 23, false),
                returns: J$.T(9769, [J$.R(9761, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(10081, J$.P(10073, J$.G(9809, J$.R(9801, 'Cursor', Cursor, 1), 'prototype', 0), 'project', J$.T(10065, function (value) {
                jalangiLabel2218:
                    while (true) {
                        try {
                            J$.Fe(10041, arguments.callee, this, arguments);
                            arguments = J$.N(10049, 'arguments', arguments, 4);
                            value = J$.N(10057, 'value', value, 4);
                            if (J$.X1(24217, J$.C(560, J$.C(552, J$.C(544, J$.B(426, '==', J$.G(9833, J$.G(9825, J$.R(9817, 'this', this, 0), 's', 0), 'state', 0), J$.G(9849, J$.R(9841, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(434, '==', J$.G(9873, J$.G(9865, J$.R(9857, 'this', this, 0), 's', 0), 'state', 0), J$.G(9889, J$.R(9881, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(9905, J$.R(9897, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(9961, J$.Th(9953, J$.M(9945, J$.R(9913, 'MongoError', MongoError, 1), 'create', 0)(J$.T(9937, {
                                message: J$.T(9921, 'Cursor is closed', 21, false),
                                driver: J$.T(9929, true, 23, false)
                            }, 11, false))));
                            J$.X1(10009, J$.P(10001, J$.G(9985, J$.G(9977, J$.R(9969, 'this', this, 0), 's', 0), 'cmd', 0), 'fields', J$.R(9993, 'value', value, 0), 0));
                            return J$.X1(10033, J$.Rt(10025, J$.R(10017, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(24225, J$e);
                        } finally {
                            if (J$.Fr(24233))
                                continue jalangiLabel2218;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 10041), 0));
            J$.X1(10153, J$.M(10145, J$.R(10089, 'define', define, 1), 'classMethod', 0)(J$.T(10097, 'project', 21, false), J$.T(10137, {
                callback: J$.T(10105, false, 23, false),
                promise: J$.T(10113, false, 23, false),
                returns: J$.T(10129, [J$.R(10121, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(11201, J$.P(11193, J$.G(10169, J$.R(10161, 'Cursor', Cursor, 1), 'prototype', 0), 'sort', J$.T(11185, function (keyOrList, direction) {
                jalangiLabel2220:
                    while (true) {
                        try {
                            J$.Fe(11145, arguments.callee, this, arguments);
                            arguments = J$.N(11153, 'arguments', arguments, 4);
                            keyOrList = J$.N(11161, 'keyOrList', keyOrList, 4);
                            direction = J$.N(11169, 'direction', direction, 4);
                            J$.N(11177, 'order', order, 0);
                            if (J$.X1(24241, J$.C(568, J$.G(10201, J$.G(10193, J$.G(10185, J$.R(10177, 'this', this, 0), 's', 0), 'options', 0), 'tailable', 0))))
                                throw J$.X1(10257, J$.Th(10249, J$.M(10241, J$.R(10209, 'MongoError', MongoError, 1), 'create', 0)(J$.T(10233, {
                                message: J$.T(10217, 'Tailable cursor doesn\'t support sorting', 21, false),
                                driver: J$.T(10225, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(24249, J$.C(592, J$.C(584, J$.C(576, J$.B(442, '==', J$.G(10281, J$.G(10273, J$.R(10265, 'this', this, 0), 's', 0), 'state', 0), J$.G(10297, J$.R(10289, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(450, '==', J$.G(10321, J$.G(10313, J$.R(10305, 'this', this, 0), 's', 0), 'state', 0), J$.G(10337, J$.R(10329, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(10353, J$.R(10345, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(10409, J$.Th(10401, J$.M(10393, J$.R(10361, 'MongoError', MongoError, 1), 'create', 0)(J$.T(10385, {
                                message: J$.T(10369, 'Cursor is closed', 21, false),
                                driver: J$.T(10377, true, 23, false)
                            }, 11, false))));
                            var order = J$.X1(10433, J$.W(10425, 'order', J$.R(10417, 'keyOrList', keyOrList, 0), order, 1));
                            if (J$.X1(24297, J$.C(640, J$.C(600, J$.M(10457, J$.R(10441, 'Array', Array, 2), 'isArray', 0)(J$.R(10449, 'order', order, 0))) ? J$.M(10497, J$.R(10465, 'Array', Array, 2), 'isArray', 0)(J$.G(10489, J$.R(10473, 'order', order, 0), J$.T(10481, 0, 22, false), 4)) : J$._()))) {
                                J$.X1(10969, order = J$.W(10961, 'order', J$.F(10953, J$.R(10505, 'Map', Map, 1), 1)(J$.M(10945, J$.R(10513, 'order', order, 0), 'map', 0)(J$.T(10937, function (x) {
                                    jalangiLabel2219:
                                        while (true) {
                                            try {
                                                J$.Fe(10905, arguments.callee, this, arguments);
                                                arguments = J$.N(10913, 'arguments', arguments, 4);
                                                x = J$.N(10921, 'x', x, 4);
                                                J$.N(10929, 'value', value, 0);
                                                var value = J$.X1(10569, J$.W(10561, 'value', J$.T(10553, [
                                                    J$.G(10537, J$.R(10521, 'x', x, 0), J$.T(10529, 0, 22, false), 4),
                                                    J$.T(10545, null, 25, false)
                                                ], 10, false), value, 1));
                                                if (J$.X1(24273, J$.C(632, J$.B(458, '==', J$.G(10593, J$.R(10577, 'x', x, 0), J$.T(10585, 1, 22, false), 4), J$.T(10601, 'asc', 21, false), 0)))) {
                                                    J$.X1(10641, J$.P(10633, J$.R(10609, 'value', value, 0), J$.T(10617, 1, 22, false), J$.T(10625, 1, 22, false), 2));
                                                } else if (J$.X1(24265, J$.C(624, J$.B(466, '==', J$.G(10665, J$.R(10649, 'x', x, 0), J$.T(10657, 1, 22, false), 4), J$.T(10673, 'desc', 21, false), 0)))) {
                                                    J$.X1(10713, J$.P(10705, J$.R(10681, 'value', value, 0), J$.T(10689, 1, 22, false), J$.U(474, '-', J$.T(10697, 1, 22, false)), 2));
                                                } else if (J$.X1(24257, J$.C(616, J$.C(608, J$.B(482, '==', J$.G(10737, J$.R(10721, 'x', x, 0), J$.T(10729, 1, 22, false), 4), J$.T(10745, 1, 22, false), 0)) ? J$._() : J$.B(498, '==', J$.G(10769, J$.R(10753, 'x', x, 0), J$.T(10761, 1, 22, false), 4), J$.U(490, '-', J$.T(10777, 1, 22, false)), 0)))) {
                                                    J$.X1(10833, J$.P(10825, J$.R(10785, 'value', value, 0), J$.T(10793, 1, 22, false), J$.G(10817, J$.R(10801, 'x', x, 0), J$.T(10809, 1, 22, false), 4), 2));
                                                } else {
                                                    throw J$.X1(10873, J$.Th(10865, J$.F(10857, J$.R(10841, 'MongoError', MongoError, 1), 1)(J$.T(10849, 'Illegal sort clause, must be of the form [[\'field1\', \'(ascending|descending)\'], [\'field2\', \'(ascending|descending)\']]', 21, false))));
                                                }
                                                return J$.X1(10897, J$.Rt(10889, J$.R(10881, 'value', value, 0)));
                                            } catch (J$e) {
                                                J$.Ex(24281, J$e);
                                            } finally {
                                                if (J$.Fr(24289))
                                                    continue jalangiLabel2219;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 10905))), order, 0));
                            }
                            if (J$.X1(24305, J$.C(648, J$.B(506, '!=', J$.R(10977, 'direction', direction, 0), J$.T(10985, null, 25, false), 0)))) {
                                J$.X1(11033, order = J$.W(11025, 'order', J$.T(11017, [J$.T(11009, [
                                        J$.R(10993, 'keyOrList', keyOrList, 0),
                                        J$.R(11001, 'direction', direction, 0)
                                    ], 10, false)], 10, false), order, 0));
                            }
                            J$.X1(11081, J$.P(11073, J$.G(11057, J$.G(11049, J$.R(11041, 'this', this, 0), 's', 0), 'cmd', 0), 'sort', J$.R(11065, 'order', order, 0), 0));
                            J$.X1(11113, J$.P(11105, J$.R(11089, 'this', this, 0), 'sortValue', J$.R(11097, 'order', order, 0), 0));
                            return J$.X1(11137, J$.Rt(11129, J$.R(11121, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(24313, J$e);
                        } finally {
                            if (J$.Fr(24321))
                                continue jalangiLabel2220;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 11145), 0));
            J$.X1(11273, J$.M(11265, J$.R(11209, 'define', define, 1), 'classMethod', 0)(J$.T(11217, 'sort', 21, false), J$.T(11257, {
                callback: J$.T(11225, false, 23, false),
                promise: J$.T(11233, false, 23, false),
                returns: J$.T(11249, [J$.R(11241, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(11713, J$.P(11705, J$.G(11289, J$.R(11281, 'Cursor', Cursor, 1), 'prototype', 0), 'batchSize', J$.T(11697, function (value) {
                jalangiLabel2221:
                    while (true) {
                        try {
                            J$.Fe(11673, arguments.callee, this, arguments);
                            arguments = J$.N(11681, 'arguments', arguments, 4);
                            value = J$.N(11689, 'value', value, 4);
                            if (J$.X1(24329, J$.C(656, J$.G(11321, J$.G(11313, J$.G(11305, J$.R(11297, 'this', this, 0), 's', 0), 'options', 0), 'tailable', 0))))
                                throw J$.X1(11377, J$.Th(11369, J$.M(11361, J$.R(11329, 'MongoError', MongoError, 1), 'create', 0)(J$.T(11353, {
                                message: J$.T(11337, 'Tailable cursor doesn\'t support batchSize', 21, false),
                                driver: J$.T(11345, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(24337, J$.C(672, J$.C(664, J$.B(514, '==', J$.G(11401, J$.G(11393, J$.R(11385, 'this', this, 0), 's', 0), 'state', 0), J$.G(11417, J$.R(11409, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.M(11433, J$.R(11425, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(11489, J$.Th(11481, J$.M(11473, J$.R(11441, 'MongoError', MongoError, 1), 'create', 0)(J$.T(11465, {
                                message: J$.T(11449, 'Cursor is closed', 21, false),
                                driver: J$.T(11457, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(24345, J$.C(680, J$.B(530, '!=', J$.U(522, 'typeof', J$.R(11497, 'value', value, 0)), J$.T(11505, 'number', 21, false), 0))))
                                throw J$.X1(11561, J$.Th(11553, J$.M(11545, J$.R(11513, 'MongoError', MongoError, 1), 'create', 0)(J$.T(11537, {
                                message: J$.T(11521, 'batchSize requires an integer', 21, false),
                                driver: J$.T(11529, true, 23, false)
                            }, 11, false))));
                            J$.X1(11609, J$.P(11601, J$.G(11585, J$.G(11577, J$.R(11569, 'this', this, 0), 's', 0), 'cmd', 0), 'batchSize', J$.R(11593, 'value', value, 0), 0));
                            J$.X1(11641, J$.M(11633, J$.R(11617, 'this', this, 0), 'setCursorBatchSize', 0)(J$.R(11625, 'value', value, 0)));
                            return J$.X1(11665, J$.Rt(11657, J$.R(11649, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(24353, J$e);
                        } finally {
                            if (J$.Fr(24361))
                                continue jalangiLabel2221;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 11673), 0));
            J$.X1(11785, J$.M(11777, J$.R(11721, 'define', define, 1), 'classMethod', 0)(J$.T(11729, 'batchSize', 21, false), J$.T(11769, {
                callback: J$.T(11737, false, 23, false),
                promise: J$.T(11745, false, 23, false),
                returns: J$.T(11761, [J$.R(11753, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(12265, J$.P(12257, J$.G(11801, J$.R(11793, 'Cursor', Cursor, 1), 'prototype', 0), 'limit', J$.T(12249, function (value) {
                jalangiLabel2222:
                    while (true) {
                        try {
                            J$.Fe(12225, arguments.callee, this, arguments);
                            arguments = J$.N(12233, 'arguments', arguments, 4);
                            value = J$.N(12241, 'value', value, 4);
                            if (J$.X1(24369, J$.C(688, J$.G(11833, J$.G(11825, J$.G(11817, J$.R(11809, 'this', this, 0), 's', 0), 'options', 0), 'tailable', 0))))
                                throw J$.X1(11889, J$.Th(11881, J$.M(11873, J$.R(11841, 'MongoError', MongoError, 1), 'create', 0)(J$.T(11865, {
                                message: J$.T(11849, 'Tailable cursor doesn\'t support limit', 21, false),
                                driver: J$.T(11857, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(24377, J$.C(712, J$.C(704, J$.C(696, J$.B(538, '==', J$.G(11913, J$.G(11905, J$.R(11897, 'this', this, 0), 's', 0), 'state', 0), J$.G(11929, J$.R(11921, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.B(546, '==', J$.G(11953, J$.G(11945, J$.R(11937, 'this', this, 0), 's', 0), 'state', 0), J$.G(11969, J$.R(11961, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.M(11985, J$.R(11977, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(12041, J$.Th(12033, J$.M(12025, J$.R(11993, 'MongoError', MongoError, 1), 'create', 0)(J$.T(12017, {
                                message: J$.T(12001, 'Cursor is closed', 21, false),
                                driver: J$.T(12009, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(24385, J$.C(720, J$.B(562, '!=', J$.U(554, 'typeof', J$.R(12049, 'value', value, 0)), J$.T(12057, 'number', 21, false), 0))))
                                throw J$.X1(12113, J$.Th(12105, J$.M(12097, J$.R(12065, 'MongoError', MongoError, 1), 'create', 0)(J$.T(12089, {
                                message: J$.T(12073, 'limit requires an integer', 21, false),
                                driver: J$.T(12081, true, 23, false)
                            }, 11, false))));
                            J$.X1(12161, J$.P(12153, J$.G(12137, J$.G(12129, J$.R(12121, 'this', this, 0), 's', 0), 'cmd', 0), 'limit', J$.R(12145, 'value', value, 0), 0));
                            J$.X1(12193, J$.M(12185, J$.R(12169, 'this', this, 0), 'setCursorLimit', 0)(J$.R(12177, 'value', value, 0)));
                            return J$.X1(12217, J$.Rt(12209, J$.R(12201, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(24393, J$e);
                        } finally {
                            if (J$.Fr(24401))
                                continue jalangiLabel2222;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 12225), 0));
            J$.X1(12337, J$.M(12329, J$.R(12273, 'define', define, 1), 'classMethod', 0)(J$.T(12281, 'limit', 21, false), J$.T(12321, {
                callback: J$.T(12289, false, 23, false),
                promise: J$.T(12297, false, 23, false),
                returns: J$.T(12313, [J$.R(12305, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(12817, J$.P(12809, J$.G(12353, J$.R(12345, 'Cursor', Cursor, 1), 'prototype', 0), 'skip', J$.T(12801, function (value) {
                jalangiLabel2223:
                    while (true) {
                        try {
                            J$.Fe(12777, arguments.callee, this, arguments);
                            arguments = J$.N(12785, 'arguments', arguments, 4);
                            value = J$.N(12793, 'value', value, 4);
                            if (J$.X1(24409, J$.C(728, J$.G(12385, J$.G(12377, J$.G(12369, J$.R(12361, 'this', this, 0), 's', 0), 'options', 0), 'tailable', 0))))
                                throw J$.X1(12441, J$.Th(12433, J$.M(12425, J$.R(12393, 'MongoError', MongoError, 1), 'create', 0)(J$.T(12417, {
                                message: J$.T(12401, 'Tailable cursor doesn\'t support skip', 21, false),
                                driver: J$.T(12409, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(24417, J$.C(752, J$.C(744, J$.C(736, J$.B(570, '==', J$.G(12465, J$.G(12457, J$.R(12449, 'this', this, 0), 's', 0), 'state', 0), J$.G(12481, J$.R(12473, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.B(578, '==', J$.G(12505, J$.G(12497, J$.R(12489, 'this', this, 0), 's', 0), 'state', 0), J$.G(12521, J$.R(12513, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.M(12537, J$.R(12529, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(12593, J$.Th(12585, J$.M(12577, J$.R(12545, 'MongoError', MongoError, 1), 'create', 0)(J$.T(12569, {
                                message: J$.T(12553, 'Cursor is closed', 21, false),
                                driver: J$.T(12561, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(24425, J$.C(760, J$.B(594, '!=', J$.U(586, 'typeof', J$.R(12601, 'value', value, 0)), J$.T(12609, 'number', 21, false), 0))))
                                throw J$.X1(12665, J$.Th(12657, J$.M(12649, J$.R(12617, 'MongoError', MongoError, 1), 'create', 0)(J$.T(12641, {
                                message: J$.T(12625, 'skip requires an integer', 21, false),
                                driver: J$.T(12633, true, 23, false)
                            }, 11, false))));
                            J$.X1(12713, J$.P(12705, J$.G(12689, J$.G(12681, J$.R(12673, 'this', this, 0), 's', 0), 'cmd', 0), 'skip', J$.R(12697, 'value', value, 0), 0));
                            J$.X1(12745, J$.M(12737, J$.R(12721, 'this', this, 0), 'setCursorSkip', 0)(J$.R(12729, 'value', value, 0)));
                            return J$.X1(12769, J$.Rt(12761, J$.R(12753, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(24433, J$e);
                        } finally {
                            if (J$.Fr(24441))
                                continue jalangiLabel2223;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 12777), 0));
            J$.X1(12889, J$.M(12881, J$.R(12825, 'define', define, 1), 'classMethod', 0)(J$.T(12833, 'skip', 21, false), J$.T(12873, {
                callback: J$.T(12841, false, 23, false),
                promise: J$.T(12849, false, 23, false),
                returns: J$.T(12865, [J$.R(12857, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(12945, J$.P(12937, J$.G(12905, J$.R(12897, 'Cursor', Cursor, 1), 'prototype', 0), 'nextObject', J$.G(12929, J$.G(12921, J$.R(12913, 'Cursor', Cursor, 1), 'prototype', 0), 'next', 0), 0));
            var nextObject = J$.X1(13969, J$.W(13961, 'nextObject', J$.T(13953, function (self, callback) {
                jalangiLabel2226:
                    while (true) {
                        try {
                            J$.Fe(13921, arguments.callee, this, arguments);
                            arguments = J$.N(13929, 'arguments', arguments, 4);
                            self = J$.N(13937, 'self', self, 4);
                            callback = J$.N(13945, 'callback', callback, 4);
                            if (J$.X1(24449, J$.C(784, J$.C(776, J$.B(602, '==', J$.G(12969, J$.G(12961, J$.R(12953, 'self', self, 0), 's', 0), 'state', 0), J$.G(12985, J$.R(12977, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.C(768, J$.G(13001, J$.R(12993, 'self', self, 0), 'isDead', 0)) ? J$.M(13017, J$.R(13009, 'self', self, 0), 'isDead', 0)() : J$._())))
                                return J$.X1(13097, J$.Rt(13089, J$.F(13081, J$.R(13025, 'handleCallback', handleCallback, 1), 0)(J$.R(13033, 'callback', callback, 0), J$.M(13073, J$.R(13041, 'MongoError', MongoError, 1), 'create', 0)(J$.T(13065, {
                                message: J$.T(13049, 'Cursor is closed', 21, false),
                                driver: J$.T(13057, true, 23, false)
                            }, 11, false)))));
                            if (J$.X1(24457, J$.C(800, J$.C(792, J$.B(610, '==', J$.G(13121, J$.G(13113, J$.R(13105, 'self', self, 0), 's', 0), 'state', 0), J$.G(13137, J$.R(13129, 'Cursor', Cursor, 1), 'INIT', 0), 0)) ? J$.G(13169, J$.G(13161, J$.G(13153, J$.R(13145, 'self', self, 0), 's', 0), 'cmd', 0), 'sort', 0) : J$._()))) {
                                try {
                                    J$.X1(13257, J$.P(13249, J$.G(13193, J$.G(13185, J$.R(13177, 'self', self, 0), 's', 0), 'cmd', 0), 'sort', J$.F(13241, J$.R(13201, 'formattedOrderClause', formattedOrderClause, 1), 0)(J$.G(13233, J$.G(13225, J$.G(13217, J$.R(13209, 'self', self, 0), 's', 0), 'cmd', 0), 'sort', 0)), 0));
                                } catch (err) {
                                    err = J$.N(13313, 'err', err, 1);
                                    return J$.X1(13305, J$.Rt(13297, J$.F(13289, J$.R(13265, 'handleCallback', handleCallback, 1), 0)(J$.R(13273, 'callback', callback, 0), J$.R(13281, 'err', err, 0))));
                                }
                            }
                            J$.X1(13913, J$.M(13905, J$.R(13321, 'self', self, 0), '_next', 0)(J$.T(13897, function (err, doc) {
                                jalangiLabel2225:
                                    while (true) {
                                        try {
                                            J$.Fe(13865, arguments.callee, this, arguments);
                                            arguments = J$.N(13873, 'arguments', arguments, 4);
                                            err = J$.N(13881, 'err', err, 4);
                                            doc = J$.N(13889, 'doc', doc, 4);
                                            if (J$.X1(24465, J$.C(824, J$.C(816, J$.C(808, J$.R(13329, 'err', err, 0)) ? J$.G(13345, J$.R(13337, 'err', err, 0), 'tailable', 0) : J$._()) ? J$.B(618, '==', J$.G(13369, J$.G(13361, J$.R(13353, 'self', self, 0), 's', 0), 'currentNumberOfRetries', 0), J$.T(13377, 0, 22, false), 0) : J$._())))
                                                return J$.X1(13417, J$.Rt(13409, J$.F(13401, J$.R(13385, 'callback', callback, 0), 0)(J$.R(13393, 'err', err, 0))));
                                            if (J$.X1(24497, J$.C(856, J$.C(840, J$.C(832, J$.R(13425, 'err', err, 0)) ? J$.G(13441, J$.R(13433, 'err', err, 0), 'tailable', 0) : J$._()) ? J$.B(626, '>', J$.G(13465, J$.G(13457, J$.R(13449, 'self', self, 0), 's', 0), 'currentNumberOfRetries', 0), J$.T(13473, 0, 22, false), 0) : J$._()))) {
                                                J$.X1(13537, J$.P(13529, J$.G(13489, J$.R(13481, 'self', self, 0), 's', 0), 'currentNumberOfRetries', J$.B(634, '-', J$.G(13513, J$.G(13505, J$.R(13497, 'self', self, 0), 's', 0), 'currentNumberOfRetries', 0), J$.T(13521, 1, 22, false), 0), 0));
                                                return J$.X1(13705, J$.Rt(13697, J$.F(13689, J$.R(13545, 'setTimeout', setTimeout, 2), 0)(J$.T(13657, function () {
                                                    jalangiLabel2224:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(13641, arguments.callee, this, arguments);
                                                                arguments = J$.N(13649, 'arguments', arguments, 4);
                                                                if (J$.X1(24473, J$.C(848, J$.B(642, '==', J$.G(13569, J$.G(13561, J$.R(13553, 'self', self, 0), 'cursorState', 0), 'currentLimit', 0), J$.T(13577, 0, 22, false), 0))))
                                                                    J$.X1(13601, J$.M(13593, J$.R(13585, 'self', self, 0), 'rewind', 0)());
                                                                J$.X1(13633, J$.M(13625, J$.R(13609, 'self', self, 0), 'nextObject', 0)(J$.R(13617, 'callback', callback, 0)));
                                                            } catch (J$e) {
                                                                J$.Ex(24481, J$e);
                                                            } finally {
                                                                if (J$.Fr(24489))
                                                                    continue jalangiLabel2224;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 13641), J$.G(13681, J$.G(13673, J$.R(13665, 'self', self, 0), 's', 0), 'tailableRetryInterval', 0))));
                                            }
                                            J$.X1(13753, J$.P(13745, J$.G(13721, J$.R(13713, 'self', self, 0), 's', 0), 'state', J$.G(13737, J$.R(13729, 'Cursor', Cursor, 1), 'OPEN', 0), 0));
                                            if (J$.X1(24505, J$.C(864, J$.R(13761, 'err', err, 0))))
                                                return J$.X1(13809, J$.Rt(13801, J$.F(13793, J$.R(13769, 'handleCallback', handleCallback, 1), 0)(J$.R(13777, 'callback', callback, 0), J$.R(13785, 'err', err, 0))));
                                            J$.X1(13857, J$.F(13849, J$.R(13817, 'handleCallback', handleCallback, 1), 0)(J$.R(13825, 'callback', callback, 0), J$.T(13833, null, 25, false), J$.R(13841, 'doc', doc, 0)));
                                        } catch (J$e) {
                                            J$.Ex(24513, J$e);
                                        } finally {
                                            if (J$.Fr(24521))
                                                continue jalangiLabel2225;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 13865)));
                        } catch (J$e) {
                            J$.Ex(24529, J$e);
                        } finally {
                            if (J$.Fr(24537))
                                continue jalangiLabel2226;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 13921), nextObject, 3));
            J$.X1(14025, J$.M(14017, J$.R(13977, 'define', define, 1), 'classMethod', 0)(J$.T(13985, 'nextObject', 21, false), J$.T(14009, {
                callback: J$.T(13993, true, 23, false),
                promise: J$.T(14001, true, 23, false)
            }, 11, false)));
            var loop = J$.X1(14177, J$.W(14169, 'loop', J$.T(14161, function (self, callback) {
                jalangiLabel2227:
                    while (true) {
                        try {
                            J$.Fe(14129, arguments.callee, this, arguments);
                            arguments = J$.N(14137, 'arguments', arguments, 4);
                            self = J$.N(14145, 'self', self, 4);
                            callback = J$.N(14153, 'callback', callback, 4);
                            if (J$.X1(24545, J$.C(872, J$.B(650, '==', J$.M(14041, J$.R(14033, 'self', self, 0), 'bufferedCount', 0)(), J$.T(14049, 0, 22, false), 0))))
                                return J$.X1(14065, J$.Rt(14057, undefined));
                            J$.X1(14097, J$.M(14089, J$.R(14073, 'self', self, 0), '_next', 0)(J$.R(14081, 'callback', callback, 0)));
                            return J$.X1(14121, J$.Rt(14113, J$.R(14105, 'loop', loop, 1)));
                        } catch (J$e) {
                            J$.Ex(24553, J$e);
                        } finally {
                            if (J$.Fr(24561))
                                continue jalangiLabel2227;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 14129), loop, 3));
            J$.X1(14233, J$.P(14225, J$.G(14193, J$.R(14185, 'Cursor', Cursor, 1), 'prototype', 0), 'next', J$.G(14217, J$.G(14209, J$.R(14201, 'Cursor', Cursor, 1), 'prototype', 0), 'nextObject', 0), 0));
            J$.X1(14289, J$.M(14281, J$.R(14241, 'define', define, 1), 'classMethod', 0)(J$.T(14249, 'next', 21, false), J$.T(14273, {
                callback: J$.T(14257, true, 23, false),
                promise: J$.T(14265, true, 23, false)
            }, 11, false)));
            J$.X1(14465, J$.P(14457, J$.G(14305, J$.R(14297, 'Cursor', Cursor, 1), 'prototype', 0), 'each', J$.T(14449, function (callback) {
                jalangiLabel2228:
                    while (true) {
                        try {
                            J$.Fe(14425, arguments.callee, this, arguments);
                            arguments = J$.N(14433, 'arguments', arguments, 4);
                            callback = J$.N(14441, 'callback', callback, 4);
                            J$.X1(14329, J$.M(14321, J$.R(14313, 'this', this, 0), 'rewind', 0)());
                            J$.X1(14377, J$.P(14369, J$.G(14345, J$.R(14337, 'this', this, 0), 's', 0), 'state', J$.G(14361, J$.R(14353, 'Cursor', Cursor, 1), 'INIT', 0), 0));
                            J$.X1(14417, J$.F(14409, J$.R(14385, '_each', _each, 1), 0)(J$.R(14393, 'this', this, 0), J$.R(14401, 'callback', callback, 0)));
                        } catch (J$e) {
                            J$.Ex(24569, J$e);
                        } finally {
                            if (J$.Fr(24577))
                                continue jalangiLabel2228;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 14425), 0));
            J$.X1(14521, J$.M(14513, J$.R(14473, 'define', define, 1), 'classMethod', 0)(J$.T(14481, 'each', 21, false), J$.T(14505, {
                callback: J$.T(14489, true, 23, false),
                promise: J$.T(14497, false, 23, false)
            }, 11, false)));
            var _each = J$.X1(15417, J$.W(15409, '_each', J$.T(15401, function (self, callback) {
                jalangiLabel2230:
                    while (true) {
                        try {
                            J$.Fe(15361, arguments.callee, this, arguments);
                            arguments = J$.N(15369, 'arguments', arguments, 4);
                            self = J$.N(15377, 'self', self, 4);
                            callback = J$.N(15385, 'callback', callback, 4);
                            J$.N(15393, 'fn', fn, 0);
                            if (J$.X1(24585, J$.C(880, J$.U(658, '!', J$.R(14529, 'callback', callback, 0)))))
                                throw J$.X1(14585, J$.Th(14577, J$.M(14569, J$.R(14537, 'MongoError', MongoError, 1), 'create', 0)(J$.T(14561, {
                                message: J$.T(14545, 'callback is mandatory', 21, false),
                                driver: J$.T(14553, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(24593, J$.C(888, J$.M(14601, J$.R(14593, 'self', self, 0), 'isNotified', 0)())))
                                return J$.X1(14617, J$.Rt(14609, undefined));
                            if (J$.X1(24601, J$.C(904, J$.C(896, J$.B(666, '==', J$.G(14641, J$.G(14633, J$.R(14625, 'self', self, 0), 's', 0), 'state', 0), J$.G(14657, J$.R(14649, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.M(14673, J$.R(14665, 'self', self, 0), 'isDead', 0)()))) {
                                return J$.X1(14753, J$.Rt(14745, J$.F(14737, J$.R(14681, 'handleCallback', handleCallback, 1), 0)(J$.R(14689, 'callback', callback, 0), J$.M(14729, J$.R(14697, 'MongoError', MongoError, 1), 'create', 0)(J$.T(14721, {
                                    message: J$.T(14705, 'Cursor is closed', 21, false),
                                    driver: J$.T(14713, true, 23, false)
                                }, 11, false)))));
                            }
                            if (J$.X1(24609, J$.C(912, J$.B(674, '==', J$.G(14777, J$.G(14769, J$.R(14761, 'self', self, 0), 's', 0), 'state', 0), J$.G(14793, J$.R(14785, 'Cursor', Cursor, 1), 'INIT', 0), 0))))
                                J$.X1(14841, J$.P(14833, J$.G(14809, J$.R(14801, 'self', self, 0), 's', 0), 'state', J$.G(14825, J$.R(14817, 'Cursor', Cursor, 1), 'OPEN', 0), 0));
                            var fn = J$.X1(14865, J$.W(14857, 'fn', J$.T(14849, null, 25, false), fn, 1));
                            if (J$.X1(24665, J$.C(952, J$.B(682, '>', J$.M(14881, J$.R(14873, 'self', self, 0), 'bufferedCount', 0)(), J$.T(14889, 0, 22, false), 0)))) {
                                while (J$.X1(24617, J$.C(920, fn = J$.W(14929, 'fn', J$.F(14921, J$.R(14897, 'loop', loop, 1), 0)(J$.R(14905, 'self', self, 0), J$.R(14913, 'callback', callback, 0)), fn, 0))))
                                    J$.X1(14969, J$.F(14961, J$.R(14937, 'fn', fn, 0), 0)(J$.R(14945, 'self', self, 0), J$.R(14953, 'callback', callback, 0)));
                                J$.X1(15009, J$.F(15001, J$.R(14977, '_each', _each, 1), 0)(J$.R(14985, 'self', self, 0), J$.R(14993, 'callback', callback, 0)));
                            } else {
                                J$.X1(15353, J$.M(15345, J$.R(15017, 'self', self, 0), 'next', 0)(J$.T(15337, function (err, item) {
                                    jalangiLabel2229:
                                        while (true) {
                                            try {
                                                J$.Fe(15305, arguments.callee, this, arguments);
                                                arguments = J$.N(15313, 'arguments', arguments, 4);
                                                err = J$.N(15321, 'err', err, 4);
                                                item = J$.N(15329, 'item', item, 4);
                                                if (J$.X1(24625, J$.C(928, J$.R(15025, 'err', err, 0))))
                                                    return J$.X1(15073, J$.Rt(15065, J$.F(15057, J$.R(15033, 'handleCallback', handleCallback, 1), 0)(J$.R(15041, 'callback', callback, 0), J$.R(15049, 'err', err, 0))));
                                                if (J$.X1(24633, J$.C(936, J$.B(690, '==', J$.R(15081, 'item', item, 0), J$.T(15089, null, 25, false), 0)))) {
                                                    J$.X1(15137, J$.P(15129, J$.G(15105, J$.R(15097, 'self', self, 0), 's', 0), 'state', J$.G(15121, J$.R(15113, 'Cursor', Cursor, 1), 'CLOSED', 0), 0));
                                                    return J$.X1(15193, J$.Rt(15185, J$.F(15177, J$.R(15145, 'handleCallback', handleCallback, 1), 0)(J$.R(15153, 'callback', callback, 0), J$.T(15161, null, 25, false), J$.T(15169, null, 25, false))));
                                                }
                                                if (J$.X1(24641, J$.C(944, J$.B(698, '==', J$.F(15233, J$.R(15201, 'handleCallback', handleCallback, 1), 0)(J$.R(15209, 'callback', callback, 0), J$.T(15217, null, 25, false), J$.R(15225, 'item', item, 0)), J$.T(15241, false, 23, false), 0))))
                                                    return J$.X1(15257, J$.Rt(15249, undefined));
                                                J$.X1(15297, J$.F(15289, J$.R(15265, '_each', _each, 1), 0)(J$.R(15273, 'self', self, 0), J$.R(15281, 'callback', callback, 0)));
                                            } catch (J$e) {
                                                J$.Ex(24649, J$e);
                                            } finally {
                                                if (J$.Fr(24657))
                                                    continue jalangiLabel2229;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 15305)));
                            }
                        } catch (J$e) {
                            J$.Ex(24673, J$e);
                        } finally {
                            if (J$.Fr(24681))
                                continue jalangiLabel2230;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 15361), _each, 3));
            J$.X1(15825, J$.P(15817, J$.G(15433, J$.R(15425, 'Cursor', Cursor, 1), 'prototype', 0), 'forEach', J$.T(15809, function (iterator, callback) {
                jalangiLabel2232:
                    while (true) {
                        try {
                            J$.Fe(15777, arguments.callee, this, arguments);
                            arguments = J$.N(15785, 'arguments', arguments, 4);
                            iterator = J$.N(15793, 'iterator', iterator, 4);
                            callback = J$.N(15801, 'callback', callback, 4);
                            J$.X1(15769, J$.M(15761, J$.R(15441, 'this', this, 0), 'each', 0)(J$.T(15753, function (err, doc) {
                                jalangiLabel2231:
                                    while (true) {
                                        try {
                                            J$.Fe(15713, arguments.callee, this, arguments);
                                            arguments = J$.N(15721, 'arguments', arguments, 4);
                                            err = J$.N(15729, 'err', err, 4);
                                            doc = J$.N(15737, 'doc', doc, 4);
                                            J$.N(15745, 'internalCallback', internalCallback, 0);
                                            if (J$.X1(24689, J$.C(960, J$.R(15449, 'err', err, 0)))) {
                                                J$.X1(15481, J$.F(15473, J$.R(15457, 'callback', callback, 0), 0)(J$.R(15465, 'err', err, 0)));
                                                return J$.X1(15505, J$.Rt(15497, J$.T(15489, false, 23, false)));
                                            }
                                            if (J$.X1(24697, J$.C(968, J$.B(706, '!=', J$.R(15513, 'doc', doc, 0), J$.T(15521, null, 25, false), 0)))) {
                                                J$.X1(15553, J$.F(15545, J$.R(15529, 'iterator', iterator, 0), 0)(J$.R(15537, 'doc', doc, 0)));
                                                return J$.X1(15577, J$.Rt(15569, J$.T(15561, true, 23, false)));
                                            }
                                            if (J$.X1(24705, J$.C(984, J$.C(976, J$.B(714, '==', J$.R(15585, 'doc', doc, 0), J$.T(15593, null, 25, false), 0)) ? J$.R(15601, 'callback', callback, 0) : J$._()))) {
                                                var internalCallback = J$.X1(15625, J$.W(15617, 'internalCallback', J$.R(15609, 'callback', callback, 0), internalCallback, 1));
                                                J$.X1(15649, callback = J$.W(15641, 'callback', J$.T(15633, null, 25, false), callback, 0));
                                                J$.X1(15681, J$.F(15673, J$.R(15657, 'internalCallback', internalCallback, 0), 0)(J$.T(15665, null, 25, false)));
                                                return J$.X1(15705, J$.Rt(15697, J$.T(15689, false, 23, false)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(24713, J$e);
                                        } finally {
                                            if (J$.Fr(24721))
                                                continue jalangiLabel2231;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 15713)));
                        } catch (J$e) {
                            J$.Ex(24729, J$e);
                        } finally {
                            if (J$.Fr(24737))
                                continue jalangiLabel2232;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 15777), 0));
            J$.X1(15881, J$.M(15873, J$.R(15833, 'define', define, 1), 'classMethod', 0)(J$.T(15841, 'forEach', 21, false), J$.T(15865, {
                callback: J$.T(15849, true, 23, false),
                promise: J$.T(15857, false, 23, false)
            }, 11, false)));
            J$.X1(16313, J$.P(16305, J$.G(15897, J$.R(15889, 'Cursor', Cursor, 1), 'prototype', 0), 'setReadPreference', J$.T(16297, function (r) {
                jalangiLabel2233:
                    while (true) {
                        try {
                            J$.Fe(16273, arguments.callee, this, arguments);
                            arguments = J$.N(16281, 'arguments', arguments, 4);
                            r = J$.N(16289, 'r', r, 4);
                            if (J$.X1(24745, J$.C(992, J$.B(722, '!=', J$.G(15921, J$.G(15913, J$.R(15905, 'this', this, 0), 's', 0), 'state', 0), J$.G(15937, J$.R(15929, 'Cursor', Cursor, 1), 'INIT', 0), 0))))
                                throw J$.X1(15993, J$.Th(15985, J$.M(15977, J$.R(15945, 'MongoError', MongoError, 1), 'create', 0)(J$.T(15969, {
                                message: J$.T(15953, 'cannot change cursor readPreference after cursor has been accessed', 21, false),
                                driver: J$.T(15961, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(24769, J$.C(1016, J$.B(730, 'instanceof', J$.R(16001, 'r', r, 0), J$.R(16009, 'ReadPreference', ReadPreference, 1), 0)))) {
                                J$.X1(16097, J$.P(16089, J$.G(16033, J$.G(16025, J$.R(16017, 'this', this, 0), 's', 0), 'options', 0), 'readPreference', J$.F(16081, J$.R(16041, 'CoreReadPreference', CoreReadPreference, 1), 1)(J$.G(16057, J$.R(16049, 'r', r, 0), 'mode', 0), J$.G(16073, J$.R(16065, 'r', r, 0), 'tags', 0)), 0));
                            } else if (J$.X1(24761, J$.C(1008, J$.B(746, '==', J$.U(738, 'typeof', J$.R(16105, 'r', r, 0)), J$.T(16113, 'string', 21, false), 0)))) {
                                J$.X1(16177, J$.P(16169, J$.G(16137, J$.G(16129, J$.R(16121, 'this', this, 0), 's', 0), 'options', 0), 'readPreference', J$.F(16161, J$.R(16145, 'CoreReadPreference', CoreReadPreference, 1), 1)(J$.R(16153, 'r', r, 0)), 0));
                            } else if (J$.X1(24753, J$.C(1000, J$.B(754, 'instanceof', J$.R(16185, 'r', r, 0), J$.R(16193, 'CoreReadPreference', CoreReadPreference, 1), 0)))) {
                                J$.X1(16241, J$.P(16233, J$.G(16217, J$.G(16209, J$.R(16201, 'this', this, 0), 's', 0), 'options', 0), 'readPreference', J$.R(16225, 'r', r, 0), 0));
                            }
                            return J$.X1(16265, J$.Rt(16257, J$.R(16249, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(24777, J$e);
                        } finally {
                            if (J$.Fr(24785))
                                continue jalangiLabel2233;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 16273), 0));
            J$.X1(16385, J$.M(16377, J$.R(16321, 'define', define, 1), 'classMethod', 0)(J$.T(16329, 'setReadPreference', 21, false), J$.T(16369, {
                callback: J$.T(16337, false, 23, false),
                promise: J$.T(16345, false, 23, false),
                returns: J$.T(16361, [J$.R(16353, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(16865, J$.P(16857, J$.G(16401, J$.R(16393, 'Cursor', Cursor, 1), 'prototype', 0), 'toArray', J$.T(16849, function (callback) {
                jalangiLabel2236:
                    while (true) {
                        try {
                            J$.Fe(16817, arguments.callee, this, arguments);
                            arguments = J$.N(16825, 'arguments', arguments, 4);
                            callback = J$.N(16833, 'callback', callback, 4);
                            J$.N(16841, 'self', self, 0);
                            var self = J$.X1(16425, J$.W(16417, 'self', J$.R(16409, 'this', this, 0), self, 1));
                            if (J$.X1(24793, J$.C(1024, J$.G(16457, J$.G(16449, J$.G(16441, J$.R(16433, 'self', self, 0), 's', 0), 'options', 0), 'tailable', 0))))
                                throw J$.X1(16513, J$.Th(16505, J$.M(16497, J$.R(16465, 'MongoError', MongoError, 1), 'create', 0)(J$.T(16489, {
                                message: J$.T(16473, 'Tailable cursor cannot be converted to array', 21, false),
                                driver: J$.T(16481, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(24801, J$.C(1032, J$.B(770, '==', J$.U(762, 'typeof', J$.R(16521, 'callback', callback, 0)), J$.T(16529, 'function', 21, false), 0))))
                                return J$.X1(16577, J$.Rt(16569, J$.F(16561, J$.R(16537, 'toArray', toArray, 1), 0)(J$.R(16545, 'self', self, 0), J$.R(16553, 'callback', callback, 0))));
                            return J$.X1(16809, J$.Rt(16801, J$.M(16793, J$.G(16593, J$.R(16585, 'this', this, 0), 's', 0), 'promiseLibrary', 2)(J$.T(16785, function (resolve, reject) {
                                jalangiLabel2235:
                                    while (true) {
                                        try {
                                            J$.Fe(16753, arguments.callee, this, arguments);
                                            arguments = J$.N(16761, 'arguments', arguments, 4);
                                            resolve = J$.N(16769, 'resolve', resolve, 4);
                                            reject = J$.N(16777, 'reject', reject, 4);
                                            J$.X1(16745, J$.F(16737, J$.R(16601, 'toArray', toArray, 1), 0)(J$.R(16609, 'self', self, 0), J$.T(16729, function (err, r) {
                                                jalangiLabel2234:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(16697, arguments.callee, this, arguments);
                                                            arguments = J$.N(16705, 'arguments', arguments, 4);
                                                            err = J$.N(16713, 'err', err, 4);
                                                            r = J$.N(16721, 'r', r, 4);
                                                            if (J$.X1(24809, J$.C(1040, J$.R(16617, 'err', err, 0))))
                                                                return J$.X1(16657, J$.Rt(16649, J$.F(16641, J$.R(16625, 'reject', reject, 0), 0)(J$.R(16633, 'err', err, 0))));
                                                            J$.X1(16689, J$.F(16681, J$.R(16665, 'resolve', resolve, 0), 0)(J$.R(16673, 'r', r, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(24817, J$e);
                                                        } finally {
                                                            if (J$.Fr(24825))
                                                                continue jalangiLabel2234;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 16697)));
                                        } catch (J$e) {
                                            J$.Ex(24833, J$e);
                                        } finally {
                                            if (J$.Fr(24841))
                                                continue jalangiLabel2235;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 16753))));
                        } catch (J$e) {
                            J$.Ex(24849, J$e);
                        } finally {
                            if (J$.Fr(24857))
                                continue jalangiLabel2236;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 16817), 0));
            var toArray = J$.X1(17641, J$.W(17633, 'toArray', J$.T(17625, function (self, callback) {
                jalangiLabel2239:
                    while (true) {
                        try {
                            J$.Fe(17577, arguments.callee, this, arguments);
                            arguments = J$.N(17585, 'arguments', arguments, 4);
                            self = J$.N(17593, 'self', self, 4);
                            callback = J$.N(17601, 'callback', callback, 4);
                            J$.N(17609, 'items', items, 0);
                            J$.N(17617, 'fetchDocs', fetchDocs, 0);
                            var items = J$.X1(16889, J$.W(16881, 'items', J$.T(16873, [], 10, false), items, 1));
                            J$.X1(16913, J$.M(16905, J$.R(16897, 'self', self, 0), 'rewind', 0)());
                            J$.X1(16961, J$.P(16953, J$.G(16929, J$.R(16921, 'self', self, 0), 's', 0), 'state', J$.G(16945, J$.R(16937, 'Cursor', Cursor, 1), 'INIT', 0), 0));
                            var fetchDocs = J$.X1(17545, J$.W(17537, 'fetchDocs', J$.T(17529, function () {
                                jalangiLabel2238:
                                    while (true) {
                                        try {
                                            J$.Fe(17513, arguments.callee, this, arguments);
                                            arguments = J$.N(17521, 'arguments', arguments, 4);
                                            J$.X1(17505, J$.M(17497, J$.R(16969, 'self', self, 0), '_next', 0)(J$.T(17489, function (err, doc) {
                                                jalangiLabel2237:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(17449, arguments.callee, this, arguments);
                                                            arguments = J$.N(17457, 'arguments', arguments, 4);
                                                            err = J$.N(17465, 'err', err, 4);
                                                            doc = J$.N(17473, 'doc', doc, 4);
                                                            J$.N(17481, 'docs', docs, 0);
                                                            if (J$.X1(24865, J$.C(1048, J$.R(16977, 'err', err, 0))))
                                                                return J$.X1(17025, J$.Rt(17017, J$.F(17009, J$.R(16985, 'handleCallback', handleCallback, 1), 0)(J$.R(16993, 'callback', callback, 0), J$.R(17001, 'err', err, 0))));
                                                            if (J$.X1(24873, J$.C(1056, J$.B(778, '==', J$.R(17033, 'doc', doc, 0), J$.T(17041, null, 25, false), 0)))) {
                                                                J$.X1(17089, J$.P(17081, J$.G(17057, J$.R(17049, 'self', self, 0), 's', 0), 'state', J$.G(17073, J$.R(17065, 'Cursor', Cursor, 1), 'CLOSED', 0), 0));
                                                                return J$.X1(17145, J$.Rt(17137, J$.F(17129, J$.R(17097, 'handleCallback', handleCallback, 1), 0)(J$.R(17105, 'callback', callback, 0), J$.T(17113, null, 25, false), J$.R(17121, 'items', items, 0))));
                                                            }
                                                            J$.X1(17177, J$.M(17169, J$.R(17153, 'items', items, 0), 'push', 0)(J$.R(17161, 'doc', doc, 0)));
                                                            if (J$.X1(24889, J$.C(1080, J$.B(786, '>', J$.M(17193, J$.R(17185, 'self', self, 0), 'bufferedCount', 0)(), J$.T(17201, 0, 22, false), 0)))) {
                                                                var docs = J$.X1(17249, J$.W(17241, 'docs', J$.M(17233, J$.R(17209, 'self', self, 0), 'readBufferedDocuments', 0)(J$.M(17225, J$.R(17217, 'self', self, 0), 'bufferedCount', 0)()), docs, 1));
                                                                if (J$.X1(24881, J$.C(1072, J$.C(1064, J$.G(17273, J$.G(17265, J$.R(17257, 'self', self, 0), 's', 0), 'transforms', 0)) ? J$.B(802, '==', J$.U(794, 'typeof', J$.G(17305, J$.G(17297, J$.G(17289, J$.R(17281, 'self', self, 0), 's', 0), 'transforms', 0), 'doc', 0)), J$.T(17313, 'function', 21, false), 0) : J$._()))) {
                                                                    J$.X1(17377, docs = J$.W(17369, 'docs', J$.M(17361, J$.R(17321, 'docs', docs, 0), 'map', 0)(J$.G(17353, J$.G(17345, J$.G(17337, J$.R(17329, 'self', self, 0), 's', 0), 'transforms', 0), 'doc', 0)), docs, 0));
                                                                }
                                                                J$.X1(17417, items = J$.W(17409, 'items', J$.M(17401, J$.R(17385, 'items', items, 0), 'concat', 0)(J$.R(17393, 'docs', docs, 0)), items, 0));
                                                            }
                                                            J$.X1(17441, J$.F(17433, J$.R(17425, 'fetchDocs', fetchDocs, 0), 0)());
                                                        } catch (J$e) {
                                                            J$.Ex(24897, J$e);
                                                        } finally {
                                                            if (J$.Fr(24905))
                                                                continue jalangiLabel2237;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 17449)));
                                        } catch (J$e) {
                                            J$.Ex(24913, J$e);
                                        } finally {
                                            if (J$.Fr(24921))
                                                continue jalangiLabel2238;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 17513), fetchDocs, 1));
                            J$.X1(17569, J$.F(17561, J$.R(17553, 'fetchDocs', fetchDocs, 0), 0)());
                        } catch (J$e) {
                            J$.Ex(24929, J$e);
                        } finally {
                            if (J$.Fr(24937))
                                continue jalangiLabel2239;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 17577), toArray, 3));
            J$.X1(17697, J$.M(17689, J$.R(17649, 'define', define, 1), 'classMethod', 0)(J$.T(17657, 'toArray', 21, false), J$.T(17681, {
                callback: J$.T(17665, true, 23, false),
                promise: J$.T(17673, true, 23, false)
            }, 11, false)));
            J$.X1(18329, J$.P(18321, J$.G(17713, J$.R(17705, 'Cursor', Cursor, 1), 'prototype', 0), 'count', J$.T(18313, function (applySkipLimit, opts, callback) {
                jalangiLabel2242:
                    while (true) {
                        try {
                            J$.Fe(18265, arguments.callee, this, arguments);
                            arguments = J$.N(18273, 'arguments', arguments, 4);
                            applySkipLimit = J$.N(18281, 'applySkipLimit', applySkipLimit, 4);
                            opts = J$.N(18289, 'opts', opts, 4);
                            callback = J$.N(18297, 'callback', callback, 4);
                            J$.N(18305, 'self', self, 0);
                            var self = J$.X1(17737, J$.W(17729, 'self', J$.R(17721, 'this', this, 0), self, 1));
                            if (J$.X1(24945, J$.C(1088, J$.B(810, '==', J$.G(17769, J$.G(17761, J$.G(17753, J$.R(17745, 'self', self, 0), 's', 0), 'cmd', 0), 'query', 0), J$.T(17777, null, 25, false), 0))))
                                throw J$.X1(17833, J$.Th(17825, J$.M(17817, J$.R(17785, 'MongoError', MongoError, 1), 'create', 0)(J$.T(17809, {
                                message: J$.T(17793, 'count can only be used with find command', 21, false),
                                driver: J$.T(17801, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(24953, J$.C(1096, J$.B(826, '==', J$.U(818, 'typeof', J$.R(17841, 'opts', opts, 0)), J$.T(17849, 'function', 21, false), 0))))
                                J$.X1(17897, (J$.X1(17889, callback = J$.W(17865, 'callback', J$.R(17857, 'opts', opts, 0), callback, 0)), opts = J$.W(17881, 'opts', J$.T(17873, {}, 11, false), opts, 0)));
                            J$.X1(17929, opts = J$.W(17921, 'opts', J$.C(1104, J$.R(17905, 'opts', opts, 0)) ? J$._() : J$.T(17913, {}, 11, false), opts, 0));
                            if (J$.X1(24961, J$.C(1112, J$.B(842, '==', J$.U(834, 'typeof', J$.R(17937, 'callback', callback, 0)), J$.T(17945, 'function', 21, false), 0))))
                                return J$.X1(18009, J$.Rt(18001, J$.F(17993, J$.R(17953, 'count', count, 1), 0)(J$.R(17961, 'self', self, 0), J$.R(17969, 'applySkipLimit', applySkipLimit, 0), J$.R(17977, 'opts', opts, 0), J$.R(17985, 'callback', callback, 0))));
                            return J$.X1(18257, J$.Rt(18249, J$.M(18241, J$.G(18025, J$.R(18017, 'this', this, 0), 's', 0), 'promiseLibrary', 2)(J$.T(18233, function (resolve, reject) {
                                jalangiLabel2241:
                                    while (true) {
                                        try {
                                            J$.Fe(18201, arguments.callee, this, arguments);
                                            arguments = J$.N(18209, 'arguments', arguments, 4);
                                            resolve = J$.N(18217, 'resolve', resolve, 4);
                                            reject = J$.N(18225, 'reject', reject, 4);
                                            J$.X1(18193, J$.F(18185, J$.R(18033, 'count', count, 1), 0)(J$.R(18041, 'self', self, 0), J$.R(18049, 'applySkipLimit', applySkipLimit, 0), J$.R(18057, 'opts', opts, 0), J$.T(18177, function (err, r) {
                                                jalangiLabel2240:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(18145, arguments.callee, this, arguments);
                                                            arguments = J$.N(18153, 'arguments', arguments, 4);
                                                            err = J$.N(18161, 'err', err, 4);
                                                            r = J$.N(18169, 'r', r, 4);
                                                            if (J$.X1(24969, J$.C(1120, J$.R(18065, 'err', err, 0))))
                                                                return J$.X1(18105, J$.Rt(18097, J$.F(18089, J$.R(18073, 'reject', reject, 0), 0)(J$.R(18081, 'err', err, 0))));
                                                            J$.X1(18137, J$.F(18129, J$.R(18113, 'resolve', resolve, 0), 0)(J$.R(18121, 'r', r, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(24977, J$e);
                                                        } finally {
                                                            if (J$.Fr(24985))
                                                                continue jalangiLabel2240;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 18145)));
                                        } catch (J$e) {
                                            J$.Ex(24993, J$e);
                                        } finally {
                                            if (J$.Fr(25001))
                                                continue jalangiLabel2241;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 18201))));
                        } catch (J$e) {
                            J$.Ex(25009, J$e);
                        } finally {
                            if (J$.Fr(25017))
                                continue jalangiLabel2242;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 18265), 0));
            var count = J$.X1(20009, J$.W(20001, 'count', J$.T(19993, function (self, applySkipLimit, opts, callback) {
                jalangiLabel2244:
                    while (true) {
                        try {
                            J$.Fe(19897, arguments.callee, this, arguments);
                            arguments = J$.N(19905, 'arguments', arguments, 4);
                            self = J$.N(19913, 'self', self, 4);
                            applySkipLimit = J$.N(19921, 'applySkipLimit', applySkipLimit, 4);
                            opts = J$.N(19929, 'opts', opts, 4);
                            callback = J$.N(19937, 'callback', callback, 4);
                            J$.N(19945, 'delimiter', delimiter, 0);
                            J$.N(19953, 'command', command, 0);
                            J$.N(19961, 'server', server, 0);
                            J$.N(19969, 'connection', connection, 0);
                            J$.N(19977, 'callbacks', callbacks, 0);
                            J$.N(19985, 'query', query, 0);
                            if (J$.X1(25025, J$.C(1128, J$.B(858, '==', J$.U(850, 'typeof', J$.R(18337, 'applySkipLimit', applySkipLimit, 0)), J$.T(18345, 'function', 21, false), 0)))) {
                                J$.X1(18369, callback = J$.W(18361, 'callback', J$.R(18353, 'applySkipLimit', applySkipLimit, 0), callback, 0));
                                J$.X1(18393, applySkipLimit = J$.W(18385, 'applySkipLimit', J$.T(18377, true, 23, false), applySkipLimit, 0));
                            }
                            if (J$.X1(25049, J$.C(1152, J$.R(18401, 'applySkipLimit', applySkipLimit, 0)))) {
                                if (J$.X1(25033, J$.C(1136, J$.B(874, '==', J$.U(866, 'typeof', J$.M(18417, J$.R(18409, 'self', self, 0), 'cursorSkip', 0)()), J$.T(18425, 'number', 21, false), 0))))
                                    J$.X1(18465, J$.P(18457, J$.R(18433, 'opts', opts, 0), 'skip', J$.M(18449, J$.R(18441, 'self', self, 0), 'cursorSkip', 0)(), 0));
                                if (J$.X1(25041, J$.C(1144, J$.B(890, '==', J$.U(882, 'typeof', J$.M(18481, J$.R(18473, 'self', self, 0), 'cursorLimit', 0)()), J$.T(18489, 'number', 21, false), 0))))
                                    J$.X1(18529, J$.P(18521, J$.R(18497, 'opts', opts, 0), 'limit', J$.M(18513, J$.R(18505, 'self', self, 0), 'cursorLimit', 0)(), 0));
                            }
                            var delimiter = J$.X1(18585, J$.W(18577, 'delimiter', J$.M(18569, J$.G(18553, J$.G(18545, J$.R(18537, 'self', self, 0), 's', 0), 'ns', 0), 'indexOf', 0)(J$.T(18561, '.', 21, false)), delimiter, 1));
                            var command = J$.X1(18689, J$.W(18681, 'command', J$.T(18673, {
                                'count': J$.M(18633, J$.G(18609, J$.G(18601, J$.R(18593, 'self', self, 0), 's', 0), 'ns', 0), 'substr', 0)(J$.B(898, '+', J$.R(18617, 'delimiter', delimiter, 0), J$.T(18625, 1, 22, false), 0)),
                                'query': J$.G(18665, J$.G(18657, J$.G(18649, J$.R(18641, 'self', self, 0), 's', 0), 'cmd', 0), 'query', 0)
                            }, 11, false), command, 1));
                            if (J$.X1(25065, J$.C(1176, J$.B(914, '==', J$.U(906, 'typeof', J$.G(18705, J$.R(18697, 'opts', opts, 0), 'maxTimeMS', 0)), J$.T(18713, 'number', 21, false), 0)))) {
                                J$.X1(18753, J$.P(18745, J$.R(18721, 'command', command, 0), 'maxTimeMS', J$.G(18737, J$.R(18729, 'opts', opts, 0), 'maxTimeMS', 0), 0));
                            } else if (J$.X1(25057, J$.C(1168, J$.C(1160, J$.G(18777, J$.G(18769, J$.R(18761, 'self', self, 0), 's', 0), 'cmd', 0)) ? J$.B(930, '==', J$.U(922, 'typeof', J$.G(18809, J$.G(18801, J$.G(18793, J$.R(18785, 'self', self, 0), 's', 0), 'cmd', 0), 'maxTimeMS', 0)), J$.T(18817, 'number', 21, false), 0) : J$._()))) {
                                J$.X1(18873, J$.P(18865, J$.R(18825, 'command', command, 0), 'maxTimeMS', J$.G(18857, J$.G(18849, J$.G(18841, J$.R(18833, 'self', self, 0), 's', 0), 'cmd', 0), 'maxTimeMS', 0), 0));
                            }
                            var server = J$.X1(18929, J$.W(18921, 'server', J$.M(18913, J$.G(18897, J$.G(18889, J$.R(18881, 'self', self, 0), 's', 0), 'topology', 0), 'getServer', 0)(J$.R(18905, 'opts', opts, 0)), server, 1));
                            var connection = J$.X1(18985, J$.W(18977, 'connection', J$.M(18969, J$.G(18953, J$.G(18945, J$.R(18937, 'self', self, 0), 's', 0), 'topology', 0), 'getConnection', 0)(J$.R(18961, 'opts', opts, 0)), connection, 1));
                            var callbacks = J$.X1(19017, J$.W(19009, 'callbacks', J$.M(19001, J$.R(18993, 'server', server, 0), 'getCallbacks', 0)(), callbacks, 1));
                            if (J$.X1(25073, J$.C(1184, J$.G(19033, J$.R(19025, 'opts', opts, 0), 'skip', 0))))
                                J$.X1(19073, J$.P(19065, J$.R(19041, 'command', command, 0), 'skip', J$.G(19057, J$.R(19049, 'opts', opts, 0), 'skip', 0), 0));
                            if (J$.X1(25081, J$.C(1192, J$.G(19089, J$.R(19081, 'opts', opts, 0), 'limit', 0))))
                                J$.X1(19129, J$.P(19121, J$.R(19097, 'command', command, 0), 'limit', J$.G(19113, J$.R(19105, 'opts', opts, 0), 'limit', 0), 0));
                            if (J$.X1(25089, J$.C(1200, J$.G(19161, J$.G(19153, J$.G(19145, J$.R(19137, 'self', self, 0), 's', 0), 'options', 0), 'hint', 0))))
                                J$.X1(19217, J$.P(19209, J$.R(19169, 'command', command, 0), 'hint', J$.G(19201, J$.G(19193, J$.G(19185, J$.R(19177, 'self', self, 0), 's', 0), 'options', 0), 'hint', 0), 0));
                            var query = J$.X1(19385, J$.W(19377, 'query', J$.F(19369, J$.R(19225, 'Query', Query, 1), 1)(J$.G(19249, J$.G(19241, J$.R(19233, 'self', self, 0), 's', 0), 'bson', 0), J$.F(19321, J$.R(19257, 'f', f, 1), 0)(J$.T(19265, '%s.$cmd', 21, false), J$.M(19313, J$.G(19289, J$.G(19281, J$.R(19273, 'self', self, 0), 's', 0), 'ns', 0), 'substr', 0)(J$.T(19297, 0, 22, false), J$.R(19305, 'delimiter', delimiter, 0))), J$.R(19329, 'command', command, 0), J$.T(19361, {
                                numberToSkip: J$.T(19337, 0, 22, false),
                                numberToReturn: J$.U(938, '-', J$.T(19345, 1, 22, false)),
                                checkKeys: J$.T(19353, false, 23, false)
                            }, 11, false)), query, 1));
                            J$.X1(19849, J$.M(19841, J$.R(19393, 'callbacks', callbacks, 0), 'register', 0)(J$.G(19409, J$.R(19401, 'query', query, 0), 'requestId', 0), J$.T(19833, function (err, result) {
                                jalangiLabel2243:
                                    while (true) {
                                        try {
                                            J$.Fe(19801, arguments.callee, this, arguments);
                                            arguments = J$.N(19809, 'arguments', arguments, 4);
                                            err = J$.N(19817, 'err', err, 4);
                                            result = J$.N(19825, 'result', result, 4);
                                            if (J$.X1(25097, J$.C(1208, J$.R(19417, 'err', err, 0))))
                                                return J$.X1(19465, J$.Rt(19457, J$.F(19449, J$.R(19425, 'handleCallback', handleCallback, 1), 0)(J$.R(19433, 'callback', callback, 0), J$.R(19441, 'err', err, 0))));
                                            if (J$.X1(25105, J$.C(1240, J$.C(1232, J$.B(946, '==', J$.G(19489, J$.G(19481, J$.R(19473, 'result', result, 0), 'documents', 0), 'length', 0), J$.T(19497, 1, 22, false), 0)) ? J$.C(1224, J$.C(1216, J$.G(19537, J$.G(19529, J$.G(19513, J$.R(19505, 'result', result, 0), 'documents', 0), J$.T(19521, 0, 22, false), 4), 'errmsg', 0)) ? J$._() : J$.G(19577, J$.G(19569, J$.G(19553, J$.R(19545, 'result', result, 0), 'documents', 0), J$.T(19561, 0, 22, false), 4), 'err', 0)) ? J$._() : J$.G(19625, J$.G(19609, J$.G(19593, J$.R(19585, 'result', result, 0), 'documents', 0), J$.T(19601, 0, 22, false), 4), J$.T(19617, '$err', 21, false), 4) : J$._()))) {
                                                return J$.X1(19713, J$.Rt(19705, J$.F(19697, J$.R(19633, 'handleCallback', handleCallback, 1), 0)(J$.R(19641, 'callback', callback, 0), J$.M(19689, J$.R(19649, 'MongoError', MongoError, 1), 'create', 0)(J$.G(19681, J$.G(19665, J$.R(19657, 'result', result, 0), 'documents', 0), J$.T(19673, 0, 22, false), 4)))));
                                            }
                                            J$.X1(19793, J$.F(19785, J$.R(19721, 'handleCallback', handleCallback, 1), 0)(J$.R(19729, 'callback', callback, 0), J$.T(19737, null, 25, false), J$.G(19777, J$.G(19769, J$.G(19753, J$.R(19745, 'result', result, 0), 'documents', 0), J$.T(19761, 0, 22, false), 4), 'n', 0)));
                                        } catch (J$e) {
                                            J$.Ex(25113, J$e);
                                        } finally {
                                            if (J$.Fr(25121))
                                                continue jalangiLabel2243;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 19801)));
                            J$.X1(19889, J$.M(19881, J$.R(19857, 'connection', connection, 0), 'write', 0)(J$.M(19873, J$.R(19865, 'query', query, 0), 'toBin', 0)()));
                        } catch (J$e) {
                            J$.Ex(25129, J$e);
                        } finally {
                            if (J$.Fr(25137))
                                continue jalangiLabel2244;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 19897), count, 3));
            J$.X1(20065, J$.M(20057, J$.R(20017, 'define', define, 1), 'classMethod', 0)(J$.T(20025, 'count', 21, false), J$.T(20049, {
                callback: J$.T(20033, true, 23, false),
                promise: J$.T(20041, true, 23, false)
            }, 11, false)));
            J$.X1(20409, J$.P(20401, J$.G(20081, J$.R(20073, 'Cursor', Cursor, 1), 'prototype', 0), 'close', J$.T(20393, function (callback) {
                jalangiLabel2246:
                    while (true) {
                        try {
                            J$.Fe(20369, arguments.callee, this, arguments);
                            arguments = J$.N(20377, 'arguments', arguments, 4);
                            callback = J$.N(20385, 'callback', callback, 4);
                            J$.X1(20129, J$.P(20121, J$.G(20097, J$.R(20089, 'this', this, 0), 's', 0), 'state', J$.G(20113, J$.R(20105, 'Cursor', Cursor, 1), 'CLOSED', 0), 0));
                            J$.X1(20153, J$.M(20145, J$.R(20137, 'this', this, 0), 'kill', 0)());
                            J$.X1(20185, J$.M(20177, J$.R(20161, 'this', this, 0), 'emit', 0)(J$.T(20169, 'close', 21, false)));
                            if (J$.X1(25145, J$.C(1248, J$.B(962, '==', J$.U(954, 'typeof', J$.R(20193, 'callback', callback, 0)), J$.T(20201, 'function', 21, false), 0))))
                                return J$.X1(20257, J$.Rt(20249, J$.F(20241, J$.R(20209, 'handleCallback', handleCallback, 1), 0)(J$.R(20217, 'callback', callback, 0), J$.T(20225, null, 25, false), J$.R(20233, 'this', this, 0))));
                            return J$.X1(20361, J$.Rt(20353, J$.M(20345, J$.G(20273, J$.R(20265, 'this', this, 0), 's', 0), 'promiseLibrary', 2)(J$.T(20337, function (resolve, reject) {
                                jalangiLabel2245:
                                    while (true) {
                                        try {
                                            J$.Fe(20305, arguments.callee, this, arguments);
                                            arguments = J$.N(20313, 'arguments', arguments, 4);
                                            resolve = J$.N(20321, 'resolve', resolve, 4);
                                            reject = J$.N(20329, 'reject', reject, 4);
                                            J$.X1(20297, J$.F(20289, J$.R(20281, 'resolve', resolve, 0), 0)());
                                        } catch (J$e) {
                                            J$.Ex(25153, J$e);
                                        } finally {
                                            if (J$.Fr(25161))
                                                continue jalangiLabel2245;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 20305))));
                        } catch (J$e) {
                            J$.Ex(25169, J$e);
                        } finally {
                            if (J$.Fr(25177))
                                continue jalangiLabel2246;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 20369), 0));
            J$.X1(20465, J$.M(20457, J$.R(20417, 'define', define, 1), 'classMethod', 0)(J$.T(20425, 'close', 21, false), J$.T(20449, {
                callback: J$.T(20433, true, 23, false),
                promise: J$.T(20441, true, 23, false)
            }, 11, false)));
            J$.X1(20601, J$.P(20593, J$.G(20481, J$.R(20473, 'Cursor', Cursor, 1), 'prototype', 0), 'map', J$.T(20585, function (transform) {
                jalangiLabel2247:
                    while (true) {
                        try {
                            J$.Fe(20561, arguments.callee, this, arguments);
                            arguments = J$.N(20569, 'arguments', arguments, 4);
                            transform = J$.N(20577, 'transform', transform, 4);
                            J$.X1(20529, J$.P(20521, J$.G(20497, J$.R(20489, 'this', this, 0), 'cursorState', 0), 'transforms', J$.T(20513, {
                                doc: J$.R(20505, 'transform', transform, 0)
                            }, 11, false), 0));
                            return J$.X1(20553, J$.Rt(20545, J$.R(20537, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(25185, J$e);
                        } finally {
                            if (J$.Fr(25193))
                                continue jalangiLabel2247;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 20561), 0));
            J$.X1(20673, J$.M(20665, J$.R(20609, 'define', define, 1), 'classMethod', 0)(J$.T(20617, 'map', 21, false), J$.T(20657, {
                callback: J$.T(20625, false, 23, false),
                promise: J$.T(20633, false, 23, false),
                returns: J$.T(20649, [J$.R(20641, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(20761, J$.P(20753, J$.G(20689, J$.R(20681, 'Cursor', Cursor, 1), 'prototype', 0), 'isClosed', J$.T(20745, function () {
                jalangiLabel2248:
                    while (true) {
                        try {
                            J$.Fe(20729, arguments.callee, this, arguments);
                            arguments = J$.N(20737, 'arguments', arguments, 4);
                            return J$.X1(20721, J$.Rt(20713, J$.M(20705, J$.R(20697, 'this', this, 0), 'isDead', 0)()));
                        } catch (J$e) {
                            J$.Ex(25201, J$e);
                        } finally {
                            if (J$.Fr(25209))
                                continue jalangiLabel2248;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 20729), 0));
            J$.X1(20833, J$.M(20825, J$.R(20769, 'define', define, 1), 'classMethod', 0)(J$.T(20777, 'isClosed', 21, false), J$.T(20817, {
                callback: J$.T(20785, false, 23, false),
                promise: J$.T(20793, false, 23, false),
                returns: J$.T(20809, [J$.R(20801, 'Boolean', Boolean, 2)], 10, false)
            }, 11, false)));
            J$.X1(20993, J$.P(20985, J$.G(20849, J$.R(20841, 'Cursor', Cursor, 1), 'prototype', 0), 'destroy', J$.T(20977, function (err) {
                jalangiLabel2249:
                    while (true) {
                        try {
                            J$.Fe(20953, arguments.callee, this, arguments);
                            arguments = J$.N(20961, 'arguments', arguments, 4);
                            err = J$.N(20969, 'err', err, 4);
                            J$.X1(20873, J$.M(20865, J$.R(20857, 'this', this, 0), 'pause', 0)());
                            J$.X1(20897, J$.M(20889, J$.R(20881, 'this', this, 0), 'close', 0)());
                            if (J$.X1(25217, J$.C(1256, J$.R(20905, 'err', err, 0))))
                                J$.X1(20945, J$.M(20937, J$.R(20913, 'this', this, 0), 'emit', 0)(J$.T(20921, 'error', 21, false), J$.R(20929, 'err', err, 0)));
                        } catch (J$e) {
                            J$.Ex(25225, J$e);
                        } finally {
                            if (J$.Fr(25233))
                                continue jalangiLabel2249;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 20953), 0));
            J$.X1(21049, J$.M(21041, J$.R(21001, 'define', define, 1), 'classMethod', 0)(J$.T(21009, 'destroy', 21, false), J$.T(21033, {
                callback: J$.T(21017, false, 23, false),
                promise: J$.T(21025, false, 23, false)
            }, 11, false)));
            J$.X1(21185, J$.P(21177, J$.G(21065, J$.R(21057, 'Cursor', Cursor, 1), 'prototype', 0), 'stream', J$.T(21169, function (options) {
                jalangiLabel2250:
                    while (true) {
                        try {
                            J$.Fe(21145, arguments.callee, this, arguments);
                            arguments = J$.N(21153, 'arguments', arguments, 4);
                            options = J$.N(21161, 'options', options, 4);
                            J$.X1(21113, J$.P(21105, J$.G(21081, J$.R(21073, 'this', this, 0), 's', 0), 'streamOptions', J$.C(1264, J$.R(21089, 'options', options, 0)) ? J$._() : J$.T(21097, {}, 11, false), 0));
                            return J$.X1(21137, J$.Rt(21129, J$.R(21121, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(25241, J$e);
                        } finally {
                            if (J$.Fr(25249))
                                continue jalangiLabel2250;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 21145), 0));
            J$.X1(21257, J$.M(21249, J$.R(21193, 'define', define, 1), 'classMethod', 0)(J$.T(21201, 'stream', 21, false), J$.T(21241, {
                callback: J$.T(21209, false, 23, false),
                promise: J$.T(21217, false, 23, false),
                returns: J$.T(21233, [J$.R(21225, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(21753, J$.P(21745, J$.G(21273, J$.R(21265, 'Cursor', Cursor, 1), 'prototype', 0), 'explain', J$.T(21737, function (callback) {
                jalangiLabel2253:
                    while (true) {
                        try {
                            J$.Fe(21705, arguments.callee, this, arguments);
                            arguments = J$.N(21713, 'arguments', arguments, 4);
                            callback = J$.N(21721, 'callback', callback, 4);
                            J$.N(21729, 'self', self, 0);
                            var self = J$.X1(21297, J$.W(21289, 'self', J$.R(21281, 'this', this, 0), self, 1));
                            J$.X1(21345, J$.P(21337, J$.G(21321, J$.G(21313, J$.R(21305, 'this', this, 0), 's', 0), 'cmd', 0), 'explain', J$.T(21329, true, 23, false), 0));
                            if (J$.X1(25257, J$.C(1272, J$.G(21377, J$.G(21369, J$.G(21361, J$.R(21353, 'this', this, 0), 's', 0), 'cmd', 0), 'readConcern', 0)))) {
                                J$.X1(21417, J$.B(970, 'delete', J$.G(21401, J$.G(21393, J$.R(21385, 'this', this, 0), 's', 0), 'cmd', 0), J$.T(21409, 'readConcern', 21, false), 4));
                            }
                            if (J$.X1(25265, J$.C(1280, J$.B(986, '==', J$.U(978, 'typeof', J$.R(21425, 'callback', callback, 0)), J$.T(21433, 'function', 21, false), 0))))
                                return J$.X1(21473, J$.Rt(21465, J$.M(21457, J$.R(21441, 'this', this, 0), '_next', 0)(J$.R(21449, 'callback', callback, 0))));
                            return J$.X1(21697, J$.Rt(21689, J$.M(21681, J$.G(21489, J$.R(21481, 'this', this, 0), 's', 0), 'promiseLibrary', 2)(J$.T(21673, function (resolve, reject) {
                                jalangiLabel2252:
                                    while (true) {
                                        try {
                                            J$.Fe(21641, arguments.callee, this, arguments);
                                            arguments = J$.N(21649, 'arguments', arguments, 4);
                                            resolve = J$.N(21657, 'resolve', resolve, 4);
                                            reject = J$.N(21665, 'reject', reject, 4);
                                            J$.X1(21633, J$.M(21625, J$.R(21497, 'self', self, 0), '_next', 0)(J$.T(21617, function (err, r) {
                                                jalangiLabel2251:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(21585, arguments.callee, this, arguments);
                                                            arguments = J$.N(21593, 'arguments', arguments, 4);
                                                            err = J$.N(21601, 'err', err, 4);
                                                            r = J$.N(21609, 'r', r, 4);
                                                            if (J$.X1(25273, J$.C(1288, J$.R(21505, 'err', err, 0))))
                                                                return J$.X1(21545, J$.Rt(21537, J$.F(21529, J$.R(21513, 'reject', reject, 0), 0)(J$.R(21521, 'err', err, 0))));
                                                            J$.X1(21577, J$.F(21569, J$.R(21553, 'resolve', resolve, 0), 0)(J$.R(21561, 'r', r, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(25281, J$e);
                                                        } finally {
                                                            if (J$.Fr(25289))
                                                                continue jalangiLabel2251;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 21585)));
                                        } catch (J$e) {
                                            J$.Ex(25297, J$e);
                                        } finally {
                                            if (J$.Fr(25305))
                                                continue jalangiLabel2252;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 21641))));
                        } catch (J$e) {
                            J$.Ex(25313, J$e);
                        } finally {
                            if (J$.Fr(25321))
                                continue jalangiLabel2253;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 21705), 0));
            J$.X1(21809, J$.M(21801, J$.R(21761, 'define', define, 1), 'classMethod', 0)(J$.T(21769, 'explain', 21, false), J$.T(21793, {
                callback: J$.T(21777, true, 23, false),
                promise: J$.T(21785, true, 23, false)
            }, 11, false)));
            J$.X1(22601, J$.P(22593, J$.G(21825, J$.R(21817, 'Cursor', Cursor, 1), 'prototype', 0), '_read', J$.T(22585, function (n) {
                jalangiLabel2255:
                    while (true) {
                        try {
                            J$.Fe(22553, arguments.callee, this, arguments);
                            arguments = J$.N(22561, 'arguments', arguments, 4);
                            n = J$.N(22569, 'n', n, 4);
                            J$.N(22577, 'self', self, 0);
                            var self = J$.X1(21849, J$.W(21841, 'self', J$.R(21833, 'this', this, 0), self, 1));
                            if (J$.X1(25329, J$.C(1304, J$.C(1296, J$.B(994, '==', J$.G(21873, J$.G(21865, J$.R(21857, 'self', self, 0), 's', 0), 'state', 0), J$.G(21889, J$.R(21881, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.M(21905, J$.R(21897, 'self', self, 0), 'isDead', 0)()))) {
                                return J$.X1(21945, J$.Rt(21937, J$.M(21929, J$.R(21913, 'self', self, 0), 'push', 0)(J$.T(21921, null, 25, false))));
                            }
                            J$.X1(22545, J$.M(22537, J$.R(21953, 'self', self, 0), 'nextObject', 0)(J$.T(22529, function (err, result) {
                                jalangiLabel2254:
                                    while (true) {
                                        try {
                                            J$.Fe(22497, arguments.callee, this, arguments);
                                            arguments = J$.N(22505, 'arguments', arguments, 4);
                                            err = J$.N(22513, 'err', err, 4);
                                            result = J$.N(22521, 'result', result, 4);
                                            if (J$.X1(25353, J$.C(1336, J$.R(21961, 'err', err, 0)))) {
                                                if (J$.X1(25337, J$.C(1312, J$.U(1002, '!', J$.M(21977, J$.R(21969, 'self', self, 0), 'isDead', 0)()))))
                                                    J$.X1(22001, J$.M(21993, J$.R(21985, 'self', self, 0), 'close', 0)());
                                                if (J$.X1(25345, J$.C(1328, J$.C(1320, J$.M(22025, J$.R(22009, 'self', self, 0), 'listeners', 0)(J$.T(22017, 'error', 21, false))) ? J$.B(1010, '>', J$.G(22057, J$.M(22049, J$.R(22033, 'self', self, 0), 'listeners', 0)(J$.T(22041, 'error', 21, false)), 'length', 0), J$.T(22065, 0, 22, false), 0) : J$._()))) {
                                                    J$.X1(22105, J$.M(22097, J$.R(22073, 'self', self, 0), 'emit', 0)(J$.T(22081, 'error', 21, false), J$.R(22089, 'err', err, 0)));
                                                }
                                                J$.X1(22137, J$.M(22129, J$.R(22113, 'self', self, 0), 'emit', 0)(J$.T(22121, 'end', 21, false)));
                                                return J$.X1(22177, J$.Rt(22169, J$.M(22161, J$.R(22145, 'self', self, 0), 'emit', 0)(J$.T(22153, 'finish', 21, false))));
                                            }
                                            if (J$.X1(25361, J$.C(1352, J$.C(1344, J$.B(1026, '==', J$.U(1018, 'typeof', J$.G(22209, J$.G(22201, J$.G(22193, J$.R(22185, 'self', self, 0), 's', 0), 'streamOptions', 0), 'transform', 0)), J$.T(22217, 'function', 21, false), 0)) ? J$.B(1034, '!=', J$.R(22225, 'result', result, 0), J$.T(22233, null, 25, false), 0) : J$._()))) {
                                                return J$.X1(22305, J$.Rt(22297, J$.M(22289, J$.R(22241, 'self', self, 0), 'push', 0)(J$.M(22281, J$.G(22265, J$.G(22257, J$.R(22249, 'self', self, 0), 's', 0), 'streamOptions', 0), 'transform', 0)(J$.R(22273, 'result', result, 0)))));
                                            }
                                            if (J$.X1(25369, J$.C(1376, J$.C(1368, J$.C(1360, J$.G(22329, J$.G(22321, J$.R(22313, 'self', self, 0), 'cursorState', 0), 'transforms', 0)) ? J$.B(1050, '==', J$.U(1042, 'typeof', J$.G(22361, J$.G(22353, J$.G(22345, J$.R(22337, 'self', self, 0), 'cursorState', 0), 'transforms', 0), 'doc', 0)), J$.T(22369, 'function', 21, false), 0) : J$._()) ? J$.B(1058, '!=', J$.R(22377, 'result', result, 0), J$.T(22385, null, 25, false), 0) : J$._()))) {
                                                return J$.X1(22457, J$.Rt(22449, J$.M(22441, J$.R(22393, 'self', self, 0), 'push', 0)(J$.M(22433, J$.G(22417, J$.G(22409, J$.R(22401, 'self', self, 0), 'cursorState', 0), 'transforms', 0), 'doc', 0)(J$.R(22425, 'result', result, 0)))));
                                            }
                                            J$.X1(22489, J$.M(22481, J$.R(22465, 'self', self, 0), 'push', 0)(J$.R(22473, 'result', result, 0)));
                                        } catch (J$e) {
                                            J$.Ex(25377, J$e);
                                        } finally {
                                            if (J$.Fr(25385))
                                                continue jalangiLabel2254;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 22497)));
                        } catch (J$e) {
                            J$.Ex(25393, J$e);
                        } finally {
                            if (J$.Fr(25401))
                                continue jalangiLabel2255;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 22553), 0));
            J$.X1(22785, J$.M(22777, J$.R(22609, 'Object', Object, 2), 'defineProperty', 0)(J$.G(22625, J$.R(22617, 'Cursor', Cursor, 1), 'prototype', 0), J$.T(22633, 'readPreference', 21, false), J$.T(22769, {
                enumerable: J$.T(22641, true, 23, false),
                get: J$.T(22761, function () {
                    jalangiLabel2256:
                        while (true) {
                            try {
                                J$.Fe(22745, arguments.callee, this, arguments);
                                arguments = J$.N(22753, 'arguments', arguments, 4);
                                if (J$.X1(25409, J$.C(1392, J$.C(1384, J$.U(1066, '!', J$.R(22649, 'this', this, 0))) ? J$._() : J$.U(1074, '!', J$.G(22665, J$.R(22657, 'this', this, 0), 's', 0))))) {
                                    return J$.X1(22689, J$.Rt(22681, J$.T(22673, null, 25, false)));
                                }
                                return J$.X1(22737, J$.Rt(22729, J$.G(22721, J$.G(22713, J$.G(22705, J$.R(22697, 'this', this, 0), 's', 0), 'options', 0), 'readPreference', 0)));
                            } catch (J$e) {
                                J$.Ex(25417, J$e);
                            } finally {
                                if (J$.Fr(25425))
                                    continue jalangiLabel2256;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 22745)
            }, 11, false)));
            J$.X1(23185, J$.M(23177, J$.R(22793, 'Object', Object, 2), 'defineProperty', 0)(J$.G(22809, J$.R(22801, 'Cursor', Cursor, 1), 'prototype', 0), J$.T(22817, 'namespace', 21, false), J$.T(23169, {
                enumerable: J$.T(22825, true, 23, false),
                get: J$.T(23161, function () {
                    jalangiLabel2257:
                        while (true) {
                            try {
                                J$.Fe(23129, arguments.callee, this, arguments);
                                arguments = J$.N(23137, 'arguments', arguments, 4);
                                J$.N(23145, 'ns', ns, 0);
                                J$.N(23153, 'firstDot', firstDot, 0);
                                if (J$.X1(25433, J$.C(1408, J$.C(1400, J$.U(1082, '!', J$.R(22833, 'this', this, 0))) ? J$._() : J$.U(1090, '!', J$.G(22849, J$.R(22841, 'this', this, 0), 's', 0))))) {
                                    return J$.X1(22873, J$.Rt(22865, J$.T(22857, null, 25, false)));
                                }
                                var ns = J$.X1(22921, J$.W(22913, 'ns', J$.C(1416, J$.G(22897, J$.G(22889, J$.R(22881, 'this', this, 0), 's', 0), 'ns', 0)) ? J$._() : J$.T(22905, '', 21, false), ns, 1));
                                var firstDot = J$.X1(22961, J$.W(22953, 'firstDot', J$.M(22945, J$.R(22929, 'ns', ns, 0), 'indexOf', 0)(J$.T(22937, '.', 21, false)), firstDot, 1));
                                if (J$.X1(25441, J$.C(1424, J$.B(1098, '<', J$.R(22969, 'firstDot', firstDot, 0), J$.T(22977, 0, 22, false), 0)))) {
                                    return J$.X1(23033, J$.Rt(23025, J$.T(23017, {
                                        database: J$.G(23001, J$.G(22993, J$.R(22985, 'this', this, 0), 's', 0), 'ns', 0),
                                        collection: J$.T(23009, '', 21, false)
                                    }, 11, false)));
                                }
                                return J$.X1(23121, J$.Rt(23113, J$.T(23105, {
                                    database: J$.M(23065, J$.R(23041, 'ns', ns, 0), 'substr', 0)(J$.T(23049, 0, 22, false), J$.R(23057, 'firstDot', firstDot, 0)),
                                    collection: J$.M(23097, J$.R(23073, 'ns', ns, 0), 'substr', 0)(J$.B(1106, '+', J$.R(23081, 'firstDot', firstDot, 0), J$.T(23089, 1, 22, false), 0))
                                }, 11, false)));
                            } catch (J$e) {
                                J$.Ex(25449, J$e);
                            } finally {
                                if (J$.Fr(25457))
                                    continue jalangiLabel2257;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 23129)
            }, 11, false)));
            J$.X1(23217, J$.P(23209, J$.R(23193, 'Cursor', Cursor, 1), 'INIT', J$.T(23201, 0, 22, false), 0));
            J$.X1(23249, J$.P(23241, J$.R(23225, 'Cursor', Cursor, 1), 'OPEN', J$.T(23233, 1, 22, false), 0));
            J$.X1(23281, J$.P(23273, J$.R(23257, 'Cursor', Cursor, 1), 'CLOSED', J$.T(23265, 2, 22, false), 0));
            J$.X1(23313, J$.P(23305, J$.R(23289, 'Cursor', Cursor, 1), 'GET_MORE', J$.T(23297, 3, 22, false), 0));
            J$.X1(23345, J$.P(23337, J$.R(23321, 'module', module, 2), 'exports', J$.R(23329, 'Cursor', Cursor, 1), 0));
        } catch (J$e) {
            J$.Ex(25465, J$e);
        } finally {
            if (J$.Sr(25473)) {
                J$.L();
                continue jalangiLabel2258;
            } else {
                J$.L();
                break jalangiLabel2258;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
