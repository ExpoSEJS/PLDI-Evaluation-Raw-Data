{"8":[6,9,6,33],"9":[1,20,1,27],"10":[6,11,6,32],"16":[10,28,10,47],"17":[1,28,1,32],"18":[6,9,6,33],"24":[11,25,11,49],"25":[1,20,1,33],"26":[10,28,10,47],"32":[12,21,12,49],"33":[1,20,1,33],"34":[12,21,12,49],"40":[13,24,13,50],"41":[1,20,1,33],"42":[13,24,13,50],"48":[27,16,27,54],"49":[2,26,2,38],"50":[15,9,15,38],"56":[25,16,25,60],"57":[2,26,2,45],"58":[16,16,16,44],"64":[20,16,20,52],"65":[2,26,2,45],"66":[16,16,16,56],"72":[16,16,16,56],"73":[2,26,2,45],"74":[25,16,25,60],"80":[15,9,15,38],"81":[3,1,3,13],"82":[36,9,36,25],"88":[36,9,36,25],"89":[3,1,3,14],"90":[41,14,41,28],"96":[41,14,41,43],"97":[4,14,4,21],"98":[41,32,41,43],"104":[41,14,41,43],"105":[4,22,4,36],"106":[42,9,42,46],"112":[42,9,42,60],"113":[4,14,4,37],"114":[42,9,42,50],"120":[53,13,53,37],"121":[4,14,4,42],"122":[42,9,42,60],"128":[51,9,51,56],"129":[4,14,4,49],"130":[44,33,44,63],"136":[66,12,66,50],"137":[4,62,4,69],"138":[51,9,51,46],"144":[77,9,77,37],"145":[4,70,4,84],"146":[51,9,51,56],"152":[82,13,82,16],"153":[4,62,4,85],"154":[53,13,53,37],"160":[89,13,89,35],"161":[4,62,4,90],"162":[54,66,54,96],"168":[110,9,110,30],"169":[4,62,4,99],"170":[59,33,59,63],"177":[4,14,4,49],"178":[66,12,66,50],"185":[4,14,4,49],"186":[77,9,77,23],"193":[4,62,4,99],"194":[77,9,77,37],"201":[4,62,4,99],"202":[89,13,89,35],"209":[6,11,6,15],"210":[110,9,110,30],"217":[6,27,6,32],"218":[126,28,126,38],"225":[7,20,7,25],"233":[7,26,7,30],"241":[7,32,7,43],"249":[7,16,7,44],"257":[7,16,7,44],"265":[7,9,7,45],"273":[8,5,8,9],"281":[8,17,8,21],"289":[8,5,8,21],"297":[8,5,8,22],"305":[9,16,9,20],"313":[9,16,9,20],"321":[9,16,9,20],"329":[10,28,10,39],"337":[10,43,10,47],"345":[10,50,10,52],"353":[10,55,10,66],"361":[10,28,10,66],"369":[10,28,10,66],"377":[11,5,11,9],"385":[11,25,11,37],"393":[11,46,11,47],"401":[11,41,11,49],"409":[11,5,11,49],"417":[11,5,11,50],"425":[12,5,12,9],"433":[12,21,12,37],"441":[12,21,12,41],"449":[12,45,12,49],"457":[12,56,12,64],"465":[12,52,12,66],"473":[12,69,12,85],"481":[12,69,12,89],"489":[12,5,12,89],"497":[12,5,12,90],"505":[13,5,13,9],"513":[13,24,13,40],"521":[13,24,13,42],"529":[13,46,13,50],"537":[13,53,13,54],"545":[13,57,13,73],"553":[13,57,13,75],"561":[13,5,13,75],"569":[13,5,13,76],"577":[14,5,14,9],"585":[14,21,14,27],"593":[14,17,14,29],"601":[14,5,14,29],"609":[14,5,14,30],"617":[15,9,15,25],"625":[15,9,15,30],"633":[15,34,15,38],"641":[16,23,16,39],"649":[16,23,16,44],"657":[16,48,16,56],"665":[17,26,17,32],"673":[17,33,17,49],"681":[17,33,17,54],"689":[17,33,17,61],"697":[17,22,17,62],"705":[17,22,17,62],"713":[17,22,17,62],"721":[18,9,18,15],"729":[18,22,18,38],"737":[18,22,18,43],"745":[18,45,18,46],"753":[18,48,18,64],"761":[18,48,18,69],"769":[18,48,18,76],"777":[18,78,18,86],"785":[18,9,18,87],"787":[18,9,18,21],"793":[18,9,18,88],"801":[19,9,19,13],"809":[19,25,19,31],"817":[19,32,19,38],"825":[19,21,19,39],"833":[19,9,19,39],"841":[19,9,19,40],"849":[20,16,20,21],"857":[20,30,20,46],"865":[20,30,20,51],"873":[20,16,20,52],"875":[20,16,20,29],"881":[21,26,21,32],"889":[21,33,21,49],"897":[21,33,21,54],"905":[21,33,21,61],"913":[21,22,21,62],"921":[21,22,21,62],"929":[21,22,21,62],"937":[22,20,22,36],"945":[22,20,22,41],"953":[22,47,22,49],"961":[22,20,22,50],"963":[22,20,22,46],"969":[22,20,22,50],"977":[22,20,22,50],"985":[23,9,23,15],"993":[23,22,23,26],"1001":[23,28,23,29],"1009":[23,31,23,35],"1017":[23,31,23,42],"1025":[23,44,23,52],"1033":[23,9,23,53],"1035":[23,9,23,21],"1041":[23,9,23,54],"1049":[24,9,24,13],"1057":[24,25,24,31],"1065":[24,32,24,38],"1073":[24,21,24,39],"1081":[24,9,24,39],"1089":[24,9,24,40],"1097":[25,16,25,32],"1105":[25,16,25,37],"1113":[25,16,25,47],"1121":[25,52,25,60],"1129":[26,9,26,13],"1137":[26,21,26,37],"1145":[26,21,26,42],"1153":[26,9,26,42],"1161":[26,9,26,43],"1169":[27,16,27,22],"1177":[27,32,27,48],"1185":[27,32,27,53],"1193":[27,16,27,54],"1195":[27,16,27,31],"1201":[29,15,29,20],"1209":[29,21,29,43],"1217":[29,15,29,44],"1225":[29,15,29,44],"1233":[29,9,29,45],"1241":[31,5,31,9],"1249":[31,29,31,30],"1257":[31,5,31,30],"1265":[31,5,31,31],"1273":[5,13,32,2],"1281":[5,13,32,2],"1289":[5,13,32,2],"1297":[5,13,32,2],"1305":[5,13,32,2],"1313":[5,13,32,2],"1321":[5,13,32,2],"1329":[5,13,32,2],"1337":[5,13,32,2],"1345":[5,13,32,2],"1353":[5,13,32,2],"1361":[5,13,32,2],"1369":[33,1,33,6],"1377":[33,1,33,16],"1385":[34,5,34,9],"1393":[34,5,34,14],"1401":[34,21,34,25],"1409":[34,27,34,31],"1417":[34,27,34,48],"1425":[34,50,34,54],"1433":[34,50,34,61],"1441":[34,63,34,71],"1449":[34,5,34,72],"1451":[34,5,34,20],"1457":[34,5,34,73],"1465":[35,5,35,9],"1473":[35,29,35,33],"1481":[35,29,35,38],"1489":[35,29,35,47],"1491":[35,29,35,45],"1497":[35,5,35,47],"1505":[35,5,35,48],"1513":[36,9,36,17],"1521":[36,21,36,25],"1529":[37,16,37,24],"1537":[37,25,37,29],"1545":[37,31,37,35],"1553":[37,16,37,36],"1561":[37,16,37,36],"1569":[37,9,37,37],"1577":[38,12,38,16],"1585":[38,12,38,16],"1593":[38,5,38,17],"1601":[33,25,39,2],"1609":[33,25,39,2],"1617":[33,25,39,2],"1625":[33,25,39,2],"1633":[33,25,39,2],"1641":[33,1,39,2],"1649":[33,1,39,3],"1657":[40,1,40,6],"1665":[40,1,40,16],"1673":[41,14,41,20],"1681":[41,24,41,28],"1689":[41,32,41,38],"1697":[41,42,41,43],"1705":[41,46,41,50],"1713":[41,46,41,59],"1715":[41,46,41,57],"1721":[41,62,41,68],"1729":[41,14,41,68],"1737":[41,5,41,69],"1745":[42,9,42,13],"1753":[42,9,42,22],"1755":[42,9,42,20],"1761":[42,25,42,29],"1769":[42,25,42,46],"1777":[42,49,42,50],"1785":[42,54,42,60],"1793":[43,20,43,24],"1801":[43,20,43,29],"1809":[43,35,43,39],"1817":[43,35,43,56],"1825":[43,58,43,64],"1833":[43,20,43,65],"1835":[43,20,43,34],"1841":[43,20,43,65],"1849":[43,20,43,65],"1857":[44,9,44,13],"1865":[44,33,44,37],"1873":[44,33,44,54],"1881":[44,57,44,63],"1889":[44,9,44,63],"1897":[44,9,44,64],"1905":[45,16,45,20],"1913":[45,16,45,20],"1921":[45,9,45,21],"1929":[47,16,47,18],"1937":[47,16,47,18],"1945":[47,9,47,19],"1953":[40,24,49,2],"1961":[40,24,49,2],"1969":[40,24,49,2],"1977":[40,24,49,2],"1985":[40,24,49,2],"1993":[40,1,49,2],"2001":[40,1,49,3],"2009":[50,1,50,6],"2017":[50,1,50,16],"2025":[51,9,51,13],"2033":[51,9,51,22],"2035":[51,9,51,20],"2041":[51,25,51,29],"2049":[51,25,51,46],"2057":[51,50,51,56],"2065":[52,20,52,24],"2073":[52,20,52,24],"2081":[52,20,52,24],"2089":[53,13,53,17],"2097":[53,13,53,22],"2105":[53,13,53,29],"2113":[53,33,53,37],"2121":[54,20,54,24],"2129":[54,20,54,29],"2137":[54,20,54,36],"2145":[54,43,54,47],"2153":[54,43,54,64],"2161":[54,66,54,70],"2169":[54,66,54,87],"2177":[54,90,54,96],"2185":[54,20,54,97],"2187":[54,20,54,42],"2193":[54,20,54,97],"2201":[54,13,54,98],"2209":[56,24,56,30],"2217":[56,31,56,37],"2225":[56,20,56,38],"2233":[56,20,56,38],"2241":[56,13,56,39],"2249":[57,22,57,26],"2257":[57,22,57,31],"2265":[57,41,57,45],"2273":[57,47,57,51],"2281":[57,47,57,68],"2289":[57,22,57,69],"2291":[57,22,57,40],"2297":[57,22,57,69],"2305":[57,13,57,70],"2313":[59,9,59,13],"2321":[59,33,59,37],"2329":[59,33,59,54],"2337":[59,57,59,63],"2345":[59,9,59,63],"2353":[59,9,59,64],"2361":[60,16,60,20],"2369":[60,16,60,20],"2377":[60,9,60,21],"2385":[62,16,62,20],"2393":[62,16,62,20],"2401":[62,9,62,21],"2409":[50,29,64,2],"2417":[50,29,64,2],"2425":[50,29,64,2],"2433":[50,29,64,2],"2441":[50,29,64,2],"2449":[50,1,64,2],"2457":[50,1,64,3],"2465":[65,1,65,6],"2473":[65,1,65,16],"2481":[66,12,66,16],"2489":[66,12,66,33],"2497":[66,37,66,41],"2505":[66,37,66,50],"2507":[66,37,66,48],"2513":[66,53,66,57],"2521":[66,60,66,65],"2529":[66,12,66,65],"2537":[66,5,66,66],"2545":[65,23,67,2],"2553":[65,23,67,2],"2561":[65,23,67,2],"2569":[65,1,67,2],"2577":[65,1,67,3],"2585":[68,1,68,6],"2593":[68,1,68,16],"2601":[69,12,69,16],"2609":[69,22,69,23],"2617":[69,12,69,24],"2619":[69,12,69,21],"2625":[69,12,69,24],"2633":[69,5,69,25],"2641":[68,24,70,2],"2649":[68,24,70,2],"2657":[68,24,70,2],"2665":[68,1,70,2],"2673":[68,1,70,3],"2681":[71,1,71,6],"2689":[71,1,71,16],"2697":[72,5,72,9],"2705":[72,29,72,30],"2713":[72,5,72,30],"2721":[72,5,72,31],"2729":[73,5,73,9],"2737":[73,21,73,27],"2745":[73,17,73,29],"2753":[73,5,73,29],"2761":[73,5,73,30],"2769":[71,26,74,2],"2777":[71,26,74,2],"2785":[71,26,74,2],"2793":[71,1,74,2],"2801":[71,1,74,3],"2809":[75,1,75,6],"2817":[75,1,75,16],"2825":[76,16,76,20],"2833":[76,16,76,20],"2841":[76,16,76,20],"2849":[77,16,77,23],"2857":[77,27,77,37],"2865":[78,20,78,27],"2873":[78,20,78,27],"2881":[78,9,78,28],"2889":[79,19,79,21],"2897":[79,19,79,21],"2905":[79,9,79,22],"2913":[81,5,81,9],"2921":[81,5,81,14],"2929":[82,13,82,16],"2937":[83,20,83,28],"2945":[83,29,83,32],"2953":[83,20,83,33],"2961":[83,20,83,33],"2969":[83,13,83,34],"2977":[84,38,84,42],"2985":[84,28,84,44],"2993":[84,28,84,44],"3001":[84,28,84,44],"3009":[85,26,85,33],"3017":[86,13,86,25],"3025":[86,26,86,30],"3033":[86,34,86,41],"3041":[86,42,86,46],"3049":[86,34,86,47],"3057":[86,13,86,47],"3065":[86,13,86,48],"3073":[85,26,85,33],"3081":[85,9,86,48],"3089":[85,9,86,48],"3097":[87,26,87,30],"3105":[87,26,87,43],"3113":[88,13,88,25],"3121":[88,26,88,30],"3129":[88,34,88,38],"3137":[88,34,88,51],"3145":[88,52,88,56],"3153":[88,34,88,57],"3161":[88,13,88,57],"3169":[88,13,88,58],"3177":[87,26,87,43],"3185":[87,9,88,58],"3193":[87,9,88,58],"3201":[89,13,89,17],"3209":[89,13,89,22],"3217":[89,13,89,31],"3219":[89,13,89,29],"3225":[89,34,89,35],"3233":[90,13,90,17],"3241":[91,54,91,58],"3249":[91,31,91,60],"3257":[91,31,91,60],"3265":[91,31,91,60],"3273":[92,34,92,38],"3281":[92,34,92,51],"3289":[93,21,93,28],"3297":[93,29,93,33],"3305":[93,37,93,41],"3313":[93,37,93,54],"3321":[93,55,93,59],"3329":[93,37,93,60],"3337":[93,21,93,60],"3345":[93,21,93,61],"3353":[92,34,92,51],"3361":[92,17,94,18],"3369":[92,17,94,18],"3377":[95,17,95,27],"3385":[95,48,95,52],"3393":[95,48,95,61],"3401":[95,39,95,63],"3409":[95,65,95,76],"3417":[95,78,95,90],"3425":[96,21,96,29],"3433":[96,30,96,33],"3441":[96,35,96,39],"3449":[96,21,96,40],"3457":[96,21,96,41],"3465":[95,92,97,18],"3473":[95,92,97,18],"3481":[95,92,97,18],"3489":[95,92,97,18],"3497":[95,92,97,18],"3505":[95,17,97,19],"3507":[95,17,95,38],"3513":[95,17,97,20],"3521":[90,35,98,14],"3529":[90,35,98,14],"3537":[90,35,98,14],"3545":[90,35,98,14],"3553":[90,35,98,14],"3561":[90,35,98,14],"3569":[90,13,98,15],"3571":[90,13,90,34],"3577":[90,13,98,16],"3585":[100,13,100,21],"3593":[100,22,100,26],"3601":[100,28,100,32],"3609":[100,13,100,33],"3617":[100,13,100,34],"3625":[81,31,102,6],"3633":[81,31,102,6],"3641":[81,31,102,6],"3649":[81,31,102,6],"3657":[81,31,102,6],"3665":[81,31,102,6],"3673":[81,31,102,6],"3681":[81,5,102,7],"3683":[81,5,81,30],"3689":[81,5,102,8],"3697":[75,24,103,2],"3705":[75,24,103,2],"3713":[75,24,103,2],"3721":[75,24,103,2],"3729":[75,24,103,2],"3737":[75,24,103,2],"3745":[75,1,103,2],"3753":[75,1,103,3],"3761":[104,1,104,6],"3769":[104,1,104,16],"3777":[106,21,106,25],"3785":[106,21,106,30],"3793":[106,21,106,37],"3801":[107,14,107,18],"3809":[107,14,107,30],"3817":[108,17,108,21],"3825":[108,17,108,26],"3833":[105,23,109,6],"3841":[105,23,109,6],"3849":[105,23,109,6],"3857":[110,9,110,13],"3865":[110,9,110,22],"3873":[110,26,110,30],"3881":[111,9,111,20],"3889":[111,27,111,31],"3897":[111,27,111,40],"3905":[111,9,111,40],"3913":[111,9,111,41],"3921":[112,5,112,13],"3929":[112,14,112,25],"3937":[112,5,112,26],"3945":[112,5,112,27],"3953":[104,36,113,2],"3961":[104,36,113,2],"3969":[104,36,113,2],"3977":[104,36,113,2],"3985":[104,36,113,2],"3993":[104,1,113,2],"4001":[104,1,113,3],"4009":[114,1,114,6],"4017":[114,1,114,16],"4025":[115,12,115,16],"4033":[115,12,115,21],"4041":[115,12,115,30],"4043":[115,12,115,28],"4049":[115,12,115,30],"4057":[115,5,115,31],"4065":[114,26,116,2],"4073":[114,26,116,2],"4081":[114,26,116,2],"4089":[114,1,116,2],"4097":[114,1,116,3],"4105":[117,1,117,7],"4113":[117,23,117,28],"4121":[117,23,117,38],"4129":[117,40,117,50],"4137":[118,17,118,21],"4145":[120,16,120,20],"4153":[120,16,120,37],"4161":[120,16,120,37],"4169":[120,9,120,38],"4177":[119,10,121,6],"4185":[119,10,121,6],"4193":[119,10,121,6],"4201":[123,9,123,13],"4209":[123,33,123,38],"4217":[123,9,123,38],"4225":[123,9,123,39],"4233":[122,10,124,6],"4241":[122,10,124,6],"4249":[122,10,124,6],"4257":[122,10,124,6],"4265":[117,52,125,2],"4273":[117,1,125,3],"4275":[117,1,117,22],"4281":[117,1,125,4],"4289":[126,1,126,6],"4297":[126,28,126,32],"4305":[126,35,126,38],"4313":[126,1,126,38],"4321":[126,1,126,39],"4329":[127,1,127,7],"4337":[127,18,127,23],"4345":[127,1,127,23],"4353":[127,1,127,24],"4361":[1,1,127,24],"4369":[1,1,127,24],"4377":[1,1,127,24],"4385":[1,1,127,24],"4393":[1,1,127,24],"4401":[1,1,127,24],"4409":[6,5,7,45],"4417":[10,28,10,66],"4425":[12,21,12,89],"4433":[13,24,13,75],"4441":[27,12,30,6],"4449":[25,12,30,6],"4457":[20,12,30,6],"4465":[16,12,30,6],"4473":[15,5,30,6],"4481":[5,13,32,2],"4489":[5,13,32,2],"4497":[36,5,37,37],"4505":[33,25,39,2],"4513":[33,25,39,2],"4521":[41,14,41,68],"4529":[42,5,48,6],"4537":[40,24,49,2],"4545":[40,24,49,2],"4553":[53,9,58,10],"4561":[51,5,63,6],"4569":[50,29,64,2],"4577":[50,29,64,2],"4585":[66,12,66,65],"4593":[65,23,67,2],"4601":[65,23,67,2],"4609":[68,24,70,2],"4617":[68,24,70,2],"4625":[71,26,74,2],"4633":[71,26,74,2],"4641":[77,5,80,6],"4649":[82,9,83,34],"4657":[95,92,97,18],"4665":[95,92,97,18],"4673":[90,35,98,14],"4681":[90,35,98,14],"4689":[89,9,101,10],"4697":[81,31,102,6],"4705":[81,31,102,6],"4713":[75,24,103,2],"4721":[75,24,103,2],"4729":[110,5,111,41],"4737":[104,36,113,2],"4745":[104,36,113,2],"4753":[114,26,116,2],"4761":[114,26,116,2],"4769":[119,10,121,6],"4777":[119,10,121,6],"4785":[122,10,124,6],"4793":[122,10,124,6],"4801":[1,1,127,24],"4809":[1,1,127,24],"nBranches":42,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb/lib/gridfs/chunk.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb/lib/gridfs/chunk_jalangi_.js","code":"\"use strict\";\n\nvar Binary = require('mongodb-core').BSON.Binary,\n  ObjectID = require('mongodb-core').BSON.ObjectID;\n\n/**\n * Class for representing a single chunk in GridFS.\n *\n * @class\n *\n * @param file {GridStore} The {@link GridStore} object holding this chunk.\n * @param mongoObject {object} The mongo object representation of this chunk.\n *\n * @throws Error when the type of data field for {@link mongoObject} is not\n *     supported. Currently supported types for data field are instances of\n *     {@link String}, {@link Array}, {@link Binary} and {@link Binary}\n *     from the bson module\n *\n * @see Chunk#buildMongoObject\n */\nvar Chunk = function(file, mongoObject, writeConcern) {\n  if(!(this instanceof Chunk)) return new Chunk(file, mongoObject);\n\n  this.file = file;\n  var self = this;\n  var mongoObjectFinal = mongoObject == null ? {} : mongoObject;\n  this.writeConcern = writeConcern || {w:1};\n  this.objectId = mongoObjectFinal._id == null ? new ObjectID() : mongoObjectFinal._id;\n  this.chunkNumber = mongoObjectFinal.n == null ? 0 : mongoObjectFinal.n;\n  this.data = new Binary();\n\n  if(mongoObjectFinal.data == null) {\n  } else if(typeof mongoObjectFinal.data == \"string\") {\n    var buffer = new Buffer(mongoObjectFinal.data.length);\n    buffer.write(mongoObjectFinal.data, 0, mongoObjectFinal.data.length, 'binary');\n    this.data = new Binary(buffer);\n  } else if(Array.isArray(mongoObjectFinal.data)) {\n    var buffer = new Buffer(mongoObjectFinal.data.length);\n    var data = mongoObjectFinal.data.join('');\n    buffer.write(data, 0, data.length, 'binary');\n    this.data = new Binary(buffer);\n  } else if(mongoObjectFinal.data._bsontype === 'Binary') {\n    this.data = mongoObjectFinal.data;\n  } else if(Buffer.isBuffer(mongoObjectFinal.data)) {\n  } else {\n    throw Error(\"Illegal chunk format\");\n  }\n\n  // Update position\n  this.internalPosition = 0;\n};\n\n/**\n * Writes a data to this object and advance the read/write head.\n *\n * @param data {string} the data to write\n * @param callback {function(*, GridStore)} This will be called after executing\n *     this method. The first parameter will contain null and the second one\n *     will contain a reference to this object.\n */\nChunk.prototype.write = function(data, callback) {\n  this.data.write(data, this.internalPosition, data.length, 'binary');\n  this.internalPosition = this.data.length();\n  if(callback != null) return callback(null, this);\n  return this;\n};\n\n/**\n * Reads data and advances the read/write head.\n *\n * @param length {number} The length of data to read.\n *\n * @return {string} The data read if the given length will not exceed the end of\n *     the chunk. Returns an empty String otherwise.\n */\nChunk.prototype.read = function(length) {\n  // Default to full read if no index defined\n  length = length == null || length == 0 ? this.length() : length;\n\n  if(this.length() - this.internalPosition + 1 >= length) {\n    var data = this.data.read(this.internalPosition, length);\n    this.internalPosition = this.internalPosition + length;\n    return data;\n  } else {\n    return '';\n  }\n};\n\nChunk.prototype.readSlice = function(length) {\n  if ((this.length() - this.internalPosition) >= length) {\n    var data = null;\n    if (this.data.buffer != null) { //Pure BSON\n      data = this.data.buffer.slice(this.internalPosition, this.internalPosition + length);\n    } else { //Native BSON\n      data = new Buffer(length);\n      length = this.data.readInto(data, this.internalPosition);\n    }\n    this.internalPosition = this.internalPosition + length;\n    return data;\n  } else {\n    return null;\n  }\n};\n\n/**\n * Checks if the read/write head is at the end.\n *\n * @return {boolean} Whether the read/write head has reached the end of this\n *     chunk.\n */\nChunk.prototype.eof = function() {\n  return this.internalPosition == this.length() ? true : false;\n};\n\n/**\n * Reads one character from the data of this chunk and advances the read/write\n * head.\n *\n * @return {string} a single character data read if the the read/write head is\n *     not at the end of the chunk. Returns an empty String otherwise.\n */\nChunk.prototype.getc = function() {\n  return this.read(1);\n};\n\n/**\n * Clears the contents of the data in this chunk and resets the read/write head\n * to the initial position.\n */\nChunk.prototype.rewind = function() {\n  this.internalPosition = 0;\n  this.data = new Binary();\n};\n\n/**\n * Saves this chunk to the database. Also overwrites existing entries having the\n * same id as this chunk.\n *\n * @param callback {function(*, GridStore)} This will be called after executing\n *     this method. The first parameter will contain null and the second one\n *     will contain a reference to this object.\n */\nChunk.prototype.save = function(options, callback) {\n  var self = this;\n  if(typeof options == 'function') {\n    callback = options;\n    options = {};\n  }\n\n  self.file.chunkCollection(function(err, collection) {\n    if(err) return callback(err);\n\n    // Merge the options\n    var writeOptions = { upsert: true };\n    for(var name in options) writeOptions[name] = options[name];\n    for(var name in self.writeConcern) writeOptions[name] = self.writeConcern[name];\n\n    if(self.data.length() > 0) {\n      self.buildMongoObject(function(mongoObject) {\n        var options = {forceServerObjectId:true};\n        for(var name in self.writeConcern) {\n          options[name] = self.writeConcern[name];\n        }\n\n        collection.replaceOne({'_id':self.objectId}, mongoObject, writeOptions, function(err, collection) {\n          callback(err, self);\n        });\n      });\n    } else {\n      callback(null, self);\n    }\n    // });\n  });\n};\n\n/**\n * Creates a mongoDB object representation of this chunk.\n *\n * @param callback {function(Object)} This will be called after executing this\n *     method. The object will be passed to the first parameter and will have\n *     the structure:\n *\n *        <pre><code>\n *        {\n *          '_id' : , // {number} id for this chunk\n *          'files_id' : , // {number} foreign key to the file collection\n *          'n' : , // {number} chunk number\n *          'data' : , // {bson#Binary} the chunk data itself\n *        }\n *        </code></pre>\n *\n * @see <a href=\"http://www.mongodb.org/display/DOCS/GridFS+Specification#GridFSSpecification-{{chunks}}\">MongoDB GridFS Chunk Object Structure</a>\n */\nChunk.prototype.buildMongoObject = function(callback) {\n  var mongoObject = {\n    'files_id': this.file.fileId,\n    'n': this.chunkNumber,\n    'data': this.data};\n  // If we are saving using a specific ObjectId\n  if(this.objectId != null) mongoObject._id = this.objectId;\n\n  callback(mongoObject);\n};\n\n/**\n * @return {number} the length of the data\n */\nChunk.prototype.length = function() {\n  return this.data.length();\n};\n\n/**\n * The position of the read/write head\n * @name position\n * @lends Chunk#\n * @field\n */\nObject.defineProperty(Chunk.prototype, \"position\", { enumerable: true\n  , get: function () {\n      return this.internalPosition;\n    }\n  , set: function(value) {\n      this.internalPosition = value;\n    }\n});\n\n/**\n * The default chunk size\n * @constant\n */\nChunk.DEFAULT_CHUNK_SIZE = 1024 * 255;\n\nmodule.exports = Chunk;\n"}