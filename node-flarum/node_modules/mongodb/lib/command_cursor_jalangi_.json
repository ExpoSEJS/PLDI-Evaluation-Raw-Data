{"8":[4,477,4,542],"9":[1,20,1,27],"10":[12,9,12,24],"16":[13,26,13,61],"17":[1,28,1,32],"18":[13,26,13,47],"24":[12,9,12,24],"25":[1,20,1,33],"26":[13,26,13,61],"32":[50,17,50,44],"33":[1,20,1,33],"34":[50,17,50,44],"40":[55,9,55,62],"41":[1,20,1,33],"42":[50,46,50,49],"48":[55,9,55,62],"49":[2,26,2,38],"56":[60,9,60,43],"57":[2,26,2,45],"58":[50,46,50,49],"64":[69,16,69,47],"65":[2,26,2,45],"66":[55,9,55,45],"72":[67,16,67,36],"73":[2,26,2,45],"74":[60,9,60,43],"80":[65,9,65,36],"81":[3,1,3,13],"82":[65,9,65,36],"88":[80,9,80,62],"89":[3,1,3,14],"90":[67,16,67,24],"96":[80,9,80,62],"97":[4,16,4,23],"98":[67,16,67,36],"104":[85,9,85,33],"105":[4,24,4,30],"106":[69,16,69,47],"112":[90,9,90,26],"113":[4,16,4,31],"114":[80,9,80,45],"120":[101,9,101,58],"121":[4,16,4,40],"122":[85,9,85,21],"129":[4,46,4,53],"130":[85,9,85,33],"137":[4,54,4,60],"138":[101,9,101,58],"145":[4,46,4,61],"153":[4,46,4,68],"161":[4,80,4,87],"169":[4,88,4,97],"177":[4,80,4,98],"185":[4,80,4,106],"193":[4,128,4,135],"201":[4,136,4,145],"209":[4,128,4,146],"217":[4,128,4,164],"225":[4,189,4,196],"233":[4,197,4,206],"241":[4,189,4,207],"249":[4,189,4,228],"257":[4,247,4,254],"265":[4,255,4,264],"273":[4,247,4,265],"281":[4,247,4,280],"289":[4,291,4,298],"297":[4,299,4,313],"305":[4,291,4,314],"313":[4,291,4,321],"321":[4,338,4,345],"329":[4,346,4,354],"337":[4,338,4,355],"345":[4,338,4,368],"353":[4,387,4,394],"361":[4,395,4,414],"369":[4,387,4,415],"377":[4,430,4,437],"385":[4,438,4,452],"393":[4,430,4,453],"401":[4,430,4,464],"409":[4,477,4,484],"417":[4,485,4,493],"425":[4,477,4,494],"433":[4,477,4,503],"441":[4,507,4,514],"449":[4,515,4,532],"457":[4,507,4,533],"465":[4,507,4,542],"473":[4,553,4,560],"481":[4,561,4,573],"489":[4,553,4,574],"497":[4,589,4,596],"505":[4,597,4,607],"513":[4,589,4,608],"521":[4,618,4,625],"529":[4,626,4,640],"537":[4,618,4,641],"545":[4,618,4,647],"553":[4,670,4,677],"561":[4,678,4,692],"569":[4,670,4,693],"577":[4,670,4,708],"585":[4,16,4,40],"593":[4,16,4,40],"601":[4,46,4,68],"609":[4,46,4,68],"617":[4,80,4,106],"625":[4,80,4,106],"633":[4,128,4,164],"641":[4,128,4,164],"649":[4,189,4,228],"657":[4,189,4,228],"665":[4,247,4,280],"673":[4,247,4,280],"681":[4,291,4,321],"689":[4,291,4,321],"697":[4,338,4,368],"705":[4,338,4,368],"713":[4,387,4,415],"721":[4,387,4,415],"729":[4,430,4,464],"737":[4,430,4,464],"745":[4,477,4,542],"753":[4,477,4,542],"761":[4,553,4,574],"769":[4,553,4,574],"777":[4,589,4,608],"785":[4,589,4,608],"793":[4,618,4,647],"801":[4,618,4,647],"809":[4,670,4,708],"817":[4,670,4,708],"825":[6,5,6,15],"833":[6,22,6,26],"841":[6,28,6,33],"849":[6,28,6,43],"857":[6,28,6,49],"865":[6,55,6,64],"873":[6,66,6,67],"881":[6,28,6,68],"883":[6,28,6,54],"889":[6,5,6,69],"891":[6,5,6,21],"897":[6,5,6,70],"905":[7,16,7,20],"913":[7,16,7,20],"921":[7,16,7,20],"929":[8,17,8,30],"937":[8,17,8,35],"945":[8,17,8,35],"953":[8,17,8,35],"961":[9,25,9,27],"969":[9,25,9,27],"977":[9,25,9,27],"985":[10,21,10,25],"993":[10,21,10,25],"1001":[10,21,10,25],"1009":[11,26,11,33],"1017":[11,26,11,48],"1025":[11,26,11,48],"1033":[11,26,11,48],"1041":[12,10,12,24],"1049":[13,33,13,39],"1057":[13,33,13,47],"1065":[13,51,13,61],"1073":[13,64,13,70],"1081":[13,64,13,78],"1089":[13,81,13,88],"1097":[13,89,13,102],"1105":[13,81,13,103],"1113":[13,81,13,111],"1121":[13,26,13,111],"1129":[13,9,13,112],"1137":[15,5,15,13],"1145":[15,19,15,23],"1153":[15,39,15,43],"1161":[15,25,15,45],"1169":[15,5,15,46],"1171":[15,5,15,18],"1177":[15,5,15,47],"1185":[16,5,16,9],"1193":[17,20,17,29],"1201":[18,16,18,21],"1209":[19,24,19,37],"1217":[20,15,20,19],"1225":[21,13,21,15],"1233":[22,14,22,17],"1241":[23,18,23,25],"1249":[24,19,24,27],"1257":[25,26,25,41],"1265":[26,25,26,39],"1273":[16,14,27,6],"1281":[16,5,27,6],"1289":[16,5,27,7],"1297":[5,21,28,2],"1305":[5,21,28,2],"1313":[5,21,28,2],"1321":[5,21,28,2],"1329":[5,21,28,2],"1337":[5,21,28,2],"1345":[5,21,28,2],"1353":[5,21,28,2],"1361":[5,21,28,2],"1369":[5,21,28,2],"1377":[5,21,28,2],"1385":[5,21,28,2],"1393":[5,21,28,2],"1401":[5,21,28,2],"1409":[5,21,28,2],"1417":[5,21,28,2],"1425":[29,1,29,9],"1433":[29,10,29,23],"1441":[29,25,29,33],"1449":[29,1,29,34],"1457":[29,1,29,35],"1465":[31,5,31,12],"1473":[32,5,32,11],"1481":[33,5,33,11],"1489":[34,5,34,14],"1497":[35,5,35,14],"1505":[36,5,36,13],"1513":[37,5,37,20],"1521":[38,5,38,28],"1529":[39,5,39,12],"1537":[40,5,40,15],"1545":[41,5,41,11],"1553":[42,5,42,12],"1561":[43,5,43,15],"1569":[44,5,44,18],"1577":[45,5,45,13],"1585":[46,5,46,14],"1593":[47,5,47,17],"1601":[48,5,48,15],"1609":[30,24,49,2],"1617":[30,24,49,2],"1625":[30,24,49,2],"1633":[50,14,50,15],"1641":[50,14,50,15],"1649":[50,14,50,15],"1657":[50,17,50,18],"1665":[50,21,50,37],"1673":[50,21,50,44],"1689":[50,46,50,47],"1697":[50,46,50,49],"1713":[51,5,51,18],"1721":[51,5,51,28],"1729":[51,29,51,45],"1737":[51,46,51,47],"1745":[51,29,51,48],"1753":[51,52,51,62],"1761":[51,52,51,72],"1769":[51,73,51,89],"1777":[51,90,51,91],"1785":[51,73,51,92],"1793":[51,52,51,93],"1801":[51,5,51,93],"1809":[51,5,51,94],"1817":[53,14,53,27],"1825":[53,41,53,47],"1833":[53,48,53,63],"1841":[53,65,53,78],"1849":[53,80,53,84],"1857":[53,37,53,85],"1865":[53,14,53,85],"1873":[53,14,53,85],"1881":[53,14,53,85],"1889":[54,1,54,14],"1897":[54,1,54,24],"1905":[55,9,55,13],"1913":[55,9,55,15],"1921":[55,9,55,21],"1929":[55,25,55,38],"1937":[55,25,55,45],"1945":[55,49,55,53],"1953":[55,49,55,62],"1955":[55,49,55,60],"1961":[56,15,56,25],"1969":[57,22,57,40],"1977":[58,21,58,25],"1985":[56,33,59,10],"1993":[56,15,59,11],"1995":[56,15,56,32],"2001":[56,15,59,11],"2009":[56,9,59,12],"2017":[60,9,60,13],"2025":[60,9,60,15],"2033":[60,9,60,21],"2041":[60,25,60,38],"2049":[60,25,60,43],"2057":[61,15,61,25],"2065":[62,22,62,90],"2073":[63,21,63,25],"2081":[61,33,64,10],"2089":[61,15,64,11],"2091":[61,15,61,32],"2097":[61,15,64,11],"2105":[61,9,64,12],"2113":[65,9,65,10],"2121":[65,22,65,36],"2129":[66,9,66,13],"2137":[66,9,66,15],"2145":[66,9,66,23],"2153":[66,45,66,63],"2161":[66,64,66,65],"2169":[66,64,66,70],"2177":[66,72,66,73],"2185":[66,72,66,78],"2193":[66,41,66,79],"2201":[66,9,66,79],"2209":[66,9,66,80],"2217":[67,23,67,24],"2225":[67,28,67,36],"2233":[68,9,68,13],"2241":[68,9,68,15],"2249":[68,9,68,23],"2257":[68,45,68,63],"2265":[68,64,68,65],"2273":[68,41,68,66],"2281":[68,9,68,66],"2289":[68,9,68,67],"2297":[69,16,69,17],"2305":[69,29,69,47],"2313":[70,9,70,13],"2321":[70,9,70,15],"2329":[70,9,70,23],"2337":[70,41,70,42],"2345":[70,9,70,42],"2353":[70,9,70,43],"2361":[72,12,72,16],"2369":[72,12,72,16],"2377":[72,5,72,17],"2385":[54,45,73,2],"2393":[54,45,73,2],"2401":[54,45,73,2],"2409":[54,45,73,2],"2417":[54,1,73,2],"2425":[54,1,73,3],"2433":[74,1,74,7],"2441":[74,20,74,39],"2449":[75,15,75,20],"2457":[76,14,76,19],"2465":[77,15,77,28],"2473":[77,14,77,29],"2481":[74,41,78,2],"2489":[74,1,78,3],"2491":[74,1,74,19],"2497":[74,1,78,4],"2505":[79,1,79,14],"2513":[79,1,79,24],"2521":[80,9,80,13],"2529":[80,9,80,15],"2537":[80,9,80,21],"2545":[80,25,80,38],"2553":[80,25,80,45],"2561":[80,49,80,53],"2569":[80,49,80,62],"2571":[80,49,80,60],"2577":[81,15,81,25],"2585":[82,22,82,40],"2593":[83,21,83,25],"2601":[81,33,84,10],"2609":[81,15,84,11],"2611":[81,15,81,32],"2617":[81,15,84,11],"2625":[81,9,84,12],"2633":[85,16,85,21],"2641":[85,25,85,33],"2649":[86,15,86,25],"2657":[87,22,87,53],"2665":[88,21,88,25],"2673":[86,33,89,10],"2681":[86,15,89,11],"2683":[86,15,86,32],"2689":[86,15,89,11],"2697":[86,9,89,12],"2705":[90,9,90,13],"2713":[90,9,90,15],"2721":[90,9,90,19],"2729":[90,9,90,26],"2737":[91,9,91,13],"2745":[91,9,91,15],"2753":[91,9,91,19],"2761":[91,9,91,26],"2769":[91,39,91,44],"2777":[91,9,91,44],"2785":[91,9,91,45],"2793":[92,5,92,9],"2801":[92,29,92,34],"2809":[92,5,92,35],"2811":[92,5,92,28],"2817":[92,5,92,36],"2825":[93,12,93,16],"2833":[93,12,93,16],"2841":[93,5,93,17],"2849":[79,37,94,2],"2857":[79,37,94,2],"2865":[79,37,94,2],"2873":[79,37,94,2],"2881":[79,1,94,2],"2889":[79,1,94,3],"2897":[95,1,95,7],"2905":[95,20,95,31],"2913":[96,15,96,20],"2921":[97,14,97,19],"2929":[98,15,98,28],"2937":[98,14,98,29],"2945":[95,33,99,2],"2953":[95,1,99,3],"2955":[95,1,95,19],"2961":[95,1,99,4],"2969":[100,1,100,14],"2977":[100,1,100,24],"2985":[101,9,101,13],"2993":[101,9,101,15],"3001":[101,9,101,24],"3009":[101,9,101,39],"3011":[101,9,101,37],"3017":[101,9,101,54],"3025":[101,57,101,58],"3033":[102,9,102,13],"3041":[102,9,102,15],"3049":[102,9,102,19],"3057":[102,32,102,37],"3065":[102,9,102,37],"3073":[102,9,102,38],"3081":[104,12,104,16],"3089":[104,12,104,16],"3097":[104,5,104,17],"3105":[100,37,105,2],"3113":[100,37,105,2],"3121":[100,37,105,2],"3129":[100,37,105,2],"3137":[100,1,105,2],"3145":[100,1,105,3],"3153":[106,1,106,7],"3161":[106,20,106,31],"3169":[107,15,107,20],"3177":[108,14,108,19],"3185":[109,15,109,28],"3193":[109,14,109,29],"3201":[106,33,110,2],"3209":[106,1,110,3],"3211":[106,1,106,19],"3217":[106,1,110,4],"3225":[111,1,111,14],"3233":[111,1,111,24],"3241":[111,31,111,44],"3249":[111,31,111,54],"3257":[111,31,111,62],"3265":[111,1,111,62],"3273":[111,1,111,63],"3281":[112,1,112,7],"3289":[112,20,112,25],"3297":[113,15,113,19],"3305":[114,14,114,19],"3313":[112,27,115,2],"3321":[112,1,115,3],"3323":[112,1,112,19],"3329":[112,1,115,4],"3337":[116,1,116,7],"3345":[116,20,116,29],"3353":[117,15,117,19],"3361":[118,14,118,18],"3369":[116,31,119,2],"3377":[116,1,119,3],"3379":[116,1,116,19],"3385":[116,1,119,4],"3393":[120,1,120,7],"3401":[120,20,120,26],"3409":[121,15,121,19],"3417":[122,14,122,19],"3425":[120,28,123,2],"3433":[120,1,123,3],"3435":[120,1,120,19],"3441":[120,1,123,4],"3449":[124,1,124,7],"3457":[124,20,124,29],"3465":[125,15,125,19],"3473":[126,14,126,19],"3481":[124,31,127,2],"3489":[124,1,127,3],"3491":[124,1,124,19],"3497":[124,1,127,4],"3505":[128,1,128,7],"3513":[128,20,128,26],"3521":[129,15,129,19],"3529":[130,14,130,18],"3537":[128,28,131,2],"3545":[128,1,131,3],"3547":[128,1,128,19],"3553":[128,1,131,4],"3561":[132,1,132,7],"3569":[132,20,132,27],"3577":[133,15,133,19],"3585":[134,14,134,18],"3593":[132,29,135,2],"3601":[132,1,135,3],"3603":[132,1,132,19],"3609":[132,1,135,4],"3617":[136,1,136,7],"3625":[136,20,136,30],"3633":[137,15,137,20],"3641":[138,14,138,19],"3649":[139,15,139,22],"3657":[139,14,139,23],"3665":[136,32,140,2],"3673":[136,1,140,3],"3675":[136,1,136,19],"3681":[136,1,140,4],"3689":[141,1,141,7],"3697":[141,20,141,28],"3705":[142,15,142,20],"3713":[143,14,143,19],"3721":[141,30,144,2],"3729":[141,1,144,3],"3731":[141,1,141,19],"3737":[141,1,144,4],"3745":[145,1,145,7],"3753":[145,20,145,35],"3761":[146,15,146,20],"3769":[147,14,147,19],"3777":[148,15,148,21],"3785":[148,14,148,22],"3793":[145,37,149,2],"3801":[145,1,149,3],"3803":[145,1,145,19],"3809":[145,1,149,4],"3817":[150,1,150,7],"3825":[150,20,150,43],"3833":[151,15,151,20],"3841":[152,14,152,19],"3849":[153,15,153,20],"3857":[153,14,153,21],"3865":[150,45,154,2],"3873":[150,1,154,3],"3875":[150,1,150,19],"3881":[150,1,154,4],"3889":[155,1,155,14],"3897":[155,22,155,23],"3905":[155,1,155,23],"3913":[155,1,155,24],"3921":[156,1,156,14],"3929":[156,22,156,23],"3937":[156,1,156,23],"3945":[156,1,156,24],"3953":[157,1,157,14],"3961":[157,24,157,25],"3969":[157,1,157,25],"3977":[157,1,157,26],"3985":[158,1,158,7],"3993":[158,18,158,31],"4001":[158,1,158,31],"4009":[158,1,158,32],"4017":[1,1,158,32],"4025":[1,1,158,32],"4033":[1,1,158,32],"4041":[1,1,158,32],"4049":[1,1,158,32],"4057":[1,1,158,32],"4065":[1,1,158,32],"4073":[1,1,158,32],"4081":[1,1,158,32],"4089":[1,1,158,32],"4097":[1,1,158,32],"4105":[1,1,158,32],"4113":[1,1,158,32],"4121":[1,1,158,32],"4129":[1,1,158,32],"4137":[1,1,158,32],"4145":[1,1,158,32],"4153":[1,1,158,32],"4161":[1,1,158,32],"4169":[1,1,158,32],"4177":[1,1,158,32],"4185":[1,1,158,32],"4193":[13,26,13,111],"4201":[12,5,14,6],"4209":[5,21,28,2],"4217":[5,21,28,2],"4225":[50,1,52,2],"4233":[50,1,52,2],"4241":[55,5,59,12],"4249":[60,5,64,12],"4257":[69,12,71,6],"4265":[67,12,71,6],"4273":[65,5,71,6],"4281":[54,45,73,2],"4289":[54,45,73,2],"4297":[80,5,84,12],"4305":[85,5,89,12],"4313":[90,5,91,45],"4321":[79,37,94,2],"4329":[79,37,94,2],"4337":[101,5,103,6],"4345":[100,37,105,2],"4353":[100,37,105,2],"4361":[1,1,158,32],"4369":[1,1,158,32],"nBranches":30,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb/lib/command_cursor.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb/lib/command_cursor_jalangi_.js","code":"\"use strict\";\n\nvar inherits = require('util').inherits\n  , f = require('util').format\n  , toError = require('./utils').toError\n  , getSingleProperty = require('./utils').getSingleProperty\n  , formattedOrderClause = require('./utils').formattedOrderClause\n  , handleCallback = require('./utils').handleCallback\n  , Logger = require('mongodb-core').Logger\n  , EventEmitter = require('events').EventEmitter\n  , ReadPreference = require('./read_preference')\n  , MongoError = require('mongodb-core').MongoError\n  , Readable = require('stream').Readable || require('readable-stream').Readable\n  , Define = require('./metadata')\n  , CoreCursor = require('./cursor')\n  , Query = require('mongodb-core').Query\n  , CoreReadPreference = require('mongodb-core').ReadPreference;\n\n/**\n * @fileOverview The **CommandCursor** class is an internal class that embodies a\n * generalized cursor based on a MongoDB command allowing for iteration over the\n * results returned. It supports one by one document iteration, conversion to an\n * array or can be iterated as a Node 0.10.X or higher stream\n *\n * **CommandCursor Cannot directly be instantiated**\n * @example\n * var MongoClient = require('mongodb').MongoClient,\n *   test = require('assert');\n * // Connection url\n * var url = 'mongodb://localhost:27017/test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, db) {\n *   // Create a collection we want to drop later\n *   var col = db.collection('listCollectionsExample1');\n *   // Insert a bunch of documents\n *   col.insert([{a:1, b:1}\n *     , {a:2, b:2}, {a:3, b:3}\n *     , {a:4, b:4}], {w:1}, function(err, result) {\n *     test.equal(null, err);\n *\n *     // List the database collections available\n *     db.listCollections().toArray(function(err, items) {\n *       test.equal(null, err);\n *       db.close();\n *     });\n *   });\n * });\n */\n\n/**\n * Namespace provided by the browser.\n * @external Readable\n */\n\n/**\n * Creates a new Command Cursor instance (INTERNAL TYPE, do not instantiate directly)\n * @class CommandCursor\n * @extends external:Readable\n * @fires CommandCursor#data\n * @fires CommandCursor#end\n * @fires CommandCursor#close\n * @fires CommandCursor#readable\n * @return {CommandCursor} an CommandCursor instance.\n */\nvar CommandCursor = function(bson, ns, cmd, options, topology, topologyOptions) {\n  CoreCursor.apply(this, Array.prototype.slice.call(arguments, 0));\n  var self = this;\n  var state = CommandCursor.INIT;\n  var streamOptions = {};\n\n  // MaxTimeMS\n  var maxTimeMS = null;\n\n  // Get the promiseLibrary\n  var promiseLibrary = options.promiseLibrary;\n\n  // No promise library selected fall back\n  if(!promiseLibrary) {\n    promiseLibrary = typeof global.Promise == 'function' ?\n      global.Promise : require('es6-promise').Promise;\n  }\n\n  // Set up\n  Readable.call(this, {objectMode: true});\n\n  // Internal state\n  this.s = {\n    // MaxTimeMS\n      maxTimeMS: maxTimeMS\n    // State\n    , state: state\n    // Stream options\n    , streamOptions: streamOptions\n    // BSON\n    , bson: bson\n    // Namespae\n    , ns: ns\n    // Command\n    , cmd: cmd\n    // Options\n    , options: options\n    // Topology\n    , topology: topology\n    // Topology Options\n    , topologyOptions: topologyOptions\n    // Promise library\n    , promiseLibrary: promiseLibrary\n  }\n}\n\n/**\n * CommandCursor stream data event, fired for each document in the cursor.\n *\n * @event CommandCursor#data\n * @type {object}\n */\n\n/**\n * CommandCursor stream end event\n *\n * @event CommandCursor#end\n * @type {null}\n */\n\n/**\n * CommandCursor stream close event\n *\n * @event CommandCursor#close\n * @type {null}\n */\n\n/**\n * CommandCursor stream readable event\n *\n * @event CommandCursor#readable\n * @type {null}\n */\n\n// Inherit from Readable\ninherits(CommandCursor, Readable);\n\n// Set the methods to inherit from prototype\nvar methodsToInherit = ['_next', 'next', 'each', 'forEach', 'toArray'\n  , 'rewind', 'bufferedCount', 'readBufferedDocuments', 'close', 'isClosed', 'kill'\n  , '_find', '_getmore', '_killcursor', 'isDead', 'explain', 'isNotified', 'isKilled'];\n\n// Only inherit the types we need\nfor(var i = 0; i < methodsToInherit.length; i++) {\n  CommandCursor.prototype[methodsToInherit[i]] = CoreCursor.prototype[methodsToInherit[i]];\n}\n\nvar define = CommandCursor.define = new Define('CommandCursor', CommandCursor, true);\n\n/**\n * Set the ReadPreference for the cursor.\n * @method\n * @param {(string|ReadPreference)} readPreference The new read preference for the cursor.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCommandCursor.prototype.setReadPreference = function(r) {\n  if(this.s.state == CommandCursor.CLOSED || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  if(this.s.state != CommandCursor.INIT) throw MongoError.create({message: 'cannot change cursor readPreference after cursor has been accessed', driver:true});\n\n  if(r instanceof ReadPreference) {\n    this.s.options.readPreference = new CoreReadPreference(r.mode, r.tags);\n  } else if(typeof r == 'string') {\n    this.s.options.readPreference = new CoreReadPreference(r);\n  } else if(r instanceof CoreReadPreference) {\n    this.s.options.readPreference = r;\n  }\n\n  return this;\n}\n\ndefine.classMethod('setReadPreference', {callback: false, promise:false, returns: [CommandCursor]});\n\n/**\n * Set the batch size for the cursor.\n * @method\n * @param {number} value The batchSize for the cursor.\n * @throws {MongoError}\n * @return {CommandCursor}\n */\nCommandCursor.prototype.batchSize = function(value) {\n  if(this.s.state == CommandCursor.CLOSED || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  if(typeof value != 'number') throw MongoError.create({message: \"batchSize requires an integer\", driver:true});\n  if(this.s.cmd.cursor) this.s.cmd.cursor.batchSize = value;\n  this.setCursorBatchSize(value);\n  return this;\n}\n\ndefine.classMethod('batchSize', {callback: false, promise:false, returns: [CommandCursor]});\n\n/**\n * Add a maxTimeMS stage to the aggregation pipeline\n * @method\n * @param {number} value The state maxTimeMS value.\n * @return {CommandCursor}\n */\nCommandCursor.prototype.maxTimeMS = function(value) {\n  if(this.s.topology.lastIsMaster().minWireVersion > 2) {\n    this.s.cmd.maxTimeMS = value;\n  }\n  return this;\n}\n\ndefine.classMethod('maxTimeMS', {callback: false, promise:false, returns: [CommandCursor]});\n\nCommandCursor.prototype.get = CommandCursor.prototype.toArray;\n\ndefine.classMethod('get', {callback: true, promise:false});\n\n// Inherited methods\ndefine.classMethod('toArray', {callback: true, promise:true});\ndefine.classMethod('each', {callback: true, promise:false});\ndefine.classMethod('forEach', {callback: true, promise:false});\ndefine.classMethod('next', {callback: true, promise:true});\ndefine.classMethod('close', {callback: true, promise:true});\ndefine.classMethod('isClosed', {callback: false, promise:false, returns: [Boolean]});\ndefine.classMethod('rewind', {callback: false, promise:false});\ndefine.classMethod('bufferedCount', {callback: false, promise:false, returns: [Number]});\ndefine.classMethod('readBufferedDocuments', {callback: false, promise:false, returns: [Array]});\n\n/**\n * Get the next available document from the cursor, returns null if no more documents are available.\n * @function CommandCursor.prototype.next\n * @param {CommandCursor~resultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * The callback format for results\n * @callback CommandCursor~toArrayResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object[]} documents All the documents the satisfy the cursor.\n */\n\n/**\n * Returns an array of documents. The caller is responsible for making sure that there\n * is enough memory to store the results. Note that the array only contain partial\n * results when this cursor had been previouly accessed.\n * @method CommandCursor.prototype.toArray\n * @param {CommandCursor~toArrayResultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * The callback format for results\n * @callback CommandCursor~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {(object|null)} result The result object if the command was executed successfully.\n */\n\n/**\n * Iterates over all the documents for this cursor. As with **{cursor.toArray}**,\n * not all of the elements will be iterated if this cursor had been previouly accessed.\n * In that case, **{cursor.rewind}** can be used to reset the cursor. However, unlike\n * **{cursor.toArray}**, the cursor will only hold a maximum of batch size elements\n * at any given time if batch size is specified. Otherwise, the caller is responsible\n * for making sure that the entire result can fit the memory.\n * @method CommandCursor.prototype.each\n * @param {CommandCursor~resultCallback} callback The result callback.\n * @throws {MongoError}\n * @return {null}\n */\n\n/**\n * Close the cursor, sending a KillCursor command and emitting close.\n * @method CommandCursor.prototype.close\n * @param {CommandCursor~resultCallback} [callback] The result callback.\n * @return {Promise} returns Promise if no callback passed\n */\n\n/**\n * Is the cursor closed\n * @method CommandCursor.prototype.isClosed\n * @return {boolean}\n */\n\n/**\n * Clone the cursor\n * @function CommandCursor.prototype.clone\n * @return {CommandCursor}\n */\n\n/**\n * Resets the cursor\n * @function CommandCursor.prototype.rewind\n * @return {CommandCursor}\n */\n\n/**\n * The callback format for the forEach iterator method\n * @callback CommandCursor~iteratorCallback\n * @param {Object} doc An emitted document for the iterator\n */\n\n/**\n * The callback error format for the forEach iterator method\n * @callback CommandCursor~endCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n */\n\n/*\n * Iterates over all the documents for this cursor using the iterator, callback pattern.\n * @method CommandCursor.prototype.forEach\n * @param {CommandCursor~iteratorCallback} iterator The iteration callback.\n * @param {CommandCursor~endCallback} callback The end callback.\n * @throws {MongoError}\n * @return {null}\n */\n\nCommandCursor.INIT = 0;\nCommandCursor.OPEN = 1;\nCommandCursor.CLOSED = 2;\n\nmodule.exports = CommandCursor;\n"}