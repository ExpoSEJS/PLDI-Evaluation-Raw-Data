J$.iids = {"8":[9,18,9,61],"9":[1,20,1,27],"10":[9,18,9,48],"16":[20,18,20,61],"17":[1,28,1,32],"18":[9,18,9,61],"24":[57,9,57,46],"25":[1,20,1,33],"26":[20,18,20,48],"32":[59,9,59,37],"33":[1,20,1,33],"34":[20,18,20,61],"40":[61,9,61,160],"41":[1,20,1,33],"42":[57,9,57,46],"48":[61,9,61,205],"49":[2,26,2,38],"50":[58,23,58,94],"56":[61,9,61,205],"57":[2,26,2,45],"58":[59,9,59,37],"64":[70,9,70,33],"65":[2,26,2,45],"66":[61,9,61,37],"72":[76,9,76,32],"73":[2,26,2,45],"74":[61,9,61,66],"80":[86,15,86,30],"81":[3,1,3,13],"82":[61,70,61,131],"88":[92,29,92,91],"89":[3,1,3,14],"90":[61,70,61,160],"96":[92,29,92,91],"97":[4,14,4,21],"98":[61,164,61,205],"104":[93,29,93,91],"105":[4,22,4,32],"106":[67,36,67,64],"112":[93,29,93,91],"113":[4,14,4,33],"114":[68,41,68,81],"120":[97,26,97,61],"121":[4,43,4,50],"122":[70,9,70,33],"128":[96,9,96,24],"129":[4,51,4,61],"130":[81,32,81,56],"136":[135,35,135,87],"137":[4,43,4,62],"138":[86,15,86,30],"144":[141,31,141,85],"145":[4,74,4,81],"146":[92,135,92,146],"152":[142,9,142,39],"153":[4,82,4,92],"154":[92,135,92,151],"160":[142,43,142,75],"161":[4,74,4,93],"162":[96,9,96,24],"168":[142,9,142,75],"169":[4,74,4,101],"170":[97,26,97,47],"176":[142,79,142,111],"177":[4,107,4,114],"178":[97,26,97,61],"184":[142,9,142,111],"185":[4,115,4,121],"186":[135,35,135,74],"192":[143,25,143,54],"193":[4,107,4,122],"194":[135,35,135,87],"200":[143,25,143,54],"201":[4,107,4,129],"202":[141,31,141,72],"208":[142,9,142,111],"209":[4,148,4,155],"210":[141,31,141,85],"216":[146,9,146,38],"217":[4,156,4,166],"218":[168,25,168,54],"224":[146,9,146,55],"225":[4,148,4,167],"226":[169,13,169,41],"232":[147,21,147,50],"233":[4,148,4,182],"234":[169,45,169,69],"240":[147,21,147,50],"241":[4,199,4,204],"242":[173,13,173,41],"248":[150,16,150,53],"249":[4,199,4,217],"250":[173,45,173,78],"256":[153,28,153,42],"257":[4,232,4,238],"258":[178,25,178,49],"264":[146,9,146,55],"265":[4,232,4,249],"266":[178,51,178,54],"272":[156,9,156,38],"273":[4,269,4,275],"280":[156,42,156,72],"281":[4,269,4,291],"282":[178,51,178,54],"288":[156,9,156,72],"289":[4,304,4,310],"290":[179,17,179,45],"296":[156,76,156,108],"297":[4,304,4,319],"298":[179,49,179,77],"304":[156,9,156,108],"305":[4,332,4,339],"306":[188,9,188,68],"312":[157,25,157,37],"313":[4,340,4,354],"314":[188,72,188,92],"320":[156,9,156,108],"321":[4,332,4,355],"322":[193,9,193,18],"328":[160,9,160,38],"329":[4,332,4,360],"330":[206,9,206,35],"336":[161,21,161,33],"337":[4,332,4,369],"338":[217,13,217,32],"344":[160,9,160,38],"345":[4,380,4,387],"346":[220,13,220,53],"352":[168,9,168,54],"353":[4,388,4,401],"354":[226,9,226,36],"360":[169,13,169,69],"361":[4,380,4,402],"362":[238,9,238,48],"368":[169,13,169,69],"369":[4,412,4,418],"370":[242,13,242,45],"376":[172,16,172,53],"377":[4,412,4,424],"378":[244,20,244,52],"384":[173,13,173,78],"385":[4,446,4,452],"386":[246,20,246,52],"392":[173,13,173,78],"393":[4,446,4,470],"394":[258,9,258,29],"400":[172,16,172,53],"401":[4,14,4,33],"402":[258,9,258,43],"408":[168,9,168,54],"409":[4,14,4,33],"410":[265,9,265,35],"416":[179,17,179,77],"417":[4,43,4,62],"418":[268,9,268,24],"424":[179,17,179,77],"425":[4,43,4,62],"426":[268,9,268,38],"432":[178,25,178,49],"433":[4,74,4,101],"440":[177,9,177,22],"441":[4,74,4,101],"448":[188,9,188,92],"449":[4,107,4,129],"456":[188,9,188,92],"457":[4,107,4,129],"464":[193,9,193,18],"465":[4,148,4,182],"472":[206,9,206,35],"473":[4,148,4,182],"480":[211,13,211,30],"481":[4,199,4,217],"488":[211,34,211,52],"489":[4,199,4,217],"496":[211,13,211,52],"497":[4,232,4,249],"504":[211,13,211,52],"505":[4,232,4,249],"512":[214,13,214,16],"513":[4,269,4,291],"520":[217,13,217,32],"521":[4,269,4,291],"528":[220,13,220,53],"529":[4,304,4,319],"536":[226,9,226,36],"537":[4,304,4,319],"544":[229,9,229,25],"545":[4,332,4,369],"552":[232,9,232,42],"553":[4,332,4,369],"560":[235,9,235,39],"561":[4,380,4,402],"568":[238,9,238,48],"569":[4,380,4,402],"576":[246,20,246,52],"577":[4,412,4,424],"584":[244,20,244,52],"585":[4,412,4,424],"592":[242,13,242,45],"593":[4,446,4,470],"600":[256,9,256,24],"601":[4,446,4,470],"608":[258,9,258,43],"609":[6,5,6,9],"616":[263,9,263,28],"617":[6,14,6,18],"624":[265,9,265,35],"625":[6,14,6,20],"632":[268,9,268,38],"633":[6,5,6,20],"640":[273,17,273,20],"641":[6,5,6,21],"649":[5,28,7,2],"657":[5,28,7,2],"665":[5,28,7,2],"673":[5,28,7,2],"681":[5,28,7,2],"689":[5,28,7,2],"697":[8,1,8,21],"705":[8,1,8,31],"713":[9,25,9,29],"721":[9,25,9,31],"729":[9,25,9,41],"737":[9,25,9,48],"745":[9,52,9,61],"753":[9,64,9,68],"761":[9,64,9,70],"769":[9,64,9,80],"777":[9,64,9,87],"785":[9,90,9,95],"793":[9,18,9,95],"801":[9,18,9,95],"809":[11,12,11,16],"817":[11,12,11,18],"825":[11,12,11,28],"833":[11,12,11,37],"841":[12,12,12,26],"849":[13,16,13,20],"857":[14,17,14,23],"865":[10,20,15,6],"873":[10,20,15,6],"881":[10,20,15,6],"889":[16,5,16,9],"897":[16,5,16,11],"905":[16,24,16,28],"913":[16,5,16,28],"921":[16,5,16,29],"929":[17,12,17,31],"937":[17,32,17,36],"945":[17,38,17,44],"953":[17,38,17,51],"961":[17,53,17,61],"969":[17,12,17,62],"977":[17,12,17,62],"985":[17,5,17,63],"993":[8,41,18,2],"1001":[8,41,18,2],"1009":[8,41,18,2],"1017":[8,41,18,2],"1025":[8,41,18,2],"1033":[8,41,18,2],"1041":[8,1,18,2],"1049":[8,1,18,3],"1057":[19,1,19,21],"1065":[19,1,19,31],"1073":[20,25,20,29],"1081":[20,25,20,31],"1089":[20,25,20,41],"1097":[20,25,20,48],"1105":[20,52,20,61],"1113":[20,64,20,68],"1121":[20,64,20,70],"1129":[20,64,20,80],"1137":[20,64,20,87],"1145":[20,90,20,95],"1153":[20,18,20,95],"1161":[20,18,20,95],"1169":[22,12,22,16],"1177":[22,12,22,18],"1185":[22,12,22,28],"1193":[22,12,22,37],"1201":[23,12,23,26],"1209":[24,16,24,21],"1217":[25,17,25,23],"1225":[21,20,26,6],"1233":[21,20,26,6],"1241":[21,20,26,6],"1249":[27,5,27,9],"1257":[27,5,27,11],"1265":[27,24,27,28],"1273":[27,5,27,28],"1281":[27,5,27,29],"1289":[28,12,28,31],"1297":[28,32,28,36],"1305":[28,38,28,44],"1313":[28,38,28,51],"1321":[28,53,28,61],"1329":[28,12,28,62],"1337":[28,12,28,62],"1345":[28,5,28,63],"1353":[19,44,29,2],"1361":[19,44,29,2],"1369":[19,44,29,2],"1377":[19,44,29,2],"1385":[19,44,29,2],"1393":[19,44,29,2],"1401":[19,1,29,2],"1409":[19,1,29,3],"1417":[30,1,30,21],"1425":[30,1,30,31],"1433":[31,5,31,9],"1441":[31,20,31,34],"1449":[31,5,31,35],"1451":[31,5,31,19],"1457":[31,5,31,36],"1465":[30,45,32,2],"1473":[30,45,32,2],"1481":[30,45,32,2],"1489":[30,45,32,2],"1497":[30,1,32,2],"1505":[30,1,32,3],"1513":[33,1,33,21],"1521":[33,1,33,31],"1529":[34,5,34,9],"1537":[34,5,34,11],"1545":[34,5,34,21],"1553":[34,31,34,35],"1561":[34,5,34,35],"1569":[34,5,34,36],"1577":[35,12,35,16],"1585":[35,12,35,16],"1593":[35,5,35,17],"1601":[33,41,36,2],"1609":[33,41,36,2],"1617":[33,41,36,2],"1625":[33,1,36,2],"1633":[33,1,36,3],"1641":[37,1,37,21],"1649":[37,1,37,31],"1657":[39,12,39,16],"1665":[39,12,39,18],"1673":[39,12,39,28],"1681":[39,12,39,37],"1689":[40,16,40,17],"1697":[38,20,41,6],"1705":[38,20,41,6],"1713":[38,20,41,6],"1721":[42,5,42,9],"1729":[42,5,42,11],"1737":[42,24,42,28],"1745":[42,5,42,28],"1753":[42,5,42,29],"1761":[43,12,43,31],"1769":[43,32,43,36],"1777":[43,38,43,44],"1785":[43,38,43,51],"1793":[43,53,43,61],"1801":[43,12,43,62],"1809":[43,12,43,62],"1817":[43,5,43,63],"1825":[37,44,44,2],"1833":[37,44,44,2],"1841":[37,44,44,2],"1849":[37,44,44,2],"1857":[37,1,44,2],"1865":[37,1,44,3],"1873":[45,1,45,21],"1881":[45,1,45,31],"1889":[45,44,45,64],"1897":[45,44,45,74],"1905":[45,44,45,84],"1913":[45,1,45,84],"1921":[45,1,45,85],"1929":[46,1,46,21],"1937":[46,1,46,31],"1945":[48,12,48,16],"1953":[48,12,48,18],"1961":[48,12,48,28],"1969":[48,12,48,37],"1977":[49,16,49,17],"1985":[47,20,50,6],"1993":[47,20,50,6],"2001":[47,20,50,6],"2009":[51,5,51,9],"2017":[51,5,51,11],"2025":[51,24,51,28],"2033":[51,5,51,28],"2041":[51,5,51,29],"2049":[52,12,52,31],"2057":[52,32,52,36],"2065":[52,38,52,44],"2073":[52,38,52,51],"2081":[52,53,52,61],"2089":[52,12,52,62],"2097":[52,12,52,62],"2105":[52,5,52,63],"2113":[46,41,53,2],"2121":[46,41,53,2],"2129":[46,41,53,2],"2137":[46,41,53,2],"2145":[46,1,53,2],"2153":[46,1,53,3],"2161":[54,1,54,21],"2169":[54,1,54,31],"2177":[54,41,54,61],"2185":[54,41,54,71],"2193":[54,41,54,78],"2201":[54,1,54,78],"2209":[54,1,54,79],"2217":[56,20,56,25],"2225":[56,20,56,27],"2233":[56,20,56,32],"2241":[56,53,56,61],"2249":[56,63,56,68],"2257":[56,20,56,69],"2259":[56,20,56,52],"2265":[56,20,56,69],"2273":[56,20,56,69],"2281":[57,9,57,17],"2289":[57,21,57,26],"2297":[57,21,57,28],"2305":[57,21,57,46],"2313":[58,15,58,22],"2321":[58,23,58,66],"2329":[58,69,58,74],"2337":[58,69,58,76],"2345":[58,69,58,94],"2353":[58,15,58,95],"2361":[58,15,58,95],"2369":[58,9,58,96],"2377":[59,9,59,14],"2385":[59,9,59,16],"2393":[59,9,59,29],"2401":[59,33,59,37],"2409":[60,9,60,14],"2417":[60,9,60,16],"2425":[60,36,60,41],"2433":[60,42,60,49],"2441":[60,51,60,56],"2449":[60,51,60,58],"2457":[60,51,60,71],"2465":[60,32,60,72],"2473":[60,9,60,72],"2481":[60,9,60,73],"2489":[61,9,61,14],"2497":[61,9,61,16],"2505":[61,9,61,33],"2513":[61,36,61,37],"2521":[61,41,61,46],"2529":[61,41,61,48],"2537":[61,41,61,66],"2545":[61,70,61,75],"2553":[61,70,61,77],"2561":[61,70,61,99],"2569":[61,102,61,107],"2577":[61,102,61,109],"2585":[61,102,61,131],"2593":[61,135,61,140],"2601":[61,135,61,142],"2609":[61,135,61,160],"2617":[61,164,61,169],"2625":[61,164,61,171],"2633":[61,164,61,184],"2641":[61,164,61,194],"2649":[61,198,61,205],"2657":[62,9,62,14],"2665":[62,9,62,16],"2673":[62,9,62,24],"2681":[62,30,62,35],"2689":[62,30,62,37],"2697":[62,30,62,50],"2705":[62,9,62,51],"2707":[62,9,62,29],"2713":[62,9,62,52],"2721":[63,9,63,14],"2729":[63,9,63,16],"2737":[63,36,63,41],"2745":[63,42,63,49],"2753":[63,51,63,56],"2761":[63,51,63,58],"2769":[63,51,63,71],"2777":[63,32,63,72],"2785":[63,9,63,72],"2793":[63,9,63,73],"2801":[64,9,64,14],"2809":[64,9,64,16],"2817":[64,36,64,37],"2825":[64,9,64,37],"2833":[64,9,64,38],"2841":[65,9,65,14],"2849":[65,9,65,16],"2857":[65,41,65,42],"2865":[65,9,65,42],"2873":[65,9,65,43],"2881":[67,9,67,14],"2889":[67,9,67,16],"2897":[67,36,67,41],"2905":[67,36,67,43],"2913":[67,36,67,60],"2921":[67,63,67,64],"2929":[67,9,67,64],"2937":[67,9,67,65],"2945":[68,9,68,14],"2953":[68,9,68,16],"2961":[68,41,68,46],"2969":[68,41,68,48],"2977":[68,41,68,70],"2985":[68,73,68,81],"2993":[68,9,68,81],"3001":[68,9,68,82],"3009":[70,9,70,16],"3017":[70,20,70,26],"3025":[70,20,70,33],"3033":[71,9,71,14],"3041":[71,9,71,16],"3049":[71,9,71,27],"3057":[71,9,71,39],"3065":[72,20,72,25],"3073":[72,20,72,27],"3081":[72,20,72,40],"3089":[73,18,73,26],"3097":[73,18,73,30],"3105":[71,45,74,10],"3113":[71,9,74,11],"3115":[71,9,71,44],"3121":[71,9,74,12],"3129":[76,9,76,14],"3137":[76,23,76,31],"3145":[76,9,76,32],"3147":[76,9,76,22],"3153":[77,15,77,22],"3161":[77,23,77,63],"3169":[77,15,77,64],"3177":[77,15,77,64],"3185":[77,9,77,65],"3193":[79,9,79,14],"3201":[79,9,79,16],"3209":[79,9,79,29],"3217":[79,9,79,45],"3225":[79,51,79,56],"3233":[79,51,79,58],"3241":[79,51,79,71],"3249":[79,9,79,72],"3251":[79,9,79,50],"3257":[79,9,79,73],"3265":[80,9,80,14],"3273":[80,9,80,16],"3281":[80,9,80,29],"3289":[80,9,80,40],"3297":[80,46,80,54],"3305":[80,9,80,55],"3307":[80,9,80,45],"3313":[80,9,80,56],"3321":[81,9,81,14],"3329":[81,9,81,16],"3337":[81,32,81,37],"3345":[81,32,81,39],"3353":[81,32,81,52],"3361":[81,55,81,56],"3369":[81,9,81,56],"3377":[81,9,81,57],"3385":[83,12,83,17],"3393":[83,12,83,17],"3401":[83,5,83,18],"3409":[55,27,84,2],"3417":[55,27,84,2],"3425":[55,27,84,2],"3433":[55,27,84,2],"3441":[55,27,84,2],"3449":[55,27,84,2],"3457":[55,27,84,2],"3465":[55,27,84,2],"3473":[55,27,84,2],"3481":[86,15,86,22],"3489":[86,26,86,30],"3497":[86,33,86,35],"3505":[86,38,86,45],"3513":[86,15,86,45],"3521":[86,5,86,46],"3529":[87,16,87,20],"3537":[87,16,87,20],"3545":[87,16,87,20],"3553":[88,20,88,25],"3561":[88,20,88,25],"3569":[88,20,88,25],"3577":[89,21,89,25],"3585":[89,21,89,25],"3593":[89,21,89,25],"3601":[90,16,90,24],"3609":[90,16,90,29],"3617":[90,16,90,29],"3625":[90,16,90,29],"3633":[91,21,91,31],"3641":[91,21,91,46],"3649":[91,21,91,46],"3657":[91,21,91,46],"3665":[92,29,92,37],"3673":[92,29,92,49],"3681":[92,53,92,61],"3689":[92,53,92,73],"3697":[92,53,92,91],"3705":[92,94,92,102],"3713":[92,94,92,114],"3721":[92,94,92,132],"3729":[92,135,92,139],"3737":[92,142,92,146],"3745":[92,149,92,151],"3753":[92,29,92,151],"3761":[92,29,92,151],"3769":[93,29,93,37],"3777":[93,29,93,49],"3785":[93,53,93,61],"3793":[93,53,93,73],"3801":[93,53,93,91],"3809":[93,94,93,102],"3817":[93,94,93,114],"3825":[93,94,93,132],"3833":[93,135,93,139],"3841":[93,29,93,139],"3849":[93,29,93,139],"3857":[94,24,94,30],"3865":[94,44,94,56],"3873":[94,57,94,64],"3881":[94,44,94,65],"3889":[94,67,94,77],"3897":[94,79,94,86],"3905":[94,24,94,87],"3907":[94,24,94,43],"3913":[94,24,94,87],"3921":[94,24,94,87],"3929":[95,26,95,33],"3937":[95,26,95,48],"3945":[95,26,95,48],"3953":[95,26,95,48],"3961":[96,10,96,24],"3969":[97,33,97,39],"3977":[97,33,97,47],"3985":[97,51,97,61],"3993":[97,64,97,70],"4001":[97,64,97,78],"4009":[97,81,97,88],"4017":[97,89,97,102],"4025":[97,81,97,103],"4033":[97,81,97,111],"4041":[97,26,97,111],"4049":[97,9,97,112],"4057":[99,24,99,28],"4065":[99,24,99,28],"4073":[99,24,99,28],"4081":[100,24,100,25],"4089":[100,24,100,25],"4097":[100,24,100,25],"4105":[101,28,101,29],"4113":[101,28,101,29],"4121":[101,28,101,29],"4129":[102,33,102,34],"4137":[102,33,102,34],"4145":[102,33,102,34],"4153":[103,19,103,21],"4161":[103,19,103,21],"4169":[103,19,103,21],"4177":[105,13,105,14],"4185":[106,22,106,24],"4193":[107,29,107,31],"4201":[108,22,108,24],"4209":[109,20,109,21],"4217":[110,20,110,21],"4225":[111,19,111,20],"4233":[112,20,112,21],"4241":[113,19,113,20],"4249":[114,19,114,21],"4257":[104,22,115,6],"4265":[104,22,115,6],"4273":[104,22,115,6],"4281":[116,5,116,9],"4289":[117,21,117,31],"4297":[118,23,118,27],"4305":[119,23,119,24],"4313":[120,27,120,28],"4321":[121,32,121,33],"4329":[122,18,122,20],"4337":[123,23,123,35],"4345":[124,28,124,45],"4353":[125,28,125,45],"4361":[126,20,126,29],"4369":[127,15,127,19],"4377":[128,19,128,27],"4385":[129,18,129,25],"4393":[130,20,130,29],"4401":[131,19,131,27],"4409":[132,21,132,31],"4417":[133,25,133,39],"4425":[134,14,134,18],"4433":[135,42,135,49],"4441":[135,42,135,74],"4449":[135,78,135,87],"4457":[135,90,135,97],"4465":[135,90,135,122],"4473":[135,125,135,130],"4481":[116,14,136,6],"4489":[116,5,136,6],"4497":[116,5,136,7],"4505":[85,1,137,2],"4513":[85,1,137,2],"4521":[85,1,137,2],"4529":[85,1,137,2],"4537":[85,1,137,2],"4545":[85,1,137,2],"4553":[85,1,137,2],"4561":[85,1,137,2],"4569":[85,1,137,2],"4577":[85,1,137,2],"4585":[85,1,137,2],"4593":[85,1,137,2],"4601":[85,1,137,2],"4609":[85,1,137,2],"4617":[85,1,137,2],"4625":[85,1,137,2],"4633":[85,1,137,2],"4641":[85,1,137,2],"4649":[85,1,137,2],"4657":[85,1,137,2],"4665":[138,14,138,34],"4673":[138,48,138,54],"4681":[138,55,138,77],"4689":[138,79,138,99],"4697":[138,101,138,106],"4705":[138,44,138,107],"4713":[138,14,138,107],"4721":[138,14,138,107],"4729":[138,14,138,107],"4737":[139,1,139,21],"4745":[139,1,139,31],"4753":[140,15,140,21],"4761":[140,27,140,29],"4769":[140,15,140,30],"4771":[140,15,140,26],"4777":[140,31,140,32],"4785":[140,15,140,33],"4793":[140,15,140,33],"4801":[140,15,140,33],"4809":[141,38,141,42],"4817":[141,38,141,44],"4825":[141,38,141,52],"4833":[141,38,141,72],"4841":[141,76,141,85],"4849":[141,88,141,92],"4857":[141,88,141,94],"4865":[141,88,141,102],"4873":[141,88,141,122],"4881":[141,125,141,129],"4889":[141,125,141,131],"4897":[141,125,141,142],"4905":[141,125,141,144],"4913":[141,125,141,147],"4921":[141,125,141,155],"4929":[141,125,141,175],"4937":[141,31,141,175],"4945":[141,31,141,175],"4953":[142,9,142,11],"4961":[142,9,142,21],"4969":[142,25,142,27],"4977":[142,25,142,37],"4985":[142,25,142,39],"4993":[142,43,142,45],"5001":[142,43,142,56],"5009":[142,60,142,62],"5017":[142,60,142,73],"5025":[142,60,142,75],"5033":[142,79,142,81],"5041":[142,79,142,92],"5049":[142,96,142,98],"5057":[142,96,142,109],"5065":[142,96,142,111],"5073":[143,9,143,11],"5081":[143,12,143,15],"5089":[143,9,143,16],"5097":[143,25,143,27],"5105":[143,25,143,37],"5113":[143,41,143,43],"5121":[143,41,143,54],"5129":[143,57,143,62],"5137":[143,65,143,69],"5145":[143,9,143,69],"5153":[143,9,143,70],"5161":[144,16,144,35],"5169":[144,36,144,40],"5177":[144,42,144,48],"5185":[144,42,144,55],"5193":[144,57,144,59],"5201":[144,60,144,63],"5209":[144,57,144,64],"5217":[144,16,144,65],"5225":[144,16,144,65],"5233":[144,9,144,66],"5241":[146,9,146,11],"5249":[146,9,146,21],"5257":[146,25,146,27],"5265":[146,25,146,38],"5273":[146,42,146,44],"5281":[146,42,146,55],"5289":[147,21,147,23],"5297":[147,21,147,33],"5305":[147,37,147,39],"5313":[147,37,147,50],"5321":[147,53,147,58],"5329":[147,61,147,65],"5337":[147,21,147,65],"5345":[147,21,147,65],"5353":[149,16,149,18],"5361":[149,19,149,22],"5369":[149,16,149,23],"5377":[149,16,149,30],"5385":[150,16,150,18],"5393":[150,19,150,22],"5401":[150,16,150,23],"5409":[150,16,150,30],"5417":[150,34,150,36],"5425":[150,37,150,40],"5433":[150,34,150,41],"5441":[150,34,150,53],"5449":[151,20,151,25],"5457":[148,25,152,10],"5465":[148,25,152,10],"5473":[148,25,152,10],"5481":[153,9,153,18],"5489":[153,28,153,30],"5497":[153,31,153,34],"5505":[153,28,153,35],"5513":[153,28,153,42],"5521":[153,45,153,49],"5529":[153,52,153,57],"5537":[153,9,153,57],"5545":[153,9,153,58],"5553":[154,16,154,35],"5561":[154,36,154,40],"5569":[154,42,154,48],"5577":[154,42,154,55],"5585":[154,57,154,66],"5593":[154,16,154,67],"5601":[154,16,154,67],"5609":[154,9,154,68],"5617":[156,9,156,11],"5625":[156,9,156,21],"5633":[156,25,156,27],"5641":[156,25,156,38],"5649":[156,42,156,44],"5657":[156,42,156,54],"5665":[156,58,156,60],"5673":[156,58,156,70],"5681":[156,58,156,72],"5689":[156,76,156,78],"5697":[156,76,156,89],"5705":[156,93,156,95],"5713":[156,93,156,106],"5721":[156,93,156,108],"5729":[157,9,157,11],"5737":[157,12,157,15],"5745":[157,9,157,16],"5753":[157,25,157,27],"5761":[157,25,157,37],"5769":[157,40,157,41],"5777":[157,44,157,45],"5785":[157,9,157,45],"5793":[157,9,157,46],"5801":[158,16,158,35],"5809":[158,36,158,40],"5817":[158,42,158,48],"5825":[158,42,158,55],"5833":[158,57,158,59],"5841":[158,60,158,63],"5849":[158,57,158,64],"5857":[158,16,158,65],"5865":[158,16,158,65],"5873":[158,9,158,66],"5881":[160,9,160,11],"5889":[160,9,160,21],"5897":[160,25,160,27],"5905":[160,25,160,38],"5913":[161,21,161,23],"5921":[161,21,161,33],"5929":[161,36,161,37],"5937":[161,40,161,41],"5945":[161,21,161,41],"5953":[161,21,161,41],"5961":[163,16,163,18],"5969":[163,19,163,22],"5977":[163,16,163,23],"5985":[163,16,163,30],"5993":[164,20,164,25],"6001":[162,25,165,10],"6009":[162,25,165,10],"6017":[162,25,165,10],"6025":[166,16,166,35],"6033":[166,36,166,40],"6041":[166,42,166,48],"6049":[166,42,166,55],"6057":[166,57,166,66],"6065":[166,16,166,67],"6073":[166,16,166,67],"6081":[166,9,166,68],"6089":[168,9,168,11],"6097":[168,9,168,21],"6105":[168,25,168,27],"6113":[168,25,168,37],"6121":[168,25,168,46],"6129":[168,50,168,54],"6137":[169,13,169,32],"6145":[169,37,169,41],"6153":[169,45,169,47],"6161":[169,45,169,57],"6169":[169,45,169,61],"6177":[169,65,169,69],"6185":[170,13,170,15],"6193":[170,13,170,25],"6201":[170,36,170,44],"6209":[170,32,170,46],"6217":[170,13,170,46],"6225":[170,13,170,47],"6233":[171,16,171,35],"6241":[171,36,171,40],"6249":[171,42,171,48],"6257":[171,42,171,55],"6265":[171,57,171,59],"6273":[171,57,171,69],"6281":[171,16,171,70],"6289":[171,16,171,70],"6297":[171,9,171,71],"6305":[172,16,172,18],"6313":[172,16,172,28],"6321":[172,32,172,34],"6329":[172,32,172,44],"6337":[172,32,172,53],"6345":[173,13,173,32],"6353":[173,37,173,41],"6361":[173,45,173,47],"6369":[173,45,173,57],"6377":[173,45,173,66],"6385":[173,45,173,70],"6393":[173,74,173,78],"6401":[174,13,174,15],"6409":[174,13,174,25],"6417":[174,13,174,34],"6425":[174,45,174,53],"6433":[174,41,174,55],"6441":[174,13,174,55],"6449":[174,13,174,56],"6457":[175,16,175,35],"6465":[175,36,175,40],"6473":[175,42,175,48],"6481":[175,42,175,55],"6489":[175,57,175,59],"6497":[175,57,175,69],"6505":[175,57,175,78],"6513":[175,16,175,79],"6521":[175,16,175,79],"6529":[175,9,175,80],"6537":[177,9,177,11],"6545":[177,9,177,22],"6553":[178,22,178,23],"6561":[178,22,178,23],"6569":[178,22,178,23],"6577":[178,25,178,26],"6585":[178,29,178,31],"6593":[178,29,178,42],"6601":[178,29,178,49],"6617":[178,51,178,52],"6625":[178,51,178,54],"6641":[179,17,179,36],"6649":[179,41,179,45],"6657":[179,49,179,51],"6665":[179,49,179,62],"6673":[179,63,179,64],"6681":[179,49,179,65],"6689":[179,49,179,69],"6697":[179,73,179,77],"6705":[180,17,180,19],"6713":[180,17,180,30],"6721":[180,31,180,32],"6729":[180,17,180,33],"6737":[180,44,180,52],"6745":[180,40,180,54],"6753":[180,17,180,54],"6761":[180,17,180,55],"6769":[181,13,181,32],"6777":[181,33,181,37],"6785":[181,39,181,45],"6793":[181,39,181,52],"6801":[181,54,181,56],"6809":[181,54,181,67],"6817":[181,68,181,69],"6825":[181,54,181,70],"6833":[181,13,181,71],"6841":[181,13,181,72],"6849":[183,9,183,16],"6857":[183,9,183,16],"6865":[185,11,185,18],"6873":[185,19,185,135],"6881":[185,11,185,136],"6889":[185,11,185,136],"6897":[185,5,185,137],"6905":[139,38,186,2],"6913":[139,38,186,2],"6921":[139,38,186,2],"6929":[139,38,186,2],"6937":[139,38,186,2],"6945":[139,38,186,2],"6953":[139,38,186,2],"6961":[139,38,186,2],"6969":[139,38,186,2],"6977":[139,38,186,2],"6985":[139,1,186,2],"6993":[139,1,186,3],"7001":[187,1,187,21],"7009":[187,1,187,31],"7017":[188,9,188,13],"7025":[188,9,188,15],"7033":[188,9,188,26],"7041":[188,9,188,28],"7049":[188,9,188,31],"7057":[188,9,188,39],"7065":[188,9,188,59],"7073":[188,64,188,68],"7081":[188,72,188,80],"7089":[188,72,188,84],"7097":[188,88,188,92],"7105":[189,9,189,17],"7113":[189,28,189,36],"7121":[189,24,189,38],"7129":[189,9,189,38],"7137":[189,9,189,39],"7145":[190,12,190,31],"7153":[190,32,190,36],"7161":[190,38,190,44],"7169":[190,38,190,51],"7177":[190,53,190,61],"7185":[190,12,190,62],"7193":[190,12,190,62],"7201":[190,5,190,63],"7209":[187,41,191,2],"7217":[187,41,191,2],"7225":[187,41,191,2],"7233":[187,41,191,2],"7241":[187,1,191,2],"7249":[187,1,191,3],"7257":[192,1,192,21],"7265":[192,1,192,31],"7273":[193,10,193,18],"7281":[194,15,194,22],"7289":[194,23,194,68],"7297":[194,15,194,69],"7305":[194,15,194,69],"7313":[194,9,194,70],"7321":[196,5,196,9],"7329":[196,5,196,11],"7337":[196,36,196,44],"7345":[196,24,196,46],"7353":[196,5,196,46],"7361":[196,5,196,47],"7369":[197,16,197,36],"7377":[197,37,197,41],"7385":[197,12,197,42],"7393":[197,12,197,42],"7401":[197,5,197,43],"7409":[192,39,198,2],"7417":[192,39,198,2],"7425":[192,39,198,2],"7433":[192,39,198,2],"7441":[192,1,198,2],"7449":[192,1,198,3],"7457":[199,1,199,7],"7465":[199,23,199,43],"7473":[199,23,199,53],"7481":[199,55,199,63],"7489":[200,17,200,21],"7497":[202,16,202,20],"7505":[202,16,202,22],"7513":[202,16,202,35],"7521":[202,16,202,35],"7529":[202,9,202,36],"7537":[201,10,203,6],"7545":[201,10,203,6],"7553":[201,10,203,6],"7561":[199,65,204,2],"7569":[199,1,204,3],"7571":[199,1,199,22],"7577":[199,1,204,4],"7585":[206,9,206,13],"7593":[206,9,206,15],"7601":[206,9,206,23],"7609":[206,9,206,30],"7617":[206,34,206,35],"7625":[207,16,207,30],"7633":[207,31,207,39],"7641":[207,41,207,45],"7649":[207,51,207,66],"7657":[207,67,207,71],"7665":[207,67,207,73],"7673":[207,67,207,84],"7681":[207,47,207,85],"7689":[207,16,207,86],"7697":[207,16,207,86],"7705":[207,9,207,87],"7713":[209,17,209,21],"7721":[209,17,209,23],"7729":[209,17,209,31],"7737":[209,17,209,39],"7739":[209,17,209,37],"7745":[209,17,209,39],"7753":[209,17,209,39],"7761":[211,13,211,16],"7769":[211,20,211,23],"7777":[211,20,211,30],"7785":[211,34,211,37],"7793":[211,41,211,44],"7801":[211,41,211,52],"7809":[212,20,212,34],"7817":[212,35,212,43],"7825":[212,45,212,48],"7833":[212,20,212,49],"7841":[212,20,212,49],"7849":[212,13,212,50],"7857":[214,13,214,16],"7865":[215,13,215,16],"7873":[215,22,215,23],"7881":[215,13,215,23],"7889":[215,13,215,24],"7897":[216,27,216,44],"7905":[216,45,216,49],"7913":[216,51,216,56],"7921":[216,58,216,62],"7929":[216,58,216,64],"7937":[216,58,216,75],"7945":[216,77,216,80],"7953":[216,82,216,88],"7961":[216,27,216,89],"7969":[216,27,216,89],"7977":[216,27,216,89],"7985":[217,13,217,24],"7993":[217,28,217,32],"8001":[218,20,218,34],"8009":[218,35,218,43],"8017":[218,45,218,49],"8025":[218,55,218,70],"8033":[218,71,218,75],"8041":[218,71,218,77],"8049":[218,71,218,88],"8057":[218,51,218,89],"8065":[218,20,218,90],"8073":[218,20,218,90],"8081":[218,13,218,91],"8089":[220,13,220,17],"8097":[220,13,220,19],"8105":[220,13,220,30],"8113":[220,13,220,42],"8121":[220,13,220,49],"8129":[220,52,220,53],"8137":[221,20,221,34],"8145":[221,35,221,43],"8153":[221,45,221,52],"8161":[221,53,221,57],"8169":[221,53,221,59],"8177":[221,53,221,70],"8185":[221,53,221,82],"8193":[221,83,221,84],"8201":[221,53,221,85],"8209":[221,45,221,86],"8217":[221,92,221,107],"8225":[221,108,221,112],"8233":[221,108,221,114],"8241":[221,108,221,125],"8249":[221,88,221,126],"8257":[221,20,221,127],"8265":[221,20,221,127],"8273":[221,13,221,128],"8281":[223,9,223,24],"8289":[223,25,223,29],"8297":[223,31,223,39],"8305":[223,9,223,40],"8313":[223,9,223,41],"8321":[210,25,224,6],"8329":[210,25,224,6],"8337":[210,25,224,6],"8345":[210,25,224,6],"8353":[210,25,224,6],"8361":[210,25,224,6],"8369":[210,25,224,6],"8377":[210,25,224,6],"8385":[225,35,225,39],"8393":[225,24,225,41],"8401":[225,24,225,41],"8409":[225,24,225,41],"8417":[226,9,226,13],"8425":[226,9,226,15],"8433":[226,9,226,28],"8441":[226,32,226,36],"8449":[227,9,227,21],"8457":[227,37,227,41],"8465":[227,37,227,43],"8473":[227,37,227,56],"8481":[227,9,227,56],"8489":[227,9,227,57],"8497":[229,9,229,13],"8505":[229,9,229,25],"8513":[230,9,230,22],"8521":[230,37,230,41],"8529":[230,37,230,53],"8537":[230,9,230,53],"8545":[230,9,230,54],"8553":[232,9,232,13],"8561":[232,9,232,15],"8569":[232,9,232,23],"8577":[232,9,232,42],"8585":[233,9,233,21],"8593":[233,43,233,47],"8601":[233,9,233,47],"8609":[233,9,233,48],"8617":[235,9,235,13],"8625":[235,9,235,15],"8633":[235,9,235,23],"8641":[235,9,235,39],"8649":[236,9,236,21],"8657":[236,40,236,44],"8665":[236,9,236,44],"8673":[236,9,236,45],"8681":[238,9,238,13],"8689":[238,9,238,15],"8697":[238,9,238,40],"8705":[238,44,238,48],"8713":[239,9,239,21],"8721":[239,49,239,53],"8729":[239,9,239,53],"8737":[239,9,239,54],"8745":[242,13,242,18],"8753":[242,13,242,28],"8761":[242,32,242,38],"8769":[242,32,242,45],"8777":[243,13,243,17],"8785":[243,13,243,19],"8793":[243,13,243,28],"8801":[243,36,243,40],"8809":[243,36,243,42],"8817":[243,36,243,53],"8825":[243,36,243,63],"8833":[243,65,243,70],"8841":[243,65,243,81],"8849":[243,83,243,95],"8857":[243,97,243,110],"8865":[243,13,243,111],"8867":[243,13,243,35],"8873":[243,13,243,112],"8881":[244,20,244,25],"8889":[244,20,244,35],"8897":[244,39,244,45],"8905":[244,39,244,52],"8913":[245,13,245,17],"8921":[245,13,245,19],"8929":[245,13,245,28],"8937":[245,36,245,40],"8945":[245,36,245,42],"8953":[245,36,245,53],"8961":[245,36,245,63],"8969":[245,65,245,70],"8977":[245,65,245,81],"8985":[245,83,245,95],"8993":[245,97,245,110],"9001":[245,13,245,111],"9003":[245,13,245,35],"9009":[245,13,245,112],"9017":[246,20,246,25],"9025":[246,20,246,35],"9033":[246,39,246,45],"9041":[246,39,246,52],"9049":[247,13,247,17],"9057":[247,13,247,19],"9065":[247,13,247,28],"9073":[247,36,247,40],"9081":[247,36,247,42],"9089":[247,36,247,53],"9097":[247,36,247,63],"9105":[247,65,247,70],"9113":[247,65,247,81],"9121":[247,83,247,95],"9129":[247,97,247,110],"9137":[247,13,247,111],"9139":[247,13,247,35],"9145":[247,13,247,112],"9153":[250,9,250,12],"9161":[250,18,250,19],"9169":[250,9,250,19],"9177":[250,9,250,20],"9185":[251,9,251,23],"9193":[251,24,251,32],"9201":[251,34,251,38],"9209":[251,40,251,57],"9217":[251,58,251,63],"9225":[251,65,251,70],"9233":[251,72,251,76],"9241":[251,72,251,78],"9249":[251,72,251,89],"9257":[251,91,251,94],"9265":[251,96,251,100],"9273":[251,40,251,101],"9281":[251,9,251,102],"9289":[251,9,251,103],"9297":[249,7,252,6],"9305":[205,23,253,2],"9313":[205,23,253,2],"9321":[205,23,253,2],"9329":[205,23,253,2],"9337":[205,23,253,2],"9345":[205,23,253,2],"9353":[205,23,253,2],"9361":[205,23,253,2],"9369":[205,23,253,2],"9377":[205,23,253,2],"9385":[254,1,254,21],"9393":[254,1,254,31],"9401":[255,16,255,20],"9409":[255,16,255,20],"9417":[255,16,255,20],"9425":[256,9,256,13],"9433":[256,9,256,15],"9441":[256,9,256,24],"9449":[257,19,257,26],"9457":[257,27,257,56],"9465":[257,15,257,57],"9473":[257,15,257,57],"9481":[257,9,257,58],"9489":[258,16,258,29],"9497":[258,33,258,43],"9505":[259,20,259,33],"9513":[259,20,259,33],"9521":[259,9,259,34],"9529":[261,9,261,13],"9537":[261,9,261,15],"9545":[261,31,261,44],"9553":[261,9,261,44],"9561":[261,9,261,45],"9569":[263,9,263,13],"9577":[263,9,263,15],"9585":[263,9,263,28],"9593":[264,9,264,13],"9601":[264,9,264,15],"9609":[264,9,264,23],"9617":[264,29,264,33],"9625":[264,29,264,35],"9633":[264,29,264,48],"9641":[264,9,264,49],"9643":[264,9,264,28],"9649":[264,9,264,50],"9657":[265,9,265,13],"9665":[265,9,265,15],"9673":[265,9,265,23],"9681":[265,9,265,30],"9689":[265,34,265,35],"9697":[266,15,266,22],"9705":[266,23,266,65],"9713":[266,15,266,66],"9721":[266,15,266,66],"9729":[266,9,266,67],"9737":[268,16,268,24],"9745":[268,28,268,38],"9753":[269,16,269,31],"9761":[269,32,269,36],"9769":[269,38,269,46],"9777":[269,16,269,47],"9785":[269,16,269,47],"9793":[269,9,269,48],"9801":[271,16,271,20],"9809":[271,16,271,22],"9817":[272,9,272,24],"9825":[272,25,272,29],"9833":[273,17,273,20],"9841":[274,24,274,30],"9849":[274,31,274,34],"9857":[274,24,274,35],"9865":[274,24,274,35],"9873":[274,17,274,36],"9881":[275,13,275,20],"9889":[275,21,275,22],"9897":[275,13,275,23],"9905":[275,13,275,24],"9913":[272,31,276,10],"9921":[272,31,276,10],"9929":[272,31,276,10],"9937":[272,31,276,10],"9945":[272,31,276,10],"9953":[272,9,276,11],"9961":[272,9,276,12],"9969":[271,38,277,6],"9977":[271,38,277,6],"9985":[271,38,277,6],"9993":[271,38,277,6],"10001":[271,38,277,6],"10009":[271,12,277,7],"10011":[271,16,271,37],"10017":[271,12,277,7],"10025":[271,5,277,8],"10033":[254,42,278,2],"10041":[254,42,278,2],"10049":[254,42,278,2],"10057":[254,42,278,2],"10065":[254,42,278,2],"10073":[254,42,278,2],"10081":[254,1,278,2],"10089":[254,1,278,3],"10097":[279,1,279,7],"10105":[279,20,279,29],"10113":[280,15,280,19],"10121":[281,14,281,19],"10129":[279,31,282,2],"10137":[279,1,282,3],"10139":[279,1,279,19],"10145":[279,1,282,4],"10153":[284,16,284,36],"10161":[284,37,284,45],"10169":[284,47,284,57],"10177":[284,59,284,66],"10185":[284,12,284,67],"10193":[284,12,284,67],"10201":[284,5,284,68],"10209":[283,31,285,2],"10217":[283,31,285,2],"10225":[283,31,285,2],"10233":[283,31,285,2],"10241":[283,31,285,2],"10249":[283,31,285,2],"10257":[283,31,285,2],"10265":[283,31,285,2],"10273":[286,1,286,24],"10281":[286,48,286,68],"10289":[286,1,286,68],"10297":[286,1,286,69],"10305":[287,1,287,7],"10313":[287,18,287,41],"10321":[287,1,287,41],"10329":[287,1,287,42],"10337":[288,1,288,7],"10345":[288,1,288,15],"10353":[288,23,288,43],"10361":[288,1,288,43],"10369":[288,1,288,44],"10377":[1,1,288,44],"10385":[1,1,288,44],"10393":[1,1,288,44],"10401":[1,1,288,44],"10409":[1,1,288,44],"10417":[1,1,288,44],"10425":[1,1,288,44],"10433":[1,1,288,44],"10441":[1,1,288,44],"10449":[1,1,288,44],"10457":[1,1,288,44],"10465":[1,1,288,44],"10473":[1,1,288,44],"10481":[1,1,288,44],"10489":[1,1,288,44],"10497":[1,1,288,44],"10505":[1,1,288,44],"10513":[1,1,288,44],"10521":[85,1,137,2],"10529":[1,1,288,44],"10537":[1,1,288,44],"10545":[1,1,288,44],"10553":[1,1,288,44],"10561":[5,28,7,2],"10569":[5,28,7,2],"10577":[9,18,9,95],"10585":[8,41,18,2],"10593":[8,41,18,2],"10601":[20,18,20,95],"10609":[19,44,29,2],"10617":[19,44,29,2],"10625":[30,45,32,2],"10633":[30,45,32,2],"10641":[33,41,36,2],"10649":[33,41,36,2],"10657":[37,44,44,2],"10665":[37,44,44,2],"10673":[46,41,53,2],"10681":[46,41,53,2],"10689":[57,5,58,96],"10697":[59,5,60,73],"10705":[61,5,69,6],"10713":[70,5,75,6],"10721":[76,5,82,6],"10729":[55,27,84,2],"10737":[55,27,84,2],"10745":[86,15,86,45],"10753":[92,29,92,151],"10761":[93,29,93,139],"10769":[97,26,97,111],"10777":[96,5,98,6],"10785":[135,35,135,130],"10793":[85,1,137,2],"10801":[85,1,137,2],"10809":[141,31,141,175],"10817":[143,25,143,69],"10825":[142,5,145,6],"10833":[147,21,147,65],"10841":[153,28,153,57],"10849":[146,5,155,6],"10857":[157,25,157,45],"10865":[156,5,159,6],"10873":[161,21,161,41],"10881":[160,5,167,6],"10889":[169,9,170,47],"10897":[173,9,174,56],"10905":[172,12,176,6],"10913":[168,5,176,6],"10921":[179,13,180,55],"10929":[178,9,182,10],"10937":[178,9,182,10],"10945":[177,5,184,6],"10953":[139,38,186,2],"10961":[139,38,186,2],"10969":[188,5,189,39],"10977":[187,41,191,2],"10985":[187,41,191,2],"10993":[193,5,195,6],"11001":[192,39,198,2],"11009":[192,39,198,2],"11017":[201,10,203,6],"11025":[201,10,203,6],"11033":[206,5,208,6],"11041":[211,9,213,10],"11049":[214,9,215,24],"11057":[217,9,219,10],"11065":[220,9,222,10],"11073":[210,25,224,6],"11081":[210,25,224,6],"11089":[226,5,228,6],"11097":[229,5,231,6],"11105":[232,5,234,6],"11113":[235,5,237,6],"11121":[238,5,240,6],"11129":[246,16,248,10],"11137":[244,16,248,10],"11145":[242,9,248,10],"11153":[205,23,253,2],"11161":[205,23,253,2],"11169":[256,5,257,58],"11177":[258,5,262,6],"11185":[263,5,264,50],"11193":[265,5,267,6],"11201":[268,5,270,6],"11209":[273,13,274,36],"11217":[272,31,276,10],"11225":[272,31,276,10],"11233":[271,38,277,6],"11241":[271,38,277,6],"11249":[254,42,278,2],"11257":[254,42,278,2],"11265":[283,31,285,2],"11273":[283,31,285,2],"11281":[1,1,288,44],"11289":[1,1,288,44],"nBranches":160,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb/lib/bulk/ordered.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb/lib/bulk/ordered_jalangi_.js","code":"\"use strict\";\n\nvar common = require('./common')\n\t, utils = require('../utils')\n  , toError = require('../utils').toError\n\t, f = require('util').format\n\t, handleCallback = require('../utils').handleCallback\n\t, shallowClone = utils.shallowClone\n  , WriteError = common.WriteError\n  , BulkWriteResult = common.BulkWriteResult\n  , LegacyOp = common.LegacyOp\n  , ObjectID = require('mongodb-core').BSON.ObjectID\n  , Define = require('../metadata')\n  , Batch = common.Batch\n  , mergeBatchResults = common.mergeBatchResults;\n\n/**\n * Create a FindOperatorsOrdered instance (INTERNAL TYPE, do not instantiate directly)\n * @class\n * @return {FindOperatorsOrdered} a FindOperatorsOrdered instance.\n */\nvar FindOperatorsOrdered = function(self) {\n  this.s = self.s;\n}\n\n/**\n * Add a single update document to the bulk operation\n *\n * @method\n * @param {object} doc update operations\n * @throws {MongoError}\n * @return {OrderedBulkOperation}\n */\nFindOperatorsOrdered.prototype.update = function(updateDocument) {\n  // Perform upsert\n  var upsert = typeof this.s.currentOp.upsert == 'boolean' ? this.s.currentOp.upsert : false;\n\n  // Establish the update command\n  var document = {\n      q: this.s.currentOp.selector\n    , u: updateDocument\n    , multi: true\n    , upsert: upsert\n  }\n\n  // Clear out current Op\n  this.s.currentOp = null;\n  // Add the update document to the list\n  return addToOperationsList(this, common.UPDATE, document);\n}\n\n/**\n * Add a single update one document to the bulk operation\n *\n * @method\n * @param {object} doc update operations\n * @throws {MongoError}\n * @return {OrderedBulkOperation}\n */\nFindOperatorsOrdered.prototype.updateOne = function(updateDocument) {\n  // Perform upsert\n  var upsert = typeof this.s.currentOp.upsert == 'boolean' ? this.s.currentOp.upsert : false;\n\n  // Establish the update command\n  var document = {\n      q: this.s.currentOp.selector\n    , u: updateDocument\n    , multi: false\n    , upsert: upsert\n  }\n\n  // Clear out current Op\n  this.s.currentOp = null;\n  // Add the update document to the list\n  return addToOperationsList(this, common.UPDATE, document);\n}\n\n/**\n * Add a replace one operation to the bulk operation\n *\n * @method\n * @param {object} doc the new document to replace the existing one with\n * @throws {MongoError}\n * @return {OrderedBulkOperation}\n */\nFindOperatorsOrdered.prototype.replaceOne = function(updateDocument) {\n  this.updateOne(updateDocument);\n}\n\n/**\n * Upsert modifier for update bulk operation\n *\n * @method\n * @throws {MongoError}\n * @return {FindOperatorsOrdered}\n */\nFindOperatorsOrdered.prototype.upsert = function() {\n  this.s.currentOp.upsert = true;\n  return this;\n}\n\n/**\n * Add a remove one operation to the bulk operation\n *\n * @method\n * @throws {MongoError}\n * @return {OrderedBulkOperation}\n */\nFindOperatorsOrdered.prototype.deleteOne = function() {\n  // Establish the update command\n  var document = {\n      q: this.s.currentOp.selector\n    , limit: 1\n  }\n\n  // Clear out current Op\n  this.s.currentOp = null;\n  // Add the remove document to the list\n  return addToOperationsList(this, common.REMOVE, document);\n}\n\n// Backward compatibility\nFindOperatorsOrdered.prototype.removeOne = FindOperatorsOrdered.prototype.deleteOne;\n\n/**\n * Add a remove operation to the bulk operation\n *\n * @method\n * @throws {MongoError}\n * @return {OrderedBulkOperation}\n */\nFindOperatorsOrdered.prototype.delete = function() {\n  // Establish the update command\n  var document = {\n      q: this.s.currentOp.selector\n    , limit: 0\n  }\n\n  // Clear out current Op\n  this.s.currentOp = null;\n  // Add the remove document to the list\n  return addToOperationsList(this, common.REMOVE, document);\n}\n\n// Backward compatibility\nFindOperatorsOrdered.prototype.remove = FindOperatorsOrdered.prototype.delete;\n\n// Add to internal list of documents\nvar addToOperationsList = function(_self, docType, document) {\n  // Get the bsonSize\n  var bsonSize = _self.s.bson.calculateObjectSize(document, false);\n\n  // Throw error if the doc is bigger than the max BSON size\n  if(bsonSize >= _self.s.maxBatchSizeBytes) throw toError(\"document is larger than the maximum size \" + _self.s.maxBatchSizeBytes);\n  // Create a new batch object if we don't have a current one\n  if(_self.s.currentBatch == null) _self.s.currentBatch = new Batch(docType, _self.s.currentIndex);\n\n  // Check if we need to create a new batch\n  if(((_self.s.currentBatchSize + 1) >= _self.s.maxWriteBatchSize)\n    || ((_self.s.currentBatchSizeBytes +  _self.s.currentBatchSizeBytes) >= _self.s.maxBatchSizeBytes)\n    || (_self.s.currentBatch.batchType != docType)) {\n    // Save the batch to the execution stack\n    _self.s.batches.push(_self.s.currentBatch);\n\n    // Create a new batch\n    _self.s.currentBatch = new Batch(docType, _self.s.currentIndex);\n\n    // Reset the current size trackers\n    _self.s.currentBatchSize = 0;\n    _self.s.currentBatchSizeBytes = 0;\n  } else {\n    // Update current batch size\n    _self.s.currentBatchSize = _self.s.currentBatchSize + 1;\n    _self.s.currentBatchSizeBytes = _self.s.currentBatchSizeBytes + bsonSize;\n  }\n\n  if(docType == common.INSERT) {\n    _self.s.bulkResult.insertedIds.push({index: _self.s.currentIndex, _id: document._id});\n  }\n\n  // We have an array of documents\n  if(Array.isArray(document)) {\n    throw toError(\"operation passed in cannot be an Array\");\n  } else {\n    _self.s.currentBatch.originalIndexes.push(_self.s.currentIndex);\n    _self.s.currentBatch.operations.push(document)\n    _self.s.currentIndex = _self.s.currentIndex + 1;\n  }\n\n  // Return self\n  return _self;\n}\n\n/**\n * Create a new OrderedBulkOperation instance (INTERNAL TYPE, do not instantiate directly)\n * @class\n * @property {number} length Get the number of operations in the bulk.\n * @return {OrderedBulkOperation} a OrderedBulkOperation instance.\n */\nfunction OrderedBulkOperation(topology, collection, options) {\n\toptions = options == null ? {} : options;\n\t// TODO Bring from driver information in isMaster\n\tvar self = this;\n\tvar executed = false;\n\n\t// Current item\n\tvar currentOp = null;\n\n\t// Handle to the bson serializer, used to calculate running sizes\n\tvar bson = topology.bson;\n\n\t// Namespace for the operation\n  var namespace = collection.collectionName;\n\n  // Set max byte size\n\tvar maxBatchSizeBytes = topology.isMasterDoc && topology.isMasterDoc.maxBsonObjectSize\n    ? topology.isMasterDoc.maxBsonObjectSize : (1024*1025*16);\n\tvar maxWriteBatchSize = topology.isMasterDoc && topology.isMasterDoc.maxWriteBatchSize\n    ? topology.isMasterDoc.maxWriteBatchSize : 1000;\n\n  // Get the write concern\n  var writeConcern = common.writeConcern(shallowClone(options), collection, options);\n\n  // Get the promiseLibrary\n  var promiseLibrary = options.promiseLibrary;\n\n  // No promise library selected fall back\n  if(!promiseLibrary) {\n    promiseLibrary = typeof global.Promise == 'function' ?\n      global.Promise : require('es6-promise').Promise;\n  }\n\n  // Current batch\n  var currentBatch = null;\n  var currentIndex = 0;\n  var currentBatchSize = 0;\n  var currentBatchSizeBytes = 0;\n  var batches = [];\n\n  // Final results\n  var bulkResult = {\n  \t  ok: 1\n    , writeErrors: []\n    , writeConcernErrors: []\n    , insertedIds: []\n    , nInserted: 0\n    , nUpserted: 0\n    , nMatched: 0\n    , nModified: 0\n    , nRemoved: 0\n    , upserted: []\n  };\n\n  // Internal state\n  this.s = {\n    // Final result\n      bulkResult: bulkResult\n    // Current batch state\n    , currentBatch: null\n    , currentIndex: 0\n    , currentBatchSize: 0\n    , currentBatchSizeBytes: 0\n    , batches: []\n    // Write concern\n    , writeConcern: writeConcern\n    // Max batch size options\n    , maxBatchSizeBytes: maxBatchSizeBytes\n    , maxWriteBatchSize: maxWriteBatchSize\n    // Namespace\n    , namespace: namespace\n    // BSON\n    , bson: bson\n    // Topology\n    , topology: topology\n    // Options\n    , options: options\n    // Current operation\n    , currentOp: currentOp\n    // Executed\n    , executed: executed\n    // Collection\n    , collection: collection\n    // Promise Library\n    , promiseLibrary: promiseLibrary\n\t\t// Fundamental error\n\t\t, err: null\n    // Bypass validation\n    , bypassDocumentValidation: typeof options.bypassDocumentValidation == 'boolean' ? options.bypassDocumentValidation : false\n  }\n}\n\nvar define = OrderedBulkOperation.define = new Define('OrderedBulkOperation', OrderedBulkOperation, false);\n\nOrderedBulkOperation.prototype.raw = function(op) {\n  var key = Object.keys(op)[0];\n\n  // Set up the force server object id\n  var forceServerObjectId = typeof this.s.options.forceServerObjectId == 'boolean'\n    ? this.s.options.forceServerObjectId : this.s.collection.s.db.options.forceServerObjectId;\n\n  // Update operations\n  if((op.updateOne && op.updateOne.q)\n    || (op.updateMany && op.updateMany.q)\n    || (op.replaceOne && op.replaceOne.q)) {\n    op[key].multi = op.updateOne || op.replaceOne ? false : true;\n    return addToOperationsList(this, common.UPDATE, op[key]);\n  }\n\n  // Crud spec update format\n  if(op.updateOne || op.updateMany || op.replaceOne) {\n    var multi = op.updateOne || op.replaceOne ? false : true;\n    var operation = {q: op[key].filter, u: op[key].update || op[key].replacement, multi: multi}\n    operation.upsert = op[key].upsert ? true: false;\n    return addToOperationsList(this, common.UPDATE, operation);\n  }\n\n  // Remove operations\n  if(op.removeOne || op.removeMany || (op.deleteOne && op.deleteOne.q) || op.deleteMany && op.deleteMany.q) {\n    op[key].limit = op.removeOne ? 1 : 0;\n    return addToOperationsList(this, common.REMOVE, op[key]);\n  }\n\n  // Crud spec delete operations, less efficient\n  if(op.deleteOne || op.deleteMany) {\n    var limit = op.deleteOne ? 1 : 0;\n    var operation = {q: op[key].filter, limit: limit}\n    return addToOperationsList(this, common.REMOVE, operation);\n  }\n\n  // Insert operations\n  if(op.insertOne && op.insertOne.document == null) {\n    if(forceServerObjectId !== true && op.insertOne._id == null) op.insertOne._id = new ObjectID();\n    return addToOperationsList(this, common.INSERT, op.insertOne);\n  } else if(op.insertOne && op.insertOne.document) {\n    if(forceServerObjectId !== true && op.insertOne.document._id == null) op.insertOne.document._id = new ObjectID();\n    return addToOperationsList(this, common.INSERT, op.insertOne.document);\n  }\n\n  if(op.insertMany) {\n    for(var i = 0; i < op.insertMany.length; i++) {\n      if(forceServerObjectId !== true && op.insertMany[i]._id == null) op.insertMany[i]._id = new ObjectID();\n      addToOperationsList(this, common.INSERT, op.insertMany[i]);\n    }\n\n    return;\n  }\n\n  // No valid type of operation\n  throw toError(\"bulkWrite only supports insertOne, insertMany, updateOne, updateMany, removeOne, removeMany, deleteOne, deleteMany\");\n}\n\n/**\n * Add a single insert document to the bulk operation\n *\n * @param {object} doc the document to insert\n * @throws {MongoError}\n * @return {OrderedBulkOperation}\n */\nOrderedBulkOperation.prototype.insert = function(document) {\n  if(this.s.collection.s.db.options.forceServerObjectId !== true && document._id == null) document._id = new ObjectID();\n  return addToOperationsList(this, common.INSERT, document);\n}\n\n/**\n * Initiate a find operation for an update/updateOne/remove/removeOne/replaceOne\n *\n * @method\n * @param {object} selector The selector for the bulk operation.\n * @throws {MongoError}\n * @return {FindOperatorsOrdered}\n */\nOrderedBulkOperation.prototype.find = function(selector) {\n  if (!selector) {\n    throw toError(\"Bulk find operation must specify a selector\");\n  }\n\n  // Save a current selector\n  this.s.currentOp = {\n    selector: selector\n  }\n\n  return new FindOperatorsOrdered(this);\n}\n\nObject.defineProperty(OrderedBulkOperation.prototype, 'length', {\n  enumerable: true,\n  get: function() {\n    return this.s.currentIndex;\n  }\n});\n\n//\n// Execute next write command in a chain\nvar executeCommands = function(self, callback) {\n  if(self.s.batches.length == 0) {\n    return handleCallback(callback, null, new BulkWriteResult(self.s.bulkResult));\n  }\n\n  // Ordered execution of the command\n  var batch = self.s.batches.shift();\n\n  var resultHandler = function(err, result) {\n\t\t// Error is a driver related error not a bulk op error, terminate\n\t\tif(err && err.driver || err && err.message) {\n\t\t\treturn handleCallback(callback, err);\n\t\t}\n\n    // If we have and error\n    if(err) err.ok = 0;\n    // Merge the results together\n    var mergeResult = mergeBatchResults(true, batch, self.s.bulkResult, err, result);\n    if(mergeResult != null) {\n      return handleCallback(callback, null, new BulkWriteResult(self.s.bulkResult));\n    }\n\n    // If we are ordered and have errors and they are\n    // not all replication errors terminate the operation\n    if(self.s.bulkResult.writeErrors.length > 0) {\n      return handleCallback(callback, toError(self.s.bulkResult.writeErrors[0]), new BulkWriteResult(self.s.bulkResult));\n    }\n\n    // Execute the next command in line\n    executeCommands(self, callback);\n  }\n\n  var finalOptions = {ordered: true}\n  if(self.s.writeConcern != null) {\n    finalOptions.writeConcern = self.s.writeConcern;\n  }\n\n\t// Set an operationIf if provided\n\tif(self.operationId) {\n\t\tresultHandler.operationId = self.operationId;\n\t}\n\n\t// Serialize functions\n\tif(self.s.options.serializeFunctions) {\n\t\tfinalOptions.serializeFunctions = true\n\t}\n\n  // Serialize functions\n  if(self.s.options.ignoreUndefined) {\n    finalOptions.ignoreUndefined = true\n  }\n\n  // Is the bypassDocumentValidation options specific\n  if(self.s.bypassDocumentValidation == true) {\n    finalOptions.bypassDocumentValidation = true;\n  }\n\n  try {\n    if(batch.batchType == common.INSERT) {\n      self.s.topology.insert(self.s.collection.namespace, batch.operations, finalOptions, resultHandler);\n    } else if(batch.batchType == common.UPDATE) {\n      self.s.topology.update(self.s.collection.namespace, batch.operations, finalOptions, resultHandler);\n    } else if(batch.batchType == common.REMOVE) {\n      self.s.topology.remove(self.s.collection.namespace, batch.operations, finalOptions, resultHandler);\n    }\n  } catch(err) {\n    // Force top level error\n    err.ok = 0;\n    // Merge top level error and return\n    handleCallback(callback, null, mergeBatchResults(false, batch, self.s.bulkResult, err, null));\n  }\n}\n\n/**\n * The callback format for results\n * @callback OrderedBulkOperation~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {BulkWriteResult} result The bulk write result.\n */\n\n/**\n * Execute the ordered bulk operation\n *\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {(number|string)} [options.w=null] The write concern.\n * @param {number} [options.wtimeout=null] The write concern timeout.\n * @param {boolean} [options.j=false] Specify a journal write concern.\n * @param {boolean} [options.fsync=false] Specify a file sync write concern.\n * @param {OrderedBulkOperation~resultCallback} [callback] The result callback\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\nOrderedBulkOperation.prototype.execute = function(_writeConcern, callback) {\n  var self = this;\n  if(this.s.executed) throw new toError(\"batch cannot be re-executed\");\n  if(typeof _writeConcern == 'function') {\n    callback = _writeConcern;\n  } else {\n    this.s.writeConcern = _writeConcern;\n  }\n\n  // If we have current batch\n  if(this.s.currentBatch) this.s.batches.push(this.s.currentBatch);\n\n  // If we have no operations in the bulk raise an error\n  if(this.s.batches.length == 0) {\n    throw toError(\"Invalid Operation, No operations in bulk\");\n  }\n\n  // Execute using callback\n  if(typeof callback == 'function') {\n\t\treturn executeCommands(this, callback);\n\t}\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    executeCommands(self, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\ndefine.classMethod('execute', {callback: true, promise:false});\n\n/**\n * Returns an unordered batch object\n * @ignore\n */\nvar initializeOrderedBulkOp = function(topology, collection, options) {\n\treturn new OrderedBulkOperation(topology, collection, options);\n}\n\ninitializeOrderedBulkOp.OrderedBulkOperation = OrderedBulkOperation;\nmodule.exports = initializeOrderedBulkOp;\nmodule.exports.Bulk = OrderedBulkOperation;\n"};
jalangiLabel2283:
    while (true) {
        try {
            J$.Se(10377, '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb/lib/bulk/ordered_jalangi_.js', '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb/lib/bulk/ordered.js');
            function OrderedBulkOperation(topology, collection, options) {
                jalangiLabel2272:
                    while (true) {
                        try {
                            J$.Fe(4505, arguments.callee, this, arguments);
                            arguments = J$.N(4513, 'arguments', arguments, 4);
                            topology = J$.N(4521, 'topology', topology, 4);
                            collection = J$.N(4529, 'collection', collection, 4);
                            options = J$.N(4537, 'options', options, 4);
                            J$.N(4545, 'self', self, 0);
                            J$.N(4553, 'executed', executed, 0);
                            J$.N(4561, 'currentOp', currentOp, 0);
                            J$.N(4569, 'bson', bson, 0);
                            J$.N(4577, 'namespace', namespace, 0);
                            J$.N(4585, 'maxBatchSizeBytes', maxBatchSizeBytes, 0);
                            J$.N(4593, 'maxWriteBatchSize', maxWriteBatchSize, 0);
                            J$.N(4601, 'writeConcern', writeConcern, 0);
                            J$.N(4609, 'promiseLibrary', promiseLibrary, 0);
                            J$.N(4617, 'currentBatch', currentBatch, 0);
                            J$.N(4625, 'currentIndex', currentIndex, 0);
                            J$.N(4633, 'currentBatchSize', currentBatchSize, 0);
                            J$.N(4641, 'currentBatchSizeBytes', currentBatchSizeBytes, 0);
                            J$.N(4649, 'batches', batches, 0);
                            J$.N(4657, 'bulkResult', bulkResult, 0);
                            J$.X1(3521, options = J$.W(3513, 'options', J$.X1(10745, J$.C(80, J$.B(138, '==', J$.R(3481, 'options', options, 0), J$.T(3489, null, 25, false), 0))) ? J$.T(3497, {}, 11, false) : J$.R(3505, 'options', options, 0), options, 0));
                            var self = J$.X1(3545, J$.W(3537, 'self', J$.R(3529, 'this', this, 0), self, 1));
                            var executed = J$.X1(3569, J$.W(3561, 'executed', J$.T(3553, false, 23, false), executed, 1));
                            var currentOp = J$.X1(3593, J$.W(3585, 'currentOp', J$.T(3577, null, 25, false), currentOp, 1));
                            var bson = J$.X1(3625, J$.W(3617, 'bson', J$.G(3609, J$.R(3601, 'topology', topology, 0), 'bson', 0), bson, 1));
                            var namespace = J$.X1(3657, J$.W(3649, 'namespace', J$.G(3641, J$.R(3633, 'collection', collection, 0), 'collectionName', 0), namespace, 1));
                            var maxBatchSizeBytes = J$.X1(3761, J$.W(3753, 'maxBatchSizeBytes', J$.X1(10753, J$.C(96, J$.C(88, J$.G(3673, J$.R(3665, 'topology', topology, 0), 'isMasterDoc', 0)) ? J$.G(3697, J$.G(3689, J$.R(3681, 'topology', topology, 0), 'isMasterDoc', 0), 'maxBsonObjectSize', 0) : J$._())) ? J$.G(3721, J$.G(3713, J$.R(3705, 'topology', topology, 0), 'isMasterDoc', 0), 'maxBsonObjectSize', 0) : J$.B(154, '*', J$.B(146, '*', J$.T(3729, 1024, 22, false), J$.T(3737, 1025, 22, false), 0), J$.T(3745, 16, 22, false), 0), maxBatchSizeBytes, 1));
                            var maxWriteBatchSize = J$.X1(3849, J$.W(3841, 'maxWriteBatchSize', J$.X1(10761, J$.C(112, J$.C(104, J$.G(3777, J$.R(3769, 'topology', topology, 0), 'isMasterDoc', 0)) ? J$.G(3801, J$.G(3793, J$.R(3785, 'topology', topology, 0), 'isMasterDoc', 0), 'maxWriteBatchSize', 0) : J$._())) ? J$.G(3825, J$.G(3817, J$.R(3809, 'topology', topology, 0), 'isMasterDoc', 0), 'maxWriteBatchSize', 0) : J$.T(3833, 1000, 22, false), maxWriteBatchSize, 1));
                            var writeConcern = J$.X1(3921, J$.W(3913, 'writeConcern', J$.M(3905, J$.R(3857, 'common', common, 1), 'writeConcern', 0)(J$.F(3881, J$.R(3865, 'shallowClone', shallowClone, 1), 0)(J$.R(3873, 'options', options, 0)), J$.R(3889, 'collection', collection, 0), J$.R(3897, 'options', options, 0)), writeConcern, 1));
                            var promiseLibrary = J$.X1(3953, J$.W(3945, 'promiseLibrary', J$.G(3937, J$.R(3929, 'options', options, 0), 'promiseLibrary', 0), promiseLibrary, 1));
                            if (J$.X1(10777, J$.C(128, J$.U(162, '!', J$.R(3961, 'promiseLibrary', promiseLibrary, 0))))) {
                                J$.X1(4049, promiseLibrary = J$.W(4041, 'promiseLibrary', J$.X1(10769, J$.C(120, J$.B(178, '==', J$.U(170, 'typeof', J$.G(3977, J$.R(3969, 'global', global, 2), 'Promise', 0)), J$.T(3985, 'function', 21, false), 0))) ? J$.G(4001, J$.R(3993, 'global', global, 2), 'Promise', 0) : J$.G(4033, J$.F(4025, J$.R(4009, 'require', require, 2), 0)(J$.T(4017, 'es6-promise', 21, false)), 'Promise', 0), promiseLibrary, 0));
                            }
                            var currentBatch = J$.X1(4073, J$.W(4065, 'currentBatch', J$.T(4057, null, 25, false), currentBatch, 1));
                            var currentIndex = J$.X1(4097, J$.W(4089, 'currentIndex', J$.T(4081, 0, 22, false), currentIndex, 1));
                            var currentBatchSize = J$.X1(4121, J$.W(4113, 'currentBatchSize', J$.T(4105, 0, 22, false), currentBatchSize, 1));
                            var currentBatchSizeBytes = J$.X1(4145, J$.W(4137, 'currentBatchSizeBytes', J$.T(4129, 0, 22, false), currentBatchSizeBytes, 1));
                            var batches = J$.X1(4169, J$.W(4161, 'batches', J$.T(4153, [], 10, false), batches, 1));
                            var bulkResult = J$.X1(4273, J$.W(4265, 'bulkResult', J$.T(4257, {
                                ok: J$.T(4177, 1, 22, false),
                                writeErrors: J$.T(4185, [], 10, false),
                                writeConcernErrors: J$.T(4193, [], 10, false),
                                insertedIds: J$.T(4201, [], 10, false),
                                nInserted: J$.T(4209, 0, 22, false),
                                nUpserted: J$.T(4217, 0, 22, false),
                                nMatched: J$.T(4225, 0, 22, false),
                                nModified: J$.T(4233, 0, 22, false),
                                nRemoved: J$.T(4241, 0, 22, false),
                                upserted: J$.T(4249, [], 10, false)
                            }, 11, false), bulkResult, 1));
                            J$.X1(4497, J$.P(4489, J$.R(4281, 'this', this, 0), 's', J$.T(4481, {
                                bulkResult: J$.R(4289, 'bulkResult', bulkResult, 0),
                                currentBatch: J$.T(4297, null, 25, false),
                                currentIndex: J$.T(4305, 0, 22, false),
                                currentBatchSize: J$.T(4313, 0, 22, false),
                                currentBatchSizeBytes: J$.T(4321, 0, 22, false),
                                batches: J$.T(4329, [], 10, false),
                                writeConcern: J$.R(4337, 'writeConcern', writeConcern, 0),
                                maxBatchSizeBytes: J$.R(4345, 'maxBatchSizeBytes', maxBatchSizeBytes, 0),
                                maxWriteBatchSize: J$.R(4353, 'maxWriteBatchSize', maxWriteBatchSize, 0),
                                namespace: J$.R(4361, 'namespace', namespace, 0),
                                bson: J$.R(4369, 'bson', bson, 0),
                                topology: J$.R(4377, 'topology', topology, 0),
                                options: J$.R(4385, 'options', options, 0),
                                currentOp: J$.R(4393, 'currentOp', currentOp, 0),
                                executed: J$.R(4401, 'executed', executed, 0),
                                collection: J$.R(4409, 'collection', collection, 0),
                                promiseLibrary: J$.R(4417, 'promiseLibrary', promiseLibrary, 0),
                                err: J$.T(4425, null, 25, false),
                                bypassDocumentValidation: J$.X1(10785, J$.C(136, J$.B(194, '==', J$.U(186, 'typeof', J$.G(4441, J$.R(4433, 'options', options, 0), 'bypassDocumentValidation', 0)), J$.T(4449, 'boolean', 21, false), 0))) ? J$.G(4465, J$.R(4457, 'options', options, 0), 'bypassDocumentValidation', 0) : J$.T(4473, false, 23, false)
                            }, 11, false), 0));
                        } catch (J$e) {
                            J$.Ex(10793, J$e);
                        } finally {
                            if (J$.Fr(10801))
                                continue jalangiLabel2272;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(10385, '__secret__S$', __secret__S$, 0);
            J$.N(10393, '__secret__traits__', __secret__traits__, 0);
            J$.N(10401, 'common', common, 0);
            J$.N(10409, 'utils', utils, 0);
            J$.N(10417, 'toError', toError, 0);
            J$.N(10425, 'f', f, 0);
            J$.N(10433, 'handleCallback', handleCallback, 0);
            J$.N(10441, 'shallowClone', shallowClone, 0);
            J$.N(10449, 'WriteError', WriteError, 0);
            J$.N(10457, 'BulkWriteResult', BulkWriteResult, 0);
            J$.N(10465, 'LegacyOp', LegacyOp, 0);
            J$.N(10473, 'ObjectID', ObjectID, 0);
            J$.N(10481, 'Define', Define, 0);
            J$.N(10489, 'Batch', Batch, 0);
            J$.N(10497, 'mergeBatchResults', mergeBatchResults, 0);
            J$.N(10505, 'FindOperatorsOrdered', FindOperatorsOrdered, 0);
            J$.N(10513, 'addToOperationsList', addToOperationsList, 0);
            OrderedBulkOperation = J$.N(10529, 'OrderedBulkOperation', J$.T(10521, OrderedBulkOperation, 12, false, 4505), 0);
            J$.N(10537, 'define', define, 0);
            J$.N(10545, 'executeCommands', executeCommands, 0);
            J$.N(10553, 'initializeOrderedBulkOp', initializeOrderedBulkOp, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var common = J$.X1(409, J$.W(401, 'common', J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, './common', 21, false)), common, 3)), utils = J$.X1(425, J$.W(417, 'utils', J$.F(137, J$.R(121, 'require', require, 2), 0)(J$.T(129, '../utils', 21, false)), utils, 3)), toError = J$.X1(441, J$.W(433, 'toError', J$.G(169, J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, '../utils', 21, false)), 'toError', 0), toError, 3)), f = J$.X1(457, J$.W(449, 'f', J$.G(201, J$.F(193, J$.R(177, 'require', require, 2), 0)(J$.T(185, 'util', 21, false)), 'format', 0), f, 3)), handleCallback = J$.X1(473, J$.W(465, 'handleCallback', J$.G(233, J$.F(225, J$.R(209, 'require', require, 2), 0)(J$.T(217, '../utils', 21, false)), 'handleCallback', 0), handleCallback, 3)), shallowClone = J$.X1(489, J$.W(481, 'shallowClone', J$.G(249, J$.R(241, 'utils', utils, 1), 'shallowClone', 0), shallowClone, 3)), WriteError = J$.X1(505, J$.W(497, 'WriteError', J$.G(265, J$.R(257, 'common', common, 1), 'WriteError', 0), WriteError, 3)), BulkWriteResult = J$.X1(521, J$.W(513, 'BulkWriteResult', J$.G(281, J$.R(273, 'common', common, 1), 'BulkWriteResult', 0), BulkWriteResult, 3)), LegacyOp = J$.X1(537, J$.W(529, 'LegacyOp', J$.G(297, J$.R(289, 'common', common, 1), 'LegacyOp', 0), LegacyOp, 3)), ObjectID = J$.X1(553, J$.W(545, 'ObjectID', J$.G(337, J$.G(329, J$.F(321, J$.R(305, 'require', require, 2), 0)(J$.T(313, 'mongodb-core', 21, false)), 'BSON', 0), 'ObjectID', 0), ObjectID, 3)), Define = J$.X1(569, J$.W(561, 'Define', J$.F(361, J$.R(345, 'require', require, 2), 0)(J$.T(353, '../metadata', 21, false)), Define, 3)), Batch = J$.X1(585, J$.W(577, 'Batch', J$.G(377, J$.R(369, 'common', common, 1), 'Batch', 0), Batch, 3)), mergeBatchResults = J$.X1(601, J$.W(593, 'mergeBatchResults', J$.G(393, J$.R(385, 'common', common, 1), 'mergeBatchResults', 0), mergeBatchResults, 3));
            var FindOperatorsOrdered = J$.X1(689, J$.W(681, 'FindOperatorsOrdered', J$.T(673, function (self) {
                jalangiLabel2264:
                    while (true) {
                        try {
                            J$.Fe(649, arguments.callee, this, arguments);
                            arguments = J$.N(657, 'arguments', arguments, 4);
                            self = J$.N(665, 'self', self, 4);
                            J$.X1(641, J$.P(633, J$.R(609, 'this', this, 0), 's', J$.G(625, J$.R(617, 'self', self, 0), 's', 0), 0));
                        } catch (J$e) {
                            J$.Ex(10561, J$e);
                        } finally {
                            if (J$.Fr(10569))
                                continue jalangiLabel2264;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 649), FindOperatorsOrdered, 3));
            J$.X1(1049, J$.P(1041, J$.G(705, J$.R(697, 'FindOperatorsOrdered', FindOperatorsOrdered, 1), 'prototype', 0), 'update', J$.T(1033, function (updateDocument) {
                jalangiLabel2265:
                    while (true) {
                        try {
                            J$.Fe(993, arguments.callee, this, arguments);
                            arguments = J$.N(1001, 'arguments', arguments, 4);
                            updateDocument = J$.N(1009, 'updateDocument', updateDocument, 4);
                            J$.N(1017, 'upsert', upsert, 0);
                            J$.N(1025, 'document', document, 0);
                            var upsert = J$.X1(801, J$.W(793, 'upsert', J$.X1(10577, J$.C(8, J$.B(18, '==', J$.U(10, 'typeof', J$.G(737, J$.G(729, J$.G(721, J$.R(713, 'this', this, 0), 's', 0), 'currentOp', 0), 'upsert', 0)), J$.T(745, 'boolean', 21, false), 0))) ? J$.G(777, J$.G(769, J$.G(761, J$.R(753, 'this', this, 0), 's', 0), 'currentOp', 0), 'upsert', 0) : J$.T(785, false, 23, false), upsert, 1));
                            var document = J$.X1(881, J$.W(873, 'document', J$.T(865, {
                                q: J$.G(833, J$.G(825, J$.G(817, J$.R(809, 'this', this, 0), 's', 0), 'currentOp', 0), 'selector', 0),
                                u: J$.R(841, 'updateDocument', updateDocument, 0),
                                multi: J$.T(849, true, 23, false),
                                upsert: J$.R(857, 'upsert', upsert, 0)
                            }, 11, false), document, 1));
                            J$.X1(921, J$.P(913, J$.G(897, J$.R(889, 'this', this, 0), 's', 0), 'currentOp', J$.T(905, null, 25, false), 0));
                            return J$.X1(985, J$.Rt(977, J$.F(969, J$.R(929, 'addToOperationsList', addToOperationsList, 1), 0)(J$.R(937, 'this', this, 0), J$.G(953, J$.R(945, 'common', common, 1), 'UPDATE', 0), J$.R(961, 'document', document, 0))));
                        } catch (J$e) {
                            J$.Ex(10585, J$e);
                        } finally {
                            if (J$.Fr(10593))
                                continue jalangiLabel2265;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 993), 0));
            J$.X1(1409, J$.P(1401, J$.G(1065, J$.R(1057, 'FindOperatorsOrdered', FindOperatorsOrdered, 1), 'prototype', 0), 'updateOne', J$.T(1393, function (updateDocument) {
                jalangiLabel2266:
                    while (true) {
                        try {
                            J$.Fe(1353, arguments.callee, this, arguments);
                            arguments = J$.N(1361, 'arguments', arguments, 4);
                            updateDocument = J$.N(1369, 'updateDocument', updateDocument, 4);
                            J$.N(1377, 'upsert', upsert, 0);
                            J$.N(1385, 'document', document, 0);
                            var upsert = J$.X1(1161, J$.W(1153, 'upsert', J$.X1(10601, J$.C(16, J$.B(34, '==', J$.U(26, 'typeof', J$.G(1097, J$.G(1089, J$.G(1081, J$.R(1073, 'this', this, 0), 's', 0), 'currentOp', 0), 'upsert', 0)), J$.T(1105, 'boolean', 21, false), 0))) ? J$.G(1137, J$.G(1129, J$.G(1121, J$.R(1113, 'this', this, 0), 's', 0), 'currentOp', 0), 'upsert', 0) : J$.T(1145, false, 23, false), upsert, 1));
                            var document = J$.X1(1241, J$.W(1233, 'document', J$.T(1225, {
                                q: J$.G(1193, J$.G(1185, J$.G(1177, J$.R(1169, 'this', this, 0), 's', 0), 'currentOp', 0), 'selector', 0),
                                u: J$.R(1201, 'updateDocument', updateDocument, 0),
                                multi: J$.T(1209, false, 23, false),
                                upsert: J$.R(1217, 'upsert', upsert, 0)
                            }, 11, false), document, 1));
                            J$.X1(1281, J$.P(1273, J$.G(1257, J$.R(1249, 'this', this, 0), 's', 0), 'currentOp', J$.T(1265, null, 25, false), 0));
                            return J$.X1(1345, J$.Rt(1337, J$.F(1329, J$.R(1289, 'addToOperationsList', addToOperationsList, 1), 0)(J$.R(1297, 'this', this, 0), J$.G(1313, J$.R(1305, 'common', common, 1), 'UPDATE', 0), J$.R(1321, 'document', document, 0))));
                        } catch (J$e) {
                            J$.Ex(10609, J$e);
                        } finally {
                            if (J$.Fr(10617))
                                continue jalangiLabel2266;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1353), 0));
            J$.X1(1505, J$.P(1497, J$.G(1425, J$.R(1417, 'FindOperatorsOrdered', FindOperatorsOrdered, 1), 'prototype', 0), 'replaceOne', J$.T(1489, function (updateDocument) {
                jalangiLabel2267:
                    while (true) {
                        try {
                            J$.Fe(1465, arguments.callee, this, arguments);
                            arguments = J$.N(1473, 'arguments', arguments, 4);
                            updateDocument = J$.N(1481, 'updateDocument', updateDocument, 4);
                            J$.X1(1457, J$.M(1449, J$.R(1433, 'this', this, 0), 'updateOne', 0)(J$.R(1441, 'updateDocument', updateDocument, 0)));
                        } catch (J$e) {
                            J$.Ex(10625, J$e);
                        } finally {
                            if (J$.Fr(10633))
                                continue jalangiLabel2267;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1465), 0));
            J$.X1(1633, J$.P(1625, J$.G(1521, J$.R(1513, 'FindOperatorsOrdered', FindOperatorsOrdered, 1), 'prototype', 0), 'upsert', J$.T(1617, function () {
                jalangiLabel2268:
                    while (true) {
                        try {
                            J$.Fe(1601, arguments.callee, this, arguments);
                            arguments = J$.N(1609, 'arguments', arguments, 4);
                            J$.X1(1569, J$.P(1561, J$.G(1545, J$.G(1537, J$.R(1529, 'this', this, 0), 's', 0), 'currentOp', 0), 'upsert', J$.T(1553, true, 23, false), 0));
                            return J$.X1(1593, J$.Rt(1585, J$.R(1577, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(10641, J$e);
                        } finally {
                            if (J$.Fr(10649))
                                continue jalangiLabel2268;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1601), 0));
            J$.X1(1865, J$.P(1857, J$.G(1649, J$.R(1641, 'FindOperatorsOrdered', FindOperatorsOrdered, 1), 'prototype', 0), 'deleteOne', J$.T(1849, function () {
                jalangiLabel2269:
                    while (true) {
                        try {
                            J$.Fe(1825, arguments.callee, this, arguments);
                            arguments = J$.N(1833, 'arguments', arguments, 4);
                            J$.N(1841, 'document', document, 0);
                            var document = J$.X1(1713, J$.W(1705, 'document', J$.T(1697, {
                                q: J$.G(1681, J$.G(1673, J$.G(1665, J$.R(1657, 'this', this, 0), 's', 0), 'currentOp', 0), 'selector', 0),
                                limit: J$.T(1689, 1, 22, false)
                            }, 11, false), document, 1));
                            J$.X1(1753, J$.P(1745, J$.G(1729, J$.R(1721, 'this', this, 0), 's', 0), 'currentOp', J$.T(1737, null, 25, false), 0));
                            return J$.X1(1817, J$.Rt(1809, J$.F(1801, J$.R(1761, 'addToOperationsList', addToOperationsList, 1), 0)(J$.R(1769, 'this', this, 0), J$.G(1785, J$.R(1777, 'common', common, 1), 'REMOVE', 0), J$.R(1793, 'document', document, 0))));
                        } catch (J$e) {
                            J$.Ex(10657, J$e);
                        } finally {
                            if (J$.Fr(10665))
                                continue jalangiLabel2269;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1825), 0));
            J$.X1(1921, J$.P(1913, J$.G(1881, J$.R(1873, 'FindOperatorsOrdered', FindOperatorsOrdered, 1), 'prototype', 0), 'removeOne', J$.G(1905, J$.G(1897, J$.R(1889, 'FindOperatorsOrdered', FindOperatorsOrdered, 1), 'prototype', 0), 'deleteOne', 0), 0));
            J$.X1(2153, J$.P(2145, J$.G(1937, J$.R(1929, 'FindOperatorsOrdered', FindOperatorsOrdered, 1), 'prototype', 0), 'delete', J$.T(2137, function () {
                jalangiLabel2270:
                    while (true) {
                        try {
                            J$.Fe(2113, arguments.callee, this, arguments);
                            arguments = J$.N(2121, 'arguments', arguments, 4);
                            J$.N(2129, 'document', document, 0);
                            var document = J$.X1(2001, J$.W(1993, 'document', J$.T(1985, {
                                q: J$.G(1969, J$.G(1961, J$.G(1953, J$.R(1945, 'this', this, 0), 's', 0), 'currentOp', 0), 'selector', 0),
                                limit: J$.T(1977, 0, 22, false)
                            }, 11, false), document, 1));
                            J$.X1(2041, J$.P(2033, J$.G(2017, J$.R(2009, 'this', this, 0), 's', 0), 'currentOp', J$.T(2025, null, 25, false), 0));
                            return J$.X1(2105, J$.Rt(2097, J$.F(2089, J$.R(2049, 'addToOperationsList', addToOperationsList, 1), 0)(J$.R(2057, 'this', this, 0), J$.G(2073, J$.R(2065, 'common', common, 1), 'REMOVE', 0), J$.R(2081, 'document', document, 0))));
                        } catch (J$e) {
                            J$.Ex(10673, J$e);
                        } finally {
                            if (J$.Fr(10681))
                                continue jalangiLabel2270;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2113), 0));
            J$.X1(2209, J$.P(2201, J$.G(2169, J$.R(2161, 'FindOperatorsOrdered', FindOperatorsOrdered, 1), 'prototype', 0), 'remove', J$.G(2193, J$.G(2185, J$.R(2177, 'FindOperatorsOrdered', FindOperatorsOrdered, 1), 'prototype', 0), 'delete', 0), 0));
            var addToOperationsList = J$.X1(3473, J$.W(3465, 'addToOperationsList', J$.T(3457, function (_self, docType, document) {
                jalangiLabel2271:
                    while (true) {
                        try {
                            J$.Fe(3409, arguments.callee, this, arguments);
                            arguments = J$.N(3417, 'arguments', arguments, 4);
                            _self = J$.N(3425, '_self', _self, 4);
                            docType = J$.N(3433, 'docType', docType, 4);
                            document = J$.N(3441, 'document', document, 4);
                            J$.N(3449, 'bsonSize', bsonSize, 0);
                            var bsonSize = J$.X1(2273, J$.W(2265, 'bsonSize', J$.M(2257, J$.G(2233, J$.G(2225, J$.R(2217, '_self', _self, 0), 's', 0), 'bson', 0), 'calculateObjectSize', 0)(J$.R(2241, 'document', document, 0), J$.T(2249, false, 23, false)), bsonSize, 1));
                            if (J$.X1(10689, J$.C(24, J$.B(42, '>=', J$.R(2281, 'bsonSize', bsonSize, 0), J$.G(2305, J$.G(2297, J$.R(2289, '_self', _self, 0), 's', 0), 'maxBatchSizeBytes', 0), 0))))
                                throw J$.X1(2369, J$.Th(2361, J$.F(2353, J$.R(2313, 'toError', toError, 1), 0)(J$.B(50, '+', J$.T(2321, 'document is larger than the maximum size ', 21, false), J$.G(2345, J$.G(2337, J$.R(2329, '_self', _self, 0), 's', 0), 'maxBatchSizeBytes', 0), 0))));
                            if (J$.X1(10697, J$.C(32, J$.B(58, '==', J$.G(2393, J$.G(2385, J$.R(2377, '_self', _self, 0), 's', 0), 'currentBatch', 0), J$.T(2401, null, 25, false), 0))))
                                J$.X1(2481, J$.P(2473, J$.G(2417, J$.R(2409, '_self', _self, 0), 's', 0), 'currentBatch', J$.F(2465, J$.R(2425, 'Batch', Batch, 1), 1)(J$.R(2433, 'docType', docType, 0), J$.G(2457, J$.G(2449, J$.R(2441, '_self', _self, 0), 's', 0), 'currentIndex', 0)), 0));
                            if (J$.X1(10705, J$.C(56, J$.C(48, J$.C(40, J$.B(74, '>=', J$.B(66, '+', J$.G(2505, J$.G(2497, J$.R(2489, '_self', _self, 0), 's', 0), 'currentBatchSize', 0), J$.T(2513, 1, 22, false), 0), J$.G(2537, J$.G(2529, J$.R(2521, '_self', _self, 0), 's', 0), 'maxWriteBatchSize', 0), 0)) ? J$._() : J$.B(90, '>=', J$.B(82, '+', J$.G(2561, J$.G(2553, J$.R(2545, '_self', _self, 0), 's', 0), 'currentBatchSizeBytes', 0), J$.G(2585, J$.G(2577, J$.R(2569, '_self', _self, 0), 's', 0), 'currentBatchSizeBytes', 0), 0), J$.G(2609, J$.G(2601, J$.R(2593, '_self', _self, 0), 's', 0), 'maxBatchSizeBytes', 0), 0)) ? J$._() : J$.B(98, '!=', J$.G(2641, J$.G(2633, J$.G(2625, J$.R(2617, '_self', _self, 0), 's', 0), 'currentBatch', 0), 'batchType', 0), J$.R(2649, 'docType', docType, 0), 0)))) {
                                J$.X1(2713, J$.M(2705, J$.G(2673, J$.G(2665, J$.R(2657, '_self', _self, 0), 's', 0), 'batches', 0), 'push', 0)(J$.G(2697, J$.G(2689, J$.R(2681, '_self', _self, 0), 's', 0), 'currentBatch', 0)));
                                J$.X1(2793, J$.P(2785, J$.G(2729, J$.R(2721, '_self', _self, 0), 's', 0), 'currentBatch', J$.F(2777, J$.R(2737, 'Batch', Batch, 1), 1)(J$.R(2745, 'docType', docType, 0), J$.G(2769, J$.G(2761, J$.R(2753, '_self', _self, 0), 's', 0), 'currentIndex', 0)), 0));
                                J$.X1(2833, J$.P(2825, J$.G(2809, J$.R(2801, '_self', _self, 0), 's', 0), 'currentBatchSize', J$.T(2817, 0, 22, false), 0));
                                J$.X1(2873, J$.P(2865, J$.G(2849, J$.R(2841, '_self', _self, 0), 's', 0), 'currentBatchSizeBytes', J$.T(2857, 0, 22, false), 0));
                            } else {
                                J$.X1(2937, J$.P(2929, J$.G(2889, J$.R(2881, '_self', _self, 0), 's', 0), 'currentBatchSize', J$.B(106, '+', J$.G(2913, J$.G(2905, J$.R(2897, '_self', _self, 0), 's', 0), 'currentBatchSize', 0), J$.T(2921, 1, 22, false), 0), 0));
                                J$.X1(3001, J$.P(2993, J$.G(2953, J$.R(2945, '_self', _self, 0), 's', 0), 'currentBatchSizeBytes', J$.B(114, '+', J$.G(2977, J$.G(2969, J$.R(2961, '_self', _self, 0), 's', 0), 'currentBatchSizeBytes', 0), J$.R(2985, 'bsonSize', bsonSize, 0), 0), 0));
                            }
                            if (J$.X1(10713, J$.C(64, J$.B(122, '==', J$.R(3009, 'docType', docType, 0), J$.G(3025, J$.R(3017, 'common', common, 1), 'INSERT', 0), 0)))) {
                                J$.X1(3121, J$.M(3113, J$.G(3057, J$.G(3049, J$.G(3041, J$.R(3033, '_self', _self, 0), 's', 0), 'bulkResult', 0), 'insertedIds', 0), 'push', 0)(J$.T(3105, {
                                    index: J$.G(3081, J$.G(3073, J$.R(3065, '_self', _self, 0), 's', 0), 'currentIndex', 0),
                                    _id: J$.G(3097, J$.R(3089, 'document', document, 0), '_id', 0)
                                }, 11, false)));
                            }
                            if (J$.X1(10721, J$.C(72, J$.M(3145, J$.R(3129, 'Array', Array, 2), 'isArray', 0)(J$.R(3137, 'document', document, 0))))) {
                                throw J$.X1(3185, J$.Th(3177, J$.F(3169, J$.R(3153, 'toError', toError, 1), 0)(J$.T(3161, 'operation passed in cannot be an Array', 21, false))));
                            } else {
                                J$.X1(3257, J$.M(3249, J$.G(3217, J$.G(3209, J$.G(3201, J$.R(3193, '_self', _self, 0), 's', 0), 'currentBatch', 0), 'originalIndexes', 0), 'push', 0)(J$.G(3241, J$.G(3233, J$.R(3225, '_self', _self, 0), 's', 0), 'currentIndex', 0)));
                                J$.X1(3313, J$.M(3305, J$.G(3289, J$.G(3281, J$.G(3273, J$.R(3265, '_self', _self, 0), 's', 0), 'currentBatch', 0), 'operations', 0), 'push', 0)(J$.R(3297, 'document', document, 0)));
                                J$.X1(3377, J$.P(3369, J$.G(3329, J$.R(3321, '_self', _self, 0), 's', 0), 'currentIndex', J$.B(130, '+', J$.G(3353, J$.G(3345, J$.R(3337, '_self', _self, 0), 's', 0), 'currentIndex', 0), J$.T(3361, 1, 22, false), 0), 0));
                            }
                            return J$.X1(3401, J$.Rt(3393, J$.R(3385, '_self', _self, 0)));
                        } catch (J$e) {
                            J$.Ex(10729, J$e);
                        } finally {
                            if (J$.Fr(10737))
                                continue jalangiLabel2271;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3409), addToOperationsList, 3));
            var define = J$.X1(4729, J$.W(4721, 'define', J$.P(4713, J$.R(4665, 'OrderedBulkOperation', OrderedBulkOperation, 1), 'define', J$.F(4705, J$.R(4673, 'Define', Define, 1), 1)(J$.T(4681, 'OrderedBulkOperation', 21, false), J$.R(4689, 'OrderedBulkOperation', OrderedBulkOperation, 1), J$.T(4697, false, 23, false)), 0), define, 3));
            J$.X1(6993, J$.P(6985, J$.G(4745, J$.R(4737, 'OrderedBulkOperation', OrderedBulkOperation, 1), 'prototype', 0), 'raw', J$.T(6977, function (op) {
                jalangiLabel2273:
                    while (true) {
                        try {
                            J$.Fe(6905, arguments.callee, this, arguments);
                            arguments = J$.N(6913, 'arguments', arguments, 4);
                            op = J$.N(6921, 'op', op, 4);
                            J$.N(6929, 'key', key, 0);
                            J$.N(6937, 'forceServerObjectId', forceServerObjectId, 0);
                            J$.N(6945, 'multi', multi, 0);
                            J$.N(6953, 'operation', operation, 0);
                            J$.N(6961, 'limit', limit, 0);
                            J$.N(6969, 'i', i, 0);
                            var key = J$.X1(4801, J$.W(4793, 'key', J$.G(4785, J$.M(4769, J$.R(4753, 'Object', Object, 2), 'keys', 0)(J$.R(4761, 'op', op, 0)), J$.T(4777, 0, 22, false), 4), key, 1));
                            var forceServerObjectId = J$.X1(4945, J$.W(4937, 'forceServerObjectId', J$.X1(10809, J$.C(144, J$.B(210, '==', J$.U(202, 'typeof', J$.G(4833, J$.G(4825, J$.G(4817, J$.R(4809, 'this', this, 0), 's', 0), 'options', 0), 'forceServerObjectId', 0)), J$.T(4841, 'boolean', 21, false), 0))) ? J$.G(4873, J$.G(4865, J$.G(4857, J$.R(4849, 'this', this, 0), 's', 0), 'options', 0), 'forceServerObjectId', 0) : J$.G(4929, J$.G(4921, J$.G(4913, J$.G(4905, J$.G(4897, J$.G(4889, J$.R(4881, 'this', this, 0), 's', 0), 'collection', 0), 's', 0), 'db', 0), 'options', 0), 'forceServerObjectId', 0), forceServerObjectId, 1));
                            if (J$.X1(10825, J$.C(208, J$.C(184, J$.C(168, J$.C(152, J$.G(4961, J$.R(4953, 'op', op, 0), 'updateOne', 0)) ? J$.G(4985, J$.G(4977, J$.R(4969, 'op', op, 0), 'updateOne', 0), 'q', 0) : J$._()) ? J$._() : J$.C(160, J$.G(5001, J$.R(4993, 'op', op, 0), 'updateMany', 0)) ? J$.G(5025, J$.G(5017, J$.R(5009, 'op', op, 0), 'updateMany', 0), 'q', 0) : J$._()) ? J$._() : J$.C(176, J$.G(5041, J$.R(5033, 'op', op, 0), 'replaceOne', 0)) ? J$.G(5065, J$.G(5057, J$.R(5049, 'op', op, 0), 'replaceOne', 0), 'q', 0) : J$._()))) {
                                J$.X1(5153, J$.P(5145, J$.G(5089, J$.R(5073, 'op', op, 0), J$.R(5081, 'key', key, 0), 4), 'multi', J$.X1(10817, J$.C(200, J$.C(192, J$.G(5105, J$.R(5097, 'op', op, 0), 'updateOne', 0)) ? J$._() : J$.G(5121, J$.R(5113, 'op', op, 0), 'replaceOne', 0))) ? J$.T(5129, false, 23, false) : J$.T(5137, true, 23, false), 0));
                                return J$.X1(5233, J$.Rt(5225, J$.F(5217, J$.R(5161, 'addToOperationsList', addToOperationsList, 1), 0)(J$.R(5169, 'this', this, 0), J$.G(5185, J$.R(5177, 'common', common, 1), 'UPDATE', 0), J$.G(5209, J$.R(5193, 'op', op, 0), J$.R(5201, 'key', key, 0), 4))));
                            }
                            if (J$.X1(10849, J$.C(264, J$.C(224, J$.C(216, J$.G(5249, J$.R(5241, 'op', op, 0), 'updateOne', 0)) ? J$._() : J$.G(5265, J$.R(5257, 'op', op, 0), 'updateMany', 0)) ? J$._() : J$.G(5281, J$.R(5273, 'op', op, 0), 'replaceOne', 0)))) {
                                var multi = J$.X1(5345, J$.W(5337, 'multi', J$.X1(10833, J$.C(240, J$.C(232, J$.G(5297, J$.R(5289, 'op', op, 0), 'updateOne', 0)) ? J$._() : J$.G(5313, J$.R(5305, 'op', op, 0), 'replaceOne', 0))) ? J$.T(5321, false, 23, false) : J$.T(5329, true, 23, false), multi, 1));
                                var operation = J$.X1(5473, J$.W(5465, 'operation', J$.T(5457, {
                                    q: J$.G(5377, J$.G(5369, J$.R(5353, 'op', op, 0), J$.R(5361, 'key', key, 0), 4), 'filter', 0),
                                    u: J$.C(248, J$.G(5409, J$.G(5401, J$.R(5385, 'op', op, 0), J$.R(5393, 'key', key, 0), 4), 'update', 0)) ? J$._() : J$.G(5441, J$.G(5433, J$.R(5417, 'op', op, 0), J$.R(5425, 'key', key, 0), 4), 'replacement', 0),
                                    multi: J$.R(5449, 'multi', multi, 0)
                                }, 11, false), operation, 1));
                                J$.X1(5545, J$.P(5537, J$.R(5481, 'operation', operation, 0), 'upsert', J$.X1(10841, J$.C(256, J$.G(5513, J$.G(5505, J$.R(5489, 'op', op, 0), J$.R(5497, 'key', key, 0), 4), 'upsert', 0))) ? J$.T(5521, true, 23, false) : J$.T(5529, false, 23, false), 0));
                                return J$.X1(5609, J$.Rt(5601, J$.F(5593, J$.R(5553, 'addToOperationsList', addToOperationsList, 1), 0)(J$.R(5561, 'this', this, 0), J$.G(5577, J$.R(5569, 'common', common, 1), 'UPDATE', 0), J$.R(5585, 'operation', operation, 0))));
                            }
                            if (J$.X1(10865, J$.C(320, J$.C(304, J$.C(288, J$.C(272, J$.G(5625, J$.R(5617, 'op', op, 0), 'removeOne', 0)) ? J$._() : J$.G(5641, J$.R(5633, 'op', op, 0), 'removeMany', 0)) ? J$._() : J$.C(280, J$.G(5657, J$.R(5649, 'op', op, 0), 'deleteOne', 0)) ? J$.G(5681, J$.G(5673, J$.R(5665, 'op', op, 0), 'deleteOne', 0), 'q', 0) : J$._()) ? J$._() : J$.C(296, J$.G(5697, J$.R(5689, 'op', op, 0), 'deleteMany', 0)) ? J$.G(5721, J$.G(5713, J$.R(5705, 'op', op, 0), 'deleteMany', 0), 'q', 0) : J$._()))) {
                                J$.X1(5793, J$.P(5785, J$.G(5745, J$.R(5729, 'op', op, 0), J$.R(5737, 'key', key, 0), 4), 'limit', J$.X1(10857, J$.C(312, J$.G(5761, J$.R(5753, 'op', op, 0), 'removeOne', 0))) ? J$.T(5769, 1, 22, false) : J$.T(5777, 0, 22, false), 0));
                                return J$.X1(5873, J$.Rt(5865, J$.F(5857, J$.R(5801, 'addToOperationsList', addToOperationsList, 1), 0)(J$.R(5809, 'this', this, 0), J$.G(5825, J$.R(5817, 'common', common, 1), 'REMOVE', 0), J$.G(5849, J$.R(5833, 'op', op, 0), J$.R(5841, 'key', key, 0), 4))));
                            }
                            if (J$.X1(10881, J$.C(344, J$.C(328, J$.G(5889, J$.R(5881, 'op', op, 0), 'deleteOne', 0)) ? J$._() : J$.G(5905, J$.R(5897, 'op', op, 0), 'deleteMany', 0)))) {
                                var limit = J$.X1(5953, J$.W(5945, 'limit', J$.X1(10873, J$.C(336, J$.G(5921, J$.R(5913, 'op', op, 0), 'deleteOne', 0))) ? J$.T(5929, 1, 22, false) : J$.T(5937, 0, 22, false), limit, 1));
                                var operation = J$.X1(6017, J$.W(6009, 'operation', J$.T(6001, {
                                    q: J$.G(5985, J$.G(5977, J$.R(5961, 'op', op, 0), J$.R(5969, 'key', key, 0), 4), 'filter', 0),
                                    limit: J$.R(5993, 'limit', limit, 0)
                                }, 11, false), operation, 1));
                                return J$.X1(6081, J$.Rt(6073, J$.F(6065, J$.R(6025, 'addToOperationsList', addToOperationsList, 1), 0)(J$.R(6033, 'this', this, 0), J$.G(6049, J$.R(6041, 'common', common, 1), 'REMOVE', 0), J$.R(6057, 'operation', operation, 0))));
                            }
                            if (J$.X1(10913, J$.C(408, J$.C(352, J$.G(6097, J$.R(6089, 'op', op, 0), 'insertOne', 0)) ? J$.B(218, '==', J$.G(6121, J$.G(6113, J$.R(6105, 'op', op, 0), 'insertOne', 0), 'document', 0), J$.T(6129, null, 25, false), 0) : J$._()))) {
                                if (J$.X1(10889, J$.C(368, J$.C(360, J$.B(226, '!==', J$.R(6137, 'forceServerObjectId', forceServerObjectId, 0), J$.T(6145, true, 23, false), 0)) ? J$.B(234, '==', J$.G(6169, J$.G(6161, J$.R(6153, 'op', op, 0), 'insertOne', 0), '_id', 0), J$.T(6177, null, 25, false), 0) : J$._())))
                                    J$.X1(6225, J$.P(6217, J$.G(6193, J$.R(6185, 'op', op, 0), 'insertOne', 0), '_id', J$.F(6209, J$.R(6201, 'ObjectID', ObjectID, 1), 1)(), 0));
                                return J$.X1(6297, J$.Rt(6289, J$.F(6281, J$.R(6233, 'addToOperationsList', addToOperationsList, 1), 0)(J$.R(6241, 'this', this, 0), J$.G(6257, J$.R(6249, 'common', common, 1), 'INSERT', 0), J$.G(6273, J$.R(6265, 'op', op, 0), 'insertOne', 0))));
                            } else if (J$.X1(10905, J$.C(400, J$.C(376, J$.G(6313, J$.R(6305, 'op', op, 0), 'insertOne', 0)) ? J$.G(6337, J$.G(6329, J$.R(6321, 'op', op, 0), 'insertOne', 0), 'document', 0) : J$._()))) {
                                if (J$.X1(10897, J$.C(392, J$.C(384, J$.B(242, '!==', J$.R(6345, 'forceServerObjectId', forceServerObjectId, 0), J$.T(6353, true, 23, false), 0)) ? J$.B(250, '==', J$.G(6385, J$.G(6377, J$.G(6369, J$.R(6361, 'op', op, 0), 'insertOne', 0), 'document', 0), '_id', 0), J$.T(6393, null, 25, false), 0) : J$._())))
                                    J$.X1(6449, J$.P(6441, J$.G(6417, J$.G(6409, J$.R(6401, 'op', op, 0), 'insertOne', 0), 'document', 0), '_id', J$.F(6433, J$.R(6425, 'ObjectID', ObjectID, 1), 1)(), 0));
                                return J$.X1(6529, J$.Rt(6521, J$.F(6513, J$.R(6457, 'addToOperationsList', addToOperationsList, 1), 0)(J$.R(6465, 'this', this, 0), J$.G(6481, J$.R(6473, 'common', common, 1), 'INSERT', 0), J$.G(6505, J$.G(6497, J$.R(6489, 'op', op, 0), 'insertOne', 0), 'document', 0))));
                            }
                            if (J$.X1(10945, J$.C(440, J$.G(6545, J$.R(6537, 'op', op, 0), 'insertMany', 0)))) {
                                for (var i = J$.X1(6569, J$.W(6561, 'i', J$.T(6553, 0, 22, false), i, 1)); J$.X1(10929, J$.C(432, J$.B(258, '<', J$.R(6577, 'i', i, 0), J$.G(6601, J$.G(6593, J$.R(6585, 'op', op, 0), 'insertMany', 0), 'length', 0), 0))); J$.X1(10937, J$.B(282, '-', i = J$.W(6625, 'i', J$.B(274, '+', J$.U(266, '+', J$.R(6617, 'i', i, 0)), J$.T(6609, 1, 22, false), 0), i, 0), J$.T(6633, 1, 22, false), 0))) {
                                    if (J$.X1(10921, J$.C(424, J$.C(416, J$.B(290, '!==', J$.R(6641, 'forceServerObjectId', forceServerObjectId, 0), J$.T(6649, true, 23, false), 0)) ? J$.B(298, '==', J$.G(6689, J$.G(6681, J$.G(6665, J$.R(6657, 'op', op, 0), 'insertMany', 0), J$.R(6673, 'i', i, 0), 4), '_id', 0), J$.T(6697, null, 25, false), 0) : J$._())))
                                        J$.X1(6761, J$.P(6753, J$.G(6729, J$.G(6713, J$.R(6705, 'op', op, 0), 'insertMany', 0), J$.R(6721, 'i', i, 0), 4), '_id', J$.F(6745, J$.R(6737, 'ObjectID', ObjectID, 1), 1)(), 0));
                                    J$.X1(6841, J$.F(6833, J$.R(6769, 'addToOperationsList', addToOperationsList, 1), 0)(J$.R(6777, 'this', this, 0), J$.G(6793, J$.R(6785, 'common', common, 1), 'INSERT', 0), J$.G(6825, J$.G(6809, J$.R(6801, 'op', op, 0), 'insertMany', 0), J$.R(6817, 'i', i, 0), 4)));
                                }
                                return J$.X1(6857, J$.Rt(6849, undefined));
                            }
                            throw J$.X1(6897, J$.Th(6889, J$.F(6881, J$.R(6865, 'toError', toError, 1), 0)(J$.T(6873, 'bulkWrite only supports insertOne, insertMany, updateOne, updateMany, removeOne, removeMany, deleteOne, deleteMany', 21, false))));
                        } catch (J$e) {
                            J$.Ex(10953, J$e);
                        } finally {
                            if (J$.Fr(10961))
                                continue jalangiLabel2273;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 6905), 0));
            J$.X1(7249, J$.P(7241, J$.G(7009, J$.R(7001, 'OrderedBulkOperation', OrderedBulkOperation, 1), 'prototype', 0), 'insert', J$.T(7233, function (document) {
                jalangiLabel2274:
                    while (true) {
                        try {
                            J$.Fe(7209, arguments.callee, this, arguments);
                            arguments = J$.N(7217, 'arguments', arguments, 4);
                            document = J$.N(7225, 'document', document, 4);
                            if (J$.X1(10969, J$.C(456, J$.C(448, J$.B(306, '!==', J$.G(7065, J$.G(7057, J$.G(7049, J$.G(7041, J$.G(7033, J$.G(7025, J$.R(7017, 'this', this, 0), 's', 0), 'collection', 0), 's', 0), 'db', 0), 'options', 0), 'forceServerObjectId', 0), J$.T(7073, true, 23, false), 0)) ? J$.B(314, '==', J$.G(7089, J$.R(7081, 'document', document, 0), '_id', 0), J$.T(7097, null, 25, false), 0) : J$._())))
                                J$.X1(7137, J$.P(7129, J$.R(7105, 'document', document, 0), '_id', J$.F(7121, J$.R(7113, 'ObjectID', ObjectID, 1), 1)(), 0));
                            return J$.X1(7201, J$.Rt(7193, J$.F(7185, J$.R(7145, 'addToOperationsList', addToOperationsList, 1), 0)(J$.R(7153, 'this', this, 0), J$.G(7169, J$.R(7161, 'common', common, 1), 'INSERT', 0), J$.R(7177, 'document', document, 0))));
                        } catch (J$e) {
                            J$.Ex(10977, J$e);
                        } finally {
                            if (J$.Fr(10985))
                                continue jalangiLabel2274;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 7209), 0));
            J$.X1(7449, J$.P(7441, J$.G(7265, J$.R(7257, 'OrderedBulkOperation', OrderedBulkOperation, 1), 'prototype', 0), 'find', J$.T(7433, function (selector) {
                jalangiLabel2275:
                    while (true) {
                        try {
                            J$.Fe(7409, arguments.callee, this, arguments);
                            arguments = J$.N(7417, 'arguments', arguments, 4);
                            selector = J$.N(7425, 'selector', selector, 4);
                            if (J$.X1(10993, J$.C(464, J$.U(322, '!', J$.R(7273, 'selector', selector, 0))))) {
                                throw J$.X1(7313, J$.Th(7305, J$.F(7297, J$.R(7281, 'toError', toError, 1), 0)(J$.T(7289, 'Bulk find operation must specify a selector', 21, false))));
                            }
                            J$.X1(7361, J$.P(7353, J$.G(7329, J$.R(7321, 'this', this, 0), 's', 0), 'currentOp', J$.T(7345, {
                                selector: J$.R(7337, 'selector', selector, 0)
                            }, 11, false), 0));
                            return J$.X1(7401, J$.Rt(7393, J$.F(7385, J$.R(7369, 'FindOperatorsOrdered', FindOperatorsOrdered, 1), 1)(J$.R(7377, 'this', this, 0))));
                        } catch (J$e) {
                            J$.Ex(11001, J$e);
                        } finally {
                            if (J$.Fr(11009))
                                continue jalangiLabel2275;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 7409), 0));
            J$.X1(7577, J$.M(7569, J$.R(7457, 'Object', Object, 2), 'defineProperty', 0)(J$.G(7473, J$.R(7465, 'OrderedBulkOperation', OrderedBulkOperation, 1), 'prototype', 0), J$.T(7481, 'length', 21, false), J$.T(7561, {
                enumerable: J$.T(7489, true, 23, false),
                get: J$.T(7553, function () {
                    jalangiLabel2276:
                        while (true) {
                            try {
                                J$.Fe(7537, arguments.callee, this, arguments);
                                arguments = J$.N(7545, 'arguments', arguments, 4);
                                return J$.X1(7529, J$.Rt(7521, J$.G(7513, J$.G(7505, J$.R(7497, 'this', this, 0), 's', 0), 'currentIndex', 0)));
                            } catch (J$e) {
                                J$.Ex(11017, J$e);
                            } finally {
                                if (J$.Fr(11025))
                                    continue jalangiLabel2276;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 7537)
            }, 11, false)));
            var executeCommands = J$.X1(9377, J$.W(9369, 'executeCommands', J$.T(9361, function (self, callback) {
                jalangiLabel2278:
                    while (true) {
                        try {
                            J$.Fe(9305, arguments.callee, this, arguments);
                            arguments = J$.N(9313, 'arguments', arguments, 4);
                            self = J$.N(9321, 'self', self, 4);
                            callback = J$.N(9329, 'callback', callback, 4);
                            J$.N(9337, 'batch', batch, 0);
                            J$.N(9345, 'resultHandler', resultHandler, 0);
                            J$.N(9353, 'finalOptions', finalOptions, 0);
                            if (J$.X1(11033, J$.C(472, J$.B(330, '==', J$.G(7609, J$.G(7601, J$.G(7593, J$.R(7585, 'self', self, 0), 's', 0), 'batches', 0), 'length', 0), J$.T(7617, 0, 22, false), 0)))) {
                                return J$.X1(7705, J$.Rt(7697, J$.F(7689, J$.R(7625, 'handleCallback', handleCallback, 1), 0)(J$.R(7633, 'callback', callback, 0), J$.T(7641, null, 25, false), J$.F(7681, J$.R(7649, 'BulkWriteResult', BulkWriteResult, 1), 1)(J$.G(7673, J$.G(7665, J$.R(7657, 'self', self, 0), 's', 0), 'bulkResult', 0)))));
                            }
                            var batch = J$.X1(7753, J$.W(7745, 'batch', J$.M(7737, J$.G(7729, J$.G(7721, J$.R(7713, 'self', self, 0), 's', 0), 'batches', 0), 'shift', 0)(), batch, 1));
                            var resultHandler = J$.X1(8377, J$.W(8369, 'resultHandler', J$.T(8361, function (err, result) {
                                jalangiLabel2277:
                                    while (true) {
                                        try {
                                            J$.Fe(8321, arguments.callee, this, arguments);
                                            arguments = J$.N(8329, 'arguments', arguments, 4);
                                            err = J$.N(8337, 'err', err, 4);
                                            result = J$.N(8345, 'result', result, 4);
                                            J$.N(8353, 'mergeResult', mergeResult, 0);
                                            if (J$.X1(11041, J$.C(504, J$.C(496, J$.C(480, J$.R(7761, 'err', err, 0)) ? J$.G(7777, J$.R(7769, 'err', err, 0), 'driver', 0) : J$._()) ? J$._() : J$.C(488, J$.R(7785, 'err', err, 0)) ? J$.G(7801, J$.R(7793, 'err', err, 0), 'message', 0) : J$._()))) {
                                                return J$.X1(7849, J$.Rt(7841, J$.F(7833, J$.R(7809, 'handleCallback', handleCallback, 1), 0)(J$.R(7817, 'callback', callback, 0), J$.R(7825, 'err', err, 0))));
                                            }
                                            if (J$.X1(11049, J$.C(512, J$.R(7857, 'err', err, 0))))
                                                J$.X1(7889, J$.P(7881, J$.R(7865, 'err', err, 0), 'ok', J$.T(7873, 0, 22, false), 0));
                                            var mergeResult = J$.X1(7977, J$.W(7969, 'mergeResult', J$.F(7961, J$.R(7897, 'mergeBatchResults', mergeBatchResults, 1), 0)(J$.T(7905, true, 23, false), J$.R(7913, 'batch', batch, 0), J$.G(7937, J$.G(7929, J$.R(7921, 'self', self, 0), 's', 0), 'bulkResult', 0), J$.R(7945, 'err', err, 0), J$.R(7953, 'result', result, 0)), mergeResult, 1));
                                            if (J$.X1(11057, J$.C(520, J$.B(338, '!=', J$.R(7985, 'mergeResult', mergeResult, 0), J$.T(7993, null, 25, false), 0)))) {
                                                return J$.X1(8081, J$.Rt(8073, J$.F(8065, J$.R(8001, 'handleCallback', handleCallback, 1), 0)(J$.R(8009, 'callback', callback, 0), J$.T(8017, null, 25, false), J$.F(8057, J$.R(8025, 'BulkWriteResult', BulkWriteResult, 1), 1)(J$.G(8049, J$.G(8041, J$.R(8033, 'self', self, 0), 's', 0), 'bulkResult', 0)))));
                                            }
                                            if (J$.X1(11065, J$.C(528, J$.B(346, '>', J$.G(8121, J$.G(8113, J$.G(8105, J$.G(8097, J$.R(8089, 'self', self, 0), 's', 0), 'bulkResult', 0), 'writeErrors', 0), 'length', 0), J$.T(8129, 0, 22, false), 0)))) {
                                                return J$.X1(8273, J$.Rt(8265, J$.F(8257, J$.R(8137, 'handleCallback', handleCallback, 1), 0)(J$.R(8145, 'callback', callback, 0), J$.F(8209, J$.R(8153, 'toError', toError, 1), 0)(J$.G(8201, J$.G(8185, J$.G(8177, J$.G(8169, J$.R(8161, 'self', self, 0), 's', 0), 'bulkResult', 0), 'writeErrors', 0), J$.T(8193, 0, 22, false), 4)), J$.F(8249, J$.R(8217, 'BulkWriteResult', BulkWriteResult, 1), 1)(J$.G(8241, J$.G(8233, J$.R(8225, 'self', self, 0), 's', 0), 'bulkResult', 0)))));
                                            }
                                            J$.X1(8313, J$.F(8305, J$.R(8281, 'executeCommands', executeCommands, 1), 0)(J$.R(8289, 'self', self, 0), J$.R(8297, 'callback', callback, 0)));
                                        } catch (J$e) {
                                            J$.Ex(11073, J$e);
                                        } finally {
                                            if (J$.Fr(11081))
                                                continue jalangiLabel2277;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 8321), resultHandler, 1));
                            var finalOptions = J$.X1(8409, J$.W(8401, 'finalOptions', J$.T(8393, {
                                ordered: J$.T(8385, true, 23, false)
                            }, 11, false), finalOptions, 1));
                            if (J$.X1(11089, J$.C(536, J$.B(354, '!=', J$.G(8433, J$.G(8425, J$.R(8417, 'self', self, 0), 's', 0), 'writeConcern', 0), J$.T(8441, null, 25, false), 0)))) {
                                J$.X1(8489, J$.P(8481, J$.R(8449, 'finalOptions', finalOptions, 0), 'writeConcern', J$.G(8473, J$.G(8465, J$.R(8457, 'self', self, 0), 's', 0), 'writeConcern', 0), 0));
                            }
                            if (J$.X1(11097, J$.C(544, J$.G(8505, J$.R(8497, 'self', self, 0), 'operationId', 0)))) {
                                J$.X1(8545, J$.P(8537, J$.R(8513, 'resultHandler', resultHandler, 0), 'operationId', J$.G(8529, J$.R(8521, 'self', self, 0), 'operationId', 0), 0));
                            }
                            if (J$.X1(11105, J$.C(552, J$.G(8577, J$.G(8569, J$.G(8561, J$.R(8553, 'self', self, 0), 's', 0), 'options', 0), 'serializeFunctions', 0)))) {
                                J$.X1(8609, J$.P(8601, J$.R(8585, 'finalOptions', finalOptions, 0), 'serializeFunctions', J$.T(8593, true, 23, false), 0));
                            }
                            if (J$.X1(11113, J$.C(560, J$.G(8641, J$.G(8633, J$.G(8625, J$.R(8617, 'self', self, 0), 's', 0), 'options', 0), 'ignoreUndefined', 0)))) {
                                J$.X1(8673, J$.P(8665, J$.R(8649, 'finalOptions', finalOptions, 0), 'ignoreUndefined', J$.T(8657, true, 23, false), 0));
                            }
                            if (J$.X1(11121, J$.C(568, J$.B(362, '==', J$.G(8697, J$.G(8689, J$.R(8681, 'self', self, 0), 's', 0), 'bypassDocumentValidation', 0), J$.T(8705, true, 23, false), 0)))) {
                                J$.X1(8737, J$.P(8729, J$.R(8713, 'finalOptions', finalOptions, 0), 'bypassDocumentValidation', J$.T(8721, true, 23, false), 0));
                            }
                            try {
                                if (J$.X1(11145, J$.C(592, J$.B(370, '==', J$.G(8753, J$.R(8745, 'batch', batch, 0), 'batchType', 0), J$.G(8769, J$.R(8761, 'common', common, 1), 'INSERT', 0), 0)))) {
                                    J$.X1(8873, J$.M(8865, J$.G(8793, J$.G(8785, J$.R(8777, 'self', self, 0), 's', 0), 'topology', 0), 'insert', 0)(J$.G(8825, J$.G(8817, J$.G(8809, J$.R(8801, 'self', self, 0), 's', 0), 'collection', 0), 'namespace', 0), J$.G(8841, J$.R(8833, 'batch', batch, 0), 'operations', 0), J$.R(8849, 'finalOptions', finalOptions, 0), J$.R(8857, 'resultHandler', resultHandler, 0)));
                                } else if (J$.X1(11137, J$.C(584, J$.B(378, '==', J$.G(8889, J$.R(8881, 'batch', batch, 0), 'batchType', 0), J$.G(8905, J$.R(8897, 'common', common, 1), 'UPDATE', 0), 0)))) {
                                    J$.X1(9009, J$.M(9001, J$.G(8929, J$.G(8921, J$.R(8913, 'self', self, 0), 's', 0), 'topology', 0), 'update', 0)(J$.G(8961, J$.G(8953, J$.G(8945, J$.R(8937, 'self', self, 0), 's', 0), 'collection', 0), 'namespace', 0), J$.G(8977, J$.R(8969, 'batch', batch, 0), 'operations', 0), J$.R(8985, 'finalOptions', finalOptions, 0), J$.R(8993, 'resultHandler', resultHandler, 0)));
                                } else if (J$.X1(11129, J$.C(576, J$.B(386, '==', J$.G(9025, J$.R(9017, 'batch', batch, 0), 'batchType', 0), J$.G(9041, J$.R(9033, 'common', common, 1), 'REMOVE', 0), 0)))) {
                                    J$.X1(9145, J$.M(9137, J$.G(9065, J$.G(9057, J$.R(9049, 'self', self, 0), 's', 0), 'topology', 0), 'remove', 0)(J$.G(9097, J$.G(9089, J$.G(9081, J$.R(9073, 'self', self, 0), 's', 0), 'collection', 0), 'namespace', 0), J$.G(9113, J$.R(9105, 'batch', batch, 0), 'operations', 0), J$.R(9121, 'finalOptions', finalOptions, 0), J$.R(9129, 'resultHandler', resultHandler, 0)));
                                }
                            } catch (err) {
                                err = J$.N(9297, 'err', err, 1);
                                J$.X1(9177, J$.P(9169, J$.R(9153, 'err', err, 0), 'ok', J$.T(9161, 0, 22, false), 0));
                                J$.X1(9289, J$.F(9281, J$.R(9185, 'handleCallback', handleCallback, 1), 0)(J$.R(9193, 'callback', callback, 0), J$.T(9201, null, 25, false), J$.F(9273, J$.R(9209, 'mergeBatchResults', mergeBatchResults, 1), 0)(J$.T(9217, false, 23, false), J$.R(9225, 'batch', batch, 0), J$.G(9249, J$.G(9241, J$.R(9233, 'self', self, 0), 's', 0), 'bulkResult', 0), J$.R(9257, 'err', err, 0), J$.T(9265, null, 25, false))));
                            }
                        } catch (J$e) {
                            J$.Ex(11153, J$e);
                        } finally {
                            if (J$.Fr(11161))
                                continue jalangiLabel2278;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 9305), executeCommands, 3));
            J$.X1(10089, J$.P(10081, J$.G(9393, J$.R(9385, 'OrderedBulkOperation', OrderedBulkOperation, 1), 'prototype', 0), 'execute', J$.T(10073, function (_writeConcern, callback) {
                jalangiLabel2281:
                    while (true) {
                        try {
                            J$.Fe(10033, arguments.callee, this, arguments);
                            arguments = J$.N(10041, 'arguments', arguments, 4);
                            _writeConcern = J$.N(10049, '_writeConcern', _writeConcern, 4);
                            callback = J$.N(10057, 'callback', callback, 4);
                            J$.N(10065, 'self', self, 0);
                            var self = J$.X1(9417, J$.W(9409, 'self', J$.R(9401, 'this', this, 0), self, 1));
                            if (J$.X1(11169, J$.C(600, J$.G(9441, J$.G(9433, J$.R(9425, 'this', this, 0), 's', 0), 'executed', 0))))
                                throw J$.X1(9481, J$.Th(9473, J$.F(9465, J$.R(9449, 'toError', toError, 1), 1)(J$.T(9457, 'batch cannot be re-executed', 21, false))));
                            if (J$.X1(11177, J$.C(608, J$.B(402, '==', J$.U(394, 'typeof', J$.R(9489, '_writeConcern', _writeConcern, 0)), J$.T(9497, 'function', 21, false), 0)))) {
                                J$.X1(9521, callback = J$.W(9513, 'callback', J$.R(9505, '_writeConcern', _writeConcern, 0), callback, 0));
                            } else {
                                J$.X1(9561, J$.P(9553, J$.G(9537, J$.R(9529, 'this', this, 0), 's', 0), 'writeConcern', J$.R(9545, '_writeConcern', _writeConcern, 0), 0));
                            }
                            if (J$.X1(11185, J$.C(616, J$.G(9585, J$.G(9577, J$.R(9569, 'this', this, 0), 's', 0), 'currentBatch', 0))))
                                J$.X1(9649, J$.M(9641, J$.G(9609, J$.G(9601, J$.R(9593, 'this', this, 0), 's', 0), 'batches', 0), 'push', 0)(J$.G(9633, J$.G(9625, J$.R(9617, 'this', this, 0), 's', 0), 'currentBatch', 0)));
                            if (J$.X1(11193, J$.C(624, J$.B(410, '==', J$.G(9681, J$.G(9673, J$.G(9665, J$.R(9657, 'this', this, 0), 's', 0), 'batches', 0), 'length', 0), J$.T(9689, 0, 22, false), 0)))) {
                                throw J$.X1(9729, J$.Th(9721, J$.F(9713, J$.R(9697, 'toError', toError, 1), 0)(J$.T(9705, 'Invalid Operation, No operations in bulk', 21, false))));
                            }
                            if (J$.X1(11201, J$.C(632, J$.B(426, '==', J$.U(418, 'typeof', J$.R(9737, 'callback', callback, 0)), J$.T(9745, 'function', 21, false), 0)))) {
                                return J$.X1(9793, J$.Rt(9785, J$.F(9777, J$.R(9753, 'executeCommands', executeCommands, 1), 0)(J$.R(9761, 'this', this, 0), J$.R(9769, 'callback', callback, 0))));
                            }
                            return J$.X1(10025, J$.Rt(10017, J$.M(10009, J$.G(9809, J$.R(9801, 'this', this, 0), 's', 0), 'promiseLibrary', 2)(J$.T(10001, function (resolve, reject) {
                                jalangiLabel2280:
                                    while (true) {
                                        try {
                                            J$.Fe(9969, arguments.callee, this, arguments);
                                            arguments = J$.N(9977, 'arguments', arguments, 4);
                                            resolve = J$.N(9985, 'resolve', resolve, 4);
                                            reject = J$.N(9993, 'reject', reject, 4);
                                            J$.X1(9961, J$.F(9953, J$.R(9817, 'executeCommands', executeCommands, 1), 0)(J$.R(9825, 'self', self, 0), J$.T(9945, function (err, r) {
                                                jalangiLabel2279:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(9913, arguments.callee, this, arguments);
                                                            arguments = J$.N(9921, 'arguments', arguments, 4);
                                                            err = J$.N(9929, 'err', err, 4);
                                                            r = J$.N(9937, 'r', r, 4);
                                                            if (J$.X1(11209, J$.C(640, J$.R(9833, 'err', err, 0))))
                                                                return J$.X1(9873, J$.Rt(9865, J$.F(9857, J$.R(9841, 'reject', reject, 0), 0)(J$.R(9849, 'err', err, 0))));
                                                            J$.X1(9905, J$.F(9897, J$.R(9881, 'resolve', resolve, 0), 0)(J$.R(9889, 'r', r, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(11217, J$e);
                                                        } finally {
                                                            if (J$.Fr(11225))
                                                                continue jalangiLabel2279;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 9913)));
                                        } catch (J$e) {
                                            J$.Ex(11233, J$e);
                                        } finally {
                                            if (J$.Fr(11241))
                                                continue jalangiLabel2280;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 9969))));
                        } catch (J$e) {
                            J$.Ex(11249, J$e);
                        } finally {
                            if (J$.Fr(11257))
                                continue jalangiLabel2281;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 10033), 0));
            J$.X1(10145, J$.M(10137, J$.R(10097, 'define', define, 1), 'classMethod', 0)(J$.T(10105, 'execute', 21, false), J$.T(10129, {
                callback: J$.T(10113, true, 23, false),
                promise: J$.T(10121, false, 23, false)
            }, 11, false)));
            var initializeOrderedBulkOp = J$.X1(10265, J$.W(10257, 'initializeOrderedBulkOp', J$.T(10249, function (topology, collection, options) {
                jalangiLabel2282:
                    while (true) {
                        try {
                            J$.Fe(10209, arguments.callee, this, arguments);
                            arguments = J$.N(10217, 'arguments', arguments, 4);
                            topology = J$.N(10225, 'topology', topology, 4);
                            collection = J$.N(10233, 'collection', collection, 4);
                            options = J$.N(10241, 'options', options, 4);
                            return J$.X1(10201, J$.Rt(10193, J$.F(10185, J$.R(10153, 'OrderedBulkOperation', OrderedBulkOperation, 1), 1)(J$.R(10161, 'topology', topology, 0), J$.R(10169, 'collection', collection, 0), J$.R(10177, 'options', options, 0))));
                        } catch (J$e) {
                            J$.Ex(11265, J$e);
                        } finally {
                            if (J$.Fr(11273))
                                continue jalangiLabel2282;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 10209), initializeOrderedBulkOp, 3));
            J$.X1(10297, J$.P(10289, J$.R(10273, 'initializeOrderedBulkOp', initializeOrderedBulkOp, 1), 'OrderedBulkOperation', J$.R(10281, 'OrderedBulkOperation', OrderedBulkOperation, 1), 0));
            J$.X1(10329, J$.P(10321, J$.R(10305, 'module', module, 2), 'exports', J$.R(10313, 'initializeOrderedBulkOp', initializeOrderedBulkOp, 1), 0));
            J$.X1(10369, J$.P(10361, J$.G(10345, J$.R(10337, 'module', module, 2), 'exports', 0), 'Bulk', J$.R(10353, 'OrderedBulkOperation', OrderedBulkOperation, 1), 0));
        } catch (J$e) {
            J$.Ex(11281, J$e);
        } finally {
            if (J$.Sr(11289)) {
                J$.L();
                continue jalangiLabel2283;
            } else {
                J$.L();
                break jalangiLabel2283;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
