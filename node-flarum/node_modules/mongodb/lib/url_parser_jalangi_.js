J$.iids = {"8":[6,15,6,28],"9":[1,20,1,27],"10":[12,9,12,38],"16":[12,9,12,38],"17":[1,28,1,32],"18":[15,10,15,33],"24":[15,10,15,58],"25":[1,20,1,33],"26":[15,37,15,58],"32":[15,9,15,89],"33":[1,20,1,33],"34":[15,87,15,89],"40":[15,9,15,89],"41":[1,20,1,33],"42":[15,63,15,89],"48":[18,9,18,27],"49":[2,26,2,38],"50":[18,9,18,27],"56":[21,9,21,79],"57":[2,26,2,45],"58":[21,9,21,42],"64":[21,9,21,79],"65":[2,26,2,45],"66":[21,46,21,79],"72":[24,9,24,46],"73":[2,26,2,45],"74":[24,24,24,46],"80":[24,9,24,71],"81":[3,1,3,13],"82":[24,50,24,71],"88":[24,9,24,101],"89":[3,1,3,14],"90":[24,99,24,101],"96":[24,9,24,101],"97":[4,22,4,29],"98":[24,75,24,101],"104":[29,17,29,40],"105":[4,30,4,49],"106":[29,38,29,40],"112":[32,17,32,41],"113":[4,22,4,50],"114":[29,17,29,40],"120":[27,9,27,21],"121":[4,61,4,68],"122":[32,17,32,41],"128":[39,13,39,63],"129":[4,69,4,74],"130":[33,33,33,58],"136":[39,13,39,63],"137":[4,61,4,75],"138":[33,33,33,91],"144":[42,13,42,77],"145":[4,81,4,88],"146":[39,41,39,43],"152":[42,13,42,77],"153":[4,89,4,95],"154":[39,13,39,43],"160":[37,9,37,20],"161":[4,81,4,96],"162":[39,47,39,63],"168":[52,17,52,46],"169":[4,81,4,103],"170":[42,41,42,43],"176":[59,20,59,49],"177":[4,22,4,50],"178":[42,13,42,43],"184":[57,20,57,49],"185":[4,22,4,50],"186":[42,75,42,77],"192":[51,13,51,48],"193":[4,61,4,75],"194":[42,47,42,77],"200":[49,21,49,39],"201":[4,61,4,75],"202":[49,21,49,39],"208":[65,13,65,48],"209":[4,81,4,103],"210":[49,41,49,44],"216":[65,13,65,48],"217":[4,81,4,103],"224":[63,21,63,37],"225":[5,1,5,7],"226":[49,41,49,44],"232":[69,9,69,31],"233":[6,15,6,22],"234":[51,46,51,48],"240":[75,9,75,43],"241":[6,26,6,28],"242":[51,13,51,48],"248":[83,21,83,86],"249":[6,15,6,28],"250":[52,44,52,46],"256":[83,21,83,86],"257":[6,5,6,29],"258":[52,17,52,46],"264":[82,17,82,42],"265":[7,27,7,29],"266":[57,47,57,49],"272":[80,13,80,52],"273":[7,27,7,29],"274":[57,20,57,49],"280":[92,17,92,58],"281":[7,27,7,29],"282":[59,47,59,49],"288":[91,13,91,50],"289":[8,21,8,23],"290":[59,20,59,49],"296":[90,16,90,50],"297":[8,21,8,23],"298":[63,21,63,37],"304":[79,9,79,47],"305":[8,21,8,23],"306":[63,39,63,42],"312":[101,20,101,35],"313":[9,29,9,31],"320":[104,9,104,16],"321":[9,29,9,31],"322":[63,39,63,42],"328":[107,9,107,25],"329":[9,29,9,31],"330":[65,46,65,48],"336":[124,13,124,44],"337":[10,18,10,25],"338":[65,23,65,48],"344":[134,25,134,60],"345":[10,18,10,25],"346":[69,29,69,31],"352":[137,25,137,51],"353":[10,18,10,25],"354":[69,9,69,31],"360":[138,25,138,44],"361":[11,18,11,24],"362":[70,40,70,60],"368":[139,21,139,45],"369":[11,31,11,34],"370":[75,41,75,43],"376":[132,17,132,62],"377":[11,36,11,40],"378":[75,9,75,43],"384":[142,17,142,57],"385":[11,18,11,41],"386":[79,45,79,47],"387":[11,18,11,30],"392":[122,9,122,28],"393":[11,18,11,41],"394":[79,9,79,47],"400":[153,21,153,38],"401":[11,18,11,41],"402":[80,50,80,52],"408":[154,19,154,42],"409":[12,9,12,15],"410":[80,13,80,52],"416":[156,13,156,17],"417":[12,9,12,24],"418":[82,40,82,42],"424":[185,17,185,34],"425":[12,28,12,38],"426":[82,17,82,42],"432":[237,17,237,35],"433":[13,19,13,24],"434":[83,21,83,50],"440":[250,25,250,61],"441":[13,25,13,59],"442":[83,54,83,86],"448":[248,21,248,40],"449":[13,15,13,60],"450":[88,58,88,107],"456":[259,24,259,47],"457":[13,15,13,60],"458":[90,48,90,50],"464":[247,17,247,34],"465":[13,9,13,61],"466":[90,16,90,50],"472":[262,17,262,61],"473":[15,10,15,16],"474":[91,13,91,50],"480":[262,17,262,86],"481":[15,10,15,25],"482":[92,17,92,58],"488":[262,17,262,108],"489":[15,29,15,33],"490":[107,9,107,25],"496":[262,17,262,134],"497":[15,37,15,43],"498":[123,42,123,89],"504":[262,17,262,154],"505":[15,37,15,52],"506":[123,91,123,132],"512":[262,17,262,154],"513":[15,56,15,58],"514":[124,42,124,44],"520":[274,17,274,50],"521":[15,63,15,66],"522":[124,13,124,44],"528":[281,17,281,47],"529":[15,75,15,82],"530":[138,25,138,44],"536":[288,17,288,45],"537":[15,63,15,83],"538":[139,43,139,45],"539":[15,63,15,74],"544":[288,17,288,45],"545":[15,88,15,89],"546":[139,21,139,45],"552":[293,29,293,44],"553":[16,19,16,24],"554":[142,37,142,48],"560":[159,17,159,21],"561":[16,25,16,81],"562":[142,37,142,56],"568":[160,14,160,23],"569":[16,15,16,82],"570":[144,33,144,44],"576":[161,14,161,24],"577":[16,15,16,82],"578":[144,33,144,52],"584":[165,14,165,27],"585":[16,9,16,83],"586":[150,20,150,29],"592":[166,14,166,24],"593":[18,9,18,15],"594":[156,13,156,17],"600":[170,14,170,29],"601":[18,9,18,20],"602":[162,38,162,53],"608":[171,14,171,30],"609":[18,24,18,27],"610":[163,33,163,48],"616":[174,14,174,27],"617":[19,19,19,24],"618":[172,44,172,59],"624":[176,14,176,29],"625":[19,25,19,60],"626":[185,17,185,34],"632":[178,14,178,33],"633":[19,15,19,61],"634":[190,33,190,48],"640":[180,14,180,34],"641":[19,15,19,61],"642":[191,41,191,56],"648":[182,14,182,34],"649":[19,9,19,62],"650":[194,41,194,56],"656":[184,14,184,19],"657":[21,10,21,15],"658":[195,48,195,63],"664":[193,14,193,27],"665":[21,16,21,24],"666":[209,52,209,67],"672":[197,14,197,26],"673":[21,25,21,31],"674":[212,31,212,46],"680":[198,14,198,23],"681":[21,25,21,36],"682":[215,27,215,42],"688":[201,14,201,29],"689":[21,38,21,40],"690":[218,30,218,45],"696":[204,14,204,23],"697":[21,16,21,41],"698":[222,39,222,54],"704":[207,14,207,29],"705":[21,10,21,42],"706":[247,17,247,34],"712":[208,14,208,30],"713":[21,46,21,54],"714":[248,21,248,40],"720":[211,14,211,21],"721":[21,55,21,61],"722":[250,59,250,61],"728":[214,14,214,23],"729":[21,55,21,66],"730":[250,25,250,61],"736":[217,14,217,20],"737":[21,68,21,70],"738":[259,24,259,47],"744":[220,14,220,28],"745":[21,46,21,71],"746":[262,17,262,34],"752":[221,14,221,29],"753":[21,74,21,79],"754":[262,38,262,61],"760":[224,14,224,32],"761":[22,19,22,24],"762":[262,65,262,86],"768":[227,14,227,32],"769":[22,25,22,73],"770":[262,90,262,108],"776":[231,14,231,31],"777":[22,15,22,74],"778":[262,112,262,134],"784":[235,14,235,17],"785":[22,15,22,74],"786":[262,138,262,154],"792":[240,14,240,26],"793":[22,9,22,75],"794":[274,17,274,38],"800":[243,14,243,33],"801":[24,9,24,15],"802":[274,17,274,50],"808":[246,14,246,29],"809":[24,9,24,20],"810":[281,17,281,47],"816":[266,14,266,39],"817":[24,24,24,30],"818":[288,17,288,30],"824":[277,14,277,26],"825":[24,24,24,35],"826":[288,34,288,45],"832":[280,14,280,30],"833":[24,24,24,42],"834":[293,29,293,44],"840":[285,14,285,34],"841":[24,45,24,46],"842":[293,46,293,49],"848":[303,9,303,52],"849":[24,50,24,56],"856":[306,10,306,47],"857":[24,50,24,61],"858":[293,46,293,49],"864":[306,53,306,105],"865":[24,62,24,63],"866":[303,9,303,52],"872":[306,53,306,131],"873":[24,50,24,64],"874":[306,25,306,27],"880":[306,9,306,132],"881":[24,68,24,71],"882":[306,10,306,27],"888":[306,9,306,132],"889":[24,75,24,78],"890":[306,31,306,47],"896":[308,9,308,34],"897":[24,87,24,94],"898":[306,53,306,78],"905":[24,75,24,95],"906":[306,82,306,105],"907":[24,75,24,86],"913":[24,100,24,101],"914":[306,109,306,131],"921":[25,19,25,24],"922":[308,9,308,34],"929":[25,25,25,77],"937":[25,15,25,78],"945":[25,15,25,78],"953":[25,9,25,79],"961":[27,9,27,15],"969":[27,9,27,21],"977":[28,26,28,32],"985":[28,26,28,38],"993":[29,17,29,21],"1001":[29,30,29,33],"1009":[29,17,29,34],"1011":[29,17,29,29],"1017":[29,39,29,40],"1025":[30,27,30,32],"1033":[30,33,30,66],"1041":[30,23,30,67],"1049":[30,23,30,67],"1057":[30,17,30,68],"1065":[32,17,32,23],"1073":[32,17,32,29],"1081":[32,30,32,34],"1089":[32,17,32,35],"1097":[32,39,32,41],"1105":[33,27,33,32],"1113":[33,33,33,51],"1121":[33,54,33,58],"1129":[33,61,33,91],"1137":[33,23,33,92],"1145":[33,23,33,92],"1153":[33,17,33,93],"1161":[28,26,28,38],"1169":[28,9,35,10],"1177":[28,9,35,10],"1185":[37,9,37,15],"1193":[37,9,37,20],"1201":[38,21,38,27],"1209":[38,21,38,32],"1217":[38,39,38,42],"1225":[38,21,38,43],"1227":[38,21,38,38],"1233":[38,21,38,43],"1241":[38,21,38,43],"1249":[39,13,39,16],"1257":[39,25,39,31],"1265":[39,25,39,36],"1273":[39,13,39,37],"1275":[39,13,39,24],"1281":[39,42,39,43],"1289":[39,47,39,52],"1297":[39,47,39,59],"1305":[39,62,39,63],"1313":[40,23,40,28],"1321":[40,29,40,83],"1329":[40,19,40,84],"1337":[40,19,40,84],"1345":[40,13,40,85],"1353":[42,13,42,16],"1361":[42,25,42,31],"1369":[42,25,42,36],"1377":[42,13,42,37],"1379":[42,13,42,24],"1385":[42,42,42,43],"1393":[42,47,42,53],"1401":[42,47,42,58],"1409":[42,67,42,70],"1417":[42,47,42,71],"1419":[42,47,42,66],"1425":[42,76,42,77],"1433":[43,23,43,28],"1441":[43,29,43,71],"1449":[43,19,43,72],"1457":[43,19,43,72],"1465":[43,13,43,73],"1473":[46,17,46,20],"1481":[46,27,46,30],"1489":[46,17,46,31],"1491":[46,17,46,26],"1497":[46,17,46,39],"1499":[46,17,46,37],"1505":[46,17,46,39],"1513":[46,17,46,39],"1521":[47,19,47,24],"1529":[47,31,47,34],"1537":[47,19,47,35],"1539":[47,19,47,30],"1545":[47,19,47,35],"1553":[47,19,47,35],"1561":[48,17,48,19],"1569":[48,17,48,19],"1577":[48,17,48,19],"1585":[49,18,49,19],"1593":[49,18,49,19],"1601":[49,18,49,19],"1609":[49,21,49,22],"1617":[49,25,49,32],"1625":[49,25,49,39],"1641":[49,41,49,42],"1649":[49,41,49,44],"1665":[50,26,50,33],"1673":[50,34,50,35],"1681":[50,26,50,36],"1689":[50,26,50,36],"1697":[50,26,50,36],"1705":[51,13,51,23],"1713":[51,32,51,41],"1721":[51,13,51,42],"1723":[51,13,51,31],"1729":[51,47,51,48],"1737":[52,17,52,27],"1745":[52,36,52,39],"1753":[52,17,52,40],"1755":[52,17,52,35],"1761":[52,45,52,46],"1769":[53,17,53,22],"1777":[53,28,53,38],"1785":[53,45,53,48],"1793":[53,28,53,49],"1795":[53,28,53,44],"1801":[53,28,53,55],"1803":[53,28,53,53],"1809":[53,17,53,56],"1811":[53,17,53,27],"1817":[53,17,53,57],"1825":[55,17,55,22],"1833":[55,28,55,38],"1841":[55,46,55,58],"1849":[55,46,55,65],"1857":[55,28,55,66],"1859":[55,28,55,45],"1865":[55,17,55,67],"1867":[55,17,55,27],"1873":[55,17,55,68],"1881":[57,20,57,30],"1889":[57,39,57,42],"1897":[57,20,57,43],"1899":[57,20,57,38],"1905":[57,48,57,49],"1913":[58,13,58,18],"1921":[58,24,58,34],"1929":[58,41,58,44],"1937":[58,24,58,45],"1939":[58,24,58,40],"1945":[58,24,58,53],"1947":[58,24,58,51],"1953":[58,13,58,54],"1955":[58,13,58,23],"1961":[58,13,58,55],"1969":[59,20,59,30],"1977":[59,39,59,42],"1985":[59,20,59,43],"1987":[59,20,59,38],"1993":[59,48,59,49],"2001":[60,13,60,18],"2009":[60,24,60,34],"2017":[60,24,60,41],"2019":[60,24,60,39],"2025":[60,13,60,42],"2027":[60,13,60,23],"2033":[60,13,60,43],"2041":[63,18,63,19],"2049":[63,18,63,19],"2057":[63,18,63,19],"2065":[63,21,63,22],"2073":[63,25,63,30],"2081":[63,25,63,37],"2097":[63,39,63,40],"2105":[63,39,63,42],"2121":[64,17,64,23],"2129":[64,30,64,31],"2137":[64,32,64,46],"2145":[64,48,64,53],"2153":[64,54,64,55],"2161":[64,48,64,56],"2169":[64,48,64,63],"2171":[64,48,64,61],"2177":[64,30,64,64],"2185":[64,17,64,65],"2187":[64,17,64,29],"2193":[64,17,64,65],"2201":[64,17,64,65],"2209":[65,13,65,14],"2217":[65,13,65,19],"2225":[65,23,65,24],"2233":[65,23,65,29],"2241":[65,38,65,41],"2249":[65,23,65,42],"2251":[65,23,65,37],"2257":[65,47,65,48],"2265":[66,23,66,28],"2273":[66,29,66,62],"2281":[66,19,66,63],"2289":[66,19,66,63],"2297":[66,13,66,64],"2305":[69,9,69,12],"2313":[69,21,69,24],"2321":[69,9,69,25],"2323":[69,9,69,20],"2329":[69,30,69,31],"2337":[70,29,70,32],"2345":[70,40,70,43],"2353":[70,52,70,55],"2361":[70,40,70,56],"2363":[70,40,70,51],"2369":[70,59,70,60],"2377":[70,29,70,61],"2379":[70,29,70,39],"2385":[70,29,70,61],"2393":[70,9,70,62],"2401":[71,27,71,30],"2409":[71,41,71,53],"2417":[71,41,71,60],"2425":[71,62,71,65],"2433":[71,74,71,77],"2441":[71,62,71,78],"2443":[71,62,71,73],"2449":[71,27,71,79],"2451":[71,27,71,40],"2457":[71,27,71,79],"2465":[71,9,71,80],"2473":[73,27,73,30],"2481":[73,41,73,53],"2489":[73,41,73,60],"2497":[73,27,73,61],"2499":[73,27,73,40],"2505":[73,27,73,61],"2513":[73,9,73,62],"2521":[75,9,75,24],"2529":[75,33,75,36],"2537":[75,9,75,37],"2539":[75,9,75,32],"2545":[75,42,75,43],"2553":[76,21,76,36],"2561":[76,43,76,46],"2569":[76,21,76,47],"2571":[76,21,76,42],"2577":[76,48,76,49],"2585":[76,21,76,50],"2593":[76,21,76,50],"2601":[76,9,76,51],"2609":[77,27,77,42],"2617":[77,49,77,52],"2625":[77,27,77,53],"2627":[77,27,77,48],"2633":[77,54,77,55],"2641":[77,27,77,56],"2649":[77,27,77,56],"2657":[77,9,77,57],"2665":[79,9,79,24],"2673":[79,33,79,40],"2681":[79,9,79,41],"2683":[79,9,79,32],"2689":[79,46,79,47],"2697":[80,13,80,28],"2705":[80,37,80,45],"2713":[80,13,80,46],"2715":[80,13,80,36],"2721":[80,51,80,52],"2729":[81,22,81,37],"2737":[81,44,81,52],"2745":[81,22,81,53],"2747":[81,22,81,43],"2753":[81,54,81,55],"2761":[81,22,81,56],"2769":[81,22,81,56],"2777":[81,13,81,57],"2785":[82,17,82,23],"2793":[82,32,82,35],"2801":[82,17,82,36],"2803":[82,17,82,31],"2809":[82,41,82,42],"2817":[83,21,83,27],"2825":[83,34,83,37],"2833":[83,21,83,38],"2835":[83,21,83,33],"2841":[83,21,83,45],"2849":[83,49,83,50],"2857":[83,54,83,60],"2865":[83,67,83,70],"2873":[83,54,83,71],"2875":[83,54,83,66],"2881":[83,72,83,73],"2889":[83,54,83,74],"2897":[83,54,83,81],"2905":[83,85,83,86],"2913":[84,31,84,36],"2921":[84,37,84,85],"2929":[84,27,84,86],"2937":[84,27,84,86],"2945":[84,21,84,87],"2953":[86,27,86,32],"2961":[86,33,86,67],"2969":[86,23,86,68],"2977":[86,23,86,68],"2985":[86,17,86,69],"2993":[88,31,88,46],"3001":[88,53,88,56],"3009":[88,58,88,73],"3017":[88,82,88,89],"3025":[88,58,88,90],"3027":[88,58,88,81],"3033":[88,93,88,100],"3041":[88,93,88,107],"3049":[88,31,88,108],"3051":[88,31,88,52],"3057":[88,31,88,108],"3065":[88,13,88,109],"3073":[90,16,90,31],"3081":[90,40,90,43],"3089":[90,16,90,44],"3091":[90,16,90,39],"3097":[90,49,90,50],"3105":[91,13,91,28],"3113":[91,35,91,38],"3121":[91,13,91,39],"3123":[91,13,91,34],"3129":[91,13,91,46],"3137":[91,49,91,50],"3145":[92,17,92,32],"3153":[92,39,92,42],"3161":[92,17,92,43],"3163":[92,17,92,38],"3169":[92,44,92,45],"3177":[92,17,92,46],"3185":[92,17,92,53],"3193":[92,57,92,58],"3201":[93,27,93,32],"3209":[93,33,93,81],"3217":[93,23,93,82],"3225":[93,23,93,82],"3233":[93,17,93,83],"3241":[95,23,95,28],"3249":[95,29,95,63],"3257":[95,19,95,64],"3265":[95,19,95,64],"3273":[95,13,95,65],"3281":[97,18,97,33],"3289":[97,40,97,43],"3297":[97,18,97,44],"3299":[97,18,97,39],"3305":[97,45,97,46],"3313":[97,18,97,47],"3321":[97,18,97,47],"3329":[97,9,97,48],"3337":[98,27,98,42],"3345":[98,49,98,52],"3353":[98,27,98,53],"3355":[98,27,98,48],"3361":[98,54,98,55],"3369":[98,27,98,56],"3377":[98,27,98,56],"3385":[98,9,98,57],"3393":[100,18,100,20],"3401":[100,18,100,20],"3409":[100,18,100,20],"3417":[101,20,101,29],"3425":[101,33,101,35],"3433":[101,20,101,35],"3441":[101,20,101,35],"3449":[102,16,102,24],"3457":[102,31,102,34],"3465":[102,36,102,37],"3473":[102,16,102,38],"3475":[102,16,102,30],"3481":[102,16,102,38],"3489":[102,16,102,38],"3497":[103,5,103,9],"3505":[103,10,103,11],"3513":[103,15,103,33],"3521":[103,34,103,38],"3529":[103,39,103,40],"3537":[103,34,103,41],"3545":[103,15,103,42],"3553":[103,5,103,42],"3561":[103,5,103,43],"3569":[104,9,104,13],"3577":[104,14,104,15],"3585":[104,9,104,16],"3593":[105,9,105,13],"3601":[105,14,105,15],"3609":[105,19,105,37],"3617":[105,38,105,42],"3625":[105,43,105,44],"3633":[105,38,105,45],"3641":[105,19,105,46],"3649":[105,9,105,46],"3657":[105,9,105,47],"3665":[107,9,107,13],"3673":[107,9,107,20],"3681":[107,24,107,25],"3689":[108,9,108,15],"3697":[109,19,109,23],"3705":[109,24,109,25],"3713":[109,19,109,26],"3721":[110,23,110,27],"3729":[110,28,110,29],"3737":[110,23,110,30],"3745":[108,23,111,10],"3753":[108,9,111,10],"3761":[108,9,111,11],"3769":[115,42,115,44],"3777":[115,25,115,46],"3785":[115,25,115,46],"3793":[115,25,115,46],"3801":[116,45,116,47],"3809":[116,21,116,49],"3817":[116,21,116,49],"3825":[116,21,116,49],"3833":[117,50,117,52],"3841":[117,33,117,54],"3849":[117,33,117,54],"3857":[117,33,117,54],"3865":[118,5,118,11],"3873":[118,29,118,42],"3881":[118,5,118,42],"3889":[118,5,118,43],"3897":[119,5,119,11],"3905":[119,25,119,34],"3913":[119,5,119,34],"3921":[119,5,119,35],"3929":[120,5,120,11],"3937":[120,25,120,46],"3945":[120,5,120,46],"3953":[120,5,120,47],"3961":[121,5,121,11],"3969":[121,29,121,31],"3977":[121,5,121,31],"3985":[121,5,121,32],"3993":[122,9,122,12],"4001":[122,19,122,27],"4009":[122,9,122,28],"4011":[122,9,122,18],"4017":[123,28,123,31],"4025":[123,42,123,45],"4033":[123,54,123,66],"4041":[123,42,123,67],"4043":[123,42,123,53],"4049":[123,70,123,82],"4057":[123,70,123,89],"4065":[123,91,123,94],"4073":[123,107,123,114],"4081":[123,91,123,115],"4083":[123,91,123,106],"4089":[123,118,123,125],"4097":[123,118,123,132],"4105":[123,28,123,133],"4107":[123,28,123,41],"4113":[123,28,123,133],"4121":[123,28,123,133],"4129":[124,13,124,25],"4137":[124,34,124,37],"4145":[124,13,124,38],"4147":[124,13,124,33],"4153":[124,43,124,44],"4161":[125,28,125,40],"4169":[125,47,125,50],"4177":[125,28,125,51],"4179":[125,28,125,46],"4185":[125,52,125,53],"4193":[125,28,125,54],"4201":[125,28,125,54],"4209":[125,13,125,55],"4217":[126,37,126,49],"4225":[126,20,126,51],"4233":[126,19,126,52],"4241":[126,19,126,52],"4249":[126,9,126,53],"4257":[128,20,128,35],"4265":[128,20,128,35],"4273":[128,9,128,36],"4281":[129,35,129,37],"4289":[129,35,129,37],"4297":[129,35,129,37],"4305":[130,19,130,27],"4313":[130,34,130,37],"4321":[130,19,130,38],"4323":[130,19,130,33],"4329":[132,29,132,54],"4337":[132,60,132,61],"4345":[132,29,132,62],"4347":[132,29,132,59],"4353":[132,29,132,62],"4361":[133,25,133,34],"4369":[133,35,133,36],"4377":[133,25,133,37],"4385":[133,25,133,37],"4393":[133,17,133,38],"4401":[134,25,134,33],"4409":[134,34,134,43],"4417":[134,44,134,45],"4425":[134,34,134,46],"4433":[134,48,134,50],"4441":[134,25,134,51],"4449":[134,55,134,60],"4457":[134,25,134,60],"4465":[134,17,134,61],"4473":[136,32,136,33],"4481":[136,40,136,43],"4489":[136,45,136,46],"4497":[136,32,136,47],"4499":[136,32,136,39],"4505":[136,32,136,47],"4513":[136,32,136,47],"4521":[137,25,137,33],"4529":[137,34,137,35],"4537":[137,25,137,36],"4545":[137,40,137,51],"4553":[137,25,137,51],"4561":[137,17,137,52],"4569":[138,25,138,33],"4577":[138,34,138,35],"4585":[138,25,138,36],"4593":[138,40,138,44],"4601":[138,47,138,55],"4609":[138,56,138,64],"4617":[138,65,138,66],"4625":[138,56,138,67],"4633":[138,69,138,71],"4641":[138,47,138,72],"4649":[138,75,138,80],"4657":[138,25,138,80],"4665":[138,17,138,81],"4673":[139,21,139,26],"4681":[139,35,139,38],"4689":[139,21,139,39],"4691":[139,21,139,34],"4697":[139,44,139,45],"4705":[140,29,140,34],"4713":[140,41,140,45],"4721":[140,29,140,46],"4723":[140,29,140,40],"4729":[140,47,140,48],"4737":[140,29,140,49],"4745":[140,29,140,49],"4753":[140,21,140,50],"4761":[142,17,142,36],"4769":[142,37,142,42],"4777":[142,45,142,48],"4785":[142,51,142,56],"4793":[142,17,142,57],"4801":[143,24,143,28],"4809":[143,24,143,28],"4817":[143,17,143,29],"4825":[144,13,144,32],"4833":[144,33,144,38],"4841":[144,41,144,44],"4849":[144,47,144,52],"4857":[144,56,144,57],"4865":[144,13,144,57],"4873":[144,13,144,58],"4881":[146,23,146,28],"4889":[147,23,147,28],"4897":[145,20,148,14],"4905":[145,20,148,14],"4913":[145,13,148,15],"4921":[130,43,149,10],"4929":[130,43,149,10],"4937":[130,43,149,10],"4945":[130,43,149,10],"4953":[130,43,149,10],"4961":[130,43,149,10],"4969":[130,43,149,10],"4977":[130,43,149,10],"4985":[130,19,149,11],"4987":[130,19,130,42],"4993":[150,20,150,21],"5001":[150,25,150,29],"5009":[150,20,150,29],"5017":[150,13,150,30],"5025":[149,19,151,10],"5033":[149,19,151,10],"5041":[149,19,151,10],"5049":[149,19,151,10],"5057":[130,19,151,11],"5059":[130,19,149,18],"5065":[130,19,151,11],"5073":[130,9,151,12],"5081":[153,5,153,11],"5089":[153,21,153,27],"5097":[153,31,153,38],"5105":[153,5,153,38],"5113":[153,5,153,39],"5121":[154,19,154,36],"5129":[154,40,154,42],"5137":[154,50,154,56],"5145":[154,18,154,57],"5147":[154,18,154,49],"5153":[154,18,154,57],"5161":[154,5,154,58],"5169":[155,5,155,15],"5177":[156,14,156,17],"5185":[157,13,157,20],"5193":[157,13,157,20],"5201":[158,24,158,27],"5209":[158,34,158,37],"5217":[158,24,158,38],"5219":[158,24,158,33],"5225":[158,47,158,55],"5233":[158,56,158,57],"5241":[158,47,158,58],"5249":[158,68,158,76],"5257":[158,77,158,78],"5265":[158,68,158,79],"5273":[158,24,158,38],"5281":[158,24,158,38],"5289":[158,47,158,58],"5297":[158,47,158,58],"5305":[158,68,158,79],"5313":[158,68,158,79],"5321":[159,17,159,21],"5329":[160,14,160,23],"5337":[162,13,162,26],"5345":[162,38,162,43],"5353":[162,47,162,53],"5361":[162,13,162,53],"5369":[162,13,162,54],"5377":[163,13,163,22],"5385":[163,33,163,38],"5393":[163,42,163,48],"5401":[163,13,163,48],"5409":[163,13,163,49],"5417":[161,14,161,24],"5425":[165,14,165,27],"5433":[167,13,167,26],"5441":[167,38,167,46],"5449":[167,47,167,52],"5457":[167,54,167,56],"5465":[167,38,167,57],"5473":[167,13,167,57],"5481":[167,13,167,58],"5489":[168,13,168,34],"5497":[168,46,168,54],"5505":[168,55,168,60],"5513":[168,62,168,64],"5521":[168,46,168,65],"5529":[168,13,168,65],"5537":[168,13,168,66],"5545":[166,14,166,24],"5553":[170,14,170,29],"5561":[172,13,172,26],"5569":[172,44,172,49],"5577":[172,53,172,59],"5585":[172,13,172,59],"5593":[172,13,172,60],"5601":[171,14,171,30],"5609":[175,23,175,28],"5617":[175,29,175,56],"5625":[175,19,175,57],"5633":[175,19,175,57],"5641":[175,13,175,58],"5649":[174,14,174,27],"5657":[177,23,177,28],"5665":[177,29,177,58],"5673":[177,19,177,59],"5681":[177,19,177,59],"5689":[177,13,177,60],"5697":[176,14,176,29],"5705":[179,23,179,28],"5713":[179,29,179,62],"5721":[179,19,179,63],"5729":[179,19,179,63],"5737":[179,13,179,64],"5745":[178,14,178,33],"5753":[181,23,181,28],"5761":[181,29,181,63],"5769":[181,19,181,64],"5777":[181,19,181,64],"5785":[181,13,181,65],"5793":[180,14,180,34],"5801":[183,23,183,28],"5809":[183,29,183,63],"5817":[183,19,183,64],"5825":[183,19,183,64],"5833":[183,13,183,65],"5841":[182,14,182,34],"5849":[185,17,185,22],"5857":[185,26,185,34],"5865":[186,17,186,30],"5873":[186,37,186,42],"5881":[186,17,186,42],"5889":[186,17,186,43],"5897":[187,17,187,38],"5905":[187,45,187,50],"5913":[187,17,187,50],"5921":[187,17,187,51],"5929":[190,13,190,26],"5937":[190,33,190,38],"5945":[190,42,190,48],"5953":[190,13,190,48],"5961":[190,13,190,49],"5969":[191,13,191,34],"5977":[191,41,191,46],"5985":[191,50,191,56],"5993":[191,13,191,56],"6001":[191,13,191,57],"6009":[184,14,184,19],"6017":[194,13,194,26],"6025":[194,41,194,46],"6033":[194,50,194,56],"6041":[194,13,194,56],"6049":[194,13,194,57],"6057":[195,13,195,33],"6065":[195,48,195,53],"6073":[195,57,195,63],"6081":[195,13,195,63],"6089":[195,13,195,64],"6097":[193,14,193,27],"6105":[197,14,197,26],"6113":[199,13,199,34],"6121":[199,45,199,50],"6129":[199,13,199,50],"6137":[199,13,199,51],"6145":[198,14,198,23],"6153":[202,13,202,34],"6161":[202,51,202,59],"6169":[202,60,202,65],"6177":[202,67,202,69],"6185":[202,51,202,70],"6193":[202,13,202,70],"6201":[202,13,202,71],"6209":[201,14,201,29],"6217":[205,13,205,34],"6225":[205,45,205,53],"6233":[205,54,205,59],"6241":[205,61,205,63],"6249":[205,45,205,64],"6257":[205,13,205,64],"6265":[205,13,205,65],"6273":[204,14,204,23],"6281":[207,14,207,29],"6289":[209,13,209,34],"6297":[209,52,209,57],"6305":[209,61,209,67],"6313":[209,13,209,67],"6321":[209,13,209,68],"6329":[208,14,208,30],"6337":[212,13,212,22],"6345":[212,31,212,36],"6353":[212,40,212,46],"6361":[212,13,212,46],"6369":[212,13,212,47],"6377":[211,14,211,21],"6385":[215,13,215,22],"6393":[215,27,215,32],"6401":[215,36,215,42],"6409":[215,13,215,42],"6417":[215,13,215,43],"6425":[214,14,214,23],"6433":[218,13,218,22],"6441":[218,30,218,35],"6449":[218,39,218,45],"6457":[218,13,218,45],"6465":[218,13,218,46],"6473":[217,14,217,20],"6481":[220,14,220,28],"6489":[222,13,222,22],"6497":[222,39,222,44],"6505":[222,48,222,54],"6513":[222,13,222,54],"6521":[222,13,222,55],"6529":[221,14,221,29],"6537":[225,13,225,22],"6545":[225,46,225,51],"6553":[225,37,225,53],"6561":[225,13,225,53],"6569":[225,13,225,54],"6577":[224,14,224,32],"6585":[228,13,228,26],"6593":[228,13,228,40],"6601":[228,60,228,68],"6609":[228,69,228,74],"6617":[228,76,228,78],"6625":[228,60,228,79],"6633":[228,13,228,79],"6641":[228,13,228,80],"6649":[229,13,229,34],"6657":[229,13,229,48],"6665":[229,68,229,76],"6673":[229,77,229,82],"6681":[229,84,229,86],"6689":[229,68,229,87],"6697":[229,13,229,87],"6705":[229,13,229,88],"6713":[227,14,227,32],"6721":[232,13,232,26],"6729":[232,13,232,40],"6737":[232,59,232,67],"6745":[232,68,232,73],"6753":[232,75,232,77],"6761":[232,59,232,78],"6769":[232,13,232,78],"6777":[232,13,232,79],"6785":[233,13,233,34],"6793":[233,13,233,48],"6801":[233,67,233,75],"6809":[233,76,233,81],"6817":[233,83,233,85],"6825":[233,67,233,86],"6833":[233,13,233,86],"6841":[233,13,233,87],"6849":[231,14,231,31],"6857":[236,13,236,22],"6865":[236,27,236,35],"6873":[236,36,236,41],"6881":[236,43,236,45],"6889":[236,27,236,46],"6897":[236,13,236,46],"6905":[236,13,236,47],"6913":[237,17,237,22],"6921":[237,23,237,32],"6929":[237,23,237,34],"6937":[237,17,237,35],"6945":[238,17,238,26],"6953":[238,31,238,36],"6961":[238,17,238,36],"6969":[238,17,238,37],"6977":[235,14,235,17],"6985":[241,13,241,22],"6993":[241,36,241,41],"7001":[241,13,241,41],"7009":[241,13,241,42],"7017":[240,14,240,26],"7025":[244,13,244,22],"7033":[244,43,244,48],"7041":[244,13,244,48],"7049":[244,13,244,49],"7057":[243,14,243,33],"7065":[247,17,247,22],"7073":[247,26,247,34],"7081":[248,21,248,27],"7089":[248,21,248,32],"7097":[248,36,248,40],"7105":[249,45,249,63],"7113":[249,64,249,72],"7121":[249,45,249,73],"7129":[249,45,249,73],"7137":[249,45,249,73],"7145":[250,25,250,42],"7153":[250,51,250,54],"7161":[250,25,250,55],"7163":[250,25,250,50],"7169":[250,60,250,61],"7177":[251,35,251,40],"7185":[251,41,251,79],"7193":[251,31,251,80],"7201":[251,31,251,80],"7209":[251,25,251,81],"7217":[252,21,252,27],"7225":[253,31,253,48],"7233":[254,35,254,39],"7241":[252,35,255,22],"7249":[252,21,255,22],"7257":[252,21,255,23],"7265":[257,21,257,27],"7273":[257,21,257,32],"7281":[257,40,257,58],"7289":[257,59,257,65],"7297":[257,59,257,70],"7305":[257,59,257,75],"7313":[257,40,257,76],"7321":[257,21,257,76],"7329":[257,21,257,77],"7337":[259,24,259,29],"7345":[259,33,259,47],"7353":[260,17,260,23],"7361":[260,39,260,57],"7369":[260,58,260,66],"7377":[260,39,260,67],"7385":[260,31,260,69],"7393":[260,17,260,69],"7401":[260,17,260,70],"7409":[262,17,262,22],"7417":[262,26,262,34],"7425":[262,38,262,43],"7433":[262,47,262,61],"7441":[262,65,262,70],"7449":[262,74,262,86],"7457":[262,90,262,95],"7465":[262,99,262,108],"7473":[262,112,262,117],"7481":[262,121,262,134],"7489":[262,138,262,143],"7497":[262,147,262,154],"7505":[263,27,263,32],"7513":[263,33,263,133],"7521":[263,23,263,134],"7529":[263,23,263,134],"7537":[263,17,263,135],"7545":[264,13,264,22],"7553":[264,39,264,44],"7561":[264,13,264,44],"7569":[264,13,264,45],"7577":[246,14,246,29],"7585":[267,26,267,31],"7593":[267,38,267,41],"7601":[267,26,267,42],"7603":[267,26,267,37],"7609":[267,26,267,42],"7617":[267,26,267,42],"7625":[268,21,268,23],"7633":[268,21,268,23],"7641":[268,21,268,23],"7649":[269,13,269,19],"7657":[270,25,270,26],"7665":[270,33,270,36],"7673":[270,25,270,37],"7675":[270,25,270,32],"7681":[270,25,270,37],"7689":[270,25,270,37],"7697":[271,17,271,18],"7705":[271,19,271,20],"7713":[271,21,271,22],"7721":[271,19,271,23],"7729":[271,27,271,28],"7737":[271,29,271,30],"7745":[271,27,271,31],"7753":[271,17,271,31],"7761":[271,17,271,32],"7769":[269,28,272,14],"7777":[269,28,272,14],"7785":[269,28,272,14],"7793":[269,28,272,14],"7801":[269,28,272,14],"7809":[269,13,272,15],"7811":[269,13,269,27],"7817":[269,13,272,16],"7825":[273,13,273,22],"7833":[273,49,273,50],"7841":[273,13,273,50],"7849":[273,13,273,51],"7857":[274,24,274,25],"7865":[274,24,274,38],"7873":[274,42,274,50],"7881":[275,17,275,26],"7889":[275,47,275,48],"7897":[275,47,275,61],"7905":[275,17,275,61],"7913":[275,17,275,62],"7921":[266,14,266,39],"7929":[278,13,278,22],"7937":[278,34,278,42],"7945":[278,43,278,48],"7953":[278,50,278,52],"7961":[278,34,278,53],"7969":[278,13,278,53],"7977":[278,13,278,54],"7985":[277,14,277,26],"7993":[281,18,281,32],"8001":[281,41,281,46],"8009":[281,18,281,47],"8011":[281,18,281,40],"8017":[282,27,282,32],"8025":[282,33,282,126],"8033":[282,23,282,127],"8041":[282,23,282,127],"8049":[282,17,282,128],"8057":[283,13,283,22],"8065":[283,40,283,45],"8073":[283,13,283,45],"8081":[283,13,283,46],"8089":[280,14,280,30],"8097":[286,21,286,39],"8105":[286,40,286,45],"8113":[286,21,286,46],"8121":[286,21,286,46],"8129":[286,13,286,47],"8137":[287,29,287,31],"8145":[287,29,287,31],"8153":[287,29,287,31],"8161":[288,17,288,22],"8169":[288,26,288,30],"8177":[288,34,288,39],"8185":[288,43,288,45],"8193":[289,17,289,26],"8201":[289,17,289,47],"8209":[289,53,289,62],"8217":[289,17,289,63],"8219":[289,17,289,52],"8225":[289,17,289,64],"8233":[292,24,292,29],"8241":[292,36,292,40],"8249":[292,24,292,41],"8251":[292,24,292,35],"8257":[292,24,292,41],"8265":[292,24,292,41],"8273":[293,26,293,27],"8281":[293,26,293,27],"8289":[293,26,293,27],"8297":[293,29,293,30],"8305":[293,33,293,37],"8313":[293,33,293,44],"8329":[293,46,293,47],"8337":[293,46,293,49],"8353":[294,29,294,33],"8361":[294,34,294,35],"8369":[294,29,294,36],"8377":[294,29,294,43],"8379":[294,29,294,41],"8385":[294,50,294,54],"8393":[294,29,294,55],"8395":[294,29,294,49],"8401":[294,29,294,55],"8409":[294,29,294,55],"8417":[295,17,295,26],"8425":[295,27,295,32],"8433":[295,33,295,34],"8441":[295,27,295,35],"8449":[295,39,295,44],"8457":[295,45,295,46],"8465":[295,39,295,47],"8473":[295,17,295,47],"8481":[295,17,295,48],"8489":[297,13,297,22],"8497":[297,13,297,43],"8505":[297,49,297,58],"8513":[297,13,297,59],"8515":[297,13,297,48],"8521":[297,13,297,60],"8529":[285,14,285,34],"8537":[155,24,302,6],"8545":[155,24,302,6],"8553":[155,24,302,6],"8561":[155,24,302,6],"8569":[155,24,302,6],"8577":[155,24,302,6],"8585":[155,24,302,6],"8593":[155,24,302,6],"8601":[155,24,302,6],"8609":[155,24,302,6],"8617":[155,24,302,6],"8625":[155,24,302,6],"8633":[155,24,302,6],"8641":[155,24,302,6],"8649":[155,5,302,7],"8651":[155,5,155,23],"8657":[155,5,302,8],"8665":[303,9,303,18],"8673":[303,9,303,39],"8681":[303,9,303,46],"8689":[303,51,303,52],"8697":[304,9,304,18],"8705":[304,42,304,46],"8713":[304,9,304,46],"8721":[304,9,304,47],"8729":[306,10,306,19],"8737":[306,10,306,21],"8745":[306,26,306,27],"8753":[306,31,306,40],"8761":[306,31,306,42],"8769":[306,46,306,47],"8777":[306,53,306,62],"8785":[306,53,306,70],"8793":[306,74,306,78],"8801":[306,82,306,91],"8809":[306,82,306,97],"8817":[306,101,306,105],"8825":[306,109,306,118],"8833":[306,109,306,123],"8841":[306,127,306,131],"8849":[307,19,307,24],"8857":[307,25,307,88],"8865":[307,15,307,89],"8873":[307,15,307,89],"8881":[307,9,307,90],"8889":[308,10,308,19],"8897":[308,10,308,34],"8905":[309,9,309,18],"8913":[309,36,309,45],"8921":[309,9,309,45],"8929":[309,9,309,46],"8937":[311,5,311,11],"8945":[311,22,311,29],"8953":[311,5,311,29],"8961":[311,5,311,30],"8969":[312,12,312,18],"8977":[312,12,312,18],"8985":[312,5,312,19],"8993":[5,18,313,2],"9001":[5,18,313,2],"9009":[5,18,313,2],"9017":[5,18,313,2],"9025":[5,18,313,2],"9033":[5,18,313,2],"9041":[5,18,313,2],"9049":[5,18,313,2],"9057":[5,18,313,2],"9065":[5,18,313,2],"9073":[5,18,313,2],"9081":[5,18,313,2],"9089":[5,18,313,2],"9097":[5,18,313,2],"9105":[5,18,313,2],"9113":[5,18,313,2],"9121":[5,18,313,2],"9129":[5,18,313,2],"9137":[5,18,313,2],"9145":[5,18,313,2],"9153":[5,18,313,2],"9161":[5,18,313,2],"9169":[5,18,313,2],"9177":[5,18,313,2],"9185":[5,18,313,2],"9193":[5,18,313,2],"9201":[5,18,313,2],"9209":[5,18,313,2],"9217":[5,18,313,2],"9225":[5,1,313,2],"9233":[5,1,313,3],"9241":[1,1,313,3],"9249":[1,1,313,3],"9257":[1,1,313,3],"9265":[1,1,313,3],"9273":[1,1,313,3],"9281":[1,1,313,3],"9289":[12,5,14,6],"9297":[15,5,17,6],"9305":[18,5,20,6],"9313":[21,5,23,6],"9321":[24,5,26,6],"9329":[29,13,31,14],"9337":[32,13,34,14],"9345":[27,5,36,6],"9353":[39,9,41,10],"9361":[42,9,44,10],"9369":[37,5,45,6],"9377":[52,13,56,14],"9385":[59,16,61,10],"9393":[57,16,61,10],"9401":[51,9,61,10],"9409":[49,5,62,6],"9417":[49,5,62,6],"9425":[65,9,67,10],"9433":[63,5,68,6],"9441":[63,5,68,6],"9449":[69,5,74,6],"9457":[75,5,78,6],"9465":[83,17,85,18],"9473":[82,13,87,14],"9481":[80,9,89,10],"9489":[92,13,94,14],"9497":[91,9,96,10],"9505":[90,12,99,6],"9513":[79,5,99,6],"9521":[104,5,106,6],"9529":[107,5,111,11],"9537":[124,9,125,55],"9545":[138,25,138,80],"9553":[139,17,140,50],"9561":[132,13,141,14],"9569":[142,13,143,29],"9577":[130,43,149,10],"9585":[130,43,149,10],"9593":[149,19,151,10],"9601":[149,19,151,10],"9609":[122,5,152,6],"9617":[156,9,157,20],"9625":[185,13,189,14],"9633":[237,13,238,37],"9641":[250,21,251,81],"9649":[248,17,258,18],"9657":[259,20,261,14],"9665":[247,13,261,14],"9673":[262,13,263,135],"9681":[269,28,272,14],"9689":[269,28,272,14],"9697":[274,13,275,62],"9705":[281,13,282,128],"9713":[288,13,291,14],"9721":[293,13,296,14],"9729":[293,13,296,14],"9737":[159,17,159,21],"9745":[160,14,160,23],"9753":[161,14,161,24],"9761":[165,14,165,27],"9769":[166,14,166,24],"9777":[170,14,170,29],"9785":[171,14,171,30],"9793":[174,14,174,27],"9801":[176,14,176,29],"9809":[178,14,178,33],"9817":[180,14,180,34],"9825":[182,14,182,34],"9833":[184,14,184,19],"9841":[193,14,193,27],"9849":[197,14,197,26],"9857":[198,14,198,23],"9865":[201,14,201,29],"9873":[204,14,204,23],"9881":[207,14,207,29],"9889":[208,14,208,30],"9897":[211,14,211,21],"9905":[214,14,214,23],"9913":[217,14,217,20],"9921":[220,14,220,28],"9929":[221,14,221,29],"9937":[224,14,224,32],"9945":[227,14,227,32],"9953":[231,14,231,31],"9961":[235,14,235,17],"9969":[240,14,240,26],"9977":[243,14,243,33],"9985":[246,14,246,29],"9993":[266,14,266,39],"10001":[277,14,277,26],"10009":[280,14,280,30],"10017":[285,14,285,34],"10025":[155,24,302,6],"10033":[155,24,302,6],"10041":[303,5,305,6],"10049":[306,5,307,90],"10057":[308,5,310,6],"10065":[5,18,313,2],"10073":[5,18,313,2],"10081":[1,1,313,3],"10089":[1,1,313,3],"nBranches":224,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb/lib/url_parser.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb/lib/url_parser_jalangi_.js","code":"\"use strict\";\n\nvar ReadPreference = require('./read_preference'),\n  parser = require('url'),\n  f = require('util').format;\n\nmodule.exports = function(url, options) {\n  // Ensure we have a default options object if none set\n  options = options || {};\n  // Variables\n  var connection_part = '';\n  var auth_part = '';\n  var query_string_part = '';\n  var dbName = 'admin';\n\n  // Url parser result\n  var result = parser.parse(url, true);\n\n  if(result.protocol != 'mongodb:') {\n    throw new Error('invalid schema, expected mongodb');\n  }\n\n  if((result.hostname == null || result.hostname == '') && url.indexOf('.sock') == -1) {\n    throw new Error('no hostname or hostnames provided in connection string');\n  }\n\n  if(result.port == '0') {\n    throw new Error('invalid port (zero) with hostname');\n  }\n\n  if(!isNaN(parseInt(result.port, 10)) && parseInt(result.port, 10) > 65535) {\n    throw new Error('invalid port (larger than 65535) with hostname');\n  }\n\n  if(result.path\n    && result.path.length > 0\n    && result.path[0] != '/'\n    && url.indexOf('.sock') == -1) {\n    throw new Error('missing delimiting slash between hosts and options');\n  }\n\n  if(result.query) {\n    for(var name in result.query) {\n      if(name.indexOf(':') != -1) {\n        throw new Error('double colon in host identifier');\n      }\n\n      if(result.query[name] == '') {\n        throw new Error('query parameter ' + name + ' is an incomplete value pair');\n      }\n    }\n  }\n\n  if(result.auth) {\n    var parts = result.auth.split(':');\n    if(url.indexOf(result.auth) != -1 && parts.length > 2) {\n      throw new Error('Username with password containing an unescaped colon');\n    }\n\n    if(url.indexOf(result.auth) != -1 && result.auth.indexOf('@') != -1) {\n      throw new Error('Username containing an unescaped at-sign');\n    }\n  }\n\n  // Remove query\n  var clean = url.split('?').shift();\n\n  // Extract the list of hosts\n  var strings = clean.split(',');\n  var hosts = [];\n\n  for(var i = 0; i < strings.length; i++) {\n    var hostString = strings[i];\n\n    if(hostString.indexOf('mongodb') != -1) {\n      if(hostString.indexOf('@') != -1) {\n        hosts.push(hostString.split('@').pop())\n      } else {\n        hosts.push(hostString.substr('mongodb://'.length));\n      }\n    } else if(hostString.indexOf('/') != -1) {\n      hosts.push(hostString.split('/').shift());\n    } else if(hostString.indexOf('/') == -1) {\n      hosts.push(hostString.trim());\n    }\n  }\n\n  for(var i = 0; i < hosts.length; i++) {\n    var r = parser.parse(f('mongodb://%s', hosts[i].trim()));\n    if(r.path && r.path.indexOf(':') != -1) {\n      throw new Error('double colon in host identifier');\n    }\n  }\n\n  // If we have a ? mark cut the query elements off\n  if(url.indexOf(\"?\") != -1) {\n    query_string_part = url.substr(url.indexOf(\"?\") + 1);\n    connection_part = url.substring(\"mongodb://\".length, url.indexOf(\"?\"))\n  } else {\n    connection_part = url.substring(\"mongodb://\".length);\n  }\n\n  // Check if we have auth params\n  if(connection_part.indexOf(\"@\") != -1) {\n    auth_part = connection_part.split(\"@\")[0];\n    connection_part = connection_part.split(\"@\")[1];\n  }\n\n  // Check if the connection string has a db\n  if(connection_part.indexOf(\".sock\") != -1) {\n    if(connection_part.indexOf(\".sock/\") != -1) {\n      dbName = connection_part.split(\".sock/\")[1];\n      // Check if multiple database names provided, or just an illegal trailing backslash\n      if (dbName.indexOf(\"/\") != -1) {\n        if (dbName.split(\"/\").length == 2 && dbName.split(\"/\")[1].length == 0) {\n          throw new Error('Illegal trailing backslash after database name');\n        }\n        throw new Error('More than 1 database name in URL');\n      }\n      connection_part = connection_part.split(\"/\", connection_part.indexOf(\".sock\") + \".sock\".length);\n    }\n  } else if(connection_part.indexOf(\"/\") != -1) {\n    // Check if multiple database names provided, or just an illegal trailing backslash\n    if (connection_part.split(\"/\").length > 2) {\n      if (connection_part.split(\"/\")[2].length == 0) {\n        throw new Error('Illegal trailing backslash after database name');\n      }\n      throw new Error('More than 1 database name in URL');\n    }\n    dbName = connection_part.split(\"/\")[1];\n    connection_part = connection_part.split(\"/\")[0];\n  }\n\n  // Result object\n  var object = {};\n\n  // Pick apart the authentication part of the string\n  var authPart = auth_part || '';\n  var auth = authPart.split(':', 2);\n\n  // Decode the URI components\n  auth[0] = decodeURIComponent(auth[0]);\n  if(auth[1]){\n    auth[1] = decodeURIComponent(auth[1]);\n  }\n\n  // Add auth to final object if we have 2 elements\n  if(auth.length == 2) object.auth = {user: auth[0], password: auth[1]};\n\n  // Variables used for temporary storage\n  var hostPart;\n  var urlOptions;\n  var servers;\n  var serverOptions = {socketOptions: {}};\n  var dbOptions = {read_preference_tags: []};\n  var replSetServersOptions = {socketOptions: {}};\n  // Add server options to final object\n  object.server_options = serverOptions;\n  object.db_options = dbOptions;\n  object.rs_options = replSetServersOptions;\n  object.mongos_options = {};\n\n  // Let's check if we are using a domain socket\n  if(url.match(/\\.sock/)) {\n    // Split out the socket part\n    var domainSocket = url.substring(\n        url.indexOf(\"mongodb://\") + \"mongodb://\".length\n      , url.lastIndexOf(\".sock\") + \".sock\".length);\n    // Clean out any auth stuff if any\n    if(domainSocket.indexOf(\"@\") != -1) domainSocket = domainSocket.split(\"@\")[1];\n    servers = [{domain_socket: domainSocket}];\n  } else {\n    // Split up the db\n    hostPart = connection_part;\n    // Deduplicate servers\n    var deduplicatedServers = {};\n\n    // Parse all server results\n    servers = hostPart.split(',').map(function(h) {\n      var _host, _port, ipv6match;\n      //check if it matches [IPv6]:port, where the port number is optional\n      if ((ipv6match = /\\[([^\\]]+)\\](?:\\:(.+))?/.exec(h))) {\n        _host = ipv6match[1];\n        _port = parseInt(ipv6match[2], 10) || 27017;\n      } else {\n        //otherwise assume it's IPv4, or plain hostname\n        var hostPort = h.split(':', 2);\n        _host = hostPort[0] || 'localhost';\n        _port = hostPort[1] != null ? parseInt(hostPort[1], 10) : 27017;\n        // Check for localhost?safe=true style case\n        if(_host.indexOf(\"?\") != -1) _host = _host.split(/\\?/)[0];\n      }\n\n      // No entry returned for duplicate servr\n      if(deduplicatedServers[_host + \"_\" + _port]) return null;\n      deduplicatedServers[_host + \"_\" + _port] = 1;\n\n      // Return the mapped object\n      return {host: _host, port: _port};\n    }).filter(function(x) {\n      return x != null;\n    });\n  }\n\n  // Get the db name\n  object.dbName = dbName || 'admin';\n  // Split up all the options\n  urlOptions = (query_string_part || '').split(/[&;]/);\n  // Ugh, we have to figure out which options go to which constructor manually.\n  urlOptions.forEach(function(opt) {\n    if(!opt) return;\n    var splitOpt = opt.split('='), name = splitOpt[0], value = splitOpt[1];\n    // Options implementations\n    switch(name) {\n      case 'slaveOk':\n      case 'slave_ok':\n        serverOptions.slave_ok = (value == 'true');\n        dbOptions.slaveOk = (value == 'true');\n        break;\n      case 'maxPoolSize':\n      case 'poolSize':\n        serverOptions.poolSize = parseInt(value, 10);\n        replSetServersOptions.poolSize = parseInt(value, 10);\n        break;\n      case 'autoReconnect':\n      case 'auto_reconnect':\n        serverOptions.auto_reconnect = (value == 'true');\n        break;\n      case 'minPoolSize':\n        throw new Error(\"minPoolSize not supported\");\n      case 'maxIdleTimeMS':\n        throw new Error(\"maxIdleTimeMS not supported\");\n      case 'waitQueueMultiple':\n        throw new Error(\"waitQueueMultiple not supported\");\n      case 'waitQueueTimeoutMS':\n        throw new Error(\"waitQueueTimeoutMS not supported\");\n      case 'uuidRepresentation':\n        throw new Error(\"uuidRepresentation not supported\");\n      case 'ssl':\n        if(value == 'prefer') {\n          serverOptions.ssl = value;\n          replSetServersOptions.ssl = value;\n          break;\n        }\n        serverOptions.ssl = (value == 'true');\n        replSetServersOptions.ssl = (value == 'true');\n        break;\n      case 'sslValidate':\n        serverOptions.sslValidate = (value == 'true');\n        replSetServerOptions.sslValidate = (value == 'true');\n        break;\n      case 'replicaSet':\n      case 'rs_name':\n        replSetServersOptions.rs_name = value;\n        break;\n      case 'reconnectWait':\n        replSetServersOptions.reconnectWait = parseInt(value, 10);\n        break;\n      case 'retries':\n        replSetServersOptions.retries = parseInt(value, 10);\n        break;\n      case 'readSecondary':\n      case 'read_secondary':\n        replSetServersOptions.read_secondary = (value == 'true');\n        break;\n      case 'fsync':\n        dbOptions.fsync = (value == 'true');\n        break;\n      case 'journal':\n        dbOptions.j = (value == 'true');\n        break;\n      case 'safe':\n        dbOptions.safe = (value == 'true');\n        break;\n      case 'nativeParser':\n      case 'native_parser':\n        dbOptions.native_parser = (value == 'true');\n        break;\n      case 'readConcernLevel':\n        dbOptions.readConcern = {level: value};\n        break;\n      case 'connectTimeoutMS':\n        serverOptions.socketOptions.connectTimeoutMS = parseInt(value, 10);\n        replSetServersOptions.socketOptions.connectTimeoutMS = parseInt(value, 10);\n        break;\n      case 'socketTimeoutMS':\n        serverOptions.socketOptions.socketTimeoutMS = parseInt(value, 10);\n        replSetServersOptions.socketOptions.socketTimeoutMS = parseInt(value, 10);\n        break;\n      case 'w':\n        dbOptions.w = parseInt(value, 10);\n        if(isNaN(dbOptions.w)) dbOptions.w = value;\n        break;\n      case 'authSource':\n        dbOptions.authSource = value;\n        break;\n      case 'gssapiServiceName':\n        dbOptions.gssapiServiceName = value;\n        break;\n      case 'authMechanism':\n        if(value == 'GSSAPI') {\n          // If no password provided decode only the principal\n          if(object.auth == null) {\n            var urlDecodeAuthPart = decodeURIComponent(authPart);\n            if(urlDecodeAuthPart.indexOf(\"@\") == -1) throw new Error(\"GSSAPI requires a provided principal\");\n            object.auth = {user: urlDecodeAuthPart, password: null};\n          } else {\n            object.auth.user = decodeURIComponent(object.auth.user);\n          }\n        } else if(value == 'MONGODB-X509') {\n          object.auth = {user: decodeURIComponent(authPart)};\n        }\n\n        // Only support GSSAPI or MONGODB-CR for now\n        if(value != 'GSSAPI'\n          && value != 'MONGODB-X509'\n          && value != 'MONGODB-CR'\n          && value != 'DEFAULT'\n          && value != 'SCRAM-SHA-1'\n          && value != 'PLAIN')\n            throw new Error(\"only DEFAULT, GSSAPI, PLAIN, MONGODB-X509, SCRAM-SHA-1 or MONGODB-CR is supported by authMechanism\");\n\n        // Authentication mechanism\n        dbOptions.authMechanism = value;\n        break;\n      case 'authMechanismProperties':\n        // Split up into key, value pairs\n        var values = value.split(',');\n        var o = {};\n        // For each value split into key, value\n        values.forEach(function(x) {\n          var v = x.split(':');\n          o[v[0]] = v[1];\n        });\n\n        // Set all authMechanismProperties\n        dbOptions.authMechanismProperties = o;\n        // Set the service name value\n        if(typeof o.SERVICE_NAME == 'string') dbOptions.gssapiServiceName = o.SERVICE_NAME;\n        break;\n      case 'wtimeoutMS':\n        dbOptions.wtimeout = parseInt(value, 10);\n        break;\n      case 'readPreference':\n        if(!ReadPreference.isValid(value)) throw new Error(\"readPreference must be either primary/primaryPreferred/secondary/secondaryPreferred/nearest\");\n        dbOptions.readPreference = value;\n        break;\n      case 'readPreferenceTags':\n        // Decode the value\n        value = decodeURIComponent(value);\n        // Contains the tag object\n        var tagObject = {};\n        if(value == null || value == '') {\n          dbOptions.read_preference_tags.push(tagObject);\n          break;\n        }\n\n        // Split up the tags\n        var tags = value.split(/\\,/);\n        for(var i = 0; i < tags.length; i++) {\n          var parts = tags[i].trim().split(/\\:/);\n          tagObject[parts[0]] = parts[1];\n        }\n\n        // Set the preferences tags\n        dbOptions.read_preference_tags.push(tagObject);\n        break;\n      default:\n        break;\n    }\n  });\n\n  // No tags: should be null (not [])\n  if(dbOptions.read_preference_tags.length === 0) {\n    dbOptions.read_preference_tags = null;\n  }\n\n  // Validate if there are an invalid write concern combinations\n  if((dbOptions.w == -1 || dbOptions.w == 0) && (\n      dbOptions.journal == true\n      || dbOptions.fsync == true\n      || dbOptions.safe == true)) throw new Error(\"w set to -1 or 0 cannot be combined with safe/w/journal/fsync\")\n\n  // If no read preference set it to primary\n  if(!dbOptions.readPreference) {\n    dbOptions.readPreference = 'primary';\n  }\n\n  // Add servers to result\n  object.servers = servers;\n  // Returned parsed object\n  return object;\n}\n"};
jalangiLabel3041:
    while (true) {
        try {
            J$.Se(9241, '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb/lib/url_parser_jalangi_.js', '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongodb/lib/url_parser.js');
            J$.N(9249, '__secret__S$', __secret__S$, 0);
            J$.N(9257, '__secret__traits__', __secret__traits__, 0);
            J$.N(9265, 'ReadPreference', ReadPreference, 0);
            J$.N(9273, 'parser', parser, 0);
            J$.N(9281, 'f', f, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var ReadPreference = J$.X1(185, J$.W(177, 'ReadPreference', J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, './read_preference', 21, false)), ReadPreference, 3)), parser = J$.X1(201, J$.W(193, 'parser', J$.F(137, J$.R(121, 'require', require, 2), 0)(J$.T(129, 'url', 21, false)), parser, 3)), f = J$.X1(217, J$.W(209, 'f', J$.G(169, J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, 'util', 21, false)), 'format', 0), f, 3));
            J$.X1(9233, J$.P(9225, J$.R(225, 'module', module, 2), 'exports', J$.T(9217, function (url, options) {
                jalangiLabel3040:
                    while (true) {
                        try {
                            J$.Fe(8993, arguments.callee, this, arguments);
                            arguments = J$.N(9001, 'arguments', arguments, 4);
                            url = J$.N(9009, 'url', url, 4);
                            options = J$.N(9017, 'options', options, 4);
                            J$.N(9025, 'connection_part', connection_part, 0);
                            J$.N(9033, 'auth_part', auth_part, 0);
                            J$.N(9041, 'query_string_part', query_string_part, 0);
                            J$.N(9049, 'dbName', dbName, 0);
                            J$.N(9057, 'result', result, 0);
                            J$.N(9065, 'name', name, 0);
                            J$.N(9073, 'parts', parts, 0);
                            J$.N(9081, 'clean', clean, 0);
                            J$.N(9089, 'strings', strings, 0);
                            J$.N(9097, 'hosts', hosts, 0);
                            J$.N(9105, 'i', i, 0);
                            J$.N(9113, 'hostString', hostString, 0);
                            J$.N(9121, 'r', r, 0);
                            J$.N(9129, 'object', object, 0);
                            J$.N(9137, 'authPart', authPart, 0);
                            J$.N(9145, 'auth', auth, 0);
                            J$.N(9153, 'hostPart', hostPart, 0);
                            J$.N(9161, 'urlOptions', urlOptions, 0);
                            J$.N(9169, 'servers', servers, 0);
                            J$.N(9177, 'serverOptions', serverOptions, 0);
                            J$.N(9185, 'dbOptions', dbOptions, 0);
                            J$.N(9193, 'replSetServersOptions', replSetServersOptions, 0);
                            J$.N(9201, 'domainSocket', domainSocket, 0);
                            J$.N(9209, 'deduplicatedServers', deduplicatedServers, 0);
                            J$.X1(257, options = J$.W(249, 'options', J$.C(8, J$.R(233, 'options', options, 0)) ? J$._() : J$.T(241, {}, 11, false), options, 0));
                            var connection_part = J$.X1(281, J$.W(273, 'connection_part', J$.T(265, '', 21, false), connection_part, 1));
                            var auth_part = J$.X1(305, J$.W(297, 'auth_part', J$.T(289, '', 21, false), auth_part, 1));
                            var query_string_part = J$.X1(329, J$.W(321, 'query_string_part', J$.T(313, '', 21, false), query_string_part, 1));
                            var dbName = J$.X1(353, J$.W(345, 'dbName', J$.T(337, 'admin', 21, false), dbName, 1));
                            var result = J$.X1(401, J$.W(393, 'result', J$.M(385, J$.R(361, 'parser', parser, 1), 'parse', 0)(J$.R(369, 'url', url, 0), J$.T(377, true, 23, false)), result, 1));
                            if (J$.X1(9289, J$.C(16, J$.B(10, '!=', J$.G(417, J$.R(409, 'result', result, 0), 'protocol', 0), J$.T(425, 'mongodb:', 21, false), 0)))) {
                                throw J$.X1(465, J$.Th(457, J$.F(449, J$.R(433, 'Error', Error, 2), 1)(J$.T(441, 'invalid schema, expected mongodb', 21, false))));
                            }
                            if (J$.X1(9297, J$.C(40, J$.C(32, J$.C(24, J$.B(18, '==', J$.G(481, J$.R(473, 'result', result, 0), 'hostname', 0), J$.T(489, null, 25, false), 0)) ? J$._() : J$.B(26, '==', J$.G(505, J$.R(497, 'result', result, 0), 'hostname', 0), J$.T(513, '', 21, false), 0)) ? J$.B(42, '==', J$.M(537, J$.R(521, 'url', url, 0), 'indexOf', 0)(J$.T(529, '.sock', 21, false)), J$.U(34, '-', J$.T(545, 1, 22, false)), 0) : J$._()))) {
                                throw J$.X1(585, J$.Th(577, J$.F(569, J$.R(553, 'Error', Error, 2), 1)(J$.T(561, 'no hostname or hostnames provided in connection string', 21, false))));
                            }
                            if (J$.X1(9305, J$.C(48, J$.B(50, '==', J$.G(601, J$.R(593, 'result', result, 0), 'port', 0), J$.T(609, '0', 21, false), 0)))) {
                                throw J$.X1(649, J$.Th(641, J$.F(633, J$.R(617, 'Error', Error, 2), 1)(J$.T(625, 'invalid port (zero) with hostname', 21, false))));
                            }
                            if (J$.X1(9313, J$.C(64, J$.C(56, J$.U(58, '!', J$.F(705, J$.R(657, 'isNaN', isNaN, 2), 0)(J$.F(697, J$.R(665, 'parseInt', parseInt, 2), 0)(J$.G(681, J$.R(673, 'result', result, 0), 'port', 0), J$.T(689, 10, 22, false))))) ? J$.B(66, '>', J$.F(745, J$.R(713, 'parseInt', parseInt, 2), 0)(J$.G(729, J$.R(721, 'result', result, 0), 'port', 0), J$.T(737, 10, 22, false)), J$.T(753, 65535, 22, false), 0) : J$._()))) {
                                throw J$.X1(793, J$.Th(785, J$.F(777, J$.R(761, 'Error', Error, 2), 1)(J$.T(769, 'invalid port (larger than 65535) with hostname', 21, false))));
                            }
                            if (J$.X1(9321, J$.C(96, J$.C(88, J$.C(80, J$.C(72, J$.G(809, J$.R(801, 'result', result, 0), 'path', 0)) ? J$.B(74, '>', J$.G(833, J$.G(825, J$.R(817, 'result', result, 0), 'path', 0), 'length', 0), J$.T(841, 0, 22, false), 0) : J$._()) ? J$.B(82, '!=', J$.G(873, J$.G(857, J$.R(849, 'result', result, 0), 'path', 0), J$.T(865, 0, 22, false), 4), J$.T(881, '/', 21, false), 0) : J$._()) ? J$.B(98, '==', J$.M(905, J$.R(889, 'url', url, 0), 'indexOf', 0)(J$.T(897, '.sock', 21, false)), J$.U(90, '-', J$.T(913, 1, 22, false)), 0) : J$._()))) {
                                throw J$.X1(953, J$.Th(945, J$.F(937, J$.R(921, 'Error', Error, 2), 1)(J$.T(929, 'missing delimiting slash between hosts and options', 21, false))));
                            }
                            if (J$.X1(9345, J$.C(120, J$.G(969, J$.R(961, 'result', result, 0), 'query', 0)))) {
                                for (J$._tm_p in J$.H(1161, J$.G(985, J$.R(977, 'result', result, 0), 'query', 0))) {
                                    var name = J$.X1(1177, J$.W(1169, 'name', J$._tm_p, name, 1));
                                    {
                                        {
                                            if (J$.X1(9329, J$.C(104, J$.B(114, '!=', J$.M(1009, J$.R(993, 'name', name, 0), 'indexOf', 0)(J$.T(1001, ':', 21, false)), J$.U(106, '-', J$.T(1017, 1, 22, false)), 0)))) {
                                                throw J$.X1(1057, J$.Th(1049, J$.F(1041, J$.R(1025, 'Error', Error, 2), 1)(J$.T(1033, 'double colon in host identifier', 21, false))));
                                            }
                                            if (J$.X1(9337, J$.C(112, J$.B(122, '==', J$.G(1089, J$.G(1073, J$.R(1065, 'result', result, 0), 'query', 0), J$.R(1081, 'name', name, 0), 4), J$.T(1097, '', 21, false), 0)))) {
                                                throw J$.X1(1153, J$.Th(1145, J$.F(1137, J$.R(1105, 'Error', Error, 2), 1)(J$.B(138, '+', J$.B(130, '+', J$.T(1113, 'query parameter ', 21, false), J$.R(1121, 'name', name, 0), 0), J$.T(1129, ' is an incomplete value pair', 21, false), 0))));
                                            }
                                        }
                                    }
                                }
                            }
                            if (J$.X1(9369, J$.C(160, J$.G(1193, J$.R(1185, 'result', result, 0), 'auth', 0)))) {
                                var parts = J$.X1(1241, J$.W(1233, 'parts', J$.M(1225, J$.G(1209, J$.R(1201, 'result', result, 0), 'auth', 0), 'split', 0)(J$.T(1217, ':', 21, false)), parts, 1));
                                if (J$.X1(9353, J$.C(136, J$.C(128, J$.B(154, '!=', J$.M(1273, J$.R(1249, 'url', url, 0), 'indexOf', 0)(J$.G(1265, J$.R(1257, 'result', result, 0), 'auth', 0)), J$.U(146, '-', J$.T(1281, 1, 22, false)), 0)) ? J$.B(162, '>', J$.G(1297, J$.R(1289, 'parts', parts, 0), 'length', 0), J$.T(1305, 2, 22, false), 0) : J$._()))) {
                                    throw J$.X1(1345, J$.Th(1337, J$.F(1329, J$.R(1313, 'Error', Error, 2), 1)(J$.T(1321, 'Username with password containing an unescaped colon', 21, false))));
                                }
                                if (J$.X1(9361, J$.C(152, J$.C(144, J$.B(178, '!=', J$.M(1377, J$.R(1353, 'url', url, 0), 'indexOf', 0)(J$.G(1369, J$.R(1361, 'result', result, 0), 'auth', 0)), J$.U(170, '-', J$.T(1385, 1, 22, false)), 0)) ? J$.B(194, '!=', J$.M(1417, J$.G(1401, J$.R(1393, 'result', result, 0), 'auth', 0), 'indexOf', 0)(J$.T(1409, '@', 21, false)), J$.U(186, '-', J$.T(1425, 1, 22, false)), 0) : J$._()))) {
                                    throw J$.X1(1465, J$.Th(1457, J$.F(1449, J$.R(1433, 'Error', Error, 2), 1)(J$.T(1441, 'Username containing an unescaped at-sign', 21, false))));
                                }
                            }
                            var clean = J$.X1(1513, J$.W(1505, 'clean', J$.M(1497, J$.M(1489, J$.R(1473, 'url', url, 0), 'split', 0)(J$.T(1481, '?', 21, false)), 'shift', 0)(), clean, 1));
                            var strings = J$.X1(1553, J$.W(1545, 'strings', J$.M(1537, J$.R(1521, 'clean', clean, 0), 'split', 0)(J$.T(1529, ',', 21, false)), strings, 1));
                            var hosts = J$.X1(1577, J$.W(1569, 'hosts', J$.T(1561, [], 10, false), hosts, 1));
                            for (var i = J$.X1(1601, J$.W(1593, 'i', J$.T(1585, 0, 22, false), i, 1)); J$.X1(9409, J$.C(200, J$.B(202, '<', J$.R(1609, 'i', i, 0), J$.G(1625, J$.R(1617, 'strings', strings, 0), 'length', 0), 0))); J$.X1(9417, J$.B(226, '-', i = J$.W(1649, 'i', J$.B(218, '+', J$.U(210, '+', J$.R(1641, 'i', i, 0)), J$.T(1633, 1, 22, false), 0), i, 0), J$.T(1657, 1, 22, false), 0))) {
                                var hostString = J$.X1(1697, J$.W(1689, 'hostString', J$.G(1681, J$.R(1665, 'strings', strings, 0), J$.R(1673, 'i', i, 0), 4), hostString, 1));
                                if (J$.X1(9401, J$.C(192, J$.B(242, '!=', J$.M(1721, J$.R(1705, 'hostString', hostString, 0), 'indexOf', 0)(J$.T(1713, 'mongodb', 21, false)), J$.U(234, '-', J$.T(1729, 1, 22, false)), 0)))) {
                                    if (J$.X1(9377, J$.C(168, J$.B(258, '!=', J$.M(1753, J$.R(1737, 'hostString', hostString, 0), 'indexOf', 0)(J$.T(1745, '@', 21, false)), J$.U(250, '-', J$.T(1761, 1, 22, false)), 0)))) {
                                        J$.X1(1817, J$.M(1809, J$.R(1769, 'hosts', hosts, 0), 'push', 0)(J$.M(1801, J$.M(1793, J$.R(1777, 'hostString', hostString, 0), 'split', 0)(J$.T(1785, '@', 21, false)), 'pop', 0)()));
                                    } else {
                                        J$.X1(1873, J$.M(1865, J$.R(1825, 'hosts', hosts, 0), 'push', 0)(J$.M(1857, J$.R(1833, 'hostString', hostString, 0), 'substr', 0)(J$.G(1849, J$.T(1841, 'mongodb://', 21, false), 'length', 0))));
                                    }
                                } else if (J$.X1(9393, J$.C(184, J$.B(274, '!=', J$.M(1897, J$.R(1881, 'hostString', hostString, 0), 'indexOf', 0)(J$.T(1889, '/', 21, false)), J$.U(266, '-', J$.T(1905, 1, 22, false)), 0)))) {
                                    J$.X1(1961, J$.M(1953, J$.R(1913, 'hosts', hosts, 0), 'push', 0)(J$.M(1945, J$.M(1937, J$.R(1921, 'hostString', hostString, 0), 'split', 0)(J$.T(1929, '/', 21, false)), 'shift', 0)()));
                                } else if (J$.X1(9385, J$.C(176, J$.B(290, '==', J$.M(1985, J$.R(1969, 'hostString', hostString, 0), 'indexOf', 0)(J$.T(1977, '/', 21, false)), J$.U(282, '-', J$.T(1993, 1, 22, false)), 0)))) {
                                    J$.X1(2033, J$.M(2025, J$.R(2001, 'hosts', hosts, 0), 'push', 0)(J$.M(2017, J$.R(2009, 'hostString', hostString, 0), 'trim', 0)()));
                                }
                            }
                            for (var i = J$.X1(2057, J$.W(2049, 'i', J$.T(2041, 0, 22, false), i, 1)); J$.X1(9433, J$.C(224, J$.B(298, '<', J$.R(2065, 'i', i, 0), J$.G(2081, J$.R(2073, 'hosts', hosts, 0), 'length', 0), 0))); J$.X1(9441, J$.B(322, '-', i = J$.W(2105, 'i', J$.B(314, '+', J$.U(306, '+', J$.R(2097, 'i', i, 0)), J$.T(2089, 1, 22, false), 0), i, 0), J$.T(2113, 1, 22, false), 0))) {
                                var r = J$.X1(2201, J$.W(2193, 'r', J$.M(2185, J$.R(2121, 'parser', parser, 1), 'parse', 0)(J$.F(2177, J$.R(2129, 'f', f, 1), 0)(J$.T(2137, 'mongodb://%s', 21, false), J$.M(2169, J$.G(2161, J$.R(2145, 'hosts', hosts, 0), J$.R(2153, 'i', i, 0), 4), 'trim', 0)())), r, 1));
                                if (J$.X1(9425, J$.C(216, J$.C(208, J$.G(2217, J$.R(2209, 'r', r, 0), 'path', 0)) ? J$.B(338, '!=', J$.M(2249, J$.G(2233, J$.R(2225, 'r', r, 0), 'path', 0), 'indexOf', 0)(J$.T(2241, ':', 21, false)), J$.U(330, '-', J$.T(2257, 1, 22, false)), 0) : J$._()))) {
                                    throw J$.X1(2297, J$.Th(2289, J$.F(2281, J$.R(2265, 'Error', Error, 2), 1)(J$.T(2273, 'double colon in host identifier', 21, false))));
                                }
                            }
                            if (J$.X1(9449, J$.C(232, J$.B(354, '!=', J$.M(2321, J$.R(2305, 'url', url, 0), 'indexOf', 0)(J$.T(2313, '?', 21, false)), J$.U(346, '-', J$.T(2329, 1, 22, false)), 0)))) {
                                J$.X1(2393, query_string_part = J$.W(2385, 'query_string_part', J$.M(2377, J$.R(2337, 'url', url, 0), 'substr', 0)(J$.B(362, '+', J$.M(2361, J$.R(2345, 'url', url, 0), 'indexOf', 0)(J$.T(2353, '?', 21, false)), J$.T(2369, 1, 22, false), 0)), query_string_part, 0));
                                J$.X1(2465, connection_part = J$.W(2457, 'connection_part', J$.M(2449, J$.R(2401, 'url', url, 0), 'substring', 0)(J$.G(2417, J$.T(2409, 'mongodb://', 21, false), 'length', 0), J$.M(2441, J$.R(2425, 'url', url, 0), 'indexOf', 0)(J$.T(2433, '?', 21, false))), connection_part, 0));
                            } else {
                                J$.X1(2513, connection_part = J$.W(2505, 'connection_part', J$.M(2497, J$.R(2473, 'url', url, 0), 'substring', 0)(J$.G(2489, J$.T(2481, 'mongodb://', 21, false), 'length', 0)), connection_part, 0));
                            }
                            if (J$.X1(9457, J$.C(240, J$.B(378, '!=', J$.M(2537, J$.R(2521, 'connection_part', connection_part, 0), 'indexOf', 0)(J$.T(2529, '@', 21, false)), J$.U(370, '-', J$.T(2545, 1, 22, false)), 0)))) {
                                J$.X1(2601, auth_part = J$.W(2593, 'auth_part', J$.G(2585, J$.M(2569, J$.R(2553, 'connection_part', connection_part, 0), 'split', 0)(J$.T(2561, '@', 21, false)), J$.T(2577, 0, 22, false), 4), auth_part, 0));
                                J$.X1(2657, connection_part = J$.W(2649, 'connection_part', J$.G(2641, J$.M(2625, J$.R(2609, 'connection_part', connection_part, 0), 'split', 0)(J$.T(2617, '@', 21, false)), J$.T(2633, 1, 22, false), 4), connection_part, 0));
                            }
                            if (J$.X1(9513, J$.C(304, J$.B(394, '!=', J$.M(2681, J$.R(2665, 'connection_part', connection_part, 0), 'indexOf', 0)(J$.T(2673, '.sock', 21, false)), J$.U(386, '-', J$.T(2689, 1, 22, false)), 0)))) {
                                if (J$.X1(9481, J$.C(272, J$.B(410, '!=', J$.M(2713, J$.R(2697, 'connection_part', connection_part, 0), 'indexOf', 0)(J$.T(2705, '.sock/', 21, false)), J$.U(402, '-', J$.T(2721, 1, 22, false)), 0)))) {
                                    J$.X1(2777, dbName = J$.W(2769, 'dbName', J$.G(2761, J$.M(2745, J$.R(2729, 'connection_part', connection_part, 0), 'split', 0)(J$.T(2737, '.sock/', 21, false)), J$.T(2753, 1, 22, false), 4), dbName, 0));
                                    if (J$.X1(9473, J$.C(264, J$.B(426, '!=', J$.M(2801, J$.R(2785, 'dbName', dbName, 0), 'indexOf', 0)(J$.T(2793, '/', 21, false)), J$.U(418, '-', J$.T(2809, 1, 22, false)), 0)))) {
                                        if (J$.X1(9465, J$.C(256, J$.C(248, J$.B(434, '==', J$.G(2841, J$.M(2833, J$.R(2817, 'dbName', dbName, 0), 'split', 0)(J$.T(2825, '/', 21, false)), 'length', 0), J$.T(2849, 2, 22, false), 0)) ? J$.B(442, '==', J$.G(2897, J$.G(2889, J$.M(2873, J$.R(2857, 'dbName', dbName, 0), 'split', 0)(J$.T(2865, '/', 21, false)), J$.T(2881, 1, 22, false), 4), 'length', 0), J$.T(2905, 0, 22, false), 0) : J$._()))) {
                                            throw J$.X1(2945, J$.Th(2937, J$.F(2929, J$.R(2913, 'Error', Error, 2), 1)(J$.T(2921, 'Illegal trailing backslash after database name', 21, false))));
                                        }
                                        throw J$.X1(2985, J$.Th(2977, J$.F(2969, J$.R(2953, 'Error', Error, 2), 1)(J$.T(2961, 'More than 1 database name in URL', 21, false))));
                                    }
                                    J$.X1(3065, connection_part = J$.W(3057, 'connection_part', J$.M(3049, J$.R(2993, 'connection_part', connection_part, 0), 'split', 0)(J$.T(3001, '/', 21, false), J$.B(450, '+', J$.M(3025, J$.R(3009, 'connection_part', connection_part, 0), 'indexOf', 0)(J$.T(3017, '.sock', 21, false)), J$.G(3041, J$.T(3033, '.sock', 21, false), 'length', 0), 0)), connection_part, 0));
                                }
                            } else if (J$.X1(9505, J$.C(296, J$.B(466, '!=', J$.M(3089, J$.R(3073, 'connection_part', connection_part, 0), 'indexOf', 0)(J$.T(3081, '/', 21, false)), J$.U(458, '-', J$.T(3097, 1, 22, false)), 0)))) {
                                if (J$.X1(9497, J$.C(288, J$.B(474, '>', J$.G(3129, J$.M(3121, J$.R(3105, 'connection_part', connection_part, 0), 'split', 0)(J$.T(3113, '/', 21, false)), 'length', 0), J$.T(3137, 2, 22, false), 0)))) {
                                    if (J$.X1(9489, J$.C(280, J$.B(482, '==', J$.G(3185, J$.G(3177, J$.M(3161, J$.R(3145, 'connection_part', connection_part, 0), 'split', 0)(J$.T(3153, '/', 21, false)), J$.T(3169, 2, 22, false), 4), 'length', 0), J$.T(3193, 0, 22, false), 0)))) {
                                        throw J$.X1(3233, J$.Th(3225, J$.F(3217, J$.R(3201, 'Error', Error, 2), 1)(J$.T(3209, 'Illegal trailing backslash after database name', 21, false))));
                                    }
                                    throw J$.X1(3273, J$.Th(3265, J$.F(3257, J$.R(3241, 'Error', Error, 2), 1)(J$.T(3249, 'More than 1 database name in URL', 21, false))));
                                }
                                J$.X1(3329, dbName = J$.W(3321, 'dbName', J$.G(3313, J$.M(3297, J$.R(3281, 'connection_part', connection_part, 0), 'split', 0)(J$.T(3289, '/', 21, false)), J$.T(3305, 1, 22, false), 4), dbName, 0));
                                J$.X1(3385, connection_part = J$.W(3377, 'connection_part', J$.G(3369, J$.M(3353, J$.R(3337, 'connection_part', connection_part, 0), 'split', 0)(J$.T(3345, '/', 21, false)), J$.T(3361, 0, 22, false), 4), connection_part, 0));
                            }
                            var object = J$.X1(3409, J$.W(3401, 'object', J$.T(3393, {}, 11, false), object, 1));
                            var authPart = J$.X1(3441, J$.W(3433, 'authPart', J$.C(312, J$.R(3417, 'auth_part', auth_part, 0)) ? J$._() : J$.T(3425, '', 21, false), authPart, 1));
                            var auth = J$.X1(3489, J$.W(3481, 'auth', J$.M(3473, J$.R(3449, 'authPart', authPart, 0), 'split', 0)(J$.T(3457, ':', 21, false), J$.T(3465, 2, 22, false)), auth, 1));
                            J$.X1(3561, J$.P(3553, J$.R(3497, 'auth', auth, 0), J$.T(3505, 0, 22, false), J$.F(3545, J$.R(3513, 'decodeURIComponent', decodeURIComponent, 2), 0)(J$.G(3537, J$.R(3521, 'auth', auth, 0), J$.T(3529, 0, 22, false), 4)), 2));
                            if (J$.X1(9521, J$.C(320, J$.G(3585, J$.R(3569, 'auth', auth, 0), J$.T(3577, 1, 22, false), 4)))) {
                                J$.X1(3657, J$.P(3649, J$.R(3593, 'auth', auth, 0), J$.T(3601, 1, 22, false), J$.F(3641, J$.R(3609, 'decodeURIComponent', decodeURIComponent, 2), 0)(J$.G(3633, J$.R(3617, 'auth', auth, 0), J$.T(3625, 1, 22, false), 4)), 2));
                            }
                            if (J$.X1(9529, J$.C(328, J$.B(490, '==', J$.G(3673, J$.R(3665, 'auth', auth, 0), 'length', 0), J$.T(3681, 2, 22, false), 0))))
                                J$.X1(3761, J$.P(3753, J$.R(3689, 'object', object, 0), 'auth', J$.T(3745, {
                                user: J$.G(3713, J$.R(3697, 'auth', auth, 0), J$.T(3705, 0, 22, false), 4),
                                password: J$.G(3737, J$.R(3721, 'auth', auth, 0), J$.T(3729, 1, 22, false), 4)
                            }, 11, false), 0));
                            var hostPart;
                            var urlOptions;
                            var servers;
                            var serverOptions = J$.X1(3793, J$.W(3785, 'serverOptions', J$.T(3777, {
                                socketOptions: J$.T(3769, {}, 11, false)
                            }, 11, false), serverOptions, 1));
                            var dbOptions = J$.X1(3825, J$.W(3817, 'dbOptions', J$.T(3809, {
                                read_preference_tags: J$.T(3801, [], 10, false)
                            }, 11, false), dbOptions, 1));
                            var replSetServersOptions = J$.X1(3857, J$.W(3849, 'replSetServersOptions', J$.T(3841, {
                                socketOptions: J$.T(3833, {}, 11, false)
                            }, 11, false), replSetServersOptions, 1));
                            J$.X1(3889, J$.P(3881, J$.R(3865, 'object', object, 0), 'server_options', J$.R(3873, 'serverOptions', serverOptions, 0), 0));
                            J$.X1(3921, J$.P(3913, J$.R(3897, 'object', object, 0), 'db_options', J$.R(3905, 'dbOptions', dbOptions, 0), 0));
                            J$.X1(3953, J$.P(3945, J$.R(3929, 'object', object, 0), 'rs_options', J$.R(3937, 'replSetServersOptions', replSetServersOptions, 0), 0));
                            J$.X1(3985, J$.P(3977, J$.R(3961, 'object', object, 0), 'mongos_options', J$.T(3969, {}, 11, false), 0));
                            if (J$.X1(9609, J$.C(392, J$.M(4009, J$.R(3993, 'url', url, 0), 'match', 0)(J$.T(4001, /\.sock/, 14, false))))) {
                                var domainSocket = J$.X1(4121, J$.W(4113, 'domainSocket', J$.M(4105, J$.R(4017, 'url', url, 0), 'substring', 0)(J$.B(498, '+', J$.M(4041, J$.R(4025, 'url', url, 0), 'indexOf', 0)(J$.T(4033, 'mongodb://', 21, false)), J$.G(4057, J$.T(4049, 'mongodb://', 21, false), 'length', 0), 0), J$.B(506, '+', J$.M(4081, J$.R(4065, 'url', url, 0), 'lastIndexOf', 0)(J$.T(4073, '.sock', 21, false)), J$.G(4097, J$.T(4089, '.sock', 21, false), 'length', 0), 0)), domainSocket, 1));
                                if (J$.X1(9537, J$.C(336, J$.B(522, '!=', J$.M(4145, J$.R(4129, 'domainSocket', domainSocket, 0), 'indexOf', 0)(J$.T(4137, '@', 21, false)), J$.U(514, '-', J$.T(4153, 1, 22, false)), 0))))
                                    J$.X1(4209, domainSocket = J$.W(4201, 'domainSocket', J$.G(4193, J$.M(4177, J$.R(4161, 'domainSocket', domainSocket, 0), 'split', 0)(J$.T(4169, '@', 21, false)), J$.T(4185, 1, 22, false), 4), domainSocket, 0));
                                J$.X1(4249, servers = J$.W(4241, 'servers', J$.T(4233, [J$.T(4225, {
                                        domain_socket: J$.R(4217, 'domainSocket', domainSocket, 0)
                                    }, 11, false)], 10, false), servers, 0));
                            } else {
                                J$.X1(4273, hostPart = J$.W(4265, 'hostPart', J$.R(4257, 'connection_part', connection_part, 0), hostPart, 0));
                                var deduplicatedServers = J$.X1(4297, J$.W(4289, 'deduplicatedServers', J$.T(4281, {}, 11, false), deduplicatedServers, 1));
                                J$.X1(5073, servers = J$.W(5065, 'servers', J$.M(5057, J$.M(4985, J$.M(4321, J$.R(4305, 'hostPart', hostPart, 0), 'split', 0)(J$.T(4313, ',', 21, false)), 'map', 0)(J$.T(4977, function (h) {
                                    jalangiLabel3036:
                                        while (true) {
                                            try {
                                                J$.Fe(4921, arguments.callee, this, arguments);
                                                arguments = J$.N(4929, 'arguments', arguments, 4);
                                                h = J$.N(4937, 'h', h, 4);
                                                J$.N(4945, '_host', _host, 0);
                                                J$.N(4953, '_port', _port, 0);
                                                J$.N(4961, 'ipv6match', ipv6match, 0);
                                                J$.N(4969, 'hostPort', hostPort, 0);
                                                var _host, _port, ipv6match;
                                                if (J$.X1(9561, J$.C(376, ipv6match = J$.W(4353, 'ipv6match', J$.M(4345, J$.T(4329, /\[([^\]]+)\](?:\:(.+))?/, 14, false), 'exec', 0)(J$.R(4337, 'h', h, 0)), ipv6match, 0)))) {
                                                    J$.X1(4393, _host = J$.W(4385, '_host', J$.G(4377, J$.R(4361, 'ipv6match', ipv6match, 0), J$.T(4369, 1, 22, false), 4), _host, 0));
                                                    J$.X1(4465, _port = J$.W(4457, '_port', J$.C(344, J$.F(4441, J$.R(4401, 'parseInt', parseInt, 2), 0)(J$.G(4425, J$.R(4409, 'ipv6match', ipv6match, 0), J$.T(4417, 2, 22, false), 4), J$.T(4433, 10, 22, false))) ? J$._() : J$.T(4449, 27017, 22, false), _port, 0));
                                                } else {
                                                    var hostPort = J$.X1(4513, J$.W(4505, 'hostPort', J$.M(4497, J$.R(4473, 'h', h, 0), 'split', 0)(J$.T(4481, ':', 21, false), J$.T(4489, 2, 22, false)), hostPort, 1));
                                                    J$.X1(4561, _host = J$.W(4553, '_host', J$.C(352, J$.G(4537, J$.R(4521, 'hostPort', hostPort, 0), J$.T(4529, 0, 22, false), 4)) ? J$._() : J$.T(4545, 'localhost', 21, false), _host, 0));
                                                    J$.X1(4665, _port = J$.W(4657, '_port', J$.X1(9545, J$.C(360, J$.B(530, '!=', J$.G(4585, J$.R(4569, 'hostPort', hostPort, 0), J$.T(4577, 1, 22, false), 4), J$.T(4593, null, 25, false), 0))) ? J$.F(4641, J$.R(4601, 'parseInt', parseInt, 2), 0)(J$.G(4625, J$.R(4609, 'hostPort', hostPort, 0), J$.T(4617, 1, 22, false), 4), J$.T(4633, 10, 22, false)) : J$.T(4649, 27017, 22, false), _port, 0));
                                                    if (J$.X1(9553, J$.C(368, J$.B(546, '!=', J$.M(4689, J$.R(4673, '_host', _host, 0), 'indexOf', 0)(J$.T(4681, '?', 21, false)), J$.U(538, '-', J$.T(4697, 1, 22, false)), 0))))
                                                        J$.X1(4753, _host = J$.W(4745, '_host', J$.G(4737, J$.M(4721, J$.R(4705, '_host', _host, 0), 'split', 0)(J$.T(4713, /\?/, 14, false)), J$.T(4729, 0, 22, false), 4), _host, 0));
                                                }
                                                if (J$.X1(9569, J$.C(384, J$.G(4793, J$.R(4761, 'deduplicatedServers', deduplicatedServers, 0), J$.B(562, '+', J$.B(554, '+', J$.R(4769, '_host', _host, 0), J$.T(4777, '_', 21, false), 0), J$.R(4785, '_port', _port, 0), 0), 4))))
                                                    return J$.X1(4817, J$.Rt(4809, J$.T(4801, null, 25, false)));
                                                J$.X1(4873, J$.P(4865, J$.R(4825, 'deduplicatedServers', deduplicatedServers, 0), J$.B(578, '+', J$.B(570, '+', J$.R(4833, '_host', _host, 0), J$.T(4841, '_', 21, false), 0), J$.R(4849, '_port', _port, 0), 0), J$.T(4857, 1, 22, false), 2));
                                                return J$.X1(4913, J$.Rt(4905, J$.T(4897, {
                                                    host: J$.R(4881, '_host', _host, 0),
                                                    port: J$.R(4889, '_port', _port, 0)
                                                }, 11, false)));
                                            } catch (J$e) {
                                                J$.Ex(9577, J$e);
                                            } finally {
                                                if (J$.Fr(9585))
                                                    continue jalangiLabel3036;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 4921)), 'filter', 0)(J$.T(5049, function (x) {
                                    jalangiLabel3037:
                                        while (true) {
                                            try {
                                                J$.Fe(5025, arguments.callee, this, arguments);
                                                arguments = J$.N(5033, 'arguments', arguments, 4);
                                                x = J$.N(5041, 'x', x, 4);
                                                return J$.X1(5017, J$.Rt(5009, J$.B(586, '!=', J$.R(4993, 'x', x, 0), J$.T(5001, null, 25, false), 0)));
                                            } catch (J$e) {
                                                J$.Ex(9593, J$e);
                                            } finally {
                                                if (J$.Fr(9601))
                                                    continue jalangiLabel3037;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 5025)), servers, 0));
                            }
                            J$.X1(5113, J$.P(5105, J$.R(5081, 'object', object, 0), 'dbName', J$.C(400, J$.R(5089, 'dbName', dbName, 0)) ? J$._() : J$.T(5097, 'admin', 21, false), 0));
                            J$.X1(5161, urlOptions = J$.W(5153, 'urlOptions', J$.M(5145, J$.C(408, J$.R(5121, 'query_string_part', query_string_part, 0)) ? J$._() : J$.T(5129, '', 21, false), 'split', 0)(J$.T(5137, /[&;]/, 14, false)), urlOptions, 0));
                            J$.X1(8657, J$.M(8649, J$.R(5169, 'urlOptions', urlOptions, 0), 'forEach', 0)(J$.T(8641, function (opt) {
                                jalangiLabel3039:
                                    while (true) {
                                        try {
                                            J$.Fe(8537, arguments.callee, this, arguments);
                                            arguments = J$.N(8545, 'arguments', arguments, 4);
                                            opt = J$.N(8553, 'opt', opt, 4);
                                            J$.N(8561, 'splitOpt', splitOpt, 0);
                                            J$.N(8569, 'name', name, 0);
                                            J$.N(8577, 'value', value, 0);
                                            J$.N(8585, 'urlDecodeAuthPart', urlDecodeAuthPart, 0);
                                            J$.N(8593, 'values', values, 0);
                                            J$.N(8601, 'o', o, 0);
                                            J$.N(8609, 'tagObject', tagObject, 0);
                                            J$.N(8617, 'tags', tags, 0);
                                            J$.N(8625, 'i', i, 0);
                                            J$.N(8633, 'parts', parts, 0);
                                            if (J$.X1(9617, J$.C(416, J$.U(594, '!', J$.R(5177, 'opt', opt, 0)))))
                                                return J$.X1(5193, J$.Rt(5185, undefined));
                                            var splitOpt = J$.X1(5281, J$.W(5273, 'splitOpt', J$.M(5217, J$.R(5201, 'opt', opt, 0), 'split', 0)(J$.T(5209, '=', 21, false)), splitOpt, 1)), name = J$.X1(5297, J$.W(5289, 'name', J$.G(5241, J$.R(5225, 'splitOpt', splitOpt, 0), J$.T(5233, 0, 22, false), 4), name, 1)), value = J$.X1(5313, J$.W(5305, 'value', J$.G(5265, J$.R(5249, 'splitOpt', splitOpt, 0), J$.T(5257, 1, 22, false), 4), value, 1));
                                            switch (J$.X1(9737, J$.C1(560, J$.R(5321, 'name', name, 0)))) {
                                            case J$.X1(9745, J$.C2(568, J$.T(5329, 'slaveOk', 21, false))):
                                            case J$.X1(9753, J$.C2(576, J$.T(5417, 'slave_ok', 21, false))):
                                                J$.X1(5369, J$.P(5361, J$.R(5337, 'serverOptions', serverOptions, 0), 'slave_ok', J$.B(602, '==', J$.R(5345, 'value', value, 0), J$.T(5353, 'true', 21, false), 0), 0));
                                                J$.X1(5409, J$.P(5401, J$.R(5377, 'dbOptions', dbOptions, 0), 'slaveOk', J$.B(610, '==', J$.R(5385, 'value', value, 0), J$.T(5393, 'true', 21, false), 0), 0));
                                                break;
                                            case J$.X1(9761, J$.C2(584, J$.T(5425, 'maxPoolSize', 21, false))):
                                            case J$.X1(9769, J$.C2(592, J$.T(5545, 'poolSize', 21, false))):
                                                J$.X1(5481, J$.P(5473, J$.R(5433, 'serverOptions', serverOptions, 0), 'poolSize', J$.F(5465, J$.R(5441, 'parseInt', parseInt, 2), 0)(J$.R(5449, 'value', value, 0), J$.T(5457, 10, 22, false)), 0));
                                                J$.X1(5537, J$.P(5529, J$.R(5489, 'replSetServersOptions', replSetServersOptions, 0), 'poolSize', J$.F(5521, J$.R(5497, 'parseInt', parseInt, 2), 0)(J$.R(5505, 'value', value, 0), J$.T(5513, 10, 22, false)), 0));
                                                break;
                                            case J$.X1(9777, J$.C2(600, J$.T(5553, 'autoReconnect', 21, false))):
                                            case J$.X1(9785, J$.C2(608, J$.T(5601, 'auto_reconnect', 21, false))):
                                                J$.X1(5593, J$.P(5585, J$.R(5561, 'serverOptions', serverOptions, 0), 'auto_reconnect', J$.B(618, '==', J$.R(5569, 'value', value, 0), J$.T(5577, 'true', 21, false), 0), 0));
                                                break;
                                            case J$.X1(9793, J$.C2(616, J$.T(5649, 'minPoolSize', 21, false))):
                                                throw J$.X1(5641, J$.Th(5633, J$.F(5625, J$.R(5609, 'Error', Error, 2), 1)(J$.T(5617, 'minPoolSize not supported', 21, false))));
                                            case J$.X1(9801, J$.C2(624, J$.T(5697, 'maxIdleTimeMS', 21, false))):
                                                throw J$.X1(5689, J$.Th(5681, J$.F(5673, J$.R(5657, 'Error', Error, 2), 1)(J$.T(5665, 'maxIdleTimeMS not supported', 21, false))));
                                            case J$.X1(9809, J$.C2(632, J$.T(5745, 'waitQueueMultiple', 21, false))):
                                                throw J$.X1(5737, J$.Th(5729, J$.F(5721, J$.R(5705, 'Error', Error, 2), 1)(J$.T(5713, 'waitQueueMultiple not supported', 21, false))));
                                            case J$.X1(9817, J$.C2(640, J$.T(5793, 'waitQueueTimeoutMS', 21, false))):
                                                throw J$.X1(5785, J$.Th(5777, J$.F(5769, J$.R(5753, 'Error', Error, 2), 1)(J$.T(5761, 'waitQueueTimeoutMS not supported', 21, false))));
                                            case J$.X1(9825, J$.C2(648, J$.T(5841, 'uuidRepresentation', 21, false))):
                                                throw J$.X1(5833, J$.Th(5825, J$.F(5817, J$.R(5801, 'Error', Error, 2), 1)(J$.T(5809, 'uuidRepresentation not supported', 21, false))));
                                            case J$.X1(9833, J$.C2(656, J$.T(6009, 'ssl', 21, false))):
                                                if (J$.X1(9625, J$.C(424, J$.B(626, '==', J$.R(5849, 'value', value, 0), J$.T(5857, 'prefer', 21, false), 0)))) {
                                                    J$.X1(5889, J$.P(5881, J$.R(5865, 'serverOptions', serverOptions, 0), 'ssl', J$.R(5873, 'value', value, 0), 0));
                                                    J$.X1(5921, J$.P(5913, J$.R(5897, 'replSetServersOptions', replSetServersOptions, 0), 'ssl', J$.R(5905, 'value', value, 0), 0));
                                                    break;
                                                }
                                                J$.X1(5961, J$.P(5953, J$.R(5929, 'serverOptions', serverOptions, 0), 'ssl', J$.B(634, '==', J$.R(5937, 'value', value, 0), J$.T(5945, 'true', 21, false), 0), 0));
                                                J$.X1(6001, J$.P(5993, J$.R(5969, 'replSetServersOptions', replSetServersOptions, 0), 'ssl', J$.B(642, '==', J$.R(5977, 'value', value, 0), J$.T(5985, 'true', 21, false), 0), 0));
                                                break;
                                            case J$.X1(9841, J$.C2(664, J$.T(6097, 'sslValidate', 21, false))):
                                                J$.X1(6049, J$.P(6041, J$.R(6017, 'serverOptions', serverOptions, 0), 'sslValidate', J$.B(650, '==', J$.R(6025, 'value', value, 0), J$.T(6033, 'true', 21, false), 0), 0));
                                                J$.X1(6089, J$.P(6081, J$.R(6057, 'replSetServerOptions', replSetServerOptions, 2), 'sslValidate', J$.B(658, '==', J$.R(6065, 'value', value, 0), J$.T(6073, 'true', 21, false), 0), 0));
                                                break;
                                            case J$.X1(9849, J$.C2(672, J$.T(6105, 'replicaSet', 21, false))):
                                            case J$.X1(9857, J$.C2(680, J$.T(6145, 'rs_name', 21, false))):
                                                J$.X1(6137, J$.P(6129, J$.R(6113, 'replSetServersOptions', replSetServersOptions, 0), 'rs_name', J$.R(6121, 'value', value, 0), 0));
                                                break;
                                            case J$.X1(9865, J$.C2(688, J$.T(6209, 'reconnectWait', 21, false))):
                                                J$.X1(6201, J$.P(6193, J$.R(6153, 'replSetServersOptions', replSetServersOptions, 0), 'reconnectWait', J$.F(6185, J$.R(6161, 'parseInt', parseInt, 2), 0)(J$.R(6169, 'value', value, 0), J$.T(6177, 10, 22, false)), 0));
                                                break;
                                            case J$.X1(9873, J$.C2(696, J$.T(6273, 'retries', 21, false))):
                                                J$.X1(6265, J$.P(6257, J$.R(6217, 'replSetServersOptions', replSetServersOptions, 0), 'retries', J$.F(6249, J$.R(6225, 'parseInt', parseInt, 2), 0)(J$.R(6233, 'value', value, 0), J$.T(6241, 10, 22, false)), 0));
                                                break;
                                            case J$.X1(9881, J$.C2(704, J$.T(6281, 'readSecondary', 21, false))):
                                            case J$.X1(9889, J$.C2(712, J$.T(6329, 'read_secondary', 21, false))):
                                                J$.X1(6321, J$.P(6313, J$.R(6289, 'replSetServersOptions', replSetServersOptions, 0), 'read_secondary', J$.B(666, '==', J$.R(6297, 'value', value, 0), J$.T(6305, 'true', 21, false), 0), 0));
                                                break;
                                            case J$.X1(9897, J$.C2(720, J$.T(6377, 'fsync', 21, false))):
                                                J$.X1(6369, J$.P(6361, J$.R(6337, 'dbOptions', dbOptions, 0), 'fsync', J$.B(674, '==', J$.R(6345, 'value', value, 0), J$.T(6353, 'true', 21, false), 0), 0));
                                                break;
                                            case J$.X1(9905, J$.C2(728, J$.T(6425, 'journal', 21, false))):
                                                J$.X1(6417, J$.P(6409, J$.R(6385, 'dbOptions', dbOptions, 0), 'j', J$.B(682, '==', J$.R(6393, 'value', value, 0), J$.T(6401, 'true', 21, false), 0), 0));
                                                break;
                                            case J$.X1(9913, J$.C2(736, J$.T(6473, 'safe', 21, false))):
                                                J$.X1(6465, J$.P(6457, J$.R(6433, 'dbOptions', dbOptions, 0), 'safe', J$.B(690, '==', J$.R(6441, 'value', value, 0), J$.T(6449, 'true', 21, false), 0), 0));
                                                break;
                                            case J$.X1(9921, J$.C2(744, J$.T(6481, 'nativeParser', 21, false))):
                                            case J$.X1(9929, J$.C2(752, J$.T(6529, 'native_parser', 21, false))):
                                                J$.X1(6521, J$.P(6513, J$.R(6489, 'dbOptions', dbOptions, 0), 'native_parser', J$.B(698, '==', J$.R(6497, 'value', value, 0), J$.T(6505, 'true', 21, false), 0), 0));
                                                break;
                                            case J$.X1(9937, J$.C2(760, J$.T(6577, 'readConcernLevel', 21, false))):
                                                J$.X1(6569, J$.P(6561, J$.R(6537, 'dbOptions', dbOptions, 0), 'readConcern', J$.T(6553, {
                                                    level: J$.R(6545, 'value', value, 0)
                                                }, 11, false), 0));
                                                break;
                                            case J$.X1(9945, J$.C2(768, J$.T(6713, 'connectTimeoutMS', 21, false))):
                                                J$.X1(6641, J$.P(6633, J$.G(6593, J$.R(6585, 'serverOptions', serverOptions, 0), 'socketOptions', 0), 'connectTimeoutMS', J$.F(6625, J$.R(6601, 'parseInt', parseInt, 2), 0)(J$.R(6609, 'value', value, 0), J$.T(6617, 10, 22, false)), 0));
                                                J$.X1(6705, J$.P(6697, J$.G(6657, J$.R(6649, 'replSetServersOptions', replSetServersOptions, 0), 'socketOptions', 0), 'connectTimeoutMS', J$.F(6689, J$.R(6665, 'parseInt', parseInt, 2), 0)(J$.R(6673, 'value', value, 0), J$.T(6681, 10, 22, false)), 0));
                                                break;
                                            case J$.X1(9953, J$.C2(776, J$.T(6849, 'socketTimeoutMS', 21, false))):
                                                J$.X1(6777, J$.P(6769, J$.G(6729, J$.R(6721, 'serverOptions', serverOptions, 0), 'socketOptions', 0), 'socketTimeoutMS', J$.F(6761, J$.R(6737, 'parseInt', parseInt, 2), 0)(J$.R(6745, 'value', value, 0), J$.T(6753, 10, 22, false)), 0));
                                                J$.X1(6841, J$.P(6833, J$.G(6793, J$.R(6785, 'replSetServersOptions', replSetServersOptions, 0), 'socketOptions', 0), 'socketTimeoutMS', J$.F(6825, J$.R(6801, 'parseInt', parseInt, 2), 0)(J$.R(6809, 'value', value, 0), J$.T(6817, 10, 22, false)), 0));
                                                break;
                                            case J$.X1(9961, J$.C2(784, J$.T(6977, 'w', 21, false))):
                                                J$.X1(6905, J$.P(6897, J$.R(6857, 'dbOptions', dbOptions, 0), 'w', J$.F(6889, J$.R(6865, 'parseInt', parseInt, 2), 0)(J$.R(6873, 'value', value, 0), J$.T(6881, 10, 22, false)), 0));
                                                if (J$.X1(9633, J$.C(432, J$.F(6937, J$.R(6913, 'isNaN', isNaN, 2), 0)(J$.G(6929, J$.R(6921, 'dbOptions', dbOptions, 0), 'w', 0)))))
                                                    J$.X1(6969, J$.P(6961, J$.R(6945, 'dbOptions', dbOptions, 0), 'w', J$.R(6953, 'value', value, 0), 0));
                                                break;
                                            case J$.X1(9969, J$.C2(792, J$.T(7017, 'authSource', 21, false))):
                                                J$.X1(7009, J$.P(7001, J$.R(6985, 'dbOptions', dbOptions, 0), 'authSource', J$.R(6993, 'value', value, 0), 0));
                                                break;
                                            case J$.X1(9977, J$.C2(800, J$.T(7057, 'gssapiServiceName', 21, false))):
                                                J$.X1(7049, J$.P(7041, J$.R(7025, 'dbOptions', dbOptions, 0), 'gssapiServiceName', J$.R(7033, 'value', value, 0), 0));
                                                break;
                                            case J$.X1(9985, J$.C2(808, J$.T(7577, 'authMechanism', 21, false))):
                                                if (J$.X1(9665, J$.C(464, J$.B(706, '==', J$.R(7065, 'value', value, 0), J$.T(7073, 'GSSAPI', 21, false), 0)))) {
                                                    if (J$.X1(9649, J$.C(448, J$.B(714, '==', J$.G(7089, J$.R(7081, 'object', object, 0), 'auth', 0), J$.T(7097, null, 25, false), 0)))) {
                                                        var urlDecodeAuthPart = J$.X1(7137, J$.W(7129, 'urlDecodeAuthPart', J$.F(7121, J$.R(7105, 'decodeURIComponent', decodeURIComponent, 2), 0)(J$.R(7113, 'authPart', authPart, 0)), urlDecodeAuthPart, 1));
                                                        if (J$.X1(9641, J$.C(440, J$.B(730, '==', J$.M(7161, J$.R(7145, 'urlDecodeAuthPart', urlDecodeAuthPart, 0), 'indexOf', 0)(J$.T(7153, '@', 21, false)), J$.U(722, '-', J$.T(7169, 1, 22, false)), 0))))
                                                            throw J$.X1(7209, J$.Th(7201, J$.F(7193, J$.R(7177, 'Error', Error, 2), 1)(J$.T(7185, 'GSSAPI requires a provided principal', 21, false))));
                                                        J$.X1(7257, J$.P(7249, J$.R(7217, 'object', object, 0), 'auth', J$.T(7241, {
                                                            user: J$.R(7225, 'urlDecodeAuthPart', urlDecodeAuthPart, 0),
                                                            password: J$.T(7233, null, 25, false)
                                                        }, 11, false), 0));
                                                    } else {
                                                        J$.X1(7329, J$.P(7321, J$.G(7273, J$.R(7265, 'object', object, 0), 'auth', 0), 'user', J$.F(7313, J$.R(7281, 'decodeURIComponent', decodeURIComponent, 2), 0)(J$.G(7305, J$.G(7297, J$.R(7289, 'object', object, 0), 'auth', 0), 'user', 0)), 0));
                                                    }
                                                } else if (J$.X1(9657, J$.C(456, J$.B(738, '==', J$.R(7337, 'value', value, 0), J$.T(7345, 'MONGODB-X509', 21, false), 0)))) {
                                                    J$.X1(7401, J$.P(7393, J$.R(7353, 'object', object, 0), 'auth', J$.T(7385, {
                                                        user: J$.F(7377, J$.R(7361, 'decodeURIComponent', decodeURIComponent, 2), 0)(J$.R(7369, 'authPart', authPart, 0))
                                                    }, 11, false), 0));
                                                }
                                                if (J$.X1(9673, J$.C(512, J$.C(504, J$.C(496, J$.C(488, J$.C(480, J$.C(472, J$.B(746, '!=', J$.R(7409, 'value', value, 0), J$.T(7417, 'GSSAPI', 21, false), 0)) ? J$.B(754, '!=', J$.R(7425, 'value', value, 0), J$.T(7433, 'MONGODB-X509', 21, false), 0) : J$._()) ? J$.B(762, '!=', J$.R(7441, 'value', value, 0), J$.T(7449, 'MONGODB-CR', 21, false), 0) : J$._()) ? J$.B(770, '!=', J$.R(7457, 'value', value, 0), J$.T(7465, 'DEFAULT', 21, false), 0) : J$._()) ? J$.B(778, '!=', J$.R(7473, 'value', value, 0), J$.T(7481, 'SCRAM-SHA-1', 21, false), 0) : J$._()) ? J$.B(786, '!=', J$.R(7489, 'value', value, 0), J$.T(7497, 'PLAIN', 21, false), 0) : J$._())))
                                                    throw J$.X1(7537, J$.Th(7529, J$.F(7521, J$.R(7505, 'Error', Error, 2), 1)(J$.T(7513, 'only DEFAULT, GSSAPI, PLAIN, MONGODB-X509, SCRAM-SHA-1 or MONGODB-CR is supported by authMechanism', 21, false))));
                                                J$.X1(7569, J$.P(7561, J$.R(7545, 'dbOptions', dbOptions, 0), 'authMechanism', J$.R(7553, 'value', value, 0), 0));
                                                break;
                                            case J$.X1(9993, J$.C2(816, J$.T(7921, 'authMechanismProperties', 21, false))):
                                                var values = J$.X1(7617, J$.W(7609, 'values', J$.M(7601, J$.R(7585, 'value', value, 0), 'split', 0)(J$.T(7593, ',', 21, false)), values, 1));
                                                var o = J$.X1(7641, J$.W(7633, 'o', J$.T(7625, {}, 11, false), o, 1));
                                                J$.X1(7817, J$.M(7809, J$.R(7649, 'values', values, 0), 'forEach', 0)(J$.T(7801, function (x) {
                                                    jalangiLabel3038:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(7769, arguments.callee, this, arguments);
                                                                arguments = J$.N(7777, 'arguments', arguments, 4);
                                                                x = J$.N(7785, 'x', x, 4);
                                                                J$.N(7793, 'v', v, 0);
                                                                var v = J$.X1(7689, J$.W(7681, 'v', J$.M(7673, J$.R(7657, 'x', x, 0), 'split', 0)(J$.T(7665, ':', 21, false)), v, 1));
                                                                J$.X1(7761, J$.P(7753, J$.R(7697, 'o', o, 0), J$.G(7721, J$.R(7705, 'v', v, 0), J$.T(7713, 0, 22, false), 4), J$.G(7745, J$.R(7729, 'v', v, 0), J$.T(7737, 1, 22, false), 4), 2));
                                                            } catch (J$e) {
                                                                J$.Ex(9681, J$e);
                                                            } finally {
                                                                if (J$.Fr(9689))
                                                                    continue jalangiLabel3038;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 7769)));
                                                J$.X1(7849, J$.P(7841, J$.R(7825, 'dbOptions', dbOptions, 0), 'authMechanismProperties', J$.R(7833, 'o', o, 0), 0));
                                                if (J$.X1(9697, J$.C(520, J$.B(802, '==', J$.U(794, 'typeof', J$.G(7865, J$.R(7857, 'o', o, 0), 'SERVICE_NAME', 0)), J$.T(7873, 'string', 21, false), 0))))
                                                    J$.X1(7913, J$.P(7905, J$.R(7881, 'dbOptions', dbOptions, 0), 'gssapiServiceName', J$.G(7897, J$.R(7889, 'o', o, 0), 'SERVICE_NAME', 0), 0));
                                                break;
                                            case J$.X1(10001, J$.C2(824, J$.T(7985, 'wtimeoutMS', 21, false))):
                                                J$.X1(7977, J$.P(7969, J$.R(7929, 'dbOptions', dbOptions, 0), 'wtimeout', J$.F(7961, J$.R(7937, 'parseInt', parseInt, 2), 0)(J$.R(7945, 'value', value, 0), J$.T(7953, 10, 22, false)), 0));
                                                break;
                                            case J$.X1(10009, J$.C2(832, J$.T(8089, 'readPreference', 21, false))):
                                                if (J$.X1(9705, J$.C(528, J$.U(810, '!', J$.M(8009, J$.R(7993, 'ReadPreference', ReadPreference, 1), 'isValid', 0)(J$.R(8001, 'value', value, 0))))))
                                                    throw J$.X1(8049, J$.Th(8041, J$.F(8033, J$.R(8017, 'Error', Error, 2), 1)(J$.T(8025, 'readPreference must be either primary/primaryPreferred/secondary/secondaryPreferred/nearest', 21, false))));
                                                J$.X1(8081, J$.P(8073, J$.R(8057, 'dbOptions', dbOptions, 0), 'readPreference', J$.R(8065, 'value', value, 0), 0));
                                                break;
                                            case J$.X1(10017, J$.C2(840, J$.T(8529, 'readPreferenceTags', 21, false))):
                                                J$.X1(8129, value = J$.W(8121, 'value', J$.F(8113, J$.R(8097, 'decodeURIComponent', decodeURIComponent, 2), 0)(J$.R(8105, 'value', value, 0)), value, 0));
                                                var tagObject = J$.X1(8153, J$.W(8145, 'tagObject', J$.T(8137, {}, 11, false), tagObject, 1));
                                                if (J$.X1(9713, J$.C(544, J$.C(536, J$.B(818, '==', J$.R(8161, 'value', value, 0), J$.T(8169, null, 25, false), 0)) ? J$._() : J$.B(826, '==', J$.R(8177, 'value', value, 0), J$.T(8185, '', 21, false), 0)))) {
                                                    J$.X1(8225, J$.M(8217, J$.G(8201, J$.R(8193, 'dbOptions', dbOptions, 0), 'read_preference_tags', 0), 'push', 0)(J$.R(8209, 'tagObject', tagObject, 0)));
                                                    break;
                                                }
                                                var tags = J$.X1(8265, J$.W(8257, 'tags', J$.M(8249, J$.R(8233, 'value', value, 0), 'split', 0)(J$.T(8241, /\,/, 14, false)), tags, 1));
                                                for (var i = J$.X1(8289, J$.W(8281, 'i', J$.T(8273, 0, 22, false), i, 1)); J$.X1(9721, J$.C(552, J$.B(834, '<', J$.R(8297, 'i', i, 0), J$.G(8313, J$.R(8305, 'tags', tags, 0), 'length', 0), 0))); J$.X1(9729, J$.B(858, '-', i = J$.W(8337, 'i', J$.B(850, '+', J$.U(842, '+', J$.R(8329, 'i', i, 0)), J$.T(8321, 1, 22, false), 0), i, 0), J$.T(8345, 1, 22, false), 0))) {
                                                    var parts = J$.X1(8409, J$.W(8401, 'parts', J$.M(8393, J$.M(8377, J$.G(8369, J$.R(8353, 'tags', tags, 0), J$.R(8361, 'i', i, 0), 4), 'trim', 0)(), 'split', 0)(J$.T(8385, /\:/, 14, false)), parts, 1));
                                                    J$.X1(8481, J$.P(8473, J$.R(8417, 'tagObject', tagObject, 0), J$.G(8441, J$.R(8425, 'parts', parts, 0), J$.T(8433, 0, 22, false), 4), J$.G(8465, J$.R(8449, 'parts', parts, 0), J$.T(8457, 1, 22, false), 4), 2));
                                                }
                                                J$.X1(8521, J$.M(8513, J$.G(8497, J$.R(8489, 'dbOptions', dbOptions, 0), 'read_preference_tags', 0), 'push', 0)(J$.R(8505, 'tagObject', tagObject, 0)));
                                                break;
                                            default:
                                                break;
                                            }
                                        } catch (J$e) {
                                            J$.Ex(10025, J$e);
                                        } finally {
                                            if (J$.Fr(10033))
                                                continue jalangiLabel3039;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 8537)));
                            if (J$.X1(10041, J$.C(848, J$.B(866, '===', J$.G(8681, J$.G(8673, J$.R(8665, 'dbOptions', dbOptions, 0), 'read_preference_tags', 0), 'length', 0), J$.T(8689, 0, 22, false), 0)))) {
                                J$.X1(8721, J$.P(8713, J$.R(8697, 'dbOptions', dbOptions, 0), 'read_preference_tags', J$.T(8705, null, 25, false), 0));
                            }
                            if (J$.X1(10049, J$.C(888, J$.C(880, J$.C(856, J$.B(882, '==', J$.G(8737, J$.R(8729, 'dbOptions', dbOptions, 0), 'w', 0), J$.U(874, '-', J$.T(8745, 1, 22, false)), 0)) ? J$._() : J$.B(890, '==', J$.G(8761, J$.R(8753, 'dbOptions', dbOptions, 0), 'w', 0), J$.T(8769, 0, 22, false), 0)) ? J$.C(872, J$.C(864, J$.B(898, '==', J$.G(8785, J$.R(8777, 'dbOptions', dbOptions, 0), 'journal', 0), J$.T(8793, true, 23, false), 0)) ? J$._() : J$.B(906, '==', J$.G(8809, J$.R(8801, 'dbOptions', dbOptions, 0), 'fsync', 0), J$.T(8817, true, 23, false), 0)) ? J$._() : J$.B(914, '==', J$.G(8833, J$.R(8825, 'dbOptions', dbOptions, 0), 'safe', 0), J$.T(8841, true, 23, false), 0) : J$._())))
                                throw J$.X1(8881, J$.Th(8873, J$.F(8865, J$.R(8849, 'Error', Error, 2), 1)(J$.T(8857, 'w set to -1 or 0 cannot be combined with safe/w/journal/fsync', 21, false))));
                            if (J$.X1(10057, J$.C(896, J$.U(922, '!', J$.G(8897, J$.R(8889, 'dbOptions', dbOptions, 0), 'readPreference', 0))))) {
                                J$.X1(8929, J$.P(8921, J$.R(8905, 'dbOptions', dbOptions, 0), 'readPreference', J$.T(8913, 'primary', 21, false), 0));
                            }
                            J$.X1(8961, J$.P(8953, J$.R(8937, 'object', object, 0), 'servers', J$.R(8945, 'servers', servers, 0), 0));
                            return J$.X1(8985, J$.Rt(8977, J$.R(8969, 'object', object, 0)));
                        } catch (J$e) {
                            J$.Ex(10065, J$e);
                        } finally {
                            if (J$.Fr(10073))
                                continue jalangiLabel3040;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 8993), 0));
        } catch (J$e) {
            J$.Ex(10081, J$e);
        } finally {
            if (J$.Sr(10089)) {
                J$.L();
                continue jalangiLabel3041;
            } else {
                J$.L();
                break jalangiLabel3041;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
