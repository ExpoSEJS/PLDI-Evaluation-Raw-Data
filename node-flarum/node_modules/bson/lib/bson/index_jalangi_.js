J$.iids = {"9":[1,20,1,27],"17":[1,28,1,32],"25":[1,20,1,33],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[4,5,4,12],"89":[4,24,4,31],"97":[4,32,4,40],"105":[4,24,4,41],"113":[4,5,4,41],"121":[4,5,4,42],"129":[5,5,5,12],"137":[5,26,5,33],"145":[5,34,5,42],"153":[5,26,5,43],"161":[5,5,5,43],"169":[5,5,5,44],"177":[6,3,7,2],"185":[9,5,9,22],"193":[10,5,10,15],"201":[11,5,11,13],"209":[12,5,12,12],"217":[13,5,13,15],"225":[14,5,14,15],"233":[15,5,15,16],"241":[16,5,16,16],"249":[17,5,17,17],"257":[18,5,18,15],"265":[19,5,19,15],"273":[20,5,20,18],"281":[21,5,21,13],"289":[8,1,22,2],"297":[23,18,23,25],"305":[23,26,23,30],"313":[23,18,23,31],"321":[23,18,23,31],"329":[23,18,23,31],"337":[24,19,24,25],"345":[25,9,25,16],"353":[25,17,25,18],"361":[25,22,25,28],"369":[25,29,25,30],"377":[25,22,25,31],"385":[25,9,25,31],"393":[25,9,25,32],"401":[24,19,24,25],"409":[24,5,26,6],"417":[24,5,26,6],"425":[22,11,27,2],"433":[22,11,27,2],"441":[22,11,27,2],"449":[22,11,27,2],"457":[22,11,27,2],"465":[22,11,27,2],"473":[8,1,27,3],"475":[8,1,22,10],"481":[8,1,27,4],"489":[28,1,28,8],"497":[29,19,29,21],"505":[29,19,29,21],"513":[29,19,29,21],"521":[31,9,31,26],"529":[32,9,32,19],"537":[33,9,33,17],"545":[34,9,34,16],"553":[35,9,35,19],"561":[36,9,36,19],"569":[37,9,37,20],"577":[38,9,38,20],"585":[39,9,39,21],"593":[40,9,40,19],"601":[41,9,41,19],"609":[42,9,42,22],"617":[43,9,43,17],"625":[44,9,44,17],"633":[30,5,45,6],"641":[46,22,46,29],"649":[46,30,46,34],"657":[46,22,46,35],"665":[46,22,46,35],"673":[46,22,46,35],"681":[47,23,47,29],"689":[48,13,48,20],"697":[48,21,48,22],"705":[48,26,48,32],"713":[48,33,48,34],"721":[48,26,48,35],"729":[48,13,48,35],"737":[48,13,48,36],"745":[47,23,47,29],"753":[47,9,49,10],"761":[47,9,49,10],"769":[45,15,50,6],"777":[45,15,50,6],"785":[45,15,50,6],"793":[45,15,50,6],"801":[45,15,50,6],"809":[45,15,50,6],"817":[30,5,50,7],"819":[30,5,45,14],"825":[30,5,50,8],"833":[51,12,51,19],"841":[51,12,51,19],"849":[51,5,51,20],"857":[28,16,52,2],"865":[28,16,52,2],"873":[28,16,52,2],"881":[28,16,52,2],"889":[28,1,52,2],"897":[28,1,52,3],"905":[53,1,53,8],"913":[54,19,54,21],"921":[54,19,54,21],"929":[54,19,54,21],"937":[56,9,56,26],"945":[57,9,57,19],"953":[58,9,58,17],"961":[59,9,59,16],"969":[60,9,60,19],"977":[61,9,61,19],"985":[62,9,62,20],"993":[63,9,63,20],"1001":[64,9,64,21],"1009":[65,9,65,19],"1017":[66,9,66,19],"1025":[67,9,67,22],"1033":[68,9,68,17],"1041":[55,5,69,6],"1049":[70,22,70,29],"1057":[70,30,70,34],"1065":[70,22,70,35],"1073":[70,22,70,35],"1081":[70,22,70,35],"1089":[71,23,71,29],"1097":[72,13,72,20],"1105":[72,21,72,22],"1113":[72,26,72,32],"1121":[72,33,72,34],"1129":[72,26,72,35],"1137":[72,13,72,35],"1145":[72,13,72,36],"1153":[71,23,71,29],"1161":[71,9,73,10],"1169":[71,9,73,10],"1177":[69,15,74,6],"1185":[69,15,74,6],"1193":[69,15,74,6],"1201":[69,15,74,6],"1209":[69,15,74,6],"1217":[69,15,74,6],"1225":[55,5,74,7],"1227":[55,5,69,14],"1233":[55,5,74,8],"1241":[76,9,76,16],"1249":[76,17,76,23],"1257":[76,27,76,34],"1265":[76,35,76,43],"1273":[76,27,76,44],"1281":[76,9,76,44],"1289":[76,9,76,45],"1297":[78,16,78,23],"1305":[78,16,78,30],"1307":[78,16,78,28],"1313":[78,16,78,30],"1321":[78,9,78,31],"1329":[77,7,79,6],"1337":[80,12,80,19],"1345":[80,12,80,19],"1353":[80,5,80,20],"1361":[53,18,81,2],"1369":[53,18,81,2],"1377":[53,18,81,2],"1385":[53,18,81,2],"1393":[53,1,81,2],"1401":[53,1,81,3],"1409":[1,1,81,3],"1417":[1,1,81,3],"1425":[1,1,81,3],"1433":[22,11,27,2],"1441":[22,11,27,2],"1449":[45,15,50,6],"1457":[45,15,50,6],"1465":[28,16,52,2],"1473":[28,16,52,2],"1481":[69,15,74,6],"1489":[69,15,74,6],"1497":[53,18,81,2],"1505":[53,18,81,2],"1513":[1,1,81,3],"1521":[1,1,81,3],"nBranches":0,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/bson/lib/bson/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/bson/lib/bson/index_jalangi_.js","code":"try {\n  exports.BSONPure = require('./bson');\n  exports.BSONNative = require('./bson');\n} catch(err) {\n}\n\n[ './binary_parser'\n  , './binary'\n  , './code'\n  , './map'\n  , './db_ref'\n  , './double'\n  , './max_key'\n  , './min_key'\n  , './objectid'\n  , './regexp'\n  , './symbol'\n  , './timestamp'\n  , './long'].forEach(function (path) {\n  \tvar module = require(path);\n  \tfor (var i in module) {\n  \t\texports[i] = module[i];\n    }\n});\n\n// Exports all the classes for the PURE JS BSON Parser\nexports.pure = function() {\n  var classes = {};\n  // Map all the classes\n  [ './binary_parser'\n    , './binary'\n    , './code'\n    , './map'\n    , './db_ref'\n    , './double'\n    , './max_key'\n    , './min_key'\n    , './objectid'\n    , './regexp'\n    , './symbol'\n    , './timestamp'\n    , './long'\n    , './bson'].forEach(function (path) {\n    \tvar module = require(path);\n    \tfor (var i in module) {\n    \t\tclasses[i] = module[i];\n      }\n  });\n  // Return classes list\n  return classes;\n}\n\n// Exports all the classes for the NATIVE JS BSON Parser\nexports.native = function() {\n  var classes = {};\n  // Map all the classes\n  [ './binary_parser'\n    , './binary'\n    , './code'\n    , './map'\n    , './db_ref'\n    , './double'\n    , './max_key'\n    , './min_key'\n    , './objectid'\n    , './regexp'\n    , './symbol'\n    , './timestamp'\n    , './long'\n  ].forEach(function (path) {\n      var module = require(path);\n      for (var i in module) {\n        classes[i] = module[i];\n      }\n  });\n\n  // Catch error and return no classes found\n  try {\n    classes['BSON'] = require('./bson');\n  } catch(err) {\n    return exports.pure();\n  }\n\n  // Return classes list\n  return classes;\n}\n"};
jalangiLabel1480:
    while (true) {
        try {
            J$.Se(1409, '/home/blake/ExpoSE/Targets/node-flarum/node_modules/bson/lib/bson/index_jalangi_.js', '/home/blake/ExpoSE/Targets/node-flarum/node_modules/bson/lib/bson/index.js');
            J$.N(1417, '__secret__S$', __secret__S$, 0);
            J$.N(1425, '__secret__traits__', __secret__traits__, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            try {
                J$.X1(121, J$.P(113, J$.R(81, 'exports', exports, 2), 'BSONPure', J$.F(105, J$.R(89, 'require', require, 2), 0)(J$.T(97, './bson', 21, false)), 0));
                J$.X1(169, J$.P(161, J$.R(129, 'exports', exports, 2), 'BSONNative', J$.F(153, J$.R(137, 'require', require, 2), 0)(J$.T(145, './bson', 21, false)), 0));
            } catch (err) {
                err = J$.N(177, 'err', err, 1);
            }
            J$.X1(481, J$.M(473, J$.T(289, [
                J$.T(185, './binary_parser', 21, false),
                J$.T(193, './binary', 21, false),
                J$.T(201, './code', 21, false),
                J$.T(209, './map', 21, false),
                J$.T(217, './db_ref', 21, false),
                J$.T(225, './double', 21, false),
                J$.T(233, './max_key', 21, false),
                J$.T(241, './min_key', 21, false),
                J$.T(249, './objectid', 21, false),
                J$.T(257, './regexp', 21, false),
                J$.T(265, './symbol', 21, false),
                J$.T(273, './timestamp', 21, false),
                J$.T(281, './long', 21, false)
            ], 10, false), 'forEach', 0)(J$.T(465, function (path) {
                jalangiLabel1475:
                    while (true) {
                        try {
                            J$.Fe(425, arguments.callee, this, arguments);
                            arguments = J$.N(433, 'arguments', arguments, 4);
                            path = J$.N(441, 'path', path, 4);
                            J$.N(449, 'module', module, 0);
                            J$.N(457, 'i', i, 0);
                            var module = J$.X1(329, J$.W(321, 'module', J$.F(313, J$.R(297, 'require', require, 2), 0)(J$.R(305, 'path', path, 0)), module, 1));
                            for (J$._tm_p in J$.H(401, J$.R(337, 'module', module, 0))) {
                                var i = J$.X1(417, J$.W(409, 'i', J$._tm_p, i, 1));
                                {
                                    {
                                        J$.X1(393, J$.P(385, J$.R(345, 'exports', exports, 2), J$.R(353, 'i', i, 0), J$.G(377, J$.R(361, 'module', module, 0), J$.R(369, 'i', i, 0), 4), 2));
                                    }
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(1433, J$e);
                        } finally {
                            if (J$.Fr(1441))
                                continue jalangiLabel1475;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 425)));
            J$.X1(897, J$.P(889, J$.R(489, 'exports', exports, 2), 'pure', J$.T(881, function () {
                jalangiLabel1477:
                    while (true) {
                        try {
                            J$.Fe(857, arguments.callee, this, arguments);
                            arguments = J$.N(865, 'arguments', arguments, 4);
                            J$.N(873, 'classes', classes, 0);
                            var classes = J$.X1(513, J$.W(505, 'classes', J$.T(497, {}, 11, false), classes, 1));
                            J$.X1(825, J$.M(817, J$.T(633, [
                                J$.T(521, './binary_parser', 21, false),
                                J$.T(529, './binary', 21, false),
                                J$.T(537, './code', 21, false),
                                J$.T(545, './map', 21, false),
                                J$.T(553, './db_ref', 21, false),
                                J$.T(561, './double', 21, false),
                                J$.T(569, './max_key', 21, false),
                                J$.T(577, './min_key', 21, false),
                                J$.T(585, './objectid', 21, false),
                                J$.T(593, './regexp', 21, false),
                                J$.T(601, './symbol', 21, false),
                                J$.T(609, './timestamp', 21, false),
                                J$.T(617, './long', 21, false),
                                J$.T(625, './bson', 21, false)
                            ], 10, false), 'forEach', 0)(J$.T(809, function (path) {
                                jalangiLabel1476:
                                    while (true) {
                                        try {
                                            J$.Fe(769, arguments.callee, this, arguments);
                                            arguments = J$.N(777, 'arguments', arguments, 4);
                                            path = J$.N(785, 'path', path, 4);
                                            J$.N(793, 'module', module, 0);
                                            J$.N(801, 'i', i, 0);
                                            var module = J$.X1(673, J$.W(665, 'module', J$.F(657, J$.R(641, 'require', require, 2), 0)(J$.R(649, 'path', path, 0)), module, 1));
                                            for (J$._tm_p in J$.H(745, J$.R(681, 'module', module, 0))) {
                                                var i = J$.X1(761, J$.W(753, 'i', J$._tm_p, i, 1));
                                                {
                                                    {
                                                        J$.X1(737, J$.P(729, J$.R(689, 'classes', classes, 0), J$.R(697, 'i', i, 0), J$.G(721, J$.R(705, 'module', module, 0), J$.R(713, 'i', i, 0), 4), 2));
                                                    }
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(1449, J$e);
                                        } finally {
                                            if (J$.Fr(1457))
                                                continue jalangiLabel1476;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 769)));
                            return J$.X1(849, J$.Rt(841, J$.R(833, 'classes', classes, 0)));
                        } catch (J$e) {
                            J$.Ex(1465, J$e);
                        } finally {
                            if (J$.Fr(1473))
                                continue jalangiLabel1477;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 857), 0));
            J$.X1(1401, J$.P(1393, J$.R(905, 'exports', exports, 2), 'native', J$.T(1385, function () {
                jalangiLabel1479:
                    while (true) {
                        try {
                            J$.Fe(1361, arguments.callee, this, arguments);
                            arguments = J$.N(1369, 'arguments', arguments, 4);
                            J$.N(1377, 'classes', classes, 0);
                            var classes = J$.X1(929, J$.W(921, 'classes', J$.T(913, {}, 11, false), classes, 1));
                            J$.X1(1233, J$.M(1225, J$.T(1041, [
                                J$.T(937, './binary_parser', 21, false),
                                J$.T(945, './binary', 21, false),
                                J$.T(953, './code', 21, false),
                                J$.T(961, './map', 21, false),
                                J$.T(969, './db_ref', 21, false),
                                J$.T(977, './double', 21, false),
                                J$.T(985, './max_key', 21, false),
                                J$.T(993, './min_key', 21, false),
                                J$.T(1001, './objectid', 21, false),
                                J$.T(1009, './regexp', 21, false),
                                J$.T(1017, './symbol', 21, false),
                                J$.T(1025, './timestamp', 21, false),
                                J$.T(1033, './long', 21, false)
                            ], 10, false), 'forEach', 0)(J$.T(1217, function (path) {
                                jalangiLabel1478:
                                    while (true) {
                                        try {
                                            J$.Fe(1177, arguments.callee, this, arguments);
                                            arguments = J$.N(1185, 'arguments', arguments, 4);
                                            path = J$.N(1193, 'path', path, 4);
                                            J$.N(1201, 'module', module, 0);
                                            J$.N(1209, 'i', i, 0);
                                            var module = J$.X1(1081, J$.W(1073, 'module', J$.F(1065, J$.R(1049, 'require', require, 2), 0)(J$.R(1057, 'path', path, 0)), module, 1));
                                            for (J$._tm_p in J$.H(1153, J$.R(1089, 'module', module, 0))) {
                                                var i = J$.X1(1169, J$.W(1161, 'i', J$._tm_p, i, 1));
                                                {
                                                    {
                                                        J$.X1(1145, J$.P(1137, J$.R(1097, 'classes', classes, 0), J$.R(1105, 'i', i, 0), J$.G(1129, J$.R(1113, 'module', module, 0), J$.R(1121, 'i', i, 0), 4), 2));
                                                    }
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(1481, J$e);
                                        } finally {
                                            if (J$.Fr(1489))
                                                continue jalangiLabel1478;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1177)));
                            try {
                                J$.X1(1289, J$.P(1281, J$.R(1241, 'classes', classes, 0), J$.T(1249, 'BSON', 21, false), J$.F(1273, J$.R(1257, 'require', require, 2), 0)(J$.T(1265, './bson', 21, false)), 2));
                            } catch (err) {
                                err = J$.N(1329, 'err', err, 1);
                                return J$.X1(1321, J$.Rt(1313, J$.M(1305, J$.R(1297, 'exports', exports, 2), 'pure', 0)()));
                            }
                            return J$.X1(1353, J$.Rt(1345, J$.R(1337, 'classes', classes, 0)));
                        } catch (J$e) {
                            J$.Ex(1497, J$e);
                        } finally {
                            if (J$.Fr(1505))
                                continue jalangiLabel1479;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1361), 0));
        } catch (J$e) {
            J$.Ex(1513, J$e);
        } finally {
            if (J$.Sr(1521)) {
                J$.L();
                continue jalangiLabel1480;
            } else {
                J$.L();
                break jalangiLabel1480;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
