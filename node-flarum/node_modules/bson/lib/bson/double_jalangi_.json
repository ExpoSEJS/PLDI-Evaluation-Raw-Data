{"8":[4,9,4,34],"9":[1,20,1,27],"10":[4,11,4,33],"17":[1,28,1,32],"18":[4,9,4,34],"25":[1,20,1,33],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[4,11,4,15],"89":[4,27,4,33],"97":[5,20,5,26],"105":[5,27,5,32],"113":[5,16,5,33],"121":[5,16,5,33],"129":[5,9,5,34],"137":[6,5,6,9],"145":[6,22,6,30],"153":[6,5,6,30],"161":[6,5,6,31],"169":[7,5,7,9],"177":[7,18,7,23],"185":[7,5,7,23],"193":[7,5,7,24],"201":[3,1,8,2],"209":[3,1,8,2],"217":[3,1,8,2],"225":[9,1,9,7],"233":[9,1,9,17],"241":[10,12,10,16],"249":[10,12,10,22],"257":[10,12,10,22],"265":[10,5,10,23],"273":[9,28,11,2],"281":[9,28,11,2],"289":[9,28,11,2],"297":[9,1,11,2],"305":[9,1,11,3],"313":[12,1,12,7],"321":[12,1,12,17],"329":[13,12,13,16],"337":[13,12,13,22],"345":[13,12,13,22],"353":[13,5,13,23],"361":[12,27,14,2],"369":[12,27,14,2],"377":[12,27,14,2],"385":[12,1,14,2],"393":[12,1,14,3],"401":[15,1,15,7],"409":[15,18,15,24],"417":[15,1,15,24],"425":[15,1,15,25],"433":[16,1,16,7],"441":[16,1,16,15],"449":[16,25,16,31],"457":[16,1,16,31],"465":[16,1,16,32],"473":[1,1,16,32],"481":[1,1,16,32],"489":[1,1,16,32],"497":[3,1,8,2],"505":[1,1,16,32],"513":[4,5,5,34],"521":[3,1,8,2],"529":[3,1,8,2],"537":[9,28,11,2],"545":[9,28,11,2],"553":[12,27,14,2],"561":[12,27,14,2],"569":[1,1,16,32],"577":[1,1,16,32],"nBranches":2,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/bson/lib/bson/double.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/bson/lib/bson/double_jalangi_.js","code":"/**\n * A class representation of the BSON Double type.\n *\n * @class\n * @param {number} value the number we want to represent as a double.\n * @return {Double}\n */\nfunction Double(value) {\n  if(!(this instanceof Double)) return new Double(value);\n  \n  this._bsontype = 'Double';\n  this.value = value;\n}\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped double number.\n */\nDouble.prototype.valueOf = function() {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nDouble.prototype.toJSON = function() {\n  return this.value;\n}\n\nmodule.exports = Double;\nmodule.exports.Double = Double;"}