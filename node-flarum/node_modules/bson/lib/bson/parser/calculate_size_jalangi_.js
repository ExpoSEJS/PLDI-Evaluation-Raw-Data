J$.iids = {"8":[6,12,6,90],"9":[1,20,1,27],"10":[6,12,6,20],"16":[11,25,11,42],"17":[1,28,1,32],"18":[6,12,6,33],"24":[15,13,15,26],"25":[1,20,1,33],"26":[6,37,6,90],"32":[10,9,10,30],"33":[1,20,1,33],"34":[9,23,9,28],"40":[25,9,25,30],"41":[1,20,1,33],"42":[11,25,11,42],"48":[25,9,25,30],"49":[2,26,2,38],"50":[11,44,11,47],"56":[32,13,32,68],"57":[2,26,2,45],"64":[32,13,32,96],"65":[2,26,2,45],"66":[11,44,11,47],"72":[33,17,33,77],"73":[2,26,2,45],"74":[12,28,12,112],"80":[34,25,34,37],"81":[3,1,3,13],"82":[19,28,19,106],"88":[36,25,36,37],"89":[3,1,3,14],"90":[28,13,28,25],"96":[33,17,33,77],"97":[4,20,4,27],"98":[30,16,30,51],"104":[39,21,39,33],"105":[4,28,4,45],"106":[30,16,30,55],"112":[32,13,32,96],"113":[4,20,4,46],"114":[30,16,30,59],"120":[42,13,42,40],"121":[4,20,4,59],"122":[30,16,30,94],"128":[43,21,43,33],"129":[4,75,4,82],"130":[30,16,30,98],"136":[42,13,42,40],"137":[4,83,4,100],"138":[32,13,32,40],"144":[46,17,46,29],"145":[4,75,4,101],"146":[32,44,32,68],"152":[48,13,48,53],"153":[4,75,4,113],"154":[32,72,32,96],"160":[48,13,48,80],"161":[4,122,4,129],"162":[33,17,33,45],"168":[48,13,48,114],"169":[4,130,4,139],"170":[33,49,33,77],"176":[48,13,48,148],"177":[4,122,4,140],"178":[34,25,34,37],"184":[49,21,49,33],"185":[4,122,4,145],"186":[34,40,34,75],"192":[50,20,50,81],"193":[4,156,4,163],"194":[34,84,34,89],"200":[51,21,51,33],"201":[4,164,4,175],"202":[34,24,34,90],"208":[52,20,52,58],"209":[4,156,4,176],"210":[36,25,36,37],"216":[53,21,53,33],"217":[4,156,4,183],"218":[36,40,36,75],"224":[54,20,54,75],"225":[4,197,4,204],"226":[36,84,36,89],"232":[55,21,55,33],"233":[4,205,4,219],"234":[36,24,36,90],"240":[56,20,56,68],"241":[4,197,4,220],"242":[39,21,39,33],"248":[56,20,56,98],"249":[4,197,4,230],"250":[39,36,39,71],"256":[56,20,56,130],"257":[4,243,4,250],"258":[39,80,39,85],"264":[56,20,56,164],"265":[4,251,4,264],"266":[39,20,39,86],"272":[56,20,56,201],"273":[4,243,4,265],"274":[42,24,42,40],"280":[57,21,57,33],"281":[4,243,4,274],"282":[43,21,43,33],"288":[58,20,58,73],"289":[4,285,4,292],"290":[43,36,43,71],"296":[59,17,59,75],"297":[4,293,4,304],"298":[43,20,43,80],"304":[60,25,60,37],"305":[4,285,4,305],"306":[46,17,46,29],"312":[62,25,62,37],"313":[4,285,4,312],"314":[46,32,46,67],"320":[59,17,59,75],"321":[4,327,4,334],"322":[46,76,46,81],"328":[64,20,64,77],"329":[4,335,4,346],"330":[46,16,46,82],"336":[66,25,66,37],"337":[4,327,4,347],"338":[48,13,48,26],"344":[68,25,68,37],"345":[4,327,4,358],"346":[48,30,48,53],"352":[65,17,65,60],"353":[4,367,4,374],"354":[48,57,48,80],"360":[70,20,70,77],"361":[4,375,4,384],"362":[48,84,48,114],"368":[71,21,71,33],"369":[4,367,4,385],"370":[48,118,48,148],"376":[72,20,72,75],"377":[4,367,4,390],"378":[49,21,49,33],"384":[77,17,77,33],"385":[4,401,4,408],"386":[49,36,49,71],"392":[80,21,80,33],"393":[4,409,4,421],"394":[49,20,49,80],"400":[81,20,81,106],"401":[4,401,4,422],"402":[50,20,50,45],"408":[82,21,82,33],"409":[4,401,4,429],"410":[50,49,50,81],"416":[82,130,82,142],"417":[4,440,4,447],"418":[51,21,51,33],"424":[82,155,82,171],"425":[4,448,4,460],"426":[51,36,51,71],"432":[82,184,82,199],"433":[4,440,4,461],"434":[51,80,51,86],"440":[83,20,83,85],"441":[4,440,4,468],"442":[51,20,51,87],"448":[84,21,84,33],"449":[4,478,4,485],"450":[52,20,52,41],"456":[86,21,86,33],"457":[4,486,4,497],"458":[53,21,53,33],"464":[83,20,83,85],"465":[4,478,4,498],"466":[53,36,53,71],"472":[81,20,81,106],"473":[4,478,4,504],"474":[53,80,53,85],"480":[72,20,72,75],"481":[4,515,4,522],"482":[53,20,53,86],"488":[70,20,70,77],"489":[4,523,4,534],"490":[54,20,54,33],"496":[64,20,64,77],"497":[4,515,4,535],"498":[54,20,54,49],"504":[58,20,58,73],"505":[4,515,4,542],"506":[55,21,55,33],"512":[56,20,56,201],"513":[4,20,4,59],"514":[55,36,55,71],"520":[54,20,54,75],"521":[4,20,4,59],"522":[55,80,55,85],"528":[52,20,52,58],"529":[4,75,4,113],"530":[55,80,55,89],"536":[50,20,50,81],"537":[4,75,4,113],"538":[55,20,55,90],"544":[48,13,48,148],"545":[4,122,4,145],"546":[55,20,55,105],"552":[89,13,89,99],"553":[4,122,4,145],"554":[56,20,56,41],"560":[89,13,89,142],"561":[4,156,4,183],"562":[56,45,56,68],"568":[90,21,90,33],"569":[4,156,4,183],"570":[56,72,56,98],"576":[90,130,90,142],"577":[4,197,4,230],"578":[56,102,56,130],"584":[90,155,90,171],"585":[4,197,4,230],"586":[56,134,56,164],"592":[90,184,90,199],"593":[4,243,4,274],"594":[56,168,56,201],"600":[92,17,92,58],"601":[4,243,4,274],"602":[57,21,57,33],"608":[92,17,92,97],"609":[4,285,4,312],"610":[57,36,57,71],"616":[93,25,93,37],"617":[4,285,4,312],"618":[57,80,57,85],"624":[95,25,95,37],"625":[4,327,4,358],"626":[57,20,57,86],"632":[94,24,94,42],"633":[4,327,4,358],"634":[58,20,58,41],"640":[92,17,92,97],"641":[4,367,4,390],"642":[58,45,58,73],"648":[89,13,89,142],"649":[4,367,4,390],"650":[59,17,59,36],"656":[28,13,28,25],"657":[4,401,4,429],"658":[59,40,59,75],"664":[29,10,29,18],"665":[4,401,4,429],"666":[60,25,60,37],"672":[31,10,31,18],"673":[4,440,4,468],"674":[60,40,60,75],"680":[41,10,41,21],"681":[4,440,4,468],"682":[60,24,60,84],"688":[45,10,45,19],"689":[4,478,4,504],"690":[60,24,60,88],"696":[47,10,47,18],"697":[4,478,4,504],"698":[60,24,60,92],"704":[88,10,88,20],"705":[4,515,4,542],"706":[60,24,60,143],"713":[4,515,4,542],"714":[60,24,60,147],"721":[6,19,6,20],"722":[60,24,60,219],"729":[6,25,6,33],"730":[62,25,62,37],"737":[6,37,6,43],"738":[62,40,62,75],"745":[6,37,6,53],"746":[62,24,62,84],"753":[6,37,6,62],"754":[62,24,62,88],"761":[6,68,6,69],"762":[62,24,62,139],"769":[6,37,6,70],"770":[62,24,62,143],"771":[6,37,6,67],"777":[6,75,6,90],"778":[64,20,64,43],"785":[6,12,6,90],"786":[64,47,64,77],"793":[6,5,6,91],"794":[65,17,65,60],"801":[5,14,7,2],"802":[66,25,66,37],"809":[5,14,7,2],"810":[66,40,66,75],"817":[5,14,7,2],"818":[66,84,66,102],"825":[5,14,7,2],"826":[66,84,66,106],"833":[5,14,7,2],"834":[66,84,66,110],"841":[5,14,7,2],"842":[66,84,66,114],"849":[5,14,7,2],"850":[66,24,66,115],"857":[9,23,9,24],"858":[68,25,68,37],"865":[9,27,9,28],"866":[68,40,68,75],"873":[9,23,9,28],"874":[68,84,68,102],"881":[9,23,9,28],"882":[68,84,68,106],"889":[10,9,10,14],"890":[68,84,68,110],"897":[10,23,10,29],"898":[68,24,68,111],"905":[10,9,10,30],"906":[70,20,70,43],"907":[10,9,10,22],"913":[11,22,11,23],"914":[70,47,70,77],"921":[11,22,11,23],"922":[71,21,71,33],"929":[11,22,11,23],"930":[71,36,71,71],"937":[11,25,11,26],"938":[71,20,71,117],"945":[11,29,11,35],"946":[71,20,71,121],"953":[11,29,11,42],"954":[71,20,71,125],"962":[71,20,71,129],"969":[11,44,11,45],"970":[72,20,72,42],"977":[11,44,11,47],"978":[72,46,72,75],"986":[77,17,77,33],"993":[12,28,12,44],"994":[80,21,80,33],"1001":[12,45,12,46],"1002":[80,36,80,71],"1009":[12,45,12,57],"1010":[80,20,80,80],"1011":[12,45,12,55],"1017":[12,59,12,65],"1018":[80,20,80,155],"1025":[12,66,12,67],"1026":[81,20,81,43],"1033":[12,59,12,68],"1034":[81,47,81,106],"1041":[12,70,12,88],"1042":[82,21,82,33],"1049":[12,90,12,94],"1050":[82,36,82,71],"1057":[12,96,12,111],"1058":[82,20,82,80],"1065":[12,28,12,112],"1066":[82,20,82,122],"1073":[12,13,12,24],"1074":[82,20,82,126],"1081":[12,13,12,112],"1082":[82,20,82,151],"1089":[12,13,12,113],"1090":[82,20,82,180],"1097":[15,13,15,19],"1098":[82,20,82,208],"1105":[15,13,15,26],"1106":[82,20,82,212],"1113":[16,22,16,28],"1114":[83,20,83,47],"1121":[16,22,16,37],"1122":[83,51,83,85],"1123":[16,22,16,35],"1129":[16,22,16,37],"1130":[84,21,84,33],"1137":[16,13,16,38],"1138":[84,36,84,71],"1145":[18,25,18,31],"1146":[84,20,84,80],"1153":[19,28,19,44],"1154":[84,20,84,123],"1161":[19,45,19,48],"1162":[84,20,84,127],"1169":[19,50,19,56],"1170":[84,20,84,170],"1177":[19,57,19,60],"1178":[84,20,84,174],"1185":[19,50,19,61],"1186":[86,21,86,33],"1193":[19,63,19,81],"1194":[86,36,86,71],"1201":[19,83,19,88],"1202":[86,20,86,142],"1209":[19,90,19,105],"1210":[86,20,86,146],"1217":[19,28,19,106],"1218":[89,13,89,36],"1225":[19,13,19,24],"1226":[89,40,89,99],"1233":[19,13,19,106],"1234":[89,103,89,142],"1241":[19,13,19,107],"1242":[90,21,90,33],"1249":[18,25,18,31],"1250":[90,36,90,71],"1257":[18,9,20,10],"1258":[90,20,90,80],"1265":[18,9,20,10],"1266":[90,20,90,122],"1273":[22,12,22,23],"1274":[90,20,90,126],"1281":[22,12,22,23],"1282":[90,20,90,151],"1289":[22,5,22,24],"1290":[90,20,90,180],"1297":[8,27,23,2],"1298":[90,20,90,208],"1305":[8,27,23,2],"1306":[90,20,90,212],"1313":[8,27,23,2],"1314":[92,39,92,58],"1321":[8,27,23,2],"1322":[92,62,92,97],"1329":[8,27,23,2],"1330":[93,25,93,37],"1337":[8,27,23,2],"1338":[93,40,93,75],"1345":[8,27,23,2],"1346":[93,24,93,84],"1353":[8,27,23,2],"1354":[93,24,93,88],"1361":[8,27,23,2],"1362":[93,24,93,92],"1369":[8,27,23,2],"1370":[93,24,93,138],"1377":[8,27,23,2],"1378":[93,24,93,142],"1385":[8,27,23,2],"1386":[93,24,93,214],"1393":[25,9,25,14],"1394":[95,25,95,37],"1401":[25,18,25,23],"1402":[95,40,95,75],"1409":[25,18,25,30],"1410":[95,24,95,84],"1417":[26,17,26,22],"1418":[95,24,95,88],"1425":[26,17,26,31],"1426":[95,24,95,134],"1427":[26,17,26,29],"1433":[26,17,26,31],"1434":[95,24,95,138],"1441":[26,9,26,32],"1442":[128,23,128,34],"1449":[28,20,28,25],"1450":[129,23,129,42],"1457":[30,16,30,17],"1458":[130,23,130,39],"1465":[30,20,30,26],"1466":[132,19,132,36],"1473":[30,38,30,42],"1474":[134,39,134,56],"1481":[30,44,30,50],"1489":[30,20,30,51],"1491":[30,20,30,37],"1497":[30,54,30,55],"1505":[30,58,30,59],"1513":[30,62,30,68],"1521":[30,80,30,85],"1529":[30,87,30,93],"1537":[30,62,30,94],"1539":[30,62,30,79],"1545":[30,97,30,98],"1553":[30,16,30,98],"1561":[30,9,30,99],"1569":[29,10,29,18],"1577":[32,13,32,17],"1585":[32,24,32,29],"1593":[32,13,32,30],"1595":[32,13,32,23],"1601":[32,35,32,40],"1609":[32,44,32,49],"1617":[32,53,32,57],"1625":[32,53,32,68],"1633":[32,72,32,77],"1641":[32,81,32,85],"1649":[32,81,32,96],"1657":[33,17,33,22],"1665":[33,26,33,30],"1673":[33,26,33,45],"1681":[33,49,33,54],"1689":[33,58,33,62],"1697":[33,58,33,77],"1705":[34,25,34,29],"1713":[34,33,34,37],"1721":[34,40,34,46],"1729":[34,58,34,62],"1737":[34,64,34,70],"1745":[34,40,34,71],"1747":[34,40,34,57],"1753":[34,74,34,75],"1761":[34,78,34,79],"1769":[34,84,34,85],"1777":[34,88,34,89],"1785":[34,24,34,90],"1793":[34,17,34,91],"1801":[36,25,36,29],"1809":[36,33,36,37],"1817":[36,40,36,46],"1825":[36,58,36,62],"1833":[36,64,36,70],"1841":[36,40,36,71],"1843":[36,40,36,57],"1849":[36,74,36,75],"1857":[36,78,36,79],"1865":[36,84,36,85],"1873":[36,88,36,89],"1881":[36,24,36,90],"1889":[36,17,36,91],"1897":[39,21,39,25],"1905":[39,29,39,33],"1913":[39,36,39,42],"1921":[39,54,39,58],"1929":[39,60,39,66],"1937":[39,36,39,67],"1939":[39,36,39,53],"1945":[39,70,39,71],"1953":[39,74,39,75],"1961":[39,80,39,81],"1969":[39,84,39,85],"1977":[39,20,39,86],"1985":[39,13,39,87],"1993":[31,10,31,18],"2001":[42,13,42,20],"2009":[42,25,42,40],"2017":[43,21,43,25],"2025":[43,29,43,33],"2033":[43,36,43,42],"2041":[43,54,43,58],"2049":[43,60,43,66],"2057":[43,36,43,67],"2059":[43,36,43,53],"2065":[43,70,43,71],"2073":[43,74,43,75],"2081":[43,79,43,80],"2089":[43,20,43,80],"2097":[43,13,43,81],"2105":[44,16,44,17],"2113":[44,16,44,17],"2121":[44,9,44,18],"2129":[41,10,41,21],"2137":[46,17,46,21],"2145":[46,25,46,29],"2153":[46,32,46,38],"2161":[46,50,46,54],"2169":[46,56,46,62],"2177":[46,32,46,63],"2179":[46,32,46,49],"2185":[46,66,46,67],"2193":[46,70,46,71],"2201":[46,76,46,77],"2209":[46,80,46,81],"2217":[46,16,46,82],"2225":[46,9,46,83],"2233":[45,10,45,19],"2241":[48,13,48,18],"2249":[48,22,48,26],"2257":[48,30,48,35],"2265":[48,47,48,53],"2273":[48,57,48,62],"2281":[48,74,48,80],"2289":[48,84,48,89],"2297":[48,90,48,101],"2305":[48,84,48,102],"2313":[48,106,48,114],"2321":[48,118,48,123],"2329":[48,124,48,135],"2337":[48,118,48,136],"2345":[48,140,48,148],"2353":[49,21,49,25],"2361":[49,29,49,33],"2369":[49,36,49,42],"2377":[49,54,49,58],"2385":[49,60,49,66],"2393":[49,36,49,67],"2395":[49,36,49,53],"2401":[49,70,49,71],"2409":[49,74,49,75],"2417":[49,79,49,80],"2425":[49,20,49,80],"2433":[49,13,49,81],"2441":[50,20,50,25],"2449":[50,37,50,45],"2457":[50,49,50,54],"2465":[50,55,50,66],"2473":[50,49,50,67],"2481":[50,71,50,81],"2489":[51,21,51,25],"2497":[51,29,51,33],"2505":[51,36,51,42],"2513":[51,54,51,58],"2521":[51,60,51,66],"2529":[51,36,51,67],"2531":[51,36,51,53],"2537":[51,70,51,71],"2545":[51,74,51,75],"2553":[51,80,51,82],"2561":[51,85,51,86],"2569":[51,20,51,87],"2577":[51,13,51,88],"2585":[52,20,52,25],"2593":[52,37,52,41],"2601":[52,45,52,51],"2609":[52,52,52,57],"2617":[52,45,52,58],"2625":[53,21,53,25],"2633":[53,29,53,33],"2641":[53,36,53,42],"2649":[53,54,53,58],"2657":[53,60,53,66],"2665":[53,36,53,67],"2667":[53,36,53,53],"2673":[53,70,53,71],"2681":[53,74,53,75],"2689":[53,80,53,81],"2697":[53,84,53,85],"2705":[53,20,53,86],"2713":[53,13,53,87],"2721":[54,27,54,33],"2729":[54,38,54,49],"2737":[54,53,54,59],"2745":[54,69,54,74],"2753":[54,53,54,75],"2755":[54,53,54,68],"2761":[55,21,55,25],"2769":[55,29,55,33],"2777":[55,36,55,42],"2785":[55,54,55,58],"2793":[55,60,55,66],"2801":[55,36,55,67],"2803":[55,36,55,53],"2809":[55,70,55,71],"2817":[55,74,55,75],"2825":[55,80,55,81],"2833":[55,84,55,85],"2841":[55,88,55,89],"2849":[55,93,55,98],"2857":[55,93,55,105],"2865":[55,20,55,105],"2873":[55,13,55,106],"2881":[56,20,56,25],"2889":[56,37,56,41],"2897":[56,45,56,50],"2905":[56,62,56,68],"2913":[56,72,56,77],"2921":[56,89,56,98],"2929":[56,102,56,107],"2937":[56,108,56,119],"2945":[56,102,56,120],"2953":[56,124,56,130],"2961":[56,134,56,139],"2969":[56,140,56,151],"2977":[56,134,56,152],"2985":[56,156,56,164],"2993":[56,168,56,173],"3001":[56,174,56,185],"3009":[56,168,56,186],"3017":[56,190,56,201],"3025":[57,21,57,25],"3033":[57,29,57,33],"3041":[57,36,57,42],"3049":[57,54,57,58],"3057":[57,60,57,66],"3065":[57,36,57,67],"3067":[57,36,57,53],"3073":[57,70,57,71],"3081":[57,74,57,75],"3089":[57,80,57,81],"3097":[57,84,57,85],"3105":[57,20,57,86],"3113":[57,13,57,87],"3121":[58,20,58,25],"3129":[58,37,58,41],"3137":[58,45,58,50],"3145":[58,51,58,62],"3153":[58,45,58,63],"3161":[58,67,58,73],"3169":[59,17,59,22],"3177":[59,17,59,28],"3185":[59,32,59,36],"3193":[59,40,59,46],"3201":[59,52,59,57],"3209":[59,52,59,63],"3217":[59,40,59,64],"3219":[59,40,59,51],"3225":[59,40,59,71],"3233":[59,74,59,75],"3241":[60,25,60,29],"3249":[60,33,60,37],"3257":[60,40,60,46],"3265":[60,58,60,62],"3273":[60,64,60,70],"3281":[60,40,60,71],"3283":[60,40,60,57],"3289":[60,74,60,75],"3297":[60,78,60,79],"3305":[60,83,60,84],"3313":[60,87,60,88],"3321":[60,91,60,92],"3329":[60,95,60,101],"3337":[60,113,60,118],"3345":[60,113,60,123],"3353":[60,113,60,134],"3355":[60,113,60,132],"3361":[60,136,60,142],"3369":[60,95,60,143],"3371":[60,95,60,112],"3377":[60,146,60,147],"3385":[60,150,60,169],"3393":[60,170,60,175],"3401":[60,170,60,181],"3409":[60,183,60,201],"3417":[60,203,60,218],"3425":[60,150,60,219],"3433":[60,24,60,219],"3441":[60,17,60,220],"3449":[62,25,62,29],"3457":[62,33,62,37],"3465":[62,40,62,46],"3473":[62,58,62,62],"3481":[62,64,62,70],"3489":[62,40,62,71],"3491":[62,40,62,57],"3497":[62,74,62,75],"3505":[62,78,62,79],"3513":[62,83,62,84],"3521":[62,87,62,88],"3529":[62,91,62,97],"3537":[62,109,62,114],"3545":[62,109,62,119],"3553":[62,109,62,130],"3555":[62,109,62,128],"3561":[62,132,62,138],"3569":[62,91,62,139],"3571":[62,91,62,108],"3577":[62,142,62,143],"3585":[62,24,62,143],"3593":[62,17,62,144],"3601":[64,20,64,25],"3609":[64,37,64,43],"3617":[64,47,64,52],"3625":[64,53,64,64],"3633":[64,47,64,65],"3641":[64,69,64,77],"3649":[65,17,65,22],"3657":[65,17,65,31],"3665":[65,35,65,41],"3673":[65,35,65,60],"3681":[66,25,66,29],"3689":[66,33,66,37],"3697":[66,40,66,46],"3705":[66,58,66,62],"3713":[66,64,66,70],"3721":[66,40,66,71],"3723":[66,40,66,57],"3729":[66,74,66,75],"3737":[66,78,66,79],"3745":[66,84,66,89],"3753":[66,84,66,98],"3761":[66,101,66,102],"3769":[66,105,66,106],"3777":[66,109,66,110],"3785":[66,113,66,114],"3793":[66,24,66,115],"3801":[66,17,66,116],"3809":[68,25,68,29],"3817":[68,33,68,37],"3825":[68,40,68,46],"3833":[68,58,68,62],"3841":[68,64,68,70],"3849":[68,40,68,71],"3851":[68,40,68,57],"3857":[68,74,68,75],"3865":[68,78,68,79],"3873":[68,84,68,89],"3881":[68,84,68,98],"3889":[68,101,68,102],"3897":[68,105,68,106],"3905":[68,109,68,110],"3913":[68,24,68,111],"3921":[68,17,68,112],"3929":[70,20,70,25],"3937":[70,37,70,43],"3945":[70,47,70,52],"3953":[70,53,70,64],"3961":[70,47,70,65],"3969":[70,69,70,77],"3977":[71,21,71,25],"3985":[71,29,71,33],"3993":[71,36,71,42],"4001":[71,54,71,58],"4009":[71,60,71,66],"4017":[71,36,71,67],"4019":[71,36,71,53],"4025":[71,70,71,71],"4033":[71,74,71,75],"4041":[71,79,71,85],"4049":[71,97,71,102],"4057":[71,97,71,108],"4065":[71,110,71,116],"4073":[71,79,71,117],"4075":[71,79,71,96],"4081":[71,120,71,121],"4089":[71,124,71,125],"4097":[71,128,71,129],"4105":[71,20,71,129],"4113":[71,13,71,130],"4121":[72,20,72,25],"4129":[72,37,72,42],"4137":[72,46,72,51],"4145":[72,52,72,63],"4153":[72,46,72,64],"4161":[72,68,72,75],"4169":[74,25,74,30],"4177":[74,25,74,40],"4185":[75,24,75,29],"4193":[75,24,75,33],"4201":[73,34,76,14],"4209":[73,34,76,14],"4217":[73,34,76,14],"4225":[77,17,77,21],"4233":[77,25,77,30],"4241":[77,25,77,33],"4249":[78,17,78,31],"4257":[78,32,78,37],"4265":[78,41,78,46],"4273":[78,41,78,49],"4281":[78,17,78,49],"4289":[78,17,78,50],"4297":[80,21,80,25],"4305":[80,29,80,33],"4313":[80,36,80,42],"4321":[80,54,80,58],"4329":[80,60,80,66],"4337":[80,36,80,67],"4339":[80,36,80,53],"4345":[80,70,80,71],"4353":[80,74,80,75],"4361":[80,79,80,80],"4369":[80,83,80,102],"4377":[80,103,80,117],"4385":[80,119,80,137],"4393":[80,139,80,154],"4401":[80,83,80,155],"4409":[80,20,80,155],"4417":[80,13,80,156],"4425":[81,20,81,25],"4433":[81,37,81,43],"4441":[81,47,81,53],"4449":[81,47,81,63],"4457":[81,47,81,72],"4465":[81,78,81,83],"4473":[81,47,81,84],"4475":[81,47,81,77],"4481":[81,89,81,106],"4489":[82,21,82,25],"4497":[82,29,82,33],"4505":[82,36,82,42],"4513":[82,54,82,58],"4521":[82,60,82,66],"4529":[82,36,82,67],"4531":[82,36,82,53],"4537":[82,70,82,71],"4545":[82,74,82,75],"4553":[82,79,82,80],"4561":[82,83,82,89],"4569":[82,101,82,106],"4577":[82,101,82,113],"4585":[82,115,82,121],"4593":[82,83,82,122],"4595":[82,83,82,100],"4601":[82,125,82,126],"4609":[82,130,82,135],"4617":[82,130,82,142],"4625":[82,145,82,146],"4633":[82,149,82,150],"4641":[82,155,82,160],"4649":[82,155,82,171],"4657":[82,174,82,175],"4665":[82,178,82,179],"4673":[82,184,82,189],"4681":[82,184,82,199],"4689":[82,202,82,203],"4697":[82,206,82,207],"4705":[82,211,82,212],"4713":[82,20,82,212],"4721":[82,13,82,213],"4729":[83,20,83,25],"4737":[83,37,83,47],"4745":[83,51,83,56],"4753":[83,57,83,68],"4761":[83,51,83,69],"4769":[83,73,83,85],"4777":[84,21,84,25],"4785":[84,29,84,33],"4793":[84,36,84,42],"4801":[84,54,84,58],"4809":[84,60,84,66],"4817":[84,36,84,67],"4819":[84,36,84,53],"4825":[84,70,84,71],"4833":[84,74,84,75],"4841":[84,79,84,80],"4849":[84,83,84,89],"4857":[84,101,84,106],"4865":[84,101,84,114],"4873":[84,116,84,122],"4881":[84,83,84,123],"4883":[84,83,84,100],"4889":[84,126,84,127],"4897":[84,130,84,136],"4905":[84,148,84,153],"4913":[84,148,84,161],"4921":[84,163,84,169],"4929":[84,130,84,170],"4931":[84,130,84,147],"4937":[84,173,84,174],"4945":[84,20,84,174],"4953":[84,13,84,175],"4961":[86,21,86,25],"4969":[86,29,86,33],"4977":[86,36,86,42],"4985":[86,54,86,58],"4993":[86,60,86,66],"5001":[86,36,86,67],"5003":[86,36,86,53],"5009":[86,70,86,71],"5017":[86,74,86,75],"5025":[86,79,86,98],"5033":[86,99,86,104],"5041":[86,106,86,124],"5049":[86,126,86,141],"5057":[86,79,86,142],"5065":[86,145,86,146],"5073":[86,20,86,146],"5081":[86,13,86,147],"5089":[47,10,47,18],"5097":[89,13,89,18],"5105":[89,30,89,36],"5113":[89,40,89,46],"5121":[89,40,89,56],"5129":[89,40,89,65],"5137":[89,71,89,76],"5145":[89,40,89,77],"5147":[89,40,89,70],"5153":[89,82,89,99],"5161":[89,103,89,109],"5169":[89,115,89,120],"5177":[89,103,89,121],"5179":[89,103,89,114],"5185":[89,125,89,142],"5193":[90,21,90,25],"5201":[90,29,90,33],"5209":[90,36,90,42],"5217":[90,54,90,58],"5225":[90,60,90,66],"5233":[90,36,90,67],"5235":[90,36,90,53],"5241":[90,70,90,71],"5249":[90,74,90,75],"5257":[90,79,90,80],"5265":[90,83,90,89],"5273":[90,101,90,106],"5281":[90,101,90,113],"5289":[90,115,90,121],"5297":[90,83,90,122],"5299":[90,83,90,100],"5305":[90,125,90,126],"5313":[90,130,90,135],"5321":[90,130,90,142],"5329":[90,145,90,146],"5337":[90,149,90,150],"5345":[90,155,90,160],"5353":[90,155,90,171],"5361":[90,174,90,175],"5369":[90,178,90,179],"5377":[90,184,90,189],"5385":[90,184,90,199],"5393":[90,202,90,203],"5401":[90,206,90,207],"5409":[90,211,90,212],"5417":[90,20,90,212],"5425":[90,13,90,213],"5433":[92,17,92,35],"5441":[92,39,92,44],"5449":[92,39,92,50],"5457":[92,54,92,58],"5465":[92,62,92,68],"5473":[92,74,92,79],"5481":[92,74,92,85],"5489":[92,62,92,86],"5491":[92,62,92,73],"5497":[92,62,92,93],"5505":[92,96,92,97],"5513":[93,25,93,29],"5521":[93,33,93,37],"5529":[93,40,93,46],"5537":[93,58,93,62],"5545":[93,64,93,70],"5553":[93,40,93,71],"5555":[93,40,93,57],"5561":[93,74,93,75],"5569":[93,78,93,79],"5577":[93,83,93,84],"5585":[93,87,93,88],"5593":[93,91,93,92],"5601":[93,95,93,101],"5609":[93,113,93,118],"5617":[93,113,93,129],"5619":[93,113,93,127],"5625":[93,131,93,137],"5633":[93,95,93,138],"5635":[93,95,93,112],"5641":[93,141,93,142],"5649":[93,145,93,164],"5657":[93,165,93,170],"5665":[93,165,93,176],"5673":[93,178,93,196],"5681":[93,198,93,213],"5689":[93,145,93,214],"5697":[93,24,93,214],"5705":[93,17,93,215],"5713":[94,24,94,42],"5721":[95,25,95,29],"5729":[95,33,95,37],"5737":[95,40,95,46],"5745":[95,58,95,62],"5753":[95,64,95,70],"5761":[95,40,95,71],"5763":[95,40,95,57],"5769":[95,74,95,75],"5777":[95,78,95,79],"5785":[95,83,95,84],"5793":[95,87,95,88],"5801":[95,91,95,97],"5809":[95,109,95,114],"5817":[95,109,95,125],"5819":[95,109,95,123],"5825":[95,127,95,133],"5833":[95,91,95,134],"5835":[95,91,95,108],"5841":[95,137,95,138],"5849":[95,24,95,138],"5857":[95,17,95,139],"5865":[88,10,88,20],"5873":[99,12,99,13],"5881":[99,12,99,13],"5889":[99,5,99,14],"5897":[24,1,100,2],"5905":[24,1,100,2],"5913":[24,1,100,2],"5921":[24,1,100,2],"5929":[24,1,100,2],"5937":[24,1,100,2],"5945":[24,1,100,2],"5953":[24,1,100,2],"5961":[101,12,101,14],"5969":[101,12,101,14],"5977":[101,12,101,14],"5985":[102,21,102,25],"5993":[102,42,102,44],"6001":[102,21,102,44],"6009":[102,21,102,44],"6017":[102,21,102,44],"6025":[103,1,103,5],"6033":[103,25,103,26],"6041":[103,1,103,26],"6049":[103,1,103,27],"6057":[104,1,104,5],"6065":[104,25,104,26],"6073":[104,1,104,26],"6081":[104,1,104,27],"6089":[105,1,105,5],"6097":[105,25,105,26],"6105":[105,1,105,26],"6113":[105,1,105,27],"6121":[106,1,106,5],"6129":[106,24,106,25],"6137":[106,1,106,25],"6145":[106,1,106,26],"6153":[107,1,107,5],"6161":[107,25,107,26],"6169":[107,1,107,26],"6177":[107,1,107,27],"6185":[108,1,108,5],"6193":[108,22,108,23],"6201":[108,1,108,23],"6209":[108,1,108,24],"6217":[109,1,109,5],"6225":[109,26,109,27],"6233":[109,1,109,27],"6241":[109,1,109,28],"6249":[110,1,110,5],"6257":[110,23,110,24],"6265":[110,1,110,24],"6273":[110,1,110,25],"6281":[111,1,111,5],"6289":[111,23,111,25],"6297":[111,1,111,25],"6305":[111,1,111,26],"6313":[112,1,112,5],"6321":[112,25,112,27],"6329":[112,1,112,27],"6337":[112,1,112,28],"6345":[113,1,113,5],"6353":[113,23,113,25],"6361":[113,1,113,25],"6369":[113,1,113,26],"6377":[114,1,114,5],"6385":[114,25,114,27],"6393":[114,1,114,27],"6401":[114,1,114,28],"6409":[115,1,115,5],"6417":[115,31,115,33],"6425":[115,1,115,33],"6433":[115,1,115,34],"6441":[116,1,116,5],"6449":[116,22,116,24],"6457":[116,1,116,24],"6465":[116,1,116,25],"6473":[117,1,117,5],"6481":[117,28,117,30],"6489":[117,1,117,30],"6497":[117,1,117,31],"6505":[118,1,118,5],"6513":[118,23,118,25],"6521":[118,1,118,25],"6529":[118,1,118,26],"6537":[119,1,119,5],"6545":[119,26,119,29],"6553":[119,1,119,29],"6561":[119,1,119,30],"6569":[120,1,120,5],"6577":[120,26,120,29],"6585":[120,1,120,29],"6593":[120,1,120,30],"6601":[121,1,121,5],"6609":[121,36,121,37],"6617":[121,1,121,37],"6625":[121,1,121,38],"6633":[122,1,122,5],"6641":[122,37,122,38],"6649":[122,1,122,38],"6657":[122,1,122,39],"6665":[123,1,123,5],"6673":[123,39,123,40],"6681":[123,1,123,40],"6689":[123,1,123,41],"6697":[124,1,124,5],"6705":[124,33,124,34],"6713":[124,1,124,34],"6721":[124,1,124,35],"6729":[125,1,125,5],"6737":[125,32,125,33],"6745":[125,1,125,33],"6753":[125,1,125,34],"6761":[126,1,126,5],"6769":[126,41,126,44],"6777":[126,1,126,44],"6785":[126,1,126,45],"6793":[127,1,127,5],"6801":[127,23,127,33],"6809":[127,1,127,33],"6817":[127,1,127,34],"6825":[128,1,128,5],"6833":[128,24,128,34],"6841":[128,1,128,34],"6849":[128,1,128,35],"6857":[129,1,129,5],"6865":[129,23,129,27],"6873":[129,32,129,33],"6881":[129,35,129,37],"6889":[129,23,129,38],"6891":[129,23,129,31],"6897":[129,41,129,42],"6905":[129,1,129,42],"6913":[129,1,129,43],"6921":[130,1,130,5],"6929":[130,24,130,28],"6937":[130,33,130,34],"6945":[130,36,130,38],"6953":[130,24,130,39],"6955":[130,24,130,32],"6961":[130,1,130,39],"6969":[130,1,130,40],"6977":[131,1,131,5],"6985":[131,19,131,35],"6993":[131,1,131,35],"7001":[131,1,131,36],"7009":[132,1,132,5],"7017":[132,20,132,36],"7025":[132,1,132,36],"7033":[132,1,132,37],"7041":[133,23,133,27],"7049":[133,39,133,55],"7057":[133,23,133,56],"7059":[133,23,133,38],"7065":[133,23,133,56],"7073":[133,23,133,56],"7081":[134,23,134,27],"7089":[134,40,134,56],"7097":[134,23,134,57],"7099":[134,23,134,38],"7105":[134,23,134,57],"7113":[134,23,134,57],"7121":[135,1,135,7],"7129":[135,18,135,37],"7137":[135,1,135,37],"7145":[135,1,135,38],"7153":[1,1,135,38],"7161":[1,1,135,38],"7169":[1,1,135,38],"7177":[1,1,135,38],"7185":[1,1,135,38],"7193":[1,1,135,38],"7201":[1,1,135,38],"7209":[1,1,135,38],"7217":[1,1,135,38],"7225":[1,1,135,38],"7233":[1,1,135,38],"7241":[1,1,135,38],"7249":[1,1,135,38],"7257":[1,1,135,38],"7265":[1,1,135,38],"7273":[1,1,135,38],"7281":[1,1,135,38],"7289":[1,1,135,38],"7297":[24,1,100,2],"7305":[1,1,135,38],"7313":[1,1,135,38],"7321":[1,1,135,38],"7329":[1,1,135,38],"7337":[1,1,135,38],"7345":[5,14,7,2],"7353":[5,14,7,2],"7361":[11,9,13,10],"7369":[11,9,13,10],"7377":[15,9,17,10],"7385":[10,5,21,6],"7393":[8,27,23,2],"7401":[8,27,23,2],"7409":[25,5,27,6],"7417":[34,25,34,79],"7425":[36,25,36,79],"7433":[33,13,37,14],"7441":[39,21,39,75],"7449":[32,9,40,10],"7457":[43,21,43,75],"7465":[42,9,43,81],"7473":[46,17,46,71],"7481":[49,21,49,75],"7489":[51,21,51,75],"7497":[53,21,53,75],"7505":[55,21,55,75],"7513":[57,21,57,75],"7521":[60,25,60,79],"7529":[62,25,62,79],"7537":[59,13,63,14],"7545":[66,25,66,79],"7553":[68,25,68,79],"7561":[65,13,69,14],"7569":[71,21,71,75],"7577":[77,13,79,14],"7585":[80,21,80,75],"7593":[82,21,82,75],"7601":[82,130,82,150],"7609":[82,155,82,179],"7617":[82,184,82,207],"7625":[84,21,84,75],"7633":[86,21,86,75],"7641":[83,16,87,10],"7649":[81,16,87,10],"7657":[72,16,87,10],"7665":[70,16,87,10],"7673":[64,16,87,10],"7681":[58,16,87,10],"7689":[56,16,87,10],"7697":[54,16,87,10],"7705":[52,16,87,10],"7713":[50,16,87,10],"7721":[48,9,87,10],"7729":[90,21,90,75],"7737":[90,130,90,150],"7745":[90,155,90,179],"7753":[90,184,90,207],"7761":[93,25,93,79],"7769":[95,25,95,79],"7777":[94,20,96,14],"7785":[92,13,96,14],"7793":[89,9,97,10],"7801":[28,13,28,25],"7809":[29,10,29,18],"7817":[31,10,31,18],"7825":[41,10,41,21],"7833":[45,10,45,19],"7841":[47,10,47,18],"7849":[88,10,88,20],"7857":[24,1,100,2],"7865":[24,1,100,2],"7873":[1,1,135,38],"7881":[1,1,135,38],"nBranches":176,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/bson/lib/bson/parser/calculate_size.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/bson/lib/bson/parser/calculate_size_jalangi_.js","code":"\"use strict\"\n\nvar writeIEEE754 = require('../float_parser').writeIEEE754\n\t, readIEEE754 = require('../float_parser').readIEEE754\n\t, Long = require('../long').Long\n  , Double = require('../double').Double\n  , Timestamp = require('../timestamp').Timestamp\n  , ObjectID = require('../objectid').ObjectID\n  , Symbol = require('../symbol').Symbol\n  , BSONRegExp = require('../regexp').BSONRegExp\n  , Code = require('../code').Code\n  , MinKey = require('../min_key').MinKey\n  , MaxKey = require('../max_key').MaxKey\n  , DBRef = require('../db_ref').DBRef\n  , Binary = require('../binary').Binary;\n\n// To ensure that 0.4 of node works correctly\nvar isDate = function isDate(d) {\n  return typeof d === 'object' && Object.prototype.toString.call(d) === '[object Date]';\n}\n\nvar calculateObjectSize = function calculateObjectSize(object, serializeFunctions, ignoreUndefined) {\n  var totalLength = (4 + 1);\n\n  if(Array.isArray(object)) {\n    for(var i = 0; i < object.length; i++) {\n      totalLength += calculateElement(i.toString(), object[i], serializeFunctions, true, ignoreUndefined)\n    }\n  } else {\n\t\t// If we have toBSON defined, override the current object\n\t\tif(object.toBSON) {\n\t\t\tobject = object.toBSON();\n\t\t}\n\n\t\t// Calculate size\n    for(var key in object) {\n      totalLength += calculateElement(key, object[key], serializeFunctions, false, ignoreUndefined)\n    }\n  }\n\n  return totalLength;\n}\n\n/**\n * @ignore\n * @api private\n */\nfunction calculateElement(name, value, serializeFunctions, isArray, ignoreUndefined) {\n\t// If we have toBSON defined, override the current object\n  if(value && value.toBSON){\n    value = value.toBSON();\n  }\n\n  switch(typeof value) {\n    case 'string':\n      return 1 + Buffer.byteLength(name, 'utf8') + 1 + 4 + Buffer.byteLength(value, 'utf8') + 1;\n    case 'number':\n      if(Math.floor(value) === value && value >= BSON.JS_INT_MIN && value <= BSON.JS_INT_MAX) {\n        if(value >= BSON.BSON_INT32_MIN && value <= BSON.BSON_INT32_MAX) { // 32 bit\n          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (4 + 1);\n        } else {\n          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (8 + 1);\n        }\n      } else {  // 64 bit\n        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (8 + 1);\n      }\n    case 'undefined':\n      if(isArray || !ignoreUndefined) return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (1);\n      return 0;\n    case 'boolean':\n      return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (1 + 1);\n    case 'object':\n      if(value == null || value instanceof MinKey || value instanceof MaxKey || value['_bsontype'] == 'MinKey' || value['_bsontype'] == 'MaxKey') {\n        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (1);\n      } else if(value instanceof ObjectID || value['_bsontype'] == 'ObjectID') {\n        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (12 + 1);\n      } else if(value instanceof Date || isDate(value)) {\n        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (8 + 1);\n      } else if(typeof Buffer !== 'undefined' && Buffer.isBuffer(value)) {\n        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (1 + 4 + 1) + value.length;\n      } else if(value instanceof Long || value instanceof Double || value instanceof Timestamp\n          || value['_bsontype'] == 'Long' || value['_bsontype'] == 'Double' || value['_bsontype'] == 'Timestamp') {\n        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (8 + 1);\n      } else if(value instanceof Code || value['_bsontype'] == 'Code') {\n        // Calculate size depending on the availability of a scope\n        if(value.scope != null && Object.keys(value.scope).length > 0) {\n          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + 4 + 4 + Buffer.byteLength(value.code.toString(), 'utf8') + 1 + calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined);\n        } else {\n          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + 4 + Buffer.byteLength(value.code.toString(), 'utf8') + 1;\n        }\n      } else if(value instanceof Binary || value['_bsontype'] == 'Binary') {\n        // Check what kind of subtype we have\n        if(value.sub_type == Binary.SUBTYPE_BYTE_ARRAY) {\n          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (value.position + 1 + 4 + 1 + 4);\n        } else {\n          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + (value.position + 1 + 4 + 1);\n        }\n      } else if(value instanceof Symbol || value['_bsontype'] == 'Symbol') {\n        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + Buffer.byteLength(value.value, 'utf8') + 4 + 1 + 1;\n      } else if(value instanceof DBRef || value['_bsontype'] == 'DBRef') {\n        // Set up correct object for serialization\n        var ordered_values = {\n            '$ref': value.namespace\n          , '$id' : value.oid\n        };\n\n        // Add db reference if it exists\n        if(null != value.db) {\n          ordered_values['$db'] = value.db;\n        }\n\n        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + calculateObjectSize(ordered_values, serializeFunctions, ignoreUndefined);\n      } else if(value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]') {\n          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + Buffer.byteLength(value.source, 'utf8') + 1\n            + (value.global ? 1 : 0) + (value.ignoreCase ? 1 : 0) + (value.multiline ? 1 : 0) + 1\n      } else if(value instanceof BSONRegExp || value['_bsontype'] == 'BSONRegExp') {\n          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + Buffer.byteLength(value.pattern, 'utf8') + 1\n            + Buffer.byteLength(value.options, 'utf8') + 1\n      } else {\n        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + calculateObjectSize(value, serializeFunctions, ignoreUndefined) + 1;\n      }\n    case 'function':\n      // WTF for 0.4.X where typeof /someregexp/ === 'function'\n      if(value instanceof RegExp || Object.prototype.toString.call(value) === '[object RegExp]' || String.call(value) == '[object RegExp]') {\n        return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + Buffer.byteLength(value.source, 'utf8') + 1\n          + (value.global ? 1 : 0) + (value.ignoreCase ? 1 : 0) + (value.multiline ? 1 : 0) + 1\n      } else {\n        if(serializeFunctions && value.scope != null && Object.keys(value.scope).length > 0) {\n          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + 4 + 4 + Buffer.byteLength(value.toString(), 'utf8') + 1 + calculateObjectSize(value.scope, serializeFunctions, ignoreUndefined);\n        } else if(serializeFunctions) {\n          return (name != null ? (Buffer.byteLength(name, 'utf8') + 1) : 0) + 1 + 4 + Buffer.byteLength(value.toString(), 'utf8') + 1;\n        }\n      }\n  }\n\n  return 0;\n}\n\nvar BSON = {};\n\n/**\n * Contains the function cache if we have that enable to allow for avoiding the eval step on each deserialization, comparison is by md5\n *\n * @ignore\n * @api private\n */\nvar functionCache = BSON.functionCache = {};\n\n/**\n * Number BSON Type\n *\n * @classconstant BSON_DATA_NUMBER\n **/\nBSON.BSON_DATA_NUMBER = 1;\n/**\n * String BSON Type\n *\n * @classconstant BSON_DATA_STRING\n **/\nBSON.BSON_DATA_STRING = 2;\n/**\n * Object BSON Type\n *\n * @classconstant BSON_DATA_OBJECT\n **/\nBSON.BSON_DATA_OBJECT = 3;\n/**\n * Array BSON Type\n *\n * @classconstant BSON_DATA_ARRAY\n **/\nBSON.BSON_DATA_ARRAY = 4;\n/**\n * Binary BSON Type\n *\n * @classconstant BSON_DATA_BINARY\n **/\nBSON.BSON_DATA_BINARY = 5;\n/**\n * ObjectID BSON Type\n *\n * @classconstant BSON_DATA_OID\n **/\nBSON.BSON_DATA_OID = 7;\n/**\n * Boolean BSON Type\n *\n * @classconstant BSON_DATA_BOOLEAN\n **/\nBSON.BSON_DATA_BOOLEAN = 8;\n/**\n * Date BSON Type\n *\n * @classconstant BSON_DATA_DATE\n **/\nBSON.BSON_DATA_DATE = 9;\n/**\n * null BSON Type\n *\n * @classconstant BSON_DATA_NULL\n **/\nBSON.BSON_DATA_NULL = 10;\n/**\n * RegExp BSON Type\n *\n * @classconstant BSON_DATA_REGEXP\n **/\nBSON.BSON_DATA_REGEXP = 11;\n/**\n * Code BSON Type\n *\n * @classconstant BSON_DATA_CODE\n **/\nBSON.BSON_DATA_CODE = 13;\n/**\n * Symbol BSON Type\n *\n * @classconstant BSON_DATA_SYMBOL\n **/\nBSON.BSON_DATA_SYMBOL = 14;\n/**\n * Code with Scope BSON Type\n *\n * @classconstant BSON_DATA_CODE_W_SCOPE\n **/\nBSON.BSON_DATA_CODE_W_SCOPE = 15;\n/**\n * 32 bit Integer BSON Type\n *\n * @classconstant BSON_DATA_INT\n **/\nBSON.BSON_DATA_INT = 16;\n/**\n * Timestamp BSON Type\n *\n * @classconstant BSON_DATA_TIMESTAMP\n **/\nBSON.BSON_DATA_TIMESTAMP = 17;\n/**\n * Long BSON Type\n *\n * @classconstant BSON_DATA_LONG\n **/\nBSON.BSON_DATA_LONG = 18;\n/**\n * MinKey BSON Type\n *\n * @classconstant BSON_DATA_MIN_KEY\n **/\nBSON.BSON_DATA_MIN_KEY = 0xff;\n/**\n * MaxKey BSON Type\n *\n * @classconstant BSON_DATA_MAX_KEY\n **/\nBSON.BSON_DATA_MAX_KEY = 0x7f;\n\n/**\n * Binary Default Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_DEFAULT\n **/\nBSON.BSON_BINARY_SUBTYPE_DEFAULT = 0;\n/**\n * Binary Function Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_FUNCTION\n **/\nBSON.BSON_BINARY_SUBTYPE_FUNCTION = 1;\n/**\n * Binary Byte Array Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_BYTE_ARRAY\n **/\nBSON.BSON_BINARY_SUBTYPE_BYTE_ARRAY = 2;\n/**\n * Binary UUID Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_UUID\n **/\nBSON.BSON_BINARY_SUBTYPE_UUID = 3;\n/**\n * Binary MD5 Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_MD5\n **/\nBSON.BSON_BINARY_SUBTYPE_MD5 = 4;\n/**\n * Binary User Defined Type\n *\n * @classconstant BSON_BINARY_SUBTYPE_USER_DEFINED\n **/\nBSON.BSON_BINARY_SUBTYPE_USER_DEFINED = 128;\n\n// BSON MAX VALUES\nBSON.BSON_INT32_MAX = 0x7FFFFFFF;\nBSON.BSON_INT32_MIN = -0x80000000;\n\nBSON.BSON_INT64_MAX = Math.pow(2, 63) - 1;\nBSON.BSON_INT64_MIN = -Math.pow(2, 63);\n\n// JS MAX PRECISE VALUES\nBSON.JS_INT_MAX = 0x20000000000000;  // Any integer up to 2^53 can be precisely represented by a double.\nBSON.JS_INT_MIN = -0x20000000000000;  // Any integer down to -2^53 can be precisely represented by a double.\n\n// Internal long versions\nvar JS_INT_MAX_LONG = Long.fromNumber(0x20000000000000);  // Any integer up to 2^53 can be precisely represented by a double.\nvar JS_INT_MIN_LONG = Long.fromNumber(-0x20000000000000);  // Any integer down to -2^53 can be precisely represented by a double.\n\nmodule.exports = calculateObjectSize;\n"};
jalangiLabel1700:
    while (true) {
        try {
            J$.Se(7153, '/home/blake/ExpoSE/Targets/node-flarum/node_modules/bson/lib/bson/parser/calculate_size_jalangi_.js', '/home/blake/ExpoSE/Targets/node-flarum/node_modules/bson/lib/bson/parser/calculate_size.js');
            function calculateElement(name, value, serializeFunctions, isArray, ignoreUndefined) {
                jalangiLabel1699:
                    while (true) {
                        try {
                            J$.Fe(5897, arguments.callee, this, arguments);
                            arguments = J$.N(5905, 'arguments', arguments, 4);
                            name = J$.N(5913, 'name', name, 4);
                            value = J$.N(5921, 'value', value, 4);
                            serializeFunctions = J$.N(5929, 'serializeFunctions', serializeFunctions, 4);
                            isArray = J$.N(5937, 'isArray', isArray, 4);
                            ignoreUndefined = J$.N(5945, 'ignoreUndefined', ignoreUndefined, 4);
                            J$.N(5953, 'ordered_values', ordered_values, 0);
                            if (J$.X1(7409, J$.C(48, J$.C(40, J$.R(1393, 'value', value, 0)) ? J$.G(1409, J$.R(1401, 'value', value, 0), 'toBSON', 0) : J$._()))) {
                                J$.X1(1441, value = J$.W(1433, 'value', J$.M(1425, J$.R(1417, 'value', value, 0), 'toBSON', 0)(), value, 0));
                            }
                            switch (J$.X1(7801, J$.C1(656, J$.U(90, 'typeof', J$.R(1449, 'value', value, 0))))) {
                            case J$.X1(7809, J$.C2(664, J$.T(1569, 'string', 21, false))):
                                return J$.X1(1561, J$.Rt(1553, J$.B(130, '+', J$.B(122, '+', J$.B(114, '+', J$.B(106, '+', J$.B(98, '+', J$.T(1457, 1, 22, false), J$.M(1489, J$.R(1465, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.R(1473, 'name', name, 0), J$.T(1481, 'utf8', 21, false)), 0), J$.T(1497, 1, 22, false), 0), J$.T(1505, 4, 22, false), 0), J$.M(1537, J$.R(1513, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.R(1521, 'value', value, 0), J$.T(1529, 'utf8', 21, false)), 0), J$.T(1545, 1, 22, false), 0)));
                            case J$.X1(7817, J$.C2(672, J$.T(1993, 'number', 21, false))):
                                if (J$.X1(7449, J$.C(112, J$.C(64, J$.C(56, J$.B(138, '===', J$.M(1593, J$.R(1577, 'Math', Math, 2), 'floor', 0)(J$.R(1585, 'value', value, 0)), J$.R(1601, 'value', value, 0), 0)) ? J$.B(146, '>=', J$.R(1609, 'value', value, 0), J$.G(1625, J$.R(1617, 'BSON', BSON, 1), 'JS_INT_MIN', 0), 0) : J$._()) ? J$.B(154, '<=', J$.R(1633, 'value', value, 0), J$.G(1649, J$.R(1641, 'BSON', BSON, 1), 'JS_INT_MAX', 0), 0) : J$._()))) {
                                    if (J$.X1(7433, J$.C(96, J$.C(72, J$.B(162, '>=', J$.R(1657, 'value', value, 0), J$.G(1673, J$.R(1665, 'BSON', BSON, 1), 'BSON_INT32_MIN', 0), 0)) ? J$.B(170, '<=', J$.R(1681, 'value', value, 0), J$.G(1697, J$.R(1689, 'BSON', BSON, 1), 'BSON_INT32_MAX', 0), 0) : J$._()))) {
                                        return J$.X1(1793, J$.Rt(1785, J$.B(202, '+', J$.X1(7417, J$.C(80, J$.B(178, '!=', J$.R(1705, 'name', name, 0), J$.T(1713, null, 25, false), 0))) ? J$.B(186, '+', J$.M(1745, J$.R(1721, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.R(1729, 'name', name, 0), J$.T(1737, 'utf8', 21, false)), J$.T(1753, 1, 22, false), 0) : J$.T(1761, 0, 22, false), J$.B(194, '+', J$.T(1769, 4, 22, false), J$.T(1777, 1, 22, false), 0), 0)));
                                    } else {
                                        return J$.X1(1889, J$.Rt(1881, J$.B(234, '+', J$.X1(7425, J$.C(88, J$.B(210, '!=', J$.R(1801, 'name', name, 0), J$.T(1809, null, 25, false), 0))) ? J$.B(218, '+', J$.M(1841, J$.R(1817, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.R(1825, 'name', name, 0), J$.T(1833, 'utf8', 21, false)), J$.T(1849, 1, 22, false), 0) : J$.T(1857, 0, 22, false), J$.B(226, '+', J$.T(1865, 8, 22, false), J$.T(1873, 1, 22, false), 0), 0)));
                                    }
                                } else {
                                    return J$.X1(1985, J$.Rt(1977, J$.B(266, '+', J$.X1(7441, J$.C(104, J$.B(242, '!=', J$.R(1897, 'name', name, 0), J$.T(1905, null, 25, false), 0))) ? J$.B(250, '+', J$.M(1937, J$.R(1913, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.R(1921, 'name', name, 0), J$.T(1929, 'utf8', 21, false)), J$.T(1945, 1, 22, false), 0) : J$.T(1953, 0, 22, false), J$.B(258, '+', J$.T(1961, 8, 22, false), J$.T(1969, 1, 22, false), 0), 0)));
                                }
                            case J$.X1(7825, J$.C2(680, J$.T(2129, 'undefined', 21, false))):
                                if (J$.X1(7465, J$.C(136, J$.C(120, J$.R(2001, 'isArray', isArray, 0)) ? J$._() : J$.U(274, '!', J$.R(2009, 'ignoreUndefined', ignoreUndefined, 0)))))
                                    return J$.X1(2097, J$.Rt(2089, J$.B(298, '+', J$.X1(7457, J$.C(128, J$.B(282, '!=', J$.R(2017, 'name', name, 0), J$.T(2025, null, 25, false), 0))) ? J$.B(290, '+', J$.M(2057, J$.R(2033, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.R(2041, 'name', name, 0), J$.T(2049, 'utf8', 21, false)), J$.T(2065, 1, 22, false), 0) : J$.T(2073, 0, 22, false), J$.T(2081, 1, 22, false), 0)));
                                return J$.X1(2121, J$.Rt(2113, J$.T(2105, 0, 22, false)));
                            case J$.X1(7833, J$.C2(688, J$.T(2233, 'boolean', 21, false))):
                                return J$.X1(2225, J$.Rt(2217, J$.B(330, '+', J$.X1(7473, J$.C(144, J$.B(306, '!=', J$.R(2137, 'name', name, 0), J$.T(2145, null, 25, false), 0))) ? J$.B(314, '+', J$.M(2177, J$.R(2153, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.R(2161, 'name', name, 0), J$.T(2169, 'utf8', 21, false)), J$.T(2185, 1, 22, false), 0) : J$.T(2193, 0, 22, false), J$.B(322, '+', J$.T(2201, 1, 22, false), J$.T(2209, 1, 22, false), 0), 0)));
                            case J$.X1(7841, J$.C2(696, J$.T(5089, 'object', 21, false))):
                                if (J$.X1(7721, J$.C(544, J$.C(176, J$.C(168, J$.C(160, J$.C(152, J$.B(338, '==', J$.R(2241, 'value', value, 0), J$.T(2249, null, 25, false), 0)) ? J$._() : J$.B(346, 'instanceof', J$.R(2257, 'value', value, 0), J$.R(2265, 'MinKey', MinKey, 1), 0)) ? J$._() : J$.B(354, 'instanceof', J$.R(2273, 'value', value, 0), J$.R(2281, 'MaxKey', MaxKey, 1), 0)) ? J$._() : J$.B(362, '==', J$.G(2305, J$.R(2289, 'value', value, 0), J$.T(2297, '_bsontype', 21, false), 4), J$.T(2313, 'MinKey', 21, false), 0)) ? J$._() : J$.B(370, '==', J$.G(2337, J$.R(2321, 'value', value, 0), J$.T(2329, '_bsontype', 21, false), 4), J$.T(2345, 'MaxKey', 21, false), 0)))) {
                                    return J$.X1(2433, J$.Rt(2425, J$.B(394, '+', J$.X1(7481, J$.C(184, J$.B(378, '!=', J$.R(2353, 'name', name, 0), J$.T(2361, null, 25, false), 0))) ? J$.B(386, '+', J$.M(2393, J$.R(2369, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.R(2377, 'name', name, 0), J$.T(2385, 'utf8', 21, false)), J$.T(2401, 1, 22, false), 0) : J$.T(2409, 0, 22, false), J$.T(2417, 1, 22, false), 0)));
                                } else if (J$.X1(7713, J$.C(536, J$.C(192, J$.B(402, 'instanceof', J$.R(2441, 'value', value, 0), J$.R(2449, 'ObjectID', ObjectID, 1), 0)) ? J$._() : J$.B(410, '==', J$.G(2473, J$.R(2457, 'value', value, 0), J$.T(2465, '_bsontype', 21, false), 4), J$.T(2481, 'ObjectID', 21, false), 0)))) {
                                    return J$.X1(2577, J$.Rt(2569, J$.B(442, '+', J$.X1(7489, J$.C(200, J$.B(418, '!=', J$.R(2489, 'name', name, 0), J$.T(2497, null, 25, false), 0))) ? J$.B(426, '+', J$.M(2529, J$.R(2505, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.R(2513, 'name', name, 0), J$.T(2521, 'utf8', 21, false)), J$.T(2537, 1, 22, false), 0) : J$.T(2545, 0, 22, false), J$.B(434, '+', J$.T(2553, 12, 22, false), J$.T(2561, 1, 22, false), 0), 0)));
                                } else if (J$.X1(7705, J$.C(528, J$.C(208, J$.B(450, 'instanceof', J$.R(2585, 'value', value, 0), J$.R(2593, 'Date', Date, 2), 0)) ? J$._() : J$.F(2617, J$.R(2601, 'isDate', isDate, 1), 0)(J$.R(2609, 'value', value, 0))))) {
                                    return J$.X1(2713, J$.Rt(2705, J$.B(482, '+', J$.X1(7497, J$.C(216, J$.B(458, '!=', J$.R(2625, 'name', name, 0), J$.T(2633, null, 25, false), 0))) ? J$.B(466, '+', J$.M(2665, J$.R(2641, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.R(2649, 'name', name, 0), J$.T(2657, 'utf8', 21, false)), J$.T(2673, 1, 22, false), 0) : J$.T(2681, 0, 22, false), J$.B(474, '+', J$.T(2689, 8, 22, false), J$.T(2697, 1, 22, false), 0), 0)));
                                } else if (J$.X1(7697, J$.C(520, J$.C(224, J$.B(498, '!==', J$.U(490, 'typeof', J$.I(typeof Buffer === 'undefined' ? J$.R(2721, 'Buffer', undefined, 2) : J$.R(2721, 'Buffer', Buffer, 2))), J$.T(2729, 'undefined', 21, false), 0)) ? J$.M(2753, J$.R(2737, 'Buffer', Buffer, 2), 'isBuffer', 0)(J$.R(2745, 'value', value, 0)) : J$._()))) {
                                    return J$.X1(2873, J$.Rt(2865, J$.B(546, '+', J$.B(538, '+', J$.X1(7505, J$.C(232, J$.B(506, '!=', J$.R(2761, 'name', name, 0), J$.T(2769, null, 25, false), 0))) ? J$.B(514, '+', J$.M(2801, J$.R(2777, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.R(2785, 'name', name, 0), J$.T(2793, 'utf8', 21, false)), J$.T(2809, 1, 22, false), 0) : J$.T(2817, 0, 22, false), J$.B(530, '+', J$.B(522, '+', J$.T(2825, 1, 22, false), J$.T(2833, 4, 22, false), 0), J$.T(2841, 1, 22, false), 0), 0), J$.G(2857, J$.R(2849, 'value', value, 0), 'length', 0), 0)));
                                } else if (J$.X1(7689, J$.C(512, J$.C(272, J$.C(264, J$.C(256, J$.C(248, J$.C(240, J$.B(554, 'instanceof', J$.R(2881, 'value', value, 0), J$.R(2889, 'Long', Long, 1), 0)) ? J$._() : J$.B(562, 'instanceof', J$.R(2897, 'value', value, 0), J$.R(2905, 'Double', Double, 1), 0)) ? J$._() : J$.B(570, 'instanceof', J$.R(2913, 'value', value, 0), J$.R(2921, 'Timestamp', Timestamp, 1), 0)) ? J$._() : J$.B(578, '==', J$.G(2945, J$.R(2929, 'value', value, 0), J$.T(2937, '_bsontype', 21, false), 4), J$.T(2953, 'Long', 21, false), 0)) ? J$._() : J$.B(586, '==', J$.G(2977, J$.R(2961, 'value', value, 0), J$.T(2969, '_bsontype', 21, false), 4), J$.T(2985, 'Double', 21, false), 0)) ? J$._() : J$.B(594, '==', J$.G(3009, J$.R(2993, 'value', value, 0), J$.T(3001, '_bsontype', 21, false), 4), J$.T(3017, 'Timestamp', 21, false), 0)))) {
                                    return J$.X1(3113, J$.Rt(3105, J$.B(626, '+', J$.X1(7513, J$.C(280, J$.B(602, '!=', J$.R(3025, 'name', name, 0), J$.T(3033, null, 25, false), 0))) ? J$.B(610, '+', J$.M(3065, J$.R(3041, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.R(3049, 'name', name, 0), J$.T(3057, 'utf8', 21, false)), J$.T(3073, 1, 22, false), 0) : J$.T(3081, 0, 22, false), J$.B(618, '+', J$.T(3089, 8, 22, false), J$.T(3097, 1, 22, false), 0), 0)));
                                } else if (J$.X1(7681, J$.C(504, J$.C(288, J$.B(634, 'instanceof', J$.R(3121, 'value', value, 0), J$.R(3129, 'Code', Code, 1), 0)) ? J$._() : J$.B(642, '==', J$.G(3153, J$.R(3137, 'value', value, 0), J$.T(3145, '_bsontype', 21, false), 4), J$.T(3161, 'Code', 21, false), 0)))) {
                                    if (J$.X1(7537, J$.C(320, J$.C(296, J$.B(650, '!=', J$.G(3177, J$.R(3169, 'value', value, 0), 'scope', 0), J$.T(3185, null, 25, false), 0)) ? J$.B(658, '>', J$.G(3225, J$.M(3217, J$.R(3193, 'Object', Object, 2), 'keys', 0)(J$.G(3209, J$.R(3201, 'value', value, 0), 'scope', 0)), 'length', 0), J$.T(3233, 0, 22, false), 0) : J$._()))) {
                                        return J$.X1(3441, J$.Rt(3433, J$.B(722, '+', J$.B(714, '+', J$.B(706, '+', J$.B(698, '+', J$.B(690, '+', J$.B(682, '+', J$.X1(7521, J$.C(304, J$.B(666, '!=', J$.R(3241, 'name', name, 0), J$.T(3249, null, 25, false), 0))) ? J$.B(674, '+', J$.M(3281, J$.R(3257, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.R(3265, 'name', name, 0), J$.T(3273, 'utf8', 21, false)), J$.T(3289, 1, 22, false), 0) : J$.T(3297, 0, 22, false), J$.T(3305, 1, 22, false), 0), J$.T(3313, 4, 22, false), 0), J$.T(3321, 4, 22, false), 0), J$.M(3369, J$.R(3329, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.M(3353, J$.G(3345, J$.R(3337, 'value', value, 0), 'code', 0), 'toString', 0)(), J$.T(3361, 'utf8', 21, false)), 0), J$.T(3377, 1, 22, false), 0), J$.F(3425, J$.R(3385, 'calculateObjectSize', calculateObjectSize, 1), 0)(J$.G(3401, J$.R(3393, 'value', value, 0), 'scope', 0), J$.R(3409, 'serializeFunctions', serializeFunctions, 0), J$.R(3417, 'ignoreUndefined', ignoreUndefined, 0)), 0)));
                                    } else {
                                        return J$.X1(3593, J$.Rt(3585, J$.B(770, '+', J$.B(762, '+', J$.B(754, '+', J$.B(746, '+', J$.X1(7529, J$.C(312, J$.B(730, '!=', J$.R(3449, 'name', name, 0), J$.T(3457, null, 25, false), 0))) ? J$.B(738, '+', J$.M(3489, J$.R(3465, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.R(3473, 'name', name, 0), J$.T(3481, 'utf8', 21, false)), J$.T(3497, 1, 22, false), 0) : J$.T(3505, 0, 22, false), J$.T(3513, 1, 22, false), 0), J$.T(3521, 4, 22, false), 0), J$.M(3569, J$.R(3529, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.M(3553, J$.G(3545, J$.R(3537, 'value', value, 0), 'code', 0), 'toString', 0)(), J$.T(3561, 'utf8', 21, false)), 0), J$.T(3577, 1, 22, false), 0)));
                                    }
                                } else if (J$.X1(7673, J$.C(496, J$.C(328, J$.B(778, 'instanceof', J$.R(3601, 'value', value, 0), J$.R(3609, 'Binary', Binary, 1), 0)) ? J$._() : J$.B(786, '==', J$.G(3633, J$.R(3617, 'value', value, 0), J$.T(3625, '_bsontype', 21, false), 4), J$.T(3641, 'Binary', 21, false), 0)))) {
                                    if (J$.X1(7561, J$.C(352, J$.B(794, '==', J$.G(3657, J$.R(3649, 'value', value, 0), 'sub_type', 0), J$.G(3673, J$.R(3665, 'Binary', Binary, 1), 'SUBTYPE_BYTE_ARRAY', 0), 0)))) {
                                        return J$.X1(3801, J$.Rt(3793, J$.B(850, '+', J$.X1(7545, J$.C(336, J$.B(802, '!=', J$.R(3681, 'name', name, 0), J$.T(3689, null, 25, false), 0))) ? J$.B(810, '+', J$.M(3721, J$.R(3697, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.R(3705, 'name', name, 0), J$.T(3713, 'utf8', 21, false)), J$.T(3729, 1, 22, false), 0) : J$.T(3737, 0, 22, false), J$.B(842, '+', J$.B(834, '+', J$.B(826, '+', J$.B(818, '+', J$.G(3753, J$.R(3745, 'value', value, 0), 'position', 0), J$.T(3761, 1, 22, false), 0), J$.T(3769, 4, 22, false), 0), J$.T(3777, 1, 22, false), 0), J$.T(3785, 4, 22, false), 0), 0)));
                                    } else {
                                        return J$.X1(3921, J$.Rt(3913, J$.B(898, '+', J$.X1(7553, J$.C(344, J$.B(858, '!=', J$.R(3809, 'name', name, 0), J$.T(3817, null, 25, false), 0))) ? J$.B(866, '+', J$.M(3849, J$.R(3825, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.R(3833, 'name', name, 0), J$.T(3841, 'utf8', 21, false)), J$.T(3857, 1, 22, false), 0) : J$.T(3865, 0, 22, false), J$.B(890, '+', J$.B(882, '+', J$.B(874, '+', J$.G(3881, J$.R(3873, 'value', value, 0), 'position', 0), J$.T(3889, 1, 22, false), 0), J$.T(3897, 4, 22, false), 0), J$.T(3905, 1, 22, false), 0), 0)));
                                    }
                                } else if (J$.X1(7665, J$.C(488, J$.C(360, J$.B(906, 'instanceof', J$.R(3929, 'value', value, 0), J$.R(3937, 'Symbol', Symbol, 1), 0)) ? J$._() : J$.B(914, '==', J$.G(3961, J$.R(3945, 'value', value, 0), J$.T(3953, '_bsontype', 21, false), 4), J$.T(3969, 'Symbol', 21, false), 0)))) {
                                    return J$.X1(4113, J$.Rt(4105, J$.B(962, '+', J$.B(954, '+', J$.B(946, '+', J$.B(938, '+', J$.X1(7569, J$.C(368, J$.B(922, '!=', J$.R(3977, 'name', name, 0), J$.T(3985, null, 25, false), 0))) ? J$.B(930, '+', J$.M(4017, J$.R(3993, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.R(4001, 'name', name, 0), J$.T(4009, 'utf8', 21, false)), J$.T(4025, 1, 22, false), 0) : J$.T(4033, 0, 22, false), J$.M(4073, J$.R(4041, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.G(4057, J$.R(4049, 'value', value, 0), 'value', 0), J$.T(4065, 'utf8', 21, false)), 0), J$.T(4081, 4, 22, false), 0), J$.T(4089, 1, 22, false), 0), J$.T(4097, 1, 22, false), 0)));
                                } else if (J$.X1(7657, J$.C(480, J$.C(376, J$.B(970, 'instanceof', J$.R(4121, 'value', value, 0), J$.R(4129, 'DBRef', DBRef, 1), 0)) ? J$._() : J$.B(978, '==', J$.G(4153, J$.R(4137, 'value', value, 0), J$.T(4145, '_bsontype', 21, false), 4), J$.T(4161, 'DBRef', 21, false), 0)))) {
                                    var ordered_values = J$.X1(4217, J$.W(4209, 'ordered_values', J$.T(4201, {
                                        '$ref': J$.G(4177, J$.R(4169, 'value', value, 0), 'namespace', 0),
                                        '$id': J$.G(4193, J$.R(4185, 'value', value, 0), 'oid', 0)
                                    }, 11, false), ordered_values, 1));
                                    if (J$.X1(7577, J$.C(384, J$.B(986, '!=', J$.T(4225, null, 25, false), J$.G(4241, J$.R(4233, 'value', value, 0), 'db', 0), 0)))) {
                                        J$.X1(4289, J$.P(4281, J$.R(4249, 'ordered_values', ordered_values, 0), J$.T(4257, '$db', 21, false), J$.G(4273, J$.R(4265, 'value', value, 0), 'db', 0), 2));
                                    }
                                    return J$.X1(4417, J$.Rt(4409, J$.B(1018, '+', J$.B(1010, '+', J$.X1(7585, J$.C(392, J$.B(994, '!=', J$.R(4297, 'name', name, 0), J$.T(4305, null, 25, false), 0))) ? J$.B(1002, '+', J$.M(4337, J$.R(4313, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.R(4321, 'name', name, 0), J$.T(4329, 'utf8', 21, false)), J$.T(4345, 1, 22, false), 0) : J$.T(4353, 0, 22, false), J$.T(4361, 1, 22, false), 0), J$.F(4401, J$.R(4369, 'calculateObjectSize', calculateObjectSize, 1), 0)(J$.R(4377, 'ordered_values', ordered_values, 0), J$.R(4385, 'serializeFunctions', serializeFunctions, 0), J$.R(4393, 'ignoreUndefined', ignoreUndefined, 0)), 0)));
                                } else if (J$.X1(7649, J$.C(472, J$.C(400, J$.B(1026, 'instanceof', J$.R(4425, 'value', value, 0), J$.R(4433, 'RegExp', RegExp, 2), 0)) ? J$._() : J$.B(1034, '===', J$.M(4473, J$.G(4457, J$.G(4449, J$.R(4441, 'Object', Object, 2), 'prototype', 0), 'toString', 0), 'call', 0)(J$.R(4465, 'value', value, 0)), J$.T(4481, '[object RegExp]', 21, false), 0)))) {
                                    return J$.X1(4721, J$.Rt(4713, J$.B(1106, '+', J$.B(1098, '+', J$.B(1090, '+', J$.B(1082, '+', J$.B(1074, '+', J$.B(1066, '+', J$.B(1058, '+', J$.X1(7593, J$.C(408, J$.B(1042, '!=', J$.R(4489, 'name', name, 0), J$.T(4497, null, 25, false), 0))) ? J$.B(1050, '+', J$.M(4529, J$.R(4505, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.R(4513, 'name', name, 0), J$.T(4521, 'utf8', 21, false)), J$.T(4537, 1, 22, false), 0) : J$.T(4545, 0, 22, false), J$.T(4553, 1, 22, false), 0), J$.M(4593, J$.R(4561, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.G(4577, J$.R(4569, 'value', value, 0), 'source', 0), J$.T(4585, 'utf8', 21, false)), 0), J$.T(4601, 1, 22, false), 0), J$.X1(7601, J$.C(416, J$.G(4617, J$.R(4609, 'value', value, 0), 'global', 0))) ? J$.T(4625, 1, 22, false) : J$.T(4633, 0, 22, false), 0), J$.X1(7609, J$.C(424, J$.G(4649, J$.R(4641, 'value', value, 0), 'ignoreCase', 0))) ? J$.T(4657, 1, 22, false) : J$.T(4665, 0, 22, false), 0), J$.X1(7617, J$.C(432, J$.G(4681, J$.R(4673, 'value', value, 0), 'multiline', 0))) ? J$.T(4689, 1, 22, false) : J$.T(4697, 0, 22, false), 0), J$.T(4705, 1, 22, false), 0)));
                                } else if (J$.X1(7641, J$.C(464, J$.C(440, J$.B(1114, 'instanceof', J$.R(4729, 'value', value, 0), J$.R(4737, 'BSONRegExp', BSONRegExp, 1), 0)) ? J$._() : J$.B(1122, '==', J$.G(4761, J$.R(4745, 'value', value, 0), J$.T(4753, '_bsontype', 21, false), 4), J$.T(4769, 'BSONRegExp', 21, false), 0)))) {
                                    return J$.X1(4953, J$.Rt(4945, J$.B(1178, '+', J$.B(1170, '+', J$.B(1162, '+', J$.B(1154, '+', J$.B(1146, '+', J$.X1(7625, J$.C(448, J$.B(1130, '!=', J$.R(4777, 'name', name, 0), J$.T(4785, null, 25, false), 0))) ? J$.B(1138, '+', J$.M(4817, J$.R(4793, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.R(4801, 'name', name, 0), J$.T(4809, 'utf8', 21, false)), J$.T(4825, 1, 22, false), 0) : J$.T(4833, 0, 22, false), J$.T(4841, 1, 22, false), 0), J$.M(4881, J$.R(4849, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.G(4865, J$.R(4857, 'value', value, 0), 'pattern', 0), J$.T(4873, 'utf8', 21, false)), 0), J$.T(4889, 1, 22, false), 0), J$.M(4929, J$.R(4897, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.G(4913, J$.R(4905, 'value', value, 0), 'options', 0), J$.T(4921, 'utf8', 21, false)), 0), J$.T(4937, 1, 22, false), 0)));
                                } else {
                                    return J$.X1(5081, J$.Rt(5073, J$.B(1210, '+', J$.B(1202, '+', J$.X1(7633, J$.C(456, J$.B(1186, '!=', J$.R(4961, 'name', name, 0), J$.T(4969, null, 25, false), 0))) ? J$.B(1194, '+', J$.M(5001, J$.R(4977, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.R(4985, 'name', name, 0), J$.T(4993, 'utf8', 21, false)), J$.T(5009, 1, 22, false), 0) : J$.T(5017, 0, 22, false), J$.F(5057, J$.R(5025, 'calculateObjectSize', calculateObjectSize, 1), 0)(J$.R(5033, 'value', value, 0), J$.R(5041, 'serializeFunctions', serializeFunctions, 0), J$.R(5049, 'ignoreUndefined', ignoreUndefined, 0)), 0), J$.T(5065, 1, 22, false), 0)));
                                }
                            case J$.X1(7849, J$.C2(704, J$.T(5865, 'function', 21, false))):
                                if (J$.X1(7793, J$.C(648, J$.C(560, J$.C(552, J$.B(1218, 'instanceof', J$.R(5097, 'value', value, 0), J$.R(5105, 'RegExp', RegExp, 2), 0)) ? J$._() : J$.B(1226, '===', J$.M(5145, J$.G(5129, J$.G(5121, J$.R(5113, 'Object', Object, 2), 'prototype', 0), 'toString', 0), 'call', 0)(J$.R(5137, 'value', value, 0)), J$.T(5153, '[object RegExp]', 21, false), 0)) ? J$._() : J$.B(1234, '==', J$.M(5177, J$.R(5161, 'String', String, 2), 'call', 0)(J$.R(5169, 'value', value, 0)), J$.T(5185, '[object RegExp]', 21, false), 0)))) {
                                    return J$.X1(5425, J$.Rt(5417, J$.B(1306, '+', J$.B(1298, '+', J$.B(1290, '+', J$.B(1282, '+', J$.B(1274, '+', J$.B(1266, '+', J$.B(1258, '+', J$.X1(7729, J$.C(568, J$.B(1242, '!=', J$.R(5193, 'name', name, 0), J$.T(5201, null, 25, false), 0))) ? J$.B(1250, '+', J$.M(5233, J$.R(5209, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.R(5217, 'name', name, 0), J$.T(5225, 'utf8', 21, false)), J$.T(5241, 1, 22, false), 0) : J$.T(5249, 0, 22, false), J$.T(5257, 1, 22, false), 0), J$.M(5297, J$.R(5265, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.G(5281, J$.R(5273, 'value', value, 0), 'source', 0), J$.T(5289, 'utf8', 21, false)), 0), J$.T(5305, 1, 22, false), 0), J$.X1(7737, J$.C(576, J$.G(5321, J$.R(5313, 'value', value, 0), 'global', 0))) ? J$.T(5329, 1, 22, false) : J$.T(5337, 0, 22, false), 0), J$.X1(7745, J$.C(584, J$.G(5353, J$.R(5345, 'value', value, 0), 'ignoreCase', 0))) ? J$.T(5361, 1, 22, false) : J$.T(5369, 0, 22, false), 0), J$.X1(7753, J$.C(592, J$.G(5385, J$.R(5377, 'value', value, 0), 'multiline', 0))) ? J$.T(5393, 1, 22, false) : J$.T(5401, 0, 22, false), 0), J$.T(5409, 1, 22, false), 0)));
                                } else {
                                    if (J$.X1(7785, J$.C(640, J$.C(608, J$.C(600, J$.R(5433, 'serializeFunctions', serializeFunctions, 0)) ? J$.B(1314, '!=', J$.G(5449, J$.R(5441, 'value', value, 0), 'scope', 0), J$.T(5457, null, 25, false), 0) : J$._()) ? J$.B(1322, '>', J$.G(5497, J$.M(5489, J$.R(5465, 'Object', Object, 2), 'keys', 0)(J$.G(5481, J$.R(5473, 'value', value, 0), 'scope', 0)), 'length', 0), J$.T(5505, 0, 22, false), 0) : J$._()))) {
                                        return J$.X1(5705, J$.Rt(5697, J$.B(1386, '+', J$.B(1378, '+', J$.B(1370, '+', J$.B(1362, '+', J$.B(1354, '+', J$.B(1346, '+', J$.X1(7761, J$.C(616, J$.B(1330, '!=', J$.R(5513, 'name', name, 0), J$.T(5521, null, 25, false), 0))) ? J$.B(1338, '+', J$.M(5553, J$.R(5529, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.R(5537, 'name', name, 0), J$.T(5545, 'utf8', 21, false)), J$.T(5561, 1, 22, false), 0) : J$.T(5569, 0, 22, false), J$.T(5577, 1, 22, false), 0), J$.T(5585, 4, 22, false), 0), J$.T(5593, 4, 22, false), 0), J$.M(5633, J$.R(5601, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.M(5617, J$.R(5609, 'value', value, 0), 'toString', 0)(), J$.T(5625, 'utf8', 21, false)), 0), J$.T(5641, 1, 22, false), 0), J$.F(5689, J$.R(5649, 'calculateObjectSize', calculateObjectSize, 1), 0)(J$.G(5665, J$.R(5657, 'value', value, 0), 'scope', 0), J$.R(5673, 'serializeFunctions', serializeFunctions, 0), J$.R(5681, 'ignoreUndefined', ignoreUndefined, 0)), 0)));
                                    } else if (J$.X1(7777, J$.C(632, J$.R(5713, 'serializeFunctions', serializeFunctions, 0)))) {
                                        return J$.X1(5857, J$.Rt(5849, J$.B(1434, '+', J$.B(1426, '+', J$.B(1418, '+', J$.B(1410, '+', J$.X1(7769, J$.C(624, J$.B(1394, '!=', J$.R(5721, 'name', name, 0), J$.T(5729, null, 25, false), 0))) ? J$.B(1402, '+', J$.M(5761, J$.R(5737, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.R(5745, 'name', name, 0), J$.T(5753, 'utf8', 21, false)), J$.T(5769, 1, 22, false), 0) : J$.T(5777, 0, 22, false), J$.T(5785, 1, 22, false), 0), J$.T(5793, 4, 22, false), 0), J$.M(5833, J$.R(5801, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.M(5817, J$.R(5809, 'value', value, 0), 'toString', 0)(), J$.T(5825, 'utf8', 21, false)), 0), J$.T(5841, 1, 22, false), 0)));
                                    }
                                }
                            }
                            return J$.X1(5889, J$.Rt(5881, J$.T(5873, 0, 22, false)));
                        } catch (J$e) {
                            J$.Ex(7857, J$e);
                        } finally {
                            if (J$.Fr(7865))
                                continue jalangiLabel1699;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(7161, '__secret__S$', __secret__S$, 0);
            J$.N(7169, '__secret__traits__', __secret__traits__, 0);
            J$.N(7177, 'writeIEEE754', writeIEEE754, 0);
            J$.N(7185, 'readIEEE754', readIEEE754, 0);
            J$.N(7193, 'Long', Long, 0);
            J$.N(7201, 'Double', Double, 0);
            J$.N(7209, 'Timestamp', Timestamp, 0);
            J$.N(7217, 'ObjectID', ObjectID, 0);
            J$.N(7225, 'Symbol', Symbol, 0);
            J$.N(7233, 'BSONRegExp', BSONRegExp, 0);
            J$.N(7241, 'Code', Code, 0);
            J$.N(7249, 'MinKey', MinKey, 0);
            J$.N(7257, 'MaxKey', MaxKey, 0);
            J$.N(7265, 'DBRef', DBRef, 0);
            J$.N(7273, 'Binary', Binary, 0);
            J$.N(7281, 'isDate', isDate, 0);
            J$.N(7289, 'calculateObjectSize', calculateObjectSize, 0);
            calculateElement = J$.N(7305, 'calculateElement', J$.T(7297, calculateElement, 12, false, 5897), 0);
            J$.N(7313, 'BSON', BSON, 0);
            J$.N(7321, 'functionCache', functionCache, 0);
            J$.N(7329, 'JS_INT_MAX_LONG', JS_INT_MAX_LONG, 0);
            J$.N(7337, 'JS_INT_MIN_LONG', JS_INT_MIN_LONG, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var writeIEEE754 = J$.X1(521, J$.W(513, 'writeIEEE754', J$.G(121, J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, '../float_parser', 21, false)), 'writeIEEE754', 0), writeIEEE754, 3)), readIEEE754 = J$.X1(537, J$.W(529, 'readIEEE754', J$.G(153, J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, '../float_parser', 21, false)), 'readIEEE754', 0), readIEEE754, 3)), Long = J$.X1(553, J$.W(545, 'Long', J$.G(185, J$.F(177, J$.R(161, 'require', require, 2), 0)(J$.T(169, '../long', 21, false)), 'Long', 0), Long, 3)), Double = J$.X1(569, J$.W(561, 'Double', J$.G(217, J$.F(209, J$.R(193, 'require', require, 2), 0)(J$.T(201, '../double', 21, false)), 'Double', 0), Double, 3)), Timestamp = J$.X1(585, J$.W(577, 'Timestamp', J$.G(249, J$.F(241, J$.R(225, 'require', require, 2), 0)(J$.T(233, '../timestamp', 21, false)), 'Timestamp', 0), Timestamp, 3)), ObjectID = J$.X1(601, J$.W(593, 'ObjectID', J$.G(281, J$.F(273, J$.R(257, 'require', require, 2), 0)(J$.T(265, '../objectid', 21, false)), 'ObjectID', 0), ObjectID, 3)), Symbol = J$.X1(617, J$.W(609, 'Symbol', J$.G(313, J$.F(305, J$.R(289, 'require', require, 2), 0)(J$.T(297, '../symbol', 21, false)), 'Symbol', 0), Symbol, 3)), BSONRegExp = J$.X1(633, J$.W(625, 'BSONRegExp', J$.G(345, J$.F(337, J$.R(321, 'require', require, 2), 0)(J$.T(329, '../regexp', 21, false)), 'BSONRegExp', 0), BSONRegExp, 3)), Code = J$.X1(649, J$.W(641, 'Code', J$.G(377, J$.F(369, J$.R(353, 'require', require, 2), 0)(J$.T(361, '../code', 21, false)), 'Code', 0), Code, 3)), MinKey = J$.X1(665, J$.W(657, 'MinKey', J$.G(409, J$.F(401, J$.R(385, 'require', require, 2), 0)(J$.T(393, '../min_key', 21, false)), 'MinKey', 0), MinKey, 3)), MaxKey = J$.X1(681, J$.W(673, 'MaxKey', J$.G(441, J$.F(433, J$.R(417, 'require', require, 2), 0)(J$.T(425, '../max_key', 21, false)), 'MaxKey', 0), MaxKey, 3)), DBRef = J$.X1(697, J$.W(689, 'DBRef', J$.G(473, J$.F(465, J$.R(449, 'require', require, 2), 0)(J$.T(457, '../db_ref', 21, false)), 'DBRef', 0), DBRef, 3)), Binary = J$.X1(713, J$.W(705, 'Binary', J$.G(505, J$.F(497, J$.R(481, 'require', require, 2), 0)(J$.T(489, '../binary', 21, false)), 'Binary', 0), Binary, 3));
            var isDate = J$.X1(849, J$.W(841, 'isDate', J$.T(833, function isDate(d) {
                jalangiLabel1697:
                    while (true) {
                        try {
                            J$.Fe(801, arguments.callee, this, arguments);
                            arguments = J$.N(809, 'arguments', arguments, 4);
                            isDate = J$.N(817, 'isDate', isDate, 0);
                            d = J$.N(825, 'd', d, 4);
                            return J$.X1(793, J$.Rt(785, J$.C(8, J$.B(18, '===', J$.U(10, 'typeof', J$.R(721, 'd', d, 0)), J$.T(729, 'object', 21, false), 0)) ? J$.B(26, '===', J$.M(769, J$.G(753, J$.G(745, J$.R(737, 'Object', Object, 2), 'prototype', 0), 'toString', 0), 'call', 0)(J$.R(761, 'd', d, 0)), J$.T(777, '[object Date]', 21, false), 0) : J$._()));
                        } catch (J$e) {
                            J$.Ex(7345, J$e);
                        } finally {
                            if (J$.Fr(7353))
                                continue jalangiLabel1697;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 801), isDate, 3));
            var calculateObjectSize = J$.X1(1385, J$.W(1377, 'calculateObjectSize', J$.T(1369, function calculateObjectSize(object, serializeFunctions, ignoreUndefined) {
                jalangiLabel1698:
                    while (true) {
                        try {
                            J$.Fe(1297, arguments.callee, this, arguments);
                            arguments = J$.N(1305, 'arguments', arguments, 4);
                            calculateObjectSize = J$.N(1313, 'calculateObjectSize', calculateObjectSize, 0);
                            object = J$.N(1321, 'object', object, 4);
                            serializeFunctions = J$.N(1329, 'serializeFunctions', serializeFunctions, 4);
                            ignoreUndefined = J$.N(1337, 'ignoreUndefined', ignoreUndefined, 4);
                            J$.N(1345, 'totalLength', totalLength, 0);
                            J$.N(1353, 'i', i, 0);
                            J$.N(1361, 'key', key, 0);
                            var totalLength = J$.X1(881, J$.W(873, 'totalLength', J$.B(34, '+', J$.T(857, 4, 22, false), J$.T(865, 1, 22, false), 0), totalLength, 1));
                            if (J$.X1(7385, J$.C(32, J$.M(905, J$.R(889, 'Array', Array, 2), 'isArray', 0)(J$.R(897, 'object', object, 0))))) {
                                for (var i = J$.X1(929, J$.W(921, 'i', J$.T(913, 0, 22, false), i, 1)); J$.X1(7361, J$.C(16, J$.B(42, '<', J$.R(937, 'i', i, 0), J$.G(953, J$.R(945, 'object', object, 0), 'length', 0), 0))); J$.X1(7369, J$.B(66, '-', i = J$.W(977, 'i', J$.B(58, '+', J$.U(50, '+', J$.R(969, 'i', i, 0)), J$.T(961, 1, 22, false), 0), i, 0), J$.T(985, 1, 22, false), 0))) {
                                    J$.X1(1089, totalLength = J$.W(1081, 'totalLength', J$.B(74, '+', J$.R(1073, 'totalLength', totalLength, 0), J$.F(1065, J$.R(993, 'calculateElement', calculateElement, 1), 0)(J$.M(1009, J$.R(1001, 'i', i, 0), 'toString', 0)(), J$.G(1033, J$.R(1017, 'object', object, 0), J$.R(1025, 'i', i, 0), 4), J$.R(1041, 'serializeFunctions', serializeFunctions, 0), J$.T(1049, true, 23, false), J$.R(1057, 'ignoreUndefined', ignoreUndefined, 0)), 0), totalLength, 0));
                                }
                            } else {
                                if (J$.X1(7377, J$.C(24, J$.G(1105, J$.R(1097, 'object', object, 0), 'toBSON', 0)))) {
                                    J$.X1(1137, object = J$.W(1129, 'object', J$.M(1121, J$.R(1113, 'object', object, 0), 'toBSON', 0)(), object, 0));
                                }
                                for (J$._tm_p in J$.H(1249, J$.R(1145, 'object', object, 0))) {
                                    var key = J$.X1(1265, J$.W(1257, 'key', J$._tm_p, key, 1));
                                    {
                                        {
                                            J$.X1(1241, totalLength = J$.W(1233, 'totalLength', J$.B(82, '+', J$.R(1225, 'totalLength', totalLength, 0), J$.F(1217, J$.R(1153, 'calculateElement', calculateElement, 1), 0)(J$.R(1161, 'key', key, 0), J$.G(1185, J$.R(1169, 'object', object, 0), J$.R(1177, 'key', key, 0), 4), J$.R(1193, 'serializeFunctions', serializeFunctions, 0), J$.T(1201, false, 23, false), J$.R(1209, 'ignoreUndefined', ignoreUndefined, 0)), 0), totalLength, 0));
                                        }
                                    }
                                }
                            }
                            return J$.X1(1289, J$.Rt(1281, J$.R(1273, 'totalLength', totalLength, 0)));
                        } catch (J$e) {
                            J$.Ex(7393, J$e);
                        } finally {
                            if (J$.Fr(7401))
                                continue jalangiLabel1698;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1297), calculateObjectSize, 3));
            var BSON = J$.X1(5977, J$.W(5969, 'BSON', J$.T(5961, {}, 11, false), BSON, 3));
            var functionCache = J$.X1(6017, J$.W(6009, 'functionCache', J$.P(6001, J$.R(5985, 'BSON', BSON, 1), 'functionCache', J$.T(5993, {}, 11, false), 0), functionCache, 3));
            J$.X1(6049, J$.P(6041, J$.R(6025, 'BSON', BSON, 1), 'BSON_DATA_NUMBER', J$.T(6033, 1, 22, false), 0));
            J$.X1(6081, J$.P(6073, J$.R(6057, 'BSON', BSON, 1), 'BSON_DATA_STRING', J$.T(6065, 2, 22, false), 0));
            J$.X1(6113, J$.P(6105, J$.R(6089, 'BSON', BSON, 1), 'BSON_DATA_OBJECT', J$.T(6097, 3, 22, false), 0));
            J$.X1(6145, J$.P(6137, J$.R(6121, 'BSON', BSON, 1), 'BSON_DATA_ARRAY', J$.T(6129, 4, 22, false), 0));
            J$.X1(6177, J$.P(6169, J$.R(6153, 'BSON', BSON, 1), 'BSON_DATA_BINARY', J$.T(6161, 5, 22, false), 0));
            J$.X1(6209, J$.P(6201, J$.R(6185, 'BSON', BSON, 1), 'BSON_DATA_OID', J$.T(6193, 7, 22, false), 0));
            J$.X1(6241, J$.P(6233, J$.R(6217, 'BSON', BSON, 1), 'BSON_DATA_BOOLEAN', J$.T(6225, 8, 22, false), 0));
            J$.X1(6273, J$.P(6265, J$.R(6249, 'BSON', BSON, 1), 'BSON_DATA_DATE', J$.T(6257, 9, 22, false), 0));
            J$.X1(6305, J$.P(6297, J$.R(6281, 'BSON', BSON, 1), 'BSON_DATA_NULL', J$.T(6289, 10, 22, false), 0));
            J$.X1(6337, J$.P(6329, J$.R(6313, 'BSON', BSON, 1), 'BSON_DATA_REGEXP', J$.T(6321, 11, 22, false), 0));
            J$.X1(6369, J$.P(6361, J$.R(6345, 'BSON', BSON, 1), 'BSON_DATA_CODE', J$.T(6353, 13, 22, false), 0));
            J$.X1(6401, J$.P(6393, J$.R(6377, 'BSON', BSON, 1), 'BSON_DATA_SYMBOL', J$.T(6385, 14, 22, false), 0));
            J$.X1(6433, J$.P(6425, J$.R(6409, 'BSON', BSON, 1), 'BSON_DATA_CODE_W_SCOPE', J$.T(6417, 15, 22, false), 0));
            J$.X1(6465, J$.P(6457, J$.R(6441, 'BSON', BSON, 1), 'BSON_DATA_INT', J$.T(6449, 16, 22, false), 0));
            J$.X1(6497, J$.P(6489, J$.R(6473, 'BSON', BSON, 1), 'BSON_DATA_TIMESTAMP', J$.T(6481, 17, 22, false), 0));
            J$.X1(6529, J$.P(6521, J$.R(6505, 'BSON', BSON, 1), 'BSON_DATA_LONG', J$.T(6513, 18, 22, false), 0));
            J$.X1(6561, J$.P(6553, J$.R(6537, 'BSON', BSON, 1), 'BSON_DATA_MIN_KEY', J$.T(6545, 255, 22, false), 0));
            J$.X1(6593, J$.P(6585, J$.R(6569, 'BSON', BSON, 1), 'BSON_DATA_MAX_KEY', J$.T(6577, 127, 22, false), 0));
            J$.X1(6625, J$.P(6617, J$.R(6601, 'BSON', BSON, 1), 'BSON_BINARY_SUBTYPE_DEFAULT', J$.T(6609, 0, 22, false), 0));
            J$.X1(6657, J$.P(6649, J$.R(6633, 'BSON', BSON, 1), 'BSON_BINARY_SUBTYPE_FUNCTION', J$.T(6641, 1, 22, false), 0));
            J$.X1(6689, J$.P(6681, J$.R(6665, 'BSON', BSON, 1), 'BSON_BINARY_SUBTYPE_BYTE_ARRAY', J$.T(6673, 2, 22, false), 0));
            J$.X1(6721, J$.P(6713, J$.R(6697, 'BSON', BSON, 1), 'BSON_BINARY_SUBTYPE_UUID', J$.T(6705, 3, 22, false), 0));
            J$.X1(6753, J$.P(6745, J$.R(6729, 'BSON', BSON, 1), 'BSON_BINARY_SUBTYPE_MD5', J$.T(6737, 4, 22, false), 0));
            J$.X1(6785, J$.P(6777, J$.R(6761, 'BSON', BSON, 1), 'BSON_BINARY_SUBTYPE_USER_DEFINED', J$.T(6769, 128, 22, false), 0));
            J$.X1(6817, J$.P(6809, J$.R(6793, 'BSON', BSON, 1), 'BSON_INT32_MAX', J$.T(6801, 2147483647, 22, false), 0));
            J$.X1(6849, J$.P(6841, J$.R(6825, 'BSON', BSON, 1), 'BSON_INT32_MIN', J$.U(1442, '-', J$.T(6833, 2147483648, 22, false)), 0));
            J$.X1(6913, J$.P(6905, J$.R(6857, 'BSON', BSON, 1), 'BSON_INT64_MAX', J$.B(1450, '-', J$.M(6889, J$.R(6865, 'Math', Math, 2), 'pow', 0)(J$.T(6873, 2, 22, false), J$.T(6881, 63, 22, false)), J$.T(6897, 1, 22, false), 0), 0));
            J$.X1(6969, J$.P(6961, J$.R(6921, 'BSON', BSON, 1), 'BSON_INT64_MIN', J$.U(1458, '-', J$.M(6953, J$.R(6929, 'Math', Math, 2), 'pow', 0)(J$.T(6937, 2, 22, false), J$.T(6945, 63, 22, false))), 0));
            J$.X1(7001, J$.P(6993, J$.R(6977, 'BSON', BSON, 1), 'JS_INT_MAX', J$.T(6985, 9007199254740992, 22, false), 0));
            J$.X1(7033, J$.P(7025, J$.R(7009, 'BSON', BSON, 1), 'JS_INT_MIN', J$.U(1466, '-', J$.T(7017, 9007199254740992, 22, false)), 0));
            var JS_INT_MAX_LONG = J$.X1(7073, J$.W(7065, 'JS_INT_MAX_LONG', J$.M(7057, J$.R(7041, 'Long', Long, 1), 'fromNumber', 0)(J$.T(7049, 9007199254740992, 22, false)), JS_INT_MAX_LONG, 3));
            var JS_INT_MIN_LONG = J$.X1(7113, J$.W(7105, 'JS_INT_MIN_LONG', J$.M(7097, J$.R(7081, 'Long', Long, 1), 'fromNumber', 0)(J$.U(1474, '-', J$.T(7089, 9007199254740992, 22, false))), JS_INT_MIN_LONG, 3));
            J$.X1(7145, J$.P(7137, J$.R(7121, 'module', module, 2), 'exports', J$.R(7129, 'calculateObjectSize', calculateObjectSize, 1), 0));
        } catch (J$e) {
            J$.Ex(7873, J$e);
        } finally {
            if (J$.Sr(7881)) {
                J$.L();
                continue jalangiLabel1700;
            } else {
                J$.L();
                break jalangiLabel1700;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
