J$.iids = {"8":[7,9,7,36],"9":[1,20,1,27],"10":[4,27,4,51],"16":[9,9,9,31],"17":[1,28,1,32],"18":[7,11,7,35],"24":[14,9,14,29],"25":[1,20,1,33],"26":[7,9,7,36],"32":[16,16,16,46],"33":[1,20,1,33],"34":[9,9,9,31],"40":[16,16,16,65],"41":[1,20,1,33],"42":[14,9,14,15],"48":[18,16,18,51],"49":[2,26,2,38],"50":[14,19,14,29],"56":[20,16,20,46],"57":[2,26,2,45],"58":[16,25,16,34],"64":[20,16,20,46],"65":[2,26,2,45],"66":[16,25,16,46],"72":[18,16,18,51],"73":[2,26,2,45],"74":[16,50,16,65],"80":[16,16,16,65],"81":[3,20,3,27],"82":[18,16,18,26],"88":[14,9,14,29],"89":[3,28,3,45],"90":[18,30,18,39],"96":[23,9,23,32],"97":[3,20,3,46],"98":[18,30,18,51],"104":[29,20,29,27],"105":[3,20,3,59],"106":[20,16,20,26],"112":[28,17,28,24],"113":[3,20,3,59],"114":[20,30,20,46],"120":[32,9,32,45],"121":[3,20,3,59],"122":[28,17,28,24],"128":[32,9,32,45],"129":[4,18,4,26],"130":[28,26,28,29],"136":[35,21,35,39],"137":[4,27,4,31],"144":[38,9,38,32],"145":[4,27,4,40],"146":[28,26,28,29],"147":[4,27,4,38],"152":[49,9,49,32],"153":[4,43,4,51],"154":[29,20,29,27],"160":[54,45,54,75],"161":[4,53,4,55],"162":[29,19,29,56],"168":[67,29,67,79],"169":[4,18,4,56],"170":[35,21,35,39],"176":[67,9,67,80],"177":[4,18,4,56],"178":[35,41,35,44],"184":[69,16,69,71],"185":[4,18,4,56],"192":[69,16,69,71],"193":[5,29,5,35],"194":[35,41,35,44],"200":[67,9,67,80],"201":[5,36,5,55],"202":[36,22,36,53],"208":[90,45,90,88],"209":[5,25,5,56],"210":[43,30,43,48],"216":[90,9,90,88],"217":[5,25,5,56],"218":[43,29,43,60],"224":[90,9,90,88],"225":[5,25,5,56],"226":[49,21,49,32],"232":[93,9,93,21],"233":[7,11,7,15],"234":[49,9,49,32],"240":[97,25,97,36],"241":[7,27,7,35],"242":[50,25,50,42],"248":[105,9,105,19],"249":[8,20,8,28],"250":[54,45,54,59],"256":[107,9,107,30],"257":[8,29,8,31],"258":[54,45,54,75],"264":[110,35,110,80],"265":[8,16,8,32],"266":[54,89,54,111],"272":[110,16,110,80],"273":[8,16,8,32],"274":[54,44,54,135],"280":[109,9,109,30],"281":[8,9,8,33],"282":[56,12,56,38],"289":[9,9,9,11],"290":[56,12,56,50],"297":[9,23,9,31],"298":[56,12,56,64],"305":[10,16,10,18],"306":[67,9,67,24],"313":[10,16,10,18],"314":[67,29,67,56],"321":[10,9,10,19],"322":[69,16,69,30],"329":[11,5,11,9],"330":[69,16,69,42],"337":[11,22,11,32],"338":[74,12,74,26],"345":[11,5,11,32],"346":[78,23,78,105],"353":[11,5,11,33],"354":[81,27,81,51],"361":[12,16,12,20],"362":[86,14,86,102],"369":[12,16,12,20],"370":[90,9,90,25],"377":[12,16,12,20],"378":[90,9,90,41],"385":[13,17,13,25],"386":[90,45,90,62],"393":[13,34,13,36],"394":[90,66,90,88],"401":[13,17,13,37],"402":[93,15,93,21],"403":[13,17,13,33],"409":[13,17,13,37],"410":[93,9,93,21],"417":[13,17,13,37],"418":[97,25,97,36],"425":[14,10,14,15],"426":[97,47,97,48],"433":[14,19,14,21],"434":[100,19,100,48],"441":[14,25,14,29],"442":[105,9,105,19],"449":[15,19,15,24],"450":[107,9,107,18],"457":[15,25,15,114],"458":[107,9,107,30],"465":[15,15,15,115],"466":[109,9,109,18],"473":[15,15,15,115],"474":[109,9,109,30],"481":[15,9,15,116],"482":[110,16,110,31],"489":[16,16,16,21],"490":[110,35,110,50],"497":[16,32,16,34],"498":[121,19,121,44],"505":[16,38,16,46],"513":[16,50,16,52],"521":[16,50,16,59],"529":[16,63,16,65],"537":[17,16,17,24],"545":[17,45,17,47],"553":[17,16,17,48],"555":[17,16,17,44],"561":[17,16,17,48],"569":[17,9,17,49],"577":[18,16,18,18],"585":[18,22,18,26],"593":[18,37,18,39],"601":[18,43,18,51],"609":[19,9,19,13],"617":[19,19,19,23],"625":[19,33,19,35],"633":[19,19,19,36],"635":[19,19,19,32],"641":[19,9,19,36],"649":[19,9,19,37],"657":[20,16,20,18],"665":[20,22,20,26],"673":[20,30,20,32],"681":[20,30,20,39],"689":[20,44,20,46],"697":[21,9,21,13],"705":[21,19,21,21],"713":[21,9,21,21],"721":[21,9,21,22],"729":[23,9,23,17],"737":[23,9,23,32],"745":[24,9,24,13],"753":[24,21,24,25],"761":[24,21,24,39],"763":[24,21,24,37],"769":[24,9,24,39],"777":[24,9,24,40],"785":[6,16,25,2],"793":[6,16,25,2],"801":[6,16,25,2],"809":[6,16,25,2],"817":[6,16,25,2],"825":[6,16,25,2],"833":[6,16,25,2],"841":[6,16,25,2],"849":[6,16,25,2],"857":[26,16,26,24],"865":[26,16,26,24],"873":[26,16,26,24],"881":[27,16,27,18],"889":[27,16,27,18],"897":[27,16,27,18],"905":[28,14,28,15],"913":[28,14,28,15],"921":[28,14,28,15],"929":[28,17,28,18],"937":[28,21,28,24],"953":[28,26,28,27],"961":[28,26,28,29],"977":[29,5,29,13],"985":[29,14,29,15],"993":[29,20,29,21],"1001":[29,25,29,27],"1009":[29,30,29,33],"1017":[29,36,29,38],"1025":[29,42,29,43],"1033":[29,53,29,55],"1041":[29,42,29,56],"1043":[29,42,29,52],"1049":[29,5,29,56],"1057":[29,5,29,57],"1065":[31,1,31,9],"1073":[31,1,31,19],"1081":[32,9,32,17],"1089":[32,9,32,32],"1097":[32,36,32,40],"1105":[32,36,32,45],"1113":[33,16,33,20],"1121":[33,16,33,25],"1129":[33,16,33,25],"1137":[33,9,33,26],"1145":[34,21,34,23],"1153":[34,21,34,23],"1161":[34,21,34,23],"1169":[35,18,35,19],"1177":[35,18,35,19],"1185":[35,18,35,19],"1193":[35,21,35,22],"1201":[35,25,35,29],"1209":[35,25,35,32],"1217":[35,25,35,39],"1233":[35,41,35,42],"1241":[35,41,35,44],"1257":[36,22,36,30],"1265":[36,31,36,35],"1273":[36,31,36,38],"1281":[36,50,36,51],"1289":[36,31,36,52],"1291":[36,31,36,49],"1297":[36,22,36,53],"1305":[36,9,36,18],"1313":[36,9,36,53],"1321":[36,9,36,54],"1329":[38,9,38,17],"1337":[38,9,38,32],"1345":[39,9,39,13],"1353":[39,21,39,30],"1361":[39,9,39,30],"1369":[39,9,39,31],"1377":[40,12,40,21],"1385":[40,12,40,21],"1393":[40,5,40,22],"1401":[31,34,41,2],"1409":[31,34,41,2],"1417":[31,34,41,2],"1425":[31,34,41,2],"1433":[31,34,41,2],"1441":[31,1,41,2],"1449":[31,1,41,3],"1457":[42,1,42,9],"1465":[42,1,42,19],"1473":[43,12,43,20],"1481":[43,30,43,38],"1489":[43,30,43,44],"1497":[43,47,43,48],"1505":[43,52,43,60],"1513":[43,12,43,60],"1521":[43,12,43,60],"1529":[43,5,43,61],"1537":[42,30,44,2],"1545":[42,30,44,2],"1553":[42,30,44,2],"1561":[42,1,44,2],"1569":[42,1,44,3],"1577":[45,1,45,9],"1585":[45,1,45,19],"1593":[46,12,46,16],"1601":[46,12,46,26],"1603":[46,12,46,24],"1609":[46,12,46,26],"1617":[46,5,46,27],"1625":[45,29,47,2],"1633":[45,29,47,2],"1641":[45,29,47,2],"1649":[45,1,47,2],"1657":[45,1,47,3],"1665":[48,1,48,9],"1673":[48,1,48,19],"1681":[49,9,49,17],"1689":[49,28,49,32],"1697":[50,16,50,24],"1705":[50,25,50,29],"1713":[50,25,50,35],"1715":[50,25,50,33],"1721":[50,38,50,42],"1729":[50,44,50,46],"1737":[50,16,50,47],"1745":[50,16,50,47],"1753":[50,9,50,48],"1761":[52,22,52,34],"1769":[52,45,52,49],"1777":[52,51,52,53],"1785":[52,55,52,59],"1793":[52,61,52,65],"1801":[52,22,52,66],"1803":[52,22,52,44],"1809":[52,22,52,66],"1817":[52,22,52,66],"1825":[53,25,53,37],"1833":[53,48,53,58],"1841":[53,60,53,62],"1849":[53,64,53,69],"1857":[53,25,53,70],"1859":[53,25,53,47],"1865":[53,25,53,70],"1873":[53,25,53,70],"1881":[54,21,54,33],"1889":[54,52,54,59],"1897":[54,64,54,75],"1905":[54,78,54,82],"1913":[54,89,54,93],"1921":[54,89,54,102],"1923":[54,89,54,100],"1929":[54,105,54,111],"1937":[54,78,54,112],"1939":[54,78,54,88],"1945":[54,115,54,122],"1953":[54,115,54,126],"1961":[54,130,54,135],"1969":[54,21,54,136],"1971":[54,21,54,43],"1977":[54,21,54,136],"1985":[54,21,54,136],"1993":[55,23,55,35],"2001":[55,46,55,50],"2009":[55,46,55,60],"2011":[55,46,55,58],"2017":[55,62,55,64],"2025":[55,66,55,71],"2033":[55,73,55,77],"2041":[55,23,55,78],"2043":[55,23,55,45],"2049":[55,23,55,78],"2057":[55,23,55,78],"2065":[56,12,56,22],"2073":[56,25,56,38],"2081":[56,41,56,50],"2089":[56,53,56,64],"2097":[56,12,56,64],"2105":[56,5,56,65],"2113":[48,31,57,2],"2121":[48,31,57,2],"2129":[48,31,57,2],"2137":[48,31,57,2],"2145":[48,31,57,2],"2153":[48,31,57,2],"2161":[48,31,57,2],"2169":[48,31,57,2],"2177":[48,1,57,2],"2185":[48,1,57,3],"2193":[58,1,58,9],"2201":[58,1,58,19],"2209":[59,12,59,16],"2217":[59,12,59,30],"2219":[59,12,59,28],"2225":[59,12,59,30],"2233":[59,5,59,31],"2241":[58,31,60,2],"2249":[58,31,60,2],"2257":[58,31,60,2],"2265":[58,1,60,2],"2273":[58,1,60,3],"2281":[61,1,61,9],"2289":[61,1,61,19],"2297":[61,30,61,38],"2305":[61,30,61,48],"2313":[61,30,61,57],"2321":[61,1,61,57],"2329":[61,1,61,58],"2337":[62,1,62,9],"2345":[62,1,62,19],"2353":[63,12,63,16],"2361":[63,12,63,30],"2363":[63,12,63,28],"2369":[63,12,63,30],"2377":[63,5,63,31],"2385":[62,29,64,2],"2393":[62,29,64,2],"2401":[62,29,64,2],"2409":[62,1,64,2],"2417":[62,1,64,3],"2425":[65,1,65,9],"2433":[65,1,65,19],"2441":[67,9,67,16],"2449":[67,20,67,24],"2457":[67,29,67,36],"2465":[67,48,67,56],"2473":[67,60,67,67],"2481":[67,60,67,79],"2489":[68,14,68,21],"2497":[68,14,68,24],"2505":[68,14,68,24],"2513":[68,9,68,25],"2521":[69,23,69,30],"2529":[69,34,69,42],"2537":[69,46,69,54],"2545":[69,63,69,70],"2553":[69,46,69,71],"2555":[69,46,69,62],"2561":[70,14,70,22],"2569":[70,43,70,50],"2577":[70,14,70,51],"2579":[70,14,70,42],"2585":[70,14,70,54],"2593":[70,14,70,54],"2601":[70,9,70,55],"2609":[72,16,72,21],"2617":[72,16,72,21],"2625":[72,9,72,22],"2633":[74,12,74,16],"2641":[74,12,74,19],"2649":[74,24,74,26],"2657":[74,12,74,26],"2665":[74,5,74,27],"2673":[65,29,75,2],"2681":[65,29,75,2],"2689":[65,29,75,2],"2697":[65,29,75,2],"2705":[65,29,75,2],"2713":[65,29,75,2],"2721":[65,1,75,2],"2729":[65,1,75,3],"2737":[76,1,76,9],"2745":[76,1,76,19],"2753":[77,25,77,29],"2761":[77,21,77,31],"2769":[77,21,77,31],"2777":[77,21,77,31],"2785":[78,5,78,14],"2793":[78,23,78,27],"2801":[78,34,78,46],"2809":[78,57,78,61],"2817":[78,57,78,64],"2825":[78,75,78,76],"2833":[78,78,78,79],"2841":[78,57,78,80],"2843":[78,57,78,74],"2849":[78,82,78,84],"2857":[78,86,78,90],"2865":[78,92,78,96],"2873":[78,34,78,97],"2875":[78,34,78,56],"2881":[78,23,78,98],"2883":[78,23,78,33],"2889":[78,101,78,105],"2897":[78,5,78,106],"2899":[78,5,78,22],"2905":[78,5,78,107],"2913":[79,12,79,21],"2921":[79,12,79,21],"2929":[79,5,79,22],"2937":[76,35,80,2],"2945":[76,35,80,2],"2953":[76,35,80,2],"2961":[76,35,80,2],"2969":[76,1,80,2],"2977":[76,1,80,3],"2985":[81,1,81,9],"2993":[81,18,81,26],"3001":[81,27,81,31],"3009":[81,27,81,40],"3011":[81,27,81,38],"3017":[81,43,81,51],"3025":[81,53,81,55],"3033":[81,18,81,56],"3041":[81,1,81,56],"3049":[81,1,81,57],"3057":[82,1,82,9],"3065":[83,16,83,24],"3073":[83,12,83,26],"3081":[83,12,83,26],"3089":[83,5,83,27],"3097":[82,21,84,2],"3105":[82,21,84,2],"3113":[82,21,84,2],"3121":[82,21,84,2],"3129":[82,1,84,2],"3137":[82,1,84,3],"3145":[85,1,85,9],"3153":[86,14,86,26],"3161":[86,37,86,41],"3169":[86,43,86,45],"3177":[86,47,86,51],"3185":[86,53,86,57],"3193":[86,14,86,58],"3195":[86,14,86,36],"3201":[86,61,86,73],"3209":[86,84,86,85],"3217":[86,87,86,89],"3225":[86,91,86,95],"3233":[86,97,86,101],"3241":[86,61,86,102],"3243":[86,61,86,83],"3249":[86,14,86,102],"3257":[86,14,86,102],"3265":[87,16,87,24],"3273":[87,25,87,27],"3281":[87,12,87,28],"3289":[87,12,87,28],"3297":[87,5,87,29],"3305":[85,27,88,2],"3313":[85,27,88,2],"3321":[85,27,88,2],"3329":[85,27,88,2],"3337":[85,27,88,2],"3345":[85,27,88,2],"3353":[85,1,88,2],"3361":[85,1,88,3],"3369":[89,1,89,9],"3377":[90,16,90,25],"3385":[90,30,90,41],"3393":[90,45,90,54],"3401":[90,58,90,62],"3409":[90,66,90,75],"3417":[90,66,90,82],"3425":[90,86,90,88],"3433":[91,19,91,24],"3441":[91,25,91,114],"3449":[91,15,91,115],"3457":[91,15,91,115],"3465":[91,9,91,116],"3473":[92,15,92,24],"3481":[92,15,92,31],"3489":[92,15,92,31],"3497":[92,15,92,31],"3505":[93,9,93,12],"3513":[93,15,93,17],"3521":[93,20,93,21],"3529":[94,19,94,24],"3537":[94,25,94,60],"3545":[94,15,94,61],"3553":[94,15,94,61],"3561":[94,9,94,62],"3569":[96,18,96,20],"3577":[96,18,96,20],"3585":[96,18,96,20],"3593":[97,22,97,23],"3601":[97,22,97,23],"3609":[97,22,97,23],"3617":[97,25,97,30],"3625":[97,33,97,36],"3633":[97,47,97,48],"3641":[97,38,97,43],"3649":[97,38,97,48],"3657":[98,18,98,27],"3665":[98,35,98,40],"3673":[98,42,98,43],"3681":[98,18,98,44],"3683":[98,18,98,34],"3689":[98,18,98,44],"3697":[98,9,98,45],"3705":[99,18,99,26],"3713":[99,27,99,33],"3721":[99,35,99,37],"3729":[99,18,99,38],"3737":[99,18,99,38],"3745":[99,9,99,39],"3753":[100,19,100,31],"3761":[100,41,100,47],"3769":[100,19,100,48],"3771":[100,19,100,40],"3777":[100,9,100,15],"3785":[100,9,100,48],"3793":[100,9,100,49],"3801":[102,16,102,24],"3809":[102,25,102,31],"3817":[102,33,102,42],"3825":[102,12,102,43],"3833":[102,12,102,43],"3841":[102,5,102,44],"3849":[89,32,103,2],"3857":[89,32,103,2],"3865":[89,32,103,2],"3873":[89,32,103,2],"3881":[89,32,103,2],"3889":[89,32,103,2],"3897":[89,32,103,2],"3905":[89,32,103,2],"3913":[89,32,103,2],"3921":[89,32,103,2],"3929":[89,1,103,2],"3937":[89,1,103,3],"3945":[104,1,104,9],"3953":[105,9,105,11],"3961":[105,15,105,19],"3969":[106,16,106,21],"3977":[106,16,106,21],"3985":[106,9,106,22],"3993":[107,16,107,18],"4001":[107,22,107,30],"4009":[108,16,108,20],"4017":[108,16,108,20],"4025":[108,9,108,21],"4033":[109,16,109,18],"4041":[109,22,109,30],"4049":[110,16,110,18],"4057":[110,16,110,25],"4065":[110,29,110,31],"4073":[110,35,110,37],"4081":[110,35,110,44],"4089":[110,48,110,50],"4097":[110,54,110,71],"4105":[110,77,110,79],"4113":[110,54,110,80],"4115":[110,54,110,76],"4121":[110,16,110,80],"4129":[110,9,110,81],"4137":[112,12,112,17],"4145":[112,12,112,17],"4153":[112,5,112,18],"4161":[104,20,113,2],"4169":[104,20,113,2],"4177":[104,20,113,2],"4185":[104,20,113,2],"4193":[104,20,113,2],"4201":[104,1,113,2],"4209":[104,1,113,3],"4217":[114,1,114,7],"4225":[114,23,114,31],"4233":[114,23,114,41],"4241":[114,43,114,59],"4249":[115,17,115,21],"4257":[117,16,117,20],"4265":[117,27,117,39],"4273":[117,50,117,54],"4281":[117,50,117,57],"4289":[117,68,117,69],"4297":[117,71,117,72],"4305":[117,50,117,73],"4307":[117,50,117,67],"4313":[117,75,117,77],"4321":[117,79,117,83],"4329":[117,85,117,89],"4337":[117,27,117,90],"4339":[117,27,117,49],"4345":[117,16,117,91],"4347":[117,16,117,26],"4353":[117,16,117,91],"4361":[117,9,117,92],"4369":[116,10,118,6],"4377":[116,10,118,6],"4385":[116,10,118,6],"4393":[120,21,120,33],"4401":[120,44,120,49],"4409":[120,51,120,53],"4417":[120,55,120,59],"4425":[120,61,120,65],"4433":[120,21,120,66],"4435":[120,21,120,43],"4441":[120,21,120,66],"4449":[120,21,120,66],"4457":[121,9,121,13],"4465":[121,19,121,24],"4473":[121,27,121,31],"4481":[121,27,121,34],"4489":[121,42,121,43],"4497":[121,27,121,44],"4499":[121,27,121,41],"4505":[121,9,121,44],"4513":[121,9,121,45],"4521":[122,9,122,13],"4529":[122,9,122,27],"4531":[122,9,122,25],"4537":[122,9,122,28],"4545":[119,10,123,6],"4553":[119,10,123,6],"4561":[119,10,123,6],"4569":[119,10,123,6],"4577":[114,61,124,2],"4585":[114,1,124,3],"4587":[114,1,114,22],"4593":[114,1,124,4],"4601":[125,1,125,7],"4609":[125,18,125,26],"4617":[125,1,125,26],"4625":[125,1,125,27],"4633":[126,1,126,7],"4641":[126,1,126,15],"4649":[126,27,126,35],"4657":[126,1,126,35],"4665":[126,1,126,36],"4673":[127,1,127,7],"4681":[127,1,127,15],"4689":[127,27,127,35],"4697":[127,1,127,35],"4705":[127,1,127,36],"4713":[1,1,127,36],"4721":[1,1,127,36],"4729":[1,1,127,36],"4737":[1,1,127,36],"4745":[1,1,127,36],"4753":[1,1,127,36],"4761":[1,1,127,36],"4769":[1,1,127,36],"4777":[1,1,127,36],"4785":[1,1,127,36],"4793":[7,5,8,33],"4801":[9,5,10,19],"4809":[20,12,22,6],"4817":[18,12,22,6],"4825":[16,12,22,6],"4833":[14,5,22,6],"4841":[23,5,24,40],"4849":[6,16,25,2],"4857":[6,16,25,2],"4865":[29,20,29,38],"4873":[28,1,30,2],"4881":[28,1,30,2],"4889":[32,5,33,26],"4897":[35,5,37,6],"4905":[35,5,37,6],"4913":[38,5,39,31],"4921":[31,34,41,2],"4929":[31,34,41,2],"4937":[42,30,44,2],"4945":[42,30,44,2],"4953":[45,29,47,2],"4961":[45,29,47,2],"4969":[49,5,51,6],"4977":[54,45,54,126],"4985":[48,31,57,2],"4993":[48,31,57,2],"5001":[58,31,60,2],"5009":[58,31,60,2],"5017":[62,29,64,2],"5025":[62,29,64,2],"5033":[69,12,73,6],"5041":[67,5,73,6],"5049":[65,29,75,2],"5057":[65,29,75,2],"5065":[76,35,80,2],"5073":[76,35,80,2],"5081":[82,21,84,2],"5089":[82,21,84,2],"5097":[85,27,88,2],"5105":[85,27,88,2],"5113":[90,5,91,116],"5121":[93,5,95,6],"5129":[97,5,101,6],"5137":[97,5,101,6],"5145":[89,32,103,2],"5153":[89,32,103,2],"5161":[105,5,106,22],"5169":[107,5,108,21],"5177":[109,5,111,6],"5185":[104,20,113,2],"5193":[104,20,113,2],"5201":[116,10,118,6],"5209":[116,10,118,6],"5217":[119,10,123,6],"5225":[119,10,123,6],"5233":[1,1,127,36],"5241":[1,1,127,36],"nBranches":70,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/bson/lib/bson/objectid.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/bson/lib/bson/objectid_jalangi_.js","code":"/**\n * Module dependencies.\n * @ignore\n */\nvar BinaryParser = require('./binary_parser').BinaryParser;\n\n/**\n * Machine id.\n *\n * Create a random 3-byte value (i.e. unique for this\n * process). Other drivers use a md5 of the machine id here, but\n * that would mean an asyc call to gethostname, so we don't bother.\n * @ignore\n */\nvar MACHINE_ID = parseInt(Math.random() * 0xFFFFFF, 10);\n\n// Regular expression that checks for hex value\nvar checkForHexRegExp = new RegExp(\"^[0-9a-fA-F]{24}$\");\n\n/**\n* Create a new ObjectID instance\n*\n* @class\n* @param {(string|number)} id Can be a 24 byte hex string, 12 byte binary string or a Number.\n* @property {number} generationTime The generation time of this ObjectId instance\n* @return {ObjectID} instance of ObjectID.\n*/\nvar ObjectID = function ObjectID(id) {\n  if(!(this instanceof ObjectID)) return new ObjectID(id);\n  if((id instanceof ObjectID)) return id;\n\n  this._bsontype = 'ObjectID';\n  var __id = null;\n  var valid = ObjectID.isValid(id);\n\n  // Throw an error if it's not a valid setup\n  if(!valid && id != null){\n    throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");\n  } else if(valid && typeof id == 'string' && id.length == 24) {\n    return ObjectID.createFromHexString(id);\n  } else if(id == null || typeof id == 'number') {\n    // convert to 12 byte binary string\n    this.id = this.generate(id);\n  } else if(id != null && id.length === 12) {\n    // assume 12 byte string\n    this.id = id;\n  }\n\n  if(ObjectID.cacheHexString) this.__id = this.toHexString();\n};\n\n// Allow usage of ObjectId as well as ObjectID\nvar ObjectId = ObjectID;\n\n// Precomputed hex table enables speedy hex string conversion\nvar hexTable = [];\nfor (var i = 0; i < 256; i++) {\n  hexTable[i] = (i <= 15 ? '0' : '') + i.toString(16);\n}\n\n/**\n* Return the ObjectID id as a 24 byte hex string representation\n*\n* @method\n* @return {string} return the 24 byte hex string representation.\n*/\nObjectID.prototype.toHexString = function() {\n  if(ObjectID.cacheHexString && this.__id) return this.__id;\n\n  var hexString = '';\n\n  for (var i = 0; i < this.id.length; i++) {\n    hexString += hexTable[this.id.charCodeAt(i)];\n  }\n\n  if(ObjectID.cacheHexString) this.__id = hexString;\n  return hexString;\n};\n\n/**\n* Update the ObjectID index used in generating new ObjectID's on the driver\n*\n* @method\n* @return {number} returns next index value.\n* @ignore\n*/\nObjectID.prototype.get_inc = function() {\n  return ObjectID.index = (ObjectID.index + 1) % 0xFFFFFF;\n};\n\n/**\n* Update the ObjectID index used in generating new ObjectID's on the driver\n*\n* @method\n* @return {number} returns next index value.\n* @ignore\n*/\nObjectID.prototype.getInc = function() {\n  return this.get_inc();\n};\n\n/**\n* Generate a 12 byte id string used in ObjectID's\n*\n* @method\n* @param {number} [time] optional parameter allowing to pass in a second based timestamp.\n* @return {string} return the 12 byte id binary string.\n*/\nObjectID.prototype.generate = function(time) {\n  if ('number' != typeof time) {\n    time = parseInt(Date.now()/1000,10);\n  }\n\n  var time4Bytes = BinaryParser.encodeInt(time, 32, true, true);\n  /* for time-based ObjectID the bytes following the time will be zeroed */\n  var machine3Bytes = BinaryParser.encodeInt(MACHINE_ID, 24, false);\n  var pid2Bytes = BinaryParser.fromShort((typeof process === 'undefined' ? Math.floor(Math.random() * 100000) : process.pid) % 0xFFFF);\n  var index3Bytes = BinaryParser.encodeInt(this.get_inc(), 24, false, true);\n\n  return time4Bytes + machine3Bytes + pid2Bytes + index3Bytes;\n};\n\n/**\n* Converts the id into a 24 byte hex string for printing\n*\n* @return {String} return the 24 byte hex string representation.\n* @ignore\n*/\nObjectID.prototype.toString = function() {\n  return this.toHexString();\n};\n\n/**\n* Converts to a string representation of this Id.\n*\n* @return {String} return the 24 byte hex string representation.\n* @ignore\n*/\nObjectID.prototype.inspect = ObjectID.prototype.toString;\n\n/**\n* Converts to its JSON representation.\n*\n* @return {String} return the 24 byte hex string representation.\n* @ignore\n*/\nObjectID.prototype.toJSON = function() {\n  return this.toHexString();\n};\n\n/**\n* Compares the equality of this ObjectID with `otherID`.\n*\n* @method\n* @param {object} otherID ObjectID instance to compare against.\n* @return {boolean} the result of comparing two ObjectID's\n*/\nObjectID.prototype.equals = function equals (otherID) {\n  var id;\n\n  if(otherID != null && (otherID instanceof ObjectID || otherID.toHexString)) {\n    id = otherID.id;\n  } else if(typeof otherID == 'string' && ObjectID.isValid(otherID)) {\n    id = ObjectID.createFromHexString(otherID).id;\n  } else {\n    return false;\n  }\n\n  return this.id === id;\n}\n\n/**\n* Returns the generation date (accurate up to the second) that this ID was generated.\n*\n* @method\n* @return {date} the generation date\n*/\nObjectID.prototype.getTimestamp = function() {\n  var timestamp = new Date();\n  timestamp.setTime(Math.floor(BinaryParser.decodeInt(this.id.substring(0,4), 32, true, true)) * 1000);\n  return timestamp;\n}\n\n/**\n* @ignore\n*/\nObjectID.index = parseInt(Math.random() * 0xFFFFFF, 10);\n\n/**\n* @ignore\n*/\nObjectID.createPk = function createPk () {\n  return new ObjectID();\n};\n\n/**\n* Creates an ObjectID from a second based number, with the rest of the ObjectID zeroed out. Used for comparisons or sorting the ObjectID.\n*\n* @method\n* @param {number} time an integer number representing a number of seconds.\n* @return {ObjectID} return the created ObjectID\n*/\nObjectID.createFromTime = function createFromTime (time) {\n  var id = BinaryParser.encodeInt(time, 32, true, true) +\n           BinaryParser.encodeInt(0, 64, true, true);\n  return new ObjectID(id);\n};\n\n/**\n* Creates an ObjectID from a hex string representation of an ObjectID.\n*\n* @method\n* @param {string} hexString create a ObjectID from a passed in 24 byte hexstring.\n* @return {ObjectID} return the created ObjectID\n*/\nObjectID.createFromHexString = function createFromHexString (hexString) {\n  // Throw an error if it's not a valid setup\n  if(typeof hexString === 'undefined' || hexString != null && hexString.length != 24)\n    throw new Error(\"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\");\n\n  var len = hexString.length;\n\n  if(len > 12*2) {\n    throw new Error('Id cannot be longer than 12 bytes');\n  }\n\n  var result = ''\n    , string\n    , number;\n\n  for (var index = 0; index < len; index += 2) {\n    string = hexString.substr(index, 2);\n    number = parseInt(string, 16);\n    result += BinaryParser.fromByte(number);\n  }\n\n  return new ObjectID(result, hexString);\n};\n\n/**\n* Checks if a value is a valid bson ObjectId\n*\n* @method\n* @return {boolean} return true if the value is a valid bson ObjectId, return false otherwise.\n*/\nObjectID.isValid = function isValid(id) {\n  if(id == null) return false;\n\n  if(typeof id == 'number')\n    return true;\n  if(typeof id == 'string') {\n    return id.length == 12 || (id.length == 24 && checkForHexRegExp.test(id));\n  }\n  return false;\n};\n\n/**\n* @ignore\n*/\nObject.defineProperty(ObjectID.prototype, \"generationTime\", {\n   enumerable: true\n , get: function () {\n     return Math.floor(BinaryParser.decodeInt(this.id.substring(0,4), 32, true, true));\n   }\n , set: function (value) {\n     var value = BinaryParser.encodeInt(value, 32, true, true);\n     this.id = value + this.id.substr(4);\n     // delete this.__id;\n     this.toHexString();\n   }\n});\n\n/**\n * Expose.\n */\nmodule.exports = ObjectID;\nmodule.exports.ObjectID = ObjectID;\nmodule.exports.ObjectId = ObjectID;\n"};
jalangiLabel1599:
    while (true) {
        try {
            J$.Se(4713, '/home/blake/ExpoSE/Targets/node-flarum/node_modules/bson/lib/bson/objectid_jalangi_.js', '/home/blake/ExpoSE/Targets/node-flarum/node_modules/bson/lib/bson/objectid.js');
            J$.N(4721, '__secret__S$', __secret__S$, 0);
            J$.N(4729, '__secret__traits__', __secret__traits__, 0);
            J$.N(4737, 'BinaryParser', BinaryParser, 0);
            J$.N(4745, 'MACHINE_ID', MACHINE_ID, 0);
            J$.N(4753, 'checkForHexRegExp', checkForHexRegExp, 0);
            J$.N(4761, 'ObjectID', ObjectID, 0);
            J$.N(4769, 'ObjectId', ObjectId, 0);
            J$.N(4777, 'hexTable', hexTable, 0);
            J$.N(4785, 'i', i, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var BinaryParser = J$.X1(121, J$.W(113, 'BinaryParser', J$.G(105, J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, './binary_parser', 21, false)), 'BinaryParser', 0), BinaryParser, 3));
            var MACHINE_ID = J$.X1(185, J$.W(177, 'MACHINE_ID', J$.F(169, J$.R(129, 'parseInt', parseInt, 2), 0)(J$.B(10, '*', J$.M(145, J$.R(137, 'Math', Math, 2), 'random', 0)(), J$.T(153, 16777215, 22, false), 0), J$.T(161, 10, 22, false)), MACHINE_ID, 3));
            var checkForHexRegExp = J$.X1(225, J$.W(217, 'checkForHexRegExp', J$.F(209, J$.R(193, 'RegExp', RegExp, 2), 1)(J$.T(201, '^[0-9a-fA-F]{24}$', 21, false)), checkForHexRegExp, 3));
            var ObjectID = J$.X1(849, J$.W(841, 'ObjectID', J$.T(833, function ObjectID(id) {
                jalangiLabel1584:
                    while (true) {
                        try {
                            J$.Fe(785, arguments.callee, this, arguments);
                            arguments = J$.N(793, 'arguments', arguments, 4);
                            ObjectID = J$.N(801, 'ObjectID', ObjectID, 0);
                            id = J$.N(809, 'id', id, 4);
                            J$.N(817, '__id', __id, 0);
                            J$.N(825, 'valid', valid, 0);
                            if (J$.X1(4793, J$.C(8, J$.U(26, '!', J$.B(18, 'instanceof', J$.R(233, 'this', this, 0), J$.R(241, 'ObjectID', ObjectID, 0), 0)))))
                                return J$.X1(281, J$.Rt(273, J$.F(265, J$.R(249, 'ObjectID', ObjectID, 0), 1)(J$.R(257, 'id', id, 0))));
                            if (J$.X1(4801, J$.C(16, J$.B(34, 'instanceof', J$.R(289, 'id', id, 0), J$.R(297, 'ObjectID', ObjectID, 0), 0))))
                                return J$.X1(321, J$.Rt(313, J$.R(305, 'id', id, 0)));
                            J$.X1(353, J$.P(345, J$.R(329, 'this', this, 0), '_bsontype', J$.T(337, 'ObjectID', 21, false), 0));
                            var __id = J$.X1(377, J$.W(369, '__id', J$.T(361, null, 25, false), __id, 1));
                            var valid = J$.X1(417, J$.W(409, 'valid', J$.M(401, J$.R(385, 'ObjectID', ObjectID, 0), 'isValid', 0)(J$.R(393, 'id', id, 0)), valid, 1));
                            if (J$.X1(4833, J$.C(88, J$.C(24, J$.U(42, '!', J$.R(425, 'valid', valid, 0))) ? J$.B(50, '!=', J$.R(433, 'id', id, 0), J$.T(441, null, 25, false), 0) : J$._()))) {
                                throw J$.X1(481, J$.Th(473, J$.F(465, J$.R(449, 'Error', Error, 2), 1)(J$.T(457, 'Argument passed in must be a single String of 12 bytes or a string of 24 hex characters', 21, false))));
                            } else if (J$.X1(4825, J$.C(80, J$.C(40, J$.C(32, J$.R(489, 'valid', valid, 0)) ? J$.B(66, '==', J$.U(58, 'typeof', J$.R(497, 'id', id, 0)), J$.T(505, 'string', 21, false), 0) : J$._()) ? J$.B(74, '==', J$.G(521, J$.R(513, 'id', id, 0), 'length', 0), J$.T(529, 24, 22, false), 0) : J$._()))) {
                                return J$.X1(569, J$.Rt(561, J$.M(553, J$.R(537, 'ObjectID', ObjectID, 0), 'createFromHexString', 0)(J$.R(545, 'id', id, 0))));
                            } else if (J$.X1(4817, J$.C(72, J$.C(48, J$.B(82, '==', J$.R(577, 'id', id, 0), J$.T(585, null, 25, false), 0)) ? J$._() : J$.B(98, '==', J$.U(90, 'typeof', J$.R(593, 'id', id, 0)), J$.T(601, 'number', 21, false), 0)))) {
                                J$.X1(649, J$.P(641, J$.R(609, 'this', this, 0), 'id', J$.M(633, J$.R(617, 'this', this, 0), 'generate', 0)(J$.R(625, 'id', id, 0)), 0));
                            } else if (J$.X1(4809, J$.C(64, J$.C(56, J$.B(106, '!=', J$.R(657, 'id', id, 0), J$.T(665, null, 25, false), 0)) ? J$.B(114, '===', J$.G(681, J$.R(673, 'id', id, 0), 'length', 0), J$.T(689, 12, 22, false), 0) : J$._()))) {
                                J$.X1(721, J$.P(713, J$.R(697, 'this', this, 0), 'id', J$.R(705, 'id', id, 0), 0));
                            }
                            if (J$.X1(4841, J$.C(96, J$.G(737, J$.R(729, 'ObjectID', ObjectID, 0), 'cacheHexString', 0))))
                                J$.X1(777, J$.P(769, J$.R(745, 'this', this, 0), '__id', J$.M(761, J$.R(753, 'this', this, 0), 'toHexString', 0)(), 0));
                        } catch (J$e) {
                            J$.Ex(4849, J$e);
                        } finally {
                            if (J$.Fr(4857))
                                continue jalangiLabel1584;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 785), ObjectID, 3));
            var ObjectId = J$.X1(873, J$.W(865, 'ObjectId', J$.R(857, 'ObjectID', ObjectID, 1), ObjectId, 3));
            var hexTable = J$.X1(897, J$.W(889, 'hexTable', J$.T(881, [], 10, false), hexTable, 3));
            for (var i = J$.X1(921, J$.W(913, 'i', J$.T(905, 0, 22, false), i, 3)); J$.X1(4873, J$.C(112, J$.B(122, '<', J$.R(929, 'i', i, 1), J$.T(937, 256, 22, false), 0))); J$.X1(4881, J$.B(146, '-', i = J$.W(961, 'i', J$.B(138, '+', J$.U(130, '+', J$.R(953, 'i', i, 1)), J$.T(945, 1, 22, false), 0), i, 2), J$.T(969, 1, 22, false), 0))) {
                J$.X1(1057, J$.P(1049, J$.R(977, 'hexTable', hexTable, 1), J$.R(985, 'i', i, 1), J$.B(162, '+', J$.X1(4865, J$.C(104, J$.B(154, '<=', J$.R(993, 'i', i, 1), J$.T(1001, 15, 22, false), 0))) ? J$.T(1009, '0', 21, false) : J$.T(1017, '', 21, false), J$.M(1041, J$.R(1025, 'i', i, 1), 'toString', 0)(J$.T(1033, 16, 22, false)), 0), 2));
            }
            J$.X1(1449, J$.P(1441, J$.G(1073, J$.R(1065, 'ObjectID', ObjectID, 1), 'prototype', 0), 'toHexString', J$.T(1433, function () {
                jalangiLabel1585:
                    while (true) {
                        try {
                            J$.Fe(1401, arguments.callee, this, arguments);
                            arguments = J$.N(1409, 'arguments', arguments, 4);
                            J$.N(1417, 'hexString', hexString, 0);
                            J$.N(1425, 'i', i, 0);
                            if (J$.X1(4889, J$.C(128, J$.C(120, J$.G(1089, J$.R(1081, 'ObjectID', ObjectID, 1), 'cacheHexString', 0)) ? J$.G(1105, J$.R(1097, 'this', this, 0), '__id', 0) : J$._())))
                                return J$.X1(1137, J$.Rt(1129, J$.G(1121, J$.R(1113, 'this', this, 0), '__id', 0)));
                            var hexString = J$.X1(1161, J$.W(1153, 'hexString', J$.T(1145, '', 21, false), hexString, 1));
                            for (var i = J$.X1(1185, J$.W(1177, 'i', J$.T(1169, 0, 22, false), i, 1)); J$.X1(4897, J$.C(136, J$.B(170, '<', J$.R(1193, 'i', i, 0), J$.G(1217, J$.G(1209, J$.R(1201, 'this', this, 0), 'id', 0), 'length', 0), 0))); J$.X1(4905, J$.B(194, '-', i = J$.W(1241, 'i', J$.B(186, '+', J$.U(178, '+', J$.R(1233, 'i', i, 0)), J$.T(1225, 1, 22, false), 0), i, 0), J$.T(1249, 1, 22, false), 0))) {
                                J$.X1(1321, hexString = J$.W(1313, 'hexString', J$.B(202, '+', J$.R(1305, 'hexString', hexString, 0), J$.G(1297, J$.R(1257, 'hexTable', hexTable, 1), J$.M(1289, J$.G(1273, J$.R(1265, 'this', this, 0), 'id', 0), 'charCodeAt', 0)(J$.R(1281, 'i', i, 0)), 4), 0), hexString, 0));
                            }
                            if (J$.X1(4913, J$.C(144, J$.G(1337, J$.R(1329, 'ObjectID', ObjectID, 1), 'cacheHexString', 0))))
                                J$.X1(1369, J$.P(1361, J$.R(1345, 'this', this, 0), '__id', J$.R(1353, 'hexString', hexString, 0), 0));
                            return J$.X1(1393, J$.Rt(1385, J$.R(1377, 'hexString', hexString, 0)));
                        } catch (J$e) {
                            J$.Ex(4921, J$e);
                        } finally {
                            if (J$.Fr(4929))
                                continue jalangiLabel1585;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1401), 0));
            J$.X1(1569, J$.P(1561, J$.G(1465, J$.R(1457, 'ObjectID', ObjectID, 1), 'prototype', 0), 'get_inc', J$.T(1553, function () {
                jalangiLabel1586:
                    while (true) {
                        try {
                            J$.Fe(1537, arguments.callee, this, arguments);
                            arguments = J$.N(1545, 'arguments', arguments, 4);
                            return J$.X1(1529, J$.Rt(1521, J$.P(1513, J$.R(1473, 'ObjectID', ObjectID, 1), 'index', J$.B(218, '%', J$.B(210, '+', J$.G(1489, J$.R(1481, 'ObjectID', ObjectID, 1), 'index', 0), J$.T(1497, 1, 22, false), 0), J$.T(1505, 16777215, 22, false), 0), 0)));
                        } catch (J$e) {
                            J$.Ex(4937, J$e);
                        } finally {
                            if (J$.Fr(4945))
                                continue jalangiLabel1586;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1537), 0));
            J$.X1(1657, J$.P(1649, J$.G(1585, J$.R(1577, 'ObjectID', ObjectID, 1), 'prototype', 0), 'getInc', J$.T(1641, function () {
                jalangiLabel1587:
                    while (true) {
                        try {
                            J$.Fe(1625, arguments.callee, this, arguments);
                            arguments = J$.N(1633, 'arguments', arguments, 4);
                            return J$.X1(1617, J$.Rt(1609, J$.M(1601, J$.R(1593, 'this', this, 0), 'get_inc', 0)()));
                        } catch (J$e) {
                            J$.Ex(4953, J$e);
                        } finally {
                            if (J$.Fr(4961))
                                continue jalangiLabel1587;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1625), 0));
            J$.X1(2185, J$.P(2177, J$.G(1673, J$.R(1665, 'ObjectID', ObjectID, 1), 'prototype', 0), 'generate', J$.T(2169, function (time) {
                jalangiLabel1588:
                    while (true) {
                        try {
                            J$.Fe(2113, arguments.callee, this, arguments);
                            arguments = J$.N(2121, 'arguments', arguments, 4);
                            time = J$.N(2129, 'time', time, 4);
                            J$.N(2137, 'time4Bytes', time4Bytes, 0);
                            J$.N(2145, 'machine3Bytes', machine3Bytes, 0);
                            J$.N(2153, 'pid2Bytes', pid2Bytes, 0);
                            J$.N(2161, 'index3Bytes', index3Bytes, 0);
                            if (J$.X1(4969, J$.C(152, J$.B(234, '!=', J$.T(1681, 'number', 21, false), J$.U(226, 'typeof', J$.R(1689, 'time', time, 0)), 0)))) {
                                J$.X1(1753, time = J$.W(1745, 'time', J$.F(1737, J$.R(1697, 'parseInt', parseInt, 2), 0)(J$.B(242, '/', J$.M(1713, J$.R(1705, 'Date', Date, 2), 'now', 0)(), J$.T(1721, 1000, 22, false), 0), J$.T(1729, 10, 22, false)), time, 0));
                            }
                            var time4Bytes = J$.X1(1817, J$.W(1809, 'time4Bytes', J$.M(1801, J$.R(1761, 'BinaryParser', BinaryParser, 1), 'encodeInt', 0)(J$.R(1769, 'time', time, 0), J$.T(1777, 32, 22, false), J$.T(1785, true, 23, false), J$.T(1793, true, 23, false)), time4Bytes, 1));
                            var machine3Bytes = J$.X1(1873, J$.W(1865, 'machine3Bytes', J$.M(1857, J$.R(1825, 'BinaryParser', BinaryParser, 1), 'encodeInt', 0)(J$.R(1833, 'MACHINE_ID', MACHINE_ID, 1), J$.T(1841, 24, 22, false), J$.T(1849, false, 23, false)), machine3Bytes, 1));
                            var pid2Bytes = J$.X1(1985, J$.W(1977, 'pid2Bytes', J$.M(1969, J$.R(1881, 'BinaryParser', BinaryParser, 1), 'fromShort', 0)(J$.B(274, '%', J$.X1(4977, J$.C(160, J$.B(258, '===', J$.U(250, 'typeof', J$.I(typeof process === 'undefined' ? J$.R(1889, 'process', undefined, 2) : J$.R(1889, 'process', process, 2))), J$.T(1897, 'undefined', 21, false), 0))) ? J$.M(1937, J$.R(1905, 'Math', Math, 2), 'floor', 0)(J$.B(266, '*', J$.M(1921, J$.R(1913, 'Math', Math, 2), 'random', 0)(), J$.T(1929, 100000, 22, false), 0)) : J$.G(1953, J$.R(1945, 'process', process, 2), 'pid', 0), J$.T(1961, 65535, 22, false), 0)), pid2Bytes, 1));
                            var index3Bytes = J$.X1(2057, J$.W(2049, 'index3Bytes', J$.M(2041, J$.R(1993, 'BinaryParser', BinaryParser, 1), 'encodeInt', 0)(J$.M(2009, J$.R(2001, 'this', this, 0), 'get_inc', 0)(), J$.T(2017, 24, 22, false), J$.T(2025, false, 23, false), J$.T(2033, true, 23, false)), index3Bytes, 1));
                            return J$.X1(2105, J$.Rt(2097, J$.B(298, '+', J$.B(290, '+', J$.B(282, '+', J$.R(2065, 'time4Bytes', time4Bytes, 0), J$.R(2073, 'machine3Bytes', machine3Bytes, 0), 0), J$.R(2081, 'pid2Bytes', pid2Bytes, 0), 0), J$.R(2089, 'index3Bytes', index3Bytes, 0), 0)));
                        } catch (J$e) {
                            J$.Ex(4985, J$e);
                        } finally {
                            if (J$.Fr(4993))
                                continue jalangiLabel1588;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2113), 0));
            J$.X1(2273, J$.P(2265, J$.G(2201, J$.R(2193, 'ObjectID', ObjectID, 1), 'prototype', 0), 'toString', J$.T(2257, function () {
                jalangiLabel1589:
                    while (true) {
                        try {
                            J$.Fe(2241, arguments.callee, this, arguments);
                            arguments = J$.N(2249, 'arguments', arguments, 4);
                            return J$.X1(2233, J$.Rt(2225, J$.M(2217, J$.R(2209, 'this', this, 0), 'toHexString', 0)()));
                        } catch (J$e) {
                            J$.Ex(5001, J$e);
                        } finally {
                            if (J$.Fr(5009))
                                continue jalangiLabel1589;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2241), 0));
            J$.X1(2329, J$.P(2321, J$.G(2289, J$.R(2281, 'ObjectID', ObjectID, 1), 'prototype', 0), 'inspect', J$.G(2313, J$.G(2305, J$.R(2297, 'ObjectID', ObjectID, 1), 'prototype', 0), 'toString', 0), 0));
            J$.X1(2417, J$.P(2409, J$.G(2345, J$.R(2337, 'ObjectID', ObjectID, 1), 'prototype', 0), 'toJSON', J$.T(2401, function () {
                jalangiLabel1590:
                    while (true) {
                        try {
                            J$.Fe(2385, arguments.callee, this, arguments);
                            arguments = J$.N(2393, 'arguments', arguments, 4);
                            return J$.X1(2377, J$.Rt(2369, J$.M(2361, J$.R(2353, 'this', this, 0), 'toHexString', 0)()));
                        } catch (J$e) {
                            J$.Ex(5017, J$e);
                        } finally {
                            if (J$.Fr(5025))
                                continue jalangiLabel1590;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2385), 0));
            J$.X1(2729, J$.P(2721, J$.G(2433, J$.R(2425, 'ObjectID', ObjectID, 1), 'prototype', 0), 'equals', J$.T(2713, function equals(otherID) {
                jalangiLabel1591:
                    while (true) {
                        try {
                            J$.Fe(2673, arguments.callee, this, arguments);
                            arguments = J$.N(2681, 'arguments', arguments, 4);
                            equals = J$.N(2689, 'equals', equals, 0);
                            otherID = J$.N(2697, 'otherID', otherID, 4);
                            J$.N(2705, 'id', id, 0);
                            var id;
                            if (J$.X1(5041, J$.C(200, J$.C(176, J$.B(306, '!=', J$.R(2441, 'otherID', otherID, 0), J$.T(2449, null, 25, false), 0)) ? J$.C(168, J$.B(314, 'instanceof', J$.R(2457, 'otherID', otherID, 0), J$.R(2465, 'ObjectID', ObjectID, 1), 0)) ? J$._() : J$.G(2481, J$.R(2473, 'otherID', otherID, 0), 'toHexString', 0) : J$._()))) {
                                J$.X1(2513, id = J$.W(2505, 'id', J$.G(2497, J$.R(2489, 'otherID', otherID, 0), 'id', 0), id, 0));
                            } else if (J$.X1(5033, J$.C(192, J$.C(184, J$.B(330, '==', J$.U(322, 'typeof', J$.R(2521, 'otherID', otherID, 0)), J$.T(2529, 'string', 21, false), 0)) ? J$.M(2553, J$.R(2537, 'ObjectID', ObjectID, 1), 'isValid', 0)(J$.R(2545, 'otherID', otherID, 0)) : J$._()))) {
                                J$.X1(2601, id = J$.W(2593, 'id', J$.G(2585, J$.M(2577, J$.R(2561, 'ObjectID', ObjectID, 1), 'createFromHexString', 0)(J$.R(2569, 'otherID', otherID, 0)), 'id', 0), id, 0));
                            } else {
                                return J$.X1(2625, J$.Rt(2617, J$.T(2609, false, 23, false)));
                            }
                            return J$.X1(2665, J$.Rt(2657, J$.B(338, '===', J$.G(2641, J$.R(2633, 'this', this, 0), 'id', 0), J$.R(2649, 'id', id, 0), 0)));
                        } catch (J$e) {
                            J$.Ex(5049, J$e);
                        } finally {
                            if (J$.Fr(5057))
                                continue jalangiLabel1591;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2673), 0));
            J$.X1(2977, J$.P(2969, J$.G(2745, J$.R(2737, 'ObjectID', ObjectID, 1), 'prototype', 0), 'getTimestamp', J$.T(2961, function () {
                jalangiLabel1592:
                    while (true) {
                        try {
                            J$.Fe(2937, arguments.callee, this, arguments);
                            arguments = J$.N(2945, 'arguments', arguments, 4);
                            J$.N(2953, 'timestamp', timestamp, 0);
                            var timestamp = J$.X1(2777, J$.W(2769, 'timestamp', J$.F(2761, J$.R(2753, 'Date', Date, 2), 1)(), timestamp, 1));
                            J$.X1(2905, J$.M(2897, J$.R(2785, 'timestamp', timestamp, 0), 'setTime', 0)(J$.B(346, '*', J$.M(2881, J$.R(2793, 'Math', Math, 2), 'floor', 0)(J$.M(2873, J$.R(2801, 'BinaryParser', BinaryParser, 1), 'decodeInt', 0)(J$.M(2841, J$.G(2817, J$.R(2809, 'this', this, 0), 'id', 0), 'substring', 0)(J$.T(2825, 0, 22, false), J$.T(2833, 4, 22, false)), J$.T(2849, 32, 22, false), J$.T(2857, true, 23, false), J$.T(2865, true, 23, false))), J$.T(2889, 1000, 22, false), 0)));
                            return J$.X1(2929, J$.Rt(2921, J$.R(2913, 'timestamp', timestamp, 0)));
                        } catch (J$e) {
                            J$.Ex(5065, J$e);
                        } finally {
                            if (J$.Fr(5073))
                                continue jalangiLabel1592;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2937), 0));
            J$.X1(3049, J$.P(3041, J$.R(2985, 'ObjectID', ObjectID, 1), 'index', J$.F(3033, J$.R(2993, 'parseInt', parseInt, 2), 0)(J$.B(354, '*', J$.M(3009, J$.R(3001, 'Math', Math, 2), 'random', 0)(), J$.T(3017, 16777215, 22, false), 0), J$.T(3025, 10, 22, false)), 0));
            J$.X1(3137, J$.P(3129, J$.R(3057, 'ObjectID', ObjectID, 1), 'createPk', J$.T(3121, function createPk() {
                jalangiLabel1593:
                    while (true) {
                        try {
                            J$.Fe(3097, arguments.callee, this, arguments);
                            arguments = J$.N(3105, 'arguments', arguments, 4);
                            createPk = J$.N(3113, 'createPk', createPk, 0);
                            return J$.X1(3089, J$.Rt(3081, J$.F(3073, J$.R(3065, 'ObjectID', ObjectID, 1), 1)()));
                        } catch (J$e) {
                            J$.Ex(5081, J$e);
                        } finally {
                            if (J$.Fr(5089))
                                continue jalangiLabel1593;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3097), 0));
            J$.X1(3361, J$.P(3353, J$.R(3145, 'ObjectID', ObjectID, 1), 'createFromTime', J$.T(3345, function createFromTime(time) {
                jalangiLabel1594:
                    while (true) {
                        try {
                            J$.Fe(3305, arguments.callee, this, arguments);
                            arguments = J$.N(3313, 'arguments', arguments, 4);
                            createFromTime = J$.N(3321, 'createFromTime', createFromTime, 0);
                            time = J$.N(3329, 'time', time, 4);
                            J$.N(3337, 'id', id, 0);
                            var id = J$.X1(3257, J$.W(3249, 'id', J$.B(362, '+', J$.M(3193, J$.R(3153, 'BinaryParser', BinaryParser, 1), 'encodeInt', 0)(J$.R(3161, 'time', time, 0), J$.T(3169, 32, 22, false), J$.T(3177, true, 23, false), J$.T(3185, true, 23, false)), J$.M(3241, J$.R(3201, 'BinaryParser', BinaryParser, 1), 'encodeInt', 0)(J$.T(3209, 0, 22, false), J$.T(3217, 64, 22, false), J$.T(3225, true, 23, false), J$.T(3233, true, 23, false)), 0), id, 1));
                            return J$.X1(3297, J$.Rt(3289, J$.F(3281, J$.R(3265, 'ObjectID', ObjectID, 1), 1)(J$.R(3273, 'id', id, 0))));
                        } catch (J$e) {
                            J$.Ex(5097, J$e);
                        } finally {
                            if (J$.Fr(5105))
                                continue jalangiLabel1594;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3305), 0));
            J$.X1(3937, J$.P(3929, J$.R(3369, 'ObjectID', ObjectID, 1), 'createFromHexString', J$.T(3921, function createFromHexString(hexString) {
                jalangiLabel1595:
                    while (true) {
                        try {
                            J$.Fe(3849, arguments.callee, this, arguments);
                            arguments = J$.N(3857, 'arguments', arguments, 4);
                            createFromHexString = J$.N(3865, 'createFromHexString', createFromHexString, 0);
                            hexString = J$.N(3873, 'hexString', hexString, 4);
                            J$.N(3881, 'len', len, 0);
                            J$.N(3889, 'result', result, 0);
                            J$.N(3897, 'string', string, 0);
                            J$.N(3905, 'number', number, 0);
                            J$.N(3913, 'index', index, 0);
                            if (J$.X1(5113, J$.C(224, J$.C(216, J$.B(378, '===', J$.U(370, 'typeof', J$.R(3377, 'hexString', hexString, 0)), J$.T(3385, 'undefined', 21, false), 0)) ? J$._() : J$.C(208, J$.B(386, '!=', J$.R(3393, 'hexString', hexString, 0), J$.T(3401, null, 25, false), 0)) ? J$.B(394, '!=', J$.G(3417, J$.R(3409, 'hexString', hexString, 0), 'length', 0), J$.T(3425, 24, 22, false), 0) : J$._())))
                                throw J$.X1(3465, J$.Th(3457, J$.F(3449, J$.R(3433, 'Error', Error, 2), 1)(J$.T(3441, 'Argument passed in must be a single String of 12 bytes or a string of 24 hex characters', 21, false))));
                            var len = J$.X1(3497, J$.W(3489, 'len', J$.G(3481, J$.R(3473, 'hexString', hexString, 0), 'length', 0), len, 1));
                            if (J$.X1(5121, J$.C(232, J$.B(410, '>', J$.R(3505, 'len', len, 0), J$.B(402, '*', J$.T(3513, 12, 22, false), J$.T(3521, 2, 22, false), 0), 0)))) {
                                throw J$.X1(3561, J$.Th(3553, J$.F(3545, J$.R(3529, 'Error', Error, 2), 1)(J$.T(3537, 'Id cannot be longer than 12 bytes', 21, false))));
                            }
                            var result = J$.X1(3585, J$.W(3577, 'result', J$.T(3569, '', 21, false), result, 1)), string, number;
                            for (var index = J$.X1(3609, J$.W(3601, 'index', J$.T(3593, 0, 22, false), index, 1)); J$.X1(5129, J$.C(240, J$.B(418, '<', J$.R(3617, 'index', index, 0), J$.R(3625, 'len', len, 0), 0))); J$.X1(5137, index = J$.W(3649, 'index', J$.B(426, '+', J$.R(3641, 'index', index, 0), J$.T(3633, 2, 22, false), 0), index, 0))) {
                                J$.X1(3697, string = J$.W(3689, 'string', J$.M(3681, J$.R(3657, 'hexString', hexString, 0), 'substr', 0)(J$.R(3665, 'index', index, 0), J$.T(3673, 2, 22, false)), string, 0));
                                J$.X1(3745, number = J$.W(3737, 'number', J$.F(3729, J$.R(3705, 'parseInt', parseInt, 2), 0)(J$.R(3713, 'string', string, 0), J$.T(3721, 16, 22, false)), number, 0));
                                J$.X1(3793, result = J$.W(3785, 'result', J$.B(434, '+', J$.R(3777, 'result', result, 0), J$.M(3769, J$.R(3753, 'BinaryParser', BinaryParser, 1), 'fromByte', 0)(J$.R(3761, 'number', number, 0)), 0), result, 0));
                            }
                            return J$.X1(3841, J$.Rt(3833, J$.F(3825, J$.R(3801, 'ObjectID', ObjectID, 1), 1)(J$.R(3809, 'result', result, 0), J$.R(3817, 'hexString', hexString, 0))));
                        } catch (J$e) {
                            J$.Ex(5145, J$e);
                        } finally {
                            if (J$.Fr(5153))
                                continue jalangiLabel1595;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3849), 0));
            J$.X1(4209, J$.P(4201, J$.R(3945, 'ObjectID', ObjectID, 1), 'isValid', J$.T(4193, function isValid(id) {
                jalangiLabel1596:
                    while (true) {
                        try {
                            J$.Fe(4161, arguments.callee, this, arguments);
                            arguments = J$.N(4169, 'arguments', arguments, 4);
                            isValid = J$.N(4177, 'isValid', isValid, 0);
                            id = J$.N(4185, 'id', id, 4);
                            if (J$.X1(5161, J$.C(248, J$.B(442, '==', J$.R(3953, 'id', id, 0), J$.T(3961, null, 25, false), 0))))
                                return J$.X1(3985, J$.Rt(3977, J$.T(3969, false, 23, false)));
                            if (J$.X1(5169, J$.C(256, J$.B(458, '==', J$.U(450, 'typeof', J$.R(3993, 'id', id, 0)), J$.T(4001, 'number', 21, false), 0))))
                                return J$.X1(4025, J$.Rt(4017, J$.T(4009, true, 23, false)));
                            if (J$.X1(5177, J$.C(280, J$.B(474, '==', J$.U(466, 'typeof', J$.R(4033, 'id', id, 0)), J$.T(4041, 'string', 21, false), 0)))) {
                                return J$.X1(4129, J$.Rt(4121, J$.C(272, J$.B(482, '==', J$.G(4057, J$.R(4049, 'id', id, 0), 'length', 0), J$.T(4065, 12, 22, false), 0)) ? J$._() : J$.C(264, J$.B(490, '==', J$.G(4081, J$.R(4073, 'id', id, 0), 'length', 0), J$.T(4089, 24, 22, false), 0)) ? J$.M(4113, J$.R(4097, 'checkForHexRegExp', checkForHexRegExp, 1), 'test', 0)(J$.R(4105, 'id', id, 0)) : J$._()));
                            }
                            return J$.X1(4153, J$.Rt(4145, J$.T(4137, false, 23, false)));
                        } catch (J$e) {
                            J$.Ex(5185, J$e);
                        } finally {
                            if (J$.Fr(5193))
                                continue jalangiLabel1596;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4161), 0));
            J$.X1(4593, J$.M(4585, J$.R(4217, 'Object', Object, 2), 'defineProperty', 0)(J$.G(4233, J$.R(4225, 'ObjectID', ObjectID, 1), 'prototype', 0), J$.T(4241, 'generationTime', 21, false), J$.T(4577, {
                enumerable: J$.T(4249, true, 23, false),
                get: J$.T(4385, function () {
                    jalangiLabel1597:
                        while (true) {
                            try {
                                J$.Fe(4369, arguments.callee, this, arguments);
                                arguments = J$.N(4377, 'arguments', arguments, 4);
                                return J$.X1(4361, J$.Rt(4353, J$.M(4345, J$.R(4257, 'Math', Math, 2), 'floor', 0)(J$.M(4337, J$.R(4265, 'BinaryParser', BinaryParser, 1), 'decodeInt', 0)(J$.M(4305, J$.G(4281, J$.R(4273, 'this', this, 0), 'id', 0), 'substring', 0)(J$.T(4289, 0, 22, false), J$.T(4297, 4, 22, false)), J$.T(4313, 32, 22, false), J$.T(4321, true, 23, false), J$.T(4329, true, 23, false)))));
                            } catch (J$e) {
                                J$.Ex(5201, J$e);
                            } finally {
                                if (J$.Fr(5209))
                                    continue jalangiLabel1597;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 4369),
                set: J$.T(4569, function (value) {
                    jalangiLabel1598:
                        while (true) {
                            try {
                                J$.Fe(4545, arguments.callee, this, arguments);
                                arguments = J$.N(4553, 'arguments', arguments, 4);
                                value = J$.N(4561, 'value', value, 4);
                                var value = J$.X1(4449, J$.W(4441, 'value', J$.M(4433, J$.R(4393, 'BinaryParser', BinaryParser, 1), 'encodeInt', 0)(J$.R(4401, 'value', value, 0), J$.T(4409, 32, 22, false), J$.T(4417, true, 23, false), J$.T(4425, true, 23, false)), value, 1));
                                J$.X1(4513, J$.P(4505, J$.R(4457, 'this', this, 0), 'id', J$.B(498, '+', J$.R(4465, 'value', value, 0), J$.M(4497, J$.G(4481, J$.R(4473, 'this', this, 0), 'id', 0), 'substr', 0)(J$.T(4489, 4, 22, false)), 0), 0));
                                J$.X1(4537, J$.M(4529, J$.R(4521, 'this', this, 0), 'toHexString', 0)());
                            } catch (J$e) {
                                J$.Ex(5217, J$e);
                            } finally {
                                if (J$.Fr(5225))
                                    continue jalangiLabel1598;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 4545)
            }, 11, false)));
            J$.X1(4625, J$.P(4617, J$.R(4601, 'module', module, 2), 'exports', J$.R(4609, 'ObjectID', ObjectID, 1), 0));
            J$.X1(4665, J$.P(4657, J$.G(4641, J$.R(4633, 'module', module, 2), 'exports', 0), 'ObjectID', J$.R(4649, 'ObjectID', ObjectID, 1), 0));
            J$.X1(4705, J$.P(4697, J$.G(4681, J$.R(4673, 'module', module, 2), 'exports', 0), 'ObjectId', J$.R(4689, 'ObjectID', ObjectID, 1), 0));
        } catch (J$e) {
            J$.Ex(5233, J$e);
        } finally {
            if (J$.Sr(5241)) {
                J$.L();
                continue jalangiLabel1599;
            } else {
                J$.L();
                break jalangiLabel1599;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
