{"8":[4,9,4,32],"9":[1,20,1,27],"10":[4,11,4,31],"16":[8,18,8,31],"17":[1,28,1,32],"18":[4,9,4,32],"25":[1,20,1,33],"26":[8,18,8,31],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[4,11,4,15],"89":[4,27,4,31],"97":[5,20,5,24],"105":[5,25,5,29],"113":[5,31,5,36],"121":[5,16,5,37],"129":[5,16,5,37],"137":[5,9,5,38],"145":[6,5,6,9],"153":[6,22,6,28],"161":[6,5,6,28],"169":[6,5,6,29],"177":[7,5,7,9],"185":[7,17,7,21],"193":[7,5,7,21],"201":[7,5,7,22],"209":[8,5,8,9],"217":[8,18,8,23],"225":[8,27,8,31],"233":[8,34,8,36],"241":[8,39,8,44],"249":[8,5,8,44],"257":[8,5,8,45],"265":[3,12,9,2],"273":[3,12,9,2],"281":[3,12,9,2],"289":[3,12,9,2],"297":[3,12,9,2],"305":[3,12,9,2],"313":[3,12,9,2],"321":[3,12,9,2],"329":[10,1,10,5],"337":[10,1,10,15],"345":[12,16,12,20],"353":[12,16,12,26],"361":[13,15,13,19],"369":[13,15,13,24],"377":[11,12,14,6],"385":[11,12,14,6],"393":[11,5,14,7],"401":[10,25,15,2],"409":[10,25,15,2],"417":[10,25,15,2],"425":[10,1,15,2],"433":[10,1,15,3],"441":[16,1,16,7],"449":[16,18,16,22],"457":[16,1,16,22],"465":[16,1,16,23],"473":[17,1,17,7],"481":[17,1,17,15],"489":[17,23,17,27],"497":[17,1,17,27],"505":[17,1,17,28],"513":[1,1,17,28],"521":[1,1,17,28],"529":[1,1,17,28],"537":[1,1,17,28],"545":[4,5,5,38],"553":[8,18,8,44],"561":[3,12,9,2],"569":[3,12,9,2],"577":[10,25,15,2],"585":[10,25,15,2],"593":[1,1,17,28],"601":[1,1,17,28],"nBranches":4,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/bson/lib/bson/code.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/bson/lib/bson/code_jalangi_.js","code":"/**\n * A class representation of the BSON Code type.\n *\n * @class\n * @param {(string|function)} code a string or function.\n * @param {Object} [scope] an optional scope for the function.\n * @return {Code}\n */\nvar Code = function Code(code, scope) {\n  if(!(this instanceof Code)) return new Code(code, scope);\n  this._bsontype = 'Code';\n  this.code = code;\n  this.scope = scope == null ? {} : scope;\n};\n\n/**\n * @ignore\n */\nCode.prototype.toJSON = function() {\n  return {scope:this.scope, code:this.code};\n}\n\nmodule.exports = Code;\nmodule.exports.Code = Code;"}