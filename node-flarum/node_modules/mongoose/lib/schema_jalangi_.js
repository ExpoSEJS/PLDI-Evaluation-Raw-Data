J$.iids = {"8":[19,9,19,34],"9":[1,20,1,27],"10":[19,11,19,33],"16":[40,9,40,12],"17":[1,28,1,32],"18":[19,9,19,34],"24":[43,21,43,35],"25":[1,20,1,33],"26":[44,19,44,37],"32":[43,21,43,62],"33":[1,20,1,33],"34":[44,42,44,60],"40":[44,42,44,80],"41":[1,20,1,33],"42":[44,85,44,95],"48":[44,19,44,81],"49":[2,26,2,38],"50":[50,18,50,35],"56":[44,19,44,95],"57":[2,26,2,45],"58":[50,40,50,65],"64":[45,9,45,16],"65":[2,26,2,45],"66":[54,21,54,55],"72":[50,40,50,84],"73":[2,26,2,45],"74":[54,57,54,60],"80":[50,18,50,85],"81":[3,16,3,23],"88":[51,9,51,15],"89":[3,24,3,35],"90":[56,31,56,41],"96":[54,21,54,55],"97":[3,16,3,36],"98":[56,30,56,41],"104":[60,25,60,60],"105":[3,16,3,51],"106":[62,13,62,35],"112":[60,74,60,109],"113":[3,16,3,51],"114":[68,17,68,33],"120":[62,13,62,35],"121":[3,16,3,51],"122":[98,27,98,43],"128":[69,35,69,42],"129":[4,20,4,27],"130":[115,62,115,76],"136":[68,17,68,33],"137":[4,28,4,36],"138":[115,62,115,89],"144":[71,31,71,41],"145":[4,20,4,37],"146":[115,93,115,124],"152":[59,9,59,19],"153":[4,20,4,50],"154":[118,39,118,66],"160":[95,9,95,21],"161":[4,20,4,50],"162":[118,38,118,66],"168":[98,27,98,43],"169":[4,20,4,50],"170":[143,21,143,36],"176":[112,21,112,39],"177":[5,19,5,26],"178":[154,37,154,55],"184":[115,51,115,89],"185":[5,27,5,42],"186":[154,57,154,60],"192":[115,51,115,124],"193":[5,19,5,43],"200":[117,21,117,48],"201":[5,19,5,43],"202":[155,25,155,65],"208":[123,25,123,50],"209":[5,19,5,43],"210":[171,20,171,42],"216":[122,21,122,35],"217":[6,13,6,20],"218":[174,36,174,56],"224":[143,21,143,67],"225":[6,21,6,30],"226":[202,21,202,36],"232":[143,21,143,67],"233":[6,13,6,31],"234":[202,38,202,41],"240":[154,37,154,55],"241":[6,13,6,31],"248":[157,25,157,30],"249":[6,13,6,31],"250":[204,13,204,29],"256":[171,9,171,42],"257":[8,14,8,21],"258":[205,33,205,75],"264":[171,9,171,42],"265":[8,22,8,30],"266":[205,33,205,81],"272":[174,9,174,32],"273":[8,14,8,31],"274":[205,33,205,87],"280":[174,9,174,56],"281":[8,14,8,31],"282":[207,40,207,61],"288":[174,9,174,56],"289":[8,14,8,31],"290":[207,65,207,84],"296":[194,9,194,21],"297":[9,13,9,20],"298":[208,33,208,81],"304":[200,14,200,26],"305":[9,21,9,28],"306":[208,33,208,87],"312":[204,13,204,29],"313":[9,13,9,29],"314":[208,33,208,93],"320":[207,13,207,61],"321":[9,13,9,29],"322":[210,42,210,63],"328":[207,13,207,84],"329":[9,13,9,29],"330":[210,67,210,122],"336":[207,13,207,84],"337":[11,12,11,16],"338":[210,128,210,159],"344":[210,42,210,122],"345":[12,11,12,15],"346":[210,163,210,194],"352":[210,13,210,123],"353":[13,14,13,18],"354":[212,29,212,41],"360":[210,163,210,216],"361":[14,23,14,27],"362":[213,36,213,48],"368":[210,128,210,216],"369":[15,23,15,27],"370":[213,36,213,54],"376":[210,13,210,217],"377":[16,13,16,17],"378":[215,27,215,39],"384":[211,17,211,45],"385":[10,21,17,2],"386":[218,23,218,35],"392":[210,13,210,217],"393":[10,21,17,2],"394":[226,22,226,118],"400":[202,21,202,36],"401":[10,21,17,2],"402":[228,9,228,25],"408":[229,13,229,29],"409":[19,11,19,15],"410":[239,25,239,35],"416":[231,13,231,32],"417":[19,27,19,33],"418":[239,25,239,78],"424":[233,13,233,41],"425":[20,20,20,26],"426":[242,21,242,46],"432":[236,16,236,40],"433":[20,27,20,30],"434":[246,13,246,25],"440":[228,9,228,25],"441":[20,32,20,39],"442":[248,25,248,43],"448":[238,9,238,23],"449":[20,16,20,40],"450":[248,13,248,43],"456":[241,9,241,23],"457":[20,16,20,40],"458":[249,23,249,56],"464":[246,13,246,25],"465":[20,9,20,41],"466":[249,23,249,64],"472":[248,13,248,43],"473":[21,5,21,9],"474":[249,23,249,82],"480":[256,9,256,41],"481":[21,18,21,20],"482":[249,23,249,129],"488":[269,13,269,40],"489":[21,5,21,20],"490":[249,23,249,156],"496":[267,9,267,24],"497":[21,5,21,21],"498":[249,23,249,175],"504":[275,41,275,85],"505":[22,5,22,9],"506":[249,23,249,181],"512":[275,16,275,86],"513":[22,21,22,23],"514":[258,36,258,46],"520":[275,16,275,86],"521":[22,5,22,23],"522":[258,36,258,52],"528":[276,9,276,79],"529":[22,5,22,24],"530":[261,36,261,46],"536":[276,9,276,79],"537":[23,5,23,9],"538":[261,36,261,52],"544":[279,9,279,45],"545":[23,21,23,23],"546":[269,13,269,40],"552":[279,9,279,64],"553":[23,5,23,23],"554":[275,41,275,67],"560":[280,20,280,52],"561":[23,5,23,24],"562":[275,71,275,85],"568":[280,20,280,52],"569":[24,5,24,9],"570":[276,9,276,60],"576":[281,13,281,42],"577":[24,30,24,32],"578":[276,64,276,79],"584":[281,13,281,42],"585":[24,5,24,32],"586":[279,32,279,45],"592":[286,55,286,99],"593":[24,5,24,33],"594":[279,49,279,64],"600":[286,29,286,99],"601":[25,5,25,9],"602":[280,20,280,33],"608":[286,20,286,100],"609":[25,19,25,21],"610":[280,37,280,52],"616":[286,20,286,155],"617":[25,5,25,21],"618":[284,25,284,36],"624":[286,20,286,183],"625":[25,5,25,22],"626":[284,13,284,36],"632":[288,17,288,32],"633":[26,5,26,9],"634":[285,34,285,82],"640":[286,20,286,183],"641":[26,21,26,23],"642":[286,29,286,51],"648":[284,13,284,36],"649":[26,5,26,23],"650":[286,55,286,81],"656":[294,46,294,73],"657":[26,5,26,24],"658":[286,104,286,155],"664":[279,9,279,64],"665":[27,5,27,9],"666":[303,28,303,39],"672":[296,9,296,38],"673":[27,22,27,24],"674":[303,16,303,39],"680":[296,9,296,38],"681":[27,5,27,24],"682":[306,16,306,64],"688":[303,49,303,95],"689":[27,5,27,25],"690":[308,9,308,41],"696":[303,16,303,39],"697":[28,5,28,9],"698":[309,29,309,54],"704":[300,9,300,30],"705":[28,21,28,23],"706":[309,29,309,65],"712":[305,9,305,13],"713":[28,5,28,23],"714":[309,29,309,72],"720":[308,9,308,41],"721":[28,5,28,24],"722":[309,29,309,111],"728":[315,21,315,28],"729":[29,5,29,9],"730":[309,29,309,155],"736":[321,9,321,43],"737":[29,20,29,22],"738":[315,21,315,28],"744":[321,9,321,43],"745":[29,5,29,22],"746":[315,30,315,33],"752":[326,13,326,40],"753":[29,5,29,23],"760":[324,12,324,15],"761":[30,5,30,9],"762":[321,32,321,43],"768":[332,9,332,27],"769":[30,20,30,22],"770":[324,12,324,15],"776":[337,9,337,27],"777":[30,5,30,22],"784":[339,9,339,30],"785":[30,5,30,23],"786":[324,12,324,15],"792":[341,9,341,28],"793":[31,5,31,9],"794":[337,9,337,27],"800":[343,9,343,30],"801":[31,17,31,19],"802":[339,9,339,30],"808":[345,9,345,39],"809":[31,5,31,19],"810":[341,9,341,28],"816":[348,9,348,36],"817":[31,5,31,20],"818":[343,9,343,30],"824":[358,16,358,21],"825":[32,5,32,9],"826":[345,9,345,39],"832":[359,13,359,82],"833":[32,27,32,36],"834":[357,21,357,40],"840":[359,13,359,82],"841":[32,5,32,36],"842":[357,42,357,45],"848":[357,21,357,40],"849":[32,5,32,37],"856":[367,9,367,28],"857":[33,5,33,9],"858":[358,16,358,21],"864":[372,9,372,13],"865":[33,33,33,42],"866":[358,24,358,34],"872":[378,13,378,30],"873":[33,5,33,42],"874":[358,24,358,48],"880":[378,13,378,45],"881":[33,5,33,43],"882":[359,13,359,31],"888":[378,13,378,68],"889":[34,5,34,9],"890":[359,35,359,82],"896":[379,17,379,51],"897":[34,26,34,35],"898":[367,9,367,28],"904":[378,13,378,68],"905":[34,5,34,35],"906":[372,9,372,13],"912":[386,13,386,32],"913":[34,5,34,36],"914":[374,16,374,35],"920":[388,15,388,32],"921":[35,5,35,9],"922":[375,12,375,31],"928":[388,13,388,33],"929":[36,20,36,26],"930":[375,33,375,36],"936":[375,12,375,31],"937":[36,16,36,28],"944":[397,9,397,12],"945":[37,21,37,34],"946":[378,13,378,23],"952":[400,9,400,17],"953":[35,14,38,6],"954":[378,34,378,45],"960":[418,9,418,28],"961":[35,5,38,6],"962":[378,49,378,68],"968":[425,9,425,30],"969":[35,5,38,7],"970":[379,17,379,51],"976":[429,9,429,22],"977":[39,5,39,9],"978":[386,13,386,32],"984":[453,9,453,32],"985":[39,20,39,24],"986":[388,13,388,33],"992":[461,9,461,32],"993":[39,40,39,47],"994":[393,20,393,37],"1000":[469,5,469,30],"1001":[39,20,39,48],"1002":[429,9,429,22],"1003":[39,20,39,39],"1008":[470,9,470,24],"1009":[39,5,39,48],"1010":[453,21,453,32],"1016":[479,9,479,31],"1017":[39,5,39,49],"1018":[453,9,453,32],"1024":[487,29,487,44],"1025":[40,9,40,12],"1026":[461,21,461,32],"1032":[482,13,482,16],"1033":[41,9,41,13],"1034":[461,9,461,32],"1040":[483,10,483,16],"1041":[41,18,41,21],"1042":[479,9,479,31],"1048":[486,10,486,16],"1049":[41,9,41,22],"1050":[487,29,487,44],"1051":[41,9,41,17],"1056":[511,13,511,31],"1057":[41,9,41,23],"1058":[518,25,518,40],"1064":[515,18,515,30],"1065":[43,21,43,24],"1066":[518,42,518,45],"1072":[527,21,527,53],"1073":[43,28,43,31],"1080":[530,31,530,39],"1081":[43,28,43,35],"1082":[521,17,521,60],"1088":[531,63,531,71],"1089":[43,39,43,44],"1090":[522,45,522,54],"1096":[531,28,531,52],"1097":[43,54,43,57],"1098":[524,45,524,54],"1104":[532,25,532,65],"1105":[43,54,43,61],"1106":[527,21,527,36],"1112":[532,25,532,65],"1113":[43,39,43,62],"1114":[527,40,527,53],"1115":[43,39,43,53],"1120":[538,25,538,51],"1121":[43,21,43,62],"1122":[531,40,531,52],"1128":[527,21,527,53],"1129":[43,21,43,62],"1130":[531,28,531,52],"1136":[523,24,523,44],"1137":[44,20,44,24],"1138":[532,33,532,65],"1144":[521,17,521,60],"1145":[44,20,44,30],"1146":[533,31,533,43],"1152":[518,25,518,40],"1153":[44,31,44,36],"1154":[535,31,535,43],"1160":[552,21,552,48],"1161":[44,20,44,37],"1162":[537,21,537,40],"1168":[548,13,548,19],"1169":[44,43,44,47],"1170":[538,27,538,50],"1176":[567,25,567,33],"1177":[44,43,44,55],"1178":[538,25,538,51],"1184":[562,21,562,28],"1185":[44,43,44,60],"1186":[552,23,552,47],"1192":[582,35,582,57],"1193":[44,64,44,68],"1194":[552,21,552,48],"1200":[582,9,582,96],"1201":[44,64,44,76],"1202":[562,21,562,28],"1208":[590,9,590,33],"1209":[44,64,44,80],"1210":[562,30,562,33],"1216":[595,17,595,32],"1217":[44,86,44,95],"1224":[593,9,593,28],"1225":[44,19,44,95],"1226":[567,25,567,33],"1232":[604,9,604,19],"1233":[44,19,44,95],"1234":[567,35,567,38],"1240":[614,25,614,74],"1241":[45,9,45,16],"1248":[617,25,617,65],"1249":[46,30,46,34],"1250":[569,26,569,38],"1256":[618,29,618,45],"1257":[46,22,46,36],"1258":[582,41,582,57],"1264":[617,25,617,65],"1265":[46,15,46,38],"1266":[582,35,582,57],"1272":[613,21,613,39],"1273":[46,15,46,38],"1274":[590,9,590,20],"1280":[612,17,612,28],"1281":[46,9,46,39],"1282":[590,9,590,33],"1288":[609,16,609,19],"1289":[47,9,47,12],"1290":[596,17,596,40],"1297":[47,9,47,16],"1298":[608,17,608,33],"1305":[47,17,47,21],"1306":[609,16,609,19],"1313":[47,17,47,29],"1321":[47,17,47,37],"1322":[609,16,609,19],"1329":[47,41,47,47],"1330":[614,25,614,74],"1337":[47,41,47,56],"1338":[617,25,617,43],"1345":[47,9,47,56],"1346":[618,29,618,45],"1353":[47,9,47,57],"1354":[619,55,619,60],"1361":[48,9,48,13],"1369":[48,18,48,21],"1377":[48,9,48,22],"1379":[48,9,48,17],"1385":[48,9,48,23],"1393":[50,19,50,23],"1401":[50,19,50,29],"1409":[50,30,50,34],"1417":[50,19,50,35],"1425":[50,41,50,45],"1433":[50,41,50,53],"1441":[50,41,50,65],"1449":[50,69,50,73],"1457":[50,69,50,81],"1465":[50,69,50,84],"1473":[50,18,50,85],"1481":[50,18,50,85],"1489":[51,9,51,15],"1497":[52,9,52,13],"1505":[52,22,52,26],"1513":[52,9,52,27],"1515":[52,9,52,21],"1521":[52,32,52,40],"1529":[52,9,52,41],"1531":[52,9,52,31],"1537":[52,9,52,42],"1545":[54,18,54,19],"1553":[54,18,54,19],"1561":[54,18,54,19],"1569":[54,21,54,22],"1577":[54,25,54,29],"1585":[54,25,54,48],"1593":[54,25,54,55],"1609":[54,59,54,60],"1617":[54,57,54,60],"1625":[55,17,55,21],"1633":[55,17,55,40],"1641":[55,41,55,42],"1649":[55,17,55,43],"1657":[55,17,55,43],"1665":[55,17,55,43],"1673":[56,9,56,13],"1681":[56,14,56,15],"1689":[56,14,56,20],"1697":[56,22,56,23],"1705":[56,22,56,28],"1713":[56,32,56,33],"1721":[56,32,56,41],"1729":[56,43,56,44],"1737":[56,43,56,47],"1745":[56,9,56,48],"1747":[56,9,56,21],"1753":[56,9,56,49],"1761":[58,22,58,26],"1769":[58,22,58,34],"1777":[58,22,58,45],"1785":[58,22,58,45],"1793":[58,22,58,45],"1801":[59,9,59,19],"1809":[60,25,60,35],"1817":[60,25,60,45],"1825":[60,49,60,60],"1833":[60,74,60,84],"1841":[60,74,60,94],"1849":[60,98,60,109],"1857":[60,129,60,131],"1865":[60,25,60,60],"1873":[60,25,60,60],"1881":[60,74,60,109],"1889":[60,74,60,109],"1897":[60,129,60,131],"1905":[60,129,60,131],"1913":[61,9,61,24],"1921":[61,25,61,34],"1929":[61,38,61,42],"1937":[61,9,61,42],"1945":[61,9,61,43],"1953":[62,14,62,18],"1961":[62,14,62,24],"1969":[62,25,62,34],"1977":[62,14,62,35],"1985":[63,13,63,28],"1993":[63,29,63,38],"2001":[63,42,63,46],"2009":[63,13,63,46],"2017":[63,13,63,47],"2025":[65,9,65,13],"2033":[65,18,65,33],"2041":[65,9,65,34],"2043":[65,9,65,17],"2049":[65,9,65,35],"2057":[66,9,66,13],"2065":[66,18,66,24],"2073":[67,40,67,44],"2081":[67,36,67,46],"2089":[67,36,67,46],"2097":[67,36,67,46],"2105":[68,18,68,22],"2113":[68,23,68,32],"2121":[68,18,68,33],"2129":[69,17,69,21],"2137":[69,22,69,31],"2145":[69,35,69,42],"2153":[69,45,69,49],"2161":[69,45,69,53],"2169":[69,45,69,68],"2171":[69,45,69,66],"2177":[69,71,69,87],"2185":[69,17,69,87],"2193":[69,17,69,88],"2201":[71,13,71,17],"2209":[71,18,71,27],"2217":[71,31,71,35],"2225":[71,31,71,41],"2233":[71,44,71,48],"2241":[71,49,71,58],"2249":[71,44,71,59],"2257":[71,62,71,78],"2265":[71,13,71,78],"2273":[71,13,71,79],"2281":[72,13,72,17],"2289":[72,13,72,19],"2297":[72,13,72,20],"2305":[66,26,73,10],"2313":[66,26,73,10],"2321":[66,26,73,10],"2329":[66,26,73,10],"2337":[66,26,73,10],"2345":[66,9,73,11],"2347":[66,9,66,17],"2353":[66,9,73,12],"2361":[75,27,75,31],"2369":[75,23,75,33],"2377":[75,23,75,33],"2385":[75,23,75,33],"2393":[77,23,77,25],"2401":[78,31,78,33],"2409":[76,27,79,14],"2417":[76,27,79,14],"2425":[76,27,79,14],"2433":[80,13,80,20],"2441":[80,13,80,25],"2449":[80,26,80,35],"2457":[80,39,80,42],"2465":[80,13,80,42],"2473":[80,13,80,43],"2481":[81,13,81,20],"2489":[81,13,81,33],"2497":[81,34,81,43],"2505":[81,47,81,50],"2513":[81,13,81,50],"2521":[81,13,81,51],"2529":[82,20,82,27],"2537":[82,20,82,27],"2545":[82,13,82,28],"2553":[74,26,83,10],"2561":[74,26,83,10],"2569":[74,26,83,10],"2577":[74,26,83,10],"2585":[74,26,83,10],"2593":[74,26,83,10],"2601":[74,26,83,10],"2609":[84,9,84,13],"2617":[84,18,84,36],"2625":[85,13,85,17],"2633":[85,35,85,37],"2641":[85,39,85,49],"2649":[85,39,85,51],"2657":[85,13,85,52],"2659":[85,13,85,34],"2665":[85,13,85,53],"2673":[86,13,86,17],"2681":[86,13,86,19],"2689":[86,13,86,20],"2697":[84,38,87,10],"2705":[84,38,87,10],"2713":[84,38,87,10],"2721":[84,38,87,10],"2729":[84,9,87,11],"2731":[84,9,84,17],"2737":[84,9,87,12],"2745":[88,9,88,13],"2753":[88,18,88,26],"2761":[89,13,89,17],"2769":[89,25,89,27],"2777":[89,29,89,39],"2785":[89,29,89,41],"2793":[89,13,89,42],"2795":[89,13,89,24],"2801":[89,13,89,43],"2809":[90,13,90,17],"2817":[90,13,90,19],"2825":[90,13,90,20],"2833":[88,28,91,10],"2841":[88,28,91,10],"2849":[88,28,91,10],"2857":[88,28,91,10],"2865":[88,9,91,11],"2867":[88,9,88,17],"2873":[88,9,91,12],"2881":[18,1,93,2],"2889":[18,1,93,2],"2897":[18,1,93,2],"2905":[18,1,93,2],"2913":[18,1,93,2],"2921":[18,1,93,2],"2929":[18,1,93,2],"2937":[18,1,93,2],"2945":[18,1,93,2],"2953":[18,1,93,2],"2961":[18,1,93,2],"2969":[18,1,93,2],"2977":[18,1,93,2],"2985":[18,1,93,2],"2993":[95,9,95,13],"3001":[95,9,95,17],"3009":[95,9,95,21],"3017":[96,16,96,20],"3025":[96,16,96,24],"3033":[96,16,96,28],"3041":[96,16,96,28],"3049":[96,9,96,29],"3057":[98,12,98,16],"3065":[98,12,98,20],"3073":[98,27,98,31],"3081":[98,35,98,39],"3089":[98,35,98,43],"3097":[98,46,98,50],"3105":[98,53,98,59],"3113":[98,60,98,64],"3121":[98,60,98,68],"3129":[98,53,98,69],"3137":[98,12,98,69],"3145":[98,12,98,69],"3153":[98,5,98,70],"3161":[94,1,99,2],"3169":[94,1,99,2],"3177":[100,1,100,7],"3185":[100,20,100,26],"3193":[100,34,100,46],"3201":[100,34,100,56],"3209":[100,20,100,57],"3211":[100,20,100,33],"3217":[100,1,100,57],"3225":[100,1,100,58],"3233":[101,1,101,7],"3241":[101,1,101,17],"3249":[101,32,101,38],"3257":[101,1,101,38],"3265":[101,1,101,39],"3273":[102,1,102,7],"3281":[102,1,102,17],"3289":[102,37,102,41],"3297":[102,1,102,41],"3305":[102,1,102,42],"3313":[103,1,103,7],"3321":[103,23,103,29],"3329":[103,23,103,39],"3337":[103,41,103,61],"3345":[104,19,104,24],"3353":[105,17,105,22],"3361":[106,15,106,20],"3369":[109,19,109,24],"3377":[110,19,110,25],"3385":[112,21,112,25],"3393":[112,21,112,39],"3401":[113,28,113,32],"3409":[113,28,113,34],"3417":[113,28,113,34],"3425":[113,21,113,35],"3433":[115,51,115,58],"3441":[115,69,115,76],"3449":[115,81,115,89],"3457":[115,93,115,113],"3465":[115,117,115,124],"3473":[115,51,115,124],"3481":[115,51,115,124],"3489":[117,21,117,48],"3497":[118,40,118,47],"3505":[118,40,118,66],"3513":[118,38,118,66],"3521":[118,21,118,67],"3529":[120,38,120,42],"3537":[120,38,120,49],"3545":[120,38,120,57],"3553":[120,38,120,76],"3561":[120,38,120,76],"3569":[120,21,120,77],"3577":[122,21,122,35],"3585":[123,25,123,29],"3593":[123,25,123,50],"3601":[124,25,124,29],"3609":[124,66,124,70],"3617":[124,51,124,72],"3625":[125,29,125,33],"3633":[125,34,125,39],"3641":[125,29,125,40],"3649":[125,29,125,41],"3657":[124,74,126,26],"3665":[124,74,126,26],"3673":[124,74,126,26],"3681":[124,74,126,26],"3689":[124,25,126,27],"3691":[124,25,124,50],"3697":[124,25,126,28],"3705":[128,25,128,29],"3713":[128,54,128,58],"3721":[128,39,128,60],"3729":[129,29,129,33],"3737":[129,34,129,39],"3745":[129,29,129,40],"3753":[129,29,129,41],"3761":[128,62,130,26],"3769":[128,62,130,26],"3777":[128,62,130,26],"3785":[128,62,130,26],"3793":[128,25,130,27],"3795":[128,25,128,38],"3801":[128,25,130,28],"3809":[133,21,133,25],"3817":[133,21,133,27],"3825":[133,21,133,28],"3833":[111,17,135,14],"3841":[111,17,135,14],"3849":[111,17,135,14],"3857":[111,17,135,14],"3865":[111,17,135,14],"3873":[111,17,135,14],"3881":[111,17,135,14],"3889":[108,9,136,10],"3897":[138,19,138,24],"3905":[139,19,139,25],"3913":[140,22,140,26],"3921":[142,31,142,35],"3929":[142,31,142,54],"3931":[142,31,142,52],"3937":[142,31,142,54],"3945":[142,31,142,54],"3953":[143,22,143,29],"3961":[143,22,143,36],"3969":[143,40,143,44],"3977":[143,40,143,67],"3985":[144,21,144,25],"3993":[144,21,144,27],"4001":[144,21,144,28],"4009":[145,21,145,25],"4017":[145,21,145,27],"4025":[145,21,145,28],"4033":[146,21,146,28],"4041":[146,21,146,28],"4049":[148,17,148,22],"4057":[148,28,148,35],"4065":[149,21,149,27],"4073":[149,53,149,57],"4081":[149,21,149,57],"4089":[149,21,149,58],"4097":[150,21,150,27],"4105":[151,25,151,27],"4113":[151,28,151,31],"4121":[151,25,151,32],"4129":[151,25,151,33],"4137":[150,33,152,22],"4145":[150,33,152,22],"4153":[150,33,152,22],"4161":[150,33,152,22],"4169":[150,21,152,23],"4171":[150,21,150,32],"4177":[150,21,152,24],"4185":[148,37,153,18],"4193":[148,37,153,18],"4201":[148,37,153,18],"4209":[148,37,153,18],"4217":[148,37,153,18],"4225":[154,34,154,35],"4233":[154,34,154,35],"4241":[154,34,154,35],"4249":[154,37,154,38],"4257":[154,41,154,48],"4265":[154,41,154,55],"4281":[154,59,154,60],"4289":[154,57,154,60],"4297":[155,32,155,39],"4305":[155,40,155,41],"4313":[155,32,155,42],"4321":[155,25,155,66],"4329":[157,25,157,30],"4337":[158,25,158,29],"4345":[158,30,158,35],"4353":[158,25,158,36],"4361":[158,25,158,37],"4369":[159,25,159,32],"4377":[159,25,159,32],"4385":[161,21,161,25],"4393":[161,21,161,27],"4401":[161,21,161,28],"4409":[162,21,162,25],"4417":[162,21,162,27],"4425":[162,21,162,28],"4433":[153,20,163,18],"4441":[153,20,163,18],"4449":[153,20,163,18],"4457":[153,20,163,18],"4465":[153,20,163,18],"4473":[148,17,163,19],"4475":[148,17,148,27],"4481":[148,17,163,20],"4489":[141,17,164,14],"4497":[141,17,164,14],"4505":[141,17,164,14],"4513":[141,17,164,14],"4521":[141,17,164,14],"4529":[141,17,164,14],"4537":[137,9,165,10],"4545":[107,12,166,6],"4553":[103,63,167,2],"4561":[103,1,167,3],"4563":[103,1,103,22],"4569":[103,1,167,4],"4577":[168,1,168,7],"4585":[168,1,168,17],"4593":[168,1,168,23],"4601":[168,1,168,24],"4609":[169,1,169,7],"4617":[169,1,169,17],"4625":[169,1,169,22],"4633":[169,1,169,23],"4641":[170,1,170,7],"4649":[170,1,170,17],"4657":[171,9,171,16],"4665":[171,20,171,25],"4673":[171,30,171,37],"4681":[171,30,171,42],"4689":[172,9,172,16],"4697":[172,29,172,30],"4705":[172,24,172,32],"4713":[172,9,172,32],"4721":[172,9,172,33],"4729":[174,9,174,16],"4737":[174,20,174,27],"4745":[174,20,174,32],"4753":[174,36,174,37],"4761":[174,42,174,49],"4769":[174,42,174,54],"4777":[174,42,174,56],"4785":[175,9,175,16],"4793":[175,30,175,35],"4801":[175,9,175,35],"4809":[175,9,175,36],"4817":[177,15,177,20],"4825":[178,17,178,21],"4833":[179,25,179,29],"4841":[180,17,180,22],"4849":[181,21,181,26],"4857":[182,27,182,32],"4865":[183,19,183,23],"4873":[184,20,184,24],"4881":[185,19,185,23],"4889":[186,15,186,19],"4897":[187,29,187,33],"4905":[188,15,188,20],"4913":[189,14,189,18],"4921":[190,22,190,27],"4929":[191,13,191,17],"4937":[192,18,192,24],"4945":[177,29,193,6],"4953":[193,8,193,15],"4961":[177,15,193,16],"4963":[177,15,177,28],"4969":[177,15,193,16],"4977":[177,5,193,17],"4985":[194,9,194,16],"4993":[194,9,194,21],"5001":[195,9,195,16],"5009":[195,24,195,32],"5017":[195,33,195,40],"5025":[195,33,195,45],"5033":[195,24,195,46],"5041":[195,9,195,46],"5049":[195,9,195,47],"5057":[197,12,197,19],"5065":[197,12,197,19],"5073":[197,5,197,20],"5081":[170,35,198,2],"5089":[170,35,198,2],"5097":[170,35,198,2],"5105":[170,35,198,2],"5113":[170,1,198,2],"5121":[170,1,198,3],"5129":[199,1,199,7],"5137":[199,1,199,17],"5145":[200,14,200,20],"5153":[200,24,200,26],"5161":[200,14,200,26],"5169":[200,5,200,27],"5177":[201,16,201,22],"5185":[201,28,201,31],"5193":[201,16,201,32],"5195":[201,16,201,27],"5201":[201,16,201,32],"5209":[201,16,201,32],"5217":[202,18,202,19],"5225":[202,18,202,19],"5233":[202,18,202,19],"5241":[202,21,202,22],"5249":[202,25,202,29],"5257":[202,25,202,36],"5273":[202,40,202,41],"5281":[202,38,202,41],"5289":[203,19,203,23],"5297":[203,24,203,25],"5305":[203,19,203,26],"5313":[203,19,203,26],"5321":[203,19,203,26],"5329":[204,13,204,17],"5337":[204,21,204,24],"5345":[204,25,204,28],"5353":[204,21,204,29],"5361":[205,23,205,32],"5369":[205,33,205,66],"5377":[205,69,205,75],"5385":[205,78,205,81],"5393":[205,84,205,87],"5401":[205,19,205,88],"5409":[205,19,205,88],"5417":[205,13,205,89],"5425":[207,13,207,18],"5433":[207,27,207,30],"5441":[207,31,207,34],"5449":[207,27,207,35],"5457":[207,13,207,36],"5459":[207,13,207,26],"5465":[207,40,207,43],"5473":[207,44,207,47],"5481":[207,40,207,48],"5489":[207,40,207,55],"5497":[207,60,207,61],"5505":[207,65,207,69],"5513":[207,73,207,76],"5521":[207,77,207,80],"5529":[207,73,207,81],"5537":[207,82,207,83],"5545":[207,73,207,84],"5553":[208,23,208,32],"5561":[208,33,208,72],"5569":[208,75,208,81],"5577":[208,84,208,87],"5585":[208,90,208,93],"5593":[208,19,208,94],"5601":[208,19,208,94],"5609":[208,13,208,95],"5617":[210,13,210,18],"5625":[210,28,210,31],"5633":[210,32,210,35],"5641":[210,28,210,36],"5649":[210,13,210,37],"5651":[210,13,210,27],"5657":[210,43,210,46],"5665":[210,47,210,50],"5673":[210,43,210,51],"5681":[210,43,210,63],"5689":[210,67,210,75],"5697":[210,79,210,84],"5705":[210,101,210,104],"5713":[210,105,210,108],"5721":[210,101,210,109],"5729":[210,101,210,121],"5737":[210,79,210,122],"5739":[210,79,210,100],"5745":[210,129,210,132],"5753":[210,133,210,136],"5761":[210,129,210,137],"5769":[210,138,210,142],"5777":[210,138,210,150],"5785":[210,138,210,158],"5793":[210,129,210,159],"5801":[210,163,210,167],"5809":[210,163,210,175],"5817":[210,163,210,183],"5825":[210,188,210,194],"5833":[210,198,210,201],"5841":[210,202,210,205],"5849":[210,198,210,206],"5857":[210,198,210,211],"5865":[210,198,210,216],"5873":[211,17,211,23],"5881":[211,29,211,32],"5889":[211,33,211,36],"5897":[211,29,211,37],"5905":[211,17,211,38],"5907":[211,17,211,28],"5913":[211,17,211,45],"5921":[212,17,212,21],"5929":[212,17,212,28],"5937":[212,29,212,35],"5945":[212,38,212,41],"5953":[212,45,212,49],"5961":[212,17,212,49],"5969":[212,17,212,50],"5977":[213,17,213,21],"5985":[213,26,213,29],"5993":[213,30,213,33],"6001":[213,26,213,34],"6009":[213,36,213,42],"6017":[213,45,213,48],"6025":[213,51,213,54],"6033":[213,17,213,55],"6035":[213,17,213,25],"6041":[213,17,213,56],"6049":[215,17,215,21],"6057":[215,27,215,33],"6065":[215,36,215,39],"6073":[215,41,215,44],"6081":[215,45,215,48],"6089":[215,41,215,49],"6097":[215,17,215,50],"6099":[215,17,215,26],"6105":[215,17,215,51],"6113":[218,13,218,17],"6121":[218,23,218,29],"6129":[218,32,218,35],"6137":[218,37,218,40],"6145":[218,41,218,44],"6153":[218,37,218,45],"6161":[218,13,218,46],"6163":[218,13,218,22],"6169":[218,13,218,47],"6177":[199,24,221,2],"6185":[199,24,221,2],"6193":[199,24,221,2],"6201":[199,24,221,2],"6209":[199,24,221,2],"6217":[199,24,221,2],"6225":[199,24,221,2],"6233":[199,24,221,2],"6241":[199,24,221,2],"6249":[199,1,221,2],"6257":[199,1,221,3],"6265":[222,1,222,7],"6273":[222,19,222,25],"6281":[222,33,222,37],"6289":[222,19,222,38],"6291":[222,19,222,32],"6297":[222,1,222,38],"6305":[222,1,222,39],"6313":[223,16,223,22],"6321":[223,16,223,31],"6329":[223,16,223,31],"6337":[223,16,223,31],"6345":[224,1,224,9],"6353":[224,17,224,25],"6361":[224,31,224,39],"6369":[224,47,224,55],"6377":[224,68,224,76],"6385":[224,94,224,102],"6393":[224,116,224,124],"6401":[224,130,224,138],"6409":[224,148,224,156],"6417":[224,164,224,172],"6425":[224,186,224,194],"6433":[224,203,224,211],"6441":[224,218,224,226],"6449":[224,239,224,247],"6457":[224,255,224,263],"6465":[224,273,224,281],"6473":[224,288,224,296],"6481":[224,308,224,316],"6489":[224,328,224,336],"6497":[224,345,224,353],"6505":[224,363,224,364],"6513":[224,345,224,364],"6521":[224,328,224,364],"6529":[224,308,224,364],"6537":[224,288,224,364],"6545":[224,273,224,364],"6553":[224,255,224,364],"6561":[224,239,224,364],"6569":[224,218,224,364],"6577":[224,203,224,364],"6585":[224,186,224,364],"6593":[224,164,224,364],"6601":[224,148,224,364],"6609":[224,130,224,364],"6617":[224,116,224,364],"6625":[224,94,224,364],"6633":[224,68,224,364],"6641":[224,47,224,364],"6649":[224,31,224,364],"6657":[224,17,224,364],"6665":[224,1,224,364],"6673":[224,1,224,365],"6681":[225,16,225,18],"6689":[225,16,225,18],"6697":[225,16,225,18],"6705":[226,1,226,9],"6713":[226,22,226,77],"6721":[226,80,226,118],"6729":[226,1,226,118],"6737":[226,1,226,119],"6745":[227,1,227,7],"6753":[227,1,227,17],"6761":[228,9,228,12],"6769":[228,16,228,25],"6777":[229,13,229,17],"6785":[229,13,229,23],"6793":[229,24,229,28],"6801":[229,13,229,29],"6809":[230,20,230,24],"6817":[230,20,230,30],"6825":[230,31,230,35],"6833":[230,20,230,36],"6841":[230,20,230,36],"6849":[230,13,230,37],"6857":[231,13,231,17],"6865":[231,13,231,26],"6873":[231,27,231,31],"6881":[231,13,231,32],"6889":[232,20,232,24],"6897":[232,20,232,33],"6905":[232,34,232,38],"6913":[232,20,232,39],"6921":[232,20,232,39],"6929":[232,13,232,40],"6937":[233,13,233,17],"6945":[233,13,233,35],"6953":[233,36,233,40],"6961":[233,13,233,41],"6969":[234,20,234,24],"6977":[234,20,234,42],"6985":[234,43,234,47],"6993":[234,20,234,48],"7001":[234,20,234,48],"7009":[234,13,234,49],"7017":[236,16,236,29],"7025":[236,35,236,39],"7033":[236,16,236,40],"7035":[236,16,236,34],"7041":[236,43,236,60],"7049":[236,61,236,65],"7057":[236,67,236,71],"7065":[236,43,236,72],"7073":[236,75,236,84],"7081":[236,16,236,84],"7089":[236,9,236,85],"7097":[238,9,238,17],"7105":[238,18,238,22],"7113":[238,9,238,23],"7121":[239,19,239,24],"7129":[239,25,239,28],"7137":[239,31,239,35],"7145":[239,38,239,78],"7153":[239,15,239,79],"7161":[239,15,239,79],"7169":[239,9,239,80],"7177":[241,9,241,17],"7185":[241,18,241,22],"7193":[241,9,241,23],"7201":[242,9,242,16],"7209":[242,21,242,29],"7217":[242,32,242,40],"7225":[242,41,242,45],"7233":[242,32,242,46],"7241":[242,9,242,47],"7243":[242,9,242,20],"7249":[242,9,242,48],"7257":[244,20,244,24],"7265":[244,31,244,35],"7273":[244,20,244,36],"7275":[244,20,244,30],"7281":[244,45,244,53],"7289":[244,45,244,59],"7291":[244,45,244,57],"7297":[244,70,244,74],"7305":[244,70,244,79],"7313":[244,20,244,36],"7321":[244,20,244,36],"7329":[244,45,244,59],"7337":[244,45,244,59],"7345":[244,70,244,79],"7353":[244,70,244,79],"7361":[245,5,245,13],"7369":[246,14,246,20],"7377":[246,21,246,24],"7385":[246,14,246,25],"7393":[247,13,247,19],"7401":[247,20,247,23],"7409":[247,27,247,29],"7417":[247,13,247,29],"7425":[247,13,247,30],"7433":[248,13,248,21],"7441":[248,32,248,38],"7449":[248,39,248,42],"7457":[248,32,248,43],"7465":[249,23,249,49],"7473":[249,52,249,56],"7481":[249,59,249,64],"7489":[249,67,249,82],"7497":[249,85,249,93],"7505":[249,100,249,101],"7513":[249,103,249,104],"7521":[249,85,249,105],"7523":[249,85,249,99],"7529":[249,114,249,117],"7537":[249,113,249,118],"7545":[249,85,249,119],"7547":[249,85,249,112],"7553":[249,125,249,128],"7561":[249,85,249,129],"7563":[249,85,249,124],"7569":[249,132,249,156],"7577":[249,159,249,165],"7585":[249,166,249,169],"7593":[249,159,249,170],"7601":[249,159,249,175],"7609":[249,178,249,181],"7617":[249,23,249,181],"7625":[249,23,249,181],"7633":[250,23,250,28],"7641":[250,29,250,32],"7649":[250,19,250,33],"7657":[250,19,250,33],"7665":[250,13,250,34],"7673":[252,18,252,24],"7681":[252,25,252,28],"7689":[252,18,252,29],"7697":[252,18,252,29],"7705":[252,9,252,30],"7713":[245,22,253,6],"7721":[245,22,253,6],"7729":[245,22,253,6],"7737":[245,22,253,6],"7745":[245,22,253,6],"7753":[245,22,253,6],"7761":[245,5,253,7],"7763":[245,5,245,21],"7769":[245,5,253,8],"7777":[254,5,254,11],"7785":[254,12,254,16],"7793":[254,20,254,25],"7801":[254,32,254,35],"7809":[254,20,254,36],"7811":[254,20,254,31],"7817":[254,5,254,36],"7825":[254,5,254,37],"7833":[255,5,255,9],"7841":[255,5,255,15],"7849":[255,16,255,20],"7857":[255,24,255,30],"7865":[255,47,255,51],"7873":[255,53,255,56],"7881":[255,58,255,62],"7889":[255,58,255,70],"7897":[255,24,255,71],"7899":[255,24,255,46],"7905":[255,5,255,71],"7913":[255,5,255,72],"7921":[256,9,256,13],"7929":[256,9,256,19],"7937":[256,20,256,24],"7945":[256,9,256,25],"7953":[256,9,256,41],"7961":[257,25,257,29],"7969":[257,25,257,35],"7977":[257,36,257,40],"7985":[257,25,257,41],"7993":[257,25,257,48],"8001":[257,25,257,54],"8009":[258,13,258,17],"8017":[258,13,258,35],"8025":[258,36,258,40],"8033":[258,43,258,46],"8041":[258,49,258,52],"8049":[258,56,258,60],"8057":[258,56,258,66],"8065":[258,67,258,71],"8073":[258,56,258,72],"8081":[258,56,258,79],"8089":[258,56,258,85],"8097":[258,86,258,89],"8105":[258,56,258,90],"8113":[258,13,258,90],"8121":[258,13,258,91],"8129":[257,25,257,54],"8137":[257,9,259,10],"8145":[257,9,259,10],"8153":[260,21,260,25],"8161":[260,21,260,31],"8169":[260,32,260,36],"8177":[260,21,260,37],"8185":[260,21,260,44],"8193":[260,21,260,62],"8201":[261,13,261,17],"8209":[261,13,261,35],"8217":[261,36,261,40],"8225":[261,43,261,46],"8233":[261,49,261,52],"8241":[261,56,261,60],"8249":[261,56,261,66],"8257":[261,67,261,71],"8265":[261,56,261,72],"8273":[261,56,261,79],"8281":[261,56,261,97],"8289":[261,98,261,101],"8297":[261,56,261,102],"8305":[261,13,261,102],"8313":[261,13,261,103],"8321":[260,21,260,62],"8329":[260,9,262,10],"8337":[260,9,262,10],"8345":[264,12,264,16],"8353":[264,12,264,16],"8361":[264,5,264,17],"8369":[227,25,265,2],"8377":[227,25,265,2],"8385":[227,25,265,2],"8393":[227,25,265,2],"8401":[227,25,265,2],"8409":[227,25,265,2],"8417":[227,25,265,2],"8425":[227,25,265,2],"8433":[227,25,265,2],"8441":[227,1,265,2],"8449":[227,1,265,3],"8457":[266,1,266,7],"8465":[267,9,267,12],"8473":[267,9,267,24],"8481":[268,31,268,36],"8489":[268,53,268,56],"8497":[268,53,268,68],"8505":[268,31,268,69],"8507":[268,31,268,52],"8513":[268,31,268,69],"8521":[268,31,268,69],"8529":[269,13,269,28],"8537":[269,32,269,40],"8545":[270,26,270,29],"8553":[270,26,270,29],"8561":[270,26,270,29],"8569":[271,19,271,21],"8577":[271,19,271,21],"8585":[271,13,271,22],"8593":[272,13,272,16],"8601":[272,17,272,24],"8609":[272,17,272,32],"8617":[272,36,272,42],"8625":[272,13,272,42],"8633":[272,13,272,43],"8641":[275,16,275,19],"8649":[275,20,275,27],"8657":[275,20,275,35],"8665":[275,16,275,36],"8673":[275,41,275,48],"8681":[275,41,275,56],"8689":[275,61,275,67],"8697":[275,72,275,75],"8705":[275,72,275,80],"8713":[275,72,275,85],"8721":[275,89,275,92],"8729":[275,93,275,100],"8737":[275,93,275,108],"8745":[275,89,275,109],"8753":[275,112,275,114],"8761":[275,16,275,114],"8769":[275,16,275,114],"8777":[276,9,276,17],"8785":[276,21,276,26],"8793":[276,43,276,47],"8801":[276,43,276,59],"8809":[276,21,276,60],"8811":[276,21,276,42],"8817":[276,64,276,71],"8825":[276,75,276,79],"8833":[277,20,277,33],"8841":[277,40,277,44],"8849":[277,46,277,49],"8857":[277,16,277,50],"8859":[277,20,277,39],"8865":[277,16,277,50],"8873":[277,9,277,51],"8881":[279,9,279,14],"8889":[279,23,279,27],"8897":[279,9,279,28],"8899":[279,9,279,22],"8905":[279,32,279,37],"8913":[279,41,279,45],"8921":[279,49,279,56],"8929":[279,60,279,64],"8937":[280,20,280,25],"8945":[280,29,280,33],"8953":[280,37,280,44],"8961":[280,48,280,52],"8969":[280,55,280,58],"8977":[280,55,280,63],"8985":[280,66,280,70],"8993":[280,71,280,72],"9001":[280,66,280,73],"9009":[280,20,280,73],"9017":[280,20,280,73],"9025":[281,13,281,17],"9033":[281,21,281,25],"9041":[281,21,281,42],"9049":[282,24,282,37],"9057":[282,52,282,56],"9065":[282,58,282,62],"9073":[282,64,282,67],"9081":[282,20,282,68],"9083":[282,24,282,51],"9089":[282,20,282,68],"9097":[282,13,282,69],"9105":[284,13,284,21],"9113":[284,32,284,36],"9121":[285,20,285,33],"9129":[285,34,285,38],"9137":[285,46,285,47],"9145":[285,34,285,48],"9147":[285,34,285,45],"9153":[285,34,285,62],"9155":[285,34,285,60],"9161":[285,65,285,69],"9169":[285,80,285,81],"9177":[285,65,285,82],"9179":[285,65,285,79],"9185":[285,20,285,83],"9193":[285,20,285,83],"9201":[285,13,285,84],"9209":[286,20,286,24],"9217":[286,30,286,34],"9225":[286,35,286,42],"9233":[286,35,286,50],"9241":[286,30,286,51],"9249":[286,55,286,62],"9257":[286,55,286,70],"9265":[286,75,286,81],"9273":[286,85,286,89],"9281":[286,85,286,94],"9289":[286,85,286,99],"9297":[286,104,286,112],"9305":[286,116,286,121],"9313":[286,138,286,142],"9321":[286,138,286,154],"9329":[286,116,286,155],"9331":[286,116,286,137],"9337":[286,159,286,165],"9345":[286,171,286,175],"9353":[286,159,286,176],"9355":[286,159,286,170],"9361":[286,159,286,183],"9369":[287,50,287,57],"9377":[287,50,287,66],"9385":[287,38,287,68],"9393":[287,38,287,68],"9401":[287,38,287,68],"9409":[288,17,288,24],"9417":[288,17,288,32],"9425":[289,17,289,35],"9433":[289,46,289,53],"9441":[289,46,289,61],"9449":[289,17,289,61],"9457":[289,17,289,62],"9465":[291,35,291,41],"9473":[291,42,291,46],"9481":[291,48,291,66],"9489":[291,31,291,67],"9497":[291,31,291,67],"9505":[291,31,291,67],"9513":[292,24,292,37],"9521":[292,52,292,56],"9529":[292,58,292,69],"9537":[292,71,292,74],"9545":[292,20,292,75],"9547":[292,24,292,51],"9553":[292,20,292,75],"9561":[292,13,292,76],"9569":[294,20,294,33],"9577":[294,40,294,44],"9585":[294,46,294,50],"9593":[294,54,294,67],"9601":[294,54,294,73],"9609":[294,75,294,78],"9617":[294,16,294,79],"9619":[294,20,294,39],"9625":[294,16,294,79],"9633":[294,9,294,80],"9641":[296,9,296,13],"9649":[296,17,296,21],"9657":[296,17,296,38],"9665":[297,20,297,33],"9673":[297,43,297,47],"9681":[297,49,297,53],"9689":[297,55,297,58],"9697":[297,16,297,59],"9699":[297,20,297,42],"9705":[297,16,297,59],"9713":[297,9,297,60],"9721":[300,9,300,15],"9729":[300,25,300,29],"9737":[300,9,300,30],"9739":[300,9,300,24],"9745":[301,16,301,24],"9753":[301,16,301,24],"9761":[301,9,301,25],"9769":[303,16,303,24],"9777":[303,35,303,39],"9785":[303,42,303,46],"9793":[303,49,303,53],"9801":[303,49,303,64],"9809":[303,68,303,73],"9817":[303,90,303,94],"9825":[303,68,303,95],"9827":[303,68,303,89],"9833":[303,16,303,95],"9841":[303,9,303,96],"9849":[305,9,305,13],"9857":[306,16,306,20],"9865":[306,28,306,29],"9873":[306,16,306,30],"9875":[306,16,306,27],"9881":[306,16,306,44],"9883":[306,16,306,42],"9889":[306,47,306,51],"9897":[306,62,306,63],"9905":[306,47,306,64],"9907":[306,47,306,61],"9913":[306,16,306,64],"9921":[306,9,306,65],"9929":[308,9,308,18],"9937":[308,22,308,35],"9945":[308,36,308,40],"9953":[308,22,308,41],"9961":[309,19,309,28],"9969":[309,29,309,47],"9977":[309,50,309,54],"9985":[309,57,309,65],"9993":[309,68,309,72],"10001":[309,75,309,111],"10009":[309,114,309,155],"10017":[309,15,309,156],"10025":[309,15,309,156],"10033":[309,9,309,157],"10041":[311,16,311,29],"10049":[311,30,311,34],"10057":[311,36,311,40],"10065":[311,42,311,45],"10073":[311,12,311,46],"10075":[311,16,311,35],"10081":[311,12,311,46],"10089":[311,5,311,47],"10097":[266,26,312,2],"10105":[266,26,312,2],"10113":[266,26,312,2],"10121":[266,26,312,2],"10129":[266,26,312,2],"10137":[266,26,312,2],"10145":[266,26,312,2],"10153":[266,26,312,2],"10161":[266,26,312,2],"10169":[266,26,312,2],"10177":[266,26,312,2],"10185":[266,26,312,2],"10193":[266,26,312,2],"10201":[266,1,312,2],"10209":[266,1,312,3],"10217":[313,1,313,7],"10225":[313,1,313,17],"10233":[314,16,314,22],"10241":[314,28,314,32],"10249":[314,28,314,38],"10257":[314,16,314,39],"10259":[314,16,314,27],"10265":[314,47,314,51],"10273":[314,47,314,58],"10281":[314,16,314,39],"10289":[314,16,314,39],"10297":[314,47,314,58],"10305":[314,47,314,58],"10313":[315,18,315,19],"10321":[315,18,315,19],"10329":[315,18,315,19],"10337":[315,21,315,22],"10345":[315,25,315,28],"10361":[315,32,315,33],"10369":[315,30,315,33],"10377":[316,9,316,11],"10385":[316,12,316,16],"10393":[316,17,316,18],"10401":[316,12,316,19],"10409":[316,21,316,25],"10417":[316,21,316,31],"10425":[316,32,316,36],"10433":[316,37,316,38],"10441":[316,32,316,39],"10449":[316,21,316,40],"10457":[316,9,316,41],"10465":[316,9,316,42],"10473":[318,12,318,16],"10481":[318,12,318,16],"10489":[318,5,318,17],"10497":[313,29,319,2],"10505":[313,29,319,2],"10513":[313,29,319,2],"10521":[313,29,319,2],"10529":[313,29,319,2],"10537":[313,29,319,2],"10545":[313,29,319,2],"10553":[313,1,319,2],"10561":[313,1,319,3],"10569":[320,1,320,7],"10577":[320,1,320,17],"10585":[321,9,321,13],"10593":[321,9,321,28],"10601":[321,33,321,43],"10609":[322,16,322,20],"10617":[322,16,322,35],"10625":[322,16,322,35],"10633":[322,9,322,36],"10641":[323,17,323,23],"10649":[323,29,323,33],"10657":[323,29,323,39],"10665":[323,17,323,40],"10667":[323,17,323,28],"10673":[323,46,323,51],"10681":[323,46,323,58],"10689":[323,66,323,68],"10697":[323,17,323,40],"10705":[323,17,323,40],"10713":[323,46,323,58],"10721":[323,46,323,58],"10729":[323,66,323,68],"10737":[323,66,323,68],"10753":[324,12,324,13],"10761":[324,12,324,15],"10777":[325,20,325,25],"10785":[325,26,325,27],"10793":[325,20,325,28],"10801":[325,20,325,28],"10809":[325,20,325,28],"10817":[326,13,326,17],"10825":[326,13,326,23],"10833":[326,24,326,28],"10841":[326,13,326,29],"10849":[326,13,326,40],"10857":[327,13,327,16],"10865":[327,22,327,26],"10873":[327,13,327,27],"10875":[327,13,327,21],"10881":[327,13,327,28],"10889":[329,12,329,16],"10897":[329,34,329,37],"10905":[329,12,329,37],"10913":[329,12,329,37],"10921":[329,5,329,38],"10929":[320,34,330,2],"10937":[320,34,330,2],"10945":[320,34,330,2],"10953":[320,34,330,2],"10961":[320,34,330,2],"10969":[320,34,330,2],"10977":[320,34,330,2],"10985":[320,34,330,2],"10993":[320,34,330,2],"11001":[320,1,330,2],"11009":[320,1,330,3],"11017":[331,1,331,7],"11025":[331,1,331,17],"11033":[332,9,332,13],"11041":[332,9,332,27],"11049":[333,16,333,20],"11057":[333,16,333,34],"11065":[333,16,333,34],"11073":[333,9,333,35],"11081":[334,12,334,16],"11089":[334,33,334,37],"11097":[334,33,334,47],"11099":[334,33,334,45],"11105":[334,12,334,47],"11113":[334,12,334,47],"11121":[334,5,334,48],"11129":[331,33,335,2],"11137":[331,33,335,2],"11145":[331,33,335,2],"11153":[331,33,335,2],"11161":[331,1,335,2],"11169":[331,1,335,3],"11177":[336,1,336,7],"11185":[336,1,336,17],"11193":[337,9,337,13],"11201":[337,17,337,21],"11209":[337,17,337,27],"11217":[338,16,338,22],"11225":[338,16,338,22],"11233":[338,9,338,23],"11241":[339,9,339,13],"11249":[339,17,339,21],"11257":[339,17,339,30],"11265":[340,16,340,25],"11273":[340,16,340,25],"11281":[340,9,340,26],"11289":[341,9,341,13],"11297":[341,17,341,21],"11305":[341,17,341,28],"11313":[342,16,342,24],"11321":[342,16,342,24],"11329":[342,9,342,25],"11337":[343,9,343,13],"11345":[343,17,343,21],"11353":[343,17,343,30],"11361":[344,16,344,22],"11369":[344,16,344,22],"11377":[344,9,344,23],"11385":[345,9,345,13],"11393":[345,17,345,21],"11401":[345,17,345,39],"11409":[346,16,346,22],"11417":[346,16,346,22],"11425":[346,9,346,23],"11433":[348,9,348,25],"11441":[348,31,348,35],"11449":[348,9,348,36],"11451":[348,9,348,30],"11457":[349,16,349,37],"11465":[349,38,349,42],"11473":[349,44,349,48],"11481":[349,16,349,49],"11489":[349,16,349,49],"11497":[349,9,349,50],"11505":[351,16,351,34],"11513":[351,16,351,34],"11521":[351,9,351,35],"11529":[336,29,353,2],"11537":[336,29,353,2],"11545":[336,29,353,2],"11553":[336,29,353,2],"11561":[336,1,353,2],"11569":[336,1,353,3],"11577":[354,1,354,7],"11585":[354,1,354,17],"11593":[355,20,355,24],"11601":[355,31,355,36],"11609":[355,20,355,37],"11611":[355,20,355,30],"11617":[355,20,355,37],"11625":[355,20,355,37],"11633":[356,12,356,14],"11641":[356,12,356,14],"11649":[356,5,356,15],"11657":[357,18,357,19],"11665":[357,18,357,19],"11673":[357,18,357,19],"11681":[357,21,357,22],"11689":[357,25,357,33],"11697":[357,25,357,40],"11713":[357,44,357,45],"11721":[357,42,357,45],"11729":[358,16,358,17],"11737":[358,20,358,21],"11745":[358,24,358,28],"11753":[358,31,358,34],"11761":[358,37,358,45],"11769":[358,46,358,47],"11777":[358,37,358,48],"11785":[358,51,358,59],"11793":[358,60,358,61],"11801":[358,51,358,62],"11809":[358,16,358,62],"11817":[358,9,358,63],"11825":[359,13,359,17],"11833":[359,21,359,25],"11841":[359,21,359,31],"11849":[359,35,359,39],"11857":[359,35,359,45],"11865":[359,46,359,50],"11873":[359,35,359,51],"11881":[359,63,359,76],"11889":[359,63,359,82],"11897":[360,20,360,24],"11905":[360,20,360,24],"11913":[360,13,360,25],"11921":[363,12,363,17],"11929":[363,12,363,17],"11937":[363,5,363,18],"11945":[354,35,364,2],"11953":[354,35,364,2],"11961":[354,35,364,2],"11969":[354,35,364,2],"11977":[354,35,364,2],"11985":[354,35,364,2],"11993":[354,1,364,2],"12001":[354,1,364,3],"12009":[366,20,366,24],"12017":[366,31,366,51],"12025":[366,20,366,52],"12027":[366,20,366,30],"12033":[366,60,366,67],"12041":[366,20,366,68],"12043":[366,20,366,59],"12049":[366,20,366,68],"12057":[366,20,366,68],"12065":[367,9,367,17],"12073":[367,9,367,24],"12081":[367,27,367,28],"12089":[368,16,368,20],"12097":[368,16,368,26],"12105":[368,27,368,35],"12113":[368,36,368,37],"12121":[368,27,368,38],"12129":[368,16,368,39],"12137":[368,16,368,39],"12145":[368,9,368,40],"12153":[370,15,370,19],"12161":[370,25,370,33],"12169":[370,34,370,35],"12177":[370,25,370,36],"12185":[370,15,370,37],"12187":[370,15,370,24],"12193":[370,15,370,37],"12201":[370,15,370,37],"12209":[371,20,371,25],"12217":[371,20,371,25],"12225":[371,20,371,25],"12233":[372,10,372,13],"12241":[373,16,373,19],"12249":[373,16,373,19],"12257":[373,9,373,20],"12265":[374,16,374,24],"12273":[374,16,374,31],"12281":[374,34,374,35],"12289":[374,50,374,51],"12297":[374,16,374,35],"12305":[374,16,374,35],"12313":[374,50,374,51],"12321":[374,50,374,51],"12329":[375,12,375,13],"12337":[375,16,375,24],"12345":[375,16,375,31],"12361":[375,35,375,36],"12369":[375,33,375,36],"12377":[376,20,376,25],"12385":[376,20,376,25],"12393":[376,9,376,26],"12401":[377,19,377,27],"12409":[377,28,377,29],"12417":[377,19,377,30],"12425":[377,19,377,30],"12433":[377,9,377,31],"12441":[378,13,378,14],"12449":[378,19,378,23],"12457":[378,27,378,30],"12465":[378,35,378,38],"12473":[378,35,378,45],"12481":[378,50,378,54],"12489":[378,60,378,67],"12497":[378,50,378,68],"12499":[378,50,378,59],"12505":[379,17,379,20],"12513":[379,32,379,45],"12521":[379,32,379,51],"12529":[380,23,380,26],"12537":[380,23,380,33],"12545":[380,23,380,33],"12553":[380,17,380,34],"12561":[382,23,382,32],"12569":[382,23,382,32],"12577":[382,17,382,33],"12585":[386,14,386,18],"12593":[386,24,386,31],"12601":[386,14,386,32],"12603":[386,14,386,23],"12609":[388,15,388,18],"12617":[388,22,388,25],"12625":[388,22,388,32],"12633":[389,19,389,28],"12641":[389,19,389,28],"12649":[389,13,389,29],"12657":[392,20,392,23],"12665":[392,20,392,30],"12673":[392,40,392,47],"12681":[392,20,392,48],"12683":[392,20,392,39],"12689":[392,20,392,48],"12697":[392,20,392,48],"12705":[393,20,393,24],"12713":[393,29,393,37],"12721":[393,20,393,37],"12729":[393,9,393,38],"12737":[394,15,394,18],"12745":[394,15,394,25],"12753":[394,31,394,38],"12761":[394,15,394,39],"12763":[394,15,394,30],"12769":[394,15,394,39],"12777":[394,9,394,40],"12785":[396,5,396,9],"12793":[396,5,396,18],"12801":[396,19,396,23],"12809":[396,27,396,30],"12817":[396,5,396,30],"12825":[396,5,396,31],"12833":[397,9,397,12],"12841":[398,16,398,22],"12849":[398,16,398,22],"12857":[398,9,398,23],"12865":[400,9,400,17],"12873":[401,16,401,24],"12881":[401,16,401,24],"12889":[401,9,401,25],"12897":[403,12,403,30],"12905":[403,12,403,30],"12913":[403,5,403,31],"12921":[365,1,404,2],"12929":[365,1,404,2],"12937":[365,1,404,2],"12945":[365,1,404,2],"12953":[365,1,404,2],"12961":[365,1,404,2],"12969":[365,1,404,2],"12977":[365,1,404,2],"12985":[365,1,404,2],"12993":[365,1,404,2],"13001":[365,1,404,2],"13009":[406,5,406,26],"13017":[406,27,406,31],"13025":[406,33,406,37],"13033":[406,5,406,38],"13041":[406,5,406,39],"13049":[407,12,407,16],"13057":[407,12,407,25],"13065":[407,26,407,30],"13073":[407,12,407,31],"13081":[407,12,407,31],"13089":[407,5,407,32],"13097":[405,1,408,2],"13105":[405,1,408,2],"13113":[405,1,408,2],"13121":[405,1,408,2],"13129":[409,1,409,7],"13137":[409,1,409,17],"13145":[410,5,410,9],"13153":[410,5,410,19],"13161":[411,9,411,13],"13169":[412,9,412,13],"13177":[410,25,413,6],"13185":[410,5,413,7],"13187":[410,5,410,24],"13193":[410,5,413,8],"13201":[414,12,414,16],"13209":[414,12,414,16],"13217":[414,5,414,17],"13225":[409,26,415,2],"13233":[409,26,415,2],"13241":[409,26,415,2],"13249":[409,26,415,2],"13257":[409,26,415,2],"13265":[409,1,415,2],"13273":[409,1,415,3],"13281":[416,1,416,7],"13289":[416,1,416,17],"13297":[417,16,417,25],"13305":[417,26,417,27],"13313":[417,16,417,28],"13321":[417,16,417,28],"13329":[417,16,417,28],"13337":[418,9,418,22],"13345":[418,23,418,27],"13353":[418,9,418,28],"13361":[419,9,419,13],"13369":[419,9,419,15],"13377":[419,9,419,21],"13385":[419,9,419,25],"13393":[419,32,419,36],"13401":[419,32,419,38],"13409":[419,32,419,44],"13417":[419,46,419,55],"13425":[419,9,419,56],"13427":[419,9,419,31],"13433":[419,9,419,57],"13441":[420,16,420,20],"13449":[420,16,420,20],"13457":[420,9,420,21],"13465":[422,12,422,16],"13473":[422,23,422,28],"13481":[422,30,422,39],"13489":[422,12,422,40],"13491":[422,12,422,22],"13497":[422,12,422,40],"13505":[422,5,422,41],"13513":[416,24,423,2],"13521":[416,24,423,2],"13529":[416,24,423,2],"13537":[416,24,423,2],"13545":[416,1,423,2],"13553":[416,1,423,3],"13561":[424,1,424,7],"13569":[424,1,424,17],"13577":[425,9,425,22],"13585":[425,23,425,29],"13593":[425,9,425,30],"13601":[426,9,426,13],"13609":[426,9,426,15],"13617":[426,9,426,21],"13625":[426,9,426,26],"13633":[426,33,426,37],"13641":[426,33,426,39],"13649":[426,33,426,45],"13657":[426,47,426,56],"13665":[426,9,426,57],"13667":[426,9,426,32],"13673":[426,9,426,58],"13681":[427,16,427,20],"13689":[427,16,427,20],"13697":[427,9,427,21],"13705":[429,9,429,11],"13713":[429,9,429,18],"13721":[429,21,429,22],"13729":[430,16,430,20],"13737":[430,27,430,31],"13745":[431,13,431,22],"13753":[431,23,431,24],"13761":[431,13,431,25],"13769":[433,24,433,26],"13777":[433,32,433,35],"13785":[433,37,433,40],"13793":[433,24,433,41],"13795":[433,24,433,31],"13801":[433,24,433,41],"13809":[433,17,433,42],"13817":[432,13,434,14],"13825":[432,13,434,14],"13833":[432,13,434,14],"13841":[432,13,434,14],"13849":[430,33,435,10],"13857":[430,16,435,11],"13859":[430,16,430,26],"13865":[430,16,435,11],"13873":[430,9,435,12],"13881":[437,12,437,16],"13889":[437,23,437,29],"13897":[438,9,438,18],"13905":[438,19,438,20],"13913":[438,9,438,21],"13921":[440,24,440,28],"13929":[440,24,440,28],"13937":[440,24,440,28],"13945":[441,24,441,29],"13953":[441,24,441,39],"13961":[441,24,441,45],"13969":[441,51,441,60],"13977":[441,62,441,63],"13985":[441,24,441,64],"13987":[441,24,441,50],"13993":[441,24,441,64],"14001":[441,24,441,64],"14009":[442,13,442,15],"14017":[442,21,442,25],"14025":[442,27,442,31],"14033":[443,24,443,28],"14041":[443,35,443,39],"14049":[443,42,443,45],"14057":[443,41,443,46],"14065":[443,54,443,58],"14073":[443,41,443,59],"14075":[443,41,443,53],"14081":[443,24,443,60],"14083":[443,24,443,34],"14089":[443,24,443,60],"14097":[443,17,443,61],"14105":[442,33,444,14],"14113":[442,33,444,14],"14121":[442,33,444,14],"14129":[442,33,444,14],"14137":[442,13,444,15],"14139":[442,13,442,20],"14145":[442,13,444,16],"14153":[439,9,445,10],"14161":[439,9,445,10],"14169":[439,9,445,10],"14177":[439,9,445,10],"14185":[439,9,445,10],"14193":[439,9,445,10],"14201":[437,31,446,6],"14209":[437,12,446,7],"14211":[437,12,437,22],"14217":[437,12,446,7],"14225":[437,5,446,8],"14233":[424,25,447,2],"14241":[424,25,447,2],"14249":[424,25,447,2],"14257":[424,25,447,2],"14265":[424,25,447,2],"14273":[424,1,447,2],"14281":[424,1,447,3],"14289":[448,1,448,7],"14297":[448,1,448,17],"14305":[449,5,449,7],"14313":[449,8,449,12],"14321":[449,14,449,18],"14329":[449,5,449,19],"14337":[449,5,449,20],"14345":[450,12,450,16],"14353":[450,12,450,16],"14361":[450,5,450,17],"14369":[448,27,451,2],"14377":[448,27,451,2],"14385":[448,27,451,2],"14393":[448,27,451,2],"14401":[448,27,451,2],"14409":[448,1,451,2],"14417":[448,1,451,3],"14425":[452,1,452,7],"14433":[452,1,452,17],"14441":[453,9,453,17],"14449":[453,28,453,32],"14457":[454,23,454,27],"14465":[455,13,455,17],"14473":[455,13,455,25],"14481":[455,26,455,27],"14489":[455,31,455,35],"14497":[455,36,455,37],"14505":[455,31,455,38],"14513":[455,13,455,38],"14521":[455,13,455,39],"14529":[454,23,454,27],"14537":[454,9,455,39],"14545":[454,9,455,39],"14553":[457,9,457,13],"14561":[457,9,457,21],"14569":[457,22,457,26],"14577":[457,30,457,32],"14585":[457,9,457,32],"14593":[457,9,457,33],"14601":[458,12,458,16],"14609":[458,12,458,16],"14617":[458,5,458,17],"14625":[452,27,459,2],"14633":[452,27,459,2],"14641":[452,27,459,2],"14649":[452,27,459,2],"14657":[452,27,459,2],"14665":[452,27,459,2],"14673":[452,1,459,2],"14681":[452,1,459,3],"14689":[460,1,460,7],"14697":[460,1,460,17],"14705":[461,9,461,17],"14713":[461,28,461,32],"14721":[462,23,462,27],"14729":[463,13,463,17],"14737":[463,13,463,25],"14745":[463,26,463,27],"14753":[463,31,463,35],"14761":[463,36,463,37],"14769":[463,31,463,38],"14777":[463,13,463,38],"14785":[463,13,463,39],"14793":[462,23,462,27],"14801":[462,9,463,39],"14809":[462,9,463,39],"14817":[465,9,465,13],"14825":[465,9,465,21],"14833":[465,22,465,26],"14841":[465,30,465,32],"14849":[465,9,465,32],"14857":[465,9,465,33],"14865":[466,12,466,16],"14873":[466,12,466,16],"14881":[466,5,466,17],"14889":[460,27,467,2],"14897":[460,27,467,2],"14905":[460,27,467,2],"14913":[460,27,467,2],"14921":[460,27,467,2],"14929":[460,27,467,2],"14937":[460,1,467,2],"14945":[460,1,467,3],"14953":[468,1,468,7],"14961":[468,1,468,17],"14969":[469,5,469,12],"14977":[469,27,469,29],"14985":[469,27,469,29],"14993":[469,5,469,31],"15001":[470,9,470,16],"15009":[470,9,470,24],"15017":[471,9,471,14],"15025":[471,23,471,30],"15033":[471,9,471,31],"15035":[471,9,471,22],"15041":[471,9,471,32],"15049":[472,5,472,9],"15057":[472,5,472,18],"15065":[473,9,473,15],"15073":[474,9,474,16],"15081":[472,24,475,6],"15089":[472,5,475,7],"15091":[472,5,472,23],"15097":[472,5,475,8],"15105":[476,12,476,16],"15113":[476,12,476,16],"15121":[476,5,476,17],"15129":[468,26,477,2],"15137":[468,26,477,2],"15145":[468,26,477,2],"15153":[468,26,477,2],"15161":[468,26,477,2],"15169":[468,1,477,2],"15177":[468,1,477,3],"15185":[478,1,478,7],"15193":[478,1,478,17],"15201":[479,9,479,10],"15209":[479,15,479,24],"15217":[479,15,479,31],"15225":[480,16,480,20],"15233":[480,16,480,28],"15241":[480,29,480,32],"15249":[480,16,480,33],"15257":[480,16,480,33],"15265":[480,9,480,34],"15273":[482,13,482,16],"15281":[484,9,484,13],"15289":[484,9,484,21],"15297":[484,22,484,25],"15305":[484,29,484,37],"15313":[484,38,484,43],"15321":[484,45,484,50],"15329":[484,29,484,51],"15337":[484,9,484,51],"15345":[484,9,484,52],"15353":[483,10,483,16],"15361":[487,9,487,13],"15369":[487,9,487,21],"15377":[487,22,487,25],"15385":[487,29,487,34],"15393":[487,39,487,44],"15401":[487,52,487,53],"15409":[487,47,487,55],"15417":[487,58,487,63],"15425":[487,9,487,63],"15433":[487,9,487,64],"15441":[486,10,486,16],"15449":[490,9,490,13],"15457":[490,9,490,21],"15465":[490,22,490,25],"15473":[490,29,490,34],"15481":[490,9,490,34],"15489":[490,9,490,35],"15497":[492,12,492,16],"15505":[492,12,492,16],"15513":[492,5,492,17],"15521":[478,24,493,2],"15529":[478,24,493,2],"15537":[478,24,493,2],"15545":[478,24,493,2],"15553":[478,24,493,2],"15561":[478,24,493,2],"15569":[478,1,493,2],"15577":[478,1,493,3],"15585":[494,1,494,7],"15593":[494,1,494,17],"15601":[495,12,495,16],"15609":[495,12,495,24],"15617":[495,25,495,28],"15625":[495,12,495,29],"15633":[495,12,495,29],"15641":[495,5,495,30],"15649":[494,24,496,2],"15657":[494,24,496,2],"15665":[494,24,496,2],"15673":[494,24,496,2],"15681":[494,1,496,2],"15689":[494,1,496,3],"15697":[497,18,497,43],"15705":[497,50,497,53],"15713":[497,18,497,54],"15715":[497,18,497,49],"15721":[497,18,497,54],"15729":[497,18,497,54],"15737":[498,1,498,7],"15745":[498,23,498,29],"15753":[498,31,498,43],"15761":[500,16,500,26],"15769":[500,16,500,26],"15777":[500,9,500,27],"15785":[499,10,501,6],"15793":[499,10,501,6],"15801":[499,10,501,6],"15809":[503,19,503,24],"15817":[503,25,503,61],"15825":[503,15,503,62],"15833":[503,15,503,62],"15841":[503,9,503,63],"15849":[502,10,504,6],"15857":[502,10,504,6],"15865":[502,10,504,6],"15873":[498,45,505,2],"15881":[498,1,505,3],"15883":[498,1,498,22],"15889":[498,1,505,4],"15897":[506,1,506,7],"15905":[506,1,506,17],"15913":[507,5,507,17],"15921":[507,5,507,18],"15929":[508,19,508,21],"15937":[508,19,508,21],"15945":[508,19,508,21],"15953":[509,22,509,24],"15961":[509,22,509,24],"15969":[509,22,509,24],"15977":[511,13,511,23],"15985":[511,24,511,30],"15993":[511,13,511,31],"16001":[512,13,512,20],"16009":[512,13,512,20],"16017":[514,9,514,19],"16025":[514,20,514,26],"16033":[514,30,514,34],"16041":[514,9,514,34],"16049":[514,9,514,35],"16057":[515,18,515,24],"16065":[515,28,515,30],"16073":[515,18,515,30],"16081":[515,9,515,31],"16089":[517,20,517,26],"16097":[517,32,517,38],"16105":[517,32,517,44],"16113":[517,20,517,45],"16115":[517,20,517,31],"16121":[517,20,517,45],"16129":[517,20,517,45],"16137":[518,22,518,23],"16145":[518,22,518,23],"16153":[518,22,518,23],"16161":[518,25,518,26],"16169":[518,29,518,33],"16177":[518,29,518,40],"16193":[518,44,518,45],"16201":[518,42,518,45],"16209":[519,19,519,23],"16217":[519,24,519,25],"16225":[519,19,519,26],"16233":[519,19,519,26],"16241":[519,13,519,27],"16249":[520,20,520,26],"16257":[520,20,520,32],"16265":[520,33,520,36],"16273":[520,20,520,37],"16281":[520,20,520,37],"16289":[520,13,520,38],"16297":[521,17,521,21],"16305":[521,33,521,46],"16313":[521,33,521,60],"16321":[522,17,522,31],"16329":[522,32,522,36],"16337":[522,32,522,43],"16345":[522,45,522,48],"16353":[522,51,522,54],"16361":[522,17,522,55],"16369":[522,17,522,56],"16377":[523,24,523,28],"16385":[523,24,523,44],"16393":[524,17,524,31],"16401":[524,32,524,36],"16409":[524,32,524,43],"16417":[524,45,524,48],"16425":[524,51,524,54],"16433":[524,17,524,55],"16441":[524,17,524,56],"16449":[526,25,526,29],"16457":[526,25,526,36],"16465":[526,25,526,36],"16473":[526,17,526,37],"16481":[527,21,527,26],"16489":[527,31,527,36],"16497":[527,40,527,44],"16505":[527,48,527,53],"16513":[528,29,528,31],"16521":[528,29,528,31],"16529":[528,21,528,32],"16537":[529,32,529,37],"16545":[529,47,529,52],"16553":[529,32,529,53],"16555":[529,32,529,46],"16561":[529,32,529,53],"16569":[529,21,529,54],"16577":[530,31,530,39],"16585":[530,42,530,47],"16593":[530,50,530,52],"16601":[530,31,530,52],"16609":[530,21,530,53],"16617":[531,28,531,36],"16625":[531,47,531,52],"16633":[531,55,531,60],"16641":[531,63,531,71],"16649":[531,74,531,79],"16657":[531,74,531,84],"16665":[531,87,531,92],"16673":[531,28,531,92],"16681":[531,21,531,93],"16689":[532,25,532,29],"16697":[532,34,532,40],"16705":[532,34,532,51],"16713":[532,60,532,64],"16721":[532,34,532,65],"16723":[532,34,532,59],"16729":[533,25,533,30],"16737":[533,31,533,37],"16745":[533,40,533,43],"16753":[533,47,533,51],"16761":[533,25,533,51],"16769":[533,25,533,52],"16777":[535,25,535,30],"16785":[535,31,535,37],"16793":[535,40,535,43],"16801":[535,47,535,48],"16809":[535,25,535,48],"16817":[535,25,535,49],"16825":[537,28,537,35],"16833":[537,21,537,41],"16841":[538,27,538,39],"16849":[538,43,538,50],"16857":[539,25,539,32],"16865":[539,46,539,50],"16873":[539,25,539,50],"16881":[539,25,539,51],"16889":[541,21,541,28],"16897":[542,25,542,30],"16905":[543,25,543,32],"16913":[541,34,544,22],"16921":[541,21,544,23],"16923":[541,21,541,33],"16929":[541,21,544,24],"16937":[548,13,548,19],"16945":[549,13,549,29],"16953":[549,30,549,36],"16961":[549,38,549,44],"16969":[549,13,549,45],"16977":[549,13,549,46],"16985":[551,13,551,19],"16993":[551,13,551,28],"17001":[552,23,552,35],"17009":[552,39,552,44],"17017":[552,45,552,46],"17025":[552,39,552,47],"17033":[553,21,553,26],"17041":[553,27,553,28],"17049":[553,21,553,29],"17057":[553,43,553,47],"17065":[553,21,553,47],"17073":[553,21,553,48],"17081":[551,37,554,14],"17089":[551,37,554,14],"17097":[551,37,554,14],"17105":[551,37,554,14],"17113":[551,13,554,15],"17115":[551,13,551,36],"17121":[551,13,554,16],"17129":[555,23,555,30],"17137":[555,38,555,44],"17145":[555,38,555,53],"17153":[555,23,555,54],"17155":[555,23,555,37],"17161":[555,23,555,54],"17169":[555,13,555,55],"17177":[510,26,557,6],"17185":[510,26,557,6],"17193":[510,26,557,6],"17201":[510,26,557,6],"17209":[510,26,557,6],"17217":[510,26,557,6],"17225":[510,26,557,6],"17233":[510,26,557,6],"17241":[510,26,557,6],"17249":[510,26,557,6],"17257":[510,26,557,6],"17265":[510,26,557,6],"17273":[510,26,557,6],"17281":[510,26,557,6],"17289":[510,26,557,6],"17297":[510,26,557,6],"17305":[558,5,558,19],"17313":[558,20,558,24],"17321":[558,5,558,25],"17329":[558,5,558,26],"17337":[559,12,559,19],"17345":[559,12,559,19],"17353":[559,5,559,20],"17361":[561,26,561,32],"17369":[561,26,561,41],"17377":[561,49,561,59],"17385":[561,49,561,66],"17393":[561,109,561,110],"17401":[561,26,561,41],"17409":[561,26,561,41],"17417":[561,49,561,66],"17425":[561,49,561,66],"17433":[561,109,561,110],"17441":[561,109,561,110],"17449":[562,18,562,19],"17457":[562,18,562,19],"17465":[562,21,562,22],"17473":[562,25,562,28],"17489":[562,32,562,33],"17497":[562,30,562,33],"17505":[563,24,563,34],"17513":[563,35,563,36],"17521":[563,24,563,37],"17529":[563,38,563,39],"17537":[563,24,563,40],"17545":[563,24,563,40],"17553":[563,13,563,41],"17561":[564,20,564,26],"17569":[564,32,564,40],"17577":[564,20,564,41],"17579":[564,20,564,31],"17585":[564,20,564,41],"17593":[564,13,564,42],"17601":[565,20,565,24],"17609":[565,20,565,31],"17617":[565,20,565,31],"17625":[565,13,565,32],"17633":[566,24,566,26],"17641":[566,24,566,26],"17649":[566,13,566,27],"17657":[567,22,567,23],"17665":[567,22,567,23],"17673":[567,25,567,26],"17681":[567,29,567,33],"17697":[567,37,567,38],"17705":[567,35,567,38],"17713":[568,23,568,27],"17721":[568,28,568,29],"17729":[568,23,568,30],"17737":[568,23,568,30],"17745":[568,17,568,31],"17753":[569,17,569,25],"17761":[569,26,569,32],"17769":[569,35,569,38],"17777":[569,42,569,50],"17785":[569,51,569,54],"17793":[569,42,569,55],"17801":[569,17,569,55],"17809":[569,17,569,56],"17817":[571,13,571,20],"17825":[572,17,572,25],"17833":[573,17,573,27],"17841":[573,28,573,29],"17849":[573,17,573,30],"17857":[573,31,573,32],"17865":[573,17,573,33],"17873":[571,26,574,14],"17881":[571,13,574,15],"17883":[571,13,571,25],"17889":[571,13,574,16],"17897":[560,5,576,6],"17905":[560,5,576,6],"17913":[560,5,576,6],"17921":[560,5,576,6],"17929":[560,5,576,6],"17937":[560,5,576,6],"17945":[560,5,576,6],"17953":[560,5,576,6],"17961":[560,5,576,6],"17969":[560,5,576,6],"17977":[560,5,576,6],"17985":[560,5,576,6],"17993":[560,5,576,6],"18001":[506,28,577,2],"18009":[506,28,577,2],"18017":[506,28,577,2],"18025":[506,28,577,2],"18033":[506,28,577,2],"18041":[560,5,576,6],"18049":[506,28,577,2],"18057":[506,28,577,2],"18065":[506,1,577,2],"18073":[506,1,577,3],"18081":[578,1,578,7],"18089":[578,1,578,17],"18097":[579,20,579,24],"18105":[579,20,579,33],"18113":[579,20,579,33],"18121":[579,20,579,33],"18129":[580,17,580,21],"18137":[580,28,580,31],"18145":[580,17,580,32],"18147":[580,17,580,27],"18153":[580,17,580,32],"18161":[580,17,580,32],"18169":[581,12,581,20],"18177":[581,21,581,25],"18185":[581,29,581,34],"18193":[582,9,582,12],"18201":[582,13,582,17],"18209":[582,9,582,18],"18217":[582,23,582,26],"18225":[582,27,582,31],"18233":[582,35,582,36],"18241":[582,41,582,46],"18249":[582,41,582,53],"18257":[582,56,582,57],"18265":[582,64,582,75],"18273":[582,76,582,83],"18281":[582,85,582,89],"18289":[582,60,582,90],"18297":[582,93,582,95],"18305":[582,23,582,95],"18313":[582,9,582,97],"18321":[583,16,583,19],"18329":[583,20,583,24],"18337":[583,16,583,25],"18345":[583,16,583,25],"18353":[583,9,583,26],"18361":[581,42,584,6],"18369":[581,42,584,6],"18377":[581,42,584,6],"18385":[581,42,584,6],"18393":[581,42,584,6],"18401":[581,42,584,6],"18409":[584,8,584,12],"18417":[584,8,584,17],"18425":[581,29,584,18],"18427":[581,29,581,41],"18433":[581,12,584,18],"18441":[581,12,584,18],"18449":[581,5,584,19],"18457":[578,28,585,2],"18465":[578,28,585,2],"18473":[578,28,585,2],"18481":[578,28,585,2],"18489":[578,28,585,2],"18497":[578,28,585,2],"18505":[578,28,585,2],"18513":[578,1,585,2],"18521":[578,1,585,3],"18529":[586,1,586,7],"18537":[586,1,586,17],"18545":[587,12,587,16],"18553":[587,12,587,25],"18561":[587,26,587,30],"18569":[587,12,587,31],"18577":[587,12,587,31],"18585":[587,5,587,32],"18593":[586,32,588,2],"18601":[586,32,588,2],"18609":[586,32,588,2],"18617":[586,32,588,2],"18625":[586,1,588,2],"18633":[586,1,588,3],"18641":[589,1,589,7],"18649":[589,1,589,17],"18657":[590,16,590,20],"18665":[590,25,590,33],"18673":[591,17,591,21],"18681":[591,16,591,22],"18689":[591,16,591,22],"18697":[591,9,591,23],"18705":[593,9,593,14],"18713":[593,23,593,27],"18721":[593,9,593,28],"18723":[593,9,593,22],"18729":[594,9,594,13],"18737":[595,17,595,21],"18745":[595,27,595,31],"18753":[595,17,595,32],"18755":[595,17,595,26],"18761":[596,24,596,28],"18769":[596,24,596,34],"18777":[596,35,596,39],"18785":[596,17,596,41],"18793":[594,22,598,10],"18801":[594,22,598,10],"18809":[594,22,598,10],"18817":[594,22,598,10],"18825":[598,12,598,16],"18833":[594,9,598,17],"18835":[594,9,594,21],"18841":[594,9,598,18],"18849":[589,27,600,2],"18857":[589,27,600,2],"18865":[589,27,600,2],"18873":[589,27,600,2],"18881":[589,1,600,2],"18889":[589,1,600,3],"18897":[601,1,601,7],"18905":[601,1,601,17],"18913":[602,18,602,22],"18921":[602,18,602,22],"18929":[602,18,602,22],"18937":[603,22,603,28],"18945":[603,34,603,38],"18953":[603,22,603,39],"18955":[603,22,603,33],"18961":[603,22,603,39],"18969":[603,22,603,39],"18977":[604,9,604,19],"18985":[605,16,605,26],"18993":[605,16,605,26],"19001":[605,9,605,27],"19009":[608,17,608,22],"19017":[608,17,608,29],"19025":[608,32,608,33],"19033":[608,17,608,33],"19041":[608,17,608,33],"19057":[609,16,609,17],"19065":[609,16,609,19],"19081":[610,23,610,28],"19089":[610,35,610,36],"19097":[610,38,610,39],"19105":[610,23,610,40],"19107":[610,23,610,34],"19113":[610,46,610,49],"19121":[610,23,610,50],"19123":[610,23,610,45],"19129":[610,23,610,50],"19137":[610,13,610,51],"19145":[611,27,611,33],"19153":[611,39,611,46],"19161":[611,27,611,47],"19163":[611,27,611,38],"19169":[611,27,611,47],"19177":[611,13,611,48],"19185":[612,17,612,28],"19193":[613,21,613,32],"19201":[613,21,613,39],"19209":[614,25,614,36],"19217":[614,25,614,43],"19225":[614,55,614,68],"19233":[614,55,614,74],"19241":[615,32,615,43],"19249":[615,32,615,50],"19257":[615,32,615,50],"19265":[615,25,615,51],"19273":[617,25,617,26],"19281":[617,31,617,36],"19289":[617,31,617,43],"19297":[617,47,617,58],"19305":[617,47,617,65],"19313":[618,29,618,32],"19321":[618,37,618,42],"19329":[618,43,618,44],"19337":[618,37,618,45],"19345":[619,36,619,42],"19353":[619,43,619,48],"19361":[619,55,619,56],"19369":[619,59,619,60],"19377":[619,43,619,61],"19379":[619,43,619,54],"19385":[619,63,619,74],"19393":[619,63,619,81],"19401":[619,36,619,82],"19409":[619,36,619,82],"19417":[619,29,619,83],"19425":[621,36,621,42],"19433":[621,43,621,48],"19441":[621,55,621,56],"19449":[621,43,621,57],"19451":[621,43,621,54],"19457":[621,59,621,70],"19465":[621,59,621,77],"19473":[621,36,621,78],"19481":[621,36,621,78],"19489":[621,29,621,79],"19497":[625,24,625,35],"19505":[625,24,625,35],"19513":[625,17,625,36],"19521":[607,12,628,6],"19529":[607,12,628,6],"19537":[607,12,628,6],"19545":[607,12,628,6],"19553":[607,12,628,6],"19561":[607,12,628,6],"19569":[607,12,628,6],"19577":[607,12,628,6],"19585":[607,12,628,6],"19593":[628,7,628,11],"19601":[628,18,628,21],"19609":[628,7,628,22],"19611":[628,7,628,17],"19617":[628,24,628,30],"19625":[607,12,628,31],"19633":[607,12,628,31],"19641":[607,5,628,32],"19649":[601,31,629,2],"19657":[601,31,629,2],"19665":[601,31,629,2],"19673":[601,31,629,2],"19681":[601,31,629,2],"19689":[601,31,629,2],"19697":[601,1,629,2],"19705":[601,1,629,3],"19713":[630,1,630,7],"19721":[630,28,630,34],"19729":[630,28,630,34],"19737":[630,1,630,34],"19745":[630,1,630,35],"19753":[631,1,631,7],"19761":[631,32,631,39],"19769":[631,40,631,56],"19777":[631,32,631,57],"19785":[631,32,631,57],"19793":[631,1,631,57],"19801":[631,1,631,58],"19809":[632,1,632,8],"19817":[632,20,632,33],"19825":[632,20,632,42],"19833":[632,1,632,42],"19841":[632,1,632,43],"19849":[1,1,632,43],"19857":[1,1,632,43],"19865":[1,1,632,43],"19873":[1,1,632,43],"19881":[1,1,632,43],"19889":[1,1,632,43],"19897":[1,1,632,43],"19905":[1,1,632,43],"19913":[1,1,632,43],"19921":[1,1,632,43],"19929":[1,1,632,43],"19937":[18,1,93,2],"19945":[1,1,632,43],"19953":[94,1,99,2],"19961":[1,1,632,43],"19969":[1,1,632,43],"19977":[1,1,632,43],"19985":[365,1,404,2],"19993":[1,1,632,43],"20001":[405,1,408,2],"20009":[1,1,632,43],"20017":[1,1,632,43],"20025":[19,5,20,41],"20033":[40,5,42,6],"20041":[45,5,49,6],"20049":[51,5,53,6],"20057":[54,5,57,6],"20065":[54,5,57,6],"20073":[62,9,64,10],"20081":[69,35,69,87],"20089":[68,13,70,14],"20097":[71,31,71,78],"20105":[66,26,73,10],"20113":[66,26,73,10],"20121":[74,26,83,10],"20129":[74,26,83,10],"20137":[84,38,87,10],"20145":[84,38,87,10],"20153":[88,28,91,10],"20161":[88,28,91,10],"20169":[59,5,92,6],"20177":[18,1,93,2],"20185":[18,1,93,2],"20193":[95,5,97,6],"20201":[98,27,98,69],"20209":[94,1,99,2],"20217":[94,1,99,2],"20225":[112,17,114,18],"20233":[117,17,121,18],"20241":[124,74,126,26],"20249":[124,74,126,26],"20257":[128,62,130,26],"20265":[128,62,130,26],"20273":[123,21,131,22],"20281":[122,17,134,18],"20289":[111,17,135,14],"20297":[111,17,135,14],"20305":[143,17,147,18],"20313":[150,33,152,22],"20321":[150,33,152,22],"20329":[148,37,153,18],"20337":[148,37,153,18],"20345":[154,21,156,22],"20353":[154,21,156,22],"20361":[157,21,160,22],"20369":[153,20,163,18],"20377":[153,20,163,18],"20385":[141,17,164,14],"20393":[141,17,164,14],"20401":[171,5,173,6],"20409":[174,5,176,6],"20417":[194,5,196,6],"20425":[170,35,198,2],"20433":[170,35,198,2],"20441":[204,9,206,10],"20449":[207,9,209,10],"20457":[211,13,216,14],"20465":[210,9,219,10],"20473":[202,5,220,6],"20481":[202,5,220,6],"20489":[199,24,221,2],"20497":[199,24,221,2],"20505":[229,9,230,37],"20513":[231,9,232,40],"20521":[233,9,235,10],"20529":[236,16,236,84],"20537":[228,5,237,6],"20545":[238,5,240,6],"20553":[241,5,243,6],"20561":[246,9,247,30],"20569":[248,9,251,10],"20577":[245,22,253,6],"20585":[245,22,253,6],"20593":[256,5,263,6],"20601":[227,25,265,2],"20609":[227,25,265,2],"20617":[269,9,273,10],"20625":[267,5,274,6],"20633":[275,16,275,114],"20641":[276,5,278,6],"20649":[280,20,280,73],"20657":[281,9,283,10],"20665":[288,13,290,14],"20673":[286,16,293,10],"20681":[284,9,293,10],"20689":[279,5,295,6],"20697":[296,5,298,6],"20705":[303,16,303,95],"20713":[300,5,304,6],"20721":[305,5,307,6],"20729":[308,5,310,6],"20737":[266,26,312,2],"20745":[266,26,312,2],"20753":[315,5,317,6],"20761":[315,5,317,6],"20769":[313,29,319,2],"20777":[313,29,319,2],"20785":[321,5,322,36],"20793":[326,9,327,28],"20801":[324,5,328,6],"20809":[320,34,330,2],"20817":[320,34,330,2],"20825":[332,5,333,35],"20833":[331,33,335,2],"20841":[331,33,335,2],"20849":[337,5,338,23],"20857":[339,5,340,26],"20865":[341,5,342,25],"20873":[343,5,344,23],"20881":[345,5,347,6],"20889":[348,5,352,6],"20897":[336,29,353,2],"20905":[336,29,353,2],"20913":[358,16,358,62],"20921":[359,9,361,10],"20929":[357,5,362,6],"20937":[357,5,362,6],"20945":[354,35,364,2],"20953":[354,35,364,2],"20961":[367,5,369,6],"20969":[372,5,373,20],"20977":[379,13,383,14],"20985":[378,9,385,10],"20993":[386,9,387,22],"21001":[388,9,391,10],"21009":[375,5,395,6],"21017":[375,5,395,6],"21025":[397,5,399,6],"21033":[400,5,402,6],"21041":[365,1,404,2],"21049":[365,1,404,2],"21057":[405,1,408,2],"21065":[405,1,408,2],"21073":[409,26,415,2],"21081":[409,26,415,2],"21089":[418,5,421,6],"21097":[416,24,423,2],"21105":[416,24,423,2],"21113":[425,5,428,6],"21121":[432,13,434,14],"21129":[432,13,434,14],"21137":[429,5,436,6],"21145":[442,33,444,14],"21153":[442,33,444,14],"21161":[439,9,445,10],"21169":[439,9,445,10],"21177":[424,25,447,2],"21185":[424,25,447,2],"21193":[448,27,451,2],"21201":[448,27,451,2],"21209":[453,5,457,33],"21217":[452,27,459,2],"21225":[452,27,459,2],"21233":[461,5,465,33],"21241":[460,27,467,2],"21249":[460,27,467,2],"21257":[470,5,471,32],"21265":[468,26,477,2],"21273":[468,26,477,2],"21281":[479,5,481,6],"21289":[487,29,487,63],"21297":[482,13,482,16],"21305":[483,10,483,16],"21313":[486,10,486,16],"21321":[478,24,493,2],"21329":[478,24,493,2],"21337":[494,24,496,2],"21345":[494,24,496,2],"21353":[499,10,501,6],"21361":[499,10,501,6],"21369":[502,10,504,6],"21377":[502,10,504,6],"21385":[511,9,513,10],"21393":[530,31,530,52],"21401":[531,63,531,92],"21409":[531,28,531,92],"21417":[532,21,536,22],"21425":[538,21,540,22],"21433":[527,17,545,18],"21441":[523,20,546,14],"21449":[521,13,546,14],"21457":[518,9,547,10],"21465":[518,9,547,10],"21473":[552,17,553,48],"21481":[551,37,554,14],"21489":[551,37,554,14],"21497":[548,9,556,10],"21505":[510,26,557,6],"21513":[510,26,557,6],"21521":[567,13,570,14],"21529":[567,13,570,14],"21537":[567,13,570,14],"21545":[562,9,575,10],"21553":[562,9,575,10],"21561":[562,9,575,10],"21569":[560,5,576,6],"21577":[560,5,576,6],"21585":[506,28,577,2],"21593":[506,28,577,2],"21601":[582,35,582,95],"21609":[581,42,584,6],"21617":[581,42,584,6],"21625":[578,28,585,2],"21633":[578,28,585,2],"21641":[586,32,588,2],"21649":[586,32,588,2],"21657":[590,5,592,6],"21665":[595,13,597,14],"21673":[594,22,598,10],"21681":[594,22,598,10],"21689":[593,5,599,6],"21697":[589,27,600,2],"21705":[589,27,600,2],"21713":[604,5,606,6],"21721":[614,21,616,22],"21729":[618,25,622,26],"21737":[617,21,623,22],"21745":[613,17,624,18],"21753":[612,13,626,14],"21761":[609,9,627,10],"21769":[607,12,628,6],"21777":[607,12,628,6],"21785":[601,31,629,2],"21793":[601,31,629,2],"21801":[1,1,632,43],"21809":[1,1,632,43],"nBranches":322,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/schema.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/schema_jalangi_.js","code":"/*!\n * Module dependencies.\n */\n\nvar readPref = require('./drivers').ReadPreference;\nvar EventEmitter = require('events').EventEmitter;\nvar VirtualType = require('./virtualtype');\nvar utils = require('./utils');\nvar MongooseTypes;\nvar Kareem = require('kareem');\nvar async = require('async');\n\nvar IS_QUERY_HOOK = {\n  count: true,\n  find: true,\n  findOne: true,\n  findOneAndUpdate: true,\n  findOneAndRemove: true,\n  update: true\n};\n\n/**\n * Schema constructor.\n *\n * ####Example:\n *\n *     var child = new Schema({ name: String });\n *     var schema = new Schema({ name: String, age: Number, children: [child] });\n *     var Tree = mongoose.model('Tree', schema);\n *\n *     // setting schema options\n *     new Schema({ name: String }, { _id: false, autoIndex: false })\n *\n * ####Options:\n *\n * - [autoIndex](/docs/guide.html#autoIndex): bool - defaults to null (which means use the connection's autoIndex option)\n * - [bufferCommands](/docs/guide.html#bufferCommands): bool - defaults to true\n * - [capped](/docs/guide.html#capped): bool - defaults to false\n * - [collection](/docs/guide.html#collection): string - no default\n * - [emitIndexErrors](/docs/guide.html#emitIndexErrors): bool - defaults to false.\n * - [id](/docs/guide.html#id): bool - defaults to true\n * - [_id](/docs/guide.html#_id): bool - defaults to true\n * - `minimize`: bool - controls [document#toObject](#document_Document-toObject) behavior when called manually - defaults to true\n * - [read](/docs/guide.html#read): string\n * - [safe](/docs/guide.html#safe): bool - defaults to true.\n * - [shardKey](/docs/guide.html#shardKey): bool - defaults to `null`\n * - [strict](/docs/guide.html#strict): bool - defaults to true\n * - [toJSON](/docs/guide.html#toJSON) - object - no default\n * - [toObject](/docs/guide.html#toObject) - object - no default\n * - [typeKey](/docs/guide.html#typeKey) - string - defaults to 'type'\n * - [validateBeforeSave](/docs/guide.html#validateBeforeSave) - bool - defaults to `true`\n * - [versionKey](/docs/guide.html#versionKey): string - defaults to \"__v\"\n *\n * ####Note:\n *\n * _When nesting schemas, (`children` in the example above), always declare the child schema first before passing it into its parent._\n *\n * @param {Object} definition\n * @inherits NodeJS EventEmitter http://nodejs.org/api/events.html#events_class_events_eventemitter\n * @event `init`: Emitted after the schema is compiled into a `Model`.\n * @api public\n */\n\nfunction Schema(obj, options) {\n  if (!(this instanceof Schema))\n    return new Schema(obj, options);\n\n  this.paths = {};\n  this.subpaths = {};\n  this.virtuals = {};\n  this.singleNestedPaths = {};\n  this.nested = {};\n  this.inherits = {};\n  this.callQueue = [];\n  this._indexes = [];\n  this.methods = {};\n  this.statics = {};\n  this.tree = {};\n  this._requiredpaths = undefined;\n  this.discriminatorMapping = undefined;\n  this._indexedpaths = undefined;\n\n  this.s = {\n    hooks: new Kareem(),\n    queryHooks: IS_QUERY_HOOK\n  };\n\n  this.options = this.defaultOptions(options);\n\n  // build paths\n  if (obj) {\n    this.add(obj);\n  }\n\n  // check if _id's value is a subdocument (gh-2276)\n  var _idSubDoc = obj && obj._id && utils.isObject(obj._id);\n\n  // ensure the documents get an auto _id unless disabled\n  var auto_id = !this.paths['_id'] &&\n    (!this.options.noId && this.options._id) && !_idSubDoc;\n\n  if (auto_id) {\n    obj = { _id: { auto: true } };\n    obj._id[this.options.typeKey] = Schema.ObjectId;\n    this.add(obj);\n  }\n\n  // ensure the documents receive an id getter unless disabled\n  var autoid = !this.paths['id'] &&\n    (!this.options.noVirtualId && this.options.id);\n  if (autoid) {\n    this.virtual('id').get(idGetter);\n  }\n\n  for (var i = 0; i < this._defaultMiddleware.length; ++i) {\n    var m = this._defaultMiddleware[i];\n    this[m.kind](m.hook, !!m.isAsync, m.fn);\n  }\n\n  // adds updatedAt and createdAt timestamps to documents if enabled\n  var timestamps = this.options.timestamps;\n  if (timestamps) {\n    var createdAt = timestamps.createdAt || 'createdAt',\n        updatedAt = timestamps.updatedAt || 'updatedAt',\n        schemaAdditions = {};\n\n    schemaAdditions[updatedAt] = Date;\n\n    if (!this.paths[createdAt]) {\n      schemaAdditions[createdAt] = Date;\n    }\n\n    this.add(schemaAdditions);\n\n    this.pre('save', function(next) {\n      var defaultTimestamp = new Date();\n\n      if (!this[createdAt]) {\n        this[createdAt] = auto_id ? this._id.getTimestamp() : defaultTimestamp;\n      }\n\n      this[updatedAt] = this.isNew ? this[createdAt] : defaultTimestamp;\n\n      next();\n    });\n\n    var genUpdates = function() {\n      var now = new Date();\n      var updates = {$set: {}, $setOnInsert: {}};\n      updates.$set[updatedAt] = now;\n      updates.$setOnInsert[createdAt] = now;\n\n      return updates;\n    };\n\n    this.pre('findOneAndUpdate', function(next) {\n      this.findOneAndUpdate({}, genUpdates());\n      next();\n    });\n\n    this.pre('update', function(next) {\n      this.update({}, genUpdates());\n      next();\n    });\n  }\n\n}\n\n/*!\n * Returns this documents _id cast to a string.\n */\n\nfunction idGetter() {\n  if (this.$__._id) {\n    return this.$__._id;\n  }\n\n  return this.$__._id = null == this._id\n    ? null\n    : String(this._id);\n}\n\n/*!\n * Inherit from EventEmitter.\n */\nSchema.prototype = Object.create( EventEmitter.prototype );\nSchema.prototype.constructor = Schema;\nSchema.prototype.instanceOfSchema = true;\n\n/**\n * Default middleware attached to a schema. Cannot be changed.\n *\n * This field is used to make sure discriminators don't get multiple copies of\n * built-in middleware. Declared as a constant because changing this at runtime\n * may lead to instability with Model.prototype.discriminator().\n *\n * @api private\n * @property _defaultMiddleware\n */\nObject.defineProperty(Schema.prototype, '_defaultMiddleware', {\n  configurable: false,\n  enumerable: false,\n  writable: false,\n  value: [{\n    kind: 'pre',\n    hook: 'save',\n    fn: function(next, options) {\n      // Nested docs have their own presave\n      if (this.ownerDocument) {\n        return next();\n      }\n\n      var hasValidateBeforeSaveOption = options &&\n        (typeof options === 'object') &&\n        ('validateBeforeSave' in options);\n\n      var shouldValidate;\n      if (hasValidateBeforeSaveOption) {\n        shouldValidate = !!options.validateBeforeSave;\n      } else {\n        shouldValidate = this.schema.options.validateBeforeSave;\n      }\n\n      // Validate\n      if (shouldValidate) {\n        // HACK: use $__original_validate to avoid promises so bluebird doesn't\n        // complain\n        if (this.$__original_validate) {\n          this.$__original_validate({ __noPromise: true }, function(error) {\n            next(error);\n          });\n        } else {\n          this.validate({ __noPromise: true }, function(error) {\n            next(error);\n          });\n        }\n      } else {\n        next();\n      }\n    }\n  }, {\n    kind: 'pre',\n    hook: 'save',\n    isAsync: true,\n    fn: function(next, done) {\n      var subdocs = this.$__getAllSubdocs();\n\n      if (!subdocs.length || this.$__preSavingFromParent) {\n        done();\n        next();\n        return;\n      }\n\n      async.each(subdocs, function(subdoc, cb) {\n        subdoc.$__preSavingFromParent = true;\n        subdoc.save(function(err) {\n          cb(err);\n        });\n      }, function(error) {\n        for (var i = 0; i < subdocs.length; ++i) {\n          delete subdocs[i].$__preSavingFromParent;\n        }\n        if (error) {\n          done(error);\n          return;\n        }\n        next();\n        done();\n      });\n    }\n  }]\n});\n\n/**\n * Schema as flat paths\n *\n * ####Example:\n *     {\n *         '_id'        : SchemaType,\n *       , 'nested.key' : SchemaType,\n *     }\n *\n * @api private\n * @property paths\n */\n\nSchema.prototype.paths;\n\n/**\n * Schema as a tree\n *\n * ####Example:\n *     {\n *         '_id'     : ObjectId\n *       , 'nested'  : {\n *             'key' : String\n *         }\n *     }\n *\n * @api private\n * @property tree\n */\n\nSchema.prototype.tree;\n\n/**\n * Returns default options for this schema, merged with `options`.\n *\n * @param {Object} options\n * @return {Object}\n * @api private\n */\n\nSchema.prototype.defaultOptions = function(options) {\n  if (options && false === options.safe) {\n    options.safe = { w: 0 };\n  }\n\n  if (options && options.safe && 0 === options.safe.w) {\n    // if you turn off safe writes, then versioning goes off as well\n    options.versionKey = false;\n  }\n\n  options = utils.options({\n    strict: true,\n    bufferCommands: true,\n    capped: false, // { size, max, autoIndexId }\n    versionKey: '__v',\n    discriminatorKey: '__t',\n    minimize: true,\n    autoIndex: null,\n    shardKey: null,\n    read: null,\n    validateBeforeSave: true,\n    // the following are only applied at construction time\n    noId: false, // deprecated, use { _id: false }\n    _id: true,\n    noVirtualId: false, // deprecated, use { id: false }\n    id: true,\n    typeKey: 'type'\n  }, options);\n\n  if (options.read) {\n    options.read = readPref(options.read);\n  }\n\n  return options;\n};\n\n/**\n * Adds key path / schema type pairs to this schema.\n *\n * ####Example:\n *\n *     var ToySchema = new Schema;\n *     ToySchema.add({ name: 'string', color: 'string', price: 'number' });\n *\n * @param {Object} obj\n * @param {String} prefix\n * @api public\n */\n\nSchema.prototype.add = function add(obj, prefix) {\n  prefix = prefix || '';\n  var keys = Object.keys(obj);\n\n  for (var i = 0; i < keys.length; ++i) {\n    var key = keys[i];\n\n    if (null == obj[key]) {\n      throw new TypeError('Invalid value for schema path `' + prefix + key + '`');\n    }\n\n    if (Array.isArray(obj[key]) && obj[key].length === 1 && null == obj[key][0]) {\n      throw new TypeError('Invalid value for schema Array path `' + prefix + key + '`');\n    }\n\n    if (utils.isObject(obj[key]) &&\n        (!obj[key].constructor || 'Object' == utils.getFunctionName(obj[key].constructor)) &&\n        (!obj[key][this.options.typeKey] || (this.options.typeKey === 'type' && obj[key].type.type))) {\n      if (Object.keys(obj[key]).length) {\n        // nested object { last: { name: String }}\n        this.nested[prefix + key] = true;\n        this.add(obj[key], prefix + key + '.');\n      } else {\n        this.path(prefix + key, obj[key]); // mixed type\n      }\n    } else {\n      this.path(prefix + key, obj[key]);\n    }\n  }\n};\n\n/**\n * Reserved document keys.\n *\n * Keys in this object are names that are rejected in schema declarations b/c they conflict with mongoose functionality. Using these key name will throw an error.\n *\n *      on, emit, _events, db, get, set, init, isNew, errors, schema, options, modelName, collection, _pres, _posts, toObject\n *\n * _NOTE:_ Use of these terms as method names is permitted, but play at your own risk, as they may be existing mongoose document methods you are stomping on.\n *\n *      var schema = new Schema(..);\n *      schema.methods.init = function () {} // potentially breaking\n */\n\nSchema.reserved = Object.create(null);\nvar reserved = Schema.reserved;\n// EventEmitter\nreserved.emit =\nreserved.on =\nreserved.once =\nreserved.listeners =\nreserved.removeListener =\n// document properties and functions\nreserved.collection =\nreserved.db =\nreserved.errors =\nreserved.init =\nreserved.isModified =\nreserved.isNew =\nreserved.get =\nreserved.modelName =\nreserved.save =\nreserved.schema =\nreserved.set =\nreserved.toObject =\nreserved.validate =\n// hooks.js\nreserved._pres = reserved._posts = 1;\n\n/**\n * Document keys to print warnings for\n */\n\nvar warnings = {};\nwarnings.increment = '`increment` should not be used as a schema path name ' +\n  'unless you have disabled versioning.';\n\n/**\n * Gets/sets schema paths.\n *\n * Sets a path (if arity 2)\n * Gets a path (if arity 1)\n *\n * ####Example\n *\n *     schema.path('name') // returns a SchemaType\n *     schema.path('name', Number) // changes the schemaType of `name` to Number\n *\n * @param {String} path\n * @param {Object} constructor\n * @api public\n */\n\nSchema.prototype.path = function(path, obj) {\n  if (obj == undefined) {\n    if (this.paths[path]) return this.paths[path];\n    if (this.subpaths[path]) return this.subpaths[path];\n    if (this.singleNestedPaths[path]) {\n      return this.singleNestedPaths[path];\n    }\n\n    // subpaths?\n    return /\\.\\d+\\.?.*$/.test(path)\n      ? getPositionalPath(this, path)\n      : undefined;\n  }\n\n  // some path names conflict with document methods\n  if (reserved[path]) {\n    throw new Error(\"`\" + path + \"` may not be used as a schema pathname\");\n  }\n\n  if (warnings[path]) {\n    console.log('WARN: ' + warnings[path]);\n  }\n\n  // update the tree\n  var subpaths = path.split(/\\./),\n      last = subpaths.pop(),\n      branch = this.tree;\n\n  subpaths.forEach(function(sub, i) {\n    if (!branch[sub]) branch[sub] = {};\n    if ('object' != typeof branch[sub]) {\n      var msg = 'Cannot set nested path `' + path + '`. '\n              + 'Parent path `'\n              + subpaths.slice(0, i).concat([sub]).join('.')\n              + '` already set to type ' + branch[sub].name\n              + '.';\n      throw new Error(msg);\n    }\n    branch = branch[sub];\n  });\n\n  branch[last] = utils.clone(obj);\n\n  this.paths[path] = Schema.interpretAsType(path, obj, this.options);\n  if (this.paths[path].$isSingleNested) {\n    for (var key in this.paths[path].schema.paths) {\n      this.singleNestedPaths[path + '.' + key] =\n        this.paths[path].schema.paths[key];\n    }\n    for (key in this.paths[path].schema.singleNestedPaths) {\n      this.singleNestedPaths[path + '.' + key] =\n        this.paths[path].schema.singleNestedPaths[key];\n    }\n  }\n  return this;\n};\n\n/**\n * Converts type arguments into Mongoose Types.\n *\n * @param {String} path\n * @param {Object} obj constructor\n * @api private\n */\n\nSchema.interpretAsType = function(path, obj, options) {\n  if (obj.constructor) {\n    var constructorName = utils.getFunctionName(obj.constructor);\n    if (constructorName != 'Object') {\n      var oldObj = obj;\n      obj = {};\n      obj[options.typeKey] = oldObj;\n    }\n  }\n\n  // Get the type making sure to allow keys named \"type\"\n  // and default to mixed if not specified.\n  // { type: { type: String, default: 'freshcut' } }\n  var type = obj[options.typeKey] && (options.typeKey !== 'type' || !obj.type.type)\n    ? obj[options.typeKey]\n    : {};\n\n  if ('Object' == utils.getFunctionName(type.constructor) || 'mixed' == type) {\n    return new MongooseTypes.Mixed(path, obj);\n  }\n\n  if (Array.isArray(type) || Array == type || 'array' == type) {\n    // if it was specified through { type } look for `cast`\n    var cast = (Array == type || 'array' == type)\n      ? obj.cast\n      : type[0];\n\n    if (cast && cast.instanceOfSchema) {\n      return new MongooseTypes.DocumentArray(path, cast, obj);\n    }\n\n    if ('string' == typeof cast) {\n      cast = MongooseTypes[cast.charAt(0).toUpperCase() + cast.substring(1)];\n    } else if (cast && (!cast[options.typeKey] || (options.typeKey === 'type' && cast.type.type))\n                    && 'Object' == utils.getFunctionName(cast.constructor)\n                    && Object.keys(cast).length) {\n\n      // The `minimize` and `typeKey` options propagate to child schemas\n      // declared inline, like `{ arr: [{ val: { $type: String } }] }`.\n      // See gh-3560\n      var childSchemaOptions = { minimize: options.minimize };\n      if (options.typeKey) {\n        childSchemaOptions.typeKey = options.typeKey;\n      }\n      var childSchema = new Schema(cast, childSchemaOptions);\n      return new MongooseTypes.DocumentArray(path, childSchema, obj);\n    }\n\n    return new MongooseTypes.Array(path, cast || MongooseTypes.Mixed, obj);\n  }\n\n  if (type && type.instanceOfSchema) {\n    return new MongooseTypes.Embedded(type, path, obj);\n  }\n\n  var name;\n  if (Buffer.isBuffer(type)) {\n    name = 'Buffer';\n  } else {\n    name = 'string' == typeof type\n      ? type\n      // If not string, `type` is a function. Outside of IE, function.name\n      // gives you the function name. In IE, you need to compute it\n      : type.schemaName || utils.getFunctionName(type);\n  }\n\n  if (name) {\n    name = name.charAt(0).toUpperCase() + name.substring(1);\n  }\n\n  if (undefined == MongooseTypes[name]) {\n    throw new TypeError('Undefined type `' + name + '` at `' + path +\n        '`\\n  Did you try nesting Schemas? ' +\n        'You can only nest using refs or arrays.');\n  }\n\n  return new MongooseTypes[name](path, obj);\n};\n\n/**\n * Iterates the schemas paths similar to Array#forEach.\n *\n * The callback is passed the pathname and schemaType as arguments on each iteration.\n *\n * @param {Function} fn callback function\n * @return {Schema} this\n * @api public\n */\n\nSchema.prototype.eachPath = function(fn) {\n  var keys = Object.keys(this.paths),\n      len = keys.length;\n\n  for (var i = 0; i < len; ++i) {\n    fn(keys[i], this.paths[keys[i]]);\n  }\n\n  return this;\n};\n\n/**\n * Returns an Array of path strings that are required by this schema.\n *\n * @api public\n * @param {Boolean} invalidate refresh the cache\n * @return {Array}\n */\n\nSchema.prototype.requiredPaths = function requiredPaths(invalidate) {\n  if (this._requiredpaths && !invalidate) return this._requiredpaths;\n\n  var paths = Object.keys(this.paths),\n      i = paths.length,\n      ret = [];\n\n  while (i--) {\n    var path = paths[i];\n    if (this.paths[path].isRequired) ret.push(path);\n  }\n\n  return this._requiredpaths = ret;\n};\n\n/**\n * Returns indexes from fields and schema-level indexes (cached).\n *\n * @api private\n * @return {Array}\n */\n\nSchema.prototype.indexedPaths = function indexedPaths() {\n  if (this._indexedpaths) return this._indexedpaths;\n\n  return this._indexedpaths = this.indexes();\n};\n\n/**\n * Returns the pathType of `path` for this schema.\n *\n * Given a path, returns whether it is a real, virtual, nested, or ad-hoc/undefined path.\n *\n * @param {String} path\n * @return {String}\n * @api public\n */\n\nSchema.prototype.pathType = function(path) {\n  if (path in this.paths) return 'real';\n  if (path in this.virtuals) return 'virtual';\n  if (path in this.nested) return 'nested';\n  if (path in this.subpaths) return 'real';\n  if (path in this.singleNestedPaths) {\n    return 'real';\n  }\n\n  if (/\\.\\d+\\.|\\.\\d+$/.test(path)) {\n    return getPositionalPathType(this, path);\n  } else {\n    return 'adhocOrUndefined';\n  }\n};\n\n/**\n * Returns true iff this path is a child of a mixed schema.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nSchema.prototype.hasMixedParent = function(path) {\n  var subpaths = path.split(/\\./g);\n  path = '';\n  for (var i = 0; i < subpaths.length; ++i) {\n    path = i > 0 ? path + '.' + subpaths[i] : subpaths[i];\n    if (path in this.paths &&\n        this.paths[path] instanceof MongooseTypes.Mixed) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\n/*!\n * ignore\n */\n\nfunction getPositionalPathType(self, path) {\n  var subpaths = path.split(/\\.(\\d+)\\.|\\.(\\d+)$/).filter(Boolean);\n  if (subpaths.length < 2) {\n    return self.paths[subpaths[0]];\n  }\n\n  var val = self.path(subpaths[0]);\n  var isNested = false;\n  if (!val) return val;\n\n  var last = subpaths.length - 1,\n      subpath,\n      i = 1;\n\n  for (; i < subpaths.length; ++i) {\n    isNested = false;\n    subpath = subpaths[i];\n\n    if (i === last && val && !val.schema && !/\\D/.test(subpath)) {\n      if (val instanceof MongooseTypes.Array) {\n        // StringSchema, NumberSchema, etc\n        val = val.caster;\n      } else {\n        val = undefined;\n      }\n      break;\n    }\n\n    // ignore if its just a position segment: path.0.subpath\n    if (!/\\D/.test(subpath)) continue;\n\n    if (!(val && val.schema)) {\n      val = undefined;\n      break;\n    }\n\n    var type = val.schema.pathType(subpath);\n    isNested = (type === 'nested');\n    val = val.schema.path(subpath);\n  }\n\n  self.subpaths[path] = val;\n  if (val) {\n    return 'real';\n  }\n  if (isNested) {\n    return 'nested';\n  }\n  return 'adhocOrUndefined';\n}\n\n\n/*!\n * ignore\n */\n\nfunction getPositionalPath(self, path) {\n  getPositionalPathType(self, path);\n  return self.subpaths[path];\n}\n\n/**\n * Adds a method call to the queue.\n *\n * @param {String} name name of the document method to call later\n * @param {Array} args arguments to pass to the method\n * @api public\n */\n\nSchema.prototype.queue = function(name, args) {\n  this.callQueue.push([name, args]);\n  return this;\n};\n\n/**\n * Defines a pre hook for the document.\n *\n * ####Example\n *\n *     var toySchema = new Schema(..);\n *\n *     toySchema.pre('save', function (next) {\n *       if (!this.created) this.created = new Date;\n *       next();\n *     })\n *\n *     toySchema.pre('validate', function (next) {\n *       if (this.name != 'Woody') this.name = 'Woody';\n *       next();\n *     })\n *\n * @param {String} method\n * @param {Function} callback\n * @see hooks.js https://github.com/bnoguchi/hooks-js/tree/31ec571cef0332e21121ee7157e0cf9728572cc3\n * @api public\n */\n\nSchema.prototype.pre = function() {\n  var name = arguments[0];\n  if (IS_QUERY_HOOK[name]) {\n    this.s.hooks.pre.apply(this.s.hooks, arguments);\n    return this;\n  }\n  return this.queue('pre', arguments);\n};\n\n/**\n * Defines a post hook for the document\n *\n * Post hooks fire `on` the event emitted from document instances of Models compiled from this schema.\n *\n *     var schema = new Schema(..);\n *     schema.post('save', function (doc) {\n *       console.log('this fired after a document was saved');\n *     });\n *\n *     var Model = mongoose.model('Model', schema);\n *\n *     var m = new Model(..);\n *     m.save(function (err) {\n *       console.log('this fires after the `post` hook');\n *     });\n *\n * @param {String} method name of the method to hook\n * @param {Function} fn callback\n * @see hooks.js https://github.com/bnoguchi/hooks-js/tree/31ec571cef0332e21121ee7157e0cf9728572cc3\n * @api public\n */\n\nSchema.prototype.post = function(method, fn) {\n  if (IS_QUERY_HOOK[method]) {\n    this.s.hooks.post.apply(this.s.hooks, arguments);\n    return this;\n  }\n  // assuming that all callbacks with arity < 2 are synchronous post hooks\n  if (fn.length < 2) {\n    return this.queue('on', [arguments[0], function(doc) {\n      return fn.call(doc, doc);\n    }]);\n  }\n\n  return this.queue('post', [arguments[0], function(next) {\n    // wrap original function so that the callback goes last,\n    // for compatibility with old code that is using synchronous post hooks\n    var self = this;\n    var args = Array.prototype.slice.call(arguments, 1);\n    fn.call(this, this, function(err) {\n      return next.apply(self, [err].concat(args));\n    });\n  }]);\n};\n\n/**\n * Registers a plugin for this schema.\n *\n * @param {Function} plugin callback\n * @param {Object} [opts]\n * @see plugins\n * @api public\n */\n\nSchema.prototype.plugin = function(fn, opts) {\n  fn(this, opts);\n  return this;\n};\n\n/**\n * Adds an instance method to documents constructed from Models compiled from this schema.\n *\n * ####Example\n *\n *     var schema = kittySchema = new Schema(..);\n *\n *     schema.method('meow', function () {\n *       console.log('meeeeeoooooooooooow');\n *     })\n *\n *     var Kitty = mongoose.model('Kitty', schema);\n *\n *     var fizz = new Kitty;\n *     fizz.meow(); // meeeeeooooooooooooow\n *\n * If a hash of name/fn pairs is passed as the only argument, each name/fn pair will be added as methods.\n *\n *     schema.method({\n *         purr: function () {}\n *       , scratch: function () {}\n *     });\n *\n *     // later\n *     fizz.purr();\n *     fizz.scratch();\n *\n * @param {String|Object} method name\n * @param {Function} [fn]\n * @api public\n */\n\nSchema.prototype.method = function(name, fn) {\n  if ('string' != typeof name)\n    for (var i in name)\n      this.methods[i] = name[i];\n  else\n    this.methods[name] = fn;\n  return this;\n};\n\n/**\n * Adds static \"class\" methods to Models compiled from this schema.\n *\n * ####Example\n *\n *     var schema = new Schema(..);\n *     schema.static('findByName', function (name, callback) {\n *       return this.find({ name: name }, callback);\n *     });\n *\n *     var Drink = mongoose.model('Drink', schema);\n *     Drink.findByName('sanpellegrino', function (err, drinks) {\n *       //\n *     });\n *\n * If a hash of name/fn pairs is passed as the only argument, each name/fn pair will be added as statics.\n *\n * @param {String} name\n * @param {Function} fn\n * @api public\n */\n\nSchema.prototype.static = function(name, fn) {\n  if ('string' != typeof name)\n    for (var i in name)\n      this.statics[i] = name[i];\n  else\n    this.statics[name] = fn;\n  return this;\n};\n\n/**\n * Defines an index (most likely compound) for this schema.\n *\n * ####Example\n *\n *     schema.index({ first: 1, last: -1 })\n *\n * @param {Object} fields\n * @param {Object} [options] Options to pass to [MongoDB driver's `createIndex()` function](http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#createIndex)\n * @param {String} [options.expires=null] Mongoose-specific syntactic sugar, uses [ms](https://www.npmjs.com/package/ms) to convert `expires` option into seconds for the `expireAfterSeconds` in the above link.\n * @api public\n */\n\nSchema.prototype.index = function(fields, options) {\n  options || (options = {});\n\n  if (options.expires)\n    utils.expires(options);\n\n  this._indexes.push([fields, options]);\n  return this;\n};\n\n/**\n * Sets/gets a schema option.\n *\n * ####Example\n *\n *     schema.set('strict'); // 'true' by default\n *     schema.set('strict', false); // Sets 'strict' to false\n *     schema.set('strict'); // 'false'\n *\n * @param {String} key option name\n * @param {Object} [value] if not passed, the current option value is returned\n * @see Schema ./\n * @api public\n */\n\nSchema.prototype.set = function(key, value, _tags) {\n  if (1 === arguments.length) {\n    return this.options[key];\n  }\n\n  switch (key) {\n    case 'read':\n      this.options[key] = readPref(value, _tags);\n      break;\n    case 'safe':\n      this.options[key] = false === value\n        ? { w: 0 }\n        : value;\n      break;\n    default:\n      this.options[key] = value;\n  }\n\n  return this;\n};\n\n/**\n * Gets a schema option.\n *\n * @param {String} key option name\n * @api public\n */\n\nSchema.prototype.get = function(key) {\n  return this.options[key];\n};\n\n/**\n * The allowed index types\n *\n * @static indexTypes\n * @receiver Schema\n * @api public\n */\n\nvar indexTypes = '2d 2dsphere hashed text'.split(' ');\n\nObject.defineProperty(Schema, 'indexTypes', {\n  get: function() { return indexTypes; },\n  set: function() { throw new Error('Cannot overwrite Schema.indexTypes'); }\n});\n\n/**\n * Compiles indexes from fields and schema-level indexes\n *\n * @api public\n */\n\nSchema.prototype.indexes = function() {\n  'use strict';\n\n  var indexes = [];\n  var seenPrefix = {};\n\n  var collectIndexes = function(schema, prefix) {\n    if (seenPrefix[prefix]) {\n      return;\n    }\n    seenPrefix[prefix] = true;\n\n    prefix = prefix || '';\n    var key, path, index, field, isObject, options, type;\n    var keys = Object.keys(schema.paths);\n\n    for (var i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      path = schema.paths[key];\n\n      if (path instanceof MongooseTypes.DocumentArray) {\n        collectIndexes(path.schema, key + '.');\n      } else if (path.$isSingleNested) {\n        collectIndexes(path.schema, key + '.');\n      } else {\n        index = path._index;\n\n        if (false !== index && null != index) {\n          field = {};\n          isObject = utils.isObject(index);\n          options = isObject ? index : {};\n          type = 'string' == typeof index ? index :\n            isObject ? index.type :\n            false;\n\n          if (type && ~Schema.indexTypes.indexOf(type)) {\n            field[prefix + key] = type;\n          } else {\n            field[prefix + key] = 1;\n          }\n\n          delete options.type;\n          if (!('background' in options)) {\n            options.background = true;\n          }\n\n          indexes.push([field, options]);\n        }\n      }\n    }\n\n    if (prefix) {\n      fixSubIndexPaths(schema, prefix);\n    } else {\n      schema._indexes.forEach(function(index) {\n        if (!('background' in index[1])) index[1].background = true;\n      });\n      indexes = indexes.concat(schema._indexes);\n    }\n\n  };\n\n  collectIndexes(this);\n  return indexes;\n\n  /*!\n   * Checks for indexes added to subdocs using Schema.index().\n   * These indexes need their paths prefixed properly.\n   *\n   * schema._indexes = [ [indexObj, options], [indexObj, options] ..]\n   */\n\n  function fixSubIndexPaths(schema, prefix) {\n    var subindexes = schema._indexes,\n        len = subindexes.length,\n        indexObj,\n        newindex,\n        klen,\n        keys,\n        key,\n        i = 0,\n        j;\n\n    for (i = 0; i < len; ++i) {\n      indexObj = subindexes[i][0];\n      keys = Object.keys(indexObj);\n      klen = keys.length;\n      newindex = {};\n\n      // use forward iteration, order matters\n      for (j = 0; j < klen; ++j) {\n        key = keys[j];\n        newindex[prefix + key] = indexObj[key];\n      }\n\n      indexes.push([newindex, subindexes[i][1]]);\n    }\n  }\n};\n\n/**\n * Creates a virtual type with the given name.\n *\n * @param {String} name\n * @param {Object} [options]\n * @return {VirtualType}\n */\n\nSchema.prototype.virtual = function(name, options) {\n  var virtuals = this.virtuals;\n  var parts = name.split('.');\n  return virtuals[name] = parts.reduce(function(mem, part, i) {\n    mem[part] || (mem[part] = (i === parts.length - 1)\n                            ? new VirtualType(options, name)\n                            : {});\n    return mem[part];\n  }, this.tree);\n};\n\n/**\n * Returns the virtual type with the given `name`.\n *\n * @param {String} name\n * @return {VirtualType}\n */\n\nSchema.prototype.virtualpath = function(name) {\n  return this.virtuals[name];\n};\n\n/**\n * Removes the given `path` (or [`paths`]).\n *\n * @param {String|Array} path\n *\n * @api public\n */\nSchema.prototype.remove = function(path) {\n  if (typeof path === 'string') {\n    path = [path];\n  }\n  if (Array.isArray(path)) {\n    path.forEach(function(name) {\n      if (this.path(name)) {\n        delete this.paths[name];\n      }\n    }, this);\n  }\n};\n\n/*!\n * ignore\n */\n\nSchema.prototype._getSchema = function(path) {\n  var schema = this;\n  var pathschema = schema.path(path);\n\n  if (pathschema) {\n    return pathschema;\n  }\n\n  // look for arrays\n  return (function search(parts, schema) {\n    var p = parts.length + 1,\n        foundschema,\n        trypath;\n\n    while (p--) {\n      trypath = parts.slice(0, p).join('.');\n      foundschema = schema.path(trypath);\n      if (foundschema) {\n        if (foundschema.caster) {\n          // array of Mixed?\n          if (foundschema.caster instanceof MongooseTypes.Mixed) {\n            return foundschema.caster;\n          }\n\n          // Now that we found the array, we need to check if there\n          // are remaining document paths to look up for casting.\n          // Also we need to handle array.$.path since schema.path\n          // doesn't work for that.\n          // If there is no foundschema.schema we are dealing with\n          // a path like array.$\n          if (p !== parts.length && foundschema.schema) {\n            if ('$' === parts[p]) {\n              // comments.$.comments.$.title\n              return search(parts.slice(p + 1), foundschema.schema);\n            } else {\n              // this is the last path of the selector\n              return search(parts.slice(p), foundschema.schema);\n            }\n          }\n        }\n        return foundschema;\n      }\n    }\n  })(path.split('.'), schema);\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = exports = Schema;\n\n// require down here because of reference issues\n\n/**\n * The various built-in Mongoose Schema Types.\n *\n * ####Example:\n *\n *     var mongoose = require('mongoose');\n *     var ObjectId = mongoose.Schema.Types.ObjectId;\n *\n * ####Types:\n *\n * - [String](#schema-string-js)\n * - [Number](#schema-number-js)\n * - [Boolean](#schema-boolean-js) | Bool\n * - [Array](#schema-array-js)\n * - [Buffer](#schema-buffer-js)\n * - [Date](#schema-date-js)\n * - [ObjectId](#schema-objectid-js) | Oid\n * - [Mixed](#schema-mixed-js)\n *\n * Using this exposed access to the `Mixed` SchemaType, we can use them in our schema.\n *\n *     var Mixed = mongoose.Schema.Types.Mixed;\n *     new mongoose.Schema({ _user: Mixed })\n *\n * @api public\n */\n\nSchema.Types = MongooseTypes = require('./schema/index');\n\n/*!\n * ignore\n */\n\nexports.ObjectId = MongooseTypes.ObjectId;\n"};
jalangiLabel1326:
    while (true) {
        try {
            J$.Se(19849, '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/schema_jalangi_.js', '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/schema.js');
            function Schema(obj, options) {
                jalangiLabel1280:
                    while (true) {
                        try {
                            J$.Fe(2881, arguments.callee, this, arguments);
                            arguments = J$.N(2889, 'arguments', arguments, 4);
                            obj = J$.N(2897, 'obj', obj, 4);
                            options = J$.N(2905, 'options', options, 4);
                            J$.N(2913, '_idSubDoc', _idSubDoc, 0);
                            J$.N(2921, 'auto_id', auto_id, 0);
                            J$.N(2929, 'autoid', autoid, 0);
                            J$.N(2937, 'i', i, 0);
                            J$.N(2945, 'm', m, 0);
                            J$.N(2953, 'timestamps', timestamps, 0);
                            J$.N(2961, 'createdAt', createdAt, 0);
                            J$.N(2969, 'updatedAt', updatedAt, 0);
                            J$.N(2977, 'schemaAdditions', schemaAdditions, 0);
                            J$.N(2985, 'genUpdates', genUpdates, 0);
                            if (J$.X1(20025, J$.C(8, J$.U(18, '!', J$.B(10, 'instanceof', J$.R(409, 'this', this, 0), J$.R(417, 'Schema', Schema, 1), 0)))))
                                return J$.X1(465, J$.Rt(457, J$.F(449, J$.R(425, 'Schema', Schema, 1), 1)(J$.R(433, 'obj', obj, 0), J$.R(441, 'options', options, 0))));
                            J$.X1(497, J$.P(489, J$.R(473, 'this', this, 0), 'paths', J$.T(481, {}, 11, false), 0));
                            J$.X1(529, J$.P(521, J$.R(505, 'this', this, 0), 'subpaths', J$.T(513, {}, 11, false), 0));
                            J$.X1(561, J$.P(553, J$.R(537, 'this', this, 0), 'virtuals', J$.T(545, {}, 11, false), 0));
                            J$.X1(593, J$.P(585, J$.R(569, 'this', this, 0), 'singleNestedPaths', J$.T(577, {}, 11, false), 0));
                            J$.X1(625, J$.P(617, J$.R(601, 'this', this, 0), 'nested', J$.T(609, {}, 11, false), 0));
                            J$.X1(657, J$.P(649, J$.R(633, 'this', this, 0), 'inherits', J$.T(641, {}, 11, false), 0));
                            J$.X1(689, J$.P(681, J$.R(665, 'this', this, 0), 'callQueue', J$.T(673, [], 10, false), 0));
                            J$.X1(721, J$.P(713, J$.R(697, 'this', this, 0), '_indexes', J$.T(705, [], 10, false), 0));
                            J$.X1(753, J$.P(745, J$.R(729, 'this', this, 0), 'methods', J$.T(737, {}, 11, false), 0));
                            J$.X1(785, J$.P(777, J$.R(761, 'this', this, 0), 'statics', J$.T(769, {}, 11, false), 0));
                            J$.X1(817, J$.P(809, J$.R(793, 'this', this, 0), 'tree', J$.T(801, {}, 11, false), 0));
                            J$.X1(849, J$.P(841, J$.R(825, 'this', this, 0), '_requiredpaths', J$.T(833, undefined, 24, false), 0));
                            J$.X1(881, J$.P(873, J$.R(857, 'this', this, 0), 'discriminatorMapping', J$.T(865, undefined, 24, false), 0));
                            J$.X1(913, J$.P(905, J$.R(889, 'this', this, 0), '_indexedpaths', J$.T(897, undefined, 24, false), 0));
                            J$.X1(969, J$.P(961, J$.R(921, 'this', this, 0), 's', J$.T(953, {
                                hooks: J$.F(937, J$.R(929, 'Kareem', Kareem, 1), 1)(),
                                queryHooks: J$.R(945, 'IS_QUERY_HOOK', IS_QUERY_HOOK, 1)
                            }, 11, false), 0));
                            J$.X1(1017, J$.P(1009, J$.R(977, 'this', this, 0), 'options', J$.M(1001, J$.R(985, 'this', this, 0), 'defaultOptions', 0)(J$.R(993, 'options', options, 0)), 0));
                            if (J$.X1(20033, J$.C(16, J$.R(1025, 'obj', obj, 0)))) {
                                J$.X1(1057, J$.M(1049, J$.R(1033, 'this', this, 0), 'add', 0)(J$.R(1041, 'obj', obj, 0)));
                            }
                            var _idSubDoc = J$.X1(1129, J$.W(1121, '_idSubDoc', J$.C(32, J$.C(24, J$.R(1065, 'obj', obj, 0)) ? J$.G(1081, J$.R(1073, 'obj', obj, 0), '_id', 0) : J$._()) ? J$.M(1113, J$.R(1089, 'utils', utils, 1), 'isObject', 0)(J$.G(1105, J$.R(1097, 'obj', obj, 0), '_id', 0)) : J$._(), _idSubDoc, 1));
                            var auto_id = J$.X1(1233, J$.W(1225, 'auto_id', J$.C(56, J$.C(48, J$.U(26, '!', J$.G(1161, J$.G(1145, J$.R(1137, 'this', this, 0), 'paths', 0), J$.T(1153, '_id', 21, false), 4))) ? J$.C(40, J$.U(34, '!', J$.G(1185, J$.G(1177, J$.R(1169, 'this', this, 0), 'options', 0), 'noId', 0))) ? J$.G(1209, J$.G(1201, J$.R(1193, 'this', this, 0), 'options', 0), '_id', 0) : J$._() : J$._()) ? J$.U(42, '!', J$.R(1217, '_idSubDoc', _idSubDoc, 0)) : J$._(), auto_id, 1));
                            if (J$.X1(20041, J$.C(64, J$.R(1241, 'auto_id', auto_id, 0)))) {
                                J$.X1(1281, obj = J$.W(1273, 'obj', J$.T(1265, {
                                    _id: J$.T(1257, {
                                        auto: J$.T(1249, true, 23, false)
                                    }, 11, false)
                                }, 11, false), obj, 0));
                                J$.X1(1353, J$.P(1345, J$.G(1297, J$.R(1289, 'obj', obj, 0), '_id', 0), J$.G(1321, J$.G(1313, J$.R(1305, 'this', this, 0), 'options', 0), 'typeKey', 0), J$.G(1337, J$.R(1329, 'Schema', Schema, 1), 'ObjectId', 0), 2));
                                J$.X1(1385, J$.M(1377, J$.R(1361, 'this', this, 0), 'add', 0)(J$.R(1369, 'obj', obj, 0)));
                            }
                            var autoid = J$.X1(1481, J$.W(1473, 'autoid', J$.C(80, J$.U(50, '!', J$.G(1417, J$.G(1401, J$.R(1393, 'this', this, 0), 'paths', 0), J$.T(1409, 'id', 21, false), 4))) ? J$.C(72, J$.U(58, '!', J$.G(1441, J$.G(1433, J$.R(1425, 'this', this, 0), 'options', 0), 'noVirtualId', 0))) ? J$.G(1465, J$.G(1457, J$.R(1449, 'this', this, 0), 'options', 0), 'id', 0) : J$._() : J$._(), autoid, 1));
                            if (J$.X1(20049, J$.C(88, J$.R(1489, 'autoid', autoid, 0)))) {
                                J$.X1(1537, J$.M(1529, J$.M(1513, J$.R(1497, 'this', this, 0), 'virtual', 0)(J$.T(1505, 'id', 21, false)), 'get', 0)(J$.R(1521, 'idGetter', idGetter, 1)));
                            }
                            for (var i = J$.X1(1561, J$.W(1553, 'i', J$.T(1545, 0, 22, false), i, 1)); J$.X1(20057, J$.C(96, J$.B(66, '<', J$.R(1569, 'i', i, 0), J$.G(1593, J$.G(1585, J$.R(1577, 'this', this, 0), '_defaultMiddleware', 0), 'length', 0), 0))); J$.X1(20065, i = J$.W(1617, 'i', J$.B(82, '+', J$.U(74, '+', J$.R(1609, 'i', i, 0)), J$.T(1601, 1, 22, false), 0), i, 0))) {
                                var m = J$.X1(1665, J$.W(1657, 'm', J$.G(1649, J$.G(1633, J$.R(1625, 'this', this, 0), '_defaultMiddleware', 0), J$.R(1641, 'i', i, 0), 4), m, 1));
                                J$.X1(1753, J$.M(1745, J$.R(1673, 'this', this, 0), J$.G(1689, J$.R(1681, 'm', m, 0), 'kind', 0), 1)(J$.G(1705, J$.R(1697, 'm', m, 0), 'hook', 0), J$.U(98, '!', J$.U(90, '!', J$.G(1721, J$.R(1713, 'm', m, 0), 'isAsync', 0))), J$.G(1737, J$.R(1729, 'm', m, 0), 'fn', 0)));
                            }
                            var timestamps = J$.X1(1793, J$.W(1785, 'timestamps', J$.G(1777, J$.G(1769, J$.R(1761, 'this', this, 0), 'options', 0), 'timestamps', 0), timestamps, 1));
                            if (J$.X1(20169, J$.C(152, J$.R(1801, 'timestamps', timestamps, 0)))) {
                                var createdAt = J$.X1(1873, J$.W(1865, 'createdAt', J$.C(104, J$.G(1817, J$.R(1809, 'timestamps', timestamps, 0), 'createdAt', 0)) ? J$._() : J$.T(1825, 'createdAt', 21, false), createdAt, 1)), updatedAt = J$.X1(1889, J$.W(1881, 'updatedAt', J$.C(112, J$.G(1841, J$.R(1833, 'timestamps', timestamps, 0), 'updatedAt', 0)) ? J$._() : J$.T(1849, 'updatedAt', 21, false), updatedAt, 1)), schemaAdditions = J$.X1(1905, J$.W(1897, 'schemaAdditions', J$.T(1857, {}, 11, false), schemaAdditions, 1));
                                J$.X1(1945, J$.P(1937, J$.R(1913, 'schemaAdditions', schemaAdditions, 0), J$.R(1921, 'updatedAt', updatedAt, 0), J$.R(1929, 'Date', Date, 2), 2));
                                if (J$.X1(20073, J$.C(120, J$.U(106, '!', J$.G(1977, J$.G(1961, J$.R(1953, 'this', this, 0), 'paths', 0), J$.R(1969, 'createdAt', createdAt, 0), 4))))) {
                                    J$.X1(2017, J$.P(2009, J$.R(1985, 'schemaAdditions', schemaAdditions, 0), J$.R(1993, 'createdAt', createdAt, 0), J$.R(2001, 'Date', Date, 2), 2));
                                }
                                J$.X1(2049, J$.M(2041, J$.R(2025, 'this', this, 0), 'add', 0)(J$.R(2033, 'schemaAdditions', schemaAdditions, 0)));
                                J$.X1(2353, J$.M(2345, J$.R(2057, 'this', this, 0), 'pre', 0)(J$.T(2065, 'save', 21, false), J$.T(2337, function (next) {
                                    jalangiLabel1276:
                                        while (true) {
                                            try {
                                                J$.Fe(2305, arguments.callee, this, arguments);
                                                arguments = J$.N(2313, 'arguments', arguments, 4);
                                                next = J$.N(2321, 'next', next, 4);
                                                J$.N(2329, 'defaultTimestamp', defaultTimestamp, 0);
                                                var defaultTimestamp = J$.X1(2097, J$.W(2089, 'defaultTimestamp', J$.F(2081, J$.R(2073, 'Date', Date, 2), 1)(), defaultTimestamp, 1));
                                                if (J$.X1(20089, J$.C(136, J$.U(114, '!', J$.G(2121, J$.R(2105, 'this', this, 0), J$.R(2113, 'createdAt', createdAt, 0), 4))))) {
                                                    J$.X1(2193, J$.P(2185, J$.R(2129, 'this', this, 0), J$.R(2137, 'createdAt', createdAt, 0), J$.X1(20081, J$.C(128, J$.R(2145, 'auto_id', auto_id, 0))) ? J$.M(2169, J$.G(2161, J$.R(2153, 'this', this, 0), '_id', 0), 'getTimestamp', 0)() : J$.R(2177, 'defaultTimestamp', defaultTimestamp, 0), 2));
                                                }
                                                J$.X1(2273, J$.P(2265, J$.R(2201, 'this', this, 0), J$.R(2209, 'updatedAt', updatedAt, 0), J$.X1(20097, J$.C(144, J$.G(2225, J$.R(2217, 'this', this, 0), 'isNew', 0))) ? J$.G(2249, J$.R(2233, 'this', this, 0), J$.R(2241, 'createdAt', createdAt, 0), 4) : J$.R(2257, 'defaultTimestamp', defaultTimestamp, 0), 2));
                                                J$.X1(2297, J$.F(2289, J$.R(2281, 'next', next, 0), 0)());
                                            } catch (J$e) {
                                                J$.Ex(20105, J$e);
                                            } finally {
                                                if (J$.Fr(20113))
                                                    continue jalangiLabel1276;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 2305)));
                                var genUpdates = J$.X1(2601, J$.W(2593, 'genUpdates', J$.T(2585, function () {
                                    jalangiLabel1277:
                                        while (true) {
                                            try {
                                                J$.Fe(2553, arguments.callee, this, arguments);
                                                arguments = J$.N(2561, 'arguments', arguments, 4);
                                                J$.N(2569, 'now', now, 0);
                                                J$.N(2577, 'updates', updates, 0);
                                                var now = J$.X1(2385, J$.W(2377, 'now', J$.F(2369, J$.R(2361, 'Date', Date, 2), 1)(), now, 1));
                                                var updates = J$.X1(2425, J$.W(2417, 'updates', J$.T(2409, {
                                                    $set: J$.T(2393, {}, 11, false),
                                                    $setOnInsert: J$.T(2401, {}, 11, false)
                                                }, 11, false), updates, 1));
                                                J$.X1(2473, J$.P(2465, J$.G(2441, J$.R(2433, 'updates', updates, 0), '$set', 0), J$.R(2449, 'updatedAt', updatedAt, 0), J$.R(2457, 'now', now, 0), 2));
                                                J$.X1(2521, J$.P(2513, J$.G(2489, J$.R(2481, 'updates', updates, 0), '$setOnInsert', 0), J$.R(2497, 'createdAt', createdAt, 0), J$.R(2505, 'now', now, 0), 2));
                                                return J$.X1(2545, J$.Rt(2537, J$.R(2529, 'updates', updates, 0)));
                                            } catch (J$e) {
                                                J$.Ex(20121, J$e);
                                            } finally {
                                                if (J$.Fr(20129))
                                                    continue jalangiLabel1277;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 2553), genUpdates, 1));
                                J$.X1(2737, J$.M(2729, J$.R(2609, 'this', this, 0), 'pre', 0)(J$.T(2617, 'findOneAndUpdate', 21, false), J$.T(2721, function (next) {
                                    jalangiLabel1278:
                                        while (true) {
                                            try {
                                                J$.Fe(2697, arguments.callee, this, arguments);
                                                arguments = J$.N(2705, 'arguments', arguments, 4);
                                                next = J$.N(2713, 'next', next, 4);
                                                J$.X1(2665, J$.M(2657, J$.R(2625, 'this', this, 0), 'findOneAndUpdate', 0)(J$.T(2633, {}, 11, false), J$.F(2649, J$.R(2641, 'genUpdates', genUpdates, 0), 0)()));
                                                J$.X1(2689, J$.F(2681, J$.R(2673, 'next', next, 0), 0)());
                                            } catch (J$e) {
                                                J$.Ex(20137, J$e);
                                            } finally {
                                                if (J$.Fr(20145))
                                                    continue jalangiLabel1278;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 2697)));
                                J$.X1(2873, J$.M(2865, J$.R(2745, 'this', this, 0), 'pre', 0)(J$.T(2753, 'update', 21, false), J$.T(2857, function (next) {
                                    jalangiLabel1279:
                                        while (true) {
                                            try {
                                                J$.Fe(2833, arguments.callee, this, arguments);
                                                arguments = J$.N(2841, 'arguments', arguments, 4);
                                                next = J$.N(2849, 'next', next, 4);
                                                J$.X1(2801, J$.M(2793, J$.R(2761, 'this', this, 0), 'update', 0)(J$.T(2769, {}, 11, false), J$.F(2785, J$.R(2777, 'genUpdates', genUpdates, 0), 0)()));
                                                J$.X1(2825, J$.F(2817, J$.R(2809, 'next', next, 0), 0)());
                                            } catch (J$e) {
                                                J$.Ex(20153, J$e);
                                            } finally {
                                                if (J$.Fr(20161))
                                                    continue jalangiLabel1279;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 2833)));
                            }
                        } catch (J$e) {
                            J$.Ex(20177, J$e);
                        } finally {
                            if (J$.Fr(20185))
                                continue jalangiLabel1280;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function idGetter() {
                jalangiLabel1281:
                    while (true) {
                        try {
                            J$.Fe(3161, arguments.callee, this, arguments);
                            arguments = J$.N(3169, 'arguments', arguments, 4);
                            if (J$.X1(20193, J$.C(160, J$.G(3009, J$.G(3001, J$.R(2993, 'this', this, 0), '$__', 0), '_id', 0)))) {
                                return J$.X1(3049, J$.Rt(3041, J$.G(3033, J$.G(3025, J$.R(3017, 'this', this, 0), '$__', 0), '_id', 0)));
                            }
                            return J$.X1(3153, J$.Rt(3145, J$.P(3137, J$.G(3065, J$.R(3057, 'this', this, 0), '$__', 0), '_id', J$.X1(20201, J$.C(168, J$.B(122, '==', J$.T(3073, null, 25, false), J$.G(3089, J$.R(3081, 'this', this, 0), '_id', 0), 0))) ? J$.T(3097, null, 25, false) : J$.F(3129, J$.R(3105, 'String', String, 2), 0)(J$.G(3121, J$.R(3113, 'this', this, 0), '_id', 0)), 0)));
                        } catch (J$e) {
                            J$.Ex(20209, J$e);
                        } finally {
                            if (J$.Fr(20217))
                                continue jalangiLabel1281;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getPositionalPathType(self, path) {
                jalangiLabel1299:
                    while (true) {
                        try {
                            J$.Fe(12921, arguments.callee, this, arguments);
                            arguments = J$.N(12929, 'arguments', arguments, 4);
                            self = J$.N(12937, 'self', self, 4);
                            path = J$.N(12945, 'path', path, 4);
                            J$.N(12953, 'subpaths', subpaths, 0);
                            J$.N(12961, 'val', val, 0);
                            J$.N(12969, 'isNested', isNested, 0);
                            J$.N(12977, 'last', last, 0);
                            J$.N(12985, 'subpath', subpath, 0);
                            J$.N(12993, 'i', i, 0);
                            J$.N(13001, 'type', type, 0);
                            var subpaths = J$.X1(12057, J$.W(12049, 'subpaths', J$.M(12041, J$.M(12025, J$.R(12009, 'path', path, 0), 'split', 0)(J$.T(12017, /\.(\d+)\.|\.(\d+)$/, 14, false)), 'filter', 0)(J$.R(12033, 'Boolean', Boolean, 2)), subpaths, 1));
                            if (J$.X1(20961, J$.C(856, J$.B(898, '<', J$.G(12073, J$.R(12065, 'subpaths', subpaths, 0), 'length', 0), J$.T(12081, 2, 22, false), 0)))) {
                                return J$.X1(12145, J$.Rt(12137, J$.G(12129, J$.G(12097, J$.R(12089, 'self', self, 0), 'paths', 0), J$.G(12121, J$.R(12105, 'subpaths', subpaths, 0), J$.T(12113, 0, 22, false), 4), 4)));
                            }
                            var val = J$.X1(12201, J$.W(12193, 'val', J$.M(12185, J$.R(12153, 'self', self, 0), 'path', 0)(J$.G(12177, J$.R(12161, 'subpaths', subpaths, 0), J$.T(12169, 0, 22, false), 4)), val, 1));
                            var isNested = J$.X1(12225, J$.W(12217, 'isNested', J$.T(12209, false, 23, false), isNested, 1));
                            if (J$.X1(20969, J$.C(864, J$.U(906, '!', J$.R(12233, 'val', val, 0)))))
                                return J$.X1(12257, J$.Rt(12249, J$.R(12241, 'val', val, 0)));
                            var last = J$.X1(12305, J$.W(12297, 'last', J$.B(914, '-', J$.G(12273, J$.R(12265, 'subpaths', subpaths, 0), 'length', 0), J$.T(12281, 1, 22, false), 0), last, 1)), subpath, i = J$.X1(12321, J$.W(12313, 'i', J$.T(12289, 1, 22, false), i, 1));
                            for (; J$.X1(21009, J$.C(936, J$.B(922, '<', J$.R(12329, 'i', i, 0), J$.G(12345, J$.R(12337, 'subpaths', subpaths, 0), 'length', 0), 0))); J$.X1(21017, i = J$.W(12369, 'i', J$.B(938, '+', J$.U(930, '+', J$.R(12361, 'i', i, 0)), J$.T(12353, 1, 22, false), 0), i, 0))) {
                                J$.X1(12393, isNested = J$.W(12385, 'isNested', J$.T(12377, false, 23, false), isNested, 0));
                                J$.X1(12433, subpath = J$.W(12425, 'subpath', J$.G(12417, J$.R(12401, 'subpaths', subpaths, 0), J$.R(12409, 'i', i, 0), 4), subpath, 0));
                                if (J$.X1(20985, J$.C(904, J$.C(888, J$.C(880, J$.C(872, J$.B(946, '===', J$.R(12441, 'i', i, 0), J$.R(12449, 'last', last, 0), 0)) ? J$.R(12457, 'val', val, 0) : J$._()) ? J$.U(954, '!', J$.G(12473, J$.R(12465, 'val', val, 0), 'schema', 0)) : J$._()) ? J$.U(962, '!', J$.M(12497, J$.T(12481, /\D/, 14, false), 'test', 0)(J$.R(12489, 'subpath', subpath, 0))) : J$._()))) {
                                    if (J$.X1(20977, J$.C(896, J$.B(970, 'instanceof', J$.R(12505, 'val', val, 0), J$.G(12521, J$.R(12513, 'MongooseTypes', MongooseTypes, 1), 'Array', 0), 0)))) {
                                        J$.X1(12553, val = J$.W(12545, 'val', J$.G(12537, J$.R(12529, 'val', val, 0), 'caster', 0), val, 0));
                                    } else {
                                        J$.X1(12577, val = J$.W(12569, 'val', J$.T(12561, undefined, 24, false), val, 0));
                                    }
                                    break;
                                }
                                if (J$.X1(20993, J$.C(912, J$.U(978, '!', J$.M(12601, J$.T(12585, /\D/, 14, false), 'test', 0)(J$.R(12593, 'subpath', subpath, 0))))))
                                    continue;
                                if (J$.X1(21001, J$.C(928, J$.U(986, '!', J$.C(920, J$.R(12609, 'val', val, 0)) ? J$.G(12625, J$.R(12617, 'val', val, 0), 'schema', 0) : J$._())))) {
                                    J$.X1(12649, val = J$.W(12641, 'val', J$.T(12633, undefined, 24, false), val, 0));
                                    break;
                                }
                                var type = J$.X1(12697, J$.W(12689, 'type', J$.M(12681, J$.G(12665, J$.R(12657, 'val', val, 0), 'schema', 0), 'pathType', 0)(J$.R(12673, 'subpath', subpath, 0)), type, 1));
                                J$.X1(12729, isNested = J$.W(12721, 'isNested', J$.B(994, '===', J$.R(12705, 'type', type, 0), J$.T(12713, 'nested', 21, false), 0), isNested, 0));
                                J$.X1(12777, val = J$.W(12769, 'val', J$.M(12761, J$.G(12745, J$.R(12737, 'val', val, 0), 'schema', 0), 'path', 0)(J$.R(12753, 'subpath', subpath, 0)), val, 0));
                            }
                            J$.X1(12825, J$.P(12817, J$.G(12793, J$.R(12785, 'self', self, 0), 'subpaths', 0), J$.R(12801, 'path', path, 0), J$.R(12809, 'val', val, 0), 2));
                            if (J$.X1(21025, J$.C(944, J$.R(12833, 'val', val, 0)))) {
                                return J$.X1(12857, J$.Rt(12849, J$.T(12841, 'real', 21, false)));
                            }
                            if (J$.X1(21033, J$.C(952, J$.R(12865, 'isNested', isNested, 0)))) {
                                return J$.X1(12889, J$.Rt(12881, J$.T(12873, 'nested', 21, false)));
                            }
                            return J$.X1(12913, J$.Rt(12905, J$.T(12897, 'adhocOrUndefined', 21, false)));
                        } catch (J$e) {
                            J$.Ex(21041, J$e);
                        } finally {
                            if (J$.Fr(21049))
                                continue jalangiLabel1299;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getPositionalPath(self, path) {
                jalangiLabel1300:
                    while (true) {
                        try {
                            J$.Fe(13097, arguments.callee, this, arguments);
                            arguments = J$.N(13105, 'arguments', arguments, 4);
                            self = J$.N(13113, 'self', self, 4);
                            path = J$.N(13121, 'path', path, 4);
                            J$.X1(13041, J$.F(13033, J$.R(13009, 'getPositionalPathType', getPositionalPathType, 1), 0)(J$.R(13017, 'self', self, 0), J$.R(13025, 'path', path, 0)));
                            return J$.X1(13089, J$.Rt(13081, J$.G(13073, J$.G(13057, J$.R(13049, 'self', self, 0), 'subpaths', 0), J$.R(13065, 'path', path, 0), 4)));
                        } catch (J$e) {
                            J$.Ex(21057, J$e);
                        } finally {
                            if (J$.Fr(21065))
                                continue jalangiLabel1300;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(19857, '__secret__S$', __secret__S$, 0);
            J$.N(19865, '__secret__traits__', __secret__traits__, 0);
            J$.N(19873, 'readPref', readPref, 0);
            J$.N(19881, 'EventEmitter', EventEmitter, 0);
            J$.N(19889, 'VirtualType', VirtualType, 0);
            J$.N(19897, 'utils', utils, 0);
            J$.N(19905, 'MongooseTypes', MongooseTypes, 0);
            J$.N(19913, 'Kareem', Kareem, 0);
            J$.N(19921, 'async', async, 0);
            J$.N(19929, 'IS_QUERY_HOOK', IS_QUERY_HOOK, 0);
            Schema = J$.N(19945, 'Schema', J$.T(19937, Schema, 12, false, 2881), 0);
            idGetter = J$.N(19961, 'idGetter', J$.T(19953, idGetter, 12, false, 3161), 0);
            J$.N(19969, 'reserved', reserved, 0);
            J$.N(19977, 'warnings', warnings, 0);
            getPositionalPathType = J$.N(19993, 'getPositionalPathType', J$.T(19985, getPositionalPathType, 12, false, 12921), 0);
            getPositionalPath = J$.N(20009, 'getPositionalPath', J$.T(20001, getPositionalPath, 12, false, 13097), 0);
            J$.N(20017, 'indexTypes', indexTypes, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var readPref = J$.X1(121, J$.W(113, 'readPref', J$.G(105, J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, './drivers', 21, false)), 'ReadPreference', 0), readPref, 3));
            var EventEmitter = J$.X1(169, J$.W(161, 'EventEmitter', J$.G(153, J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, 'events', 21, false)), 'EventEmitter', 0), EventEmitter, 3));
            var VirtualType = J$.X1(209, J$.W(201, 'VirtualType', J$.F(193, J$.R(177, 'require', require, 2), 0)(J$.T(185, './virtualtype', 21, false)), VirtualType, 3));
            var utils = J$.X1(249, J$.W(241, 'utils', J$.F(233, J$.R(217, 'require', require, 2), 0)(J$.T(225, './utils', 21, false)), utils, 3));
            var MongooseTypes;
            var Kareem = J$.X1(289, J$.W(281, 'Kareem', J$.F(273, J$.R(257, 'require', require, 2), 0)(J$.T(265, 'kareem', 21, false)), Kareem, 3));
            var async = J$.X1(329, J$.W(321, 'async', J$.F(313, J$.R(297, 'require', require, 2), 0)(J$.T(305, 'async', 21, false)), async, 3));
            var IS_QUERY_HOOK = J$.X1(401, J$.W(393, 'IS_QUERY_HOOK', J$.T(385, {
                count: J$.T(337, true, 23, false),
                find: J$.T(345, true, 23, false),
                findOne: J$.T(353, true, 23, false),
                findOneAndUpdate: J$.T(361, true, 23, false),
                findOneAndRemove: J$.T(369, true, 23, false),
                update: J$.T(377, true, 23, false)
            }, 11, false), IS_QUERY_HOOK, 3));
            J$.X1(3225, J$.P(3217, J$.R(3177, 'Schema', Schema, 1), 'prototype', J$.M(3209, J$.R(3185, 'Object', Object, 2), 'create', 0)(J$.G(3201, J$.R(3193, 'EventEmitter', EventEmitter, 1), 'prototype', 0)), 0));
            J$.X1(3265, J$.P(3257, J$.G(3241, J$.R(3233, 'Schema', Schema, 1), 'prototype', 0), 'constructor', J$.R(3249, 'Schema', Schema, 1), 0));
            J$.X1(3305, J$.P(3297, J$.G(3281, J$.R(3273, 'Schema', Schema, 1), 'prototype', 0), 'instanceOfSchema', J$.T(3289, true, 23, false), 0));
            J$.X1(4569, J$.M(4561, J$.R(3313, 'Object', Object, 2), 'defineProperty', 0)(J$.G(3329, J$.R(3321, 'Schema', Schema, 1), 'prototype', 0), J$.T(3337, '_defaultMiddleware', 21, false), J$.T(4553, {
                configurable: J$.T(3345, false, 23, false),
                enumerable: J$.T(3353, false, 23, false),
                writable: J$.T(3361, false, 23, false),
                value: J$.T(4545, [
                    J$.T(3889, {
                        kind: J$.T(3369, 'pre', 21, false),
                        hook: J$.T(3377, 'save', 21, false),
                        fn: J$.T(3881, function (next, options) {
                            jalangiLabel1284:
                                while (true) {
                                    try {
                                        J$.Fe(3833, arguments.callee, this, arguments);
                                        arguments = J$.N(3841, 'arguments', arguments, 4);
                                        next = J$.N(3849, 'next', next, 4);
                                        options = J$.N(3857, 'options', options, 4);
                                        J$.N(3865, 'hasValidateBeforeSaveOption', hasValidateBeforeSaveOption, 0);
                                        J$.N(3873, 'shouldValidate', shouldValidate, 0);
                                        if (J$.X1(20225, J$.C(176, J$.G(3393, J$.R(3385, 'this', this, 0), 'ownerDocument', 0)))) {
                                            return J$.X1(3425, J$.Rt(3417, J$.F(3409, J$.R(3401, 'next', next, 0), 0)()));
                                        }
                                        var hasValidateBeforeSaveOption = J$.X1(3481, J$.W(3473, 'hasValidateBeforeSaveOption', J$.C(192, J$.C(184, J$.R(3433, 'options', options, 0)) ? J$.B(138, '===', J$.U(130, 'typeof', J$.R(3441, 'options', options, 0)), J$.T(3449, 'object', 21, false), 0) : J$._()) ? J$.B(146, 'in', J$.T(3457, 'validateBeforeSave', 21, false), J$.R(3465, 'options', options, 0), 0) : J$._(), hasValidateBeforeSaveOption, 1));
                                        var shouldValidate;
                                        if (J$.X1(20233, J$.C(200, J$.R(3489, 'hasValidateBeforeSaveOption', hasValidateBeforeSaveOption, 0)))) {
                                            J$.X1(3521, shouldValidate = J$.W(3513, 'shouldValidate', J$.U(162, '!', J$.U(154, '!', J$.G(3505, J$.R(3497, 'options', options, 0), 'validateBeforeSave', 0))), shouldValidate, 0));
                                        } else {
                                            J$.X1(3569, shouldValidate = J$.W(3561, 'shouldValidate', J$.G(3553, J$.G(3545, J$.G(3537, J$.R(3529, 'this', this, 0), 'schema', 0), 'options', 0), 'validateBeforeSave', 0), shouldValidate, 0));
                                        }
                                        if (J$.X1(20281, J$.C(216, J$.R(3577, 'shouldValidate', shouldValidate, 0)))) {
                                            if (J$.X1(20273, J$.C(208, J$.G(3593, J$.R(3585, 'this', this, 0), '$__original_validate', 0)))) {
                                                J$.X1(3697, J$.M(3689, J$.R(3601, 'this', this, 0), '$__original_validate', 0)(J$.T(3617, {
                                                    __noPromise: J$.T(3609, true, 23, false)
                                                }, 11, false), J$.T(3681, function (error) {
                                                    jalangiLabel1282:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(3657, arguments.callee, this, arguments);
                                                                arguments = J$.N(3665, 'arguments', arguments, 4);
                                                                error = J$.N(3673, 'error', error, 4);
                                                                J$.X1(3649, J$.F(3641, J$.R(3625, 'next', next, 0), 0)(J$.R(3633, 'error', error, 0)));
                                                            } catch (J$e) {
                                                                J$.Ex(20241, J$e);
                                                            } finally {
                                                                if (J$.Fr(20249))
                                                                    continue jalangiLabel1282;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 3657)));
                                            } else {
                                                J$.X1(3801, J$.M(3793, J$.R(3705, 'this', this, 0), 'validate', 0)(J$.T(3721, {
                                                    __noPromise: J$.T(3713, true, 23, false)
                                                }, 11, false), J$.T(3785, function (error) {
                                                    jalangiLabel1283:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(3761, arguments.callee, this, arguments);
                                                                arguments = J$.N(3769, 'arguments', arguments, 4);
                                                                error = J$.N(3777, 'error', error, 4);
                                                                J$.X1(3753, J$.F(3745, J$.R(3729, 'next', next, 0), 0)(J$.R(3737, 'error', error, 0)));
                                                            } catch (J$e) {
                                                                J$.Ex(20257, J$e);
                                                            } finally {
                                                                if (J$.Fr(20265))
                                                                    continue jalangiLabel1283;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 3761)));
                                            }
                                        } else {
                                            J$.X1(3825, J$.F(3817, J$.R(3809, 'next', next, 0), 0)());
                                        }
                                    } catch (J$e) {
                                        J$.Ex(20289, J$e);
                                    } finally {
                                        if (J$.Fr(20297))
                                            continue jalangiLabel1284;
                                        else
                                            return J$.Ra();
                                    }
                                }
                        }, 12, false, 3833)
                    }, 11, false),
                    J$.T(4537, {
                        kind: J$.T(3897, 'pre', 21, false),
                        hook: J$.T(3905, 'save', 21, false),
                        isAsync: J$.T(3913, true, 23, false),
                        fn: J$.T(4529, function (next, done) {
                            jalangiLabel1288:
                                while (true) {
                                    try {
                                        J$.Fe(4489, arguments.callee, this, arguments);
                                        arguments = J$.N(4497, 'arguments', arguments, 4);
                                        next = J$.N(4505, 'next', next, 4);
                                        done = J$.N(4513, 'done', done, 4);
                                        J$.N(4521, 'subdocs', subdocs, 0);
                                        var subdocs = J$.X1(3945, J$.W(3937, 'subdocs', J$.M(3929, J$.R(3921, 'this', this, 0), '$__getAllSubdocs', 0)(), subdocs, 1));
                                        if (J$.X1(20305, J$.C(232, J$.C(224, J$.U(170, '!', J$.G(3961, J$.R(3953, 'subdocs', subdocs, 0), 'length', 0))) ? J$._() : J$.G(3977, J$.R(3969, 'this', this, 0), '$__preSavingFromParent', 0)))) {
                                            J$.X1(4001, J$.F(3993, J$.R(3985, 'done', done, 0), 0)());
                                            J$.X1(4025, J$.F(4017, J$.R(4009, 'next', next, 0), 0)());
                                            return J$.X1(4041, J$.Rt(4033, undefined));
                                        }
                                        J$.X1(4481, J$.M(4473, J$.R(4049, 'async', async, 1), 'each', 0)(J$.R(4057, 'subdocs', subdocs, 0), J$.T(4217, function (subdoc, cb) {
                                            jalangiLabel1286:
                                                while (true) {
                                                    try {
                                                        J$.Fe(4185, arguments.callee, this, arguments);
                                                        arguments = J$.N(4193, 'arguments', arguments, 4);
                                                        subdoc = J$.N(4201, 'subdoc', subdoc, 4);
                                                        cb = J$.N(4209, 'cb', cb, 4);
                                                        J$.X1(4089, J$.P(4081, J$.R(4065, 'subdoc', subdoc, 0), '$__preSavingFromParent', J$.T(4073, true, 23, false), 0));
                                                        J$.X1(4177, J$.M(4169, J$.R(4097, 'subdoc', subdoc, 0), 'save', 0)(J$.T(4161, function (err) {
                                                            jalangiLabel1285:
                                                                while (true) {
                                                                    try {
                                                                        J$.Fe(4137, arguments.callee, this, arguments);
                                                                        arguments = J$.N(4145, 'arguments', arguments, 4);
                                                                        err = J$.N(4153, 'err', err, 4);
                                                                        J$.X1(4129, J$.F(4121, J$.R(4105, 'cb', cb, 0), 0)(J$.R(4113, 'err', err, 0)));
                                                                    } catch (J$e) {
                                                                        J$.Ex(20313, J$e);
                                                                    } finally {
                                                                        if (J$.Fr(20321))
                                                                            continue jalangiLabel1285;
                                                                        else
                                                                            return J$.Ra();
                                                                    }
                                                                }
                                                        }, 12, false, 4137)));
                                                    } catch (J$e) {
                                                        J$.Ex(20329, J$e);
                                                    } finally {
                                                        if (J$.Fr(20337))
                                                            continue jalangiLabel1286;
                                                        else
                                                            return J$.Ra();
                                                    }
                                                }
                                        }, 12, false, 4185), J$.T(4465, function (error) {
                                            jalangiLabel1287:
                                                while (true) {
                                                    try {
                                                        J$.Fe(4433, arguments.callee, this, arguments);
                                                        arguments = J$.N(4441, 'arguments', arguments, 4);
                                                        error = J$.N(4449, 'error', error, 4);
                                                        J$.N(4457, 'i', i, 0);
                                                        for (var i = J$.X1(4241, J$.W(4233, 'i', J$.T(4225, 0, 22, false), i, 1)); J$.X1(20345, J$.C(240, J$.B(178, '<', J$.R(4249, 'i', i, 0), J$.G(4265, J$.R(4257, 'subdocs', subdocs, 0), 'length', 0), 0))); J$.X1(20353, i = J$.W(4289, 'i', J$.B(194, '+', J$.U(186, '+', J$.R(4281, 'i', i, 0)), J$.T(4273, 1, 22, false), 0), i, 0))) {
                                                            J$.X1(4321, J$.B(202, 'delete', J$.G(4313, J$.R(4297, 'subdocs', subdocs, 0), J$.R(4305, 'i', i, 0), 4), '$__preSavingFromParent', 0));
                                                        }
                                                        if (J$.X1(20361, J$.C(248, J$.R(4329, 'error', error, 0)))) {
                                                            J$.X1(4361, J$.F(4353, J$.R(4337, 'done', done, 0), 0)(J$.R(4345, 'error', error, 0)));
                                                            return J$.X1(4377, J$.Rt(4369, undefined));
                                                        }
                                                        J$.X1(4401, J$.F(4393, J$.R(4385, 'next', next, 0), 0)());
                                                        J$.X1(4425, J$.F(4417, J$.R(4409, 'done', done, 0), 0)());
                                                    } catch (J$e) {
                                                        J$.Ex(20369, J$e);
                                                    } finally {
                                                        if (J$.Fr(20377))
                                                            continue jalangiLabel1287;
                                                        else
                                                            return J$.Ra();
                                                    }
                                                }
                                        }, 12, false, 4433)));
                                    } catch (J$e) {
                                        J$.Ex(20385, J$e);
                                    } finally {
                                        if (J$.Fr(20393))
                                            continue jalangiLabel1288;
                                        else
                                            return J$.Ra();
                                    }
                                }
                        }, 12, false, 4489)
                    }, 11, false)
                ], 10, false)
            }, 11, false)));
            J$.X1(4601, J$.G(4593, J$.G(4585, J$.R(4577, 'Schema', Schema, 1), 'prototype', 0), 'paths', 0));
            J$.X1(4633, J$.G(4625, J$.G(4617, J$.R(4609, 'Schema', Schema, 1), 'prototype', 0), 'tree', 0));
            J$.X1(5121, J$.P(5113, J$.G(4649, J$.R(4641, 'Schema', Schema, 1), 'prototype', 0), 'defaultOptions', J$.T(5105, function (options) {
                jalangiLabel1289:
                    while (true) {
                        try {
                            J$.Fe(5081, arguments.callee, this, arguments);
                            arguments = J$.N(5089, 'arguments', arguments, 4);
                            options = J$.N(5097, 'options', options, 4);
                            if (J$.X1(20401, J$.C(264, J$.C(256, J$.R(4657, 'options', options, 0)) ? J$.B(210, '===', J$.T(4665, false, 23, false), J$.G(4681, J$.R(4673, 'options', options, 0), 'safe', 0), 0) : J$._()))) {
                                J$.X1(4721, J$.P(4713, J$.R(4689, 'options', options, 0), 'safe', J$.T(4705, {
                                    w: J$.T(4697, 0, 22, false)
                                }, 11, false), 0));
                            }
                            if (J$.X1(20409, J$.C(288, J$.C(280, J$.C(272, J$.R(4729, 'options', options, 0)) ? J$.G(4745, J$.R(4737, 'options', options, 0), 'safe', 0) : J$._()) ? J$.B(218, '===', J$.T(4753, 0, 22, false), J$.G(4777, J$.G(4769, J$.R(4761, 'options', options, 0), 'safe', 0), 'w', 0), 0) : J$._()))) {
                                J$.X1(4809, J$.P(4801, J$.R(4785, 'options', options, 0), 'versionKey', J$.T(4793, false, 23, false), 0));
                            }
                            J$.X1(4977, options = J$.W(4969, 'options', J$.M(4961, J$.R(4817, 'utils', utils, 1), 'options', 0)(J$.T(4945, {
                                strict: J$.T(4825, true, 23, false),
                                bufferCommands: J$.T(4833, true, 23, false),
                                capped: J$.T(4841, false, 23, false),
                                versionKey: J$.T(4849, '__v', 21, false),
                                discriminatorKey: J$.T(4857, '__t', 21, false),
                                minimize: J$.T(4865, true, 23, false),
                                autoIndex: J$.T(4873, null, 25, false),
                                shardKey: J$.T(4881, null, 25, false),
                                read: J$.T(4889, null, 25, false),
                                validateBeforeSave: J$.T(4897, true, 23, false),
                                noId: J$.T(4905, false, 23, false),
                                _id: J$.T(4913, true, 23, false),
                                noVirtualId: J$.T(4921, false, 23, false),
                                id: J$.T(4929, true, 23, false),
                                typeKey: J$.T(4937, 'type', 21, false)
                            }, 11, false), J$.R(4953, 'options', options, 0)), options, 0));
                            if (J$.X1(20417, J$.C(296, J$.G(4993, J$.R(4985, 'options', options, 0), 'read', 0)))) {
                                J$.X1(5049, J$.P(5041, J$.R(5001, 'options', options, 0), 'read', J$.F(5033, J$.R(5009, 'readPref', readPref, 1), 0)(J$.G(5025, J$.R(5017, 'options', options, 0), 'read', 0)), 0));
                            }
                            return J$.X1(5073, J$.Rt(5065, J$.R(5057, 'options', options, 0)));
                        } catch (J$e) {
                            J$.Ex(20425, J$e);
                        } finally {
                            if (J$.Fr(20433))
                                continue jalangiLabel1289;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5081), 0));
            J$.X1(6257, J$.P(6249, J$.G(5137, J$.R(5129, 'Schema', Schema, 1), 'prototype', 0), 'add', J$.T(6241, function add(obj, prefix) {
                jalangiLabel1290:
                    while (true) {
                        try {
                            J$.Fe(6177, arguments.callee, this, arguments);
                            arguments = J$.N(6185, 'arguments', arguments, 4);
                            add = J$.N(6193, 'add', add, 0);
                            obj = J$.N(6201, 'obj', obj, 4);
                            prefix = J$.N(6209, 'prefix', prefix, 4);
                            J$.N(6217, 'keys', keys, 0);
                            J$.N(6225, 'i', i, 0);
                            J$.N(6233, 'key', key, 0);
                            J$.X1(5169, prefix = J$.W(5161, 'prefix', J$.C(304, J$.R(5145, 'prefix', prefix, 0)) ? J$._() : J$.T(5153, '', 21, false), prefix, 0));
                            var keys = J$.X1(5209, J$.W(5201, 'keys', J$.M(5193, J$.R(5177, 'Object', Object, 2), 'keys', 0)(J$.R(5185, 'obj', obj, 0)), keys, 1));
                            for (var i = J$.X1(5233, J$.W(5225, 'i', J$.T(5217, 0, 22, false), i, 1)); J$.X1(20473, J$.C(400, J$.B(226, '<', J$.R(5241, 'i', i, 0), J$.G(5257, J$.R(5249, 'keys', keys, 0), 'length', 0), 0))); J$.X1(20481, i = J$.W(5281, 'i', J$.B(242, '+', J$.U(234, '+', J$.R(5273, 'i', i, 0)), J$.T(5265, 1, 22, false), 0), i, 0))) {
                                var key = J$.X1(5321, J$.W(5313, 'key', J$.G(5305, J$.R(5289, 'keys', keys, 0), J$.R(5297, 'i', i, 0), 4), key, 1));
                                if (J$.X1(20441, J$.C(312, J$.B(250, '==', J$.T(5329, null, 25, false), J$.G(5353, J$.R(5337, 'obj', obj, 0), J$.R(5345, 'key', key, 0), 4), 0)))) {
                                    throw J$.X1(5417, J$.Th(5409, J$.F(5401, J$.R(5361, 'TypeError', TypeError, 2), 1)(J$.B(274, '+', J$.B(266, '+', J$.B(258, '+', J$.T(5369, 'Invalid value for schema path `', 21, false), J$.R(5377, 'prefix', prefix, 0), 0), J$.R(5385, 'key', key, 0), 0), J$.T(5393, '`', 21, false), 0))));
                                }
                                if (J$.X1(20449, J$.C(336, J$.C(328, J$.C(320, J$.M(5457, J$.R(5425, 'Array', Array, 2), 'isArray', 0)(J$.G(5449, J$.R(5433, 'obj', obj, 0), J$.R(5441, 'key', key, 0), 4))) ? J$.B(282, '===', J$.G(5489, J$.G(5481, J$.R(5465, 'obj', obj, 0), J$.R(5473, 'key', key, 0), 4), 'length', 0), J$.T(5497, 1, 22, false), 0) : J$._()) ? J$.B(290, '==', J$.T(5505, null, 25, false), J$.G(5545, J$.G(5529, J$.R(5513, 'obj', obj, 0), J$.R(5521, 'key', key, 0), 4), J$.T(5537, 0, 22, false), 4), 0) : J$._()))) {
                                    throw J$.X1(5609, J$.Th(5601, J$.F(5593, J$.R(5553, 'TypeError', TypeError, 2), 1)(J$.B(314, '+', J$.B(306, '+', J$.B(298, '+', J$.T(5561, 'Invalid value for schema Array path `', 21, false), J$.R(5569, 'prefix', prefix, 0), 0), J$.R(5577, 'key', key, 0), 0), J$.T(5585, '`', 21, false), 0))));
                                }
                                if (J$.X1(20465, J$.C(392, J$.C(376, J$.C(352, J$.M(5649, J$.R(5617, 'utils', utils, 1), 'isObject', 0)(J$.G(5641, J$.R(5625, 'obj', obj, 0), J$.R(5633, 'key', key, 0), 4))) ? J$.C(344, J$.U(322, '!', J$.G(5681, J$.G(5673, J$.R(5657, 'obj', obj, 0), J$.R(5665, 'key', key, 0), 4), 'constructor', 0))) ? J$._() : J$.B(330, '==', J$.T(5689, 'Object', 21, false), J$.M(5737, J$.R(5697, 'utils', utils, 1), 'getFunctionName', 0)(J$.G(5729, J$.G(5721, J$.R(5705, 'obj', obj, 0), J$.R(5713, 'key', key, 0), 4), 'constructor', 0)), 0) : J$._()) ? J$.C(368, J$.U(338, '!', J$.G(5793, J$.G(5761, J$.R(5745, 'obj', obj, 0), J$.R(5753, 'key', key, 0), 4), J$.G(5785, J$.G(5777, J$.R(5769, 'this', this, 0), 'options', 0), 'typeKey', 0), 4))) ? J$._() : J$.C(360, J$.B(346, '===', J$.G(5817, J$.G(5809, J$.R(5801, 'this', this, 0), 'options', 0), 'typeKey', 0), J$.T(5825, 'type', 21, false), 0)) ? J$.G(5865, J$.G(5857, J$.G(5849, J$.R(5833, 'obj', obj, 0), J$.R(5841, 'key', key, 0), 4), 'type', 0), 'type', 0) : J$._() : J$._()))) {
                                    if (J$.X1(20457, J$.C(384, J$.G(5913, J$.M(5905, J$.R(5873, 'Object', Object, 2), 'keys', 0)(J$.G(5897, J$.R(5881, 'obj', obj, 0), J$.R(5889, 'key', key, 0), 4)), 'length', 0)))) {
                                        J$.X1(5969, J$.P(5961, J$.G(5929, J$.R(5921, 'this', this, 0), 'nested', 0), J$.B(354, '+', J$.R(5937, 'prefix', prefix, 0), J$.R(5945, 'key', key, 0), 0), J$.T(5953, true, 23, false), 2));
                                        J$.X1(6041, J$.M(6033, J$.R(5977, 'this', this, 0), 'add', 0)(J$.G(6001, J$.R(5985, 'obj', obj, 0), J$.R(5993, 'key', key, 0), 4), J$.B(370, '+', J$.B(362, '+', J$.R(6009, 'prefix', prefix, 0), J$.R(6017, 'key', key, 0), 0), J$.T(6025, '.', 21, false), 0)));
                                    } else {
                                        J$.X1(6105, J$.M(6097, J$.R(6049, 'this', this, 0), 'path', 0)(J$.B(378, '+', J$.R(6057, 'prefix', prefix, 0), J$.R(6065, 'key', key, 0), 0), J$.G(6089, J$.R(6073, 'obj', obj, 0), J$.R(6081, 'key', key, 0), 4)));
                                    }
                                } else {
                                    J$.X1(6169, J$.M(6161, J$.R(6113, 'this', this, 0), 'path', 0)(J$.B(386, '+', J$.R(6121, 'prefix', prefix, 0), J$.R(6129, 'key', key, 0), 0), J$.G(6153, J$.R(6137, 'obj', obj, 0), J$.R(6145, 'key', key, 0), 4)));
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(20489, J$e);
                        } finally {
                            if (J$.Fr(20497))
                                continue jalangiLabel1290;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 6177), 0));
            J$.X1(6305, J$.P(6297, J$.R(6265, 'Schema', Schema, 1), 'reserved', J$.M(6289, J$.R(6273, 'Object', Object, 2), 'create', 0)(J$.T(6281, null, 25, false)), 0));
            var reserved = J$.X1(6337, J$.W(6329, 'reserved', J$.G(6321, J$.R(6313, 'Schema', Schema, 1), 'reserved', 0), reserved, 3));
            J$.X1(6673, J$.P(6665, J$.R(6345, 'reserved', reserved, 1), 'emit', J$.P(6657, J$.R(6353, 'reserved', reserved, 1), 'on', J$.P(6649, J$.R(6361, 'reserved', reserved, 1), 'once', J$.P(6641, J$.R(6369, 'reserved', reserved, 1), 'listeners', J$.P(6633, J$.R(6377, 'reserved', reserved, 1), 'removeListener', J$.P(6625, J$.R(6385, 'reserved', reserved, 1), 'collection', J$.P(6617, J$.R(6393, 'reserved', reserved, 1), 'db', J$.P(6609, J$.R(6401, 'reserved', reserved, 1), 'errors', J$.P(6601, J$.R(6409, 'reserved', reserved, 1), 'init', J$.P(6593, J$.R(6417, 'reserved', reserved, 1), 'isModified', J$.P(6585, J$.R(6425, 'reserved', reserved, 1), 'isNew', J$.P(6577, J$.R(6433, 'reserved', reserved, 1), 'get', J$.P(6569, J$.R(6441, 'reserved', reserved, 1), 'modelName', J$.P(6561, J$.R(6449, 'reserved', reserved, 1), 'save', J$.P(6553, J$.R(6457, 'reserved', reserved, 1), 'schema', J$.P(6545, J$.R(6465, 'reserved', reserved, 1), 'set', J$.P(6537, J$.R(6473, 'reserved', reserved, 1), 'toObject', J$.P(6529, J$.R(6481, 'reserved', reserved, 1), 'validate', J$.P(6521, J$.R(6489, 'reserved', reserved, 1), '_pres', J$.P(6513, J$.R(6497, 'reserved', reserved, 1), '_posts', J$.T(6505, 1, 22, false), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0));
            var warnings = J$.X1(6697, J$.W(6689, 'warnings', J$.T(6681, {}, 11, false), warnings, 3));
            J$.X1(6737, J$.P(6729, J$.R(6705, 'warnings', warnings, 1), 'increment', J$.B(394, '+', J$.T(6713, '`increment` should not be used as a schema path name ', 21, false), J$.T(6721, 'unless you have disabled versioning.', 21, false), 0), 0));
            J$.X1(8449, J$.P(8441, J$.G(6753, J$.R(6745, 'Schema', Schema, 1), 'prototype', 0), 'path', J$.T(8433, function (path, obj) {
                jalangiLabel1292:
                    while (true) {
                        try {
                            J$.Fe(8369, arguments.callee, this, arguments);
                            arguments = J$.N(8377, 'arguments', arguments, 4);
                            path = J$.N(8385, 'path', path, 4);
                            obj = J$.N(8393, 'obj', obj, 4);
                            J$.N(8401, 'subpaths', subpaths, 0);
                            J$.N(8409, 'last', last, 0);
                            J$.N(8417, 'branch', branch, 0);
                            J$.N(8425, 'key', key, 0);
                            if (J$.X1(20537, J$.C(440, J$.B(402, '==', J$.R(6761, 'obj', obj, 0), J$.T(6769, undefined, 24, false), 0)))) {
                                if (J$.X1(20505, J$.C(408, J$.G(6801, J$.G(6785, J$.R(6777, 'this', this, 0), 'paths', 0), J$.R(6793, 'path', path, 0), 4))))
                                    return J$.X1(6849, J$.Rt(6841, J$.G(6833, J$.G(6817, J$.R(6809, 'this', this, 0), 'paths', 0), J$.R(6825, 'path', path, 0), 4)));
                                if (J$.X1(20513, J$.C(416, J$.G(6881, J$.G(6865, J$.R(6857, 'this', this, 0), 'subpaths', 0), J$.R(6873, 'path', path, 0), 4))))
                                    return J$.X1(6929, J$.Rt(6921, J$.G(6913, J$.G(6897, J$.R(6889, 'this', this, 0), 'subpaths', 0), J$.R(6905, 'path', path, 0), 4)));
                                if (J$.X1(20521, J$.C(424, J$.G(6961, J$.G(6945, J$.R(6937, 'this', this, 0), 'singleNestedPaths', 0), J$.R(6953, 'path', path, 0), 4)))) {
                                    return J$.X1(7009, J$.Rt(7001, J$.G(6993, J$.G(6977, J$.R(6969, 'this', this, 0), 'singleNestedPaths', 0), J$.R(6985, 'path', path, 0), 4)));
                                }
                                return J$.X1(7089, J$.Rt(7081, J$.X1(20529, J$.C(432, J$.M(7033, J$.T(7017, /\.\d+\.?.*$/, 14, false), 'test', 0)(J$.R(7025, 'path', path, 0)))) ? J$.F(7065, J$.R(7041, 'getPositionalPath', getPositionalPath, 1), 0)(J$.R(7049, 'this', this, 0), J$.R(7057, 'path', path, 0)) : J$.T(7073, undefined, 24, false)));
                            }
                            if (J$.X1(20545, J$.C(448, J$.G(7113, J$.R(7097, 'reserved', reserved, 1), J$.R(7105, 'path', path, 0), 4)))) {
                                throw J$.X1(7169, J$.Th(7161, J$.F(7153, J$.R(7121, 'Error', Error, 2), 1)(J$.B(418, '+', J$.B(410, '+', J$.T(7129, '`', 21, false), J$.R(7137, 'path', path, 0), 0), J$.T(7145, '` may not be used as a schema pathname', 21, false), 0))));
                            }
                            if (J$.X1(20553, J$.C(456, J$.G(7193, J$.R(7177, 'warnings', warnings, 1), J$.R(7185, 'path', path, 0), 4)))) {
                                J$.X1(7249, J$.M(7241, J$.R(7201, 'console', console, 2), 'log', 0)(J$.B(426, '+', J$.T(7209, 'WARN: ', 21, false), J$.G(7233, J$.R(7217, 'warnings', warnings, 1), J$.R(7225, 'path', path, 0), 4), 0)));
                            }
                            var subpaths = J$.X1(7321, J$.W(7313, 'subpaths', J$.M(7273, J$.R(7257, 'path', path, 0), 'split', 0)(J$.T(7265, /\./, 14, false)), subpaths, 1)), last = J$.X1(7337, J$.W(7329, 'last', J$.M(7289, J$.R(7281, 'subpaths', subpaths, 0), 'pop', 0)(), last, 1)), branch = J$.X1(7353, J$.W(7345, 'branch', J$.G(7305, J$.R(7297, 'this', this, 0), 'tree', 0), branch, 1));
                            J$.X1(7769, J$.M(7761, J$.R(7361, 'subpaths', subpaths, 0), 'forEach', 0)(J$.T(7753, function (sub, i) {
                                jalangiLabel1291:
                                    while (true) {
                                        try {
                                            J$.Fe(7713, arguments.callee, this, arguments);
                                            arguments = J$.N(7721, 'arguments', arguments, 4);
                                            sub = J$.N(7729, 'sub', sub, 4);
                                            i = J$.N(7737, 'i', i, 4);
                                            J$.N(7745, 'msg', msg, 0);
                                            if (J$.X1(20561, J$.C(464, J$.U(434, '!', J$.G(7385, J$.R(7369, 'branch', branch, 0), J$.R(7377, 'sub', sub, 0), 4)))))
                                                J$.X1(7425, J$.P(7417, J$.R(7393, 'branch', branch, 0), J$.R(7401, 'sub', sub, 0), J$.T(7409, {}, 11, false), 2));
                                            if (J$.X1(20569, J$.C(472, J$.B(450, '!=', J$.T(7433, 'object', 21, false), J$.U(442, 'typeof', J$.G(7457, J$.R(7441, 'branch', branch, 0), J$.R(7449, 'sub', sub, 0), 4)), 0)))) {
                                                var msg = J$.X1(7625, J$.W(7617, 'msg', J$.B(506, '+', J$.B(498, '+', J$.B(490, '+', J$.B(482, '+', J$.B(474, '+', J$.B(466, '+', J$.B(458, '+', J$.T(7465, 'Cannot set nested path `', 21, false), J$.R(7473, 'path', path, 0), 0), J$.T(7481, '`. ', 21, false), 0), J$.T(7489, 'Parent path `', 21, false), 0), J$.M(7561, J$.M(7545, J$.M(7521, J$.R(7497, 'subpaths', subpaths, 0), 'slice', 0)(J$.T(7505, 0, 22, false), J$.R(7513, 'i', i, 0)), 'concat', 0)(J$.T(7537, [J$.R(7529, 'sub', sub, 0)], 10, false)), 'join', 0)(J$.T(7553, '.', 21, false)), 0), J$.T(7569, '` already set to type ', 21, false), 0), J$.G(7601, J$.G(7593, J$.R(7577, 'branch', branch, 0), J$.R(7585, 'sub', sub, 0), 4), 'name', 0), 0), J$.T(7609, '.', 21, false), 0), msg, 1));
                                                throw J$.X1(7665, J$.Th(7657, J$.F(7649, J$.R(7633, 'Error', Error, 2), 1)(J$.R(7641, 'msg', msg, 0))));
                                            }
                                            J$.X1(7705, branch = J$.W(7697, 'branch', J$.G(7689, J$.R(7673, 'branch', branch, 0), J$.R(7681, 'sub', sub, 0), 4), branch, 0));
                                        } catch (J$e) {
                                            J$.Ex(20577, J$e);
                                        } finally {
                                            if (J$.Fr(20585))
                                                continue jalangiLabel1291;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 7713)));
                            J$.X1(7825, J$.P(7817, J$.R(7777, 'branch', branch, 0), J$.R(7785, 'last', last, 0), J$.M(7809, J$.R(7793, 'utils', utils, 1), 'clone', 0)(J$.R(7801, 'obj', obj, 0)), 2));
                            J$.X1(7913, J$.P(7905, J$.G(7841, J$.R(7833, 'this', this, 0), 'paths', 0), J$.R(7849, 'path', path, 0), J$.M(7897, J$.R(7857, 'Schema', Schema, 1), 'interpretAsType', 0)(J$.R(7865, 'path', path, 0), J$.R(7873, 'obj', obj, 0), J$.G(7889, J$.R(7881, 'this', this, 0), 'options', 0)), 2));
                            if (J$.X1(20593, J$.C(480, J$.G(7953, J$.G(7945, J$.G(7929, J$.R(7921, 'this', this, 0), 'paths', 0), J$.R(7937, 'path', path, 0), 4), '$isSingleNested', 0)))) {
                                for (J$._tm_p in J$.H(8129, J$.G(8001, J$.G(7993, J$.G(7985, J$.G(7969, J$.R(7961, 'this', this, 0), 'paths', 0), J$.R(7977, 'path', path, 0), 4), 'schema', 0), 'paths', 0))) {
                                    var key = J$.X1(8145, J$.W(8137, 'key', J$._tm_p, key, 1));
                                    {
                                        {
                                            J$.X1(8121, J$.P(8113, J$.G(8017, J$.R(8009, 'this', this, 0), 'singleNestedPaths', 0), J$.B(522, '+', J$.B(514, '+', J$.R(8025, 'path', path, 0), J$.T(8033, '.', 21, false), 0), J$.R(8041, 'key', key, 0), 0), J$.G(8105, J$.G(8089, J$.G(8081, J$.G(8073, J$.G(8057, J$.R(8049, 'this', this, 0), 'paths', 0), J$.R(8065, 'path', path, 0), 4), 'schema', 0), 'paths', 0), J$.R(8097, 'key', key, 0), 4), 2));
                                        }
                                    }
                                }
                                for (J$._tm_p in J$.H(8321, J$.G(8193, J$.G(8185, J$.G(8177, J$.G(8161, J$.R(8153, 'this', this, 0), 'paths', 0), J$.R(8169, 'path', path, 0), 4), 'schema', 0), 'singleNestedPaths', 0))) {
                                    J$.X1(8337, key = J$.W(8329, 'key', J$._tm_p, key, 0));
                                    {
                                        {
                                            J$.X1(8313, J$.P(8305, J$.G(8209, J$.R(8201, 'this', this, 0), 'singleNestedPaths', 0), J$.B(538, '+', J$.B(530, '+', J$.R(8217, 'path', path, 0), J$.T(8225, '.', 21, false), 0), J$.R(8233, 'key', key, 0), 0), J$.G(8297, J$.G(8281, J$.G(8273, J$.G(8265, J$.G(8249, J$.R(8241, 'this', this, 0), 'paths', 0), J$.R(8257, 'path', path, 0), 4), 'schema', 0), 'singleNestedPaths', 0), J$.R(8289, 'key', key, 0), 4), 2));
                                        }
                                    }
                                }
                            }
                            return J$.X1(8361, J$.Rt(8353, J$.R(8345, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(20601, J$e);
                        } finally {
                            if (J$.Fr(20609))
                                continue jalangiLabel1292;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 8369), 0));
            J$.X1(10209, J$.P(10201, J$.R(8457, 'Schema', Schema, 1), 'interpretAsType', J$.T(10193, function (path, obj, options) {
                jalangiLabel1293:
                    while (true) {
                        try {
                            J$.Fe(10097, arguments.callee, this, arguments);
                            arguments = J$.N(10105, 'arguments', arguments, 4);
                            path = J$.N(10113, 'path', path, 4);
                            obj = J$.N(10121, 'obj', obj, 4);
                            options = J$.N(10129, 'options', options, 4);
                            J$.N(10137, 'constructorName', constructorName, 0);
                            J$.N(10145, 'oldObj', oldObj, 0);
                            J$.N(10153, 'type', type, 0);
                            J$.N(10161, 'cast', cast, 0);
                            J$.N(10169, 'childSchemaOptions', childSchemaOptions, 0);
                            J$.N(10177, 'childSchema', childSchema, 0);
                            J$.N(10185, 'name', name, 0);
                            if (J$.X1(20625, J$.C(496, J$.G(8473, J$.R(8465, 'obj', obj, 0), 'constructor', 0)))) {
                                var constructorName = J$.X1(8521, J$.W(8513, 'constructorName', J$.M(8505, J$.R(8481, 'utils', utils, 1), 'getFunctionName', 0)(J$.G(8497, J$.R(8489, 'obj', obj, 0), 'constructor', 0)), constructorName, 1));
                                if (J$.X1(20617, J$.C(488, J$.B(546, '!=', J$.R(8529, 'constructorName', constructorName, 0), J$.T(8537, 'Object', 21, false), 0)))) {
                                    var oldObj = J$.X1(8561, J$.W(8553, 'oldObj', J$.R(8545, 'obj', obj, 0), oldObj, 1));
                                    J$.X1(8585, obj = J$.W(8577, 'obj', J$.T(8569, {}, 11, false), obj, 0));
                                    J$.X1(8633, J$.P(8625, J$.R(8593, 'obj', obj, 0), J$.G(8609, J$.R(8601, 'options', options, 0), 'typeKey', 0), J$.R(8617, 'oldObj', oldObj, 0), 2));
                                }
                            }
                            var type = J$.X1(8769, J$.W(8761, 'type', J$.X1(20633, J$.C(520, J$.C(512, J$.G(8665, J$.R(8641, 'obj', obj, 0), J$.G(8657, J$.R(8649, 'options', options, 0), 'typeKey', 0), 4)) ? J$.C(504, J$.B(554, '!==', J$.G(8681, J$.R(8673, 'options', options, 0), 'typeKey', 0), J$.T(8689, 'type', 21, false), 0)) ? J$._() : J$.U(562, '!', J$.G(8713, J$.G(8705, J$.R(8697, 'obj', obj, 0), 'type', 0), 'type', 0)) : J$._())) ? J$.G(8745, J$.R(8721, 'obj', obj, 0), J$.G(8737, J$.R(8729, 'options', options, 0), 'typeKey', 0), 4) : J$.T(8753, {}, 11, false), type, 1));
                            if (J$.X1(20641, J$.C(536, J$.C(528, J$.B(570, '==', J$.T(8777, 'Object', 21, false), J$.M(8809, J$.R(8785, 'utils', utils, 1), 'getFunctionName', 0)(J$.G(8801, J$.R(8793, 'type', type, 0), 'constructor', 0)), 0)) ? J$._() : J$.B(578, '==', J$.T(8817, 'mixed', 21, false), J$.R(8825, 'type', type, 0), 0)))) {
                                return J$.X1(8873, J$.Rt(8865, J$.M(8857, J$.R(8833, 'MongooseTypes', MongooseTypes, 1), 'Mixed', 2)(J$.R(8841, 'path', path, 0), J$.R(8849, 'obj', obj, 0))));
                            }
                            if (J$.X1(20689, J$.C(664, J$.C(552, J$.C(544, J$.M(8897, J$.R(8881, 'Array', Array, 2), 'isArray', 0)(J$.R(8889, 'type', type, 0))) ? J$._() : J$.B(586, '==', J$.R(8905, 'Array', Array, 2), J$.R(8913, 'type', type, 0), 0)) ? J$._() : J$.B(594, '==', J$.T(8921, 'array', 21, false), J$.R(8929, 'type', type, 0), 0)))) {
                                var cast = J$.X1(9017, J$.W(9009, 'cast', J$.X1(20649, J$.C(568, J$.C(560, J$.B(602, '==', J$.R(8937, 'Array', Array, 2), J$.R(8945, 'type', type, 0), 0)) ? J$._() : J$.B(610, '==', J$.T(8953, 'array', 21, false), J$.R(8961, 'type', type, 0), 0))) ? J$.G(8977, J$.R(8969, 'obj', obj, 0), 'cast', 0) : J$.G(9001, J$.R(8985, 'type', type, 0), J$.T(8993, 0, 22, false), 4), cast, 1));
                                if (J$.X1(20657, J$.C(584, J$.C(576, J$.R(9025, 'cast', cast, 0)) ? J$.G(9041, J$.R(9033, 'cast', cast, 0), 'instanceOfSchema', 0) : J$._()))) {
                                    return J$.X1(9097, J$.Rt(9089, J$.M(9081, J$.R(9049, 'MongooseTypes', MongooseTypes, 1), 'DocumentArray', 2)(J$.R(9057, 'path', path, 0), J$.R(9065, 'cast', cast, 0), J$.R(9073, 'obj', obj, 0))));
                                }
                                if (J$.X1(20681, J$.C(648, J$.B(626, '==', J$.T(9105, 'string', 21, false), J$.U(618, 'typeof', J$.R(9113, 'cast', cast, 0)), 0)))) {
                                    J$.X1(9201, cast = J$.W(9193, 'cast', J$.G(9185, J$.R(9121, 'MongooseTypes', MongooseTypes, 1), J$.B(634, '+', J$.M(9153, J$.M(9145, J$.R(9129, 'cast', cast, 0), 'charAt', 0)(J$.T(9137, 0, 22, false)), 'toUpperCase', 0)(), J$.M(9177, J$.R(9161, 'cast', cast, 0), 'substring', 0)(J$.T(9169, 1, 22, false)), 0), 4), cast, 0));
                                } else if (J$.X1(20673, J$.C(640, J$.C(624, J$.C(616, J$.C(608, J$.R(9209, 'cast', cast, 0)) ? J$.C(600, J$.U(642, '!', J$.G(9241, J$.R(9217, 'cast', cast, 0), J$.G(9233, J$.R(9225, 'options', options, 0), 'typeKey', 0), 4))) ? J$._() : J$.C(592, J$.B(650, '===', J$.G(9257, J$.R(9249, 'options', options, 0), 'typeKey', 0), J$.T(9265, 'type', 21, false), 0)) ? J$.G(9289, J$.G(9281, J$.R(9273, 'cast', cast, 0), 'type', 0), 'type', 0) : J$._() : J$._()) ? J$.B(658, '==', J$.T(9297, 'Object', 21, false), J$.M(9329, J$.R(9305, 'utils', utils, 1), 'getFunctionName', 0)(J$.G(9321, J$.R(9313, 'cast', cast, 0), 'constructor', 0)), 0) : J$._()) ? J$.G(9361, J$.M(9353, J$.R(9337, 'Object', Object, 2), 'keys', 0)(J$.R(9345, 'cast', cast, 0)), 'length', 0) : J$._()))) {
                                    var childSchemaOptions = J$.X1(9401, J$.W(9393, 'childSchemaOptions', J$.T(9385, {
                                        minimize: J$.G(9377, J$.R(9369, 'options', options, 0), 'minimize', 0)
                                    }, 11, false), childSchemaOptions, 1));
                                    if (J$.X1(20665, J$.C(632, J$.G(9417, J$.R(9409, 'options', options, 0), 'typeKey', 0)))) {
                                        J$.X1(9457, J$.P(9449, J$.R(9425, 'childSchemaOptions', childSchemaOptions, 0), 'typeKey', J$.G(9441, J$.R(9433, 'options', options, 0), 'typeKey', 0), 0));
                                    }
                                    var childSchema = J$.X1(9505, J$.W(9497, 'childSchema', J$.F(9489, J$.R(9465, 'Schema', Schema, 1), 1)(J$.R(9473, 'cast', cast, 0), J$.R(9481, 'childSchemaOptions', childSchemaOptions, 0)), childSchema, 1));
                                    return J$.X1(9561, J$.Rt(9553, J$.M(9545, J$.R(9513, 'MongooseTypes', MongooseTypes, 1), 'DocumentArray', 2)(J$.R(9521, 'path', path, 0), J$.R(9529, 'childSchema', childSchema, 0), J$.R(9537, 'obj', obj, 0))));
                                }
                                return J$.X1(9633, J$.Rt(9625, J$.M(9617, J$.R(9569, 'MongooseTypes', MongooseTypes, 1), 'Array', 2)(J$.R(9577, 'path', path, 0), J$.C(656, J$.R(9585, 'cast', cast, 0)) ? J$._() : J$.G(9601, J$.R(9593, 'MongooseTypes', MongooseTypes, 1), 'Mixed', 0), J$.R(9609, 'obj', obj, 0))));
                            }
                            if (J$.X1(20697, J$.C(680, J$.C(672, J$.R(9641, 'type', type, 0)) ? J$.G(9657, J$.R(9649, 'type', type, 0), 'instanceOfSchema', 0) : J$._()))) {
                                return J$.X1(9713, J$.Rt(9705, J$.M(9697, J$.R(9665, 'MongooseTypes', MongooseTypes, 1), 'Embedded', 2)(J$.R(9673, 'type', type, 0), J$.R(9681, 'path', path, 0), J$.R(9689, 'obj', obj, 0))));
                            }
                            var name;
                            if (J$.X1(20713, J$.C(704, J$.M(9737, J$.R(9721, 'Buffer', Buffer, 2), 'isBuffer', 0)(J$.R(9729, 'type', type, 0))))) {
                                J$.X1(9761, name = J$.W(9753, 'name', J$.T(9745, 'Buffer', 21, false), name, 0));
                            } else {
                                J$.X1(9841, name = J$.W(9833, 'name', J$.X1(20705, J$.C(696, J$.B(674, '==', J$.T(9769, 'string', 21, false), J$.U(666, 'typeof', J$.R(9777, 'type', type, 0)), 0))) ? J$.R(9785, 'type', type, 0) : J$.C(688, J$.G(9801, J$.R(9793, 'type', type, 0), 'schemaName', 0)) ? J$._() : J$.M(9825, J$.R(9809, 'utils', utils, 1), 'getFunctionName', 0)(J$.R(9817, 'type', type, 0)), name, 0));
                            }
                            if (J$.X1(20721, J$.C(712, J$.R(9849, 'name', name, 0)))) {
                                J$.X1(9921, name = J$.W(9913, 'name', J$.B(682, '+', J$.M(9881, J$.M(9873, J$.R(9857, 'name', name, 0), 'charAt', 0)(J$.T(9865, 0, 22, false)), 'toUpperCase', 0)(), J$.M(9905, J$.R(9889, 'name', name, 0), 'substring', 0)(J$.T(9897, 1, 22, false)), 0), name, 0));
                            }
                            if (J$.X1(20729, J$.C(720, J$.B(690, '==', J$.T(9929, undefined, 24, false), J$.G(9953, J$.R(9937, 'MongooseTypes', MongooseTypes, 1), J$.R(9945, 'name', name, 0), 4), 0)))) {
                                throw J$.X1(10033, J$.Th(10025, J$.F(10017, J$.R(9961, 'TypeError', TypeError, 2), 1)(J$.B(730, '+', J$.B(722, '+', J$.B(714, '+', J$.B(706, '+', J$.B(698, '+', J$.T(9969, 'Undefined type `', 21, false), J$.R(9977, 'name', name, 0), 0), J$.T(9985, '` at `', 21, false), 0), J$.R(9993, 'path', path, 0), 0), J$.T(10001, '`\n  Did you try nesting Schemas? ', 21, false), 0), J$.T(10009, 'You can only nest using refs or arrays.', 21, false), 0))));
                            }
                            return J$.X1(10089, J$.Rt(10081, J$.M(10073, J$.R(10041, 'MongooseTypes', MongooseTypes, 1), J$.R(10049, 'name', name, 0), 3)(J$.R(10057, 'path', path, 0), J$.R(10065, 'obj', obj, 0))));
                        } catch (J$e) {
                            J$.Ex(20737, J$e);
                        } finally {
                            if (J$.Fr(20745))
                                continue jalangiLabel1293;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 10097), 0));
            J$.X1(10561, J$.P(10553, J$.G(10225, J$.R(10217, 'Schema', Schema, 1), 'prototype', 0), 'eachPath', J$.T(10545, function (fn) {
                jalangiLabel1294:
                    while (true) {
                        try {
                            J$.Fe(10497, arguments.callee, this, arguments);
                            arguments = J$.N(10505, 'arguments', arguments, 4);
                            fn = J$.N(10513, 'fn', fn, 4);
                            J$.N(10521, 'keys', keys, 0);
                            J$.N(10529, 'len', len, 0);
                            J$.N(10537, 'i', i, 0);
                            var keys = J$.X1(10289, J$.W(10281, 'keys', J$.M(10257, J$.R(10233, 'Object', Object, 2), 'keys', 0)(J$.G(10249, J$.R(10241, 'this', this, 0), 'paths', 0)), keys, 1)), len = J$.X1(10305, J$.W(10297, 'len', J$.G(10273, J$.R(10265, 'keys', keys, 0), 'length', 0), len, 1));
                            for (var i = J$.X1(10329, J$.W(10321, 'i', J$.T(10313, 0, 22, false), i, 1)); J$.X1(20753, J$.C(728, J$.B(738, '<', J$.R(10337, 'i', i, 0), J$.R(10345, 'len', len, 0), 0))); J$.X1(20761, i = J$.W(10369, 'i', J$.B(754, '+', J$.U(746, '+', J$.R(10361, 'i', i, 0)), J$.T(10353, 1, 22, false), 0), i, 0))) {
                                J$.X1(10465, J$.F(10457, J$.R(10377, 'fn', fn, 0), 0)(J$.G(10401, J$.R(10385, 'keys', keys, 0), J$.R(10393, 'i', i, 0), 4), J$.G(10449, J$.G(10417, J$.R(10409, 'this', this, 0), 'paths', 0), J$.G(10441, J$.R(10425, 'keys', keys, 0), J$.R(10433, 'i', i, 0), 4), 4)));
                            }
                            return J$.X1(10489, J$.Rt(10481, J$.R(10473, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(20769, J$e);
                        } finally {
                            if (J$.Fr(20777))
                                continue jalangiLabel1294;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 10497), 0));
            J$.X1(11009, J$.P(11001, J$.G(10577, J$.R(10569, 'Schema', Schema, 1), 'prototype', 0), 'requiredPaths', J$.T(10993, function requiredPaths(invalidate) {
                jalangiLabel1295:
                    while (true) {
                        try {
                            J$.Fe(10929, arguments.callee, this, arguments);
                            arguments = J$.N(10937, 'arguments', arguments, 4);
                            requiredPaths = J$.N(10945, 'requiredPaths', requiredPaths, 0);
                            invalidate = J$.N(10953, 'invalidate', invalidate, 4);
                            J$.N(10961, 'paths', paths, 0);
                            J$.N(10969, 'i', i, 0);
                            J$.N(10977, 'ret', ret, 0);
                            J$.N(10985, 'path', path, 0);
                            if (J$.X1(20785, J$.C(744, J$.C(736, J$.G(10593, J$.R(10585, 'this', this, 0), '_requiredpaths', 0)) ? J$.U(762, '!', J$.R(10601, 'invalidate', invalidate, 0)) : J$._())))
                                return J$.X1(10633, J$.Rt(10625, J$.G(10617, J$.R(10609, 'this', this, 0), '_requiredpaths', 0)));
                            var paths = J$.X1(10705, J$.W(10697, 'paths', J$.M(10665, J$.R(10641, 'Object', Object, 2), 'keys', 0)(J$.G(10657, J$.R(10649, 'this', this, 0), 'paths', 0)), paths, 1)), i = J$.X1(10721, J$.W(10713, 'i', J$.G(10681, J$.R(10673, 'paths', paths, 0), 'length', 0), i, 1)), ret = J$.X1(10737, J$.W(10729, 'ret', J$.T(10689, [], 10, false), ret, 1));
                            while (J$.X1(20801, J$.C(760, J$.B(786, '+', i = J$.W(10761, 'i', J$.B(778, '-', J$.U(770, '+', J$.R(10753, 'i', i, 0)), J$.T(10745, 1, 22, false), 0), i, 0), J$.T(10769, 1, 22, false), 0)))) {
                                var path = J$.X1(10809, J$.W(10801, 'path', J$.G(10793, J$.R(10777, 'paths', paths, 0), J$.R(10785, 'i', i, 0), 4), path, 1));
                                if (J$.X1(20793, J$.C(752, J$.G(10849, J$.G(10841, J$.G(10825, J$.R(10817, 'this', this, 0), 'paths', 0), J$.R(10833, 'path', path, 0), 4), 'isRequired', 0))))
                                    J$.X1(10881, J$.M(10873, J$.R(10857, 'ret', ret, 0), 'push', 0)(J$.R(10865, 'path', path, 0)));
                            }
                            return J$.X1(10921, J$.Rt(10913, J$.P(10905, J$.R(10889, 'this', this, 0), '_requiredpaths', J$.R(10897, 'ret', ret, 0), 0)));
                        } catch (J$e) {
                            J$.Ex(20809, J$e);
                        } finally {
                            if (J$.Fr(20817))
                                continue jalangiLabel1295;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 10929), 0));
            J$.X1(11169, J$.P(11161, J$.G(11025, J$.R(11017, 'Schema', Schema, 1), 'prototype', 0), 'indexedPaths', J$.T(11153, function indexedPaths() {
                jalangiLabel1296:
                    while (true) {
                        try {
                            J$.Fe(11129, arguments.callee, this, arguments);
                            arguments = J$.N(11137, 'arguments', arguments, 4);
                            indexedPaths = J$.N(11145, 'indexedPaths', indexedPaths, 0);
                            if (J$.X1(20825, J$.C(768, J$.G(11041, J$.R(11033, 'this', this, 0), '_indexedpaths', 0))))
                                return J$.X1(11073, J$.Rt(11065, J$.G(11057, J$.R(11049, 'this', this, 0), '_indexedpaths', 0)));
                            return J$.X1(11121, J$.Rt(11113, J$.P(11105, J$.R(11081, 'this', this, 0), '_indexedpaths', J$.M(11097, J$.R(11089, 'this', this, 0), 'indexes', 0)(), 0)));
                        } catch (J$e) {
                            J$.Ex(20833, J$e);
                        } finally {
                            if (J$.Fr(20841))
                                continue jalangiLabel1296;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 11129), 0));
            J$.X1(11569, J$.P(11561, J$.G(11185, J$.R(11177, 'Schema', Schema, 1), 'prototype', 0), 'pathType', J$.T(11553, function (path) {
                jalangiLabel1297:
                    while (true) {
                        try {
                            J$.Fe(11529, arguments.callee, this, arguments);
                            arguments = J$.N(11537, 'arguments', arguments, 4);
                            path = J$.N(11545, 'path', path, 4);
                            if (J$.X1(20849, J$.C(776, J$.B(794, 'in', J$.R(11193, 'path', path, 0), J$.G(11209, J$.R(11201, 'this', this, 0), 'paths', 0), 0))))
                                return J$.X1(11233, J$.Rt(11225, J$.T(11217, 'real', 21, false)));
                            if (J$.X1(20857, J$.C(784, J$.B(802, 'in', J$.R(11241, 'path', path, 0), J$.G(11257, J$.R(11249, 'this', this, 0), 'virtuals', 0), 0))))
                                return J$.X1(11281, J$.Rt(11273, J$.T(11265, 'virtual', 21, false)));
                            if (J$.X1(20865, J$.C(792, J$.B(810, 'in', J$.R(11289, 'path', path, 0), J$.G(11305, J$.R(11297, 'this', this, 0), 'nested', 0), 0))))
                                return J$.X1(11329, J$.Rt(11321, J$.T(11313, 'nested', 21, false)));
                            if (J$.X1(20873, J$.C(800, J$.B(818, 'in', J$.R(11337, 'path', path, 0), J$.G(11353, J$.R(11345, 'this', this, 0), 'subpaths', 0), 0))))
                                return J$.X1(11377, J$.Rt(11369, J$.T(11361, 'real', 21, false)));
                            if (J$.X1(20881, J$.C(808, J$.B(826, 'in', J$.R(11385, 'path', path, 0), J$.G(11401, J$.R(11393, 'this', this, 0), 'singleNestedPaths', 0), 0)))) {
                                return J$.X1(11425, J$.Rt(11417, J$.T(11409, 'real', 21, false)));
                            }
                            if (J$.X1(20889, J$.C(816, J$.M(11449, J$.T(11433, /\.\d+\.|\.\d+$/, 14, false), 'test', 0)(J$.R(11441, 'path', path, 0))))) {
                                return J$.X1(11497, J$.Rt(11489, J$.F(11481, J$.R(11457, 'getPositionalPathType', getPositionalPathType, 1), 0)(J$.R(11465, 'this', this, 0), J$.R(11473, 'path', path, 0))));
                            } else {
                                return J$.X1(11521, J$.Rt(11513, J$.T(11505, 'adhocOrUndefined', 21, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(20897, J$e);
                        } finally {
                            if (J$.Fr(20905))
                                continue jalangiLabel1297;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 11529), 0));
            J$.X1(12001, J$.P(11993, J$.G(11585, J$.R(11577, 'Schema', Schema, 1), 'prototype', 0), 'hasMixedParent', J$.T(11985, function (path) {
                jalangiLabel1298:
                    while (true) {
                        try {
                            J$.Fe(11945, arguments.callee, this, arguments);
                            arguments = J$.N(11953, 'arguments', arguments, 4);
                            path = J$.N(11961, 'path', path, 4);
                            J$.N(11969, 'subpaths', subpaths, 0);
                            J$.N(11977, 'i', i, 0);
                            var subpaths = J$.X1(11625, J$.W(11617, 'subpaths', J$.M(11609, J$.R(11593, 'path', path, 0), 'split', 0)(J$.T(11601, /\./g, 14, false)), subpaths, 1));
                            J$.X1(11649, path = J$.W(11641, 'path', J$.T(11633, '', 21, false), path, 0));
                            for (var i = J$.X1(11673, J$.W(11665, 'i', J$.T(11657, 0, 22, false), i, 1)); J$.X1(20929, J$.C(848, J$.B(834, '<', J$.R(11681, 'i', i, 0), J$.G(11697, J$.R(11689, 'subpaths', subpaths, 0), 'length', 0), 0))); J$.X1(20937, i = J$.W(11721, 'i', J$.B(850, '+', J$.U(842, '+', J$.R(11713, 'i', i, 0)), J$.T(11705, 1, 22, false), 0), i, 0))) {
                                J$.X1(11817, path = J$.W(11809, 'path', J$.X1(20913, J$.C(824, J$.B(858, '>', J$.R(11729, 'i', i, 0), J$.T(11737, 0, 22, false), 0))) ? J$.B(874, '+', J$.B(866, '+', J$.R(11745, 'path', path, 0), J$.T(11753, '.', 21, false), 0), J$.G(11777, J$.R(11761, 'subpaths', subpaths, 0), J$.R(11769, 'i', i, 0), 4), 0) : J$.G(11801, J$.R(11785, 'subpaths', subpaths, 0), J$.R(11793, 'i', i, 0), 4), path, 0));
                                if (J$.X1(20921, J$.C(840, J$.C(832, J$.B(882, 'in', J$.R(11825, 'path', path, 0), J$.G(11841, J$.R(11833, 'this', this, 0), 'paths', 0), 0)) ? J$.B(890, 'instanceof', J$.G(11873, J$.G(11857, J$.R(11849, 'this', this, 0), 'paths', 0), J$.R(11865, 'path', path, 0), 4), J$.G(11889, J$.R(11881, 'MongooseTypes', MongooseTypes, 1), 'Mixed', 0), 0) : J$._()))) {
                                    return J$.X1(11913, J$.Rt(11905, J$.T(11897, true, 23, false)));
                                }
                            }
                            return J$.X1(11937, J$.Rt(11929, J$.T(11921, false, 23, false)));
                        } catch (J$e) {
                            J$.Ex(20945, J$e);
                        } finally {
                            if (J$.Fr(20953))
                                continue jalangiLabel1298;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 11945), 0));
            J$.X1(13273, J$.P(13265, J$.G(13137, J$.R(13129, 'Schema', Schema, 1), 'prototype', 0), 'queue', J$.T(13257, function (name, args) {
                jalangiLabel1301:
                    while (true) {
                        try {
                            J$.Fe(13225, arguments.callee, this, arguments);
                            arguments = J$.N(13233, 'arguments', arguments, 4);
                            name = J$.N(13241, 'name', name, 4);
                            args = J$.N(13249, 'args', args, 4);
                            J$.X1(13193, J$.M(13185, J$.G(13153, J$.R(13145, 'this', this, 0), 'callQueue', 0), 'push', 0)(J$.T(13177, [
                                J$.R(13161, 'name', name, 0),
                                J$.R(13169, 'args', args, 0)
                            ], 10, false)));
                            return J$.X1(13217, J$.Rt(13209, J$.R(13201, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(21073, J$e);
                        } finally {
                            if (J$.Fr(21081))
                                continue jalangiLabel1301;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 13225), 0));
            J$.X1(13553, J$.P(13545, J$.G(13289, J$.R(13281, 'Schema', Schema, 1), 'prototype', 0), 'pre', J$.T(13537, function () {
                jalangiLabel1302:
                    while (true) {
                        try {
                            J$.Fe(13513, arguments.callee, this, arguments);
                            arguments = J$.N(13521, 'arguments', arguments, 4);
                            J$.N(13529, 'name', name, 0);
                            var name = J$.X1(13329, J$.W(13321, 'name', J$.G(13313, J$.R(13297, 'arguments', arguments, 2), J$.T(13305, 0, 22, false), 4), name, 1));
                            if (J$.X1(21089, J$.C(960, J$.G(13353, J$.R(13337, 'IS_QUERY_HOOK', IS_QUERY_HOOK, 1), J$.R(13345, 'name', name, 0), 4)))) {
                                J$.X1(13433, J$.M(13425, J$.G(13385, J$.G(13377, J$.G(13369, J$.R(13361, 'this', this, 0), 's', 0), 'hooks', 0), 'pre', 0), 'apply', 0)(J$.G(13409, J$.G(13401, J$.R(13393, 'this', this, 0), 's', 0), 'hooks', 0), J$.R(13417, 'arguments', arguments, 2)));
                                return J$.X1(13457, J$.Rt(13449, J$.R(13441, 'this', this, 0)));
                            }
                            return J$.X1(13505, J$.Rt(13497, J$.M(13489, J$.R(13465, 'this', this, 0), 'queue', 0)(J$.T(13473, 'pre', 21, false), J$.R(13481, 'arguments', arguments, 2))));
                        } catch (J$e) {
                            J$.Ex(21097, J$e);
                        } finally {
                            if (J$.Fr(21105))
                                continue jalangiLabel1302;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 13513), 0));
            J$.X1(14281, J$.P(14273, J$.G(13569, J$.R(13561, 'Schema', Schema, 1), 'prototype', 0), 'post', J$.T(14265, function (method, fn) {
                jalangiLabel1306:
                    while (true) {
                        try {
                            J$.Fe(14233, arguments.callee, this, arguments);
                            arguments = J$.N(14241, 'arguments', arguments, 4);
                            method = J$.N(14249, 'method', method, 4);
                            fn = J$.N(14257, 'fn', fn, 4);
                            if (J$.X1(21113, J$.C(968, J$.G(13593, J$.R(13577, 'IS_QUERY_HOOK', IS_QUERY_HOOK, 1), J$.R(13585, 'method', method, 0), 4)))) {
                                J$.X1(13673, J$.M(13665, J$.G(13625, J$.G(13617, J$.G(13609, J$.R(13601, 'this', this, 0), 's', 0), 'hooks', 0), 'post', 0), 'apply', 0)(J$.G(13649, J$.G(13641, J$.R(13633, 'this', this, 0), 's', 0), 'hooks', 0), J$.R(13657, 'arguments', arguments, 2)));
                                return J$.X1(13697, J$.Rt(13689, J$.R(13681, 'this', this, 0)));
                            }
                            if (J$.X1(21137, J$.C(976, J$.B(1002, '<', J$.G(13713, J$.R(13705, 'fn', fn, 0), 'length', 0), J$.T(13721, 2, 22, false), 0)))) {
                                return J$.X1(13873, J$.Rt(13865, J$.M(13857, J$.R(13729, 'this', this, 0), 'queue', 0)(J$.T(13737, 'on', 21, false), J$.T(13849, [
                                    J$.G(13761, J$.R(13745, 'arguments', arguments, 2), J$.T(13753, 0, 22, false), 4),
                                    J$.T(13841, function (doc) {
                                        jalangiLabel1303:
                                            while (true) {
                                                try {
                                                    J$.Fe(13817, arguments.callee, this, arguments);
                                                    arguments = J$.N(13825, 'arguments', arguments, 4);
                                                    doc = J$.N(13833, 'doc', doc, 4);
                                                    return J$.X1(13809, J$.Rt(13801, J$.M(13793, J$.R(13769, 'fn', fn, 0), 'call', 0)(J$.R(13777, 'doc', doc, 0), J$.R(13785, 'doc', doc, 0))));
                                                } catch (J$e) {
                                                    J$.Ex(21121, J$e);
                                                } finally {
                                                    if (J$.Fr(21129))
                                                        continue jalangiLabel1303;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 13817)
                                ], 10, false))));
                            }
                            return J$.X1(14225, J$.Rt(14217, J$.M(14209, J$.R(13881, 'this', this, 0), 'queue', 0)(J$.T(13889, 'post', 21, false), J$.T(14201, [
                                J$.G(13913, J$.R(13897, 'arguments', arguments, 2), J$.T(13905, 0, 22, false), 4),
                                J$.T(14193, function (next) {
                                    jalangiLabel1305:
                                        while (true) {
                                            try {
                                                J$.Fe(14153, arguments.callee, this, arguments);
                                                arguments = J$.N(14161, 'arguments', arguments, 4);
                                                next = J$.N(14169, 'next', next, 4);
                                                J$.N(14177, 'self', self, 0);
                                                J$.N(14185, 'args', args, 0);
                                                var self = J$.X1(13937, J$.W(13929, 'self', J$.R(13921, 'this', this, 0), self, 1));
                                                var args = J$.X1(14001, J$.W(13993, 'args', J$.M(13985, J$.G(13961, J$.G(13953, J$.R(13945, 'Array', Array, 2), 'prototype', 0), 'slice', 0), 'call', 0)(J$.R(13969, 'arguments', arguments, 2), J$.T(13977, 1, 22, false)), args, 1));
                                                J$.X1(14145, J$.M(14137, J$.R(14009, 'fn', fn, 0), 'call', 0)(J$.R(14017, 'this', this, 0), J$.R(14025, 'this', this, 0), J$.T(14129, function (err) {
                                                    jalangiLabel1304:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(14105, arguments.callee, this, arguments);
                                                                arguments = J$.N(14113, 'arguments', arguments, 4);
                                                                err = J$.N(14121, 'err', err, 4);
                                                                return J$.X1(14097, J$.Rt(14089, J$.M(14081, J$.R(14033, 'next', next, 0), 'apply', 0)(J$.R(14041, 'self', self, 0), J$.M(14073, J$.T(14057, [J$.R(14049, 'err', err, 0)], 10, false), 'concat', 0)(J$.R(14065, 'args', args, 0)))));
                                                            } catch (J$e) {
                                                                J$.Ex(21145, J$e);
                                                            } finally {
                                                                if (J$.Fr(21153))
                                                                    continue jalangiLabel1304;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 14105)));
                                            } catch (J$e) {
                                                J$.Ex(21161, J$e);
                                            } finally {
                                                if (J$.Fr(21169))
                                                    continue jalangiLabel1305;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 14153)
                            ], 10, false))));
                        } catch (J$e) {
                            J$.Ex(21177, J$e);
                        } finally {
                            if (J$.Fr(21185))
                                continue jalangiLabel1306;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 14233), 0));
            J$.X1(14417, J$.P(14409, J$.G(14297, J$.R(14289, 'Schema', Schema, 1), 'prototype', 0), 'plugin', J$.T(14401, function (fn, opts) {
                jalangiLabel1307:
                    while (true) {
                        try {
                            J$.Fe(14369, arguments.callee, this, arguments);
                            arguments = J$.N(14377, 'arguments', arguments, 4);
                            fn = J$.N(14385, 'fn', fn, 4);
                            opts = J$.N(14393, 'opts', opts, 4);
                            J$.X1(14337, J$.F(14329, J$.R(14305, 'fn', fn, 0), 0)(J$.R(14313, 'this', this, 0), J$.R(14321, 'opts', opts, 0)));
                            return J$.X1(14361, J$.Rt(14353, J$.R(14345, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(21193, J$e);
                        } finally {
                            if (J$.Fr(21201))
                                continue jalangiLabel1307;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 14369), 0));
            J$.X1(14681, J$.P(14673, J$.G(14433, J$.R(14425, 'Schema', Schema, 1), 'prototype', 0), 'method', J$.T(14665, function (name, fn) {
                jalangiLabel1308:
                    while (true) {
                        try {
                            J$.Fe(14625, arguments.callee, this, arguments);
                            arguments = J$.N(14633, 'arguments', arguments, 4);
                            name = J$.N(14641, 'name', name, 4);
                            fn = J$.N(14649, 'fn', fn, 4);
                            J$.N(14657, 'i', i, 0);
                            if (J$.X1(21209, J$.C(984, J$.B(1018, '!=', J$.T(14441, 'string', 21, false), J$.U(1010, 'typeof', J$.R(14449, 'name', name, 0)), 0))))
                                for (J$._tm_p in J$.H(14529, J$.R(14457, 'name', name, 0))) {
                                var i = J$.X1(14545, J$.W(14537, 'i', J$._tm_p, i, 1));
                                {
                                    J$.X1(14521, J$.P(14513, J$.G(14473, J$.R(14465, 'this', this, 0), 'methods', 0), J$.R(14481, 'i', i, 0), J$.G(14505, J$.R(14489, 'name', name, 0), J$.R(14497, 'i', i, 0), 4), 2));
                                }
                            }
                            else
                                J$.X1(14593, J$.P(14585, J$.G(14561, J$.R(14553, 'this', this, 0), 'methods', 0), J$.R(14569, 'name', name, 0), J$.R(14577, 'fn', fn, 0), 2));
                            return J$.X1(14617, J$.Rt(14609, J$.R(14601, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(21217, J$e);
                        } finally {
                            if (J$.Fr(21225))
                                continue jalangiLabel1308;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 14625), 0));
            J$.X1(14945, J$.P(14937, J$.G(14697, J$.R(14689, 'Schema', Schema, 1), 'prototype', 0), 'static', J$.T(14929, function (name, fn) {
                jalangiLabel1309:
                    while (true) {
                        try {
                            J$.Fe(14889, arguments.callee, this, arguments);
                            arguments = J$.N(14897, 'arguments', arguments, 4);
                            name = J$.N(14905, 'name', name, 4);
                            fn = J$.N(14913, 'fn', fn, 4);
                            J$.N(14921, 'i', i, 0);
                            if (J$.X1(21233, J$.C(992, J$.B(1034, '!=', J$.T(14705, 'string', 21, false), J$.U(1026, 'typeof', J$.R(14713, 'name', name, 0)), 0))))
                                for (J$._tm_p in J$.H(14793, J$.R(14721, 'name', name, 0))) {
                                var i = J$.X1(14809, J$.W(14801, 'i', J$._tm_p, i, 1));
                                {
                                    J$.X1(14785, J$.P(14777, J$.G(14737, J$.R(14729, 'this', this, 0), 'statics', 0), J$.R(14745, 'i', i, 0), J$.G(14769, J$.R(14753, 'name', name, 0), J$.R(14761, 'i', i, 0), 4), 2));
                                }
                            }
                            else
                                J$.X1(14857, J$.P(14849, J$.G(14825, J$.R(14817, 'this', this, 0), 'statics', 0), J$.R(14833, 'name', name, 0), J$.R(14841, 'fn', fn, 0), 2));
                            return J$.X1(14881, J$.Rt(14873, J$.R(14865, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(21241, J$e);
                        } finally {
                            if (J$.Fr(21249))
                                continue jalangiLabel1309;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 14889), 0));
            J$.X1(15177, J$.P(15169, J$.G(14961, J$.R(14953, 'Schema', Schema, 1), 'prototype', 0), 'index', J$.T(15161, function (fields, options) {
                jalangiLabel1310:
                    while (true) {
                        try {
                            J$.Fe(15129, arguments.callee, this, arguments);
                            arguments = J$.N(15137, 'arguments', arguments, 4);
                            fields = J$.N(15145, 'fields', fields, 4);
                            options = J$.N(15153, 'options', options, 4);
                            J$.X1(14993, J$.C(1000, J$.R(14969, 'options', options, 0)) ? J$._() : options = J$.W(14985, 'options', J$.T(14977, {}, 11, false), options, 0));
                            if (J$.X1(21257, J$.C(1008, J$.G(15009, J$.R(15001, 'options', options, 0), 'expires', 0))))
                                J$.X1(15041, J$.M(15033, J$.R(15017, 'utils', utils, 1), 'expires', 0)(J$.R(15025, 'options', options, 0)));
                            J$.X1(15097, J$.M(15089, J$.G(15057, J$.R(15049, 'this', this, 0), '_indexes', 0), 'push', 0)(J$.T(15081, [
                                J$.R(15065, 'fields', fields, 0),
                                J$.R(15073, 'options', options, 0)
                            ], 10, false)));
                            return J$.X1(15121, J$.Rt(15113, J$.R(15105, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(21265, J$e);
                        } finally {
                            if (J$.Fr(21273))
                                continue jalangiLabel1310;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 15129), 0));
            J$.X1(15577, J$.P(15569, J$.G(15193, J$.R(15185, 'Schema', Schema, 1), 'prototype', 0), 'set', J$.T(15561, function (key, value, _tags) {
                jalangiLabel1311:
                    while (true) {
                        try {
                            J$.Fe(15521, arguments.callee, this, arguments);
                            arguments = J$.N(15529, 'arguments', arguments, 4);
                            key = J$.N(15537, 'key', key, 4);
                            value = J$.N(15545, 'value', value, 4);
                            _tags = J$.N(15553, '_tags', _tags, 4);
                            if (J$.X1(21281, J$.C(1016, J$.B(1042, '===', J$.T(15201, 1, 22, false), J$.G(15217, J$.R(15209, 'arguments', arguments, 2), 'length', 0), 0)))) {
                                return J$.X1(15265, J$.Rt(15257, J$.G(15249, J$.G(15233, J$.R(15225, 'this', this, 0), 'options', 0), J$.R(15241, 'key', key, 0), 4)));
                            }
                            switch (J$.X1(21297, J$.C1(1032, J$.R(15273, 'key', key, 0)))) {
                            case J$.X1(21305, J$.C2(1040, J$.T(15353, 'read', 21, false))):
                                J$.X1(15345, J$.P(15337, J$.G(15289, J$.R(15281, 'this', this, 0), 'options', 0), J$.R(15297, 'key', key, 0), J$.F(15329, J$.R(15305, 'readPref', readPref, 1), 0)(J$.R(15313, 'value', value, 0), J$.R(15321, '_tags', _tags, 0)), 2));
                                break;
                            case J$.X1(21313, J$.C2(1048, J$.T(15441, 'safe', 21, false))):
                                J$.X1(15433, J$.P(15425, J$.G(15369, J$.R(15361, 'this', this, 0), 'options', 0), J$.R(15377, 'key', key, 0), J$.X1(21289, J$.C(1024, J$.B(1050, '===', J$.T(15385, false, 23, false), J$.R(15393, 'value', value, 0), 0))) ? J$.T(15409, {
                                    w: J$.T(15401, 0, 22, false)
                                }, 11, false) : J$.R(15417, 'value', value, 0), 2));
                                break;
                            default:
                                J$.X1(15489, J$.P(15481, J$.G(15457, J$.R(15449, 'this', this, 0), 'options', 0), J$.R(15465, 'key', key, 0), J$.R(15473, 'value', value, 0), 2));
                            }
                            return J$.X1(15513, J$.Rt(15505, J$.R(15497, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(21321, J$e);
                        } finally {
                            if (J$.Fr(21329))
                                continue jalangiLabel1311;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 15521), 0));
            J$.X1(15689, J$.P(15681, J$.G(15593, J$.R(15585, 'Schema', Schema, 1), 'prototype', 0), 'get', J$.T(15673, function (key) {
                jalangiLabel1312:
                    while (true) {
                        try {
                            J$.Fe(15649, arguments.callee, this, arguments);
                            arguments = J$.N(15657, 'arguments', arguments, 4);
                            key = J$.N(15665, 'key', key, 4);
                            return J$.X1(15641, J$.Rt(15633, J$.G(15625, J$.G(15609, J$.R(15601, 'this', this, 0), 'options', 0), J$.R(15617, 'key', key, 0), 4)));
                        } catch (J$e) {
                            J$.Ex(21337, J$e);
                        } finally {
                            if (J$.Fr(21345))
                                continue jalangiLabel1312;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 15649), 0));
            var indexTypes = J$.X1(15729, J$.W(15721, 'indexTypes', J$.M(15713, J$.T(15697, '2d 2dsphere hashed text', 21, false), 'split', 0)(J$.T(15705, ' ', 21, false)), indexTypes, 3));
            J$.X1(15889, J$.M(15881, J$.R(15737, 'Object', Object, 2), 'defineProperty', 0)(J$.R(15745, 'Schema', Schema, 1), J$.T(15753, 'indexTypes', 21, false), J$.T(15873, {
                get: J$.T(15801, function () {
                    jalangiLabel1313:
                        while (true) {
                            try {
                                J$.Fe(15785, arguments.callee, this, arguments);
                                arguments = J$.N(15793, 'arguments', arguments, 4);
                                return J$.X1(15777, J$.Rt(15769, J$.R(15761, 'indexTypes', indexTypes, 1)));
                            } catch (J$e) {
                                J$.Ex(21353, J$e);
                            } finally {
                                if (J$.Fr(21361))
                                    continue jalangiLabel1313;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 15785),
                set: J$.T(15865, function () {
                    jalangiLabel1314:
                        while (true) {
                            try {
                                J$.Fe(15849, arguments.callee, this, arguments);
                                arguments = J$.N(15857, 'arguments', arguments, 4);
                                throw J$.X1(15841, J$.Th(15833, J$.F(15825, J$.R(15809, 'Error', Error, 2), 1)(J$.T(15817, 'Cannot overwrite Schema.indexTypes', 21, false))));
                            } catch (J$e) {
                                J$.Ex(21369, J$e);
                            } finally {
                                if (J$.Fr(21377))
                                    continue jalangiLabel1314;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 15849)
            }, 11, false)));
            J$.X1(18073, J$.P(18065, J$.G(15905, J$.R(15897, 'Schema', Schema, 1), 'prototype', 0), 'indexes', J$.T(18057, function () {
                jalangiLabel1318:
                    while (true) {
                        try {
                            J$.Fe(18001, arguments.callee, this, arguments);
                            function fixSubIndexPaths(schema, prefix) {
                                jalangiLabel1317:
                                    while (true) {
                                        try {
                                            J$.Fe(17897, arguments.callee, this, arguments);
                                            arguments = J$.N(17905, 'arguments', arguments, 4);
                                            schema = J$.N(17913, 'schema', schema, 4);
                                            prefix = J$.N(17921, 'prefix', prefix, 4);
                                            J$.N(17929, 'subindexes', subindexes, 0);
                                            J$.N(17937, 'len', len, 0);
                                            J$.N(17945, 'indexObj', indexObj, 0);
                                            J$.N(17953, 'newindex', newindex, 0);
                                            J$.N(17961, 'klen', klen, 0);
                                            J$.N(17969, 'keys', keys, 0);
                                            J$.N(17977, 'key', key, 0);
                                            J$.N(17985, 'i', i, 0);
                                            J$.N(17993, 'j', j, 0);
                                            var subindexes = J$.X1(17409, J$.W(17401, 'subindexes', J$.G(17369, J$.R(17361, 'schema', schema, 0), '_indexes', 0), subindexes, 1)), len = J$.X1(17425, J$.W(17417, 'len', J$.G(17385, J$.R(17377, 'subindexes', subindexes, 0), 'length', 0), len, 1)), indexObj, newindex, klen, keys, key, i = J$.X1(17441, J$.W(17433, 'i', J$.T(17393, 0, 22, false), i, 1)), j;
                                            for (J$.X1(21553, i = J$.W(17457, 'i', J$.T(17449, 0, 22, false), i, 0)); J$.X1(21545, J$.C(1184, J$.B(1202, '<', J$.R(17465, 'i', i, 0), J$.R(17473, 'len', len, 0), 0))); J$.X1(21561, i = J$.W(17497, 'i', J$.B(1218, '+', J$.U(1210, '+', J$.R(17489, 'i', i, 0)), J$.T(17481, 1, 22, false), 0), i, 0))) {
                                                J$.X1(17553, indexObj = J$.W(17545, 'indexObj', J$.G(17537, J$.G(17521, J$.R(17505, 'subindexes', subindexes, 0), J$.R(17513, 'i', i, 0), 4), J$.T(17529, 0, 22, false), 4), indexObj, 0));
                                                J$.X1(17593, keys = J$.W(17585, 'keys', J$.M(17577, J$.R(17561, 'Object', Object, 2), 'keys', 0)(J$.R(17569, 'indexObj', indexObj, 0)), keys, 0));
                                                J$.X1(17625, klen = J$.W(17617, 'klen', J$.G(17609, J$.R(17601, 'keys', keys, 0), 'length', 0), klen, 0));
                                                J$.X1(17649, newindex = J$.W(17641, 'newindex', J$.T(17633, {}, 11, false), newindex, 0));
                                                for (J$.X1(21529, j = J$.W(17665, 'j', J$.T(17657, 0, 22, false), j, 0)); J$.X1(21521, J$.C(1176, J$.B(1226, '<', J$.R(17673, 'j', j, 0), J$.R(17681, 'klen', klen, 0), 0))); J$.X1(21537, j = J$.W(17705, 'j', J$.B(1242, '+', J$.U(1234, '+', J$.R(17697, 'j', j, 0)), J$.T(17689, 1, 22, false), 0), j, 0))) {
                                                    J$.X1(17745, key = J$.W(17737, 'key', J$.G(17729, J$.R(17713, 'keys', keys, 0), J$.R(17721, 'j', j, 0), 4), key, 0));
                                                    J$.X1(17809, J$.P(17801, J$.R(17753, 'newindex', newindex, 0), J$.B(1250, '+', J$.R(17761, 'prefix', prefix, 0), J$.R(17769, 'key', key, 0), 0), J$.G(17793, J$.R(17777, 'indexObj', indexObj, 0), J$.R(17785, 'key', key, 0), 4), 2));
                                                }
                                                J$.X1(17889, J$.M(17881, J$.R(17817, 'indexes', indexes, 0), 'push', 0)(J$.T(17873, [
                                                    J$.R(17825, 'newindex', newindex, 0),
                                                    J$.G(17865, J$.G(17849, J$.R(17833, 'subindexes', subindexes, 0), J$.R(17841, 'i', i, 0), 4), J$.T(17857, 1, 22, false), 4)
                                                ], 10, false)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(21569, J$e);
                                        } finally {
                                            if (J$.Fr(21577))
                                                continue jalangiLabel1317;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(18009, 'arguments', arguments, 4);
                            J$.N(18017, 'indexes', indexes, 0);
                            J$.N(18025, 'seenPrefix', seenPrefix, 0);
                            J$.N(18033, 'collectIndexes', collectIndexes, 0);
                            fixSubIndexPaths = J$.N(18049, 'fixSubIndexPaths', J$.T(18041, fixSubIndexPaths, 12, false, 17897), 0);
                            J$.X1(15921, J$.T(15913, 'use strict', 21, false));
                            var indexes = J$.X1(15945, J$.W(15937, 'indexes', J$.T(15929, [], 10, false), indexes, 1));
                            var seenPrefix = J$.X1(15969, J$.W(15961, 'seenPrefix', J$.T(15953, {}, 11, false), seenPrefix, 1));
                            var collectIndexes = J$.X1(17297, J$.W(17289, 'collectIndexes', J$.T(17281, function (schema, prefix) {
                                jalangiLabel1316:
                                    while (true) {
                                        try {
                                            J$.Fe(17177, arguments.callee, this, arguments);
                                            arguments = J$.N(17185, 'arguments', arguments, 4);
                                            schema = J$.N(17193, 'schema', schema, 4);
                                            prefix = J$.N(17201, 'prefix', prefix, 4);
                                            J$.N(17209, 'key', key, 0);
                                            J$.N(17217, 'path', path, 0);
                                            J$.N(17225, 'index', index, 0);
                                            J$.N(17233, 'field', field, 0);
                                            J$.N(17241, 'isObject', isObject, 0);
                                            J$.N(17249, 'options', options, 0);
                                            J$.N(17257, 'type', type, 0);
                                            J$.N(17265, 'keys', keys, 0);
                                            J$.N(17273, 'i', i, 0);
                                            if (J$.X1(21385, J$.C(1056, J$.G(15993, J$.R(15977, 'seenPrefix', seenPrefix, 0), J$.R(15985, 'prefix', prefix, 0), 4)))) {
                                                return J$.X1(16009, J$.Rt(16001, undefined));
                                            }
                                            J$.X1(16049, J$.P(16041, J$.R(16017, 'seenPrefix', seenPrefix, 0), J$.R(16025, 'prefix', prefix, 0), J$.T(16033, true, 23, false), 2));
                                            J$.X1(16081, prefix = J$.W(16073, 'prefix', J$.C(1064, J$.R(16057, 'prefix', prefix, 0)) ? J$._() : J$.T(16065, '', 21, false), prefix, 0));
                                            var key, path, index, field, isObject, options, type;
                                            var keys = J$.X1(16129, J$.W(16121, 'keys', J$.M(16113, J$.R(16089, 'Object', Object, 2), 'keys', 0)(J$.G(16105, J$.R(16097, 'schema', schema, 0), 'paths', 0)), keys, 1));
                                            for (var i = J$.X1(16153, J$.W(16145, 'i', J$.T(16137, 0, 22, false), i, 1)); J$.X1(21457, J$.C(1152, J$.B(1058, '<', J$.R(16161, 'i', i, 0), J$.G(16177, J$.R(16169, 'keys', keys, 0), 'length', 0), 0))); J$.X1(21465, i = J$.W(16201, 'i', J$.B(1074, '+', J$.U(1066, '+', J$.R(16193, 'i', i, 0)), J$.T(16185, 1, 22, false), 0), i, 0))) {
                                                J$.X1(16241, key = J$.W(16233, 'key', J$.G(16225, J$.R(16209, 'keys', keys, 0), J$.R(16217, 'i', i, 0), 4), key, 0));
                                                J$.X1(16289, path = J$.W(16281, 'path', J$.G(16273, J$.G(16257, J$.R(16249, 'schema', schema, 0), 'paths', 0), J$.R(16265, 'key', key, 0), 4), path, 0));
                                                if (J$.X1(21449, J$.C(1144, J$.B(1082, 'instanceof', J$.R(16297, 'path', path, 0), J$.G(16313, J$.R(16305, 'MongooseTypes', MongooseTypes, 1), 'DocumentArray', 0), 0)))) {
                                                    J$.X1(16369, J$.F(16361, J$.R(16321, 'collectIndexes', collectIndexes, 0), 0)(J$.G(16337, J$.R(16329, 'path', path, 0), 'schema', 0), J$.B(1090, '+', J$.R(16345, 'key', key, 0), J$.T(16353, '.', 21, false), 0)));
                                                } else if (J$.X1(21441, J$.C(1136, J$.G(16385, J$.R(16377, 'path', path, 0), '$isSingleNested', 0)))) {
                                                    J$.X1(16441, J$.F(16433, J$.R(16393, 'collectIndexes', collectIndexes, 0), 0)(J$.G(16409, J$.R(16401, 'path', path, 0), 'schema', 0), J$.B(1098, '+', J$.R(16417, 'key', key, 0), J$.T(16425, '.', 21, false), 0)));
                                                } else {
                                                    J$.X1(16473, index = J$.W(16465, 'index', J$.G(16457, J$.R(16449, 'path', path, 0), '_index', 0), index, 0));
                                                    if (J$.X1(21433, J$.C(1128, J$.C(1072, J$.B(1106, '!==', J$.T(16481, false, 23, false), J$.R(16489, 'index', index, 0), 0)) ? J$.B(1114, '!=', J$.T(16497, null, 25, false), J$.R(16505, 'index', index, 0), 0) : J$._()))) {
                                                        J$.X1(16529, field = J$.W(16521, 'field', J$.T(16513, {}, 11, false), field, 0));
                                                        J$.X1(16569, isObject = J$.W(16561, 'isObject', J$.M(16553, J$.R(16537, 'utils', utils, 1), 'isObject', 0)(J$.R(16545, 'index', index, 0)), isObject, 0));
                                                        J$.X1(16609, options = J$.W(16601, 'options', J$.X1(21393, J$.C(1080, J$.R(16577, 'isObject', isObject, 0))) ? J$.R(16585, 'index', index, 0) : J$.T(16593, {}, 11, false), options, 0));
                                                        J$.X1(16681, type = J$.W(16673, 'type', J$.X1(21409, J$.C(1096, J$.B(1130, '==', J$.T(16617, 'string', 21, false), J$.U(1122, 'typeof', J$.R(16625, 'index', index, 0)), 0))) ? J$.R(16633, 'index', index, 0) : J$.X1(21401, J$.C(1088, J$.R(16641, 'isObject', isObject, 0))) ? J$.G(16657, J$.R(16649, 'index', index, 0), 'type', 0) : J$.T(16665, false, 23, false), type, 0));
                                                        if (J$.X1(21417, J$.C(1112, J$.C(1104, J$.R(16689, 'type', type, 0)) ? J$.U(1138, '~', J$.M(16721, J$.G(16705, J$.R(16697, 'Schema', Schema, 1), 'indexTypes', 0), 'indexOf', 0)(J$.R(16713, 'type', type, 0))) : J$._()))) {
                                                            J$.X1(16769, J$.P(16761, J$.R(16729, 'field', field, 0), J$.B(1146, '+', J$.R(16737, 'prefix', prefix, 0), J$.R(16745, 'key', key, 0), 0), J$.R(16753, 'type', type, 0), 2));
                                                        } else {
                                                            J$.X1(16817, J$.P(16809, J$.R(16777, 'field', field, 0), J$.B(1154, '+', J$.R(16785, 'prefix', prefix, 0), J$.R(16793, 'key', key, 0), 0), J$.T(16801, 1, 22, false), 2));
                                                        }
                                                        J$.X1(16833, J$.B(1162, 'delete', J$.R(16825, 'options', options, 0), 'type', 0));
                                                        if (J$.X1(21425, J$.C(1120, J$.U(1178, '!', J$.B(1170, 'in', J$.T(16841, 'background', 21, false), J$.R(16849, 'options', options, 0), 0))))) {
                                                            J$.X1(16881, J$.P(16873, J$.R(16857, 'options', options, 0), 'background', J$.T(16865, true, 23, false), 0));
                                                        }
                                                        J$.X1(16929, J$.M(16921, J$.R(16889, 'indexes', indexes, 0), 'push', 0)(J$.T(16913, [
                                                            J$.R(16897, 'field', field, 0),
                                                            J$.R(16905, 'options', options, 0)
                                                        ], 10, false)));
                                                    }
                                                }
                                            }
                                            if (J$.X1(21497, J$.C(1168, J$.R(16937, 'prefix', prefix, 0)))) {
                                                J$.X1(16977, J$.F(16969, J$.R(16945, 'fixSubIndexPaths', fixSubIndexPaths, 0), 0)(J$.R(16953, 'schema', schema, 0), J$.R(16961, 'prefix', prefix, 0)));
                                            } else {
                                                J$.X1(17121, J$.M(17113, J$.G(16993, J$.R(16985, 'schema', schema, 0), '_indexes', 0), 'forEach', 0)(J$.T(17105, function (index) {
                                                    jalangiLabel1315:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(17081, arguments.callee, this, arguments);
                                                                arguments = J$.N(17089, 'arguments', arguments, 4);
                                                                index = J$.N(17097, 'index', index, 4);
                                                                if (J$.X1(21473, J$.C(1160, J$.U(1194, '!', J$.B(1186, 'in', J$.T(17001, 'background', 21, false), J$.G(17025, J$.R(17009, 'index', index, 0), J$.T(17017, 1, 22, false), 4), 0)))))
                                                                    J$.X1(17073, J$.P(17065, J$.G(17049, J$.R(17033, 'index', index, 0), J$.T(17041, 1, 22, false), 4), 'background', J$.T(17057, true, 23, false), 0));
                                                            } catch (J$e) {
                                                                J$.Ex(21481, J$e);
                                                            } finally {
                                                                if (J$.Fr(21489))
                                                                    continue jalangiLabel1315;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 17081)));
                                                J$.X1(17169, indexes = J$.W(17161, 'indexes', J$.M(17153, J$.R(17129, 'indexes', indexes, 0), 'concat', 0)(J$.G(17145, J$.R(17137, 'schema', schema, 0), '_indexes', 0)), indexes, 0));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(21505, J$e);
                                        } finally {
                                            if (J$.Fr(21513))
                                                continue jalangiLabel1316;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 17177), collectIndexes, 1));
                            J$.X1(17329, J$.F(17321, J$.R(17305, 'collectIndexes', collectIndexes, 0), 0)(J$.R(17313, 'this', this, 0)));
                            return J$.X1(17353, J$.Rt(17345, J$.R(17337, 'indexes', indexes, 0)));
                        } catch (J$e) {
                            J$.Ex(21585, J$e);
                        } finally {
                            if (J$.Fr(21593))
                                continue jalangiLabel1318;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 18001), 0));
            J$.X1(18521, J$.P(18513, J$.G(18089, J$.R(18081, 'Schema', Schema, 1), 'prototype', 0), 'virtual', J$.T(18505, function (name, options) {
                jalangiLabel1320:
                    while (true) {
                        try {
                            J$.Fe(18457, arguments.callee, this, arguments);
                            arguments = J$.N(18465, 'arguments', arguments, 4);
                            name = J$.N(18473, 'name', name, 4);
                            options = J$.N(18481, 'options', options, 4);
                            J$.N(18489, 'virtuals', virtuals, 0);
                            J$.N(18497, 'parts', parts, 0);
                            var virtuals = J$.X1(18121, J$.W(18113, 'virtuals', J$.G(18105, J$.R(18097, 'this', this, 0), 'virtuals', 0), virtuals, 1));
                            var parts = J$.X1(18161, J$.W(18153, 'parts', J$.M(18145, J$.R(18129, 'name', name, 0), 'split', 0)(J$.T(18137, '.', 21, false)), parts, 1));
                            return J$.X1(18449, J$.Rt(18441, J$.P(18433, J$.R(18169, 'virtuals', virtuals, 0), J$.R(18177, 'name', name, 0), J$.M(18425, J$.R(18185, 'parts', parts, 0), 'reduce', 0)(J$.T(18401, function (mem, part, i) {
                                jalangiLabel1319:
                                    while (true) {
                                        try {
                                            J$.Fe(18361, arguments.callee, this, arguments);
                                            arguments = J$.N(18369, 'arguments', arguments, 4);
                                            mem = J$.N(18377, 'mem', mem, 4);
                                            part = J$.N(18385, 'part', part, 4);
                                            i = J$.N(18393, 'i', i, 4);
                                            J$.X1(18313, J$.C(1200, J$.G(18209, J$.R(18193, 'mem', mem, 0), J$.R(18201, 'part', part, 0), 4)) ? J$._() : J$.P(18305, J$.R(18217, 'mem', mem, 0), J$.R(18225, 'part', part, 0), J$.X1(21601, J$.C(1192, J$.B(1266, '===', J$.R(18233, 'i', i, 0), J$.B(1258, '-', J$.G(18249, J$.R(18241, 'parts', parts, 0), 'length', 0), J$.T(18257, 1, 22, false), 0), 0))) ? J$.F(18289, J$.R(18265, 'VirtualType', VirtualType, 1), 1)(J$.R(18273, 'options', options, 0), J$.R(18281, 'name', name, 0)) : J$.T(18297, {}, 11, false), 2));
                                            return J$.X1(18353, J$.Rt(18345, J$.G(18337, J$.R(18321, 'mem', mem, 0), J$.R(18329, 'part', part, 0), 4)));
                                        } catch (J$e) {
                                            J$.Ex(21609, J$e);
                                        } finally {
                                            if (J$.Fr(21617))
                                                continue jalangiLabel1319;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 18361), J$.G(18417, J$.R(18409, 'this', this, 0), 'tree', 0)), 2)));
                        } catch (J$e) {
                            J$.Ex(21625, J$e);
                        } finally {
                            if (J$.Fr(21633))
                                continue jalangiLabel1320;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 18457), 0));
            J$.X1(18633, J$.P(18625, J$.G(18537, J$.R(18529, 'Schema', Schema, 1), 'prototype', 0), 'virtualpath', J$.T(18617, function (name) {
                jalangiLabel1321:
                    while (true) {
                        try {
                            J$.Fe(18593, arguments.callee, this, arguments);
                            arguments = J$.N(18601, 'arguments', arguments, 4);
                            name = J$.N(18609, 'name', name, 4);
                            return J$.X1(18585, J$.Rt(18577, J$.G(18569, J$.G(18553, J$.R(18545, 'this', this, 0), 'virtuals', 0), J$.R(18561, 'name', name, 0), 4)));
                        } catch (J$e) {
                            J$.Ex(21641, J$e);
                        } finally {
                            if (J$.Fr(21649))
                                continue jalangiLabel1321;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 18593), 0));
            J$.X1(18889, J$.P(18881, J$.G(18649, J$.R(18641, 'Schema', Schema, 1), 'prototype', 0), 'remove', J$.T(18873, function (path) {
                jalangiLabel1323:
                    while (true) {
                        try {
                            J$.Fe(18849, arguments.callee, this, arguments);
                            arguments = J$.N(18857, 'arguments', arguments, 4);
                            path = J$.N(18865, 'path', path, 4);
                            if (J$.X1(21657, J$.C(1208, J$.B(1282, '===', J$.U(1274, 'typeof', J$.R(18657, 'path', path, 0)), J$.T(18665, 'string', 21, false), 0)))) {
                                J$.X1(18697, path = J$.W(18689, 'path', J$.T(18681, [J$.R(18673, 'path', path, 0)], 10, false), path, 0));
                            }
                            if (J$.X1(21689, J$.C(1224, J$.M(18721, J$.R(18705, 'Array', Array, 2), 'isArray', 0)(J$.R(18713, 'path', path, 0))))) {
                                J$.X1(18841, J$.M(18833, J$.R(18729, 'path', path, 0), 'forEach', 0)(J$.T(18817, function (name) {
                                    jalangiLabel1322:
                                        while (true) {
                                            try {
                                                J$.Fe(18793, arguments.callee, this, arguments);
                                                arguments = J$.N(18801, 'arguments', arguments, 4);
                                                name = J$.N(18809, 'name', name, 4);
                                                if (J$.X1(21665, J$.C(1216, J$.M(18753, J$.R(18737, 'this', this, 0), 'path', 0)(J$.R(18745, 'name', name, 0))))) {
                                                    J$.X1(18785, J$.B(1290, 'delete', J$.G(18769, J$.R(18761, 'this', this, 0), 'paths', 0), J$.R(18777, 'name', name, 0), 4));
                                                }
                                            } catch (J$e) {
                                                J$.Ex(21673, J$e);
                                            } finally {
                                                if (J$.Fr(21681))
                                                    continue jalangiLabel1322;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 18793), J$.R(18825, 'this', this, 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(21697, J$e);
                        } finally {
                            if (J$.Fr(21705))
                                continue jalangiLabel1323;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 18849), 0));
            J$.X1(19705, J$.P(19697, J$.G(18905, J$.R(18897, 'Schema', Schema, 1), 'prototype', 0), '_getSchema', J$.T(19689, function (path) {
                jalangiLabel1325:
                    while (true) {
                        try {
                            J$.Fe(19649, arguments.callee, this, arguments);
                            arguments = J$.N(19657, 'arguments', arguments, 4);
                            path = J$.N(19665, 'path', path, 4);
                            J$.N(19673, 'schema', schema, 0);
                            J$.N(19681, 'pathschema', pathschema, 0);
                            var schema = J$.X1(18929, J$.W(18921, 'schema', J$.R(18913, 'this', this, 0), schema, 1));
                            var pathschema = J$.X1(18969, J$.W(18961, 'pathschema', J$.M(18953, J$.R(18937, 'schema', schema, 0), 'path', 0)(J$.R(18945, 'path', path, 0)), pathschema, 1));
                            if (J$.X1(21713, J$.C(1232, J$.R(18977, 'pathschema', pathschema, 0)))) {
                                return J$.X1(19001, J$.Rt(18993, J$.R(18985, 'pathschema', pathschema, 0)));
                            }
                            return J$.X1(19641, J$.Rt(19633, J$.F(19625, J$.T(19585, function search(parts, schema) {
                                jalangiLabel1324:
                                    while (true) {
                                        try {
                                            J$.Fe(19521, arguments.callee, this, arguments);
                                            arguments = J$.N(19529, 'arguments', arguments, 4);
                                            search = J$.N(19537, 'search', search, 0);
                                            parts = J$.N(19545, 'parts', parts, 4);
                                            schema = J$.N(19553, 'schema', schema, 4);
                                            J$.N(19561, 'p', p, 0);
                                            J$.N(19569, 'foundschema', foundschema, 0);
                                            J$.N(19577, 'trypath', trypath, 0);
                                            var p = J$.X1(19041, J$.W(19033, 'p', J$.B(1298, '+', J$.G(19017, J$.R(19009, 'parts', parts, 0), 'length', 0), J$.T(19025, 1, 22, false), 0), p, 1)), foundschema, trypath;
                                            while (J$.X1(21761, J$.C(1288, J$.B(1322, '+', p = J$.W(19065, 'p', J$.B(1314, '-', J$.U(1306, '+', J$.R(19057, 'p', p, 0)), J$.T(19049, 1, 22, false), 0), p, 0), J$.T(19073, 1, 22, false), 0)))) {
                                                J$.X1(19137, trypath = J$.W(19129, 'trypath', J$.M(19121, J$.M(19105, J$.R(19081, 'parts', parts, 0), 'slice', 0)(J$.T(19089, 0, 22, false), J$.R(19097, 'p', p, 0)), 'join', 0)(J$.T(19113, '.', 21, false)), trypath, 0));
                                                J$.X1(19177, foundschema = J$.W(19169, 'foundschema', J$.M(19161, J$.R(19145, 'schema', schema, 0), 'path', 0)(J$.R(19153, 'trypath', trypath, 0)), foundschema, 0));
                                                if (J$.X1(21753, J$.C(1280, J$.R(19185, 'foundschema', foundschema, 0)))) {
                                                    if (J$.X1(21745, J$.C(1272, J$.G(19201, J$.R(19193, 'foundschema', foundschema, 0), 'caster', 0)))) {
                                                        if (J$.X1(21721, J$.C(1240, J$.B(1330, 'instanceof', J$.G(19217, J$.R(19209, 'foundschema', foundschema, 0), 'caster', 0), J$.G(19233, J$.R(19225, 'MongooseTypes', MongooseTypes, 1), 'Mixed', 0), 0)))) {
                                                            return J$.X1(19265, J$.Rt(19257, J$.G(19249, J$.R(19241, 'foundschema', foundschema, 0), 'caster', 0)));
                                                        }
                                                        if (J$.X1(21737, J$.C(1264, J$.C(1248, J$.B(1338, '!==', J$.R(19273, 'p', p, 0), J$.G(19289, J$.R(19281, 'parts', parts, 0), 'length', 0), 0)) ? J$.G(19305, J$.R(19297, 'foundschema', foundschema, 0), 'schema', 0) : J$._()))) {
                                                            if (J$.X1(21729, J$.C(1256, J$.B(1346, '===', J$.T(19313, '$', 21, false), J$.G(19337, J$.R(19321, 'parts', parts, 0), J$.R(19329, 'p', p, 0), 4), 0)))) {
                                                                return J$.X1(19417, J$.Rt(19409, J$.F(19401, J$.R(19345, 'search', search, 0), 0)(J$.M(19377, J$.R(19353, 'parts', parts, 0), 'slice', 0)(J$.B(1354, '+', J$.R(19361, 'p', p, 0), J$.T(19369, 1, 22, false), 0)), J$.G(19393, J$.R(19385, 'foundschema', foundschema, 0), 'schema', 0))));
                                                            } else {
                                                                return J$.X1(19489, J$.Rt(19481, J$.F(19473, J$.R(19425, 'search', search, 0), 0)(J$.M(19449, J$.R(19433, 'parts', parts, 0), 'slice', 0)(J$.R(19441, 'p', p, 0)), J$.G(19465, J$.R(19457, 'foundschema', foundschema, 0), 'schema', 0))));
                                                            }
                                                        }
                                                    }
                                                    return J$.X1(19513, J$.Rt(19505, J$.R(19497, 'foundschema', foundschema, 0)));
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(21769, J$e);
                                        } finally {
                                            if (J$.Fr(21777))
                                                continue jalangiLabel1324;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 19521), 0)(J$.M(19609, J$.R(19593, 'path', path, 0), 'split', 0)(J$.T(19601, '.', 21, false)), J$.R(19617, 'schema', schema, 0))));
                        } catch (J$e) {
                            J$.Ex(21785, J$e);
                        } finally {
                            if (J$.Fr(21793))
                                continue jalangiLabel1325;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 19649), 0));
            J$.X1(19745, J$.P(19737, J$.R(19713, 'module', module, 2), 'exports', exports = J$.W(19729, 'exports', J$.R(19721, 'Schema', Schema, 1), J$.I(typeof exports === 'undefined' ? undefined : exports), 4), 0));
            J$.X1(19801, J$.P(19793, J$.R(19753, 'Schema', Schema, 1), 'Types', MongooseTypes = J$.W(19785, 'MongooseTypes', J$.F(19777, J$.R(19761, 'require', require, 2), 0)(J$.T(19769, './schema/index', 21, false)), MongooseTypes, 2), 0));
            J$.X1(19841, J$.P(19833, J$.R(19809, 'exports', exports, 2), 'ObjectId', J$.G(19825, J$.R(19817, 'MongooseTypes', MongooseTypes, 1), 'ObjectId', 0), 0));
        } catch (J$e) {
            J$.Ex(21801, J$e);
        } finally {
            if (J$.Sr(21809)) {
                J$.L();
                continue jalangiLabel1326;
            } else {
                J$.L();
                break jalangiLabel1326;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
