{"8":[19,9,19,30],"9":[1,20,1,27],"10":[19,9,19,30],"16":[28,9,28,13],"17":[1,28,1,32],"18":[28,9,28,13],"24":[36,17,36,38],"25":[1,20,1,33],"26":[33,30,33,32],"32":[36,17,36,38],"33":[1,20,1,33],"34":[33,9,33,32],"40":[33,9,33,32],"41":[1,20,1,33],"42":[35,52,35,72],"48":[49,13,49,80],"49":[2,26,2,38],"50":[81,17,81,24],"56":[51,20,51,46],"57":[2,26,2,45],"64":[51,51,51,104],"65":[2,26,2,45],"66":[87,21,87,34],"72":[51,20,51,105],"73":[2,26,2,45],"74":[87,9,87,34],"80":[51,20,51,105],"81":[3,1,3,13],"82":[91,35,91,59],"88":[49,13,49,80],"89":[3,1,3,14],"90":[94,23,94,40],"96":[48,9,48,25],"97":[4,14,4,21],"98":[94,9,94,40],"104":[61,9,61,76],"105":[4,22,4,32],"106":[105,9,105,33],"112":[61,9,61,76],"113":[4,14,4,33],"114":[115,30,115,53],"120":[72,17,72,22],"121":[4,48,4,55],"122":[116,50,116,84],"128":[76,21,76,23],"129":[4,56,4,70],"130":[127,9,127,16],"136":[74,17,74,20],"137":[4,48,4,71],"138":[129,13,129,20],"144":[81,17,81,32],"145":[4,87,4,94],"146":[133,11,133,44],"152":[80,17,80,19],"153":[4,95,4,110],"154":[133,9,133,45],"160":[87,9,87,34],"161":[4,87,4,111],"162":[135,9,135,20],"168":[91,9,91,59],"169":[4,122,4,129],"170":[140,9,140,18],"176":[91,9,91,59],"177":[4,130,4,149],"178":[143,9,143,32],"184":[94,9,94,40],"185":[4,122,4,150],"186":[153,46,153,51],"192":[99,9,99,45],"193":[4,160,4,167],"194":[153,53,153,56],"200":[99,9,99,45],"201":[4,168,4,177],"208":[106,13,106,19],"209":[4,160,4,178],"210":[153,53,153,56],"216":[105,9,105,33],"217":[4,188,4,195],"218":[168,26,168,48],"224":[115,9,115,53],"225":[4,196,4,205],"226":[169,26,169,48],"232":[116,13,116,46],"233":[4,188,4,206],"240":[116,13,116,84],"241":[4,216,4,223],"248":[116,13,116,84],"249":[4,224,4,233],"256":[119,13,119,23],"257":[4,216,4,234],"264":[115,9,115,53],"265":[4,247,4,254],"272":[129,13,129,20],"273":[4,255,4,267],"280":[127,9,127,16],"281":[4,247,4,268],"288":[133,9,133,45],"289":[4,278,4,285],"296":[136,22,136,78],"297":[4,286,4,295],"304":[135,9,135,20],"305":[4,278,4,296],"312":[138,22,138,59],"313":[4,307,4,312],"320":[140,9,140,18],"321":[4,307,4,329],"328":[143,9,143,32],"329":[4,337,4,344],"336":[153,46,153,51],"337":[4,345,4,362],"344":[167,14,167,76],"345":[4,337,4,363],"353":[4,14,4,33],"361":[4,14,4,33],"369":[4,48,4,71],"377":[4,48,4,71],"385":[4,87,4,111],"393":[4,87,4,111],"401":[4,122,4,150],"409":[4,122,4,150],"417":[4,160,4,178],"425":[4,160,4,178],"433":[4,188,4,206],"441":[4,188,4,206],"449":[4,216,4,234],"457":[4,216,4,234],"465":[4,247,4,268],"473":[4,247,4,268],"481":[4,278,4,296],"489":[4,278,4,296],"497":[4,307,4,329],"505":[4,307,4,329],"513":[4,337,4,363],"521":[4,337,4,363],"529":[5,19,5,26],"537":[5,27,5,40],"545":[5,19,5,41],"553":[5,19,5,41],"561":[5,19,5,41],"569":[6,17,6,24],"577":[6,25,6,38],"585":[6,17,6,39],"593":[6,17,6,39],"601":[6,17,6,39],"609":[7,23,7,30],"617":[7,31,7,51],"625":[7,23,7,52],"633":[7,23,7,52],"641":[7,23,7,52],"649":[9,5,9,9],"657":[9,24,9,26],"665":[9,5,9,26],"673":[9,5,9,27],"681":[10,5,10,9],"689":[10,20,10,22],"697":[10,5,10,22],"705":[10,5,10,23],"713":[11,5,11,9],"721":[11,19,11,21],"729":[11,5,11,21],"737":[11,5,11,22],"745":[12,5,12,9],"753":[12,25,12,27],"761":[12,5,12,27],"769":[12,5,12,28],"777":[13,5,13,9],"785":[13,37,13,41],"793":[13,20,13,43],"801":[13,5,13,43],"809":[13,5,13,44],"817":[14,16,14,20],"825":[14,16,14,39],"827":[14,16,14,37],"833":[14,16,14,39],"841":[14,16,14,39],"849":[15,5,15,9],"857":[15,19,15,23],"865":[15,19,15,30],"873":[15,5,15,30],"881":[15,5,15,31],"889":[8,1,16,2],"897":[8,1,16,2],"905":[8,1,16,2],"913":[17,1,17,9],"921":[17,1,17,19],"929":[17,29,17,35],"937":[17,1,17,35],"945":[17,1,17,36],"953":[18,1,18,9],"961":[18,1,18,19],"969":[19,9,19,18],"977":[19,9,19,25],"985":[19,29,19,30],"993":[20,16,20,20],"1001":[20,16,20,28],"1009":[20,29,20,32],"1017":[20,16,20,33],"1025":[20,16,20,33],"1033":[20,9,20,34],"1041":[22,5,22,9],"1049":[22,5,22,17],"1057":[22,18,22,21],"1065":[22,25,22,30],"1073":[22,5,22,30],"1081":[22,5,22,31],"1089":[23,12,23,16],"1097":[23,12,23,16],"1105":[23,5,23,17],"1113":[18,26,24,2],"1121":[18,26,24,2],"1129":[18,26,24,2],"1137":[18,26,24,2],"1145":[18,26,24,2],"1153":[18,1,24,2],"1161":[18,1,24,3],"1169":[25,1,25,9],"1177":[25,1,25,19],"1185":[25,26,25,34],"1193":[25,26,25,44],"1201":[25,26,25,48],"1209":[25,1,25,48],"1217":[25,1,25,49],"1225":[26,18,26,27],"1233":[26,18,26,27],"1241":[26,18,26,27],"1249":[28,10,28,13],"1257":[29,16,29,21],"1265":[29,16,29,21],"1273":[29,9,29,22],"1281":[31,28,31,31],"1289":[31,40,31,43],"1297":[31,28,31,44],"1299":[31,28,31,39],"1305":[31,28,31,44],"1313":[31,28,31,44],"1321":[32,24,32,29],"1329":[32,24,32,29],"1337":[32,24,32,29],"1345":[33,9,33,25],"1353":[33,31,33,32],"1361":[35,23,35,34],"1369":[35,41,35,44],"1377":[35,52,35,68],"1385":[35,71,35,72],"1393":[35,41,35,73],"1395":[35,41,35,51],"1401":[35,23,35,74],"1403":[35,23,35,40],"1409":[35,23,35,74],"1417":[35,23,35,74],"1425":[36,17,36,20],"1433":[36,24,36,27],"1441":[36,24,36,38],"1449":[37,32,37,36],"1457":[37,32,37,36],"1465":[37,17,37,37],"1473":[40,20,40,25],"1481":[40,20,40,25],"1489":[40,13,40,26],"1497":[39,11,41,10],"1505":[43,12,43,24],"1513":[43,12,43,24],"1521":[43,5,43,25],"1529":[27,28,44,2],"1537":[27,28,44,2],"1545":[27,28,44,2],"1553":[27,28,44,2],"1561":[27,28,44,2],"1569":[27,28,44,2],"1577":[27,28,44,2],"1585":[27,28,44,2],"1593":[27,28,44,2],"1601":[45,1,45,9],"1609":[45,1,45,19],"1617":[46,20,46,30],"1625":[46,31,46,35],"1633":[46,16,46,36],"1641":[46,16,46,36],"1649":[46,16,46,36],"1657":[47,5,47,9],"1665":[47,5,47,21],"1673":[47,27,47,31],"1681":[47,5,47,32],"1683":[47,5,47,26],"1689":[47,5,47,33],"1697":[48,9,48,18],"1705":[48,9,48,25],"1713":[49,13,49,23],"1721":[49,29,49,38],"1729":[49,39,49,40],"1737":[49,29,49,41],"1745":[49,13,49,42],"1747":[49,13,49,28],"1753":[49,46,49,66],"1761":[49,67,49,76],"1769":[49,77,49,78],"1777":[49,67,49,79],"1785":[49,46,49,80],"1793":[50,13,50,17],"1801":[50,13,50,25],"1809":[50,32,50,36],"1817":[50,38,50,47],"1825":[50,13,50,48],"1827":[50,13,50,31],"1833":[50,13,50,49],"1841":[51,20,51,27],"1849":[51,31,51,38],"1857":[51,31,51,46],"1865":[51,51,51,58],"1873":[51,51,51,66],"1881":[51,51,51,77],"1889":[51,81,51,88],"1897":[51,81,51,96],"1905":[51,81,51,104],"1913":[52,13,52,17],"1921":[52,13,52,25],"1929":[52,32,52,36],"1937":[52,38,52,47],"1945":[52,13,52,48],"1947":[52,13,52,31],"1953":[52,13,52,49],"1961":[54,13,54,17],"1969":[54,13,54,22],"1977":[54,29,54,33],"1985":[54,35,54,44],"1993":[54,13,54,45],"1995":[54,13,54,28],"2001":[54,13,54,46],"2009":[57,12,57,16],"2017":[57,12,57,16],"2025":[57,5,57,17],"2033":[45,39,58,2],"2041":[45,39,58,2],"2049":[45,39,58,2],"2057":[45,39,58,2],"2065":[45,39,58,2],"2073":[45,39,58,2],"2081":[45,1,58,2],"2089":[45,1,58,3],"2097":[59,1,59,9],"2105":[59,1,59,19],"2113":[60,16,60,20],"2121":[60,16,60,31],"2129":[60,16,60,31],"2137":[60,16,60,31],"2145":[61,9,61,19],"2153":[61,25,61,34],"2161":[61,35,61,36],"2169":[61,25,61,37],"2177":[61,9,61,38],"2179":[61,9,61,24],"2185":[61,42,61,62],"2193":[61,63,61,72],"2201":[61,73,61,74],"2209":[61,63,61,75],"2217":[61,42,61,76],"2225":[62,9,62,13],"2233":[62,9,62,21],"2241":[62,28,62,32],"2249":[62,34,62,43],"2257":[62,9,62,44],"2259":[62,9,62,27],"2265":[62,9,62,45],"2273":[64,9,64,13],"2281":[64,9,64,18],"2289":[64,25,64,29],"2297":[64,31,64,40],"2305":[64,9,64,41],"2307":[64,9,64,24],"2313":[64,9,64,42],"2321":[66,12,66,16],"2329":[66,12,66,16],"2337":[66,5,66,17],"2345":[59,30,67,2],"2353":[59,30,67,2],"2361":[59,30,67,2],"2369":[59,30,67,2],"2377":[59,1,67,2],"2385":[59,1,67,3],"2393":[68,1,68,9],"2401":[68,1,68,19],"2409":[69,17,69,21],"2417":[69,17,69,33],"2425":[69,17,69,40],"2433":[69,17,69,40],"2441":[69,17,69,40],"2449":[70,5,70,9],"2457":[70,5,70,21],"2465":[71,9,71,13],"2473":[72,17,72,22],"2481":[73,17,73,24],"2489":[73,17,73,24],"2497":[74,17,74,20],"2505":[75,25,75,28],"2513":[75,25,75,28],"2521":[75,17,75,29],"2529":[76,21,76,23],"2537":[77,28,77,30],"2545":[77,31,77,34],"2553":[77,28,77,35],"2561":[77,28,77,35],"2569":[77,21,77,36],"2577":[78,23,78,26],"2585":[78,23,78,26],"2593":[78,17,78,27],"2601":[80,17,80,19],"2617":[81,19,81,24],"2625":[81,17,81,24],"2633":[81,28,81,30],"2641":[81,28,81,32],"2649":[81,17,81,33],"2657":[71,20,82,10],"2665":[71,20,82,10],"2673":[71,20,82,10],"2681":[71,20,82,10],"2689":[71,9,82,11],"2691":[71,9,71,19],"2697":[71,9,82,12],"2705":[70,30,83,6],"2713":[70,30,83,6],"2721":[70,30,83,6],"2729":[70,30,83,6],"2737":[70,5,83,7],"2739":[70,5,70,29],"2745":[70,5,83,8],"2753":[84,12,84,16],"2761":[84,12,84,16],"2769":[84,5,84,17],"2777":[68,33,85,2],"2785":[68,33,85,2],"2793":[68,33,85,2],"2801":[68,33,85,2],"2809":[68,33,85,2],"2817":[68,33,85,2],"2825":[68,1,85,2],"2833":[68,1,85,3],"2841":[86,1,86,9],"2849":[86,1,86,19],"2857":[87,9,87,17],"2865":[87,28,87,34],"2873":[88,22,88,28],"2881":[88,22,88,28],"2889":[88,9,88,29],"2897":[89,18,89,23],"2905":[89,18,89,23],"2913":[89,9,89,24],"2921":[91,9,91,14],"2929":[91,24,91,30],"2937":[91,9,91,31],"2939":[91,9,91,23],"2945":[91,36,91,42],"2953":[91,36,91,59],"2961":[92,22,92,28],"2969":[92,29,92,35],"2977":[92,18,92,36],"2985":[92,18,92,36],"2993":[92,9,92,37],"3001":[94,9,94,18],"3009":[94,30,94,40],"3017":[95,20,95,30],"3025":[95,20,95,30],"3033":[95,9,95,31],"3041":[96,22,96,26],"3049":[96,22,96,26],"3057":[96,9,96,27],"3065":[99,9,99,17],"3073":[99,21,99,26],"3081":[99,36,99,44],"3089":[99,21,99,45],"3091":[99,21,99,35],"3097":[100,19,100,27],"3105":[100,19,100,27],"3113":[100,9,100,28],"3121":[101,20,101,24],"3129":[101,20,101,24],"3137":[101,9,101,25],"3145":[103,19,103,21],"3153":[103,19,103,21],"3161":[103,9,103,22],"3169":[105,10,105,14],"3177":[105,10,105,27],"3185":[105,28,105,32],"3193":[105,10,105,33],"3201":[106,13,106,19],"3209":[107,13,107,17],"3217":[107,13,107,30],"3225":[107,31,107,35],"3233":[107,39,107,45],"3241":[107,13,107,45],"3249":[107,13,107,46],"3257":[108,13,108,17],"3265":[108,32,108,38],"3273":[108,13,108,39],"3275":[108,13,108,31],"3281":[108,13,108,40],"3289":[110,23,110,31],"3297":[110,23,110,37],"3305":[110,57,110,61],"3313":[110,19,110,62],"3315":[110,23,110,56],"3321":[110,19,110,62],"3329":[110,13,110,63],"3337":[115,9,115,13],"3345":[115,9,115,20],"3353":[115,21,115,25],"3361":[115,9,115,26],"3369":[115,30,115,35],"3377":[115,40,115,47],"3385":[115,40,115,53],"3393":[116,13,116,19],"3401":[116,23,116,29],"3409":[116,23,116,46],"3417":[116,50,116,56],"3425":[116,60,116,64],"3433":[116,60,116,71],"3441":[116,72,116,76],"3449":[116,60,116,77],"3457":[116,60,116,84],"3465":[117,23,117,31],"3473":[117,23,117,37],"3481":[117,58,117,62],"3489":[117,19,117,63],"3491":[117,23,117,57],"3497":[117,19,117,63],"3505":[117,13,117,64],"3513":[119,13,119,23],"3521":[120,21,120,25],"3529":[120,21,120,32],"3537":[120,33,120,37],"3545":[120,21,120,38],"3553":[120,21,120,38],"3561":[120,13,120,39],"3569":[121,22,121,27],"3577":[121,22,121,37],"3585":[121,22,121,44],"3593":[121,22,121,44],"3601":[121,13,121,45],"3609":[122,19,122,24],"3617":[122,36,122,40],"3625":[122,36,122,51],"3633":[122,53,122,59],"3641":[122,61,122,71],"3649":[122,19,122,72],"3651":[122,19,122,35],"3657":[122,19,122,72],"3665":[122,13,122,73],"3673":[123,20,123,23],"3681":[123,20,123,23],"3689":[123,13,123,24],"3697":[125,16,125,20],"3705":[125,16,125,27],"3713":[125,28,125,32],"3721":[125,16,125,33],"3729":[125,16,125,33],"3737":[125,9,125,34],"3745":[127,10,127,16],"3753":[128,18,128,22],"3761":[128,18,128,35],"3769":[128,36,128,40],"3777":[128,18,128,41],"3785":[128,18,128,41],"3793":[128,9,128,42],"3801":[129,14,129,20],"3809":[130,23,130,31],"3817":[130,23,130,37],"3825":[130,57,130,61],"3833":[130,19,130,62],"3835":[130,23,130,56],"3841":[130,19,130,62],"3849":[130,13,130,63],"3857":[133,11,133,26],"3865":[133,30,133,36],"3873":[133,30,133,44],"3881":[134,9,134,15],"3889":[134,9,134,23],"3897":[134,40,134,44],"3905":[134,40,134,52],"3913":[134,40,134,66],"3921":[134,9,134,66],"3929":[134,9,134,67],"3937":[135,10,135,20],"3945":[136,22,136,28],"3953":[136,33,136,45],"3961":[136,22,136,46],"3963":[136,22,136,32],"3969":[136,50,136,56],"3977":[136,57,136,61],"3985":[136,63,136,69],"3993":[136,63,136,77],"4001":[136,50,136,78],"4009":[136,22,136,78],"4017":[136,9,136,79],"4025":[138,22,138,29],"4033":[138,22,138,40],"4041":[138,44,138,48],"4049":[138,44,138,59],"4057":[138,22,138,59],"4065":[138,22,138,59],"4073":[139,13,139,18],"4081":[139,27,139,31],"4089":[139,33,139,39],"4097":[139,41,139,51],"4105":[139,53,139,63],"4113":[139,65,139,69],"4121":[139,13,139,70],"4123":[139,13,139,26],"4129":[139,13,139,70],"4137":[139,5,139,71],"4145":[140,10,140,18],"4153":[141,9,141,14],"4161":[141,9,141,21],"4163":[141,9,141,19],"4169":[141,9,141,22],"4177":[143,9,143,14],"4185":[143,19,143,26],"4193":[143,19,143,32],"4201":[144,16,144,21],"4209":[144,16,144,21],"4217":[144,9,144,22],"4225":[146,12,146,16],"4233":[146,12,146,23],"4241":[146,24,146,28],"4249":[146,32,146,37],"4257":[146,12,146,37],"4265":[146,12,146,37],"4273":[146,5,146,38],"4281":[86,28,147,2],"4289":[86,28,147,2],"4297":[86,28,147,2],"4305":[86,28,147,2],"4313":[86,28,147,2],"4321":[86,28,147,2],"4329":[86,28,147,2],"4337":[86,28,147,2],"4345":[86,28,147,2],"4353":[86,28,147,2],"4361":[86,28,147,2],"4369":[86,1,147,2],"4377":[86,1,147,3],"4385":[148,1,148,9],"4393":[148,1,148,19],"4401":[149,17,149,23],"4409":[149,29,149,33],"4417":[149,29,149,40],"4425":[149,17,149,41],"4427":[149,17,149,28],"4433":[149,17,149,41],"4441":[149,17,149,41],"4449":[150,12,150,17],"4457":[150,12,150,17],"4465":[150,5,150,18],"4473":[148,33,151,2],"4481":[148,33,151,2],"4489":[148,33,151,2],"4497":[148,33,151,2],"4505":[148,1,151,2],"4513":[148,1,151,3],"4521":[152,1,152,9],"4529":[152,1,152,19],"4537":[153,18,153,19],"4545":[153,25,153,29],"4553":[153,25,153,37],"4561":[153,25,153,44],"4569":[153,18,153,19],"4577":[153,18,153,19],"4585":[153,25,153,44],"4593":[153,25,153,44],"4601":[153,46,153,47],"4609":[153,50,153,51],"4625":[153,53,153,54],"4633":[153,53,153,56],"4649":[154,9,154,15],"4657":[154,23,154,27],"4665":[154,23,154,35],"4673":[154,36,154,37],"4681":[154,23,154,38],"4689":[154,39,154,40],"4697":[154,23,154,41],"4705":[154,43,154,47],"4713":[154,43,154,55],"4721":[154,56,154,57],"4729":[154,43,154,58],"4737":[154,59,154,60],"4745":[154,43,154,61],"4753":[154,9,154,62],"4755":[154,9,154,22],"4761":[154,9,154,63],"4769":[152,36,156,2],"4777":[152,36,156,2],"4785":[152,36,156,2],"4793":[152,36,156,2],"4801":[152,36,156,2],"4809":[152,36,156,2],"4817":[152,1,156,2],"4825":[152,1,156,3],"4833":[157,1,157,9],"4841":[157,1,157,19],"4849":[158,5,158,9],"4857":[158,5,158,17],"4865":[159,9,159,11],"4873":[160,9,160,13],"4881":[158,23,161,6],"4889":[158,5,161,7],"4891":[158,5,158,22],"4897":[158,5,161,8],"4905":[162,12,162,16],"4913":[162,12,162,16],"4921":[162,5,162,17],"4929":[157,29,163,2],"4937":[157,29,163,2],"4945":[157,29,163,2],"4953":[157,29,163,2],"4961":[157,29,163,2],"4969":[157,1,163,2],"4977":[157,1,163,3],"4985":[164,1,164,9],"4993":[164,1,164,19],"5001":[164,37,164,49],"5009":[165,12,165,16],"5017":[165,12,165,28],"5025":[165,29,165,30],"5033":[165,12,165,31],"5041":[165,12,165,31],"5049":[165,5,165,32],"5057":[164,51,166,2],"5065":[164,51,166,2],"5073":[164,51,166,2],"5081":[164,1,166,3],"5083":[164,1,164,36],"5089":[164,1,166,4],"5097":[167,14,167,20],"5105":[167,14,167,41],"5113":[167,45,167,76],"5121":[167,14,167,76],"5129":[167,14,167,76],"5137":[168,18,168,25],"5145":[168,26,168,32],"5153":[168,35,168,48],"5161":[168,18,168,49],"5169":[168,18,168,49],"5177":[168,18,168,49],"5185":[169,18,169,25],"5193":[169,26,169,32],"5201":[169,35,169,48],"5209":[169,18,169,49],"5217":[169,18,169,49],"5225":[169,18,169,49],"5233":[170,1,170,9],"5241":[170,1,170,19],"5249":[170,32,170,41],"5257":[170,1,170,41],"5265":[170,1,170,42],"5273":[171,1,171,9],"5281":[171,1,171,19],"5289":[171,33,171,43],"5297":[171,1,171,43],"5305":[171,1,171,44],"5313":[172,1,172,9],"5321":[172,1,172,19],"5329":[172,33,172,43],"5337":[172,1,172,43],"5345":[172,1,172,44],"5353":[173,1,173,9],"5361":[173,1,173,19],"5369":[173,30,173,33],"5377":[173,30,173,41],"5385":[173,1,173,41],"5393":[173,1,173,42],"5401":[174,1,174,9],"5409":[174,1,174,19],"5417":[174,31,174,39],"5425":[174,1,174,39],"5433":[174,1,174,40],"5441":[175,1,175,9],"5449":[175,1,175,19],"5457":[175,29,175,35],"5465":[175,1,175,35],"5473":[175,1,175,36],"5481":[176,1,176,9],"5489":[176,1,176,19],"5497":[176,33,176,43],"5505":[176,1,176,43],"5513":[176,1,176,44],"5521":[177,1,177,9],"5529":[177,1,177,19],"5537":[177,34,177,40],"5545":[177,34,177,46],"5553":[177,1,177,46],"5561":[177,1,177,47],"5569":[178,1,178,9],"5577":[178,1,178,19],"5585":[178,34,178,45],"5593":[178,1,178,45],"5601":[178,1,178,46],"5609":[179,1,179,9],"5617":[179,1,179,19],"5625":[179,28,179,33],"5633":[179,1,179,33],"5641":[179,1,179,34],"5649":[180,1,180,9],"5657":[180,1,180,19],"5665":[180,28,180,33],"5673":[180,1,180,33],"5681":[180,1,180,34],"5689":[181,1,181,7],"5697":[181,23,181,31],"5705":[181,23,181,41],"5713":[181,43,181,52],"5721":[183,16,183,31],"5729":[183,16,183,37],"5731":[183,16,183,35],"5737":[183,16,183,37],"5745":[183,9,183,38],"5753":[182,10,184,6],"5761":[182,10,184,6],"5769":[182,10,184,6],"5777":[186,9,186,24],"5785":[186,29,186,32],"5793":[186,9,186,33],"5795":[186,9,186,28],"5801":[186,9,186,34],"5809":[185,10,187,6],"5817":[185,10,187,6],"5825":[185,10,187,6],"5833":[185,10,187,6],"5841":[181,54,188,2],"5849":[181,1,188,3],"5851":[181,1,181,22],"5857":[181,1,188,4],"5865":[189,1,189,9],"5873":[189,1,189,19],"5881":[189,38,189,53],"5889":[189,1,189,53],"5897":[189,1,189,54],"5905":[190,1,190,9],"5913":[190,1,190,19],"5921":[190,28,190,33],"5929":[190,1,190,33],"5937":[190,1,190,34],"5945":[191,1,191,9],"5953":[191,1,191,19],"5961":[191,31,191,39],"5969":[191,1,191,39],"5977":[191,1,191,40],"5985":[192,1,192,9],"5993":[192,1,192,19],"6001":[192,39,192,46],"6009":[192,47,192,68],"6017":[192,39,192,69],"6025":[192,1,192,69],"6033":[192,1,192,70],"6041":[193,1,193,9],"6049":[193,1,193,19],"6057":[193,28,193,35],"6065":[193,36,193,45],"6073":[193,28,193,46],"6081":[193,1,193,46],"6089":[193,1,193,47],"6097":[194,1,194,9],"6105":[194,1,194,19],"6113":[194,28,194,35],"6121":[194,36,194,45],"6129":[194,28,194,46],"6137":[194,1,194,46],"6145":[194,1,194,47],"6153":[195,1,195,9],"6161":[195,1,195,19],"6169":[195,29,195,36],"6177":[195,37,195,45],"6185":[195,29,195,46],"6193":[195,1,195,46],"6201":[195,1,195,47],"6209":[196,16,196,22],"6217":[196,47,196,55],"6225":[196,43,196,57],"6233":[196,43,196,57],"6241":[196,16,196,57],"6249":[196,16,196,57],"6257":[196,16,196,57],"6265":[1,1,196,58],"6273":[1,1,196,58],"6281":[1,1,196,58],"6289":[1,1,196,58],"6297":[1,1,196,58],"6305":[1,1,196,58],"6313":[1,1,196,58],"6321":[1,1,196,58],"6329":[1,1,196,58],"6337":[1,1,196,58],"6345":[1,1,196,58],"6353":[1,1,196,58],"6361":[1,1,196,58],"6369":[1,1,196,58],"6377":[1,1,196,58],"6385":[1,1,196,58],"6393":[1,1,196,58],"6401":[8,1,16,2],"6409":[1,1,196,58],"6417":[1,1,196,58],"6425":[1,1,196,58],"6433":[1,1,196,58],"6441":[1,1,196,58],"6449":[1,1,196,58],"6457":[1,1,196,58],"6465":[8,1,16,2],"6473":[8,1,16,2],"6481":[19,5,21,6],"6489":[18,26,24,2],"6497":[18,26,24,2],"6505":[28,5,30,6],"6513":[36,13,38,14],"6521":[33,5,42,6],"6529":[27,28,44,2],"6537":[27,28,44,2],"6545":[51,16,55,10],"6553":[49,9,55,10],"6561":[48,5,56,6],"6569":[45,39,58,2],"6577":[45,39,58,2],"6585":[61,5,65,6],"6593":[59,30,67,2],"6601":[59,30,67,2],"6609":[72,13,73,24],"6617":[76,17,77,36],"6625":[74,13,79,14],"6633":[80,13,81,33],"6641":[71,20,82,10],"6649":[71,20,82,10],"6657":[70,30,83,6],"6665":[70,30,83,6],"6673":[68,33,85,2],"6681":[68,33,85,2],"6689":[87,5,90,6],"6697":[91,5,93,6],"6705":[94,5,97,6],"6713":[99,5,104,6],"6721":[106,9,111,10],"6729":[105,5,112,6],"6737":[116,9,118,10],"6745":[119,9,124,10],"6753":[115,5,126,6],"6761":[129,9,131,10],"6769":[127,5,132,6],"6777":[133,5,134,67],"6785":[135,5,137,6],"6793":[140,5,142,6],"6801":[143,5,145,6],"6809":[86,28,147,2],"6817":[86,28,147,2],"6825":[148,33,151,2],"6833":[148,33,151,2],"6841":[153,5,155,6],"6849":[153,5,155,6],"6857":[152,36,156,2],"6865":[152,36,156,2],"6873":[157,29,163,2],"6881":[157,29,163,2],"6889":[164,51,166,2],"6897":[164,51,166,2],"6905":[182,10,184,6],"6913":[182,10,184,6],"6921":[185,10,187,6],"6929":[185,10,187,6],"6937":[1,1,196,58],"6945":[1,1,196,58],"nBranches":86,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/index_jalangi_.js","code":"'use strict';\n\n/*!\n * Module dependencies.\n */\n\nvar Schema = require('./schema'),\n    SchemaType = require('./schematype'),\n    VirtualType = require('./virtualtype'),\n    STATES = require('./connectionstate'),\n    Types = require('./types'),\n    Query = require('./query'),\n    Model = require('./model'),\n    Document = require('./document'),\n    utils = require('./utils'),\n    format = utils.toCollectionName,\n    pkg = require('../package.json');\n\nvar querystring = require('querystring');\n\nvar Aggregate = require('./aggregate');\nvar PromiseProvider = require('./promise_provider');\n\n/**\n * Mongoose constructor.\n *\n * The exports object of the `mongoose` module is an instance of this class.\n * Most apps will only use this one instance.\n *\n * @api public\n */\n\nfunction Mongoose() {\n  this.connections = [];\n  this.plugins = [];\n  this.models = {};\n  this.modelSchemas = {};\n  // default global options\n  this.options = {\n    pluralization: true\n  };\n  var conn = this.createConnection(); // default connection\n  conn.models = this.models;\n}\n\n/**\n * Expose connection states for user-land\n *\n */\nMongoose.prototype.STATES = STATES;\n\n/**\n * Sets mongoose options\n *\n * ####Example:\n *\n *     mongoose.set('test', value) // sets the 'test' option to `value`\n *\n *     mongoose.set('debug', true) // enable logging collection methods + arguments to the console\n *\n *     mongoose.set('debug', function(collectionName, methodName, arg1, arg2...) {}); // use custom function to log collection methods + arguments\n *\n * @param {String} key\n * @param {String|Function} value\n * @api public\n */\n\nMongoose.prototype.set = function(key, value) {\n  if (arguments.length == 1) {\n    return this.options[key];\n  }\n\n  this.options[key] = value;\n  return this;\n};\n\n/**\n * Gets mongoose options\n *\n * ####Example:\n *\n *     mongoose.get('test') // returns the 'test' value\n *\n * @param {String} key\n * @method get\n * @api public\n */\n\nMongoose.prototype.get = Mongoose.prototype.set;\n\n/*!\n * ReplSet connection string check.\n */\n\nvar rgxReplSet = /^.+,.+$/;\n\n/**\n * Checks if ?replicaSet query parameter is specified in URI\n *\n * ####Example:\n *\n *     checkReplicaSetInUri('localhost:27000?replicaSet=rs0'); // true\n *\n * @param {String} uri\n * @return {boolean}\n * @api private\n */\n\nvar checkReplicaSetInUri = function(uri) {\n  if (!uri) {\n    return false;\n  }\n\n  var queryStringStart = uri.indexOf('?');\n  var isReplicaSet = false;\n  if (queryStringStart !== -1) {\n    try {\n      var obj = querystring.parse(uri.substr(queryStringStart + 1));\n      if (obj && obj.replicaSet) {\n        isReplicaSet = true;\n      }\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return isReplicaSet;\n};\n\n/**\n * Creates a Connection instance.\n *\n * Each `connection` instance maps to a single database. This method is helpful when mangaging multiple db connections.\n *\n * If arguments are passed, they are proxied to either [Connection#open](#connection_Connection-open) or [Connection#openSet](#connection_Connection-openSet) appropriately. This means we can pass `db`, `server`, and `replset` options to the driver. _Note that the `safe` option specified in your schema will overwrite the `safe` db option specified here unless you set your schemas `safe` option to `undefined`. See [this](/docs/guide.html#safe) for more information._\n *\n * _Options passed take precedence over options included in connection strings._\n *\n * ####Example:\n *\n *     // with mongodb:// URI\n *     db = mongoose.createConnection('mongodb://user:pass@localhost:port/database');\n *\n *     // and options\n *     var opts = { db: { native_parser: true }}\n *     db = mongoose.createConnection('mongodb://user:pass@localhost:port/database', opts);\n *\n *     // replica sets\n *     db = mongoose.createConnection('mongodb://user:pass@localhost:port,anotherhost:port,yetanother:port/database');\n *\n *     // and options\n *     var opts = { replset: { strategy: 'ping', rs_name: 'testSet' }}\n *     db = mongoose.createConnection('mongodb://user:pass@localhost:port,anotherhost:port,yetanother:port/database', opts);\n *\n *     // with [host, database_name[, port] signature\n *     db = mongoose.createConnection('localhost', 'database', port)\n *\n *     // and options\n *     var opts = { server: { auto_reconnect: false }, user: 'username', pass: 'mypassword' }\n *     db = mongoose.createConnection('localhost', 'database', port, opts)\n *\n *     // initialize now, connect later\n *     db = mongoose.createConnection();\n *     db.open('localhost', 'database', port, [opts]);\n *\n * @param {String} [uri] a mongodb:// URI\n * @param {Object} [options] options to pass to the driver\n * @see Connection#open #connection_Connection-open\n * @see Connection#openSet #connection_Connection-openSet\n * @return {Connection} the created Connection object\n * @api public\n */\n\nMongoose.prototype.createConnection = function(uri, options) {\n  var conn = new Connection(this);\n  this.connections.push(conn);\n\n  if (arguments.length) {\n    if (rgxReplSet.test(arguments[0]) || checkReplicaSetInUri(arguments[0])) {\n      conn.openSet.apply(conn, arguments);\n    } else if (options && options.replset &&\n        (options.replset.replicaSet || options.replset.rs_name)) {\n      conn.openSet.apply(conn, arguments);\n    } else {\n      conn.open.apply(conn, arguments);\n    }\n  }\n\n  return conn;\n};\n\n/**\n * Opens the default mongoose connection.\n *\n * If arguments are passed, they are proxied to either\n * [Connection#open](#connection_Connection-open) or\n * [Connection#openSet](#connection_Connection-openSet) appropriately.\n *\n * _Options passed take precedence over options included in connection strings._\n *\n * ####Example:\n *\n *     mongoose.connect('mongodb://user:pass@localhost:port/database');\n *\n *     // replica sets\n *     var uri = 'mongodb://user:pass@localhost:port,anotherhost:port,yetanother:port/mydatabase';\n *     mongoose.connect(uri);\n *\n *     // with options\n *     mongoose.connect(uri, options);\n *\n *     // connecting to multiple mongos\n *     var uri = 'mongodb://hostA:27501,hostB:27501';\n *     var opts = { mongos: true };\n *     mongoose.connect(uri, opts);\n *\n *     // optional callback that gets fired when initial connection completed\n *     var uri = 'mongodb://nonexistent.domain:27000';\n *     mongoose.connect(uri, function(error) {\n *       // if error is truthy, the initial connection failed.\n *     })\n *\n * @param {String} uri(s)\n * @param {Object} [options]\n * @param {Function} [callback]\n * @see Mongoose#createConnection #index_Mongoose-createConnection\n * @api public\n * @return {Mongoose} this\n */\n\nMongoose.prototype.connect = function() {\n  var conn = this.connection;\n\n  if (rgxReplSet.test(arguments[0]) || checkReplicaSetInUri(arguments[0])) {\n    conn.openSet.apply(conn, arguments);\n  } else {\n    conn.open.apply(conn, arguments);\n  }\n\n  return this;\n};\n\n/**\n * Disconnects all connections.\n *\n * @param {Function} [fn] called after all connection close.\n * @return {Mongoose} this\n * @api public\n */\n\nMongoose.prototype.disconnect = function(fn) {\n  var count = this.connections.length,\n      error;\n\n  this.connections.forEach(function(conn) {\n    conn.close(function(err) {\n      if (error) return;\n\n      if (err) {\n        error = err;\n        if (fn) return fn(err);\n        throw err;\n      }\n\n      if (fn)\n        --count || fn();\n    });\n  });\n  return this;\n};\n\n/**\n * Defines a model or retrieves it.\n *\n * Models defined on the `mongoose` instance are available to all connection created by the same `mongoose` instance.\n *\n * ####Example:\n *\n *     var mongoose = require('mongoose');\n *\n *     // define an Actor model with this mongoose instance\n *     mongoose.model('Actor', new Schema({ name: String }));\n *\n *     // create a new connection\n *     var conn = mongoose.createConnection(..);\n *\n *     // retrieve the Actor model\n *     var Actor = conn.model('Actor');\n *\n * _When no `collection` argument is passed, Mongoose produces a collection name by passing the model `name` to the [utils.toCollectionName](#utils_exports.toCollectionName) method. This method pluralizes the name. If you don't like this behavior, either pass a collection name or set your schemas collection name option._\n *\n * ####Example:\n *\n *     var schema = new Schema({ name: String }, { collection: 'actor' });\n *\n *     // or\n *\n *     schema.set('collection', 'actor');\n *\n *     // or\n *\n *     var collectionName = 'actor'\n *     var M = mongoose.model('Actor', schema, collectionName)\n *\n * @param {String} name model name\n * @param {Schema} [schema]\n * @param {String} [collection] name (optional, induced from model name)\n * @param {Boolean} [skipInit] whether to skip initialization (defaults to false)\n * @api public\n */\n\nMongoose.prototype.model = function(name, schema, collection, skipInit) {\n  if ('string' == typeof schema) {\n    collection = schema;\n    schema = false;\n  }\n\n  if (utils.isObject(schema) && !(schema.instanceOfSchema)) {\n    schema = new Schema(schema);\n  }\n\n  if ('boolean' === typeof collection) {\n    skipInit = collection;\n    collection = null;\n  }\n\n  // handle internal options from connection.model()\n  var options;\n  if (skipInit && utils.isObject(skipInit)) {\n    options = skipInit;\n    skipInit = true;\n  } else {\n    options = {};\n  }\n\n  // look up schema for the collection.\n  if (!this.modelSchemas[name]) {\n    if (schema) {\n      // cache it so we only apply plugins once\n      this.modelSchemas[name] = schema;\n      this._applyPlugins(schema);\n    } else {\n      throw new mongoose.Error.MissingSchemaError(name);\n    }\n  }\n\n  var model;\n  var sub;\n\n  // connection.model() may be passing a different schema for\n  // an existing model name. in this case don't read from cache.\n  if (this.models[name] && false !== options.cache) {\n    if (schema && schema.instanceOfSchema && schema != this.models[name].schema) {\n      throw new mongoose.Error.OverwriteModelError(name);\n    }\n\n    if (collection) {\n      // subclass current model with alternate collection\n      model = this.models[name];\n      schema = model.prototype.schema;\n      sub = model.__subclass(this.connection, schema, collection);\n      // do not cache the sub model\n      return sub;\n    }\n\n    return this.models[name];\n  }\n\n  // ensure a schema exists\n  if (!schema) {\n    schema = this.modelSchemas[name];\n    if (!schema) {\n      throw new mongoose.Error.MissingSchemaError(name);\n    }\n  }\n\n  // Apply relevant \"global\" options to the schema\n  if (!('pluralization' in schema.options)) schema.options.pluralization = this.options.pluralization;\n\n\n  if (!collection) {\n    collection = schema.get('collection') || format(name, schema.options);\n  }\n\n  var connection = options.connection || this.connection;\n  model = Model.compile(name, schema, collection, connection, this);\n\n  if (!skipInit) {\n    model.init();\n  }\n\n  if (false === options.cache) {\n    return model;\n  }\n\n  return this.models[name] = model;\n};\n\n/**\n * Returns an array of model names created on this instance of Mongoose.\n *\n * ####Note:\n *\n * _Does not include names of models created using `connection.model()`._\n *\n * @api public\n * @return {Array}\n */\n\nMongoose.prototype.modelNames = function() {\n  var names = Object.keys(this.models);\n  return names;\n};\n\n/**\n * Applies global plugins to `schema`.\n *\n * @param {Schema} schema\n * @api private\n */\n\nMongoose.prototype._applyPlugins = function(schema) {\n  for (var i = 0, l = this.plugins.length; i < l; i++) {\n    schema.plugin(this.plugins[i][0], this.plugins[i][1]);\n  }\n};\n\n/**\n * Declares a global plugin executed on all Schemas.\n *\n * Equivalent to calling `.plugin(fn)` on each Schema you create.\n *\n * @param {Function} fn plugin callback\n * @param {Object} [opts] optional options\n * @return {Mongoose} this\n * @see plugins ./plugins.html\n * @api public\n */\n\nMongoose.prototype.plugin = function(fn, opts) {\n  this.plugins.push([fn, opts]);\n  return this;\n};\n\n/**\n * The default connection of the mongoose module.\n *\n * ####Example:\n *\n *     var mongoose = require('mongoose');\n *     mongoose.connect(...);\n *     mongoose.connection.on('error', cb);\n *\n * This is the connection used by default for every model created using [mongoose.model](#index_Mongoose-model).\n *\n * @property connection\n * @return {Connection}\n * @api public\n */\n\nMongoose.prototype.__defineGetter__('connection', function() {\n  return this.connections[0];\n});\n\n/*!\n * Driver depentend APIs\n */\n\nvar driver = global.MONGOOSE_DRIVER_PATH || './drivers/node-mongodb-native';\n\n/*!\n * Connection\n */\n\nvar Connection = require(driver + '/connection');\n\n/*!\n * Collection\n */\n\nvar Collection = require(driver + '/collection');\n\n/**\n * The Mongoose Aggregate constructor\n *\n * @method Aggregate\n * @api public\n */\n\nMongoose.prototype.Aggregate = Aggregate;\n\n/**\n * The Mongoose Collection constructor\n *\n * @method Collection\n * @api public\n */\n\nMongoose.prototype.Collection = Collection;\n\n/**\n * The Mongoose [Connection](#connection_Connection) constructor\n *\n * @method Connection\n * @api public\n */\n\nMongoose.prototype.Connection = Connection;\n\n/**\n * The Mongoose version\n *\n * @property version\n * @api public\n */\n\nMongoose.prototype.version = pkg.version;\n\n/**\n * The Mongoose constructor\n *\n * The exports of the mongoose module is an instance of this class.\n *\n * ####Example:\n *\n *     var mongoose = require('mongoose');\n *     var mongoose2 = new mongoose.Mongoose();\n *\n * @method Mongoose\n * @api public\n */\n\nMongoose.prototype.Mongoose = Mongoose;\n\n/**\n * The Mongoose [Schema](#schema_Schema) constructor\n *\n * ####Example:\n *\n *     var mongoose = require('mongoose');\n *     var Schema = mongoose.Schema;\n *     var CatSchema = new Schema(..);\n *\n * @method Schema\n * @api public\n */\n\nMongoose.prototype.Schema = Schema;\n\n/**\n * The Mongoose [SchemaType](#schematype_SchemaType) constructor\n *\n * @method SchemaType\n * @api public\n */\n\nMongoose.prototype.SchemaType = SchemaType;\n\n/**\n * The various Mongoose SchemaTypes.\n *\n * ####Note:\n *\n * _Alias of mongoose.Schema.Types for backwards compatibility._\n *\n * @property SchemaTypes\n * @see Schema.SchemaTypes #schema_Schema.Types\n * @api public\n */\n\nMongoose.prototype.SchemaTypes = Schema.Types;\n\n/**\n * The Mongoose [VirtualType](#virtualtype_VirtualType) constructor\n *\n * @method VirtualType\n * @api public\n */\n\nMongoose.prototype.VirtualType = VirtualType;\n\n/**\n * The various Mongoose Types.\n *\n * ####Example:\n *\n *     var mongoose = require('mongoose');\n *     var array = mongoose.Types.Array;\n *\n * ####Types:\n *\n * - [ObjectId](#types-objectid-js)\n * - [Buffer](#types-buffer-js)\n * - [SubDocument](#types-embedded-js)\n * - [Array](#types-array-js)\n * - [DocumentArray](#types-documentarray-js)\n *\n * Using this exposed access to the `ObjectId` type, we can construct ids on demand.\n *\n *     var ObjectId = mongoose.Types.ObjectId;\n *     var id1 = new ObjectId;\n *\n * @property Types\n * @api public\n */\n\nMongoose.prototype.Types = Types;\n\n/**\n * The Mongoose [Query](#query_Query) constructor.\n *\n * @method Query\n * @api public\n */\n\nMongoose.prototype.Query = Query;\n\n/**\n * The Mongoose [Promise](#promise_Promise) constructor.\n *\n * @method Promise\n * @api public\n */\n\nObject.defineProperty(Mongoose.prototype, 'Promise', {\n  get: function() {\n    return PromiseProvider.get();\n  },\n  set: function(lib) {\n    PromiseProvider.set(lib);\n  }\n});\n\n/**\n * Storage layer for mongoose promises\n *\n * @method PromiseProvider\n * @api public\n */\n\nMongoose.prototype.PromiseProvider = PromiseProvider;\n\n/**\n * The Mongoose [Model](#model_Model) constructor.\n *\n * @method Model\n * @api public\n */\n\nMongoose.prototype.Model = Model;\n\n/**\n * The Mongoose [Document](#document-js) constructor.\n *\n * @method Document\n * @api public\n */\n\nMongoose.prototype.Document = Document;\n\n/**\n * The Mongoose DocumentProvider constructor.\n *\n * @method DocumentProvider\n * @api public\n */\n\nMongoose.prototype.DocumentProvider = require('./document_provider');\n\n/**\n * The [MongooseError](#error_MongooseError) constructor.\n *\n * @method Error\n * @api public\n */\n\nMongoose.prototype.Error = require('./error');\n\n/**\n * The [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) driver Mongoose uses.\n *\n * @property mongo\n * @api public\n */\n\nMongoose.prototype.mongo = require('mongodb');\n\n/**\n * The [mquery](https://github.com/aheckmann/mquery) query builder Mongoose uses.\n *\n * @property mquery\n * @api public\n */\n\nMongoose.prototype.mquery = require('mquery');\n\n/*!\n * The exports object is an instance of Mongoose.\n *\n * @api public\n */\n\nvar mongoose = module.exports = exports = new Mongoose;\n"}