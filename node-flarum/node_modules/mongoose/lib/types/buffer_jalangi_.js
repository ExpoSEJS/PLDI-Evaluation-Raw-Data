J$.iids = {"8":[7,9,7,46],"9":[1,20,1,27],"10":[7,9,7,21],"16":[7,9,7,76],"17":[1,28,1,32],"18":[7,25,7,46],"24":[7,9,7,76],"25":[1,20,1,33],"26":[7,50,7,76],"32":[15,9,15,30],"33":[1,20,1,33],"34":[29,29,29,40],"40":[29,9,29,40],"41":[1,20,1,33],"42":[29,16,29,40],"48":[29,9,29,40],"49":[2,26,2,38],"50":[47,13,47,24],"56":[40,13,40,19],"57":[2,26,2,45],"58":[60,2,60,104],"64":[47,13,47,24],"65":[2,26,2,45],"66":[60,2,60,146],"72":[54,13,54,46],"73":[2,26,2,45],"74":[60,2,60,207],"80":[54,13,54,46],"81":[3,14,3,21],"82":[60,2,60,264],"88":[61,9,61,34],"89":[3,22,3,34],"90":[60,2,60,322],"96":[66,58,66,76],"97":[3,14,3,35],"98":[61,9,61,34],"104":[66,19,66,45],"105":[3,14,3,42],"106":[63,49,63,87],"112":[70,9,70,32],"113":[3,52,3,59],"114":[63,49,63,116],"120":[73,9,73,37],"121":[3,60,3,70],"122":[63,49,63,142],"128":[77,13,77,33],"129":[3,52,3,71],"130":[63,49,63,158],"136":[76,21,76,36],"137":[3,14,3,42],"138":[66,31,66,45],"144":[83,9,83,35],"145":[3,14,3,42],"146":[66,19,66,45],"152":[86,9,86,33],"153":[3,52,3,71],"154":[70,9,70,32],"161":[3,52,3,71],"162":[73,9,73,37],"169":[5,18,5,27],"170":[76,21,76,36],"177":[5,18,5,34],"178":[76,38,76,41],"185":[5,18,5,34],"193":[5,18,5,34],"194":[77,13,77,33],"201":[7,9,7,10],"202":[83,21,83,35],"209":[7,15,7,21],"210":[83,9,83,35],"217":[7,25,7,29],"218":[86,9,86,33],"225":[7,34,7,43],"233":[7,44,7,45],"241":[7,34,7,46],"249":[7,50,7,59],"257":[7,64,7,73],"265":[7,74,7,75],"273":[7,64,7,76],"281":[8,15,8,16],"289":[8,15,8,16],"297":[8,9,8,17],"305":[10,15,10,20],"313":[10,15,10,20],"321":[10,9,10,21],"329":[15,9,15,14],"337":[15,23,15,29],"345":[15,9,15,30],"347":[15,9,15,22],"353":[16,16,16,22],"361":[16,23,16,24],"369":[16,16,16,25],"377":[16,16,16,25],"385":[16,9,16,26],"393":[17,15,17,21],"401":[17,22,17,23],"409":[17,15,17,24],"417":[17,15,17,24],"425":[17,9,17,25],"433":[19,20,19,26],"441":[19,20,19,26],"449":[19,9,19,27],"457":[21,19,21,25],"465":[21,26,21,29],"473":[21,31,21,39],"481":[21,41,21,47],"489":[21,15,21,48],"497":[21,15,21,48],"505":[21,15,21,48],"513":[22,5,22,10],"521":[22,20,22,23],"529":[22,25,22,39],"537":[22,25,22,45],"545":[22,5,22,46],"547":[22,5,22,19],"553":[22,5,22,47],"561":[23,5,23,8],"569":[23,28,23,32],"577":[23,5,23,32],"585":[23,5,23,33],"593":[24,5,24,11],"601":[24,29,24,32],"609":[25,30,25,32],"617":[25,21,25,34],"625":[26,25,26,29],"633":[26,16,26,31],"641":[27,27,27,30],"649":[27,18,27,32],"657":[24,34,28,6],"665":[24,5,28,7],"667":[24,5,24,28],"673":[24,5,28,8],"681":[29,9,29,12],"689":[29,16,29,24],"697":[29,36,29,40],"705":[30,9,30,15],"713":[30,31,30,34],"721":[30,36,30,45],"729":[30,56,30,59],"737":[30,56,30,66],"745":[30,72,30,76],"753":[30,56,30,77],"755":[30,56,30,71],"761":[30,47,30,79],"769":[30,9,30,80],"771":[30,9,30,30],"777":[30,9,30,81],"785":[32,5,32,8],"793":[32,20,32,21],"801":[32,5,32,21],"809":[32,5,32,22],"817":[33,12,33,15],"825":[33,12,33,15],"833":[33,5,33,16],"841":[4,1,34,2],"849":[4,1,34,2],"857":[4,1,34,2],"865":[4,1,34,2],"873":[4,1,34,2],"881":[4,1,34,2],"889":[4,1,34,2],"897":[4,1,34,2],"905":[4,1,34,2],"913":[4,1,34,2],"921":[4,1,34,2],"929":[35,1,35,15],"937":[36,14,36,23],"945":[37,15,37,24],"953":[39,22,39,26],"961":[39,22,39,34],"969":[39,22,39,34],"977":[39,22,39,34],"985":[40,13,40,19],"993":[41,13,41,19],"1001":[41,33,41,37],"1009":[41,33,41,43],"1017":[41,13,41,44],"1019":[41,13,41,32],"1025":[41,13,41,45],"1033":[43,16,43,20],"1041":[43,16,43,20],"1049":[43,9,43,21],"1057":[38,20,44,6],"1065":[38,20,44,6],"1073":[38,20,44,6],"1081":[38,20,44,6],"1089":[46,23,46,29],"1097":[46,23,46,39],"1105":[46,23,46,45],"1113":[46,52,46,56],"1121":[46,58,46,67],"1129":[46,23,46,68],"1131":[46,23,46,51],"1137":[46,23,46,68],"1145":[46,23,46,68],"1153":[47,13,47,20],"1161":[47,23,47,24],"1169":[48,13,48,17],"1177":[48,13,48,33],"1179":[48,13,48,31],"1185":[48,13,48,34],"1193":[50,16,50,23],"1201":[50,16,50,23],"1209":[50,9,50,24],"1217":[45,12,51,6],"1225":[45,12,51,6],"1233":[45,12,51,6],"1241":[45,12,51,6],"1249":[53,19,53,25],"1257":[53,19,53,35],"1265":[53,19,53,40],"1273":[53,47,53,51],"1281":[53,53,53,62],"1289":[53,19,53,63],"1291":[53,19,53,46],"1297":[53,19,53,63],"1305":[53,19,53,63],"1313":[54,13,54,19],"1321":[54,23,54,29],"1329":[54,23,54,46],"1337":[55,13,55,19],"1345":[55,13,55,35],"1347":[55,13,55,33],"1353":[55,13,55,36],"1361":[57,16,57,19],"1369":[57,16,57,19],"1377":[57,9,57,20],"1385":[52,11,58,6],"1393":[52,11,58,6],"1401":[52,11,58,6],"1409":[52,11,58,6],"1417":[52,11,58,6],"1425":[35,24,59,2],"1433":[35,1,59,2],"1441":[35,1,59,3],"1449":[60,2,60,71],"1457":[60,74,60,104],"1465":[60,107,60,146],"1473":[60,149,60,207],"1481":[60,210,60,264],"1489":[60,267,60,322],"1497":[60,330,60,333],"1505":[60,1,60,334],"1507":[60,1,60,329],"1513":[61,10,61,16],"1521":[61,10,61,26],"1529":[61,27,61,33],"1537":[61,10,61,34],"1545":[62,9,62,16],"1553":[62,9,62,16],"1561":[63,5,63,19],"1569":[63,5,63,25],"1577":[63,26,63,32],"1585":[63,40,63,48],"1593":[63,49,63,78],"1601":[63,81,63,87],"1609":[63,90,63,116],"1617":[63,119,63,142],"1625":[63,145,63,158],"1633":[63,36,63,159],"1641":[63,5,63,159],"1649":[63,5,63,160],"1657":[60,343,64,2],"1665":[60,343,64,2],"1673":[60,343,64,2],"1681":[60,343,64,2],"1689":[60,1,64,3],"1691":[60,1,60,342],"1697":[60,1,64,4],"1705":[65,1,65,15],"1713":[65,1,65,21],"1721":[66,19,66,27],"1729":[66,38,66,45],"1737":[66,48,66,55],"1745":[66,58,66,62],"1753":[66,58,66,71],"1761":[66,75,66,76],"1769":[66,19,66,76],"1777":[66,19,66,76],"1785":[67,16,67,22],"1793":[67,23,67,27],"1801":[67,29,67,36],"1809":[67,12,67,37],"1817":[67,12,67,37],"1825":[67,5,67,38],"1833":[65,33,68,2],"1841":[65,33,68,2],"1849":[65,33,68,2],"1857":[65,33,68,2],"1865":[65,33,68,2],"1873":[65,1,68,2],"1881":[65,1,68,3],"1889":[69,1,69,15],"1897":[69,1,69,21],"1905":[70,10,70,16],"1913":[70,26,70,31],"1921":[70,10,70,32],"1923":[70,10,70,25],"1929":[71,16,71,21],"1937":[71,16,71,21],"1945":[71,9,71,22],"1953":[73,9,73,13],"1961":[73,9,73,20],"1969":[73,25,73,30],"1977":[73,25,73,37],"1985":[74,16,74,21],"1993":[74,16,74,21],"2001":[74,9,74,22],"2009":[76,18,76,19],"2017":[76,18,76,19],"2025":[76,18,76,19],"2033":[76,21,76,22],"2041":[76,25,76,29],"2049":[76,25,76,36],"2065":[76,40,76,41],"2073":[76,38,76,41],"2081":[77,13,77,17],"2089":[77,18,77,19],"2097":[77,13,77,20],"2105":[77,25,77,30],"2113":[77,31,77,32],"2121":[77,25,77,33],"2129":[78,20,78,25],"2137":[78,20,78,25],"2145":[78,13,78,26],"2153":[80,12,80,16],"2161":[80,12,80,16],"2169":[80,5,80,17],"2177":[69,31,81,2],"2185":[69,31,81,2],"2193":[69,31,81,2],"2201":[69,31,81,2],"2209":[69,31,81,2],"2217":[69,1,81,2],"2225":[69,1,81,3],"2233":[82,1,82,15],"2241":[82,1,82,21],"2249":[83,9,83,17],"2257":[83,28,83,35],"2265":[84,19,84,28],"2273":[84,29,84,65],"2281":[84,15,84,66],"2289":[84,15,84,66],"2297":[84,9,84,67],"2305":[86,9,86,13],"2313":[86,9,86,22],"2321":[86,26,86,33],"2329":[87,9,87,13],"2337":[87,9,87,29],"2339":[87,9,87,27],"2345":[87,9,87,30],"2353":[89,5,89,9],"2361":[89,21,89,28],"2369":[89,5,89,28],"2377":[89,5,89,29],"2385":[82,32,90,2],"2393":[82,32,90,2],"2401":[82,32,90,2],"2409":[82,32,90,2],"2417":[82,1,90,2],"2425":[82,1,90,3],"2433":[91,1,91,15],"2441":[91,25,91,31],"2449":[91,1,91,31],"2457":[91,1,91,32],"2465":[92,1,92,7],"2473":[92,18,92,32],"2481":[92,1,92,32],"2489":[92,1,92,33],"2497":[1,1,92,33],"2505":[1,1,92,33],"2513":[1,1,92,33],"2521":[1,1,92,33],"2529":[1,1,92,33],"2537":[4,1,34,2],"2545":[1,1,92,33],"2553":[7,5,11,6],"2561":[15,5,20,6],"2569":[29,5,31,6],"2577":[4,1,34,2],"2585":[4,1,34,2],"2593":[40,9,42,10],"2601":[38,20,44,6],"2609":[38,20,44,6],"2617":[47,9,49,10],"2625":[45,12,51,6],"2633":[45,12,51,6],"2641":[54,9,56,10],"2649":[52,11,58,6],"2657":[52,11,58,6],"2665":[61,5,62,16],"2673":[60,343,64,2],"2681":[60,343,64,2],"2689":[66,19,66,76],"2697":[65,33,68,2],"2705":[65,33,68,2],"2713":[70,5,72,6],"2721":[73,5,75,6],"2729":[77,9,78,26],"2737":[76,5,79,6],"2745":[76,5,79,6],"2753":[69,31,81,2],"2761":[69,31,81,2],"2769":[83,5,85,6],"2777":[86,5,88,6],"2785":[82,32,90,2],"2793":[82,32,90,2],"2801":[1,1,92,33],"2809":[1,1,92,33],"nBranches":38,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/types/buffer.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/types/buffer_jalangi_.js","code":"/*!\n * Module dependencies.\n */\n\nvar Binary = require('../drivers').Binary,\n    utils = require('../utils');\n\n/**\n * Mongoose Buffer constructor.\n *\n * Values always have to be passed to the constructor to initialize.\n *\n * @param {Buffer} value\n * @param {String} encode\n * @param {Number} offset\n * @api private\n * @inherits Buffer\n * @see http://bit.ly/f6CnZU\n */\n\nfunction MongooseBuffer(value, encode, offset) {\n  var length = arguments.length;\n  var val;\n\n  if (0 === length || null === arguments[0] || undefined === arguments[0]) {\n    val = 0;\n  } else {\n    val = value;\n  }\n\n  var encoding;\n  var path;\n  var doc;\n\n  if (Array.isArray(encode)) {\n    // internal casting\n    path = encode[0];\n    doc = encode[1];\n  } else {\n    encoding = encode;\n  }\n\n  var buf = new Buffer(val, encoding, offset);\n  utils.decorate( buf, MongooseBuffer.mixin );\n  buf.isMongooseBuffer = true;\n\n  // make sure these internal props don't show up in Object.keys()\n  Object.defineProperties(buf, {\n    validators: { value: [] },\n    _path: { value: path },\n    _parent: { value: doc }\n  });\n\n  if (doc && \"string\" === typeof path) {\n    Object.defineProperty(buf, '_schema', {\n      value: doc.schema.path(path)\n    });\n  }\n\n  buf._subtype = 0;\n  return buf;\n}\n\n/*!\n * Inherit from Buffer.\n */\n\n//MongooseBuffer.prototype = new Buffer(0);\n\nMongooseBuffer.mixin = {\n\n  /**\n   * Parent owner document\n   *\n   * @api private\n   * @property _parent\n   * @receiver MongooseBuffer\n   */\n\n  _parent: undefined,\n\n  /**\n   * Default subtype for the Binary representing this Buffer\n   *\n   * @api private\n   * @property _subtype\n   * @receiver MongooseBuffer\n   */\n\n  _subtype: undefined,\n\n  /**\n   * Marks this buffer as modified.\n   *\n   * @api private\n   * @method _markModified\n   * @receiver MongooseBuffer\n   */\n\n  _markModified: function() {\n    var parent = this._parent;\n\n    if (parent) {\n      parent.markModified(this._path);\n    }\n    return this;\n  },\n\n  /**\n   * Writes the buffer.\n   *\n   * @api public\n   * @method write\n   * @receiver MongooseBuffer\n   */\n\n  write: function() {\n    var written = Buffer.prototype.write.apply(this, arguments);\n\n    if (written > 0) {\n      this._markModified();\n    }\n\n    return written;\n  },\n\n  /**\n   * Copies the buffer.\n   *\n   * ####Note:\n   *\n   * `Buffer#copy` does not mark `target` as modified so you must copy from a `MongooseBuffer` for it to work as expected. This is a work around since `copy` modifies the target, not this.\n   *\n   * @return {MongooseBuffer}\n   * @param {Buffer} target\n   * @method copy\n   * @receiver MongooseBuffer\n   */\n\n  copy: function(target) {\n    var ret = Buffer.prototype.copy.apply(this, arguments);\n\n    if (target && target.isMongooseBuffer) {\n      target._markModified();\n    }\n\n    return ret;\n  }\n};\n\n/*!\n * Compile other Buffer methods marking this buffer as modified.\n */\n\n(\n// node < 0.5\n'writeUInt8 writeUInt16 writeUInt32 writeInt8 writeInt16 writeInt32 ' +\n'writeFloat writeDouble fill ' +\n'utf8Write binaryWrite asciiWrite set ' +\n\n// node >= 0.5\n'writeUInt16LE writeUInt16BE writeUInt32LE writeUInt32BE ' +\n'writeInt16LE writeInt16BE writeInt32LE writeInt32BE ' +\n'writeFloatLE writeFloatBE writeDoubleLE writeDoubleBE'\n).split(' ').forEach(function(method) {\n  if (!Buffer.prototype[method]) return;\n  MongooseBuffer.mixin[method] = new Function(\n    'var ret = Buffer.prototype.' + method + '.apply(this, arguments);' +\n    'this._markModified();' +\n    'return ret;'\n  );\n});\n\n/**\n * Converts this buffer to its Binary type representation.\n *\n * ####SubTypes:\n *\n *   var bson = require('bson')\n *   bson.BSON_BINARY_SUBTYPE_DEFAULT\n *   bson.BSON_BINARY_SUBTYPE_FUNCTION\n *   bson.BSON_BINARY_SUBTYPE_BYTE_ARRAY\n *   bson.BSON_BINARY_SUBTYPE_UUID\n *   bson.BSON_BINARY_SUBTYPE_MD5\n *   bson.BSON_BINARY_SUBTYPE_USER_DEFINED\n *\n *   doc.buffer.toObject(bson.BSON_BINARY_SUBTYPE_USER_DEFINED);\n *\n * @see http://bsonspec.org/#/specification\n * @param {Hex} [subtype]\n * @return {Binary}\n * @api public\n * @method toObject\n * @receiver MongooseBuffer\n */\n\nMongooseBuffer.mixin.toObject = function(options) {\n  var subtype = 'number' == typeof options\n    ? options\n    : (this._subtype || 0);\n  return new Binary(this, subtype);\n};\n\n/**\n * Determines if this buffer is equals to `other` buffer\n *\n * @param {Buffer} other\n * @return {Boolean}\n * @method equals\n * @receiver MongooseBuffer\n */\n\nMongooseBuffer.mixin.equals = function(other) {\n  if (!Buffer.isBuffer(other)) {\n    return false;\n  }\n\n  if (this.length !== other.length) {\n    return false;\n  }\n\n  for (var i = 0; i < this.length; ++i) {\n    if (this[i] !== other[i]) return false;\n  }\n\n  return true;\n};\n\n/**\n * Sets the subtype option and marks the buffer modified.\n *\n * ####SubTypes:\n *\n *   var bson = require('bson')\n *   bson.BSON_BINARY_SUBTYPE_DEFAULT\n *   bson.BSON_BINARY_SUBTYPE_FUNCTION\n *   bson.BSON_BINARY_SUBTYPE_BYTE_ARRAY\n *   bson.BSON_BINARY_SUBTYPE_UUID\n *   bson.BSON_BINARY_SUBTYPE_MD5\n *   bson.BSON_BINARY_SUBTYPE_USER_DEFINED\n *\n *   doc.buffer.subtype(bson.BSON_BINARY_SUBTYPE_UUID);\n *\n * @see http://bsonspec.org/#/specification\n * @param {Hex} subtype\n * @api public\n * @method subtype\n * @receiver MongooseBuffer\n */\n\nMongooseBuffer.mixin.subtype = function(subtype) {\n  if ('number' != typeof subtype) {\n    throw new TypeError('Invalid subtype. Expected a number');\n  }\n\n  if (this._subtype != subtype) {\n    this._markModified();\n  }\n\n  this._subtype = subtype;\n};\n\n/*!\n * Module exports.\n */\n\nMongooseBuffer.Binary = Binary;\n\nmodule.exports = MongooseBuffer;\n"};
jalangiLabel3818:
    while (true) {
        try {
            J$.Se(2497, '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/types/buffer_jalangi_.js', '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/types/buffer.js');
            function MongooseBuffer(value, encode, offset) {
                jalangiLabel3810:
                    while (true) {
                        try {
                            J$.Fe(841, arguments.callee, this, arguments);
                            arguments = J$.N(849, 'arguments', arguments, 4);
                            value = J$.N(857, 'value', value, 4);
                            encode = J$.N(865, 'encode', encode, 4);
                            offset = J$.N(873, 'offset', offset, 4);
                            J$.N(881, 'length', length, 0);
                            J$.N(889, 'val', val, 0);
                            J$.N(897, 'encoding', encoding, 0);
                            J$.N(905, 'path', path, 0);
                            J$.N(913, 'doc', doc, 0);
                            J$.N(921, 'buf', buf, 0);
                            var length = J$.X1(193, J$.W(185, 'length', J$.G(177, J$.R(169, 'arguments', arguments, 2), 'length', 0), length, 1));
                            var val;
                            if (J$.X1(2553, J$.C(24, J$.C(16, J$.C(8, J$.B(10, '===', J$.T(201, 0, 22, false), J$.R(209, 'length', length, 0), 0)) ? J$._() : J$.B(18, '===', J$.T(217, null, 25, false), J$.G(241, J$.R(225, 'arguments', arguments, 2), J$.T(233, 0, 22, false), 4), 0)) ? J$._() : J$.B(26, '===', J$.T(249, undefined, 24, false), J$.G(273, J$.R(257, 'arguments', arguments, 2), J$.T(265, 0, 22, false), 4), 0)))) {
                                J$.X1(297, val = J$.W(289, 'val', J$.T(281, 0, 22, false), val, 0));
                            } else {
                                J$.X1(321, val = J$.W(313, 'val', J$.R(305, 'value', value, 0), val, 0));
                            }
                            var encoding;
                            var path;
                            var doc;
                            if (J$.X1(2561, J$.C(32, J$.M(345, J$.R(329, 'Array', Array, 2), 'isArray', 0)(J$.R(337, 'encode', encode, 0))))) {
                                J$.X1(385, path = J$.W(377, 'path', J$.G(369, J$.R(353, 'encode', encode, 0), J$.T(361, 0, 22, false), 4), path, 0));
                                J$.X1(425, doc = J$.W(417, 'doc', J$.G(409, J$.R(393, 'encode', encode, 0), J$.T(401, 1, 22, false), 4), doc, 0));
                            } else {
                                J$.X1(449, encoding = J$.W(441, 'encoding', J$.R(433, 'encode', encode, 0), encoding, 0));
                            }
                            var buf = J$.X1(505, J$.W(497, 'buf', J$.F(489, J$.R(457, 'Buffer', Buffer, 2), 1)(J$.R(465, 'val', val, 0), J$.R(473, 'encoding', encoding, 0), J$.R(481, 'offset', offset, 0)), buf, 1));
                            J$.X1(553, J$.M(545, J$.R(513, 'utils', utils, 1), 'decorate', 0)(J$.R(521, 'buf', buf, 0), J$.G(537, J$.R(529, 'MongooseBuffer', MongooseBuffer, 1), 'mixin', 0)));
                            J$.X1(585, J$.P(577, J$.R(561, 'buf', buf, 0), 'isMongooseBuffer', J$.T(569, true, 23, false), 0));
                            J$.X1(673, J$.M(665, J$.R(593, 'Object', Object, 2), 'defineProperties', 0)(J$.R(601, 'buf', buf, 0), J$.T(657, {
                                validators: J$.T(617, {
                                    value: J$.T(609, [], 10, false)
                                }, 11, false),
                                _path: J$.T(633, {
                                    value: J$.R(625, 'path', path, 0)
                                }, 11, false),
                                _parent: J$.T(649, {
                                    value: J$.R(641, 'doc', doc, 0)
                                }, 11, false)
                            }, 11, false)));
                            if (J$.X1(2569, J$.C(48, J$.C(40, J$.R(681, 'doc', doc, 0)) ? J$.B(42, '===', J$.T(689, 'string', 21, false), J$.U(34, 'typeof', J$.R(697, 'path', path, 0)), 0) : J$._()))) {
                                J$.X1(777, J$.M(769, J$.R(705, 'Object', Object, 2), 'defineProperty', 0)(J$.R(713, 'buf', buf, 0), J$.T(721, '_schema', 21, false), J$.T(761, {
                                    value: J$.M(753, J$.G(737, J$.R(729, 'doc', doc, 0), 'schema', 0), 'path', 0)(J$.R(745, 'path', path, 0))
                                }, 11, false)));
                            }
                            J$.X1(809, J$.P(801, J$.R(785, 'buf', buf, 0), '_subtype', J$.T(793, 0, 22, false), 0));
                            return J$.X1(833, J$.Rt(825, J$.R(817, 'buf', buf, 0)));
                        } catch (J$e) {
                            J$.Ex(2577, J$e);
                        } finally {
                            if (J$.Fr(2585))
                                continue jalangiLabel3810;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2505, '__secret__S$', __secret__S$, 0);
            J$.N(2513, '__secret__traits__', __secret__traits__, 0);
            J$.N(2521, 'Binary', Binary, 0);
            J$.N(2529, 'utils', utils, 0);
            MongooseBuffer = J$.N(2545, 'MongooseBuffer', J$.T(2537, MongooseBuffer, 12, false, 841), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var Binary = J$.X1(145, J$.W(137, 'Binary', J$.G(105, J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, '../drivers', 21, false)), 'Binary', 0), Binary, 3)), utils = J$.X1(161, J$.W(153, 'utils', J$.F(129, J$.R(113, 'require', require, 2), 0)(J$.T(121, '../utils', 21, false)), utils, 3));
            J$.X1(1441, J$.P(1433, J$.R(929, 'MongooseBuffer', MongooseBuffer, 1), 'mixin', J$.T(1425, {
                _parent: J$.T(937, undefined, 24, false),
                _subtype: J$.T(945, undefined, 24, false),
                _markModified: J$.T(1081, function () {
                    jalangiLabel3811:
                        while (true) {
                            try {
                                J$.Fe(1057, arguments.callee, this, arguments);
                                arguments = J$.N(1065, 'arguments', arguments, 4);
                                J$.N(1073, 'parent', parent, 0);
                                var parent = J$.X1(977, J$.W(969, 'parent', J$.G(961, J$.R(953, 'this', this, 0), '_parent', 0), parent, 1));
                                if (J$.X1(2593, J$.C(56, J$.R(985, 'parent', parent, 0)))) {
                                    J$.X1(1025, J$.M(1017, J$.R(993, 'parent', parent, 0), 'markModified', 0)(J$.G(1009, J$.R(1001, 'this', this, 0), '_path', 0)));
                                }
                                return J$.X1(1049, J$.Rt(1041, J$.R(1033, 'this', this, 0)));
                            } catch (J$e) {
                                J$.Ex(2601, J$e);
                            } finally {
                                if (J$.Fr(2609))
                                    continue jalangiLabel3811;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 1057),
                write: J$.T(1241, function () {
                    jalangiLabel3812:
                        while (true) {
                            try {
                                J$.Fe(1217, arguments.callee, this, arguments);
                                arguments = J$.N(1225, 'arguments', arguments, 4);
                                J$.N(1233, 'written', written, 0);
                                var written = J$.X1(1145, J$.W(1137, 'written', J$.M(1129, J$.G(1105, J$.G(1097, J$.R(1089, 'Buffer', Buffer, 2), 'prototype', 0), 'write', 0), 'apply', 0)(J$.R(1113, 'this', this, 0), J$.R(1121, 'arguments', arguments, 2)), written, 1));
                                if (J$.X1(2617, J$.C(64, J$.B(50, '>', J$.R(1153, 'written', written, 0), J$.T(1161, 0, 22, false), 0)))) {
                                    J$.X1(1185, J$.M(1177, J$.R(1169, 'this', this, 0), '_markModified', 0)());
                                }
                                return J$.X1(1209, J$.Rt(1201, J$.R(1193, 'written', written, 0)));
                            } catch (J$e) {
                                J$.Ex(2625, J$e);
                            } finally {
                                if (J$.Fr(2633))
                                    continue jalangiLabel3812;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 1217),
                copy: J$.T(1417, function (target) {
                    jalangiLabel3813:
                        while (true) {
                            try {
                                J$.Fe(1385, arguments.callee, this, arguments);
                                arguments = J$.N(1393, 'arguments', arguments, 4);
                                target = J$.N(1401, 'target', target, 4);
                                J$.N(1409, 'ret', ret, 0);
                                var ret = J$.X1(1305, J$.W(1297, 'ret', J$.M(1289, J$.G(1265, J$.G(1257, J$.R(1249, 'Buffer', Buffer, 2), 'prototype', 0), 'copy', 0), 'apply', 0)(J$.R(1273, 'this', this, 0), J$.R(1281, 'arguments', arguments, 2)), ret, 1));
                                if (J$.X1(2641, J$.C(80, J$.C(72, J$.R(1313, 'target', target, 0)) ? J$.G(1329, J$.R(1321, 'target', target, 0), 'isMongooseBuffer', 0) : J$._()))) {
                                    J$.X1(1353, J$.M(1345, J$.R(1337, 'target', target, 0), '_markModified', 0)());
                                }
                                return J$.X1(1377, J$.Rt(1369, J$.R(1361, 'ret', ret, 0)));
                            } catch (J$e) {
                                J$.Ex(2649, J$e);
                            } finally {
                                if (J$.Fr(2657))
                                    continue jalangiLabel3813;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 1385)
            }, 11, false), 0));
            J$.X1(1697, J$.M(1689, J$.M(1505, J$.B(90, '+', J$.B(82, '+', J$.B(74, '+', J$.B(66, '+', J$.B(58, '+', J$.T(1449, 'writeUInt8 writeUInt16 writeUInt32 writeInt8 writeInt16 writeInt32 ', 21, false), J$.T(1457, 'writeFloat writeDouble fill ', 21, false), 0), J$.T(1465, 'utf8Write binaryWrite asciiWrite set ', 21, false), 0), J$.T(1473, 'writeUInt16LE writeUInt16BE writeUInt32LE writeUInt32BE ', 21, false), 0), J$.T(1481, 'writeInt16LE writeInt16BE writeInt32LE writeInt32BE ', 21, false), 0), J$.T(1489, 'writeFloatLE writeFloatBE writeDoubleLE writeDoubleBE', 21, false), 0), 'split', 0)(J$.T(1497, ' ', 21, false)), 'forEach', 0)(J$.T(1681, function (method) {
                jalangiLabel3814:
                    while (true) {
                        try {
                            J$.Fe(1657, arguments.callee, this, arguments);
                            arguments = J$.N(1665, 'arguments', arguments, 4);
                            method = J$.N(1673, 'method', method, 4);
                            if (J$.X1(2665, J$.C(88, J$.U(98, '!', J$.G(1537, J$.G(1521, J$.R(1513, 'Buffer', Buffer, 2), 'prototype', 0), J$.R(1529, 'method', method, 0), 4)))))
                                return J$.X1(1553, J$.Rt(1545, undefined));
                            J$.X1(1649, J$.P(1641, J$.G(1569, J$.R(1561, 'MongooseBuffer', MongooseBuffer, 1), 'mixin', 0), J$.R(1577, 'method', method, 0), J$.F(1633, J$.R(1585, 'Function', Function, 2), 1)(J$.B(130, '+', J$.B(122, '+', J$.B(114, '+', J$.B(106, '+', J$.T(1593, 'var ret = Buffer.prototype.', 21, false), J$.R(1601, 'method', method, 0), 0), J$.T(1609, '.apply(this, arguments);', 21, false), 0), J$.T(1617, 'this._markModified();', 21, false), 0), J$.T(1625, 'return ret;', 21, false), 0)), 2));
                        } catch (J$e) {
                            J$.Ex(2673, J$e);
                        } finally {
                            if (J$.Fr(2681))
                                continue jalangiLabel3814;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1657)));
            J$.X1(1881, J$.P(1873, J$.G(1713, J$.R(1705, 'MongooseBuffer', MongooseBuffer, 1), 'mixin', 0), 'toObject', J$.T(1865, function (options) {
                jalangiLabel3815:
                    while (true) {
                        try {
                            J$.Fe(1833, arguments.callee, this, arguments);
                            arguments = J$.N(1841, 'arguments', arguments, 4);
                            options = J$.N(1849, 'options', options, 4);
                            J$.N(1857, 'subtype', subtype, 0);
                            var subtype = J$.X1(1777, J$.W(1769, 'subtype', J$.X1(2689, J$.C(104, J$.B(146, '==', J$.T(1721, 'number', 21, false), J$.U(138, 'typeof', J$.R(1729, 'options', options, 0)), 0))) ? J$.R(1737, 'options', options, 0) : J$.C(96, J$.G(1753, J$.R(1745, 'this', this, 0), '_subtype', 0)) ? J$._() : J$.T(1761, 0, 22, false), subtype, 1));
                            return J$.X1(1825, J$.Rt(1817, J$.F(1809, J$.R(1785, 'Binary', Binary, 1), 1)(J$.R(1793, 'this', this, 0), J$.R(1801, 'subtype', subtype, 0))));
                        } catch (J$e) {
                            J$.Ex(2697, J$e);
                        } finally {
                            if (J$.Fr(2705))
                                continue jalangiLabel3815;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1833), 0));
            J$.X1(2225, J$.P(2217, J$.G(1897, J$.R(1889, 'MongooseBuffer', MongooseBuffer, 1), 'mixin', 0), 'equals', J$.T(2209, function (other) {
                jalangiLabel3816:
                    while (true) {
                        try {
                            J$.Fe(2177, arguments.callee, this, arguments);
                            arguments = J$.N(2185, 'arguments', arguments, 4);
                            other = J$.N(2193, 'other', other, 4);
                            J$.N(2201, 'i', i, 0);
                            if (J$.X1(2713, J$.C(112, J$.U(154, '!', J$.M(1921, J$.R(1905, 'Buffer', Buffer, 2), 'isBuffer', 0)(J$.R(1913, 'other', other, 0)))))) {
                                return J$.X1(1945, J$.Rt(1937, J$.T(1929, false, 23, false)));
                            }
                            if (J$.X1(2721, J$.C(120, J$.B(162, '!==', J$.G(1961, J$.R(1953, 'this', this, 0), 'length', 0), J$.G(1977, J$.R(1969, 'other', other, 0), 'length', 0), 0)))) {
                                return J$.X1(2001, J$.Rt(1993, J$.T(1985, false, 23, false)));
                            }
                            for (var i = J$.X1(2025, J$.W(2017, 'i', J$.T(2009, 0, 22, false), i, 1)); J$.X1(2737, J$.C(136, J$.B(170, '<', J$.R(2033, 'i', i, 0), J$.G(2049, J$.R(2041, 'this', this, 0), 'length', 0), 0))); J$.X1(2745, i = J$.W(2073, 'i', J$.B(186, '+', J$.U(178, '+', J$.R(2065, 'i', i, 0)), J$.T(2057, 1, 22, false), 0), i, 0))) {
                                if (J$.X1(2729, J$.C(128, J$.B(194, '!==', J$.G(2097, J$.R(2081, 'this', this, 0), J$.R(2089, 'i', i, 0), 4), J$.G(2121, J$.R(2105, 'other', other, 0), J$.R(2113, 'i', i, 0), 4), 0))))
                                    return J$.X1(2145, J$.Rt(2137, J$.T(2129, false, 23, false)));
                            }
                            return J$.X1(2169, J$.Rt(2161, J$.T(2153, true, 23, false)));
                        } catch (J$e) {
                            J$.Ex(2753, J$e);
                        } finally {
                            if (J$.Fr(2761))
                                continue jalangiLabel3816;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2177), 0));
            J$.X1(2425, J$.P(2417, J$.G(2241, J$.R(2233, 'MongooseBuffer', MongooseBuffer, 1), 'mixin', 0), 'subtype', J$.T(2409, function (subtype) {
                jalangiLabel3817:
                    while (true) {
                        try {
                            J$.Fe(2385, arguments.callee, this, arguments);
                            arguments = J$.N(2393, 'arguments', arguments, 4);
                            subtype = J$.N(2401, 'subtype', subtype, 4);
                            if (J$.X1(2769, J$.C(144, J$.B(210, '!=', J$.T(2249, 'number', 21, false), J$.U(202, 'typeof', J$.R(2257, 'subtype', subtype, 0)), 0)))) {
                                throw J$.X1(2297, J$.Th(2289, J$.F(2281, J$.R(2265, 'TypeError', TypeError, 2), 1)(J$.T(2273, 'Invalid subtype. Expected a number', 21, false))));
                            }
                            if (J$.X1(2777, J$.C(152, J$.B(218, '!=', J$.G(2313, J$.R(2305, 'this', this, 0), '_subtype', 0), J$.R(2321, 'subtype', subtype, 0), 0)))) {
                                J$.X1(2345, J$.M(2337, J$.R(2329, 'this', this, 0), '_markModified', 0)());
                            }
                            J$.X1(2377, J$.P(2369, J$.R(2353, 'this', this, 0), '_subtype', J$.R(2361, 'subtype', subtype, 0), 0));
                        } catch (J$e) {
                            J$.Ex(2785, J$e);
                        } finally {
                            if (J$.Fr(2793))
                                continue jalangiLabel3817;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2385), 0));
            J$.X1(2457, J$.P(2449, J$.R(2433, 'MongooseBuffer', MongooseBuffer, 1), 'Binary', J$.R(2441, 'Binary', Binary, 1), 0));
            J$.X1(2489, J$.P(2481, J$.R(2465, 'module', module, 2), 'exports', J$.R(2473, 'MongooseBuffer', MongooseBuffer, 1), 0));
        } catch (J$e) {
            J$.Ex(2801, J$e);
        } finally {
            if (J$.Sr(2809)) {
                J$.L();
                continue jalangiLabel3818;
            } else {
                J$.L();
                break jalangiLabel3818;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
