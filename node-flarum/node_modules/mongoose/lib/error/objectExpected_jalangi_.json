{"8":[6,9,6,32],"9":[1,20,1,27],"10":[5,30,5,73],"17":[1,28,1,32],"18":[5,30,5,100],"25":[1,20,1,33],"26":[5,30,5,106],"33":[1,20,1,33],"34":[5,30,5,145],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,21,3,28],"89":[3,29,3,42],"97":[3,21,3,43],"105":[3,21,3,43],"113":[3,21,3,43],"121":[5,5,5,18],"129":[5,24,5,28],"137":[5,30,5,66],"145":[5,69,5,73],"153":[5,76,5,100],"161":[5,103,5,106],"169":[5,109,5,145],"177":[5,5,5,146],"179":[5,5,5,23],"185":[5,5,5,147],"193":[6,9,6,14],"201":[6,9,6,32],"209":[7,9,7,14],"217":[7,33,7,37],"225":[7,9,7,38],"227":[7,9,7,32],"233":[7,9,7,39],"241":[9,9,9,13],"249":[9,26,9,31],"257":[9,22,9,33],"265":[9,22,9,39],"273":[9,9,9,39],"281":[9,9,9,40],"289":[11,5,11,9],"297":[11,17,11,38],"305":[11,5,11,38],"313":[11,5,11,39],"321":[12,5,12,9],"329":[12,17,12,21],"337":[12,5,12,21],"345":[12,5,12,22],"353":[4,1,13,2],"361":[4,1,13,2],"369":[4,1,13,2],"377":[4,1,13,2],"385":[14,1,14,20],"393":[14,33,14,39],"401":[14,47,14,60],"409":[14,47,14,70],"417":[14,33,14,71],"419":[14,33,14,46],"425":[14,1,14,71],"433":[14,1,14,72],"441":[15,1,15,20],"449":[15,1,15,30],"457":[15,45,15,58],"465":[15,1,15,58],"473":[15,1,15,59],"481":[16,1,16,7],"489":[16,18,16,37],"497":[16,1,16,37],"505":[16,1,16,38],"513":[1,1,16,38],"521":[1,1,16,38],"529":[1,1,16,38],"537":[1,1,16,38],"545":[4,1,13,2],"553":[1,1,16,38],"561":[6,5,10,6],"569":[4,1,13,2],"577":[4,1,13,2],"585":[1,1,16,38],"593":[1,1,16,38],"nBranches":2,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/error/objectExpected.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/error/objectExpected_jalangi_.js","code":"/*!\n * Module dependencies.\n */\n\nvar MongooseError = require('../error.js');\n\n/**\n * Strict mode error constructor\n *\n * @param {String} type\n * @param {String} value\n * @inherits MongooseError\n * @api private\n */\n\nfunction ObjectExpectedError(path, val) {\n  MongooseError.call(this, 'Tried to set nested object field `' + path +\n    '` to primitive value `' + val + '` and strict mode is set to throw.');\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this);\n  } else {\n    this.stack = new Error().stack;\n  }\n  this.name = 'ObjectExpectedError';\n  this.path = path;\n}\n\n/*!\n * Inherits from MongooseError.\n */\n\nObjectExpectedError.prototype = Object.create(MongooseError.prototype);\nObjectExpectedError.prototype.constructor = MongooseError;\n\nmodule.exports = ObjectExpectedError;\n"}