J$.iids = {"8":[6,5,6,79],"9":[1,20,1,27],"10":[5,30,5,57],"17":[1,28,1,32],"18":[5,30,5,84],"25":[1,20,1,33],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,21,3,28],"89":[3,29,3,42],"97":[3,21,3,43],"105":[3,21,3,43],"113":[3,21,3,43],"121":[5,5,5,18],"129":[5,24,5,28],"137":[5,30,5,50],"145":[5,53,5,57],"153":[5,60,5,84],"161":[5,5,5,85],"163":[5,5,5,23],"169":[5,5,5,86],"177":[6,5,6,10],"185":[6,5,6,28],"193":[6,32,6,37],"201":[6,56,6,60],"209":[6,62,6,71],"217":[6,62,6,78],"225":[6,32,6,79],"227":[6,32,6,55],"233":[6,5,6,80],"241":[7,5,7,9],"249":[7,17,7,38],"257":[7,5,7,38],"265":[7,5,7,39],"273":[4,1,8,2],"281":[4,1,8,2],"289":[4,1,8,2],"297":[9,1,9,20],"305":[9,33,9,39],"313":[9,47,9,60],"321":[9,47,9,70],"329":[9,33,9,71],"331":[9,33,9,46],"337":[9,1,9,71],"345":[9,1,9,72],"353":[10,1,10,20],"361":[10,1,10,30],"369":[10,45,10,58],"377":[10,1,10,58],"385":[10,1,10,59],"393":[11,1,11,7],"401":[11,18,11,37],"409":[11,1,11,37],"417":[11,1,11,38],"425":[1,1,11,38],"433":[1,1,11,38],"441":[1,1,11,38],"449":[1,1,11,38],"457":[4,1,8,2],"465":[1,1,11,38],"473":[4,1,8,2],"481":[4,1,8,2],"489":[1,1,11,38],"497":[1,1,11,38],"nBranches":2,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/error/overwriteModel.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/error/overwriteModel_jalangi_.js","code":"\n/*!\n * Module dependencies.\n */\n\nvar MongooseError = require('../error.js');\n\n/*!\n * OverwriteModel Error constructor.\n *\n * @inherits MongooseError\n */\n\nfunction OverwriteModelError(name) {\n  MongooseError.call(this, 'Cannot overwrite `' + name + '` model once compiled.');\n  Error.captureStackTrace && Error.captureStackTrace(this, arguments.callee);\n  this.name = 'OverwriteModelError';\n}\n\n/*!\n * Inherits from MongooseError.\n */\n\nOverwriteModelError.prototype = Object.create(MongooseError.prototype);\nOverwriteModelError.prototype.constructor = MongooseError;\n\n/*!\n * exports\n */\n\nmodule.exports = OverwriteModelError;\n"};
jalangiLabel3465:
    while (true) {
        try {
            J$.Se(425, '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/error/overwriteModel_jalangi_.js', '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/error/overwriteModel.js');
            function OverwriteModelError(name) {
                jalangiLabel3464:
                    while (true) {
                        try {
                            J$.Fe(273, arguments.callee, this, arguments);
                            arguments = J$.N(281, 'arguments', arguments, 4);
                            name = J$.N(289, 'name', name, 4);
                            J$.X1(169, J$.M(161, J$.R(121, 'MongooseError', MongooseError, 1), 'call', 0)(J$.R(129, 'this', this, 0), J$.B(18, '+', J$.B(10, '+', J$.T(137, 'Cannot overwrite `', 21, false), J$.R(145, 'name', name, 0), 0), J$.T(153, '` model once compiled.', 21, false), 0)));
                            J$.X1(233, J$.C(8, J$.G(185, J$.R(177, 'Error', Error, 2), 'captureStackTrace', 0)) ? J$.M(225, J$.R(193, 'Error', Error, 2), 'captureStackTrace', 0)(J$.R(201, 'this', this, 0), J$.G(217, J$.R(209, 'arguments', arguments, 2), 'callee', 0)) : J$._());
                            J$.X1(265, J$.P(257, J$.R(241, 'this', this, 0), 'name', J$.T(249, 'OverwriteModelError', 21, false), 0));
                        } catch (J$e) {
                            J$.Ex(473, J$e);
                        } finally {
                            if (J$.Fr(481))
                                continue jalangiLabel3464;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(433, '__secret__S$', __secret__S$, 0);
            J$.N(441, '__secret__traits__', __secret__traits__, 0);
            J$.N(449, 'MongooseError', MongooseError, 0);
            OverwriteModelError = J$.N(465, 'OverwriteModelError', J$.T(457, OverwriteModelError, 12, false, 273), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var MongooseError = J$.X1(113, J$.W(105, 'MongooseError', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, '../error.js', 21, false)), MongooseError, 3));
            J$.X1(345, J$.P(337, J$.R(297, 'OverwriteModelError', OverwriteModelError, 1), 'prototype', J$.M(329, J$.R(305, 'Object', Object, 2), 'create', 0)(J$.G(321, J$.R(313, 'MongooseError', MongooseError, 1), 'prototype', 0)), 0));
            J$.X1(385, J$.P(377, J$.G(361, J$.R(353, 'OverwriteModelError', OverwriteModelError, 1), 'prototype', 0), 'constructor', J$.R(369, 'MongooseError', MongooseError, 1), 0));
            J$.X1(417, J$.P(409, J$.R(393, 'module', module, 2), 'exports', J$.R(401, 'OverwriteModelError', OverwriteModelError, 1), 0));
        } catch (J$e) {
            J$.Ex(489, J$e);
        } finally {
            if (J$.Sr(497)) {
                J$.L();
                continue jalangiLabel3465;
            } else {
                J$.L();
                break jalangiLabel3465;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
