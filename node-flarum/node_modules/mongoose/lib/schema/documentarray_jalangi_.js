J$.iids = {"8":[26,13,26,32],"9":[1,20,1,27],"10":[26,13,26,32],"16":[36,13,36,16],"17":[1,28,1,32],"18":[41,13,41,19],"24":[39,21,39,42],"25":[1,20,1,33],"26":[47,38,47,45],"32":[41,13,41,19],"33":[1,20,1,33],"34":[47,47,47,50],"40":[44,13,44,47],"41":[1,20,1,33],"48":[44,13,44,47],"49":[2,26,2,38],"50":[49,17,49,21],"56":[50,17,50,37],"57":[2,26,2,45],"58":[50,17,50,24],"64":[49,17,49,21],"65":[2,26,2,45],"72":[54,21,54,24],"73":[2,26,2,45],"74":[57,17,57,24],"80":[57,17,57,37],"81":[3,17,3,24],"88":[47,38,47,45],"89":[3,25,3,34],"90":[67,9,67,15],"96":[64,9,64,24],"97":[3,17,3,35],"98":[70,34,70,41],"104":[66,17,66,38],"105":[3,17,3,35],"106":[70,43,70,46],"112":[67,9,67,15],"113":[3,17,3,35],"120":[71,13,71,24],"121":[4,17,4,24],"122":[74,13,74,17],"128":[74,13,74,17],"129":[4,25,4,40],"130":[85,9,85,30],"136":[77,13,77,32],"137":[4,17,4,41],"138":[86,14,86,18],"144":[70,34,70,41],"145":[4,17,4,41],"146":[86,13,86,18],"152":[86,13,86,26],"153":[4,17,4,41],"154":[91,9,91,50],"160":[86,13,86,26],"161":[5,29,5,36],"162":[91,55,91,63],"168":[85,9,85,30],"169":[5,37,5,61],"170":[91,67,91,97],"176":[91,11,91,49],"177":[5,29,5,62],"178":[100,12,100,15],"184":[91,55,91,97],"185":[5,29,5,62],"192":[91,9,91,98],"193":[5,29,5,62],"194":[100,12,100,15],"200":[93,13,93,35],"201":[6,18,6,25],"202":[101,13,101,22],"208":[93,13,93,35],"209":[6,26,6,41],"210":[104,13,104,44],"216":[91,9,91,98],"217":[6,18,6,42],"218":[104,48,104,97],"224":[101,13,101,22],"225":[6,18,6,42],"226":[107,15,107,46],"232":[104,13,104,97],"233":[6,18,6,42],"234":[107,13,107,47],"240":[104,13,104,97],"241":[7,19,7,26],"242":[134,9,134,26],"248":[107,13,107,59],"249":[7,27,7,46],"250":[136,16,136,32],"256":[109,17,109,82],"257":[7,19,7,47],"258":[137,12,137,15],"264":[117,21,117,35],"265":[7,19,7,47],"272":[117,21,117,35],"273":[7,19,7,47],"274":[137,12,137,15],"280":[108,17,108,21],"281":[10,9,10,20],"282":[139,13,139,36],"288":[107,13,107,59],"289":[10,27,10,31],"296":[100,12,100,15],"297":[10,33,10,42],"304":[134,11,134,25],"305":[10,9,10,43],"307":[10,9,10,26],"312":[134,9,134,26],"313":[10,9,10,44],"320":[140,13,140,40],"321":[9,5,11,6],"328":[139,13,139,36],"329":[9,5,11,6],"336":[137,12,137,15],"337":[12,5,12,21],"344":[144,12,144,31],"345":[12,34,12,40],"352":[144,12,144,44],"353":[12,48,12,59],"361":[12,48,12,69],"369":[12,34,12,70],"371":[12,34,12,47],"377":[12,5,12,70],"385":[12,5,12,71],"393":[13,5,13,21],"401":[13,5,13,31],"409":[13,45,13,51],"417":[13,5,13,52],"419":[13,5,13,44],"425":[13,5,13,53],"433":[14,5,14,21],"441":[14,31,14,37],"449":[14,5,14,37],"457":[14,5,14,38],"465":[15,19,15,25],"473":[15,19,15,33],"481":[16,9,16,25],"489":[16,9,16,35],"497":[16,36,16,37],"505":[16,41,16,47],"513":[16,41,16,55],"521":[16,56,16,57],"529":[16,41,16,58],"537":[16,9,16,58],"545":[16,9,16,59],"553":[15,19,15,33],"561":[15,5,16,59],"569":[15,5,16,59],"577":[17,15,17,21],"585":[17,15,17,29],"593":[18,9,18,25],"601":[18,26,18,27],"609":[18,31,18,37],"617":[18,31,18,45],"625":[18,46,18,47],"633":[18,31,18,48],"641":[18,9,18,48],"649":[18,9,18,49],"657":[17,15,17,29],"665":[17,5,18,49],"673":[17,5,18,49],"681":[19,5,19,21],"689":[19,32,19,39],"697":[19,5,19,39],"705":[19,5,19,40],"713":[20,5,20,14],"721":[20,20,20,24],"729":[20,26,20,29],"737":[20,31,20,47],"745":[20,49,20,56],"753":[20,5,20,57],"755":[20,5,20,19],"761":[20,5,20,58],"769":[21,5,21,9],"777":[21,19,21,25],"785":[21,5,21,25],"793":[21,5,21,26],"801":[22,16,22,20],"809":[22,16,22,25],"817":[22,16,22,25],"825":[22,16,22,25],"833":[23,14,23,18],"841":[23,14,23,31],"849":[23,14,23,31],"857":[23,14,23,31],"865":[24,5,24,9],"873":[25,19,25,21],"881":[25,27,25,31],"889":[25,19,25,32],"891":[25,19,25,26],"897":[25,19,25,32],"905":[25,19,25,32],"913":[26,14,26,19],"921":[26,28,26,31],"929":[26,14,26,32],"931":[26,14,26,27],"937":[27,20,27,23],"945":[27,19,27,24],"953":[27,19,27,24],"961":[27,13,27,25],"969":[28,20,28,41],"977":[28,42,28,45],"985":[28,47,28,51],"993":[28,53,28,57],"1001":[28,16,28,58],"1009":[28,16,28,58],"1017":[28,9,28,59],"1025":[24,18,29,6],"1033":[24,18,29,6],"1041":[24,18,29,6],"1049":[24,18,29,6],"1057":[24,5,29,7],"1059":[24,5,24,17],"1065":[24,5,29,8],"1073":[8,1,30,2],"1081":[8,1,30,2],"1089":[8,1,30,2],"1097":[8,1,30,2],"1105":[8,1,30,2],"1113":[9,5,11,6],"1121":[8,1,30,2],"1129":[8,1,30,2],"1137":[8,1,30,2],"1145":[8,1,30,2],"1153":[31,1,31,14],"1161":[31,28,31,43],"1169":[31,1,31,43],"1177":[31,1,31,44],"1185":[32,1,32,14],"1193":[32,27,32,33],"1201":[32,41,32,50],"1209":[32,41,32,60],"1217":[32,27,32,61],"1219":[32,27,32,40],"1225":[32,1,32,61],"1233":[32,1,32,62],"1241":[33,1,33,14],"1249":[33,1,33,24],"1257":[33,39,33,52],"1265":[33,1,33,52],"1273":[33,1,33,53],"1281":[34,1,34,14],"1289":[34,1,34,24],"1297":[35,5,35,15],"1305":[35,5,35,25],"1313":[35,5,35,36],"1321":[35,42,35,46],"1329":[35,48,35,53],"1337":[36,13,36,16],"1345":[37,20,37,22],"1353":[37,23,37,26],"1361":[37,20,37,27],"1369":[37,20,37,27],"1377":[37,13,37,28],"1385":[39,21,39,26],"1393":[39,30,39,35],"1401":[39,30,39,42],"1409":[39,21,39,42],"1417":[39,21,39,42],"1425":[41,14,41,19],"1433":[42,20,42,22],"1441":[42,20,42,24],"1449":[42,20,42,24],"1457":[42,13,42,25],"1465":[44,13,44,20],"1473":[44,24,44,31],"1481":[44,24,44,47],"1489":[45,20,45,22],"1497":[45,20,45,24],"1505":[45,20,45,24],"1513":[45,13,45,25],"1521":[47,22,47,23],"1529":[47,31,47,36],"1537":[47,22,47,23],"1545":[47,22,47,23],"1553":[47,31,47,36],"1561":[47,31,47,36],"1569":[47,38,47,39],"1577":[47,42,47,45],"1593":[47,49,47,50],"1601":[47,47,47,50],"1609":[48,23,48,28],"1617":[48,29,48,30],"1625":[48,23,48,31],"1633":[48,23,48,31],"1641":[48,23,48,31],"1649":[49,18,49,21],"1665":[50,19,50,24],"1673":[50,17,50,24],"1681":[50,28,50,30],"1689":[50,31,50,36],"1697":[50,28,50,37],"1705":[50,17,50,38],"1713":[53,13,53,16],"1721":[53,41,53,45],"1729":[53,26,53,47],"1737":[54,21,54,24],"1745":[55,29,55,32],"1753":[55,29,55,32],"1761":[55,21,55,33],"1777":[57,19,57,24],"1785":[57,17,57,24],"1793":[57,28,57,30],"1801":[57,31,57,36],"1809":[57,28,57,37],"1817":[57,17,57,38],"1825":[53,49,58,14],"1833":[53,49,58,14],"1841":[53,49,58,14],"1849":[53,49,58,14],"1857":[53,13,58,15],"1859":[53,13,53,25],"1865":[53,13,58,16],"1873":[35,55,60,6],"1881":[35,55,60,6],"1889":[35,55,60,6],"1897":[35,55,60,6],"1905":[35,55,60,6],"1913":[35,55,60,6],"1921":[35,55,60,6],"1929":[35,55,60,6],"1937":[35,55,60,6],"1945":[60,8,60,13],"1953":[35,5,60,14],"1955":[35,5,35,41],"1961":[35,5,60,15],"1969":[34,38,61,2],"1977":[34,38,61,2],"1985":[34,38,61,2],"1993":[34,38,61,2],"2001":[34,38,61,2],"2009":[34,38,61,2],"2017":[34,38,61,2],"2025":[34,1,61,2],"2033":[34,1,61,3],"2041":[62,1,62,14],"2049":[62,1,62,24],"2057":[63,27,63,37],"2065":[63,27,63,47],"2073":[63,27,63,62],"2081":[63,68,63,72],"2089":[63,74,63,79],"2097":[63,81,63,86],"2105":[63,27,63,87],"2107":[63,27,63,67],"2113":[63,27,63,87],"2121":[63,27,63,87],"2129":[64,9,64,24],"2137":[65,16,65,31],"2145":[65,16,65,31],"2153":[65,9,65,32],"2161":[66,17,66,22],"2169":[66,26,66,31],"2177":[66,26,66,38],"2185":[66,54,66,58],"2193":[66,17,66,38],"2201":[66,17,66,38],"2209":[66,54,66,58],"2217":[66,54,66,58],"2225":[67,10,67,15],"2233":[68,9,68,16],"2241":[68,9,68,16],"2249":[70,18,70,19],"2257":[70,27,70,32],"2265":[70,18,70,19],"2273":[70,18,70,19],"2281":[70,27,70,32],"2289":[70,27,70,32],"2297":[70,34,70,35],"2305":[70,38,70,41],"2321":[70,45,70,46],"2329":[70,43,70,46],"2337":[71,13,71,24],"2345":[73,19,73,24],"2353":[73,25,73,26],"2361":[73,19,73,27],"2369":[73,19,73,27],"2377":[73,19,73,27],"2385":[74,14,74,17],"2393":[76,35,76,38],"2401":[76,35,76,53],"2403":[76,35,76,51],"2409":[76,35,76,53],"2417":[76,35,76,53],"2425":[77,13,77,32],"2433":[78,27,78,46],"2441":[78,27,78,46],"2449":[78,13,78,47],"2457":[81,12,81,23],"2465":[81,12,81,23],"2473":[81,5,81,24],"2481":[62,42,82,2],"2489":[62,42,82,2],"2497":[62,42,82,2],"2505":[62,42,82,2],"2513":[62,42,82,2],"2521":[62,42,82,2],"2529":[62,42,82,2],"2537":[62,42,82,2],"2545":[62,42,82,2],"2553":[62,42,82,2],"2561":[62,42,82,2],"2569":[62,42,82,2],"2577":[62,1,82,2],"2585":[62,1,82,3],"2593":[83,1,83,14],"2601":[83,1,83,24],"2609":[85,10,85,15],"2617":[85,24,85,29],"2625":[85,10,85,30],"2627":[85,10,85,23],"2633":[86,15,86,18],"2641":[86,22,86,26],"2649":[87,13,87,16],"2657":[87,30,87,34],"2665":[87,30,87,39],"2673":[87,13,87,40],"2675":[87,13,87,29],"2681":[87,13,87,41],"2689":[89,16,89,20],"2697":[89,27,89,32],"2705":[89,26,89,33],"2713":[89,35,89,38],"2721":[89,40,89,44],"2729":[89,46,89,50],"2737":[89,16,89,51],"2739":[89,16,89,25],"2745":[89,16,89,51],"2753":[89,9,89,52],"2761":[91,11,91,16],"2769":[91,20,91,25],"2777":[91,20,91,49],"2785":[91,56,91,63],"2793":[91,68,91,75],"2801":[91,68,91,97],"2809":[92,21,92,42],"2817":[92,43,92,48],"2825":[92,50,92,54],"2833":[92,50,92,59],"2841":[92,61,92,64],"2849":[92,17,92,65],"2857":[92,17,92,65],"2865":[92,9,92,66],"2873":[93,13,93,17],"2881":[93,21,93,25],"2889":[93,21,93,35],"2897":[94,29,94,33],"2905":[94,29,94,43],"2913":[95,17,95,20],"2921":[95,36,95,39],"2929":[95,41,95,45],"2937":[95,41,95,55],"2945":[95,56,95,59],"2953":[95,41,95,60],"2961":[95,17,95,61],"2963":[95,17,95,35],"2969":[95,17,95,62],"2977":[94,29,94,43],"2985":[94,13,96,14],"2993":[94,13,96,14],"3001":[99,9,99,14],"3009":[99,9,99,21],"3017":[99,9,99,21],"3025":[99,5,99,22],"3041":[100,12,100,13],"3049":[100,12,100,15],"3065":[101,14,101,19],"3073":[101,20,101,21],"3081":[101,14,101,22],"3089":[104,13,104,18],"3097":[104,19,104,20],"3105":[104,13,104,21],"3113":[104,33,104,44],"3121":[104,48,104,53],"3129":[104,54,104,55],"3137":[104,48,104,56],"3145":[104,48,104,63],"3153":[104,68,104,72],"3161":[104,68,104,90],"3169":[104,68,104,97],"3177":[105,13,105,18],"3185":[105,19,105,20],"3193":[105,24,105,29],"3201":[105,30,105,31],"3209":[105,24,105,32],"3217":[105,54,105,59],"3225":[105,42,105,61],"3233":[105,24,105,62],"3235":[105,24,105,41],"3241":[105,13,105,62],"3249":[105,13,105,63],"3257":[107,15,107,20],"3265":[107,21,107,22],"3273":[107,15,107,23],"3281":[107,35,107,46],"3289":[107,51,107,56],"3297":[107,57,107,58],"3305":[107,51,107,59],"3313":[108,17,108,21],"3321":[109,17,109,25],"3329":[109,41,109,51],"3337":[109,52,109,56],"3345":[109,58,109,61],"3353":[109,58,109,65],"3361":[109,58,109,74],"3369":[109,76,109,80],"3377":[109,41,109,81],"3385":[109,41,109,81],"3393":[109,17,109,83],"3401":[110,30,110,34],"3409":[110,53,110,57],"3417":[110,59,110,64],"3425":[110,66,110,70],"3433":[110,72,110,80],"3441":[110,82,110,83],"3449":[110,26,110,84],"3451":[110,30,110,52],"3457":[110,26,110,84],"3465":[110,17,110,85],"3473":[111,17,111,22],"3481":[111,23,111,24],"3489":[111,28,111,34],"3497":[111,40,111,45],"3505":[111,46,111,47],"3513":[111,40,111,48],"3521":[111,28,111,49],"3523":[111,28,111,39],"3529":[111,17,111,49],"3537":[111,17,111,50],"3545":[114,30,114,34],"3553":[114,38,114,43],"3561":[114,44,114,45],"3569":[114,38,114,46],"3577":[114,38,114,50],"3585":[114,30,114,51],"3587":[114,30,114,37],"3593":[114,30,114,51],"3601":[114,21,114,52],"3609":[115,19,116,18],"3617":[117,21,117,25],"3625":[117,29,117,35],"3633":[118,21,118,27],"3641":[118,32,118,37],"3649":[118,38,118,39],"3657":[118,32,118,40],"3665":[118,21,118,41],"3667":[118,21,118,31],"3673":[118,21,118,42],"3681":[119,21,119,26],"3689":[119,27,119,28],"3697":[119,32,119,38],"3705":[119,21,119,38],"3713":[119,21,119,39],"3721":[122,38,122,42],"3729":[122,61,122,66],"3737":[122,67,122,68],"3745":[122,61,122,69],"3753":[122,71,122,76],"3761":[122,78,122,87],"3769":[122,89,122,98],"3777":[122,100,122,101],"3785":[122,34,122,102],"3787":[122,38,122,60],"3793":[122,34,122,102],"3801":[122,25,122,103],"3809":[123,25,123,30],"3817":[123,31,123,32],"3825":[123,36,123,42],"3833":[123,25,123,42],"3841":[123,25,123,43],"3849":[125,35,125,44],"3857":[125,45,125,55],"3865":[125,57,125,62],"3873":[125,63,125,64],"3881":[125,57,125,65],"3889":[125,67,125,72],"3897":[125,67,125,78],"3905":[125,31,125,79],"3913":[125,31,125,79],"3921":[125,25,125,80],"3929":[124,23,126,22],"3937":[131,12,131,17],"3945":[131,12,131,17],"3953":[131,5,131,18],"3961":[83,32,132,2],"3969":[83,32,132,2],"3977":[83,32,132,2],"3985":[83,32,132,2],"3993":[83,32,132,2],"4001":[83,32,132,2],"4009":[83,32,132,2],"4017":[83,32,132,2],"4025":[83,32,132,2],"4033":[83,32,132,2],"4041":[83,32,132,2],"4049":[83,32,132,2],"4057":[83,1,132,2],"4065":[83,1,132,3],"4073":[134,11,134,15],"4081":[134,19,134,25],"4089":[135,16,135,25],"4097":[135,16,135,25],"4105":[135,9,135,26],"4113":[136,16,136,21],"4121":[136,16,136,26],"4129":[136,29,136,32],"4137":[136,41,136,47],"4145":[136,53,136,59],"4153":[136,41,136,60],"4155":[136,41,136,52],"4161":[136,66,136,70],"4169":[136,66,136,77],"4177":[136,90,136,92],"4185":[136,16,136,32],"4193":[136,16,136,32],"4201":[136,41,136,60],"4209":[136,41,136,60],"4217":[136,66,136,77],"4225":[136,66,136,77],"4233":[136,90,136,92],"4241":[136,90,136,92],"4257":[137,12,137,13],"4265":[137,12,137,15],"4281":[138,15,138,19],"4289":[138,20,138,21],"4297":[138,15,138,22],"4305":[138,15,138,22],"4313":[138,9,138,23],"4321":[139,13,139,14],"4329":[139,19,139,22],"4337":[139,31,139,35],"4345":[139,19,139,36],"4347":[139,19,139,30],"4353":[140,13,140,20],"4361":[140,35,140,39],"4369":[140,35,140,39],"4377":[140,13,140,41],"4385":[141,13,141,21],"4393":[141,22,141,25],"4401":[141,36,141,40],"4409":[141,36,141,47],"4417":[141,22,141,48],"4419":[141,22,141,35],"4425":[141,52,141,58],"4433":[141,59,141,62],"4441":[141,52,141,63],"4449":[141,13,141,63],"4457":[141,13,141,64],"4465":[144,12,144,19],"4473":[144,23,144,31],"4481":[144,35,144,44],"4489":[144,12,144,44],"4497":[144,5,144,45],"4505":[133,1,145,2],"4513":[133,1,145,2],"4521":[133,1,145,2],"4529":[133,1,145,2],"4537":[133,1,145,2],"4545":[133,1,145,2],"4553":[133,1,145,2],"4561":[133,1,145,2],"4569":[133,1,145,2],"4577":[133,1,145,2],"4585":[133,1,145,2],"4593":[146,1,146,7],"4601":[146,18,146,31],"4609":[146,1,146,31],"4617":[146,1,146,32],"4625":[1,1,146,32],"4633":[1,1,146,32],"4641":[1,1,146,32],"4649":[1,1,146,32],"4657":[1,1,146,32],"4665":[1,1,146,32],"4673":[1,1,146,32],"4681":[1,1,146,32],"4689":[8,1,30,2],"4697":[1,1,146,32],"4705":[133,1,145,2],"4713":[1,1,146,32],"4721":[9,5,11,6],"4729":[9,5,11,6],"4737":[26,9,27,25],"4745":[24,18,29,6],"4753":[24,18,29,6],"4761":[8,1,30,2],"4769":[8,1,30,2],"4777":[36,9,38,10],"4785":[41,9,43,10],"4793":[44,9,46,10],"4801":[49,13,52,14],"4809":[54,17,56,18],"4817":[53,49,58,14],"4825":[53,49,58,14],"4833":[47,9,59,10],"4841":[47,9,59,10],"4849":[35,55,60,6],"4857":[35,55,60,6],"4865":[34,38,61,2],"4873":[34,38,61,2],"4881":[64,5,65,32],"4889":[67,5,69,6],"4897":[71,9,72,19],"4905":[74,9,75,22],"4913":[77,9,79,10],"4921":[70,5,80,6],"4929":[70,5,80,6],"4937":[62,42,82,2],"4945":[62,42,82,2],"4953":[86,9,88,10],"4961":[85,5,90,6],"4969":[93,9,97,10],"4977":[91,5,98,6],"4985":[101,9,103,10],"4993":[104,9,106,10],"5001":[117,17,127,18],"5009":[108,13,128,14],"5017":[107,9,129,10],"5025":[100,5,130,6],"5033":[83,32,132,2],"5041":[83,32,132,2],"5049":[134,5,135,26],"5057":[139,9,142,10],"5065":[137,5,143,6],"5073":[133,1,145,2],"5081":[133,1,145,2],"5089":[1,1,146,32],"5097":[1,1,146,32],"nBranches":88,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/schema/documentarray.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/schema/documentarray_jalangi_.js","code":"/* eslint no-empty: 1 */\n\n/*!\n * Module dependencies.\n */\n\nvar ArrayType = require('./array');\nvar CastError = require('../error/cast');\nvar MongooseDocumentArray = require('../types/documentarray');\nvar SchemaType = require('../schematype');\nvar Subdocument = require('../types/embedded');\n\n/**\n * SubdocsArray SchemaType constructor\n *\n * @param {String} key\n * @param {Schema} schema\n * @param {Object} options\n * @inherits SchemaArray\n * @api public\n */\n\nfunction DocumentArray(key, schema, options) {\n  // compile an embedded document for this schema\n  function EmbeddedDocument() {\n    Subdocument.apply(this, arguments);\n  }\n\n  EmbeddedDocument.prototype = Object.create(Subdocument.prototype);\n  EmbeddedDocument.prototype.$__setSchema(schema);\n  EmbeddedDocument.schema = schema;\n\n  // apply methods\n  for (var i in schema.methods)\n    EmbeddedDocument.prototype[i] = schema.methods[i];\n\n  // apply statics\n  for (i in schema.statics)\n    EmbeddedDocument[i] = schema.statics[i];\n\n  EmbeddedDocument.options = options;\n\n  ArrayType.call(this, key, EmbeddedDocument, options);\n\n  this.schema = schema;\n  var path = this.path;\n  var fn = this.defaultValue;\n\n  this.default(function() {\n    var arr = fn.call(this);\n    if (!Array.isArray(arr)) arr = [arr];\n    return new MongooseDocumentArray(arr, path, this);\n  });\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nDocumentArray.schemaName = 'DocumentArray';\n\n/*!\n * Inherits from ArrayType.\n */\nDocumentArray.prototype = Object.create( ArrayType.prototype );\nDocumentArray.prototype.constructor = DocumentArray;\n\n/**\n * Performs local validations first, then validations on each embedded doc\n *\n * @api private\n */\n\nDocumentArray.prototype.doValidate = function(array, fn, scope, options) {\n  SchemaType.prototype.doValidate.call(this, array, function(err) {\n    if (err) {\n      return fn(err);\n    }\n\n    var count = array && array.length;\n    var error;\n\n    if (!count) {\n      return fn();\n    }\n    if (options && options.updateValidator) {\n      return fn();\n    }\n\n    // handle sparse arrays, do not use array.forEach which does not\n    // iterate over sparse elements yet reports array.length including\n    // them :(\n\n    for (var i = 0, len = count; i < len; ++i) {\n      // sidestep sparse entries\n      var doc = array[i];\n      if (!doc) {\n        --count || fn(error);\n        continue;\n      }\n\n      doc.validate({ __noPromise: true }, function(err) {\n        if (err) {\n          error = err;\n        }\n        --count || fn(error);\n      });\n    }\n  }, scope);\n};\n\n/**\n * Performs local validations first, then validations on each embedded doc.\n *\n * ####Note:\n *\n * This method ignores the asynchronous validators.\n *\n * @return {MongooseError|undefined}\n * @api private\n */\n\nDocumentArray.prototype.doValidateSync = function(array, scope) {\n  var schemaTypeError = SchemaType.prototype.doValidateSync.call(this, array, scope);\n  if (schemaTypeError) return schemaTypeError;\n\n  var count = array && array.length,\n      resultError = null;\n\n  if (!count) {\n    return;\n  }\n\n  // handle sparse arrays, do not use array.forEach which does not\n  // iterate over sparse elements yet reports array.length including\n  // them :(\n\n  for (var i = 0, len = count; i < len; ++i) {\n    // only first error\n    if ( resultError ) break;\n    // sidestep sparse entries\n    var doc = array[i];\n    if (!doc) continue;\n\n    var subdocValidateError = doc.validateSync();\n\n    if (subdocValidateError) {\n      resultError = subdocValidateError;\n    }\n  }\n\n  return resultError;\n};\n\n/**\n * Casts contents\n *\n * @param {Object} value\n * @param {Document} document that triggers the casting\n * @api private\n */\n\nDocumentArray.prototype.cast = function(value, doc, init, prev, options) {\n  var selected,\n      subdoc,\n      i;\n\n  if (!Array.isArray(value)) {\n    // gh-2442 mark whole array as modified if we're initializing a doc from\n    // the db and the path isn't an array in the document\n    if (!!doc && init) {\n      doc.markModified(this.path);\n    }\n    return this.cast([value], doc, init, prev);\n  }\n\n  if (!(value && value.isMongooseDocumentArray) &&\n      (!options || !options.skipDocumentArrayCast)) {\n    value = new MongooseDocumentArray(value, this.path, doc);\n    if (prev && prev._handlers) {\n      for (var key in prev._handlers) {\n        doc.removeListener(key, prev._handlers[key]);\n      }\n    }\n  }\n\n  i = value.length;\n\n  while (i--) {\n    if (!value[i]) {\n      continue;\n    }\n    // Check if the document has a different schema (re gh-3701)\n    if ((value[i] instanceof Subdocument) &&\n        value[i].schema !== this.casterConstructor.schema) {\n      value[i] = value[i].toObject({ virtuals: false });\n    }\n    if (!(value[i] instanceof Subdocument) && value[i]) {\n      if (init) {\n        selected || (selected = scopePaths(this, doc.$__.selected, init));\n        subdoc = new this.casterConstructor(null, value, true, selected, i);\n        value[i] = subdoc.init(value[i]);\n      } else {\n        try {\n          subdoc = prev.id(value[i]._id);\n        } catch (e) {}\n\n        if (prev && subdoc) {\n          // handle resetting doc with existing id but differing data\n          // doc.array = [{ doc: 'val' }]\n          subdoc.set(value[i]);\n          // if set() is hooked it will have no return value\n          // see gh-746\n          value[i] = subdoc;\n        } else {\n          try {\n            subdoc = new this.casterConstructor(value[i], value, undefined,\n              undefined, i);\n            // if set() is hooked it will have no return value\n            // see gh-746\n            value[i] = subdoc;\n          } catch (error) {\n            throw new CastError('embedded', value[i], value._path);\n          }\n        }\n      }\n    }\n  }\n\n  return value;\n};\n\n/*!\n * Scopes paths selected in a query to this array.\n * Necessary for proper default application of subdocument values.\n *\n * @param {DocumentArray} array - the array to scope `fields` paths\n * @param {Object|undefined} fields - the root fields selected in the query\n * @param {Boolean|undefined} init - if we are being created part of a query result\n */\n\nfunction scopePaths(array, fields, init) {\n  if (!(init && fields)) return undefined;\n\n  var path = array.path + '.',\n      keys = Object.keys(fields),\n      i = keys.length,\n      selected = {},\n      hasKeys,\n      key;\n\n  while (i--) {\n    key = keys[i];\n    if (0 === key.indexOf(path)) {\n      hasKeys || (hasKeys = true);\n      selected[key.substring(path.length)] = fields[key];\n    }\n  }\n\n  return hasKeys && selected || undefined;\n}\n\n/*!\n * Module exports.\n */\n\nmodule.exports = DocumentArray;\n"};
jalangiLabel3502:
    while (true) {
        try {
            J$.Se(4625, '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/schema/documentarray_jalangi_.js', '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/schema/documentarray.js');
            function DocumentArray(key, schema, options) {
                jalangiLabel3495:
                    while (true) {
                        try {
                            J$.Fe(1073, arguments.callee, this, arguments);
                            function EmbeddedDocument() {
                                jalangiLabel3493:
                                    while (true) {
                                        try {
                                            J$.Fe(321, arguments.callee, this, arguments);
                                            arguments = J$.N(329, 'arguments', arguments, 4);
                                            J$.X1(313, J$.M(305, J$.R(281, 'Subdocument', Subdocument, 1), 'apply', 0)(J$.R(289, 'this', this, 0), J$.R(297, 'arguments', arguments, 2)));
                                        } catch (J$e) {
                                            J$.Ex(4721, J$e);
                                        } finally {
                                            if (J$.Fr(4729))
                                                continue jalangiLabel3493;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(1081, 'arguments', arguments, 4);
                            key = J$.N(1089, 'key', key, 4);
                            schema = J$.N(1097, 'schema', schema, 4);
                            options = J$.N(1105, 'options', options, 4);
                            EmbeddedDocument = J$.N(1121, 'EmbeddedDocument', J$.T(1113, EmbeddedDocument, 12, false, 321), 0);
                            J$.N(1129, 'i', i, 0);
                            J$.N(1137, 'path', path, 0);
                            J$.N(1145, 'fn', fn, 0);
                            J$.X1(385, J$.P(377, J$.R(337, 'EmbeddedDocument', EmbeddedDocument, 0), 'prototype', J$.M(369, J$.R(345, 'Object', Object, 2), 'create', 0)(J$.G(361, J$.R(353, 'Subdocument', Subdocument, 1), 'prototype', 0)), 0));
                            J$.X1(425, J$.M(417, J$.G(401, J$.R(393, 'EmbeddedDocument', EmbeddedDocument, 0), 'prototype', 0), '$__setSchema', 0)(J$.R(409, 'schema', schema, 0)));
                            J$.X1(457, J$.P(449, J$.R(433, 'EmbeddedDocument', EmbeddedDocument, 0), 'schema', J$.R(441, 'schema', schema, 0), 0));
                            for (J$._tm_p in J$.H(553, J$.G(473, J$.R(465, 'schema', schema, 0), 'methods', 0))) {
                                var i = J$.X1(569, J$.W(561, 'i', J$._tm_p, i, 1));
                                {
                                    J$.X1(545, J$.P(537, J$.G(489, J$.R(481, 'EmbeddedDocument', EmbeddedDocument, 0), 'prototype', 0), J$.R(497, 'i', i, 0), J$.G(529, J$.G(513, J$.R(505, 'schema', schema, 0), 'methods', 0), J$.R(521, 'i', i, 0), 4), 2));
                                }
                            }
                            for (J$._tm_p in J$.H(657, J$.G(585, J$.R(577, 'schema', schema, 0), 'statics', 0))) {
                                J$.X1(673, i = J$.W(665, 'i', J$._tm_p, i, 0));
                                {
                                    J$.X1(649, J$.P(641, J$.R(593, 'EmbeddedDocument', EmbeddedDocument, 0), J$.R(601, 'i', i, 0), J$.G(633, J$.G(617, J$.R(609, 'schema', schema, 0), 'statics', 0), J$.R(625, 'i', i, 0), 4), 2));
                                }
                            }
                            J$.X1(705, J$.P(697, J$.R(681, 'EmbeddedDocument', EmbeddedDocument, 0), 'options', J$.R(689, 'options', options, 0), 0));
                            J$.X1(761, J$.M(753, J$.R(713, 'ArrayType', ArrayType, 1), 'call', 0)(J$.R(721, 'this', this, 0), J$.R(729, 'key', key, 0), J$.R(737, 'EmbeddedDocument', EmbeddedDocument, 0), J$.R(745, 'options', options, 0)));
                            J$.X1(793, J$.P(785, J$.R(769, 'this', this, 0), 'schema', J$.R(777, 'schema', schema, 0), 0));
                            var path = J$.X1(825, J$.W(817, 'path', J$.G(809, J$.R(801, 'this', this, 0), 'path', 0), path, 1));
                            var fn = J$.X1(857, J$.W(849, 'fn', J$.G(841, J$.R(833, 'this', this, 0), 'defaultValue', 0), fn, 1));
                            J$.X1(1065, J$.M(1057, J$.R(865, 'this', this, 0), 'default', 0)(J$.T(1049, function () {
                                jalangiLabel3494:
                                    while (true) {
                                        try {
                                            J$.Fe(1025, arguments.callee, this, arguments);
                                            arguments = J$.N(1033, 'arguments', arguments, 4);
                                            J$.N(1041, 'arr', arr, 0);
                                            var arr = J$.X1(905, J$.W(897, 'arr', J$.M(889, J$.R(873, 'fn', fn, 0), 'call', 0)(J$.R(881, 'this', this, 0)), arr, 1));
                                            if (J$.X1(4737, J$.C(8, J$.U(10, '!', J$.M(929, J$.R(913, 'Array', Array, 2), 'isArray', 0)(J$.R(921, 'arr', arr, 0))))))
                                                J$.X1(961, arr = J$.W(953, 'arr', J$.T(945, [J$.R(937, 'arr', arr, 0)], 10, false), arr, 0));
                                            return J$.X1(1017, J$.Rt(1009, J$.F(1001, J$.R(969, 'MongooseDocumentArray', MongooseDocumentArray, 1), 1)(J$.R(977, 'arr', arr, 0), J$.R(985, 'path', path, 0), J$.R(993, 'this', this, 0))));
                                        } catch (J$e) {
                                            J$.Ex(4745, J$e);
                                        } finally {
                                            if (J$.Fr(4753))
                                                continue jalangiLabel3494;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1025)));
                        } catch (J$e) {
                            J$.Ex(4761, J$e);
                        } finally {
                            if (J$.Fr(4769))
                                continue jalangiLabel3495;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function scopePaths(array, fields, init) {
                jalangiLabel3501:
                    while (true) {
                        try {
                            J$.Fe(4505, arguments.callee, this, arguments);
                            arguments = J$.N(4513, 'arguments', arguments, 4);
                            array = J$.N(4521, 'array', array, 4);
                            fields = J$.N(4529, 'fields', fields, 4);
                            init = J$.N(4537, 'init', init, 4);
                            J$.N(4545, 'path', path, 0);
                            J$.N(4553, 'keys', keys, 0);
                            J$.N(4561, 'i', i, 0);
                            J$.N(4569, 'selected', selected, 0);
                            J$.N(4577, 'hasKeys', hasKeys, 0);
                            J$.N(4585, 'key', key, 0);
                            if (J$.X1(5049, J$.C(312, J$.U(242, '!', J$.C(304, J$.R(4073, 'init', init, 0)) ? J$.R(4081, 'fields', fields, 0) : J$._()))))
                                return J$.X1(4105, J$.Rt(4097, J$.T(4089, undefined, 24, false)));
                            var path = J$.X1(4193, J$.W(4185, 'path', J$.B(250, '+', J$.G(4121, J$.R(4113, 'array', array, 0), 'path', 0), J$.T(4129, '.', 21, false), 0), path, 1)), keys = J$.X1(4209, J$.W(4201, 'keys', J$.M(4153, J$.R(4137, 'Object', Object, 2), 'keys', 0)(J$.R(4145, 'fields', fields, 0)), keys, 1)), i = J$.X1(4225, J$.W(4217, 'i', J$.G(4169, J$.R(4161, 'keys', keys, 0), 'length', 0), i, 1)), selected = J$.X1(4241, J$.W(4233, 'selected', J$.T(4177, {}, 11, false), selected, 1)), hasKeys, key;
                            while (J$.X1(5065, J$.C(336, J$.B(274, '+', i = J$.W(4265, 'i', J$.B(266, '-', J$.U(258, '+', J$.R(4257, 'i', i, 0)), J$.T(4249, 1, 22, false), 0), i, 0), J$.T(4273, 1, 22, false), 0)))) {
                                J$.X1(4313, key = J$.W(4305, 'key', J$.G(4297, J$.R(4281, 'keys', keys, 0), J$.R(4289, 'i', i, 0), 4), key, 0));
                                if (J$.X1(5057, J$.C(328, J$.B(282, '===', J$.T(4321, 0, 22, false), J$.M(4345, J$.R(4329, 'key', key, 0), 'indexOf', 0)(J$.R(4337, 'path', path, 0)), 0)))) {
                                    J$.X1(4377, J$.C(320, J$.R(4353, 'hasKeys', hasKeys, 0)) ? J$._() : hasKeys = J$.W(4369, 'hasKeys', J$.T(4361, true, 23, false), hasKeys, 0));
                                    J$.X1(4457, J$.P(4449, J$.R(4385, 'selected', selected, 0), J$.M(4417, J$.R(4393, 'key', key, 0), 'substring', 0)(J$.G(4409, J$.R(4401, 'path', path, 0), 'length', 0)), J$.G(4441, J$.R(4425, 'fields', fields, 0), J$.R(4433, 'key', key, 0), 4), 2));
                                }
                            }
                            return J$.X1(4497, J$.Rt(4489, J$.C(352, J$.C(344, J$.R(4465, 'hasKeys', hasKeys, 0)) ? J$.R(4473, 'selected', selected, 0) : J$._()) ? J$._() : J$.T(4481, undefined, 24, false)));
                        } catch (J$e) {
                            J$.Ex(5073, J$e);
                        } finally {
                            if (J$.Fr(5081))
                                continue jalangiLabel3501;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4633, '__secret__S$', __secret__S$, 0);
            J$.N(4641, '__secret__traits__', __secret__traits__, 0);
            J$.N(4649, 'ArrayType', ArrayType, 0);
            J$.N(4657, 'CastError', CastError, 0);
            J$.N(4665, 'MongooseDocumentArray', MongooseDocumentArray, 0);
            J$.N(4673, 'SchemaType', SchemaType, 0);
            J$.N(4681, 'Subdocument', Subdocument, 0);
            DocumentArray = J$.N(4697, 'DocumentArray', J$.T(4689, DocumentArray, 12, false, 1073), 0);
            scopePaths = J$.N(4713, 'scopePaths', J$.T(4705, scopePaths, 12, false, 4505), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var ArrayType = J$.X1(113, J$.W(105, 'ArrayType', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, './array', 21, false)), ArrayType, 3));
            var CastError = J$.X1(153, J$.W(145, 'CastError', J$.F(137, J$.R(121, 'require', require, 2), 0)(J$.T(129, '../error/cast', 21, false)), CastError, 3));
            var MongooseDocumentArray = J$.X1(193, J$.W(185, 'MongooseDocumentArray', J$.F(177, J$.R(161, 'require', require, 2), 0)(J$.T(169, '../types/documentarray', 21, false)), MongooseDocumentArray, 3));
            var SchemaType = J$.X1(233, J$.W(225, 'SchemaType', J$.F(217, J$.R(201, 'require', require, 2), 0)(J$.T(209, '../schematype', 21, false)), SchemaType, 3));
            var Subdocument = J$.X1(273, J$.W(265, 'Subdocument', J$.F(257, J$.R(241, 'require', require, 2), 0)(J$.T(249, '../types/embedded', 21, false)), Subdocument, 3));
            J$.X1(1177, J$.P(1169, J$.R(1153, 'DocumentArray', DocumentArray, 1), 'schemaName', J$.T(1161, 'DocumentArray', 21, false), 0));
            J$.X1(1233, J$.P(1225, J$.R(1185, 'DocumentArray', DocumentArray, 1), 'prototype', J$.M(1217, J$.R(1193, 'Object', Object, 2), 'create', 0)(J$.G(1209, J$.R(1201, 'ArrayType', ArrayType, 1), 'prototype', 0)), 0));
            J$.X1(1273, J$.P(1265, J$.G(1249, J$.R(1241, 'DocumentArray', DocumentArray, 1), 'prototype', 0), 'constructor', J$.R(1257, 'DocumentArray', DocumentArray, 1), 0));
            J$.X1(2033, J$.P(2025, J$.G(1289, J$.R(1281, 'DocumentArray', DocumentArray, 1), 'prototype', 0), 'doValidate', J$.T(2017, function (array, fn, scope, options) {
                jalangiLabel3498:
                    while (true) {
                        try {
                            J$.Fe(1969, arguments.callee, this, arguments);
                            arguments = J$.N(1977, 'arguments', arguments, 4);
                            array = J$.N(1985, 'array', array, 4);
                            fn = J$.N(1993, 'fn', fn, 4);
                            scope = J$.N(2001, 'scope', scope, 4);
                            options = J$.N(2009, 'options', options, 4);
                            J$.X1(1961, J$.M(1953, J$.G(1313, J$.G(1305, J$.R(1297, 'SchemaType', SchemaType, 1), 'prototype', 0), 'doValidate', 0), 'call', 0)(J$.R(1321, 'this', this, 0), J$.R(1329, 'array', array, 0), J$.T(1937, function (err) {
                                jalangiLabel3497:
                                    while (true) {
                                        try {
                                            J$.Fe(1873, arguments.callee, this, arguments);
                                            arguments = J$.N(1881, 'arguments', arguments, 4);
                                            err = J$.N(1889, 'err', err, 4);
                                            J$.N(1897, 'count', count, 0);
                                            J$.N(1905, 'error', error, 0);
                                            J$.N(1913, 'i', i, 0);
                                            J$.N(1921, 'len', len, 0);
                                            J$.N(1929, 'doc', doc, 0);
                                            if (J$.X1(4777, J$.C(16, J$.R(1337, 'err', err, 0)))) {
                                                return J$.X1(1377, J$.Rt(1369, J$.F(1361, J$.R(1345, 'fn', fn, 0), 0)(J$.R(1353, 'err', err, 0))));
                                            }
                                            var count = J$.X1(1417, J$.W(1409, 'count', J$.C(24, J$.R(1385, 'array', array, 0)) ? J$.G(1401, J$.R(1393, 'array', array, 0), 'length', 0) : J$._(), count, 1));
                                            var error;
                                            if (J$.X1(4785, J$.C(32, J$.U(18, '!', J$.R(1425, 'count', count, 0))))) {
                                                return J$.X1(1457, J$.Rt(1449, J$.F(1441, J$.R(1433, 'fn', fn, 0), 0)()));
                                            }
                                            if (J$.X1(4793, J$.C(48, J$.C(40, J$.R(1465, 'options', options, 0)) ? J$.G(1481, J$.R(1473, 'options', options, 0), 'updateValidator', 0) : J$._()))) {
                                                return J$.X1(1513, J$.Rt(1505, J$.F(1497, J$.R(1489, 'fn', fn, 0), 0)()));
                                            }
                                            for (var i = J$.X1(1545, J$.W(1537, 'i', J$.T(1521, 0, 22, false), i, 1)), len = J$.X1(1561, J$.W(1553, 'len', J$.R(1529, 'count', count, 0), len, 1)); J$.X1(4833, J$.C(88, J$.B(26, '<', J$.R(1569, 'i', i, 0), J$.R(1577, 'len', len, 0), 0))); J$.X1(4841, i = J$.W(1601, 'i', J$.B(42, '+', J$.U(34, '+', J$.R(1593, 'i', i, 0)), J$.T(1585, 1, 22, false), 0), i, 0))) {
                                                var doc = J$.X1(1641, J$.W(1633, 'doc', J$.G(1625, J$.R(1609, 'array', array, 0), J$.R(1617, 'i', i, 0), 4), doc, 1));
                                                if (J$.X1(4801, J$.C(64, J$.U(50, '!', J$.R(1649, 'doc', doc, 0))))) {
                                                    J$.X1(1705, J$.C(56, count = J$.W(1673, 'count', J$.B(66, '-', J$.U(58, '+', J$.R(1665, 'count', count, 0)), J$.T(1657, 1, 22, false), 0), count, 0)) ? J$._() : J$.F(1697, J$.R(1681, 'fn', fn, 0), 0)(J$.R(1689, 'error', error, 0)));
                                                    continue;
                                                }
                                                J$.X1(1865, J$.M(1857, J$.R(1713, 'doc', doc, 0), 'validate', 0)(J$.T(1729, {
                                                    __noPromise: J$.T(1721, true, 23, false)
                                                }, 11, false), J$.T(1849, function (err) {
                                                    jalangiLabel3496:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(1825, arguments.callee, this, arguments);
                                                                arguments = J$.N(1833, 'arguments', arguments, 4);
                                                                err = J$.N(1841, 'err', err, 4);
                                                                if (J$.X1(4809, J$.C(72, J$.R(1737, 'err', err, 0)))) {
                                                                    J$.X1(1761, error = J$.W(1753, 'error', J$.R(1745, 'err', err, 0), error, 0));
                                                                }
                                                                J$.X1(1817, J$.C(80, count = J$.W(1785, 'count', J$.B(82, '-', J$.U(74, '+', J$.R(1777, 'count', count, 0)), J$.T(1769, 1, 22, false), 0), count, 0)) ? J$._() : J$.F(1809, J$.R(1793, 'fn', fn, 0), 0)(J$.R(1801, 'error', error, 0)));
                                                            } catch (J$e) {
                                                                J$.Ex(4817, J$e);
                                                            } finally {
                                                                if (J$.Fr(4825))
                                                                    continue jalangiLabel3496;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 1825)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(4849, J$e);
                                        } finally {
                                            if (J$.Fr(4857))
                                                continue jalangiLabel3497;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1873), J$.R(1945, 'scope', scope, 0)));
                        } catch (J$e) {
                            J$.Ex(4865, J$e);
                        } finally {
                            if (J$.Fr(4873))
                                continue jalangiLabel3498;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1969), 0));
            J$.X1(2585, J$.P(2577, J$.G(2049, J$.R(2041, 'DocumentArray', DocumentArray, 1), 'prototype', 0), 'doValidateSync', J$.T(2569, function (array, scope) {
                jalangiLabel3499:
                    while (true) {
                        try {
                            J$.Fe(2481, arguments.callee, this, arguments);
                            arguments = J$.N(2489, 'arguments', arguments, 4);
                            array = J$.N(2497, 'array', array, 4);
                            scope = J$.N(2505, 'scope', scope, 4);
                            J$.N(2513, 'schemaTypeError', schemaTypeError, 0);
                            J$.N(2521, 'count', count, 0);
                            J$.N(2529, 'resultError', resultError, 0);
                            J$.N(2537, 'i', i, 0);
                            J$.N(2545, 'len', len, 0);
                            J$.N(2553, 'doc', doc, 0);
                            J$.N(2561, 'subdocValidateError', subdocValidateError, 0);
                            var schemaTypeError = J$.X1(2121, J$.W(2113, 'schemaTypeError', J$.M(2105, J$.G(2073, J$.G(2065, J$.R(2057, 'SchemaType', SchemaType, 1), 'prototype', 0), 'doValidateSync', 0), 'call', 0)(J$.R(2081, 'this', this, 0), J$.R(2089, 'array', array, 0), J$.R(2097, 'scope', scope, 0)), schemaTypeError, 1));
                            if (J$.X1(4881, J$.C(96, J$.R(2129, 'schemaTypeError', schemaTypeError, 0))))
                                return J$.X1(2153, J$.Rt(2145, J$.R(2137, 'schemaTypeError', schemaTypeError, 0)));
                            var count = J$.X1(2201, J$.W(2193, 'count', J$.C(104, J$.R(2161, 'array', array, 0)) ? J$.G(2177, J$.R(2169, 'array', array, 0), 'length', 0) : J$._(), count, 1)), resultError = J$.X1(2217, J$.W(2209, 'resultError', J$.T(2185, null, 25, false), resultError, 1));
                            if (J$.X1(4889, J$.C(112, J$.U(90, '!', J$.R(2225, 'count', count, 0))))) {
                                return J$.X1(2241, J$.Rt(2233, undefined));
                            }
                            for (var i = J$.X1(2273, J$.W(2265, 'i', J$.T(2249, 0, 22, false), i, 1)), len = J$.X1(2289, J$.W(2281, 'len', J$.R(2257, 'count', count, 0), len, 1)); J$.X1(4921, J$.C(144, J$.B(98, '<', J$.R(2297, 'i', i, 0), J$.R(2305, 'len', len, 0), 0))); J$.X1(4929, i = J$.W(2329, 'i', J$.B(114, '+', J$.U(106, '+', J$.R(2321, 'i', i, 0)), J$.T(2313, 1, 22, false), 0), i, 0))) {
                                if (J$.X1(4897, J$.C(120, J$.R(2337, 'resultError', resultError, 0))))
                                    break;
                                var doc = J$.X1(2377, J$.W(2369, 'doc', J$.G(2361, J$.R(2345, 'array', array, 0), J$.R(2353, 'i', i, 0), 4), doc, 1));
                                if (J$.X1(4905, J$.C(128, J$.U(122, '!', J$.R(2385, 'doc', doc, 0)))))
                                    continue;
                                var subdocValidateError = J$.X1(2417, J$.W(2409, 'subdocValidateError', J$.M(2401, J$.R(2393, 'doc', doc, 0), 'validateSync', 0)(), subdocValidateError, 1));
                                if (J$.X1(4913, J$.C(136, J$.R(2425, 'subdocValidateError', subdocValidateError, 0)))) {
                                    J$.X1(2449, resultError = J$.W(2441, 'resultError', J$.R(2433, 'subdocValidateError', subdocValidateError, 0), resultError, 0));
                                }
                            }
                            return J$.X1(2473, J$.Rt(2465, J$.R(2457, 'resultError', resultError, 0)));
                        } catch (J$e) {
                            J$.Ex(4937, J$e);
                        } finally {
                            if (J$.Fr(4945))
                                continue jalangiLabel3499;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2481), 0));
            J$.X1(4065, J$.P(4057, J$.G(2601, J$.R(2593, 'DocumentArray', DocumentArray, 1), 'prototype', 0), 'cast', J$.T(4049, function (value, doc, init, prev, options) {
                jalangiLabel3500:
                    while (true) {
                        try {
                            J$.Fe(3961, arguments.callee, this, arguments);
                            arguments = J$.N(3969, 'arguments', arguments, 4);
                            value = J$.N(3977, 'value', value, 4);
                            doc = J$.N(3985, 'doc', doc, 4);
                            init = J$.N(3993, 'init', init, 4);
                            prev = J$.N(4001, 'prev', prev, 4);
                            options = J$.N(4009, 'options', options, 4);
                            J$.N(4017, 'selected', selected, 0);
                            J$.N(4025, 'subdoc', subdoc, 0);
                            J$.N(4033, 'i', i, 0);
                            J$.N(4041, 'key', key, 0);
                            var selected, subdoc, i;
                            if (J$.X1(4961, J$.C(168, J$.U(130, '!', J$.M(2625, J$.R(2609, 'Array', Array, 2), 'isArray', 0)(J$.R(2617, 'value', value, 0)))))) {
                                if (J$.X1(4953, J$.C(160, J$.C(152, J$.U(146, '!', J$.U(138, '!', J$.R(2633, 'doc', doc, 0)))) ? J$.R(2641, 'init', init, 0) : J$._()))) {
                                    J$.X1(2681, J$.M(2673, J$.R(2649, 'doc', doc, 0), 'markModified', 0)(J$.G(2665, J$.R(2657, 'this', this, 0), 'path', 0)));
                                }
                                return J$.X1(2753, J$.Rt(2745, J$.M(2737, J$.R(2689, 'this', this, 0), 'cast', 0)(J$.T(2705, [J$.R(2697, 'value', value, 0)], 10, false), J$.R(2713, 'doc', doc, 0), J$.R(2721, 'init', init, 0), J$.R(2729, 'prev', prev, 0))));
                            }
                            if (J$.X1(4977, J$.C(216, J$.C(192, J$.U(154, '!', J$.C(176, J$.R(2761, 'value', value, 0)) ? J$.G(2777, J$.R(2769, 'value', value, 0), 'isMongooseDocumentArray', 0) : J$._())) ? J$.C(184, J$.U(162, '!', J$.R(2785, 'options', options, 0))) ? J$._() : J$.U(170, '!', J$.G(2801, J$.R(2793, 'options', options, 0), 'skipDocumentArrayCast', 0)) : J$._()))) {
                                J$.X1(2865, value = J$.W(2857, 'value', J$.F(2849, J$.R(2809, 'MongooseDocumentArray', MongooseDocumentArray, 1), 1)(J$.R(2817, 'value', value, 0), J$.G(2833, J$.R(2825, 'this', this, 0), 'path', 0), J$.R(2841, 'doc', doc, 0)), value, 0));
                                if (J$.X1(4969, J$.C(208, J$.C(200, J$.R(2873, 'prev', prev, 0)) ? J$.G(2889, J$.R(2881, 'prev', prev, 0), '_handlers', 0) : J$._()))) {
                                    for (J$._tm_p in J$.H(2977, J$.G(2905, J$.R(2897, 'prev', prev, 0), '_handlers', 0))) {
                                        var key = J$.X1(2993, J$.W(2985, 'key', J$._tm_p, key, 1));
                                        {
                                            {
                                                J$.X1(2969, J$.M(2961, J$.R(2913, 'doc', doc, 0), 'removeListener', 0)(J$.R(2921, 'key', key, 0), J$.G(2953, J$.G(2937, J$.R(2929, 'prev', prev, 0), '_handlers', 0), J$.R(2945, 'key', key, 0), 4)));
                                            }
                                        }
                                    }
                                }
                            }
                            J$.X1(3025, i = J$.W(3017, 'i', J$.G(3009, J$.R(3001, 'value', value, 0), 'length', 0), i, 0));
                            while (J$.X1(5025, J$.C(296, J$.B(194, '+', i = J$.W(3049, 'i', J$.B(186, '-', J$.U(178, '+', J$.R(3041, 'i', i, 0)), J$.T(3033, 1, 22, false), 0), i, 0), J$.T(3057, 1, 22, false), 0)))) {
                                if (J$.X1(4985, J$.C(224, J$.U(202, '!', J$.G(3081, J$.R(3065, 'value', value, 0), J$.R(3073, 'i', i, 0), 4))))) {
                                    continue;
                                }
                                if (J$.X1(4993, J$.C(240, J$.C(232, J$.B(210, 'instanceof', J$.G(3105, J$.R(3089, 'value', value, 0), J$.R(3097, 'i', i, 0), 4), J$.R(3113, 'Subdocument', Subdocument, 1), 0)) ? J$.B(218, '!==', J$.G(3145, J$.G(3137, J$.R(3121, 'value', value, 0), J$.R(3129, 'i', i, 0), 4), 'schema', 0), J$.G(3169, J$.G(3161, J$.R(3153, 'this', this, 0), 'casterConstructor', 0), 'schema', 0), 0) : J$._()))) {
                                    J$.X1(3249, J$.P(3241, J$.R(3177, 'value', value, 0), J$.R(3185, 'i', i, 0), J$.M(3233, J$.G(3209, J$.R(3193, 'value', value, 0), J$.R(3201, 'i', i, 0), 4), 'toObject', 0)(J$.T(3225, {
                                        virtuals: J$.T(3217, false, 23, false)
                                    }, 11, false)), 2));
                                }
                                if (J$.X1(5017, J$.C(288, J$.C(248, J$.U(234, '!', J$.B(226, 'instanceof', J$.G(3273, J$.R(3257, 'value', value, 0), J$.R(3265, 'i', i, 0), 4), J$.R(3281, 'Subdocument', Subdocument, 1), 0))) ? J$.G(3305, J$.R(3289, 'value', value, 0), J$.R(3297, 'i', i, 0), 4) : J$._()))) {
                                    if (J$.X1(5009, J$.C(280, J$.R(3313, 'init', init, 0)))) {
                                        J$.X1(3393, J$.C(256, J$.R(3321, 'selected', selected, 0)) ? J$._() : selected = J$.W(3385, 'selected', J$.F(3377, J$.R(3329, 'scopePaths', scopePaths, 1), 0)(J$.R(3337, 'this', this, 0), J$.G(3361, J$.G(3353, J$.R(3345, 'doc', doc, 0), '$__', 0), 'selected', 0), J$.R(3369, 'init', init, 0)), selected, 0));
                                        J$.X1(3465, subdoc = J$.W(3457, 'subdoc', J$.M(3449, J$.R(3401, 'this', this, 0), 'casterConstructor', 2)(J$.T(3409, null, 25, false), J$.R(3417, 'value', value, 0), J$.T(3425, true, 23, false), J$.R(3433, 'selected', selected, 0), J$.R(3441, 'i', i, 0)), subdoc, 0));
                                        J$.X1(3537, J$.P(3529, J$.R(3473, 'value', value, 0), J$.R(3481, 'i', i, 0), J$.M(3521, J$.R(3489, 'subdoc', subdoc, 0), 'init', 0)(J$.G(3513, J$.R(3497, 'value', value, 0), J$.R(3505, 'i', i, 0), 4)), 2));
                                    } else {
                                        try {
                                            J$.X1(3601, subdoc = J$.W(3593, 'subdoc', J$.M(3585, J$.R(3545, 'prev', prev, 0), 'id', 0)(J$.G(3577, J$.G(3569, J$.R(3553, 'value', value, 0), J$.R(3561, 'i', i, 0), 4), '_id', 0)), subdoc, 0));
                                        } catch (e) {
                                            e = J$.N(3609, 'e', e, 1);
                                        }
                                        if (J$.X1(5001, J$.C(272, J$.C(264, J$.R(3617, 'prev', prev, 0)) ? J$.R(3625, 'subdoc', subdoc, 0) : J$._()))) {
                                            J$.X1(3673, J$.M(3665, J$.R(3633, 'subdoc', subdoc, 0), 'set', 0)(J$.G(3657, J$.R(3641, 'value', value, 0), J$.R(3649, 'i', i, 0), 4)));
                                            J$.X1(3713, J$.P(3705, J$.R(3681, 'value', value, 0), J$.R(3689, 'i', i, 0), J$.R(3697, 'subdoc', subdoc, 0), 2));
                                        } else {
                                            try {
                                                J$.X1(3801, subdoc = J$.W(3793, 'subdoc', J$.M(3785, J$.R(3721, 'this', this, 0), 'casterConstructor', 2)(J$.G(3745, J$.R(3729, 'value', value, 0), J$.R(3737, 'i', i, 0), 4), J$.R(3753, 'value', value, 0), J$.T(3761, undefined, 24, false), J$.T(3769, undefined, 24, false), J$.R(3777, 'i', i, 0)), subdoc, 0));
                                                J$.X1(3841, J$.P(3833, J$.R(3809, 'value', value, 0), J$.R(3817, 'i', i, 0), J$.R(3825, 'subdoc', subdoc, 0), 2));
                                            } catch (error) {
                                                error = J$.N(3929, 'error', error, 1);
                                                throw J$.X1(3921, J$.Th(3913, J$.F(3905, J$.R(3849, 'CastError', CastError, 1), 1)(J$.T(3857, 'embedded', 21, false), J$.G(3881, J$.R(3865, 'value', value, 0), J$.R(3873, 'i', i, 0), 4), J$.G(3897, J$.R(3889, 'value', value, 0), '_path', 0))));
                                            }
                                        }
                                    }
                                }
                            }
                            return J$.X1(3953, J$.Rt(3945, J$.R(3937, 'value', value, 0)));
                        } catch (J$e) {
                            J$.Ex(5033, J$e);
                        } finally {
                            if (J$.Fr(5041))
                                continue jalangiLabel3500;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3961), 0));
            J$.X1(4617, J$.P(4609, J$.R(4593, 'module', module, 2), 'exports', J$.R(4601, 'DocumentArray', DocumentArray, 1), 0));
        } catch (J$e) {
            J$.Ex(5089, J$e);
        } finally {
            if (J$.Sr(5097)) {
                J$.L();
                continue jalangiLabel3502;
            } else {
                J$.L();
                break jalangiLabel3502;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
