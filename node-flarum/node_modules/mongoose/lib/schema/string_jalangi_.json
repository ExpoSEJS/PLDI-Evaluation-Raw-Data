{"8":[17,9,17,27],"9":[1,20,1,27],"10":[19,20,19,53],"16":[23,9,23,61],"17":[1,28,1,32],"18":[23,9,23,35],"24":[23,9,23,61],"25":[1,20,1,33],"26":[23,39,23,61],"32":[28,9,28,37],"33":[1,20,1,33],"34":[35,21,35,38],"40":[36,13,36,36],"41":[1,20,1,33],"42":[35,40,35,43],"48":[35,21,35,38],"49":[2,26,2,38],"56":[42,16,42,51],"57":[2,26,2,45],"58":[35,40,35,43],"64":[54,13,54,33],"65":[2,26,2,45],"66":[36,13,36,36],"72":[56,13,56,14],"73":[2,26,2,45],"74":[42,16,42,31],"80":[63,13,63,33],"81":[3,18,3,25],"82":[42,35,42,51],"88":[65,13,65,14],"89":[3,26,3,41],"90":[54,25,54,33],"96":[72,13,72,33],"97":[3,18,3,42],"98":[54,13,54,33],"104":[74,13,74,14],"105":[3,18,3,42],"106":[63,25,63,33],"112":[80,9,80,32],"113":[3,18,3,42],"114":[63,13,63,33],"120":[86,19,86,60],"121":[4,17,4,27],"122":[72,25,72,33],"128":[90,24,90,55],"129":[4,17,4,37],"130":[72,13,72,33],"136":[85,9,85,22],"137":[4,17,4,37],"138":[82,20,82,58],"144":[100,9,100,32],"145":[4,17,4,37],"146":[85,9,85,22],"152":[106,19,106,60],"153":[5,21,5,28],"154":[90,24,90,34],"160":[110,24,110,55],"161":[5,29,5,39],"162":[90,38,90,55],"168":[105,9,105,22],"169":[5,21,5,40],"170":[102,20,102,58],"176":[120,15,120,52],"177":[5,21,5,49],"178":[105,9,105,22],"184":[122,13,122,20],"185":[5,21,5,49],"186":[110,24,110,34],"192":[125,19,125,40],"193":[5,21,5,49],"194":[110,38,110,55],"200":[125,19,125,40],"201":[6,13,6,20],"202":[122,13,122,20],"208":[140,17,140,68],"209":[6,21,6,31],"210":[125,19,125,28],"216":[140,16,140,85],"217":[6,13,6,32],"218":[125,32,125,40],"224":[137,9,137,50],"225":[6,13,6,32],"226":[138,16,138,29],"232":[145,13,145,26],"233":[6,13,6,32],"234":[140,17,140,40],"240":[148,9,148,58],"241":[9,5,9,9],"242":[140,44,140,56],"248":[149,13,149,38],"249":[9,23,9,25],"250":[140,44,140,68],"256":[155,20,155,68],"257":[9,5,9,25],"258":[145,13,145,26],"264":[155,20,155,68],"265":[9,5,9,26],"266":[149,13,149,38],"272":[153,13,153,37],"273":[10,5,10,9],"274":[153,25,153,37],"280":[159,21,159,38],"281":[10,19,10,23],"282":[153,13,153,37],"288":[144,9,144,50],"289":[10,5,10,23],"290":[155,46,155,68],"296":[165,9,165,22],"297":[10,5,10,24],"298":[165,9,165,22],"304":[169,13,169,54],"305":[11,5,11,15],"306":[168,25,168,37],"312":[169,13,169,54],"313":[11,21,11,25],"314":[168,9,168,37],"320":[172,13,172,75],"321":[11,27,11,30],"322":[169,38,169,54],"328":[172,13,172,75],"329":[11,32,11,39],"330":[169,26,169,54],"336":[168,9,168,37],"337":[11,41,11,49],"338":[172,31,172,75],"344":[183,9,183,28],"345":[11,5,11,50],"346":[183,9,183,28],"347":[11,5,11,20],"352":[203,13,203,21],"353":[11,5,11,51],"354":[201,9,201,31],"360":[208,13,208,70],"361":[8,1,12,2],"362":[203,13,203,21],"368":[201,9,201,31],"369":[8,1,12,2],"370":[204,29,204,57],"377":[8,1,12,2],"378":[204,29,204,75],"385":[8,1,12,2],"386":[208,13,208,70],"393":[13,1,13,13],"401":[13,27,13,35],"409":[13,1,13,35],"417":[13,1,13,36],"425":[14,1,14,13],"433":[14,26,14,32],"441":[14,40,14,50],"449":[14,40,14,60],"457":[14,26,14,61],"459":[14,26,14,39],"465":[14,1,14,61],"473":[14,1,14,62],"481":[15,1,15,13],"489":[15,1,15,23],"497":[15,38,15,50],"505":[15,1,15,50],"513":[15,1,15,51],"521":[16,1,16,13],"529":[16,1,16,23],"537":[17,9,17,13],"545":[17,9,17,27],"553":[18,9,18,13],"561":[18,27,18,31],"569":[18,27,18,42],"577":[19,20,19,21],"585":[19,20,19,31],"593":[19,35,19,39],"601":[19,35,19,53],"609":[19,20,19,53],"617":[19,13,19,54],"625":[18,50,20,10],"633":[18,50,20,10],"641":[18,50,20,10],"649":[18,50,20,10],"657":[20,12,20,16],"665":[18,27,20,17],"667":[18,27,18,49],"673":[18,9,20,17],"681":[18,9,20,18],"689":[21,9,21,13],"697":[21,30,21,35],"705":[21,9,21,35],"713":[21,9,21,36],"721":[23,9,23,18],"729":[23,23,23,32],"737":[23,33,23,34],"745":[23,23,23,35],"753":[23,39,23,44],"761":[23,49,23,58],"769":[23,59,23,60],"777":[23,49,23,61],"785":[24,16,24,20],"793":[24,16,24,20],"801":[24,9,24,21],"809":[28,9,28,14],"817":[28,24,28,33],"825":[28,34,28,35],"833":[28,24,28,36],"841":[28,9,28,37],"843":[28,9,28,23],"849":[29,18,29,27],"857":[29,28,29,29],"865":[29,18,29,30],"873":[29,18,29,37],"881":[29,18,29,37],"889":[29,9,29,38],"897":[30,24,30,33],"905":[30,34,30,35],"913":[30,24,30,36],"921":[30,24,30,44],"929":[30,24,30,44],"937":[30,9,30,45],"945":[32,18,32,27],"953":[32,18,32,27],"961":[32,9,32,28],"969":[33,24,33,37],"977":[33,24,33,44],"985":[33,24,33,49],"993":[33,24,33,49],"1001":[33,9,33,50],"1009":[35,18,35,19],"1017":[35,18,35,19],"1025":[35,18,35,19],"1033":[35,21,35,22],"1041":[35,25,35,31],"1049":[35,25,35,38],"1065":[35,40,35,41],"1073":[35,40,35,43],"1089":[36,13,36,22],"1097":[36,27,36,33],"1105":[36,34,36,35],"1113":[36,27,36,36],"1121":[37,13,37,17],"1129":[37,13,37,28],"1137":[37,34,37,38],"1145":[37,44,37,50],"1153":[37,51,37,52],"1161":[37,44,37,53],"1169":[37,34,37,54],"1171":[37,34,37,43],"1177":[37,13,37,55],"1179":[37,13,37,33],"1185":[37,13,37,56],"1193":[40,16,40,20],"1201":[40,16,40,31],"1209":[40,16,40,31],"1217":[40,16,40,31],"1225":[41,5,41,9],"1233":[42,16,42,25],"1241":[42,30,42,31],"1249":[42,36,42,40],"1257":[42,49,42,50],"1265":[42,36,42,51],"1267":[42,36,42,48],"1273":[42,16,42,51],"1281":[42,9,42,52],"1289":[41,26,43,6],"1297":[41,26,43,6],"1305":[41,26,43,6],"1313":[41,26,43,6],"1321":[41,5,43,6],"1329":[41,5,43,7],"1337":[44,5,44,9],"1345":[44,5,44,20],"1353":[45,20,45,24],"1361":[45,20,45,38],"1369":[46,18,46,30],"1377":[47,15,47,21],"1385":[48,21,48,25],"1393":[44,26,49,6],"1401":[44,5,49,7],"1403":[44,5,44,25],"1409":[44,5,49,8],"1417":[50,12,50,16],"1425":[50,12,50,16],"1433":[50,5,50,17],"1441":[16,31,51,2],"1449":[16,31,51,2],"1457":[16,31,51,2],"1465":[16,31,51,2],"1473":[16,31,51,2],"1481":[16,31,51,2],"1489":[16,31,51,2],"1497":[16,1,51,2],"1505":[16,1,51,3],"1513":[52,1,52,13],"1521":[52,1,52,23],"1529":[53,12,53,16],"1537":[54,13,54,21],"1545":[54,32,54,33],"1553":[55,17,55,21],"1561":[55,27,55,28],"1569":[55,17,55,29],"1571":[55,17,55,26],"1577":[55,17,55,29],"1585":[55,13,55,30],"1593":[56,13,56,14],"1601":[57,20,57,21],"1609":[57,20,57,35],"1611":[57,20,57,33],"1617":[57,20,57,35],"1625":[57,13,57,36],"1633":[58,16,58,17],"1641":[58,16,58,17],"1649":[58,9,58,18],"1657":[53,21,59,6],"1665":[53,21,59,6],"1673":[53,21,59,6],"1681":[53,21,59,6],"1689":[53,21,59,6],"1697":[53,12,59,7],"1699":[53,12,53,20],"1705":[53,12,59,7],"1713":[53,5,59,8],"1721":[52,36,60,2],"1729":[52,36,60,2],"1737":[52,36,60,2],"1745":[52,1,60,2],"1753":[52,1,60,3],"1761":[61,1,61,13],"1769":[61,1,61,23],"1777":[62,12,62,16],"1785":[63,13,63,21],"1793":[63,32,63,33],"1801":[64,17,64,21],"1809":[64,27,64,28],"1817":[64,17,64,29],"1819":[64,17,64,26],"1825":[64,17,64,29],"1833":[64,13,64,30],"1841":[65,13,65,14],"1849":[66,20,66,21],"1857":[66,20,66,35],"1859":[66,20,66,33],"1865":[66,20,66,35],"1873":[66,13,66,36],"1881":[67,16,67,17],"1889":[67,16,67,17],"1897":[67,9,67,18],"1905":[62,21,68,6],"1913":[62,21,68,6],"1921":[62,21,68,6],"1929":[62,21,68,6],"1937":[62,21,68,6],"1945":[62,12,68,7],"1947":[62,12,62,20],"1953":[62,12,68,7],"1961":[62,5,68,8],"1969":[61,36,69,2],"1977":[61,36,69,2],"1985":[61,36,69,2],"1993":[61,1,69,2],"2001":[61,1,69,3],"2009":[70,1,70,13],"2017":[70,1,70,23],"2025":[71,12,71,16],"2033":[72,13,72,21],"2041":[72,32,72,33],"2049":[73,17,73,21],"2057":[73,27,73,28],"2065":[73,17,73,29],"2067":[73,17,73,26],"2073":[73,17,73,29],"2081":[73,13,73,30],"2089":[74,13,74,14],"2097":[75,20,75,21],"2105":[75,20,75,28],"2107":[75,20,75,26],"2113":[75,20,75,28],"2121":[75,13,75,29],"2129":[76,16,76,17],"2137":[76,16,76,17],"2145":[76,9,76,18],"2153":[71,21,77,6],"2161":[71,21,77,6],"2169":[71,21,77,6],"2177":[71,21,77,6],"2185":[71,21,77,6],"2193":[71,12,77,7],"2195":[71,12,71,20],"2201":[71,12,77,7],"2209":[71,5,77,8],"2217":[70,31,78,2],"2225":[70,31,78,2],"2233":[70,31,78,2],"2241":[70,1,78,2],"2249":[70,1,78,3],"2257":[79,1,79,13],"2265":[79,1,79,23],"2273":[80,9,80,13],"2281":[80,9,80,32],"2289":[81,9,81,13],"2297":[81,27,81,31],"2305":[81,27,81,42],"2313":[82,20,82,21],"2321":[82,20,82,31],"2329":[82,35,82,39],"2337":[82,35,82,58],"2345":[82,20,82,58],"2353":[82,13,82,59],"2361":[81,50,83,10],"2369":[81,50,83,10],"2377":[81,50,83,10],"2385":[81,50,83,10],"2393":[83,12,83,16],"2401":[81,27,83,17],"2403":[81,27,81,49],"2409":[81,9,83,17],"2417":[81,9,83,18],"2425":[85,9,85,13],"2433":[85,17,85,22],"2441":[86,19,86,26],"2449":[86,30,86,43],"2457":[86,30,86,50],"2465":[86,30,86,60],"2473":[86,19,86,60],"2481":[86,19,86,60],"2489":[87,15,87,18],"2497":[87,27,87,40],"2505":[87,42,87,47],"2513":[87,15,87,48],"2515":[87,15,87,26],"2521":[87,15,87,48],"2529":[87,9,87,49],"2537":[88,9,88,13],"2545":[88,9,88,24],"2553":[89,24,89,28],"2561":[90,24,90,25],"2569":[90,30,90,34],"2577":[90,38,90,39],"2585":[90,38,90,46],"2593":[90,50,90,55],"2601":[90,24,90,55],"2609":[90,17,90,56],"2617":[89,50,91,14],"2625":[89,50,91,14],"2633":[89,50,91,14],"2641":[89,50,91,14],"2649":[89,24,91,14],"2657":[92,22,92,25],"2665":[93,19,93,30],"2673":[94,24,94,29],"2681":[88,30,95,10],"2689":[88,9,95,11],"2691":[88,9,88,29],"2697":[88,9,95,12],"2705":[97,12,97,16],"2713":[97,12,97,16],"2721":[97,5,97,17],"2729":[79,36,98,2],"2737":[79,36,98,2],"2745":[79,36,98,2],"2753":[79,36,98,2],"2761":[79,36,98,2],"2769":[79,36,98,2],"2777":[79,1,98,2],"2785":[79,1,98,3],"2793":[99,1,99,13],"2801":[99,1,99,23],"2809":[100,9,100,13],"2817":[100,9,100,32],"2825":[101,9,101,13],"2833":[101,27,101,31],"2841":[101,27,101,42],"2849":[102,20,102,21],"2857":[102,20,102,31],"2865":[102,35,102,39],"2873":[102,35,102,58],"2881":[102,20,102,58],"2889":[102,13,102,59],"2897":[101,50,103,10],"2905":[101,50,103,10],"2913":[101,50,103,10],"2921":[101,50,103,10],"2929":[103,12,103,16],"2937":[101,27,103,17],"2939":[101,27,101,49],"2945":[101,9,103,17],"2953":[101,9,103,18],"2961":[105,9,105,13],"2969":[105,17,105,22],"2977":[106,19,106,26],"2985":[106,30,106,43],"2993":[106,30,106,50],"3001":[106,30,106,60],"3009":[106,19,106,60],"3017":[106,19,106,60],"3025":[107,15,107,18],"3033":[107,27,107,40],"3041":[107,42,107,47],"3049":[107,15,107,48],"3051":[107,15,107,26],"3057":[107,15,107,48],"3065":[107,9,107,49],"3073":[108,9,108,13],"3081":[108,9,108,24],"3089":[109,24,109,28],"3097":[110,24,110,25],"3105":[110,30,110,34],"3113":[110,38,110,39],"3121":[110,38,110,46],"3129":[110,50,110,55],"3137":[110,24,110,55],"3145":[110,17,110,56],"3153":[109,50,111,14],"3161":[109,50,111,14],"3169":[109,50,111,14],"3177":[109,50,111,14],"3185":[109,24,111,14],"3193":[112,22,112,25],"3201":[113,19,113,30],"3209":[114,24,114,29],"3217":[108,30,115,10],"3225":[108,9,115,11],"3227":[108,9,108,29],"3233":[108,9,115,12],"3241":[117,12,117,16],"3249":[117,12,117,16],"3257":[117,5,117,17],"3265":[99,36,118,2],"3273":[99,36,118,2],"3281":[99,36,118,2],"3289":[99,36,118,2],"3297":[99,36,118,2],"3305":[99,36,118,2],"3313":[99,1,118,2],"3321":[99,1,118,3],"3329":[119,1,119,13],"3337":[119,1,119,23],"3345":[120,15,120,22],"3353":[120,26,120,39],"3361":[120,26,120,46],"3369":[120,26,120,52],"3377":[120,15,120,52],"3385":[120,15,120,52],"3393":[122,14,122,20],"3401":[123,20,123,25],"3409":[123,20,123,25],"3417":[123,13,123,26],"3425":[125,19,125,23],"3433":[125,27,125,28],"3441":[125,32,125,34],"3449":[125,39,125,40],"3457":[125,43,125,49],"3465":[125,55,125,56],"3473":[125,43,125,57],"3475":[125,43,125,54],"3481":[125,60,125,64],"3489":[125,19,125,64],"3497":[125,19,125,64],"3505":[126,16,126,19],"3513":[126,16,126,19],"3521":[126,9,126,20],"3529":[121,26,127,6],"3537":[121,26,127,6],"3545":[121,26,127,6],"3553":[121,26,127,6],"3561":[121,26,127,6],"3569":[121,26,127,6],"3577":[121,26,127,6],"3585":[128,5,128,9],"3593":[128,5,128,20],"3601":[129,20,129,34],"3609":[130,18,130,21],"3617":[131,15,131,23],"3625":[132,17,132,23],"3633":[128,26,133,6],"3641":[128,5,133,7],"3643":[128,5,128,25],"3649":[128,5,133,8],"3657":[134,12,134,16],"3665":[134,12,134,16],"3673":[134,5,134,17],"3681":[119,32,135,2],"3689":[119,32,135,2],"3697":[119,32,135,2],"3705":[119,32,135,2],"3713":[119,32,135,2],"3721":[119,32,135,2],"3729":[119,32,135,2],"3737":[119,32,135,2],"3745":[119,1,135,2],"3753":[119,1,135,3],"3761":[136,1,136,13],"3769":[136,1,136,23],"3777":[137,9,137,19],"3785":[137,27,137,31],"3793":[137,33,137,38],"3801":[137,40,137,43],"3809":[137,45,137,49],"3817":[137,9,137,50],"3819":[137,9,137,26],"3825":[138,16,138,20],"3833":[138,24,138,29],"3841":[138,16,138,29],"3849":[138,9,138,30],"3857":[140,17,140,22],"3865":[140,34,140,40],"3873":[140,51,140,56],"3881":[140,60,140,68],"3889":[140,73,140,78],"3897":[140,73,140,85],"3905":[140,16,140,85],"3913":[140,9,140,86],"3921":[136,40,142,2],"3929":[136,40,142,2],"3937":[136,40,142,2],"3945":[136,40,142,2],"3953":[136,40,142,2],"3961":[136,40,142,2],"3969":[136,1,142,2],"3977":[136,1,142,3],"3985":[143,1,143,13],"3993":[143,1,143,23],"4001":[144,9,144,19],"4009":[144,27,144,31],"4017":[144,33,144,38],"4025":[144,40,144,43],"4033":[144,45,144,49],"4041":[144,9,144,50],"4043":[144,9,144,26],"4049":[145,13,145,17],"4057":[145,21,145,26],"4065":[146,20,146,25],"4073":[146,20,146,25],"4081":[146,13,146,26],"4089":[148,9,148,17],"4097":[148,33,148,40],"4105":[148,41,148,56],"4113":[148,33,148,57],"4121":[148,33,148,57],"4129":[148,9,148,59],"4137":[149,13,149,18],"4145":[149,30,149,38],"4153":[150,13,150,18],"4161":[150,13,150,22],"4169":[150,38,150,42],"4177":[150,13,150,42],"4185":[150,13,150,43],"4193":[151,20,151,25],"4201":[151,20,151,25],"4209":[151,13,151,26],"4217":[153,13,153,21],"4225":[153,32,153,37],"4233":[154,20,154,25],"4241":[154,20,154,25],"4249":[154,13,154,26],"4257":[155,20,155,26],"4265":[155,36,155,41],"4273":[155,20,155,42],"4275":[155,20,155,35],"4281":[155,47,155,52],"4289":[155,62,155,67],"4297":[155,47,155,68],"4299":[155,47,155,61],"4305":[156,23,156,32],"4313":[156,33,156,41],"4321":[156,43,156,48],"4329":[156,50,156,54],"4337":[156,50,156,59],"4345":[156,19,156,60],"4353":[156,19,156,60],"4361":[156,13,156,61],"4369":[158,20,158,23],"4377":[158,36,158,40],"4385":[158,36,158,45],"4393":[158,20,158,46],"4395":[158,20,158,35],"4401":[158,20,158,46],"4409":[158,20,158,46],"4417":[159,21,159,24],"4425":[159,21,159,38],"4433":[159,41,159,44],"4441":[159,41,159,60],"4443":[159,41,159,58],"4449":[159,63,159,66],"4457":[159,21,159,66],"4465":[159,21,159,66],"4473":[160,19,160,24],"4481":[160,35,160,39],"4489":[160,41,160,45],"4497":[160,19,160,46],"4499":[160,19,160,34],"4505":[160,19,160,46],"4513":[160,19,160,46],"4521":[161,23,161,26],"4529":[161,23,161,34],"4537":[161,41,161,46],"4545":[161,19,161,47],"4547":[161,23,161,40],"4553":[161,19,161,47],"4561":[161,19,161,47],"4569":[162,9,162,12],"4577":[162,9,162,16],"4585":[162,32,162,36],"4593":[162,9,162,36],"4601":[162,9,162,37],"4609":[163,16,163,19],"4617":[163,16,163,19],"4625":[163,9,163,20],"4633":[165,9,165,14],"4641":[165,18,165,22],"4649":[166,16,166,21],"4657":[166,16,166,21],"4665":[166,9,166,22],"4673":[168,9,168,20],"4681":[168,32,168,37],"4689":[169,13,169,18],"4697":[169,13,169,22],"4705":[169,26,169,34],"4713":[169,45,169,50],"4721":[169,45,169,54],"4729":[170,20,170,25],"4737":[170,20,170,29],"4745":[170,20,170,29],"4753":[170,13,170,30],"4761":[172,13,172,18],"4769":[172,13,172,27],"4777":[172,31,172,36],"4785":[172,31,172,45],"4793":[172,50,172,56],"4801":[172,50,172,66],"4809":[172,50,172,75],"4817":[173,20,173,25],"4825":[173,20,173,36],"4827":[173,20,173,34],"4833":[173,20,173,36],"4841":[173,13,173,37],"4849":[176,15,176,24],"4857":[176,25,176,33],"4865":[176,35,176,40],"4873":[176,42,176,46],"4881":[176,42,176,51],"4889":[176,11,176,52],"4897":[176,11,176,52],"4905":[176,5,176,53],"4913":[143,31,177,2],"4921":[143,31,177,2],"4929":[143,31,177,2],"4937":[143,31,177,2],"4945":[143,31,177,2],"4953":[143,31,177,2],"4961":[143,31,177,2],"4969":[143,31,177,2],"4977":[143,31,177,2],"4985":[143,31,177,2],"4993":[143,1,177,2],"5001":[143,1,177,3],"5009":[179,12,179,16],"5017":[179,30,179,33],"5025":[179,12,179,34],"5027":[179,12,179,29],"5033":[179,12,179,34],"5041":[179,5,179,35],"5049":[178,1,180,2],"5057":[178,1,180,2],"5065":[178,1,180,2],"5073":[182,16,182,20],"5081":[182,16,182,20],"5089":[182,16,182,20],"5097":[183,10,183,15],"5105":[183,24,183,27],"5113":[183,10,183,28],"5115":[183,10,183,23],"5121":[184,17,184,21],"5129":[184,35,184,38],"5137":[184,17,184,39],"5139":[184,17,184,34],"5145":[184,16,184,40],"5153":[184,16,184,40],"5161":[184,9,184,41],"5169":[186,12,186,15],"5177":[187,16,187,20],"5185":[187,34,187,35],"5193":[187,16,187,36],"5195":[187,16,187,33],"5201":[187,16,187,36],"5209":[187,9,187,37],"5217":[186,20,188,6],"5225":[186,20,188,6],"5233":[186,20,188,6],"5241":[186,20,188,6],"5249":[186,12,188,7],"5251":[186,12,186,19],"5257":[186,12,188,7],"5265":[186,5,188,8],"5273":[181,1,189,2],"5281":[181,1,189,2],"5289":[181,1,189,2],"5297":[181,1,189,2],"5305":[190,1,190,13],"5313":[190,1,190,23],"5321":[190,47,190,52],"5329":[190,61,190,71],"5337":[190,61,190,81],"5345":[190,61,190,102],"5353":[191,13,191,24],"5361":[192,12,192,24],"5369":[193,13,193,25],"5377":[194,12,194,24],"5385":[195,13,195,25],"5393":[196,17,196,29],"5401":[197,15,197,27],"5409":[190,104,198,2],"5417":[190,47,198,3],"5419":[190,47,190,60],"5425":[190,1,198,3],"5433":[190,1,198,4],"5441":[199,1,199,13],"5449":[199,1,199,23],"5457":[201,9,201,18],"5465":[201,9,201,25],"5473":[201,30,201,31],"5481":[202,19,202,23],"5489":[202,19,202,44],"5497":[202,45,202,57],"5505":[202,19,202,58],"5513":[202,19,202,58],"5521":[202,9,202,59],"5529":[203,14,203,21],"5537":[204,23,204,28],"5545":[204,29,204,42],"5553":[204,45,204,57],"5561":[204,60,204,75],"5569":[204,19,204,76],"5577":[204,19,204,76],"5585":[204,13,204,77],"5593":[205,16,205,23],"5601":[205,29,205,33],"5609":[205,35,205,38],"5617":[205,16,205,39],"5619":[205,16,205,28],"5625":[205,16,205,39],"5633":[205,9,205,40],"5641":[207,15,207,27],"5649":[207,15,207,27],"5657":[207,9,207,28],"5665":[208,13,208,19],"5673":[208,13,208,29],"5681":[208,13,208,38],"5689":[208,44,208,47],"5697":[208,13,208,48],"5699":[208,13,208,43],"5705":[208,53,208,70],"5713":[209,20,209,23],"5721":[209,20,209,23],"5729":[209,13,209,24],"5737":[211,16,211,20],"5745":[211,26,211,29],"5753":[211,16,211,30],"5755":[211,16,211,25],"5761":[211,16,211,30],"5769":[211,9,211,31],"5777":[199,39,213,2],"5785":[199,39,213,2],"5793":[199,39,213,2],"5801":[199,39,213,2],"5809":[199,39,213,2],"5817":[199,39,213,2],"5825":[199,1,213,2],"5833":[199,1,213,3],"5841":[214,1,214,7],"5849":[214,18,214,30],"5857":[214,1,214,30],"5865":[214,1,214,31],"5873":[1,1,214,31],"5881":[1,1,214,31],"5889":[1,1,214,31],"5897":[1,1,214,31],"5905":[1,1,214,31],"5913":[1,1,214,31],"5921":[1,1,214,31],"5929":[1,1,214,31],"5937":[8,1,12,2],"5945":[1,1,214,31],"5953":[178,1,180,2],"5961":[1,1,214,31],"5969":[181,1,189,2],"5977":[1,1,214,31],"5985":[8,1,12,2],"5993":[8,1,12,2],"6001":[18,50,20,10],"6009":[18,50,20,10],"6017":[17,5,22,6],"6025":[23,5,25,6],"6033":[28,5,34,6],"6041":[36,9,38,10],"6049":[35,5,39,6],"6057":[35,5,39,6],"6065":[41,26,43,6],"6073":[41,26,43,6],"6081":[16,31,51,2],"6089":[16,31,51,2],"6097":[54,9,55,30],"6105":[56,9,57,36],"6113":[53,21,59,6],"6121":[53,21,59,6],"6129":[52,36,60,2],"6137":[52,36,60,2],"6145":[63,9,64,30],"6153":[65,9,66,36],"6161":[62,21,68,6],"6169":[62,21,68,6],"6177":[61,36,69,2],"6185":[61,36,69,2],"6193":[72,9,73,30],"6201":[74,9,75,29],"6209":[71,21,77,6],"6217":[71,21,77,6],"6225":[70,31,78,2],"6233":[70,31,78,2],"6241":[81,50,83,10],"6249":[81,50,83,10],"6257":[80,5,84,6],"6265":[89,50,91,14],"6273":[89,50,91,14],"6281":[85,5,96,6],"6289":[79,36,98,2],"6297":[79,36,98,2],"6305":[101,50,103,10],"6313":[101,50,103,10],"6321":[100,5,104,6],"6329":[109,50,111,14],"6337":[109,50,111,14],"6345":[105,5,116,6],"6353":[99,36,118,2],"6361":[99,36,118,2],"6369":[122,9,124,10],"6377":[125,19,125,64],"6385":[121,26,127,6],"6393":[121,26,127,6],"6401":[119,32,135,2],"6409":[119,32,135,2],"6417":[137,5,141,6],"6425":[136,40,142,2],"6433":[136,40,142,2],"6441":[145,9,147,10],"6449":[149,9,152,10],"6457":[155,16,157,10],"6465":[153,9,157,10],"6473":[159,21,159,66],"6481":[144,5,164,6],"6489":[165,5,167,6],"6497":[169,9,171,10],"6505":[172,9,174,10],"6513":[168,5,175,6],"6521":[143,31,177,2],"6529":[143,31,177,2],"6537":[178,1,180,2],"6545":[178,1,180,2],"6553":[183,5,185,6],"6561":[186,20,188,6],"6569":[186,20,188,6],"6577":[181,1,189,2],"6585":[181,1,189,2],"6593":[203,9,204,77],"6601":[208,9,210,10],"6609":[201,5,212,6],"6617":[199,39,213,2],"6625":[199,39,213,2],"6633":[1,1,214,31],"6641":[1,1,214,31],"nBranches":92,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/schema/string.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/schema/string_jalangi_.js","code":"\n/*!\n * Module dependencies.\n */\n\nvar SchemaType = require('../schematype');\nvar CastError = SchemaType.CastError;\nvar errorMessages = require('../error').messages;\nvar utils = require('../utils');\nvar Document;\n\n/**\n * String SchemaType constructor.\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction SchemaString(key, options) {\n  this.enumValues = [];\n  this.regExp = null;\n  SchemaType.call(this, key, options, 'String');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nSchemaString.schemaName = 'String';\n\n/*!\n * Inherits from SchemaType.\n */\nSchemaString.prototype = Object.create( SchemaType.prototype );\nSchemaString.prototype.constructor = SchemaString;\n\n/**\n * Adds an enum validator\n *\n * ####Example:\n *\n *     var states = 'opening open closing closed'.split(' ')\n *     var s = new Schema({ state: { type: String, enum: states }})\n *     var M = db.model('M', s)\n *     var m = new M({ state: 'invalid' })\n *     m.save(function (err) {\n *       console.error(String(err)) // ValidationError: `invalid` is not a valid enum value for path `state`.\n *       m.state = 'open'\n *       m.save(callback) // success\n *     })\n *\n *     // or with custom error messages\n *     var enu = {\n *       values: 'opening open closing closed'.split(' '),\n *       message: 'enum validator failed for path `{PATH}` with value `{VALUE}`'\n *     }\n *     var s = new Schema({ state: { type: String, enum: enu })\n *     var M = db.model('M', s)\n *     var m = new M({ state: 'invalid' })\n *     m.save(function (err) {\n *       console.error(String(err)) // ValidationError: enum validator failed for path `state` with value `invalid`\n *       m.state = 'open'\n *       m.save(callback) // success\n *     })\n *\n * @param {String|Object} [args...] enumeration values\n * @return {SchemaType} this\n * @see Customized Error Messages #error_messages_MongooseError-messages\n * @api public\n */\n\nSchemaString.prototype.enum = function() {\n  if (this.enumValidator) {\n    this.validators = this.validators.filter(function(v) {\n      return v.validator != this.enumValidator;\n    }, this);\n    this.enumValidator = false;\n  }\n\n  if (undefined === arguments[0] || false === arguments[0]) {\n    return this;\n  }\n\n  var values;\n  var errorMessage;\n\n  if (utils.isObject(arguments[0])) {\n    values = arguments[0].values;\n    errorMessage = arguments[0].message;\n  } else {\n    values = arguments;\n    errorMessage = errorMessages.String.enum;\n  }\n\n  for (var i = 0; i < values.length; i++) {\n    if (undefined !== values[i]) {\n      this.enumValues.push(this.cast(values[i]));\n    }\n  }\n\n  var vals = this.enumValues;\n  this.enumValidator = function(v) {\n    return undefined === v || ~vals.indexOf(v);\n  };\n  this.validators.push({\n    validator: this.enumValidator,\n    message: errorMessage,\n    type: 'enum',\n    enumValues: vals\n  });\n\n  return this;\n};\n\n/**\n * Adds a lowercase setter.\n *\n * ####Example:\n *\n *     var s = new Schema({ email: { type: String, lowercase: true }})\n *     var M = db.model('M', s);\n *     var m = new M({ email: 'SomeEmail@example.COM' });\n *     console.log(m.email) // someemail@example.com\n *\n * @api public\n * @return {SchemaType} this\n */\n\nSchemaString.prototype.lowercase = function() {\n  return this.set(function(v, self) {\n    if ('string' != typeof v) v = self.cast(v);\n    if (v) return v.toLowerCase();\n    return v;\n  });\n};\n\n/**\n * Adds an uppercase setter.\n *\n * ####Example:\n *\n *     var s = new Schema({ caps: { type: String, uppercase: true }})\n *     var M = db.model('M', s);\n *     var m = new M({ caps: 'an example' });\n *     console.log(m.caps) // AN EXAMPLE\n *\n * @api public\n * @return {SchemaType} this\n */\n\nSchemaString.prototype.uppercase = function() {\n  return this.set(function(v, self) {\n    if ('string' != typeof v) v = self.cast(v);\n    if (v) return v.toUpperCase();\n    return v;\n  });\n};\n\n/**\n * Adds a trim setter.\n *\n * The string value will be trimmed when set.\n *\n * ####Example:\n *\n *     var s = new Schema({ name: { type: String, trim: true }})\n *     var M = db.model('M', s)\n *     var string = ' some name '\n *     console.log(string.length) // 11\n *     var m = new M({ name: string })\n *     console.log(m.name.length) // 9\n *\n * @api public\n * @return {SchemaType} this\n */\n\nSchemaString.prototype.trim = function() {\n  return this.set(function(v, self) {\n    if ('string' != typeof v) v = self.cast(v);\n    if (v) return v.trim();\n    return v;\n  });\n};\n\n/**\n * Sets a minimum length validator.\n *\n * ####Example:\n *\n *     var schema = new Schema({ postalCode: { type: String, minlength: 5 })\n *     var Address = db.model('Address', schema)\n *     var address = new Address({ postalCode: '9512' })\n *     address.save(function (err) {\n *       console.error(err) // validator error\n *       address.postalCode = '95125';\n *       address.save() // success\n *     })\n *\n *     // custom error messages\n *     // We can also use the special {MINLENGTH} token which will be replaced with the minimum allowed length\n *     var minlength = [5, 'The value of path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length ({MINLENGTH}).'];\n *     var schema = new Schema({ postalCode: { type: String, minlength: minlength })\n *     var Address = mongoose.model('Address', schema);\n *     var address = new Address({ postalCode: '9512' });\n *     address.validate(function (err) {\n *       console.log(String(err)) // ValidationError: The value of path `postalCode` (`9512`) is shorter than the minimum length (5).\n *     })\n *\n * @param {Number} value minimum string length\n * @param {String} [message] optional custom error message\n * @return {SchemaType} this\n * @see Customized Error Messages #error_messages_MongooseError-messages\n * @api public\n */\n\nSchemaString.prototype.minlength = function(value, message) {\n  if (this.minlengthValidator) {\n    this.validators = this.validators.filter(function(v) {\n      return v.validator != this.minlengthValidator;\n    }, this);\n  }\n\n  if (null != value) {\n    var msg = message || errorMessages.String.minlength;\n    msg = msg.replace(/{MINLENGTH}/, value);\n    this.validators.push({\n      validator: this.minlengthValidator = function(v) {\n        return v === null || v.length >= value;\n      },\n      message: msg,\n      type: 'minlength',\n      minlength: value\n    });\n  }\n\n  return this;\n};\n\n/**\n * Sets a maximum length validator.\n *\n * ####Example:\n *\n *     var schema = new Schema({ postalCode: { type: String, maxlength: 9 })\n *     var Address = db.model('Address', schema)\n *     var address = new Address({ postalCode: '9512512345' })\n *     address.save(function (err) {\n *       console.error(err) // validator error\n *       address.postalCode = '95125';\n *       address.save() // success\n *     })\n *\n *     // custom error messages\n *     // We can also use the special {MAXLENGTH} token which will be replaced with the maximum allowed length\n *     var maxlength = [9, 'The value of path `{PATH}` (`{VALUE}`) exceeds the maximum allowed length ({MAXLENGTH}).'];\n *     var schema = new Schema({ postalCode: { type: String, maxlength: maxlength })\n *     var Address = mongoose.model('Address', schema);\n *     var address = new Address({ postalCode: '9512512345' });\n *     address.validate(function (err) {\n *       console.log(String(err)) // ValidationError: The value of path `postalCode` (`9512512345`) exceeds the maximum allowed length (9).\n *     })\n *\n * @param {Number} value maximum string length\n * @param {String} [message] optional custom error message\n * @return {SchemaType} this\n * @see Customized Error Messages #error_messages_MongooseError-messages\n * @api public\n */\n\nSchemaString.prototype.maxlength = function(value, message) {\n  if (this.maxlengthValidator) {\n    this.validators = this.validators.filter(function(v) {\n      return v.validator != this.maxlengthValidator;\n    }, this);\n  }\n\n  if (null != value) {\n    var msg = message || errorMessages.String.maxlength;\n    msg = msg.replace(/{MAXLENGTH}/, value);\n    this.validators.push({\n      validator: this.maxlengthValidator = function(v) {\n        return v === null || v.length <= value;\n      },\n      message: msg,\n      type: 'maxlength',\n      maxlength: value\n    });\n  }\n\n  return this;\n};\n\n/**\n * Sets a regexp validator.\n *\n * Any value that does not pass `regExp`.test(val) will fail validation.\n *\n * ####Example:\n *\n *     var s = new Schema({ name: { type: String, match: /^a/ }})\n *     var M = db.model('M', s)\n *     var m = new M({ name: 'I am invalid' })\n *     m.validate(function (err) {\n *       console.error(String(err)) // \"ValidationError: Path `name` is invalid (I am invalid).\"\n *       m.name = 'apples'\n *       m.validate(function (err) {\n *         assert.ok(err) // success\n *       })\n *     })\n *\n *     // using a custom error message\n *     var match = [ /\\.html$/, \"That file doesn't end in .html ({VALUE})\" ];\n *     var s = new Schema({ file: { type: String, match: match }})\n *     var M = db.model('M', s);\n *     var m = new M({ file: 'invalid' });\n *     m.validate(function (err) {\n *       console.log(String(err)) // \"ValidationError: That file doesn't end in .html (invalid)\"\n *     })\n *\n * Empty strings, `undefined`, and `null` values always pass the match validator. If you require these values, enable the `required` validator also.\n *\n *     var s = new Schema({ name: { type: String, match: /^a/, required: true }})\n *\n * @param {RegExp} regExp regular expression to test against\n * @param {String} [message] optional custom error message\n * @return {SchemaType} this\n * @see Customized Error Messages #error_messages_MongooseError-messages\n * @api public\n */\n\nSchemaString.prototype.match = function match(regExp, message) {\n  // yes, we allow multiple match validators\n\n  var msg = message || errorMessages.String.match;\n\n  var matchValidator = function(v) {\n    if (!regExp) {\n      return false;\n    }\n\n    var ret = ((null != v && '' !== v)\n      ? regExp.test(v)\n      : true);\n    return ret;\n  };\n\n  this.validators.push({\n    validator: matchValidator,\n    message: msg,\n    type: 'regexp',\n    regexp: regExp\n  });\n  return this;\n};\n\n/**\n * Check required\n *\n * @param {String|null|undefined} value\n * @api private\n */\n\nSchemaString.prototype.checkRequired = function checkRequired(value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return null != value;\n  } else {\n    return (value instanceof String || typeof value == 'string') && value.length;\n  }\n};\n\n/**\n * Casts to String\n *\n * @api private\n */\n\nSchemaString.prototype.cast = function(value, doc, init) {\n  if (SchemaType._isRef(this, value, doc, init)) {\n    // wait! we may need to cast this to a document\n\n    if (null == value) {\n      return value;\n    }\n\n    // lazy load\n    Document || (Document = require('./../document'));\n\n    if (value instanceof Document) {\n      value.$__.wasPopulated = true;\n      return value;\n    }\n\n    // setting a populated path\n    if ('string' == typeof value) {\n      return value;\n    } else if (Buffer.isBuffer(value) || !utils.isObject(value)) {\n      throw new CastError('string', value, this.path);\n    }\n\n    // Handle the case where user directly sets a populated\n    // path to a plain object; cast to the Model used in\n    // the population query.\n    var path = doc.$__fullPath(this.path);\n    var owner = doc.ownerDocument ? doc.ownerDocument() : doc;\n    var pop = owner.populated(path, true);\n    var ret = new pop.options.model(value);\n    ret.$__.wasPopulated = true;\n    return ret;\n  }\n\n  // If null or undefined\n  if (value == null) {\n    return value;\n  }\n\n  if ('undefined' !== typeof value) {\n    // handle documents being passed\n    if (value._id && 'string' == typeof value._id) {\n      return value._id;\n    }\n\n    // Re: gh-647 and gh-3030, we're ok with casting using `toString()`\n    // **unless** its the default Object.toString, because \"[object Object]\"\n    // doesn't really qualify as useful data\n    if (value.toString && value.toString !== Object.prototype.toString) {\n      return value.toString();\n    }\n  }\n\n  throw new CastError('string', value, this.path);\n};\n\n/*!\n * ignore\n */\n\nfunction handleSingle(val) {\n  return this.castForQuery(val);\n}\n\nfunction handleArray(val) {\n  var self = this;\n  if (!Array.isArray(val)) {\n    return [this.castForQuery(val)];\n  }\n  return val.map(function(m) {\n    return self.castForQuery(m);\n  });\n}\n\nSchemaString.prototype.$conditionalHandlers =\n  utils.options(SchemaType.prototype.$conditionalHandlers, {\n    '$all': handleArray,\n    '$gt' : handleSingle,\n    '$gte': handleSingle,\n    '$lt' : handleSingle,\n    '$lte': handleSingle,\n    '$options': handleSingle,\n    '$regex': handleSingle\n  });\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} [val]\n * @api private\n */\n\nSchemaString.prototype.castForQuery = function($conditional, val) {\n  var handler;\n  if (arguments.length === 2) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler)\n      throw new Error(\"Can't use \" + $conditional + \" with String.\");\n    return handler.call(this, val);\n  } else {\n    val = $conditional;\n    if (Object.prototype.toString.call(val) === '[object RegExp]') {\n      return val;\n    }\n    return this.cast(val);\n  }\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = SchemaString;\n"}