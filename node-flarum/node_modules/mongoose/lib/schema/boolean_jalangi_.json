{"8":[12,12,12,45],"9":[1,20,1,27],"10":[12,12,12,26],"16":[15,9,15,23],"17":[1,28,1,32],"18":[12,30,12,45],"24":[17,9,17,22],"25":[1,20,1,33],"26":[15,9,15,23],"32":[19,9,19,25],"33":[1,20,1,33],"34":[17,9,17,22],"40":[21,9,21,26],"41":[1,20,1,33],"42":[19,9,19,25],"48":[30,13,30,20],"49":[2,26,2,38],"50":[21,9,21,26],"56":[28,9,28,31],"57":[2,26,2,45],"58":[23,13,23,19],"65":[2,26,2,45],"66":[23,12,23,19],"73":[2,26,2,45],"74":[28,9,28,31],"81":[3,13,3,20],"89":[3,21,3,31],"97":[3,13,3,32],"105":[3,13,3,32],"113":[3,13,3,32],"121":[4,18,4,25],"129":[4,26,4,41],"137":[4,18,4,42],"145":[4,18,4,42],"153":[4,18,4,42],"161":[6,5,6,15],"169":[6,21,6,25],"177":[6,27,6,31],"185":[6,33,6,40],"193":[6,42,6,51],"201":[6,5,6,52],"203":[6,5,6,20],"209":[6,5,6,53],"217":[5,1,7,2],"225":[5,1,7,2],"233":[5,1,7,2],"241":[5,1,7,2],"249":[8,1,8,14],"257":[8,28,8,37],"265":[8,1,8,37],"273":[8,1,8,38],"281":[9,1,9,14],"289":[9,27,9,33],"297":[9,41,9,51],"305":[9,41,9,61],"313":[9,27,9,62],"315":[9,27,9,40],"321":[9,1,9,62],"329":[9,1,9,63],"337":[10,1,10,14],"345":[10,1,10,24],"353":[10,39,10,52],"361":[10,1,10,52],"369":[10,1,10,53],"377":[11,1,11,14],"385":[11,1,11,24],"393":[12,12,12,17],"401":[12,22,12,26],"409":[12,30,12,35],"417":[12,40,12,45],"425":[12,12,12,45],"433":[12,5,12,46],"441":[11,41,13,2],"449":[11,41,13,2],"457":[11,41,13,2],"465":[11,41,13,2],"473":[11,1,13,2],"481":[11,1,13,3],"489":[14,1,14,14],"497":[14,1,14,24],"505":[15,9,15,13],"513":[15,18,15,23],"521":[16,16,16,21],"529":[16,16,16,21],"537":[16,9,16,22],"545":[17,9,17,12],"553":[17,17,17,22],"561":[18,16,18,21],"569":[18,16,18,21],"577":[18,9,18,22],"585":[19,9,19,15],"593":[19,20,19,25],"601":[20,16,20,20],"609":[20,16,20,20],"617":[20,9,20,21],"625":[21,9,21,16],"633":[21,21,21,26],"641":[22,16,22,21],"649":[22,16,22,21],"657":[22,9,22,22],"665":[23,14,23,19],"673":[23,12,23,19],"681":[23,5,23,20],"689":[14,32,24,2],"697":[14,32,24,2],"705":[14,32,24,2],"713":[14,32,24,2],"721":[14,1,24,2],"729":[14,1,24,3],"737":[25,1,25,14],"745":[25,38,25,43],"753":[25,52,25,62],"761":[25,52,25,72],"769":[25,52,25,93],"777":[25,95,25,97],"785":[25,38,25,98],"787":[25,38,25,51],"793":[25,1,25,98],"801":[25,1,25,99],"809":[26,1,26,14],"817":[26,1,26,24],"825":[28,9,28,10],"833":[28,15,28,24],"841":[28,15,28,31],"849":[29,19,29,32],"857":[29,19,29,53],"865":[29,54,29,66],"873":[29,19,29,67],"881":[29,19,29,67],"889":[29,9,29,68],"897":[30,13,30,20],"905":[31,20,31,27],"913":[31,33,31,37],"921":[31,39,31,42],"929":[31,20,31,43],"931":[31,20,31,32],"937":[31,20,31,43],"945":[31,13,31,44],"953":[33,16,33,20],"961":[33,26,33,29],"969":[33,16,33,30],"971":[33,16,33,25],"977":[33,16,33,30],"985":[33,9,33,31],"993":[35,12,35,16],"1001":[35,22,35,34],"1009":[35,12,35,35],"1011":[35,12,35,21],"1017":[35,12,35,35],"1025":[35,5,35,36],"1033":[26,40,36,2],"1041":[26,40,36,2],"1049":[26,40,36,2],"1057":[26,40,36,2],"1065":[26,40,36,2],"1073":[26,40,36,2],"1081":[26,1,36,2],"1089":[26,1,36,3],"1097":[37,1,37,7],"1105":[37,18,37,31],"1113":[37,1,37,31],"1121":[37,1,37,32],"1129":[1,1,37,32],"1137":[1,1,37,32],"1145":[1,1,37,32],"1153":[1,1,37,32],"1161":[1,1,37,32],"1169":[5,1,7,2],"1177":[1,1,37,32],"1185":[5,1,7,2],"1193":[5,1,7,2],"1201":[11,41,13,2],"1209":[11,41,13,2],"1217":[15,5,16,22],"1225":[17,5,18,22],"1233":[19,5,20,21],"1241":[21,5,22,22],"1249":[14,32,24,2],"1257":[14,32,24,2],"1265":[30,9,32,10],"1273":[28,5,34,6],"1281":[26,40,36,2],"1289":[26,40,36,2],"1297":[1,1,37,32],"1305":[1,1,37,32],"nBranches":14,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/schema/boolean.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/schema/boolean_jalangi_.js","code":"/*!\n * Module dependencies.\n */\n\nvar utils = require('../utils');\n\nvar SchemaType = require('../schematype');\n\n/**\n * Boolean SchemaType constructor.\n *\n * @param {String} path\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction SchemaBoolean(path, options) {\n  SchemaType.call(this, path, options, 'Boolean');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nSchemaBoolean.schemaName = 'Boolean';\n\n/*!\n * Inherits from SchemaType.\n */\nSchemaBoolean.prototype = Object.create( SchemaType.prototype );\nSchemaBoolean.prototype.constructor = SchemaBoolean;\n\n/**\n * Required validator\n *\n * @api private\n */\n\nSchemaBoolean.prototype.checkRequired = function(value) {\n  return value === true || value === false;\n};\n\n/**\n * Casts to boolean\n *\n * @param {Object} value\n * @api private\n */\n\nSchemaBoolean.prototype.cast = function(value) {\n  if (null === value) return value;\n  if ('0' === value) return false;\n  if ('true' === value) return true;\n  if ('false' === value) return false;\n  return !!value;\n};\n\nSchemaBoolean.$conditionalHandlers =\n  utils.options(SchemaType.prototype.$conditionalHandlers, {});\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} val\n * @api private\n */\n\nSchemaBoolean.prototype.castForQuery = function($conditional, val) {\n  var handler;\n  if (2 === arguments.length) {\n    handler = SchemaBoolean.$conditionalHandlers[$conditional];\n\n    if (handler) {\n      return handler.call(this, val);\n    }\n\n    return this.cast(val);\n  }\n\n  return this.cast($conditional);\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = SchemaBoolean;\n"}