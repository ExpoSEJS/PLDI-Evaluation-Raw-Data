{"8":[14,9,14,66],"9":[1,20,1,27],"10":[14,9,14,21],"16":[14,9,14,66],"17":[1,28,1,32],"18":[14,25,14,66],"24":[25,9,25,26],"25":[1,20,1,33],"26":[22,12,22,33],"32":[31,19,31,52],"33":[1,20,1,33],"34":[27,20,27,52],"40":[32,36,32,54],"41":[1,20,1,33],"42":[32,36,32,54],"48":[36,27,36,45],"49":[2,26,2,38],"50":[36,27,36,45],"56":[37,24,37,70],"57":[2,26,2,45],"58":[37,24,37,36],"64":[30,9,30,14],"65":[2,26,2,45],"66":[37,40,37,70],"72":[47,9,47,26],"73":[2,26,2,45],"74":[49,20,49,52],"80":[53,19,53,52],"81":[3,21,3,28],"82":[54,36,54,54],"88":[54,36,54,54],"89":[3,29,3,39],"90":[58,27,58,45],"96":[58,27,58,45],"97":[3,21,3,40],"98":[59,24,59,36],"104":[59,24,59,70],"105":[3,21,3,49],"106":[59,40,59,70],"112":[52,9,52,14],"113":[3,21,3,49],"114":[69,9,69,22],"120":[69,9,69,38],"121":[3,21,3,49],"122":[69,26,69,38],"128":[69,9,69,38],"129":[4,13,4,20],"130":[71,9,71,30],"136":[71,9,71,30],"137":[4,21,4,31],"138":[74,9,74,21],"144":[75,13,75,64],"145":[4,13,4,32],"146":[74,9,74,37],"152":[75,13,75,98],"153":[4,13,4,32],"154":[75,13,75,36],"160":[77,20,77,34],"161":[4,13,4,32],"162":[75,52,75,64],"168":[75,13,75,98],"169":[5,18,5,25],"170":[75,40,75,64],"176":[80,13,80,46],"177":[5,26,5,41],"178":[75,68,75,98],"184":[74,9,74,37],"185":[5,18,5,42],"186":[80,13,80,46],"192":[97,9,97,31],"193":[5,18,5,42],"194":[97,9,97,31],"200":[101,9,101,17],"201":[5,18,5,42],"202":[101,9,101,17],"209":[6,17,6,27],"210":[102,25,102,53],"217":[6,17,6,37],"218":[102,25,102,69],"225":[6,17,6,37],"233":[6,17,6,37],"241":[8,5,8,15],"249":[8,21,8,25],"257":[8,27,8,30],"265":[8,32,8,39],"273":[8,41,8,47],"281":[8,5,8,48],"283":[8,5,8,20],"289":[8,5,8,49],"297":[7,1,9,2],"305":[7,1,9,2],"313":[7,1,9,2],"321":[7,1,9,2],"329":[10,1,10,11],"337":[10,25,10,31],"345":[10,1,10,31],"353":[10,1,10,32],"361":[11,1,11,11],"369":[11,24,11,30],"377":[11,38,11,48],"385":[11,38,11,58],"393":[11,24,11,59],"395":[11,24,11,37],"401":[11,1,11,59],"409":[11,1,11,60],"417":[12,1,12,11],"425":[12,1,12,21],"433":[12,36,12,46],"441":[12,1,12,46],"449":[12,1,12,47],"457":[13,1,13,11],"465":[13,1,13,21],"473":[14,10,14,14],"481":[14,10,14,21],"489":[14,25,14,33],"497":[14,38,14,42],"505":[14,38,14,49],"513":[14,38,14,61],"521":[14,38,14,66],"529":[15,9,15,13],"537":[15,23,15,25],"545":[15,9,15,25],"553":[15,9,15,26],"561":[17,5,17,9],"569":[17,5,17,16],"577":[17,27,17,31],"585":[17,5,17,31],"593":[17,5,17,32],"601":[18,5,18,10],"609":[18,19,18,23],"617":[18,19,18,30],"625":[18,5,18,31],"627":[18,5,18,18],"633":[18,5,18,32],"641":[19,12,19,16],"649":[19,12,19,16],"657":[19,5,19,17],"665":[13,32,20,2],"673":[13,32,20,2],"681":[13,32,20,2],"689":[13,32,20,2],"697":[13,1,20,2],"705":[13,1,20,3],"713":[21,1,21,11],"721":[21,1,21,21],"729":[22,12,22,17],"737":[22,29,22,33],"745":[22,12,22,33],"753":[22,5,22,34],"761":[21,38,23,2],"769":[21,38,23,2],"777":[21,38,23,2],"785":[21,38,23,2],"793":[21,1,23,2],"801":[21,1,23,3],"809":[24,1,24,11],"817":[24,1,24,21],"825":[25,9,25,13],"833":[25,9,25,26],"841":[26,9,26,13],"849":[26,27,26,31],"857":[26,27,26,42],"865":[27,20,27,21],"873":[27,20,27,31],"881":[27,35,27,39],"889":[27,35,27,52],"897":[27,20,27,52],"905":[27,13,27,53],"913":[26,50,28,10],"921":[26,50,28,10],"929":[26,50,28,10],"937":[26,50,28,10],"945":[28,12,28,16],"953":[26,27,28,17],"955":[26,27,26,49],"961":[26,9,28,17],"969":[26,9,28,18],"977":[30,9,30,14],"985":[31,19,31,26],"993":[31,30,31,43],"1001":[31,30,31,48],"1009":[31,30,31,52],"1017":[31,19,31,52],"1025":[31,19,31,52],"1033":[32,15,32,18],"1041":[32,27,32,34],"1049":[32,36,32,41],"1057":[32,46,32,50],"1065":[32,46,32,54],"1073":[32,57,32,69],"1081":[32,72,32,76],"1089":[32,82,32,87],"1097":[32,72,32,88],"1099":[32,72,32,81],"1105":[32,72,32,99],"1107":[32,72,32,97],"1113":[32,15,32,100],"1115":[32,15,32,26],"1121":[32,15,32,100],"1129":[32,9,32,101],"1137":[33,20,33,24],"1145":[33,20,33,24],"1153":[33,20,33,24],"1161":[34,9,34,13],"1169":[34,9,34,24],"1177":[35,24,35,28],"1185":[36,27,36,32],"1193":[36,37,36,41],"1201":[36,37,36,45],"1209":[36,48,36,53],"1217":[36,48,36,55],"1225":[36,58,36,62],"1233":[36,68,36,73],"1241":[36,58,36,74],"1243":[36,58,36,67],"1249":[36,27,36,74],"1257":[36,27,36,74],"1265":[37,24,37,27],"1273":[37,32,37,36],"1281":[37,40,37,43],"1289":[37,40,37,53],"1291":[37,40,37,51],"1297":[37,57,37,60],"1305":[37,57,37,70],"1307":[37,57,37,68],"1313":[37,24,37,70],"1321":[37,17,37,71],"1329":[35,44,38,14],"1337":[35,44,38,14],"1345":[35,44,38,14],"1353":[35,44,38,14],"1361":[35,44,38,14],"1369":[35,24,38,14],"1377":[39,22,39,25],"1385":[40,19,40,24],"1393":[41,18,41,23],"1401":[34,30,42,10],"1409":[34,9,42,11],"1411":[34,9,34,29],"1417":[34,9,42,12],"1425":[44,12,44,16],"1433":[44,12,44,16],"1441":[44,5,44,17],"1449":[24,28,45,2],"1457":[24,28,45,2],"1465":[24,28,45,2],"1473":[24,28,45,2],"1481":[24,28,45,2],"1489":[24,28,45,2],"1497":[24,28,45,2],"1505":[24,1,45,2],"1513":[24,1,45,3],"1521":[46,1,46,11],"1529":[46,1,46,21],"1537":[47,9,47,13],"1545":[47,9,47,26],"1553":[48,9,48,13],"1561":[48,27,48,31],"1569":[48,27,48,42],"1577":[49,20,49,21],"1585":[49,20,49,31],"1593":[49,35,49,39],"1601":[49,35,49,52],"1609":[49,20,49,52],"1617":[49,13,49,53],"1625":[48,50,50,10],"1633":[48,50,50,10],"1641":[48,50,50,10],"1649":[48,50,50,10],"1657":[50,12,50,16],"1665":[48,27,50,17],"1667":[48,27,48,49],"1673":[48,9,50,17],"1681":[48,9,50,18],"1689":[52,9,52,14],"1697":[53,19,53,26],"1705":[53,30,53,43],"1713":[53,30,53,48],"1721":[53,30,53,52],"1729":[53,19,53,52],"1737":[53,19,53,52],"1745":[54,15,54,18],"1753":[54,27,54,34],"1761":[54,36,54,41],"1769":[54,46,54,50],"1777":[54,46,54,54],"1785":[54,57,54,69],"1793":[54,72,54,76],"1801":[54,82,54,87],"1809":[54,72,54,88],"1811":[54,72,54,81],"1817":[54,72,54,99],"1819":[54,72,54,97],"1825":[54,15,54,100],"1827":[54,15,54,26],"1833":[54,15,54,100],"1841":[54,9,54,101],"1849":[55,20,55,24],"1857":[55,20,55,24],"1865":[55,20,55,24],"1873":[56,9,56,13],"1881":[56,9,56,24],"1889":[57,24,57,28],"1897":[58,27,58,32],"1905":[58,37,58,41],"1913":[58,37,58,45],"1921":[58,48,58,53],"1929":[58,48,58,55],"1937":[58,58,58,62],"1945":[58,68,58,73],"1953":[58,58,58,74],"1955":[58,58,58,67],"1961":[58,27,58,74],"1969":[58,27,58,74],"1977":[59,24,59,27],"1985":[59,32,59,36],"1993":[59,40,59,43],"2001":[59,40,59,53],"2003":[59,40,59,51],"2009":[59,57,59,60],"2017":[59,57,59,70],"2019":[59,57,59,68],"2025":[59,24,59,70],"2033":[59,17,59,71],"2041":[57,44,60,14],"2049":[57,44,60,14],"2057":[57,44,60,14],"2065":[57,44,60,14],"2073":[57,44,60,14],"2081":[57,24,60,14],"2089":[61,22,61,25],"2097":[62,19,62,24],"2105":[63,18,63,23],"2113":[56,30,64,10],"2121":[56,9,64,11],"2123":[56,9,56,29],"2129":[56,9,64,12],"2137":[66,12,66,16],"2145":[66,12,66,16],"2153":[66,5,66,17],"2161":[46,28,67,2],"2169":[46,28,67,2],"2177":[46,28,67,2],"2185":[46,28,67,2],"2193":[46,28,67,2],"2201":[46,28,67,2],"2209":[46,28,67,2],"2217":[46,1,67,2],"2225":[46,1,67,3],"2233":[68,1,68,11],"2241":[68,1,68,21],"2249":[69,9,69,14],"2257":[69,18,69,22],"2265":[69,26,69,31],"2273":[69,36,69,38],"2281":[70,16,70,20],"2289":[70,16,70,20],"2297":[70,9,70,21],"2305":[71,9,71,14],"2313":[71,26,71,30],"2321":[72,16,72,21],"2329":[72,16,72,21],"2337":[72,9,72,22],"2345":[74,16,74,21],"2353":[74,26,74,37],"2361":[75,13,75,18],"2369":[75,30,75,36],"2377":[75,40,75,48],"2385":[75,59,75,64],"2393":[75,68,75,74],"2401":[75,75,75,80],"2409":[75,68,75,81],"2417":[75,85,75,91],"2425":[75,92,75,97],"2433":[75,85,75,98],"2441":[76,24,76,28],"2449":[76,29,76,35],"2457":[76,36,76,41],"2465":[76,29,76,42],"2473":[76,20,76,43],"2481":[76,20,76,43],"2489":[76,13,76,44],"2497":[77,20,77,25],"2505":[77,20,77,34],"2513":[78,24,78,28],"2521":[78,29,78,34],"2529":[78,29,78,45],"2531":[78,29,78,43],"2537":[78,20,78,46],"2545":[78,20,78,46],"2553":[78,13,78,47],"2561":[80,13,80,17],"2569":[80,13,80,28],"2571":[80,13,80,26],"2577":[80,32,80,46],"2585":[81,20,81,24],"2593":[81,20,81,24],"2601":[81,13,81,25],"2609":[84,15,84,24],"2617":[84,25,84,31],"2625":[84,33,84,38],"2633":[84,40,84,44],"2641":[84,40,84,49],"2649":[84,11,84,50],"2657":[84,11,84,50],"2665":[84,5,84,51],"2673":[68,29,85,2],"2681":[68,29,85,2],"2689":[68,29,85,2],"2697":[68,29,85,2],"2705":[68,29,85,2],"2713":[68,1,85,2],"2721":[68,1,85,3],"2729":[87,12,87,16],"2737":[87,22,87,25],"2745":[87,12,87,26],"2747":[87,12,87,21],"2753":[87,12,87,26],"2761":[87,5,87,27],"2769":[86,1,88,2],"2777":[86,1,88,2],"2785":[86,1,88,2],"2793":[89,1,89,11],"2801":[89,1,89,21],"2809":[89,45,89,50],"2817":[89,59,89,69],"2825":[89,59,89,79],"2833":[89,59,89,100],"2841":[90,12,90,24],"2849":[91,13,91,25],"2857":[92,12,92,24],"2865":[93,13,93,25],"2873":[89,102,94,2],"2881":[89,45,94,3],"2883":[89,45,89,58],"2889":[89,1,94,3],"2897":[89,1,94,4],"2905":[95,1,95,11],"2913":[95,1,95,21],"2921":[97,9,97,10],"2929":[97,15,97,24],"2937":[97,15,97,31],"2945":[98,16,98,20],"2953":[98,26,98,38],"2961":[98,16,98,39],"2963":[98,16,98,25],"2969":[98,16,98,39],"2977":[98,9,98,40],"2985":[100,15,100,19],"2993":[100,15,100,40],"3001":[100,41,100,53],"3009":[100,15,100,54],"3017":[100,15,100,54],"3025":[100,5,100,55],"3033":[101,10,101,17],"3041":[102,19,102,24],"3049":[102,25,102,38],"3057":[102,41,102,53],"3065":[102,56,102,69],"3073":[102,15,102,70],"3081":[102,15,102,70],"3089":[102,9,102,71],"3097":[104,12,104,19],"3105":[104,25,104,29],"3113":[104,31,104,34],"3121":[104,12,104,35],"3123":[104,12,104,24],"3129":[104,12,104,35],"3137":[104,5,104,36],"3145":[95,37,105,2],"3153":[95,37,105,2],"3161":[95,37,105,2],"3169":[95,37,105,2],"3177":[95,37,105,2],"3185":[95,37,105,2],"3193":[95,1,105,2],"3201":[95,1,105,3],"3209":[106,1,106,7],"3217":[106,18,106,28],"3225":[106,1,106,28],"3233":[106,1,106,29],"3241":[1,1,106,29],"3249":[1,1,106,29],"3257":[1,1,106,29],"3265":[1,1,106,29],"3273":[1,1,106,29],"3281":[1,1,106,29],"3289":[1,1,106,29],"3297":[7,1,9,2],"3305":[1,1,106,29],"3313":[86,1,88,2],"3321":[1,1,106,29],"3329":[7,1,9,2],"3337":[7,1,9,2],"3345":[14,5,16,6],"3353":[13,32,20,2],"3361":[13,32,20,2],"3369":[21,38,23,2],"3377":[21,38,23,2],"3385":[26,50,28,10],"3393":[26,50,28,10],"3401":[25,5,29,6],"3409":[32,36,32,99],"3417":[36,27,36,74],"3425":[35,44,38,14],"3433":[35,44,38,14],"3441":[30,5,43,6],"3449":[24,28,45,2],"3457":[24,28,45,2],"3465":[48,50,50,10],"3473":[48,50,50,10],"3481":[47,5,51,6],"3489":[54,36,54,99],"3497":[58,27,58,74],"3505":[57,44,60,14],"3513":[57,44,60,14],"3521":[52,5,65,6],"3529":[46,28,67,2],"3537":[46,28,67,2],"3545":[69,5,70,21],"3553":[71,5,72,22],"3561":[77,16,79,10],"3569":[75,9,79,10],"3577":[80,9,82,10],"3585":[74,5,83,6],"3593":[68,29,85,2],"3601":[68,29,85,2],"3609":[86,1,88,2],"3617":[86,1,88,2],"3625":[97,5,99,6],"3633":[101,5,103,6],"3641":[95,37,105,2],"3649":[95,37,105,2],"3657":[1,1,106,29],"3665":[1,1,106,29],"nBranches":50,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/schema/date.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/schema/date_jalangi_.js","code":"/*!\n * Module requirements.\n */\n\nvar errorMessages = require('../error').messages;\nvar utils = require('../utils');\n\nvar SchemaType = require('../schematype');\n\nvar CastError = SchemaType.CastError;\n\n/**\n * Date SchemaType constructor.\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction SchemaDate(key, options) {\n  SchemaType.call(this, key, options, 'Date');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nSchemaDate.schemaName = 'Date';\n\n/*!\n * Inherits from SchemaType.\n */\nSchemaDate.prototype = Object.create( SchemaType.prototype );\nSchemaDate.prototype.constructor = SchemaDate;\n\n/**\n * Declares a TTL index (rounded to the nearest second) for _Date_ types only.\n *\n * This sets the `expiresAfterSeconds` index option available in MongoDB >= 2.1.2.\n * This index type is only compatible with Date types.\n *\n * ####Example:\n *\n *     // expire in 24 hours\n *     new Schema({ createdAt: { type: Date, expires: 60*60*24 }});\n *\n * `expires` utilizes the `ms` module from [guille](https://github.com/guille/) allowing us to use a friendlier syntax:\n *\n * ####Example:\n *\n *     // expire in 24 hours\n *     new Schema({ createdAt: { type: Date, expires: '24h' }});\n *\n *     // expire in 1.5 hours\n *     new Schema({ createdAt: { type: Date, expires: '1.5h' }});\n *\n *     // expire in 7 days\n *     var schema = new Schema({ createdAt: Date });\n *     schema.path('createdAt').expires('7d');\n *\n * @param {Number|String} when\n * @added 3.0.0\n * @return {SchemaType} this\n * @api public\n */\n\nSchemaDate.prototype.expires = function(when) {\n  if (!this._index || 'Object' !== this._index.constructor.name) {\n    this._index = {};\n  }\n\n  this._index.expires = when;\n  utils.expires(this._index);\n  return this;\n};\n\n/**\n * Required validator for date\n *\n * @api private\n */\n\nSchemaDate.prototype.checkRequired = function(value) {\n  return value instanceof Date;\n};\n\n/**\n * Sets a minimum date validator.\n *\n * ####Example:\n *\n *     var s = new Schema({ d: { type: Date, min: Date('1970-01-01') })\n *     var M = db.model('M', s)\n *     var m = new M({ d: Date('1969-12-31') })\n *     m.save(function (err) {\n *       console.error(err) // validator error\n *       m.d = Date('2014-12-08');\n *       m.save() // success\n *     })\n *\n *     // custom error messages\n *     // We can also use the special {MIN} token which will be replaced with the invalid value\n *     var min = [Date('1970-01-01'), 'The value of path `{PATH}` ({VALUE}) is beneath the limit ({MIN}).'];\n *     var schema = new Schema({ d: { type: Date, min: min })\n *     var M = mongoose.model('M', schema);\n *     var s= new M({ d: Date('1969-12-31') });\n *     s.validate(function (err) {\n *       console.log(String(err)) // ValidationError: The value of path `d` (1969-12-31) is before the limit (1970-01-01).\n *     })\n *\n * @param {Date} value minimum date\n * @param {String} [message] optional custom error message\n * @return {SchemaType} this\n * @see Customized Error Messages #error_messages_MongooseError-messages\n * @api public\n */\n\nSchemaDate.prototype.min = function(value, message) {\n  if (this.minValidator) {\n    this.validators = this.validators.filter(function(v) {\n      return v.validator != this.minValidator;\n    }, this);\n  }\n\n  if (value) {\n    var msg = message || errorMessages.Date.min;\n    msg = msg.replace(/{MIN}/, (value === Date.now ? 'Date.now()' : this.cast(value).toString()));\n    var self = this;\n    this.validators.push({\n      validator: this.minValidator = function(val) {\n        var min = (value === Date.now ? value() : self.cast(value));\n        return val === null || val.valueOf() >= min.valueOf();\n      },\n      message: msg,\n      type: 'min',\n      min: value\n    });\n  }\n\n  return this;\n};\n\n/**\n * Sets a maximum date validator.\n *\n * ####Example:\n *\n *     var s = new Schema({ d: { type: Date, max: Date('2014-01-01') })\n *     var M = db.model('M', s)\n *     var m = new M({ d: Date('2014-12-08') })\n *     m.save(function (err) {\n *       console.error(err) // validator error\n *       m.d = Date('2013-12-31');\n *       m.save() // success\n *     })\n *\n *     // custom error messages\n *     // We can also use the special {MAX} token which will be replaced with the invalid value\n *     var max = [Date('2014-01-01'), 'The value of path `{PATH}` ({VALUE}) exceeds the limit ({MAX}).'];\n *     var schema = new Schema({ d: { type: Date, max: max })\n *     var M = mongoose.model('M', schema);\n *     var s= new M({ d: Date('2014-12-08') });\n *     s.validate(function (err) {\n *       console.log(String(err)) // ValidationError: The value of path `d` (2014-12-08) exceeds the limit (2014-01-01).\n *     })\n *\n * @param {Date} maximum date\n * @param {String} [message] optional custom error message\n * @return {SchemaType} this\n * @see Customized Error Messages #error_messages_MongooseError-messages\n * @api public\n */\n\nSchemaDate.prototype.max = function(value, message) {\n  if (this.maxValidator) {\n    this.validators = this.validators.filter(function(v) {\n      return v.validator != this.maxValidator;\n    }, this);\n  }\n\n  if (value) {\n    var msg = message || errorMessages.Date.max;\n    msg = msg.replace(/{MAX}/, (value === Date.now ? 'Date.now()' : this.cast(value).toString()));\n    var self = this;\n    this.validators.push({\n      validator: this.maxValidator = function(val) {\n        var max = (value === Date.now ? value() : self.cast(value));\n        return val === null || val.valueOf() <= max.valueOf();\n      },\n      message: msg,\n      type: 'max',\n      max: value\n    });\n  }\n\n  return this;\n};\n\n/**\n * Casts to date\n *\n * @param {Object} value to cast\n * @api private\n */\n\nSchemaDate.prototype.cast = function(value) {\n  // If null or undefined\n  if (value == null || value === '')\n    return null;\n\n  if (value instanceof Date)\n    return value;\n\n  var date;\n\n  // support for timestamps\n  if (typeof value !== 'undefined') {\n    if (value instanceof Number || 'number' == typeof value\n        || String(value) == Number(value)) {\n      date = new Date(Number(value));\n    } else if (value.toString) {\n      // support for date strings\n      date = new Date(value.toString());\n    }\n\n    if (date.toString() != 'Invalid Date') {\n      return date;\n    }\n  }\n\n  throw new CastError('date', value, this.path);\n};\n\n/*!\n * Date Query casting.\n *\n * @api private\n */\n\nfunction handleSingle(val) {\n  return this.cast(val);\n}\n\nSchemaDate.prototype.$conditionalHandlers =\n  utils.options(SchemaType.prototype.$conditionalHandlers, {\n    '$gt': handleSingle,\n    '$gte': handleSingle,\n    '$lt': handleSingle,\n    '$lte': handleSingle\n  });\n\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} [value]\n * @api private\n */\n\nSchemaDate.prototype.castForQuery = function($conditional, val) {\n  var handler;\n\n  if (2 !== arguments.length) {\n    return this.cast($conditional);\n  }\n\n  handler = this.$conditionalHandlers[$conditional];\n\n  if (!handler) {\n    throw new Error(\"Can't use \" + $conditional + \" with Date.\");\n  }\n\n  return handler.call(this, val);\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = SchemaDate;\n"}