J$.iids = {"8":[11,9,11,15],"9":[1,20,1,27],"10":[19,16,19,29],"16":[18,9,18,50],"17":[1,28,1,32],"18":[21,16,21,36],"24":[26,13,26,26],"25":[1,20,1,33],"26":[26,13,26,26],"32":[29,9,29,58],"33":[1,20,1,33],"34":[30,13,30,38],"40":[30,13,30,38],"41":[1,20,1,33],"42":[34,13,34,33],"48":[36,20,36,68],"49":[2,26,2,38],"50":[36,46,36,68],"56":[36,20,36,68],"57":[2,26,2,45],"58":[46,9,46,22],"64":[34,13,34,33],"65":[2,26,2,45],"66":[48,9,48,29],"72":[40,21,40,38],"73":[2,26,2,45],"74":[51,13,51,37],"80":[25,9,25,50],"81":[3,18,3,25],"82":[54,13,54,51],"88":[46,9,46,22],"89":[3,26,3,41],"90":[61,9,61,43],"96":[48,9,48,29],"97":[3,18,3,42],"98":[81,9,81,31],"104":[51,13,51,37],"105":[3,56,3,66],"106":[83,13,83,21],"112":[54,13,54,51],"113":[3,56,3,76],"114":[84,29,84,57],"120":[50,9,50,18],"121":[3,84,3,91],"122":[84,29,84,77],"128":[61,9,61,43],"129":[3,92,3,111],"136":[83,13,83,21],"137":[3,84,3,112],"144":[81,9,81,31],"145":[3,122,3,129],"153":[3,130,3,140],"161":[3,122,3,141],"169":[3,18,3,42],"177":[3,18,3,42],"185":[3,56,3,76],"193":[3,56,3,76],"201":[3,84,3,112],"209":[3,84,3,112],"217":[3,122,3,141],"225":[3,122,3,141],"233":[5,5,5,15],"241":[5,21,5,25],"249":[5,27,5,30],"257":[5,32,5,39],"265":[5,41,5,51],"273":[5,5,5,52],"275":[5,5,5,20],"281":[5,5,5,53],"289":[4,1,6,2],"297":[4,1,6,2],"305":[4,1,6,2],"313":[4,1,6,2],"321":[7,1,7,9],"329":[7,23,7,33],"337":[7,1,7,33],"345":[7,1,7,34],"353":[8,1,8,9],"361":[8,22,8,28],"369":[8,36,8,46],"377":[8,36,8,56],"385":[8,22,8,57],"387":[8,22,8,35],"393":[8,1,8,57],"401":[8,1,8,58],"409":[9,1,9,9],"417":[9,1,9,19],"425":[9,34,9,42],"433":[9,1,9,42],"441":[9,1,9,43],"449":[10,1,10,9],"457":[10,1,10,19],"465":[11,9,11,15],"473":[12,9,12,13],"481":[12,22,12,31],"489":[12,9,12,32],"491":[12,9,12,21],"497":[12,9,12,33],"505":[13,9,13,13],"513":[13,18,13,25],"521":[13,9,13,26],"523":[13,9,13,17],"529":[13,9,13,27],"537":[15,12,15,16],"545":[15,12,15,16],"553":[15,5,15,17],"561":[10,27,16,2],"569":[10,27,16,2],"577":[10,27,16,2],"585":[10,27,16,2],"593":[10,1,16,2],"601":[10,1,16,3],"609":[17,1,17,9],"617":[17,1,17,19],"625":[18,9,18,19],"633":[18,27,18,31],"641":[18,33,18,38],"649":[18,40,18,43],"657":[18,45,18,49],"665":[18,9,18,50],"667":[18,9,18,26],"673":[19,16,19,20],"681":[19,24,19,29],"689":[19,16,19,29],"697":[19,9,19,30],"705":[21,16,21,21],"713":[21,33,21,36],"721":[21,16,21,36],"729":[21,9,21,37],"737":[17,36,23,2],"745":[17,36,23,2],"753":[17,36,23,2],"761":[17,36,23,2],"769":[17,36,23,2],"777":[17,36,23,2],"785":[17,1,23,2],"793":[17,1,23,3],"801":[24,1,24,9],"809":[24,1,24,19],"817":[25,9,25,19],"825":[25,27,25,31],"833":[25,33,25,38],"841":[25,40,25,43],"849":[25,45,25,49],"857":[25,9,25,50],"859":[25,9,25,26],"865":[26,13,26,17],"873":[26,21,26,26],"881":[27,20,27,25],"889":[27,20,27,25],"897":[27,13,27,26],"905":[29,9,29,17],"913":[29,33,29,40],"921":[29,41,29,56],"929":[29,33,29,57],"937":[29,33,29,57],"945":[29,9,29,59],"953":[30,13,30,18],"961":[30,30,30,38],"969":[31,13,31,18],"977":[31,13,31,22],"985":[31,38,31,42],"993":[31,13,31,42],"1001":[31,13,31,43],"1009":[32,20,32,25],"1017":[32,20,32,25],"1025":[32,13,32,26],"1033":[34,13,34,18],"1041":[34,30,34,33],"1049":[35,20,35,25],"1057":[35,20,35,25],"1065":[35,13,35,26],"1073":[36,20,36,26],"1081":[36,36,36,41],"1089":[36,20,36,42],"1091":[36,20,36,35],"1097":[36,47,36,52],"1105":[36,62,36,67],"1113":[36,47,36,68],"1115":[36,47,36,61],"1121":[37,23,37,32],"1129":[37,33,37,43],"1137":[37,45,37,50],"1145":[37,52,37,56],"1153":[37,52,37,61],"1161":[37,19,37,62],"1169":[37,19,37,62],"1177":[37,13,37,63],"1185":[39,20,39,23],"1193":[39,36,39,40],"1201":[39,36,39,45],"1209":[39,20,39,46],"1211":[39,20,39,35],"1217":[39,20,39,46],"1225":[39,20,39,46],"1233":[40,21,40,24],"1241":[40,21,40,38],"1249":[40,41,40,44],"1257":[40,41,40,60],"1259":[40,41,40,58],"1265":[40,63,40,66],"1273":[40,21,40,66],"1281":[40,21,40,66],"1289":[41,19,41,24],"1297":[41,35,41,39],"1305":[41,41,41,45],"1313":[41,19,41,46],"1315":[41,19,41,34],"1321":[41,19,41,46],"1329":[41,19,41,46],"1337":[42,23,42,26],"1345":[42,23,42,34],"1353":[42,41,42,46],"1361":[42,19,42,47],"1363":[42,23,42,40],"1369":[42,19,42,47],"1377":[42,19,42,47],"1385":[43,9,43,12],"1393":[43,9,43,16],"1401":[43,32,43,36],"1409":[43,9,43,36],"1417":[43,9,43,37],"1425":[44,16,44,19],"1433":[44,16,44,19],"1441":[44,9,44,20],"1449":[46,9,46,14],"1457":[46,18,46,22],"1465":[47,16,47,21],"1473":[47,16,47,21],"1481":[47,9,47,22],"1489":[48,9,48,14],"1497":[48,26,48,29],"1505":[49,16,49,21],"1513":[49,16,49,21],"1521":[49,9,49,22],"1529":[50,9,50,14],"1537":[50,9,50,18],"1545":[51,13,51,18],"1553":[51,13,51,22],"1561":[51,34,51,37],"1569":[52,20,52,25],"1577":[52,20,52,29],"1585":[52,20,52,29],"1593":[52,13,52,30],"1601":[54,13,54,18],"1609":[54,13,54,22],"1617":[54,13,54,31],"1625":[54,43,54,51],"1633":[56,24,56,27],"1641":[56,48,56,53],"1649":[56,48,56,57],"1657":[56,48,56,68],"1659":[56,48,56,66],"1665":[56,24,56,69],"1667":[56,24,56,47],"1673":[56,24,56,69],"1681":[56,17,56,70],"1689":[57,15,58,14],"1697":[61,9,61,14],"1705":[61,9,61,23],"1713":[61,35,61,43],"1721":[63,20,63,23],"1729":[63,44,63,49],"1737":[63,44,63,60],"1739":[63,44,63,58],"1745":[63,20,63,61],"1747":[63,20,63,43],"1753":[63,20,63,61],"1761":[63,13,63,62],"1769":[65,23,65,32],"1777":[65,33,65,43],"1785":[65,45,65,50],"1793":[65,52,65,56],"1801":[65,52,65,61],"1809":[65,19,65,62],"1817":[65,19,65,62],"1825":[65,13,65,63],"1833":[64,11,66,10],"1841":[68,15,68,24],"1849":[68,25,68,35],"1857":[68,37,68,42],"1865":[68,44,68,48],"1873":[68,44,68,53],"1881":[68,11,68,54],"1889":[68,11,68,54],"1897":[68,5,68,55],"1905":[24,27,69,2],"1913":[24,27,69,2],"1921":[24,27,69,2],"1929":[24,27,69,2],"1937":[24,27,69,2],"1945":[24,27,69,2],"1953":[24,27,69,2],"1961":[24,27,69,2],"1969":[24,27,69,2],"1977":[24,27,69,2],"1985":[24,1,69,2],"1993":[24,1,69,3],"2001":[71,12,71,16],"2009":[71,22,71,25],"2017":[71,12,71,26],"2019":[71,12,71,21],"2025":[71,12,71,26],"2033":[71,5,71,27],"2041":[70,1,72,2],"2049":[70,1,72,2],"2057":[70,1,72,2],"2065":[73,1,73,9],"2073":[73,1,73,19],"2081":[73,43,73,48],"2089":[73,57,73,67],"2097":[73,57,73,77],"2105":[73,57,73,98],"2113":[74,12,74,24],"2121":[75,13,75,25],"2129":[76,12,76,24],"2137":[77,13,77,25],"2145":[73,100,78,2],"2153":[73,43,78,3],"2155":[73,43,73,56],"2161":[73,1,78,3],"2169":[73,1,78,4],"2177":[79,1,79,9],"2185":[79,1,79,19],"2193":[81,9,81,18],"2201":[81,9,81,25],"2209":[81,30,81,31],"2217":[82,19,82,23],"2225":[82,19,82,44],"2233":[82,45,82,57],"2241":[82,19,82,58],"2249":[82,19,82,58],"2257":[82,9,82,59],"2265":[83,14,83,21],"2273":[84,23,84,28],"2281":[84,29,84,42],"2289":[84,45,84,57],"2297":[84,60,84,77],"2305":[84,19,84,78],"2313":[84,19,84,78],"2321":[84,13,84,79],"2329":[85,16,85,23],"2337":[85,29,85,33],"2345":[85,35,85,38],"2353":[85,16,85,39],"2355":[85,16,85,28],"2361":[85,16,85,39],"2369":[85,9,85,40],"2377":[87,16,87,20],"2385":[87,26,87,38],"2393":[87,16,87,39],"2395":[87,16,87,25],"2401":[87,16,87,39],"2409":[87,9,87,40],"2417":[79,35,89,2],"2425":[79,35,89,2],"2433":[79,35,89,2],"2441":[79,35,89,2],"2449":[79,35,89,2],"2457":[79,35,89,2],"2465":[79,1,89,2],"2473":[79,1,89,3],"2481":[91,16,91,19],"2489":[91,12,91,21],"2497":[91,12,91,21],"2505":[91,5,91,22],"2513":[90,1,92,2],"2521":[90,1,92,2],"2529":[94,5,94,9],"2537":[94,5,94,13],"2545":[94,20,94,24],"2553":[94,5,94,24],"2561":[94,5,94,25],"2569":[95,12,95,13],"2577":[95,12,95,13],"2585":[95,5,95,14],"2593":[93,1,96,2],"2601":[93,1,96,2],"2609":[93,1,96,2],"2617":[97,1,97,7],"2625":[97,18,97,26],"2633":[97,1,97,26],"2641":[97,1,97,27],"2649":[1,1,97,27],"2657":[1,1,97,27],"2665":[1,1,97,27],"2673":[1,1,97,27],"2681":[1,1,97,27],"2689":[1,1,97,27],"2697":[1,1,97,27],"2705":[1,1,97,27],"2713":[4,1,6,2],"2721":[1,1,97,27],"2729":[70,1,72,2],"2737":[1,1,97,27],"2745":[90,1,92,2],"2753":[1,1,97,27],"2761":[93,1,96,2],"2769":[1,1,97,27],"2777":[4,1,6,2],"2785":[4,1,6,2],"2793":[11,5,14,6],"2801":[10,27,16,2],"2809":[10,27,16,2],"2817":[18,5,22,6],"2825":[17,36,23,2],"2833":[17,36,23,2],"2841":[26,9,28,10],"2849":[30,9,33,10],"2857":[36,16,38,10],"2865":[34,9,38,10],"2873":[40,21,40,66],"2881":[25,5,45,6],"2889":[46,5,47,22],"2897":[48,5,49,22],"2905":[51,9,53,10],"2913":[54,9,59,10],"2921":[50,5,60,6],"2929":[61,5,67,6],"2937":[24,27,69,2],"2945":[24,27,69,2],"2953":[70,1,72,2],"2961":[70,1,72,2],"2969":[83,9,84,79],"2977":[81,5,88,6],"2985":[79,35,89,2],"2993":[79,35,89,2],"3001":[90,1,92,2],"3009":[90,1,92,2],"3017":[93,1,96,2],"3025":[93,1,96,2],"3033":[1,1,97,27],"3041":[1,1,97,27],"nBranches":36,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/schema/objectid.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/schema/objectid_jalangi_.js","code":"/* eslint no-empty: 1 */\n\n/*!\n * Module dependencies.\n */\n\nvar SchemaType = require('../schematype'),\n    CastError = SchemaType.CastError,\n    oid = require('../types/objectid'),\n    utils = require('../utils'),\n    Document;\n\n/**\n * ObjectId SchemaType constructor.\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction ObjectId(key, options) {\n  SchemaType.call(this, key, options, 'ObjectID');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nObjectId.schemaName = 'ObjectId';\n\n/*!\n * Inherits from SchemaType.\n */\nObjectId.prototype = Object.create( SchemaType.prototype );\nObjectId.prototype.constructor = ObjectId;\n\n/**\n * Adds an auto-generated ObjectId default if turnOn is true.\n * @param {Boolean} turnOn auto generated ObjectId defaults\n * @api public\n * @return {SchemaType} this\n */\n\nObjectId.prototype.auto = function(turnOn) {\n  if (turnOn) {\n    this.default(defaultId);\n    this.set(resetId);\n  }\n\n  return this;\n};\n\n/**\n * Check required\n *\n * @api private\n */\n\nObjectId.prototype.checkRequired = function checkRequired(value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return null != value;\n  } else {\n    return value instanceof oid;\n  }\n};\n\n/**\n * Casts to ObjectId\n *\n * @param {Object} value\n * @param {Object} doc\n * @param {Boolean} init whether this is an initialization cast\n * @api private\n */\n\nObjectId.prototype.cast = function(value, doc, init) {\n  if (SchemaType._isRef(this, value, doc, init)) {\n    // wait! we may need to cast this to a document\n\n    if (null == value) {\n      return value;\n    }\n\n    // lazy load\n    Document || (Document = require('./../document'));\n\n    if (value instanceof Document) {\n      value.$__.wasPopulated = true;\n      return value;\n    }\n\n    // setting a populated path\n    if (value instanceof oid) {\n      return value;\n    } else if (Buffer.isBuffer(value) || !utils.isObject(value)) {\n      throw new CastError('ObjectId', value, this.path);\n    }\n\n    // Handle the case where user directly sets a populated\n    // path to a plain object; cast to the Model used in\n    // the population query.\n    var path = doc.$__fullPath(this.path);\n    var owner = doc.ownerDocument ? doc.ownerDocument() : doc;\n    var pop = owner.populated(path, true);\n    var ret = new pop.options.model(value);\n    ret.$__.wasPopulated = true;\n    return ret;\n  }\n\n  // If null or undefined\n  if (value == null) return value;\n\n  if (value instanceof oid)\n    return value;\n\n  if (value._id) {\n    if (value._id instanceof oid) {\n      return value._id;\n    }\n    if (value._id.toString instanceof Function) {\n      try {\n        return oid.createFromHexString(value._id.toString());\n      } catch (e) {}\n    }\n  }\n\n  if (value.toString instanceof Function) {\n    try {\n      return oid.createFromHexString(value.toString());\n    } catch (err) {\n      throw new CastError('ObjectId', value, this.path);\n    }\n  }\n\n  throw new CastError('ObjectId', value, this.path);\n};\n\n/*!\n * ignore\n */\n\nfunction handleSingle(val) {\n  return this.cast(val);\n}\n\nObjectId.prototype.$conditionalHandlers =\n  utils.options(SchemaType.prototype.$conditionalHandlers, {\n    '$gt': handleSingle,\n    '$gte': handleSingle,\n    '$lt': handleSingle,\n    '$lte': handleSingle\n  });\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} [val]\n * @api private\n */\n\nObjectId.prototype.castForQuery = function($conditional, val) {\n  var handler;\n  if (arguments.length === 2) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler)\n      throw new Error(\"Can't use \" + $conditional + \" with ObjectId.\");\n    return handler.call(this, val);\n  } else {\n    return this.cast($conditional);\n  }\n};\n\n/*!\n * ignore\n */\n\nfunction defaultId() {\n  return new oid();\n}\n\nfunction resetId(v) {\n  this.$__._id = null;\n  return v;\n}\n\n/*!\n * Module exports.\n */\n\nmodule.exports = ObjectId;\n"};
jalangiLabel3547:
    while (true) {
        try {
            J$.Se(2649, '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/schema/objectid_jalangi_.js', '/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/schema/objectid.js');
            function ObjectId(key, options) {
                jalangiLabel3539:
                    while (true) {
                        try {
                            J$.Fe(289, arguments.callee, this, arguments);
                            arguments = J$.N(297, 'arguments', arguments, 4);
                            key = J$.N(305, 'key', key, 4);
                            options = J$.N(313, 'options', options, 4);
                            J$.X1(281, J$.M(273, J$.R(233, 'SchemaType', SchemaType, 1), 'call', 0)(J$.R(241, 'this', this, 0), J$.R(249, 'key', key, 0), J$.R(257, 'options', options, 0), J$.T(265, 'ObjectID', 21, false)));
                        } catch (J$e) {
                            J$.Ex(2777, J$e);
                        } finally {
                            if (J$.Fr(2785))
                                continue jalangiLabel3539;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function handleSingle(val) {
                jalangiLabel3543:
                    while (true) {
                        try {
                            J$.Fe(2041, arguments.callee, this, arguments);
                            arguments = J$.N(2049, 'arguments', arguments, 4);
                            val = J$.N(2057, 'val', val, 4);
                            return J$.X1(2033, J$.Rt(2025, J$.M(2017, J$.R(2001, 'this', this, 0), 'cast', 0)(J$.R(2009, 'val', val, 0))));
                        } catch (J$e) {
                            J$.Ex(2953, J$e);
                        } finally {
                            if (J$.Fr(2961))
                                continue jalangiLabel3543;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function defaultId() {
                jalangiLabel3545:
                    while (true) {
                        try {
                            J$.Fe(2513, arguments.callee, this, arguments);
                            arguments = J$.N(2521, 'arguments', arguments, 4);
                            return J$.X1(2505, J$.Rt(2497, J$.F(2489, J$.R(2481, 'oid', oid, 1), 1)()));
                        } catch (J$e) {
                            J$.Ex(3001, J$e);
                        } finally {
                            if (J$.Fr(3009))
                                continue jalangiLabel3545;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function resetId(v) {
                jalangiLabel3546:
                    while (true) {
                        try {
                            J$.Fe(2593, arguments.callee, this, arguments);
                            arguments = J$.N(2601, 'arguments', arguments, 4);
                            v = J$.N(2609, 'v', v, 4);
                            J$.X1(2561, J$.P(2553, J$.G(2537, J$.R(2529, 'this', this, 0), '$__', 0), '_id', J$.T(2545, null, 25, false), 0));
                            return J$.X1(2585, J$.Rt(2577, J$.R(2569, 'v', v, 0)));
                        } catch (J$e) {
                            J$.Ex(3017, J$e);
                        } finally {
                            if (J$.Fr(3025))
                                continue jalangiLabel3546;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2657, '__secret__S$', __secret__S$, 0);
            J$.N(2665, '__secret__traits__', __secret__traits__, 0);
            J$.N(2673, 'SchemaType', SchemaType, 0);
            J$.N(2681, 'CastError', CastError, 0);
            J$.N(2689, 'oid', oid, 0);
            J$.N(2697, 'utils', utils, 0);
            J$.N(2705, 'Document', Document, 0);
            ObjectId = J$.N(2721, 'ObjectId', J$.T(2713, ObjectId, 12, false, 289), 0);
            handleSingle = J$.N(2737, 'handleSingle', J$.T(2729, handleSingle, 12, false, 2041), 0);
            defaultId = J$.N(2753, 'defaultId', J$.T(2745, defaultId, 12, false, 2513), 0);
            resetId = J$.N(2769, 'resetId', J$.T(2761, resetId, 12, false, 2593), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var SchemaType = J$.X1(177, J$.W(169, 'SchemaType', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, '../schematype', 21, false)), SchemaType, 3)), CastError = J$.X1(193, J$.W(185, 'CastError', J$.G(113, J$.R(105, 'SchemaType', SchemaType, 1), 'CastError', 0), CastError, 3)), oid = J$.X1(209, J$.W(201, 'oid', J$.F(137, J$.R(121, 'require', require, 2), 0)(J$.T(129, '../types/objectid', 21, false)), oid, 3)), utils = J$.X1(225, J$.W(217, 'utils', J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, '../utils', 21, false)), utils, 3)), Document;
            J$.X1(345, J$.P(337, J$.R(321, 'ObjectId', ObjectId, 1), 'schemaName', J$.T(329, 'ObjectId', 21, false), 0));
            J$.X1(401, J$.P(393, J$.R(353, 'ObjectId', ObjectId, 1), 'prototype', J$.M(385, J$.R(361, 'Object', Object, 2), 'create', 0)(J$.G(377, J$.R(369, 'SchemaType', SchemaType, 1), 'prototype', 0)), 0));
            J$.X1(441, J$.P(433, J$.G(417, J$.R(409, 'ObjectId', ObjectId, 1), 'prototype', 0), 'constructor', J$.R(425, 'ObjectId', ObjectId, 1), 0));
            J$.X1(601, J$.P(593, J$.G(457, J$.R(449, 'ObjectId', ObjectId, 1), 'prototype', 0), 'auto', J$.T(585, function (turnOn) {
                jalangiLabel3540:
                    while (true) {
                        try {
                            J$.Fe(561, arguments.callee, this, arguments);
                            arguments = J$.N(569, 'arguments', arguments, 4);
                            turnOn = J$.N(577, 'turnOn', turnOn, 4);
                            if (J$.X1(2793, J$.C(8, J$.R(465, 'turnOn', turnOn, 0)))) {
                                J$.X1(497, J$.M(489, J$.R(473, 'this', this, 0), 'default', 0)(J$.R(481, 'defaultId', defaultId, 1)));
                                J$.X1(529, J$.M(521, J$.R(505, 'this', this, 0), 'set', 0)(J$.R(513, 'resetId', resetId, 1)));
                            }
                            return J$.X1(553, J$.Rt(545, J$.R(537, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(2801, J$e);
                        } finally {
                            if (J$.Fr(2809))
                                continue jalangiLabel3540;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 561), 0));
            J$.X1(793, J$.P(785, J$.G(617, J$.R(609, 'ObjectId', ObjectId, 1), 'prototype', 0), 'checkRequired', J$.T(777, function checkRequired(value, doc) {
                jalangiLabel3541:
                    while (true) {
                        try {
                            J$.Fe(737, arguments.callee, this, arguments);
                            arguments = J$.N(745, 'arguments', arguments, 4);
                            checkRequired = J$.N(753, 'checkRequired', checkRequired, 0);
                            value = J$.N(761, 'value', value, 4);
                            doc = J$.N(769, 'doc', doc, 4);
                            if (J$.X1(2817, J$.C(16, J$.M(665, J$.R(625, 'SchemaType', SchemaType, 1), '_isRef', 0)(J$.R(633, 'this', this, 0), J$.R(641, 'value', value, 0), J$.R(649, 'doc', doc, 0), J$.T(657, true, 23, false))))) {
                                return J$.X1(697, J$.Rt(689, J$.B(10, '!=', J$.T(673, null, 25, false), J$.R(681, 'value', value, 0), 0)));
                            } else {
                                return J$.X1(729, J$.Rt(721, J$.B(18, 'instanceof', J$.R(705, 'value', value, 0), J$.R(713, 'oid', oid, 1), 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(2825, J$e);
                        } finally {
                            if (J$.Fr(2833))
                                continue jalangiLabel3541;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 737), 0));
            J$.X1(1993, J$.P(1985, J$.G(809, J$.R(801, 'ObjectId', ObjectId, 1), 'prototype', 0), 'cast', J$.T(1977, function (value, doc, init) {
                jalangiLabel3542:
                    while (true) {
                        try {
                            J$.Fe(1905, arguments.callee, this, arguments);
                            arguments = J$.N(1913, 'arguments', arguments, 4);
                            value = J$.N(1921, 'value', value, 4);
                            doc = J$.N(1929, 'doc', doc, 4);
                            init = J$.N(1937, 'init', init, 4);
                            J$.N(1945, 'path', path, 0);
                            J$.N(1953, 'owner', owner, 0);
                            J$.N(1961, 'pop', pop, 0);
                            J$.N(1969, 'ret', ret, 0);
                            if (J$.X1(2881, J$.C(80, J$.M(857, J$.R(817, 'SchemaType', SchemaType, 1), '_isRef', 0)(J$.R(825, 'this', this, 0), J$.R(833, 'value', value, 0), J$.R(841, 'doc', doc, 0), J$.R(849, 'init', init, 0))))) {
                                if (J$.X1(2841, J$.C(24, J$.B(26, '==', J$.T(865, null, 25, false), J$.R(873, 'value', value, 0), 0)))) {
                                    return J$.X1(897, J$.Rt(889, J$.R(881, 'value', value, 0)));
                                }
                                J$.X1(945, J$.C(32, J$.R(905, 'Document', Document, 1)) ? J$._() : Document = J$.W(937, 'Document', J$.F(929, J$.R(913, 'require', require, 2), 0)(J$.T(921, './../document', 21, false)), Document, 2));
                                if (J$.X1(2849, J$.C(40, J$.B(34, 'instanceof', J$.R(953, 'value', value, 0), J$.R(961, 'Document', Document, 1), 0)))) {
                                    J$.X1(1001, J$.P(993, J$.G(977, J$.R(969, 'value', value, 0), '$__', 0), 'wasPopulated', J$.T(985, true, 23, false), 0));
                                    return J$.X1(1025, J$.Rt(1017, J$.R(1009, 'value', value, 0)));
                                }
                                if (J$.X1(2865, J$.C(64, J$.B(42, 'instanceof', J$.R(1033, 'value', value, 0), J$.R(1041, 'oid', oid, 1), 0)))) {
                                    return J$.X1(1065, J$.Rt(1057, J$.R(1049, 'value', value, 0)));
                                } else if (J$.X1(2857, J$.C(56, J$.C(48, J$.M(1089, J$.R(1073, 'Buffer', Buffer, 2), 'isBuffer', 0)(J$.R(1081, 'value', value, 0))) ? J$._() : J$.U(50, '!', J$.M(1113, J$.R(1097, 'utils', utils, 1), 'isObject', 0)(J$.R(1105, 'value', value, 0)))))) {
                                    throw J$.X1(1177, J$.Th(1169, J$.F(1161, J$.R(1121, 'CastError', CastError, 1), 1)(J$.T(1129, 'ObjectId', 21, false), J$.R(1137, 'value', value, 0), J$.G(1153, J$.R(1145, 'this', this, 0), 'path', 0))));
                                }
                                var path = J$.X1(1225, J$.W(1217, 'path', J$.M(1209, J$.R(1185, 'doc', doc, 0), '$__fullPath', 0)(J$.G(1201, J$.R(1193, 'this', this, 0), 'path', 0)), path, 1));
                                var owner = J$.X1(1281, J$.W(1273, 'owner', J$.X1(2873, J$.C(72, J$.G(1241, J$.R(1233, 'doc', doc, 0), 'ownerDocument', 0))) ? J$.M(1257, J$.R(1249, 'doc', doc, 0), 'ownerDocument', 0)() : J$.R(1265, 'doc', doc, 0), owner, 1));
                                var pop = J$.X1(1329, J$.W(1321, 'pop', J$.M(1313, J$.R(1289, 'owner', owner, 0), 'populated', 0)(J$.R(1297, 'path', path, 0), J$.T(1305, true, 23, false)), pop, 1));
                                var ret = J$.X1(1377, J$.W(1369, 'ret', J$.M(1361, J$.G(1345, J$.R(1337, 'pop', pop, 0), 'options', 0), 'model', 2)(J$.R(1353, 'value', value, 0)), ret, 1));
                                J$.X1(1417, J$.P(1409, J$.G(1393, J$.R(1385, 'ret', ret, 0), '$__', 0), 'wasPopulated', J$.T(1401, true, 23, false), 0));
                                return J$.X1(1441, J$.Rt(1433, J$.R(1425, 'ret', ret, 0)));
                            }
                            if (J$.X1(2889, J$.C(88, J$.B(58, '==', J$.R(1449, 'value', value, 0), J$.T(1457, null, 25, false), 0))))
                                return J$.X1(1481, J$.Rt(1473, J$.R(1465, 'value', value, 0)));
                            if (J$.X1(2897, J$.C(96, J$.B(66, 'instanceof', J$.R(1489, 'value', value, 0), J$.R(1497, 'oid', oid, 1), 0))))
                                return J$.X1(1521, J$.Rt(1513, J$.R(1505, 'value', value, 0)));
                            if (J$.X1(2921, J$.C(120, J$.G(1537, J$.R(1529, 'value', value, 0), '_id', 0)))) {
                                if (J$.X1(2905, J$.C(104, J$.B(74, 'instanceof', J$.G(1553, J$.R(1545, 'value', value, 0), '_id', 0), J$.R(1561, 'oid', oid, 1), 0)))) {
                                    return J$.X1(1593, J$.Rt(1585, J$.G(1577, J$.R(1569, 'value', value, 0), '_id', 0)));
                                }
                                if (J$.X1(2913, J$.C(112, J$.B(82, 'instanceof', J$.G(1617, J$.G(1609, J$.R(1601, 'value', value, 0), '_id', 0), 'toString', 0), J$.R(1625, 'Function', Function, 2), 0)))) {
                                    try {
                                        return J$.X1(1681, J$.Rt(1673, J$.M(1665, J$.R(1633, 'oid', oid, 1), 'createFromHexString', 0)(J$.M(1657, J$.G(1649, J$.R(1641, 'value', value, 0), '_id', 0), 'toString', 0)())));
                                    } catch (e) {
                                        e = J$.N(1689, 'e', e, 1);
                                    }
                                }
                            }
                            if (J$.X1(2929, J$.C(128, J$.B(90, 'instanceof', J$.G(1705, J$.R(1697, 'value', value, 0), 'toString', 0), J$.R(1713, 'Function', Function, 2), 0)))) {
                                try {
                                    return J$.X1(1761, J$.Rt(1753, J$.M(1745, J$.R(1721, 'oid', oid, 1), 'createFromHexString', 0)(J$.M(1737, J$.R(1729, 'value', value, 0), 'toString', 0)())));
                                } catch (err) {
                                    err = J$.N(1833, 'err', err, 1);
                                    throw J$.X1(1825, J$.Th(1817, J$.F(1809, J$.R(1769, 'CastError', CastError, 1), 1)(J$.T(1777, 'ObjectId', 21, false), J$.R(1785, 'value', value, 0), J$.G(1801, J$.R(1793, 'this', this, 0), 'path', 0))));
                                }
                            }
                            throw J$.X1(1897, J$.Th(1889, J$.F(1881, J$.R(1841, 'CastError', CastError, 1), 1)(J$.T(1849, 'ObjectId', 21, false), J$.R(1857, 'value', value, 0), J$.G(1873, J$.R(1865, 'this', this, 0), 'path', 0))));
                        } catch (J$e) {
                            J$.Ex(2937, J$e);
                        } finally {
                            if (J$.Fr(2945))
                                continue jalangiLabel3542;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1905), 0));
            J$.X1(2169, J$.P(2161, J$.G(2073, J$.R(2065, 'ObjectId', ObjectId, 1), 'prototype', 0), '$conditionalHandlers', J$.M(2153, J$.R(2081, 'utils', utils, 1), 'options', 0)(J$.G(2105, J$.G(2097, J$.R(2089, 'SchemaType', SchemaType, 1), 'prototype', 0), '$conditionalHandlers', 0), J$.T(2145, {
                '$gt': J$.R(2113, 'handleSingle', handleSingle, 1),
                '$gte': J$.R(2121, 'handleSingle', handleSingle, 1),
                '$lt': J$.R(2129, 'handleSingle', handleSingle, 1),
                '$lte': J$.R(2137, 'handleSingle', handleSingle, 1)
            }, 11, false)), 0));
            J$.X1(2473, J$.P(2465, J$.G(2185, J$.R(2177, 'ObjectId', ObjectId, 1), 'prototype', 0), 'castForQuery', J$.T(2457, function ($conditional, val) {
                jalangiLabel3544:
                    while (true) {
                        try {
                            J$.Fe(2417, arguments.callee, this, arguments);
                            arguments = J$.N(2425, 'arguments', arguments, 4);
                            $conditional = J$.N(2433, '$conditional', $conditional, 4);
                            val = J$.N(2441, 'val', val, 4);
                            J$.N(2449, 'handler', handler, 0);
                            var handler;
                            if (J$.X1(2977, J$.C(144, J$.B(98, '===', J$.G(2201, J$.R(2193, 'arguments', arguments, 2), 'length', 0), J$.T(2209, 2, 22, false), 0)))) {
                                J$.X1(2257, handler = J$.W(2249, 'handler', J$.G(2241, J$.G(2225, J$.R(2217, 'this', this, 0), '$conditionalHandlers', 0), J$.R(2233, '$conditional', $conditional, 0), 4), handler, 0));
                                if (J$.X1(2969, J$.C(136, J$.U(106, '!', J$.R(2265, 'handler', handler, 0)))))
                                    throw J$.X1(2321, J$.Th(2313, J$.F(2305, J$.R(2273, 'Error', Error, 2), 1)(J$.B(122, '+', J$.B(114, '+', J$.T(2281, 'Can\'t use ', 21, false), J$.R(2289, '$conditional', $conditional, 0), 0), J$.T(2297, ' with ObjectId.', 21, false), 0))));
                                return J$.X1(2369, J$.Rt(2361, J$.M(2353, J$.R(2329, 'handler', handler, 0), 'call', 0)(J$.R(2337, 'this', this, 0), J$.R(2345, 'val', val, 0))));
                            } else {
                                return J$.X1(2409, J$.Rt(2401, J$.M(2393, J$.R(2377, 'this', this, 0), 'cast', 0)(J$.R(2385, '$conditional', $conditional, 0))));
                            }
                        } catch (J$e) {
                            J$.Ex(2985, J$e);
                        } finally {
                            if (J$.Fr(2993))
                                continue jalangiLabel3544;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2417), 0));
            J$.X1(2641, J$.P(2633, J$.R(2617, 'module', module, 2), 'exports', J$.R(2625, 'ObjectId', ObjectId, 1), 0));
        } catch (J$e) {
            J$.Ex(3033, J$e);
        } finally {
            if (J$.Sr(3041)) {
                J$.L();
                continue jalangiLabel3547;
            } else {
                J$.L();
                break jalangiLabel3547;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
