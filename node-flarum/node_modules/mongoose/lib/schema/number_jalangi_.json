{"8":[19,16,19,67],"9":[1,20,1,27],"10":[17,16,17,29],"16":[16,9,16,50],"17":[1,28,1,32],"18":[19,16,19,28],"24":[23,9,23,26],"25":[1,20,1,33],"26":[19,16,19,40],"32":[29,19,29,54],"33":[1,20,1,33],"34":[19,44,19,67],"40":[33,24,33,47],"41":[1,20,1,33],"42":[25,20,25,52],"48":[28,9,28,22],"49":[2,26,2,38],"50":[28,9,28,22],"56":[43,9,43,26],"57":[2,26,2,45],"58":[33,24,33,33],"64":[49,19,49,54],"65":[2,26,2,45],"66":[33,37,33,47],"72":[53,24,53,47],"73":[2,26,2,45],"74":[45,20,45,52],"80":[48,9,48,22],"81":[3,18,3,25],"82":[48,9,48,22],"88":[64,13,64,26],"89":[3,26,3,41],"90":[53,24,53,33],"96":[67,9,67,58],"97":[3,18,3,42],"98":[53,37,53,47],"104":[68,13,68,38],"105":[3,18,3,42],"106":[64,13,64,26],"112":[74,20,74,68],"113":[3,18,3,42],"114":[68,13,68,38],"120":[74,20,74,68],"121":[4,17,4,27],"122":[72,25,72,37],"128":[72,13,72,37],"129":[4,17,4,37],"130":[72,13,72,37],"136":[78,21,78,38],"137":[4,17,4,37],"138":[74,46,74,68],"144":[63,9,63,50],"145":[4,17,4,37],"146":[85,9,85,20],"152":[84,15,84,33],"153":[5,29,5,36],"154":[86,13,86,25],"160":[84,15,84,33],"161":[5,37,5,58],"162":[88,13,88,23],"168":[86,13,86,25],"169":[5,29,5,59],"170":[90,13,90,23],"176":[88,13,88,23],"177":[5,29,5,59],"178":[90,13,90,36],"184":[90,13,90,64],"185":[5,29,5,59],"186":[90,40,90,50],"192":[90,13,90,64],"193":[6,21,6,28],"194":[90,40,90,64],"200":[93,13,93,34],"201":[6,29,6,39],"202":[93,13,93,34],"208":[95,13,95,35],"209":[6,21,6,40],"210":[95,25,95,35],"216":[97,13,97,48],"217":[6,21,6,49],"218":[95,13,95,35],"224":[97,13,97,81],"225":[6,21,6,49],"226":[97,29,97,48],"232":[97,13,97,81],"233":[6,21,6,49],"234":[97,52,97,81],"240":[85,9,85,20],"241":[7,13,7,20],"242":[108,9,108,28],"248":[108,9,108,28],"249":[7,21,7,31],"250":[128,9,128,31],"256":[130,13,130,21],"257":[7,13,7,32],"258":[130,13,130,21],"264":[135,16,135,27],"265":[7,13,7,32],"266":[131,29,131,57],"272":[128,9,128,31],"273":[7,13,7,32],"274":[131,29,131,75],"281":[10,5,10,15],"282":[135,16,135,27],"289":[10,21,10,25],"297":[10,27,10,30],"305":[10,32,10,39],"313":[10,41,10,49],"321":[10,5,10,50],"323":[10,5,10,20],"329":[10,5,10,51],"337":[9,1,11,2],"345":[9,1,11,2],"353":[9,1,11,2],"361":[9,1,11,2],"369":[12,1,12,13],"377":[12,27,12,35],"385":[12,1,12,35],"393":[12,1,12,36],"401":[13,1,13,13],"409":[13,26,13,32],"417":[13,40,13,50],"425":[13,40,13,60],"433":[13,26,13,61],"435":[13,26,13,39],"441":[13,1,13,61],"449":[13,1,13,62],"457":[14,1,14,13],"465":[14,1,14,23],"473":[14,38,14,50],"481":[14,1,14,50],"489":[14,1,14,51],"497":[15,1,15,13],"505":[15,1,15,23],"513":[16,9,16,19],"521":[16,27,16,31],"529":[16,33,16,38],"537":[16,40,16,43],"545":[16,45,16,49],"553":[16,9,16,50],"555":[16,9,16,26],"561":[17,16,17,20],"569":[17,24,17,29],"577":[17,16,17,29],"585":[17,9,17,30],"593":[19,23,19,28],"601":[19,32,19,40],"609":[19,44,19,49],"617":[19,61,19,67],"625":[19,16,19,67],"633":[19,9,19,68],"641":[15,40,21,2],"649":[15,40,21,2],"657":[15,40,21,2],"665":[15,40,21,2],"673":[15,40,21,2],"681":[15,40,21,2],"689":[15,1,21,2],"697":[15,1,21,3],"705":[22,1,22,13],"713":[22,1,22,23],"721":[23,9,23,13],"729":[23,9,23,26],"737":[24,9,24,13],"745":[24,27,24,31],"753":[24,27,24,42],"761":[25,20,25,21],"769":[25,20,25,31],"777":[25,35,25,39],"785":[25,35,25,52],"793":[25,20,25,52],"801":[25,13,25,53],"809":[24,50,26,10],"817":[24,50,26,10],"825":[24,50,26,10],"833":[24,50,26,10],"841":[26,12,26,16],"849":[24,27,26,17],"851":[24,27,24,49],"857":[24,9,26,17],"865":[24,9,26,18],"873":[28,9,28,13],"881":[28,17,28,22],"889":[29,19,29,26],"897":[29,30,29,43],"905":[29,30,29,50],"913":[29,30,29,54],"921":[29,19,29,54],"929":[29,19,29,54],"937":[30,15,30,18],"945":[30,27,30,34],"953":[30,36,30,41],"961":[30,15,30,42],"963":[30,15,30,26],"969":[30,15,30,42],"977":[30,9,30,43],"985":[31,9,31,13],"993":[31,9,31,24],"1001":[32,24,32,28],"1009":[33,24,33,25],"1017":[33,29,33,33],"1025":[33,37,33,38],"1033":[33,42,33,47],"1041":[33,24,33,47],"1049":[33,17,33,48],"1057":[32,44,34,14],"1065":[32,44,34,14],"1073":[32,44,34,14],"1081":[32,44,34,14],"1089":[32,24,34,14],"1097":[35,22,35,25],"1105":[36,19,36,24],"1113":[37,18,37,23],"1121":[31,30,38,10],"1129":[31,9,38,11],"1131":[31,9,31,29],"1137":[31,9,38,12],"1145":[40,12,40,16],"1153":[40,12,40,16],"1161":[40,5,40,17],"1169":[22,30,41,2],"1177":[22,30,41,2],"1185":[22,30,41,2],"1193":[22,30,41,2],"1201":[22,30,41,2],"1209":[22,30,41,2],"1217":[22,1,41,2],"1225":[22,1,41,3],"1233":[42,1,42,13],"1241":[42,1,42,23],"1249":[43,9,43,13],"1257":[43,9,43,26],"1265":[44,9,44,13],"1273":[44,27,44,31],"1281":[44,27,44,42],"1289":[45,20,45,21],"1297":[45,20,45,31],"1305":[45,35,45,39],"1313":[45,35,45,52],"1321":[45,20,45,52],"1329":[45,13,45,53],"1337":[44,50,46,10],"1345":[44,50,46,10],"1353":[44,50,46,10],"1361":[44,50,46,10],"1369":[46,12,46,16],"1377":[44,27,46,17],"1379":[44,27,44,49],"1385":[44,9,46,17],"1393":[44,9,46,18],"1401":[48,9,48,13],"1409":[48,17,48,22],"1417":[49,19,49,26],"1425":[49,30,49,43],"1433":[49,30,49,50],"1441":[49,30,49,54],"1449":[49,19,49,54],"1457":[49,19,49,54],"1465":[50,15,50,18],"1473":[50,27,50,34],"1481":[50,36,50,41],"1489":[50,15,50,42],"1491":[50,15,50,26],"1497":[50,15,50,42],"1505":[50,9,50,43],"1513":[51,9,51,13],"1521":[51,9,51,24],"1529":[52,24,52,28],"1537":[53,24,53,25],"1545":[53,29,53,33],"1553":[53,37,53,38],"1561":[53,42,53,47],"1569":[53,24,53,47],"1577":[53,17,53,48],"1585":[52,44,54,14],"1593":[52,44,54,14],"1601":[52,44,54,14],"1609":[52,44,54,14],"1617":[52,24,54,14],"1625":[55,22,55,25],"1633":[56,19,56,24],"1641":[57,18,57,23],"1649":[51,30,58,10],"1657":[51,9,58,11],"1659":[51,9,51,29],"1665":[51,9,58,12],"1673":[60,12,60,16],"1681":[60,12,60,16],"1689":[60,5,60,17],"1697":[42,30,61,2],"1705":[42,30,61,2],"1713":[42,30,61,2],"1721":[42,30,61,2],"1729":[42,30,61,2],"1737":[42,30,61,2],"1745":[42,1,61,2],"1753":[42,1,61,3],"1761":[62,1,62,13],"1769":[62,1,62,23],"1777":[63,9,63,19],"1785":[63,27,63,31],"1793":[63,33,63,38],"1801":[63,40,63,43],"1809":[63,45,63,49],"1817":[63,9,63,50],"1819":[63,9,63,26],"1825":[64,13,64,17],"1833":[64,21,64,26],"1841":[65,20,65,25],"1849":[65,20,65,25],"1857":[65,13,65,26],"1865":[67,9,67,17],"1873":[67,33,67,40],"1881":[67,41,67,56],"1889":[67,33,67,57],"1897":[67,33,67,57],"1905":[67,9,67,59],"1913":[68,13,68,18],"1921":[68,30,68,38],"1929":[69,13,69,18],"1937":[69,13,69,22],"1945":[69,38,69,42],"1953":[69,13,69,42],"1961":[69,13,69,43],"1969":[70,20,70,25],"1977":[70,20,70,25],"1985":[70,13,70,26],"1993":[72,13,72,21],"2001":[72,32,72,37],"2009":[73,20,73,25],"2017":[73,20,73,25],"2025":[73,13,73,26],"2033":[74,20,74,26],"2041":[74,36,74,41],"2049":[74,20,74,42],"2051":[74,20,74,35],"2057":[74,47,74,52],"2065":[74,62,74,67],"2073":[74,47,74,68],"2075":[74,47,74,61],"2081":[75,23,75,32],"2089":[75,33,75,41],"2097":[75,43,75,48],"2105":[75,50,75,54],"2113":[75,50,75,59],"2121":[75,19,75,60],"2129":[75,19,75,60],"2137":[75,13,75,61],"2145":[77,20,77,23],"2153":[77,36,77,40],"2161":[77,36,77,45],"2169":[77,20,77,46],"2171":[77,20,77,35],"2177":[77,20,77,46],"2185":[77,20,77,46],"2193":[78,21,78,24],"2201":[78,21,78,38],"2209":[78,41,78,44],"2217":[78,41,78,60],"2219":[78,41,78,58],"2225":[78,63,78,66],"2233":[78,21,78,66],"2241":[78,21,78,66],"2249":[79,19,79,24],"2257":[79,35,79,39],"2265":[79,41,79,45],"2273":[79,19,79,46],"2275":[79,19,79,34],"2281":[79,19,79,46],"2289":[79,19,79,46],"2297":[80,23,80,26],"2305":[80,23,80,34],"2313":[80,41,80,46],"2321":[80,19,80,47],"2323":[80,23,80,40],"2329":[80,19,80,47],"2337":[80,19,80,47],"2345":[81,9,81,12],"2353":[81,9,81,16],"2361":[81,32,81,36],"2369":[81,9,81,36],"2377":[81,9,81,37],"2385":[82,16,82,19],"2393":[82,16,82,19],"2401":[82,9,82,20],"2409":[84,15,84,20],"2417":[84,24,84,29],"2425":[84,24,84,33],"2433":[84,36,84,41],"2441":[84,36,84,45],"2449":[84,48,84,53],"2457":[84,15,84,53],"2465":[84,15,84,53],"2473":[85,10,85,15],"2481":[85,16,85,19],"2489":[85,10,85,20],"2497":[86,13,86,17],"2505":[86,22,86,25],"2513":[87,20,87,23],"2521":[87,20,87,23],"2529":[87,13,87,24],"2537":[88,13,88,15],"2545":[88,20,88,23],"2553":[89,20,89,24],"2561":[89,20,89,24],"2569":[89,13,89,25],"2577":[90,20,90,23],"2585":[90,28,90,36],"2593":[90,47,90,50],"2601":[90,55,90,64],"2609":[91,19,91,25],"2617":[91,26,91,29],"2625":[91,19,91,30],"2633":[91,19,91,30],"2641":[91,13,91,31],"2649":[93,13,93,16],"2657":[93,28,93,34],"2665":[94,20,94,23],"2673":[94,20,94,23],"2681":[94,13,94,24],"2689":[95,13,95,21],"2697":[95,32,95,35],"2705":[96,20,96,23],"2713":[96,20,96,23],"2721":[96,13,96,24],"2729":[97,13,97,16],"2737":[97,13,97,25],"2745":[97,30,97,35],"2753":[97,44,97,47],"2761":[97,30,97,48],"2763":[97,30,97,43],"2769":[97,52,97,55],"2777":[97,52,97,66],"2779":[97,52,97,64],"2785":[97,70,97,76],"2793":[97,77,97,80],"2801":[97,70,97,81],"2809":[98,24,98,30],"2817":[98,31,98,34],"2825":[98,20,98,35],"2833":[98,20,98,35],"2841":[98,13,98,36],"2849":[101,15,101,24],"2857":[101,25,101,33],"2865":[101,35,101,40],"2873":[101,42,101,46],"2881":[101,42,101,51],"2889":[101,11,101,52],"2897":[101,11,101,52],"2905":[101,5,101,53],"2913":[62,31,102,2],"2921":[62,31,102,2],"2929":[62,31,102,2],"2937":[62,31,102,2],"2945":[62,31,102,2],"2953":[62,31,102,2],"2961":[62,31,102,2],"2969":[62,31,102,2],"2977":[62,31,102,2],"2985":[62,31,102,2],"2993":[62,31,102,2],"3001":[62,1,102,2],"3009":[62,1,102,3],"3017":[104,12,104,16],"3025":[104,22,104,25],"3033":[104,12,104,26],"3035":[104,12,104,21],"3041":[104,12,104,26],"3049":[104,5,104,27],"3057":[103,1,105,2],"3065":[103,1,105,2],"3073":[103,1,105,2],"3081":[107,16,107,20],"3089":[107,16,107,20],"3097":[107,16,107,20],"3105":[108,10,108,15],"3113":[108,24,108,27],"3121":[108,10,108,28],"3123":[108,10,108,23],"3129":[109,17,109,21],"3137":[109,27,109,30],"3145":[109,17,109,31],"3147":[109,17,109,26],"3153":[109,16,109,32],"3161":[109,16,109,32],"3169":[109,9,109,33],"3177":[111,12,111,15],"3185":[112,16,112,20],"3193":[112,26,112,27],"3201":[112,16,112,28],"3203":[112,16,112,25],"3209":[112,16,112,28],"3217":[112,9,112,29],"3225":[111,20,113,6],"3233":[111,20,113,6],"3241":[111,20,113,6],"3249":[111,20,113,6],"3257":[111,12,113,7],"3259":[111,12,111,19],"3265":[111,12,113,7],"3273":[111,5,113,8],"3281":[106,1,114,2],"3289":[106,1,114,2],"3297":[106,1,114,2],"3305":[106,1,114,2],"3313":[115,1,115,13],"3321":[115,1,115,23],"3329":[115,47,115,52],"3337":[115,61,115,71],"3345":[115,61,115,81],"3353":[115,61,115,102],"3361":[116,22,116,43],"3369":[117,22,117,43],"3377":[118,20,118,41],"3385":[119,20,119,41],"3393":[120,12,120,24],"3401":[121,13,121,25],"3409":[122,12,122,24],"3417":[123,13,123,25],"3425":[124,13,124,24],"3433":[115,104,125,2],"3441":[115,47,125,3],"3443":[115,47,115,60],"3449":[115,1,125,3],"3457":[115,1,125,4],"3465":[126,1,126,13],"3473":[126,1,126,23],"3481":[128,9,128,18],"3489":[128,9,128,25],"3497":[128,30,128,31],"3505":[129,19,129,23],"3513":[129,19,129,44],"3521":[129,45,129,57],"3529":[129,19,129,58],"3537":[129,19,129,58],"3545":[129,9,129,59],"3553":[130,14,130,21],"3561":[131,23,131,28],"3569":[131,29,131,42],"3577":[131,45,131,57],"3585":[131,60,131,75],"3593":[131,19,131,76],"3601":[131,19,131,76],"3609":[131,13,131,77],"3617":[132,16,132,23],"3625":[132,29,132,33],"3633":[132,35,132,38],"3641":[132,16,132,39],"3643":[132,16,132,28],"3649":[132,16,132,39],"3657":[132,9,132,40],"3665":[134,15,134,19],"3673":[134,25,134,37],"3681":[134,15,134,38],"3683":[134,15,134,24],"3689":[134,15,134,38],"3697":[134,9,134,39],"3705":[135,16,135,19],"3713":[135,23,135,27],"3721":[135,30,135,33],"3729":[135,36,135,39],"3737":[135,16,135,39],"3745":[135,9,135,40],"3753":[126,39,137,2],"3761":[126,39,137,2],"3769":[126,39,137,2],"3777":[126,39,137,2],"3785":[126,39,137,2],"3793":[126,39,137,2],"3801":[126,1,137,2],"3809":[126,1,137,3],"3817":[138,1,138,7],"3825":[138,18,138,30],"3833":[138,1,138,30],"3841":[138,1,138,31],"3849":[1,1,138,31],"3857":[1,1,138,31],"3865":[1,1,138,31],"3873":[1,1,138,31],"3881":[1,1,138,31],"3889":[1,1,138,31],"3897":[1,1,138,31],"3905":[1,1,138,31],"3913":[1,1,138,31],"3921":[9,1,11,2],"3929":[1,1,138,31],"3937":[103,1,105,2],"3945":[1,1,138,31],"3953":[106,1,114,2],"3961":[1,1,138,31],"3969":[9,1,11,2],"3977":[9,1,11,2],"3985":[16,5,20,6],"3993":[15,40,21,2],"4001":[15,40,21,2],"4009":[24,50,26,10],"4017":[24,50,26,10],"4025":[23,5,27,6],"4033":[32,44,34,14],"4041":[32,44,34,14],"4049":[28,5,39,6],"4057":[22,30,41,2],"4065":[22,30,41,2],"4073":[44,50,46,10],"4081":[44,50,46,10],"4089":[43,5,47,6],"4097":[52,44,54,14],"4105":[52,44,54,14],"4113":[48,5,59,6],"4121":[42,30,61,2],"4129":[42,30,61,2],"4137":[64,9,66,10],"4145":[68,9,71,10],"4153":[74,16,76,10],"4161":[72,9,76,10],"4169":[78,21,78,66],"4177":[63,5,83,6],"4185":[84,15,84,53],"4193":[86,9,87,24],"4201":[88,9,89,25],"4209":[90,9,92,10],"4217":[93,9,94,24],"4225":[95,9,96,24],"4233":[97,9,99,10],"4241":[85,5,100,6],"4249":[62,31,102,2],"4257":[62,31,102,2],"4265":[103,1,105,2],"4273":[103,1,105,2],"4281":[108,5,110,6],"4289":[111,20,113,6],"4297":[111,20,113,6],"4305":[106,1,114,2],"4313":[106,1,114,2],"4321":[130,9,131,77],"4329":[135,16,135,39],"4337":[128,5,136,6],"4345":[126,39,137,2],"4353":[126,39,137,2],"4361":[1,1,138,31],"4369":[1,1,138,31],"nBranches":68,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/schema/number.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/schema/number_jalangi_.js","code":"/*!\n * Module requirements.\n */\n\nvar SchemaType = require('../schematype');\nvar CastError = SchemaType.CastError;\nvar handleBitwiseOperator = require('./operators/bitwise');\nvar errorMessages = require('../error').messages;\nvar utils = require('../utils');\nvar Document;\n\n/**\n * Number SchemaType constructor.\n *\n * @param {String} key\n * @param {Object} options\n * @inherits SchemaType\n * @api public\n */\n\nfunction SchemaNumber(key, options) {\n  SchemaType.call(this, key, options, 'Number');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api public\n */\nSchemaNumber.schemaName = 'Number';\n\n/*!\n * Inherits from SchemaType.\n */\nSchemaNumber.prototype = Object.create( SchemaType.prototype );\nSchemaNumber.prototype.constructor = SchemaNumber;\n\n/**\n * Required validator for number\n *\n * @api private\n */\n\nSchemaNumber.prototype.checkRequired = function checkRequired(value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return null != value;\n  } else {\n    return typeof value == 'number' || value instanceof Number;\n  }\n};\n\n/**\n * Sets a minimum number validator.\n *\n * ####Example:\n *\n *     var s = new Schema({ n: { type: Number, min: 10 })\n *     var M = db.model('M', s)\n *     var m = new M({ n: 9 })\n *     m.save(function (err) {\n *       console.error(err) // validator error\n *       m.n = 10;\n *       m.save() // success\n *     })\n *\n *     // custom error messages\n *     // We can also use the special {MIN} token which will be replaced with the invalid value\n *     var min = [10, 'The value of path `{PATH}` ({VALUE}) is beneath the limit ({MIN}).'];\n *     var schema = new Schema({ n: { type: Number, min: min })\n *     var M = mongoose.model('Measurement', schema);\n *     var s= new M({ n: 4 });\n *     s.validate(function (err) {\n *       console.log(String(err)) // ValidationError: The value of path `n` (4) is beneath the limit (10).\n *     })\n *\n * @param {Number} value minimum number\n * @param {String} [message] optional custom error message\n * @return {SchemaType} this\n * @see Customized Error Messages #error_messages_MongooseError-messages\n * @api public\n */\n\nSchemaNumber.prototype.min = function(value, message) {\n  if (this.minValidator) {\n    this.validators = this.validators.filter(function(v) {\n      return v.validator != this.minValidator;\n    }, this);\n  }\n\n  if (null != value) {\n    var msg = message || errorMessages.Number.min;\n    msg = msg.replace(/{MIN}/, value);\n    this.validators.push({\n      validator: this.minValidator = function(v) {\n        return v == null || v >= value;\n      },\n      message: msg,\n      type: 'min',\n      min: value\n    });\n  }\n\n  return this;\n};\n\n/**\n * Sets a maximum number validator.\n *\n * ####Example:\n *\n *     var s = new Schema({ n: { type: Number, max: 10 })\n *     var M = db.model('M', s)\n *     var m = new M({ n: 11 })\n *     m.save(function (err) {\n *       console.error(err) // validator error\n *       m.n = 10;\n *       m.save() // success\n *     })\n *\n *     // custom error messages\n *     // We can also use the special {MAX} token which will be replaced with the invalid value\n *     var max = [10, 'The value of path `{PATH}` ({VALUE}) exceeds the limit ({MAX}).'];\n *     var schema = new Schema({ n: { type: Number, max: max })\n *     var M = mongoose.model('Measurement', schema);\n *     var s= new M({ n: 4 });\n *     s.validate(function (err) {\n *       console.log(String(err)) // ValidationError: The value of path `n` (4) exceeds the limit (10).\n *     })\n *\n * @param {Number} maximum number\n * @param {String} [message] optional custom error message\n * @return {SchemaType} this\n * @see Customized Error Messages #error_messages_MongooseError-messages\n * @api public\n */\n\nSchemaNumber.prototype.max = function(value, message) {\n  if (this.maxValidator) {\n    this.validators = this.validators.filter(function(v) {\n      return v.validator != this.maxValidator;\n    }, this);\n  }\n\n  if (null != value) {\n    var msg = message || errorMessages.Number.max;\n    msg = msg.replace(/{MAX}/, value);\n    this.validators.push({\n      validator: this.maxValidator = function(v) {\n        return v == null || v <= value;\n      },\n      message: msg,\n      type: 'max',\n      max: value\n    });\n  }\n\n  return this;\n};\n\n/**\n * Casts to number\n *\n * @param {Object} value value to cast\n * @param {Document} doc document that triggers the casting\n * @param {Boolean} init\n * @api private\n */\n\nSchemaNumber.prototype.cast = function(value, doc, init) {\n  if (SchemaType._isRef(this, value, doc, init)) {\n    // wait! we may need to cast this to a document\n\n    if (null == value) {\n      return value;\n    }\n\n    // lazy load\n    Document || (Document = require('./../document'));\n\n    if (value instanceof Document) {\n      value.$__.wasPopulated = true;\n      return value;\n    }\n\n    // setting a populated path\n    if ('number' == typeof value) {\n      return value;\n    } else if (Buffer.isBuffer(value) || !utils.isObject(value)) {\n      throw new CastError('number', value, this.path);\n    }\n\n    // Handle the case where user directly sets a populated\n    // path to a plain object; cast to the Model used in\n    // the population query.\n    var path = doc.$__fullPath(this.path);\n    var owner = doc.ownerDocument ? doc.ownerDocument() : doc;\n    var pop = owner.populated(path, true);\n    var ret = new pop.options.model(value);\n    ret.$__.wasPopulated = true;\n    return ret;\n  }\n\n  var val = value && value._id\n    ? value._id // documents\n    : value;\n\n  if (!isNaN(val)) {\n    if (null === val) return val;\n    if ('' === val) return null;\n    if (typeof val === 'string' || typeof val === 'boolean') {\n      val = Number(val);\n    }\n    if (val instanceof Number) return val;\n    if ('number' == typeof val) return val;\n    if (val.toString && !Array.isArray(val) &&\n        val.toString() == Number(val)) {\n      return new Number(val);\n    }\n  }\n\n  throw new CastError('number', value, this.path);\n};\n\n/*!\n * ignore\n */\n\nfunction handleSingle(val) {\n  return this.cast(val);\n}\n\nfunction handleArray(val) {\n  var self = this;\n  if (!Array.isArray(val)) {\n    return [this.cast(val)];\n  }\n  return val.map(function(m) {\n    return self.cast(m);\n  });\n}\n\nSchemaNumber.prototype.$conditionalHandlers =\n  utils.options(SchemaType.prototype.$conditionalHandlers, {\n    '$bitsAllClear': handleBitwiseOperator,\n    '$bitsAnyClear': handleBitwiseOperator,\n    '$bitsAllSet': handleBitwiseOperator,\n    '$bitsAnySet': handleBitwiseOperator,\n    '$gt' : handleSingle,\n    '$gte': handleSingle,\n    '$lt' : handleSingle,\n    '$lte': handleSingle,\n    '$mod': handleArray\n  });\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} [value]\n * @api private\n */\n\nSchemaNumber.prototype.castForQuery = function($conditional, val) {\n  var handler;\n  if (arguments.length === 2) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler)\n      throw new Error(\"Can't use \" + $conditional + \" with Number.\");\n    return handler.call(this, val);\n  } else {\n    val = this.cast($conditional);\n    return val == null ? val : val;\n  }\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = SchemaNumber;\n"}