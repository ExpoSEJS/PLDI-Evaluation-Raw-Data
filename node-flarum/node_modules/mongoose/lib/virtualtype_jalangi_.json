{"8":[7,20,7,33],"9":[1,20,1,27],"10":[19,18,19,41],"16":[19,43,19,49],"17":[1,28,1,32],"18":[19,43,19,49],"24":[26,43,26,49],"25":[1,20,1,33],"26":[19,51,19,54],"33":[1,20,1,33],"41":[1,20,1,33],"42":[19,51,19,54],"49":[2,26,2,38],"50":[26,18,26,41],"57":[2,26,2,45],"58":[26,43,26,49],"65":[2,26,2,45],"66":[26,51,26,54],"73":[2,26,2,45],"81":[4,5,4,9],"82":[26,51,26,54],"89":[4,17,4,21],"97":[4,5,4,21],"105":[4,5,4,22],"113":[5,5,5,9],"121":[5,20,5,22],"129":[5,5,5,22],"137":[5,5,5,23],"145":[6,5,6,9],"153":[6,20,6,22],"161":[6,5,6,22],"169":[6,5,6,23],"177":[7,5,7,9],"185":[7,20,7,27],"193":[7,31,7,33],"201":[7,5,7,33],"209":[7,5,7,34],"217":[3,1,8,2],"225":[3,1,8,2],"233":[3,1,8,2],"241":[3,1,8,2],"249":[9,1,9,12],"257":[9,1,9,22],"265":[10,5,10,9],"273":[10,5,10,17],"281":[10,23,10,25],"289":[10,5,10,26],"291":[10,5,10,22],"297":[10,5,10,27],"305":[11,12,11,16],"313":[11,12,11,16],"321":[11,5,11,17],"329":[9,29,12,2],"337":[9,29,12,2],"345":[9,29,12,2],"353":[9,29,12,2],"361":[9,1,12,2],"369":[9,1,12,3],"377":[13,1,13,12],"385":[13,1,13,22],"393":[14,5,14,9],"401":[14,5,14,17],"409":[14,23,14,25],"417":[14,5,14,26],"419":[14,5,14,22],"425":[14,5,14,27],"433":[15,12,15,16],"441":[15,12,15,16],"449":[15,5,15,17],"457":[13,29,16,2],"465":[13,29,16,2],"473":[13,29,16,2],"481":[13,29,16,2],"489":[13,1,16,2],"497":[13,1,16,3],"505":[17,1,17,12],"513":[17,1,17,22],"521":[18,13,18,18],"529":[18,13,18,18],"537":[18,13,18,18],"545":[19,18,19,22],"553":[19,18,19,30],"561":[19,18,19,37],"569":[19,40,19,41],"577":[19,18,19,41],"585":[19,18,19,41],"593":[19,43,19,44],"601":[19,48,19,49],"617":[19,51,19,52],"625":[19,51,19,54],"641":[20,13,20,17],"649":[20,13,20,25],"657":[20,26,20,27],"665":[20,13,20,28],"673":[20,34,20,39],"681":[20,41,20,42],"689":[20,44,20,48],"697":[20,13,20,49],"699":[20,13,20,33],"705":[20,13,20,49],"713":[20,9,20,50],"721":[22,12,22,13],"729":[22,12,22,13],"737":[22,5,22,14],"745":[17,38,23,2],"753":[17,38,23,2],"761":[17,38,23,2],"769":[17,38,23,2],"777":[17,38,23,2],"785":[17,38,23,2],"793":[17,38,23,2],"801":[17,1,23,2],"809":[17,1,23,3],"817":[24,1,24,12],"825":[24,1,24,22],"833":[25,13,25,18],"841":[25,13,25,18],"849":[25,13,25,18],"857":[26,18,26,22],"865":[26,18,26,30],"873":[26,18,26,37],"881":[26,40,26,41],"889":[26,18,26,41],"897":[26,18,26,41],"905":[26,43,26,44],"913":[26,48,26,49],"929":[26,51,26,52],"937":[26,51,26,54],"953":[27,13,27,17],"961":[27,13,27,25],"969":[27,26,27,27],"977":[27,13,27,28],"985":[27,34,27,39],"993":[27,41,27,42],"1001":[27,44,27,48],"1009":[27,13,27,49],"1011":[27,13,27,33],"1017":[27,13,27,49],"1025":[27,9,27,50],"1033":[29,12,29,13],"1041":[29,12,29,13],"1049":[29,5,29,14],"1057":[24,38,30,2],"1065":[24,38,30,2],"1073":[24,38,30,2],"1081":[24,38,30,2],"1089":[24,38,30,2],"1097":[24,38,30,2],"1105":[24,38,30,2],"1113":[24,1,30,2],"1121":[24,1,30,3],"1129":[31,1,31,7],"1137":[31,18,31,29],"1145":[31,1,31,29],"1153":[31,1,31,30],"1161":[1,1,31,30],"1169":[1,1,31,30],"1177":[1,1,31,30],"1185":[3,1,8,2],"1193":[1,1,31,30],"1201":[3,1,8,2],"1209":[3,1,8,2],"1217":[9,29,12,2],"1225":[9,29,12,2],"1233":[13,29,16,2],"1241":[13,29,16,2],"1249":[19,5,21,6],"1257":[19,5,21,6],"1265":[17,38,23,2],"1273":[17,38,23,2],"1281":[26,5,28,6],"1289":[26,5,28,6],"1297":[24,38,30,2],"1305":[24,38,30,2],"1313":[1,1,31,30],"1321":[1,1,31,30],"nBranches":6,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/virtualtype.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/mongoose/lib/virtualtype_jalangi_.js","code":"\n/**\n * VirtualType constructor\n *\n * This is what mongoose uses to define virtual attributes via `Schema.prototype.virtual`.\n *\n * ####Example:\n *\n *     var fullname = schema.virtual('fullname');\n *     fullname instanceof mongoose.VirtualType // true\n *\n * @parma {Object} options\n * @api public\n */\n\nfunction VirtualType(options, name) {\n  this.path = name;\n  this.getters = [];\n  this.setters = [];\n  this.options = options || {};\n}\n\n/**\n * Defines a getter.\n *\n * ####Example:\n *\n *     var virtual = schema.virtual('fullname');\n *     virtual.get(function () {\n *       return this.name.first + ' ' + this.name.last;\n *     });\n *\n * @param {Function} fn\n * @return {VirtualType} this\n * @api public\n */\n\nVirtualType.prototype.get = function(fn) {\n  this.getters.push(fn);\n  return this;\n};\n\n/**\n * Defines a setter.\n *\n * ####Example:\n *\n *     var virtual = schema.virtual('fullname');\n *     virtual.set(function (v) {\n *       var parts = v.split(' ');\n *       this.name.first = parts[0];\n *       this.name.last = parts[1];\n *     });\n *\n * @param {Function} fn\n * @return {VirtualType} this\n * @api public\n */\n\nVirtualType.prototype.set = function(fn) {\n  this.setters.push(fn);\n  return this;\n};\n\n/**\n * Applies getters to `value` using optional `scope`.\n *\n * @param {Object} value\n * @param {Object} scope\n * @return {any} the value after applying all getters\n * @api public\n */\n\nVirtualType.prototype.applyGetters = function(value, scope) {\n  var v = value;\n  for (var l = this.getters.length - 1; l >= 0; l--) {\n    v = this.getters[l].call(scope, v, this);\n  }\n  return v;\n};\n\n/**\n * Applies setters to `value` using optional `scope`.\n *\n * @param {Object} value\n * @param {Object} scope\n * @return {any} the value after applying all setters\n * @api public\n */\n\nVirtualType.prototype.applySetters = function(value, scope) {\n  var v = value;\n  for (var l = this.setters.length - 1; l >= 0; l--) {\n    v = this.setters[l].call(scope, v, this);\n  }\n  return v;\n};\n\n/*!\n * exports\n */\n\nmodule.exports = VirtualType;\n"}