{"8":[5,9,5,31],"9":[1,20,1,27],"10":[5,21,5,31],"16":[7,9,7,34],"17":[1,28,1,32],"18":[5,9,5,31],"24":[12,9,12,31],"25":[1,20,1,33],"26":[7,21,7,34],"32":[14,9,14,34],"33":[1,20,1,33],"34":[7,9,7,34],"40":[17,12,17,34],"41":[1,20,1,33],"42":[9,12,9,21],"49":[2,26,2,38],"50":[9,12,9,108],"57":[2,26,2,45],"58":[12,21,12,31],"65":[2,26,2,45],"66":[12,9,12,31],"73":[2,26,2,45],"74":[14,21,14,34],"81":[3,14,3,21],"82":[14,9,14,34],"89":[3,22,3,30],"90":[17,12,17,34],"97":[3,14,3,31],"105":[3,14,3,31],"113":[3,14,3,31],"121":[4,1,4,8],"129":[5,9,5,17],"137":[5,28,5,31],"145":[6,19,6,28],"153":[6,29,6,73],"161":[6,15,6,74],"169":[6,15,6,74],"177":[6,9,6,75],"185":[7,9,7,17],"193":[7,28,7,34],"201":[8,19,8,28],"209":[8,29,8,62],"217":[8,15,8,63],"225":[8,15,8,63],"233":[8,9,8,64],"241":[9,12,9,15],"249":[9,18,9,21],"257":[9,24,9,30],"265":[9,42,9,50],"273":[9,52,9,58],"281":[9,24,9,59],"283":[9,24,9,41],"289":[9,67,9,70],"297":[9,24,9,71],"299":[9,24,9,66],"305":[9,79,9,87],"313":[9,24,9,88],"315":[9,24,9,78],"321":[9,97,9,103],"329":[9,105,9,107],"337":[9,24,9,108],"339":[9,24,9,96],"345":[9,12,9,108],"353":[9,5,9,109],"361":[4,16,10,2],"369":[4,16,10,2],"377":[4,16,10,2],"385":[4,16,10,2],"393":[4,16,10,2],"401":[4,1,10,2],"409":[4,1,10,3],"417":[11,1,11,8],"425":[12,9,12,17],"433":[12,28,12,31],"441":[13,19,13,28],"449":[13,29,13,69],"457":[13,15,13,70],"465":[13,15,13,70],"473":[13,9,13,71],"481":[14,9,14,17],"489":[14,28,14,34],"497":[15,19,15,28],"505":[15,29,15,62],"513":[15,15,15,63],"521":[15,15,15,63],"529":[15,9,15,64],"537":[16,15,16,18],"545":[16,25,16,26],"553":[16,28,16,31],"561":[16,44,16,47],"569":[16,28,16,48],"571":[16,28,16,43],"577":[16,15,16,49],"579":[16,15,16,24],"585":[16,57,16,64],"593":[16,70,16,73],"601":[16,75,16,81],"609":[16,57,16,82],"611":[16,57,16,69],"617":[16,15,16,49],"625":[16,15,16,49],"633":[16,57,16,82],"641":[16,57,16,82],"649":[17,12,17,16],"657":[17,17,17,20],"665":[17,12,17,21],"673":[17,25,17,29],"681":[17,30,17,33],"689":[17,25,17,34],"697":[17,37,17,40],"705":[17,43,17,48],"713":[17,12,17,48],"721":[17,5,17,49],"729":[11,18,18,2],"737":[11,18,18,2],"745":[11,18,18,2],"753":[11,18,18,2],"761":[11,18,18,2],"769":[11,18,18,2],"777":[11,18,18,2],"785":[11,1,18,2],"793":[11,1,18,3],"801":[20,12,20,18],"809":[20,30,20,36],"817":[20,12,20,37],"819":[20,12,20,29],"825":[20,45,20,48],"833":[20,12,20,49],"835":[20,12,20,44],"841":[20,57,20,62],"849":[20,12,20,63],"851":[20,12,20,56],"857":[20,12,20,63],"865":[20,5,20,64],"873":[19,1,21,2],"881":[19,1,21,2],"889":[19,1,21,2],"897":[1,1,21,2],"905":[1,1,21,2],"913":[1,1,21,2],"921":[1,1,21,2],"929":[19,1,21,2],"937":[1,1,21,2],"945":[5,5,6,75],"953":[7,5,8,64],"961":[4,16,10,2],"969":[4,16,10,2],"977":[12,5,13,71],"985":[14,5,15,64],"993":[17,12,17,48],"1001":[11,18,18,2],"1009":[11,18,18,2],"1017":[19,1,21,2],"1025":[19,1,21,2],"1033":[1,1,21,2],"1041":[1,1,21,2],"nBranches":10,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/cookie-signature/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/cookie-signature/index_jalangi_.js","code":"/**\n * Module dependencies.\n */\n\nvar crypto = require('crypto');\n\n/**\n * Sign the given `val` with `secret`.\n *\n * @param {String} val\n * @param {String} secret\n * @return {String}\n * @api private\n */\n\nexports.sign = function(val, secret){\n  if ('string' != typeof val) throw new TypeError(\"Cookie value must be provided as a string.\");\n  if ('string' != typeof secret) throw new TypeError(\"Secret string must be provided.\");\n  return val + '.' + crypto\n    .createHmac('sha256', secret)\n    .update(val)\n    .digest('base64')\n    .replace(/\\=+$/, '');\n};\n\n/**\n * Unsign and decode the given `val` with `secret`,\n * returning `false` if the signature is invalid.\n *\n * @param {String} val\n * @param {String} secret\n * @return {String|Boolean}\n * @api private\n */\n\nexports.unsign = function(val, secret){\n  if ('string' != typeof val) throw new TypeError(\"Signed cookie string must be provided.\");\n  if ('string' != typeof secret) throw new TypeError(\"Secret string must be provided.\");\n  var str = val.slice(0, val.lastIndexOf('.'))\n    , mac = exports.sign(str, secret);\n  \n  return sha1(mac) == sha1(val) ? str : false;\n};\n\n/**\n * Private\n */\n\nfunction sha1(str){\n  return crypto.createHash('sha1').update(str).digest('hex');\n}\n"}