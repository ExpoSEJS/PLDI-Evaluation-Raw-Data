J$.iids = {"8":[33,13,33,26],"9":[1,20,1,27],"10":[6,13,6,18],"16":[32,9,32,33],"17":[1,28,1,32],"18":[6,12,6,18],"24":[37,9,37,33],"25":[1,20,1,33],"26":[32,9,32,20],"32":[42,13,42,23],"33":[1,20,1,33],"34":[32,9,32,33],"40":[41,9,41,18],"41":[1,20,1,33],"42":[33,13,33,26],"48":[47,9,47,11],"49":[2,26,2,38],"50":[34,29,34,59],"57":[2,26,2,45],"58":[37,9,37,20],"65":[2,26,2,45],"66":[37,9,37,33],"73":[2,26,2,45],"74":[41,9,41,18],"81":[3,13,3,20],"82":[42,13,42,23],"89":[3,21,3,35],"90":[43,29,43,56],"97":[3,13,3,36],"98":[47,9,47,11],"105":[3,13,3,36],"106":[48,25,48,59],"113":[3,13,3,36],"114":[48,25,48,65],"121":[4,1,4,7],"129":[4,18,4,24],"137":[4,1,4,24],"145":[4,1,4,25],"153":[5,1,5,7],"161":[5,16,5,22],"169":[5,28,5,33],"177":[5,16,5,34],"179":[5,16,5,27],"185":[6,14,6,18],"193":[6,12,6,18],"201":[6,5,6,19],"209":[7,15,7,20],"217":[7,21,7,25],"225":[7,15,7,26],"233":[7,15,7,26],"241":[7,15,7,26],"249":[8,5,8,11],"257":[8,12,8,16],"265":[8,20,8,23],"273":[8,5,8,23],"281":[8,5,8,24],"289":[9,5,9,11],"297":[9,12,9,15],"305":[9,19,9,25],"313":[9,26,9,29],"321":[9,26,9,43],"323":[9,26,9,41],"329":[9,47,9,51],"337":[9,19,9,51],"345":[9,5,9,51],"353":[9,5,9,52],"361":[10,12,10,16],"369":[10,12,10,16],"377":[10,5,10,17],"385":[5,39,11,2],"393":[5,39,11,2],"401":[5,39,11,2],"409":[5,39,11,2],"417":[5,39,11,2],"425":[5,16,11,3],"427":[5,16,5,38],"433":[5,1,11,3],"441":[5,1,11,4],"449":[12,1,12,7],"457":[13,10,13,14],"465":[14,10,14,14],"473":[15,10,15,14],"481":[16,10,16,14],"489":[17,10,17,14],"497":[18,10,18,14],"505":[19,10,19,14],"513":[12,19,20,2],"521":[12,1,20,2],"529":[12,1,20,3],"537":[21,1,21,7],"545":[22,10,22,14],"553":[23,10,23,14],"561":[24,10,24,14],"569":[21,16,25,2],"577":[21,1,25,2],"585":[21,1,25,3],"593":[26,1,26,7],"601":[27,10,27,14],"609":[28,10,28,14],"617":[29,10,29,14],"625":[26,16,30,2],"633":[26,1,30,2],"641":[26,1,30,3],"649":[32,16,32,20],"657":[32,25,32,33],"665":[33,14,33,20],"673":[33,21,33,25],"681":[33,14,33,26],"689":[34,23,34,28],"697":[34,29,34,52],"705":[34,55,34,59],"713":[34,19,34,60],"721":[34,19,34,60],"729":[34,13,34,61],"737":[35,16,35,20],"745":[35,16,35,20],"753":[35,9,35,21],"761":[37,16,37,20],"769":[37,25,37,33],"777":[38,19,38,28],"785":[38,29,38,62],"793":[38,15,38,63],"801":[38,15,38,63],"809":[38,9,38,64],"817":[40,13,40,21],"825":[40,22,40,26],"833":[40,28,40,30],"841":[40,13,40,31],"849":[40,13,40,31],"857":[40,13,40,31],"865":[41,10,41,15],"873":[41,16,41,17],"881":[41,10,41,18],"889":[42,14,42,20],"897":[42,21,42,22],"905":[42,14,42,23],"913":[43,23,43,28],"921":[43,29,43,52],"929":[43,55,43,56],"937":[43,19,43,57],"945":[43,19,43,57],"953":[43,13,43,58],"961":[44,16,44,17],"969":[44,16,44,17],"977":[44,9,44,18],"985":[46,9,46,15],"993":[46,16,46,20],"1001":[46,16,46,34],"1003":[46,16,46,32],"1009":[46,9,46,35],"1017":[46,9,46,35],"1025":[46,5,46,36],"1033":[47,10,47,11],"1041":[48,19,48,24],"1049":[48,25,48,52],"1057":[48,55,48,59],"1065":[48,62,48,65],"1073":[48,15,48,66],"1081":[48,15,48,66],"1089":[48,9,48,67],"1097":[49,12,49,13],"1105":[49,12,49,13],"1113":[49,5,49,14],"1121":[31,1,50,2],"1129":[31,1,50,2],"1137":[31,1,50,2],"1145":[31,1,50,2],"1153":[1,1,50,2],"1161":[1,1,50,2],"1169":[1,1,50,2],"1177":[1,1,50,2],"1185":[31,1,50,2],"1193":[1,1,50,2],"1201":[5,39,11,2],"1209":[5,39,11,2],"1217":[33,9,34,61],"1225":[32,5,36,6],"1233":[37,5,39,6],"1241":[42,9,43,58],"1249":[41,5,45,6],"1257":[47,5,48,67],"1265":[31,1,50,2],"1273":[31,1,50,2],"1281":[1,1,50,2],"1289":[1,1,50,2],"nBranches":12,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/serve-static/node_modules/statuses/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/serve-static/node_modules/statuses/index_jalangi_.js","code":"\nvar codes = require('./codes.json');\n\nmodule.exports = status;\n\n// [Integer...]\nstatus.codes = Object.keys(codes).map(function (code) {\n  code = ~~code;\n  var msg = codes[code];\n  status[code] = msg;\n  status[msg] = status[msg.toLowerCase()] = code;\n  return code;\n});\n\n// status codes for redirects\nstatus.redirect = {\n  300: true,\n  301: true,\n  302: true,\n  303: true,\n  305: true,\n  307: true,\n  308: true,\n};\n\n// status codes for empty bodies\nstatus.empty = {\n  204: true,\n  205: true,\n  304: true,\n};\n\n// status codes for when you should retry the request\nstatus.retry = {\n  502: true,\n  503: true,\n  504: true,\n};\n\nfunction status(code) {\n  if (typeof code === 'number') {\n    if (!status[code]) throw new Error('invalid status code: ' + code);\n    return code;\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string');\n  }\n\n  // '403'\n  var n = parseInt(code, 10)\n  if (!isNaN(n)) {\n    if (!status[n]) throw new Error('invalid status code: ' + n);\n    return n;\n  }\n\n  n = status[code.toLowerCase()];\n  if (!n) throw new Error('invalid status message: \"' + code + '\"');\n  return n;\n}\n"};
jalangiLabel677:
    while (true) {
        try {
            J$.Se(1153, '/home/blake/ExpoSE/Targets/node-flarum/node_modules/serve-static/node_modules/statuses/index_jalangi_.js', '/home/blake/ExpoSE/Targets/node-flarum/node_modules/serve-static/node_modules/statuses/index.js');
            function status(code) {
                jalangiLabel676:
                    while (true) {
                        try {
                            J$.Fe(1121, arguments.callee, this, arguments);
                            arguments = J$.N(1129, 'arguments', arguments, 4);
                            code = J$.N(1137, 'code', code, 4);
                            J$.N(1145, 'n', n, 0);
                            if (J$.X1(1225, J$.C(16, J$.B(34, '===', J$.U(26, 'typeof', J$.R(649, 'code', code, 0)), J$.T(657, 'number', 21, false), 0)))) {
                                if (J$.X1(1217, J$.C(8, J$.U(42, '!', J$.G(681, J$.R(665, 'status', status, 1), J$.R(673, 'code', code, 0), 4)))))
                                    throw J$.X1(729, J$.Th(721, J$.F(713, J$.R(689, 'Error', Error, 2), 1)(J$.B(50, '+', J$.T(697, 'invalid status code: ', 21, false), J$.R(705, 'code', code, 0), 0))));
                                return J$.X1(753, J$.Rt(745, J$.R(737, 'code', code, 0)));
                            }
                            if (J$.X1(1233, J$.C(24, J$.B(66, '!==', J$.U(58, 'typeof', J$.R(761, 'code', code, 0)), J$.T(769, 'string', 21, false), 0)))) {
                                throw J$.X1(809, J$.Th(801, J$.F(793, J$.R(777, 'TypeError', TypeError, 2), 1)(J$.T(785, 'code must be a number or string', 21, false))));
                            }
                            var n = J$.X1(857, J$.W(849, 'n', J$.F(841, J$.R(817, 'parseInt', parseInt, 2), 0)(J$.R(825, 'code', code, 0), J$.T(833, 10, 22, false)), n, 1));
                            if (J$.X1(1249, J$.C(40, J$.U(74, '!', J$.F(881, J$.R(865, 'isNaN', isNaN, 2), 0)(J$.R(873, 'n', n, 0)))))) {
                                if (J$.X1(1241, J$.C(32, J$.U(82, '!', J$.G(905, J$.R(889, 'status', status, 1), J$.R(897, 'n', n, 0), 4)))))
                                    throw J$.X1(953, J$.Th(945, J$.F(937, J$.R(913, 'Error', Error, 2), 1)(J$.B(90, '+', J$.T(921, 'invalid status code: ', 21, false), J$.R(929, 'n', n, 0), 0))));
                                return J$.X1(977, J$.Rt(969, J$.R(961, 'n', n, 0)));
                            }
                            J$.X1(1025, n = J$.W(1017, 'n', J$.G(1009, J$.R(985, 'status', status, 1), J$.M(1001, J$.R(993, 'code', code, 0), 'toLowerCase', 0)(), 4), n, 0));
                            if (J$.X1(1257, J$.C(48, J$.U(98, '!', J$.R(1033, 'n', n, 0)))))
                                throw J$.X1(1089, J$.Th(1081, J$.F(1073, J$.R(1041, 'Error', Error, 2), 1)(J$.B(114, '+', J$.B(106, '+', J$.T(1049, 'invalid status message: "', 21, false), J$.R(1057, 'code', code, 0), 0), J$.T(1065, '"', 21, false), 0))));
                            return J$.X1(1113, J$.Rt(1105, J$.R(1097, 'n', n, 0)));
                        } catch (J$e) {
                            J$.Ex(1265, J$e);
                        } finally {
                            if (J$.Fr(1273))
                                continue jalangiLabel676;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1161, '__secret__S$', __secret__S$, 0);
            J$.N(1169, '__secret__traits__', __secret__traits__, 0);
            J$.N(1177, 'codes', codes, 0);
            status = J$.N(1193, 'status', J$.T(1185, status, 12, false, 1121), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var codes = J$.X1(113, J$.W(105, 'codes', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, './codes.json', 21, false)), codes, 3));
            J$.X1(145, J$.P(137, J$.R(121, 'module', module, 2), 'exports', J$.R(129, 'status', status, 1), 0));
            J$.X1(441, J$.P(433, J$.R(153, 'status', status, 1), 'codes', J$.M(425, J$.M(177, J$.R(161, 'Object', Object, 2), 'keys', 0)(J$.R(169, 'codes', codes, 1)), 'map', 0)(J$.T(417, function (code) {
                jalangiLabel675:
                    while (true) {
                        try {
                            J$.Fe(385, arguments.callee, this, arguments);
                            arguments = J$.N(393, 'arguments', arguments, 4);
                            code = J$.N(401, 'code', code, 4);
                            J$.N(409, 'msg', msg, 0);
                            J$.X1(201, code = J$.W(193, 'code', J$.U(18, '~', J$.U(10, '~', J$.R(185, 'code', code, 0))), code, 0));
                            var msg = J$.X1(241, J$.W(233, 'msg', J$.G(225, J$.R(209, 'codes', codes, 1), J$.R(217, 'code', code, 0), 4), msg, 1));
                            J$.X1(281, J$.P(273, J$.R(249, 'status', status, 1), J$.R(257, 'code', code, 0), J$.R(265, 'msg', msg, 0), 2));
                            J$.X1(353, J$.P(345, J$.R(289, 'status', status, 1), J$.R(297, 'msg', msg, 0), J$.P(337, J$.R(305, 'status', status, 1), J$.M(321, J$.R(313, 'msg', msg, 0), 'toLowerCase', 0)(), J$.R(329, 'code', code, 0), 2), 2));
                            return J$.X1(377, J$.Rt(369, J$.R(361, 'code', code, 0)));
                        } catch (J$e) {
                            J$.Ex(1201, J$e);
                        } finally {
                            if (J$.Fr(1209))
                                continue jalangiLabel675;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 385)), 0));
            J$.X1(529, J$.P(521, J$.R(449, 'status', status, 1), 'redirect', J$.T(513, {
                300: J$.T(457, true, 23, false),
                301: J$.T(465, true, 23, false),
                302: J$.T(473, true, 23, false),
                303: J$.T(481, true, 23, false),
                305: J$.T(489, true, 23, false),
                307: J$.T(497, true, 23, false),
                308: J$.T(505, true, 23, false)
            }, 11, false), 0));
            J$.X1(585, J$.P(577, J$.R(537, 'status', status, 1), 'empty', J$.T(569, {
                204: J$.T(545, true, 23, false),
                205: J$.T(553, true, 23, false),
                304: J$.T(561, true, 23, false)
            }, 11, false), 0));
            J$.X1(641, J$.P(633, J$.R(593, 'status', status, 1), 'retry', J$.T(625, {
                502: J$.T(601, true, 23, false),
                503: J$.T(609, true, 23, false),
                504: J$.T(617, true, 23, false)
            }, 11, false), 0));
        } catch (J$e) {
            J$.Ex(1281, J$e);
        } finally {
            if (J$.Sr(1289)) {
                J$.L();
                continue jalangiLabel677;
            } else {
                J$.L();
                break jalangiLabel677;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
