{"8":[8,9,8,35],"9":[1,20,1,27],"10":[8,11,8,34],"16":[15,9,15,39],"17":[1,28,1,32],"18":[8,9,8,35],"24":[17,25,17,41],"25":[1,20,1,33],"26":[15,18,15,39],"32":[15,9,15,39],"33":[1,20,1,33],"34":[17,25,17,41],"40":[21,9,21,37],"41":[1,20,1,33],"42":[17,43,17,46],"48":[21,9,21,37],"49":[2,26,2,38],"56":[24,9,24,29],"57":[2,26,2,45],"58":[17,43,17,46],"64":[29,9,29,15],"65":[2,26,2,45],"66":[21,9,21,15],"72":[35,9,35,47],"73":[2,26,2,45],"74":[21,19,21,37],"80":[37,25,37,45],"81":[3,1,3,13],"82":[24,9,24,29],"88":[35,9,35,47],"89":[3,1,3,14],"90":[29,9,29,15],"96":[41,9,41,45],"97":[4,18,4,25],"98":[35,22,35,47],"104":[41,9,41,45],"105":[4,26,4,38],"106":[37,25,37,45],"112":[44,12,44,60],"113":[4,18,4,39],"114":[37,47,37,50],"120":[48,9,48,45],"121":[4,18,4,39],"128":[50,25,50,44],"129":[4,18,4,39],"130":[37,47,37,50],"136":[48,9,48,45],"137":[5,12,5,19],"138":[41,9,41,19],"144":[54,9,54,43],"145":[5,20,5,32],"146":[41,23,41,45],"152":[54,9,54,43],"153":[5,12,5,33],"154":[48,21,48,45],"160":[57,12,57,58],"161":[5,12,5,33],"162":[50,25,50,44],"168":[61,9,61,47],"169":[5,12,5,33],"170":[50,46,50,49],"176":[63,25,63,45],"177":[6,1,6,7],"184":[61,9,61,47],"185":[6,18,6,25],"186":[50,46,50,49],"192":[67,9,67,45],"193":[6,1,6,25],"194":[54,9,54,18],"200":[67,9,67,45],"201":[6,1,6,26],"202":[54,22,54,43],"208":[70,12,70,60],"209":[8,11,8,15],"210":[61,22,61,47],"216":[73,12,73,36],"217":[8,27,8,34],"218":[63,25,63,45],"225":[9,20,9,27],"226":[63,47,63,50],"233":[9,28,9,31],"241":[9,16,9,32],"242":[63,47,63,50],"249":[9,16,9,32],"250":[67,9,67,19],"257":[9,9,9,33],"258":[67,23,67,45],"265":[10,5,10,9],"266":[73,34,73,36],"273":[10,20,10,23],"274":[73,12,73,36],"281":[10,20,10,31],"282":[76,12,76,23],"289":[10,5,10,31],"290":[76,12,76,36],"297":[10,5,10,32],"305":[11,5,11,9],"313":[11,27,11,37],"321":[11,38,11,41],"329":[11,23,11,42],"337":[11,5,11,42],"345":[11,5,11,43],"353":[7,1,12,2],"361":[7,1,12,2],"369":[7,1,12,2],"377":[13,1,13,8],"385":[13,1,13,18],"393":[13,26,13,33],"401":[13,26,13,43],"409":[14,17,14,23],"417":[14,17,14,23],"425":[14,17,14,23],"433":[15,9,15,14],"441":[15,19,15,24],"449":[15,33,15,38],"457":[15,19,15,39],"459":[15,19,15,32],"465":[16,21,16,26],"473":[16,27,16,36],"481":[16,27,16,43],"489":[16,17,16,44],"497":[16,17,16,44],"505":[16,9,16,45],"513":[17,22,17,23],"521":[17,22,17,23],"529":[17,22,17,23],"537":[17,25,17,26],"545":[17,29,17,34],"553":[17,29,17,41],"569":[17,43,17,44],"577":[17,43,17,46],"593":[18,13,18,18],"601":[18,19,18,20],"609":[18,24,18,33],"617":[18,34,18,35],"625":[18,24,18,36],"633":[18,13,18,36],"641":[18,13,18,37],"649":[21,10,21,15],"657":[21,19,21,24],"665":[21,19,21,31],"673":[21,36,21,37],"681":[22,16,22,20],"689":[22,16,22,31],"697":[22,16,22,44],"699":[22,16,22,42],"705":[22,16,22,44],"713":[22,9,22,45],"721":[24,10,24,14],"729":[24,10,24,22],"737":[24,10,24,29],"745":[25,16,25,21],"753":[25,22,25,23],"761":[25,16,25,24],"769":[25,16,25,24],"777":[25,9,25,25],"785":[26,17,26,22],"793":[26,27,26,36],"801":[26,17,26,37],"803":[26,17,26,26],"809":[26,17,26,37],"817":[26,17,26,37],"825":[27,19,27,23],"833":[27,19,27,34],"841":[27,46,27,51],"849":[27,59,27,68],"857":[27,46,27,69],"859":[27,46,27,58],"865":[27,19,27,70],"867":[27,19,27,45],"873":[27,19,27,70],"881":[27,19,27,70],"889":[28,17,28,24],"897":[28,25,28,26],"905":[28,17,28,27],"913":[28,17,28,27],"921":[28,17,28,27],"929":[29,10,29,15],"937":[30,16,30,21],"945":[30,16,30,21],"953":[30,9,30,22],"961":[31,12,31,17],"969":[31,18,31,23],"977":[31,32,31,37],"985":[31,18,31,38],"987":[31,18,31,31],"993":[31,12,31,39],"1001":[31,12,31,39],"1009":[31,5,31,40],"1017":[13,52,32,2],"1025":[13,52,32,2],"1033":[13,52,32,2],"1041":[13,52,32,2],"1049":[13,52,32,2],"1057":[13,52,32,2],"1065":[13,52,32,2],"1073":[13,52,32,2],"1081":[13,52,32,2],"1089":[13,26,32,2],"1097":[13,1,32,2],"1105":[13,1,32,3],"1113":[33,1,33,8],"1121":[33,1,33,18],"1129":[33,30,33,37],"1137":[33,30,33,47],"1145":[34,21,34,31],"1153":[34,21,34,31],"1161":[34,21,34,31],"1169":[35,9,35,18],"1177":[35,23,35,28],"1185":[35,37,35,46],"1193":[35,23,35,47],"1195":[35,23,35,36],"1201":[36,25,36,30],"1209":[36,31,36,40],"1217":[36,31,36,47],"1225":[36,21,36,48],"1233":[36,21,36,48],"1241":[36,9,36,49],"1249":[37,22,37,23],"1257":[37,22,37,23],"1265":[37,22,37,23],"1273":[37,25,37,26],"1281":[37,29,37,38],"1289":[37,29,37,45],"1305":[37,47,37,48],"1313":[37,47,37,50],"1329":[38,13,38,22],"1337":[38,23,38,24],"1345":[38,28,38,37],"1353":[38,38,38,39],"1361":[38,28,38,40],"1369":[38,13,38,40],"1377":[38,13,38,41],"1385":[41,10,41,19],"1393":[41,23,41,32],"1401":[41,23,41,39],"1409":[41,44,41,45],"1417":[42,16,42,20],"1425":[42,16,42,31],"1433":[42,16,42,43],"1435":[42,16,42,41],"1441":[42,16,42,43],"1449":[42,9,42,44],"1457":[44,12,44,16],"1465":[44,12,44,27],"1473":[44,38,44,47],"1481":[44,12,44,48],"1483":[44,12,44,37],"1489":[44,49,44,50],"1497":[44,12,44,51],"1505":[44,55,44,60],"1513":[44,12,44,60],"1521":[44,5,44,61],"1529":[33,60,45,2],"1537":[33,60,45,2],"1545":[33,60,45,2],"1553":[33,60,45,2],"1561":[33,60,45,2],"1569":[33,60,45,2],"1577":[33,30,45,2],"1585":[33,1,45,2],"1593":[33,1,45,3],"1601":[46,1,46,8],"1609":[46,1,46,18],"1617":[46,29,46,36],"1625":[46,29,46,46],"1633":[47,20,47,29],"1641":[47,20,47,29],"1649":[47,20,47,29],"1657":[48,9,48,17],"1665":[48,22,48,27],"1673":[48,36,48,44],"1681":[48,22,48,45],"1683":[48,22,48,35],"1689":[49,24,49,29],"1697":[49,30,49,39],"1705":[49,30,49,46],"1713":[49,20,49,47],"1721":[49,20,49,47],"1729":[49,9,49,48],"1737":[50,22,50,23],"1745":[50,22,50,23],"1753":[50,22,50,23],"1761":[50,25,50,26],"1769":[50,29,50,37],"1777":[50,29,50,44],"1793":[50,46,50,47],"1801":[50,46,50,49],"1817":[51,13,51,21],"1825":[51,22,51,23],"1833":[51,27,51,36],"1841":[51,37,51,38],"1849":[51,27,51,39],"1857":[51,13,51,39],"1865":[51,13,51,40],"1873":[54,10,54,18],"1881":[54,22,54,30],"1889":[54,22,54,37],"1897":[54,42,54,43],"1905":[55,16,55,20],"1913":[55,16,55,31],"1921":[55,16,55,42],"1923":[55,16,55,40],"1929":[55,16,55,42],"1937":[55,9,55,43],"1945":[57,12,57,16],"1953":[57,12,57,27],"1961":[57,37,57,45],"1969":[57,12,57,46],"1971":[57,12,57,36],"1977":[57,47,57,48],"1985":[57,12,57,49],"1993":[57,53,57,58],"2001":[57,12,57,58],"2009":[57,5,57,59],"2017":[46,58,58,2],"2025":[46,58,58,2],"2033":[46,58,58,2],"2041":[46,58,58,2],"2049":[46,58,58,2],"2057":[46,58,58,2],"2065":[46,29,58,2],"2073":[46,1,58,2],"2081":[46,1,58,3],"2089":[59,1,59,8],"2097":[59,1,59,18],"2105":[59,26,59,33],"2113":[59,26,59,43],"2121":[59,52,59,59],"2129":[59,52,59,69],"2137":[59,81,59,88],"2145":[59,81,59,98],"2153":[60,21,60,31],"2161":[60,21,60,31],"2169":[60,21,60,31],"2177":[61,9,61,18],"2185":[61,23,61,28],"2193":[61,37,61,46],"2201":[61,23,61,47],"2203":[61,23,61,36],"2209":[62,25,62,30],"2217":[62,31,62,40],"2225":[62,31,62,47],"2233":[62,21,62,48],"2241":[62,21,62,48],"2249":[62,9,62,49],"2257":[63,22,63,23],"2265":[63,22,63,23],"2273":[63,22,63,23],"2281":[63,25,63,26],"2289":[63,29,63,38],"2297":[63,29,63,45],"2313":[63,47,63,48],"2321":[63,47,63,50],"2337":[64,13,64,22],"2345":[64,23,64,24],"2353":[64,28,64,37],"2361":[64,38,64,39],"2369":[64,28,64,40],"2377":[64,13,64,40],"2385":[64,13,64,41],"2393":[67,10,67,19],"2401":[67,23,67,32],"2409":[67,23,67,39],"2417":[67,44,67,45],"2425":[68,16,68,20],"2433":[68,16,68,31],"2441":[68,16,68,43],"2443":[68,16,68,41],"2449":[68,16,68,43],"2457":[68,9,68,44],"2465":[70,12,70,16],"2473":[70,12,70,27],"2481":[70,38,70,47],"2489":[70,12,70,48],"2491":[70,12,70,37],"2497":[70,49,70,50],"2505":[70,12,70,51],"2513":[70,55,70,60],"2521":[70,12,70,60],"2529":[70,5,70,61],"2537":[59,111,71,2],"2545":[59,111,71,2],"2553":[59,111,71,2],"2561":[59,111,71,2],"2569":[59,111,71,2],"2577":[59,111,71,2],"2585":[59,81,71,2],"2593":[59,52,71,2],"2601":[59,26,71,2],"2609":[59,1,71,2],"2617":[59,1,71,3],"2625":[73,12,73,16],"2633":[73,25,73,28],"2641":[73,12,73,29],"2643":[73,12,73,24],"2649":[73,35,73,36],"2657":[73,39,73,43],"2665":[73,51,73,55],"2673":[73,39,73,56],"2675":[73,39,73,50],"2681":[73,59,73,63],"2689":[73,12,73,63],"2697":[73,5,73,64],"2705":[72,1,74,2],"2713":[72,1,74,2],"2721":[72,1,74,2],"2729":[76,19,76,23],"2737":[76,28,76,36],"2745":[76,12,76,36],"2753":[76,5,76,37],"2761":[75,1,77,2],"2769":[75,1,77,2],"2777":[75,1,77,2],"2785":[1,1,77,2],"2793":[1,1,77,2],"2801":[1,1,77,2],"2809":[1,1,77,2],"2817":[1,1,77,2],"2825":[7,1,12,2],"2833":[1,1,77,2],"2841":[72,1,74,2],"2849":[1,1,77,2],"2857":[75,1,77,2],"2865":[1,1,77,2],"2873":[8,5,9,33],"2881":[7,1,12,2],"2889":[7,1,12,2],"2897":[17,9,19,10],"2905":[17,9,19,10],"2913":[15,5,20,6],"2921":[21,5,23,6],"2929":[24,5,25,25],"2937":[29,5,30,22],"2945":[13,52,32,2],"2953":[13,52,32,2],"2961":[37,9,39,10],"2969":[37,9,39,10],"2977":[35,5,40,6],"2985":[41,5,43,6],"2993":[33,60,45,2],"3001":[33,60,45,2],"3009":[50,9,52,10],"3017":[50,9,52,10],"3025":[48,5,53,6],"3033":[54,5,56,6],"3041":[46,58,58,2],"3049":[46,58,58,2],"3057":[63,9,65,10],"3065":[63,9,65,10],"3073":[61,5,66,6],"3081":[67,5,69,6],"3089":[59,111,71,2],"3097":[59,111,71,2],"3105":[73,12,73,63],"3113":[72,1,74,2],"3121":[72,1,74,2],"3129":[75,1,77,2],"3137":[75,1,77,2],"3145":[1,1,77,2],"3153":[1,1,77,2],"nBranches":54,"originalCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/accepts/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/node-flarum/node_modules/accepts/index_jalangi_.js","code":"/*!\n * accepts\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Negotiator = require('negotiator')\nvar mime = require('mime-types')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Accepts\n\n/**\n * Create a new Accepts object for the given req.\n *\n * @param {object} req\n * @public\n */\n\nfunction Accepts(req) {\n  if (!(this instanceof Accepts))\n    return new Accepts(req)\n\n  this.headers = req.headers\n  this.negotiator = new Negotiator(req)\n}\n\n/**\n * Check if the given `type(s)` is acceptable, returning\n * the best match when true, otherwise `undefined`, in which\n * case you should respond with 406 \"Not Acceptable\".\n *\n * The `type` value may be a single mime type string\n * such as \"application/json\", the extension name\n * such as \"json\" or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\n * or array is given the _best_ match, if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     this.types('html');\n *     // => \"html\"\n *\n *     // Accept: text/*, application/json\n *     this.types('html');\n *     // => \"html\"\n *     this.types('text/html');\n *     // => \"text/html\"\n *     this.types('json', 'text');\n *     // => \"json\"\n *     this.types('application/json');\n *     // => \"application/json\"\n *\n *     // Accept: text/*, application/json\n *     this.types('image/png');\n *     this.types('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5, application/json\n *     this.types(['html', 'json']);\n *     this.types('html', 'json');\n *     // => \"json\"\n *\n * @param {String|Array} types...\n * @return {String|Array|Boolean}\n * @public\n */\n\nAccepts.prototype.type =\nAccepts.prototype.types = function (types_) {\n  var types = types_\n\n  // support flattened arguments\n  if (types && !Array.isArray(types)) {\n    types = new Array(arguments.length)\n    for (var i = 0; i < types.length; i++) {\n      types[i] = arguments[i]\n    }\n  }\n\n  // no types, return all requested types\n  if (!types || types.length === 0) {\n    return this.negotiator.mediaTypes()\n  }\n\n  if (!this.headers.accept) return types[0];\n  var mimes = types.map(extToMime);\n  var accepts = this.negotiator.mediaTypes(mimes.filter(validMime));\n  var first = accepts[0];\n  if (!first) return false;\n  return types[mimes.indexOf(first)];\n}\n\n/**\n * Return accepted encodings or best fit based on `encodings`.\n *\n * Given `Accept-Encoding: gzip, deflate`\n * an array sorted by quality is returned:\n *\n *     ['gzip', 'deflate']\n *\n * @param {String|Array} encodings...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.encoding =\nAccepts.prototype.encodings = function (encodings_) {\n  var encodings = encodings_\n\n  // support flattened arguments\n  if (encodings && !Array.isArray(encodings)) {\n    encodings = new Array(arguments.length)\n    for (var i = 0; i < encodings.length; i++) {\n      encodings[i] = arguments[i]\n    }\n  }\n\n  // no encodings, return all requested encodings\n  if (!encodings || encodings.length === 0) {\n    return this.negotiator.encodings()\n  }\n\n  return this.negotiator.encodings(encodings)[0] || false\n}\n\n/**\n * Return accepted charsets or best fit based on `charsets`.\n *\n * Given `Accept-Charset: utf-8, iso-8859-1;q=0.2, utf-7;q=0.5`\n * an array sorted by quality is returned:\n *\n *     ['utf-8', 'utf-7', 'iso-8859-1']\n *\n * @param {String|Array} charsets...\n * @return {String|Array}\n * @public\n */\n\nAccepts.prototype.charset =\nAccepts.prototype.charsets = function (charsets_) {\n  var charsets = charsets_\n\n  // support flattened arguments\n  if (charsets && !Array.isArray(charsets)) {\n    charsets = new Array(arguments.length)\n    for (var i = 0; i < charsets.length; i++) {\n      charsets[i] = arguments[i]\n    }\n  }\n\n  // no charsets, return all requested charsets\n  if (!charsets || charsets.length === 0) {\n    return this.negotiator.charsets()\n  }\n\n  return this.negotiator.charsets(charsets)[0] || false\n}\n\n/**\n * Return accepted languages or best fit based on `langs`.\n *\n * Given `Accept-Language: en;q=0.8, es, pt`\n * an array sorted by quality is returned:\n *\n *     ['es', 'pt', 'en']\n *\n * @param {String|Array} langs...\n * @return {Array|String}\n * @public\n */\n\nAccepts.prototype.lang =\nAccepts.prototype.langs =\nAccepts.prototype.language =\nAccepts.prototype.languages = function (languages_) {\n  var languages = languages_\n\n  // support flattened arguments\n  if (languages && !Array.isArray(languages)) {\n    languages = new Array(arguments.length)\n    for (var i = 0; i < languages.length; i++) {\n      languages[i] = arguments[i]\n    }\n  }\n\n  // no languages, return all requested languages\n  if (!languages || languages.length === 0) {\n    return this.negotiator.languages()\n  }\n\n  return this.negotiator.languages(languages)[0] || false\n}\n\n/**\n * Convert extnames to mime.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction extToMime(type) {\n  return type.indexOf('/') === -1\n    ? mime.lookup(type)\n    : type\n}\n\n/**\n * Check if mime is valid.\n *\n * @param {String} type\n * @return {String}\n * @private\n */\n\nfunction validMime(type) {\n  return typeof type === 'string';\n}\n"}