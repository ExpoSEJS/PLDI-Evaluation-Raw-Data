J$.iids = {"8":[28,13,28,23],"9":[1,20,1,27],"10":[28,13,28,23],"16":[31,13,31,52],"17":[1,28,1,32],"18":[32,29,32,54],"24":[40,24,40,73],"25":[1,20,1,33],"26":[32,29,32,79],"32":[40,77,40,126],"33":[1,20,1,33],"34":[38,13,38,45],"40":[40,24,40,126],"41":[1,20,1,33],"42":[40,24,40,46],"48":[40,130,40,181],"49":[2,26,2,38],"50":[40,50,40,60],"56":[40,24,40,181],"57":[2,26,2,45],"58":[40,50,40,73],"64":[49,21,49,45],"65":[2,26,2,45],"66":[40,77,40,99],"72":[60,30,60,79],"73":[2,26,2,45],"74":[40,103,40,113],"80":[56,17,56,32],"81":[3,1,3,13],"82":[40,103,40,126],"88":[42,20,42,38],"89":[3,1,3,14],"90":[40,130,40,153],"96":[38,13,38,45],"97":[4,9,4,16],"98":[40,157,40,167],"104":[67,13,67,42],"105":[4,17,4,25],"106":[40,157,40,181],"112":[70,13,70,35],"113":[4,9,4,26],"114":[44,77,44,97],"120":[76,20,76,58],"121":[4,40,4,47],"122":[49,21,49,45],"128":[80,16,80,99],"129":[4,48,4,59],"130":[56,17,56,32],"136":[95,17,95,49],"137":[4,40,4,60],"138":[60,51,60,79],"144":[93,45,93,52],"145":[4,40,4,70],"146":[60,28,60,80],"152":[103,13,103,29],"153":[4,77,4,84],"154":[67,30,67,41],"160":[110,13,110,42],"161":[4,85,4,95],"162":[68,20,68,31],"168":[126,28,126,43],"169":[4,77,4,96],"170":[76,30,76,43],"176":[124,21,124,35],"177":[4,9,4,26],"178":[76,30,76,58],"184":[131,24,131,42],"185":[4,9,4,26],"186":[80,16,80,44],"192":[123,24,123,45],"193":[4,40,4,70],"194":[80,79,80,99],"200":[121,24,121,44],"201":[4,40,4,70],"202":[80,48,80,99],"208":[119,17,119,37],"209":[4,77,4,96],"210":[85,20,85,55],"217":[4,77,4,96],"218":[93,45,93,52],"225":[5,1,5,10],"226":[93,59,93,60],"233":[5,1,5,20],"234":[95,17,95,49],"241":[6,5,6,9],"242":[103,13,103,29],"249":[6,5,6,17],"250":[119,17,119,37],"257":[6,23,6,26],"258":[121,24,121,44],"265":[6,5,6,27],"266":[123,24,123,45],"267":[6,5,6,22],"273":[6,5,6,28],"274":[124,21,124,35],"281":[7,12,7,16],"282":[126,28,126,43],"289":[7,12,7,16],"290":[131,24,131,42],"297":[7,5,7,17],"298":[134,33,134,70],"305":[5,29,8,2],"306":[134,33,134,85],"313":[5,29,8,2],"314":[134,33,134,97],"321":[5,29,8,2],"329":[5,29,8,2],"337":[5,1,8,2],"345":[5,1,8,3],"353":[9,1,9,10],"361":[9,1,9,20],"369":[10,12,10,16],"377":[10,12,10,24],"385":[10,12,10,24],"393":[10,5,10,25],"401":[9,33,11,2],"409":[9,33,11,2],"417":[9,33,11,2],"425":[9,1,11,2],"433":[9,1,11,3],"441":[13,18,13,20],"449":[13,18,13,20],"457":[13,18,13,20],"465":[14,22,14,24],"473":[14,22,14,24],"481":[14,22,14,24],"489":[15,5,15,11],"497":[16,15,16,23],"505":[17,15,17,21],"513":[15,12,18,6],"521":[15,5,18,7],"529":[15,5,18,8],"537":[19,5,19,11],"545":[20,15,20,23],"553":[21,15,21,21],"561":[19,12,22,6],"569":[19,5,22,7],"577":[19,5,22,8],"585":[23,5,23,11],"593":[24,15,24,24],"601":[25,15,25,22],"609":[23,12,26,6],"617":[23,5,26,7],"625":[23,5,26,8],"633":[28,14,28,18],"641":[28,14,28,23],"649":[29,23,29,28],"657":[29,29,29,70],"665":[29,19,29,71],"673":[29,19,29,71],"681":[29,13,29,72],"689":[31,13,31,14],"697":[31,15,31,21],"705":[31,13,31,22],"713":[31,40,31,44],"721":[31,40,31,49],"729":[31,32,31,51],"737":[31,13,31,52],"739":[31,13,31,31],"745":[32,23,32,28],"753":[32,29,32,36],"761":[32,39,32,41],"769":[32,44,32,48],"777":[32,44,32,53],"785":[32,39,32,54],"787":[32,39,32,43],"793":[32,57,32,79],"801":[32,19,32,80],"809":[32,19,32,80],"817":[32,13,32,81],"825":[34,9,34,15],"833":[34,21,34,25],"841":[34,9,34,26],"843":[34,9,34,20],"849":[34,9,34,27],"857":[35,22,35,23],"865":[35,24,35,30],"873":[35,22,35,31],"881":[35,38,35,44],"889":[35,22,35,45],"891":[35,22,35,37],"897":[35,22,35,55],"899":[35,22,35,53],"905":[35,22,35,55],"913":[35,9,35,56],"921":[27,5,36,6],"929":[27,5,36,6],"937":[27,5,36,6],"945":[38,13,38,25],"953":[38,26,38,35],"961":[38,13,38,36],"969":[38,41,38,45],"977":[40,24,40,33],"985":[40,38,40,46],"993":[40,57,40,60],"1001":[40,65,40,73],"1009":[40,77,40,86],"1017":[40,91,40,99],"1025":[40,110,40,113],"1033":[40,118,40,126],"1041":[40,130,40,139],"1049":[40,144,40,153],"1057":[40,164,40,167],"1065":[40,172,40,181],"1073":[40,24,40,181],"1081":[40,17,40,182],"1089":[39,20,41,14],"1097":[39,20,41,14],"1105":[39,20,41,14],"1113":[39,20,41,14],"1121":[39,20,41,14],"1129":[39,13,41,15],"1137":[42,20,42,27],"1145":[42,28,42,37],"1153":[42,20,42,38],"1161":[44,34,44,40],"1169":[44,41,44,50],"1177":[44,61,44,62],"1185":[44,41,44,63],"1187":[44,41,44,60],"1193":[44,74,44,75],"1201":[44,77,44,86],"1209":[44,77,44,93],"1217":[44,96,44,97],"1225":[44,41,44,98],"1227":[44,41,44,73],"1233":[44,30,44,99],"1241":[44,30,44,99],"1249":[44,30,44,99],"1257":[46,28,46,34],"1265":[46,40,46,43],"1273":[46,28,46,44],"1275":[46,28,46,39],"1281":[46,28,46,44],"1289":[46,21,46,45],"1297":[45,24,47,18],"1305":[45,24,47,18],"1313":[45,24,47,18],"1321":[45,24,47,18],"1329":[45,24,47,18],"1337":[45,17,47,19],"1345":[49,21,49,22],"1353":[49,34,49,45],"1361":[50,28,50,32],"1369":[50,28,50,32],"1377":[50,21,50,33],"1385":[52,23,52,24],"1393":[52,23,52,24],"1401":[52,17,52,25],"1409":[48,15,53,14],"1417":[55,26,55,48],"1425":[55,49,55,58],"1433":[55,26,55,59],"1441":[55,26,55,59],"1449":[55,26,55,59],"1457":[56,17,56,23],"1465":[56,28,56,32],"1473":[58,37,58,46],"1481":[58,33,58,48],"1489":[58,33,58,48],"1497":[58,33,58,48],"1505":[59,21,59,26],"1513":[59,33,59,36],"1521":[59,21,59,37],"1523":[59,21,59,32],"1529":[59,38,59,44],"1537":[59,21,59,47],"1539":[59,21,59,45],"1545":[59,21,59,48],"1553":[60,30,60,35],"1561":[60,30,60,47],"1563":[60,30,60,45],"1569":[60,51,60,56],"1577":[60,51,60,68],"1579":[60,51,60,66],"1585":[60,51,60,75],"1593":[60,78,60,79],"1601":[60,28,60,80],"1609":[60,21,60,81],"1617":[57,24,61,18],"1625":[57,24,61,18],"1633":[57,24,61,18],"1641":[57,24,61,18],"1649":[57,24,61,18],"1657":[57,24,61,18],"1665":[57,17,61,19],"1673":[64,16,64,20],"1681":[64,16,64,20],"1689":[64,9,64,21],"1697":[37,5,65,6],"1705":[37,5,65,6],"1713":[37,5,65,6],"1721":[37,5,65,6],"1729":[37,5,65,6],"1737":[67,13,67,29],"1745":[67,30,67,34],"1753":[67,37,67,41],"1761":[67,13,67,42],"1769":[68,20,68,24],"1777":[68,27,68,31],"1785":[68,20,68,31],"1793":[68,13,68,32],"1801":[70,13,70,29],"1809":[70,30,70,34],"1817":[70,13,70,35],"1825":[71,20,71,24],"1833":[71,20,71,24],"1841":[71,13,71,25],"1849":[73,16,73,20],"1857":[73,16,73,20],"1865":[73,9,73,21],"1873":[75,30,75,39],"1881":[75,26,75,41],"1889":[75,48,75,67],"1897":[75,26,75,68],"1899":[75,26,75,47],"1905":[75,69,75,77],"1913":[75,26,75,78],"1921":[75,26,75,78],"1929":[75,26,75,78],"1937":[76,20,76,26],"1945":[76,37,76,43],"1953":[76,48,76,58],"1961":[76,20,76,58],"1969":[76,13,76,59],"1977":[74,9,77,10],"1985":[74,9,77,10],"1993":[74,9,77,10],"2001":[74,9,77,10],"2009":[66,5,78,6],"2017":[66,5,78,6],"2025":[66,5,78,6],"2033":[74,9,77,10],"2041":[66,5,78,6],"2049":[80,16,80,25],"2057":[80,34,80,37],"2065":[80,16,80,38],"2067":[80,16,80,33],"2073":[80,43,80,44],"2081":[80,48,80,57],"2089":[80,70,80,73],"2097":[80,48,80,74],"2099":[80,48,80,69],"2105":[80,79,80,88],"2113":[80,79,80,95],"2121":[80,98,80,99],"2129":[80,16,80,99],"2137":[80,9,80,100],"2145":[79,5,81,6],"2153":[79,5,81,6],"2161":[79,5,81,6],"2169":[83,25,83,37],"2177":[83,38,83,47],"2185":[83,25,83,48],"2193":[83,25,83,48],"2201":[83,25,83,48],"2209":[84,16,84,17],"2217":[84,18,84,27],"2225":[84,16,84,28],"2233":[85,20,85,40],"2241":[85,41,85,45],"2249":[85,20,85,46],"2257":[85,51,85,55],"2265":[85,20,85,55],"2273":[85,13,85,56],"2281":[84,35,86,10],"2289":[84,35,86,10],"2297":[84,35,86,10],"2305":[84,35,86,10],"2313":[84,16,86,11],"2315":[84,16,84,34],"2321":[84,16,86,11],"2329":[84,9,86,12],"2337":[82,5,87,6],"2345":[82,5,87,6],"2353":[82,5,87,6],"2361":[82,5,87,6],"2369":[89,16,89,25],"2377":[89,34,89,41],"2385":[89,43,89,45],"2393":[89,16,89,46],"2395":[89,16,89,33],"2401":[89,55,89,61],"2409":[89,16,89,62],"2411":[89,16,89,54],"2417":[89,69,89,79],"2425":[89,16,89,80],"2427":[89,16,89,68],"2433":[89,16,89,80],"2441":[89,9,89,81],"2449":[88,5,90,6],"2457":[88,5,90,6],"2465":[88,5,90,6],"2473":[92,21,92,33],"2481":[92,34,92,43],"2489":[92,21,92,44],"2497":[92,21,92,44],"2505":[92,21,92,44],"2513":[93,22,93,23],"2521":[93,31,93,36],"2529":[93,31,93,43],"2537":[93,22,93,23],"2545":[93,22,93,23],"2553":[93,31,93,43],"2561":[93,31,93,43],"2569":[93,45,93,46],"2577":[93,49,93,52],"2585":[93,59,93,60],"2593":[93,54,93,55],"2601":[93,54,93,60],"2609":[94,24,94,29],"2617":[94,30,94,31],"2625":[94,24,94,32],"2633":[94,24,94,32],"2641":[94,24,94,32],"2649":[95,18,95,38],"2657":[95,39,95,43],"2665":[95,18,95,44],"2673":[95,45,95,48],"2681":[95,18,95,49],"2689":[96,24,96,29],"2697":[96,24,96,29],"2705":[96,17,96,30],"2713":[99,16,99,20],"2721":[99,16,99,20],"2729":[99,9,99,21],"2737":[91,5,100,6],"2745":[91,5,100,6],"2753":[91,5,100,6],"2761":[91,5,100,6],"2769":[91,5,100,6],"2777":[91,5,100,6],"2785":[91,5,100,6],"2793":[91,5,100,6],"2801":[102,19,102,20],"2809":[102,34,102,44],"2817":[102,46,102,58],"2825":[102,59,102,68],"2833":[102,46,102,69],"2841":[102,19,102,70],"2843":[102,19,102,33],"2849":[102,19,102,70],"2857":[102,19,102,70],"2865":[103,13,103,16],"2873":[103,13,103,23],"2881":[103,28,103,29],"2889":[104,24,104,25],"2897":[104,26,104,32],"2905":[104,24,104,33],"2913":[104,47,104,50],"2921":[104,51,104,52],"2929":[104,47,104,53],"2937":[104,39,104,55],"2945":[104,24,104,56],"2947":[104,24,104,38],"2953":[104,24,104,56],"2961":[104,24,104,56],"2969":[105,20,105,24],"2977":[105,20,105,29],"2985":[105,20,105,29],"2993":[105,13,105,30],"3001":[107,16,107,20],"3009":[107,16,107,20],"3017":[107,9,107,21],"3025":[101,5,108,6],"3033":[101,5,108,6],"3041":[101,5,108,6],"3049":[101,5,108,6],"3057":[101,5,108,6],"3065":[110,13,110,18],"3073":[110,27,110,36],"3081":[110,27,110,41],"3089":[110,13,110,42],"3091":[110,13,110,26],"3097":[111,20,111,21],"3105":[111,22,111,25],"3113":[111,20,111,26],"3121":[112,24,112,38],"3129":[112,39,112,48],"3137":[112,39,112,53],"3145":[112,54,112,55],"3153":[112,39,112,56],"3161":[112,58,112,61],"3169":[112,24,112,62],"3177":[112,24,112,62],"3185":[112,17,112,63],"3193":[111,31,113,14],"3201":[111,31,113,14],"3209":[111,31,113,14],"3217":[111,31,113,14],"3225":[111,20,113,15],"3227":[111,20,111,30],"3233":[111,20,113,25],"3235":[111,20,113,23],"3241":[111,20,113,25],"3249":[111,13,113,26],"3257":[115,20,115,34],"3265":[115,35,115,44],"3273":[115,35,115,49],"3281":[115,51,115,54],"3289":[115,20,115,55],"3297":[115,20,115,55],"3305":[115,13,115,56],"3313":[118,29,118,41],"3321":[118,42,118,51],"3329":[118,29,118,52],"3337":[118,29,118,52],"3345":[118,29,118,52],"3353":[119,17,119,26],"3361":[119,31,119,37],"3369":[120,24,120,27],"3377":[120,24,120,27],"3385":[120,17,120,28],"3393":[121,24,121,33],"3401":[121,38,121,44],"3409":[122,24,122,34],"3417":[122,35,122,38],"3425":[122,24,122,39],"3433":[122,24,122,39],"3441":[122,17,122,40],"3449":[123,24,123,33],"3457":[123,38,123,45],"3465":[124,21,124,24],"3473":[124,29,124,35],"3481":[125,28,125,32],"3489":[125,28,125,32],"3497":[125,21,125,33],"3505":[126,28,126,31],"3513":[126,36,126,43],"3521":[127,28,127,33],"3529":[127,28,127,33],"3537":[127,21,127,34],"3545":[129,28,129,32],"3553":[129,28,129,32],"3561":[129,21,129,33],"3569":[131,24,131,33],"3577":[131,38,131,42],"3585":[132,24,132,27],"3593":[132,24,132,27],"3601":[132,17,132,28],"3609":[134,27,134,32],"3617":[134,33,134,58],"3625":[134,61,134,70],"3633":[134,73,134,85],"3641":[134,88,134,97],"3649":[134,23,134,98],"3657":[134,23,134,98],"3665":[134,17,134,99],"3673":[117,9,136,10],"3681":[117,9,136,10],"3689":[117,9,136,10],"3697":[117,9,136,10],"3705":[117,9,136,10],"3713":[109,5,137,6],"3721":[109,5,137,6],"3729":[109,5,137,6],"3737":[109,5,137,6],"3745":[117,9,136,10],"3753":[109,5,137,6],"3761":[139,19,139,27],"3769":[140,16,140,21],"3777":[141,28,141,45],"3785":[138,12,142,6],"3793":[138,12,142,6],"3801":[138,5,142,7],"3809":[12,13,143,2],"3817":[12,13,143,2],"3825":[12,13,143,2],"3833":[12,13,143,2],"3841":[27,5,36,6],"3849":[12,13,143,2],"3857":[37,5,65,6],"3865":[12,13,143,2],"3873":[66,5,78,6],"3881":[12,13,143,2],"3889":[79,5,81,6],"3897":[12,13,143,2],"3905":[82,5,87,6],"3913":[12,13,143,2],"3921":[88,5,90,6],"3929":[12,13,143,2],"3937":[91,5,100,6],"3945":[12,13,143,2],"3953":[101,5,108,6],"3961":[12,13,143,2],"3969":[109,5,137,6],"3977":[12,13,143,2],"3985":[12,13,143,2],"3993":[12,13,143,4],"4001":[12,13,143,4],"4009":[12,13,143,4],"4017":[144,1,144,7],"4025":[144,18,144,23],"4033":[144,1,144,23],"4041":[144,1,144,24],"4049":[1,1,144,24],"4057":[1,1,144,24],"4065":[1,1,144,24],"4073":[1,1,144,24],"4081":[1,1,144,24],"4089":[1,1,144,24],"4097":[1,1,144,24],"4105":[5,29,8,2],"4113":[5,29,8,2],"4121":[9,33,11,2],"4129":[9,33,11,2],"4137":[28,9,30,10],"4145":[31,9,33,10],"4153":[27,5,36,6],"4161":[27,5,36,6],"4169":[39,20,41,14],"4177":[39,20,41,14],"4185":[45,24,47,18],"4193":[45,24,47,18],"4201":[49,17,51,18],"4209":[57,24,61,18],"4217":[57,24,61,18],"4225":[56,13,62,14],"4233":[42,16,63,10],"4241":[38,9,63,10],"4249":[37,5,65,6],"4257":[37,5,65,6],"4265":[67,9,69,10],"4273":[70,9,72,10],"4281":[74,9,77,10],"4289":[74,9,77,10],"4297":[66,5,78,6],"4305":[66,5,78,6],"4313":[79,5,81,6],"4321":[79,5,81,6],"4329":[84,35,86,10],"4337":[84,35,86,10],"4345":[82,5,87,6],"4353":[82,5,87,6],"4361":[88,5,90,6],"4369":[88,5,90,6],"4377":[95,13,97,14],"4385":[93,9,98,10],"4393":[93,9,98,10],"4401":[91,5,100,6],"4409":[91,5,100,6],"4417":[103,9,106,10],"4425":[101,5,108,6],"4433":[101,5,108,6],"4441":[111,31,113,14],"4449":[111,31,113,14],"4457":[110,9,116,10],"4465":[126,24,130,18],"4473":[124,17,130,18],"4481":[131,20,135,14],"4489":[123,20,135,14],"4497":[121,20,135,14],"4505":[119,13,135,14],"4513":[117,9,136,10],"4521":[117,9,136,10],"4529":[109,5,137,6],"4537":[109,5,137,6],"4545":[12,13,143,2],"4553":[12,13,143,2],"4561":[1,1,144,24],"4569":[1,1,144,24],"nBranches":52,"originalCodeFileName":"/home/blake/ExpoSE/Targets/roose/node_modules/roose/lib/types.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/roose/node_modules/roose/lib/types_jalangi_.js","code":"'use strict';\n\nvar _ = require('lodash')\n\t, Validator = require('validator').Validator\n\t, _h = require('./helper')\n\t;\n\nValidator.prototype.error = function (msg) {\n\tthis._errors.push(msg);\n\treturn this;\n};\n\nValidator.prototype.getErrors = function () {\n\treturn this._errors;\n};\n\nvar Types = (function () {\n\tvar _types = [];\n\tvar _typeNames = [];\n\n\tdefine({\n\t\tname: 'string',\n\t\ttype: String\n\t});\n\n\tdefine({\n\t\tname: 'number',\n\t\ttype: Number\n\t});\n\n\tdefine({\n\t\tname: 'boolean',\n\t\ttype: Boolean\n\t});\n\n\tfunction define (spec) {\n\t\tif (!spec.name) {\n\t\t\tthrow new Error('Type spec does not include a type name.');\n\t\t}\n\n\t\tif (_(_types).contains({name: spec.name})) {\n\t\t\tthrow new Error('Type ' + _h.q(spec.name) + ' is already defined.');\n\t\t}\n\n\t\t_types.push(spec);\n\t\t_typeNames = _(_types).pluck('name').valueOf();\n\t}\n\n\tfunction getValidationCommand (type_spec) {\n\t\tif (getPrimitive(type_spec) !== null) {\n\t\t\treturn function (val) {\n\t\t\t\treturn (type_spec === 'string' && typeof val === 'string')\n\t\t\t\t\t|| (type_spec === 'number' && typeof val === 'number')\n\t\t\t\t\t|| (type_spec === 'boolean' && typeof val === 'boolean');\n\t\t\t};\n\t\t} else if (isRegex(type_spec)) {\n\t\t\ttry {\n\t\t\t\tvar regexp = new RegExp(type_spec.substring(1).substring(0, type_spec.length - 2));\n\t\t\t\treturn function (val) {\t\n\t\t\t\t\treturn regexp.test(val);\n\t\t\t\t};\n\t\t\t} catch (e) {\n\t\t\t\tif (e instanceof SyntaxError) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t} else {\n\t\t\tvar method = implyValidatorFunction(type_spec);\n\n\t\t\tif (method !== null) {\n\t\t\t\treturn function (val) {\n\t\t\t\t\tvar valid = new Validator();\n\t\t\t\t\tvalid.check(val)[method]();\n\t\t\t\t\treturn !(valid.getErrors() && valid.getErrors().length > 0);\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction implyValidatorFunction (name) {\n\t\tif (validatorDefined('is' + name)) {\n\t\t\treturn 'is' + name;\n\t\t}\n\n\t\tif (validatorDefined(name)) {\n\t\t\treturn name;\n\t\t}\n\n\t\treturn null;\n\n\t\tfunction validatorDefined (funcName) {\n\t\t\tvar method = new Validator().check('some random value')[funcName];\n\t\t\treturn method && typeof method === 'function';\n\t\t}\n\t}\n\n\tfunction isRegex (type_spec) {\n\t\treturn type_spec.indexOf('/') === 0 && type_spec.lastIndexOf('/') === type_spec.length - 1;\n\t}\n\n\tfunction isValidDefinition (type_spec) {\n\t\tvar typeParts = getTypeParts(type_spec);\n\n\t\treturn _(typeParts).every(function (type) {\n\t\t\treturn getValidationCommand(type) !== null;\n\t\t});\n\t}\n\n\tfunction getTypeParts (type_spec) {\n\t\treturn type_spec.replace(/^\\s+/g, '').replace(/\\s+$/).split(/\\s+\\|\\s+/);\n\t}\n\n\tfunction validate (type_spec, val) {\n\t\t//debug('Validating type ' + util.inspect(type_spec));\n\n\t\tvar types = getTypeParts(type_spec);\n\t\tfor (var t = 0, len = types.length; t < len; t += 1) {\n\t\t\tvar type = types[t];\n\n\t\t\tif (!getValidationCommand(type)(val)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction getPrimitive (type_spec) {\n\t\tvar res = _.intersection(_typeNames, getTypeParts(type_spec));\n\t\tif (res.length === 1) {\n\t\t\tvar type = _(_types).find({name: res[0]});\n\t\t\treturn type.type;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction parse (type_spec, val) {\n\t\tif (Array.isArray(type_spec.type)) {\n\t\t\treturn _(val).map(function (ele) {\n\t\t\t\treturn parsePrimitive(type_spec.type[0], ele);\n\t\t\t}).valueOf();\n\t\t} else {\n\t\t\treturn parsePrimitive(type_spec.type, val);\n\t\t}\n\n\t\tfunction parsePrimitive (type_spec, ele) {\n\t\t\tvar primitive = getPrimitive(type_spec);\n\t\t\tif (primitive === String) {\n\t\t\t\treturn ele;\n\t\t\t} else if (primitive === Number) {\n\t\t\t\treturn parseFloat(ele);\n\t\t\t} else if (primitive === Boolean) {\n\t\t\t\tif (ele === 'true') {\n\t\t\t\t\treturn true;\n\t\t\t\t} else if (ele === 'false') {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else if (primitive === null) {\n\t\t\t\t// No primitive defined. It's okay.\n\t\t\t\treturn ele;\n\t\t\t} else {\n\t\t\t\tthrow new Error('Unknown primitive type=' + primitive + ' for spec ' + type_spec);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tvalidate: validate,\n\t\tparse: parse,\n\t\tisValidDefinition: isValidDefinition\n\t};\n})();\n\nmodule.exports = Types;"};
jalangiLabel499:
    while (true) {
        try {
            J$.Se(4049, '/home/blake/ExpoSE/Targets/roose/node_modules/roose/lib/types_jalangi_.js', '/home/blake/ExpoSE/Targets/roose/node_modules/roose/lib/types.js');
            J$.N(4057, '__secret__S$', __secret__S$, 0);
            J$.N(4065, '__secret__traits__', __secret__traits__, 0);
            J$.N(4073, '_', _, 0);
            J$.N(4081, 'Validator', Validator, 0);
            J$.N(4089, '_h', _h, 0);
            J$.N(4097, 'Types', Types, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var _ = J$.X1(185, J$.W(177, '_', J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'lodash', 21, false)), _, 3)), Validator = J$.X1(201, J$.W(193, 'Validator', J$.G(145, J$.F(137, J$.R(121, 'require', require, 2), 0)(J$.T(129, 'validator', 21, false)), 'Validator', 0), Validator, 3)), _h = J$.X1(217, J$.W(209, '_h', J$.F(169, J$.R(153, 'require', require, 2), 0)(J$.T(161, './helper', 21, false)), _h, 3));
            J$.X1(345, J$.P(337, J$.G(233, J$.R(225, 'Validator', Validator, 1), 'prototype', 0), 'error', J$.T(329, function (msg) {
                jalangiLabel480:
                    while (true) {
                        try {
                            J$.Fe(305, arguments.callee, this, arguments);
                            arguments = J$.N(313, 'arguments', arguments, 4);
                            msg = J$.N(321, 'msg', msg, 4);
                            J$.X1(273, J$.M(265, J$.G(249, J$.R(241, 'this', this, 0), '_errors', 0), 'push', 0)(J$.R(257, 'msg', msg, 0)));
                            return J$.X1(297, J$.Rt(289, J$.R(281, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(4105, J$e);
                        } finally {
                            if (J$.Fr(4113))
                                continue jalangiLabel480;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 305), 0));
            J$.X1(433, J$.P(425, J$.G(361, J$.R(353, 'Validator', Validator, 1), 'prototype', 0), 'getErrors', J$.T(417, function () {
                jalangiLabel481:
                    while (true) {
                        try {
                            J$.Fe(401, arguments.callee, this, arguments);
                            arguments = J$.N(409, 'arguments', arguments, 4);
                            return J$.X1(393, J$.Rt(385, J$.G(377, J$.R(369, 'this', this, 0), '_errors', 0)));
                        } catch (J$e) {
                            J$.Ex(4121, J$e);
                        } finally {
                            if (J$.Fr(4129))
                                continue jalangiLabel481;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 401), 0));
            var Types = J$.X1(4009, J$.W(4001, 'Types', J$.F(3993, J$.T(3985, function () {
                jalangiLabel498:
                    while (true) {
                        try {
                            J$.Fe(3809, arguments.callee, this, arguments);
                            function define(spec) {
                                jalangiLabel482:
                                    while (true) {
                                        try {
                                            J$.Fe(921, arguments.callee, this, arguments);
                                            arguments = J$.N(929, 'arguments', arguments, 4);
                                            spec = J$.N(937, 'spec', spec, 4);
                                            if (J$.X1(4137, J$.C(8, J$.U(10, '!', J$.G(641, J$.R(633, 'spec', spec, 0), 'name', 0))))) {
                                                throw J$.X1(681, J$.Th(673, J$.F(665, J$.R(649, 'Error', Error, 2), 1)(J$.T(657, 'Type spec does not include a type name.', 21, false))));
                                            }
                                            if (J$.X1(4145, J$.C(16, J$.M(737, J$.F(705, J$.R(689, '_', _, 1), 0)(J$.R(697, '_types', _types, 0)), 'contains', 0)(J$.T(729, {
                                                    name: J$.G(721, J$.R(713, 'spec', spec, 0), 'name', 0)
                                                }, 11, false))))) {
                                                throw J$.X1(817, J$.Th(809, J$.F(801, J$.R(745, 'Error', Error, 2), 1)(J$.B(26, '+', J$.B(18, '+', J$.T(753, 'Type ', 21, false), J$.M(785, J$.R(761, '_h', _h, 1), 'q', 0)(J$.G(777, J$.R(769, 'spec', spec, 0), 'name', 0)), 0), J$.T(793, ' is already defined.', 21, false), 0))));
                                            }
                                            J$.X1(849, J$.M(841, J$.R(825, '_types', _types, 0), 'push', 0)(J$.R(833, 'spec', spec, 0)));
                                            J$.X1(913, _typeNames = J$.W(905, '_typeNames', J$.M(897, J$.M(889, J$.F(873, J$.R(857, '_', _, 1), 0)(J$.R(865, '_types', _types, 0)), 'pluck', 0)(J$.T(881, 'name', 21, false)), 'valueOf', 0)(), _typeNames, 0));
                                        } catch (J$e) {
                                            J$.Ex(4153, J$e);
                                        } finally {
                                            if (J$.Fr(4161))
                                                continue jalangiLabel482;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function getValidationCommand(type_spec) {
                                jalangiLabel486:
                                    while (true) {
                                        try {
                                            J$.Fe(1697, arguments.callee, this, arguments);
                                            arguments = J$.N(1705, 'arguments', arguments, 4);
                                            type_spec = J$.N(1713, 'type_spec', type_spec, 4);
                                            J$.N(1721, 'regexp', regexp, 0);
                                            J$.N(1729, 'method', method, 0);
                                            if (J$.X1(4241, J$.C(96, J$.B(34, '!==', J$.F(961, J$.R(945, 'getPrimitive', getPrimitive, 0), 0)(J$.R(953, 'type_spec', type_spec, 0)), J$.T(969, null, 25, false), 0)))) {
                                                return J$.X1(1129, J$.Rt(1121, J$.T(1113, function (val) {
                                                    jalangiLabel483:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(1089, arguments.callee, this, arguments);
                                                                arguments = J$.N(1097, 'arguments', arguments, 4);
                                                                val = J$.N(1105, 'val', val, 4);
                                                                return J$.X1(1081, J$.Rt(1073, J$.C(56, J$.C(40, J$.C(24, J$.B(42, '===', J$.R(977, 'type_spec', type_spec, 0), J$.T(985, 'string', 21, false), 0)) ? J$.B(58, '===', J$.U(50, 'typeof', J$.R(993, 'val', val, 0)), J$.T(1001, 'string', 21, false), 0) : J$._()) ? J$._() : J$.C(32, J$.B(66, '===', J$.R(1009, 'type_spec', type_spec, 0), J$.T(1017, 'number', 21, false), 0)) ? J$.B(82, '===', J$.U(74, 'typeof', J$.R(1025, 'val', val, 0)), J$.T(1033, 'number', 21, false), 0) : J$._()) ? J$._() : J$.C(48, J$.B(90, '===', J$.R(1041, 'type_spec', type_spec, 0), J$.T(1049, 'boolean', 21, false), 0)) ? J$.B(106, '===', J$.U(98, 'typeof', J$.R(1057, 'val', val, 0)), J$.T(1065, 'boolean', 21, false), 0) : J$._()));
                                                            } catch (J$e) {
                                                                J$.Ex(4169, J$e);
                                                            } finally {
                                                                if (J$.Fr(4177))
                                                                    continue jalangiLabel483;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 1089)));
                                            } else if (J$.X1(4233, J$.C(88, J$.F(1153, J$.R(1137, 'isRegex', isRegex, 0), 0)(J$.R(1145, 'type_spec', type_spec, 0))))) {
                                                try {
                                                    var regexp = J$.X1(1249, J$.W(1241, 'regexp', J$.F(1233, J$.R(1161, 'RegExp', RegExp, 2), 1)(J$.M(1225, J$.M(1185, J$.R(1169, 'type_spec', type_spec, 0), 'substring', 0)(J$.T(1177, 1, 22, false)), 'substring', 0)(J$.T(1193, 0, 22, false), J$.B(114, '-', J$.G(1209, J$.R(1201, 'type_spec', type_spec, 0), 'length', 0), J$.T(1217, 2, 22, false), 0))), regexp, 1));
                                                    return J$.X1(1337, J$.Rt(1329, J$.T(1321, function (val) {
                                                        jalangiLabel484:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(1297, arguments.callee, this, arguments);
                                                                    arguments = J$.N(1305, 'arguments', arguments, 4);
                                                                    val = J$.N(1313, 'val', val, 4);
                                                                    return J$.X1(1289, J$.Rt(1281, J$.M(1273, J$.R(1257, 'regexp', regexp, 0), 'test', 0)(J$.R(1265, 'val', val, 0))));
                                                                } catch (J$e) {
                                                                    J$.Ex(4185, J$e);
                                                                } finally {
                                                                    if (J$.Fr(4193))
                                                                        continue jalangiLabel484;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false, 1297)));
                                                } catch (e) {
                                                    e = J$.N(1409, 'e', e, 1);
                                                    if (J$.X1(4201, J$.C(64, J$.B(122, 'instanceof', J$.R(1345, 'e', e, 0), J$.R(1353, 'SyntaxError', SyntaxError, 2), 0)))) {
                                                        return J$.X1(1377, J$.Rt(1369, J$.T(1361, null, 25, false)));
                                                    }
                                                    throw J$.X1(1401, J$.Th(1393, J$.R(1385, 'e', e, 0)));
                                                }
                                            } else {
                                                var method = J$.X1(1449, J$.W(1441, 'method', J$.F(1433, J$.R(1417, 'implyValidatorFunction', implyValidatorFunction, 0), 0)(J$.R(1425, 'type_spec', type_spec, 0)), method, 1));
                                                if (J$.X1(4225, J$.C(80, J$.B(130, '!==', J$.R(1457, 'method', method, 0), J$.T(1465, null, 25, false), 0)))) {
                                                    return J$.X1(1665, J$.Rt(1657, J$.T(1649, function (val) {
                                                        jalangiLabel485:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(1617, arguments.callee, this, arguments);
                                                                    arguments = J$.N(1625, 'arguments', arguments, 4);
                                                                    val = J$.N(1633, 'val', val, 4);
                                                                    J$.N(1641, 'valid', valid, 0);
                                                                    var valid = J$.X1(1497, J$.W(1489, 'valid', J$.F(1481, J$.R(1473, 'Validator', Validator, 1), 1)(), valid, 1));
                                                                    J$.X1(1545, J$.M(1537, J$.M(1521, J$.R(1505, 'valid', valid, 0), 'check', 0)(J$.R(1513, 'val', val, 0)), J$.R(1529, 'method', method, 0), 1)());
                                                                    return J$.X1(1609, J$.Rt(1601, J$.U(146, '!', J$.C(72, J$.M(1561, J$.R(1553, 'valid', valid, 0), 'getErrors', 0)()) ? J$.B(138, '>', J$.G(1585, J$.M(1577, J$.R(1569, 'valid', valid, 0), 'getErrors', 0)(), 'length', 0), J$.T(1593, 0, 22, false), 0) : J$._())));
                                                                } catch (J$e) {
                                                                    J$.Ex(4209, J$e);
                                                                } finally {
                                                                    if (J$.Fr(4217))
                                                                        continue jalangiLabel485;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false, 1617)));
                                                }
                                            }
                                            return J$.X1(1689, J$.Rt(1681, J$.T(1673, null, 25, false)));
                                        } catch (J$e) {
                                            J$.Ex(4249, J$e);
                                        } finally {
                                            if (J$.Fr(4257))
                                                continue jalangiLabel486;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function implyValidatorFunction(name) {
                                jalangiLabel488:
                                    while (true) {
                                        try {
                                            J$.Fe(2009, arguments.callee, this, arguments);
                                            function validatorDefined(funcName) {
                                                jalangiLabel487:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1977, arguments.callee, this, arguments);
                                                            arguments = J$.N(1985, 'arguments', arguments, 4);
                                                            funcName = J$.N(1993, 'funcName', funcName, 4);
                                                            J$.N(2001, 'method', method, 0);
                                                            var method = J$.X1(1929, J$.W(1921, 'method', J$.G(1913, J$.M(1897, J$.F(1881, J$.R(1873, 'Validator', Validator, 1), 1)(), 'check', 0)(J$.T(1889, 'some random value', 21, false)), J$.R(1905, 'funcName', funcName, 0), 4), method, 1));
                                                            return J$.X1(1969, J$.Rt(1961, J$.C(120, J$.R(1937, 'method', method, 0)) ? J$.B(178, '===', J$.U(170, 'typeof', J$.R(1945, 'method', method, 0)), J$.T(1953, 'function', 21, false), 0) : J$._()));
                                                        } catch (J$e) {
                                                            J$.Ex(4281, J$e);
                                                        } finally {
                                                            if (J$.Fr(4289))
                                                                continue jalangiLabel487;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }
                                            arguments = J$.N(2017, 'arguments', arguments, 4);
                                            name = J$.N(2025, 'name', name, 4);
                                            validatorDefined = J$.N(2041, 'validatorDefined', J$.T(2033, validatorDefined, 12, false, 1977), 0);
                                            if (J$.X1(4265, J$.C(104, J$.F(1761, J$.R(1737, 'validatorDefined', validatorDefined, 0), 0)(J$.B(154, '+', J$.T(1745, 'is', 21, false), J$.R(1753, 'name', name, 0), 0))))) {
                                                return J$.X1(1793, J$.Rt(1785, J$.B(162, '+', J$.T(1769, 'is', 21, false), J$.R(1777, 'name', name, 0), 0)));
                                            }
                                            if (J$.X1(4273, J$.C(112, J$.F(1817, J$.R(1801, 'validatorDefined', validatorDefined, 0), 0)(J$.R(1809, 'name', name, 0))))) {
                                                return J$.X1(1841, J$.Rt(1833, J$.R(1825, 'name', name, 0)));
                                            }
                                            return J$.X1(1865, J$.Rt(1857, J$.T(1849, null, 25, false)));
                                        } catch (J$e) {
                                            J$.Ex(4297, J$e);
                                        } finally {
                                            if (J$.Fr(4305))
                                                continue jalangiLabel488;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function isRegex(type_spec) {
                                jalangiLabel489:
                                    while (true) {
                                        try {
                                            J$.Fe(2145, arguments.callee, this, arguments);
                                            arguments = J$.N(2153, 'arguments', arguments, 4);
                                            type_spec = J$.N(2161, 'type_spec', type_spec, 4);
                                            return J$.X1(2137, J$.Rt(2129, J$.C(128, J$.B(186, '===', J$.M(2065, J$.R(2049, 'type_spec', type_spec, 0), 'indexOf', 0)(J$.T(2057, '/', 21, false)), J$.T(2073, 0, 22, false), 0)) ? J$.B(202, '===', J$.M(2097, J$.R(2081, 'type_spec', type_spec, 0), 'lastIndexOf', 0)(J$.T(2089, '/', 21, false)), J$.B(194, '-', J$.G(2113, J$.R(2105, 'type_spec', type_spec, 0), 'length', 0), J$.T(2121, 1, 22, false), 0), 0) : J$._()));
                                        } catch (J$e) {
                                            J$.Ex(4313, J$e);
                                        } finally {
                                            if (J$.Fr(4321))
                                                continue jalangiLabel489;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function isValidDefinition(type_spec) {
                                jalangiLabel491:
                                    while (true) {
                                        try {
                                            J$.Fe(2337, arguments.callee, this, arguments);
                                            arguments = J$.N(2345, 'arguments', arguments, 4);
                                            type_spec = J$.N(2353, 'type_spec', type_spec, 4);
                                            J$.N(2361, 'typeParts', typeParts, 0);
                                            var typeParts = J$.X1(2201, J$.W(2193, 'typeParts', J$.F(2185, J$.R(2169, 'getTypeParts', getTypeParts, 0), 0)(J$.R(2177, 'type_spec', type_spec, 0)), typeParts, 1));
                                            return J$.X1(2329, J$.Rt(2321, J$.M(2313, J$.F(2225, J$.R(2209, '_', _, 1), 0)(J$.R(2217, 'typeParts', typeParts, 0)), 'every', 0)(J$.T(2305, function (type) {
                                                jalangiLabel490:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(2281, arguments.callee, this, arguments);
                                                            arguments = J$.N(2289, 'arguments', arguments, 4);
                                                            type = J$.N(2297, 'type', type, 4);
                                                            return J$.X1(2273, J$.Rt(2265, J$.B(210, '!==', J$.F(2249, J$.R(2233, 'getValidationCommand', getValidationCommand, 0), 0)(J$.R(2241, 'type', type, 0)), J$.T(2257, null, 25, false), 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(4329, J$e);
                                                        } finally {
                                                            if (J$.Fr(4337))
                                                                continue jalangiLabel490;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 2281))));
                                        } catch (J$e) {
                                            J$.Ex(4345, J$e);
                                        } finally {
                                            if (J$.Fr(4353))
                                                continue jalangiLabel491;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function getTypeParts(type_spec) {
                                jalangiLabel492:
                                    while (true) {
                                        try {
                                            J$.Fe(2449, arguments.callee, this, arguments);
                                            arguments = J$.N(2457, 'arguments', arguments, 4);
                                            type_spec = J$.N(2465, 'type_spec', type_spec, 4);
                                            return J$.X1(2441, J$.Rt(2433, J$.M(2425, J$.M(2409, J$.M(2393, J$.R(2369, 'type_spec', type_spec, 0), 'replace', 0)(J$.T(2377, /^\s+/g, 14, false), J$.T(2385, '', 21, false)), 'replace', 0)(J$.T(2401, /\s+$/, 14, false)), 'split', 0)(J$.T(2417, /\s+\|\s+/, 14, false))));
                                        } catch (J$e) {
                                            J$.Ex(4361, J$e);
                                        } finally {
                                            if (J$.Fr(4369))
                                                continue jalangiLabel492;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function validate(type_spec, val) {
                                jalangiLabel493:
                                    while (true) {
                                        try {
                                            J$.Fe(2737, arguments.callee, this, arguments);
                                            arguments = J$.N(2745, 'arguments', arguments, 4);
                                            type_spec = J$.N(2753, 'type_spec', type_spec, 4);
                                            val = J$.N(2761, 'val', val, 4);
                                            J$.N(2769, 'types', types, 0);
                                            J$.N(2777, 't', t, 0);
                                            J$.N(2785, 'len', len, 0);
                                            J$.N(2793, 'type', type, 0);
                                            var types = J$.X1(2505, J$.W(2497, 'types', J$.F(2489, J$.R(2473, 'getTypeParts', getTypeParts, 0), 0)(J$.R(2481, 'type_spec', type_spec, 0)), types, 1));
                                            for (var t = J$.X1(2545, J$.W(2537, 't', J$.T(2513, 0, 22, false), t, 1)), len = J$.X1(2561, J$.W(2553, 'len', J$.G(2529, J$.R(2521, 'types', types, 0), 'length', 0), len, 1)); J$.X1(4385, J$.C(144, J$.B(218, '<', J$.R(2569, 't', t, 0), J$.R(2577, 'len', len, 0), 0))); J$.X1(4393, t = J$.W(2601, 't', J$.B(226, '+', J$.R(2593, 't', t, 0), J$.T(2585, 1, 22, false), 0), t, 0))) {
                                                var type = J$.X1(2641, J$.W(2633, 'type', J$.G(2625, J$.R(2609, 'types', types, 0), J$.R(2617, 't', t, 0), 4), type, 1));
                                                if (J$.X1(4377, J$.C(136, J$.U(234, '!', J$.F(2681, J$.F(2665, J$.R(2649, 'getValidationCommand', getValidationCommand, 0), 0)(J$.R(2657, 'type', type, 0)), 0)(J$.R(2673, 'val', val, 0)))))) {
                                                    return J$.X1(2705, J$.Rt(2697, J$.T(2689, false, 23, false)));
                                                }
                                            }
                                            return J$.X1(2729, J$.Rt(2721, J$.T(2713, true, 23, false)));
                                        } catch (J$e) {
                                            J$.Ex(4401, J$e);
                                        } finally {
                                            if (J$.Fr(4409))
                                                continue jalangiLabel493;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function getPrimitive(type_spec) {
                                jalangiLabel494:
                                    while (true) {
                                        try {
                                            J$.Fe(3025, arguments.callee, this, arguments);
                                            arguments = J$.N(3033, 'arguments', arguments, 4);
                                            type_spec = J$.N(3041, 'type_spec', type_spec, 4);
                                            J$.N(3049, 'res', res, 0);
                                            J$.N(3057, 'type', type, 0);
                                            var res = J$.X1(2857, J$.W(2849, 'res', J$.M(2841, J$.R(2801, '_', _, 1), 'intersection', 0)(J$.R(2809, '_typeNames', _typeNames, 0), J$.F(2833, J$.R(2817, 'getTypeParts', getTypeParts, 0), 0)(J$.R(2825, 'type_spec', type_spec, 0))), res, 1));
                                            if (J$.X1(4417, J$.C(152, J$.B(242, '===', J$.G(2873, J$.R(2865, 'res', res, 0), 'length', 0), J$.T(2881, 1, 22, false), 0)))) {
                                                var type = J$.X1(2961, J$.W(2953, 'type', J$.M(2945, J$.F(2905, J$.R(2889, '_', _, 1), 0)(J$.R(2897, '_types', _types, 0)), 'find', 0)(J$.T(2937, {
                                                    name: J$.G(2929, J$.R(2913, 'res', res, 0), J$.T(2921, 0, 22, false), 4)
                                                }, 11, false)), type, 1));
                                                return J$.X1(2993, J$.Rt(2985, J$.G(2977, J$.R(2969, 'type', type, 0), 'type', 0)));
                                            }
                                            return J$.X1(3017, J$.Rt(3009, J$.T(3001, null, 25, false)));
                                        } catch (J$e) {
                                            J$.Ex(4425, J$e);
                                        } finally {
                                            if (J$.Fr(4433))
                                                continue jalangiLabel494;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function parse(type_spec, val) {
                                jalangiLabel497:
                                    while (true) {
                                        try {
                                            J$.Fe(3713, arguments.callee, this, arguments);
                                            function parsePrimitive(type_spec, ele) {
                                                jalangiLabel496:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(3673, arguments.callee, this, arguments);
                                                            arguments = J$.N(3681, 'arguments', arguments, 4);
                                                            type_spec = J$.N(3689, 'type_spec', type_spec, 4);
                                                            ele = J$.N(3697, 'ele', ele, 4);
                                                            J$.N(3705, 'primitive', primitive, 0);
                                                            var primitive = J$.X1(3345, J$.W(3337, 'primitive', J$.F(3329, J$.R(3313, 'getPrimitive', getPrimitive, 0), 0)(J$.R(3321, 'type_spec', type_spec, 0)), primitive, 1));
                                                            if (J$.X1(4505, J$.C(208, J$.B(250, '===', J$.R(3353, 'primitive', primitive, 0), J$.R(3361, 'String', String, 2), 0)))) {
                                                                return J$.X1(3385, J$.Rt(3377, J$.R(3369, 'ele', ele, 0)));
                                                            } else if (J$.X1(4497, J$.C(200, J$.B(258, '===', J$.R(3393, 'primitive', primitive, 0), J$.R(3401, 'Number', Number, 2), 0)))) {
                                                                return J$.X1(3441, J$.Rt(3433, J$.F(3425, J$.R(3409, 'parseFloat', parseFloat, 2), 0)(J$.R(3417, 'ele', ele, 0))));
                                                            } else if (J$.X1(4489, J$.C(192, J$.B(266, '===', J$.R(3449, 'primitive', primitive, 0), J$.R(3457, 'Boolean', Boolean, 2), 0)))) {
                                                                if (J$.X1(4473, J$.C(176, J$.B(274, '===', J$.R(3465, 'ele', ele, 0), J$.T(3473, 'true', 21, false), 0)))) {
                                                                    return J$.X1(3497, J$.Rt(3489, J$.T(3481, true, 23, false)));
                                                                } else if (J$.X1(4465, J$.C(168, J$.B(282, '===', J$.R(3505, 'ele', ele, 0), J$.T(3513, 'false', 21, false), 0)))) {
                                                                    return J$.X1(3537, J$.Rt(3529, J$.T(3521, false, 23, false)));
                                                                } else {
                                                                    return J$.X1(3561, J$.Rt(3553, J$.T(3545, null, 25, false)));
                                                                }
                                                            } else if (J$.X1(4481, J$.C(184, J$.B(290, '===', J$.R(3569, 'primitive', primitive, 0), J$.T(3577, null, 25, false), 0)))) {
                                                                return J$.X1(3601, J$.Rt(3593, J$.R(3585, 'ele', ele, 0)));
                                                            } else {
                                                                throw J$.X1(3665, J$.Th(3657, J$.F(3649, J$.R(3609, 'Error', Error, 2), 1)(J$.B(314, '+', J$.B(306, '+', J$.B(298, '+', J$.T(3617, 'Unknown primitive type=', 21, false), J$.R(3625, 'primitive', primitive, 0), 0), J$.T(3633, ' for spec ', 21, false), 0), J$.R(3641, 'type_spec', type_spec, 0), 0))));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(4513, J$e);
                                                        } finally {
                                                            if (J$.Fr(4521))
                                                                continue jalangiLabel496;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }
                                            arguments = J$.N(3721, 'arguments', arguments, 4);
                                            type_spec = J$.N(3729, 'type_spec', type_spec, 4);
                                            val = J$.N(3737, 'val', val, 4);
                                            parsePrimitive = J$.N(3753, 'parsePrimitive', J$.T(3745, parsePrimitive, 12, false, 3673), 0);
                                            if (J$.X1(4457, J$.C(160, J$.M(3089, J$.R(3065, 'Array', Array, 2), 'isArray', 0)(J$.G(3081, J$.R(3073, 'type_spec', type_spec, 0), 'type', 0))))) {
                                                return J$.X1(3249, J$.Rt(3241, J$.M(3233, J$.M(3225, J$.F(3113, J$.R(3097, '_', _, 1), 0)(J$.R(3105, 'val', val, 0)), 'map', 0)(J$.T(3217, function (ele) {
                                                    jalangiLabel495:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(3193, arguments.callee, this, arguments);
                                                                arguments = J$.N(3201, 'arguments', arguments, 4);
                                                                ele = J$.N(3209, 'ele', ele, 4);
                                                                return J$.X1(3185, J$.Rt(3177, J$.F(3169, J$.R(3121, 'parsePrimitive', parsePrimitive, 0), 0)(J$.G(3153, J$.G(3137, J$.R(3129, 'type_spec', type_spec, 0), 'type', 0), J$.T(3145, 0, 22, false), 4), J$.R(3161, 'ele', ele, 0))));
                                                            } catch (J$e) {
                                                                J$.Ex(4441, J$e);
                                                            } finally {
                                                                if (J$.Fr(4449))
                                                                    continue jalangiLabel495;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 3193)), 'valueOf', 0)()));
                                            } else {
                                                return J$.X1(3305, J$.Rt(3297, J$.F(3289, J$.R(3257, 'parsePrimitive', parsePrimitive, 0), 0)(J$.G(3273, J$.R(3265, 'type_spec', type_spec, 0), 'type', 0), J$.R(3281, 'val', val, 0))));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(4529, J$e);
                                        } finally {
                                            if (J$.Fr(4537))
                                                continue jalangiLabel497;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(3817, 'arguments', arguments, 4);
                            J$.N(3825, '_types', _types, 0);
                            J$.N(3833, '_typeNames', _typeNames, 0);
                            define = J$.N(3849, 'define', J$.T(3841, define, 12, false, 921), 0);
                            getValidationCommand = J$.N(3865, 'getValidationCommand', J$.T(3857, getValidationCommand, 12, false, 1697), 0);
                            implyValidatorFunction = J$.N(3881, 'implyValidatorFunction', J$.T(3873, implyValidatorFunction, 12, false, 2009), 0);
                            isRegex = J$.N(3897, 'isRegex', J$.T(3889, isRegex, 12, false, 2145), 0);
                            isValidDefinition = J$.N(3913, 'isValidDefinition', J$.T(3905, isValidDefinition, 12, false, 2337), 0);
                            getTypeParts = J$.N(3929, 'getTypeParts', J$.T(3921, getTypeParts, 12, false, 2449), 0);
                            validate = J$.N(3945, 'validate', J$.T(3937, validate, 12, false, 2737), 0);
                            getPrimitive = J$.N(3961, 'getPrimitive', J$.T(3953, getPrimitive, 12, false, 3025), 0);
                            parse = J$.N(3977, 'parse', J$.T(3969, parse, 12, false, 3713), 0);
                            var _types = J$.X1(457, J$.W(449, '_types', J$.T(441, [], 10, false), _types, 1));
                            var _typeNames = J$.X1(481, J$.W(473, '_typeNames', J$.T(465, [], 10, false), _typeNames, 1));
                            J$.X1(529, J$.F(521, J$.R(489, 'define', define, 0), 0)(J$.T(513, {
                                name: J$.T(497, 'string', 21, false),
                                type: J$.R(505, 'String', String, 2)
                            }, 11, false)));
                            J$.X1(577, J$.F(569, J$.R(537, 'define', define, 0), 0)(J$.T(561, {
                                name: J$.T(545, 'number', 21, false),
                                type: J$.R(553, 'Number', Number, 2)
                            }, 11, false)));
                            J$.X1(625, J$.F(617, J$.R(585, 'define', define, 0), 0)(J$.T(609, {
                                name: J$.T(593, 'boolean', 21, false),
                                type: J$.R(601, 'Boolean', Boolean, 2)
                            }, 11, false)));
                            return J$.X1(3801, J$.Rt(3793, J$.T(3785, {
                                validate: J$.R(3761, 'validate', validate, 0),
                                parse: J$.R(3769, 'parse', parse, 0),
                                isValidDefinition: J$.R(3777, 'isValidDefinition', isValidDefinition, 0)
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(4545, J$e);
                        } finally {
                            if (J$.Fr(4553))
                                continue jalangiLabel498;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3809), 0)(), Types, 3));
            J$.X1(4041, J$.P(4033, J$.R(4017, 'module', module, 2), 'exports', J$.R(4025, 'Types', Types, 1), 0));
        } catch (J$e) {
            J$.Ex(4561, J$e);
        } finally {
            if (J$.Sr(4569)) {
                J$.L();
                continue jalangiLabel499;
            } else {
                J$.L();
                break jalangiLabel499;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
