J$.iids = {"8":[6,21,6,46],"9":[1,20,1,27],"10":[22,17,22,36],"16":[22,17,22,36],"17":[1,28,1,32],"18":[25,17,25,38],"24":[25,17,25,38],"25":[1,20,1,33],"26":[28,17,28,31],"32":[28,17,28,31],"33":[1,20,1,33],"34":[31,17,31,34],"40":[31,17,31,34],"41":[1,20,1,33],"42":[34,17,34,52],"48":[34,17,34,52],"49":[2,26,2,38],"50":[35,36,35,58],"56":[37,17,37,82],"57":[2,26,2,45],"58":[37,17,37,82],"64":[40,17,40,79],"65":[2,26,2,45],"66":[40,33,40,79],"72":[40,17,40,79],"73":[2,26,2,45],"81":[5,29,5,35],"89":[6,21,6,28],"97":[6,34,6,40],"105":[6,42,6,45],"113":[6,21,6,46],"115":[6,21,6,33],"121":[7,21,7,26],"129":[7,27,7,30],"137":[7,34,7,40],"145":[7,41,7,44],"153":[7,34,7,45],"161":[7,21,7,45],"169":[7,21,7,46],"177":[5,29,5,35],"185":[5,13,8,14],"193":[5,13,8,14],"201":[10,17,10,21],"209":[10,36,10,41],"217":[10,17,10,41],"225":[10,17,10,42],"233":[9,13,11,14],"241":[9,13,11,14],"249":[12,13,12,17],"257":[12,30,12,36],"265":[12,30,12,46],"273":[12,13,12,46],"281":[12,13,12,47],"289":[13,13,13,18],"297":[13,35,13,39],"305":[13,31,13,41],"313":[13,13,13,41],"321":[13,13,13,42],"329":[14,13,14,18],"337":[14,31,14,37],"345":[14,31,14,47],"353":[14,13,14,47],"361":[14,13,14,48],"369":[15,20,15,25],"377":[15,20,15,25],"385":[15,13,15,26],"393":[4,42,16,10],"401":[4,42,16,10],"409":[4,42,16,10],"417":[4,42,16,10],"425":[4,42,16,10],"433":[9,13,11,14],"441":[4,42,16,10],"449":[4,42,16,10],"457":[16,22,16,24],"465":[16,22,16,39],"473":[4,42,16,10],"481":[4,42,16,10],"489":[16,22,16,39],"497":[16,22,16,39],"505":[17,15,17,22],"513":[17,23,17,34],"521":[17,15,17,35],"529":[17,15,17,35],"537":[17,5,17,36],"545":[18,5,18,11],"553":[19,9,19,15],"561":[19,16,19,29],"569":[19,31,19,41],"577":[19,9,19,42],"585":[19,9,19,43],"593":[21,13,21,26],"601":[21,13,21,36],"609":[21,13,21,48],"617":[21,54,21,58],"625":[21,60,21,66],"633":[21,13,21,67],"635":[21,13,21,53],"641":[21,13,21,68],"649":[22,17,22,28],"657":[22,32,22,36],"665":[23,27,23,32],"673":[23,33,23,59],"681":[23,23,23,60],"689":[23,23,23,60],"697":[23,17,23,61],"705":[25,17,25,30],"713":[25,34,25,38],"721":[26,27,26,32],"729":[26,33,26,61],"737":[26,23,26,62],"745":[26,23,26,62],"753":[26,17,26,63],"761":[28,18,28,31],"769":[29,27,29,32],"777":[29,33,29,61],"785":[29,23,29,62],"793":[29,23,29,62],"801":[29,17,29,63],"809":[31,18,31,34],"817":[32,27,32,32],"825":[32,33,32,64],"833":[32,23,32,65],"841":[32,23,32,65],"849":[32,17,32,66],"857":[34,17,34,33],"865":[34,42,34,45],"873":[34,17,34,46],"875":[34,17,34,41],"881":[34,51,34,52],"889":[35,36,35,39],"897":[35,42,35,58],"905":[35,36,35,58],"913":[35,17,35,59],"921":[37,18,37,34],"929":[37,41,37,81],"937":[37,18,37,82],"939":[37,18,37,40],"945":[38,27,38,32],"953":[38,33,38,112],"961":[38,23,38,113],"969":[38,23,38,113],"977":[38,17,38,114],"985":[40,17,40,29],"993":[40,34,40,50],"1001":[40,57,40,78],"1009":[40,34,40,79],"1011":[40,34,40,56],"1017":[41,27,41,32],"1025":[41,33,41,83],"1033":[41,23,41,84],"1041":[41,23,41,84],"1049":[41,17,41,85],"1057":[43,13,43,17],"1065":[43,32,43,36],"1073":[43,32,43,46],"1081":[43,55,43,66],"1089":[43,32,43,67],"1091":[43,32,43,54],"1097":[43,13,43,67],"1105":[43,13,43,68],"1113":[44,13,44,17],"1121":[44,34,44,38],"1129":[44,34,44,48],"1137":[44,57,44,70],"1145":[44,34,44,71],"1147":[44,34,44,56],"1153":[44,13,44,71],"1161":[44,13,44,72],"1169":[45,13,45,17],"1177":[45,34,45,38],"1185":[45,34,45,48],"1193":[45,60,45,73],"1201":[45,34,45,74],"1203":[45,34,45,59],"1209":[45,13,45,74],"1217":[45,13,45,75],"1225":[46,13,46,17],"1233":[46,33,46,37],"1241":[46,33,46,47],"1249":[46,62,46,74],"1257":[46,33,46,75],"1259":[46,33,46,61],"1265":[46,13,46,75],"1273":[46,13,46,76],"1281":[47,13,47,17],"1289":[47,37,47,53],"1297":[47,13,47,53],"1305":[47,13,47,54],"1313":[20,9,48,10],"1321":[20,9,48,10],"1329":[20,9,48,10],"1337":[20,9,48,10],"1345":[20,9,48,10],"1353":[20,9,48,10],"1361":[20,9,48,10],"1369":[20,9,48,10],"1377":[49,9,49,22],"1385":[49,9,49,32],"1393":[50,20,50,24],"1401":[50,20,50,32],"1409":[50,20,50,39],"1417":[50,44,50,51],"1425":[50,20,50,52],"1427":[50,20,50,43],"1433":[50,64,50,68],"1441":[50,20,50,69],"1443":[50,20,50,63],"1449":[50,20,50,69],"1457":[50,13,50,70],"1465":[49,44,51,10],"1473":[49,44,51,10],"1481":[49,44,51,10],"1489":[49,44,51,10],"1497":[49,9,51,10],"1505":[49,9,51,11],"1513":[52,16,52,29],"1521":[52,16,52,29],"1529":[52,9,52,30],"1537":[18,38,53,6],"1545":[18,38,53,6],"1553":[18,38,53,6],"1561":[20,9,48,10],"1569":[18,38,53,6],"1577":[18,38,53,6],"1585":[53,7,53,14],"1593":[18,38,53,15],"1601":[18,38,53,15],"1609":[18,5,53,15],"1617":[18,5,53,16],"1625":[3,2,54,2],"1633":[3,2,54,2],"1641":[3,2,54,2],"1649":[3,2,54,2],"1657":[3,2,54,2],"1665":[3,2,54,2],"1673":[3,2,54,2],"1681":[54,8,54,12],"1689":[3,2,54,13],"1691":[3,2,54,7],"1697":[3,1,54,15],"1705":[1,1,54,15],"1713":[1,1,54,15],"1721":[1,1,54,15],"1729":[6,17,7,46],"1737":[9,13,11,14],"1745":[9,13,11,14],"1753":[4,42,16,10],"1761":[4,42,16,10],"1769":[22,13,24,14],"1777":[25,13,27,14],"1785":[28,13,30,14],"1793":[31,13,33,14],"1801":[34,13,36,14],"1809":[37,13,39,14],"1817":[40,13,42,14],"1825":[20,9,48,10],"1833":[20,9,48,10],"1841":[49,44,51,10],"1849":[49,44,51,10],"1857":[18,38,53,6],"1865":[18,38,53,6],"1873":[3,2,54,2],"1881":[3,2,54,2],"1889":[1,1,54,15],"1897":[1,1,54,15],"nBranches":18,"originalCodeFileName":"/home/blake/ExpoSE/Targets/xero-extension/node_modules/xmlbuilder/lib/XMLDTDAttList.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/xero-extension/node_modules/xmlbuilder/lib/XMLDTDAttList_jalangi_.js","code":"// Generated by CoffeeScript 1.12.6\n(function() {\n  var XMLDTDAttList, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLDTDAttList = (function(superClass) {\n    extend(XMLDTDAttList, superClass);\n\n    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      XMLDTDAttList.__super__.constructor.call(this, parent);\n      if (elementName == null) {\n        throw new Error(\"Missing DTD element name\");\n      }\n      if (attributeName == null) {\n        throw new Error(\"Missing DTD attribute name\");\n      }\n      if (!attributeType) {\n        throw new Error(\"Missing DTD attribute type\");\n      }\n      if (!defaultValueType) {\n        throw new Error(\"Missing DTD attribute default\");\n      }\n      if (defaultValueType.indexOf('#') !== 0) {\n        defaultValueType = '#' + defaultValueType;\n      }\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT\");\n      }\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT\");\n      }\n      this.elementName = this.stringify.eleName(elementName);\n      this.attributeName = this.stringify.attName(attributeName);\n      this.attributeType = this.stringify.dtdAttType(attributeType);\n      this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n      this.defaultValueType = defaultValueType;\n    }\n\n    XMLDTDAttList.prototype.toString = function(options) {\n      return this.options.writer.set(options).dtdAttList(this);\n    };\n\n    return XMLDTDAttList;\n\n  })(XMLNode);\n\n}).call(this);\n"};
jalangiLabel572:
    while (true) {
        try {
            J$.Se(1705, '/home/blake/ExpoSE/Targets/xero-extension/node_modules/xmlbuilder/lib/XMLDTDAttList_jalangi_.js', '/home/blake/ExpoSE/Targets/xero-extension/node_modules/xmlbuilder/lib/XMLDTDAttList.js');
            J$.N(1713, '__secret__S$', __secret__S$, 0);
            J$.N(1721, '__secret__traits__', __secret__traits__, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(1697, J$.M(1689, J$.T(1673, function () {
                jalangiLabel571:
                    while (true) {
                        try {
                            J$.Fe(1625, arguments.callee, this, arguments);
                            arguments = J$.N(1633, 'arguments', arguments, 4);
                            J$.N(1641, 'XMLDTDAttList', XMLDTDAttList, 0);
                            J$.N(1649, 'XMLNode', XMLNode, 0);
                            J$.N(1657, 'extend', extend, 0);
                            J$.N(1665, 'hasProp', hasProp, 0);
                            var XMLDTDAttList, XMLNode, extend = J$.X1(481, J$.W(473, 'extend', J$.T(449, function (child, parent) {
                                    jalangiLabel567:
                                        while (true) {
                                            try {
                                                J$.Fe(393, arguments.callee, this, arguments);
                                                function ctor() {
                                                    jalangiLabel566:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(233, arguments.callee, this, arguments);
                                                                arguments = J$.N(241, 'arguments', arguments, 4);
                                                                J$.X1(225, J$.P(217, J$.R(201, 'this', this, 0), 'constructor', J$.R(209, 'child', child, 0), 0));
                                                            } catch (J$e) {
                                                                J$.Ex(1737, J$e);
                                                            } finally {
                                                                if (J$.Fr(1745))
                                                                    continue jalangiLabel566;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }
                                                arguments = J$.N(401, 'arguments', arguments, 4);
                                                child = J$.N(409, 'child', child, 4);
                                                parent = J$.N(417, 'parent', parent, 4);
                                                J$.N(425, 'key', key, 0);
                                                ctor = J$.N(441, 'ctor', J$.T(433, ctor, 12, false, 233), 0);
                                                for (J$._tm_p in J$.H(177, J$.R(81, 'parent', parent, 0))) {
                                                    var key = J$.X1(193, J$.W(185, 'key', J$._tm_p, key, 1));
                                                    {
                                                        {
                                                            if (J$.X1(1729, J$.C(8, J$.M(113, J$.R(89, 'hasProp', hasProp, 0), 'call', 0)(J$.R(97, 'parent', parent, 0), J$.R(105, 'key', key, 0)))))
                                                                J$.X1(169, J$.P(161, J$.R(121, 'child', child, 0), J$.R(129, 'key', key, 0), J$.G(153, J$.R(137, 'parent', parent, 0), J$.R(145, 'key', key, 0), 4), 2));
                                                        }
                                                    }
                                                }
                                                J$.X1(281, J$.P(273, J$.R(249, 'ctor', ctor, 0), 'prototype', J$.G(265, J$.R(257, 'parent', parent, 0), 'prototype', 0), 0));
                                                J$.X1(321, J$.P(313, J$.R(289, 'child', child, 0), 'prototype', J$.F(305, J$.R(297, 'ctor', ctor, 0), 1)(), 0));
                                                J$.X1(361, J$.P(353, J$.R(329, 'child', child, 0), '__super__', J$.G(345, J$.R(337, 'parent', parent, 0), 'prototype', 0), 0));
                                                return J$.X1(385, J$.Rt(377, J$.R(369, 'child', child, 0)));
                                            } catch (J$e) {
                                                J$.Ex(1753, J$e);
                                            } finally {
                                                if (J$.Fr(1761))
                                                    continue jalangiLabel567;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 393), extend, 1)), hasProp = J$.X1(497, J$.W(489, 'hasProp', J$.G(465, J$.T(457, {}, 11, false), 'hasOwnProperty', 0), hasProp, 1));
                            J$.X1(537, XMLNode = J$.W(529, 'XMLNode', J$.F(521, J$.R(505, 'require', require, 2), 0)(J$.T(513, './XMLNode', 21, false)), XMLNode, 0));
                            J$.X1(1617, J$.P(1609, J$.R(545, 'module', module, 2), 'exports', XMLDTDAttList = J$.W(1601, 'XMLDTDAttList', J$.F(1593, J$.T(1577, function (superClass) {
                                jalangiLabel570:
                                    while (true) {
                                        try {
                                            J$.Fe(1537, arguments.callee, this, arguments);
                                            function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {
                                                jalangiLabel568:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1313, arguments.callee, this, arguments);
                                                            arguments = J$.N(1321, 'arguments', arguments, 4);
                                                            parent = J$.N(1329, 'parent', parent, 4);
                                                            elementName = J$.N(1337, 'elementName', elementName, 4);
                                                            attributeName = J$.N(1345, 'attributeName', attributeName, 4);
                                                            attributeType = J$.N(1353, 'attributeType', attributeType, 4);
                                                            defaultValueType = J$.N(1361, 'defaultValueType', defaultValueType, 4);
                                                            defaultValue = J$.N(1369, 'defaultValue', defaultValue, 4);
                                                            J$.X1(641, J$.M(633, J$.G(609, J$.G(601, J$.R(593, 'XMLDTDAttList', XMLDTDAttList, 0), '__super__', 0), 'constructor', 0), 'call', 0)(J$.R(617, 'this', this, 0), J$.R(625, 'parent', parent, 0)));
                                                            if (J$.X1(1769, J$.C(16, J$.B(10, '==', J$.R(649, 'elementName', elementName, 0), J$.T(657, null, 25, false), 0)))) {
                                                                throw J$.X1(697, J$.Th(689, J$.F(681, J$.R(665, 'Error', Error, 2), 1)(J$.T(673, 'Missing DTD element name', 21, false))));
                                                            }
                                                            if (J$.X1(1777, J$.C(24, J$.B(18, '==', J$.R(705, 'attributeName', attributeName, 0), J$.T(713, null, 25, false), 0)))) {
                                                                throw J$.X1(753, J$.Th(745, J$.F(737, J$.R(721, 'Error', Error, 2), 1)(J$.T(729, 'Missing DTD attribute name', 21, false))));
                                                            }
                                                            if (J$.X1(1785, J$.C(32, J$.U(26, '!', J$.R(761, 'attributeType', attributeType, 0))))) {
                                                                throw J$.X1(801, J$.Th(793, J$.F(785, J$.R(769, 'Error', Error, 2), 1)(J$.T(777, 'Missing DTD attribute type', 21, false))));
                                                            }
                                                            if (J$.X1(1793, J$.C(40, J$.U(34, '!', J$.R(809, 'defaultValueType', defaultValueType, 0))))) {
                                                                throw J$.X1(849, J$.Th(841, J$.F(833, J$.R(817, 'Error', Error, 2), 1)(J$.T(825, 'Missing DTD attribute default', 21, false))));
                                                            }
                                                            if (J$.X1(1801, J$.C(48, J$.B(42, '!==', J$.M(873, J$.R(857, 'defaultValueType', defaultValueType, 0), 'indexOf', 0)(J$.T(865, '#', 21, false)), J$.T(881, 0, 22, false), 0)))) {
                                                                J$.X1(913, defaultValueType = J$.W(905, 'defaultValueType', J$.B(50, '+', J$.T(889, '#', 21, false), J$.R(897, 'defaultValueType', defaultValueType, 0), 0), defaultValueType, 0));
                                                            }
                                                            if (J$.X1(1809, J$.C(56, J$.U(58, '!', J$.M(937, J$.R(921, 'defaultValueType', defaultValueType, 0), 'match', 0)(J$.T(929, /^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/, 14, false)))))) {
                                                                throw J$.X1(977, J$.Th(969, J$.F(961, J$.R(945, 'Error', Error, 2), 1)(J$.T(953, 'Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT', 21, false))));
                                                            }
                                                            if (J$.X1(1817, J$.C(72, J$.C(64, J$.R(985, 'defaultValue', defaultValue, 0)) ? J$.U(66, '!', J$.M(1009, J$.R(993, 'defaultValueType', defaultValueType, 0), 'match', 0)(J$.T(1001, /^(#FIXED|#DEFAULT)$/, 14, false))) : J$._()))) {
                                                                throw J$.X1(1049, J$.Th(1041, J$.F(1033, J$.R(1017, 'Error', Error, 2), 1)(J$.T(1025, 'Default value only applies to #FIXED or #DEFAULT', 21, false))));
                                                            }
                                                            J$.X1(1105, J$.P(1097, J$.R(1057, 'this', this, 0), 'elementName', J$.M(1089, J$.G(1073, J$.R(1065, 'this', this, 0), 'stringify', 0), 'eleName', 0)(J$.R(1081, 'elementName', elementName, 0)), 0));
                                                            J$.X1(1161, J$.P(1153, J$.R(1113, 'this', this, 0), 'attributeName', J$.M(1145, J$.G(1129, J$.R(1121, 'this', this, 0), 'stringify', 0), 'attName', 0)(J$.R(1137, 'attributeName', attributeName, 0)), 0));
                                                            J$.X1(1217, J$.P(1209, J$.R(1169, 'this', this, 0), 'attributeType', J$.M(1201, J$.G(1185, J$.R(1177, 'this', this, 0), 'stringify', 0), 'dtdAttType', 0)(J$.R(1193, 'attributeType', attributeType, 0)), 0));
                                                            J$.X1(1273, J$.P(1265, J$.R(1225, 'this', this, 0), 'defaultValue', J$.M(1257, J$.G(1241, J$.R(1233, 'this', this, 0), 'stringify', 0), 'dtdAttDefault', 0)(J$.R(1249, 'defaultValue', defaultValue, 0)), 0));
                                                            J$.X1(1305, J$.P(1297, J$.R(1281, 'this', this, 0), 'defaultValueType', J$.R(1289, 'defaultValueType', defaultValueType, 0), 0));
                                                        } catch (J$e) {
                                                            J$.Ex(1825, J$e);
                                                        } finally {
                                                            if (J$.Fr(1833))
                                                                continue jalangiLabel568;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }
                                            arguments = J$.N(1545, 'arguments', arguments, 4);
                                            superClass = J$.N(1553, 'superClass', superClass, 4);
                                            XMLDTDAttList = J$.N(1569, 'XMLDTDAttList', J$.T(1561, XMLDTDAttList, 12, false, 1313), 0);
                                            J$.X1(585, J$.F(577, J$.R(553, 'extend', extend, 0), 0)(J$.R(561, 'XMLDTDAttList', XMLDTDAttList, 0), J$.R(569, 'superClass', superClass, 0)));
                                            J$.X1(1505, J$.P(1497, J$.G(1385, J$.R(1377, 'XMLDTDAttList', XMLDTDAttList, 0), 'prototype', 0), 'toString', J$.T(1489, function (options) {
                                                jalangiLabel569:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1465, arguments.callee, this, arguments);
                                                            arguments = J$.N(1473, 'arguments', arguments, 4);
                                                            options = J$.N(1481, 'options', options, 4);
                                                            return J$.X1(1457, J$.Rt(1449, J$.M(1441, J$.M(1425, J$.G(1409, J$.G(1401, J$.R(1393, 'this', this, 0), 'options', 0), 'writer', 0), 'set', 0)(J$.R(1417, 'options', options, 0)), 'dtdAttList', 0)(J$.R(1433, 'this', this, 0))));
                                                        } catch (J$e) {
                                                            J$.Ex(1841, J$e);
                                                        } finally {
                                                            if (J$.Fr(1849))
                                                                continue jalangiLabel569;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 1465), 0));
                                            return J$.X1(1529, J$.Rt(1521, J$.R(1513, 'XMLDTDAttList', XMLDTDAttList, 0)));
                                        } catch (J$e) {
                                            J$.Ex(1857, J$e);
                                        } finally {
                                            if (J$.Fr(1865))
                                                continue jalangiLabel570;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1537), 0)(J$.R(1585, 'XMLNode', XMLNode, 0)), XMLDTDAttList, 0), 0));
                        } catch (J$e) {
                            J$.Ex(1873, J$e);
                        } finally {
                            if (J$.Fr(1881))
                                continue jalangiLabel571;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1625), 'call', 0)(J$.R(1681, 'this', this, 0)));
        } catch (J$e) {
            J$.Ex(1889, J$e);
        } finally {
            if (J$.Sr(1897)) {
                J$.L();
                continue jalangiLabel572;
            } else {
                J$.L();
                break jalangiLabel572;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
