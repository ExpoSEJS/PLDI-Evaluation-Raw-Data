J$.iids = {"8":[6,9,6,23],"9":[1,20,1,27],"10":[6,9,6,23],"17":[1,28,1,32],"18":[9,25,9,50],"25":[1,20,1,33],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,12,3,19],"89":[3,20,3,26],"97":[3,12,3,27],"105":[3,12,3,27],"113":[3,12,3,27],"121":[4,15,4,22],"129":[4,23,4,40],"137":[4,15,4,41],"145":[4,15,4,41],"153":[4,15,4,41],"161":[6,9,6,13],"169":[6,18,6,23],"177":[7,16,7,23],"185":[7,16,7,27],"193":[7,16,7,27],"201":[7,9,7,28],"209":[9,19,9,24],"217":[9,25,9,43],"225":[9,46,9,50],"233":[9,15,9,51],"241":[9,15,9,51],"249":[9,9,9,52],"257":[5,1,11,2],"265":[5,1,11,2],"273":[5,1,11,2],"281":[12,1,12,8],"289":[12,22,12,32],"297":[12,1,12,32],"305":[12,1,12,33],"313":[1,1,12,33],"321":[1,1,12,33],"329":[1,1,12,33],"337":[1,1,12,33],"345":[1,1,12,33],"353":[5,1,11,2],"361":[1,1,12,33],"369":[6,5,10,6],"377":[5,1,11,2],"385":[5,1,11,2],"393":[1,1,12,33],"401":[1,1,12,33],"nBranches":2,"originalCodeFileName":"/home/blake/ExpoSE/Targets/xero-extension/node_modules/elementtree/lib/parser.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/xero-extension/node_modules/elementtree/lib/parser_jalangi_.js","code":"/*\n *  Copyright 2011 Rackspace\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *\n */\n\n/* TODO: support node-expat C++ module optionally */\n\nvar util = require('util');\nvar parsers = require('./parsers/index');\n\nfunction get_parser(name) {\n  if (name === 'sax') {\n    return parsers.sax;\n  }\n  else {\n    throw new Error('Invalid parser: ' + name);\n  }\n}\n\n\nexports.get_parser = get_parser;\n"};
jalangiLabel292:
    while (true) {
        try {
            J$.Se(313, '/home/blake/ExpoSE/Targets/xero-extension/node_modules/elementtree/lib/parser_jalangi_.js', '/home/blake/ExpoSE/Targets/xero-extension/node_modules/elementtree/lib/parser.js');
            function get_parser(name) {
                jalangiLabel291:
                    while (true) {
                        try {
                            J$.Fe(257, arguments.callee, this, arguments);
                            arguments = J$.N(265, 'arguments', arguments, 4);
                            name = J$.N(273, 'name', name, 4);
                            if (J$.X1(369, J$.C(8, J$.B(10, '===', J$.R(161, 'name', name, 0), J$.T(169, 'sax', 21, false), 0)))) {
                                return J$.X1(201, J$.Rt(193, J$.G(185, J$.R(177, 'parsers', parsers, 1), 'sax', 0)));
                            } else {
                                throw J$.X1(249, J$.Th(241, J$.F(233, J$.R(209, 'Error', Error, 2), 1)(J$.B(18, '+', J$.T(217, 'Invalid parser: ', 21, false), J$.R(225, 'name', name, 0), 0))));
                            }
                        } catch (J$e) {
                            J$.Ex(377, J$e);
                        } finally {
                            if (J$.Fr(385))
                                continue jalangiLabel291;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(321, '__secret__S$', __secret__S$, 0);
            J$.N(329, '__secret__traits__', __secret__traits__, 0);
            J$.N(337, 'util', util, 0);
            J$.N(345, 'parsers', parsers, 0);
            get_parser = J$.N(361, 'get_parser', J$.T(353, get_parser, 12, false, 257), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var util = J$.X1(113, J$.W(105, 'util', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, 'util', 21, false)), util, 3));
            var parsers = J$.X1(153, J$.W(145, 'parsers', J$.F(137, J$.R(121, 'require', require, 2), 0)(J$.T(129, './parsers/index', 21, false)), parsers, 3));
            J$.X1(305, J$.P(297, J$.R(281, 'exports', exports, 2), 'get_parser', J$.R(289, 'get_parser', get_parser, 1), 0));
        } catch (J$e) {
            J$.Ex(393, J$e);
        } finally {
            if (J$.Sr(401)) {
                J$.L();
                continue jalangiLabel292;
            } else {
                J$.L();
                break jalangiLabel292;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
