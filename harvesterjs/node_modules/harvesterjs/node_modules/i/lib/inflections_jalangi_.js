J$.iids = {"8":[13,9,13,32],"9":[1,20,1,27],"10":[13,9,13,20],"16":[23,9,23,32],"17":[1,28,1,32],"18":[13,9,13,32],"24":[35,9,35,61],"25":[1,20,1,33],"26":[23,9,23,20],"32":[58,9,58,22],"33":[1,20,1,33],"34":[23,9,23,32],"40":[60,13,60,18],"41":[1,20,1,33],"42":[35,9,35,61],"48":[61,10,61,15],"49":[2,26,2,38],"50":[36,32,36,49],"57":[2,26,2,45],"58":[36,32,36,55],"65":[2,26,2,45],"66":[36,32,36,75],"73":[2,26,2,45],"74":[36,32,36,81],"81":[3,12,3,19],"82":[36,89,36,111],"89":[3,20,3,28],"90":[37,32,37,47],"97":[3,12,3,29],"98":[37,32,37,53],"105":[3,12,3,29],"106":[37,32,37,71],"113":[3,12,3,29],"114":[37,32,37,77],"121":[5,5,5,9],"122":[37,85,37,107],"129":[5,20,5,22],"130":[38,34,38,49],"137":[5,5,5,22],"138":[38,34,38,55],"145":[5,5,5,23],"146":[38,34,38,73],"153":[6,5,6,9],"154":[38,34,38,79],"161":[6,22,6,24],"162":[38,87,38,111],"169":[6,5,6,24],"170":[40,32,40,62],"177":[6,5,6,25],"178":[40,32,40,82],"185":[7,5,7,9],"186":[40,32,40,88],"193":[7,25,7,27],"194":[40,91,40,132],"201":[7,5,7,27],"202":[41,32,41,62],"209":[7,5,7,28],"210":[41,32,41,82],"217":[8,5,8,9],"218":[41,32,41,88],"225":[8,19,8,21],"226":[41,91,41,132],"233":[8,5,8,21],"234":[42,32,42,60],"241":[8,5,8,22],"242":[42,32,42,78],"249":[9,5,9,12],"250":[42,32,42,84],"257":[9,13,9,25],"258":[42,87,42,128],"265":[9,5,9,26],"266":[43,32,43,60],"273":[9,27,9,31],"274":[43,32,43,78],"281":[9,5,9,32],"282":[43,32,43,84],"289":[9,5,9,33],"290":[43,87,43,128],"297":[10,12,10,16],"298":[44,34,44,62],"305":[10,12,10,16],"306":[44,34,44,80],"313":[10,5,10,17],"314":[44,34,44,86],"321":[4,19,11,2],"322":[44,89,44,134],"329":[4,19,11,2],"330":[45,34,45,62],"337":[4,19,11,2],"338":[45,34,45,80],"345":[4,19,11,2],"346":[45,34,45,86],"353":[4,19,11,2],"354":[45,89,45,134],"361":[12,1,12,12],"362":[58,9,58,22],"369":[12,1,12,22],"377":[13,16,13,20],"385":[13,24,13,32],"393":[14,9,14,13],"401":[14,29,14,33],"409":[14,29,14,39],"417":[14,44,14,48],"425":[14,44,14,61],"433":[14,63,14,67],"441":[14,29,14,68],"443":[14,29,14,43],"449":[14,9,14,68],"457":[14,9,14,69],"465":[16,5,16,9],"473":[16,25,16,29],"481":[16,25,16,35],"489":[16,40,16,44],"497":[16,40,16,57],"505":[16,59,16,70],"513":[16,25,16,71],"515":[16,25,16,39],"521":[16,5,16,71],"529":[16,5,16,72],"537":[17,5,17,9],"545":[17,5,17,17],"553":[18,9,18,13],"561":[19,9,19,20],"569":[17,26,20,6],"577":[17,5,20,7],"579":[17,5,17,25],"585":[17,5,20,8],"593":[12,32,21,2],"601":[12,32,21,2],"609":[12,32,21,2],"617":[12,32,21,2],"625":[12,32,21,2],"633":[12,1,21,2],"641":[12,1,21,3],"649":[22,1,22,12],"657":[22,1,22,22],"665":[23,16,23,20],"673":[23,24,23,32],"681":[24,9,24,13],"689":[24,29,24,33],"697":[24,29,24,39],"705":[24,44,24,48],"713":[24,44,24,61],"721":[24,63,24,67],"729":[24,29,24,68],"731":[24,29,24,43],"737":[24,9,24,68],"745":[24,9,24,69],"753":[26,5,26,9],"761":[26,25,26,29],"769":[26,25,26,35],"777":[26,40,26,44],"785":[26,40,26,57],"793":[26,59,26,70],"801":[26,25,26,71],"803":[26,25,26,39],"809":[26,5,26,71],"817":[26,5,26,72],"825":[27,5,27,9],"833":[27,5,27,19],"841":[28,9,28,13],"849":[29,9,29,20],"857":[27,28,30,6],"865":[27,5,30,7],"867":[27,5,27,27],"873":[27,5,30,8],"881":[22,34,31,2],"889":[22,34,31,2],"897":[22,34,31,2],"905":[22,34,31,2],"913":[22,34,31,2],"921":[22,1,31,2],"929":[22,1,31,3],"937":[32,1,32,12],"945":[32,1,32,22],"953":[33,5,33,9],"961":[33,25,33,29],"969":[33,25,33,35],"977":[33,40,33,44],"985":[33,40,33,57],"993":[33,59,33,67],"1001":[33,25,33,68],"1003":[33,25,33,39],"1009":[33,5,33,68],"1017":[33,5,33,69],"1025":[34,5,34,9],"1033":[34,25,34,29],"1041":[34,25,34,35],"1049":[34,40,34,44],"1057":[34,40,34,57],"1065":[34,59,34,65],"1073":[34,25,34,66],"1075":[34,25,34,39],"1081":[34,5,34,66],"1089":[34,5,34,67],"1097":[35,9,35,17],"1105":[35,18,35,19],"1113":[35,9,35,20],"1121":[35,9,35,34],"1123":[35,9,35,32],"1129":[35,38,35,44],"1137":[35,45,35,46],"1145":[35,38,35,47],"1153":[35,38,35,61],"1155":[35,38,35,59],"1161":[36,9,36,13],"1169":[36,25,36,31],"1177":[36,32,36,35],"1185":[36,38,36,46],"1193":[36,47,36,48],"1201":[36,38,36,49],"1209":[36,52,36,55],"1217":[36,58,36,66],"1225":[36,73,36,74],"1233":[36,58,36,75],"1235":[36,58,36,72],"1241":[36,78,36,81],"1249":[36,83,36,86],"1257":[36,21,36,87],"1265":[36,89,36,93],"1273":[36,96,36,102],"1281":[36,109,36,110],"1289":[36,96,36,111],"1291":[36,96,36,108],"1297":[36,9,36,112],"1299":[36,9,36,20],"1305":[36,9,36,113],"1313":[37,9,37,13],"1321":[37,25,37,31],"1329":[37,32,37,35],"1337":[37,38,37,44],"1345":[37,45,37,46],"1353":[37,38,37,47],"1361":[37,50,37,53],"1369":[37,56,37,62],"1377":[37,69,37,70],"1385":[37,56,37,71],"1387":[37,56,37,68],"1393":[37,74,37,77],"1401":[37,79,37,82],"1409":[37,21,37,83],"1417":[37,85,37,89],"1425":[37,92,37,98],"1433":[37,105,37,106],"1441":[37,92,37,107],"1443":[37,92,37,104],"1449":[37,9,37,108],"1451":[37,9,37,20],"1457":[37,9,37,109],"1465":[38,9,38,13],"1473":[38,27,38,33],"1481":[38,34,38,37],"1489":[38,40,38,46],"1497":[38,47,38,48],"1505":[38,40,38,49],"1513":[38,52,38,55],"1521":[38,58,38,64],"1529":[38,71,38,72],"1537":[38,58,38,73],"1539":[38,58,38,70],"1545":[38,76,38,79],"1553":[38,81,38,84],"1561":[38,23,38,85],"1569":[38,87,38,91],"1577":[38,94,38,102],"1585":[38,109,38,110],"1593":[38,94,38,111],"1595":[38,94,38,108],"1601":[38,9,38,112],"1603":[38,9,38,22],"1609":[38,9,38,113],"1617":[40,9,40,13],"1625":[40,25,40,31],"1633":[40,32,40,34],"1641":[40,37,40,45],"1649":[40,46,40,47],"1657":[40,37,40,48],"1665":[40,37,40,62],"1667":[40,37,40,60],"1673":[40,65,40,73],"1681":[40,80,40,81],"1689":[40,65,40,82],"1691":[40,65,40,79],"1697":[40,85,40,88],"1705":[40,21,40,89],"1713":[40,91,40,97],"1721":[40,98,40,99],"1729":[40,91,40,100],"1737":[40,91,40,114],"1739":[40,91,40,112],"1745":[40,117,40,123],"1753":[40,130,40,131],"1761":[40,117,40,132],"1763":[40,117,40,129],"1769":[40,9,40,133],"1771":[40,9,40,20],"1777":[40,9,40,134],"1785":[41,9,41,13],"1793":[41,25,41,31],"1801":[41,32,41,34],"1809":[41,37,41,45],"1817":[41,46,41,47],"1825":[41,37,41,48],"1833":[41,37,41,62],"1835":[41,37,41,60],"1841":[41,65,41,73],"1849":[41,80,41,81],"1857":[41,65,41,82],"1859":[41,65,41,79],"1865":[41,85,41,88],"1873":[41,21,41,89],"1881":[41,91,41,97],"1889":[41,98,41,99],"1897":[41,91,41,100],"1905":[41,91,41,114],"1907":[41,91,41,112],"1913":[41,117,41,123],"1921":[41,130,41,131],"1929":[41,117,41,132],"1931":[41,117,41,129],"1937":[41,9,41,133],"1939":[41,9,41,20],"1945":[41,9,41,134],"1953":[42,9,42,13],"1961":[42,25,42,31],"1969":[42,32,42,34],"1977":[42,37,42,43],"1985":[42,44,42,45],"1993":[42,37,42,46],"2001":[42,37,42,60],"2003":[42,37,42,58],"2009":[42,63,42,69],"2017":[42,76,42,77],"2025":[42,63,42,78],"2027":[42,63,42,75],"2033":[42,81,42,84],"2041":[42,21,42,85],"2049":[42,87,42,93],"2057":[42,94,42,95],"2065":[42,87,42,96],"2073":[42,87,42,110],"2075":[42,87,42,108],"2081":[42,113,42,119],"2089":[42,126,42,127],"2097":[42,113,42,128],"2099":[42,113,42,125],"2105":[42,9,42,129],"2107":[42,9,42,20],"2113":[42,9,42,130],"2121":[43,9,43,13],"2129":[43,25,43,31],"2137":[43,32,43,34],"2145":[43,37,43,43],"2153":[43,44,43,45],"2161":[43,37,43,46],"2169":[43,37,43,60],"2171":[43,37,43,58],"2177":[43,63,43,69],"2185":[43,76,43,77],"2193":[43,63,43,78],"2195":[43,63,43,75],"2201":[43,81,43,84],"2209":[43,21,43,85],"2217":[43,87,43,93],"2225":[43,94,43,95],"2233":[43,87,43,96],"2241":[43,87,43,110],"2243":[43,87,43,108],"2249":[43,113,43,119],"2257":[43,126,43,127],"2265":[43,113,43,128],"2267":[43,113,43,125],"2273":[43,9,43,129],"2275":[43,9,43,20],"2281":[43,9,43,130],"2289":[44,9,44,13],"2297":[44,27,44,33],"2305":[44,34,44,36],"2313":[44,39,44,45],"2321":[44,46,44,47],"2329":[44,39,44,48],"2337":[44,39,44,62],"2339":[44,39,44,60],"2345":[44,65,44,71],"2353":[44,78,44,79],"2361":[44,65,44,80],"2363":[44,65,44,77],"2369":[44,83,44,86],"2377":[44,23,44,87],"2385":[44,89,44,97],"2393":[44,98,44,99],"2401":[44,89,44,100],"2409":[44,89,44,114],"2411":[44,89,44,112],"2417":[44,117,44,125],"2425":[44,132,44,133],"2433":[44,117,44,134],"2435":[44,117,44,131],"2441":[44,9,44,135],"2443":[44,9,44,22],"2449":[44,9,44,136],"2457":[45,9,45,13],"2465":[45,27,45,33],"2473":[45,34,45,36],"2481":[45,39,45,45],"2489":[45,46,45,47],"2497":[45,39,45,48],"2505":[45,39,45,62],"2507":[45,39,45,60],"2513":[45,65,45,71],"2521":[45,78,45,79],"2529":[45,65,45,80],"2531":[45,65,45,77],"2537":[45,83,45,86],"2545":[45,23,45,87],"2553":[45,89,45,97],"2561":[45,98,45,99],"2569":[45,89,45,100],"2577":[45,89,45,114],"2579":[45,89,45,112],"2585":[45,117,45,125],"2593":[45,132,45,133],"2601":[45,117,45,134],"2603":[45,117,45,131],"2609":[45,9,45,135],"2611":[45,9,45,22],"2617":[45,9,45,136],"2625":[32,35,47,2],"2633":[32,35,47,2],"2641":[32,35,47,2],"2649":[32,35,47,2],"2657":[32,35,47,2],"2665":[32,1,47,2],"2673":[32,1,47,3],"2681":[48,1,48,12],"2689":[48,1,48,22],"2697":[49,5,49,9],"2705":[49,5,49,16],"2713":[50,9,50,13],"2721":[51,9,51,20],"2729":[49,25,52,6],"2737":[49,5,52,7],"2739":[49,5,49,24],"2745":[49,5,52,8],"2753":[48,31,53,2],"2761":[48,31,53,2],"2769":[48,31,53,2],"2777":[48,31,53,2],"2785":[48,31,53,2],"2793":[48,1,53,2],"2801":[48,1,53,3],"2809":[54,1,54,12],"2817":[54,1,54,22],"2825":[55,5,55,9],"2833":[55,25,55,29],"2841":[55,25,55,42],"2849":[55,50,55,55],"2857":[55,25,55,56],"2859":[55,25,55,49],"2865":[55,5,55,56],"2873":[55,5,55,57],"2881":[54,37,56,2],"2889":[54,37,56,2],"2897":[54,37,56,2],"2905":[54,37,56,2],"2913":[54,1,56,2],"2921":[54,1,56,3],"2929":[57,1,57,12],"2937":[57,1,57,22],"2945":[58,9,58,14],"2953":[58,18,58,22],"2961":[59,17,59,22],"2969":[59,17,59,22],"2977":[59,9,59,23],"2985":[60,13,60,18],"2993":[62,9,62,13],"3001":[62,24,62,26],"3009":[62,9,62,26],"3017":[62,9,62,27],"3025":[63,9,63,13],"3033":[63,26,63,28],"3041":[63,9,63,28],"3049":[63,9,63,29],"3057":[64,9,64,13],"3065":[64,29,64,31],"3073":[64,9,64,31],"3081":[64,9,64,32],"3089":[65,9,65,13],"3097":[65,23,65,25],"3105":[65,9,65,25],"3113":[65,9,65,26],"3121":[61,10,61,15],"3129":[67,9,67,13],"3137":[67,14,67,19],"3145":[67,23,67,25],"3153":[67,9,67,25],"3161":[67,9,67,26],"3169":[57,31,69,2],"3177":[57,31,69,2],"3185":[57,31,69,2],"3193":[57,31,69,2],"3201":[57,1,69,2],"3209":[57,1,69,3],"3217":[70,1,70,12],"3225":[70,1,70,22],"3233":[71,5,71,9],"3241":[71,20,71,22],"3249":[71,5,71,22],"3257":[71,5,71,23],"3265":[72,5,72,9],"3273":[72,22,72,24],"3281":[72,5,72,24],"3289":[72,5,72,25],"3297":[73,5,73,9],"3305":[73,25,73,27],"3313":[73,5,73,27],"3321":[73,5,73,28],"3329":[74,5,74,9],"3337":[74,19,74,21],"3345":[74,5,74,21],"3353":[74,5,74,22],"3361":[75,5,75,12],"3369":[75,13,75,25],"3377":[75,5,75,26],"3385":[75,27,75,31],"3393":[75,5,75,32],"3401":[75,5,75,33],"3409":[76,12,76,16],"3417":[76,12,76,16],"3425":[76,5,76,17],"3433":[70,33,77,2],"3441":[70,33,77,2],"3449":[70,33,77,2],"3457":[70,1,77,2],"3465":[70,1,77,3],"3473":[78,1,78,7],"3481":[78,22,78,33],"3489":[78,18,78,35],"3497":[78,1,78,35],"3505":[78,1,78,36],"3513":[1,1,78,36],"3521":[1,1,78,36],"3529":[1,1,78,36],"3537":[1,1,78,36],"3545":[1,1,78,36],"3553":[4,19,11,2],"3561":[4,19,11,2],"3569":[13,5,15,6],"3577":[12,32,21,2],"3585":[12,32,21,2],"3593":[23,5,25,6],"3601":[22,34,31,2],"3609":[22,34,31,2],"3617":[35,5,46,6],"3625":[32,35,47,2],"3633":[32,35,47,2],"3641":[48,31,53,2],"3649":[48,31,53,2],"3657":[54,37,56,2],"3665":[54,37,56,2],"3673":[58,5,59,23],"3681":[60,13,60,18],"3689":[61,10,61,15],"3697":[57,31,69,2],"3705":[57,31,69,2],"3713":[70,33,77,2],"3721":[70,33,77,2],"3729":[1,1,78,36],"3737":[1,1,78,36],"nBranches":12,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/i/lib/inflections.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/i/lib/inflections_jalangi_.js","code":"// A singleton instance of this class is yielded by Inflector.inflections, which can then be used to specify additional\n// inflection rules. Examples:\n//\n//     BulletSupport.Inflector.inflect ($) ->\n//       $.plural /^(ox)$/i, '$1en'\n//       $.singular /^(ox)en/i, '$1'\n//\n//       $.irregular 'octopus', 'octopi'\n//\n//       $.uncountable \"equipment\"\n//\n// New rules are added at the top. So in the example above, the irregular rule for octopus will now be the first of the\n// pluralization and singularization rules that is runs. This guarantees that your rules run before any of the rules that may\n// already have been loaded.\n\nvar util = require('./util');\n\nvar Inflections = function () {\n  this.plurals = [];\n  this.singulars = [];\n  this.uncountables = [];\n  this.humans = [];\n  require('./defaults')(this);\n  return this;\n};\n\n// Specifies a new pluralization rule and its replacement. The rule can either be a string or a regular expression.\n// The replacement should always be a string that may include references to the matched data from the rule.\nInflections.prototype.plural = function (rule, replacement) {\n  if (typeof rule == 'string') {\n    this.uncountables = util.array.del(this.uncountables, rule);\n  }\n  this.uncountables = util.array.del(this.uncountables, replacement);\n  this.plurals.unshift([rule, replacement]);\n};\n\n// Specifies a new singularization rule and its replacement. The rule can either be a string or a regular expression.\n// The replacement should always be a string that may include references to the matched data from the rule.\nInflections.prototype.singular = function (rule, replacement) {\n  if (typeof rule == 'string') {\n    this.uncountables = util.array.del(this.uncountables, rule);\n  }\n  this.uncountables = util.array.del(this.uncountables, replacement);\n  this.singulars.unshift([rule, replacement]);\n};\n\n// Specifies a new irregular that applies to both pluralization and singularization at the same time. This can only be used\n// for strings, not regular expressions. You simply pass the irregular in singular and plural form.\n//\n//     irregular 'octopus', 'octopi'\n//     irregular 'person', 'people'\nInflections.prototype.irregular =  function (singular, plural) {\n  this.uncountables = util.array.del(this.uncountables, singular);\n  this.uncountables = util.array.del(this.uncountables, plural);\n  if (singular[0].toUpperCase() == plural[0].toUpperCase()) {\n    this.plural(new RegExp(\"(\" + singular[0] + \")\" + singular.slice(1) + \"$\", \"i\"), '$1' + plural.slice(1));\n    this.plural(new RegExp(\"(\" + plural[0] + \")\" + plural.slice(1) + \"$\", \"i\"), '$1' + plural.slice(1));\n    this.singular(new RegExp(\"(\" + plural[0] + \")\" + plural.slice(1) + \"$\", \"i\"), '$1' + singular.slice(1));\n  } else {\n    this.plural(new RegExp(\"\" + (singular[0].toUpperCase()) + singular.slice(1) + \"$\"), plural[0].toUpperCase() + plural.slice(1));\n    this.plural(new RegExp(\"\" + (singular[0].toLowerCase()) + singular.slice(1) + \"$\"), plural[0].toLowerCase() + plural.slice(1));\n    this.plural(new RegExp(\"\" + (plural[0].toUpperCase()) + plural.slice(1) + \"$\"), plural[0].toUpperCase() + plural.slice(1));\n    this.plural(new RegExp(\"\" + (plural[0].toLowerCase()) + plural.slice(1) + \"$\"), plural[0].toLowerCase() + plural.slice(1));\n    this.singular(new RegExp(\"\" + (plural[0].toUpperCase()) + plural.slice(1) + \"$\"), singular[0].toUpperCase() + singular.slice(1));\n    this.singular(new RegExp(\"\" + (plural[0].toLowerCase()) + plural.slice(1) + \"$\"), singular[0].toLowerCase() + singular.slice(1));\n  }\n};\n\n// Specifies a humanized form of a string by a regular expression rule or by a string mapping.\n// When using a regular expression based replacement, the normal humanize formatting is called after the replacement.\n// When a string is used, the human form should be specified as desired (example: 'The name', not 'the_name')\n//\n//     human /(.*)_cnt$/i, '$1_count'\n//     human \"legacy_col_person_name\", \"Name\"\nInflections.prototype.human = function (rule, replacement) {\n  this.humans.unshift([rule, replacement]);\n}\n\n// Add uncountable words that shouldn't be attempted inflected.\n//\n//     uncountable \"money\"\n//     uncountable [\"money\", \"information\"]\nInflections.prototype.uncountable = function (words) {\n  this.uncountables = this.uncountables.concat(words);\n}\n\n// Clears the loaded inflections within a given scope (default is _'all'_).\n// Give the scope as a symbol of the inflection type, the options are: _'plurals'_,\n// _'singulars'_, _'uncountables'_, _'humans'_.\n//\n//     clear 'all'\n//     clear 'plurals'\nInflections.prototype.clear = function (scope) {\n  if (scope == null) scope = 'all';\n  switch (scope) {\n    case 'all':\n      this.plurals = [];\n      this.singulars = [];\n      this.uncountables = [];\n      this.humans = [];\n    default:\n      this[scope] = [];\n  }\n}\n\n// Clears the loaded inflections and initializes them to [default](../inflections.html)\nInflections.prototype.default = function () {\n  this.plurals = [];\n  this.singulars = [];\n  this.uncountables = [];\n  this.humans = [];\n  require('./defaults')(this);\n  return this;\n};\n\nmodule.exports = new Inflections();\n"};
jalangiLabel1122:
    while (true) {
        try {
            J$.Se(3513, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/i/lib/inflections_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/i/lib/inflections.js');
            J$.N(3521, '__secret__S$', __secret__S$, 0);
            J$.N(3529, '__secret__traits__', __secret__traits__, 0);
            J$.N(3537, 'util', util, 0);
            J$.N(3545, 'Inflections', Inflections, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var util = J$.X1(113, J$.W(105, 'util', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, './util', 21, false)), util, 3));
            var Inflections = J$.X1(353, J$.W(345, 'Inflections', J$.T(337, function () {
                jalangiLabel1114:
                    while (true) {
                        try {
                            J$.Fe(321, arguments.callee, this, arguments);
                            arguments = J$.N(329, 'arguments', arguments, 4);
                            J$.X1(145, J$.P(137, J$.R(121, 'this', this, 0), 'plurals', J$.T(129, [], 10, false), 0));
                            J$.X1(177, J$.P(169, J$.R(153, 'this', this, 0), 'singulars', J$.T(161, [], 10, false), 0));
                            J$.X1(209, J$.P(201, J$.R(185, 'this', this, 0), 'uncountables', J$.T(193, [], 10, false), 0));
                            J$.X1(241, J$.P(233, J$.R(217, 'this', this, 0), 'humans', J$.T(225, [], 10, false), 0));
                            J$.X1(289, J$.F(281, J$.F(265, J$.R(249, 'require', require, 2), 0)(J$.T(257, './defaults', 21, false)), 0)(J$.R(273, 'this', this, 0)));
                            return J$.X1(313, J$.Rt(305, J$.R(297, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(3553, J$e);
                        } finally {
                            if (J$.Fr(3561))
                                continue jalangiLabel1114;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 321), Inflections, 3));
            J$.X1(641, J$.P(633, J$.G(369, J$.R(361, 'Inflections', Inflections, 1), 'prototype', 0), 'plural', J$.T(625, function (rule, replacement) {
                jalangiLabel1115:
                    while (true) {
                        try {
                            J$.Fe(593, arguments.callee, this, arguments);
                            arguments = J$.N(601, 'arguments', arguments, 4);
                            rule = J$.N(609, 'rule', rule, 4);
                            replacement = J$.N(617, 'replacement', replacement, 4);
                            if (J$.X1(3569, J$.C(8, J$.B(18, '==', J$.U(10, 'typeof', J$.R(377, 'rule', rule, 0)), J$.T(385, 'string', 21, false), 0)))) {
                                J$.X1(457, J$.P(449, J$.R(393, 'this', this, 0), 'uncountables', J$.M(441, J$.G(409, J$.R(401, 'util', util, 1), 'array', 0), 'del', 0)(J$.G(425, J$.R(417, 'this', this, 0), 'uncountables', 0), J$.R(433, 'rule', rule, 0)), 0));
                            }
                            J$.X1(529, J$.P(521, J$.R(465, 'this', this, 0), 'uncountables', J$.M(513, J$.G(481, J$.R(473, 'util', util, 1), 'array', 0), 'del', 0)(J$.G(497, J$.R(489, 'this', this, 0), 'uncountables', 0), J$.R(505, 'replacement', replacement, 0)), 0));
                            J$.X1(585, J$.M(577, J$.G(545, J$.R(537, 'this', this, 0), 'plurals', 0), 'unshift', 0)(J$.T(569, [
                                J$.R(553, 'rule', rule, 0),
                                J$.R(561, 'replacement', replacement, 0)
                            ], 10, false)));
                        } catch (J$e) {
                            J$.Ex(3577, J$e);
                        } finally {
                            if (J$.Fr(3585))
                                continue jalangiLabel1115;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 593), 0));
            J$.X1(929, J$.P(921, J$.G(657, J$.R(649, 'Inflections', Inflections, 1), 'prototype', 0), 'singular', J$.T(913, function (rule, replacement) {
                jalangiLabel1116:
                    while (true) {
                        try {
                            J$.Fe(881, arguments.callee, this, arguments);
                            arguments = J$.N(889, 'arguments', arguments, 4);
                            rule = J$.N(897, 'rule', rule, 4);
                            replacement = J$.N(905, 'replacement', replacement, 4);
                            if (J$.X1(3593, J$.C(16, J$.B(34, '==', J$.U(26, 'typeof', J$.R(665, 'rule', rule, 0)), J$.T(673, 'string', 21, false), 0)))) {
                                J$.X1(745, J$.P(737, J$.R(681, 'this', this, 0), 'uncountables', J$.M(729, J$.G(697, J$.R(689, 'util', util, 1), 'array', 0), 'del', 0)(J$.G(713, J$.R(705, 'this', this, 0), 'uncountables', 0), J$.R(721, 'rule', rule, 0)), 0));
                            }
                            J$.X1(817, J$.P(809, J$.R(753, 'this', this, 0), 'uncountables', J$.M(801, J$.G(769, J$.R(761, 'util', util, 1), 'array', 0), 'del', 0)(J$.G(785, J$.R(777, 'this', this, 0), 'uncountables', 0), J$.R(793, 'replacement', replacement, 0)), 0));
                            J$.X1(873, J$.M(865, J$.G(833, J$.R(825, 'this', this, 0), 'singulars', 0), 'unshift', 0)(J$.T(857, [
                                J$.R(841, 'rule', rule, 0),
                                J$.R(849, 'replacement', replacement, 0)
                            ], 10, false)));
                        } catch (J$e) {
                            J$.Ex(3601, J$e);
                        } finally {
                            if (J$.Fr(3609))
                                continue jalangiLabel1116;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 881), 0));
            J$.X1(2673, J$.P(2665, J$.G(945, J$.R(937, 'Inflections', Inflections, 1), 'prototype', 0), 'irregular', J$.T(2657, function (singular, plural) {
                jalangiLabel1117:
                    while (true) {
                        try {
                            J$.Fe(2625, arguments.callee, this, arguments);
                            arguments = J$.N(2633, 'arguments', arguments, 4);
                            singular = J$.N(2641, 'singular', singular, 4);
                            plural = J$.N(2649, 'plural', plural, 4);
                            J$.X1(1017, J$.P(1009, J$.R(953, 'this', this, 0), 'uncountables', J$.M(1001, J$.G(969, J$.R(961, 'util', util, 1), 'array', 0), 'del', 0)(J$.G(985, J$.R(977, 'this', this, 0), 'uncountables', 0), J$.R(993, 'singular', singular, 0)), 0));
                            J$.X1(1089, J$.P(1081, J$.R(1025, 'this', this, 0), 'uncountables', J$.M(1073, J$.G(1041, J$.R(1033, 'util', util, 1), 'array', 0), 'del', 0)(J$.G(1057, J$.R(1049, 'this', this, 0), 'uncountables', 0), J$.R(1065, 'plural', plural, 0)), 0));
                            if (J$.X1(3617, J$.C(24, J$.B(42, '==', J$.M(1121, J$.G(1113, J$.R(1097, 'singular', singular, 0), J$.T(1105, 0, 22, false), 4), 'toUpperCase', 0)(), J$.M(1153, J$.G(1145, J$.R(1129, 'plural', plural, 0), J$.T(1137, 0, 22, false), 4), 'toUpperCase', 0)(), 0)))) {
                                J$.X1(1305, J$.M(1297, J$.R(1161, 'this', this, 0), 'plural', 0)(J$.F(1257, J$.R(1169, 'RegExp', RegExp, 2), 1)(J$.B(74, '+', J$.B(66, '+', J$.B(58, '+', J$.B(50, '+', J$.T(1177, '(', 21, false), J$.G(1201, J$.R(1185, 'singular', singular, 0), J$.T(1193, 0, 22, false), 4), 0), J$.T(1209, ')', 21, false), 0), J$.M(1233, J$.R(1217, 'singular', singular, 0), 'slice', 0)(J$.T(1225, 1, 22, false)), 0), J$.T(1241, '$', 21, false), 0), J$.T(1249, 'i', 21, false)), J$.B(82, '+', J$.T(1265, '$1', 21, false), J$.M(1289, J$.R(1273, 'plural', plural, 0), 'slice', 0)(J$.T(1281, 1, 22, false)), 0)));
                                J$.X1(1457, J$.M(1449, J$.R(1313, 'this', this, 0), 'plural', 0)(J$.F(1409, J$.R(1321, 'RegExp', RegExp, 2), 1)(J$.B(114, '+', J$.B(106, '+', J$.B(98, '+', J$.B(90, '+', J$.T(1329, '(', 21, false), J$.G(1353, J$.R(1337, 'plural', plural, 0), J$.T(1345, 0, 22, false), 4), 0), J$.T(1361, ')', 21, false), 0), J$.M(1385, J$.R(1369, 'plural', plural, 0), 'slice', 0)(J$.T(1377, 1, 22, false)), 0), J$.T(1393, '$', 21, false), 0), J$.T(1401, 'i', 21, false)), J$.B(122, '+', J$.T(1417, '$1', 21, false), J$.M(1441, J$.R(1425, 'plural', plural, 0), 'slice', 0)(J$.T(1433, 1, 22, false)), 0)));
                                J$.X1(1609, J$.M(1601, J$.R(1465, 'this', this, 0), 'singular', 0)(J$.F(1561, J$.R(1473, 'RegExp', RegExp, 2), 1)(J$.B(154, '+', J$.B(146, '+', J$.B(138, '+', J$.B(130, '+', J$.T(1481, '(', 21, false), J$.G(1505, J$.R(1489, 'plural', plural, 0), J$.T(1497, 0, 22, false), 4), 0), J$.T(1513, ')', 21, false), 0), J$.M(1537, J$.R(1521, 'plural', plural, 0), 'slice', 0)(J$.T(1529, 1, 22, false)), 0), J$.T(1545, '$', 21, false), 0), J$.T(1553, 'i', 21, false)), J$.B(162, '+', J$.T(1569, '$1', 21, false), J$.M(1593, J$.R(1577, 'singular', singular, 0), 'slice', 0)(J$.T(1585, 1, 22, false)), 0)));
                            } else {
                                J$.X1(1777, J$.M(1769, J$.R(1617, 'this', this, 0), 'plural', 0)(J$.F(1705, J$.R(1625, 'RegExp', RegExp, 2), 1)(J$.B(186, '+', J$.B(178, '+', J$.B(170, '+', J$.T(1633, '', 21, false), J$.M(1665, J$.G(1657, J$.R(1641, 'singular', singular, 0), J$.T(1649, 0, 22, false), 4), 'toUpperCase', 0)(), 0), J$.M(1689, J$.R(1673, 'singular', singular, 0), 'slice', 0)(J$.T(1681, 1, 22, false)), 0), J$.T(1697, '$', 21, false), 0)), J$.B(194, '+', J$.M(1737, J$.G(1729, J$.R(1713, 'plural', plural, 0), J$.T(1721, 0, 22, false), 4), 'toUpperCase', 0)(), J$.M(1761, J$.R(1745, 'plural', plural, 0), 'slice', 0)(J$.T(1753, 1, 22, false)), 0)));
                                J$.X1(1945, J$.M(1937, J$.R(1785, 'this', this, 0), 'plural', 0)(J$.F(1873, J$.R(1793, 'RegExp', RegExp, 2), 1)(J$.B(218, '+', J$.B(210, '+', J$.B(202, '+', J$.T(1801, '', 21, false), J$.M(1833, J$.G(1825, J$.R(1809, 'singular', singular, 0), J$.T(1817, 0, 22, false), 4), 'toLowerCase', 0)(), 0), J$.M(1857, J$.R(1841, 'singular', singular, 0), 'slice', 0)(J$.T(1849, 1, 22, false)), 0), J$.T(1865, '$', 21, false), 0)), J$.B(226, '+', J$.M(1905, J$.G(1897, J$.R(1881, 'plural', plural, 0), J$.T(1889, 0, 22, false), 4), 'toLowerCase', 0)(), J$.M(1929, J$.R(1913, 'plural', plural, 0), 'slice', 0)(J$.T(1921, 1, 22, false)), 0)));
                                J$.X1(2113, J$.M(2105, J$.R(1953, 'this', this, 0), 'plural', 0)(J$.F(2041, J$.R(1961, 'RegExp', RegExp, 2), 1)(J$.B(250, '+', J$.B(242, '+', J$.B(234, '+', J$.T(1969, '', 21, false), J$.M(2001, J$.G(1993, J$.R(1977, 'plural', plural, 0), J$.T(1985, 0, 22, false), 4), 'toUpperCase', 0)(), 0), J$.M(2025, J$.R(2009, 'plural', plural, 0), 'slice', 0)(J$.T(2017, 1, 22, false)), 0), J$.T(2033, '$', 21, false), 0)), J$.B(258, '+', J$.M(2073, J$.G(2065, J$.R(2049, 'plural', plural, 0), J$.T(2057, 0, 22, false), 4), 'toUpperCase', 0)(), J$.M(2097, J$.R(2081, 'plural', plural, 0), 'slice', 0)(J$.T(2089, 1, 22, false)), 0)));
                                J$.X1(2281, J$.M(2273, J$.R(2121, 'this', this, 0), 'plural', 0)(J$.F(2209, J$.R(2129, 'RegExp', RegExp, 2), 1)(J$.B(282, '+', J$.B(274, '+', J$.B(266, '+', J$.T(2137, '', 21, false), J$.M(2169, J$.G(2161, J$.R(2145, 'plural', plural, 0), J$.T(2153, 0, 22, false), 4), 'toLowerCase', 0)(), 0), J$.M(2193, J$.R(2177, 'plural', plural, 0), 'slice', 0)(J$.T(2185, 1, 22, false)), 0), J$.T(2201, '$', 21, false), 0)), J$.B(290, '+', J$.M(2241, J$.G(2233, J$.R(2217, 'plural', plural, 0), J$.T(2225, 0, 22, false), 4), 'toLowerCase', 0)(), J$.M(2265, J$.R(2249, 'plural', plural, 0), 'slice', 0)(J$.T(2257, 1, 22, false)), 0)));
                                J$.X1(2449, J$.M(2441, J$.R(2289, 'this', this, 0), 'singular', 0)(J$.F(2377, J$.R(2297, 'RegExp', RegExp, 2), 1)(J$.B(314, '+', J$.B(306, '+', J$.B(298, '+', J$.T(2305, '', 21, false), J$.M(2337, J$.G(2329, J$.R(2313, 'plural', plural, 0), J$.T(2321, 0, 22, false), 4), 'toUpperCase', 0)(), 0), J$.M(2361, J$.R(2345, 'plural', plural, 0), 'slice', 0)(J$.T(2353, 1, 22, false)), 0), J$.T(2369, '$', 21, false), 0)), J$.B(322, '+', J$.M(2409, J$.G(2401, J$.R(2385, 'singular', singular, 0), J$.T(2393, 0, 22, false), 4), 'toUpperCase', 0)(), J$.M(2433, J$.R(2417, 'singular', singular, 0), 'slice', 0)(J$.T(2425, 1, 22, false)), 0)));
                                J$.X1(2617, J$.M(2609, J$.R(2457, 'this', this, 0), 'singular', 0)(J$.F(2545, J$.R(2465, 'RegExp', RegExp, 2), 1)(J$.B(346, '+', J$.B(338, '+', J$.B(330, '+', J$.T(2473, '', 21, false), J$.M(2505, J$.G(2497, J$.R(2481, 'plural', plural, 0), J$.T(2489, 0, 22, false), 4), 'toLowerCase', 0)(), 0), J$.M(2529, J$.R(2513, 'plural', plural, 0), 'slice', 0)(J$.T(2521, 1, 22, false)), 0), J$.T(2537, '$', 21, false), 0)), J$.B(354, '+', J$.M(2577, J$.G(2569, J$.R(2553, 'singular', singular, 0), J$.T(2561, 0, 22, false), 4), 'toLowerCase', 0)(), J$.M(2601, J$.R(2585, 'singular', singular, 0), 'slice', 0)(J$.T(2593, 1, 22, false)), 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(3625, J$e);
                        } finally {
                            if (J$.Fr(3633))
                                continue jalangiLabel1117;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2625), 0));
            J$.X1(2801, J$.P(2793, J$.G(2689, J$.R(2681, 'Inflections', Inflections, 1), 'prototype', 0), 'human', J$.T(2785, function (rule, replacement) {
                jalangiLabel1118:
                    while (true) {
                        try {
                            J$.Fe(2753, arguments.callee, this, arguments);
                            arguments = J$.N(2761, 'arguments', arguments, 4);
                            rule = J$.N(2769, 'rule', rule, 4);
                            replacement = J$.N(2777, 'replacement', replacement, 4);
                            J$.X1(2745, J$.M(2737, J$.G(2705, J$.R(2697, 'this', this, 0), 'humans', 0), 'unshift', 0)(J$.T(2729, [
                                J$.R(2713, 'rule', rule, 0),
                                J$.R(2721, 'replacement', replacement, 0)
                            ], 10, false)));
                        } catch (J$e) {
                            J$.Ex(3641, J$e);
                        } finally {
                            if (J$.Fr(3649))
                                continue jalangiLabel1118;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2753), 0));
            J$.X1(2921, J$.P(2913, J$.G(2817, J$.R(2809, 'Inflections', Inflections, 1), 'prototype', 0), 'uncountable', J$.T(2905, function (words) {
                jalangiLabel1119:
                    while (true) {
                        try {
                            J$.Fe(2881, arguments.callee, this, arguments);
                            arguments = J$.N(2889, 'arguments', arguments, 4);
                            words = J$.N(2897, 'words', words, 4);
                            J$.X1(2873, J$.P(2865, J$.R(2825, 'this', this, 0), 'uncountables', J$.M(2857, J$.G(2841, J$.R(2833, 'this', this, 0), 'uncountables', 0), 'concat', 0)(J$.R(2849, 'words', words, 0)), 0));
                        } catch (J$e) {
                            J$.Ex(3657, J$e);
                        } finally {
                            if (J$.Fr(3665))
                                continue jalangiLabel1119;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2881), 0));
            J$.X1(3209, J$.P(3201, J$.G(2937, J$.R(2929, 'Inflections', Inflections, 1), 'prototype', 0), 'clear', J$.T(3193, function (scope) {
                jalangiLabel1120:
                    while (true) {
                        try {
                            J$.Fe(3169, arguments.callee, this, arguments);
                            arguments = J$.N(3177, 'arguments', arguments, 4);
                            scope = J$.N(3185, 'scope', scope, 4);
                            if (J$.X1(3673, J$.C(32, J$.B(362, '==', J$.R(2945, 'scope', scope, 0), J$.T(2953, null, 25, false), 0))))
                                J$.X1(2977, scope = J$.W(2969, 'scope', J$.T(2961, 'all', 21, false), scope, 0));
                            switch (J$.X1(3681, J$.C1(40, J$.R(2985, 'scope', scope, 0)))) {
                            case J$.X1(3689, J$.C2(48, J$.T(3121, 'all', 21, false))):
                                J$.X1(3017, J$.P(3009, J$.R(2993, 'this', this, 0), 'plurals', J$.T(3001, [], 10, false), 0));
                                J$.X1(3049, J$.P(3041, J$.R(3025, 'this', this, 0), 'singulars', J$.T(3033, [], 10, false), 0));
                                J$.X1(3081, J$.P(3073, J$.R(3057, 'this', this, 0), 'uncountables', J$.T(3065, [], 10, false), 0));
                                J$.X1(3113, J$.P(3105, J$.R(3089, 'this', this, 0), 'humans', J$.T(3097, [], 10, false), 0));
                            default:
                                J$.X1(3161, J$.P(3153, J$.R(3129, 'this', this, 0), J$.R(3137, 'scope', scope, 0), J$.T(3145, [], 10, false), 2));
                            }
                        } catch (J$e) {
                            J$.Ex(3697, J$e);
                        } finally {
                            if (J$.Fr(3705))
                                continue jalangiLabel1120;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3169), 0));
            J$.X1(3465, J$.P(3457, J$.G(3225, J$.R(3217, 'Inflections', Inflections, 1), 'prototype', 0), 'default', J$.T(3449, function () {
                jalangiLabel1121:
                    while (true) {
                        try {
                            J$.Fe(3433, arguments.callee, this, arguments);
                            arguments = J$.N(3441, 'arguments', arguments, 4);
                            J$.X1(3257, J$.P(3249, J$.R(3233, 'this', this, 0), 'plurals', J$.T(3241, [], 10, false), 0));
                            J$.X1(3289, J$.P(3281, J$.R(3265, 'this', this, 0), 'singulars', J$.T(3273, [], 10, false), 0));
                            J$.X1(3321, J$.P(3313, J$.R(3297, 'this', this, 0), 'uncountables', J$.T(3305, [], 10, false), 0));
                            J$.X1(3353, J$.P(3345, J$.R(3329, 'this', this, 0), 'humans', J$.T(3337, [], 10, false), 0));
                            J$.X1(3401, J$.F(3393, J$.F(3377, J$.R(3361, 'require', require, 2), 0)(J$.T(3369, './defaults', 21, false)), 0)(J$.R(3385, 'this', this, 0)));
                            return J$.X1(3425, J$.Rt(3417, J$.R(3409, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(3713, J$e);
                        } finally {
                            if (J$.Fr(3721))
                                continue jalangiLabel1121;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3433), 0));
            J$.X1(3505, J$.P(3497, J$.R(3473, 'module', module, 2), 'exports', J$.F(3489, J$.R(3481, 'Inflections', Inflections, 1), 1)(), 0));
        } catch (J$e) {
            J$.Ex(3729, J$e);
        } finally {
            if (J$.Sr(3737)) {
                J$.L();
                continue jalangiLabel1122;
            } else {
                J$.L();
                break jalangiLabel1122;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
