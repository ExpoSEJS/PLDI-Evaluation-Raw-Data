J$.iids = {"8":[5,15,5,30],"9":[1,20,1,27],"10":[5,15,5,30],"16":[20,29,20,87],"17":[1,28,1,32],"18":[35,26,35,49],"24":[35,26,35,62],"25":[1,20,1,33],"26":[35,26,35,62],"32":[46,26,46,62],"33":[1,20,1,33],"34":[46,26,46,49],"40":[82,13,82,42],"41":[1,20,1,33],"42":[46,26,46,62],"48":[89,20,89,44],"49":[2,26,2,38],"50":[82,13,82,42],"56":[87,20,87,44],"57":[2,26,2,45],"58":[83,33,83,96],"64":[85,13,85,37],"65":[2,26,2,45],"66":[85,13,85,37],"72":[92,13,92,33],"73":[2,26,2,45],"74":[87,20,87,44],"80":[94,13,94,46],"81":[3,14,3,21],"82":[89,20,89,44],"88":[100,13,100,124],"89":[3,22,3,33],"90":[92,13,92,33],"96":[100,13,100,161],"97":[3,14,3,34],"98":[94,13,94,46],"104":[100,13,100,161],"105":[3,45,3,52],"106":[100,13,100,33],"112":[109,13,109,36],"113":[3,53,3,63],"114":[100,13,100,54],"120":[120,20,120,44],"121":[3,45,3,64],"122":[100,58,100,103],"128":[118,20,118,44],"129":[3,74,3,81],"130":[100,58,100,124],"136":[116,13,116,37],"137":[3,82,3,95],"138":[100,128,100,161],"144":[128,13,128,33],"145":[3,74,3,96],"146":[106,32,106,52],"152":[133,13,133,22],"153":[3,117,3,122],"154":[107,37,107,69],"160":[153,20,153,52],"161":[3,117,3,139],"162":[114,28,114,44],"168":[147,20,147,52],"169":[3,154,3,160],"170":[116,13,116,37],"176":[141,13,141,45],"177":[3,154,3,171],"178":[118,20,118,44],"184":[160,13,160,33],"185":[3,192,3,198],"186":[120,20,120,44],"192":[173,25,173,55],"193":[3,192,3,215],"194":[123,28,123,48],"200":[173,25,173,55],"201":[3,228,3,234],"202":[124,33,124,65],"208":[172,21,172,51],"209":[3,228,3,243],"210":[128,13,128,33],"216":[169,25,169,43],"217":[3,256,3,263],"218":[133,13,133,22],"224":[182,13,182,21],"225":[3,264,3,270],"226":[141,13,141,45],"232":[184,13,184,47],"233":[3,256,3,271],"234":[147,20,147,52],"240":[189,13,189,31],"241":[3,256,3,280],"242":[153,20,153,52],"248":[191,13,191,31],"249":[3,290,3,296],"250":[160,13,160,33],"256":[193,13,193,31],"257":[3,290,3,302],"258":[169,25,169,43],"264":[195,13,195,32],"265":[3,324,3,330],"266":[169,45,169,48],"272":[198,13,198,63],"273":[3,324,3,348],"280":[209,28,209,46],"281":[3,14,3,34],"282":[169,45,169,48],"288":[212,21,212,58],"289":[3,14,3,34],"290":[171,45,171,74],"296":[213,102,213,110],"297":[3,45,3,64],"298":[172,21,172,51],"304":[214,25,214,40],"305":[3,45,3,64],"306":[173,25,173,43],"312":[212,21,212,58],"313":[3,74,3,96],"314":[184,13,184,33],"320":[225,21,225,46],"321":[3,74,3,96],"322":[184,13,184,47],"328":[221,25,221,53],"329":[3,117,3,139],"330":[195,13,195,32],"336":[233,28,233,46],"337":[3,117,3,139],"338":[212,21,212,39],"344":[237,33,237,52],"345":[3,154,3,171],"346":[212,43,212,58],"352":[236,17,236,44],"353":[3,154,3,171],"354":[214,25,214,40],"360":[238,17,238,45],"361":[3,192,3,215],"362":[221,25,221,53],"368":[241,21,241,56],"369":[3,192,3,215],"370":[221,55,221,58],"376":[242,102,242,113],"377":[3,228,3,243],"384":[243,25,243,40],"385":[3,228,3,243],"386":[221,55,221,58],"392":[241,21,241,56],"393":[3,256,3,280],"394":[224,40,224,64],"400":[254,21,254,46],"401":[3,256,3,280],"402":[225,21,225,46],"408":[250,25,250,53],"409":[3,290,3,302],"410":[236,17,236,44],"416":[262,28,262,46],"417":[3,290,3,302],"418":[238,17,238,45],"424":[266,34,266,58],"425":[3,324,3,348],"426":[241,21,241,38],"432":[265,17,265,44],"433":[3,324,3,348],"434":[241,42,241,56],"440":[268,21,268,56],"441":[5,15,5,22],"442":[243,25,243,40],"448":[269,102,269,110],"449":[5,26,5,30],"450":[250,25,250,53],"456":[270,25,270,40],"457":[5,33,5,35],"458":[250,55,250,58],"464":[268,21,268,56],"465":[5,38,5,45],"472":[281,21,281,46],"473":[5,15,5,45],"474":[250,55,250,58],"480":[277,25,277,53],"481":[5,5,5,46],"482":[253,40,253,64],"488":[288,13,288,32],"489":[6,16,6,20],"490":[254,21,254,46],"496":[294,17,294,36],"497":[6,16,6,20],"498":[265,17,265,44],"504":[297,17,297,47],"505":[6,16,6,20],"506":[266,34,266,58],"512":[301,24,301,62],"513":[7,21,7,31],"514":[268,21,268,38],"520":[301,24,301,62],"521":[7,21,7,46],"522":[268,42,268,56],"528":[297,17,297,47],"529":[7,21,7,46],"530":[270,25,270,40],"536":[306,13,306,45],"537":[7,21,7,46],"538":[277,25,277,53],"544":[309,13,309,45],"545":[8,20,8,25],"546":[277,55,277,58],"552":[312,13,312,45],"553":[8,20,8,25],"561":[8,20,8,25],"562":[277,55,277,58],"569":[9,21,9,25],"570":[280,40,280,64],"577":[9,21,9,25],"578":[281,21,281,46],"585":[9,21,9,25],"586":[288,13,288,32],"593":[10,24,10,25],"594":[294,17,294,36],"601":[10,24,10,25],"602":[297,17,297,35],"609":[10,24,10,25],"610":[301,24,301,42],"617":[11,28,11,29],"618":[301,46,301,62],"625":[11,28,11,29],"626":[306,13,306,45],"633":[11,28,11,29],"634":[309,13,309,45],"641":[12,33,12,34],"642":[312,13,312,45],"649":[12,33,12,34],"657":[12,33,12,34],"665":[13,19,13,21],"673":[13,19,13,21],"681":[13,19,13,21],"689":[14,30,14,34],"697":[14,30,14,34],"705":[14,30,14,34],"713":[15,30,15,34],"721":[15,30,15,34],"729":[15,30,15,34],"737":[16,30,16,34],"745":[16,30,16,34],"753":[16,30,16,34],"761":[17,14,17,24],"769":[17,14,17,27],"777":[17,14,17,27],"785":[17,14,17,27],"793":[18,16,18,18],"801":[18,16,18,23],"809":[18,16,18,23],"817":[18,16,18,23],"825":[19,29,19,31],"833":[19,29,19,44],"841":[19,29,19,61],"843":[19,29,19,59],"849":[19,29,19,73],"857":[19,29,19,73],"865":[19,29,19,73],"873":[20,29,20,31],"881":[20,29,20,44],"889":[20,29,20,61],"891":[20,29,20,59],"897":[20,29,20,79],"905":[20,83,20,87],"913":[20,29,20,87],"921":[20,29,20,87],"929":[21,24,21,30],"937":[21,48,21,58],"945":[21,60,21,67],"953":[21,24,21,68],"955":[21,24,21,47],"961":[21,24,21,68],"969":[21,24,21,68],"977":[23,13,23,14],"985":[24,22,24,24],"993":[25,29,25,31],"1001":[26,20,26,21],"1009":[27,20,27,21],"1017":[28,19,28,20],"1025":[29,20,29,21],"1033":[30,19,30,20],"1041":[31,19,31,21],"1049":[22,22,32,6],"1057":[22,22,32,6],"1065":[22,22,32,6],"1073":[34,9,34,13],"1081":[35,33,35,42],"1089":[35,33,35,49],"1097":[35,53,35,62],"1105":[35,65,35,74],"1113":[35,65,35,81],"1121":[35,84,35,89],"1129":[35,26,35,89],"1137":[35,26,35,89],"1145":[37,20,37,29],"1153":[37,20,37,38],"1161":[38,20,38,34],"1169":[39,24,39,28],"1177":[40,25,40,31],"1185":[36,28,41,14],"1193":[36,28,41,14],"1201":[36,28,41,14],"1209":[42,25,42,29],"1217":[42,25,42,29],"1225":[42,13,42,30],"1233":[43,20,43,39],"1241":[43,40,43,44],"1249":[43,46,43,52],"1257":[43,46,43,59],"1265":[43,61,43,69],"1273":[43,20,43,70],"1281":[43,20,43,70],"1289":[43,13,43,71],"1297":[34,23,44,10],"1305":[34,23,44,10],"1313":[34,23,44,10],"1321":[34,23,44,10],"1329":[34,23,44,10],"1337":[34,23,44,10],"1345":[34,9,44,10],"1353":[34,9,44,11],"1361":[45,9,45,13],"1369":[46,33,46,42],"1377":[46,33,46,49],"1385":[46,53,46,62],"1393":[46,65,46,74],"1401":[46,65,46,81],"1409":[46,84,46,89],"1417":[46,26,46,89],"1425":[46,26,46,89],"1433":[48,20,48,29],"1441":[48,20,48,38],"1449":[49,20,49,34],"1457":[50,24,50,29],"1465":[51,25,51,31],"1473":[47,28,52,14],"1481":[47,28,52,14],"1489":[47,28,52,14],"1497":[53,25,53,29],"1505":[53,25,53,29],"1513":[53,13,53,30],"1521":[54,20,54,39],"1529":[54,40,54,44],"1537":[54,46,54,52],"1545":[54,46,54,59],"1553":[54,61,54,69],"1561":[54,20,54,70],"1569":[54,20,54,70],"1577":[54,13,54,71],"1585":[45,26,55,10],"1593":[45,26,55,10],"1601":[45,26,55,10],"1609":[45,26,55,10],"1617":[45,26,55,10],"1625":[45,26,55,10],"1633":[45,9,55,10],"1641":[45,9,55,11],"1649":[56,9,56,13],"1657":[57,13,57,17],"1665":[57,28,57,42],"1673":[57,13,57,43],"1675":[57,13,57,27],"1681":[57,13,57,44],"1689":[56,27,58,10],"1697":[56,27,58,10],"1705":[56,27,58,10],"1713":[56,27,58,10],"1721":[56,9,58,10],"1729":[56,9,58,11],"1737":[59,9,59,13],"1745":[60,13,60,22],"1753":[60,32,60,36],"1761":[60,13,60,36],"1769":[60,13,60,37],"1777":[61,20,61,24],"1785":[61,20,61,24],"1793":[61,13,61,25],"1801":[59,23,62,10],"1809":[59,23,62,10],"1817":[59,23,62,10],"1825":[59,9,62,10],"1833":[59,9,62,11],"1841":[63,9,63,13],"1849":[65,20,65,29],"1857":[65,20,65,38],"1865":[66,24,66,25],"1873":[64,28,67,14],"1881":[64,28,67,14],"1889":[64,28,67,14],"1897":[68,25,68,29],"1905":[68,25,68,29],"1913":[68,13,68,30],"1921":[69,20,69,39],"1929":[69,40,69,44],"1937":[69,46,69,52],"1945":[69,46,69,59],"1953":[69,61,69,69],"1961":[69,20,69,70],"1969":[69,20,69,70],"1977":[69,13,69,71],"1985":[63,26,70,10],"1993":[63,26,70,10],"2001":[63,26,70,10],"2009":[63,26,70,10],"2017":[63,9,70,10],"2025":[63,9,70,11],"2033":[71,9,71,13],"2041":[73,20,73,29],"2049":[73,20,73,38],"2057":[74,24,74,25],"2065":[72,28,75,14],"2073":[72,28,75,14],"2081":[72,28,75,14],"2089":[76,25,76,29],"2097":[76,25,76,29],"2105":[76,13,76,30],"2113":[77,20,77,39],"2121":[77,40,77,44],"2129":[77,46,77,52],"2137":[77,46,77,59],"2145":[77,61,77,69],"2153":[77,20,77,70],"2161":[77,20,77,70],"2169":[77,13,77,71],"2177":[71,23,78,10],"2185":[71,23,78,10],"2193":[71,23,78,10],"2201":[71,23,78,10],"2209":[71,9,78,10],"2217":[71,9,78,11],"2225":[33,25,79,6],"2233":[33,25,79,6],"2241":[33,25,79,6],"2249":[33,25,79,6],"2257":[33,25,79,6],"2265":[81,24,81,28],"2273":[81,49,81,57],"2281":[81,59,81,64],"2289":[81,24,81,65],"2291":[81,24,81,48],"2297":[81,24,81,65],"2305":[81,24,81,65],"2313":[82,13,82,21],"2321":[82,25,82,42],"2329":[83,19,83,24],"2337":[83,33,83,76],"2345":[83,79,83,96],"2353":[83,19,83,97],"2355":[83,19,83,32],"2361":[83,19,83,97],"2369":[83,13,83,98],"2377":[84,28,84,32],"2385":[84,28,84,32],"2393":[84,28,84,32],"2401":[85,13,85,20],"2409":[85,24,85,30],"2417":[85,24,85,37],"2425":[86,28,86,46],"2433":[86,28,86,46],"2441":[86,13,86,47],"2449":[87,20,87,27],"2457":[87,31,87,37],"2465":[87,31,87,44],"2473":[88,28,88,46],"2481":[88,28,88,46],"2489":[88,13,88,47],"2497":[89,20,89,27],"2505":[89,31,89,37],"2513":[89,31,89,44],"2521":[90,28,90,46],"2529":[90,28,90,46],"2537":[90,13,90,47],"2545":[92,13,92,25],"2553":[92,29,92,33],"2561":[93,32,93,37],"2569":[93,38,93,45],"2577":[93,47,93,59],"2585":[93,28,93,60],"2593":[93,28,93,60],"2601":[93,13,93,61],"2609":[94,13,94,25],"2617":[94,13,94,35],"2625":[94,39,94,46],"2633":[95,13,95,20],"2641":[95,26,95,38],"2649":[95,13,95,39],"2651":[95,13,95,25],"2657":[95,13,95,40],"2665":[96,32,96,37],"2673":[96,38,96,45],"2681":[96,47,96,59],"2689":[96,28,96,60],"2697":[96,28,96,60],"2705":[96,13,96,61],"2713":[97,32,97,33],"2721":[97,32,97,33],"2729":[97,13,97,34],"2737":[98,37,98,38],"2745":[98,37,98,38],"2753":[98,13,98,39],"2761":[100,13,100,29],"2769":[100,32,100,33],"2777":[100,37,100,54],"2785":[100,58,100,79],"2793":[100,82,100,103],"2801":[100,107,100,124],"2809":[100,128,100,140],"2817":[100,128,100,150],"2825":[100,154,100,161],"2833":[101,13,101,20],"2841":[101,26,101,38],"2849":[101,13,101,39],"2851":[101,13,101,25],"2857":[101,13,101,40],"2865":[102,32,102,37],"2873":[102,38,102,45],"2881":[102,47,102,59],"2889":[102,28,102,60],"2897":[102,28,102,60],"2905":[102,13,102,61],"2913":[103,32,103,33],"2921":[103,32,103,33],"2929":[103,13,103,34],"2937":[104,37,104,38],"2945":[104,37,104,38],"2953":[104,13,104,39],"2961":[106,32,106,48],"2969":[106,51,106,52],"2977":[106,32,106,52],"2985":[106,13,106,53],"2993":[107,37,107,58],"3001":[107,61,107,69],"3009":[107,37,107,69],"3017":[107,13,107,70],"3025":[109,13,109,18],"3033":[109,27,109,35],"3041":[109,13,109,36],"3043":[109,13,109,26],"3049":[110,19,110,24],"3057":[110,33,110,73],"3065":[110,19,110,74],"3067":[110,19,110,32],"3073":[110,19,110,74],"3081":[110,13,110,75],"3089":[112,13,112,25],"3097":[112,13,112,36],"3105":[112,42,112,50],"3113":[112,13,112,51],"3115":[112,13,112,41],"3121":[112,13,112,52],"3129":[113,13,113,25],"3137":[113,13,113,41],"3145":[113,47,113,59],"3153":[113,13,113,60],"3155":[113,13,113,46],"3161":[113,13,113,61],"3169":[114,28,114,40],"3177":[114,43,114,44],"3185":[114,28,114,44],"3193":[114,13,114,45],"3201":[116,13,116,20],"3209":[116,24,116,30],"3217":[116,24,116,37],"3225":[117,34,117,46],"3233":[117,34,117,46],"3241":[117,13,117,47],"3249":[118,20,118,27],"3257":[118,31,118,37],"3265":[118,31,118,44],"3273":[119,34,119,46],"3281":[119,34,119,46],"3289":[119,13,119,47],"3297":[120,20,120,27],"3305":[120,31,120,37],"3313":[120,31,120,44],"3321":[121,34,121,46],"3329":[121,34,121,46],"3337":[121,13,121,47],"3345":[123,28,123,44],"3353":[123,47,123,48],"3361":[123,28,123,48],"3369":[123,9,123,49],"3377":[124,33,124,54],"3385":[124,57,124,65],"3393":[124,33,124,65],"3401":[124,9,124,66],"3409":[125,16,125,21],"3417":[125,16,125,21],"3425":[125,9,125,22],"3433":[80,31,126,6],"3441":[80,31,126,6],"3449":[80,31,126,6],"3457":[80,31,126,6],"3465":[80,31,126,6],"3473":[80,31,126,6],"3481":[80,31,126,6],"3489":[80,31,126,6],"3497":[80,31,126,6],"3505":[80,31,126,6],"3513":[127,5,127,9],"3521":[128,13,128,21],"3529":[128,13,128,25],"3537":[128,29,128,33],"3545":[129,13,129,21],"3553":[129,32,129,40],"3561":[129,28,129,42],"3569":[129,13,129,42],"3577":[129,13,129,43],"3585":[130,16,130,35],"3593":[130,36,130,40],"3601":[130,42,130,48],"3609":[130,42,130,55],"3617":[130,57,130,65],"3625":[130,16,130,66],"3633":[130,16,130,66],"3641":[130,9,130,67],"3649":[127,19,131,6],"3657":[127,19,131,6],"3665":[127,19,131,6],"3673":[127,19,131,6],"3681":[127,5,131,6],"3689":[127,5,131,7],"3697":[132,5,132,9],"3705":[133,14,133,22],"3713":[134,19,134,24],"3721":[134,33,134,78],"3729":[134,19,134,79],"3731":[134,19,134,32],"3737":[134,19,134,79],"3745":[134,13,134,80],"3753":[136,33,136,41],"3761":[136,21,136,43],"3769":[136,21,136,43],"3777":[136,9,136,44],"3785":[137,20,137,33],"3793":[137,16,137,35],"3801":[137,16,137,35],"3809":[137,9,137,36],"3817":[132,17,138,6],"3825":[132,17,138,6],"3833":[132,17,138,6],"3841":[132,17,138,6],"3849":[132,5,138,6],"3857":[132,5,138,7],"3865":[140,19,140,23],"3873":[140,19,140,23],"3881":[140,19,140,23],"3889":[141,13,141,18],"3897":[141,13,141,28],"3905":[141,32,141,38],"3913":[141,32,141,45],"3921":[143,25,143,34],"3929":[144,26,144,31],"3937":[144,26,144,42],"3945":[145,26,145,31],"3953":[142,19,146,14],"3961":[142,19,146,14],"3969":[142,13,146,15],"3977":[147,20,147,25],"3985":[147,20,147,35],"3993":[147,39,147,45],"4001":[147,39,147,52],"4009":[149,25,149,34],"4017":[150,28,150,33],"4025":[150,28,150,44],"4033":[151,26,151,31],"4041":[148,19,152,14],"4049":[148,19,152,14],"4057":[148,13,152,15],"4065":[153,20,153,25],"4073":[153,20,153,35],"4081":[153,39,153,45],"4089":[153,39,153,52],"4097":[155,25,155,34],"4105":[156,26,156,31],"4113":[156,26,156,42],"4121":[157,26,157,31],"4129":[154,19,158,14],"4137":[154,19,158,14],"4145":[154,13,158,15],"4153":[160,13,160,25],"4161":[160,29,160,33],"4169":[161,13,161,16],"4177":[161,32,161,44],"4185":[161,13,161,44],"4193":[161,13,161,45],"4201":[163,9,163,11],"4209":[163,20,163,23],"4217":[164,13,164,21],"4225":[164,22,164,26],"4233":[164,28,164,45],"4241":[164,46,164,51],"4249":[164,53,164,58],"4257":[164,60,164,70],"4265":[164,72,164,75],"4273":[164,77,164,83],"4281":[164,28,164,84],"4289":[164,13,164,85],"4297":[164,13,164,86],"4305":[163,25,165,10],"4313":[163,25,165,10],"4321":[163,25,165,10],"4329":[163,25,165,10],"4337":[163,25,165,10],"4345":[163,9,165,11],"4347":[163,9,163,19],"4353":[163,9,165,12],"4361":[139,24,166,6],"4369":[139,24,166,6],"4377":[139,24,166,6],"4385":[139,24,166,6],"4393":[139,24,166,6],"4401":[139,24,166,6],"4409":[139,24,166,6],"4417":[139,24,166,6],"4425":[168,41,168,48],"4433":[168,41,168,55],"4441":[168,41,168,55],"4449":[168,41,168,55],"4457":[169,22,169,23],"4465":[169,22,169,23],"4473":[169,22,169,23],"4481":[169,25,169,26],"4489":[169,29,169,36],"4497":[169,29,169,43],"4513":[169,45,169,46],"4521":[169,45,169,48],"4537":[170,13,170,25],"4545":[170,26,170,33],"4553":[170,34,170,35],"4561":[170,26,170,36],"4569":[171,45,171,70],"4577":[171,73,171,74],"4585":[171,45,171,74],"4593":[171,17,171,75],"4601":[172,21,172,46],"4609":[172,50,172,51],"4617":[173,25,173,35],"4625":[173,25,173,38],"4633":[173,42,173,43],"4641":[173,47,173,55],"4649":[174,32,174,40],"4657":[174,41,174,51],"4665":[174,41,174,57],"4673":[174,59,174,63],"4681":[174,32,174,64],"4689":[174,32,174,64],"4697":[174,25,174,65],"4705":[176,21,176,29],"4713":[176,30,176,34],"4721":[176,40,176,56],"4729":[176,57,176,67],"4737":[176,36,176,68],"4745":[176,21,176,69],"4753":[176,21,176,70],"4761":[170,38,178,14],"4769":[170,38,178,14],"4777":[170,38,178,14],"4785":[170,38,178,14],"4793":[170,38,178,14],"4801":[170,13,178,15],"4809":[170,13,178,16],"4817":[167,26,180,6],"4825":[167,26,180,6],"4833":[167,26,180,6],"4841":[167,26,180,6],"4849":[167,26,180,6],"4857":[167,26,180,6],"4865":[167,26,180,6],"4873":[167,26,180,6],"4881":[181,5,181,9],"4889":[182,13,182,21],"4897":[183,19,183,24],"4905":[183,33,183,62],"4913":[183,19,183,63],"4915":[183,19,183,32],"4921":[183,19,183,63],"4929":[183,13,183,64],"4937":[184,20,184,33],"4945":[184,37,184,47],"4953":[185,24,185,37],"4961":[185,24,185,37],"4969":[185,13,185,38],"4977":[187,28,187,41],"4985":[187,28,187,41],"4993":[187,13,187,42],"5001":[189,13,189,31],"5009":[190,13,190,20],"5017":[190,26,190,44],"5025":[190,13,190,45],"5027":[190,13,190,25],"5033":[190,13,190,46],"5041":[191,13,191,31],"5049":[192,13,192,20],"5057":[192,26,192,44],"5065":[192,13,192,45],"5067":[192,13,192,25],"5073":[192,13,192,46],"5081":[193,13,193,31],"5089":[194,13,194,20],"5097":[194,26,194,44],"5105":[194,13,194,45],"5107":[194,13,194,25],"5113":[194,13,194,46],"5121":[195,13,195,20],"5129":[195,13,195,27],"5137":[195,31,195,32],"5145":[196,19,196,24],"5153":[196,33,196,75],"5161":[196,19,196,76],"5163":[196,19,196,32],"5169":[196,19,196,76],"5177":[196,13,196,77],"5185":[198,13,198,29],"5193":[198,30,198,32],"5201":[198,30,198,45],"5209":[198,30,198,62],"5211":[198,30,198,60],"5217":[198,13,198,63],"5225":[199,20,199,34],"5233":[200,17,200,25],"5241":[200,26,200,29],"5249":[200,31,200,37],"5257":[200,17,200,38],"5265":[200,17,200,39],"5273":[199,35,201,14],"5281":[199,35,201,14],"5289":[199,35,201,14],"5297":[199,35,201,14],"5305":[199,35,201,14],"5313":[199,20,201,15],"5321":[199,20,201,15],"5329":[199,13,201,16],"5337":[202,9,202,19],"5345":[202,32,202,36],"5353":[202,9,202,36],"5361":[202,9,202,37],"5369":[203,9,203,46],"5377":[204,13,204,21],"5385":[204,22,204,25],"5393":[204,27,204,33],"5401":[204,13,204,34],"5409":[204,13,204,35],"5417":[203,47,205,10],"5425":[203,47,205,10],"5433":[203,47,205,10],"5441":[203,47,205,10],"5449":[203,47,205,10],"5457":[203,9,205,11],"5465":[203,9,205,12],"5473":[181,20,206,6],"5481":[181,20,206,6],"5489":[181,20,206,6],"5497":[181,20,206,6],"5505":[181,20,206,6],"5513":[181,5,206,6],"5521":[181,5,206,7],"5529":[208,36,208,42],"5537":[208,36,208,53],"5545":[208,36,208,60],"5553":[208,36,208,60],"5561":[208,36,208,60],"5569":[209,28,209,40],"5577":[209,44,209,46],"5585":[209,28,209,46],"5593":[209,28,209,46],"5601":[211,13,211,24],"5609":[211,32,211,35],"5617":[211,32,211,45],"5625":[211,47,211,55],"5633":[212,21,212,29],"5641":[212,21,212,31],"5649":[212,35,212,39],"5657":[212,43,212,51],"5665":[212,43,212,53],"5673":[212,57,212,58],"5681":[213,34,213,40],"5689":[213,60,213,65],"5697":[213,67,213,70],"5705":[213,67,213,80],"5713":[213,82,213,88],"5721":[213,90,213,100],"5729":[213,102,213,105],"5737":[213,109,213,110],"5745":[213,112,213,115],"5753":[213,112,213,121],"5761":[213,34,213,122],"5763":[213,34,213,59],"5769":[213,34,213,122],"5777":[213,34,213,122],"5785":[214,25,214,31],"5793":[214,35,214,40],"5801":[215,32,215,41],"5809":[215,42,215,46],"5817":[215,52,215,68],"5825":[215,69,215,79],"5833":[215,48,215,80],"5841":[215,32,215,81],"5849":[215,32,215,81],"5857":[215,25,215,82],"5865":[218,17,218,27],"5873":[218,28,218,32],"5881":[218,34,218,41],"5889":[218,17,218,42],"5897":[218,17,218,43],"5905":[211,57,219,14],"5913":[211,57,219,14],"5921":[211,57,219,14],"5929":[211,57,219,14],"5937":[211,57,219,14],"5945":[211,57,219,14],"5953":[211,13,219,15],"5955":[211,13,211,31],"5961":[211,13,219,16],"5969":[210,35,220,10],"5977":[210,35,220,10],"5985":[210,35,220,10],"5993":[210,35,220,10],"6001":[210,35,220,10],"6009":[210,35,220,10],"6017":[210,35,220,10],"6025":[210,35,220,10],"6033":[210,35,220,10],"6041":[221,22,221,23],"6049":[221,22,221,23],"6057":[221,22,221,23],"6065":[221,25,221,26],"6073":[221,29,221,35],"6081":[221,29,221,46],"6089":[221,29,221,53],"6105":[221,55,221,56],"6113":[221,55,221,58],"6129":[222,32,222,40],"6137":[222,41,222,47],"6145":[222,41,222,57],"6153":[222,59,222,65],"6161":[222,59,222,76],"6169":[222,77,222,78],"6177":[222,59,222,79],"6185":[222,81,222,87],"6193":[222,81,222,103],"6201":[222,104,222,105],"6209":[222,81,222,106],"6217":[222,28,222,107],"6225":[222,28,222,107],"6233":[222,28,222,107],"6241":[223,13,223,32],"6249":[223,33,223,34],"6257":[223,36,223,44],"6265":[223,46,223,58],"6273":[224,40,224,60],"6281":[224,63,224,64],"6289":[224,40,224,64],"6297":[224,17,224,65],"6305":[225,21,225,41],"6313":[225,45,225,46],"6321":[226,21,226,30],"6329":[226,31,226,35],"6337":[226,37,226,44],"6345":[226,21,226,45],"6353":[226,21,226,46],"6361":[223,60,228,14],"6369":[223,60,228,14],"6377":[223,60,228,14],"6385":[223,60,228,14],"6393":[223,60,228,14],"6401":[223,13,228,15],"6409":[223,13,228,16],"6417":[207,26,230,6],"6425":[207,26,230,6],"6433":[207,26,230,6],"6441":[207,26,230,6],"6449":[207,26,230,6],"6457":[207,26,230,6],"6465":[207,26,230,6],"6473":[207,26,230,6],"6481":[207,26,230,6],"6489":[207,26,230,6],"6497":[207,26,230,6],"6505":[207,26,230,6],"6513":[207,26,230,6],"6521":[207,26,230,6],"6529":[232,36,232,42],"6537":[232,36,232,53],"6545":[232,36,232,60],"6553":[232,36,232,60],"6561":[232,36,232,60],"6569":[233,28,233,40],"6577":[233,44,233,46],"6585":[233,28,233,46],"6593":[233,28,233,46],"6601":[235,27,235,33],"6609":[235,47,235,59],"6617":[235,27,235,60],"6619":[235,27,235,46],"6625":[235,27,235,60],"6633":[235,27,235,60],"6641":[236,17,236,20],"6649":[236,17,236,30],"6657":[236,17,236,36],"6665":[236,40,236,44],"6673":[237,17,237,24],"6681":[237,33,237,36],"6689":[237,33,237,46],"6697":[237,33,237,52],"6705":[237,55,237,59],"6713":[237,62,237,67],"6721":[237,17,237,67],"6729":[237,17,237,68],"6737":[238,17,238,20],"6745":[238,17,238,30],"6753":[238,17,238,37],"6761":[238,41,238,45],"6769":[239,17,239,24],"6777":[239,34,239,37],"6785":[239,34,239,47],"6793":[239,34,239,54],"6801":[239,17,239,54],"6809":[239,17,239,55],"6817":[240,13,240,24],"6825":[240,32,240,35],"6833":[240,32,240,45],"6841":[240,32,240,47],"6849":[240,49,240,52],"6857":[240,49,240,62],"6865":[240,49,240,64],"6873":[240,66,240,73],"6881":[241,21,241,28],"6889":[241,21,241,30],"6897":[241,34,241,38],"6905":[241,42,241,49],"6913":[241,42,241,51],"6921":[241,55,241,56],"6929":[242,34,242,40],"6937":[242,60,242,65],"6945":[242,67,242,70],"6953":[242,67,242,80],"6961":[242,82,242,88],"6969":[242,90,242,100],"6977":[242,102,242,105],"6985":[242,109,242,113],"6993":[242,115,242,118],"7001":[242,115,242,124],"7009":[242,34,242,125],"7011":[242,34,242,59],"7017":[242,34,242,125],"7025":[242,34,242,125],"7033":[243,25,243,31],"7041":[243,35,243,40],"7049":[244,32,244,41],"7057":[244,42,244,46],"7065":[244,52,244,68],"7073":[244,69,244,79],"7081":[244,48,244,80],"7089":[244,32,244,81],"7097":[244,32,244,81],"7105":[244,25,244,82],"7113":[247,24,247,34],"7121":[247,35,247,39],"7129":[247,41,247,48],"7137":[247,24,247,49],"7145":[247,24,247,49],"7153":[247,17,247,50],"7161":[240,75,248,14],"7169":[240,75,248,14],"7177":[240,75,248,14],"7185":[240,75,248,14],"7193":[240,75,248,14],"7201":[240,75,248,14],"7209":[240,75,248,14],"7217":[240,13,248,15],"7219":[240,13,240,31],"7225":[240,13,248,16],"7233":[234,35,249,10],"7241":[234,35,249,10],"7249":[234,35,249,10],"7257":[234,35,249,10],"7265":[234,35,249,10],"7273":[234,35,249,10],"7281":[234,35,249,10],"7289":[234,35,249,10],"7297":[234,35,249,10],"7305":[234,35,249,10],"7313":[250,22,250,23],"7321":[250,22,250,23],"7329":[250,22,250,23],"7337":[250,25,250,26],"7345":[250,29,250,35],"7353":[250,29,250,46],"7361":[250,29,250,53],"7377":[250,55,250,56],"7385":[250,55,250,58],"7401":[251,32,251,40],"7409":[251,41,251,47],"7417":[251,41,251,57],"7425":[251,59,251,65],"7433":[251,59,251,76],"7441":[251,77,251,78],"7449":[251,59,251,79],"7457":[251,81,251,87],"7465":[251,81,251,103],"7473":[251,104,251,105],"7481":[251,81,251,106],"7489":[251,28,251,107],"7497":[251,28,251,107],"7505":[251,28,251,107],"7513":[252,13,252,32],"7521":[252,33,252,34],"7529":[252,36,252,44],"7537":[252,46,252,53],"7545":[253,40,253,60],"7553":[253,63,253,64],"7561":[253,40,253,64],"7569":[253,17,253,65],"7577":[254,21,254,41],"7585":[254,45,254,46],"7593":[255,21,255,30],"7601":[255,31,255,35],"7609":[255,37,255,44],"7617":[255,21,255,45],"7625":[255,21,255,46],"7633":[252,55,257,14],"7641":[252,55,257,14],"7649":[252,55,257,14],"7657":[252,55,257,14],"7665":[252,55,257,14],"7673":[252,13,257,15],"7681":[252,13,257,16],"7689":[231,26,259,6],"7697":[231,26,259,6],"7705":[231,26,259,6],"7713":[231,26,259,6],"7721":[231,26,259,6],"7729":[231,26,259,6],"7737":[231,26,259,6],"7745":[231,26,259,6],"7753":[231,26,259,6],"7761":[231,26,259,6],"7769":[231,26,259,6],"7777":[231,26,259,6],"7785":[231,26,259,6],"7793":[231,26,259,6],"7801":[261,36,261,42],"7809":[261,36,261,53],"7817":[261,36,261,60],"7825":[261,36,261,60],"7833":[261,36,261,60],"7841":[262,28,262,40],"7849":[262,44,262,46],"7857":[262,28,262,46],"7865":[262,28,262,46],"7873":[264,27,264,33],"7881":[264,47,264,59],"7889":[264,27,264,60],"7891":[264,27,264,46],"7897":[264,27,264,60],"7905":[264,27,264,60],"7913":[265,17,265,20],"7921":[265,17,265,30],"7929":[265,17,265,36],"7937":[265,40,265,44],"7945":[266,17,266,24],"7953":[266,34,266,37],"7961":[266,34,266,47],"7969":[266,34,266,53],"7977":[266,57,266,58],"7985":[266,61,266,65],"7993":[266,68,266,73],"8001":[266,17,266,73],"8009":[266,17,266,74],"8017":[267,13,267,24],"8025":[267,32,267,35],"8033":[267,32,267,45],"8041":[267,32,267,47],"8049":[267,49,267,56],"8057":[268,21,268,28],"8065":[268,21,268,30],"8073":[268,34,268,38],"8081":[268,42,268,49],"8089":[268,42,268,51],"8097":[268,55,268,56],"8105":[269,34,269,40],"8113":[269,60,269,65],"8121":[269,67,269,70],"8129":[269,67,269,80],"8137":[269,82,269,88],"8145":[269,90,269,100],"8153":[269,102,269,105],"8161":[269,109,269,110],"8169":[269,112,269,115],"8177":[269,112,269,121],"8185":[269,34,269,122],"8187":[269,34,269,59],"8193":[269,34,269,122],"8201":[269,34,269,122],"8209":[270,25,270,31],"8217":[270,35,270,40],"8225":[271,32,271,41],"8233":[271,42,271,46],"8241":[271,52,271,68],"8249":[271,69,271,79],"8257":[271,48,271,80],"8265":[271,32,271,81],"8273":[271,32,271,81],"8281":[271,25,271,82],"8289":[274,24,274,34],"8297":[274,35,274,39],"8305":[274,41,274,48],"8313":[274,24,274,49],"8321":[274,24,274,49],"8329":[274,17,274,50],"8337":[267,58,275,14],"8345":[267,58,275,14],"8353":[267,58,275,14],"8361":[267,58,275,14],"8369":[267,58,275,14],"8377":[267,58,275,14],"8385":[267,13,275,15],"8387":[267,13,267,31],"8393":[267,13,275,16],"8401":[263,35,276,10],"8409":[263,35,276,10],"8417":[263,35,276,10],"8425":[263,35,276,10],"8433":[263,35,276,10],"8441":[263,35,276,10],"8449":[263,35,276,10],"8457":[263,35,276,10],"8465":[263,35,276,10],"8473":[263,35,276,10],"8481":[277,22,277,23],"8489":[277,22,277,23],"8497":[277,22,277,23],"8505":[277,25,277,26],"8513":[277,29,277,35],"8521":[277,29,277,46],"8529":[277,29,277,53],"8545":[277,55,277,56],"8553":[277,55,277,58],"8569":[278,32,278,40],"8577":[278,41,278,47],"8585":[278,41,278,57],"8593":[278,59,278,65],"8601":[278,59,278,76],"8609":[278,77,278,78],"8617":[278,59,278,79],"8625":[278,81,278,87],"8633":[278,81,278,103],"8641":[278,104,278,105],"8649":[278,81,278,106],"8657":[278,28,278,107],"8665":[278,28,278,107],"8673":[278,28,278,107],"8681":[279,13,279,32],"8689":[279,33,279,34],"8697":[279,36,279,44],"8705":[279,46,279,53],"8713":[280,40,280,60],"8721":[280,63,280,64],"8729":[280,40,280,64],"8737":[280,17,280,65],"8745":[281,21,281,41],"8753":[281,45,281,46],"8761":[282,21,282,30],"8769":[282,31,282,35],"8777":[282,37,282,44],"8785":[282,21,282,45],"8793":[282,21,282,46],"8801":[279,55,284,14],"8809":[279,55,284,14],"8817":[279,55,284,14],"8825":[279,55,284,14],"8833":[279,55,284,14],"8841":[279,13,284,15],"8849":[279,13,284,16],"8857":[260,26,286,6],"8865":[260,26,286,6],"8873":[260,26,286,6],"8881":[260,26,286,6],"8889":[260,26,286,6],"8897":[260,26,286,6],"8905":[260,26,286,6],"8913":[260,26,286,6],"8921":[260,26,286,6],"8929":[260,26,286,6],"8937":[260,26,286,6],"8945":[260,26,286,6],"8953":[260,26,286,6],"8961":[260,26,286,6],"8969":[288,13,288,20],"8977":[288,13,288,27],"8985":[288,31,288,32],"8993":[289,20,289,28],"9001":[289,29,289,33],"9009":[289,39,289,55],"9017":[289,56,289,66],"9025":[289,35,289,67],"9033":[289,20,289,68],"9041":[289,20,289,68],"9049":[289,13,289,69],"9057":[291,21,291,28],"9065":[291,21,291,36],"9067":[291,21,291,34],"9073":[291,21,291,36],"9081":[291,21,291,36],"9089":[293,31,293,48],"9097":[293,49,293,54],"9105":[293,56,293,61],"9113":[293,63,293,73],"9121":[293,75,293,78],"9129":[293,80,293,87],"9137":[293,31,293,88],"9145":[293,31,293,88],"9153":[293,31,293,88],"9161":[294,17,294,28],"9169":[294,32,294,36],"9177":[295,24,295,32],"9185":[295,33,295,37],"9193":[295,39,295,50],"9201":[295,24,295,51],"9209":[295,24,295,51],"9217":[295,17,295,52],"9225":[297,17,297,27],"9233":[297,17,297,30],"9241":[297,34,297,35],"9249":[297,39,297,47],"9257":[298,40,298,48],"9265":[298,40,298,48],"9273":[298,40,298,48],"9281":[299,28,299,32],"9289":[299,28,299,32],"9297":[299,17,299,33],"9305":[300,24,300,40],"9313":[300,41,300,51],"9321":[300,41,300,57],"9329":[300,59,300,63],"9337":[300,24,300,64],"9345":[300,24,300,64],"9353":[300,17,300,65],"9361":[301,24,301,34],"9369":[301,24,301,37],"9377":[301,41,301,42],"9385":[301,46,301,54],"9393":[301,58,301,62],"9401":[302,17,302,24],"9409":[302,17,302,24],"9417":[304,13,304,50],"9425":[304,51,304,59],"9433":[304,13,304,60],"9441":[304,13,304,61],"9449":[292,39,305,10],"9457":[292,39,305,10],"9465":[292,39,305,10],"9473":[292,39,305,10],"9481":[292,39,305,10],"9489":[292,39,305,10],"9497":[292,39,305,10],"9505":[292,39,305,10],"9513":[292,39,305,10],"9521":[306,13,306,18],"9529":[306,13,306,28],"9537":[306,32,306,38],"9545":[306,32,306,45],"9553":[307,20,307,34],"9561":[307,35,307,45],"9569":[307,47,307,52],"9577":[307,59,307,60],"9585":[307,54,307,62],"9593":[307,64,307,87],"9601":[307,20,307,88],"9609":[307,20,307,88],"9617":[307,13,307,89],"9625":[309,13,309,18],"9633":[309,13,309,28],"9641":[309,32,309,38],"9649":[309,32,309,45],"9657":[310,20,310,34],"9665":[310,35,310,45],"9673":[310,47,310,52],"9681":[310,59,310,60],"9689":[310,54,310,62],"9697":[310,64,310,87],"9705":[310,20,310,88],"9713":[310,20,310,88],"9721":[310,13,310,89],"9729":[312,13,312,18],"9737":[312,13,312,28],"9745":[312,32,312,38],"9753":[312,32,312,45],"9761":[313,20,313,34],"9769":[313,35,313,45],"9777":[313,47,313,52],"9785":[313,59,313,60],"9793":[313,54,313,62],"9801":[313,64,313,87],"9809":[313,20,313,88],"9817":[313,20,313,88],"9825":[313,13,313,89],"9833":[287,49,315,6],"9841":[287,49,315,6],"9849":[287,49,315,6],"9857":[287,49,315,6],"9865":[287,49,315,6],"9873":[287,49,315,6],"9881":[287,49,315,6],"9889":[287,49,315,6],"9897":[4,30,316,2],"9905":[4,30,316,2],"9913":[4,30,316,2],"9921":[4,30,316,2],"9929":[4,30,316,2],"9937":[4,30,316,2],"9945":[4,30,316,2],"9953":[4,30,316,2],"9961":[4,30,316,2],"9969":[4,30,316,2],"9977":[4,30,316,2],"9985":[4,30,316,2],"9993":[4,30,316,2],"10001":[4,30,316,2],"10009":[4,30,316,2],"10017":[4,30,316,2],"10025":[4,30,316,2],"10033":[4,30,316,2],"10041":[4,30,316,2],"10049":[4,30,316,2],"10057":[4,30,316,2],"10065":[4,30,316,2],"10073":[4,30,316,2],"10081":[4,30,316,2],"10089":[4,30,316,2],"10097":[4,30,316,2],"10105":[4,30,316,2],"10113":[4,30,316,2],"10121":[4,30,316,2],"10129":[4,30,316,2],"10137":[4,30,316,2],"10145":[4,30,316,2],"10153":[318,16,318,38],"10161":[318,39,318,43],"10169":[318,45,318,52],"10177":[318,12,318,53],"10185":[318,12,318,53],"10193":[318,5,318,54],"10201":[317,33,319,2],"10209":[317,33,319,2],"10217":[317,33,319,2],"10225":[317,33,319,2],"10233":[317,33,319,2],"10241":[317,33,319,2],"10249":[320,1,320,8],"10257":[320,37,320,62],"10265":[320,1,320,62],"10273":[320,1,320,63],"10281":[1,1,320,63],"10289":[1,1,320,63],"10297":[1,1,320,63],"10305":[1,1,320,63],"10313":[1,1,320,63],"10321":[1,1,320,63],"10329":[1,1,320,63],"10337":[1,1,320,63],"10345":[1,1,320,63],"10353":[1,1,320,63],"10361":[1,1,320,63],"10369":[1,1,320,63],"10377":[1,1,320,63],"10385":[1,1,320,63],"10393":[1,1,320,63],"10401":[5,15,5,45],"10409":[35,26,35,89],"10417":[34,23,44,10],"10425":[34,23,44,10],"10433":[46,26,46,89],"10441":[45,26,55,10],"10449":[45,26,55,10],"10457":[56,27,58,10],"10465":[56,27,58,10],"10473":[59,23,62,10],"10481":[59,23,62,10],"10489":[63,26,70,10],"10497":[63,26,70,10],"10505":[71,23,78,10],"10513":[71,23,78,10],"10521":[33,25,79,6],"10529":[33,25,79,6],"10537":[82,9,83,98],"10545":[89,16,91,10],"10553":[87,16,91,10],"10561":[85,9,91,10],"10569":[92,9,93,61],"10577":[94,9,99,10],"10585":[100,9,108,10],"10593":[109,9,115,10],"10601":[120,16,122,10],"10609":[118,16,122,10],"10617":[116,9,122,10],"10625":[80,31,126,6],"10633":[80,31,126,6],"10641":[128,9,129,43],"10649":[127,19,131,6],"10657":[127,19,131,6],"10665":[133,9,135,10],"10673":[132,17,138,6],"10681":[132,17,138,6],"10689":[153,16,159,10],"10697":[147,16,159,10],"10705":[141,9,159,10],"10713":[160,9,162,10],"10721":[163,25,165,10],"10729":[163,25,165,10],"10737":[139,24,166,6],"10745":[139,24,166,6],"10753":[173,21,175,22],"10761":[172,17,177,18],"10769":[170,38,178,14],"10777":[170,38,178,14],"10785":[169,9,179,10],"10793":[169,9,179,10],"10801":[167,26,180,6],"10809":[167,26,180,6],"10817":[182,9,183,64],"10825":[184,9,188,10],"10833":[189,9,190,46],"10841":[191,9,192,46],"10849":[193,9,194,46],"10857":[195,9,197,10],"10865":[199,35,201,14],"10873":[199,35,201,14],"10881":[198,9,201,16],"10889":[203,47,205,10],"10897":[203,47,205,10],"10905":[181,20,206,6],"10913":[181,20,206,6],"10921":[214,21,216,22],"10929":[212,17,217,18],"10937":[211,57,219,14],"10945":[211,57,219,14],"10953":[210,35,220,10],"10961":[210,35,220,10],"10969":[225,17,227,18],"10977":[223,60,228,14],"10985":[223,60,228,14],"10993":[221,9,229,10],"11001":[221,9,229,10],"11009":[207,26,230,6],"11017":[207,26,230,6],"11025":[237,33,237,67],"11033":[236,13,237,68],"11041":[238,13,239,55],"11049":[243,21,245,22],"11057":[241,17,246,18],"11065":[240,75,248,14],"11073":[240,75,248,14],"11081":[234,35,249,10],"11089":[234,35,249,10],"11097":[254,17,256,18],"11105":[252,55,257,14],"11113":[252,55,257,14],"11121":[250,9,258,10],"11129":[250,9,258,10],"11137":[231,26,259,6],"11145":[231,26,259,6],"11153":[266,34,266,73],"11161":[265,13,266,74],"11169":[270,21,272,22],"11177":[268,17,273,18],"11185":[267,58,275,14],"11193":[267,58,275,14],"11201":[263,35,276,10],"11209":[263,35,276,10],"11217":[281,17,283,18],"11225":[279,55,284,14],"11233":[279,55,284,14],"11241":[277,9,285,10],"11249":[277,9,285,10],"11257":[260,26,286,6],"11265":[260,26,286,6],"11273":[288,9,290,10],"11281":[294,13,296,14],"11289":[301,20,303,14],"11297":[297,13,303,14],"11305":[292,39,305,10],"11313":[292,39,305,10],"11321":[306,9,308,10],"11329":[309,9,311,10],"11337":[312,9,314,10],"11345":[287,49,315,6],"11353":[287,49,315,6],"11361":[4,30,316,2],"11369":[4,30,316,2],"11377":[317,33,319,2],"11385":[317,33,319,2],"11393":[1,1,320,63],"11401":[1,1,320,63],"nBranches":138,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/collection/batch/unordered_jalangi_.js","code":"var shared = require('../shared')\n\t, common = require('./common')\n\t, utils = require('../../utils')\n  , hasWriteCommands = utils.hasWriteCommands\n  , WriteError = common.WriteError\n  , BatchWriteResult = common.BatchWriteResult\n  , LegacyOp = common.LegacyOp\n  , ObjectID = require('bson').ObjectID\n  , Batch = common.Batch\n  , mergeBatchResults = common.mergeBatchResults;\n\n/**\n * Create a new UnorderedBulkOperation instance (INTERNAL TYPE, do not instantiate directly)\n *\n * Options\n *  - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n *  - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n *  - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n *  - **j**, (Boolean, default:false) write waits for journal sync before returning\n *\n * @class Represents a UnorderedBulkOperation\n * @param {Object} collection collection instance.\n * @param {Object} [options] additional options for the collection.\n * @return {Object} a ordered bulk operation instance.\n */\nvar UnorderedBulkOperation = function(collection, options) {\n\toptions = options == null ? {} : options;\n\n\t// Contains reference to self\n\tvar self = this;\n\t// Get the namesspace for the write operations\n  var namespace = collection.collectionName;\n  // Used to mark operation as executed\n  var executed = false;\n\n\t// Current item\n  // var currentBatch = null;\n\tvar currentOp = null;\n\tvar currentIndex = 0;\n  var currentBatchSize = 0;\n  var currentBatchSizeBytes = 0;\n  var batches = [];\n\n  // The current Batches for the different operations\n  var currentInsertBatch = null;\n  var currentUpdateBatch = null;\n  var currentRemoveBatch = null;\n\n\t// Handle to the bson serializer, used to calculate running sizes\n  var db = collection.db;\n\tvar bson = db.bson;\n\n  // Set max byte size\n\tvar maxBatchSizeBytes = db.serverConfig.checkoutWriter().maxBsonSize;\n\tvar maxWriteBatchSize = db.serverConfig.checkoutWriter().maxWriteBatchSize || 1000;\n\n  // Get the write concern\n  var writeConcern = shared._getWriteConcern(collection, options);\n\n  // Final results\n  var bulkResult = {\n  \t  ok: 1\n    , writeErrors: []\n    , writeConcernErrors: []\n    , nInserted: 0\n    , nUpserted: 0\n    , nMatched: 0\n    , nModified: 0\n    , nRemoved: 0\n    , upserted: []\n  };\n\n  // Specify a full class so we can generate documentation correctly\n\tvar FindOperators = function() {\n\t\t/**\n\t\t * Add a single update document to the bulk operation\n\t\t *\n\t\t * @param {Object} doc update operations\n\t\t * @return {UnorderedBulkOperation}\n\t\t * @api public\n\t\t */\n\t\tthis.update = function(updateDocument) {\n\t\t\t// Perform upsert\n\t\t\tvar upsert = typeof currentOp.upsert == 'boolean' ? currentOp.upsert : false;\n\t\t\t\n\t\t\t// Establish the update command\n\t\t\tvar document = {\n\t\t\t\t\tq: currentOp.selector\n\t\t\t\t, u: updateDocument\n\t\t\t\t, multi: true\n\t\t\t\t, upsert: upsert\n\t\t\t}\n\n\t\t\t// Clear out current Op\n\t\t\tcurrentOp = null;\n\t\t\t// Add the update document to the list\n\t\t\treturn addToOperationsList(self, common.UPDATE, document);\n\t\t}\t\n\n\t\t/**\n\t\t * Add a single update one document to the bulk operation\n\t\t *\n\t\t * @param {Object} doc update operations\n\t\t * @return {UnorderedBulkOperation}\n\t\t * @api public\n\t\t */\n\t\tthis.updateOne = function(updateDocument) {\n\t\t\t// Perform upsert\n\t\t\tvar upsert = typeof currentOp.upsert == 'boolean' ? currentOp.upsert : false;\n\t\t\t\n\t\t\t// Establish the update command\n\t\t\tvar document = {\n\t\t\t\t\tq: currentOp.selector\n\t\t\t\t, u: updateDocument\n\t\t\t\t, multi: false\n\t\t\t\t, upsert: upsert\n\t\t\t}\n\n\t\t\t// Clear out current Op\n\t\t\tcurrentOp = null;\n\t\t\t// Add the update document to the list\n\t\t\treturn addToOperationsList(self, common.UPDATE, document);\n\t\t}\n\n\t\t/**\n\t\t * Add a replace one operation to the bulk operation\n\t\t *\n\t\t * @param {Object} doc the new document to replace the existing one with\n\t\t * @return {UnorderedBulkOperation}\n\t\t * @api public\n\t\t */\n\t\tthis.replaceOne = function(updateDocument) {\n\t\t\tthis.updateOne(updateDocument);\n\t\t}\n\n\t\t/**\n\t\t * Upsert modifier for update bulk operation\n\t\t *\n\t\t * @return {UnorderedBulkOperation}\n\t\t * @api public\n\t\t */\n\t\tthis.upsert = function() {\n\t\t\tcurrentOp.upsert = true;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n\t\t * Add a remove one operation to the bulk operation\n\t\t *\n\t\t * @param {Object} doc selector for the removal of documents\n\t\t * @return {UnorderedBulkOperation}\n\t\t * @api public\n\t\t */\n\t\tthis.removeOne = function() {\t\t\n\t\t\t// Establish the update command\n\t\t\tvar document = {\n\t\t\t\t\tq: currentOp.selector\n\t\t\t\t, limit: 1\n\t\t\t}\n\n\t\t\t// Clear out current Op\n\t\t\tcurrentOp = null;\n\t\t\t// Add the remove document to the list\n\t\t\treturn addToOperationsList(self, common.REMOVE, document);\n\t\t}\n\n\t\t/**\n\t\t * Add a remove operation to the bulk operation\n\t\t *\n\t\t * @param {Object} doc selector for the single document to remove\n\t\t * @return {UnorderedBulkOperation}\n\t\t * @api public\n\t\t */\n\t\tthis.remove = function() {\n\t\t\t// Establish the update command\n\t\t\tvar document = {\n\t\t\t\t\tq: currentOp.selector\n\t\t\t\t, limit: 0\n\t\t\t}\n\n\t\t\t// Clear out current Op\n\t\t\tcurrentOp = null;\n\t\t\t// Add the remove document to the list\n\t\t\treturn addToOperationsList(self, common.REMOVE, document);\t\t\t\t\n\t\t}\n\t}\n\n\t// \n\t// Add to the operations list\n\t//\n\tvar addToOperationsList = function(_self, docType, document) {\n    // Get the bsonSize\n    var bsonSize = bson.calculateObjectSize(document, false);\n    // Throw error if the doc is bigger than the max BSON size\n    if(bsonSize >= maxBatchSizeBytes) throw utils.toError(\"document is larger than the maximum size \" + maxBatchSizeBytes);\n    // Holds the current batch\n    var currentBatch = null;\n    // Get the right type of batch\n    if(docType == common.INSERT) {\n    \tcurrentBatch = currentInsertBatch;\n    } else if(docType == common.UPDATE) {\n    \tcurrentBatch = currentUpdateBatch;\n    } else if(docType == common.REMOVE) {\n    \tcurrentBatch = currentRemoveBatch;\n    }\n\n    // Create a new batch object if we don't have a current one\n    if(currentBatch == null) currentBatch = new Batch(docType, currentIndex);\n    \n    // Check if we need to switch batch type\n    if(currentBatch.batchType != docType) {\n      // Save current batch\n      batches.push(currentBatch);\n      // Create a new batch\n      currentBatch = new Batch(docType, currentIndex);  \n\n      // Reset the current size trackers\n      currentBatchSize = 0;\n      currentBatchSizeBytes = 0;\n    }\n\n    // Check if we need to create a new batch\n    if(((currentBatchSize + 1) >= maxWriteBatchSize)\n      || ((currentBatchSizeBytes +  currentBatchSizeBytes) >= maxBatchSizeBytes)\n      || (currentBatch.batchType != docType)) {\n      // Save the batch to the execution stack\n      batches.push(currentBatch);\n      \n      // Create a new batch\n      currentBatch = new Batch(docType, currentIndex);\n      \n      // Reset the current size trackers\n      currentBatchSize = 0;\n      currentBatchSizeBytes = 0;\n    } else {\n\t    // Update current batch size\n\t    currentBatchSize = currentBatchSize + 1;\n\t    currentBatchSizeBytes = currentBatchSizeBytes + bsonSize;\n    }\n\n    // We have an array of documents\n    if(Array.isArray(document)) {\n    \tthrow utils.toError(\"operation passed in cannot be an Array\");\n    } else {\n      currentBatch.operations.push(document);\n      currentBatch.originalIndexes.push(currentIndex);\n      currentIndex = currentIndex + 1;\n    }\n\n    // Save back the current Batch to the right type\n    if(docType == common.INSERT) {\n    \tcurrentInsertBatch = currentBatch;\n    } else if(docType == common.UPDATE) {\n    \tcurrentUpdateBatch = currentBatch;\n    } else if(docType == common.REMOVE) {\n    \tcurrentRemoveBatch = currentBatch;\n    }\n\n    // Update current batch size\n    currentBatchSize = currentBatchSize + 1;\n    currentBatchSizeBytes = currentBatchSizeBytes + bsonSize;\n\n    // Return self\n\t\treturn _self;\n\t}\n\n\t/**\n\t * Add a single insert document to the bulk operation\n\t *\n\t * @param {Object} doc the document to insert\n\t * @return {UnorderedBulkOperation}\n\t * @api public\n\t */\n\tthis.insert = function(document) {\n    if(document._id == null) document._id = new ObjectID();\n\t\treturn addToOperationsList(self, common.INSERT, document);\n\t}\n\n\t/**\n\t * Initiate a find operation for an update/updateOne/remove/removeOne/replaceOne\n\t *\n\t * @param {Object} selector the selector used to locate documents for the operation\n\t * @return {UnorderedBulkOperation}\n\t * @api public\n\t */\n\tthis.find = function(selector) {\n\t\tif (!selector) {\n\t\t\tthrow utils.toError(\"Bulk find operation must specify a selector\");\n\t\t}\n\n\t\t// Save a current selector\n\t\tcurrentOp = {\n\t\t\tselector: selector\n\t\t}\n\n\t\treturn new FindOperators();\n\t}\t\n\n\t//\n\t// Execute the command\n\tvar executeBatch = function(batch, callback) {\n\t\t// Contains the command we are going to execute\n\t\tvar cmd = null;\n\n    // Generate the right update\n    if(batch.batchType == common.UPDATE) {\n      cmd = { update: namespace, updates: batch.operations, ordered: false }\n    } else if(batch.batchType == common.INSERT) {\n      cmd = { insert: namespace, documents: batch.operations, ordered: false }\n    } else if(batch.batchType == common.REMOVE) {\n      cmd = { delete: namespace, deletes: batch.operations, ordered: false }\n    }\n\n    // If we have a write concern\n    if(writeConcern != null) {\n      cmd.writeConcern = writeConcern;\n    }    \n\n\t\t// Execute the write command\n\t\tdb.command(cmd, function(err, result) {\n\t\t\tcallback(null, mergeBatchResults(false, batch, bulkResult, err, result));\n\t\t});\n\t}\n\n\t//\n\t// Execute all the commands\n\tvar executeBatches = function(callback) {\n\t\tvar numberOfCommandsToExecute = batches.length;\n\t\t// Execute over all the batches\n\t\tfor(var i = 0; i < batches.length; i++) {\n\t\t\texecuteBatch(batches[i], function(err, result) {\n\t\t\t\tnumberOfCommandsToExecute = numberOfCommandsToExecute - 1;\n\n\t\t\t\t// Execute\n\t\t\t\tif(numberOfCommandsToExecute == 0) {\n\t\t\t\t\t// If we have an error stop\n\t\t\t\t\tif(bulkResult.ok == 0 && callback) {\n\t\t\t\t\t\treturn callback(bulkResult.error, null);\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback(null, new BatchWriteResult(bulkResult));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Execute the unordered bulk operation\n\t *\n\t * Options\n\t *  - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n\t *  - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n\t *  - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n\t *  - **j**, (Boolean, default:false) write waits for journal sync before returning\n\t *\n\t * @param {Object} [options] additional options during update.\n\t * @param {Function} callback this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from from the unordered bulk operation.\n\t * @return {null}\n\t * @api public\n\t */\n\tthis.execute = function(_writeConcern, callback) {\n\t\tif(executed) throw utils.toError(\"batch cannot be re-executed\");\n\t\tif(typeof _writeConcern == 'function') {\n\t\t\tcallback = _writeConcern;\n\t\t} else {\n\t\t\twriteConcern = _writeConcern;\n\t\t}\n\n    // If we have current batch\n    if(currentInsertBatch) batches.push(currentInsertBatch);\n    if(currentUpdateBatch) batches.push(currentUpdateBatch);\n    if(currentRemoveBatch) batches.push(currentRemoveBatch);\n\n\t\t// If we have no operations in the bulk raise an error\n\t\tif(batches.length == 0) {\n\t\t\tthrow utils.toError(\"Invalid Operation, No operations in bulk\");\n\t\t}\n\n\t\t// Check if we support bulk commands\n\t\tif(hasWriteCommands(db.serverConfig.checkoutWriter()))\n\t\t\treturn executeBatches(function(err, result) {\n\t\t\t\tcallback(err, result);\n\t\t\t});\n\n\t\t// Set nModified to null as we don't support this field\n\t\tbulkResult.nModified = null;\n\n\t\t// Run in backward compatibility mode\n\t\tbackwardsCompatibilityExecuteCommands(function(err, result) {\n\t\t\tcallback(err, result);\n\t\t});\n\t}\t\n\n\t// \n\t// Execute the inserts\n\tvar executeInserts = function(_collection, _batch, _result, _callback) {\n\t\tvar totalNumberOfInserts = _batch.operations.length;\n\n\t\t// Options for the update operation\n\t\tvar batchOptions = writeConcern || {};\n\n\t\t// Execute the op\n\t\tvar executeLegacyInsert = function(_i, _op, _options, __callback) {\n\t\t\t// Execute the update\n\t\t\t_collection.insert(_op.operation, _options, function(err, r) {\n\t\t\t\t// If we have don't have w:0 merge the result\n\t\t\t\tif(_options.w == null || _options.w != 0) {\n\t\t\t\t\t// Merge the results in \n\t\t\t\t\tvar result = common.mergeLegacyResults(false, _op.operation, _batch, bulkResult, err || r, _op.index);\n\t\t\t\t\tif(result == false) {\n\t\t\t\t\t\treturn _callback(null, new BatchWriteResult(bulkResult));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t__callback(null, _result);\n\t\t\t});\n\t\t}\n\n\t\t// Execute all the insert operations\n\t\tfor(var i = 0; i < _batch.operations.length; i++) {\n\t\t\tvar legacyOp = new LegacyOp(_batch.batchType, _batch.operations[i], _batch.originalIndexes[i]);\n\t\t\texecuteLegacyInsert(i, legacyOp, batchOptions, function(err, result) {\n\t\t\t\ttotalNumberOfInserts = totalNumberOfInserts - 1;\n\t\t\t\t\n\t\t\t\t// No more inserts\n\t\t\t\tif(totalNumberOfInserts == 0) {\n\t\t\t\t\t_callback(null, _result);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t//\n\t// Execute updates\n\tvar executeUpdates = function(_collection, _batch, _result, _callback) {\n\t\tvar totalNumberOfUpdates = _batch.operations.length;\n\t\t// Options for the update operation\n\t\tvar batchOptions = writeConcern || {};\n\n\t\t// Execute the op\n\t\tvar executeLegacyUpdate = function(_i, _op, _options, __callback) {\n\t\t\tvar options = common.cloneOptions(batchOptions);\n\n\t\t\t// Add any additional options\n\t\t\tif(_op.operation.multi != null) options.multi = _op.operation.multi ? true : false;\n\t\t\tif(_op.operation.upsert != null) options.upsert = _op.operation.upsert;\n\n\t\t\t// Execute the update\n\t\t\t_collection.update(_op.operation.q, _op.operation.u, options, function(err, r, full) {\n\t\t\t\t// If we have don't have w:0 merge the result\n\t\t\t\tif(options.w == null || options.w != 0) {\n\t\t\t\t\t// Merge the results in \n\t\t\t\t\tvar result = common.mergeLegacyResults(false, _op.operation, _batch, bulkResult, err || full, _op.index);\n\t\t\t\t\tif(result == false) {\n\t\t\t\t\t\treturn _callback(null, new BatchWriteResult(bulkResult));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn __callback(null, _result);\n\t\t\t});\n\t\t}\n\n\t\t// Execute all the insert operations\n\t\tfor(var i = 0; i < _batch.operations.length; i++) {\n\t\t\tvar legacyOp = new LegacyOp(_batch.batchType, _batch.operations[i], _batch.originalIndexes[i]);\n\t\t\texecuteLegacyUpdate(i, legacyOp, options, function(err, result) {\n\t\t\t\ttotalNumberOfUpdates = totalNumberOfUpdates - 1;\n\t\t\t\t\n\t\t\t\t// No more inserts\n\t\t\t\tif(totalNumberOfUpdates == 0) {\n\t\t\t\t\t_callback(null, _result);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t//\n\t// Execute updates\n\tvar executeRemoves = function(_collection, _batch, _result, _callback) {\n\t\tvar totalNumberOfRemoves = _batch.operations.length;\n\t\t// Options for the update operation\n\t\tvar batchOptions = writeConcern || {};\n\n\t\t// Execute the op\n\t\tvar executeLegacyRemove = function(_i, _op, _options, __callback) {\n\t\t\tvar options = common.cloneOptions(batchOptions);\n\n\t\t\t// Add any additional options\n\t\t\tif(_op.operation.limit != null) options.single = _op.operation.limit == 1 ? true : false;\n\n\t\t\t// Execute the update\n\t\t\t_collection.remove(_op.operation.q, options, function(err, r) {\n\t\t\t\t// If we have don't have w:0 merge the result\n\t\t\t\tif(options.w == null || options.w != 0) {\n\t\t\t\t\t// Merge the results in \n\t\t\t\t\tvar result = common.mergeLegacyResults(false, _op.operation, _batch, bulkResult, err || r, _op.index);\n\t\t\t\t\tif(result == false) {\n\t\t\t\t\t\treturn _callback(null, new BatchWriteResult(bulkResult));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn __callback(null, _result);\n\t\t\t});\n\t\t}\n\n\t\t// Execute all the insert operations\n\t\tfor(var i = 0; i < _batch.operations.length; i++) {\n\t\t\tvar legacyOp = new LegacyOp(_batch.batchType, _batch.operations[i], _batch.originalIndexes[i]);\n\t\t\texecuteLegacyRemove(i, legacyOp, options, function(err, result) {\n\t\t\t\ttotalNumberOfRemoves = totalNumberOfRemoves - 1;\n\t\t\t\t\n\t\t\t\t// No more inserts\n\t\t\t\tif(totalNumberOfRemoves == 0) {\n\t\t\t\t\t_callback(null, _result);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t//\n\t// Execute all operation in backwards compatible fashion\n\tvar backwardsCompatibilityExecuteCommands = function(callback) {\n\t\tif(batches.length == 0) {\n\t\t\treturn callback(null, new BatchWriteResult(bulkResult));\n\t\t}\n\n\t\t// Ordered execution of the command\n\t\tvar batch = batches.shift();\n\n\t\t// Process the legacy operations\n\t\tvar processLegacyOperations = function(err, results) {\n\t\t\t// Merge the results together\n\t\t\tvar mergeResult = mergeBatchResults(false, batch, bulkResult, err, results);\n\t\t\tif(mergeResult != null) {\n\t\t\t\treturn callback(null, mergeResult)\n\t\t\t}\n\n\t\t\t// If we have an error stop\n\t\t\tif(bulkResult.ok == 0 && callback) {\n\t\t\t\tvar internalCallback = callback;\n\t\t\t\tcallback = null;\n\t\t\t\treturn internalCallback(bulkResult.error, null);\n\t\t\t} else if(bulkResult.ok == 0 && callback == null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Execute the next step\n\t\t\tbackwardsCompatibilityExecuteCommands(callback);\t\t\t\n\t\t}\n\n\t\t// Execute an insert batch\n\t\tif(batch.batchType == common.INSERT) {\n\t\t\treturn executeInserts(collection, batch, {n: 0}, processLegacyOperations);\n\t\t}\n\n\t\t// Execute an update batch\n\t\tif(batch.batchType == common.UPDATE) {\n\t\t\treturn executeUpdates(collection, batch, {n: 0}, processLegacyOperations);\n\t\t}\n\n\t\t// Execute an update batch\n\t\tif(batch.batchType == common.REMOVE) {\n\t\t\treturn executeRemoves(collection, batch, {n: 0}, processLegacyOperations);\n\t\t}\n\t}\t\n}\n\n/**\n * Returns an unordered batch object\n *\n */\nvar initializeUnorderedBulkOp = function(options) {\n\treturn new UnorderedBulkOperation(this, options);\n}\n\nexports.initializeUnorderedBulkOp = initializeUnorderedBulkOp;"};
jalangiLabel1837:
    while (true) {
        try {
            J$.Se(10281, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/collection/batch/unordered_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/collection/batch/unordered.js');
            J$.N(10289, '__secret__S$', __secret__S$, 0);
            J$.N(10297, '__secret__traits__', __secret__traits__, 0);
            J$.N(10305, 'shared', shared, 0);
            J$.N(10313, 'common', common, 0);
            J$.N(10321, 'utils', utils, 0);
            J$.N(10329, 'hasWriteCommands', hasWriteCommands, 0);
            J$.N(10337, 'WriteError', WriteError, 0);
            J$.N(10345, 'BatchWriteResult', BatchWriteResult, 0);
            J$.N(10353, 'LegacyOp', LegacyOp, 0);
            J$.N(10361, 'ObjectID', ObjectID, 0);
            J$.N(10369, 'Batch', Batch, 0);
            J$.N(10377, 'mergeBatchResults', mergeBatchResults, 0);
            J$.N(10385, 'UnorderedBulkOperation', UnorderedBulkOperation, 0);
            J$.N(10393, 'initializeUnorderedBulkOp', initializeUnorderedBulkOp, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var shared = J$.X1(289, J$.W(281, 'shared', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, '../shared', 21, false)), shared, 3)), common = J$.X1(305, J$.W(297, 'common', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, './common', 21, false)), common, 3)), utils = J$.X1(321, J$.W(313, 'utils', J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, '../../utils', 21, false)), utils, 3)), hasWriteCommands = J$.X1(337, J$.W(329, 'hasWriteCommands', J$.G(161, J$.R(153, 'utils', utils, 1), 'hasWriteCommands', 0), hasWriteCommands, 3)), WriteError = J$.X1(353, J$.W(345, 'WriteError', J$.G(177, J$.R(169, 'common', common, 1), 'WriteError', 0), WriteError, 3)), BatchWriteResult = J$.X1(369, J$.W(361, 'BatchWriteResult', J$.G(193, J$.R(185, 'common', common, 1), 'BatchWriteResult', 0), BatchWriteResult, 3)), LegacyOp = J$.X1(385, J$.W(377, 'LegacyOp', J$.G(209, J$.R(201, 'common', common, 1), 'LegacyOp', 0), LegacyOp, 3)), ObjectID = J$.X1(401, J$.W(393, 'ObjectID', J$.G(241, J$.F(233, J$.R(217, 'require', require, 2), 0)(J$.T(225, 'bson', 21, false)), 'ObjectID', 0), ObjectID, 3)), Batch = J$.X1(417, J$.W(409, 'Batch', J$.G(257, J$.R(249, 'common', common, 1), 'Batch', 0), Batch, 3)), mergeBatchResults = J$.X1(433, J$.W(425, 'mergeBatchResults', J$.G(273, J$.R(265, 'common', common, 1), 'mergeBatchResults', 0), mergeBatchResults, 3));
            var UnorderedBulkOperation = J$.X1(10145, J$.W(10137, 'UnorderedBulkOperation', J$.T(10129, function (collection, options) {
                jalangiLabel1835:
                    while (true) {
                        try {
                            J$.Fe(9897, arguments.callee, this, arguments);
                            arguments = J$.N(9905, 'arguments', arguments, 4);
                            collection = J$.N(9913, 'collection', collection, 4);
                            options = J$.N(9921, 'options', options, 4);
                            J$.N(9929, 'self', self, 0);
                            J$.N(9937, 'namespace', namespace, 0);
                            J$.N(9945, 'executed', executed, 0);
                            J$.N(9953, 'currentOp', currentOp, 0);
                            J$.N(9961, 'currentIndex', currentIndex, 0);
                            J$.N(9969, 'currentBatchSize', currentBatchSize, 0);
                            J$.N(9977, 'currentBatchSizeBytes', currentBatchSizeBytes, 0);
                            J$.N(9985, 'batches', batches, 0);
                            J$.N(9993, 'currentInsertBatch', currentInsertBatch, 0);
                            J$.N(10001, 'currentUpdateBatch', currentUpdateBatch, 0);
                            J$.N(10009, 'currentRemoveBatch', currentRemoveBatch, 0);
                            J$.N(10017, 'db', db, 0);
                            J$.N(10025, 'bson', bson, 0);
                            J$.N(10033, 'maxBatchSizeBytes', maxBatchSizeBytes, 0);
                            J$.N(10041, 'maxWriteBatchSize', maxWriteBatchSize, 0);
                            J$.N(10049, 'writeConcern', writeConcern, 0);
                            J$.N(10057, 'bulkResult', bulkResult, 0);
                            J$.N(10065, 'FindOperators', FindOperators, 0);
                            J$.N(10073, 'addToOperationsList', addToOperationsList, 0);
                            J$.N(10081, 'executeBatch', executeBatch, 0);
                            J$.N(10089, 'executeBatches', executeBatches, 0);
                            J$.N(10097, 'executeInserts', executeInserts, 0);
                            J$.N(10105, 'executeUpdates', executeUpdates, 0);
                            J$.N(10113, 'executeRemoves', executeRemoves, 0);
                            J$.N(10121, 'backwardsCompatibilityExecuteCommands', backwardsCompatibilityExecuteCommands, 0);
                            J$.X1(481, options = J$.W(473, 'options', J$.X1(10401, J$.C(8, J$.B(10, '==', J$.R(441, 'options', options, 0), J$.T(449, null, 25, false), 0))) ? J$.T(457, {}, 11, false) : J$.R(465, 'options', options, 0), options, 0));
                            var self = J$.X1(505, J$.W(497, 'self', J$.R(489, 'this', this, 0), self, 1));
                            var namespace = J$.X1(537, J$.W(529, 'namespace', J$.G(521, J$.R(513, 'collection', collection, 0), 'collectionName', 0), namespace, 1));
                            var executed = J$.X1(561, J$.W(553, 'executed', J$.T(545, false, 23, false), executed, 1));
                            var currentOp = J$.X1(585, J$.W(577, 'currentOp', J$.T(569, null, 25, false), currentOp, 1));
                            var currentIndex = J$.X1(609, J$.W(601, 'currentIndex', J$.T(593, 0, 22, false), currentIndex, 1));
                            var currentBatchSize = J$.X1(633, J$.W(625, 'currentBatchSize', J$.T(617, 0, 22, false), currentBatchSize, 1));
                            var currentBatchSizeBytes = J$.X1(657, J$.W(649, 'currentBatchSizeBytes', J$.T(641, 0, 22, false), currentBatchSizeBytes, 1));
                            var batches = J$.X1(681, J$.W(673, 'batches', J$.T(665, [], 10, false), batches, 1));
                            var currentInsertBatch = J$.X1(705, J$.W(697, 'currentInsertBatch', J$.T(689, null, 25, false), currentInsertBatch, 1));
                            var currentUpdateBatch = J$.X1(729, J$.W(721, 'currentUpdateBatch', J$.T(713, null, 25, false), currentUpdateBatch, 1));
                            var currentRemoveBatch = J$.X1(753, J$.W(745, 'currentRemoveBatch', J$.T(737, null, 25, false), currentRemoveBatch, 1));
                            var db = J$.X1(785, J$.W(777, 'db', J$.G(769, J$.R(761, 'collection', collection, 0), 'db', 0), db, 1));
                            var bson = J$.X1(817, J$.W(809, 'bson', J$.G(801, J$.R(793, 'db', db, 0), 'bson', 0), bson, 1));
                            var maxBatchSizeBytes = J$.X1(865, J$.W(857, 'maxBatchSizeBytes', J$.G(849, J$.M(841, J$.G(833, J$.R(825, 'db', db, 0), 'serverConfig', 0), 'checkoutWriter', 0)(), 'maxBsonSize', 0), maxBatchSizeBytes, 1));
                            var maxWriteBatchSize = J$.X1(921, J$.W(913, 'maxWriteBatchSize', J$.C(16, J$.G(897, J$.M(889, J$.G(881, J$.R(873, 'db', db, 0), 'serverConfig', 0), 'checkoutWriter', 0)(), 'maxWriteBatchSize', 0)) ? J$._() : J$.T(905, 1000, 22, false), maxWriteBatchSize, 1));
                            var writeConcern = J$.X1(969, J$.W(961, 'writeConcern', J$.M(953, J$.R(929, 'shared', shared, 1), '_getWriteConcern', 0)(J$.R(937, 'collection', collection, 0), J$.R(945, 'options', options, 0)), writeConcern, 1));
                            var bulkResult = J$.X1(1065, J$.W(1057, 'bulkResult', J$.T(1049, {
                                ok: J$.T(977, 1, 22, false),
                                writeErrors: J$.T(985, [], 10, false),
                                writeConcernErrors: J$.T(993, [], 10, false),
                                nInserted: J$.T(1001, 0, 22, false),
                                nUpserted: J$.T(1009, 0, 22, false),
                                nMatched: J$.T(1017, 0, 22, false),
                                nModified: J$.T(1025, 0, 22, false),
                                nRemoved: J$.T(1033, 0, 22, false),
                                upserted: J$.T(1041, [], 10, false)
                            }, 11, false), bulkResult, 1));
                            var FindOperators = J$.X1(2257, J$.W(2249, 'FindOperators', J$.T(2241, function () {
                                jalangiLabel1810:
                                    while (true) {
                                        try {
                                            J$.Fe(2225, arguments.callee, this, arguments);
                                            arguments = J$.N(2233, 'arguments', arguments, 4);
                                            J$.X1(1353, J$.P(1345, J$.R(1073, 'this', this, 0), 'update', J$.T(1337, function (updateDocument) {
                                                jalangiLabel1804:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1297, arguments.callee, this, arguments);
                                                            arguments = J$.N(1305, 'arguments', arguments, 4);
                                                            updateDocument = J$.N(1313, 'updateDocument', updateDocument, 4);
                                                            J$.N(1321, 'upsert', upsert, 0);
                                                            J$.N(1329, 'document', document, 0);
                                                            var upsert = J$.X1(1137, J$.W(1129, 'upsert', J$.X1(10409, J$.C(24, J$.B(26, '==', J$.U(18, 'typeof', J$.G(1089, J$.R(1081, 'currentOp', currentOp, 0), 'upsert', 0)), J$.T(1097, 'boolean', 21, false), 0))) ? J$.G(1113, J$.R(1105, 'currentOp', currentOp, 0), 'upsert', 0) : J$.T(1121, false, 23, false), upsert, 1));
                                                            var document = J$.X1(1201, J$.W(1193, 'document', J$.T(1185, {
                                                                q: J$.G(1153, J$.R(1145, 'currentOp', currentOp, 0), 'selector', 0),
                                                                u: J$.R(1161, 'updateDocument', updateDocument, 0),
                                                                multi: J$.T(1169, true, 23, false),
                                                                upsert: J$.R(1177, 'upsert', upsert, 0)
                                                            }, 11, false), document, 1));
                                                            J$.X1(1225, currentOp = J$.W(1217, 'currentOp', J$.T(1209, null, 25, false), currentOp, 0));
                                                            return J$.X1(1289, J$.Rt(1281, J$.F(1273, J$.R(1233, 'addToOperationsList', addToOperationsList, 0), 0)(J$.R(1241, 'self', self, 0), J$.G(1257, J$.R(1249, 'common', common, 1), 'UPDATE', 0), J$.R(1265, 'document', document, 0))));
                                                        } catch (J$e) {
                                                            J$.Ex(10417, J$e);
                                                        } finally {
                                                            if (J$.Fr(10425))
                                                                continue jalangiLabel1804;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 1297), 0));
                                            J$.X1(1641, J$.P(1633, J$.R(1361, 'this', this, 0), 'updateOne', J$.T(1625, function (updateDocument) {
                                                jalangiLabel1805:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1585, arguments.callee, this, arguments);
                                                            arguments = J$.N(1593, 'arguments', arguments, 4);
                                                            updateDocument = J$.N(1601, 'updateDocument', updateDocument, 4);
                                                            J$.N(1609, 'upsert', upsert, 0);
                                                            J$.N(1617, 'document', document, 0);
                                                            var upsert = J$.X1(1425, J$.W(1417, 'upsert', J$.X1(10433, J$.C(32, J$.B(42, '==', J$.U(34, 'typeof', J$.G(1377, J$.R(1369, 'currentOp', currentOp, 0), 'upsert', 0)), J$.T(1385, 'boolean', 21, false), 0))) ? J$.G(1401, J$.R(1393, 'currentOp', currentOp, 0), 'upsert', 0) : J$.T(1409, false, 23, false), upsert, 1));
                                                            var document = J$.X1(1489, J$.W(1481, 'document', J$.T(1473, {
                                                                q: J$.G(1441, J$.R(1433, 'currentOp', currentOp, 0), 'selector', 0),
                                                                u: J$.R(1449, 'updateDocument', updateDocument, 0),
                                                                multi: J$.T(1457, false, 23, false),
                                                                upsert: J$.R(1465, 'upsert', upsert, 0)
                                                            }, 11, false), document, 1));
                                                            J$.X1(1513, currentOp = J$.W(1505, 'currentOp', J$.T(1497, null, 25, false), currentOp, 0));
                                                            return J$.X1(1577, J$.Rt(1569, J$.F(1561, J$.R(1521, 'addToOperationsList', addToOperationsList, 0), 0)(J$.R(1529, 'self', self, 0), J$.G(1545, J$.R(1537, 'common', common, 1), 'UPDATE', 0), J$.R(1553, 'document', document, 0))));
                                                        } catch (J$e) {
                                                            J$.Ex(10441, J$e);
                                                        } finally {
                                                            if (J$.Fr(10449))
                                                                continue jalangiLabel1805;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 1585), 0));
                                            J$.X1(1729, J$.P(1721, J$.R(1649, 'this', this, 0), 'replaceOne', J$.T(1713, function (updateDocument) {
                                                jalangiLabel1806:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1689, arguments.callee, this, arguments);
                                                            arguments = J$.N(1697, 'arguments', arguments, 4);
                                                            updateDocument = J$.N(1705, 'updateDocument', updateDocument, 4);
                                                            J$.X1(1681, J$.M(1673, J$.R(1657, 'this', this, 0), 'updateOne', 0)(J$.R(1665, 'updateDocument', updateDocument, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(10457, J$e);
                                                        } finally {
                                                            if (J$.Fr(10465))
                                                                continue jalangiLabel1806;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 1689), 0));
                                            J$.X1(1833, J$.P(1825, J$.R(1737, 'this', this, 0), 'upsert', J$.T(1817, function () {
                                                jalangiLabel1807:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1801, arguments.callee, this, arguments);
                                                            arguments = J$.N(1809, 'arguments', arguments, 4);
                                                            J$.X1(1769, J$.P(1761, J$.R(1745, 'currentOp', currentOp, 0), 'upsert', J$.T(1753, true, 23, false), 0));
                                                            return J$.X1(1793, J$.Rt(1785, J$.R(1777, 'this', this, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(10473, J$e);
                                                        } finally {
                                                            if (J$.Fr(10481))
                                                                continue jalangiLabel1807;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 1801), 0));
                                            J$.X1(2025, J$.P(2017, J$.R(1841, 'this', this, 0), 'removeOne', J$.T(2009, function () {
                                                jalangiLabel1808:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1985, arguments.callee, this, arguments);
                                                            arguments = J$.N(1993, 'arguments', arguments, 4);
                                                            J$.N(2001, 'document', document, 0);
                                                            var document = J$.X1(1889, J$.W(1881, 'document', J$.T(1873, {
                                                                q: J$.G(1857, J$.R(1849, 'currentOp', currentOp, 0), 'selector', 0),
                                                                limit: J$.T(1865, 1, 22, false)
                                                            }, 11, false), document, 1));
                                                            J$.X1(1913, currentOp = J$.W(1905, 'currentOp', J$.T(1897, null, 25, false), currentOp, 0));
                                                            return J$.X1(1977, J$.Rt(1969, J$.F(1961, J$.R(1921, 'addToOperationsList', addToOperationsList, 0), 0)(J$.R(1929, 'self', self, 0), J$.G(1945, J$.R(1937, 'common', common, 1), 'REMOVE', 0), J$.R(1953, 'document', document, 0))));
                                                        } catch (J$e) {
                                                            J$.Ex(10489, J$e);
                                                        } finally {
                                                            if (J$.Fr(10497))
                                                                continue jalangiLabel1808;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 1985), 0));
                                            J$.X1(2217, J$.P(2209, J$.R(2033, 'this', this, 0), 'remove', J$.T(2201, function () {
                                                jalangiLabel1809:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(2177, arguments.callee, this, arguments);
                                                            arguments = J$.N(2185, 'arguments', arguments, 4);
                                                            J$.N(2193, 'document', document, 0);
                                                            var document = J$.X1(2081, J$.W(2073, 'document', J$.T(2065, {
                                                                q: J$.G(2049, J$.R(2041, 'currentOp', currentOp, 0), 'selector', 0),
                                                                limit: J$.T(2057, 0, 22, false)
                                                            }, 11, false), document, 1));
                                                            J$.X1(2105, currentOp = J$.W(2097, 'currentOp', J$.T(2089, null, 25, false), currentOp, 0));
                                                            return J$.X1(2169, J$.Rt(2161, J$.F(2153, J$.R(2113, 'addToOperationsList', addToOperationsList, 0), 0)(J$.R(2121, 'self', self, 0), J$.G(2137, J$.R(2129, 'common', common, 1), 'REMOVE', 0), J$.R(2145, 'document', document, 0))));
                                                        } catch (J$e) {
                                                            J$.Ex(10505, J$e);
                                                        } finally {
                                                            if (J$.Fr(10513))
                                                                continue jalangiLabel1809;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 2177), 0));
                                        } catch (J$e) {
                                            J$.Ex(10521, J$e);
                                        } finally {
                                            if (J$.Fr(10529))
                                                continue jalangiLabel1810;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 2225), FindOperators, 1));
                            var addToOperationsList = J$.X1(3505, J$.W(3497, 'addToOperationsList', J$.T(3489, function (_self, docType, document) {
                                jalangiLabel1811:
                                    while (true) {
                                        try {
                                            J$.Fe(3433, arguments.callee, this, arguments);
                                            arguments = J$.N(3441, 'arguments', arguments, 4);
                                            _self = J$.N(3449, '_self', _self, 4);
                                            docType = J$.N(3457, 'docType', docType, 4);
                                            document = J$.N(3465, 'document', document, 4);
                                            J$.N(3473, 'bsonSize', bsonSize, 0);
                                            J$.N(3481, 'currentBatch', currentBatch, 0);
                                            var bsonSize = J$.X1(2305, J$.W(2297, 'bsonSize', J$.M(2289, J$.R(2265, 'bson', bson, 0), 'calculateObjectSize', 0)(J$.R(2273, 'document', document, 0), J$.T(2281, false, 23, false)), bsonSize, 1));
                                            if (J$.X1(10537, J$.C(40, J$.B(50, '>=', J$.R(2313, 'bsonSize', bsonSize, 0), J$.R(2321, 'maxBatchSizeBytes', maxBatchSizeBytes, 0), 0))))
                                                throw J$.X1(2369, J$.Th(2361, J$.M(2353, J$.R(2329, 'utils', utils, 1), 'toError', 0)(J$.B(58, '+', J$.T(2337, 'document is larger than the maximum size ', 21, false), J$.R(2345, 'maxBatchSizeBytes', maxBatchSizeBytes, 0), 0))));
                                            var currentBatch = J$.X1(2393, J$.W(2385, 'currentBatch', J$.T(2377, null, 25, false), currentBatch, 1));
                                            if (J$.X1(10561, J$.C(64, J$.B(66, '==', J$.R(2401, 'docType', docType, 0), J$.G(2417, J$.R(2409, 'common', common, 1), 'INSERT', 0), 0)))) {
                                                J$.X1(2441, currentBatch = J$.W(2433, 'currentBatch', J$.R(2425, 'currentInsertBatch', currentInsertBatch, 0), currentBatch, 0));
                                            } else if (J$.X1(10553, J$.C(56, J$.B(74, '==', J$.R(2449, 'docType', docType, 0), J$.G(2465, J$.R(2457, 'common', common, 1), 'UPDATE', 0), 0)))) {
                                                J$.X1(2489, currentBatch = J$.W(2481, 'currentBatch', J$.R(2473, 'currentUpdateBatch', currentUpdateBatch, 0), currentBatch, 0));
                                            } else if (J$.X1(10545, J$.C(48, J$.B(82, '==', J$.R(2497, 'docType', docType, 0), J$.G(2513, J$.R(2505, 'common', common, 1), 'REMOVE', 0), 0)))) {
                                                J$.X1(2537, currentBatch = J$.W(2529, 'currentBatch', J$.R(2521, 'currentRemoveBatch', currentRemoveBatch, 0), currentBatch, 0));
                                            }
                                            if (J$.X1(10569, J$.C(72, J$.B(90, '==', J$.R(2545, 'currentBatch', currentBatch, 0), J$.T(2553, null, 25, false), 0))))
                                                J$.X1(2601, currentBatch = J$.W(2593, 'currentBatch', J$.F(2585, J$.R(2561, 'Batch', Batch, 1), 1)(J$.R(2569, 'docType', docType, 0), J$.R(2577, 'currentIndex', currentIndex, 0)), currentBatch, 0));
                                            if (J$.X1(10577, J$.C(80, J$.B(98, '!=', J$.G(2617, J$.R(2609, 'currentBatch', currentBatch, 0), 'batchType', 0), J$.R(2625, 'docType', docType, 0), 0)))) {
                                                J$.X1(2657, J$.M(2649, J$.R(2633, 'batches', batches, 0), 'push', 0)(J$.R(2641, 'currentBatch', currentBatch, 0)));
                                                J$.X1(2705, currentBatch = J$.W(2697, 'currentBatch', J$.F(2689, J$.R(2665, 'Batch', Batch, 1), 1)(J$.R(2673, 'docType', docType, 0), J$.R(2681, 'currentIndex', currentIndex, 0)), currentBatch, 0));
                                                J$.X1(2729, currentBatchSize = J$.W(2721, 'currentBatchSize', J$.T(2713, 0, 22, false), currentBatchSize, 0));
                                                J$.X1(2753, currentBatchSizeBytes = J$.W(2745, 'currentBatchSizeBytes', J$.T(2737, 0, 22, false), currentBatchSizeBytes, 0));
                                            }
                                            if (J$.X1(10585, J$.C(104, J$.C(96, J$.C(88, J$.B(114, '>=', J$.B(106, '+', J$.R(2761, 'currentBatchSize', currentBatchSize, 0), J$.T(2769, 1, 22, false), 0), J$.R(2777, 'maxWriteBatchSize', maxWriteBatchSize, 0), 0)) ? J$._() : J$.B(130, '>=', J$.B(122, '+', J$.R(2785, 'currentBatchSizeBytes', currentBatchSizeBytes, 0), J$.R(2793, 'currentBatchSizeBytes', currentBatchSizeBytes, 0), 0), J$.R(2801, 'maxBatchSizeBytes', maxBatchSizeBytes, 0), 0)) ? J$._() : J$.B(138, '!=', J$.G(2817, J$.R(2809, 'currentBatch', currentBatch, 0), 'batchType', 0), J$.R(2825, 'docType', docType, 0), 0)))) {
                                                J$.X1(2857, J$.M(2849, J$.R(2833, 'batches', batches, 0), 'push', 0)(J$.R(2841, 'currentBatch', currentBatch, 0)));
                                                J$.X1(2905, currentBatch = J$.W(2897, 'currentBatch', J$.F(2889, J$.R(2865, 'Batch', Batch, 1), 1)(J$.R(2873, 'docType', docType, 0), J$.R(2881, 'currentIndex', currentIndex, 0)), currentBatch, 0));
                                                J$.X1(2929, currentBatchSize = J$.W(2921, 'currentBatchSize', J$.T(2913, 0, 22, false), currentBatchSize, 0));
                                                J$.X1(2953, currentBatchSizeBytes = J$.W(2945, 'currentBatchSizeBytes', J$.T(2937, 0, 22, false), currentBatchSizeBytes, 0));
                                            } else {
                                                J$.X1(2985, currentBatchSize = J$.W(2977, 'currentBatchSize', J$.B(146, '+', J$.R(2961, 'currentBatchSize', currentBatchSize, 0), J$.T(2969, 1, 22, false), 0), currentBatchSize, 0));
                                                J$.X1(3017, currentBatchSizeBytes = J$.W(3009, 'currentBatchSizeBytes', J$.B(154, '+', J$.R(2993, 'currentBatchSizeBytes', currentBatchSizeBytes, 0), J$.R(3001, 'bsonSize', bsonSize, 0), 0), currentBatchSizeBytes, 0));
                                            }
                                            if (J$.X1(10593, J$.C(112, J$.M(3041, J$.R(3025, 'Array', Array, 2), 'isArray', 0)(J$.R(3033, 'document', document, 0))))) {
                                                throw J$.X1(3081, J$.Th(3073, J$.M(3065, J$.R(3049, 'utils', utils, 1), 'toError', 0)(J$.T(3057, 'operation passed in cannot be an Array', 21, false))));
                                            } else {
                                                J$.X1(3121, J$.M(3113, J$.G(3097, J$.R(3089, 'currentBatch', currentBatch, 0), 'operations', 0), 'push', 0)(J$.R(3105, 'document', document, 0)));
                                                J$.X1(3161, J$.M(3153, J$.G(3137, J$.R(3129, 'currentBatch', currentBatch, 0), 'originalIndexes', 0), 'push', 0)(J$.R(3145, 'currentIndex', currentIndex, 0)));
                                                J$.X1(3193, currentIndex = J$.W(3185, 'currentIndex', J$.B(162, '+', J$.R(3169, 'currentIndex', currentIndex, 0), J$.T(3177, 1, 22, false), 0), currentIndex, 0));
                                            }
                                            if (J$.X1(10617, J$.C(136, J$.B(170, '==', J$.R(3201, 'docType', docType, 0), J$.G(3217, J$.R(3209, 'common', common, 1), 'INSERT', 0), 0)))) {
                                                J$.X1(3241, currentInsertBatch = J$.W(3233, 'currentInsertBatch', J$.R(3225, 'currentBatch', currentBatch, 0), currentInsertBatch, 0));
                                            } else if (J$.X1(10609, J$.C(128, J$.B(178, '==', J$.R(3249, 'docType', docType, 0), J$.G(3265, J$.R(3257, 'common', common, 1), 'UPDATE', 0), 0)))) {
                                                J$.X1(3289, currentUpdateBatch = J$.W(3281, 'currentUpdateBatch', J$.R(3273, 'currentBatch', currentBatch, 0), currentUpdateBatch, 0));
                                            } else if (J$.X1(10601, J$.C(120, J$.B(186, '==', J$.R(3297, 'docType', docType, 0), J$.G(3313, J$.R(3305, 'common', common, 1), 'REMOVE', 0), 0)))) {
                                                J$.X1(3337, currentRemoveBatch = J$.W(3329, 'currentRemoveBatch', J$.R(3321, 'currentBatch', currentBatch, 0), currentRemoveBatch, 0));
                                            }
                                            J$.X1(3369, currentBatchSize = J$.W(3361, 'currentBatchSize', J$.B(194, '+', J$.R(3345, 'currentBatchSize', currentBatchSize, 0), J$.T(3353, 1, 22, false), 0), currentBatchSize, 0));
                                            J$.X1(3401, currentBatchSizeBytes = J$.W(3393, 'currentBatchSizeBytes', J$.B(202, '+', J$.R(3377, 'currentBatchSizeBytes', currentBatchSizeBytes, 0), J$.R(3385, 'bsonSize', bsonSize, 0), 0), currentBatchSizeBytes, 0));
                                            return J$.X1(3425, J$.Rt(3417, J$.R(3409, '_self', _self, 0)));
                                        } catch (J$e) {
                                            J$.Ex(10625, J$e);
                                        } finally {
                                            if (J$.Fr(10633))
                                                continue jalangiLabel1811;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 3433), addToOperationsList, 1));
                            J$.X1(3689, J$.P(3681, J$.R(3513, 'this', this, 0), 'insert', J$.T(3673, function (document) {
                                jalangiLabel1812:
                                    while (true) {
                                        try {
                                            J$.Fe(3649, arguments.callee, this, arguments);
                                            arguments = J$.N(3657, 'arguments', arguments, 4);
                                            document = J$.N(3665, 'document', document, 4);
                                            if (J$.X1(10641, J$.C(144, J$.B(210, '==', J$.G(3529, J$.R(3521, 'document', document, 0), '_id', 0), J$.T(3537, null, 25, false), 0))))
                                                J$.X1(3577, J$.P(3569, J$.R(3545, 'document', document, 0), '_id', J$.F(3561, J$.R(3553, 'ObjectID', ObjectID, 1), 1)(), 0));
                                            return J$.X1(3641, J$.Rt(3633, J$.F(3625, J$.R(3585, 'addToOperationsList', addToOperationsList, 0), 0)(J$.R(3593, 'self', self, 0), J$.G(3609, J$.R(3601, 'common', common, 1), 'INSERT', 0), J$.R(3617, 'document', document, 0))));
                                        } catch (J$e) {
                                            J$.Ex(10649, J$e);
                                        } finally {
                                            if (J$.Fr(10657))
                                                continue jalangiLabel1812;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 3649), 0));
                            J$.X1(3857, J$.P(3849, J$.R(3697, 'this', this, 0), 'find', J$.T(3841, function (selector) {
                                jalangiLabel1813:
                                    while (true) {
                                        try {
                                            J$.Fe(3817, arguments.callee, this, arguments);
                                            arguments = J$.N(3825, 'arguments', arguments, 4);
                                            selector = J$.N(3833, 'selector', selector, 4);
                                            if (J$.X1(10665, J$.C(152, J$.U(218, '!', J$.R(3705, 'selector', selector, 0))))) {
                                                throw J$.X1(3745, J$.Th(3737, J$.M(3729, J$.R(3713, 'utils', utils, 1), 'toError', 0)(J$.T(3721, 'Bulk find operation must specify a selector', 21, false))));
                                            }
                                            J$.X1(3777, currentOp = J$.W(3769, 'currentOp', J$.T(3761, {
                                                selector: J$.R(3753, 'selector', selector, 0)
                                            }, 11, false), currentOp, 0));
                                            return J$.X1(3809, J$.Rt(3801, J$.F(3793, J$.R(3785, 'FindOperators', FindOperators, 0), 1)()));
                                        } catch (J$e) {
                                            J$.Ex(10673, J$e);
                                        } finally {
                                            if (J$.Fr(10681))
                                                continue jalangiLabel1813;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 3817), 0));
                            var executeBatch = J$.X1(4417, J$.W(4409, 'executeBatch', J$.T(4401, function (batch, callback) {
                                jalangiLabel1815:
                                    while (true) {
                                        try {
                                            J$.Fe(4361, arguments.callee, this, arguments);
                                            arguments = J$.N(4369, 'arguments', arguments, 4);
                                            batch = J$.N(4377, 'batch', batch, 4);
                                            callback = J$.N(4385, 'callback', callback, 4);
                                            J$.N(4393, 'cmd', cmd, 0);
                                            var cmd = J$.X1(3881, J$.W(3873, 'cmd', J$.T(3865, null, 25, false), cmd, 1));
                                            if (J$.X1(10705, J$.C(176, J$.B(226, '==', J$.G(3897, J$.R(3889, 'batch', batch, 0), 'batchType', 0), J$.G(3913, J$.R(3905, 'common', common, 1), 'UPDATE', 0), 0)))) {
                                                J$.X1(3969, cmd = J$.W(3961, 'cmd', J$.T(3953, {
                                                    update: J$.R(3921, 'namespace', namespace, 0),
                                                    updates: J$.G(3937, J$.R(3929, 'batch', batch, 0), 'operations', 0),
                                                    ordered: J$.T(3945, false, 23, false)
                                                }, 11, false), cmd, 0));
                                            } else if (J$.X1(10697, J$.C(168, J$.B(234, '==', J$.G(3985, J$.R(3977, 'batch', batch, 0), 'batchType', 0), J$.G(4001, J$.R(3993, 'common', common, 1), 'INSERT', 0), 0)))) {
                                                J$.X1(4057, cmd = J$.W(4049, 'cmd', J$.T(4041, {
                                                    insert: J$.R(4009, 'namespace', namespace, 0),
                                                    documents: J$.G(4025, J$.R(4017, 'batch', batch, 0), 'operations', 0),
                                                    ordered: J$.T(4033, false, 23, false)
                                                }, 11, false), cmd, 0));
                                            } else if (J$.X1(10689, J$.C(160, J$.B(242, '==', J$.G(4073, J$.R(4065, 'batch', batch, 0), 'batchType', 0), J$.G(4089, J$.R(4081, 'common', common, 1), 'REMOVE', 0), 0)))) {
                                                J$.X1(4145, cmd = J$.W(4137, 'cmd', J$.T(4129, {
                                                    delete: J$.R(4097, 'namespace', namespace, 0),
                                                    deletes: J$.G(4113, J$.R(4105, 'batch', batch, 0), 'operations', 0),
                                                    ordered: J$.T(4121, false, 23, false)
                                                }, 11, false), cmd, 0));
                                            }
                                            if (J$.X1(10713, J$.C(184, J$.B(250, '!=', J$.R(4153, 'writeConcern', writeConcern, 0), J$.T(4161, null, 25, false), 0)))) {
                                                J$.X1(4193, J$.P(4185, J$.R(4169, 'cmd', cmd, 0), 'writeConcern', J$.R(4177, 'writeConcern', writeConcern, 0), 0));
                                            }
                                            J$.X1(4353, J$.M(4345, J$.R(4201, 'db', db, 0), 'command', 0)(J$.R(4209, 'cmd', cmd, 0), J$.T(4337, function (err, result) {
                                                jalangiLabel1814:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(4305, arguments.callee, this, arguments);
                                                            arguments = J$.N(4313, 'arguments', arguments, 4);
                                                            err = J$.N(4321, 'err', err, 4);
                                                            result = J$.N(4329, 'result', result, 4);
                                                            J$.X1(4297, J$.F(4289, J$.R(4217, 'callback', callback, 0), 0)(J$.T(4225, null, 25, false), J$.F(4281, J$.R(4233, 'mergeBatchResults', mergeBatchResults, 1), 0)(J$.T(4241, false, 23, false), J$.R(4249, 'batch', batch, 0), J$.R(4257, 'bulkResult', bulkResult, 0), J$.R(4265, 'err', err, 0), J$.R(4273, 'result', result, 0))));
                                                        } catch (J$e) {
                                                            J$.Ex(10721, J$e);
                                                        } finally {
                                                            if (J$.Fr(10729))
                                                                continue jalangiLabel1814;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 4305)));
                                        } catch (J$e) {
                                            J$.Ex(10737, J$e);
                                        } finally {
                                            if (J$.Fr(10745))
                                                continue jalangiLabel1815;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 4361), executeBatch, 1));
                            var executeBatches = J$.X1(4873, J$.W(4865, 'executeBatches', J$.T(4857, function (callback) {
                                jalangiLabel1817:
                                    while (true) {
                                        try {
                                            J$.Fe(4817, arguments.callee, this, arguments);
                                            arguments = J$.N(4825, 'arguments', arguments, 4);
                                            callback = J$.N(4833, 'callback', callback, 4);
                                            J$.N(4841, 'numberOfCommandsToExecute', numberOfCommandsToExecute, 0);
                                            J$.N(4849, 'i', i, 0);
                                            var numberOfCommandsToExecute = J$.X1(4449, J$.W(4441, 'numberOfCommandsToExecute', J$.G(4433, J$.R(4425, 'batches', batches, 0), 'length', 0), numberOfCommandsToExecute, 1));
                                            for (var i = J$.X1(4473, J$.W(4465, 'i', J$.T(4457, 0, 22, false), i, 1)); J$.X1(10785, J$.C(216, J$.B(258, '<', J$.R(4481, 'i', i, 0), J$.G(4497, J$.R(4489, 'batches', batches, 0), 'length', 0), 0))); J$.X1(10793, J$.B(282, '-', i = J$.W(4521, 'i', J$.B(274, '+', J$.U(266, '+', J$.R(4513, 'i', i, 0)), J$.T(4505, 1, 22, false), 0), i, 0), J$.T(4529, 1, 22, false), 0))) {
                                                J$.X1(4809, J$.F(4801, J$.R(4537, 'executeBatch', executeBatch, 0), 0)(J$.G(4561, J$.R(4545, 'batches', batches, 0), J$.R(4553, 'i', i, 0), 4), J$.T(4793, function (err, result) {
                                                    jalangiLabel1816:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(4761, arguments.callee, this, arguments);
                                                                arguments = J$.N(4769, 'arguments', arguments, 4);
                                                                err = J$.N(4777, 'err', err, 4);
                                                                result = J$.N(4785, 'result', result, 4);
                                                                J$.X1(4593, numberOfCommandsToExecute = J$.W(4585, 'numberOfCommandsToExecute', J$.B(290, '-', J$.R(4569, 'numberOfCommandsToExecute', numberOfCommandsToExecute, 0), J$.T(4577, 1, 22, false), 0), numberOfCommandsToExecute, 0));
                                                                if (J$.X1(10761, J$.C(208, J$.B(298, '==', J$.R(4601, 'numberOfCommandsToExecute', numberOfCommandsToExecute, 0), J$.T(4609, 0, 22, false), 0)))) {
                                                                    if (J$.X1(10753, J$.C(200, J$.C(192, J$.B(306, '==', J$.G(4625, J$.R(4617, 'bulkResult', bulkResult, 0), 'ok', 0), J$.T(4633, 0, 22, false), 0)) ? J$.R(4641, 'callback', callback, 0) : J$._()))) {
                                                                        return J$.X1(4697, J$.Rt(4689, J$.F(4681, J$.R(4649, 'callback', callback, 0), 0)(J$.G(4665, J$.R(4657, 'bulkResult', bulkResult, 0), 'error', 0), J$.T(4673, null, 25, false))));
                                                                    }
                                                                    J$.X1(4753, J$.F(4745, J$.R(4705, 'callback', callback, 0), 0)(J$.T(4713, null, 25, false), J$.F(4737, J$.R(4721, 'BatchWriteResult', BatchWriteResult, 1), 1)(J$.R(4729, 'bulkResult', bulkResult, 0))));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(10769, J$e);
                                                            } finally {
                                                                if (J$.Fr(10777))
                                                                    continue jalangiLabel1816;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 4761)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(10801, J$e);
                                        } finally {
                                            if (J$.Fr(10809))
                                                continue jalangiLabel1817;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 4817), executeBatches, 1));
                            J$.X1(5521, J$.P(5513, J$.R(4881, 'this', this, 0), 'execute', J$.T(5505, function (_writeConcern, callback) {
                                jalangiLabel1820:
                                    while (true) {
                                        try {
                                            J$.Fe(5473, arguments.callee, this, arguments);
                                            arguments = J$.N(5481, 'arguments', arguments, 4);
                                            _writeConcern = J$.N(5489, '_writeConcern', _writeConcern, 4);
                                            callback = J$.N(5497, 'callback', callback, 4);
                                            if (J$.X1(10817, J$.C(224, J$.R(4889, 'executed', executed, 0))))
                                                throw J$.X1(4929, J$.Th(4921, J$.M(4913, J$.R(4897, 'utils', utils, 1), 'toError', 0)(J$.T(4905, 'batch cannot be re-executed', 21, false))));
                                            if (J$.X1(10825, J$.C(232, J$.B(322, '==', J$.U(314, 'typeof', J$.R(4937, '_writeConcern', _writeConcern, 0)), J$.T(4945, 'function', 21, false), 0)))) {
                                                J$.X1(4969, callback = J$.W(4961, 'callback', J$.R(4953, '_writeConcern', _writeConcern, 0), callback, 0));
                                            } else {
                                                J$.X1(4993, writeConcern = J$.W(4985, 'writeConcern', J$.R(4977, '_writeConcern', _writeConcern, 0), writeConcern, 0));
                                            }
                                            if (J$.X1(10833, J$.C(240, J$.R(5001, 'currentInsertBatch', currentInsertBatch, 0))))
                                                J$.X1(5033, J$.M(5025, J$.R(5009, 'batches', batches, 0), 'push', 0)(J$.R(5017, 'currentInsertBatch', currentInsertBatch, 0)));
                                            if (J$.X1(10841, J$.C(248, J$.R(5041, 'currentUpdateBatch', currentUpdateBatch, 0))))
                                                J$.X1(5073, J$.M(5065, J$.R(5049, 'batches', batches, 0), 'push', 0)(J$.R(5057, 'currentUpdateBatch', currentUpdateBatch, 0)));
                                            if (J$.X1(10849, J$.C(256, J$.R(5081, 'currentRemoveBatch', currentRemoveBatch, 0))))
                                                J$.X1(5113, J$.M(5105, J$.R(5089, 'batches', batches, 0), 'push', 0)(J$.R(5097, 'currentRemoveBatch', currentRemoveBatch, 0)));
                                            if (J$.X1(10857, J$.C(264, J$.B(330, '==', J$.G(5129, J$.R(5121, 'batches', batches, 0), 'length', 0), J$.T(5137, 0, 22, false), 0)))) {
                                                throw J$.X1(5177, J$.Th(5169, J$.M(5161, J$.R(5145, 'utils', utils, 1), 'toError', 0)(J$.T(5153, 'Invalid Operation, No operations in bulk', 21, false))));
                                            }
                                            if (J$.X1(10881, J$.C(272, J$.F(5217, J$.R(5185, 'hasWriteCommands', hasWriteCommands, 1), 0)(J$.M(5209, J$.G(5201, J$.R(5193, 'db', db, 0), 'serverConfig', 0), 'checkoutWriter', 0)()))))
                                                return J$.X1(5329, J$.Rt(5321, J$.F(5313, J$.R(5225, 'executeBatches', executeBatches, 0), 0)(J$.T(5305, function (err, result) {
                                                jalangiLabel1818:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(5273, arguments.callee, this, arguments);
                                                            arguments = J$.N(5281, 'arguments', arguments, 4);
                                                            err = J$.N(5289, 'err', err, 4);
                                                            result = J$.N(5297, 'result', result, 4);
                                                            J$.X1(5265, J$.F(5257, J$.R(5233, 'callback', callback, 0), 0)(J$.R(5241, 'err', err, 0), J$.R(5249, 'result', result, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(10865, J$e);
                                                        } finally {
                                                            if (J$.Fr(10873))
                                                                continue jalangiLabel1818;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 5273))));
                                            J$.X1(5361, J$.P(5353, J$.R(5337, 'bulkResult', bulkResult, 0), 'nModified', J$.T(5345, null, 25, false), 0));
                                            J$.X1(5465, J$.F(5457, J$.R(5369, 'backwardsCompatibilityExecuteCommands', backwardsCompatibilityExecuteCommands, 0), 0)(J$.T(5449, function (err, result) {
                                                jalangiLabel1819:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(5417, arguments.callee, this, arguments);
                                                            arguments = J$.N(5425, 'arguments', arguments, 4);
                                                            err = J$.N(5433, 'err', err, 4);
                                                            result = J$.N(5441, 'result', result, 4);
                                                            J$.X1(5409, J$.F(5401, J$.R(5377, 'callback', callback, 0), 0)(J$.R(5385, 'err', err, 0), J$.R(5393, 'result', result, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(10889, J$e);
                                                        } finally {
                                                            if (J$.Fr(10897))
                                                                continue jalangiLabel1819;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 5417)));
                                        } catch (J$e) {
                                            J$.Ex(10905, J$e);
                                        } finally {
                                            if (J$.Fr(10913))
                                                continue jalangiLabel1820;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 5473), 0));
                            var executeInserts = J$.X1(6521, J$.W(6513, 'executeInserts', J$.T(6505, function (_collection, _batch, _result, _callback) {
                                jalangiLabel1824:
                                    while (true) {
                                        try {
                                            J$.Fe(6417, arguments.callee, this, arguments);
                                            arguments = J$.N(6425, 'arguments', arguments, 4);
                                            _collection = J$.N(6433, '_collection', _collection, 4);
                                            _batch = J$.N(6441, '_batch', _batch, 4);
                                            _result = J$.N(6449, '_result', _result, 4);
                                            _callback = J$.N(6457, '_callback', _callback, 4);
                                            J$.N(6465, 'totalNumberOfInserts', totalNumberOfInserts, 0);
                                            J$.N(6473, 'batchOptions', batchOptions, 0);
                                            J$.N(6481, 'executeLegacyInsert', executeLegacyInsert, 0);
                                            J$.N(6489, 'i', i, 0);
                                            J$.N(6497, 'legacyOp', legacyOp, 0);
                                            var totalNumberOfInserts = J$.X1(5561, J$.W(5553, 'totalNumberOfInserts', J$.G(5545, J$.G(5537, J$.R(5529, '_batch', _batch, 0), 'operations', 0), 'length', 0), totalNumberOfInserts, 1));
                                            var batchOptions = J$.X1(5593, J$.W(5585, 'batchOptions', J$.C(280, J$.R(5569, 'writeConcern', writeConcern, 0)) ? J$._() : J$.T(5577, {}, 11, false), batchOptions, 1));
                                            var executeLegacyInsert = J$.X1(6033, J$.W(6025, 'executeLegacyInsert', J$.T(6017, function (_i, _op, _options, __callback) {
                                                jalangiLabel1822:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(5969, arguments.callee, this, arguments);
                                                            arguments = J$.N(5977, 'arguments', arguments, 4);
                                                            _i = J$.N(5985, '_i', _i, 4);
                                                            _op = J$.N(5993, '_op', _op, 4);
                                                            _options = J$.N(6001, '_options', _options, 4);
                                                            __callback = J$.N(6009, '__callback', __callback, 4);
                                                            J$.X1(5961, J$.M(5953, J$.R(5601, '_collection', _collection, 0), 'insert', 0)(J$.G(5617, J$.R(5609, '_op', _op, 0), 'operation', 0), J$.R(5625, '_options', _options, 0), J$.T(5945, function (err, r) {
                                                                jalangiLabel1821:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(5905, arguments.callee, this, arguments);
                                                                            arguments = J$.N(5913, 'arguments', arguments, 4);
                                                                            err = J$.N(5921, 'err', err, 4);
                                                                            r = J$.N(5929, 'r', r, 4);
                                                                            J$.N(5937, 'result', result, 0);
                                                                            if (J$.X1(10929, J$.C(312, J$.C(288, J$.B(338, '==', J$.G(5641, J$.R(5633, '_options', _options, 0), 'w', 0), J$.T(5649, null, 25, false), 0)) ? J$._() : J$.B(346, '!=', J$.G(5665, J$.R(5657, '_options', _options, 0), 'w', 0), J$.T(5673, 0, 22, false), 0)))) {
                                                                                var result = J$.X1(5777, J$.W(5769, 'result', J$.M(5761, J$.R(5681, 'common', common, 1), 'mergeLegacyResults', 0)(J$.T(5689, false, 23, false), J$.G(5705, J$.R(5697, '_op', _op, 0), 'operation', 0), J$.R(5713, '_batch', _batch, 0), J$.R(5721, 'bulkResult', bulkResult, 0), J$.C(296, J$.R(5729, 'err', err, 0)) ? J$._() : J$.R(5737, 'r', r, 0), J$.G(5753, J$.R(5745, '_op', _op, 0), 'index', 0)), result, 1));
                                                                                if (J$.X1(10921, J$.C(304, J$.B(354, '==', J$.R(5785, 'result', result, 0), J$.T(5793, false, 23, false), 0)))) {
                                                                                    return J$.X1(5857, J$.Rt(5849, J$.F(5841, J$.R(5801, '_callback', _callback, 0), 0)(J$.T(5809, null, 25, false), J$.F(5833, J$.R(5817, 'BatchWriteResult', BatchWriteResult, 1), 1)(J$.R(5825, 'bulkResult', bulkResult, 0)))));
                                                                                }
                                                                            }
                                                                            J$.X1(5897, J$.F(5889, J$.R(5865, '__callback', __callback, 0), 0)(J$.T(5873, null, 25, false), J$.R(5881, '_result', _result, 0)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(10937, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(10945))
                                                                                continue jalangiLabel1821;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false, 5905)));
                                                        } catch (J$e) {
                                                            J$.Ex(10953, J$e);
                                                        } finally {
                                                            if (J$.Fr(10961))
                                                                continue jalangiLabel1822;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 5969), executeLegacyInsert, 1));
                                            for (var i = J$.X1(6057, J$.W(6049, 'i', J$.T(6041, 0, 22, false), i, 1)); J$.X1(10993, J$.C(328, J$.B(362, '<', J$.R(6065, 'i', i, 0), J$.G(6089, J$.G(6081, J$.R(6073, '_batch', _batch, 0), 'operations', 0), 'length', 0), 0))); J$.X1(11001, J$.B(386, '-', i = J$.W(6113, 'i', J$.B(378, '+', J$.U(370, '+', J$.R(6105, 'i', i, 0)), J$.T(6097, 1, 22, false), 0), i, 0), J$.T(6121, 1, 22, false), 0))) {
                                                var legacyOp = J$.X1(6233, J$.W(6225, 'legacyOp', J$.F(6217, J$.R(6129, 'LegacyOp', LegacyOp, 1), 1)(J$.G(6145, J$.R(6137, '_batch', _batch, 0), 'batchType', 0), J$.G(6177, J$.G(6161, J$.R(6153, '_batch', _batch, 0), 'operations', 0), J$.R(6169, 'i', i, 0), 4), J$.G(6209, J$.G(6193, J$.R(6185, '_batch', _batch, 0), 'originalIndexes', 0), J$.R(6201, 'i', i, 0), 4)), legacyOp, 1));
                                                J$.X1(6409, J$.F(6401, J$.R(6241, 'executeLegacyInsert', executeLegacyInsert, 0), 0)(J$.R(6249, 'i', i, 0), J$.R(6257, 'legacyOp', legacyOp, 0), J$.R(6265, 'batchOptions', batchOptions, 0), J$.T(6393, function (err, result) {
                                                    jalangiLabel1823:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(6361, arguments.callee, this, arguments);
                                                                arguments = J$.N(6369, 'arguments', arguments, 4);
                                                                err = J$.N(6377, 'err', err, 4);
                                                                result = J$.N(6385, 'result', result, 4);
                                                                J$.X1(6297, totalNumberOfInserts = J$.W(6289, 'totalNumberOfInserts', J$.B(394, '-', J$.R(6273, 'totalNumberOfInserts', totalNumberOfInserts, 0), J$.T(6281, 1, 22, false), 0), totalNumberOfInserts, 0));
                                                                if (J$.X1(10969, J$.C(320, J$.B(402, '==', J$.R(6305, 'totalNumberOfInserts', totalNumberOfInserts, 0), J$.T(6313, 0, 22, false), 0)))) {
                                                                    J$.X1(6353, J$.F(6345, J$.R(6321, '_callback', _callback, 0), 0)(J$.T(6329, null, 25, false), J$.R(6337, '_result', _result, 0)));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(10977, J$e);
                                                            } finally {
                                                                if (J$.Fr(10985))
                                                                    continue jalangiLabel1823;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 6361)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(11009, J$e);
                                        } finally {
                                            if (J$.Fr(11017))
                                                continue jalangiLabel1824;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 6417), executeInserts, 1));
                            var executeUpdates = J$.X1(7793, J$.W(7785, 'executeUpdates', J$.T(7777, function (_collection, _batch, _result, _callback) {
                                jalangiLabel1828:
                                    while (true) {
                                        try {
                                            J$.Fe(7689, arguments.callee, this, arguments);
                                            arguments = J$.N(7697, 'arguments', arguments, 4);
                                            _collection = J$.N(7705, '_collection', _collection, 4);
                                            _batch = J$.N(7713, '_batch', _batch, 4);
                                            _result = J$.N(7721, '_result', _result, 4);
                                            _callback = J$.N(7729, '_callback', _callback, 4);
                                            J$.N(7737, 'totalNumberOfUpdates', totalNumberOfUpdates, 0);
                                            J$.N(7745, 'batchOptions', batchOptions, 0);
                                            J$.N(7753, 'executeLegacyUpdate', executeLegacyUpdate, 0);
                                            J$.N(7761, 'i', i, 0);
                                            J$.N(7769, 'legacyOp', legacyOp, 0);
                                            var totalNumberOfUpdates = J$.X1(6561, J$.W(6553, 'totalNumberOfUpdates', J$.G(6545, J$.G(6537, J$.R(6529, '_batch', _batch, 0), 'operations', 0), 'length', 0), totalNumberOfUpdates, 1));
                                            var batchOptions = J$.X1(6593, J$.W(6585, 'batchOptions', J$.C(336, J$.R(6569, 'writeConcern', writeConcern, 0)) ? J$._() : J$.T(6577, {}, 11, false), batchOptions, 1));
                                            var executeLegacyUpdate = J$.X1(7305, J$.W(7297, 'executeLegacyUpdate', J$.T(7289, function (_i, _op, _options, __callback) {
                                                jalangiLabel1826:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(7233, arguments.callee, this, arguments);
                                                            arguments = J$.N(7241, 'arguments', arguments, 4);
                                                            _i = J$.N(7249, '_i', _i, 4);
                                                            _op = J$.N(7257, '_op', _op, 4);
                                                            _options = J$.N(7265, '_options', _options, 4);
                                                            __callback = J$.N(7273, '__callback', __callback, 4);
                                                            J$.N(7281, 'options', options, 0);
                                                            var options = J$.X1(6633, J$.W(6625, 'options', J$.M(6617, J$.R(6601, 'common', common, 1), 'cloneOptions', 0)(J$.R(6609, 'batchOptions', batchOptions, 0)), options, 1));
                                                            if (J$.X1(11033, J$.C(352, J$.B(410, '!=', J$.G(6657, J$.G(6649, J$.R(6641, '_op', _op, 0), 'operation', 0), 'multi', 0), J$.T(6665, null, 25, false), 0))))
                                                                J$.X1(6729, J$.P(6721, J$.R(6673, 'options', options, 0), 'multi', J$.X1(11025, J$.C(344, J$.G(6697, J$.G(6689, J$.R(6681, '_op', _op, 0), 'operation', 0), 'multi', 0))) ? J$.T(6705, true, 23, false) : J$.T(6713, false, 23, false), 0));
                                                            if (J$.X1(11041, J$.C(360, J$.B(418, '!=', J$.G(6753, J$.G(6745, J$.R(6737, '_op', _op, 0), 'operation', 0), 'upsert', 0), J$.T(6761, null, 25, false), 0))))
                                                                J$.X1(6809, J$.P(6801, J$.R(6769, 'options', options, 0), 'upsert', J$.G(6793, J$.G(6785, J$.R(6777, '_op', _op, 0), 'operation', 0), 'upsert', 0), 0));
                                                            J$.X1(7225, J$.M(7217, J$.R(6817, '_collection', _collection, 0), 'update', 0)(J$.G(6841, J$.G(6833, J$.R(6825, '_op', _op, 0), 'operation', 0), 'q', 0), J$.G(6865, J$.G(6857, J$.R(6849, '_op', _op, 0), 'operation', 0), 'u', 0), J$.R(6873, 'options', options, 0), J$.T(7209, function (err, r, full) {
                                                                jalangiLabel1825:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(7161, arguments.callee, this, arguments);
                                                                            arguments = J$.N(7169, 'arguments', arguments, 4);
                                                                            err = J$.N(7177, 'err', err, 4);
                                                                            r = J$.N(7185, 'r', r, 4);
                                                                            full = J$.N(7193, 'full', full, 4);
                                                                            J$.N(7201, 'result', result, 0);
                                                                            if (J$.X1(11057, J$.C(392, J$.C(368, J$.B(426, '==', J$.G(6889, J$.R(6881, 'options', options, 0), 'w', 0), J$.T(6897, null, 25, false), 0)) ? J$._() : J$.B(434, '!=', J$.G(6913, J$.R(6905, 'options', options, 0), 'w', 0), J$.T(6921, 0, 22, false), 0)))) {
                                                                                var result = J$.X1(7025, J$.W(7017, 'result', J$.M(7009, J$.R(6929, 'common', common, 1), 'mergeLegacyResults', 0)(J$.T(6937, false, 23, false), J$.G(6953, J$.R(6945, '_op', _op, 0), 'operation', 0), J$.R(6961, '_batch', _batch, 0), J$.R(6969, 'bulkResult', bulkResult, 0), J$.C(376, J$.R(6977, 'err', err, 0)) ? J$._() : J$.R(6985, 'full', full, 0), J$.G(7001, J$.R(6993, '_op', _op, 0), 'index', 0)), result, 1));
                                                                                if (J$.X1(11049, J$.C(384, J$.B(442, '==', J$.R(7033, 'result', result, 0), J$.T(7041, false, 23, false), 0)))) {
                                                                                    return J$.X1(7105, J$.Rt(7097, J$.F(7089, J$.R(7049, '_callback', _callback, 0), 0)(J$.T(7057, null, 25, false), J$.F(7081, J$.R(7065, 'BatchWriteResult', BatchWriteResult, 1), 1)(J$.R(7073, 'bulkResult', bulkResult, 0)))));
                                                                                }
                                                                            }
                                                                            return J$.X1(7153, J$.Rt(7145, J$.F(7137, J$.R(7113, '__callback', __callback, 0), 0)(J$.T(7121, null, 25, false), J$.R(7129, '_result', _result, 0))));
                                                                        } catch (J$e) {
                                                                            J$.Ex(11065, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(11073))
                                                                                continue jalangiLabel1825;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false, 7161)));
                                                        } catch (J$e) {
                                                            J$.Ex(11081, J$e);
                                                        } finally {
                                                            if (J$.Fr(11089))
                                                                continue jalangiLabel1826;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 7233), executeLegacyUpdate, 1));
                                            for (var i = J$.X1(7329, J$.W(7321, 'i', J$.T(7313, 0, 22, false), i, 1)); J$.X1(11121, J$.C(408, J$.B(450, '<', J$.R(7337, 'i', i, 0), J$.G(7361, J$.G(7353, J$.R(7345, '_batch', _batch, 0), 'operations', 0), 'length', 0), 0))); J$.X1(11129, J$.B(474, '-', i = J$.W(7385, 'i', J$.B(466, '+', J$.U(458, '+', J$.R(7377, 'i', i, 0)), J$.T(7369, 1, 22, false), 0), i, 0), J$.T(7393, 1, 22, false), 0))) {
                                                var legacyOp = J$.X1(7505, J$.W(7497, 'legacyOp', J$.F(7489, J$.R(7401, 'LegacyOp', LegacyOp, 1), 1)(J$.G(7417, J$.R(7409, '_batch', _batch, 0), 'batchType', 0), J$.G(7449, J$.G(7433, J$.R(7425, '_batch', _batch, 0), 'operations', 0), J$.R(7441, 'i', i, 0), 4), J$.G(7481, J$.G(7465, J$.R(7457, '_batch', _batch, 0), 'originalIndexes', 0), J$.R(7473, 'i', i, 0), 4)), legacyOp, 1));
                                                J$.X1(7681, J$.F(7673, J$.R(7513, 'executeLegacyUpdate', executeLegacyUpdate, 0), 0)(J$.R(7521, 'i', i, 0), J$.R(7529, 'legacyOp', legacyOp, 0), J$.R(7537, 'options', options, 0), J$.T(7665, function (err, result) {
                                                    jalangiLabel1827:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(7633, arguments.callee, this, arguments);
                                                                arguments = J$.N(7641, 'arguments', arguments, 4);
                                                                err = J$.N(7649, 'err', err, 4);
                                                                result = J$.N(7657, 'result', result, 4);
                                                                J$.X1(7569, totalNumberOfUpdates = J$.W(7561, 'totalNumberOfUpdates', J$.B(482, '-', J$.R(7545, 'totalNumberOfUpdates', totalNumberOfUpdates, 0), J$.T(7553, 1, 22, false), 0), totalNumberOfUpdates, 0));
                                                                if (J$.X1(11097, J$.C(400, J$.B(490, '==', J$.R(7577, 'totalNumberOfUpdates', totalNumberOfUpdates, 0), J$.T(7585, 0, 22, false), 0)))) {
                                                                    J$.X1(7625, J$.F(7617, J$.R(7593, '_callback', _callback, 0), 0)(J$.T(7601, null, 25, false), J$.R(7609, '_result', _result, 0)));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(11105, J$e);
                                                            } finally {
                                                                if (J$.Fr(11113))
                                                                    continue jalangiLabel1827;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 7633)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(11137, J$e);
                                        } finally {
                                            if (J$.Fr(11145))
                                                continue jalangiLabel1828;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 7689), executeUpdates, 1));
                            var executeRemoves = J$.X1(8961, J$.W(8953, 'executeRemoves', J$.T(8945, function (_collection, _batch, _result, _callback) {
                                jalangiLabel1832:
                                    while (true) {
                                        try {
                                            J$.Fe(8857, arguments.callee, this, arguments);
                                            arguments = J$.N(8865, 'arguments', arguments, 4);
                                            _collection = J$.N(8873, '_collection', _collection, 4);
                                            _batch = J$.N(8881, '_batch', _batch, 4);
                                            _result = J$.N(8889, '_result', _result, 4);
                                            _callback = J$.N(8897, '_callback', _callback, 4);
                                            J$.N(8905, 'totalNumberOfRemoves', totalNumberOfRemoves, 0);
                                            J$.N(8913, 'batchOptions', batchOptions, 0);
                                            J$.N(8921, 'executeLegacyRemove', executeLegacyRemove, 0);
                                            J$.N(8929, 'i', i, 0);
                                            J$.N(8937, 'legacyOp', legacyOp, 0);
                                            var totalNumberOfRemoves = J$.X1(7833, J$.W(7825, 'totalNumberOfRemoves', J$.G(7817, J$.G(7809, J$.R(7801, '_batch', _batch, 0), 'operations', 0), 'length', 0), totalNumberOfRemoves, 1));
                                            var batchOptions = J$.X1(7865, J$.W(7857, 'batchOptions', J$.C(416, J$.R(7841, 'writeConcern', writeConcern, 0)) ? J$._() : J$.T(7849, {}, 11, false), batchOptions, 1));
                                            var executeLegacyRemove = J$.X1(8473, J$.W(8465, 'executeLegacyRemove', J$.T(8457, function (_i, _op, _options, __callback) {
                                                jalangiLabel1830:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(8401, arguments.callee, this, arguments);
                                                            arguments = J$.N(8409, 'arguments', arguments, 4);
                                                            _i = J$.N(8417, '_i', _i, 4);
                                                            _op = J$.N(8425, '_op', _op, 4);
                                                            _options = J$.N(8433, '_options', _options, 4);
                                                            __callback = J$.N(8441, '__callback', __callback, 4);
                                                            J$.N(8449, 'options', options, 0);
                                                            var options = J$.X1(7905, J$.W(7897, 'options', J$.M(7889, J$.R(7873, 'common', common, 1), 'cloneOptions', 0)(J$.R(7881, 'batchOptions', batchOptions, 0)), options, 1));
                                                            if (J$.X1(11161, J$.C(432, J$.B(498, '!=', J$.G(7929, J$.G(7921, J$.R(7913, '_op', _op, 0), 'operation', 0), 'limit', 0), J$.T(7937, null, 25, false), 0))))
                                                                J$.X1(8009, J$.P(8001, J$.R(7945, 'options', options, 0), 'single', J$.X1(11153, J$.C(424, J$.B(506, '==', J$.G(7969, J$.G(7961, J$.R(7953, '_op', _op, 0), 'operation', 0), 'limit', 0), J$.T(7977, 1, 22, false), 0))) ? J$.T(7985, true, 23, false) : J$.T(7993, false, 23, false), 0));
                                                            J$.X1(8393, J$.M(8385, J$.R(8017, '_collection', _collection, 0), 'remove', 0)(J$.G(8041, J$.G(8033, J$.R(8025, '_op', _op, 0), 'operation', 0), 'q', 0), J$.R(8049, 'options', options, 0), J$.T(8377, function (err, r) {
                                                                jalangiLabel1829:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(8337, arguments.callee, this, arguments);
                                                                            arguments = J$.N(8345, 'arguments', arguments, 4);
                                                                            err = J$.N(8353, 'err', err, 4);
                                                                            r = J$.N(8361, 'r', r, 4);
                                                                            J$.N(8369, 'result', result, 0);
                                                                            if (J$.X1(11177, J$.C(464, J$.C(440, J$.B(514, '==', J$.G(8065, J$.R(8057, 'options', options, 0), 'w', 0), J$.T(8073, null, 25, false), 0)) ? J$._() : J$.B(522, '!=', J$.G(8089, J$.R(8081, 'options', options, 0), 'w', 0), J$.T(8097, 0, 22, false), 0)))) {
                                                                                var result = J$.X1(8201, J$.W(8193, 'result', J$.M(8185, J$.R(8105, 'common', common, 1), 'mergeLegacyResults', 0)(J$.T(8113, false, 23, false), J$.G(8129, J$.R(8121, '_op', _op, 0), 'operation', 0), J$.R(8137, '_batch', _batch, 0), J$.R(8145, 'bulkResult', bulkResult, 0), J$.C(448, J$.R(8153, 'err', err, 0)) ? J$._() : J$.R(8161, 'r', r, 0), J$.G(8177, J$.R(8169, '_op', _op, 0), 'index', 0)), result, 1));
                                                                                if (J$.X1(11169, J$.C(456, J$.B(530, '==', J$.R(8209, 'result', result, 0), J$.T(8217, false, 23, false), 0)))) {
                                                                                    return J$.X1(8281, J$.Rt(8273, J$.F(8265, J$.R(8225, '_callback', _callback, 0), 0)(J$.T(8233, null, 25, false), J$.F(8257, J$.R(8241, 'BatchWriteResult', BatchWriteResult, 1), 1)(J$.R(8249, 'bulkResult', bulkResult, 0)))));
                                                                                }
                                                                            }
                                                                            return J$.X1(8329, J$.Rt(8321, J$.F(8313, J$.R(8289, '__callback', __callback, 0), 0)(J$.T(8297, null, 25, false), J$.R(8305, '_result', _result, 0))));
                                                                        } catch (J$e) {
                                                                            J$.Ex(11185, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(11193))
                                                                                continue jalangiLabel1829;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false, 8337)));
                                                        } catch (J$e) {
                                                            J$.Ex(11201, J$e);
                                                        } finally {
                                                            if (J$.Fr(11209))
                                                                continue jalangiLabel1830;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 8401), executeLegacyRemove, 1));
                                            for (var i = J$.X1(8497, J$.W(8489, 'i', J$.T(8481, 0, 22, false), i, 1)); J$.X1(11241, J$.C(480, J$.B(538, '<', J$.R(8505, 'i', i, 0), J$.G(8529, J$.G(8521, J$.R(8513, '_batch', _batch, 0), 'operations', 0), 'length', 0), 0))); J$.X1(11249, J$.B(562, '-', i = J$.W(8553, 'i', J$.B(554, '+', J$.U(546, '+', J$.R(8545, 'i', i, 0)), J$.T(8537, 1, 22, false), 0), i, 0), J$.T(8561, 1, 22, false), 0))) {
                                                var legacyOp = J$.X1(8673, J$.W(8665, 'legacyOp', J$.F(8657, J$.R(8569, 'LegacyOp', LegacyOp, 1), 1)(J$.G(8585, J$.R(8577, '_batch', _batch, 0), 'batchType', 0), J$.G(8617, J$.G(8601, J$.R(8593, '_batch', _batch, 0), 'operations', 0), J$.R(8609, 'i', i, 0), 4), J$.G(8649, J$.G(8633, J$.R(8625, '_batch', _batch, 0), 'originalIndexes', 0), J$.R(8641, 'i', i, 0), 4)), legacyOp, 1));
                                                J$.X1(8849, J$.F(8841, J$.R(8681, 'executeLegacyRemove', executeLegacyRemove, 0), 0)(J$.R(8689, 'i', i, 0), J$.R(8697, 'legacyOp', legacyOp, 0), J$.R(8705, 'options', options, 0), J$.T(8833, function (err, result) {
                                                    jalangiLabel1831:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(8801, arguments.callee, this, arguments);
                                                                arguments = J$.N(8809, 'arguments', arguments, 4);
                                                                err = J$.N(8817, 'err', err, 4);
                                                                result = J$.N(8825, 'result', result, 4);
                                                                J$.X1(8737, totalNumberOfRemoves = J$.W(8729, 'totalNumberOfRemoves', J$.B(570, '-', J$.R(8713, 'totalNumberOfRemoves', totalNumberOfRemoves, 0), J$.T(8721, 1, 22, false), 0), totalNumberOfRemoves, 0));
                                                                if (J$.X1(11217, J$.C(472, J$.B(578, '==', J$.R(8745, 'totalNumberOfRemoves', totalNumberOfRemoves, 0), J$.T(8753, 0, 22, false), 0)))) {
                                                                    J$.X1(8793, J$.F(8785, J$.R(8761, '_callback', _callback, 0), 0)(J$.T(8769, null, 25, false), J$.R(8777, '_result', _result, 0)));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(11225, J$e);
                                                            } finally {
                                                                if (J$.Fr(11233))
                                                                    continue jalangiLabel1831;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 8801)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(11257, J$e);
                                        } finally {
                                            if (J$.Fr(11265))
                                                continue jalangiLabel1832;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 8857), executeRemoves, 1));
                            var backwardsCompatibilityExecuteCommands = J$.X1(9889, J$.W(9881, 'backwardsCompatibilityExecuteCommands', J$.T(9873, function (callback) {
                                jalangiLabel1834:
                                    while (true) {
                                        try {
                                            J$.Fe(9833, arguments.callee, this, arguments);
                                            arguments = J$.N(9841, 'arguments', arguments, 4);
                                            callback = J$.N(9849, 'callback', callback, 4);
                                            J$.N(9857, 'batch', batch, 0);
                                            J$.N(9865, 'processLegacyOperations', processLegacyOperations, 0);
                                            if (J$.X1(11273, J$.C(488, J$.B(586, '==', J$.G(8977, J$.R(8969, 'batches', batches, 0), 'length', 0), J$.T(8985, 0, 22, false), 0)))) {
                                                return J$.X1(9049, J$.Rt(9041, J$.F(9033, J$.R(8993, 'callback', callback, 0), 0)(J$.T(9001, null, 25, false), J$.F(9025, J$.R(9009, 'BatchWriteResult', BatchWriteResult, 1), 1)(J$.R(9017, 'bulkResult', bulkResult, 0)))));
                                            }
                                            var batch = J$.X1(9081, J$.W(9073, 'batch', J$.M(9065, J$.R(9057, 'batches', batches, 0), 'shift', 0)(), batch, 1));
                                            var processLegacyOperations = J$.X1(9513, J$.W(9505, 'processLegacyOperations', J$.T(9497, function (err, results) {
                                                jalangiLabel1833:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(9449, arguments.callee, this, arguments);
                                                            arguments = J$.N(9457, 'arguments', arguments, 4);
                                                            err = J$.N(9465, 'err', err, 4);
                                                            results = J$.N(9473, 'results', results, 4);
                                                            J$.N(9481, 'mergeResult', mergeResult, 0);
                                                            J$.N(9489, 'internalCallback', internalCallback, 0);
                                                            var mergeResult = J$.X1(9153, J$.W(9145, 'mergeResult', J$.F(9137, J$.R(9089, 'mergeBatchResults', mergeBatchResults, 1), 0)(J$.T(9097, false, 23, false), J$.R(9105, 'batch', batch, 0), J$.R(9113, 'bulkResult', bulkResult, 0), J$.R(9121, 'err', err, 0), J$.R(9129, 'results', results, 0)), mergeResult, 1));
                                                            if (J$.X1(11281, J$.C(496, J$.B(594, '!=', J$.R(9161, 'mergeResult', mergeResult, 0), J$.T(9169, null, 25, false), 0)))) {
                                                                return J$.X1(9217, J$.Rt(9209, J$.F(9201, J$.R(9177, 'callback', callback, 0), 0)(J$.T(9185, null, 25, false), J$.R(9193, 'mergeResult', mergeResult, 0))));
                                                            }
                                                            if (J$.X1(11297, J$.C(528, J$.C(504, J$.B(602, '==', J$.G(9233, J$.R(9225, 'bulkResult', bulkResult, 0), 'ok', 0), J$.T(9241, 0, 22, false), 0)) ? J$.R(9249, 'callback', callback, 0) : J$._()))) {
                                                                var internalCallback = J$.X1(9273, J$.W(9265, 'internalCallback', J$.R(9257, 'callback', callback, 0), internalCallback, 1));
                                                                J$.X1(9297, callback = J$.W(9289, 'callback', J$.T(9281, null, 25, false), callback, 0));
                                                                return J$.X1(9353, J$.Rt(9345, J$.F(9337, J$.R(9305, 'internalCallback', internalCallback, 0), 0)(J$.G(9321, J$.R(9313, 'bulkResult', bulkResult, 0), 'error', 0), J$.T(9329, null, 25, false))));
                                                            } else if (J$.X1(11289, J$.C(520, J$.C(512, J$.B(610, '==', J$.G(9369, J$.R(9361, 'bulkResult', bulkResult, 0), 'ok', 0), J$.T(9377, 0, 22, false), 0)) ? J$.B(618, '==', J$.R(9385, 'callback', callback, 0), J$.T(9393, null, 25, false), 0) : J$._()))) {
                                                                return J$.X1(9409, J$.Rt(9401, undefined));
                                                            }
                                                            J$.X1(9441, J$.F(9433, J$.R(9417, 'backwardsCompatibilityExecuteCommands', backwardsCompatibilityExecuteCommands, 0), 0)(J$.R(9425, 'callback', callback, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(11305, J$e);
                                                        } finally {
                                                            if (J$.Fr(11313))
                                                                continue jalangiLabel1833;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 9449), processLegacyOperations, 1));
                                            if (J$.X1(11321, J$.C(536, J$.B(626, '==', J$.G(9529, J$.R(9521, 'batch', batch, 0), 'batchType', 0), J$.G(9545, J$.R(9537, 'common', common, 1), 'INSERT', 0), 0)))) {
                                                return J$.X1(9617, J$.Rt(9609, J$.F(9601, J$.R(9553, 'executeInserts', executeInserts, 0), 0)(J$.R(9561, 'collection', collection, 0), J$.R(9569, 'batch', batch, 0), J$.T(9585, {
                                                    n: J$.T(9577, 0, 22, false)
                                                }, 11, false), J$.R(9593, 'processLegacyOperations', processLegacyOperations, 0))));
                                            }
                                            if (J$.X1(11329, J$.C(544, J$.B(634, '==', J$.G(9633, J$.R(9625, 'batch', batch, 0), 'batchType', 0), J$.G(9649, J$.R(9641, 'common', common, 1), 'UPDATE', 0), 0)))) {
                                                return J$.X1(9721, J$.Rt(9713, J$.F(9705, J$.R(9657, 'executeUpdates', executeUpdates, 0), 0)(J$.R(9665, 'collection', collection, 0), J$.R(9673, 'batch', batch, 0), J$.T(9689, {
                                                    n: J$.T(9681, 0, 22, false)
                                                }, 11, false), J$.R(9697, 'processLegacyOperations', processLegacyOperations, 0))));
                                            }
                                            if (J$.X1(11337, J$.C(552, J$.B(642, '==', J$.G(9737, J$.R(9729, 'batch', batch, 0), 'batchType', 0), J$.G(9753, J$.R(9745, 'common', common, 1), 'REMOVE', 0), 0)))) {
                                                return J$.X1(9825, J$.Rt(9817, J$.F(9809, J$.R(9761, 'executeRemoves', executeRemoves, 0), 0)(J$.R(9769, 'collection', collection, 0), J$.R(9777, 'batch', batch, 0), J$.T(9793, {
                                                    n: J$.T(9785, 0, 22, false)
                                                }, 11, false), J$.R(9801, 'processLegacyOperations', processLegacyOperations, 0))));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(11345, J$e);
                                        } finally {
                                            if (J$.Fr(11353))
                                                continue jalangiLabel1834;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 9833), backwardsCompatibilityExecuteCommands, 1));
                        } catch (J$e) {
                            J$.Ex(11361, J$e);
                        } finally {
                            if (J$.Fr(11369))
                                continue jalangiLabel1835;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 9897), UnorderedBulkOperation, 3));
            var initializeUnorderedBulkOp = J$.X1(10241, J$.W(10233, 'initializeUnorderedBulkOp', J$.T(10225, function (options) {
                jalangiLabel1836:
                    while (true) {
                        try {
                            J$.Fe(10201, arguments.callee, this, arguments);
                            arguments = J$.N(10209, 'arguments', arguments, 4);
                            options = J$.N(10217, 'options', options, 4);
                            return J$.X1(10193, J$.Rt(10185, J$.F(10177, J$.R(10153, 'UnorderedBulkOperation', UnorderedBulkOperation, 1), 1)(J$.R(10161, 'this', this, 0), J$.R(10169, 'options', options, 0))));
                        } catch (J$e) {
                            J$.Ex(11377, J$e);
                        } finally {
                            if (J$.Fr(11385))
                                continue jalangiLabel1836;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 10201), initializeUnorderedBulkOp, 3));
            J$.X1(10273, J$.P(10265, J$.R(10249, 'exports', exports, 2), 'initializeUnorderedBulkOp', J$.R(10257, 'initializeUnorderedBulkOp', initializeUnorderedBulkOp, 1), 0));
        } catch (J$e) {
            J$.Ex(11393, J$e);
        } finally {
            if (J$.Sr(11401)) {
                J$.L();
                continue jalangiLabel1837;
            } else {
                J$.L();
                break jalangiLabel1837;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
