J$.iids = {"8":[8,25,8,78],"9":[1,20,1,27],"10":[16,9,16,34],"16":[9,24,9,76],"17":[1,28,1,32],"18":[31,9,31,44],"24":[16,9,16,34],"25":[1,20,1,33],"26":[32,28,32,65],"32":[26,5,26,37],"33":[1,20,1,33],"34":[34,25,34,40],"40":[32,28,32,65],"41":[1,20,1,33],"42":[34,42,34,45],"48":[34,25,34,40],"49":[2,26,2,38],"56":[31,9,31,44],"57":[2,26,2,45],"58":[34,42,34,45],"64":[41,9,41,48],"65":[2,26,2,45],"66":[41,9,41,21],"72":[42,26,42,45],"73":[2,26,2,45],"74":[41,25,41,36],"80":[51,29,51,87],"81":[3,14,3,21],"82":[41,25,41,48],"88":[50,37,50,60],"89":[3,22,3,36],"90":[43,26,43,48],"96":[56,25,56,33],"97":[3,14,3,37],"98":[43,50,43,54],"104":[48,21,48,40],"105":[3,14,3,44],"112":[46,29,46,56],"113":[3,55,3,62],"114":[43,50,43,54],"120":[43,26,43,48],"121":[3,63,3,69],"122":[46,29,46,56],"128":[41,9,41,48],"129":[3,55,3,70],"130":[46,58,46,61],"136":[71,9,71,37],"137":[3,55,3,77],"144":[76,9,76,16],"145":[3,14,3,44],"146":[46,58,46,61],"152":[83,13,83,69],"153":[3,14,3,44],"154":[48,21,48,40],"160":[82,12,82,17],"161":[3,55,3,77],"162":[50,37,50,60],"168":[87,9,87,41],"169":[3,55,3,77],"170":[50,62,50,65],"176":[87,9,87,41],"177":[4,20,4,27],"184":[93,9,93,36],"185":[5,5,5,9],"186":[50,62,50,65],"192":[98,9,98,41],"193":[5,23,5,33],"194":[51,29,51,87],"200":[99,13,99,23],"201":[5,5,5,33],"202":[69,16,69,67],"208":[98,9,98,41],"209":[5,5,5,34],"210":[71,9,71,37],"216":[107,13,107,70],"217":[6,5,6,9],"218":[74,16,74,55],"224":[107,13,107,70],"225":[6,41,6,69],"226":[76,9,76,16],"232":[109,13,109,92],"233":[6,5,6,69],"234":[79,22,79,52],"240":[109,13,109,92],"241":[6,5,6,70],"242":[80,22,80,68],"248":[111,26,111,63],"249":[7,5,7,9],"250":[82,12,82,17],"256":[113,25,113,40],"257":[7,18,7,32],"264":[125,33,125,104],"265":[7,5,7,32],"266":[82,12,82,17],"272":[125,33,125,104],"273":[7,5,7,33],"274":[83,13,83,69],"280":[124,42,124,58],"281":[8,5,8,9],"282":[93,9,93,36],"288":[132,33,132,36],"289":[8,25,8,35],"290":[95,18,95,53],"296":[137,33,137,104],"297":[8,25,8,43],"298":[97,18,97,32],"304":[137,33,137,104],"305":[8,25,8,57],"306":[107,13,107,41],"312":[142,37,142,40],"313":[8,25,8,70],"314":[107,45,107,70],"320":[147,37,147,63],"321":[8,74,8,78],"322":[109,46,109,92],"328":[147,37,147,98],"329":[8,5,8,78],"330":[111,26,111,63],"336":[147,37,147,98],"337":[8,5,8,79],"338":[113,25,113,40],"344":[156,44,156,81],"345":[9,5,9,9],"346":[113,42,113,45],"352":[175,29,175,57],"353":[9,24,9,34],"360":[181,33,181,77],"361":[9,24,9,42],"362":[113,42,113,45],"368":[181,33,181,77],"369":[9,24,9,56],"370":[117,25,117,46],"376":[184,33,184,36],"377":[9,24,9,68],"378":[117,48,117,51],"384":[193,37,193,40],"385":[9,72,9,76],"392":[198,37,198,108],"393":[9,5,9,76],"394":[117,48,117,51],"400":[198,37,198,108],"401":[9,5,9,77],"402":[120,36,120,61],"408":[203,41,203,44],"409":[10,5,10,9],"410":[120,36,120,83],"416":[208,41,208,67],"417":[10,15,10,22],"418":[121,21,121,32],"424":[208,41,208,102],"425":[10,23,10,36],"426":[125,33,125,70],"432":[208,41,208,102],"433":[10,15,10,37],"434":[133,49,133,77],"440":[121,21,121,32],"441":[10,15,10,40],"442":[133,49,133,102],"448":[220,25,220,75],"449":[10,5,10,40],"450":[133,33,133,103],"456":[220,25,220,75],"457":[10,5,10,41],"458":[137,33,137,70],"464":[117,25,117,46],"465":[11,5,11,9],"466":[138,75,138,97],"472":[228,5,228,31],"473":[11,16,11,18],"474":[143,53,143,81],"481":[11,5,11,18],"482":[143,53,143,106],"489":[11,5,11,19],"490":[143,37,143,107],"497":[12,5,12,9],"498":[172,41,172,69],"505":[12,18,12,19],"506":[172,41,172,94],"513":[12,5,12,19],"514":[172,25,172,95],"521":[12,5,12,20],"522":[175,29,175,57],"529":[13,5,13,9],"530":[181,33,181,61],"537":[13,19,13,23],"538":[181,65,181,77],"545":[13,5,13,23],"546":[185,49,185,77],"553":[13,5,13,24],"554":[185,49,185,102],"561":[4,43,14,2],"562":[185,33,185,103],"569":[4,43,14,2],"570":[189,38,189,66],"577":[4,43,14,2],"578":[189,38,189,91],"585":[4,43,14,2],"586":[194,53,194,81],"593":[4,43,14,2],"594":[194,53,194,106],"601":[4,20,14,2],"602":[194,37,194,107],"609":[4,20,14,2],"610":[198,37,198,74],"617":[4,20,14,2],"618":[199,79,199,101],"625":[15,1,15,13],"626":[204,57,204,85],"633":[15,1,15,23],"634":[204,57,204,110],"641":[16,9,16,20],"642":[204,41,204,111],"649":[16,24,16,28],"650":[219,21,219,38],"657":[16,24,16,34],"665":[17,9,17,16],"666":[219,21,219,38],"673":[17,9,17,16],"674":[220,25,220,46],"681":[18,5,18,9],"682":[220,50,220,75],"689":[18,18,18,29],"697":[18,5,18,29],"705":[18,5,18,30],"713":[19,5,19,9],"721":[19,22,19,30],"729":[19,5,19,31],"731":[19,5,19,21],"737":[19,5,19,32],"745":[15,32,20,2],"753":[15,32,20,2],"761":[15,32,20,2],"769":[15,32,20,2],"777":[15,1,20,2],"785":[15,1,20,3],"793":[21,1,21,13],"801":[21,1,21,23],"809":[22,5,22,9],"817":[22,18,22,32],"825":[22,5,22,32],"833":[22,5,22,33],"841":[23,21,23,25],"849":[23,21,23,29],"857":[24,9,24,13],"865":[24,9,24,17],"873":[24,18,24,21],"881":[24,9,24,22],"889":[24,9,24,30],"891":[24,9,24,28],"897":[24,9,24,31],"905":[23,21,23,29],"913":[23,5,25,6],"921":[23,5,25,6],"929":[26,5,26,13],"937":[26,17,26,25],"945":[26,26,26,30],"953":[26,32,26,36],"961":[26,17,26,37],"969":[26,5,26,38],"977":[21,31,27,2],"985":[21,31,27,2],"993":[21,31,27,2],"1001":[21,31,27,2],"1009":[21,31,27,2],"1017":[21,1,27,2],"1025":[21,1,27,3],"1033":[28,1,28,13],"1041":[28,1,28,23],"1049":[29,28,29,30],"1057":[29,28,29,30],"1065":[29,28,29,30],"1073":[30,16,30,20],"1081":[30,16,30,20],"1089":[30,16,30,20],"1097":[31,10,31,15],"1105":[31,24,31,43],"1113":[31,10,31,44],"1115":[31,10,31,23],"1121":[32,28,32,32],"1129":[32,28,32,43],"1137":[32,28,32,50],"1145":[32,28,32,57],"1153":[32,61,32,65],"1161":[32,69,32,73],"1169":[32,69,32,84],"1177":[32,69,32,91],"1185":[32,69,32,98],"1193":[32,68,32,99],"1201":[32,102,32,104],"1209":[32,28,32,104],"1217":[32,9,32,105],"1225":[33,20,33,26],"1233":[33,32,33,36],"1241":[33,32,33,47],"1249":[33,32,33,54],"1257":[33,32,33,66],"1265":[33,20,33,67],"1267":[33,20,33,31],"1273":[33,20,33,67],"1281":[33,20,33,67],"1289":[34,22,34,23],"1297":[34,22,34,23],"1305":[34,22,34,23],"1313":[34,25,34,26],"1321":[34,29,34,33],"1329":[34,29,34,40],"1345":[34,42,34,43],"1353":[34,42,34,45],"1369":[35,13,35,29],"1377":[35,35,35,39],"1385":[35,35,35,50],"1393":[35,35,35,57],"1401":[35,35,35,69],"1409":[35,70,35,74],"1417":[35,75,35,76],"1425":[35,70,35,77],"1433":[35,35,35,78],"1441":[35,13,35,79],"1443":[35,13,35,34],"1449":[35,13,35,80],"1457":[38,28,38,47],"1465":[38,28,38,47],"1473":[38,9,38,48],"1481":[40,27,40,29],"1489":[40,27,40,29],"1497":[40,27,40,29],"1505":[41,9,41,13],"1513":[41,17,41,21],"1521":[41,32,41,36],"1529":[41,40,41,48],"1537":[42,26,42,31],"1545":[42,40,42,44],"1553":[42,26,42,45],"1555":[42,26,42,39],"1561":[42,48,42,52],"1569":[42,56,42,60],"1577":[42,55,42,61],"1585":[42,26,42,61],"1593":[42,26,42,61],"1601":[43,23,43,24],"1609":[43,23,43,24],"1617":[43,23,43,24],"1625":[43,26,43,28],"1633":[43,31,43,41],"1641":[43,31,43,48],"1657":[43,50,43,52],"1665":[43,50,43,54],"1681":[44,29,44,39],"1689":[44,40,44,42],"1697":[44,29,44,43],"1705":[44,29,44,43],"1713":[44,29,44,43],"1721":[45,32,45,38],"1729":[45,44,45,53],"1737":[45,32,45,54],"1739":[45,32,45,43],"1745":[45,32,45,54],"1753":[45,32,45,54],"1761":[46,26,46,27],"1769":[46,26,46,27],"1777":[46,26,46,27],"1785":[46,29,46,30],"1793":[46,33,46,49],"1801":[46,33,46,56],"1817":[46,58,46,59],"1825":[46,58,46,61],"1841":[47,30,47,46],"1849":[47,47,47,48],"1857":[47,30,47,49],"1865":[47,30,47,49],"1873":[47,30,47,49],"1881":[48,21,48,27],"1889":[48,21,48,32],"1897":[48,36,48,40],"1905":[49,36,49,40],"1913":[49,36,49,40],"1921":[49,36,49,40],"1929":[50,34,50,35],"1937":[50,34,50,35],"1945":[50,34,50,35],"1953":[50,37,50,38],"1961":[50,41,50,53],"1969":[50,41,50,60],"1985":[50,62,50,63],"1993":[50,62,50,65],"2009":[51,29,51,35],"2017":[51,29,51,40],"2025":[51,41,51,53],"2033":[51,54,51,55],"2041":[51,41,51,56],"2049":[51,29,51,57],"2057":[51,61,51,70],"2065":[51,71,51,83],"2073":[51,84,51,85],"2081":[51,71,51,86],"2089":[51,61,51,87],"2097":[52,40,52,45],"2105":[52,40,52,45],"2113":[52,29,52,46],"2121":[56,25,56,33],"2129":[57,25,57,40],"2137":[57,46,57,52],"2145":[57,25,57,53],"2147":[57,25,57,45],"2153":[57,25,57,54],"2161":[63,31,63,47],"2169":[63,31,63,47],"2177":[63,31,63,47],"2185":[65,23,65,38],"2193":[66,16,66,17],"2201":[66,16,66,31],"2203":[66,16,66,29],"2209":[66,16,66,31],"2217":[66,9,66,32],"2225":[65,46,67,6],"2233":[65,46,67,6],"2241":[65,46,67,6],"2249":[65,46,67,6],"2257":[65,23,67,7],"2259":[65,23,65,45],"2265":[65,23,67,7],"2273":[65,5,67,8],"2281":[68,5,68,20],"2289":[69,16,69,17],"2297":[69,16,69,30],"2305":[69,31,69,39],"2313":[69,16,69,40],"2321":[69,43,69,44],"2329":[69,43,69,57],"2337":[69,58,69,66],"2345":[69,43,69,67],"2353":[69,16,69,67],"2361":[69,9,69,68],"2369":[68,26,70,6],"2377":[68,26,70,6],"2385":[68,26,70,6],"2393":[68,26,70,6],"2401":[68,26,70,6],"2409":[68,5,70,7],"2411":[68,5,68,25],"2417":[68,5,70,8],"2425":[71,9,71,10],"2433":[71,15,71,30],"2441":[71,15,71,37],"2449":[72,20,72,25],"2457":[72,26,72,70],"2465":[72,16,72,71],"2473":[72,16,72,71],"2481":[72,9,72,72],"2489":[73,18,73,33],"2497":[74,16,74,25],"2505":[74,29,74,35],"2513":[74,29,74,48],"2521":[74,29,74,55],"2529":[74,16,74,55],"2537":[74,9,74,56],"2545":[73,41,75,6],"2553":[73,41,75,6],"2561":[73,41,75,6],"2569":[73,41,75,6],"2577":[73,18,75,7],"2579":[73,18,73,40],"2585":[75,8,75,9],"2593":[73,18,75,10],"2601":[73,18,75,10],"2609":[73,18,75,10],"2617":[76,10,76,16],"2625":[77,18,77,33],"2633":[77,34,77,35],"2641":[77,18,77,36],"2649":[77,18,77,36],"2657":[77,9,77,37],"2665":[79,22,79,28],"2673":[79,22,79,41],"2681":[79,22,79,48],"2689":[79,51,79,52],"2697":[79,22,79,52],"2705":[79,22,79,52],"2713":[80,22,80,32],"2721":[80,35,80,39],"2729":[80,35,80,68],"2737":[80,22,80,68],"2745":[80,22,80,68],"2753":[81,15,81,30],"2761":[81,15,81,37],"2769":[81,15,81,37],"2777":[81,15,81,37],"2793":[82,12,82,15],"2801":[82,12,82,17],"2817":[83,13,83,28],"2825":[83,29,83,32],"2833":[83,13,83,33],"2841":[83,13,83,46],"2849":[83,47,83,55],"2857":[83,13,83,56],"2865":[83,59,83,69],"2873":[84,13,84,28],"2881":[84,36,84,39],"2889":[84,41,84,42],"2897":[84,13,84,43],"2899":[84,13,84,35],"2905":[84,13,84,44],"2913":[87,9,87,13],"2921":[87,9,87,20],"2929":[87,24,87,28],"2937":[87,24,87,35],"2945":[87,24,87,41],"2953":[88,9,88,13],"2961":[88,9,88,20],"2969":[88,27,88,67],"2977":[88,69,88,73],"2985":[88,9,88,74],"2987":[88,9,88,26],"2993":[88,9,88,75],"3001":[89,9,89,24],"3009":[90,13,90,17],"3017":[90,13,90,24],"3025":[90,31,90,37],"3033":[90,38,90,53],"3041":[90,55,90,56],"3049":[90,55,90,61],"3057":[90,63,90,64],"3065":[90,63,90,69],"3073":[90,71,90,72],"3081":[90,71,90,85],"3089":[90,86,90,94],"3097":[90,71,90,95],"3105":[90,31,90,96],"3113":[90,98,90,102],"3121":[90,13,90,103],"3123":[90,13,90,30],"3129":[90,13,90,104],"3137":[89,33,91,10],"3145":[89,33,91,10],"3153":[89,33,91,10],"3161":[89,33,91,10],"3169":[89,9,91,11],"3171":[89,9,89,32],"3177":[89,9,91,12],"3185":[93,9,93,24],"3193":[93,9,93,31],"3201":[93,35,93,36],"3209":[94,20,94,25],"3217":[94,26,94,70],"3225":[94,16,94,71],"3233":[94,16,94,71],"3241":[94,9,94,72],"3249":[95,5,95,9],"3257":[95,18,95,22],"3265":[95,18,95,28],"3273":[95,31,95,46],"3281":[95,31,95,53],"3289":[95,5,95,53],"3297":[95,5,95,54],"3305":[96,22,96,37],"3313":[96,38,96,42],"3321":[96,38,96,48],"3329":[96,22,96,49],"3337":[96,22,96,66],"3339":[96,22,96,64],"3345":[96,22,96,66],"3353":[96,22,96,66],"3361":[97,5,97,9],"3369":[97,18,97,22],"3377":[97,18,97,28],"3385":[97,31,97,32],"3393":[97,5,97,32],"3401":[97,5,97,33],"3409":[98,9,98,13],"3417":[98,9,98,20],"3425":[98,24,98,28],"3433":[98,24,98,35],"3441":[98,24,98,41],"3449":[99,13,99,23],"3457":[100,13,100,17],"3465":[100,13,100,24],"3473":[100,31,100,37],"3481":[100,38,100,59],"3489":[100,61,100,71],"3497":[100,61,100,85],"3505":[100,61,100,90],"3513":[100,92,100,102],"3521":[100,92,100,116],"3529":[100,92,100,121],"3537":[100,31,100,122],"3545":[100,13,100,123],"3547":[100,13,100,30],"3553":[100,13,100,124],"3561":[102,12,102,22],"3569":[102,12,102,22],"3577":[102,5,102,23],"3585":[28,45,103,2],"3593":[28,45,103,2],"3601":[28,45,103,2],"3609":[28,45,103,2],"3617":[28,45,103,2],"3625":[28,45,103,2],"3633":[28,45,103,2],"3641":[28,45,103,2],"3649":[28,45,103,2],"3657":[28,45,103,2],"3665":[28,45,103,2],"3673":[28,45,103,2],"3681":[28,45,103,2],"3689":[28,45,103,2],"3697":[28,45,103,2],"3705":[28,45,103,2],"3713":[28,45,103,2],"3721":[28,45,103,2],"3729":[28,45,103,2],"3737":[28,45,103,2],"3745":[28,45,103,2],"3753":[28,45,103,2],"3761":[28,1,103,2],"3769":[28,1,103,3],"3777":[104,1,104,13],"3785":[104,1,104,23],"3793":[105,16,105,20],"3801":[105,16,105,20],"3809":[105,16,105,20],"3817":[107,13,107,17],"3825":[107,13,107,23],"3833":[107,27,107,41],"3841":[107,45,107,49],"3849":[107,45,107,55],"3857":[107,59,107,70],"3865":[108,13,108,20],"3873":[108,13,108,20],"3881":[109,13,109,17],"3889":[109,13,109,28],"3897":[109,13,109,42],"3899":[109,13,109,40],"3905":[109,46,109,50],"3913":[109,46,109,61],"3921":[109,46,109,74],"3929":[109,78,109,92],"3937":[110,13,110,20],"3945":[110,13,110,20],"3953":[111,26,111,30],"3961":[111,26,111,41],"3969":[111,26,111,48],"3977":[111,26,111,55],"3985":[111,59,111,63],"3993":[111,67,111,71],"4001":[111,67,111,82],"4009":[111,67,111,89],"4017":[111,67,111,96],"4025":[111,66,111,97],"4033":[111,100,111,102],"4041":[111,26,111,102],"4049":[111,26,111,102],"4057":[112,20,112,26],"4065":[112,32,112,36],"4073":[112,32,112,47],"4081":[112,32,112,54],"4089":[112,32,112,66],"4097":[112,20,112,67],"4099":[112,20,112,31],"4105":[112,20,112,67],"4113":[112,20,112,67],"4121":[113,22,113,23],"4129":[113,22,113,23],"4137":[113,22,113,23],"4145":[113,25,113,26],"4153":[113,29,113,33],"4161":[113,29,113,40],"4177":[113,42,113,43],"4185":[113,42,113,45],"4201":[114,13,114,23],"4209":[114,29,114,33],"4217":[114,29,114,44],"4225":[114,29,114,51],"4233":[114,29,114,63],"4241":[114,64,114,68],"4249":[114,69,114,70],"4257":[114,64,114,71],"4265":[114,29,114,72],"4273":[114,13,114,73],"4275":[114,13,114,28],"4281":[114,13,114,74],"4289":[116,31,116,41],"4297":[116,31,116,48],"4305":[116,31,116,48],"4313":[116,31,116,48],"4321":[117,22,117,23],"4329":[117,22,117,23],"4337":[117,22,117,23],"4345":[117,25,117,26],"4353":[117,29,117,39],"4361":[117,29,117,46],"4377":[117,48,117,49],"4385":[117,48,117,51],"4401":[118,26,118,36],"4409":[118,37,118,38],"4417":[118,26,118,39],"4425":[118,26,118,39],"4433":[118,26,118,39],"4441":[120,27,120,31],"4449":[120,27,120,35],"4457":[120,36,120,50],"4465":[120,36,120,55],"4473":[120,58,120,61],"4481":[120,64,120,78],"4489":[120,64,120,83],"4497":[120,27,120,84],"4505":[120,27,120,84],"4513":[120,27,120,84],"4521":[121,21,121,24],"4529":[121,28,121,32],"4537":[122,37,122,41],"4545":[122,37,122,47],"4547":[122,37,122,45],"4553":[122,37,122,47],"4561":[122,37,122,47],"4569":[124,42,124,46],"4577":[124,42,124,58],"4585":[124,61,124,71],"4593":[125,33,125,37],"4601":[125,41,125,57],"4609":[125,41,125,70],"4617":[125,74,125,90],"4625":[125,74,125,104],"4627":[125,74,125,102],"4633":[126,33,126,49],"4641":[126,33,126,57],"4643":[126,33,126,55],"4649":[126,33,126,58],"4657":[124,72,128,26],"4665":[124,72,128,26],"4673":[124,72,128,26],"4681":[128,28,128,32],"4689":[128,28,128,44],"4697":[124,61,128,45],"4705":[128,48,128,52],"4713":[124,42,128,52],"4721":[124,42,128,52],"4729":[129,25,129,29],"4737":[129,55,129,56],"4745":[129,47,129,58],"4753":[129,72,129,76],"4761":[129,60,129,78],"4769":[130,29,130,41],"4777":[130,42,130,52],"4785":[130,29,130,53],"4793":[130,29,130,54],"4801":[131,29,131,33],"4809":[131,29,131,44],"4817":[131,50,131,56],"4825":[131,58,131,61],"4833":[131,63,131,77],"4841":[131,29,131,78],"4843":[131,29,131,49],"4849":[131,29,131,79],"4857":[132,33,132,36],"4865":[133,40,133,44],"4873":[133,40,133,48],"4881":[133,49,133,53],"4889":[133,49,133,66],"4897":[133,49,133,71],"4905":[133,74,133,77],"4913":[133,80,133,84],"4921":[133,80,133,97],"4929":[133,80,133,102],"4937":[133,33,133,104],"4945":[134,33,134,37],"4953":[134,33,134,45],"4955":[134,33,134,43],"4961":[134,33,134,46],"4969":[135,40,135,44],"4977":[135,40,135,46],"4985":[135,40,135,46],"4993":[135,33,135,47],"5001":[137,33,137,37],"5009":[137,41,137,57],"5017":[137,41,137,70],"5025":[137,74,137,90],"5033":[137,74,137,104],"5035":[137,74,137,102],"5041":[138,33,138,49],"5049":[138,33,138,62],"5057":[138,63,138,71],"5065":[138,75,138,79],"5073":[138,75,138,85],"5075":[138,75,138,83],"5081":[138,88,138,97],"5089":[138,33,138,97],"5097":[138,33,138,98],"5105":[140,29,140,33],"5113":[140,63,140,64],"5121":[140,51,140,66],"5129":[140,80,140,84],"5137":[140,68,140,86],"5145":[141,33,141,37],"5153":[141,33,141,48],"5161":[141,54,141,69],"5169":[141,71,141,74],"5177":[141,76,141,82],"5185":[141,84,141,98],"5193":[141,33,141,99],"5195":[141,33,141,53],"5201":[141,33,141,100],"5209":[142,37,142,40],"5217":[143,44,143,48],"5225":[143,44,143,52],"5233":[143,53,143,57],"5241":[143,53,143,70],"5249":[143,53,143,75],"5257":[143,78,143,81],"5265":[143,84,143,88],"5273":[143,84,143,101],"5281":[143,84,143,106],"5289":[143,37,143,108],"5297":[144,37,144,41],"5305":[144,37,144,49],"5307":[144,37,144,47],"5313":[144,37,144,50],"5321":[145,44,145,48],"5329":[145,44,145,50],"5337":[145,44,145,50],"5345":[145,37,145,51],"5353":[147,37,147,43],"5361":[147,47,147,53],"5369":[147,47,147,63],"5377":[147,67,147,71],"5385":[147,67,147,82],"5393":[147,67,147,98],"5401":[148,37,148,41],"5409":[148,37,148,52],"5417":[148,69,148,85],"5425":[148,87,148,93],"5433":[148,87,148,103],"5441":[148,104,148,105],"5449":[148,87,148,106],"5457":[148,37,148,107],"5459":[148,37,148,68],"5465":[148,37,148,108],"5473":[150,33,150,37],"5481":[150,33,150,39],"5489":[150,33,150,40],"5497":[140,88,151,30],"5505":[140,88,151,30],"5513":[140,88,151,30],"5521":[140,88,151,30],"5529":[140,88,151,30],"5537":[140,29,151,31],"5539":[140,29,140,50],"5545":[140,29,151,32],"5553":[129,80,152,26],"5561":[129,80,152,26],"5569":[129,80,152,26],"5577":[129,80,152,26],"5585":[129,25,152,27],"5587":[129,25,129,46],"5593":[129,25,152,28],"5601":[123,33,153,22],"5609":[123,33,153,22],"5617":[123,33,153,22],"5625":[123,33,153,22],"5633":[123,33,153,22],"5641":[123,33,153,22],"5649":[123,33,153,22],"5657":[123,33,153,22],"5665":[154,21,154,26],"5673":[154,27,154,30],"5681":[154,32,154,46],"5689":[154,21,154,47],"5697":[154,21,154,48],"5705":[156,44,156,48],"5713":[156,44,156,59],"5721":[156,44,156,67],"5729":[156,44,156,81],"5737":[156,84,156,88],"5745":[156,84,156,99],"5753":[156,84,156,107],"5761":[156,84,156,121],"5769":[156,84,156,138],"5777":[156,141,156,142],"5785":[156,44,156,142],"5793":[156,44,156,142],"5801":[157,39,157,45],"5809":[157,46,157,60],"5817":[157,46,157,65],"5825":[157,67,157,81],"5833":[157,67,157,86],"5841":[158,41,158,46],"5849":[159,48,159,52],"5857":[160,34,160,38],"5865":[161,35,161,36],"5873":[162,60,162,76],"5881":[162,40,162,78],"5889":[163,30,163,34],"5897":[163,30,163,45],"5905":[163,30,163,53],"5913":[163,30,163,57],"5921":[164,38,164,42],"5929":[164,38,164,53],"5937":[164,38,164,61],"5945":[164,38,164,73],"5953":[165,32,165,36],"5961":[165,32,165,47],"5969":[165,32,165,55],"5977":[165,32,165,61],"5985":[166,34,166,38],"5993":[166,34,166,49],"6001":[166,34,166,57],"6009":[166,34,166,65],"6017":[167,33,167,37],"6025":[167,33,167,48],"6033":[167,33,167,56],"6041":[167,33,167,63],"6049":[168,34,168,38],"6057":[168,34,168,49],"6065":[168,34,168,57],"6073":[168,34,168,65],"6081":[157,88,169,22],"6089":[157,35,169,23],"6097":[157,35,169,23],"6105":[157,35,169,23],"6113":[170,35,170,39],"6121":[170,43,170,50],"6129":[170,52,170,59],"6137":[170,69,170,73],"6145":[170,61,170,75],"6153":[170,31,170,76],"6155":[170,35,170,42],"6161":[170,31,170,76],"6169":[170,31,170,76],"6177":[171,21,171,24],"6185":[171,28,171,35],"6193":[172,32,172,36],"6201":[172,32,172,40],"6209":[172,41,172,45],"6217":[172,41,172,58],"6225":[172,41,172,63],"6233":[172,66,172,69],"6241":[172,72,172,76],"6249":[172,72,172,89],"6257":[172,72,172,94],"6265":[172,25,172,96],"6273":[171,37,173,22],"6281":[171,37,173,22],"6289":[171,37,173,22],"6297":[171,21,173,23],"6299":[171,21,171,27],"6305":[171,21,173,24],"6313":[175,29,175,33],"6321":[175,29,175,39],"6329":[175,43,175,57],"6337":[176,29,176,33],"6345":[176,29,176,40],"6347":[176,29,176,38],"6353":[176,29,176,41],"6361":[177,29,177,36],"6369":[177,29,177,36],"6377":[179,25,179,29],"6385":[180,29,180,33],"6393":[180,29,180,44],"6401":[180,50,180,64],"6409":[180,66,180,69],"6417":[180,71,180,87],"6425":[180,29,180,88],"6427":[180,29,180,49],"6433":[180,29,180,89],"6441":[181,33,181,37],"6449":[181,33,181,43],"6457":[181,47,181,61],"6465":[181,65,181,69],"6473":[181,73,181,77],"6481":[182,40,182,44],"6489":[182,40,182,52],"6491":[182,40,182,50],"6497":[182,40,182,52],"6505":[182,33,182,53],"6513":[184,33,184,36],"6521":[185,40,185,44],"6529":[185,40,185,48],"6537":[185,49,185,53],"6545":[185,49,185,66],"6553":[185,49,185,71],"6561":[185,74,185,77],"6569":[185,80,185,84],"6577":[185,80,185,97],"6585":[185,80,185,102],"6593":[185,33,185,104],"6601":[186,33,186,37],"6609":[186,33,186,45],"6611":[186,33,186,43],"6617":[186,33,186,46],"6625":[187,40,187,44],"6633":[187,40,187,46],"6641":[187,40,187,46],"6649":[187,33,187,47],"6657":[189,29,189,33],"6665":[189,29,189,37],"6673":[189,38,189,42],"6681":[189,38,189,55],"6689":[189,38,189,60],"6697":[189,63,189,66],"6705":[189,69,189,73],"6713":[189,69,189,86],"6721":[189,69,189,91],"6729":[189,95,189,99],"6737":[189,29,189,99],"6745":[189,29,189,100],"6753":[190,45,190,49],"6761":[190,45,190,55],"6763":[190,45,190,53],"6769":[190,45,190,55],"6777":[190,45,190,55],"6785":[191,29,191,33],"6793":[191,59,191,60],"6801":[191,51,191,62],"6809":[191,76,191,80],"6817":[191,64,191,82],"6825":[192,33,192,37],"6833":[192,33,192,48],"6841":[192,54,192,60],"6849":[192,62,192,65],"6857":[192,67,192,83],"6865":[192,33,192,84],"6867":[192,33,192,53],"6873":[192,33,192,85],"6881":[193,37,193,40],"6889":[194,44,194,48],"6897":[194,44,194,52],"6905":[194,53,194,57],"6913":[194,53,194,70],"6921":[194,53,194,75],"6929":[194,78,194,81],"6937":[194,84,194,88],"6945":[194,84,194,101],"6953":[194,84,194,106],"6961":[194,37,194,108],"6969":[195,37,195,41],"6977":[195,37,195,49],"6979":[195,37,195,47],"6985":[195,37,195,50],"6993":[196,44,196,48],"7001":[196,44,196,50],"7009":[196,44,196,50],"7017":[196,37,196,51],"7025":[198,37,198,41],"7033":[198,45,198,61],"7041":[198,45,198,74],"7049":[198,78,198,94],"7057":[198,78,198,108],"7059":[198,78,198,106],"7065":[199,37,199,53],"7073":[199,37,199,66],"7081":[199,67,199,75],"7089":[199,79,199,83],"7097":[199,79,199,89],"7099":[199,79,199,87],"7105":[199,92,199,101],"7113":[199,37,199,101],"7121":[199,37,199,102],"7129":[201,33,201,37],"7137":[201,67,201,68],"7145":[201,55,201,70],"7153":[201,84,201,88],"7161":[201,72,201,90],"7169":[202,37,202,41],"7177":[202,37,202,52],"7185":[202,58,202,73],"7193":[202,75,202,78],"7201":[202,80,202,86],"7209":[202,88,202,104],"7217":[202,37,202,105],"7219":[202,37,202,57],"7225":[202,37,202,106],"7233":[203,41,203,44],"7241":[204,48,204,52],"7249":[204,48,204,56],"7257":[204,57,204,61],"7265":[204,57,204,74],"7273":[204,57,204,79],"7281":[204,82,204,85],"7289":[204,88,204,92],"7297":[204,88,204,105],"7305":[204,88,204,110],"7313":[204,41,204,112],"7321":[205,41,205,45],"7329":[205,41,205,53],"7331":[205,41,205,51],"7337":[205,41,205,54],"7345":[206,48,206,52],"7353":[206,48,206,54],"7361":[206,48,206,54],"7369":[206,41,206,55],"7377":[208,41,208,47],"7385":[208,51,208,57],"7393":[208,51,208,67],"7401":[208,71,208,75],"7409":[208,71,208,86],"7417":[208,71,208,102],"7425":[209,41,209,45],"7433":[209,41,209,56],"7441":[209,73,209,89],"7449":[209,91,209,97],"7457":[209,91,209,107],"7465":[209,108,209,109],"7473":[209,91,209,110],"7481":[209,41,209,111],"7483":[209,41,209,72],"7489":[209,41,209,112],"7497":[211,37,211,41],"7505":[211,37,211,43],"7513":[211,37,211,44],"7521":[201,92,212,34],"7529":[201,92,212,34],"7537":[201,92,212,34],"7545":[201,92,212,34],"7553":[201,92,212,34],"7561":[201,33,212,35],"7563":[201,33,201,54],"7569":[201,33,212,36],"7577":[191,84,213,30],"7585":[191,84,213,30],"7593":[191,84,213,30],"7601":[191,84,213,30],"7609":[191,29,213,31],"7611":[191,29,191,50],"7617":[191,29,213,32],"7625":[179,35,214,26],"7633":[179,35,214,26],"7641":[179,35,214,26],"7649":[179,35,214,26],"7657":[179,35,214,26],"7665":[179,35,214,26],"7673":[179,25,214,27],"7675":[179,25,179,34],"7681":[179,25,214,28],"7689":[174,33,215,22],"7697":[174,33,215,22],"7705":[174,33,215,22],"7713":[174,33,215,22],"7721":[174,33,215,22],"7729":[174,33,215,22],"7737":[174,33,215,22],"7745":[216,21,216,26],"7753":[216,27,216,30],"7761":[216,32,216,46],"7769":[216,21,216,47],"7777":[216,21,216,48],"7793":[219,21,219,36],"7801":[219,21,219,38],"7817":[219,21,219,39],"7825":[220,25,220,26],"7833":[220,31,220,46],"7841":[220,50,220,61],"7849":[220,65,220,69],"7857":[220,65,220,75],"7865":[221,25,221,35],"7873":[221,36,221,48],"7881":[221,50,221,54],"7889":[221,50,221,67],"7897":[221,25,221,68],"7905":[221,25,221,69],"7913":[218,17,223,18],"7921":[218,17,223,18],"7929":[119,17,224,14],"7937":[119,17,224,14],"7945":[119,17,224,14],"7953":[119,17,224,14],"7961":[119,17,224,14],"7969":[119,17,224,14],"7977":[119,17,224,14],"7985":[119,17,224,14],"7993":[218,17,223,18],"8001":[119,17,224,14],"8009":[119,17,224,14],"8017":[224,15,224,21],"8025":[119,13,224,22],"8033":[119,13,224,23],"8041":[106,24,226,6],"8049":[106,24,226,6],"8057":[106,24,226,6],"8065":[106,24,226,6],"8073":[106,24,226,6],"8081":[106,24,226,6],"8089":[106,24,226,6],"8097":[106,24,226,6],"8105":[106,24,226,6],"8113":[106,24,226,6],"8121":[227,5,227,17],"8129":[227,5,227,19],"8137":[227,5,227,20],"8145":[228,5,228,13],"8153":[228,17,228,25],"8161":[228,26,228,30],"8169":[228,17,228,31],"8177":[228,5,228,32],"8185":[104,38,229,2],"8193":[104,38,229,2],"8201":[104,38,229,2],"8209":[104,38,229,2],"8217":[104,38,229,2],"8225":[104,38,229,2],"8233":[104,1,229,2],"8241":[104,1,229,3],"8249":[1,1,229,3],"8257":[1,1,229,3],"8265":[1,1,229,3],"8273":[1,1,229,3],"8281":[1,1,229,3],"8289":[1,1,229,3],"8297":[4,43,14,2],"8305":[4,43,14,2],"8313":[16,5,17,16],"8321":[15,32,20,2],"8329":[15,32,20,2],"8337":[21,31,27,2],"8345":[21,31,27,2],"8353":[32,28,32,104],"8361":[34,9,36,10],"8369":[34,9,36,10],"8377":[31,5,39,6],"8385":[42,26,42,61],"8393":[51,25,54,26],"8401":[50,21,55,22],"8409":[50,21,55,22],"8417":[56,21,58,22],"8425":[48,17,59,18],"8433":[46,13,60,14],"8441":[46,13,60,14],"8449":[43,9,61,10],"8457":[43,9,61,10],"8465":[41,5,64,6],"8473":[65,46,67,6],"8481":[65,46,67,6],"8489":[68,26,70,6],"8497":[68,26,70,6],"8505":[71,5,72,72],"8513":[73,41,75,6],"8521":[73,41,75,6],"8529":[76,5,78,6],"8537":[83,9,85,10],"8545":[82,5,86,6],"8553":[89,33,91,10],"8561":[89,33,91,10],"8569":[87,5,92,6],"8577":[93,5,94,72],"8585":[99,9,100,124],"8593":[98,5,101,6],"8601":[28,45,103,2],"8609":[28,45,103,2],"8617":[107,9,108,20],"8625":[109,9,110,20],"8633":[111,26,111,102],"8641":[113,9,115,10],"8649":[113,9,115,10],"8657":[125,29,127,30],"8665":[124,72,128,26],"8673":[124,72,128,26],"8681":[124,42,128,52],"8689":[132,29,136,30],"8697":[137,29,139,30],"8705":[142,33,146,34],"8713":[147,33,149,34],"8721":[140,88,151,30],"8729":[140,88,151,30],"8737":[129,80,152,26],"8745":[129,80,152,26],"8753":[123,33,153,22],"8761":[123,33,153,22],"8769":[156,44,156,142],"8777":[171,37,173,22],"8785":[171,37,173,22],"8793":[175,25,178,26],"8801":[181,29,183,30],"8809":[184,29,188,30],"8817":[193,33,197,34],"8825":[198,33,200,34],"8833":[203,37,207,38],"8841":[208,37,210,38],"8849":[201,92,212,34],"8857":[201,92,212,34],"8865":[191,84,213,30],"8873":[191,84,213,30],"8881":[179,35,214,26],"8889":[179,35,214,26],"8897":[174,33,215,22],"8905":[174,33,215,22],"8913":[121,17,217,18],"8921":[220,21,222,22],"8929":[218,17,223,18],"8937":[218,17,223,18],"8945":[119,17,224,14],"8953":[119,17,224,14],"8961":[117,9,225,10],"8969":[117,9,225,10],"8977":[106,24,226,6],"8985":[106,24,226,6],"8993":[104,38,229,2],"9001":[104,38,229,2],"9009":[1,1,229,3],"9017":[1,1,229,3],"nBranches":118,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/connection/repl_set/strategies/ping_strategy.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/connection/repl_set/strategies/ping_strategy_jalangi_.js","code":"var Server = require(\"../../server\").Server\n  , format = require('util').format;\n\n// The ping strategy uses pings each server and records the\n// elapsed time for the server so it can pick a server based on lowest\n// return time for the db command {ping:true}\nvar PingStrategy = exports.PingStrategy = function(replicaset, secondaryAcceptableLatencyMS) {\n  this.replicaset = replicaset;\n  this.secondaryAcceptableLatencyMS = secondaryAcceptableLatencyMS;\n  this.state = 'disconnected';\n  // Interval of ping attempts\n  this.pingInterval = replicaset.options.socketOptions.pingInterval || 5000;\n  // Timeout for ping response, default - no timeout\n  this.pingTimeout = replicaset.options.socketOptions.pingTimeout || null;\n  // Class instance\n  this.Db = require(\"../../../db\").Db;\n  // Active db connections\n  this.dbs = {};\n  // Current server index\n  this.index = 0;\n  // Logger api\n  this.Logger = null;\n}\n\n// Starts any needed code\nPingStrategy.prototype.start = function(callback) {\n  // already running?\n  if ('connected' == this.state) return;\n\n  this.state = 'connected';\n\n  // Start ping server\n  this._pingServer(callback);\n}\n\n// Stops and kills any processes running\nPingStrategy.prototype.stop = function(callback) {\n  // Stop the ping process\n  this.state = 'disconnected';\n\n  // Stop all the server instances\n  for(var key in this.dbs) {\n    this.dbs[key].close();\n  }\n\n  // optional callback\n  callback && callback(null, null);\n}\n\nPingStrategy.prototype.checkoutConnection = function(tags, secondaryCandidates) {\n  // Servers are picked based on the lowest ping time and then servers that lower than that + secondaryAcceptableLatencyMS\n  // Create a list of candidat servers, containing the primary if available\n  var candidateServers = [];\n  var self = this;\n\n  // If we have not provided a list of candidate servers use the default setup\n  if(!Array.isArray(secondaryCandidates)) {\n    candidateServers = this.replicaset._state.master != null ? [this.replicaset._state.master] : [];\n    // Add all the secondaries\n    var keys = Object.keys(this.replicaset._state.secondaries);\n    for(var i = 0; i < keys.length; i++) {\n      candidateServers.push(this.replicaset._state.secondaries[keys[i]])\n    }\n  } else {\n    candidateServers = secondaryCandidates;\n  }\n\n  // Final list of eligable server\n  var finalCandidates = [];\n\n  // If we have tags filter by tags\n  if(tags != null && typeof tags == 'object') {\n    // If we have an array or single tag selection\n    var tagObjects = Array.isArray(tags) ? tags : [tags];\n    // Iterate over all tags until we find a candidate server\n    for(var _i = 0; _i < tagObjects.length; _i++) {\n      // Grab a tag object\n      var tagObject = tagObjects[_i];\n      // Matching keys\n      var matchingKeys = Object.keys(tagObject);\n      // Remove any that are not tagged correctly\n      for(var i = 0; i < candidateServers.length; i++) {\n        var server = candidateServers[i];\n        // If we have tags match\n        if(server.tags != null) {\n          var matching = true;\n\n          // Ensure we have all the values\n          for(var j = 0; j < matchingKeys.length; j++) {\n            if(server.tags[matchingKeys[j]] != tagObject[matchingKeys[j]]) {\n              matching = false;\n              break;\n            }\n          }\n\n          // If we have a match add it to the list of matching servers\n          if(matching) {\n            finalCandidates.push(server);\n          }\n        }\n      }\n    }\n  } else {\n    // Final array candidates\n    var finalCandidates = candidateServers;\n  }\n\n  // Filter out any non-connected servers\n  finalCandidates = finalCandidates.filter(function(s) {\n    return s.isConnected();\n  })\n\n  // Sort by ping time\n  finalCandidates.sort(function(a, b) {\n    return a.runtimeStats['pingMs'] > b.runtimeStats['pingMs'];\n  });\n\n  if(0 === finalCandidates.length)\n    return new Error(\"No replica set members available for query\");\n\n  // find lowest server with a ping time\n  var lowest = finalCandidates.filter(function (server) {\n    return undefined != server.runtimeStats.pingMs;\n  })[0];\n\n  if(!lowest) {\n    lowest = finalCandidates[0];\n  }\n\n  // convert to integer\n  var lowestPing = lowest.runtimeStats.pingMs | 0;\n  \n  // determine acceptable latency\n  var acceptable = lowestPing + this.secondaryAcceptableLatencyMS;\n\n  // remove any server responding slower than acceptable\n  var len = finalCandidates.length;\n  while(len--) {\n    if(finalCandidates[len].runtimeStats['pingMs'] > acceptable) {\n      finalCandidates.splice(len, 1);\n    }\n  }\n\n  if(self.logger && self.logger.debug) {    \n    self.logger.debug(\"Ping strategy selection order for tags\", tags);\n    finalCandidates.forEach(function(c) {\n      self.logger.debug(format(\"%s:%s = %s ms\", c.host, c.port, c.runtimeStats['pingMs']), null);\n    })    \n  }\n\n  // If no candidates available return an error\n  if(finalCandidates.length == 0)\n    return new Error(\"No replica set members available for query\");\n\n  // Ensure no we don't overflow\n  this.index = this.index % finalCandidates.length\n  // Pick a random acceptable server  \n  var connection = finalCandidates[this.index].checkoutReader();\n  // Point to next candidate (round robin style)\n  this.index = this.index + 1;\n\n  if(self.logger && self.logger.debug) {    \n    if(connection)\n      self.logger.debug(format(\"picked server %s:%s\", connection.socketOptions.host, connection.socketOptions.port));\n  }\n\n  return connection;\n}\n\nPingStrategy.prototype._pingServer = function(callback) {\n  var self = this;\n\n  // Ping server function\n  var pingFunction = function() {\n    // Our state changed to disconnected or destroyed return\n    if(self.state == 'disconnected' || self.state == 'destroyed') return;\n    // If the replicaset is destroyed return\n    if(self.replicaset.isDestroyed() || self.replicaset._serverState == 'disconnected') return\n\n    // Create a list of all servers we can send the ismaster command to\n    var allServers = self.replicaset._state.master != null ? [self.replicaset._state.master] : [];\n\n    // Secondary keys\n    var keys = Object.keys(self.replicaset._state.secondaries);\n    // Add all secondaries\n    for(var i = 0; i < keys.length; i++) {\n      allServers.push(self.replicaset._state.secondaries[keys[i]]);\n    }\n\n    // Number of server entries\n    var numberOfEntries = allServers.length;\n\n    // We got keys\n    for(var i = 0; i < allServers.length; i++) {\n\n      // We got a server instance\n      var server = allServers[i];\n\n      // Create a new server object, avoid using internal connections as they might\n      // be in an illegal state\n      new function(serverInstance) {\n        var _db = self.dbs[serverInstance.host + \":\" + serverInstance.port];\n        // If we have a db\n        if(_db != null) {\n          // Startup time of the command\n          var startTime = Date.now();\n\n          // Execute ping command in own scope\n          var _ping = function(__db, __serverInstance) {\n\n            // Server unavailable. Checks only if pingTimeout defined & greater than 0\n            var _failTimer = self.pingTimeout ? setTimeout(function () {\n              if(null != __serverInstance.runtimeStats && __serverInstance.isConnected()) {\n                __serverInstance.close();\n              }\n            }, self.pingTimeout) : null;\n\n            // Execute ping on this connection\n            __db.executeDbCommand({ping:1}, {failFast:true}, function(err) {\n\n              // Server available\n              clearTimeout(_failTimer);\n\n              // Emit the ping\n              self.replicaset.emit(\"ping\", err, serverInstance);\n\n              if(err) {\n                delete self.dbs[__db.serverConfig.host + \":\" + __db.serverConfig.port];\n                __db.close();\n                return done();\n              }\n\n              if(null != __serverInstance.runtimeStats && __serverInstance.isConnected()) {\n                __serverInstance.runtimeStats['pingMs'] = Date.now() - startTime;\n              }\n\n              __db.executeDbCommand({ismaster:1}, {failFast:true}, function(err, result) {\n                // Emit the ping\n                self.replicaset.emit(\"ping_ismaster\", err, result, serverInstance);\n\n                if(err) {\n                  delete self.dbs[__db.serverConfig.host + \":\" + __db.serverConfig.port];\n                  __db.close();\n                  return done();\n                }\n\n                // Process the ismaster for the server\n                if(result && result.documents && self.replicaset.processIsMaster) {\n                  self.replicaset.processIsMaster(__serverInstance, result.documents[0]);\n                }\n\n                // Done with the pinging\n                done();\n              });\n            });            \n          };\n          // Ping\n          _ping(_db, serverInstance);\n        } else {\n          var connectTimeoutMS = self.replicaset.options.socketOptions \n            ? self.replicaset.options.socketOptions.connectTimeoutMS : 0\n\n          // Create a new master connection\n          var _server = new Server(serverInstance.host, serverInstance.port, {\n            auto_reconnect: false,\n            returnIsMasterResults: true,\n            slaveOk: true,\n            poolSize: 1,\n            socketOptions: { connectTimeoutMS: connectTimeoutMS },\n            ssl: self.replicaset.options.ssl,\n            sslValidate: self.replicaset.options.sslValidate,\n            sslCA: self.replicaset.options.sslCA,\n            sslCert: self.replicaset.options.sslCert,\n            sslKey: self.replicaset.options.sslKey,\n            sslPass: self.replicaset.options.sslPass\n          });\n\n          // Create Db instance        \n          var _db = new self.Db('local', _server, { safe: true });\n          _db.on(\"close\", function() {\n            delete self.dbs[this.serverConfig.host + \":\" + this.serverConfig.port];\n          })\n\n          var _ping = function(__db, __serverInstance) {\n            if(self.state == 'disconnected') {\n              self.stop();\n              return;\n            }\n\n            __db.open(function(err, db) {  \n              // Emit ping connect\n              self.replicaset.emit(\"ping_connect\", err, __serverInstance);\n\n              if(self.state == 'disconnected' && __db != null) {\n                return __db.close();\n              }\n\n              if(err) {\n                delete self.dbs[__db.serverConfig.host + \":\" + __db.serverConfig.port];\n                __db.close();\n                return done();\n              }\n\n              // Save instance\n              self.dbs[__db.serverConfig.host + \":\" + __db.serverConfig.port] = __db;\n\n              // Startup time of the command\n              var startTime = Date.now();\n\n              // Execute ping on this connection\n              __db.executeDbCommand({ping:1}, {failFast:true}, function(err) {\n                self.replicaset.emit(\"ping\", err, __serverInstance);\n                \n                if(err) {\n                  delete self.dbs[__db.serverConfig.host + \":\" + __db.serverConfig.port];\n                  __db.close();\n                  return done();\n                }\n\n                if(null != __serverInstance.runtimeStats && __serverInstance.isConnected()) {\n                  __serverInstance.runtimeStats['pingMs'] = Date.now() - startTime;\n                }\n\n                __db.executeDbCommand({ismaster:1}, {failFast:true}, function(err, result) {\n                  self.replicaset.emit(\"ping_ismaster\", err, result, __serverInstance);\n\n                  if(err) {\n                    delete self.dbs[__db.serverConfig.host + \":\" + __db.serverConfig.port];\n                    __db.close();\n                    return done();\n                  }\n    \n                  // Process the ismaster for the server\n                  if(result && result.documents && self.replicaset.processIsMaster) {\n                    self.replicaset.processIsMaster(__serverInstance, result.documents[0]);\n                  }\n\n                  // Done with the pinging\n                  done();\n                });\n              });\n            });            \n          };\n\n          // Ping the server\n          _ping(_db, serverInstance);\n        }\n\n        function done() {\n          // Adjust the number of checks\n          numberOfEntries--;\n\n          // If we are done with all results coming back trigger ping again\n          if(0 === numberOfEntries && 'connected' == self.state) {\n            setTimeout(pingFunction, self.pingInterval);\n          }\n        }\n      }(server);\n    }\n  }\n\n  // Start pingFunction\n  pingFunction();\n\n  callback && callback(null);\n}\n"};
jalangiLabel2214:
    while (true) {
        try {
            J$.Se(8249, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/connection/repl_set/strategies/ping_strategy_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/connection/repl_set/strategies/ping_strategy.js');
            J$.N(8257, '__secret__S$', __secret__S$, 0);
            J$.N(8265, '__secret__traits__', __secret__traits__, 0);
            J$.N(8273, 'Server', Server, 0);
            J$.N(8281, 'format', format, 0);
            J$.N(8289, 'PingStrategy', PingStrategy, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var Server = J$.X1(153, J$.W(145, 'Server', J$.G(105, J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, '../../server', 21, false)), 'Server', 0), Server, 3)), format = J$.X1(169, J$.W(161, 'format', J$.G(137, J$.F(129, J$.R(113, 'require', require, 2), 0)(J$.T(121, 'util', 21, false)), 'format', 0), format, 3));
            var PingStrategy = J$.X1(617, J$.W(609, 'PingStrategy', J$.P(601, J$.R(177, 'exports', exports, 2), 'PingStrategy', J$.T(593, function (replicaset, secondaryAcceptableLatencyMS) {
                jalangiLabel2193:
                    while (true) {
                        try {
                            J$.Fe(561, arguments.callee, this, arguments);
                            arguments = J$.N(569, 'arguments', arguments, 4);
                            replicaset = J$.N(577, 'replicaset', replicaset, 4);
                            secondaryAcceptableLatencyMS = J$.N(585, 'secondaryAcceptableLatencyMS', secondaryAcceptableLatencyMS, 4);
                            J$.X1(209, J$.P(201, J$.R(185, 'this', this, 0), 'replicaset', J$.R(193, 'replicaset', replicaset, 0), 0));
                            J$.X1(241, J$.P(233, J$.R(217, 'this', this, 0), 'secondaryAcceptableLatencyMS', J$.R(225, 'secondaryAcceptableLatencyMS', secondaryAcceptableLatencyMS, 0), 0));
                            J$.X1(273, J$.P(265, J$.R(249, 'this', this, 0), 'state', J$.T(257, 'disconnected', 21, false), 0));
                            J$.X1(337, J$.P(329, J$.R(281, 'this', this, 0), 'pingInterval', J$.C(8, J$.G(313, J$.G(305, J$.G(297, J$.R(289, 'replicaset', replicaset, 0), 'options', 0), 'socketOptions', 0), 'pingInterval', 0)) ? J$._() : J$.T(321, 5000, 22, false), 0));
                            J$.X1(401, J$.P(393, J$.R(345, 'this', this, 0), 'pingTimeout', J$.C(16, J$.G(377, J$.G(369, J$.G(361, J$.R(353, 'replicaset', replicaset, 0), 'options', 0), 'socketOptions', 0), 'pingTimeout', 0)) ? J$._() : J$.T(385, null, 25, false), 0));
                            J$.X1(457, J$.P(449, J$.R(409, 'this', this, 0), 'Db', J$.G(441, J$.F(433, J$.R(417, 'require', require, 2), 0)(J$.T(425, '../../../db', 21, false)), 'Db', 0), 0));
                            J$.X1(489, J$.P(481, J$.R(465, 'this', this, 0), 'dbs', J$.T(473, {}, 11, false), 0));
                            J$.X1(521, J$.P(513, J$.R(497, 'this', this, 0), 'index', J$.T(505, 0, 22, false), 0));
                            J$.X1(553, J$.P(545, J$.R(529, 'this', this, 0), 'Logger', J$.T(537, null, 25, false), 0));
                        } catch (J$e) {
                            J$.Ex(8297, J$e);
                        } finally {
                            if (J$.Fr(8305))
                                continue jalangiLabel2193;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 561), 0), PingStrategy, 3));
            J$.X1(785, J$.P(777, J$.G(633, J$.R(625, 'PingStrategy', PingStrategy, 1), 'prototype', 0), 'start', J$.T(769, function (callback) {
                jalangiLabel2194:
                    while (true) {
                        try {
                            J$.Fe(745, arguments.callee, this, arguments);
                            arguments = J$.N(753, 'arguments', arguments, 4);
                            callback = J$.N(761, 'callback', callback, 4);
                            if (J$.X1(8313, J$.C(24, J$.B(10, '==', J$.T(641, 'connected', 21, false), J$.G(657, J$.R(649, 'this', this, 0), 'state', 0), 0))))
                                return J$.X1(673, J$.Rt(665, undefined));
                            J$.X1(705, J$.P(697, J$.R(681, 'this', this, 0), 'state', J$.T(689, 'connected', 21, false), 0));
                            J$.X1(737, J$.M(729, J$.R(713, 'this', this, 0), '_pingServer', 0)(J$.R(721, 'callback', callback, 0)));
                        } catch (J$e) {
                            J$.Ex(8321, J$e);
                        } finally {
                            if (J$.Fr(8329))
                                continue jalangiLabel2194;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 745), 0));
            J$.X1(1025, J$.P(1017, J$.G(801, J$.R(793, 'PingStrategy', PingStrategy, 1), 'prototype', 0), 'stop', J$.T(1009, function (callback) {
                jalangiLabel2195:
                    while (true) {
                        try {
                            J$.Fe(977, arguments.callee, this, arguments);
                            arguments = J$.N(985, 'arguments', arguments, 4);
                            callback = J$.N(993, 'callback', callback, 4);
                            J$.N(1001, 'key', key, 0);
                            J$.X1(833, J$.P(825, J$.R(809, 'this', this, 0), 'state', J$.T(817, 'disconnected', 21, false), 0));
                            for (J$._tm_p in J$.H(905, J$.G(849, J$.R(841, 'this', this, 0), 'dbs', 0))) {
                                var key = J$.X1(921, J$.W(913, 'key', J$._tm_p, key, 1));
                                {
                                    {
                                        J$.X1(897, J$.M(889, J$.G(881, J$.G(865, J$.R(857, 'this', this, 0), 'dbs', 0), J$.R(873, 'key', key, 0), 4), 'close', 0)());
                                    }
                                }
                            }
                            J$.X1(969, J$.C(32, J$.R(929, 'callback', callback, 0)) ? J$.F(961, J$.R(937, 'callback', callback, 0), 0)(J$.T(945, null, 25, false), J$.T(953, null, 25, false)) : J$._());
                        } catch (J$e) {
                            J$.Ex(8337, J$e);
                        } finally {
                            if (J$.Fr(8345))
                                continue jalangiLabel2195;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 977), 0));
            J$.X1(3769, J$.P(3761, J$.G(1041, J$.R(1033, 'PingStrategy', PingStrategy, 1), 'prototype', 0), 'checkoutConnection', J$.T(3753, function (tags, secondaryCandidates) {
                jalangiLabel2200:
                    while (true) {
                        try {
                            J$.Fe(3585, arguments.callee, this, arguments);
                            arguments = J$.N(3593, 'arguments', arguments, 4);
                            tags = J$.N(3601, 'tags', tags, 4);
                            secondaryCandidates = J$.N(3609, 'secondaryCandidates', secondaryCandidates, 4);
                            J$.N(3617, 'candidateServers', candidateServers, 0);
                            J$.N(3625, 'self', self, 0);
                            J$.N(3633, 'keys', keys, 0);
                            J$.N(3641, 'i', i, 0);
                            J$.N(3649, 'finalCandidates', finalCandidates, 0);
                            J$.N(3657, 'tagObjects', tagObjects, 0);
                            J$.N(3665, '_i', _i, 0);
                            J$.N(3673, 'tagObject', tagObject, 0);
                            J$.N(3681, 'matchingKeys', matchingKeys, 0);
                            J$.N(3689, 'server', server, 0);
                            J$.N(3697, 'matching', matching, 0);
                            J$.N(3705, 'j', j, 0);
                            J$.N(3713, 'lowest', lowest, 0);
                            J$.N(3721, 'lowestPing', lowestPing, 0);
                            J$.N(3729, 'acceptable', acceptable, 0);
                            J$.N(3737, 'len', len, 0);
                            J$.N(3745, 'connection', connection, 0);
                            var candidateServers = J$.X1(1065, J$.W(1057, 'candidateServers', J$.T(1049, [], 10, false), candidateServers, 1));
                            var self = J$.X1(1089, J$.W(1081, 'self', J$.R(1073, 'this', this, 0), self, 1));
                            if (J$.X1(8377, J$.C(56, J$.U(18, '!', J$.M(1113, J$.R(1097, 'Array', Array, 2), 'isArray', 0)(J$.R(1105, 'secondaryCandidates', secondaryCandidates, 0)))))) {
                                J$.X1(1217, candidateServers = J$.W(1209, 'candidateServers', J$.X1(8353, J$.C(40, J$.B(26, '!=', J$.G(1145, J$.G(1137, J$.G(1129, J$.R(1121, 'this', this, 0), 'replicaset', 0), '_state', 0), 'master', 0), J$.T(1153, null, 25, false), 0))) ? J$.T(1193, [J$.G(1185, J$.G(1177, J$.G(1169, J$.R(1161, 'this', this, 0), 'replicaset', 0), '_state', 0), 'master', 0)], 10, false) : J$.T(1201, [], 10, false), candidateServers, 0));
                                var keys = J$.X1(1281, J$.W(1273, 'keys', J$.M(1265, J$.R(1225, 'Object', Object, 2), 'keys', 0)(J$.G(1257, J$.G(1249, J$.G(1241, J$.R(1233, 'this', this, 0), 'replicaset', 0), '_state', 0), 'secondaries', 0)), keys, 1));
                                for (var i = J$.X1(1305, J$.W(1297, 'i', J$.T(1289, 0, 22, false), i, 1)); J$.X1(8361, J$.C(48, J$.B(34, '<', J$.R(1313, 'i', i, 0), J$.G(1329, J$.R(1321, 'keys', keys, 0), 'length', 0), 0))); J$.X1(8369, J$.B(58, '-', i = J$.W(1353, 'i', J$.B(50, '+', J$.U(42, '+', J$.R(1345, 'i', i, 0)), J$.T(1337, 1, 22, false), 0), i, 0), J$.T(1361, 1, 22, false), 0))) {
                                    J$.X1(1449, J$.M(1441, J$.R(1369, 'candidateServers', candidateServers, 0), 'push', 0)(J$.G(1433, J$.G(1401, J$.G(1393, J$.G(1385, J$.R(1377, 'this', this, 0), 'replicaset', 0), '_state', 0), 'secondaries', 0), J$.G(1425, J$.R(1409, 'keys', keys, 0), J$.R(1417, 'i', i, 0), 4), 4)));
                                }
                            } else {
                                J$.X1(1473, candidateServers = J$.W(1465, 'candidateServers', J$.R(1457, 'secondaryCandidates', secondaryCandidates, 0), candidateServers, 0));
                            }
                            var finalCandidates = J$.X1(1497, J$.W(1489, 'finalCandidates', J$.T(1481, [], 10, false), finalCandidates, 1));
                            if (J$.X1(8465, J$.C(128, J$.C(64, J$.B(66, '!=', J$.R(1505, 'tags', tags, 0), J$.T(1513, null, 25, false), 0)) ? J$.B(82, '==', J$.U(74, 'typeof', J$.R(1521, 'tags', tags, 0)), J$.T(1529, 'object', 21, false), 0) : J$._()))) {
                                var tagObjects = J$.X1(1593, J$.W(1585, 'tagObjects', J$.X1(8385, J$.C(72, J$.M(1553, J$.R(1537, 'Array', Array, 2), 'isArray', 0)(J$.R(1545, 'tags', tags, 0)))) ? J$.R(1561, 'tags', tags, 0) : J$.T(1577, [J$.R(1569, 'tags', tags, 0)], 10, false), tagObjects, 1));
                                for (var _i = J$.X1(1617, J$.W(1609, '_i', J$.T(1601, 0, 22, false), _i, 1)); J$.X1(8449, J$.C(120, J$.B(90, '<', J$.R(1625, '_i', _i, 0), J$.G(1641, J$.R(1633, 'tagObjects', tagObjects, 0), 'length', 0), 0))); J$.X1(8457, J$.B(114, '-', _i = J$.W(1665, '_i', J$.B(106, '+', J$.U(98, '+', J$.R(1657, '_i', _i, 0)), J$.T(1649, 1, 22, false), 0), _i, 0), J$.T(1673, 1, 22, false), 0))) {
                                    var tagObject = J$.X1(1713, J$.W(1705, 'tagObject', J$.G(1697, J$.R(1681, 'tagObjects', tagObjects, 0), J$.R(1689, '_i', _i, 0), 4), tagObject, 1));
                                    var matchingKeys = J$.X1(1753, J$.W(1745, 'matchingKeys', J$.M(1737, J$.R(1721, 'Object', Object, 2), 'keys', 0)(J$.R(1729, 'tagObject', tagObject, 0)), matchingKeys, 1));
                                    for (var i = J$.X1(1777, J$.W(1769, 'i', J$.T(1761, 0, 22, false), i, 1)); J$.X1(8433, J$.C(112, J$.B(122, '<', J$.R(1785, 'i', i, 0), J$.G(1801, J$.R(1793, 'candidateServers', candidateServers, 0), 'length', 0), 0))); J$.X1(8441, J$.B(146, '-', i = J$.W(1825, 'i', J$.B(138, '+', J$.U(130, '+', J$.R(1817, 'i', i, 0)), J$.T(1809, 1, 22, false), 0), i, 0), J$.T(1833, 1, 22, false), 0))) {
                                        var server = J$.X1(1873, J$.W(1865, 'server', J$.G(1857, J$.R(1841, 'candidateServers', candidateServers, 0), J$.R(1849, 'i', i, 0), 4), server, 1));
                                        if (J$.X1(8425, J$.C(104, J$.B(154, '!=', J$.G(1889, J$.R(1881, 'server', server, 0), 'tags', 0), J$.T(1897, null, 25, false), 0)))) {
                                            var matching = J$.X1(1921, J$.W(1913, 'matching', J$.T(1905, true, 23, false), matching, 1));
                                            for (var j = J$.X1(1945, J$.W(1937, 'j', J$.T(1929, 0, 22, false), j, 1)); J$.X1(8401, J$.C(88, J$.B(162, '<', J$.R(1953, 'j', j, 0), J$.G(1969, J$.R(1961, 'matchingKeys', matchingKeys, 0), 'length', 0), 0))); J$.X1(8409, J$.B(186, '-', j = J$.W(1993, 'j', J$.B(178, '+', J$.U(170, '+', J$.R(1985, 'j', j, 0)), J$.T(1977, 1, 22, false), 0), j, 0), J$.T(2001, 1, 22, false), 0))) {
                                                if (J$.X1(8393, J$.C(80, J$.B(194, '!=', J$.G(2049, J$.G(2017, J$.R(2009, 'server', server, 0), 'tags', 0), J$.G(2041, J$.R(2025, 'matchingKeys', matchingKeys, 0), J$.R(2033, 'j', j, 0), 4), 4), J$.G(2089, J$.R(2057, 'tagObject', tagObject, 0), J$.G(2081, J$.R(2065, 'matchingKeys', matchingKeys, 0), J$.R(2073, 'j', j, 0), 4), 4), 0)))) {
                                                    J$.X1(2113, matching = J$.W(2105, 'matching', J$.T(2097, false, 23, false), matching, 0));
                                                    break;
                                                }
                                            }
                                            if (J$.X1(8417, J$.C(96, J$.R(2121, 'matching', matching, 0)))) {
                                                J$.X1(2153, J$.M(2145, J$.R(2129, 'finalCandidates', finalCandidates, 0), 'push', 0)(J$.R(2137, 'server', server, 0)));
                                            }
                                        }
                                    }
                                }
                            } else {
                                var finalCandidates = J$.X1(2177, J$.W(2169, 'finalCandidates', J$.R(2161, 'candidateServers', candidateServers, 0), finalCandidates, 1));
                            }
                            J$.X1(2273, finalCandidates = J$.W(2265, 'finalCandidates', J$.M(2257, J$.R(2185, 'finalCandidates', finalCandidates, 0), 'filter', 0)(J$.T(2249, function (s) {
                                jalangiLabel2196:
                                    while (true) {
                                        try {
                                            J$.Fe(2225, arguments.callee, this, arguments);
                                            arguments = J$.N(2233, 'arguments', arguments, 4);
                                            s = J$.N(2241, 's', s, 4);
                                            return J$.X1(2217, J$.Rt(2209, J$.M(2201, J$.R(2193, 's', s, 0), 'isConnected', 0)()));
                                        } catch (J$e) {
                                            J$.Ex(8473, J$e);
                                        } finally {
                                            if (J$.Fr(8481))
                                                continue jalangiLabel2196;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 2225)), finalCandidates, 0));
                            J$.X1(2417, J$.M(2409, J$.R(2281, 'finalCandidates', finalCandidates, 0), 'sort', 0)(J$.T(2401, function (a, b) {
                                jalangiLabel2197:
                                    while (true) {
                                        try {
                                            J$.Fe(2369, arguments.callee, this, arguments);
                                            arguments = J$.N(2377, 'arguments', arguments, 4);
                                            a = J$.N(2385, 'a', a, 4);
                                            b = J$.N(2393, 'b', b, 4);
                                            return J$.X1(2361, J$.Rt(2353, J$.B(202, '>', J$.G(2313, J$.G(2297, J$.R(2289, 'a', a, 0), 'runtimeStats', 0), J$.T(2305, 'pingMs', 21, false), 4), J$.G(2345, J$.G(2329, J$.R(2321, 'b', b, 0), 'runtimeStats', 0), J$.T(2337, 'pingMs', 21, false), 4), 0)));
                                        } catch (J$e) {
                                            J$.Ex(8489, J$e);
                                        } finally {
                                            if (J$.Fr(8497))
                                                continue jalangiLabel2197;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 2369)));
                            if (J$.X1(8505, J$.C(136, J$.B(210, '===', J$.T(2425, 0, 22, false), J$.G(2441, J$.R(2433, 'finalCandidates', finalCandidates, 0), 'length', 0), 0))))
                                return J$.X1(2481, J$.Rt(2473, J$.F(2465, J$.R(2449, 'Error', Error, 2), 1)(J$.T(2457, 'No replica set members available for query', 21, false))));
                            var lowest = J$.X1(2609, J$.W(2601, 'lowest', J$.G(2593, J$.M(2577, J$.R(2489, 'finalCandidates', finalCandidates, 0), 'filter', 0)(J$.T(2569, function (server) {
                                jalangiLabel2198:
                                    while (true) {
                                        try {
                                            J$.Fe(2545, arguments.callee, this, arguments);
                                            arguments = J$.N(2553, 'arguments', arguments, 4);
                                            server = J$.N(2561, 'server', server, 4);
                                            return J$.X1(2537, J$.Rt(2529, J$.B(218, '!=', J$.T(2497, undefined, 24, false), J$.G(2521, J$.G(2513, J$.R(2505, 'server', server, 0), 'runtimeStats', 0), 'pingMs', 0), 0)));
                                        } catch (J$e) {
                                            J$.Ex(8513, J$e);
                                        } finally {
                                            if (J$.Fr(8521))
                                                continue jalangiLabel2198;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 2545)), J$.T(2585, 0, 22, false), 4), lowest, 1));
                            if (J$.X1(8529, J$.C(144, J$.U(226, '!', J$.R(2617, 'lowest', lowest, 0))))) {
                                J$.X1(2657, lowest = J$.W(2649, 'lowest', J$.G(2641, J$.R(2625, 'finalCandidates', finalCandidates, 0), J$.T(2633, 0, 22, false), 4), lowest, 0));
                            }
                            var lowestPing = J$.X1(2705, J$.W(2697, 'lowestPing', J$.B(234, '|', J$.G(2681, J$.G(2673, J$.R(2665, 'lowest', lowest, 0), 'runtimeStats', 0), 'pingMs', 0), J$.T(2689, 0, 22, false), 0), lowestPing, 1));
                            var acceptable = J$.X1(2745, J$.W(2737, 'acceptable', J$.B(242, '+', J$.R(2713, 'lowestPing', lowestPing, 0), J$.G(2729, J$.R(2721, 'this', this, 0), 'secondaryAcceptableLatencyMS', 0), 0), acceptable, 1));
                            var len = J$.X1(2777, J$.W(2769, 'len', J$.G(2761, J$.R(2753, 'finalCandidates', finalCandidates, 0), 'length', 0), len, 1));
                            while (J$.X1(8545, J$.C(160, J$.B(266, '+', len = J$.W(2801, 'len', J$.B(258, '-', J$.U(250, '+', J$.R(2793, 'len', len, 0)), J$.T(2785, 1, 22, false), 0), len, 0), J$.T(2809, 1, 22, false), 0)))) {
                                if (J$.X1(8537, J$.C(152, J$.B(274, '>', J$.G(2857, J$.G(2841, J$.G(2833, J$.R(2817, 'finalCandidates', finalCandidates, 0), J$.R(2825, 'len', len, 0), 4), 'runtimeStats', 0), J$.T(2849, 'pingMs', 21, false), 4), J$.R(2865, 'acceptable', acceptable, 0), 0)))) {
                                    J$.X1(2905, J$.M(2897, J$.R(2873, 'finalCandidates', finalCandidates, 0), 'splice', 0)(J$.R(2881, 'len', len, 0), J$.T(2889, 1, 22, false)));
                                }
                            }
                            if (J$.X1(8569, J$.C(176, J$.C(168, J$.G(2921, J$.R(2913, 'self', self, 0), 'logger', 0)) ? J$.G(2945, J$.G(2937, J$.R(2929, 'self', self, 0), 'logger', 0), 'debug', 0) : J$._()))) {
                                J$.X1(2993, J$.M(2985, J$.G(2961, J$.R(2953, 'self', self, 0), 'logger', 0), 'debug', 0)(J$.T(2969, 'Ping strategy selection order for tags', 21, false), J$.R(2977, 'tags', tags, 0)));
                                J$.X1(3177, J$.M(3169, J$.R(3001, 'finalCandidates', finalCandidates, 0), 'forEach', 0)(J$.T(3161, function (c) {
                                    jalangiLabel2199:
                                        while (true) {
                                            try {
                                                J$.Fe(3137, arguments.callee, this, arguments);
                                                arguments = J$.N(3145, 'arguments', arguments, 4);
                                                c = J$.N(3153, 'c', c, 4);
                                                J$.X1(3129, J$.M(3121, J$.G(3017, J$.R(3009, 'self', self, 0), 'logger', 0), 'debug', 0)(J$.F(3105, J$.R(3025, 'format', format, 1), 0)(J$.T(3033, '%s:%s = %s ms', 21, false), J$.G(3049, J$.R(3041, 'c', c, 0), 'host', 0), J$.G(3065, J$.R(3057, 'c', c, 0), 'port', 0), J$.G(3097, J$.G(3081, J$.R(3073, 'c', c, 0), 'runtimeStats', 0), J$.T(3089, 'pingMs', 21, false), 4)), J$.T(3113, null, 25, false)));
                                            } catch (J$e) {
                                                J$.Ex(8553, J$e);
                                            } finally {
                                                if (J$.Fr(8561))
                                                    continue jalangiLabel2199;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 3137)));
                            }
                            if (J$.X1(8577, J$.C(184, J$.B(282, '==', J$.G(3193, J$.R(3185, 'finalCandidates', finalCandidates, 0), 'length', 0), J$.T(3201, 0, 22, false), 0))))
                                return J$.X1(3241, J$.Rt(3233, J$.F(3225, J$.R(3209, 'Error', Error, 2), 1)(J$.T(3217, 'No replica set members available for query', 21, false))));
                            J$.X1(3297, J$.P(3289, J$.R(3249, 'this', this, 0), 'index', J$.B(290, '%', J$.G(3265, J$.R(3257, 'this', this, 0), 'index', 0), J$.G(3281, J$.R(3273, 'finalCandidates', finalCandidates, 0), 'length', 0), 0), 0));
                            var connection = J$.X1(3353, J$.W(3345, 'connection', J$.M(3337, J$.G(3329, J$.R(3305, 'finalCandidates', finalCandidates, 0), J$.G(3321, J$.R(3313, 'this', this, 0), 'index', 0), 4), 'checkoutReader', 0)(), connection, 1));
                            J$.X1(3401, J$.P(3393, J$.R(3361, 'this', this, 0), 'index', J$.B(298, '+', J$.G(3377, J$.R(3369, 'this', this, 0), 'index', 0), J$.T(3385, 1, 22, false), 0), 0));
                            if (J$.X1(8593, J$.C(208, J$.C(192, J$.G(3417, J$.R(3409, 'self', self, 0), 'logger', 0)) ? J$.G(3441, J$.G(3433, J$.R(3425, 'self', self, 0), 'logger', 0), 'debug', 0) : J$._()))) {
                                if (J$.X1(8585, J$.C(200, J$.R(3449, 'connection', connection, 0))))
                                    J$.X1(3553, J$.M(3545, J$.G(3465, J$.R(3457, 'self', self, 0), 'logger', 0), 'debug', 0)(J$.F(3537, J$.R(3473, 'format', format, 1), 0)(J$.T(3481, 'picked server %s:%s', 21, false), J$.G(3505, J$.G(3497, J$.R(3489, 'connection', connection, 0), 'socketOptions', 0), 'host', 0), J$.G(3529, J$.G(3521, J$.R(3513, 'connection', connection, 0), 'socketOptions', 0), 'port', 0))));
                            }
                            return J$.X1(3577, J$.Rt(3569, J$.R(3561, 'connection', connection, 0)));
                        } catch (J$e) {
                            J$.Ex(8601, J$e);
                        } finally {
                            if (J$.Fr(8609))
                                continue jalangiLabel2200;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3585), 0));
            J$.X1(8241, J$.P(8233, J$.G(3785, J$.R(3777, 'PingStrategy', PingStrategy, 1), 'prototype', 0), '_pingServer', J$.T(8225, function (callback) {
                jalangiLabel2213:
                    while (true) {
                        try {
                            J$.Fe(8185, arguments.callee, this, arguments);
                            arguments = J$.N(8193, 'arguments', arguments, 4);
                            callback = J$.N(8201, 'callback', callback, 4);
                            J$.N(8209, 'self', self, 0);
                            J$.N(8217, 'pingFunction', pingFunction, 0);
                            var self = J$.X1(3809, J$.W(3801, 'self', J$.R(3793, 'this', this, 0), self, 1));
                            var pingFunction = J$.X1(8113, J$.W(8105, 'pingFunction', J$.T(8097, function () {
                                jalangiLabel2212:
                                    while (true) {
                                        try {
                                            J$.Fe(8041, arguments.callee, this, arguments);
                                            arguments = J$.N(8049, 'arguments', arguments, 4);
                                            J$.N(8057, 'allServers', allServers, 0);
                                            J$.N(8065, 'keys', keys, 0);
                                            J$.N(8073, 'i', i, 0);
                                            J$.N(8081, 'numberOfEntries', numberOfEntries, 0);
                                            J$.N(8089, 'server', server, 0);
                                            if (J$.X1(8617, J$.C(224, J$.C(216, J$.B(306, '==', J$.G(3825, J$.R(3817, 'self', self, 0), 'state', 0), J$.T(3833, 'disconnected', 21, false), 0)) ? J$._() : J$.B(314, '==', J$.G(3849, J$.R(3841, 'self', self, 0), 'state', 0), J$.T(3857, 'destroyed', 21, false), 0))))
                                                return J$.X1(3873, J$.Rt(3865, undefined));
                                            if (J$.X1(8625, J$.C(240, J$.C(232, J$.M(3897, J$.G(3889, J$.R(3881, 'self', self, 0), 'replicaset', 0), 'isDestroyed', 0)()) ? J$._() : J$.B(322, '==', J$.G(3921, J$.G(3913, J$.R(3905, 'self', self, 0), 'replicaset', 0), '_serverState', 0), J$.T(3929, 'disconnected', 21, false), 0))))
                                                return J$.X1(3945, J$.Rt(3937, undefined));
                                            var allServers = J$.X1(4049, J$.W(4041, 'allServers', J$.X1(8633, J$.C(248, J$.B(330, '!=', J$.G(3977, J$.G(3969, J$.G(3961, J$.R(3953, 'self', self, 0), 'replicaset', 0), '_state', 0), 'master', 0), J$.T(3985, null, 25, false), 0))) ? J$.T(4025, [J$.G(4017, J$.G(4009, J$.G(4001, J$.R(3993, 'self', self, 0), 'replicaset', 0), '_state', 0), 'master', 0)], 10, false) : J$.T(4033, [], 10, false), allServers, 1));
                                            var keys = J$.X1(4113, J$.W(4105, 'keys', J$.M(4097, J$.R(4057, 'Object', Object, 2), 'keys', 0)(J$.G(4089, J$.G(4081, J$.G(4073, J$.R(4065, 'self', self, 0), 'replicaset', 0), '_state', 0), 'secondaries', 0)), keys, 1));
                                            for (var i = J$.X1(4137, J$.W(4129, 'i', J$.T(4121, 0, 22, false), i, 1)); J$.X1(8641, J$.C(256, J$.B(338, '<', J$.R(4145, 'i', i, 0), J$.G(4161, J$.R(4153, 'keys', keys, 0), 'length', 0), 0))); J$.X1(8649, J$.B(362, '-', i = J$.W(4185, 'i', J$.B(354, '+', J$.U(346, '+', J$.R(4177, 'i', i, 0)), J$.T(4169, 1, 22, false), 0), i, 0), J$.T(4193, 1, 22, false), 0))) {
                                                J$.X1(4281, J$.M(4273, J$.R(4201, 'allServers', allServers, 0), 'push', 0)(J$.G(4265, J$.G(4233, J$.G(4225, J$.G(4217, J$.R(4209, 'self', self, 0), 'replicaset', 0), '_state', 0), 'secondaries', 0), J$.G(4257, J$.R(4241, 'keys', keys, 0), J$.R(4249, 'i', i, 0), 4), 4)));
                                            }
                                            var numberOfEntries = J$.X1(4313, J$.W(4305, 'numberOfEntries', J$.G(4297, J$.R(4289, 'allServers', allServers, 0), 'length', 0), numberOfEntries, 1));
                                            for (var i = J$.X1(4337, J$.W(4329, 'i', J$.T(4321, 0, 22, false), i, 1)); J$.X1(8961, J$.C(464, J$.B(370, '<', J$.R(4345, 'i', i, 0), J$.G(4361, J$.R(4353, 'allServers', allServers, 0), 'length', 0), 0))); J$.X1(8969, J$.B(394, '-', i = J$.W(4385, 'i', J$.B(386, '+', J$.U(378, '+', J$.R(4377, 'i', i, 0)), J$.T(4369, 1, 22, false), 0), i, 0), J$.T(4393, 1, 22, false), 0))) {
                                                var server = J$.X1(4433, J$.W(4425, 'server', J$.G(4417, J$.R(4401, 'allServers', allServers, 0), J$.R(4409, 'i', i, 0), 4), server, 1));
                                                J$.X1(8033, J$.F(8025, J$.T(8009, function (serverInstance) {
                                                    jalangiLabel2211:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(7929, arguments.callee, this, arguments);
                                                                function done() {
                                                                    jalangiLabel2210:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(7913, arguments.callee, this, arguments);
                                                                                arguments = J$.N(7921, 'arguments', arguments, 4);
                                                                                J$.X1(7817, J$.B(666, '+', numberOfEntries = J$.W(7801, 'numberOfEntries', J$.B(658, '-', J$.U(650, '+', J$.R(7793, 'numberOfEntries', numberOfEntries, 0)), J$.T(7785, 1, 22, false), 0), numberOfEntries, 0), J$.T(7809, 1, 22, false), 0));
                                                                                if (J$.X1(8921, J$.C(456, J$.C(448, J$.B(674, '===', J$.T(7825, 0, 22, false), J$.R(7833, 'numberOfEntries', numberOfEntries, 0), 0)) ? J$.B(682, '==', J$.T(7841, 'connected', 21, false), J$.G(7857, J$.R(7849, 'self', self, 0), 'state', 0), 0) : J$._()))) {
                                                                                    J$.X1(7905, J$.F(7897, J$.R(7865, 'setTimeout', setTimeout, 2), 0)(J$.R(7873, 'pingFunction', pingFunction, 0), J$.G(7889, J$.R(7881, 'self', self, 0), 'pingInterval', 0)));
                                                                                }
                                                                            } catch (J$e) {
                                                                                J$.Ex(8929, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(8937))
                                                                                    continue jalangiLabel2210;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }
                                                                arguments = J$.N(7937, 'arguments', arguments, 4);
                                                                serverInstance = J$.N(7945, 'serverInstance', serverInstance, 4);
                                                                J$.N(7953, '_db', _db, 0);
                                                                J$.N(7961, 'startTime', startTime, 0);
                                                                J$.N(7969, '_ping', _ping, 0);
                                                                J$.N(7977, 'connectTimeoutMS', connectTimeoutMS, 0);
                                                                J$.N(7985, '_server', _server, 0);
                                                                done = J$.N(8001, 'done', J$.T(7993, done, 12, false, 7913), 0);
                                                                var _db = J$.X1(4513, J$.W(4505, '_db', J$.G(4497, J$.G(4449, J$.R(4441, 'self', self, 0), 'dbs', 0), J$.B(410, '+', J$.B(402, '+', J$.G(4465, J$.R(4457, 'serverInstance', serverInstance, 0), 'host', 0), J$.T(4473, ':', 21, false), 0), J$.G(4489, J$.R(4481, 'serverInstance', serverInstance, 0), 'port', 0), 0), 4), _db, 1));
                                                                if (J$.X1(8913, J$.C(440, J$.B(418, '!=', J$.R(4521, '_db', _db, 0), J$.T(4529, null, 25, false), 0)))) {
                                                                    var startTime = J$.X1(4561, J$.W(4553, 'startTime', J$.M(4545, J$.R(4537, 'Date', Date, 2), 'now', 0)(), startTime, 1));
                                                                    var _ping = J$.X1(5657, J$.W(5649, '_ping', J$.T(5641, function (__db, __serverInstance) {
                                                                        jalangiLabel2204:
                                                                            while (true) {
                                                                                try {
                                                                                    J$.Fe(5601, arguments.callee, this, arguments);
                                                                                    arguments = J$.N(5609, 'arguments', arguments, 4);
                                                                                    __db = J$.N(5617, '__db', __db, 4);
                                                                                    __serverInstance = J$.N(5625, '__serverInstance', __serverInstance, 4);
                                                                                    J$.N(5633, '_failTimer', _failTimer, 0);
                                                                                    var _failTimer = J$.X1(4721, J$.W(4713, '_failTimer', J$.X1(8681, J$.C(280, J$.G(4577, J$.R(4569, 'self', self, 0), 'pingTimeout', 0))) ? J$.F(4697, J$.R(4585, 'setTimeout', setTimeout, 2), 0)(J$.T(4673, function () {
                                                                                        jalangiLabel2201:
                                                                                            while (true) {
                                                                                                try {
                                                                                                    J$.Fe(4657, arguments.callee, this, arguments);
                                                                                                    arguments = J$.N(4665, 'arguments', arguments, 4);
                                                                                                    if (J$.X1(8657, J$.C(272, J$.C(264, J$.B(426, '!=', J$.T(4593, null, 25, false), J$.G(4609, J$.R(4601, '__serverInstance', __serverInstance, 0), 'runtimeStats', 0), 0)) ? J$.M(4625, J$.R(4617, '__serverInstance', __serverInstance, 0), 'isConnected', 0)() : J$._()))) {
                                                                                                        J$.X1(4649, J$.M(4641, J$.R(4633, '__serverInstance', __serverInstance, 0), 'close', 0)());
                                                                                                    }
                                                                                                } catch (J$e) {
                                                                                                    J$.Ex(8665, J$e);
                                                                                                } finally {
                                                                                                    if (J$.Fr(8673))
                                                                                                        continue jalangiLabel2201;
                                                                                                    else
                                                                                                        return J$.Ra();
                                                                                                }
                                                                                            }
                                                                                    }, 12, false, 4657), J$.G(4689, J$.R(4681, 'self', self, 0), 'pingTimeout', 0)) : J$.T(4705, null, 25, false), _failTimer, 1));
                                                                                    J$.X1(5593, J$.M(5585, J$.R(4729, '__db', __db, 0), 'executeDbCommand', 0)(J$.T(4745, {
                                                                                        ping: J$.T(4737, 1, 22, false)
                                                                                    }, 11, false), J$.T(4761, {
                                                                                        failFast: J$.T(4753, true, 23, false)
                                                                                    }, 11, false), J$.T(5577, function (err) {
                                                                                        jalangiLabel2203:
                                                                                            while (true) {
                                                                                                try {
                                                                                                    J$.Fe(5553, arguments.callee, this, arguments);
                                                                                                    arguments = J$.N(5561, 'arguments', arguments, 4);
                                                                                                    err = J$.N(5569, 'err', err, 4);
                                                                                                    J$.X1(4793, J$.F(4785, J$.R(4769, 'clearTimeout', clearTimeout, 2), 0)(J$.R(4777, '_failTimer', _failTimer, 0)));
                                                                                                    J$.X1(4849, J$.M(4841, J$.G(4809, J$.R(4801, 'self', self, 0), 'replicaset', 0), 'emit', 0)(J$.T(4817, 'ping', 21, false), J$.R(4825, 'err', err, 0), J$.R(4833, 'serverInstance', serverInstance, 0)));
                                                                                                    if (J$.X1(8689, J$.C(288, J$.R(4857, 'err', err, 0)))) {
                                                                                                        J$.X1(4937, J$.B(450, 'delete', J$.G(4873, J$.R(4865, 'self', self, 0), 'dbs', 0), J$.B(442, '+', J$.B(434, '+', J$.G(4897, J$.G(4889, J$.R(4881, '__db', __db, 0), 'serverConfig', 0), 'host', 0), J$.T(4905, ':', 21, false), 0), J$.G(4929, J$.G(4921, J$.R(4913, '__db', __db, 0), 'serverConfig', 0), 'port', 0), 0), 4));
                                                                                                        J$.X1(4961, J$.M(4953, J$.R(4945, '__db', __db, 0), 'close', 0)());
                                                                                                        return J$.X1(4993, J$.Rt(4985, J$.F(4977, J$.R(4969, 'done', done, 0), 0)()));
                                                                                                    }
                                                                                                    if (J$.X1(8697, J$.C(304, J$.C(296, J$.B(458, '!=', J$.T(5001, null, 25, false), J$.G(5017, J$.R(5009, '__serverInstance', __serverInstance, 0), 'runtimeStats', 0), 0)) ? J$.M(5033, J$.R(5025, '__serverInstance', __serverInstance, 0), 'isConnected', 0)() : J$._()))) {
                                                                                                        J$.X1(5097, J$.P(5089, J$.G(5049, J$.R(5041, '__serverInstance', __serverInstance, 0), 'runtimeStats', 0), J$.T(5057, 'pingMs', 21, false), J$.B(466, '-', J$.M(5073, J$.R(5065, 'Date', Date, 2), 'now', 0)(), J$.R(5081, 'startTime', startTime, 0), 0), 2));
                                                                                                    }
                                                                                                    J$.X1(5545, J$.M(5537, J$.R(5105, '__db', __db, 0), 'executeDbCommand', 0)(J$.T(5121, {
                                                                                                        ismaster: J$.T(5113, 1, 22, false)
                                                                                                    }, 11, false), J$.T(5137, {
                                                                                                        failFast: J$.T(5129, true, 23, false)
                                                                                                    }, 11, false), J$.T(5529, function (err, result) {
                                                                                                        jalangiLabel2202:
                                                                                                            while (true) {
                                                                                                                try {
                                                                                                                    J$.Fe(5497, arguments.callee, this, arguments);
                                                                                                                    arguments = J$.N(5505, 'arguments', arguments, 4);
                                                                                                                    err = J$.N(5513, 'err', err, 4);
                                                                                                                    result = J$.N(5521, 'result', result, 4);
                                                                                                                    J$.X1(5201, J$.M(5193, J$.G(5153, J$.R(5145, 'self', self, 0), 'replicaset', 0), 'emit', 0)(J$.T(5161, 'ping_ismaster', 21, false), J$.R(5169, 'err', err, 0), J$.R(5177, 'result', result, 0), J$.R(5185, 'serverInstance', serverInstance, 0)));
                                                                                                                    if (J$.X1(8705, J$.C(312, J$.R(5209, 'err', err, 0)))) {
                                                                                                                        J$.X1(5289, J$.B(490, 'delete', J$.G(5225, J$.R(5217, 'self', self, 0), 'dbs', 0), J$.B(482, '+', J$.B(474, '+', J$.G(5249, J$.G(5241, J$.R(5233, '__db', __db, 0), 'serverConfig', 0), 'host', 0), J$.T(5257, ':', 21, false), 0), J$.G(5281, J$.G(5273, J$.R(5265, '__db', __db, 0), 'serverConfig', 0), 'port', 0), 0), 4));
                                                                                                                        J$.X1(5313, J$.M(5305, J$.R(5297, '__db', __db, 0), 'close', 0)());
                                                                                                                        return J$.X1(5345, J$.Rt(5337, J$.F(5329, J$.R(5321, 'done', done, 0), 0)()));
                                                                                                                    }
                                                                                                                    if (J$.X1(8713, J$.C(336, J$.C(328, J$.C(320, J$.R(5353, 'result', result, 0)) ? J$.G(5369, J$.R(5361, 'result', result, 0), 'documents', 0) : J$._()) ? J$.G(5393, J$.G(5385, J$.R(5377, 'self', self, 0), 'replicaset', 0), 'processIsMaster', 0) : J$._()))) {
                                                                                                                        J$.X1(5465, J$.M(5457, J$.G(5409, J$.R(5401, 'self', self, 0), 'replicaset', 0), 'processIsMaster', 0)(J$.R(5417, '__serverInstance', __serverInstance, 0), J$.G(5449, J$.G(5433, J$.R(5425, 'result', result, 0), 'documents', 0), J$.T(5441, 0, 22, false), 4)));
                                                                                                                    }
                                                                                                                    J$.X1(5489, J$.F(5481, J$.R(5473, 'done', done, 0), 0)());
                                                                                                                } catch (J$e) {
                                                                                                                    J$.Ex(8721, J$e);
                                                                                                                } finally {
                                                                                                                    if (J$.Fr(8729))
                                                                                                                        continue jalangiLabel2202;
                                                                                                                    else
                                                                                                                        return J$.Ra();
                                                                                                                }
                                                                                                            }
                                                                                                    }, 12, false, 5497)));
                                                                                                } catch (J$e) {
                                                                                                    J$.Ex(8737, J$e);
                                                                                                } finally {
                                                                                                    if (J$.Fr(8745))
                                                                                                        continue jalangiLabel2203;
                                                                                                    else
                                                                                                        return J$.Ra();
                                                                                                }
                                                                                            }
                                                                                    }, 12, false, 5553)));
                                                                                } catch (J$e) {
                                                                                    J$.Ex(8753, J$e);
                                                                                } finally {
                                                                                    if (J$.Fr(8761))
                                                                                        continue jalangiLabel2204;
                                                                                    else
                                                                                        return J$.Ra();
                                                                                }
                                                                            }
                                                                    }, 12, false, 5601), _ping, 1));
                                                                    J$.X1(5697, J$.F(5689, J$.R(5665, '_ping', _ping, 0), 0)(J$.R(5673, '_db', _db, 0), J$.R(5681, 'serverInstance', serverInstance, 0)));
                                                                } else {
                                                                    var connectTimeoutMS = J$.X1(5793, J$.W(5785, 'connectTimeoutMS', J$.X1(8769, J$.C(344, J$.G(5729, J$.G(5721, J$.G(5713, J$.R(5705, 'self', self, 0), 'replicaset', 0), 'options', 0), 'socketOptions', 0))) ? J$.G(5769, J$.G(5761, J$.G(5753, J$.G(5745, J$.R(5737, 'self', self, 0), 'replicaset', 0), 'options', 0), 'socketOptions', 0), 'connectTimeoutMS', 0) : J$.T(5777, 0, 22, false), connectTimeoutMS, 1));
                                                                    var _server = J$.X1(6105, J$.W(6097, '_server', J$.F(6089, J$.R(5801, 'Server', Server, 1), 1)(J$.G(5817, J$.R(5809, 'serverInstance', serverInstance, 0), 'host', 0), J$.G(5833, J$.R(5825, 'serverInstance', serverInstance, 0), 'port', 0), J$.T(6081, {
                                                                        auto_reconnect: J$.T(5841, false, 23, false),
                                                                        returnIsMasterResults: J$.T(5849, true, 23, false),
                                                                        slaveOk: J$.T(5857, true, 23, false),
                                                                        poolSize: J$.T(5865, 1, 22, false),
                                                                        socketOptions: J$.T(5881, {
                                                                            connectTimeoutMS: J$.R(5873, 'connectTimeoutMS', connectTimeoutMS, 0)
                                                                        }, 11, false),
                                                                        ssl: J$.G(5913, J$.G(5905, J$.G(5897, J$.R(5889, 'self', self, 0), 'replicaset', 0), 'options', 0), 'ssl', 0),
                                                                        sslValidate: J$.G(5945, J$.G(5937, J$.G(5929, J$.R(5921, 'self', self, 0), 'replicaset', 0), 'options', 0), 'sslValidate', 0),
                                                                        sslCA: J$.G(5977, J$.G(5969, J$.G(5961, J$.R(5953, 'self', self, 0), 'replicaset', 0), 'options', 0), 'sslCA', 0),
                                                                        sslCert: J$.G(6009, J$.G(6001, J$.G(5993, J$.R(5985, 'self', self, 0), 'replicaset', 0), 'options', 0), 'sslCert', 0),
                                                                        sslKey: J$.G(6041, J$.G(6033, J$.G(6025, J$.R(6017, 'self', self, 0), 'replicaset', 0), 'options', 0), 'sslKey', 0),
                                                                        sslPass: J$.G(6073, J$.G(6065, J$.G(6057, J$.R(6049, 'self', self, 0), 'replicaset', 0), 'options', 0), 'sslPass', 0)
                                                                    }, 11, false)), _server, 1));
                                                                    var _db = J$.X1(6169, J$.W(6161, '_db', J$.M(6153, J$.R(6113, 'self', self, 0), 'Db', 2)(J$.T(6121, 'local', 21, false), J$.R(6129, '_server', _server, 0), J$.T(6145, {
                                                                        safe: J$.T(6137, true, 23, false)
                                                                    }, 11, false)), _db, 1));
                                                                    J$.X1(6305, J$.M(6297, J$.R(6177, '_db', _db, 0), 'on', 0)(J$.T(6185, 'close', 21, false), J$.T(6289, function () {
                                                                        jalangiLabel2205:
                                                                            while (true) {
                                                                                try {
                                                                                    J$.Fe(6273, arguments.callee, this, arguments);
                                                                                    arguments = J$.N(6281, 'arguments', arguments, 4);
                                                                                    J$.X1(6265, J$.B(514, 'delete', J$.G(6201, J$.R(6193, 'self', self, 0), 'dbs', 0), J$.B(506, '+', J$.B(498, '+', J$.G(6225, J$.G(6217, J$.R(6209, 'this', this, 0), 'serverConfig', 0), 'host', 0), J$.T(6233, ':', 21, false), 0), J$.G(6257, J$.G(6249, J$.R(6241, 'this', this, 0), 'serverConfig', 0), 'port', 0), 0), 4));
                                                                                } catch (J$e) {
                                                                                    J$.Ex(8777, J$e);
                                                                                } finally {
                                                                                    if (J$.Fr(8785))
                                                                                        continue jalangiLabel2205;
                                                                                    else
                                                                                        return J$.Ra();
                                                                                }
                                                                            }
                                                                    }, 12, false, 6273)));
                                                                    var _ping = J$.X1(7737, J$.W(7729, '_ping', J$.T(7721, function (__db, __serverInstance) {
                                                                        jalangiLabel2209:
                                                                            while (true) {
                                                                                try {
                                                                                    J$.Fe(7689, arguments.callee, this, arguments);
                                                                                    arguments = J$.N(7697, 'arguments', arguments, 4);
                                                                                    __db = J$.N(7705, '__db', __db, 4);
                                                                                    __serverInstance = J$.N(7713, '__serverInstance', __serverInstance, 4);
                                                                                    if (J$.X1(8793, J$.C(352, J$.B(522, '==', J$.G(6321, J$.R(6313, 'self', self, 0), 'state', 0), J$.T(6329, 'disconnected', 21, false), 0)))) {
                                                                                        J$.X1(6353, J$.M(6345, J$.R(6337, 'self', self, 0), 'stop', 0)());
                                                                                        return J$.X1(6369, J$.Rt(6361, undefined));
                                                                                    }
                                                                                    J$.X1(7681, J$.M(7673, J$.R(6377, '__db', __db, 0), 'open', 0)(J$.T(7665, function (err, db) {
                                                                                        jalangiLabel2208:
                                                                                            while (true) {
                                                                                                try {
                                                                                                    J$.Fe(7625, arguments.callee, this, arguments);
                                                                                                    arguments = J$.N(7633, 'arguments', arguments, 4);
                                                                                                    err = J$.N(7641, 'err', err, 4);
                                                                                                    db = J$.N(7649, 'db', db, 4);
                                                                                                    J$.N(7657, 'startTime', startTime, 0);
                                                                                                    J$.X1(6433, J$.M(6425, J$.G(6393, J$.R(6385, 'self', self, 0), 'replicaset', 0), 'emit', 0)(J$.T(6401, 'ping_connect', 21, false), J$.R(6409, 'err', err, 0), J$.R(6417, '__serverInstance', __serverInstance, 0)));
                                                                                                    if (J$.X1(8801, J$.C(368, J$.C(360, J$.B(530, '==', J$.G(6449, J$.R(6441, 'self', self, 0), 'state', 0), J$.T(6457, 'disconnected', 21, false), 0)) ? J$.B(538, '!=', J$.R(6465, '__db', __db, 0), J$.T(6473, null, 25, false), 0) : J$._()))) {
                                                                                                        return J$.X1(6505, J$.Rt(6497, J$.M(6489, J$.R(6481, '__db', __db, 0), 'close', 0)()));
                                                                                                    }
                                                                                                    if (J$.X1(8809, J$.C(376, J$.R(6513, 'err', err, 0)))) {
                                                                                                        J$.X1(6593, J$.B(562, 'delete', J$.G(6529, J$.R(6521, 'self', self, 0), 'dbs', 0), J$.B(554, '+', J$.B(546, '+', J$.G(6553, J$.G(6545, J$.R(6537, '__db', __db, 0), 'serverConfig', 0), 'host', 0), J$.T(6561, ':', 21, false), 0), J$.G(6585, J$.G(6577, J$.R(6569, '__db', __db, 0), 'serverConfig', 0), 'port', 0), 0), 4));
                                                                                                        J$.X1(6617, J$.M(6609, J$.R(6601, '__db', __db, 0), 'close', 0)());
                                                                                                        return J$.X1(6649, J$.Rt(6641, J$.F(6633, J$.R(6625, 'done', done, 0), 0)()));
                                                                                                    }
                                                                                                    J$.X1(6745, J$.P(6737, J$.G(6665, J$.R(6657, 'self', self, 0), 'dbs', 0), J$.B(578, '+', J$.B(570, '+', J$.G(6689, J$.G(6681, J$.R(6673, '__db', __db, 0), 'serverConfig', 0), 'host', 0), J$.T(6697, ':', 21, false), 0), J$.G(6721, J$.G(6713, J$.R(6705, '__db', __db, 0), 'serverConfig', 0), 'port', 0), 0), J$.R(6729, '__db', __db, 0), 2));
                                                                                                    var startTime = J$.X1(6777, J$.W(6769, 'startTime', J$.M(6761, J$.R(6753, 'Date', Date, 2), 'now', 0)(), startTime, 1));
                                                                                                    J$.X1(7617, J$.M(7609, J$.R(6785, '__db', __db, 0), 'executeDbCommand', 0)(J$.T(6801, {
                                                                                                        ping: J$.T(6793, 1, 22, false)
                                                                                                    }, 11, false), J$.T(6817, {
                                                                                                        failFast: J$.T(6809, true, 23, false)
                                                                                                    }, 11, false), J$.T(7601, function (err) {
                                                                                                        jalangiLabel2207:
                                                                                                            while (true) {
                                                                                                                try {
                                                                                                                    J$.Fe(7577, arguments.callee, this, arguments);
                                                                                                                    arguments = J$.N(7585, 'arguments', arguments, 4);
                                                                                                                    err = J$.N(7593, 'err', err, 4);
                                                                                                                    J$.X1(6873, J$.M(6865, J$.G(6833, J$.R(6825, 'self', self, 0), 'replicaset', 0), 'emit', 0)(J$.T(6841, 'ping', 21, false), J$.R(6849, 'err', err, 0), J$.R(6857, '__serverInstance', __serverInstance, 0)));
                                                                                                                    if (J$.X1(8817, J$.C(384, J$.R(6881, 'err', err, 0)))) {
                                                                                                                        J$.X1(6961, J$.B(602, 'delete', J$.G(6897, J$.R(6889, 'self', self, 0), 'dbs', 0), J$.B(594, '+', J$.B(586, '+', J$.G(6921, J$.G(6913, J$.R(6905, '__db', __db, 0), 'serverConfig', 0), 'host', 0), J$.T(6929, ':', 21, false), 0), J$.G(6953, J$.G(6945, J$.R(6937, '__db', __db, 0), 'serverConfig', 0), 'port', 0), 0), 4));
                                                                                                                        J$.X1(6985, J$.M(6977, J$.R(6969, '__db', __db, 0), 'close', 0)());
                                                                                                                        return J$.X1(7017, J$.Rt(7009, J$.F(7001, J$.R(6993, 'done', done, 0), 0)()));
                                                                                                                    }
                                                                                                                    if (J$.X1(8825, J$.C(400, J$.C(392, J$.B(610, '!=', J$.T(7025, null, 25, false), J$.G(7041, J$.R(7033, '__serverInstance', __serverInstance, 0), 'runtimeStats', 0), 0)) ? J$.M(7057, J$.R(7049, '__serverInstance', __serverInstance, 0), 'isConnected', 0)() : J$._()))) {
                                                                                                                        J$.X1(7121, J$.P(7113, J$.G(7073, J$.R(7065, '__serverInstance', __serverInstance, 0), 'runtimeStats', 0), J$.T(7081, 'pingMs', 21, false), J$.B(618, '-', J$.M(7097, J$.R(7089, 'Date', Date, 2), 'now', 0)(), J$.R(7105, 'startTime', startTime, 0), 0), 2));
                                                                                                                    }
                                                                                                                    J$.X1(7569, J$.M(7561, J$.R(7129, '__db', __db, 0), 'executeDbCommand', 0)(J$.T(7145, {
                                                                                                                        ismaster: J$.T(7137, 1, 22, false)
                                                                                                                    }, 11, false), J$.T(7161, {
                                                                                                                        failFast: J$.T(7153, true, 23, false)
                                                                                                                    }, 11, false), J$.T(7553, function (err, result) {
                                                                                                                        jalangiLabel2206:
                                                                                                                            while (true) {
                                                                                                                                try {
                                                                                                                                    J$.Fe(7521, arguments.callee, this, arguments);
                                                                                                                                    arguments = J$.N(7529, 'arguments', arguments, 4);
                                                                                                                                    err = J$.N(7537, 'err', err, 4);
                                                                                                                                    result = J$.N(7545, 'result', result, 4);
                                                                                                                                    J$.X1(7225, J$.M(7217, J$.G(7177, J$.R(7169, 'self', self, 0), 'replicaset', 0), 'emit', 0)(J$.T(7185, 'ping_ismaster', 21, false), J$.R(7193, 'err', err, 0), J$.R(7201, 'result', result, 0), J$.R(7209, '__serverInstance', __serverInstance, 0)));
                                                                                                                                    if (J$.X1(8833, J$.C(408, J$.R(7233, 'err', err, 0)))) {
                                                                                                                                        J$.X1(7313, J$.B(642, 'delete', J$.G(7249, J$.R(7241, 'self', self, 0), 'dbs', 0), J$.B(634, '+', J$.B(626, '+', J$.G(7273, J$.G(7265, J$.R(7257, '__db', __db, 0), 'serverConfig', 0), 'host', 0), J$.T(7281, ':', 21, false), 0), J$.G(7305, J$.G(7297, J$.R(7289, '__db', __db, 0), 'serverConfig', 0), 'port', 0), 0), 4));
                                                                                                                                        J$.X1(7337, J$.M(7329, J$.R(7321, '__db', __db, 0), 'close', 0)());
                                                                                                                                        return J$.X1(7369, J$.Rt(7361, J$.F(7353, J$.R(7345, 'done', done, 0), 0)()));
                                                                                                                                    }
                                                                                                                                    if (J$.X1(8841, J$.C(432, J$.C(424, J$.C(416, J$.R(7377, 'result', result, 0)) ? J$.G(7393, J$.R(7385, 'result', result, 0), 'documents', 0) : J$._()) ? J$.G(7417, J$.G(7409, J$.R(7401, 'self', self, 0), 'replicaset', 0), 'processIsMaster', 0) : J$._()))) {
                                                                                                                                        J$.X1(7489, J$.M(7481, J$.G(7433, J$.R(7425, 'self', self, 0), 'replicaset', 0), 'processIsMaster', 0)(J$.R(7441, '__serverInstance', __serverInstance, 0), J$.G(7473, J$.G(7457, J$.R(7449, 'result', result, 0), 'documents', 0), J$.T(7465, 0, 22, false), 4)));
                                                                                                                                    }
                                                                                                                                    J$.X1(7513, J$.F(7505, J$.R(7497, 'done', done, 0), 0)());
                                                                                                                                } catch (J$e) {
                                                                                                                                    J$.Ex(8849, J$e);
                                                                                                                                } finally {
                                                                                                                                    if (J$.Fr(8857))
                                                                                                                                        continue jalangiLabel2206;
                                                                                                                                    else
                                                                                                                                        return J$.Ra();
                                                                                                                                }
                                                                                                                            }
                                                                                                                    }, 12, false, 7521)));
                                                                                                                } catch (J$e) {
                                                                                                                    J$.Ex(8865, J$e);
                                                                                                                } finally {
                                                                                                                    if (J$.Fr(8873))
                                                                                                                        continue jalangiLabel2207;
                                                                                                                    else
                                                                                                                        return J$.Ra();
                                                                                                                }
                                                                                                            }
                                                                                                    }, 12, false, 7577)));
                                                                                                } catch (J$e) {
                                                                                                    J$.Ex(8881, J$e);
                                                                                                } finally {
                                                                                                    if (J$.Fr(8889))
                                                                                                        continue jalangiLabel2208;
                                                                                                    else
                                                                                                        return J$.Ra();
                                                                                                }
                                                                                            }
                                                                                    }, 12, false, 7625)));
                                                                                } catch (J$e) {
                                                                                    J$.Ex(8897, J$e);
                                                                                } finally {
                                                                                    if (J$.Fr(8905))
                                                                                        continue jalangiLabel2209;
                                                                                    else
                                                                                        return J$.Ra();
                                                                                }
                                                                            }
                                                                    }, 12, false, 7689), _ping, 1));
                                                                    J$.X1(7777, J$.F(7769, J$.R(7745, '_ping', _ping, 0), 0)(J$.R(7753, '_db', _db, 0), J$.R(7761, 'serverInstance', serverInstance, 0)));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(8945, J$e);
                                                            } finally {
                                                                if (J$.Fr(8953))
                                                                    continue jalangiLabel2211;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 7929), 1)(J$.R(8017, 'server', server, 0)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(8977, J$e);
                                        } finally {
                                            if (J$.Fr(8985))
                                                continue jalangiLabel2212;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 8041), pingFunction, 1));
                            J$.X1(8137, J$.F(8129, J$.R(8121, 'pingFunction', pingFunction, 0), 0)());
                            J$.X1(8177, J$.C(472, J$.R(8145, 'callback', callback, 0)) ? J$.F(8169, J$.R(8153, 'callback', callback, 0), 0)(J$.T(8161, null, 25, false)) : J$._());
                        } catch (J$e) {
                            J$.Ex(8993, J$e);
                        } finally {
                            if (J$.Fr(9001))
                                continue jalangiLabel2213;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 8185), 0));
        } catch (J$e) {
            J$.Ex(9009, J$e);
        } finally {
            if (J$.Sr(9017)) {
                J$.L();
                continue jalangiLabel2214;
            } else {
                J$.L();
                break jalangiLabel2214;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
