J$.iids = {"8":[9,15,9,28],"9":[1,20,1,27],"10":[10,9,10,38],"16":[10,9,10,38],"17":[1,28,1,32],"18":[18,13,18,24],"24":[34,21,34,24],"25":[1,20,1,33],"26":[21,24,21,44],"32":[40,21,40,78],"33":[1,20,1,33],"34":[21,24,21,55],"40":[43,25,43,64],"41":[1,20,1,33],"42":[24,24,24,40],"48":[46,32,46,111],"49":[2,26,2,38],"50":[24,24,24,56],"56":[46,32,46,131],"57":[2,26,2,45],"58":[33,39,33,62],"64":[46,32,46,131],"65":[2,26,2,45],"66":[38,48,38,76],"72":[43,25,43,64],"73":[2,26,2,45],"74":[40,21,40,45],"80":[40,21,40,78],"81":[3,17,3,24],"82":[40,49,40,64],"88":[18,13,18,24],"89":[3,25,3,49],"90":[40,49,40,78],"97":[3,17,3,50],"98":[43,25,43,44],"105":[3,17,3,60],"106":[46,32,46,60],"113":[3,70,3,77],"114":[46,64,46,111],"121":[3,78,3,88],"129":[3,70,3,89],"137":[3,100,3,107],"145":[3,108,3,116],"153":[3,100,3,117],"161":[3,17,3,60],"169":[3,17,3,60],"177":[3,70,3,89],"185":[3,70,3,89],"193":[3,100,3,117],"201":[3,100,3,117],"209":[5,31,5,32],"217":[5,31,5,32],"225":[5,31,5,32],"233":[6,23,6,27],"241":[6,23,6,27],"249":[6,23,6,27],"257":[7,36,7,37],"265":[7,36,7,37],"273":[7,36,7,37],"281":[8,28,8,33],"289":[8,28,8,33],"297":[8,28,8,33],"305":[9,15,9,22],"313":[9,26,9,28],"321":[9,15,9,28],"329":[9,5,9,29],"337":[10,9,10,16],"345":[10,17,10,29],"353":[10,9,10,30],"361":[10,34,10,38],"369":[11,31,11,32],"377":[11,31,11,32],"385":[11,9,11,33],"393":[13,31,13,33],"401":[13,31,13,46],"409":[13,31,13,66],"411":[13,31,13,64],"417":[13,31,13,73],"425":[13,31,13,73],"433":[13,9,13,74],"441":[14,9,14,16],"449":[14,17,14,24],"457":[14,28,14,32],"465":[14,9,14,32],"473":[14,9,14,33],"481":[16,5,16,12],"489":[16,32,16,36],"497":[16,5,16,36],"505":[16,5,16,37],"513":[17,5,17,7],"521":[17,30,17,31],"529":[17,16,17,33],"537":[17,35,17,42],"545":[18,13,18,16],"553":[18,20,18,24],"561":[19,25,19,31],"569":[19,25,19,37],"577":[19,25,19,37],"585":[19,25,19,37],"593":[20,23,20,29],"601":[20,41,20,46],"609":[20,23,20,47],"611":[20,23,20,40],"617":[20,23,20,47],"625":[20,23,20,47],"633":[21,13,21,16],"641":[21,24,21,32],"649":[21,35,21,44],"657":[21,47,21,55],"665":[21,13,21,56],"667":[21,13,21,23],"673":[21,13,21,57],"681":[22,33,22,36],"689":[22,44,22,49],"697":[22,33,22,50],"699":[22,33,22,43],"705":[22,33,22,50],"713":[22,33,22,50],"721":[23,19,23,25],"729":[23,37,23,42],"737":[23,19,23,43],"739":[23,19,23,36],"745":[23,19,23,43],"753":[23,13,23,44],"761":[24,13,24,16],"769":[24,24,24,29],"777":[24,32,24,40],"785":[24,43,24,56],"793":[24,13,24,57],"795":[24,13,24,23],"801":[24,13,24,58],"809":[25,23,25,26],"817":[25,34,25,39],"825":[25,23,25,40],"827":[25,23,25,33],"833":[25,23,25,40],"841":[25,23,25,40],"849":[27,33,27,34],"857":[28,25,28,33],"865":[29,26,29,31],"873":[30,24,30,27],"881":[26,23,31,14],"889":[26,23,31,14],"897":[26,23,31,14],"905":[32,13,32,15],"913":[32,19,32,25],"921":[32,13,32,26],"923":[32,13,32,18],"929":[32,35,32,38],"937":[32,54,32,64],"945":[32,40,32,66],"953":[33,39,33,58],"961":[33,61,33,62],"969":[33,39,33,62],"977":[33,17,33,63],"985":[34,21,34,24],"993":[35,35,35,38],"1001":[35,35,35,38],"1009":[35,21,35,39],"1017":[37,40,37,44],"1025":[37,40,37,44],"1033":[37,21,37,45],"1041":[38,48,38,72],"1049":[38,75,38,76],"1057":[38,48,38,76],"1065":[38,21,38,77],"1073":[40,21,40,40],"1081":[40,44,40,45],"1089":[40,56,40,64],"1097":[40,68,40,78],"1105":[41,44,41,52],"1113":[41,44,41,52],"1121":[41,44,41,52],"1129":[42,32,42,36],"1137":[42,32,42,36],"1145":[42,21,42,37],"1153":[43,25,43,36],"1161":[43,40,43,44],"1169":[43,48,43,64],"1177":[44,25,44,27],"1185":[44,25,44,40],"1193":[44,25,44,45],"1201":[44,50,44,62],"1209":[44,64,44,66],"1217":[44,64,44,79],"1225":[44,81,44,89],"1233":[44,91,44,99],"1241":[44,101,44,107],"1249":[44,25,44,108],"1251":[44,25,44,49],"1257":[44,25,44,109],"1265":[45,25,45,41],"1273":[45,42,45,53],"1281":[45,55,45,59],"1289":[45,25,45,60],"1297":[45,25,45,61],"1305":[46,32,46,56],"1313":[46,59,46,60],"1321":[46,64,46,88],"1329":[46,92,46,111],"1337":[46,115,46,131],"1345":[47,25,47,27],"1353":[47,25,47,40],"1361":[47,25,47,45],"1369":[47,50,47,62],"1377":[47,64,47,66],"1385":[47,64,47,79],"1393":[47,81,47,89],"1401":[47,91,47,99],"1409":[47,101,47,107],"1417":[47,25,47,108],"1419":[47,25,47,49],"1425":[47,25,47,109],"1433":[48,25,48,41],"1441":[48,42,48,53],"1449":[48,55,48,59],"1457":[48,25,48,60],"1465":[48,25,48,61],"1473":[50,25,50,41],"1481":[50,42,50,53],"1489":[50,55,50,60],"1497":[50,25,50,61],"1505":[50,25,50,62],"1513":[32,68,53,14],"1521":[32,68,53,14],"1529":[32,68,53,14],"1537":[32,68,53,14],"1545":[32,68,53,14],"1553":[32,68,53,14],"1561":[32,13,53,15],"1563":[32,13,32,34],"1569":[32,13,53,16],"1577":[17,44,55,6],"1585":[17,44,55,6],"1593":[17,44,55,6],"1601":[17,44,55,6],"1609":[17,44,55,6],"1617":[17,44,55,6],"1625":[17,44,55,6],"1633":[17,44,55,6],"1641":[17,44,55,6],"1649":[17,44,55,6],"1657":[17,44,55,6],"1665":[17,5,55,7],"1667":[17,5,17,15],"1673":[17,5,55,8],"1681":[4,20,56,2],"1689":[4,20,56,2],"1697":[4,20,56,2],"1705":[4,20,56,2],"1713":[4,20,56,2],"1721":[4,20,56,2],"1729":[4,20,56,2],"1737":[4,20,56,2],"1745":[4,20,56,2],"1753":[4,20,56,2],"1761":[4,20,56,2],"1769":[4,20,56,2],"1777":[4,20,56,2],"1785":[4,20,56,2],"1793":[4,20,56,2],"1801":[57,1,57,8],"1809":[57,24,57,36],"1817":[57,1,57,36],"1825":[57,1,57,37],"1833":[1,1,57,37],"1841":[1,1,57,37],"1849":[1,1,57,37],"1857":[1,1,57,37],"1865":[1,1,57,37],"1873":[1,1,57,37],"1881":[1,1,57,37],"1889":[10,5,15,6],"1897":[34,17,39,18],"1905":[46,28,51,22],"1913":[43,21,51,22],"1921":[40,17,52,18],"1929":[32,68,53,14],"1937":[32,68,53,14],"1945":[18,9,54,10],"1953":[17,44,55,6],"1961":[17,44,55,6],"1969":[4,20,56,2],"1977":[4,20,56,2],"1985":[1,1,57,37],"1993":[1,1,57,37],"nBranches":22,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/auth/mongodb_cr.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/auth/mongodb_cr_jalangi_.js","code":"var DbCommand = require('../commands/db_command').DbCommand\n  , utils = require('../utils')\n  , crypto = require('crypto');\n\nvar authenticate = function(db, username, password, authdb, options, callback) {\n  var numberOfConnections = 0;\n  var errorObject = null;\n  var numberOfValidConnections = 0;\n  var credentialsValid = false;\n  options = options || {};\n\n  if(options['connection'] != null) {\n    //if a connection was explicitly passed on options, then we have only one...\n    numberOfConnections = 1;\n  } else {\n    // Get the amount of connections in the pool to ensure we have authenticated all comments\n    numberOfConnections = db.serverConfig.allRawConnections().length;\n    options['onAll'] = true;\n  }\n\n  // Return connection option\n  options.returnConnection = true;\n\n  // Execute nonce command\n  db.command({'getnonce':1}, options, function(err, result, connection) {\n    // Execute on all the connections\n    if(err == null) {\n      // Nonce used to make authentication request with md5 hash\n      var nonce = result.nonce;\n\n      // Use node md5 generator\n      var md5 = crypto.createHash('md5');\n      // Generate keys used for authentication\n      md5.update(username + \":mongo:\" + password);\n      var hash_password = md5.digest('hex');\n      // Final key\n      md5 = crypto.createHash('md5');\n      md5.update(nonce + username + hash_password);\n      var key = md5.digest('hex');\n      \n      // Creat cmd\n      var cmd = {'authenticate':1, 'user':username, 'nonce':nonce, 'key':key};\n\n      // Execute command\n      db.db(authdb).command(cmd, {connection:connection}, function(err, result) {\n        // Count down\n        numberOfConnections = numberOfConnections - 1;\n        \n        // Ensure we save any error\n        if(err) { \n          errorObject = err;\n        } else {\n          credentialsValid = true;\n          numberOfValidConnections = numberOfValidConnections + 1;\n        }\n\n        // Work around the case where the number of connections are 0\n        if(numberOfConnections <= 0 && typeof callback == 'function') {\n          var internalCallback = callback;\n          callback = null;\n\n          if(errorObject == null && credentialsValid) {\n            db.serverConfig.auth.add('MONGODB-CR', db.databaseName, username, password, authdb);\n            // Return callback\n            internalCallback(errorObject, true);\n          } else if(numberOfValidConnections > 0 && numberOfValidConnections != numberOfConnections\n            && credentialsValid) {\n              // One or more servers failed on auth (f.ex secondary hanging on foreground indexing)\n              db.serverConfig.auth.add('MONGODB-CR', db.databaseName, username, password, authdb);\n              // Return callback\n              internalCallback(errorObject, true);\n          } else {\n            internalCallback(errorObject, false);\n          }\n        }\n      });\n    }\n  });\n}\n\nexports.authenticate = authenticate;"};
jalangiLabel2053:
    while (true) {
        try {
            J$.Se(1833, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/auth/mongodb_cr_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/auth/mongodb_cr.js');
            J$.N(1841, '__secret__S$', __secret__S$, 0);
            J$.N(1849, '__secret__traits__', __secret__traits__, 0);
            J$.N(1857, 'DbCommand', DbCommand, 0);
            J$.N(1865, 'utils', utils, 0);
            J$.N(1873, 'crypto', crypto, 0);
            J$.N(1881, 'authenticate', authenticate, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var DbCommand = J$.X1(169, J$.W(161, 'DbCommand', J$.G(105, J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, '../commands/db_command', 21, false)), 'DbCommand', 0), DbCommand, 3)), utils = J$.X1(185, J$.W(177, 'utils', J$.F(129, J$.R(113, 'require', require, 2), 0)(J$.T(121, '../utils', 21, false)), utils, 3)), crypto = J$.X1(201, J$.W(193, 'crypto', J$.F(153, J$.R(137, 'require', require, 2), 0)(J$.T(145, 'crypto', 21, false)), crypto, 3));
            var authenticate = J$.X1(1793, J$.W(1785, 'authenticate', J$.T(1777, function (db, username, password, authdb, options, callback) {
                jalangiLabel2052:
                    while (true) {
                        try {
                            J$.Fe(1681, arguments.callee, this, arguments);
                            arguments = J$.N(1689, 'arguments', arguments, 4);
                            db = J$.N(1697, 'db', db, 4);
                            username = J$.N(1705, 'username', username, 4);
                            password = J$.N(1713, 'password', password, 4);
                            authdb = J$.N(1721, 'authdb', authdb, 4);
                            options = J$.N(1729, 'options', options, 4);
                            callback = J$.N(1737, 'callback', callback, 4);
                            J$.N(1745, 'numberOfConnections', numberOfConnections, 0);
                            J$.N(1753, 'errorObject', errorObject, 0);
                            J$.N(1761, 'numberOfValidConnections', numberOfValidConnections, 0);
                            J$.N(1769, 'credentialsValid', credentialsValid, 0);
                            var numberOfConnections = J$.X1(225, J$.W(217, 'numberOfConnections', J$.T(209, 0, 22, false), numberOfConnections, 1));
                            var errorObject = J$.X1(249, J$.W(241, 'errorObject', J$.T(233, null, 25, false), errorObject, 1));
                            var numberOfValidConnections = J$.X1(273, J$.W(265, 'numberOfValidConnections', J$.T(257, 0, 22, false), numberOfValidConnections, 1));
                            var credentialsValid = J$.X1(297, J$.W(289, 'credentialsValid', J$.T(281, false, 23, false), credentialsValid, 1));
                            J$.X1(329, options = J$.W(321, 'options', J$.C(8, J$.R(305, 'options', options, 0)) ? J$._() : J$.T(313, {}, 11, false), options, 0));
                            if (J$.X1(1889, J$.C(16, J$.B(10, '!=', J$.G(353, J$.R(337, 'options', options, 0), J$.T(345, 'connection', 21, false), 4), J$.T(361, null, 25, false), 0)))) {
                                J$.X1(385, numberOfConnections = J$.W(377, 'numberOfConnections', J$.T(369, 1, 22, false), numberOfConnections, 0));
                            } else {
                                J$.X1(433, numberOfConnections = J$.W(425, 'numberOfConnections', J$.G(417, J$.M(409, J$.G(401, J$.R(393, 'db', db, 0), 'serverConfig', 0), 'allRawConnections', 0)(), 'length', 0), numberOfConnections, 0));
                                J$.X1(473, J$.P(465, J$.R(441, 'options', options, 0), J$.T(449, 'onAll', 21, false), J$.T(457, true, 23, false), 2));
                            }
                            J$.X1(505, J$.P(497, J$.R(481, 'options', options, 0), 'returnConnection', J$.T(489, true, 23, false), 0));
                            J$.X1(1673, J$.M(1665, J$.R(513, 'db', db, 0), 'command', 0)(J$.T(529, {
                                'getnonce': J$.T(521, 1, 22, false)
                            }, 11, false), J$.R(537, 'options', options, 0), J$.T(1657, function (err, result, connection) {
                                jalangiLabel2051:
                                    while (true) {
                                        try {
                                            J$.Fe(1577, arguments.callee, this, arguments);
                                            arguments = J$.N(1585, 'arguments', arguments, 4);
                                            err = J$.N(1593, 'err', err, 4);
                                            result = J$.N(1601, 'result', result, 4);
                                            connection = J$.N(1609, 'connection', connection, 4);
                                            J$.N(1617, 'nonce', nonce, 0);
                                            J$.N(1625, 'md5', md5, 0);
                                            J$.N(1633, 'hash_password', hash_password, 0);
                                            J$.N(1641, 'key', key, 0);
                                            J$.N(1649, 'cmd', cmd, 0);
                                            if (J$.X1(1945, J$.C(88, J$.B(18, '==', J$.R(545, 'err', err, 0), J$.T(553, null, 25, false), 0)))) {
                                                var nonce = J$.X1(585, J$.W(577, 'nonce', J$.G(569, J$.R(561, 'result', result, 0), 'nonce', 0), nonce, 1));
                                                var md5 = J$.X1(625, J$.W(617, 'md5', J$.M(609, J$.R(593, 'crypto', crypto, 1), 'createHash', 0)(J$.T(601, 'md5', 21, false)), md5, 1));
                                                J$.X1(673, J$.M(665, J$.R(633, 'md5', md5, 0), 'update', 0)(J$.B(34, '+', J$.B(26, '+', J$.R(641, 'username', username, 0), J$.T(649, ':mongo:', 21, false), 0), J$.R(657, 'password', password, 0), 0)));
                                                var hash_password = J$.X1(713, J$.W(705, 'hash_password', J$.M(697, J$.R(681, 'md5', md5, 0), 'digest', 0)(J$.T(689, 'hex', 21, false)), hash_password, 1));
                                                J$.X1(753, md5 = J$.W(745, 'md5', J$.M(737, J$.R(721, 'crypto', crypto, 1), 'createHash', 0)(J$.T(729, 'md5', 21, false)), md5, 0));
                                                J$.X1(801, J$.M(793, J$.R(761, 'md5', md5, 0), 'update', 0)(J$.B(50, '+', J$.B(42, '+', J$.R(769, 'nonce', nonce, 0), J$.R(777, 'username', username, 0), 0), J$.R(785, 'hash_password', hash_password, 0), 0)));
                                                var key = J$.X1(841, J$.W(833, 'key', J$.M(825, J$.R(809, 'md5', md5, 0), 'digest', 0)(J$.T(817, 'hex', 21, false)), key, 1));
                                                var cmd = J$.X1(897, J$.W(889, 'cmd', J$.T(881, {
                                                    'authenticate': J$.T(849, 1, 22, false),
                                                    'user': J$.R(857, 'username', username, 0),
                                                    'nonce': J$.R(865, 'nonce', nonce, 0),
                                                    'key': J$.R(873, 'key', key, 0)
                                                }, 11, false), cmd, 1));
                                                J$.X1(1569, J$.M(1561, J$.M(921, J$.R(905, 'db', db, 0), 'db', 0)(J$.R(913, 'authdb', authdb, 0)), 'command', 0)(J$.R(929, 'cmd', cmd, 0), J$.T(945, {
                                                    connection: J$.R(937, 'connection', connection, 0)
                                                }, 11, false), J$.T(1553, function (err, result) {
                                                    jalangiLabel2050:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(1513, arguments.callee, this, arguments);
                                                                arguments = J$.N(1521, 'arguments', arguments, 4);
                                                                err = J$.N(1529, 'err', err, 4);
                                                                result = J$.N(1537, 'result', result, 4);
                                                                J$.N(1545, 'internalCallback', internalCallback, 0);
                                                                J$.X1(977, numberOfConnections = J$.W(969, 'numberOfConnections', J$.B(58, '-', J$.R(953, 'numberOfConnections', numberOfConnections, 0), J$.T(961, 1, 22, false), 0), numberOfConnections, 0));
                                                                if (J$.X1(1897, J$.C(24, J$.R(985, 'err', err, 0)))) {
                                                                    J$.X1(1009, errorObject = J$.W(1001, 'errorObject', J$.R(993, 'err', err, 0), errorObject, 0));
                                                                } else {
                                                                    J$.X1(1033, credentialsValid = J$.W(1025, 'credentialsValid', J$.T(1017, true, 23, false), credentialsValid, 0));
                                                                    J$.X1(1065, numberOfValidConnections = J$.W(1057, 'numberOfValidConnections', J$.B(66, '+', J$.R(1041, 'numberOfValidConnections', numberOfValidConnections, 0), J$.T(1049, 1, 22, false), 0), numberOfValidConnections, 0));
                                                                }
                                                                if (J$.X1(1921, J$.C(80, J$.C(32, J$.B(74, '<=', J$.R(1073, 'numberOfConnections', numberOfConnections, 0), J$.T(1081, 0, 22, false), 0)) ? J$.B(90, '==', J$.U(82, 'typeof', J$.R(1089, 'callback', callback, 0)), J$.T(1097, 'function', 21, false), 0) : J$._()))) {
                                                                    var internalCallback = J$.X1(1121, J$.W(1113, 'internalCallback', J$.R(1105, 'callback', callback, 0), internalCallback, 1));
                                                                    J$.X1(1145, callback = J$.W(1137, 'callback', J$.T(1129, null, 25, false), callback, 0));
                                                                    if (J$.X1(1913, J$.C(72, J$.C(40, J$.B(98, '==', J$.R(1153, 'errorObject', errorObject, 0), J$.T(1161, null, 25, false), 0)) ? J$.R(1169, 'credentialsValid', credentialsValid, 0) : J$._()))) {
                                                                        J$.X1(1257, J$.M(1249, J$.G(1193, J$.G(1185, J$.R(1177, 'db', db, 0), 'serverConfig', 0), 'auth', 0), 'add', 0)(J$.T(1201, 'MONGODB-CR', 21, false), J$.G(1217, J$.R(1209, 'db', db, 0), 'databaseName', 0), J$.R(1225, 'username', username, 0), J$.R(1233, 'password', password, 0), J$.R(1241, 'authdb', authdb, 0)));
                                                                        J$.X1(1297, J$.F(1289, J$.R(1265, 'internalCallback', internalCallback, 0), 0)(J$.R(1273, 'errorObject', errorObject, 0), J$.T(1281, true, 23, false)));
                                                                    } else if (J$.X1(1905, J$.C(64, J$.C(56, J$.C(48, J$.B(106, '>', J$.R(1305, 'numberOfValidConnections', numberOfValidConnections, 0), J$.T(1313, 0, 22, false), 0)) ? J$.B(114, '!=', J$.R(1321, 'numberOfValidConnections', numberOfValidConnections, 0), J$.R(1329, 'numberOfConnections', numberOfConnections, 0), 0) : J$._()) ? J$.R(1337, 'credentialsValid', credentialsValid, 0) : J$._()))) {
                                                                        J$.X1(1425, J$.M(1417, J$.G(1361, J$.G(1353, J$.R(1345, 'db', db, 0), 'serverConfig', 0), 'auth', 0), 'add', 0)(J$.T(1369, 'MONGODB-CR', 21, false), J$.G(1385, J$.R(1377, 'db', db, 0), 'databaseName', 0), J$.R(1393, 'username', username, 0), J$.R(1401, 'password', password, 0), J$.R(1409, 'authdb', authdb, 0)));
                                                                        J$.X1(1465, J$.F(1457, J$.R(1433, 'internalCallback', internalCallback, 0), 0)(J$.R(1441, 'errorObject', errorObject, 0), J$.T(1449, true, 23, false)));
                                                                    } else {
                                                                        J$.X1(1505, J$.F(1497, J$.R(1473, 'internalCallback', internalCallback, 0), 0)(J$.R(1481, 'errorObject', errorObject, 0), J$.T(1489, false, 23, false)));
                                                                    }
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(1929, J$e);
                                                            } finally {
                                                                if (J$.Fr(1937))
                                                                    continue jalangiLabel2050;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 1513)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(1953, J$e);
                                        } finally {
                                            if (J$.Fr(1961))
                                                continue jalangiLabel2051;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1577)));
                        } catch (J$e) {
                            J$.Ex(1969, J$e);
                        } finally {
                            if (J$.Fr(1977))
                                continue jalangiLabel2052;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1681), authenticate, 3));
            J$.X1(1825, J$.P(1817, J$.R(1801, 'exports', exports, 2), 'authenticate', J$.R(1809, 'authenticate', authenticate, 1), 0));
        } catch (J$e) {
            J$.Ex(1985, J$e);
        } finally {
            if (J$.Sr(1993)) {
                J$.L();
                continue jalangiLabel2053;
            } else {
                J$.L();
                break jalangiLabel2053;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
