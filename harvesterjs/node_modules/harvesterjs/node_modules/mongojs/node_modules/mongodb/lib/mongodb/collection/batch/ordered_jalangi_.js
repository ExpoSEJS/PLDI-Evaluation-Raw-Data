J$.iids = {"8":[5,15,5,30],"9":[1,20,1,27],"10":[5,15,5,30],"16":[12,29,12,87],"17":[1,28,1,32],"18":[33,26,33,49],"24":[33,26,33,62],"25":[1,20,1,33],"26":[33,26,33,62],"32":[44,26,44,62],"33":[1,20,1,33],"34":[44,26,44,49],"40":[79,13,79,33],"41":[1,20,1,33],"42":[44,26,44,62],"48":[96,20,96,45],"49":[2,26,2,38],"50":[79,13,79,33],"56":[90,20,90,45],"57":[2,26,2,45],"58":[84,13,84,38],"64":[84,13,84,38],"65":[2,26,2,45],"66":[90,20,90,45],"72":[106,13,106,42],"73":[2,26,2,45],"74":[96,20,96,45],"80":[108,13,108,33],"81":[3,14,3,21],"82":[106,13,106,42],"88":[110,13,110,124],"89":[3,22,3,33],"90":[107,33,107,96],"96":[110,13,110,161],"97":[3,14,3,34],"98":[108,13,108,33],"104":[110,13,110,161],"105":[3,45,3,52],"106":[110,13,110,33],"112":[119,13,119,36],"113":[3,53,3,63],"114":[110,13,110,54],"120":[129,13,129,22],"121":[3,45,3,64],"122":[110,58,110,103],"128":[136,13,136,32],"129":[3,74,3,81],"130":[110,58,110,124],"136":[153,20,153,52],"137":[3,82,3,95],"138":[110,128,110,161],"144":[147,20,147,52],"145":[3,74,3,96],"146":[116,32,116,52],"152":[141,13,141,45],"153":[3,117,3,122],"154":[117,37,117,69],"160":[160,13,160,33],"161":[3,117,3,139],"162":[124,28,124,44],"168":[165,17,165,36],"169":[3,154,3,160],"170":[129,13,129,22],"176":[168,17,168,35],"177":[3,154,3,171],"178":[136,13,136,32],"184":[171,17,171,50],"185":[3,192,3,198],"186":[141,13,141,45],"192":[178,13,178,42],"193":[3,192,3,215],"194":[147,20,147,52],"200":[183,23,183,41],"201":[3,228,3,234],"202":[153,20,153,52],"208":[185,17,185,52],"209":[3,228,3,243],"210":[160,13,160,33],"216":[186,92,186,100],"217":[3,256,3,263],"218":[165,17,165,36],"224":[187,21,187,36],"225":[3,264,3,270],"226":[168,17,168,35],"232":[185,17,185,52],"233":[3,256,3,271],"234":[171,17,171,50],"240":[196,13,196,42],"241":[3,256,3,280],"242":[178,13,178,42],"248":[201,23,201,43],"249":[3,290,3,296],"250":[185,17,185,34],"256":[202,13,202,25],"257":[3,290,3,302],"258":[185,38,185,52],"264":[204,13,204,26],"265":[3,324,3,330],"266":[187,21,187,36],"272":[207,17,207,52],"273":[3,324,3,348],"274":[191,35,191,58],"280":[208,90,208,101],"281":[3,14,3,34],"282":[196,13,196,42],"288":[209,21,209,36],"289":[3,14,3,34],"290":[201,23,201,43],"296":[207,17,207,52],"297":[3,45,3,64],"298":[207,17,207,34],"304":[218,13,218,42],"305":[3,45,3,64],"306":[207,38,207,52],"312":[223,23,223,43],"313":[3,74,3,96],"314":[209,21,209,36],"320":[224,26,224,43],"321":[3,74,3,96],"322":[213,35,213,58],"328":[226,17,226,52],"329":[3,117,3,139],"330":[218,13,218,42],"336":[227,90,227,98],"337":[3,117,3,139],"338":[223,23,223,43],"344":[228,21,228,36],"345":[3,154,3,171],"346":[224,26,224,43],"352":[226,17,226,52],"353":[3,154,3,171],"354":[226,17,226,34],"360":[237,13,237,32],"361":[3,192,3,215],"362":[226,38,226,52],"368":[242,17,242,50],"369":[3,192,3,215],"370":[228,21,228,36],"376":[245,17,245,35],"377":[3,228,3,243],"378":[232,35,232,58],"384":[250,13,250,45],"385":[3,228,3,243],"386":[237,13,237,32],"392":[253,13,253,45],"393":[3,256,3,280],"394":[242,17,242,50],"400":[256,13,256,45],"401":[3,256,3,280],"402":[245,17,245,35],"408":[261,13,261,21],"409":[3,290,3,302],"410":[250,13,250,45],"416":[263,13,263,47],"417":[3,290,3,302],"418":[253,13,253,45],"424":[268,13,268,25],"425":[3,324,3,348],"426":[256,13,256,45],"432":[270,13,270,32],"433":[3,324,3,348],"434":[263,13,263,33],"440":[273,13,273,63],"441":[5,15,5,22],"442":[263,13,263,47],"449":[5,26,5,30],"450":[270,13,270,32],"457":[5,33,5,35],"465":[5,38,5,45],"473":[5,15,5,45],"481":[5,5,5,46],"489":[6,16,6,20],"497":[6,16,6,20],"505":[6,16,6,20],"513":[7,20,7,25],"521":[7,20,7,25],"529":[7,20,7,25],"537":[8,21,8,25],"545":[8,21,8,25],"553":[8,21,8,25],"561":[9,14,9,24],"569":[9,14,9,27],"577":[9,14,9,27],"585":[9,14,9,27],"593":[10,16,10,18],"601":[10,16,10,23],"609":[10,16,10,23],"617":[10,16,10,23],"625":[11,21,11,31],"633":[11,21,11,46],"641":[11,21,11,46],"649":[11,21,11,46],"657":[12,29,12,31],"665":[12,29,12,44],"673":[12,29,12,61],"675":[12,29,12,59],"681":[12,29,12,79],"689":[12,83,12,87],"697":[12,29,12,87],"705":[12,29,12,87],"713":[13,29,13,31],"721":[13,29,13,44],"729":[13,29,13,61],"731":[13,29,13,59],"737":[13,29,13,73],"745":[13,29,13,73],"753":[13,29,13,73],"761":[14,24,14,30],"769":[14,48,14,58],"777":[14,60,14,67],"785":[14,24,14,68],"787":[14,24,14,47],"793":[14,24,14,68],"801":[14,24,14,68],"809":[15,24,15,28],"817":[15,24,15,28],"825":[15,24,15,28],"833":[16,24,16,25],"841":[16,24,16,25],"849":[16,24,16,25],"857":[17,28,17,29],"865":[17,28,17,29],"873":[17,28,17,29],"881":[18,33,18,34],"889":[18,33,18,34],"897":[18,33,18,34],"905":[19,19,19,21],"913":[19,19,19,21],"921":[19,19,19,21],"929":[21,13,21,14],"937":[22,22,22,24],"945":[23,29,23,31],"953":[24,20,24,21],"961":[25,20,25,21],"969":[26,19,26,20],"977":[27,20,27,21],"985":[28,19,28,20],"993":[29,19,29,21],"1001":[20,22,30,6],"1009":[20,22,30,6],"1017":[20,22,30,6],"1025":[32,9,32,13],"1033":[33,33,33,42],"1041":[33,33,33,49],"1049":[33,53,33,62],"1057":[33,65,33,74],"1065":[33,65,33,81],"1073":[33,84,33,89],"1081":[33,26,33,89],"1089":[33,26,33,89],"1097":[35,20,35,29],"1105":[35,20,35,38],"1113":[36,20,36,34],"1121":[37,24,37,28],"1129":[38,25,38,31],"1137":[34,28,39,14],"1145":[34,28,39,14],"1153":[34,28,39,14],"1161":[40,25,40,29],"1169":[40,25,40,29],"1177":[40,13,40,30],"1185":[41,20,41,39],"1193":[41,40,41,44],"1201":[41,46,41,52],"1209":[41,46,41,59],"1217":[41,61,41,69],"1225":[41,20,41,70],"1233":[41,20,41,70],"1241":[41,13,41,71],"1249":[32,23,42,10],"1257":[32,23,42,10],"1265":[32,23,42,10],"1273":[32,23,42,10],"1281":[32,23,42,10],"1289":[32,23,42,10],"1297":[32,9,42,10],"1305":[32,9,42,11],"1313":[43,9,43,13],"1321":[44,33,44,42],"1329":[44,33,44,49],"1337":[44,53,44,62],"1345":[44,65,44,74],"1353":[44,65,44,81],"1361":[44,84,44,89],"1369":[44,26,44,89],"1377":[44,26,44,89],"1385":[46,20,46,29],"1393":[46,20,46,38],"1401":[47,20,47,34],"1409":[48,24,48,29],"1417":[49,25,49,31],"1425":[45,28,50,14],"1433":[45,28,50,14],"1441":[45,28,50,14],"1449":[51,25,51,29],"1457":[51,25,51,29],"1465":[51,13,51,30],"1473":[52,20,52,39],"1481":[52,40,52,44],"1489":[52,46,52,52],"1497":[52,46,52,59],"1505":[52,61,52,69],"1513":[52,20,52,70],"1521":[52,20,52,70],"1529":[52,13,52,71],"1537":[43,26,53,10],"1545":[43,26,53,10],"1553":[43,26,53,10],"1561":[43,26,53,10],"1569":[43,26,53,10],"1577":[43,26,53,10],"1585":[43,9,53,10],"1593":[43,9,53,11],"1601":[54,9,54,13],"1609":[55,13,55,17],"1617":[55,28,55,42],"1625":[55,13,55,43],"1627":[55,13,55,27],"1633":[55,13,55,44],"1641":[54,27,56,10],"1649":[54,27,56,10],"1657":[54,27,56,10],"1665":[54,27,56,10],"1673":[54,9,56,10],"1681":[54,9,56,11],"1689":[57,9,57,13],"1697":[58,13,58,22],"1705":[58,32,58,36],"1713":[58,13,58,36],"1721":[58,13,58,37],"1729":[59,20,59,24],"1737":[59,20,59,24],"1745":[59,13,59,25],"1753":[57,23,60,10],"1761":[57,23,60,10],"1769":[57,23,60,10],"1777":[57,9,60,10],"1785":[57,9,60,11],"1793":[61,9,61,13],"1801":[63,20,63,29],"1809":[63,20,63,38],"1817":[64,24,64,25],"1825":[62,28,65,14],"1833":[62,28,65,14],"1841":[62,28,65,14],"1849":[66,25,66,29],"1857":[66,25,66,29],"1865":[66,13,66,30],"1873":[67,20,67,39],"1881":[67,40,67,44],"1889":[67,46,67,52],"1897":[67,46,67,59],"1905":[67,61,67,69],"1913":[67,20,67,70],"1921":[67,20,67,70],"1929":[67,13,67,71],"1937":[61,26,68,10],"1945":[61,26,68,10],"1953":[61,26,68,10],"1961":[61,26,68,10],"1969":[61,9,68,10],"1977":[61,9,68,11],"1985":[69,9,69,13],"1993":[71,20,71,29],"2001":[71,20,71,38],"2009":[72,24,72,25],"2017":[70,28,73,14],"2025":[70,28,73,14],"2033":[70,28,73,14],"2041":[74,25,74,29],"2049":[74,25,74,29],"2057":[74,13,74,30],"2065":[75,20,75,39],"2073":[75,40,75,44],"2081":[75,46,75,52],"2089":[75,46,75,59],"2097":[75,61,75,69],"2105":[75,20,75,70],"2113":[75,20,75,70],"2121":[75,13,75,71],"2129":[69,23,76,10],"2137":[69,23,76,10],"2145":[69,23,76,10],"2153":[69,23,76,10],"2161":[69,9,76,10],"2169":[69,9,76,11],"2177":[31,25,77,6],"2185":[31,25,77,6],"2193":[31,25,77,6],"2201":[31,25,77,6],"2209":[31,25,77,6],"2217":[78,5,78,9],"2225":[79,13,79,21],"2233":[79,13,79,25],"2241":[79,29,79,33],"2249":[80,13,80,21],"2257":[80,32,80,40],"2265":[80,28,80,42],"2273":[80,13,80,42],"2281":[80,13,80,43],"2289":[81,16,81,35],"2297":[81,36,81,40],"2305":[81,42,81,48],"2313":[81,42,81,55],"2321":[81,57,81,65],"2329":[81,16,81,66],"2337":[81,16,81,66],"2345":[81,9,81,67],"2353":[78,19,82,6],"2361":[78,19,82,6],"2369":[78,19,82,6],"2377":[78,19,82,6],"2385":[78,5,82,6],"2393":[78,5,82,7],"2401":[84,13,84,21],"2409":[84,25,84,31],"2417":[84,25,84,38],"2425":[86,25,86,35],"2433":[87,28,87,47],"2441":[88,26,88,30],"2449":[85,20,89,14],"2457":[85,20,89,14],"2465":[85,13,89,15],"2473":[90,20,90,28],"2481":[90,32,90,38],"2489":[90,32,90,45],"2497":[92,25,92,35],"2505":[93,26,93,45],"2513":[94,26,94,30],"2521":[91,20,95,14],"2529":[91,20,95,14],"2537":[91,13,95,15],"2545":[96,20,96,28],"2553":[96,32,96,38],"2561":[96,32,96,45],"2569":[98,25,98,35],"2577":[99,26,99,45],"2585":[100,26,100,30],"2593":[97,20,101,14],"2601":[97,20,101,14],"2609":[97,13,101,15],"2617":[83,29,103,6],"2625":[83,29,103,6],"2633":[83,29,103,6],"2641":[83,29,103,6],"2649":[83,29,103,6],"2657":[83,29,103,6],"2665":[83,29,103,6],"2673":[83,29,103,6],"2681":[83,29,103,6],"2689":[105,24,105,28],"2697":[105,49,105,57],"2705":[105,59,105,64],"2713":[105,24,105,65],"2715":[105,24,105,48],"2721":[105,24,105,65],"2729":[105,24,105,65],"2737":[106,13,106,21],"2745":[106,25,106,42],"2753":[107,19,107,24],"2761":[107,33,107,76],"2769":[107,79,107,96],"2777":[107,19,107,97],"2779":[107,19,107,32],"2785":[107,19,107,97],"2793":[107,13,107,98],"2801":[108,13,108,25],"2809":[108,29,108,33],"2817":[109,32,109,37],"2825":[109,38,109,45],"2833":[109,47,109,59],"2841":[109,28,109,60],"2849":[109,28,109,60],"2857":[109,13,109,61],"2865":[110,13,110,29],"2873":[110,32,110,33],"2881":[110,37,110,54],"2889":[110,58,110,79],"2897":[110,82,110,103],"2905":[110,107,110,124],"2913":[110,128,110,140],"2921":[110,128,110,150],"2929":[110,154,110,161],"2937":[111,13,111,20],"2945":[111,26,111,38],"2953":[111,13,111,39],"2955":[111,13,111,25],"2961":[111,13,111,40],"2969":[112,32,112,37],"2977":[112,38,112,45],"2985":[112,47,112,59],"2993":[112,28,112,60],"3001":[112,28,112,60],"3009":[112,13,112,61],"3017":[113,32,113,33],"3025":[113,32,113,33],"3033":[113,13,113,34],"3041":[114,37,114,38],"3049":[114,37,114,38],"3057":[114,13,114,39],"3065":[116,32,116,48],"3073":[116,51,116,52],"3081":[116,32,116,52],"3089":[116,13,116,53],"3097":[117,37,117,58],"3105":[117,61,117,69],"3113":[117,37,117,69],"3121":[117,13,117,70],"3129":[119,13,119,18],"3137":[119,27,119,35],"3145":[119,13,119,36],"3147":[119,13,119,26],"3153":[120,19,120,24],"3161":[120,33,120,73],"3169":[120,19,120,74],"3171":[120,19,120,32],"3177":[120,19,120,74],"3185":[120,13,120,75],"3193":[122,13,122,25],"3201":[122,13,122,41],"3209":[122,47,122,59],"3217":[122,13,122,60],"3219":[122,13,122,46],"3225":[122,13,122,61],"3233":[123,13,123,25],"3241":[123,13,123,36],"3249":[123,42,123,50],"3257":[123,13,123,51],"3259":[123,13,123,41],"3265":[123,13,123,52],"3273":[124,28,124,40],"3281":[124,43,124,44],"3289":[124,28,124,44],"3297":[124,13,124,45],"3305":[126,16,126,21],"3313":[126,16,126,21],"3321":[126,9,126,22],"3329":[104,31,127,6],"3337":[104,31,127,6],"3345":[104,31,127,6],"3353":[104,31,127,6],"3361":[104,31,127,6],"3369":[104,31,127,6],"3377":[104,31,127,6],"3385":[104,31,127,6],"3393":[104,31,127,6],"3401":[128,5,128,9],"3409":[129,14,129,22],"3417":[130,19,130,24],"3425":[130,33,130,78],"3433":[130,19,130,79],"3435":[130,19,130,32],"3441":[130,19,130,79],"3449":[130,13,130,80],"3457":[132,33,132,41],"3465":[132,21,132,43],"3473":[132,21,132,43],"3481":[132,9,132,44],"3489":[133,20,133,33],"3497":[133,16,133,35],"3505":[133,16,133,35],"3513":[133,9,133,36],"3521":[128,17,134,6],"3529":[128,17,134,6],"3537":[128,17,134,6],"3545":[128,17,134,6],"3553":[128,5,134,6],"3561":[128,5,134,7],"3569":[136,13,136,20],"3577":[136,13,136,27],"3585":[136,31,136,32],"3593":[137,20,137,28],"3601":[137,29,137,33],"3609":[137,39,137,55],"3617":[137,56,137,66],"3625":[137,35,137,67],"3633":[137,20,137,68],"3641":[137,20,137,68],"3649":[137,13,137,69],"3657":[139,21,139,28],"3665":[139,21,139,36],"3667":[139,21,139,34],"3673":[139,21,139,36],"3681":[139,21,139,36],"3689":[140,19,140,23],"3697":[140,19,140,23],"3705":[140,19,140,23],"3713":[141,13,141,18],"3721":[141,13,141,28],"3729":[141,32,141,38],"3737":[141,32,141,45],"3745":[143,25,143,34],"3753":[144,26,144,31],"3761":[144,26,144,42],"3769":[145,26,145,30],"3777":[142,19,146,14],"3785":[142,19,146,14],"3793":[142,13,146,15],"3801":[147,20,147,25],"3809":[147,20,147,35],"3817":[147,39,147,45],"3825":[147,39,147,52],"3833":[149,25,149,34],"3841":[150,28,150,33],"3849":[150,28,150,44],"3857":[151,26,151,30],"3865":[148,19,152,14],"3873":[148,19,152,14],"3881":[148,13,152,15],"3889":[153,20,153,25],"3897":[153,20,153,35],"3905":[153,39,153,45],"3913":[153,39,153,52],"3921":[155,25,155,34],"3929":[156,26,156,31],"3937":[156,26,156,42],"3945":[157,26,157,30],"3953":[154,19,158,14],"3961":[154,19,158,14],"3969":[154,13,158,15],"3977":[160,13,160,25],"3985":[160,29,160,33],"3993":[161,13,161,16],"4001":[161,32,161,44],"4009":[161,13,161,44],"4017":[161,13,161,45],"4025":[163,9,163,11],"4033":[163,20,163,23],"4041":[164,31,164,48],"4049":[164,49,164,53],"4057":[164,55,164,60],"4065":[164,62,164,72],"4073":[164,74,164,77],"4081":[164,79,164,85],"4089":[164,31,164,86],"4097":[164,31,164,86],"4105":[164,31,164,86],"4113":[165,17,165,28],"4121":[165,32,165,36],"4129":[166,24,166,32],"4137":[166,33,166,37],"4145":[166,43,166,59],"4153":[166,60,166,70],"4161":[166,39,166,71],"4169":[166,24,166,72],"4177":[166,24,166,72],"4185":[166,17,166,73],"4193":[168,17,168,27],"4201":[168,17,168,30],"4209":[168,34,168,35],"4217":[169,24,169,32],"4225":[169,33,169,43],"4233":[169,33,169,49],"4241":[169,51,169,55],"4249":[169,24,169,56],"4257":[169,24,169,56],"4265":[169,17,169,57],"4273":[171,17,171,27],"4281":[171,17,171,39],"4289":[171,17,171,46],"4297":[171,49,171,50],"4305":[172,24,172,32],"4313":[172,33,172,37],"4321":[172,43,172,59],"4329":[172,60,172,70],"4337":[172,39,172,71],"4345":[172,24,172,72],"4353":[172,24,172,72],"4361":[172,17,172,73],"4369":[174,13,174,28],"4377":[174,29,174,37],"4385":[174,13,174,38],"4393":[174,13,174,39],"4401":[163,25,175,10],"4409":[163,25,175,10],"4417":[163,25,175,10],"4425":[163,25,175,10],"4433":[163,25,175,10],"4441":[163,25,175,10],"4449":[163,9,175,11],"4451":[163,9,163,19],"4457":[163,9,175,12],"4465":[135,27,176,6],"4473":[135,27,176,6],"4481":[135,27,176,6],"4489":[135,27,176,6],"4497":[135,27,176,6],"4505":[135,27,176,6],"4513":[135,27,176,6],"4521":[135,27,176,6],"4529":[178,13,178,19],"4537":[178,13,178,30],"4545":[178,13,178,37],"4553":[178,41,178,42],"4561":[179,20,179,29],"4569":[179,30,179,34],"4577":[179,36,179,43],"4585":[179,20,179,44],"4593":[179,20,179,44],"4601":[179,13,179,45],"4609":[181,24,181,30],"4617":[181,24,181,41],"4625":[181,24,181,49],"4627":[181,24,181,47],"4633":[181,24,181,49],"4641":[181,24,181,49],"4649":[182,21,182,27],"4657":[182,21,182,43],"4665":[182,21,182,51],"4667":[182,21,182,49],"4673":[182,21,182,51],"4681":[182,21,182,51],"4689":[183,23,183,35],"4697":[183,39,183,41],"4705":[183,23,183,41],"4713":[183,23,183,41],"4721":[184,9,184,20],"4729":[184,28,184,36],"4737":[184,38,184,45],"4745":[185,17,185,24],"4753":[185,17,185,26],"4761":[185,30,185,34],"4769":[185,38,185,45],"4777":[185,38,185,47],"4785":[185,51,185,52],"4793":[186,30,186,36],"4801":[186,56,186,60],"4809":[186,62,186,70],"4817":[186,72,186,78],"4825":[186,80,186,90],"4833":[186,92,186,95],"4841":[186,99,186,100],"4849":[186,102,186,107],"4857":[186,30,186,108],"4859":[186,30,186,55],"4865":[186,30,186,108],"4873":[186,30,186,108],"4881":[187,21,187,27],"4889":[187,31,187,36],"4897":[188,28,188,37],"4905":[188,38,188,42],"4913":[188,48,188,64],"4921":[188,65,188,75],"4929":[188,44,188,76],"4937":[188,28,188,77],"4945":[188,28,188,77],"4953":[188,21,188,78],"4961":[191,13,191,19],"4969":[191,35,191,41],"4977":[191,35,191,54],"4985":[191,57,191,58],"4993":[191,13,191,58],"5001":[191,13,191,59],"5009":[192,13,192,27],"5017":[192,28,192,39],"5025":[192,41,192,47],"5033":[192,49,192,56],"5041":[192,58,192,67],"5049":[192,13,192,68],"5057":[192,13,192,69],"5065":[184,47,193,10],"5073":[184,47,193,10],"5081":[184,47,193,10],"5089":[184,47,193,10],"5097":[184,47,193,10],"5105":[184,47,193,10],"5113":[184,9,193,11],"5115":[184,9,184,27],"5121":[184,9,193,12],"5129":[177,26,194,6],"5137":[177,26,194,6],"5145":[177,26,194,6],"5153":[177,26,194,6],"5161":[177,26,194,6],"5169":[177,26,194,6],"5177":[177,26,194,6],"5185":[177,26,194,6],"5193":[177,26,194,6],"5201":[177,26,194,6],"5209":[177,26,194,6],"5217":[177,26,194,6],"5225":[196,13,196,19],"5233":[196,13,196,30],"5241":[196,13,196,37],"5249":[196,41,196,42],"5257":[197,20,197,29],"5265":[197,30,197,34],"5273":[197,36,197,43],"5281":[197,20,197,44],"5289":[197,20,197,44],"5297":[197,13,197,45],"5305":[199,22,199,28],"5313":[199,22,199,39],"5321":[199,22,199,47],"5323":[199,22,199,45],"5329":[199,22,199,47],"5337":[199,22,199,47],"5345":[200,21,200,27],"5353":[200,21,200,43],"5361":[200,21,200,51],"5363":[200,21,200,49],"5369":[200,21,200,51],"5377":[200,21,200,51],"5385":[201,23,201,35],"5393":[201,39,201,43],"5401":[201,46,201,52],"5409":[201,66,201,78],"5417":[201,46,201,79],"5419":[201,46,201,65],"5425":[201,82,201,84],"5433":[201,23,201,84],"5441":[201,23,201,84],"5449":[202,13,202,19],"5457":[202,13,202,25],"5465":[203,13,203,20],"5473":[203,29,203,35],"5481":[203,29,203,41],"5489":[203,13,203,41],"5497":[203,13,203,42],"5505":[204,13,204,19],"5513":[204,13,204,26],"5521":[205,13,205,20],"5529":[205,30,205,36],"5537":[205,30,205,43],"5545":[205,13,205,43],"5553":[205,13,205,44],"5561":[206,9,206,20],"5569":[206,28,206,34],"5577":[206,28,206,36],"5585":[206,38,206,44],"5593":[206,38,206,46],"5601":[206,48,206,55],"5609":[207,17,207,24],"5617":[207,17,207,26],"5625":[207,30,207,34],"5633":[207,38,207,45],"5641":[207,38,207,47],"5649":[207,51,207,52],"5657":[208,30,208,36],"5665":[208,56,208,60],"5673":[208,62,208,68],"5681":[208,70,208,76],"5689":[208,78,208,88],"5697":[208,90,208,93],"5705":[208,97,208,101],"5713":[208,103,208,108],"5721":[208,30,208,109],"5723":[208,30,208,55],"5729":[208,30,208,109],"5737":[208,30,208,109],"5745":[209,21,209,27],"5753":[209,31,209,36],"5761":[210,28,210,37],"5769":[210,38,210,42],"5777":[210,48,210,64],"5785":[210,65,210,75],"5793":[210,44,210,76],"5801":[210,28,210,77],"5809":[210,28,210,77],"5817":[210,21,210,78],"5825":[213,13,213,19],"5833":[213,35,213,41],"5841":[213,35,213,54],"5849":[213,57,213,58],"5857":[213,13,213,58],"5865":[213,13,213,59],"5873":[214,13,214,27],"5881":[214,28,214,39],"5889":[214,41,214,47],"5897":[214,49,214,56],"5905":[214,58,214,67],"5913":[214,13,214,68],"5921":[214,13,214,69],"5929":[206,57,215,10],"5937":[206,57,215,10],"5945":[206,57,215,10],"5953":[206,57,215,10],"5961":[206,57,215,10],"5969":[206,57,215,10],"5977":[206,57,215,10],"5985":[206,9,215,11],"5987":[206,9,206,27],"5993":[206,9,215,12],"6001":[195,26,216,6],"6009":[195,26,216,6],"6017":[195,26,216,6],"6025":[195,26,216,6],"6033":[195,26,216,6],"6041":[195,26,216,6],"6049":[195,26,216,6],"6057":[195,26,216,6],"6065":[195,26,216,6],"6073":[195,26,216,6],"6081":[195,26,216,6],"6089":[195,26,216,6],"6097":[218,13,218,19],"6105":[218,13,218,30],"6113":[218,13,218,37],"6121":[218,41,218,42],"6129":[219,20,219,29],"6137":[219,30,219,34],"6145":[219,36,219,43],"6153":[219,20,219,44],"6161":[219,20,219,44],"6169":[219,13,219,45],"6177":[221,22,221,28],"6185":[221,22,221,39],"6193":[221,22,221,47],"6195":[221,22,221,45],"6201":[221,22,221,47],"6209":[221,22,221,47],"6217":[222,21,222,27],"6225":[222,21,222,43],"6233":[222,21,222,51],"6235":[222,21,222,49],"6241":[222,21,222,51],"6249":[222,21,222,51],"6257":[223,23,223,35],"6265":[223,39,223,43],"6273":[223,46,223,52],"6281":[223,66,223,78],"6289":[223,46,223,79],"6291":[223,46,223,65],"6297":[223,82,223,84],"6305":[223,23,223,84],"6313":[223,23,223,84],"6321":[224,9,224,16],"6329":[224,26,224,32],"6337":[224,26,224,38],"6345":[224,42,224,43],"6353":[224,46,224,50],"6361":[224,53,224,58],"6369":[224,9,224,58],"6377":[224,9,224,59],"6385":[225,9,225,20],"6393":[225,28,225,34],"6401":[225,28,225,36],"6409":[225,38,225,45],"6417":[226,17,226,24],"6425":[226,17,226,26],"6433":[226,30,226,34],"6441":[226,38,226,45],"6449":[226,38,226,47],"6457":[226,51,226,52],"6465":[227,30,227,36],"6473":[227,56,227,60],"6481":[227,62,227,68],"6489":[227,70,227,76],"6497":[227,78,227,88],"6505":[227,90,227,93],"6513":[227,97,227,98],"6521":[227,100,227,105],"6529":[227,30,227,106],"6531":[227,30,227,55],"6537":[227,30,227,106],"6545":[227,30,227,106],"6553":[228,21,228,27],"6561":[228,31,228,36],"6569":[229,28,229,37],"6577":[229,38,229,42],"6585":[229,48,229,64],"6593":[229,65,229,75],"6601":[229,44,229,76],"6609":[229,28,229,77],"6617":[229,28,229,77],"6625":[229,21,229,78],"6633":[232,13,232,19],"6641":[232,35,232,41],"6649":[232,35,232,54],"6657":[232,57,232,58],"6665":[232,13,232,58],"6673":[232,13,232,59],"6681":[233,13,233,27],"6689":[233,28,233,39],"6697":[233,41,233,47],"6705":[233,49,233,56],"6713":[233,58,233,67],"6721":[233,13,233,68],"6729":[233,13,233,69],"6737":[225,47,234,10],"6745":[225,47,234,10],"6753":[225,47,234,10],"6761":[225,47,234,10],"6769":[225,47,234,10],"6777":[225,47,234,10],"6785":[225,9,234,11],"6787":[225,9,225,27],"6793":[225,9,234,12],"6801":[217,26,235,6],"6809":[217,26,235,6],"6817":[217,26,235,6],"6825":[217,26,235,6],"6833":[217,26,235,6],"6841":[217,26,235,6],"6849":[217,26,235,6],"6857":[217,26,235,6],"6865":[217,26,235,6],"6873":[217,26,235,6],"6881":[217,26,235,6],"6889":[217,26,235,6],"6897":[237,13,237,20],"6905":[237,13,237,27],"6913":[237,31,237,32],"6921":[238,20,238,28],"6929":[238,29,238,33],"6937":[238,39,238,55],"6945":[238,56,238,66],"6953":[238,35,238,67],"6961":[238,20,238,68],"6969":[238,20,238,68],"6977":[238,13,238,69],"6985":[240,21,240,28],"6993":[240,21,240,36],"6995":[240,21,240,34],"7001":[240,21,240,36],"7009":[240,21,240,36],"7017":[242,17,242,27],"7025":[242,17,242,39],"7033":[242,17,242,46],"7041":[242,49,242,50],"7049":[243,24,243,32],"7057":[243,33,243,37],"7065":[243,43,243,59],"7073":[243,60,243,70],"7081":[243,39,243,71],"7089":[243,24,243,72],"7097":[243,24,243,72],"7105":[243,17,243,73],"7113":[245,17,245,27],"7121":[245,17,245,30],"7129":[245,34,245,35],"7137":[246,24,246,32],"7145":[246,33,246,43],"7153":[246,33,246,49],"7161":[246,51,246,55],"7169":[246,24,246,56],"7177":[246,24,246,56],"7185":[246,17,246,57],"7193":[248,13,248,50],"7201":[248,51,248,59],"7209":[248,13,248,60],"7217":[248,13,248,61],"7225":[241,39,249,10],"7233":[241,39,249,10],"7241":[241,39,249,10],"7249":[241,39,249,10],"7257":[241,39,249,10],"7265":[241,39,249,10],"7273":[241,39,249,10],"7281":[250,13,250,18],"7289":[250,13,250,28],"7297":[250,32,250,38],"7305":[250,32,250,45],"7313":[251,20,251,34],"7321":[251,35,251,45],"7329":[251,47,251,52],"7337":[251,59,251,60],"7345":[251,54,251,62],"7353":[251,64,251,87],"7361":[251,20,251,88],"7369":[251,20,251,88],"7377":[251,13,251,89],"7385":[253,13,253,18],"7393":[253,13,253,28],"7401":[253,32,253,38],"7409":[253,32,253,45],"7417":[254,20,254,34],"7425":[254,35,254,45],"7433":[254,47,254,52],"7441":[254,59,254,60],"7449":[254,54,254,62],"7457":[254,64,254,87],"7465":[254,20,254,88],"7473":[254,20,254,88],"7481":[254,13,254,89],"7489":[256,13,256,18],"7497":[256,13,256,28],"7505":[256,32,256,38],"7513":[256,32,256,45],"7521":[257,20,257,34],"7529":[257,35,257,45],"7537":[257,47,257,52],"7545":[257,59,257,60],"7553":[257,54,257,62],"7561":[257,64,257,87],"7569":[257,20,257,88],"7577":[257,20,257,88],"7585":[257,13,257,89],"7593":[236,49,259,6],"7601":[236,49,259,6],"7609":[236,49,259,6],"7617":[236,49,259,6],"7625":[236,49,259,6],"7633":[236,49,259,6],"7641":[236,49,259,6],"7649":[236,49,259,6],"7657":[260,5,260,9],"7665":[261,13,261,21],"7673":[262,23,262,28],"7681":[262,37,262,66],"7689":[262,19,262,67],"7691":[262,23,262,36],"7697":[262,19,262,67],"7705":[262,13,262,68],"7713":[263,20,263,33],"7721":[263,37,263,47],"7729":[264,24,264,37],"7737":[264,24,264,37],"7745":[264,13,264,38],"7753":[266,28,266,41],"7761":[266,28,266,41],"7769":[266,13,266,42],"7777":[268,13,268,25],"7785":[269,13,269,20],"7793":[269,26,269,38],"7801":[269,13,269,39],"7803":[269,13,269,25],"7809":[269,13,269,40],"7817":[270,13,270,20],"7825":[270,13,270,27],"7833":[270,31,270,32],"7841":[271,19,271,24],"7849":[271,33,271,75],"7857":[271,19,271,76],"7859":[271,19,271,32],"7865":[271,19,271,76],"7873":[271,13,271,77],"7881":[273,13,273,29],"7889":[273,30,273,32],"7897":[273,30,273,45],"7905":[273,30,273,62],"7907":[273,30,273,60],"7913":[273,13,273,63],"7921":[274,20,274,35],"7929":[274,36,274,44],"7937":[274,20,274,45],"7945":[274,20,274,45],"7953":[274,13,274,46],"7961":[275,9,275,19],"7969":[275,32,275,36],"7977":[275,9,275,36],"7985":[275,9,275,37],"7993":[276,9,276,46],"8001":[276,47,276,55],"8009":[276,9,276,56],"8017":[276,9,276,57],"8025":[260,20,277,6],"8033":[260,20,277,6],"8041":[260,20,277,6],"8049":[260,20,277,6],"8057":[260,20,277,6],"8065":[260,5,277,6],"8073":[260,5,277,7],"8081":[4,1,278,2],"8089":[4,1,278,2],"8097":[4,1,278,2],"8105":[4,1,278,2],"8113":[4,1,278,2],"8121":[4,1,278,2],"8129":[4,1,278,2],"8137":[4,1,278,2],"8145":[4,1,278,2],"8153":[4,1,278,2],"8161":[4,1,278,2],"8169":[4,1,278,2],"8177":[4,1,278,2],"8185":[4,1,278,2],"8193":[4,1,278,2],"8201":[4,1,278,2],"8209":[4,1,278,2],"8217":[4,1,278,2],"8225":[4,1,278,2],"8233":[4,1,278,2],"8241":[4,1,278,2],"8249":[4,1,278,2],"8257":[4,1,278,2],"8265":[4,1,278,2],"8273":[4,1,278,2],"8281":[4,1,278,2],"8289":[4,1,278,2],"8297":[280,16,280,36],"8305":[280,37,280,41],"8313":[280,43,280,50],"8321":[280,12,280,51],"8329":[280,12,280,51],"8337":[280,5,280,52],"8345":[279,31,281,2],"8353":[279,31,281,2],"8361":[279,31,281,2],"8369":[279,31,281,2],"8377":[279,31,281,2],"8385":[279,31,281,2],"8393":[282,1,282,8],"8401":[282,35,282,58],"8409":[282,1,282,58],"8417":[282,1,282,59],"8425":[1,1,282,59],"8433":[1,1,282,59],"8441":[1,1,282,59],"8449":[1,1,282,59],"8457":[1,1,282,59],"8465":[1,1,282,59],"8473":[1,1,282,59],"8481":[1,1,282,59],"8489":[1,1,282,59],"8497":[1,1,282,59],"8505":[1,1,282,59],"8513":[1,1,282,59],"8521":[1,1,282,59],"8529":[4,1,278,2],"8537":[1,1,282,59],"8545":[1,1,282,59],"8553":[5,15,5,45],"8561":[33,26,33,89],"8569":[32,23,42,10],"8577":[32,23,42,10],"8585":[44,26,44,89],"8593":[43,26,53,10],"8601":[43,26,53,10],"8609":[54,27,56,10],"8617":[54,27,56,10],"8625":[57,23,60,10],"8633":[57,23,60,10],"8641":[61,26,68,10],"8649":[61,26,68,10],"8657":[69,23,76,10],"8665":[69,23,76,10],"8673":[31,25,77,6],"8681":[31,25,77,6],"8689":[79,9,80,43],"8697":[78,19,82,6],"8705":[78,19,82,6],"8713":[96,16,102,10],"8721":[90,16,102,10],"8729":[84,9,102,10],"8737":[83,29,103,6],"8745":[83,29,103,6],"8753":[106,9,107,98],"8761":[108,9,109,61],"8769":[110,9,118,10],"8777":[119,9,125,10],"8785":[104,31,127,6],"8793":[104,31,127,6],"8801":[129,9,131,10],"8809":[128,17,134,6],"8817":[128,17,134,6],"8825":[136,9,138,10],"8833":[153,16,159,10],"8841":[147,16,159,10],"8849":[141,9,159,10],"8857":[160,9,162,10],"8865":[165,13,167,14],"8873":[168,13,170,14],"8881":[171,13,173,14],"8889":[163,25,175,10],"8897":[163,25,175,10],"8905":[135,27,176,6],"8913":[135,27,176,6],"8921":[178,9,180,10],"8929":[187,17,189,18],"8937":[185,13,190,14],"8945":[184,47,193,10],"8953":[184,47,193,10],"8961":[177,26,194,6],"8969":[177,26,194,6],"8977":[196,9,198,10],"8985":[201,23,201,84],"8993":[202,9,203,42],"9001":[204,9,205,44],"9009":[209,17,211,18],"9017":[207,13,212,14],"9025":[206,57,215,10],"9033":[206,57,215,10],"9041":[195,26,216,6],"9049":[195,26,216,6],"9057":[218,9,220,10],"9065":[223,23,223,84],"9073":[224,26,224,58],"9081":[228,17,230,18],"9089":[226,13,231,14],"9097":[225,47,234,10],"9105":[225,47,234,10],"9113":[217,26,235,6],"9121":[217,26,235,6],"9129":[237,9,239,10],"9137":[242,13,244,14],"9145":[245,13,247,14],"9153":[241,39,249,10],"9161":[241,39,249,10],"9169":[250,9,252,10],"9177":[253,9,255,10],"9185":[256,9,258,10],"9193":[236,49,259,6],"9201":[236,49,259,6],"9209":[261,9,262,68],"9217":[263,9,267,10],"9225":[268,9,269,40],"9233":[270,9,272,10],"9241":[273,9,274,46],"9249":[260,20,277,6],"9257":[260,20,277,6],"9265":[4,1,278,2],"9273":[4,1,278,2],"9281":[279,31,281,2],"9289":[279,31,281,2],"9297":[1,1,282,59],"9305":[1,1,282,59],"nBranches":110,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/collection/batch/ordered_jalangi_.js","code":"var shared = require('../shared')\n\t, common = require('./common')\n\t, utils = require('../../utils')\n  , hasWriteCommands = utils.hasWriteCommands\n  , WriteError = common.WriteError\n  , BatchWriteResult = common.BatchWriteResult\n  , LegacyOp = common.LegacyOp\n  , ObjectID = require('bson').ObjectID\n  , Batch = common.Batch\n  , mergeBatchResults = common.mergeBatchResults;\n\n/**\n * Create a new OrderedBulkOperation instance (INTERNAL TYPE, do not instantiate directly)\n *\n * Options\n *  - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n *  - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n *  - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n *  - **j**, (Boolean, default:false) write waits for journal sync before returning\n *\n * @class Represents a OrderedBulkOperation\n * @param {Object} collection collection instance.\n * @param {Object} [options] additional options for the collection.\n * @return {Object} a ordered bulk operation instance.\n */\nfunction OrderedBulkOperation (collection, options) {\n\toptions = options == null ? {} : options;\n\t// TODO Bring from driver information in isMaster\n\tvar self = this;\n\tvar executed = false;\n\t\n\t// Current item\n\tvar currentOp = null;\n\n\t// Handle to the bson serializer, used to calculate running sizes\n  var db = collection.db;\n\tvar bson = db.bson;\n\n\t// Namespace for the operation\n  var namespace = collection.collectionName;  \n\n  // Set max byte size\n\tvar maxWriteBatchSize = db.serverConfig.checkoutWriter().maxWriteBatchSize || 1000;\n\tvar maxBatchSizeBytes = db.serverConfig.checkoutWriter().maxBsonSize;\n\n  // Get the write concern\n  var writeConcern = shared._getWriteConcern(collection, options);\n\t\n  // Current batch\n  var currentBatch = null;\n  var currentIndex = 0;\n  var currentBatchSize = 0;\n  var currentBatchSizeBytes = 0;\n  var batches = [];\n\n  // Final results\n  var bulkResult = {\n  \t  ok: 1\n    , writeErrors: []\n    , writeConcernErrors: []\n    , nInserted: 0\n    , nUpserted: 0\n    , nMatched: 0\n    , nModified: 0\n    , nRemoved: 0\n    , upserted: []\n  };\n\n  // Specify a full class so we can generate documentation correctly\n\tvar FindOperators = function() {\n\t\t/**\n\t\t * Add a single update document to the bulk operation\n\t\t *\n\t\t * @param {Object} doc update operations\n\t\t * @return {OrderedBulkOperation}\n\t\t * @api public\n\t\t */\n\t\tthis.update = function(updateDocument) {\n\t\t\t// Perform upsert\n\t\t\tvar upsert = typeof currentOp.upsert == 'boolean' ? currentOp.upsert : false;\n\t\t\t\n\t\t\t// Establish the update command\n\t\t\tvar document = {\n\t\t\t\t\tq: currentOp.selector\n\t\t\t\t, u: updateDocument\n\t\t\t\t, multi: true\n\t\t\t\t, upsert: upsert\n\t\t\t}\n\n\t\t\t// Clear out current Op\n\t\t\tcurrentOp = null;\n\t\t\t// Add the update document to the list\n\t\t\treturn addToOperationsList(self, common.UPDATE, document);\n\t\t}\t\n\n\t\t/**\n\t\t * Add a single update one document to the bulk operation\n\t\t *\n\t\t * @param {Object} doc update operations\n\t\t * @return {OrderedBulkOperation}\n\t\t * @api public\n\t\t */\n\t\tthis.updateOne = function(updateDocument) {\n\t\t\t// Perform upsert\n\t\t\tvar upsert = typeof currentOp.upsert == 'boolean' ? currentOp.upsert : false;\n\t\t\t\n\t\t\t// Establish the update command\n\t\t\tvar document = {\n\t\t\t\t\tq: currentOp.selector\n\t\t\t\t, u: updateDocument\n\t\t\t\t, multi: false\n\t\t\t\t, upsert: upsert\n\t\t\t}\n\n\t\t\t// Clear out current Op\n\t\t\tcurrentOp = null;\n\t\t\t// Add the update document to the list\n\t\t\treturn addToOperationsList(self, common.UPDATE, document);\n\t\t}\n\n\t\t/**\n\t\t * Add a replace one operation to the bulk operation\n\t\t *\n\t\t * @param {Object} doc the new document to replace the existing one with\n\t\t * @return {OrderedBulkOperation}\n\t\t * @api public\n\t\t */\n\t\tthis.replaceOne = function(updateDocument) {\n\t\t\tthis.updateOne(updateDocument);\n\t\t}\n\n\t\t/**\n\t\t * Upsert modifier for update bulk operation\n\t\t *\n\t\t * @return {OrderedBulkOperation}\n\t\t * @api public\n\t\t */\n\t\tthis.upsert = function() {\n\t\t\tcurrentOp.upsert = true;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n\t\t * Add a remove one operation to the bulk operation\n\t\t *\n\t\t * @param {Object} doc selector for the removal of documents\n\t\t * @return {OrderedBulkOperation}\n\t\t * @api public\n\t\t */\n\t\tthis.removeOne = function() {\t\t\n\t\t\t// Establish the update command\n\t\t\tvar document = {\n\t\t\t\t\tq: currentOp.selector\n\t\t\t\t, limit: 1\n\t\t\t}\n\n\t\t\t// Clear out current Op\n\t\t\tcurrentOp = null;\n\t\t\t// Add the remove document to the list\n\t\t\treturn addToOperationsList(self, common.REMOVE, document);\n\t\t}\n\n\t\t/**\n\t\t * Add a remove operation to the bulk operation\n\t\t *\n\t\t * @param {Object} doc selector for the single document to remove\n\t\t * @return {OrderedBulkOperation}\n\t\t * @api public\n\t\t */\n\t\tthis.remove = function() {\n\t\t\t// Establish the update command\n\t\t\tvar document = {\n\t\t\t\t\tq: currentOp.selector\n\t\t\t\t, limit: 0\n\t\t\t}\n\n\t\t\t// Clear out current Op\n\t\t\tcurrentOp = null;\n\t\t\t// Add the remove document to the list\n\t\t\treturn addToOperationsList(self, common.REMOVE, document);\t\t\t\t\n\t\t}\n\t}\n\n\t/**\n\t * Add a single insert document to the bulk operation\n\t *\n\t * @param {Object} doc the document to insert\n\t * @return {OrderedBulkOperation}\n\t * @api public\n\t */\n\tthis.insert = function(document) {\n\t\tif(document._id == null) document._id = new ObjectID();\n\t\treturn addToOperationsList(self, common.INSERT, document);\n\t}\n\n\tvar getOrderedCommand = function(_self, _namespace, _docType, _operationDocuments) {\n\t\t// Set up the types of operation\n\t\tif(_docType == common.INSERT) {\n\t\t\treturn {\n\t\t\t\t\tinsert: _namespace\n\t\t\t\t, documents: _operationDocuments\n\t\t\t\t, ordered:true \n\t\t\t}\n\t\t} else if(_docType == common.UPDATE) {\n\t\t\treturn {\n\t\t\t\t\tupdate: _namespace\n\t\t\t\t, updates: _operationDocuments\n\t\t\t\t, ordered:true\n\t\t\t};\n\t\t} else if(_docType == common.REMOVE) {\n\t\t\treturn {\n\t\t\t\t\tdelete: _namespace\n\t\t\t\t, deletes: _operationDocuments\n\t\t\t\t, ordered:true\n\t\t\t};\n\t\t}\t\t\n\t}\n\n\t// Add to internal list of documents\n\tvar addToOperationsList = function(_self, docType, document) {\n    // Get the bsonSize\n    var bsonSize = bson.calculateObjectSize(document, false);\n    // Throw error if the doc is bigger than the max BSON size\n    if(bsonSize >= maxBatchSizeBytes) throw utils.toError(\"document is larger than the maximum size \" + maxBatchSizeBytes);\n    // Create a new batch object if we don't have a current one\n    if(currentBatch == null) currentBatch = new Batch(docType, currentIndex);\n    \n    // Check if we need to create a new batch\n    if(((currentBatchSize + 1) >= maxWriteBatchSize)\n      || ((currentBatchSizeBytes +  currentBatchSizeBytes) >= maxBatchSizeBytes)\n      || (currentBatch.batchType != docType)) {\n      // Save the batch to the execution stack\n      batches.push(currentBatch);\n      \n      // Create a new batch\n      currentBatch = new Batch(docType, currentIndex);\n      \n      // Reset the current size trackers\n      currentBatchSize = 0;\n      currentBatchSizeBytes = 0;\n    } else {\n\t    // Update current batch size\n\t    currentBatchSize = currentBatchSize + 1;\n\t    currentBatchSizeBytes = currentBatchSizeBytes + bsonSize;\n    }\n\n    // We have an array of documents\n    if(Array.isArray(document)) {\n\t\t\tthrow utils.toError(\"operation passed in cannot be an Array\");\n    } else {\n    \tcurrentBatch.originalIndexes.push(currentIndex);\n      currentBatch.operations.push(document)\n      currentIndex = currentIndex + 1;\n    }\n\n    // Return self\n\t\treturn _self;\n\t}\n\n\t/**\n\t * Initiate a find operation for an update/updateOne/remove/removeOne/replaceOne\n\t *\n\t * @param {Object} doc\n\t * @return {OrderedBulkOperation}\n\t * @api public\n\t */\n\tthis.find = function(selector) {\n\t\tif (!selector) {\n\t\t\tthrow utils.toError(\"Bulk find operation must specify a selector\");\n\t\t}\n\n\t\t// Save a current selector\n\t\tcurrentOp = {\n\t\t\tselector: selector\n\t\t}\n\n\t\treturn new FindOperators();\n\t}\n\n\t//\n\t// Execute next write command in a chain\n\tvar executeCommands = function(callback) {\n\t\tif(batches.length == 0) {\n\t\t\treturn callback(null, new BatchWriteResult(bulkResult));\n\t\t}\n\n\t\t// Ordered execution of the command\n\t\tvar batch = batches.shift();\n\t\t\n\t\t// Build the command\n\t\tvar cmd = null;\n\n    // Generate the right update\n    if(batch.batchType == common.UPDATE) {\n      cmd = { update: namespace, updates: batch.operations, ordered: true }\n    } else if(batch.batchType == common.INSERT) {\n      cmd = { insert: namespace, documents: batch.operations, ordered: true }\n    } else if(batch.batchType == common.REMOVE) {\n      cmd = { delete: namespace, deletes: batch.operations, ordered: true }\n    }\n\n    // If we have a write concern\n    if(writeConcern != null) {\n      cmd.writeConcern = writeConcern;\n    }    \n\n\t\t// Execute it\n\t\tdb.command(cmd, function(err, result) {\t\n\t\t\t// Merge the results together\n\t\t\tvar mergeResult = mergeBatchResults(true, batch, bulkResult, err, result);\n\t\t\tif(mergeResult != null) {\n\t\t\t\treturn callback(null, new BatchWriteResult(bulkResult));\n\t\t\t}\n\n\t\t\t// If we had a serious error\n\t\t\tif(bulkResult.ok == 0) {\n\t\t\t\treturn callback(bulkResult.error, null);\n\t\t\t}\n\n      // If we are ordered and have errors and they are \n      // not all replication errors terminate the operation          \n      if(bulkResult.writeErrors.length > 0) {\n        return callback(null, new BatchWriteResult(bulkResult));\n      }\n\n\t\t\t// Execute the next command in line\n\t\t\texecuteCommands(callback);\n\t\t});\n\t}\n\n\t// \n\t// Execute the inserts\n\tvar executeInserts = function(_collection, _batch, _result, _callback) {\n\t\tif(_batch.operations.length == 0) {\n\t\t\treturn _callback(null, _result);\n\t\t}\n\n\t\t// Get the first update\n\t\tvar document = _batch.operations.shift();\n\t\tvar index = _batch.originalIndexes.shift();\n\t\t\n\t\t// Options for the update operation\n\t\tvar options = writeConcern || {};\n\n\t\t// Execute the update\n\t\t_collection.insert(document, options, function(err, r) {\n\t\t\t// If we have don't have w:0 merge the result\n\t\t\tif(options.w == null || options.w != 0) {\n\t\t\t\t// Merge the results in \n\t\t\t\tvar result = common.mergeLegacyResults(true, document, _batch, bulkResult, err || r, index);\n\n\t\t\t\tif(result == false) {\n\t\t\t\t\treturn _callback(null, new BatchWriteResult(bulkResult));\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\n\t\t\t// Update the index\n\t\t\t_batch.currentIndex = _batch.currentIndex + 1;\n\n\t\t\t// Execute the next insert\t\t\n\t\t\texecuteInserts(_collection, _batch, _result, _callback);\n\t\t});\n\t}\n\n\t//\n\t// Execute updates\n\tvar executeUpdates = function(_collection, _batch, _result, _callback) {\n\t\tif(_batch.operations.length == 0) {\n\t\t\treturn _callback(null, _result);\n\t\t}\n\n\t\t// Get the first update\n\t\tvar update = _batch.operations.shift();\n\t\tvar index = _batch.originalIndexes.shift();\n\t\t\n\t\t// Options for the update operation\n\t\tvar options = writeConcern != null ? common.cloneOptions(writeConcern) : {};\n\t\t\n\t\t// Add any additional options\n\t\tif(update.multi) options.multi = update.multi;\n\t\tif(update.upsert) options.upsert = update.upsert;\n\n\t\t// Execute the update\n\t\t_collection.update(update.q, update.u, options, function(err, r, full) {\n\t\t\t// If we have don't have w:0 merge the result\n\t\t\tif(options.w == null || options.w != 0) {\n\t\t\t\t// Merge the results in \n\t\t\t\tvar result = common.mergeLegacyResults(true, update, _batch, bulkResult, err || full, index);\n\t\t\t\tif(result == false) {\n\t\t\t\t\treturn _callback(null, new BatchWriteResult(bulkResult));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update the index\n\t\t\t_batch.currentIndex = _batch.currentIndex + 1;\n\n\t\t\t// Execute the next insert\t\t\n\t\t\texecuteUpdates(_collection, _batch, _result, _callback);\n\t\t});\n\t}\n\n\t//\n\t// Execute updates\n\tvar executeRemoves = function(_collection, _batch, _result, _callback) {\n\t\tif(_batch.operations.length == 0) {\n\t\t\treturn _callback(null, _result);\n\t\t}\n\n\t\t// Get the first update\n\t\tvar remove = _batch.operations.shift();\n\t\tvar index = _batch.originalIndexes.shift();\n\t\t\n\t\t// Options for the update operation\n\t\tvar options = writeConcern != null ? common.cloneOptions(writeConcern) : {};\n\t\t\n\t\t// Add any additional options\n\t\toptions.single = remove.limit == 1 ? true : false;\n\n\t\t// Execute the update\n\t\t_collection.remove(remove.q, options, function(err, r) {\n\t\t\t// If we have don't have w:0 merge the result\n\t\t\tif(options.w == null || options.w != 0) {\n\t\t\t\t// Merge the results in \n\t\t\t\tvar result = common.mergeLegacyResults(true, remove, _batch, bulkResult, err || r, index);\n\t\t\t\tif(result == false) {\n\t\t\t\t\treturn _callback(null, new BatchWriteResult(bulkResult));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Update the index\n\t\t\t_batch.currentIndex = _batch.currentIndex + 1;\n\n\t\t\t// Execute the next insert\t\t\n\t\t\texecuteRemoves(_collection, _batch, _result, _callback);\n\t\t});\n\t}\n\n\t//\n\t// Execute all operation in backwards compatible fashion\n\tvar backwardsCompatibilityExecuteCommands = function(callback) {\n\t\tif(batches.length == 0) {\n\t\t\treturn callback(null, new BatchWriteResult(bulkResult));\n\t\t}\n\n\t\t// Ordered execution of the command\n\t\tvar batch = batches.shift();\n\n\t\t// Process the legacy operations\n\t\tvar processLegacyOperations = function(err, results) {\n\t\t\t// If we have any errors stop executing\n      if(bulkResult.writeErrors.length > 0) {\n\t\t\t\treturn callback(null, new BatchWriteResult(bulkResult));\n\t\t\t}\n\n\t\t\t// If we have a top level error stop\n\t\t\tif(bulkResult.ok == 0) {\n\t\t\t\treturn callback(bulkResult.error, null);\n\t\t\t}\n\n\t\t\t// Execute the next step\n\t\t\tbackwardsCompatibilityExecuteCommands(callback);\t\t\t\n\t\t}\n\n\t\t// Execute an insert batch\n\t\tif(batch.batchType == common.INSERT) {\n\t\t\treturn executeInserts(collection, batch, {n: 0}, processLegacyOperations);\n\t\t}\n\n\t\t// Execute an update batch\n\t\tif(batch.batchType == common.UPDATE) {\n\t\t\treturn executeUpdates(collection, batch, {n: 0}, processLegacyOperations);\n\t\t}\n\n\t\t// Execute an update batch\n\t\tif(batch.batchType == common.REMOVE) {\n\t\t\treturn executeRemoves(collection, batch, {n: 0}, processLegacyOperations);\n\t\t}\n\t}\n\n\t/**\n\t * Execute the ordered bulk operation\n\t *\n\t * Options\n\t *  - **w**, {Number/String, > -1 || 'majority' || tag name} the write concern for the operation where < 1 is no acknowlegement of write and w >= 1, w = 'majority' or tag acknowledges the write\n\t *  - **wtimeout**, {Number, 0} set the timeout for waiting for write concern to finish (combines with w option)\n\t *  - **fsync**, (Boolean, default:false) write waits for fsync before returning, from MongoDB 2.6 on, fsync cannot be combined with journal\n\t *  - **j**, (Boolean, default:false) write waits for journal sync before returning\n\t *\n\t * @param {Object} [options] additional options during update.\n\t * @param {Function} callback this will be called after executing this method. The first parameter will contain the Error object if an error occured, or null otherwise. While the second parameter will contain the results from from the ordered bulk operation.\n\t * @return {null}\n\t * @api public\n\t */\n\tthis.execute = function(_writeConcern, callback) {\n\t\tif(executed) throw new utils.toError(\"batch cannot be re-executed\");\n\t\tif(typeof _writeConcern == 'function') {\n\t\t\tcallback = _writeConcern;\n\t\t} else {\n\t\t\twriteConcern = _writeConcern;\n\t\t}\n\n    // If we have current batch\n    if(currentBatch) batches.push(currentBatch);\n\n\t\t// If we have no operations in the bulk raise an error\n\t\tif(batches.length == 0) {\n\t\t\tthrow utils.toError(\"Invalid Operation, No operations in bulk\");\n\t\t}\n\n\t\t// Check if we support bulk commands, override if needed to use legacy ops\n\t\tif(hasWriteCommands(db.serverConfig.checkoutWriter()))\n\t\t\treturn executeCommands(callback);\n\n\t\t// Set nModified to null as we don't support this field\n\t\tbulkResult.nModified = null;\n\n\t\t// Run in backward compatibility mode\n\t\tbackwardsCompatibilityExecuteCommands(callback);\n\t}\n}\n\n/**\n * Returns an unordered batch object\n *\n */\nvar initializeOrderedBulkOp = function(options) {\n\treturn new OrderedBulkOperation(this, options);\n}\n\nexports.initializeOrderedBulkOp = initializeOrderedBulkOp;"};
jalangiLabel1890:
    while (true) {
        try {
            J$.Se(8425, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/collection/batch/ordered_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/collection/batch/ordered.js');
            function OrderedBulkOperation(collection, options) {
                jalangiLabel1888:
                    while (true) {
                        try {
                            J$.Fe(8081, arguments.callee, this, arguments);
                            arguments = J$.N(8089, 'arguments', arguments, 4);
                            collection = J$.N(8097, 'collection', collection, 4);
                            options = J$.N(8105, 'options', options, 4);
                            J$.N(8113, 'self', self, 0);
                            J$.N(8121, 'executed', executed, 0);
                            J$.N(8129, 'currentOp', currentOp, 0);
                            J$.N(8137, 'db', db, 0);
                            J$.N(8145, 'bson', bson, 0);
                            J$.N(8153, 'namespace', namespace, 0);
                            J$.N(8161, 'maxWriteBatchSize', maxWriteBatchSize, 0);
                            J$.N(8169, 'maxBatchSizeBytes', maxBatchSizeBytes, 0);
                            J$.N(8177, 'writeConcern', writeConcern, 0);
                            J$.N(8185, 'currentBatch', currentBatch, 0);
                            J$.N(8193, 'currentIndex', currentIndex, 0);
                            J$.N(8201, 'currentBatchSize', currentBatchSize, 0);
                            J$.N(8209, 'currentBatchSizeBytes', currentBatchSizeBytes, 0);
                            J$.N(8217, 'batches', batches, 0);
                            J$.N(8225, 'bulkResult', bulkResult, 0);
                            J$.N(8233, 'FindOperators', FindOperators, 0);
                            J$.N(8241, 'getOrderedCommand', getOrderedCommand, 0);
                            J$.N(8249, 'addToOperationsList', addToOperationsList, 0);
                            J$.N(8257, 'executeCommands', executeCommands, 0);
                            J$.N(8265, 'executeInserts', executeInserts, 0);
                            J$.N(8273, 'executeUpdates', executeUpdates, 0);
                            J$.N(8281, 'executeRemoves', executeRemoves, 0);
                            J$.N(8289, 'backwardsCompatibilityExecuteCommands', backwardsCompatibilityExecuteCommands, 0);
                            J$.X1(481, options = J$.W(473, 'options', J$.X1(8553, J$.C(8, J$.B(10, '==', J$.R(441, 'options', options, 0), J$.T(449, null, 25, false), 0))) ? J$.T(457, {}, 11, false) : J$.R(465, 'options', options, 0), options, 0));
                            var self = J$.X1(505, J$.W(497, 'self', J$.R(489, 'this', this, 0), self, 1));
                            var executed = J$.X1(529, J$.W(521, 'executed', J$.T(513, false, 23, false), executed, 1));
                            var currentOp = J$.X1(553, J$.W(545, 'currentOp', J$.T(537, null, 25, false), currentOp, 1));
                            var db = J$.X1(585, J$.W(577, 'db', J$.G(569, J$.R(561, 'collection', collection, 0), 'db', 0), db, 1));
                            var bson = J$.X1(617, J$.W(609, 'bson', J$.G(601, J$.R(593, 'db', db, 0), 'bson', 0), bson, 1));
                            var namespace = J$.X1(649, J$.W(641, 'namespace', J$.G(633, J$.R(625, 'collection', collection, 0), 'collectionName', 0), namespace, 1));
                            var maxWriteBatchSize = J$.X1(705, J$.W(697, 'maxWriteBatchSize', J$.C(16, J$.G(681, J$.M(673, J$.G(665, J$.R(657, 'db', db, 0), 'serverConfig', 0), 'checkoutWriter', 0)(), 'maxWriteBatchSize', 0)) ? J$._() : J$.T(689, 1000, 22, false), maxWriteBatchSize, 1));
                            var maxBatchSizeBytes = J$.X1(753, J$.W(745, 'maxBatchSizeBytes', J$.G(737, J$.M(729, J$.G(721, J$.R(713, 'db', db, 0), 'serverConfig', 0), 'checkoutWriter', 0)(), 'maxBsonSize', 0), maxBatchSizeBytes, 1));
                            var writeConcern = J$.X1(801, J$.W(793, 'writeConcern', J$.M(785, J$.R(761, 'shared', shared, 1), '_getWriteConcern', 0)(J$.R(769, 'collection', collection, 0), J$.R(777, 'options', options, 0)), writeConcern, 1));
                            var currentBatch = J$.X1(825, J$.W(817, 'currentBatch', J$.T(809, null, 25, false), currentBatch, 1));
                            var currentIndex = J$.X1(849, J$.W(841, 'currentIndex', J$.T(833, 0, 22, false), currentIndex, 1));
                            var currentBatchSize = J$.X1(873, J$.W(865, 'currentBatchSize', J$.T(857, 0, 22, false), currentBatchSize, 1));
                            var currentBatchSizeBytes = J$.X1(897, J$.W(889, 'currentBatchSizeBytes', J$.T(881, 0, 22, false), currentBatchSizeBytes, 1));
                            var batches = J$.X1(921, J$.W(913, 'batches', J$.T(905, [], 10, false), batches, 1));
                            var bulkResult = J$.X1(1017, J$.W(1009, 'bulkResult', J$.T(1001, {
                                ok: J$.T(929, 1, 22, false),
                                writeErrors: J$.T(937, [], 10, false),
                                writeConcernErrors: J$.T(945, [], 10, false),
                                nInserted: J$.T(953, 0, 22, false),
                                nUpserted: J$.T(961, 0, 22, false),
                                nMatched: J$.T(969, 0, 22, false),
                                nModified: J$.T(977, 0, 22, false),
                                nRemoved: J$.T(985, 0, 22, false),
                                upserted: J$.T(993, [], 10, false)
                            }, 11, false), bulkResult, 1));
                            var FindOperators = J$.X1(2209, J$.W(2201, 'FindOperators', J$.T(2193, function () {
                                jalangiLabel1872:
                                    while (true) {
                                        try {
                                            J$.Fe(2177, arguments.callee, this, arguments);
                                            arguments = J$.N(2185, 'arguments', arguments, 4);
                                            J$.X1(1305, J$.P(1297, J$.R(1025, 'this', this, 0), 'update', J$.T(1289, function (updateDocument) {
                                                jalangiLabel1866:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1249, arguments.callee, this, arguments);
                                                            arguments = J$.N(1257, 'arguments', arguments, 4);
                                                            updateDocument = J$.N(1265, 'updateDocument', updateDocument, 4);
                                                            J$.N(1273, 'upsert', upsert, 0);
                                                            J$.N(1281, 'document', document, 0);
                                                            var upsert = J$.X1(1089, J$.W(1081, 'upsert', J$.X1(8561, J$.C(24, J$.B(26, '==', J$.U(18, 'typeof', J$.G(1041, J$.R(1033, 'currentOp', currentOp, 0), 'upsert', 0)), J$.T(1049, 'boolean', 21, false), 0))) ? J$.G(1065, J$.R(1057, 'currentOp', currentOp, 0), 'upsert', 0) : J$.T(1073, false, 23, false), upsert, 1));
                                                            var document = J$.X1(1153, J$.W(1145, 'document', J$.T(1137, {
                                                                q: J$.G(1105, J$.R(1097, 'currentOp', currentOp, 0), 'selector', 0),
                                                                u: J$.R(1113, 'updateDocument', updateDocument, 0),
                                                                multi: J$.T(1121, true, 23, false),
                                                                upsert: J$.R(1129, 'upsert', upsert, 0)
                                                            }, 11, false), document, 1));
                                                            J$.X1(1177, currentOp = J$.W(1169, 'currentOp', J$.T(1161, null, 25, false), currentOp, 0));
                                                            return J$.X1(1241, J$.Rt(1233, J$.F(1225, J$.R(1185, 'addToOperationsList', addToOperationsList, 0), 0)(J$.R(1193, 'self', self, 0), J$.G(1209, J$.R(1201, 'common', common, 1), 'UPDATE', 0), J$.R(1217, 'document', document, 0))));
                                                        } catch (J$e) {
                                                            J$.Ex(8569, J$e);
                                                        } finally {
                                                            if (J$.Fr(8577))
                                                                continue jalangiLabel1866;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 1249), 0));
                                            J$.X1(1593, J$.P(1585, J$.R(1313, 'this', this, 0), 'updateOne', J$.T(1577, function (updateDocument) {
                                                jalangiLabel1867:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1537, arguments.callee, this, arguments);
                                                            arguments = J$.N(1545, 'arguments', arguments, 4);
                                                            updateDocument = J$.N(1553, 'updateDocument', updateDocument, 4);
                                                            J$.N(1561, 'upsert', upsert, 0);
                                                            J$.N(1569, 'document', document, 0);
                                                            var upsert = J$.X1(1377, J$.W(1369, 'upsert', J$.X1(8585, J$.C(32, J$.B(42, '==', J$.U(34, 'typeof', J$.G(1329, J$.R(1321, 'currentOp', currentOp, 0), 'upsert', 0)), J$.T(1337, 'boolean', 21, false), 0))) ? J$.G(1353, J$.R(1345, 'currentOp', currentOp, 0), 'upsert', 0) : J$.T(1361, false, 23, false), upsert, 1));
                                                            var document = J$.X1(1441, J$.W(1433, 'document', J$.T(1425, {
                                                                q: J$.G(1393, J$.R(1385, 'currentOp', currentOp, 0), 'selector', 0),
                                                                u: J$.R(1401, 'updateDocument', updateDocument, 0),
                                                                multi: J$.T(1409, false, 23, false),
                                                                upsert: J$.R(1417, 'upsert', upsert, 0)
                                                            }, 11, false), document, 1));
                                                            J$.X1(1465, currentOp = J$.W(1457, 'currentOp', J$.T(1449, null, 25, false), currentOp, 0));
                                                            return J$.X1(1529, J$.Rt(1521, J$.F(1513, J$.R(1473, 'addToOperationsList', addToOperationsList, 0), 0)(J$.R(1481, 'self', self, 0), J$.G(1497, J$.R(1489, 'common', common, 1), 'UPDATE', 0), J$.R(1505, 'document', document, 0))));
                                                        } catch (J$e) {
                                                            J$.Ex(8593, J$e);
                                                        } finally {
                                                            if (J$.Fr(8601))
                                                                continue jalangiLabel1867;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 1537), 0));
                                            J$.X1(1681, J$.P(1673, J$.R(1601, 'this', this, 0), 'replaceOne', J$.T(1665, function (updateDocument) {
                                                jalangiLabel1868:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1641, arguments.callee, this, arguments);
                                                            arguments = J$.N(1649, 'arguments', arguments, 4);
                                                            updateDocument = J$.N(1657, 'updateDocument', updateDocument, 4);
                                                            J$.X1(1633, J$.M(1625, J$.R(1609, 'this', this, 0), 'updateOne', 0)(J$.R(1617, 'updateDocument', updateDocument, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(8609, J$e);
                                                        } finally {
                                                            if (J$.Fr(8617))
                                                                continue jalangiLabel1868;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 1641), 0));
                                            J$.X1(1785, J$.P(1777, J$.R(1689, 'this', this, 0), 'upsert', J$.T(1769, function () {
                                                jalangiLabel1869:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1753, arguments.callee, this, arguments);
                                                            arguments = J$.N(1761, 'arguments', arguments, 4);
                                                            J$.X1(1721, J$.P(1713, J$.R(1697, 'currentOp', currentOp, 0), 'upsert', J$.T(1705, true, 23, false), 0));
                                                            return J$.X1(1745, J$.Rt(1737, J$.R(1729, 'this', this, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(8625, J$e);
                                                        } finally {
                                                            if (J$.Fr(8633))
                                                                continue jalangiLabel1869;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 1753), 0));
                                            J$.X1(1977, J$.P(1969, J$.R(1793, 'this', this, 0), 'removeOne', J$.T(1961, function () {
                                                jalangiLabel1870:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1937, arguments.callee, this, arguments);
                                                            arguments = J$.N(1945, 'arguments', arguments, 4);
                                                            J$.N(1953, 'document', document, 0);
                                                            var document = J$.X1(1841, J$.W(1833, 'document', J$.T(1825, {
                                                                q: J$.G(1809, J$.R(1801, 'currentOp', currentOp, 0), 'selector', 0),
                                                                limit: J$.T(1817, 1, 22, false)
                                                            }, 11, false), document, 1));
                                                            J$.X1(1865, currentOp = J$.W(1857, 'currentOp', J$.T(1849, null, 25, false), currentOp, 0));
                                                            return J$.X1(1929, J$.Rt(1921, J$.F(1913, J$.R(1873, 'addToOperationsList', addToOperationsList, 0), 0)(J$.R(1881, 'self', self, 0), J$.G(1897, J$.R(1889, 'common', common, 1), 'REMOVE', 0), J$.R(1905, 'document', document, 0))));
                                                        } catch (J$e) {
                                                            J$.Ex(8641, J$e);
                                                        } finally {
                                                            if (J$.Fr(8649))
                                                                continue jalangiLabel1870;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 1937), 0));
                                            J$.X1(2169, J$.P(2161, J$.R(1985, 'this', this, 0), 'remove', J$.T(2153, function () {
                                                jalangiLabel1871:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(2129, arguments.callee, this, arguments);
                                                            arguments = J$.N(2137, 'arguments', arguments, 4);
                                                            J$.N(2145, 'document', document, 0);
                                                            var document = J$.X1(2033, J$.W(2025, 'document', J$.T(2017, {
                                                                q: J$.G(2001, J$.R(1993, 'currentOp', currentOp, 0), 'selector', 0),
                                                                limit: J$.T(2009, 0, 22, false)
                                                            }, 11, false), document, 1));
                                                            J$.X1(2057, currentOp = J$.W(2049, 'currentOp', J$.T(2041, null, 25, false), currentOp, 0));
                                                            return J$.X1(2121, J$.Rt(2113, J$.F(2105, J$.R(2065, 'addToOperationsList', addToOperationsList, 0), 0)(J$.R(2073, 'self', self, 0), J$.G(2089, J$.R(2081, 'common', common, 1), 'REMOVE', 0), J$.R(2097, 'document', document, 0))));
                                                        } catch (J$e) {
                                                            J$.Ex(8657, J$e);
                                                        } finally {
                                                            if (J$.Fr(8665))
                                                                continue jalangiLabel1871;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 2129), 0));
                                        } catch (J$e) {
                                            J$.Ex(8673, J$e);
                                        } finally {
                                            if (J$.Fr(8681))
                                                continue jalangiLabel1872;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 2177), FindOperators, 1));
                            J$.X1(2393, J$.P(2385, J$.R(2217, 'this', this, 0), 'insert', J$.T(2377, function (document) {
                                jalangiLabel1873:
                                    while (true) {
                                        try {
                                            J$.Fe(2353, arguments.callee, this, arguments);
                                            arguments = J$.N(2361, 'arguments', arguments, 4);
                                            document = J$.N(2369, 'document', document, 4);
                                            if (J$.X1(8689, J$.C(40, J$.B(50, '==', J$.G(2233, J$.R(2225, 'document', document, 0), '_id', 0), J$.T(2241, null, 25, false), 0))))
                                                J$.X1(2281, J$.P(2273, J$.R(2249, 'document', document, 0), '_id', J$.F(2265, J$.R(2257, 'ObjectID', ObjectID, 1), 1)(), 0));
                                            return J$.X1(2345, J$.Rt(2337, J$.F(2329, J$.R(2289, 'addToOperationsList', addToOperationsList, 0), 0)(J$.R(2297, 'self', self, 0), J$.G(2313, J$.R(2305, 'common', common, 1), 'INSERT', 0), J$.R(2321, 'document', document, 0))));
                                        } catch (J$e) {
                                            J$.Ex(8697, J$e);
                                        } finally {
                                            if (J$.Fr(8705))
                                                continue jalangiLabel1873;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 2353), 0));
                            var getOrderedCommand = J$.X1(2681, J$.W(2673, 'getOrderedCommand', J$.T(2665, function (_self, _namespace, _docType, _operationDocuments) {
                                jalangiLabel1874:
                                    while (true) {
                                        try {
                                            J$.Fe(2617, arguments.callee, this, arguments);
                                            arguments = J$.N(2625, 'arguments', arguments, 4);
                                            _self = J$.N(2633, '_self', _self, 4);
                                            _namespace = J$.N(2641, '_namespace', _namespace, 4);
                                            _docType = J$.N(2649, '_docType', _docType, 4);
                                            _operationDocuments = J$.N(2657, '_operationDocuments', _operationDocuments, 4);
                                            if (J$.X1(8729, J$.C(64, J$.B(58, '==', J$.R(2401, '_docType', _docType, 0), J$.G(2417, J$.R(2409, 'common', common, 1), 'INSERT', 0), 0)))) {
                                                return J$.X1(2465, J$.Rt(2457, J$.T(2449, {
                                                    insert: J$.R(2425, '_namespace', _namespace, 0),
                                                    documents: J$.R(2433, '_operationDocuments', _operationDocuments, 0),
                                                    ordered: J$.T(2441, true, 23, false)
                                                }, 11, false)));
                                            } else if (J$.X1(8721, J$.C(56, J$.B(66, '==', J$.R(2473, '_docType', _docType, 0), J$.G(2489, J$.R(2481, 'common', common, 1), 'UPDATE', 0), 0)))) {
                                                return J$.X1(2537, J$.Rt(2529, J$.T(2521, {
                                                    update: J$.R(2497, '_namespace', _namespace, 0),
                                                    updates: J$.R(2505, '_operationDocuments', _operationDocuments, 0),
                                                    ordered: J$.T(2513, true, 23, false)
                                                }, 11, false)));
                                            } else if (J$.X1(8713, J$.C(48, J$.B(74, '==', J$.R(2545, '_docType', _docType, 0), J$.G(2561, J$.R(2553, 'common', common, 1), 'REMOVE', 0), 0)))) {
                                                return J$.X1(2609, J$.Rt(2601, J$.T(2593, {
                                                    delete: J$.R(2569, '_namespace', _namespace, 0),
                                                    deletes: J$.R(2577, '_operationDocuments', _operationDocuments, 0),
                                                    ordered: J$.T(2585, true, 23, false)
                                                }, 11, false)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(8737, J$e);
                                        } finally {
                                            if (J$.Fr(8745))
                                                continue jalangiLabel1874;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 2617), getOrderedCommand, 1));
                            var addToOperationsList = J$.X1(3393, J$.W(3385, 'addToOperationsList', J$.T(3377, function (_self, docType, document) {
                                jalangiLabel1875:
                                    while (true) {
                                        try {
                                            J$.Fe(3329, arguments.callee, this, arguments);
                                            arguments = J$.N(3337, 'arguments', arguments, 4);
                                            _self = J$.N(3345, '_self', _self, 4);
                                            docType = J$.N(3353, 'docType', docType, 4);
                                            document = J$.N(3361, 'document', document, 4);
                                            J$.N(3369, 'bsonSize', bsonSize, 0);
                                            var bsonSize = J$.X1(2729, J$.W(2721, 'bsonSize', J$.M(2713, J$.R(2689, 'bson', bson, 0), 'calculateObjectSize', 0)(J$.R(2697, 'document', document, 0), J$.T(2705, false, 23, false)), bsonSize, 1));
                                            if (J$.X1(8753, J$.C(72, J$.B(82, '>=', J$.R(2737, 'bsonSize', bsonSize, 0), J$.R(2745, 'maxBatchSizeBytes', maxBatchSizeBytes, 0), 0))))
                                                throw J$.X1(2793, J$.Th(2785, J$.M(2777, J$.R(2753, 'utils', utils, 1), 'toError', 0)(J$.B(90, '+', J$.T(2761, 'document is larger than the maximum size ', 21, false), J$.R(2769, 'maxBatchSizeBytes', maxBatchSizeBytes, 0), 0))));
                                            if (J$.X1(8761, J$.C(80, J$.B(98, '==', J$.R(2801, 'currentBatch', currentBatch, 0), J$.T(2809, null, 25, false), 0))))
                                                J$.X1(2857, currentBatch = J$.W(2849, 'currentBatch', J$.F(2841, J$.R(2817, 'Batch', Batch, 1), 1)(J$.R(2825, 'docType', docType, 0), J$.R(2833, 'currentIndex', currentIndex, 0)), currentBatch, 0));
                                            if (J$.X1(8769, J$.C(104, J$.C(96, J$.C(88, J$.B(114, '>=', J$.B(106, '+', J$.R(2865, 'currentBatchSize', currentBatchSize, 0), J$.T(2873, 1, 22, false), 0), J$.R(2881, 'maxWriteBatchSize', maxWriteBatchSize, 0), 0)) ? J$._() : J$.B(130, '>=', J$.B(122, '+', J$.R(2889, 'currentBatchSizeBytes', currentBatchSizeBytes, 0), J$.R(2897, 'currentBatchSizeBytes', currentBatchSizeBytes, 0), 0), J$.R(2905, 'maxBatchSizeBytes', maxBatchSizeBytes, 0), 0)) ? J$._() : J$.B(138, '!=', J$.G(2921, J$.R(2913, 'currentBatch', currentBatch, 0), 'batchType', 0), J$.R(2929, 'docType', docType, 0), 0)))) {
                                                J$.X1(2961, J$.M(2953, J$.R(2937, 'batches', batches, 0), 'push', 0)(J$.R(2945, 'currentBatch', currentBatch, 0)));
                                                J$.X1(3009, currentBatch = J$.W(3001, 'currentBatch', J$.F(2993, J$.R(2969, 'Batch', Batch, 1), 1)(J$.R(2977, 'docType', docType, 0), J$.R(2985, 'currentIndex', currentIndex, 0)), currentBatch, 0));
                                                J$.X1(3033, currentBatchSize = J$.W(3025, 'currentBatchSize', J$.T(3017, 0, 22, false), currentBatchSize, 0));
                                                J$.X1(3057, currentBatchSizeBytes = J$.W(3049, 'currentBatchSizeBytes', J$.T(3041, 0, 22, false), currentBatchSizeBytes, 0));
                                            } else {
                                                J$.X1(3089, currentBatchSize = J$.W(3081, 'currentBatchSize', J$.B(146, '+', J$.R(3065, 'currentBatchSize', currentBatchSize, 0), J$.T(3073, 1, 22, false), 0), currentBatchSize, 0));
                                                J$.X1(3121, currentBatchSizeBytes = J$.W(3113, 'currentBatchSizeBytes', J$.B(154, '+', J$.R(3097, 'currentBatchSizeBytes', currentBatchSizeBytes, 0), J$.R(3105, 'bsonSize', bsonSize, 0), 0), currentBatchSizeBytes, 0));
                                            }
                                            if (J$.X1(8777, J$.C(112, J$.M(3145, J$.R(3129, 'Array', Array, 2), 'isArray', 0)(J$.R(3137, 'document', document, 0))))) {
                                                throw J$.X1(3185, J$.Th(3177, J$.M(3169, J$.R(3153, 'utils', utils, 1), 'toError', 0)(J$.T(3161, 'operation passed in cannot be an Array', 21, false))));
                                            } else {
                                                J$.X1(3225, J$.M(3217, J$.G(3201, J$.R(3193, 'currentBatch', currentBatch, 0), 'originalIndexes', 0), 'push', 0)(J$.R(3209, 'currentIndex', currentIndex, 0)));
                                                J$.X1(3265, J$.M(3257, J$.G(3241, J$.R(3233, 'currentBatch', currentBatch, 0), 'operations', 0), 'push', 0)(J$.R(3249, 'document', document, 0)));
                                                J$.X1(3297, currentIndex = J$.W(3289, 'currentIndex', J$.B(162, '+', J$.R(3273, 'currentIndex', currentIndex, 0), J$.T(3281, 1, 22, false), 0), currentIndex, 0));
                                            }
                                            return J$.X1(3321, J$.Rt(3313, J$.R(3305, '_self', _self, 0)));
                                        } catch (J$e) {
                                            J$.Ex(8785, J$e);
                                        } finally {
                                            if (J$.Fr(8793))
                                                continue jalangiLabel1875;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 3329), addToOperationsList, 1));
                            J$.X1(3561, J$.P(3553, J$.R(3401, 'this', this, 0), 'find', J$.T(3545, function (selector) {
                                jalangiLabel1876:
                                    while (true) {
                                        try {
                                            J$.Fe(3521, arguments.callee, this, arguments);
                                            arguments = J$.N(3529, 'arguments', arguments, 4);
                                            selector = J$.N(3537, 'selector', selector, 4);
                                            if (J$.X1(8801, J$.C(120, J$.U(170, '!', J$.R(3409, 'selector', selector, 0))))) {
                                                throw J$.X1(3449, J$.Th(3441, J$.M(3433, J$.R(3417, 'utils', utils, 1), 'toError', 0)(J$.T(3425, 'Bulk find operation must specify a selector', 21, false))));
                                            }
                                            J$.X1(3481, currentOp = J$.W(3473, 'currentOp', J$.T(3465, {
                                                selector: J$.R(3457, 'selector', selector, 0)
                                            }, 11, false), currentOp, 0));
                                            return J$.X1(3513, J$.Rt(3505, J$.F(3497, J$.R(3489, 'FindOperators', FindOperators, 0), 1)()));
                                        } catch (J$e) {
                                            J$.Ex(8809, J$e);
                                        } finally {
                                            if (J$.Fr(8817))
                                                continue jalangiLabel1876;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 3521), 0));
                            var executeCommands = J$.X1(4521, J$.W(4513, 'executeCommands', J$.T(4505, function (callback) {
                                jalangiLabel1878:
                                    while (true) {
                                        try {
                                            J$.Fe(4465, arguments.callee, this, arguments);
                                            arguments = J$.N(4473, 'arguments', arguments, 4);
                                            callback = J$.N(4481, 'callback', callback, 4);
                                            J$.N(4489, 'batch', batch, 0);
                                            J$.N(4497, 'cmd', cmd, 0);
                                            if (J$.X1(8825, J$.C(128, J$.B(178, '==', J$.G(3577, J$.R(3569, 'batches', batches, 0), 'length', 0), J$.T(3585, 0, 22, false), 0)))) {
                                                return J$.X1(3649, J$.Rt(3641, J$.F(3633, J$.R(3593, 'callback', callback, 0), 0)(J$.T(3601, null, 25, false), J$.F(3625, J$.R(3609, 'BatchWriteResult', BatchWriteResult, 1), 1)(J$.R(3617, 'bulkResult', bulkResult, 0)))));
                                            }
                                            var batch = J$.X1(3681, J$.W(3673, 'batch', J$.M(3665, J$.R(3657, 'batches', batches, 0), 'shift', 0)(), batch, 1));
                                            var cmd = J$.X1(3705, J$.W(3697, 'cmd', J$.T(3689, null, 25, false), cmd, 1));
                                            if (J$.X1(8849, J$.C(152, J$.B(186, '==', J$.G(3721, J$.R(3713, 'batch', batch, 0), 'batchType', 0), J$.G(3737, J$.R(3729, 'common', common, 1), 'UPDATE', 0), 0)))) {
                                                J$.X1(3793, cmd = J$.W(3785, 'cmd', J$.T(3777, {
                                                    update: J$.R(3745, 'namespace', namespace, 0),
                                                    updates: J$.G(3761, J$.R(3753, 'batch', batch, 0), 'operations', 0),
                                                    ordered: J$.T(3769, true, 23, false)
                                                }, 11, false), cmd, 0));
                                            } else if (J$.X1(8841, J$.C(144, J$.B(194, '==', J$.G(3809, J$.R(3801, 'batch', batch, 0), 'batchType', 0), J$.G(3825, J$.R(3817, 'common', common, 1), 'INSERT', 0), 0)))) {
                                                J$.X1(3881, cmd = J$.W(3873, 'cmd', J$.T(3865, {
                                                    insert: J$.R(3833, 'namespace', namespace, 0),
                                                    documents: J$.G(3849, J$.R(3841, 'batch', batch, 0), 'operations', 0),
                                                    ordered: J$.T(3857, true, 23, false)
                                                }, 11, false), cmd, 0));
                                            } else if (J$.X1(8833, J$.C(136, J$.B(202, '==', J$.G(3897, J$.R(3889, 'batch', batch, 0), 'batchType', 0), J$.G(3913, J$.R(3905, 'common', common, 1), 'REMOVE', 0), 0)))) {
                                                J$.X1(3969, cmd = J$.W(3961, 'cmd', J$.T(3953, {
                                                    delete: J$.R(3921, 'namespace', namespace, 0),
                                                    deletes: J$.G(3937, J$.R(3929, 'batch', batch, 0), 'operations', 0),
                                                    ordered: J$.T(3945, true, 23, false)
                                                }, 11, false), cmd, 0));
                                            }
                                            if (J$.X1(8857, J$.C(160, J$.B(210, '!=', J$.R(3977, 'writeConcern', writeConcern, 0), J$.T(3985, null, 25, false), 0)))) {
                                                J$.X1(4017, J$.P(4009, J$.R(3993, 'cmd', cmd, 0), 'writeConcern', J$.R(4001, 'writeConcern', writeConcern, 0), 0));
                                            }
                                            J$.X1(4457, J$.M(4449, J$.R(4025, 'db', db, 0), 'command', 0)(J$.R(4033, 'cmd', cmd, 0), J$.T(4441, function (err, result) {
                                                jalangiLabel1877:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(4401, arguments.callee, this, arguments);
                                                            arguments = J$.N(4409, 'arguments', arguments, 4);
                                                            err = J$.N(4417, 'err', err, 4);
                                                            result = J$.N(4425, 'result', result, 4);
                                                            J$.N(4433, 'mergeResult', mergeResult, 0);
                                                            var mergeResult = J$.X1(4105, J$.W(4097, 'mergeResult', J$.F(4089, J$.R(4041, 'mergeBatchResults', mergeBatchResults, 1), 0)(J$.T(4049, true, 23, false), J$.R(4057, 'batch', batch, 0), J$.R(4065, 'bulkResult', bulkResult, 0), J$.R(4073, 'err', err, 0), J$.R(4081, 'result', result, 0)), mergeResult, 1));
                                                            if (J$.X1(8865, J$.C(168, J$.B(218, '!=', J$.R(4113, 'mergeResult', mergeResult, 0), J$.T(4121, null, 25, false), 0)))) {
                                                                return J$.X1(4185, J$.Rt(4177, J$.F(4169, J$.R(4129, 'callback', callback, 0), 0)(J$.T(4137, null, 25, false), J$.F(4161, J$.R(4145, 'BatchWriteResult', BatchWriteResult, 1), 1)(J$.R(4153, 'bulkResult', bulkResult, 0)))));
                                                            }
                                                            if (J$.X1(8873, J$.C(176, J$.B(226, '==', J$.G(4201, J$.R(4193, 'bulkResult', bulkResult, 0), 'ok', 0), J$.T(4209, 0, 22, false), 0)))) {
                                                                return J$.X1(4265, J$.Rt(4257, J$.F(4249, J$.R(4217, 'callback', callback, 0), 0)(J$.G(4233, J$.R(4225, 'bulkResult', bulkResult, 0), 'error', 0), J$.T(4241, null, 25, false))));
                                                            }
                                                            if (J$.X1(8881, J$.C(184, J$.B(234, '>', J$.G(4289, J$.G(4281, J$.R(4273, 'bulkResult', bulkResult, 0), 'writeErrors', 0), 'length', 0), J$.T(4297, 0, 22, false), 0)))) {
                                                                return J$.X1(4361, J$.Rt(4353, J$.F(4345, J$.R(4305, 'callback', callback, 0), 0)(J$.T(4313, null, 25, false), J$.F(4337, J$.R(4321, 'BatchWriteResult', BatchWriteResult, 1), 1)(J$.R(4329, 'bulkResult', bulkResult, 0)))));
                                                            }
                                                            J$.X1(4393, J$.F(4385, J$.R(4369, 'executeCommands', executeCommands, 0), 0)(J$.R(4377, 'callback', callback, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(8889, J$e);
                                                        } finally {
                                                            if (J$.Fr(8897))
                                                                continue jalangiLabel1877;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 4401)));
                                        } catch (J$e) {
                                            J$.Ex(8905, J$e);
                                        } finally {
                                            if (J$.Fr(8913))
                                                continue jalangiLabel1878;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 4465), executeCommands, 1));
                            var executeInserts = J$.X1(5217, J$.W(5209, 'executeInserts', J$.T(5201, function (_collection, _batch, _result, _callback) {
                                jalangiLabel1880:
                                    while (true) {
                                        try {
                                            J$.Fe(5129, arguments.callee, this, arguments);
                                            arguments = J$.N(5137, 'arguments', arguments, 4);
                                            _collection = J$.N(5145, '_collection', _collection, 4);
                                            _batch = J$.N(5153, '_batch', _batch, 4);
                                            _result = J$.N(5161, '_result', _result, 4);
                                            _callback = J$.N(5169, '_callback', _callback, 4);
                                            J$.N(5177, 'document', document, 0);
                                            J$.N(5185, 'index', index, 0);
                                            J$.N(5193, 'options', options, 0);
                                            if (J$.X1(8921, J$.C(192, J$.B(242, '==', J$.G(4545, J$.G(4537, J$.R(4529, '_batch', _batch, 0), 'operations', 0), 'length', 0), J$.T(4553, 0, 22, false), 0)))) {
                                                return J$.X1(4601, J$.Rt(4593, J$.F(4585, J$.R(4561, '_callback', _callback, 0), 0)(J$.T(4569, null, 25, false), J$.R(4577, '_result', _result, 0))));
                                            }
                                            var document = J$.X1(4641, J$.W(4633, 'document', J$.M(4625, J$.G(4617, J$.R(4609, '_batch', _batch, 0), 'operations', 0), 'shift', 0)(), document, 1));
                                            var index = J$.X1(4681, J$.W(4673, 'index', J$.M(4665, J$.G(4657, J$.R(4649, '_batch', _batch, 0), 'originalIndexes', 0), 'shift', 0)(), index, 1));
                                            var options = J$.X1(4713, J$.W(4705, 'options', J$.C(200, J$.R(4689, 'writeConcern', writeConcern, 0)) ? J$._() : J$.T(4697, {}, 11, false), options, 1));
                                            J$.X1(5121, J$.M(5113, J$.R(4721, '_collection', _collection, 0), 'insert', 0)(J$.R(4729, 'document', document, 0), J$.R(4737, 'options', options, 0), J$.T(5105, function (err, r) {
                                                jalangiLabel1879:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(5065, arguments.callee, this, arguments);
                                                            arguments = J$.N(5073, 'arguments', arguments, 4);
                                                            err = J$.N(5081, 'err', err, 4);
                                                            r = J$.N(5089, 'r', r, 4);
                                                            J$.N(5097, 'result', result, 0);
                                                            if (J$.X1(8937, J$.C(232, J$.C(208, J$.B(250, '==', J$.G(4753, J$.R(4745, 'options', options, 0), 'w', 0), J$.T(4761, null, 25, false), 0)) ? J$._() : J$.B(258, '!=', J$.G(4777, J$.R(4769, 'options', options, 0), 'w', 0), J$.T(4785, 0, 22, false), 0)))) {
                                                                var result = J$.X1(4873, J$.W(4865, 'result', J$.M(4857, J$.R(4793, 'common', common, 1), 'mergeLegacyResults', 0)(J$.T(4801, true, 23, false), J$.R(4809, 'document', document, 0), J$.R(4817, '_batch', _batch, 0), J$.R(4825, 'bulkResult', bulkResult, 0), J$.C(216, J$.R(4833, 'err', err, 0)) ? J$._() : J$.R(4841, 'r', r, 0), J$.R(4849, 'index', index, 0)), result, 1));
                                                                if (J$.X1(8929, J$.C(224, J$.B(266, '==', J$.R(4881, 'result', result, 0), J$.T(4889, false, 23, false), 0)))) {
                                                                    return J$.X1(4953, J$.Rt(4945, J$.F(4937, J$.R(4897, '_callback', _callback, 0), 0)(J$.T(4905, null, 25, false), J$.F(4929, J$.R(4913, 'BatchWriteResult', BatchWriteResult, 1), 1)(J$.R(4921, 'bulkResult', bulkResult, 0)))));
                                                                }
                                                            }
                                                            J$.X1(5001, J$.P(4993, J$.R(4961, '_batch', _batch, 0), 'currentIndex', J$.B(274, '+', J$.G(4977, J$.R(4969, '_batch', _batch, 0), 'currentIndex', 0), J$.T(4985, 1, 22, false), 0), 0));
                                                            J$.X1(5057, J$.F(5049, J$.R(5009, 'executeInserts', executeInserts, 0), 0)(J$.R(5017, '_collection', _collection, 0), J$.R(5025, '_batch', _batch, 0), J$.R(5033, '_result', _result, 0), J$.R(5041, '_callback', _callback, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(8945, J$e);
                                                        } finally {
                                                            if (J$.Fr(8953))
                                                                continue jalangiLabel1879;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 5065)));
                                        } catch (J$e) {
                                            J$.Ex(8961, J$e);
                                        } finally {
                                            if (J$.Fr(8969))
                                                continue jalangiLabel1880;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 5129), executeInserts, 1));
                            var executeUpdates = J$.X1(6089, J$.W(6081, 'executeUpdates', J$.T(6073, function (_collection, _batch, _result, _callback) {
                                jalangiLabel1882:
                                    while (true) {
                                        try {
                                            J$.Fe(6001, arguments.callee, this, arguments);
                                            arguments = J$.N(6009, 'arguments', arguments, 4);
                                            _collection = J$.N(6017, '_collection', _collection, 4);
                                            _batch = J$.N(6025, '_batch', _batch, 4);
                                            _result = J$.N(6033, '_result', _result, 4);
                                            _callback = J$.N(6041, '_callback', _callback, 4);
                                            J$.N(6049, 'update', update, 0);
                                            J$.N(6057, 'index', index, 0);
                                            J$.N(6065, 'options', options, 0);
                                            if (J$.X1(8977, J$.C(240, J$.B(282, '==', J$.G(5241, J$.G(5233, J$.R(5225, '_batch', _batch, 0), 'operations', 0), 'length', 0), J$.T(5249, 0, 22, false), 0)))) {
                                                return J$.X1(5297, J$.Rt(5289, J$.F(5281, J$.R(5257, '_callback', _callback, 0), 0)(J$.T(5265, null, 25, false), J$.R(5273, '_result', _result, 0))));
                                            }
                                            var update = J$.X1(5337, J$.W(5329, 'update', J$.M(5321, J$.G(5313, J$.R(5305, '_batch', _batch, 0), 'operations', 0), 'shift', 0)(), update, 1));
                                            var index = J$.X1(5377, J$.W(5369, 'index', J$.M(5361, J$.G(5353, J$.R(5345, '_batch', _batch, 0), 'originalIndexes', 0), 'shift', 0)(), index, 1));
                                            var options = J$.X1(5441, J$.W(5433, 'options', J$.X1(8985, J$.C(248, J$.B(290, '!=', J$.R(5385, 'writeConcern', writeConcern, 0), J$.T(5393, null, 25, false), 0))) ? J$.M(5417, J$.R(5401, 'common', common, 1), 'cloneOptions', 0)(J$.R(5409, 'writeConcern', writeConcern, 0)) : J$.T(5425, {}, 11, false), options, 1));
                                            if (J$.X1(8993, J$.C(256, J$.G(5457, J$.R(5449, 'update', update, 0), 'multi', 0))))
                                                J$.X1(5497, J$.P(5489, J$.R(5465, 'options', options, 0), 'multi', J$.G(5481, J$.R(5473, 'update', update, 0), 'multi', 0), 0));
                                            if (J$.X1(9001, J$.C(264, J$.G(5513, J$.R(5505, 'update', update, 0), 'upsert', 0))))
                                                J$.X1(5553, J$.P(5545, J$.R(5521, 'options', options, 0), 'upsert', J$.G(5537, J$.R(5529, 'update', update, 0), 'upsert', 0), 0));
                                            J$.X1(5993, J$.M(5985, J$.R(5561, '_collection', _collection, 0), 'update', 0)(J$.G(5577, J$.R(5569, 'update', update, 0), 'q', 0), J$.G(5593, J$.R(5585, 'update', update, 0), 'u', 0), J$.R(5601, 'options', options, 0), J$.T(5977, function (err, r, full) {
                                                jalangiLabel1881:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(5929, arguments.callee, this, arguments);
                                                            arguments = J$.N(5937, 'arguments', arguments, 4);
                                                            err = J$.N(5945, 'err', err, 4);
                                                            r = J$.N(5953, 'r', r, 4);
                                                            full = J$.N(5961, 'full', full, 4);
                                                            J$.N(5969, 'result', result, 0);
                                                            if (J$.X1(9017, J$.C(296, J$.C(272, J$.B(298, '==', J$.G(5617, J$.R(5609, 'options', options, 0), 'w', 0), J$.T(5625, null, 25, false), 0)) ? J$._() : J$.B(306, '!=', J$.G(5641, J$.R(5633, 'options', options, 0), 'w', 0), J$.T(5649, 0, 22, false), 0)))) {
                                                                var result = J$.X1(5737, J$.W(5729, 'result', J$.M(5721, J$.R(5657, 'common', common, 1), 'mergeLegacyResults', 0)(J$.T(5665, true, 23, false), J$.R(5673, 'update', update, 0), J$.R(5681, '_batch', _batch, 0), J$.R(5689, 'bulkResult', bulkResult, 0), J$.C(280, J$.R(5697, 'err', err, 0)) ? J$._() : J$.R(5705, 'full', full, 0), J$.R(5713, 'index', index, 0)), result, 1));
                                                                if (J$.X1(9009, J$.C(288, J$.B(314, '==', J$.R(5745, 'result', result, 0), J$.T(5753, false, 23, false), 0)))) {
                                                                    return J$.X1(5817, J$.Rt(5809, J$.F(5801, J$.R(5761, '_callback', _callback, 0), 0)(J$.T(5769, null, 25, false), J$.F(5793, J$.R(5777, 'BatchWriteResult', BatchWriteResult, 1), 1)(J$.R(5785, 'bulkResult', bulkResult, 0)))));
                                                                }
                                                            }
                                                            J$.X1(5865, J$.P(5857, J$.R(5825, '_batch', _batch, 0), 'currentIndex', J$.B(322, '+', J$.G(5841, J$.R(5833, '_batch', _batch, 0), 'currentIndex', 0), J$.T(5849, 1, 22, false), 0), 0));
                                                            J$.X1(5921, J$.F(5913, J$.R(5873, 'executeUpdates', executeUpdates, 0), 0)(J$.R(5881, '_collection', _collection, 0), J$.R(5889, '_batch', _batch, 0), J$.R(5897, '_result', _result, 0), J$.R(5905, '_callback', _callback, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(9025, J$e);
                                                        } finally {
                                                            if (J$.Fr(9033))
                                                                continue jalangiLabel1881;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 5929)));
                                        } catch (J$e) {
                                            J$.Ex(9041, J$e);
                                        } finally {
                                            if (J$.Fr(9049))
                                                continue jalangiLabel1882;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 6001), executeUpdates, 1));
                            var executeRemoves = J$.X1(6889, J$.W(6881, 'executeRemoves', J$.T(6873, function (_collection, _batch, _result, _callback) {
                                jalangiLabel1884:
                                    while (true) {
                                        try {
                                            J$.Fe(6801, arguments.callee, this, arguments);
                                            arguments = J$.N(6809, 'arguments', arguments, 4);
                                            _collection = J$.N(6817, '_collection', _collection, 4);
                                            _batch = J$.N(6825, '_batch', _batch, 4);
                                            _result = J$.N(6833, '_result', _result, 4);
                                            _callback = J$.N(6841, '_callback', _callback, 4);
                                            J$.N(6849, 'remove', remove, 0);
                                            J$.N(6857, 'index', index, 0);
                                            J$.N(6865, 'options', options, 0);
                                            if (J$.X1(9057, J$.C(304, J$.B(330, '==', J$.G(6113, J$.G(6105, J$.R(6097, '_batch', _batch, 0), 'operations', 0), 'length', 0), J$.T(6121, 0, 22, false), 0)))) {
                                                return J$.X1(6169, J$.Rt(6161, J$.F(6153, J$.R(6129, '_callback', _callback, 0), 0)(J$.T(6137, null, 25, false), J$.R(6145, '_result', _result, 0))));
                                            }
                                            var remove = J$.X1(6209, J$.W(6201, 'remove', J$.M(6193, J$.G(6185, J$.R(6177, '_batch', _batch, 0), 'operations', 0), 'shift', 0)(), remove, 1));
                                            var index = J$.X1(6249, J$.W(6241, 'index', J$.M(6233, J$.G(6225, J$.R(6217, '_batch', _batch, 0), 'originalIndexes', 0), 'shift', 0)(), index, 1));
                                            var options = J$.X1(6313, J$.W(6305, 'options', J$.X1(9065, J$.C(312, J$.B(338, '!=', J$.R(6257, 'writeConcern', writeConcern, 0), J$.T(6265, null, 25, false), 0))) ? J$.M(6289, J$.R(6273, 'common', common, 1), 'cloneOptions', 0)(J$.R(6281, 'writeConcern', writeConcern, 0)) : J$.T(6297, {}, 11, false), options, 1));
                                            J$.X1(6377, J$.P(6369, J$.R(6321, 'options', options, 0), 'single', J$.X1(9073, J$.C(320, J$.B(346, '==', J$.G(6337, J$.R(6329, 'remove', remove, 0), 'limit', 0), J$.T(6345, 1, 22, false), 0))) ? J$.T(6353, true, 23, false) : J$.T(6361, false, 23, false), 0));
                                            J$.X1(6793, J$.M(6785, J$.R(6385, '_collection', _collection, 0), 'remove', 0)(J$.G(6401, J$.R(6393, 'remove', remove, 0), 'q', 0), J$.R(6409, 'options', options, 0), J$.T(6777, function (err, r) {
                                                jalangiLabel1883:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(6737, arguments.callee, this, arguments);
                                                            arguments = J$.N(6745, 'arguments', arguments, 4);
                                                            err = J$.N(6753, 'err', err, 4);
                                                            r = J$.N(6761, 'r', r, 4);
                                                            J$.N(6769, 'result', result, 0);
                                                            if (J$.X1(9089, J$.C(352, J$.C(328, J$.B(354, '==', J$.G(6425, J$.R(6417, 'options', options, 0), 'w', 0), J$.T(6433, null, 25, false), 0)) ? J$._() : J$.B(362, '!=', J$.G(6449, J$.R(6441, 'options', options, 0), 'w', 0), J$.T(6457, 0, 22, false), 0)))) {
                                                                var result = J$.X1(6545, J$.W(6537, 'result', J$.M(6529, J$.R(6465, 'common', common, 1), 'mergeLegacyResults', 0)(J$.T(6473, true, 23, false), J$.R(6481, 'remove', remove, 0), J$.R(6489, '_batch', _batch, 0), J$.R(6497, 'bulkResult', bulkResult, 0), J$.C(336, J$.R(6505, 'err', err, 0)) ? J$._() : J$.R(6513, 'r', r, 0), J$.R(6521, 'index', index, 0)), result, 1));
                                                                if (J$.X1(9081, J$.C(344, J$.B(370, '==', J$.R(6553, 'result', result, 0), J$.T(6561, false, 23, false), 0)))) {
                                                                    return J$.X1(6625, J$.Rt(6617, J$.F(6609, J$.R(6569, '_callback', _callback, 0), 0)(J$.T(6577, null, 25, false), J$.F(6601, J$.R(6585, 'BatchWriteResult', BatchWriteResult, 1), 1)(J$.R(6593, 'bulkResult', bulkResult, 0)))));
                                                                }
                                                            }
                                                            J$.X1(6673, J$.P(6665, J$.R(6633, '_batch', _batch, 0), 'currentIndex', J$.B(378, '+', J$.G(6649, J$.R(6641, '_batch', _batch, 0), 'currentIndex', 0), J$.T(6657, 1, 22, false), 0), 0));
                                                            J$.X1(6729, J$.F(6721, J$.R(6681, 'executeRemoves', executeRemoves, 0), 0)(J$.R(6689, '_collection', _collection, 0), J$.R(6697, '_batch', _batch, 0), J$.R(6705, '_result', _result, 0), J$.R(6713, '_callback', _callback, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(9097, J$e);
                                                        } finally {
                                                            if (J$.Fr(9105))
                                                                continue jalangiLabel1883;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 6737)));
                                        } catch (J$e) {
                                            J$.Ex(9113, J$e);
                                        } finally {
                                            if (J$.Fr(9121))
                                                continue jalangiLabel1884;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 6801), executeRemoves, 1));
                            var backwardsCompatibilityExecuteCommands = J$.X1(7649, J$.W(7641, 'backwardsCompatibilityExecuteCommands', J$.T(7633, function (callback) {
                                jalangiLabel1886:
                                    while (true) {
                                        try {
                                            J$.Fe(7593, arguments.callee, this, arguments);
                                            arguments = J$.N(7601, 'arguments', arguments, 4);
                                            callback = J$.N(7609, 'callback', callback, 4);
                                            J$.N(7617, 'batch', batch, 0);
                                            J$.N(7625, 'processLegacyOperations', processLegacyOperations, 0);
                                            if (J$.X1(9129, J$.C(360, J$.B(386, '==', J$.G(6905, J$.R(6897, 'batches', batches, 0), 'length', 0), J$.T(6913, 0, 22, false), 0)))) {
                                                return J$.X1(6977, J$.Rt(6969, J$.F(6961, J$.R(6921, 'callback', callback, 0), 0)(J$.T(6929, null, 25, false), J$.F(6953, J$.R(6937, 'BatchWriteResult', BatchWriteResult, 1), 1)(J$.R(6945, 'bulkResult', bulkResult, 0)))));
                                            }
                                            var batch = J$.X1(7009, J$.W(7001, 'batch', J$.M(6993, J$.R(6985, 'batches', batches, 0), 'shift', 0)(), batch, 1));
                                            var processLegacyOperations = J$.X1(7273, J$.W(7265, 'processLegacyOperations', J$.T(7257, function (err, results) {
                                                jalangiLabel1885:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(7225, arguments.callee, this, arguments);
                                                            arguments = J$.N(7233, 'arguments', arguments, 4);
                                                            err = J$.N(7241, 'err', err, 4);
                                                            results = J$.N(7249, 'results', results, 4);
                                                            if (J$.X1(9137, J$.C(368, J$.B(394, '>', J$.G(7033, J$.G(7025, J$.R(7017, 'bulkResult', bulkResult, 0), 'writeErrors', 0), 'length', 0), J$.T(7041, 0, 22, false), 0)))) {
                                                                return J$.X1(7105, J$.Rt(7097, J$.F(7089, J$.R(7049, 'callback', callback, 0), 0)(J$.T(7057, null, 25, false), J$.F(7081, J$.R(7065, 'BatchWriteResult', BatchWriteResult, 1), 1)(J$.R(7073, 'bulkResult', bulkResult, 0)))));
                                                            }
                                                            if (J$.X1(9145, J$.C(376, J$.B(402, '==', J$.G(7121, J$.R(7113, 'bulkResult', bulkResult, 0), 'ok', 0), J$.T(7129, 0, 22, false), 0)))) {
                                                                return J$.X1(7185, J$.Rt(7177, J$.F(7169, J$.R(7137, 'callback', callback, 0), 0)(J$.G(7153, J$.R(7145, 'bulkResult', bulkResult, 0), 'error', 0), J$.T(7161, null, 25, false))));
                                                            }
                                                            J$.X1(7217, J$.F(7209, J$.R(7193, 'backwardsCompatibilityExecuteCommands', backwardsCompatibilityExecuteCommands, 0), 0)(J$.R(7201, 'callback', callback, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(9153, J$e);
                                                        } finally {
                                                            if (J$.Fr(9161))
                                                                continue jalangiLabel1885;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 7225), processLegacyOperations, 1));
                                            if (J$.X1(9169, J$.C(384, J$.B(410, '==', J$.G(7289, J$.R(7281, 'batch', batch, 0), 'batchType', 0), J$.G(7305, J$.R(7297, 'common', common, 1), 'INSERT', 0), 0)))) {
                                                return J$.X1(7377, J$.Rt(7369, J$.F(7361, J$.R(7313, 'executeInserts', executeInserts, 0), 0)(J$.R(7321, 'collection', collection, 0), J$.R(7329, 'batch', batch, 0), J$.T(7345, {
                                                    n: J$.T(7337, 0, 22, false)
                                                }, 11, false), J$.R(7353, 'processLegacyOperations', processLegacyOperations, 0))));
                                            }
                                            if (J$.X1(9177, J$.C(392, J$.B(418, '==', J$.G(7393, J$.R(7385, 'batch', batch, 0), 'batchType', 0), J$.G(7409, J$.R(7401, 'common', common, 1), 'UPDATE', 0), 0)))) {
                                                return J$.X1(7481, J$.Rt(7473, J$.F(7465, J$.R(7417, 'executeUpdates', executeUpdates, 0), 0)(J$.R(7425, 'collection', collection, 0), J$.R(7433, 'batch', batch, 0), J$.T(7449, {
                                                    n: J$.T(7441, 0, 22, false)
                                                }, 11, false), J$.R(7457, 'processLegacyOperations', processLegacyOperations, 0))));
                                            }
                                            if (J$.X1(9185, J$.C(400, J$.B(426, '==', J$.G(7497, J$.R(7489, 'batch', batch, 0), 'batchType', 0), J$.G(7513, J$.R(7505, 'common', common, 1), 'REMOVE', 0), 0)))) {
                                                return J$.X1(7585, J$.Rt(7577, J$.F(7569, J$.R(7521, 'executeRemoves', executeRemoves, 0), 0)(J$.R(7529, 'collection', collection, 0), J$.R(7537, 'batch', batch, 0), J$.T(7553, {
                                                    n: J$.T(7545, 0, 22, false)
                                                }, 11, false), J$.R(7561, 'processLegacyOperations', processLegacyOperations, 0))));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(9193, J$e);
                                        } finally {
                                            if (J$.Fr(9201))
                                                continue jalangiLabel1886;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 7593), backwardsCompatibilityExecuteCommands, 1));
                            J$.X1(8073, J$.P(8065, J$.R(7657, 'this', this, 0), 'execute', J$.T(8057, function (_writeConcern, callback) {
                                jalangiLabel1887:
                                    while (true) {
                                        try {
                                            J$.Fe(8025, arguments.callee, this, arguments);
                                            arguments = J$.N(8033, 'arguments', arguments, 4);
                                            _writeConcern = J$.N(8041, '_writeConcern', _writeConcern, 4);
                                            callback = J$.N(8049, 'callback', callback, 4);
                                            if (J$.X1(9209, J$.C(408, J$.R(7665, 'executed', executed, 0))))
                                                throw J$.X1(7705, J$.Th(7697, J$.M(7689, J$.R(7673, 'utils', utils, 1), 'toError', 2)(J$.T(7681, 'batch cannot be re-executed', 21, false))));
                                            if (J$.X1(9217, J$.C(416, J$.B(442, '==', J$.U(434, 'typeof', J$.R(7713, '_writeConcern', _writeConcern, 0)), J$.T(7721, 'function', 21, false), 0)))) {
                                                J$.X1(7745, callback = J$.W(7737, 'callback', J$.R(7729, '_writeConcern', _writeConcern, 0), callback, 0));
                                            } else {
                                                J$.X1(7769, writeConcern = J$.W(7761, 'writeConcern', J$.R(7753, '_writeConcern', _writeConcern, 0), writeConcern, 0));
                                            }
                                            if (J$.X1(9225, J$.C(424, J$.R(7777, 'currentBatch', currentBatch, 0))))
                                                J$.X1(7809, J$.M(7801, J$.R(7785, 'batches', batches, 0), 'push', 0)(J$.R(7793, 'currentBatch', currentBatch, 0)));
                                            if (J$.X1(9233, J$.C(432, J$.B(450, '==', J$.G(7825, J$.R(7817, 'batches', batches, 0), 'length', 0), J$.T(7833, 0, 22, false), 0)))) {
                                                throw J$.X1(7873, J$.Th(7865, J$.M(7857, J$.R(7841, 'utils', utils, 1), 'toError', 0)(J$.T(7849, 'Invalid Operation, No operations in bulk', 21, false))));
                                            }
                                            if (J$.X1(9241, J$.C(440, J$.F(7913, J$.R(7881, 'hasWriteCommands', hasWriteCommands, 1), 0)(J$.M(7905, J$.G(7897, J$.R(7889, 'db', db, 0), 'serverConfig', 0), 'checkoutWriter', 0)()))))
                                                return J$.X1(7953, J$.Rt(7945, J$.F(7937, J$.R(7921, 'executeCommands', executeCommands, 0), 0)(J$.R(7929, 'callback', callback, 0))));
                                            J$.X1(7985, J$.P(7977, J$.R(7961, 'bulkResult', bulkResult, 0), 'nModified', J$.T(7969, null, 25, false), 0));
                                            J$.X1(8017, J$.F(8009, J$.R(7993, 'backwardsCompatibilityExecuteCommands', backwardsCompatibilityExecuteCommands, 0), 0)(J$.R(8001, 'callback', callback, 0)));
                                        } catch (J$e) {
                                            J$.Ex(9249, J$e);
                                        } finally {
                                            if (J$.Fr(9257))
                                                continue jalangiLabel1887;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 8025), 0));
                        } catch (J$e) {
                            J$.Ex(9265, J$e);
                        } finally {
                            if (J$.Fr(9273))
                                continue jalangiLabel1888;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(8433, '__secret__S$', __secret__S$, 0);
            J$.N(8441, '__secret__traits__', __secret__traits__, 0);
            J$.N(8449, 'shared', shared, 0);
            J$.N(8457, 'common', common, 0);
            J$.N(8465, 'utils', utils, 0);
            J$.N(8473, 'hasWriteCommands', hasWriteCommands, 0);
            J$.N(8481, 'WriteError', WriteError, 0);
            J$.N(8489, 'BatchWriteResult', BatchWriteResult, 0);
            J$.N(8497, 'LegacyOp', LegacyOp, 0);
            J$.N(8505, 'ObjectID', ObjectID, 0);
            J$.N(8513, 'Batch', Batch, 0);
            J$.N(8521, 'mergeBatchResults', mergeBatchResults, 0);
            OrderedBulkOperation = J$.N(8537, 'OrderedBulkOperation', J$.T(8529, OrderedBulkOperation, 12, false, 8081), 0);
            J$.N(8545, 'initializeOrderedBulkOp', initializeOrderedBulkOp, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var shared = J$.X1(289, J$.W(281, 'shared', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, '../shared', 21, false)), shared, 3)), common = J$.X1(305, J$.W(297, 'common', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, './common', 21, false)), common, 3)), utils = J$.X1(321, J$.W(313, 'utils', J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, '../../utils', 21, false)), utils, 3)), hasWriteCommands = J$.X1(337, J$.W(329, 'hasWriteCommands', J$.G(161, J$.R(153, 'utils', utils, 1), 'hasWriteCommands', 0), hasWriteCommands, 3)), WriteError = J$.X1(353, J$.W(345, 'WriteError', J$.G(177, J$.R(169, 'common', common, 1), 'WriteError', 0), WriteError, 3)), BatchWriteResult = J$.X1(369, J$.W(361, 'BatchWriteResult', J$.G(193, J$.R(185, 'common', common, 1), 'BatchWriteResult', 0), BatchWriteResult, 3)), LegacyOp = J$.X1(385, J$.W(377, 'LegacyOp', J$.G(209, J$.R(201, 'common', common, 1), 'LegacyOp', 0), LegacyOp, 3)), ObjectID = J$.X1(401, J$.W(393, 'ObjectID', J$.G(241, J$.F(233, J$.R(217, 'require', require, 2), 0)(J$.T(225, 'bson', 21, false)), 'ObjectID', 0), ObjectID, 3)), Batch = J$.X1(417, J$.W(409, 'Batch', J$.G(257, J$.R(249, 'common', common, 1), 'Batch', 0), Batch, 3)), mergeBatchResults = J$.X1(433, J$.W(425, 'mergeBatchResults', J$.G(273, J$.R(265, 'common', common, 1), 'mergeBatchResults', 0), mergeBatchResults, 3));
            var initializeOrderedBulkOp = J$.X1(8385, J$.W(8377, 'initializeOrderedBulkOp', J$.T(8369, function (options) {
                jalangiLabel1889:
                    while (true) {
                        try {
                            J$.Fe(8345, arguments.callee, this, arguments);
                            arguments = J$.N(8353, 'arguments', arguments, 4);
                            options = J$.N(8361, 'options', options, 4);
                            return J$.X1(8337, J$.Rt(8329, J$.F(8321, J$.R(8297, 'OrderedBulkOperation', OrderedBulkOperation, 1), 1)(J$.R(8305, 'this', this, 0), J$.R(8313, 'options', options, 0))));
                        } catch (J$e) {
                            J$.Ex(9281, J$e);
                        } finally {
                            if (J$.Fr(9289))
                                continue jalangiLabel1889;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 8345), initializeOrderedBulkOp, 3));
            J$.X1(8417, J$.P(8409, J$.R(8393, 'exports', exports, 2), 'initializeOrderedBulkOp', J$.R(8401, 'initializeOrderedBulkOp', initializeOrderedBulkOp, 1), 0));
        } catch (J$e) {
            J$.Ex(9297, J$e);
        } finally {
            if (J$.Sr(9305)) {
                J$.L();
                continue jalangiLabel1890;
            } else {
                J$.L();
                break jalangiLabel1890;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
