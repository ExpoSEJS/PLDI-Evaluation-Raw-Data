J$.iids = {"8":[16,15,16,28],"9":[1,20,1,27],"10":[17,9,17,25],"16":[17,9,17,25],"17":[1,28,1,32],"18":[19,9,19,38],"24":[19,9,19,38],"25":[1,20,1,33],"26":[25,23,25,52],"32":[25,23,25,52],"33":[1,20,1,33],"34":[27,21,27,44],"40":[26,29,26,70],"41":[1,20,1,33],"42":[27,46,27,49],"48":[30,17,30,20],"49":[2,26,2,38],"56":[36,17,36,74],"57":[2,26,2,45],"58":[27,46,27,49],"64":[39,21,39,68],"65":[2,26,2,45],"66":[29,35,29,58],"72":[42,28,42,107],"73":[2,26,2,45],"74":[34,44,34,72],"80":[42,28,42,127],"81":[3,17,3,24],"82":[36,17,36,41],"88":[42,28,42,127],"89":[3,25,3,49],"90":[36,45,36,60],"96":[39,21,39,68],"97":[3,17,3,50],"98":[36,45,36,74],"104":[36,17,36,74],"105":[3,17,3,60],"106":[39,21,39,40],"112":[27,21,27,44],"113":[3,70,3,77],"114":[39,44,39,68],"120":[55,13,55,16],"121":[3,78,3,88],"122":[42,28,42,56],"128":[58,17,58,20],"129":[3,70,3,89],"130":[42,60,42,107],"136":[72,13,72,16],"137":[3,100,3,107],"144":[77,17,77,20],"145":[3,108,3,114],"152":[90,13,90,16],"153":[3,100,3,115],"160":[94,17,94,20],"161":[3,100,3,122],"168":[107,13,107,16],"169":[3,17,3,60],"176":[110,17,110,20],"177":[3,17,3,60],"185":[3,70,3,89],"193":[3,70,3,89],"201":[3,100,3,122],"209":[3,100,3,122],"217":[4,16,4,20],"225":[4,16,4,20],"233":[4,16,4,20],"241":[5,24,5,28],"249":[5,24,5,28],"257":[5,24,5,28],"265":[7,16,7,23],"273":[7,24,7,34],"281":[7,16,7,35],"289":[7,16,7,44],"297":[7,16,7,44],"305":[7,5,7,45],"313":[8,24,8,31],"321":[8,32,8,42],"329":[8,24,8,43],"337":[8,24,8,53],"345":[8,24,8,70],"353":[8,24,8,70],"361":[8,5,8,71],"369":[9,3,10,2],"377":[12,31,12,32],"385":[12,31,12,32],"393":[12,31,12,32],"401":[13,23,13,27],"409":[13,23,13,27],"417":[13,23,13,27],"425":[14,36,14,37],"433":[14,36,14,37],"441":[14,36,14,37],"449":[15,28,15,33],"457":[15,28,15,33],"465":[15,28,15,33],"473":[16,15,16,22],"481":[16,26,16,28],"489":[16,15,16,28],"497":[16,5,16,29],"505":[17,9,17,17],"513":[17,21,17,25],"521":[18,16,18,24],"529":[18,29,18,34],"537":[18,35,18,70],"545":[18,25,18,71],"553":[18,16,18,72],"561":[18,16,18,72],"569":[18,9,18,73],"577":[19,9,19,16],"585":[19,17,19,29],"593":[19,9,19,30],"601":[19,34,19,38],"609":[20,31,20,32],"617":[20,31,20,32],"625":[20,9,20,33],"633":[22,31,22,33],"641":[22,31,22,46],"649":[22,31,22,66],"651":[22,31,22,64],"657":[22,31,22,73],"665":[22,31,22,73],"673":[22,9,22,74],"681":[23,9,23,16],"689":[23,17,23,24],"697":[23,28,23,32],"705":[23,9,23,32],"713":[23,9,23,33],"721":[25,23,25,30],"729":[25,31,25,43],"737":[25,23,25,44],"745":[25,48,25,52],"753":[25,56,25,63],"761":[25,64,25,76],"769":[25,56,25,77],"777":[25,55,25,78],"785":[25,81,25,83],"793":[25,81,25,96],"801":[25,81,25,116],"803":[25,81,25,114],"809":[25,23,25,116],"817":[25,23,25,116],"825":[26,29,26,36],"833":[26,37,26,56],"841":[26,29,26,57],"849":[26,61,26,70],"857":[26,29,26,70],"865":[26,29,26,70],"873":[27,18,27,19],"881":[27,18,27,19],"889":[27,18,27,19],"897":[27,21,27,22],"905":[27,25,27,44],"921":[27,46,27,47],"929":[27,46,27,49],"945":[28,9,28,25],"953":[28,26,28,28],"961":[28,30,28,38],"969":[28,40,28,48],"977":[28,50,28,56],"985":[28,58,28,75],"993":[28,77,28,88],"1001":[28,89,28,90],"1009":[28,77,28,91],"1017":[29,35,29,54],"1025":[29,57,29,58],"1033":[29,35,29,58],"1041":[29,13,29,59],"1049":[30,17,30,20],"1057":[31,31,31,34],"1065":[31,31,31,34],"1073":[31,17,31,35],"1081":[33,36,33,40],"1089":[33,36,33,40],"1097":[33,17,33,41],"1105":[34,44,34,68],"1113":[34,71,34,72],"1121":[34,44,34,72],"1129":[34,17,34,73],"1137":[36,17,36,36],"1145":[36,40,36,41],"1153":[36,52,36,60],"1161":[36,64,36,74],"1169":[37,40,37,48],"1177":[37,40,37,48],"1185":[37,40,37,48],"1193":[38,28,38,32],"1201":[38,28,38,32],"1209":[38,17,38,33],"1217":[39,21,39,32],"1225":[39,36,39,40],"1233":[39,44,39,63],"1241":[39,67,39,68],"1249":[40,21,40,23],"1257":[40,21,40,36],"1265":[40,21,40,41],"1273":[40,46,40,54],"1281":[40,56,40,58],"1289":[40,56,40,71],"1297":[40,73,40,81],"1305":[40,83,40,91],"1313":[40,93,40,99],"1321":[40,101,40,118],"1329":[40,21,40,119],"1331":[40,21,40,45],"1337":[40,21,40,120],"1345":[41,28,41,44],"1353":[41,45,41,49],"1361":[41,51,41,55],"1369":[41,28,41,56],"1377":[41,28,41,56],"1385":[41,21,41,57],"1393":[42,28,42,52],"1401":[42,55,42,56],"1409":[42,60,42,84],"1417":[42,88,42,107],"1425":[42,111,42,127],"1433":[43,21,43,23],"1441":[43,21,43,36],"1449":[43,21,43,41],"1457":[43,46,43,54],"1465":[43,56,43,58],"1473":[43,56,43,71],"1481":[43,73,43,81],"1489":[43,83,43,91],"1497":[43,93,43,99],"1505":[43,101,43,118],"1513":[43,21,43,119],"1515":[43,21,43,45],"1521":[43,21,43,120],"1529":[44,28,44,44],"1537":[44,45,44,49],"1545":[44,51,44,55],"1553":[44,28,44,56],"1561":[44,28,44,56],"1569":[44,21,44,57],"1577":[46,28,46,44],"1585":[46,45,46,56],"1593":[46,58,46,63],"1601":[46,28,46,64],"1609":[46,28,46,64],"1617":[46,21,46,65],"1625":[28,93,49,10],"1633":[28,93,49,10],"1641":[28,93,49,10],"1649":[28,93,49,10],"1657":[28,93,49,10],"1665":[28,93,49,10],"1673":[28,9,49,11],"1681":[28,9,49,12],"1689":[11,20,51,2],"1697":[11,20,51,2],"1705":[11,20,51,2],"1713":[11,20,51,2],"1721":[11,20,51,2],"1729":[11,20,51,2],"1737":[11,20,51,2],"1745":[11,20,51,2],"1753":[11,20,51,2],"1761":[11,20,51,2],"1769":[11,20,51,2],"1777":[11,20,51,2],"1785":[11,20,51,2],"1793":[11,20,51,2],"1801":[11,20,51,2],"1809":[11,20,51,2],"1817":[11,20,51,2],"1825":[11,20,51,2],"1833":[53,34,53,50],"1841":[53,51,53,61],"1849":[53,51,53,75],"1857":[53,51,53,80],"1865":[53,82,53,92],"1873":[53,82,53,106],"1881":[53,82,53,111],"1889":[53,113,53,130],"1897":[53,30,53,131],"1905":[53,30,53,131],"1913":[53,30,53,131],"1921":[54,5,54,23],"1929":[54,29,54,37],"1937":[54,39,54,47],"1945":[55,13,55,16],"1953":[56,20,56,28],"1961":[56,29,56,32],"1969":[56,34,56,39],"1977":[56,20,56,40],"1985":[56,20,56,40],"1993":[56,13,56,41],"2001":[57,9,57,27],"2009":[57,39,57,41],"2017":[58,17,58,20],"2025":[59,24,59,32],"2033":[59,33,59,36],"2041":[59,38,59,43],"2049":[59,24,59,44],"2057":[59,24,59,44],"2065":[59,17,59,45],"2073":[60,13,60,35],"2081":[60,36,60,54],"2089":[60,56,60,63],"2097":[60,65,60,67],"2105":[60,69,60,77],"2113":[60,79,60,87],"2121":[60,89,60,95],"2129":[60,97,60,107],"2137":[60,109,60,117],"2145":[60,13,60,118],"2153":[60,13,60,119],"2161":[57,43,61,10],"2169":[57,43,61,10],"2177":[57,43,61,10],"2185":[57,43,61,10],"2193":[57,43,61,10],"2201":[57,9,61,11],"2203":[57,9,57,38],"2209":[57,9,61,12],"2217":[54,49,62,6],"2225":[54,49,62,6],"2233":[54,49,62,6],"2241":[54,49,62,6],"2249":[54,49,62,6],"2257":[54,5,62,7],"2259":[54,5,54,28],"2265":[54,5,62,8],"2273":[52,24,63,2],"2281":[52,24,63,2],"2289":[52,24,63,2],"2297":[52,24,63,2],"2305":[52,24,63,2],"2313":[52,24,63,2],"2321":[52,24,63,2],"2329":[52,24,63,2],"2337":[52,24,63,2],"2345":[52,24,63,2],"2353":[52,24,63,2],"2361":[52,24,63,2],"2369":[52,24,63,2],"2377":[66,20,66,21],"2385":[67,20,67,28],"2393":[68,18,68,25],"2401":[69,24,69,25],"2409":[65,19,70,6],"2417":[65,19,70,6],"2425":[65,19,70,6],"2433":[71,5,71,7],"2441":[71,29,71,38],"2449":[71,55,71,57],"2457":[71,59,71,66],"2465":[71,68,71,70],"2473":[71,72,71,83],"2481":[71,29,71,84],"2483":[71,29,71,54],"2489":[71,100,71,110],"2497":[71,86,71,112],"2505":[72,13,72,16],"2513":[73,20,73,28],"2521":[73,29,73,32],"2529":[73,34,73,39],"2537":[73,20,73,40],"2545":[73,20,73,40],"2553":[73,13,73,41],"2561":[74,15,74,18],"2569":[74,15,74,28],"2577":[74,29,74,30],"2585":[74,15,74,31],"2593":[74,15,74,31],"2601":[74,9,74,32],"2609":[75,26,75,29],"2617":[75,26,75,37],"2625":[75,26,75,37],"2633":[75,26,75,37],"2641":[76,9,76,27],"2649":[76,39,76,42],"2657":[76,39,76,50],"2665":[77,17,77,20],"2673":[78,24,78,32],"2681":[78,33,78,36],"2689":[78,38,78,43],"2697":[78,24,78,44],"2705":[78,24,78,44],"2713":[78,17,78,45],"2721":[79,13,79,36],"2729":[79,37,79,55],"2737":[79,57,79,64],"2745":[79,66,79,69],"2753":[79,71,79,73],"2761":[79,75,79,83],"2769":[79,85,79,93],"2777":[79,95,79,101],"2785":[79,103,79,113],"2793":[79,115,79,123],"2801":[79,13,79,124],"2809":[79,13,79,125],"2817":[76,52,80,10],"2825":[76,52,80,10],"2833":[76,52,80,10],"2841":[76,52,80,10],"2849":[76,52,80,10],"2857":[76,9,80,11],"2859":[76,9,76,38],"2865":[76,9,80,12],"2873":[71,114,81,6],"2881":[71,114,81,6],"2889":[71,114,81,6],"2897":[71,114,81,6],"2905":[71,114,81,6],"2913":[71,114,81,6],"2921":[71,5,81,7],"2923":[71,5,71,28],"2929":[71,5,81,8],"2937":[64,30,82,2],"2945":[64,30,82,2],"2953":[64,30,82,2],"2961":[64,30,82,2],"2969":[64,30,82,2],"2977":[64,30,82,2],"2985":[64,30,82,2],"2993":[64,30,82,2],"3001":[64,30,82,2],"3009":[64,30,82,2],"3017":[64,30,82,2],"3025":[64,30,82,2],"3033":[64,30,82,2],"3041":[64,30,82,2],"3049":[85,23,85,24],"3057":[86,25,86,28],"3065":[86,25,86,43],"3073":[87,18,87,25],"3081":[84,19,88,6],"3089":[84,19,88,6],"3097":[84,19,88,6],"3105":[89,5,89,7],"3113":[89,29,89,38],"3121":[89,55,89,57],"3129":[89,59,89,66],"3137":[89,68,89,70],"3145":[89,72,89,83],"3153":[89,29,89,84],"3155":[89,29,89,54],"3161":[89,100,89,110],"3169":[89,86,89,112],"3177":[90,13,90,16],"3185":[91,20,91,28],"3193":[91,29,91,32],"3201":[91,34,91,39],"3209":[91,20,91,40],"3217":[91,20,91,40],"3225":[91,13,91,41],"3233":[92,15,92,18],"3241":[92,15,92,28],"3249":[92,29,92,30],"3257":[92,15,92,31],"3265":[92,15,92,31],"3273":[92,9,92,32],"3281":[93,9,93,27],"3289":[93,39,93,42],"3297":[93,39,93,50],"3305":[94,17,94,20],"3313":[95,24,95,32],"3321":[95,33,95,36],"3329":[95,38,95,43],"3337":[95,24,95,44],"3345":[95,24,95,44],"3353":[95,17,95,45],"3361":[96,13,96,35],"3369":[96,36,96,54],"3377":[96,56,96,63],"3385":[96,65,96,68],"3393":[96,70,96,72],"3401":[96,74,96,82],"3409":[96,84,96,92],"3417":[96,94,96,100],"3425":[96,102,96,112],"3433":[96,114,96,122],"3441":[96,13,96,123],"3449":[96,13,96,124],"3457":[93,52,97,10],"3465":[93,52,97,10],"3473":[93,52,97,10],"3481":[93,52,97,10],"3489":[93,52,97,10],"3497":[93,9,97,11],"3499":[93,9,93,38],"3505":[93,9,97,12],"3513":[89,114,98,6],"3521":[89,114,98,6],"3529":[89,114,98,6],"3537":[89,114,98,6],"3545":[89,114,98,6],"3553":[89,5,98,7],"3555":[89,5,89,28],"3561":[89,5,98,8],"3569":[83,31,99,2],"3577":[83,31,99,2],"3585":[83,31,99,2],"3593":[83,31,99,2],"3601":[83,31,99,2],"3609":[83,31,99,2],"3617":[83,31,99,2],"3625":[83,31,99,2],"3633":[83,31,99,2],"3641":[83,31,99,2],"3649":[83,31,99,2],"3657":[83,31,99,2],"3665":[83,31,99,2],"3673":[83,31,99,2],"3681":[83,31,99,2],"3689":[102,23,102,24],"3697":[103,25,103,28],"3705":[103,25,103,43],"3713":[104,18,104,25],"3721":[101,19,105,6],"3729":[101,19,105,6],"3737":[101,19,105,6],"3745":[106,5,106,7],"3753":[106,29,106,38],"3761":[106,55,106,57],"3769":[106,59,106,66],"3777":[106,68,106,70],"3785":[106,72,106,83],"3793":[106,29,106,84],"3795":[106,29,106,54],"3801":[106,100,106,110],"3809":[106,86,106,112],"3817":[107,13,107,16],"3825":[108,20,108,28],"3833":[108,29,108,32],"3841":[108,34,108,39],"3849":[108,20,108,40],"3857":[108,20,108,40],"3865":[108,13,108,41],"3873":[109,9,109,27],"3881":[109,39,109,43],"3889":[110,17,110,20],"3897":[111,24,111,32],"3905":[111,33,111,36],"3913":[111,38,111,43],"3921":[111,24,111,44],"3929":[111,24,111,44],"3937":[111,17,111,45],"3945":[112,13,112,21],"3953":[112,22,112,26],"3961":[112,28,112,32],"3969":[112,13,112,33],"3977":[112,13,112,34],"3985":[109,45,113,10],"3993":[109,45,113,10],"4001":[109,45,113,10],"4009":[109,45,113,10],"4017":[109,45,113,10],"4025":[109,9,113,11],"4027":[109,9,109,38],"4033":[109,9,113,12],"4041":[106,114,114,6],"4049":[106,114,114,6],"4057":[106,114,114,6],"4065":[106,114,114,6],"4073":[106,114,114,6],"4081":[106,5,114,7],"4083":[106,5,106,28],"4089":[106,5,114,8],"4097":[100,30,115,2],"4105":[100,30,115,2],"4113":[100,30,115,2],"4121":[100,30,115,2],"4129":[100,30,115,2],"4137":[100,30,115,2],"4145":[100,30,115,2],"4153":[100,30,115,2],"4161":[100,30,115,2],"4169":[100,30,115,2],"4177":[100,30,115,2],"4185":[100,30,115,2],"4193":[100,30,115,2],"4201":[100,30,115,2],"4209":[100,30,115,2],"4217":[116,1,116,8],"4225":[116,24,116,36],"4233":[116,1,116,36],"4241":[116,1,116,37],"4249":[1,1,116,37],"4257":[1,1,116,37],"4265":[1,1,116,37],"4273":[1,1,116,37],"4281":[1,1,116,37],"4289":[1,1,116,37],"4297":[1,1,116,37],"4305":[1,1,116,37],"4313":[1,1,116,37],"4321":[1,1,116,37],"4329":[1,1,116,37],"4337":[1,1,116,37],"4345":[1,1,116,37],"4353":[17,5,18,73],"4361":[19,5,24,6],"4369":[25,23,25,116],"4377":[30,13,35,14],"4385":[42,24,47,18],"4393":[39,17,47,18],"4401":[36,13,48,14],"4409":[28,93,49,10],"4417":[28,93,49,10],"4425":[27,5,50,6],"4433":[27,5,50,6],"4441":[11,20,51,2],"4449":[11,20,51,2],"4457":[55,9,56,41],"4465":[58,13,59,45],"4473":[57,43,61,10],"4481":[57,43,61,10],"4489":[54,49,62,6],"4497":[54,49,62,6],"4505":[52,24,63,2],"4513":[52,24,63,2],"4521":[72,9,73,41],"4529":[77,13,78,45],"4537":[76,52,80,10],"4545":[76,52,80,10],"4553":[71,114,81,6],"4561":[71,114,81,6],"4569":[64,30,82,2],"4577":[64,30,82,2],"4585":[90,9,91,41],"4593":[94,13,95,45],"4601":[93,52,97,10],"4609":[93,52,97,10],"4617":[89,114,98,6],"4625":[89,114,98,6],"4633":[83,31,99,2],"4641":[83,31,99,2],"4649":[107,9,108,41],"4657":[110,13,111,45],"4665":[109,45,113,10],"4673":[109,45,113,10],"4681":[106,114,114,6],"4689":[106,114,114,6],"4697":[100,30,115,2],"4705":[100,30,115,2],"4713":[1,1,116,37],"4721":[1,1,116,37],"nBranches":44,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/auth/mongodb_gssapi.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/auth/mongodb_gssapi_jalangi_.js","code":"var DbCommand = require('../commands/db_command').DbCommand\n  , utils = require('../utils')\n  , format = require('util').format;\n\n// Kerberos class\nvar Kerberos = null;\nvar MongoAuthProcess = null;\n// Try to grab the Kerberos class\ntry {\n  Kerberos = require('kerberos').Kerberos\n  // Authentication process for Mongo\n  MongoAuthProcess = require('kerberos').processes.MongoAuthProcess\n} catch(err) {}\n\nvar authenticate = function(db, username, password, authdb, options, callback) {\n  var numberOfConnections = 0;\n  var errorObject = null;  \n  var numberOfValidConnections = 0;\n  var credentialsValid = false;\n  options = options || {};\n  \n  // We don't have the Kerberos library\n  if(Kerberos == null) return callback(new Error(\"Kerberos library is not installed\"));  \n\n  if(options['connection'] != null) {\n    //if a connection was explicitly passed on options, then we have only one...\n    numberOfConnections = 1;\n  } else {\n    // Get the amount of connections in the pool to ensure we have authenticated all comments\n    numberOfConnections = db.serverConfig.allRawConnections().length;\n    options['onAll'] = true;\n  }\n\n  // Grab all the connections\n  var connections = options['connection'] != null ? [options['connection']] : db.serverConfig.allRawConnections();\n  var gssapiServiceName = options['gssapiServiceName'] || 'mongodb';\n\n  // Authenticate all connections\n  for(var i = 0; i < numberOfConnections; i++) {\n\n    // Start Auth process for a connection\n    GSSAPIInitialize(db, username, password, authdb, gssapiServiceName, connections[i], function(err, result) {\n      // Adjust number of connections left to connect\n      numberOfConnections = numberOfConnections - 1;\n\n      // Ensure we save any error\n      if(err) { \n        errorObject = err;\n      } else {\n        credentialsValid = true;\n        numberOfValidConnections = numberOfValidConnections + 1;\n      }\n\n      // Work around the case where the number of connections are 0\n      if(numberOfConnections <= 0 && typeof callback == 'function') {\n        var internalCallback = callback;\n        callback = null;\n\n        // We are done\n        if(errorObject == null && numberOfConnections == 0) {\n          // We authenticated correctly save the credentials\n          db.serverConfig.auth.add('GSSAPI', db.databaseName, username, password, authdb, gssapiServiceName);\n          // Return valid callback\n          return internalCallback(null, true);\n        } else if(numberOfValidConnections > 0 && numberOfValidConnections != numberOfConnections\n          && credentialsValid) {\n            // We authenticated correctly save the credentials\n            db.serverConfig.auth.add('GSSAPI', db.databaseName, username, password, authdb, gssapiServiceName);\n            // Return valid callback\n            return internalCallback(null, true);\n        } else {\n          return internalCallback(errorObject, false);        \n        }\n      }\n    });    \n  }\n}\n\n//\n// Initialize step\nvar GSSAPIInitialize = function(db, username, password, authdb, gssapiServiceName, connection, callback) {\n  // Create authenticator\n  var mongo_auth_process = new MongoAuthProcess(connection.socketOptions.host, connection.socketOptions.port, gssapiServiceName);\n\n  // Perform initialization\n  mongo_auth_process.init(username, password, function(err, context) {\n    if(err) return callback(err, false);\n\n    // Perform the first step\n    mongo_auth_process.transition('', function(err, payload) {\n      if(err) return callback(err, false);\n\n      // Call the next db step\n      MongoDBGSSAPIFirstStep(mongo_auth_process, payload, db, username, password, authdb, connection, callback);\n    });\n  });\n}\n\n//\n// Perform first step against mongodb\nvar MongoDBGSSAPIFirstStep = function(mongo_auth_process, payload, db, username, password, authdb, connection, callback) {\n  // Build the sasl start command\n  var command = {\n      saslStart: 1\n    , mechanism: 'GSSAPI'\n    , payload: payload\n    , autoAuthorize: 1\n  };\n\n  // Execute first sasl step\n  db._executeQueryCommand(DbCommand.createDbCommand(db, command, {}, '$external'), {connection:connection}, function(err, doc) {\n    if(err) return callback(err, false);\n    // Get the payload\n    doc = doc.documents[0];\n    var db_payload = doc.payload;\n\n    mongo_auth_process.transition(doc.payload, function(err, payload) {\n      if(err) return callback(err, false);\n\n      // MongoDB API Second Step\n      MongoDBGSSAPISecondStep(mongo_auth_process, payload, doc, db, username, password, authdb, connection, callback);\n    });\n  });\n}\n\n//\n// Perform first step against mongodb\nvar MongoDBGSSAPISecondStep = function(mongo_auth_process, payload, doc, db, username, password, authdb, connection, callback) {\n  // Build Authentication command to send to MongoDB\n  var command = {\n      saslContinue: 1\n    , conversationId: doc.conversationId\n    , payload: payload\n  };\n\n  // Execute the command\n  db._executeQueryCommand(DbCommand.createDbCommand(db, command, {}, '$external'), {connection:connection}, function(err, doc) {\n    if(err) return callback(err, false);\n\n    // Get the result document\n    doc = doc.documents[0];\n\n    // Call next transition for kerberos\n    mongo_auth_process.transition(doc.payload, function(err, payload) {\n      if(err) return callback(err, false);\n\n      // Call the last and third step\n      MongoDBGSSAPIThirdStep(mongo_auth_process, payload, doc, db, username, password, authdb, connection, callback);\n    });    \n  });\n}\n\nvar MongoDBGSSAPIThirdStep = function(mongo_auth_process, payload, doc, db, username, password, authdb, connection, callback) {\n  // Build final command\n  var command = {\n      saslContinue: 1\n    , conversationId: doc.conversationId\n    , payload: payload\n  };\n\n  // Let's finish the auth process against mongodb\n  db._executeQueryCommand(DbCommand.createDbCommand(db, command, {}, '$external'), {connection:connection}, function(err, doc) {\n    if(err) return callback(err, false);\n\n    mongo_auth_process.transition(null, function(err, payload) {\n      if(err) return callback(err, false);\n      callback(null, true);\n    });\n  });\n}\n\nexports.authenticate = authenticate;"};
jalangiLabel2068:
    while (true) {
        try {
            J$.Se(4249, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/auth/mongodb_gssapi_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/auth/mongodb_gssapi.js');
            J$.N(4257, '__secret__S$', __secret__S$, 0);
            J$.N(4265, '__secret__traits__', __secret__traits__, 0);
            J$.N(4273, 'DbCommand', DbCommand, 0);
            J$.N(4281, 'utils', utils, 0);
            J$.N(4289, 'format', format, 0);
            J$.N(4297, 'Kerberos', Kerberos, 0);
            J$.N(4305, 'MongoAuthProcess', MongoAuthProcess, 0);
            J$.N(4313, 'authenticate', authenticate, 0);
            J$.N(4321, 'GSSAPIInitialize', GSSAPIInitialize, 0);
            J$.N(4329, 'MongoDBGSSAPIFirstStep', MongoDBGSSAPIFirstStep, 0);
            J$.N(4337, 'MongoDBGSSAPISecondStep', MongoDBGSSAPISecondStep, 0);
            J$.N(4345, 'MongoDBGSSAPIThirdStep', MongoDBGSSAPIThirdStep, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var DbCommand = J$.X1(177, J$.W(169, 'DbCommand', J$.G(105, J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, '../commands/db_command', 21, false)), 'DbCommand', 0), DbCommand, 3)), utils = J$.X1(193, J$.W(185, 'utils', J$.F(129, J$.R(113, 'require', require, 2), 0)(J$.T(121, '../utils', 21, false)), utils, 3)), format = J$.X1(209, J$.W(201, 'format', J$.G(161, J$.F(153, J$.R(137, 'require', require, 2), 0)(J$.T(145, 'util', 21, false)), 'format', 0), format, 3));
            var Kerberos = J$.X1(233, J$.W(225, 'Kerberos', J$.T(217, null, 25, false), Kerberos, 3));
            var MongoAuthProcess = J$.X1(257, J$.W(249, 'MongoAuthProcess', J$.T(241, null, 25, false), MongoAuthProcess, 3));
            try {
                J$.X1(305, Kerberos = J$.W(297, 'Kerberos', J$.G(289, J$.F(281, J$.R(265, 'require', require, 2), 0)(J$.T(273, 'kerberos', 21, false)), 'Kerberos', 0), Kerberos, 2));
                J$.X1(361, MongoAuthProcess = J$.W(353, 'MongoAuthProcess', J$.G(345, J$.G(337, J$.F(329, J$.R(313, 'require', require, 2), 0)(J$.T(321, 'kerberos', 21, false)), 'processes', 0), 'MongoAuthProcess', 0), MongoAuthProcess, 2));
            } catch (err) {
                err = J$.N(369, 'err', err, 1);
            }
            var authenticate = J$.X1(1825, J$.W(1817, 'authenticate', J$.T(1809, function (db, username, password, authdb, options, callback) {
                jalangiLabel2055:
                    while (true) {
                        try {
                            J$.Fe(1689, arguments.callee, this, arguments);
                            arguments = J$.N(1697, 'arguments', arguments, 4);
                            db = J$.N(1705, 'db', db, 4);
                            username = J$.N(1713, 'username', username, 4);
                            password = J$.N(1721, 'password', password, 4);
                            authdb = J$.N(1729, 'authdb', authdb, 4);
                            options = J$.N(1737, 'options', options, 4);
                            callback = J$.N(1745, 'callback', callback, 4);
                            J$.N(1753, 'numberOfConnections', numberOfConnections, 0);
                            J$.N(1761, 'errorObject', errorObject, 0);
                            J$.N(1769, 'numberOfValidConnections', numberOfValidConnections, 0);
                            J$.N(1777, 'credentialsValid', credentialsValid, 0);
                            J$.N(1785, 'connections', connections, 0);
                            J$.N(1793, 'gssapiServiceName', gssapiServiceName, 0);
                            J$.N(1801, 'i', i, 0);
                            var numberOfConnections = J$.X1(393, J$.W(385, 'numberOfConnections', J$.T(377, 0, 22, false), numberOfConnections, 1));
                            var errorObject = J$.X1(417, J$.W(409, 'errorObject', J$.T(401, null, 25, false), errorObject, 1));
                            var numberOfValidConnections = J$.X1(441, J$.W(433, 'numberOfValidConnections', J$.T(425, 0, 22, false), numberOfValidConnections, 1));
                            var credentialsValid = J$.X1(465, J$.W(457, 'credentialsValid', J$.T(449, false, 23, false), credentialsValid, 1));
                            J$.X1(497, options = J$.W(489, 'options', J$.C(8, J$.R(473, 'options', options, 0)) ? J$._() : J$.T(481, {}, 11, false), options, 0));
                            if (J$.X1(4353, J$.C(16, J$.B(10, '==', J$.R(505, 'Kerberos', Kerberos, 1), J$.T(513, null, 25, false), 0))))
                                return J$.X1(569, J$.Rt(561, J$.F(553, J$.R(521, 'callback', callback, 0), 0)(J$.F(545, J$.R(529, 'Error', Error, 2), 1)(J$.T(537, 'Kerberos library is not installed', 21, false)))));
                            if (J$.X1(4361, J$.C(24, J$.B(18, '!=', J$.G(593, J$.R(577, 'options', options, 0), J$.T(585, 'connection', 21, false), 4), J$.T(601, null, 25, false), 0)))) {
                                J$.X1(625, numberOfConnections = J$.W(617, 'numberOfConnections', J$.T(609, 1, 22, false), numberOfConnections, 0));
                            } else {
                                J$.X1(673, numberOfConnections = J$.W(665, 'numberOfConnections', J$.G(657, J$.M(649, J$.G(641, J$.R(633, 'db', db, 0), 'serverConfig', 0), 'allRawConnections', 0)(), 'length', 0), numberOfConnections, 0));
                                J$.X1(713, J$.P(705, J$.R(681, 'options', options, 0), J$.T(689, 'onAll', 21, false), J$.T(697, true, 23, false), 2));
                            }
                            var connections = J$.X1(817, J$.W(809, 'connections', J$.X1(4369, J$.C(32, J$.B(26, '!=', J$.G(737, J$.R(721, 'options', options, 0), J$.T(729, 'connection', 21, false), 4), J$.T(745, null, 25, false), 0))) ? J$.T(777, [J$.G(769, J$.R(753, 'options', options, 0), J$.T(761, 'connection', 21, false), 4)], 10, false) : J$.M(801, J$.G(793, J$.R(785, 'db', db, 0), 'serverConfig', 0), 'allRawConnections', 0)(), connections, 1));
                            var gssapiServiceName = J$.X1(865, J$.W(857, 'gssapiServiceName', J$.C(40, J$.G(841, J$.R(825, 'options', options, 0), J$.T(833, 'gssapiServiceName', 21, false), 4)) ? J$._() : J$.T(849, 'mongodb', 21, false), gssapiServiceName, 1));
                            for (var i = J$.X1(889, J$.W(881, 'i', J$.T(873, 0, 22, false), i, 1)); J$.X1(4425, J$.C(112, J$.B(34, '<', J$.R(897, 'i', i, 0), J$.R(905, 'numberOfConnections', numberOfConnections, 0), 0))); J$.X1(4433, J$.B(58, '-', i = J$.W(929, 'i', J$.B(50, '+', J$.U(42, '+', J$.R(921, 'i', i, 0)), J$.T(913, 1, 22, false), 0), i, 0), J$.T(937, 1, 22, false), 0))) {
                                J$.X1(1681, J$.F(1673, J$.R(945, 'GSSAPIInitialize', GSSAPIInitialize, 1), 0)(J$.R(953, 'db', db, 0), J$.R(961, 'username', username, 0), J$.R(969, 'password', password, 0), J$.R(977, 'authdb', authdb, 0), J$.R(985, 'gssapiServiceName', gssapiServiceName, 0), J$.G(1009, J$.R(993, 'connections', connections, 0), J$.R(1001, 'i', i, 0), 4), J$.T(1665, function (err, result) {
                                    jalangiLabel2054:
                                        while (true) {
                                            try {
                                                J$.Fe(1625, arguments.callee, this, arguments);
                                                arguments = J$.N(1633, 'arguments', arguments, 4);
                                                err = J$.N(1641, 'err', err, 4);
                                                result = J$.N(1649, 'result', result, 4);
                                                J$.N(1657, 'internalCallback', internalCallback, 0);
                                                J$.X1(1041, numberOfConnections = J$.W(1033, 'numberOfConnections', J$.B(66, '-', J$.R(1017, 'numberOfConnections', numberOfConnections, 0), J$.T(1025, 1, 22, false), 0), numberOfConnections, 0));
                                                if (J$.X1(4377, J$.C(48, J$.R(1049, 'err', err, 0)))) {
                                                    J$.X1(1073, errorObject = J$.W(1065, 'errorObject', J$.R(1057, 'err', err, 0), errorObject, 0));
                                                } else {
                                                    J$.X1(1097, credentialsValid = J$.W(1089, 'credentialsValid', J$.T(1081, true, 23, false), credentialsValid, 0));
                                                    J$.X1(1129, numberOfValidConnections = J$.W(1121, 'numberOfValidConnections', J$.B(74, '+', J$.R(1105, 'numberOfValidConnections', numberOfValidConnections, 0), J$.T(1113, 1, 22, false), 0), numberOfValidConnections, 0));
                                                }
                                                if (J$.X1(4401, J$.C(104, J$.C(56, J$.B(82, '<=', J$.R(1137, 'numberOfConnections', numberOfConnections, 0), J$.T(1145, 0, 22, false), 0)) ? J$.B(98, '==', J$.U(90, 'typeof', J$.R(1153, 'callback', callback, 0)), J$.T(1161, 'function', 21, false), 0) : J$._()))) {
                                                    var internalCallback = J$.X1(1185, J$.W(1177, 'internalCallback', J$.R(1169, 'callback', callback, 0), internalCallback, 1));
                                                    J$.X1(1209, callback = J$.W(1201, 'callback', J$.T(1193, null, 25, false), callback, 0));
                                                    if (J$.X1(4393, J$.C(96, J$.C(64, J$.B(106, '==', J$.R(1217, 'errorObject', errorObject, 0), J$.T(1225, null, 25, false), 0)) ? J$.B(114, '==', J$.R(1233, 'numberOfConnections', numberOfConnections, 0), J$.T(1241, 0, 22, false), 0) : J$._()))) {
                                                        J$.X1(1337, J$.M(1329, J$.G(1265, J$.G(1257, J$.R(1249, 'db', db, 0), 'serverConfig', 0), 'auth', 0), 'add', 0)(J$.T(1273, 'GSSAPI', 21, false), J$.G(1289, J$.R(1281, 'db', db, 0), 'databaseName', 0), J$.R(1297, 'username', username, 0), J$.R(1305, 'password', password, 0), J$.R(1313, 'authdb', authdb, 0), J$.R(1321, 'gssapiServiceName', gssapiServiceName, 0)));
                                                        return J$.X1(1385, J$.Rt(1377, J$.F(1369, J$.R(1345, 'internalCallback', internalCallback, 0), 0)(J$.T(1353, null, 25, false), J$.T(1361, true, 23, false))));
                                                    } else if (J$.X1(4385, J$.C(88, J$.C(80, J$.C(72, J$.B(122, '>', J$.R(1393, 'numberOfValidConnections', numberOfValidConnections, 0), J$.T(1401, 0, 22, false), 0)) ? J$.B(130, '!=', J$.R(1409, 'numberOfValidConnections', numberOfValidConnections, 0), J$.R(1417, 'numberOfConnections', numberOfConnections, 0), 0) : J$._()) ? J$.R(1425, 'credentialsValid', credentialsValid, 0) : J$._()))) {
                                                        J$.X1(1521, J$.M(1513, J$.G(1449, J$.G(1441, J$.R(1433, 'db', db, 0), 'serverConfig', 0), 'auth', 0), 'add', 0)(J$.T(1457, 'GSSAPI', 21, false), J$.G(1473, J$.R(1465, 'db', db, 0), 'databaseName', 0), J$.R(1481, 'username', username, 0), J$.R(1489, 'password', password, 0), J$.R(1497, 'authdb', authdb, 0), J$.R(1505, 'gssapiServiceName', gssapiServiceName, 0)));
                                                        return J$.X1(1569, J$.Rt(1561, J$.F(1553, J$.R(1529, 'internalCallback', internalCallback, 0), 0)(J$.T(1537, null, 25, false), J$.T(1545, true, 23, false))));
                                                    } else {
                                                        return J$.X1(1617, J$.Rt(1609, J$.F(1601, J$.R(1577, 'internalCallback', internalCallback, 0), 0)(J$.R(1585, 'errorObject', errorObject, 0), J$.T(1593, false, 23, false))));
                                                    }
                                                }
                                            } catch (J$e) {
                                                J$.Ex(4409, J$e);
                                            } finally {
                                                if (J$.Fr(4417))
                                                    continue jalangiLabel2054;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 1625)));
                            }
                        } catch (J$e) {
                            J$.Ex(4441, J$e);
                        } finally {
                            if (J$.Fr(4449))
                                continue jalangiLabel2055;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1689), authenticate, 3));
            var GSSAPIInitialize = J$.X1(2369, J$.W(2361, 'GSSAPIInitialize', J$.T(2353, function (db, username, password, authdb, gssapiServiceName, connection, callback) {
                jalangiLabel2058:
                    while (true) {
                        try {
                            J$.Fe(2273, arguments.callee, this, arguments);
                            arguments = J$.N(2281, 'arguments', arguments, 4);
                            db = J$.N(2289, 'db', db, 4);
                            username = J$.N(2297, 'username', username, 4);
                            password = J$.N(2305, 'password', password, 4);
                            authdb = J$.N(2313, 'authdb', authdb, 4);
                            gssapiServiceName = J$.N(2321, 'gssapiServiceName', gssapiServiceName, 4);
                            connection = J$.N(2329, 'connection', connection, 4);
                            callback = J$.N(2337, 'callback', callback, 4);
                            J$.N(2345, 'mongo_auth_process', mongo_auth_process, 0);
                            var mongo_auth_process = J$.X1(1913, J$.W(1905, 'mongo_auth_process', J$.F(1897, J$.R(1833, 'MongoAuthProcess', MongoAuthProcess, 1), 1)(J$.G(1857, J$.G(1849, J$.R(1841, 'connection', connection, 0), 'socketOptions', 0), 'host', 0), J$.G(1881, J$.G(1873, J$.R(1865, 'connection', connection, 0), 'socketOptions', 0), 'port', 0), J$.R(1889, 'gssapiServiceName', gssapiServiceName, 0)), mongo_auth_process, 1));
                            J$.X1(2265, J$.M(2257, J$.R(1921, 'mongo_auth_process', mongo_auth_process, 0), 'init', 0)(J$.R(1929, 'username', username, 0), J$.R(1937, 'password', password, 0), J$.T(2249, function (err, context) {
                                jalangiLabel2057:
                                    while (true) {
                                        try {
                                            J$.Fe(2217, arguments.callee, this, arguments);
                                            arguments = J$.N(2225, 'arguments', arguments, 4);
                                            err = J$.N(2233, 'err', err, 4);
                                            context = J$.N(2241, 'context', context, 4);
                                            if (J$.X1(4457, J$.C(120, J$.R(1945, 'err', err, 0))))
                                                return J$.X1(1993, J$.Rt(1985, J$.F(1977, J$.R(1953, 'callback', callback, 0), 0)(J$.R(1961, 'err', err, 0), J$.T(1969, false, 23, false))));
                                            J$.X1(2209, J$.M(2201, J$.R(2001, 'mongo_auth_process', mongo_auth_process, 0), 'transition', 0)(J$.T(2009, '', 21, false), J$.T(2193, function (err, payload) {
                                                jalangiLabel2056:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(2161, arguments.callee, this, arguments);
                                                            arguments = J$.N(2169, 'arguments', arguments, 4);
                                                            err = J$.N(2177, 'err', err, 4);
                                                            payload = J$.N(2185, 'payload', payload, 4);
                                                            if (J$.X1(4465, J$.C(128, J$.R(2017, 'err', err, 0))))
                                                                return J$.X1(2065, J$.Rt(2057, J$.F(2049, J$.R(2025, 'callback', callback, 0), 0)(J$.R(2033, 'err', err, 0), J$.T(2041, false, 23, false))));
                                                            J$.X1(2153, J$.F(2145, J$.R(2073, 'MongoDBGSSAPIFirstStep', MongoDBGSSAPIFirstStep, 1), 0)(J$.R(2081, 'mongo_auth_process', mongo_auth_process, 0), J$.R(2089, 'payload', payload, 0), J$.R(2097, 'db', db, 0), J$.R(2105, 'username', username, 0), J$.R(2113, 'password', password, 0), J$.R(2121, 'authdb', authdb, 0), J$.R(2129, 'connection', connection, 0), J$.R(2137, 'callback', callback, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(4473, J$e);
                                                        } finally {
                                                            if (J$.Fr(4481))
                                                                continue jalangiLabel2056;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 2161)));
                                        } catch (J$e) {
                                            J$.Ex(4489, J$e);
                                        } finally {
                                            if (J$.Fr(4497))
                                                continue jalangiLabel2057;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 2217)));
                        } catch (J$e) {
                            J$.Ex(4505, J$e);
                        } finally {
                            if (J$.Fr(4513))
                                continue jalangiLabel2058;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2273), GSSAPIInitialize, 3));
            var MongoDBGSSAPIFirstStep = J$.X1(3041, J$.W(3033, 'MongoDBGSSAPIFirstStep', J$.T(3025, function (mongo_auth_process, payload, db, username, password, authdb, connection, callback) {
                jalangiLabel2061:
                    while (true) {
                        try {
                            J$.Fe(2937, arguments.callee, this, arguments);
                            arguments = J$.N(2945, 'arguments', arguments, 4);
                            mongo_auth_process = J$.N(2953, 'mongo_auth_process', mongo_auth_process, 4);
                            payload = J$.N(2961, 'payload', payload, 4);
                            db = J$.N(2969, 'db', db, 4);
                            username = J$.N(2977, 'username', username, 4);
                            password = J$.N(2985, 'password', password, 4);
                            authdb = J$.N(2993, 'authdb', authdb, 4);
                            connection = J$.N(3001, 'connection', connection, 4);
                            callback = J$.N(3009, 'callback', callback, 4);
                            J$.N(3017, 'command', command, 0);
                            var command = J$.X1(2425, J$.W(2417, 'command', J$.T(2409, {
                                saslStart: J$.T(2377, 1, 22, false),
                                mechanism: J$.T(2385, 'GSSAPI', 21, false),
                                payload: J$.R(2393, 'payload', payload, 0),
                                autoAuthorize: J$.T(2401, 1, 22, false)
                            }, 11, false), command, 1));
                            J$.X1(2929, J$.M(2921, J$.R(2433, 'db', db, 0), '_executeQueryCommand', 0)(J$.M(2481, J$.R(2441, 'DbCommand', DbCommand, 1), 'createDbCommand', 0)(J$.R(2449, 'db', db, 0), J$.R(2457, 'command', command, 0), J$.T(2465, {}, 11, false), J$.T(2473, '$external', 21, false)), J$.T(2497, {
                                connection: J$.R(2489, 'connection', connection, 0)
                            }, 11, false), J$.T(2913, function (err, doc) {
                                jalangiLabel2060:
                                    while (true) {
                                        try {
                                            J$.Fe(2873, arguments.callee, this, arguments);
                                            arguments = J$.N(2881, 'arguments', arguments, 4);
                                            err = J$.N(2889, 'err', err, 4);
                                            doc = J$.N(2897, 'doc', doc, 4);
                                            J$.N(2905, 'db_payload', db_payload, 0);
                                            if (J$.X1(4521, J$.C(136, J$.R(2505, 'err', err, 0))))
                                                return J$.X1(2553, J$.Rt(2545, J$.F(2537, J$.R(2513, 'callback', callback, 0), 0)(J$.R(2521, 'err', err, 0), J$.T(2529, false, 23, false))));
                                            J$.X1(2601, doc = J$.W(2593, 'doc', J$.G(2585, J$.G(2569, J$.R(2561, 'doc', doc, 0), 'documents', 0), J$.T(2577, 0, 22, false), 4), doc, 0));
                                            var db_payload = J$.X1(2633, J$.W(2625, 'db_payload', J$.G(2617, J$.R(2609, 'doc', doc, 0), 'payload', 0), db_payload, 1));
                                            J$.X1(2865, J$.M(2857, J$.R(2641, 'mongo_auth_process', mongo_auth_process, 0), 'transition', 0)(J$.G(2657, J$.R(2649, 'doc', doc, 0), 'payload', 0), J$.T(2849, function (err, payload) {
                                                jalangiLabel2059:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(2817, arguments.callee, this, arguments);
                                                            arguments = J$.N(2825, 'arguments', arguments, 4);
                                                            err = J$.N(2833, 'err', err, 4);
                                                            payload = J$.N(2841, 'payload', payload, 4);
                                                            if (J$.X1(4529, J$.C(144, J$.R(2665, 'err', err, 0))))
                                                                return J$.X1(2713, J$.Rt(2705, J$.F(2697, J$.R(2673, 'callback', callback, 0), 0)(J$.R(2681, 'err', err, 0), J$.T(2689, false, 23, false))));
                                                            J$.X1(2809, J$.F(2801, J$.R(2721, 'MongoDBGSSAPISecondStep', MongoDBGSSAPISecondStep, 1), 0)(J$.R(2729, 'mongo_auth_process', mongo_auth_process, 0), J$.R(2737, 'payload', payload, 0), J$.R(2745, 'doc', doc, 0), J$.R(2753, 'db', db, 0), J$.R(2761, 'username', username, 0), J$.R(2769, 'password', password, 0), J$.R(2777, 'authdb', authdb, 0), J$.R(2785, 'connection', connection, 0), J$.R(2793, 'callback', callback, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(4537, J$e);
                                                        } finally {
                                                            if (J$.Fr(4545))
                                                                continue jalangiLabel2059;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 2817)));
                                        } catch (J$e) {
                                            J$.Ex(4553, J$e);
                                        } finally {
                                            if (J$.Fr(4561))
                                                continue jalangiLabel2060;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 2873)));
                        } catch (J$e) {
                            J$.Ex(4569, J$e);
                        } finally {
                            if (J$.Fr(4577))
                                continue jalangiLabel2061;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2937), MongoDBGSSAPIFirstStep, 3));
            var MongoDBGSSAPISecondStep = J$.X1(3681, J$.W(3673, 'MongoDBGSSAPISecondStep', J$.T(3665, function (mongo_auth_process, payload, doc, db, username, password, authdb, connection, callback) {
                jalangiLabel2064:
                    while (true) {
                        try {
                            J$.Fe(3569, arguments.callee, this, arguments);
                            arguments = J$.N(3577, 'arguments', arguments, 4);
                            mongo_auth_process = J$.N(3585, 'mongo_auth_process', mongo_auth_process, 4);
                            payload = J$.N(3593, 'payload', payload, 4);
                            doc = J$.N(3601, 'doc', doc, 4);
                            db = J$.N(3609, 'db', db, 4);
                            username = J$.N(3617, 'username', username, 4);
                            password = J$.N(3625, 'password', password, 4);
                            authdb = J$.N(3633, 'authdb', authdb, 4);
                            connection = J$.N(3641, 'connection', connection, 4);
                            callback = J$.N(3649, 'callback', callback, 4);
                            J$.N(3657, 'command', command, 0);
                            var command = J$.X1(3097, J$.W(3089, 'command', J$.T(3081, {
                                saslContinue: J$.T(3049, 1, 22, false),
                                conversationId: J$.G(3065, J$.R(3057, 'doc', doc, 0), 'conversationId', 0),
                                payload: J$.R(3073, 'payload', payload, 0)
                            }, 11, false), command, 1));
                            J$.X1(3561, J$.M(3553, J$.R(3105, 'db', db, 0), '_executeQueryCommand', 0)(J$.M(3153, J$.R(3113, 'DbCommand', DbCommand, 1), 'createDbCommand', 0)(J$.R(3121, 'db', db, 0), J$.R(3129, 'command', command, 0), J$.T(3137, {}, 11, false), J$.T(3145, '$external', 21, false)), J$.T(3169, {
                                connection: J$.R(3161, 'connection', connection, 0)
                            }, 11, false), J$.T(3545, function (err, doc) {
                                jalangiLabel2063:
                                    while (true) {
                                        try {
                                            J$.Fe(3513, arguments.callee, this, arguments);
                                            arguments = J$.N(3521, 'arguments', arguments, 4);
                                            err = J$.N(3529, 'err', err, 4);
                                            doc = J$.N(3537, 'doc', doc, 4);
                                            if (J$.X1(4585, J$.C(152, J$.R(3177, 'err', err, 0))))
                                                return J$.X1(3225, J$.Rt(3217, J$.F(3209, J$.R(3185, 'callback', callback, 0), 0)(J$.R(3193, 'err', err, 0), J$.T(3201, false, 23, false))));
                                            J$.X1(3273, doc = J$.W(3265, 'doc', J$.G(3257, J$.G(3241, J$.R(3233, 'doc', doc, 0), 'documents', 0), J$.T(3249, 0, 22, false), 4), doc, 0));
                                            J$.X1(3505, J$.M(3497, J$.R(3281, 'mongo_auth_process', mongo_auth_process, 0), 'transition', 0)(J$.G(3297, J$.R(3289, 'doc', doc, 0), 'payload', 0), J$.T(3489, function (err, payload) {
                                                jalangiLabel2062:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(3457, arguments.callee, this, arguments);
                                                            arguments = J$.N(3465, 'arguments', arguments, 4);
                                                            err = J$.N(3473, 'err', err, 4);
                                                            payload = J$.N(3481, 'payload', payload, 4);
                                                            if (J$.X1(4593, J$.C(160, J$.R(3305, 'err', err, 0))))
                                                                return J$.X1(3353, J$.Rt(3345, J$.F(3337, J$.R(3313, 'callback', callback, 0), 0)(J$.R(3321, 'err', err, 0), J$.T(3329, false, 23, false))));
                                                            J$.X1(3449, J$.F(3441, J$.R(3361, 'MongoDBGSSAPIThirdStep', MongoDBGSSAPIThirdStep, 1), 0)(J$.R(3369, 'mongo_auth_process', mongo_auth_process, 0), J$.R(3377, 'payload', payload, 0), J$.R(3385, 'doc', doc, 0), J$.R(3393, 'db', db, 0), J$.R(3401, 'username', username, 0), J$.R(3409, 'password', password, 0), J$.R(3417, 'authdb', authdb, 0), J$.R(3425, 'connection', connection, 0), J$.R(3433, 'callback', callback, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(4601, J$e);
                                                        } finally {
                                                            if (J$.Fr(4609))
                                                                continue jalangiLabel2062;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 3457)));
                                        } catch (J$e) {
                                            J$.Ex(4617, J$e);
                                        } finally {
                                            if (J$.Fr(4625))
                                                continue jalangiLabel2063;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 3513)));
                        } catch (J$e) {
                            J$.Ex(4633, J$e);
                        } finally {
                            if (J$.Fr(4641))
                                continue jalangiLabel2064;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3569), MongoDBGSSAPISecondStep, 3));
            var MongoDBGSSAPIThirdStep = J$.X1(4209, J$.W(4201, 'MongoDBGSSAPIThirdStep', J$.T(4193, function (mongo_auth_process, payload, doc, db, username, password, authdb, connection, callback) {
                jalangiLabel2067:
                    while (true) {
                        try {
                            J$.Fe(4097, arguments.callee, this, arguments);
                            arguments = J$.N(4105, 'arguments', arguments, 4);
                            mongo_auth_process = J$.N(4113, 'mongo_auth_process', mongo_auth_process, 4);
                            payload = J$.N(4121, 'payload', payload, 4);
                            doc = J$.N(4129, 'doc', doc, 4);
                            db = J$.N(4137, 'db', db, 4);
                            username = J$.N(4145, 'username', username, 4);
                            password = J$.N(4153, 'password', password, 4);
                            authdb = J$.N(4161, 'authdb', authdb, 4);
                            connection = J$.N(4169, 'connection', connection, 4);
                            callback = J$.N(4177, 'callback', callback, 4);
                            J$.N(4185, 'command', command, 0);
                            var command = J$.X1(3737, J$.W(3729, 'command', J$.T(3721, {
                                saslContinue: J$.T(3689, 1, 22, false),
                                conversationId: J$.G(3705, J$.R(3697, 'doc', doc, 0), 'conversationId', 0),
                                payload: J$.R(3713, 'payload', payload, 0)
                            }, 11, false), command, 1));
                            J$.X1(4089, J$.M(4081, J$.R(3745, 'db', db, 0), '_executeQueryCommand', 0)(J$.M(3793, J$.R(3753, 'DbCommand', DbCommand, 1), 'createDbCommand', 0)(J$.R(3761, 'db', db, 0), J$.R(3769, 'command', command, 0), J$.T(3777, {}, 11, false), J$.T(3785, '$external', 21, false)), J$.T(3809, {
                                connection: J$.R(3801, 'connection', connection, 0)
                            }, 11, false), J$.T(4073, function (err, doc) {
                                jalangiLabel2066:
                                    while (true) {
                                        try {
                                            J$.Fe(4041, arguments.callee, this, arguments);
                                            arguments = J$.N(4049, 'arguments', arguments, 4);
                                            err = J$.N(4057, 'err', err, 4);
                                            doc = J$.N(4065, 'doc', doc, 4);
                                            if (J$.X1(4649, J$.C(168, J$.R(3817, 'err', err, 0))))
                                                return J$.X1(3865, J$.Rt(3857, J$.F(3849, J$.R(3825, 'callback', callback, 0), 0)(J$.R(3833, 'err', err, 0), J$.T(3841, false, 23, false))));
                                            J$.X1(4033, J$.M(4025, J$.R(3873, 'mongo_auth_process', mongo_auth_process, 0), 'transition', 0)(J$.T(3881, null, 25, false), J$.T(4017, function (err, payload) {
                                                jalangiLabel2065:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(3985, arguments.callee, this, arguments);
                                                            arguments = J$.N(3993, 'arguments', arguments, 4);
                                                            err = J$.N(4001, 'err', err, 4);
                                                            payload = J$.N(4009, 'payload', payload, 4);
                                                            if (J$.X1(4657, J$.C(176, J$.R(3889, 'err', err, 0))))
                                                                return J$.X1(3937, J$.Rt(3929, J$.F(3921, J$.R(3897, 'callback', callback, 0), 0)(J$.R(3905, 'err', err, 0), J$.T(3913, false, 23, false))));
                                                            J$.X1(3977, J$.F(3969, J$.R(3945, 'callback', callback, 0), 0)(J$.T(3953, null, 25, false), J$.T(3961, true, 23, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(4665, J$e);
                                                        } finally {
                                                            if (J$.Fr(4673))
                                                                continue jalangiLabel2065;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 3985)));
                                        } catch (J$e) {
                                            J$.Ex(4681, J$e);
                                        } finally {
                                            if (J$.Fr(4689))
                                                continue jalangiLabel2066;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 4041)));
                        } catch (J$e) {
                            J$.Ex(4697, J$e);
                        } finally {
                            if (J$.Fr(4705))
                                continue jalangiLabel2067;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4097), MongoDBGSSAPIThirdStep, 3));
            J$.X1(4241, J$.P(4233, J$.R(4217, 'exports', exports, 2), 'authenticate', J$.R(4225, 'authenticate', authenticate, 1), 0));
        } catch (J$e) {
            J$.Ex(4713, J$e);
        } finally {
            if (J$.Sr(4721)) {
                J$.L();
                continue jalangiLabel2068;
            } else {
                J$.L();
                break jalangiLabel2068;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
