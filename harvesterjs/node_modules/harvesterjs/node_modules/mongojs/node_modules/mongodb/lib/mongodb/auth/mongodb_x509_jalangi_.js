J$.iids = {"8":[9,15,9,28],"9":[1,20,1,27],"10":[10,9,10,38],"16":[10,9,10,38],"17":[1,28,1,32],"18":[21,23,21,52],"24":[21,23,21,52],"25":[1,20,1,33],"26":[22,21,22,44],"32":[28,24,28,93],"33":[1,20,1,33],"34":[22,46,22,49],"40":[28,24,28,93],"41":[1,20,1,33],"48":[26,17,26,20],"49":[2,26,2,38],"50":[22,46,22,49],"56":[34,17,34,74],"57":[2,26,2,45],"58":[25,35,25,58],"64":[37,21,37,60],"65":[2,26,2,45],"66":[28,24,28,55],"72":[37,21,37,60],"73":[2,26,2,45],"74":[28,59,28,93],"80":[34,17,34,74],"81":[3,17,3,24],"82":[32,44,32,72],"88":[22,21,22,44],"89":[3,25,3,49],"90":[34,17,34,41],"97":[3,17,3,50],"98":[34,45,34,60],"105":[3,17,3,60],"106":[34,45,34,74],"113":[3,70,3,77],"114":[37,21,37,40],"121":[3,78,3,88],"129":[3,70,3,89],"137":[3,100,3,107],"145":[3,108,3,114],"153":[3,100,3,115],"161":[3,100,3,122],"169":[3,133,3,140],"177":[3,141,3,147],"185":[3,133,3,148],"193":[3,133,3,155],"201":[3,17,3,60],"209":[3,17,3,60],"217":[3,70,3,89],"225":[3,70,3,89],"233":[3,100,3,122],"241":[3,100,3,122],"249":[3,133,3,155],"257":[3,133,3,155],"265":[5,31,5,32],"273":[5,31,5,32],"281":[5,31,5,32],"289":[6,23,6,27],"297":[6,23,6,27],"305":[6,23,6,27],"313":[7,36,7,37],"321":[7,36,7,37],"329":[7,36,7,37],"337":[8,28,8,33],"345":[8,28,8,33],"353":[8,28,8,33],"361":[9,15,9,22],"369":[9,26,9,28],"377":[9,15,9,28],"385":[9,5,9,29],"393":[10,9,10,16],"401":[10,17,10,29],"409":[10,9,10,30],"417":[10,34,10,38],"425":[11,31,11,32],"433":[11,31,11,32],"441":[11,9,11,33],"449":[13,31,13,33],"457":[13,31,13,46],"465":[13,31,13,66],"467":[13,31,13,64],"473":[13,31,13,73],"481":[13,31,13,73],"489":[13,9,13,74],"497":[14,9,14,16],"505":[14,17,14,24],"513":[14,28,14,32],"521":[14,9,14,32],"529":[14,9,14,33],"537":[17,23,17,24],"545":[18,20,18,34],"553":[19,15,19,23],"561":[16,19,20,6],"569":[16,19,20,6],"577":[16,19,20,6],"585":[21,23,21,30],"593":[21,31,21,43],"601":[21,23,21,44],"609":[21,48,21,52],"617":[21,56,21,63],"625":[21,64,21,76],"633":[21,56,21,77],"641":[21,55,21,78],"649":[21,81,21,83],"657":[21,81,21,96],"665":[21,81,21,116],"667":[21,81,21,114],"673":[21,23,21,116],"681":[21,23,21,116],"689":[22,18,22,19],"697":[22,18,22,19],"705":[22,18,22,19],"713":[22,21,22,22],"721":[22,25,22,44],"737":[22,46,22,47],"745":[22,46,22,49],"761":[23,26,23,37],"769":[23,38,23,39],"777":[23,26,23,40],"785":[23,26,23,40],"793":[23,26,23,40],"801":[24,9,24,11],"809":[24,33,24,42],"817":[24,59,24,61],"825":[24,63,24,70],"833":[24,72,24,74],"841":[24,76,24,87],"849":[24,33,24,88],"851":[24,33,24,58],"857":[24,104,24,114],"865":[24,90,24,116],"873":[25,35,25,54],"881":[25,57,25,58],"889":[25,35,25,58],"897":[25,13,25,59],"905":[26,17,26,20],"913":[27,31,27,34],"921":[27,31,27,34],"929":[27,17,27,35],"937":[28,24,28,30],"945":[28,24,28,40],"953":[28,41,28,42],"961":[28,24,28,43],"969":[28,24,28,47],"977":[28,51,28,55],"985":[28,59,28,65],"993":[28,59,28,75],"1001":[28,76,28,77],"1009":[28,59,28,78],"1017":[28,59,28,85],"1025":[28,89,28,93],"1033":[29,31,29,36],"1041":[29,45,29,51],"1049":[29,45,29,61],"1057":[29,62,29,63],"1065":[29,45,29,64],"1073":[29,31,29,65],"1075":[29,31,29,44],"1081":[29,31,29,65],"1089":[29,17,29,66],"1097":[31,36,31,40],"1105":[31,36,31,40],"1113":[31,17,31,41],"1121":[32,44,32,68],"1129":[32,71,32,72],"1137":[32,44,32,72],"1145":[32,17,32,73],"1153":[34,17,34,36],"1161":[34,40,34,41],"1169":[34,52,34,60],"1177":[34,64,34,74],"1185":[35,40,35,48],"1193":[35,40,35,48],"1201":[35,40,35,48],"1209":[36,28,36,32],"1217":[36,28,36,32],"1225":[36,17,36,33],"1233":[37,21,37,32],"1241":[37,36,37,40],"1249":[37,44,37,60],"1257":[38,21,38,23],"1265":[38,21,38,36],"1273":[38,21,38,41],"1281":[38,46,38,60],"1289":[38,62,38,64],"1297":[38,62,38,77],"1305":[38,79,38,87],"1313":[38,89,38,97],"1321":[38,21,38,98],"1323":[38,21,38,45],"1329":[38,21,38,99],"1337":[39,21,39,37],"1345":[39,38,39,49],"1353":[39,51,39,55],"1361":[39,21,39,56],"1369":[39,21,39,57],"1377":[41,21,41,37],"1385":[41,38,41,49],"1393":[41,51,41,56],"1401":[41,21,41,57],"1409":[41,21,41,58],"1417":[24,118,44,10],"1425":[24,118,44,10],"1433":[24,118,44,10],"1441":[24,118,44,10],"1449":[24,118,44,10],"1457":[24,118,44,10],"1465":[24,9,44,11],"1467":[24,9,24,32],"1473":[24,9,44,12],"1481":[4,20,46,2],"1489":[4,20,46,2],"1497":[4,20,46,2],"1505":[4,20,46,2],"1513":[4,20,46,2],"1521":[4,20,46,2],"1529":[4,20,46,2],"1537":[4,20,46,2],"1545":[4,20,46,2],"1553":[4,20,46,2],"1561":[4,20,46,2],"1569":[4,20,46,2],"1577":[4,20,46,2],"1585":[4,20,46,2],"1593":[4,20,46,2],"1601":[4,20,46,2],"1609":[4,20,46,2],"1617":[4,20,46,2],"1625":[4,20,46,2],"1633":[47,1,47,8],"1641":[47,24,47,36],"1649":[47,1,47,36],"1657":[47,1,47,37],"1665":[1,1,47,37],"1673":[1,1,47,37],"1681":[1,1,47,37],"1689":[1,1,47,37],"1697":[1,1,47,37],"1705":[1,1,47,37],"1713":[1,1,47,37],"1721":[1,1,47,37],"1729":[10,5,15,6],"1737":[21,23,21,116],"1745":[28,20,33,14],"1753":[26,13,33,14],"1761":[37,17,42,18],"1769":[34,13,43,14],"1777":[24,118,44,10],"1785":[24,118,44,10],"1793":[22,5,45,6],"1801":[22,5,45,6],"1809":[4,20,46,2],"1817":[4,20,46,2],"1825":[1,1,47,37],"1833":[1,1,47,37],"nBranches":22,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/auth/mongodb_x509.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/auth/mongodb_x509_jalangi_.js","code":"var DbCommand = require('../commands/db_command').DbCommand\n  , utils = require('../utils')\n  , Binary = require('bson').Binary\n  , format = require('util').format;\n\nvar authenticate = function(db, username, password, options, callback, t) {\n  var numberOfConnections = 0;\n  var errorObject = null;\n  var numberOfValidConnections = 0;\n  var credentialsValid = false;\n  options = options || {};\n  \n  if(options['connection'] != null) {\n    //if a connection was explicitly passed on options, then we have only one...\n    numberOfConnections = 1;\n  } else {\n    // Get the amount of connections in the pool to ensure we have authenticated all comments\n    numberOfConnections = db.serverConfig.allRawConnections().length;\n    options['onAll'] = true;\n  }\n\n  // Let's start the sasl process\n  var command = {\n      authenticate: 1\n    , mechanism: 'MONGODB-X509'\n    , user: username\n  };\n\n  // Grab all the connections\n  var connections = options['connection'] != null ? [options['connection']] : db.serverConfig.allRawConnections();\n\n  // Authenticate all connections\n  for(var i = 0; i < numberOfConnections; i++) {\n    var connection = connections[i];\n    // Execute first sasl step\n    db._executeQueryCommand(DbCommand.createDbCommand(db, command, {}, '$external'), {connection:connection}, function(err, result) {\n      // Count down\n      numberOfConnections = numberOfConnections - 1;\n\n      // Ensure we save any error\n      if(err) {\n        errorObject = err;\n      } else if(result.documents[0].err != null || result.documents[0].errmsg != null){\n        errorObject = utils.toError(result.documents[0]);\n      } else {\n        credentialsValid = true;\n        numberOfValidConnections = numberOfValidConnections + 1;        \n      }\n\n      // Work around the case where the number of connections are 0\n      if(numberOfConnections <= 0 && typeof callback == 'function') {\n        var internalCallback = callback;\n        callback = null;\n\n        if(errorObject == null && credentialsValid) {\n          // We authenticated correctly save the credentials\n          db.serverConfig.auth.add('MONGODB-X509', db.databaseName, username, password);\n          // Return callback\n          internalCallback(errorObject, true);          \n        } else {\n          internalCallback(errorObject, false);\n        }\n      }\n    });\n  }\n}\n\nexports.authenticate = authenticate;"};
jalangiLabel2112:
    while (true) {
        try {
            J$.Se(1665, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/auth/mongodb_x509_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/auth/mongodb_x509.js');
            J$.N(1673, '__secret__S$', __secret__S$, 0);
            J$.N(1681, '__secret__traits__', __secret__traits__, 0);
            J$.N(1689, 'DbCommand', DbCommand, 0);
            J$.N(1697, 'utils', utils, 0);
            J$.N(1705, 'Binary', Binary, 0);
            J$.N(1713, 'format', format, 0);
            J$.N(1721, 'authenticate', authenticate, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var DbCommand = J$.X1(209, J$.W(201, 'DbCommand', J$.G(105, J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, '../commands/db_command', 21, false)), 'DbCommand', 0), DbCommand, 3)), utils = J$.X1(225, J$.W(217, 'utils', J$.F(129, J$.R(113, 'require', require, 2), 0)(J$.T(121, '../utils', 21, false)), utils, 3)), Binary = J$.X1(241, J$.W(233, 'Binary', J$.G(161, J$.F(153, J$.R(137, 'require', require, 2), 0)(J$.T(145, 'bson', 21, false)), 'Binary', 0), Binary, 3)), format = J$.X1(257, J$.W(249, 'format', J$.G(193, J$.F(185, J$.R(169, 'require', require, 2), 0)(J$.T(177, 'util', 21, false)), 'format', 0), format, 3));
            var authenticate = J$.X1(1625, J$.W(1617, 'authenticate', J$.T(1609, function (db, username, password, options, callback, t) {
                jalangiLabel2111:
                    while (true) {
                        try {
                            J$.Fe(1481, arguments.callee, this, arguments);
                            arguments = J$.N(1489, 'arguments', arguments, 4);
                            db = J$.N(1497, 'db', db, 4);
                            username = J$.N(1505, 'username', username, 4);
                            password = J$.N(1513, 'password', password, 4);
                            options = J$.N(1521, 'options', options, 4);
                            callback = J$.N(1529, 'callback', callback, 4);
                            t = J$.N(1537, 't', t, 4);
                            J$.N(1545, 'numberOfConnections', numberOfConnections, 0);
                            J$.N(1553, 'errorObject', errorObject, 0);
                            J$.N(1561, 'numberOfValidConnections', numberOfValidConnections, 0);
                            J$.N(1569, 'credentialsValid', credentialsValid, 0);
                            J$.N(1577, 'command', command, 0);
                            J$.N(1585, 'connections', connections, 0);
                            J$.N(1593, 'i', i, 0);
                            J$.N(1601, 'connection', connection, 0);
                            var numberOfConnections = J$.X1(281, J$.W(273, 'numberOfConnections', J$.T(265, 0, 22, false), numberOfConnections, 1));
                            var errorObject = J$.X1(305, J$.W(297, 'errorObject', J$.T(289, null, 25, false), errorObject, 1));
                            var numberOfValidConnections = J$.X1(329, J$.W(321, 'numberOfValidConnections', J$.T(313, 0, 22, false), numberOfValidConnections, 1));
                            var credentialsValid = J$.X1(353, J$.W(345, 'credentialsValid', J$.T(337, false, 23, false), credentialsValid, 1));
                            J$.X1(385, options = J$.W(377, 'options', J$.C(8, J$.R(361, 'options', options, 0)) ? J$._() : J$.T(369, {}, 11, false), options, 0));
                            if (J$.X1(1729, J$.C(16, J$.B(10, '!=', J$.G(409, J$.R(393, 'options', options, 0), J$.T(401, 'connection', 21, false), 4), J$.T(417, null, 25, false), 0)))) {
                                J$.X1(441, numberOfConnections = J$.W(433, 'numberOfConnections', J$.T(425, 1, 22, false), numberOfConnections, 0));
                            } else {
                                J$.X1(489, numberOfConnections = J$.W(481, 'numberOfConnections', J$.G(473, J$.M(465, J$.G(457, J$.R(449, 'db', db, 0), 'serverConfig', 0), 'allRawConnections', 0)(), 'length', 0), numberOfConnections, 0));
                                J$.X1(529, J$.P(521, J$.R(497, 'options', options, 0), J$.T(505, 'onAll', 21, false), J$.T(513, true, 23, false), 2));
                            }
                            var command = J$.X1(577, J$.W(569, 'command', J$.T(561, {
                                authenticate: J$.T(537, 1, 22, false),
                                mechanism: J$.T(545, 'MONGODB-X509', 21, false),
                                user: J$.R(553, 'username', username, 0)
                            }, 11, false), command, 1));
                            var connections = J$.X1(681, J$.W(673, 'connections', J$.X1(1737, J$.C(24, J$.B(18, '!=', J$.G(601, J$.R(585, 'options', options, 0), J$.T(593, 'connection', 21, false), 4), J$.T(609, null, 25, false), 0))) ? J$.T(641, [J$.G(633, J$.R(617, 'options', options, 0), J$.T(625, 'connection', 21, false), 4)], 10, false) : J$.M(665, J$.G(657, J$.R(649, 'db', db, 0), 'serverConfig', 0), 'allRawConnections', 0)(), connections, 1));
                            for (var i = J$.X1(705, J$.W(697, 'i', J$.T(689, 0, 22, false), i, 1)); J$.X1(1793, J$.C(88, J$.B(26, '<', J$.R(713, 'i', i, 0), J$.R(721, 'numberOfConnections', numberOfConnections, 0), 0))); J$.X1(1801, J$.B(50, '-', i = J$.W(745, 'i', J$.B(42, '+', J$.U(34, '+', J$.R(737, 'i', i, 0)), J$.T(729, 1, 22, false), 0), i, 0), J$.T(753, 1, 22, false), 0))) {
                                var connection = J$.X1(793, J$.W(785, 'connection', J$.G(777, J$.R(761, 'connections', connections, 0), J$.R(769, 'i', i, 0), 4), connection, 1));
                                J$.X1(1473, J$.M(1465, J$.R(801, 'db', db, 0), '_executeQueryCommand', 0)(J$.M(849, J$.R(809, 'DbCommand', DbCommand, 1), 'createDbCommand', 0)(J$.R(817, 'db', db, 0), J$.R(825, 'command', command, 0), J$.T(833, {}, 11, false), J$.T(841, '$external', 21, false)), J$.T(865, {
                                    connection: J$.R(857, 'connection', connection, 0)
                                }, 11, false), J$.T(1457, function (err, result) {
                                    jalangiLabel2110:
                                        while (true) {
                                            try {
                                                J$.Fe(1417, arguments.callee, this, arguments);
                                                arguments = J$.N(1425, 'arguments', arguments, 4);
                                                err = J$.N(1433, 'err', err, 4);
                                                result = J$.N(1441, 'result', result, 4);
                                                J$.N(1449, 'internalCallback', internalCallback, 0);
                                                J$.X1(897, numberOfConnections = J$.W(889, 'numberOfConnections', J$.B(58, '-', J$.R(873, 'numberOfConnections', numberOfConnections, 0), J$.T(881, 1, 22, false), 0), numberOfConnections, 0));
                                                if (J$.X1(1753, J$.C(48, J$.R(905, 'err', err, 0)))) {
                                                    J$.X1(929, errorObject = J$.W(921, 'errorObject', J$.R(913, 'err', err, 0), errorObject, 0));
                                                } else if (J$.X1(1745, J$.C(40, J$.C(32, J$.B(66, '!=', J$.G(969, J$.G(961, J$.G(945, J$.R(937, 'result', result, 0), 'documents', 0), J$.T(953, 0, 22, false), 4), 'err', 0), J$.T(977, null, 25, false), 0)) ? J$._() : J$.B(74, '!=', J$.G(1017, J$.G(1009, J$.G(993, J$.R(985, 'result', result, 0), 'documents', 0), J$.T(1001, 0, 22, false), 4), 'errmsg', 0), J$.T(1025, null, 25, false), 0)))) {
                                                    J$.X1(1089, errorObject = J$.W(1081, 'errorObject', J$.M(1073, J$.R(1033, 'utils', utils, 1), 'toError', 0)(J$.G(1065, J$.G(1049, J$.R(1041, 'result', result, 0), 'documents', 0), J$.T(1057, 0, 22, false), 4)), errorObject, 0));
                                                } else {
                                                    J$.X1(1113, credentialsValid = J$.W(1105, 'credentialsValid', J$.T(1097, true, 23, false), credentialsValid, 0));
                                                    J$.X1(1145, numberOfValidConnections = J$.W(1137, 'numberOfValidConnections', J$.B(82, '+', J$.R(1121, 'numberOfValidConnections', numberOfValidConnections, 0), J$.T(1129, 1, 22, false), 0), numberOfValidConnections, 0));
                                                }
                                                if (J$.X1(1769, J$.C(80, J$.C(56, J$.B(90, '<=', J$.R(1153, 'numberOfConnections', numberOfConnections, 0), J$.T(1161, 0, 22, false), 0)) ? J$.B(106, '==', J$.U(98, 'typeof', J$.R(1169, 'callback', callback, 0)), J$.T(1177, 'function', 21, false), 0) : J$._()))) {
                                                    var internalCallback = J$.X1(1201, J$.W(1193, 'internalCallback', J$.R(1185, 'callback', callback, 0), internalCallback, 1));
                                                    J$.X1(1225, callback = J$.W(1217, 'callback', J$.T(1209, null, 25, false), callback, 0));
                                                    if (J$.X1(1761, J$.C(72, J$.C(64, J$.B(114, '==', J$.R(1233, 'errorObject', errorObject, 0), J$.T(1241, null, 25, false), 0)) ? J$.R(1249, 'credentialsValid', credentialsValid, 0) : J$._()))) {
                                                        J$.X1(1329, J$.M(1321, J$.G(1273, J$.G(1265, J$.R(1257, 'db', db, 0), 'serverConfig', 0), 'auth', 0), 'add', 0)(J$.T(1281, 'MONGODB-X509', 21, false), J$.G(1297, J$.R(1289, 'db', db, 0), 'databaseName', 0), J$.R(1305, 'username', username, 0), J$.R(1313, 'password', password, 0)));
                                                        J$.X1(1369, J$.F(1361, J$.R(1337, 'internalCallback', internalCallback, 0), 0)(J$.R(1345, 'errorObject', errorObject, 0), J$.T(1353, true, 23, false)));
                                                    } else {
                                                        J$.X1(1409, J$.F(1401, J$.R(1377, 'internalCallback', internalCallback, 0), 0)(J$.R(1385, 'errorObject', errorObject, 0), J$.T(1393, false, 23, false)));
                                                    }
                                                }
                                            } catch (J$e) {
                                                J$.Ex(1777, J$e);
                                            } finally {
                                                if (J$.Fr(1785))
                                                    continue jalangiLabel2110;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 1417)));
                            }
                        } catch (J$e) {
                            J$.Ex(1809, J$e);
                        } finally {
                            if (J$.Fr(1817))
                                continue jalangiLabel2111;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1481), authenticate, 3));
            J$.X1(1657, J$.P(1649, J$.R(1633, 'exports', exports, 2), 'authenticate', J$.R(1641, 'authenticate', authenticate, 1), 0));
        } catch (J$e) {
            J$.Ex(1825, J$e);
        } finally {
            if (J$.Sr(1833)) {
                J$.L();
                continue jalangiLabel2112;
            } else {
                J$.L();
                break jalangiLabel2112;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
