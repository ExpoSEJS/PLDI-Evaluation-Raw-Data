J$.iids = {"8":[6,16,6,98],"9":[1,20,1,27],"10":[4,9,4,30],"16":[6,16,6,98],"17":[1,28,1,32],"18":[6,16,6,36],"24":[4,9,4,30],"25":[1,20,1,33],"26":[6,16,6,49],"32":[13,16,13,50],"33":[1,20,1,33],"34":[6,53,6,98],"40":[11,9,11,30],"41":[1,20,1,33],"42":[7,15,7,39],"48":[20,16,20,49],"49":[2,26,2,38],"50":[7,15,7,100],"56":[18,9,18,30],"57":[2,26,2,45],"58":[7,15,7,116],"65":[2,26,2,45],"66":[7,15,7,132],"73":[2,26,2,45],"74":[7,135,7,155],"81":[3,1,3,8],"82":[7,15,7,155],"89":[4,9,4,15],"90":[7,15,7,161],"97":[4,16,4,21],"98":[11,9,11,30],"105":[4,9,4,22],"106":[13,16,13,36],"113":[4,26,4,30],"114":[13,16,13,50],"121":[5,9,5,15],"122":[14,15,14,39],"129":[5,16,5,21],"130":[14,15,14,92],"137":[5,25,5,37],"138":[14,15,14,108],"145":[5,9,5,37],"146":[14,15,14,124],"153":[5,9,5,38],"154":[14,127,14,147],"161":[6,23,6,29],"162":[14,15,14,147],"169":[6,30,6,35],"170":[14,15,14,153],"177":[6,23,6,36],"178":[18,9,18,30],"185":[6,41,6,49],"186":[20,16,20,36],"193":[6,53,6,59],"194":[20,16,20,49],"201":[6,60,6,65],"202":[21,15,21,39],"209":[6,53,6,66],"210":[21,15,21,91],"217":[6,71,6,79],"218":[21,15,21,107],"225":[6,80,6,86],"226":[21,15,21,123],"233":[6,87,6,92],"234":[21,126,21,146],"241":[6,80,6,93],"242":[21,15,21,146],"249":[6,95,6,97],"250":[21,15,21,152],"257":[6,71,6,98],"265":[7,15,7,31],"273":[7,34,7,39],"281":[7,42,7,100],"289":[7,103,7,109],"297":[7,110,7,115],"305":[7,103,7,116],"313":[7,119,7,132],"321":[7,142,7,148],"329":[7,149,7,154],"337":[7,142,7,155],"345":[7,158,7,161],"353":[7,15,7,161],"361":[7,9,7,162],"369":[3,31,9,2],"377":[3,31,9,2],"385":[3,31,9,2],"393":[3,31,9,2],"401":[3,31,9,2],"409":[3,31,9,2],"417":[3,1,9,2],"425":[3,1,9,3],"433":[10,1,10,8],"441":[11,9,11,15],"449":[11,16,11,21],"457":[11,9,11,22],"465":[11,26,11,30],"473":[12,9,12,15],"481":[12,16,12,21],"489":[12,25,12,37],"497":[12,9,12,37],"505":[12,9,12,38],"513":[13,23,13,29],"521":[13,30,13,35],"529":[13,23,13,36],"537":[13,41,13,50],"545":[14,15,14,31],"553":[14,34,14,39],"561":[14,42,14,92],"569":[14,95,14,101],"577":[14,102,14,107],"585":[14,95,14,108],"593":[14,111,14,124],"601":[14,134,14,140],"609":[14,141,14,146],"617":[14,134,14,147],"625":[14,150,14,153],"633":[14,15,14,153],"641":[14,9,14,154],"649":[10,31,16,2],"657":[10,31,16,2],"665":[10,31,16,2],"673":[10,31,16,2],"681":[10,31,16,2],"689":[10,31,16,2],"697":[10,1,16,2],"705":[10,1,16,3],"713":[17,1,17,8],"721":[18,9,18,15],"729":[18,16,18,21],"737":[18,9,18,22],"745":[18,26,18,30],"753":[19,9,19,15],"761":[19,16,19,21],"769":[19,25,19,37],"777":[19,9,19,37],"785":[19,9,19,38],"793":[20,23,20,29],"801":[20,30,20,35],"809":[20,23,20,36],"817":[20,41,20,49],"825":[21,15,21,31],"833":[21,34,21,39],"841":[21,42,21,91],"849":[21,94,21,100],"857":[21,101,21,106],"865":[21,94,21,107],"873":[21,110,21,123],"881":[21,133,21,139],"889":[21,140,21,145],"897":[21,133,21,146],"905":[21,149,21,152],"913":[21,15,21,152],"921":[21,9,21,153],"929":[17,30,23,2],"937":[17,30,23,2],"945":[17,30,23,2],"953":[17,30,23,2],"961":[17,30,23,2],"969":[17,30,23,2],"977":[17,1,23,2],"985":[17,1,23,3],"993":[1,1,23,3],"1001":[1,1,23,3],"1009":[1,1,23,3],"1017":[6,12,8,6],"1025":[4,5,8,6],"1033":[3,31,9,2],"1041":[3,31,9,2],"1049":[13,12,15,6],"1057":[11,5,15,6],"1065":[10,31,16,2],"1073":[10,31,16,2],"1081":[20,12,22,6],"1089":[18,5,22,6],"1097":[17,30,23,2],"1105":[17,30,23,2],"1113":[1,1,23,3],"1121":[1,1,23,3],"nBranches":14,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/connection/connection_utils.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/connection/connection_utils_jalangi_.js","code":"exports.setIntegerParameter = function(object, field, defaultValue) {\n  if(object[field] == null) {\n    object[field] = defaultValue;\n  } else if(typeof object[field] !== \"number\" && object[field] !== parseInt(object[field], 10)) {\n    throw \"object field [\" + field + \"] must be a numeric integer value, attempted to set to [\" + object[field] + \"] type of [\" + typeof object[field] + \"]\";\n  }\n}\n\nexports.setBooleanParameter = function(object, field, defaultValue) {\n  if(object[field] == null) {\n    object[field] = defaultValue;\n  } else if(typeof object[field] !== \"boolean\") {\n    throw \"object field [\" + field + \"] must be a boolean value, attempted to set to [\" + object[field] + \"] type of [\" + typeof object[field] + \"]\";\n  }\n}\n\nexports.setStringParameter = function(object, field, defaultValue) {\n  if(object[field] == null) {\n    object[field] = defaultValue;\n  } else if(typeof object[field] !== \"string\") {\n    throw \"object field [\" + field + \"] must be a string value, attempted to set to [\" + object[field] + \"] type of [\" + typeof object[field] + \"]\";\n  }\n}"};
jalangiLabel1921:
    while (true) {
        try {
            J$.Se(993, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/connection/connection_utils_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/connection/connection_utils.js');
            J$.N(1001, '__secret__S$', __secret__S$, 0);
            J$.N(1009, '__secret__traits__', __secret__traits__, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(425, J$.P(417, J$.R(81, 'exports', exports, 2), 'setIntegerParameter', J$.T(409, function (object, field, defaultValue) {
                jalangiLabel1918:
                    while (true) {
                        try {
                            J$.Fe(369, arguments.callee, this, arguments);
                            arguments = J$.N(377, 'arguments', arguments, 4);
                            object = J$.N(385, 'object', object, 4);
                            field = J$.N(393, 'field', field, 4);
                            defaultValue = J$.N(401, 'defaultValue', defaultValue, 4);
                            if (J$.X1(1025, J$.C(24, J$.B(10, '==', J$.G(105, J$.R(89, 'object', object, 0), J$.R(97, 'field', field, 0), 4), J$.T(113, null, 25, false), 0)))) {
                                J$.X1(153, J$.P(145, J$.R(121, 'object', object, 0), J$.R(129, 'field', field, 0), J$.R(137, 'defaultValue', defaultValue, 0), 2));
                            } else if (J$.X1(1017, J$.C(16, J$.C(8, J$.B(26, '!==', J$.U(18, 'typeof', J$.G(177, J$.R(161, 'object', object, 0), J$.R(169, 'field', field, 0), 4)), J$.T(185, 'number', 21, false), 0)) ? J$.B(34, '!==', J$.G(209, J$.R(193, 'object', object, 0), J$.R(201, 'field', field, 0), 4), J$.F(257, J$.R(217, 'parseInt', parseInt, 2), 0)(J$.G(241, J$.R(225, 'object', object, 0), J$.R(233, 'field', field, 0), 4), J$.T(249, 10, 22, false)), 0) : J$._()))) {
                                throw J$.X1(361, J$.Th(353, J$.B(90, '+', J$.B(82, '+', J$.B(66, '+', J$.B(58, '+', J$.B(50, '+', J$.B(42, '+', J$.T(265, 'object field [', 21, false), J$.R(273, 'field', field, 0), 0), J$.T(281, '] must be a numeric integer value, attempted to set to [', 21, false), 0), J$.G(305, J$.R(289, 'object', object, 0), J$.R(297, 'field', field, 0), 4), 0), J$.T(313, '] type of [', 21, false), 0), J$.U(74, 'typeof', J$.G(337, J$.R(321, 'object', object, 0), J$.R(329, 'field', field, 0), 4)), 0), J$.T(345, ']', 21, false), 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(1033, J$e);
                        } finally {
                            if (J$.Fr(1041))
                                continue jalangiLabel1918;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 369), 0));
            J$.X1(705, J$.P(697, J$.R(433, 'exports', exports, 2), 'setBooleanParameter', J$.T(689, function (object, field, defaultValue) {
                jalangiLabel1919:
                    while (true) {
                        try {
                            J$.Fe(649, arguments.callee, this, arguments);
                            arguments = J$.N(657, 'arguments', arguments, 4);
                            object = J$.N(665, 'object', object, 4);
                            field = J$.N(673, 'field', field, 4);
                            defaultValue = J$.N(681, 'defaultValue', defaultValue, 4);
                            if (J$.X1(1057, J$.C(40, J$.B(98, '==', J$.G(457, J$.R(441, 'object', object, 0), J$.R(449, 'field', field, 0), 4), J$.T(465, null, 25, false), 0)))) {
                                J$.X1(505, J$.P(497, J$.R(473, 'object', object, 0), J$.R(481, 'field', field, 0), J$.R(489, 'defaultValue', defaultValue, 0), 2));
                            } else if (J$.X1(1049, J$.C(32, J$.B(114, '!==', J$.U(106, 'typeof', J$.G(529, J$.R(513, 'object', object, 0), J$.R(521, 'field', field, 0), 4)), J$.T(537, 'boolean', 21, false), 0)))) {
                                throw J$.X1(641, J$.Th(633, J$.B(170, '+', J$.B(162, '+', J$.B(146, '+', J$.B(138, '+', J$.B(130, '+', J$.B(122, '+', J$.T(545, 'object field [', 21, false), J$.R(553, 'field', field, 0), 0), J$.T(561, '] must be a boolean value, attempted to set to [', 21, false), 0), J$.G(585, J$.R(569, 'object', object, 0), J$.R(577, 'field', field, 0), 4), 0), J$.T(593, '] type of [', 21, false), 0), J$.U(154, 'typeof', J$.G(617, J$.R(601, 'object', object, 0), J$.R(609, 'field', field, 0), 4)), 0), J$.T(625, ']', 21, false), 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(1065, J$e);
                        } finally {
                            if (J$.Fr(1073))
                                continue jalangiLabel1919;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 649), 0));
            J$.X1(985, J$.P(977, J$.R(713, 'exports', exports, 2), 'setStringParameter', J$.T(969, function (object, field, defaultValue) {
                jalangiLabel1920:
                    while (true) {
                        try {
                            J$.Fe(929, arguments.callee, this, arguments);
                            arguments = J$.N(937, 'arguments', arguments, 4);
                            object = J$.N(945, 'object', object, 4);
                            field = J$.N(953, 'field', field, 4);
                            defaultValue = J$.N(961, 'defaultValue', defaultValue, 4);
                            if (J$.X1(1089, J$.C(56, J$.B(178, '==', J$.G(737, J$.R(721, 'object', object, 0), J$.R(729, 'field', field, 0), 4), J$.T(745, null, 25, false), 0)))) {
                                J$.X1(785, J$.P(777, J$.R(753, 'object', object, 0), J$.R(761, 'field', field, 0), J$.R(769, 'defaultValue', defaultValue, 0), 2));
                            } else if (J$.X1(1081, J$.C(48, J$.B(194, '!==', J$.U(186, 'typeof', J$.G(809, J$.R(793, 'object', object, 0), J$.R(801, 'field', field, 0), 4)), J$.T(817, 'string', 21, false), 0)))) {
                                throw J$.X1(921, J$.Th(913, J$.B(250, '+', J$.B(242, '+', J$.B(226, '+', J$.B(218, '+', J$.B(210, '+', J$.B(202, '+', J$.T(825, 'object field [', 21, false), J$.R(833, 'field', field, 0), 0), J$.T(841, '] must be a string value, attempted to set to [', 21, false), 0), J$.G(865, J$.R(849, 'object', object, 0), J$.R(857, 'field', field, 0), 4), 0), J$.T(873, '] type of [', 21, false), 0), J$.U(234, 'typeof', J$.G(897, J$.R(881, 'object', object, 0), J$.R(889, 'field', field, 0), 4)), 0), J$.T(905, ']', 21, false), 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(1097, J$e);
                        } finally {
                            if (J$.Fr(1105))
                                continue jalangiLabel1920;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 929), 0));
        } catch (J$e) {
            J$.Ex(1113, J$e);
        } finally {
            if (J$.Sr(1121)) {
                J$.L();
                continue jalangiLabel1921;
            } else {
                J$.L();
                break jalangiLabel1921;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
