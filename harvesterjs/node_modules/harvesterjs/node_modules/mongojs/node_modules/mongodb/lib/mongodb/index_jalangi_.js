J$.iids = {"9":[1,20,1,27],"10":[26,26,26,37],"17":[1,28,1,32],"25":[1,20,1,33],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[4,5,4,12],"89":[4,24,4,31],"97":[4,32,4,38],"105":[4,24,4,39],"113":[4,24,4,48],"121":[4,5,4,48],"129":[4,5,4,49],"137":[5,5,5,12],"145":[5,26,5,33],"153":[5,34,5,40],"161":[5,26,5,41],"169":[5,26,5,52],"177":[5,5,5,52],"185":[5,5,5,53],"193":[6,3,7,2],"201":[8,1,8,8],"209":[8,19,8,26],"217":[8,27,8,42],"225":[8,19,8,43],"233":[8,19,8,51],"241":[8,1,8,51],"249":[8,1,8,52],"257":[10,5,10,28],"265":[11,5,11,12],"273":[12,5,12,17],"281":[13,5,13,33],"289":[14,5,14,28],"297":[15,5,15,24],"305":[16,5,16,24],"313":[17,5,17,35],"321":[18,5,18,19],"329":[19,5,19,13],"337":[20,5,20,9],"345":[21,5,21,19],"353":[22,5,22,18],"361":[23,5,23,19],"369":[24,5,24,23],"377":[9,1,25,2],"385":[26,18,26,25],"393":[26,26,26,30],"401":[26,33,26,37],"409":[26,18,26,38],"417":[26,18,26,38],"425":[26,18,26,38],"433":[27,19,27,25],"441":[28,9,28,16],"449":[28,17,28,18],"457":[28,22,28,28],"465":[28,29,28,30],"473":[28,22,28,31],"481":[28,9,28,31],"489":[28,9,28,32],"497":[27,19,27,25],"505":[27,5,29,6],"513":[27,5,29,6],"521":[25,11,30,2],"529":[25,11,30,2],"537":[25,11,30,2],"545":[25,11,30,2],"553":[25,11,30,2],"561":[25,11,30,2],"569":[9,1,30,3],"571":[9,1,25,10],"577":[9,1,30,4],"585":[31,1,31,8],"593":[31,26,31,33],"601":[31,26,31,41],"609":[31,1,31,41],"617":[31,1,31,42],"625":[32,1,32,8],"633":[32,18,32,25],"641":[32,26,32,32],"649":[32,18,32,33],"657":[32,18,32,40],"665":[32,1,32,40],"673":[32,1,32,41],"681":[33,1,33,8],"689":[33,16,33,23],"697":[33,24,33,30],"705":[33,16,33,31],"713":[33,16,33,36],"721":[33,1,33,36],"729":[33,1,33,37],"737":[34,1,34,8],"745":[34,17,34,24],"753":[34,25,34,31],"761":[34,17,34,32],"769":[34,17,34,38],"777":[34,1,34,38],"785":[34,1,34,39],"793":[35,1,35,8],"801":[35,18,35,25],"809":[35,26,35,32],"817":[35,18,35,33],"825":[35,18,35,40],"833":[35,1,35,40],"841":[35,1,35,41],"849":[36,1,36,8],"857":[36,16,36,23],"865":[36,24,36,30],"873":[36,16,36,31],"881":[36,16,36,36],"889":[36,1,36,36],"897":[36,1,36,37],"905":[37,1,37,8],"913":[37,18,37,25],"921":[37,26,37,32],"929":[37,18,37,33],"937":[37,18,37,40],"945":[37,1,37,40],"953":[37,1,37,41],"961":[38,1,38,8],"969":[38,18,38,25],"977":[38,26,38,32],"985":[38,18,38,33],"993":[38,18,38,40],"1001":[38,1,38,40],"1009":[38,1,38,41],"1017":[39,1,39,8],"1025":[39,20,39,27],"1033":[39,28,39,34],"1041":[39,20,39,35],"1049":[39,20,39,44],"1057":[39,1,39,44],"1065":[39,1,39,45],"1073":[40,1,40,8],"1081":[40,18,40,25],"1089":[40,26,40,32],"1097":[40,18,40,33],"1105":[40,18,40,40],"1113":[40,1,40,40],"1121":[40,1,40,41],"1129":[41,1,41,8],"1137":[41,21,41,28],"1145":[41,29,41,35],"1153":[41,21,41,36],"1161":[41,21,41,46],"1169":[41,1,41,46],"1177":[41,1,41,47],"1185":[42,1,42,8],"1193":[42,16,42,23],"1201":[42,24,42,30],"1209":[42,16,42,31],"1217":[42,16,42,40],"1225":[42,16,42,45],"1233":[42,1,42,45],"1241":[42,1,42,46],"1249":[43,15,43,22],"1257":[43,15,43,25],"1265":[43,15,43,33],"1273":[43,15,43,33],"1281":[43,15,43,33],"1289":[44,1,44,8],"1297":[44,16,44,23],"1305":[45,12,45,19],"1313":[45,12,45,19],"1321":[45,5,45,20],"1329":[44,33,46,2],"1337":[44,33,46,2],"1345":[44,33,46,2],"1353":[44,16,46,2],"1361":[44,1,46,2],"1369":[44,1,46,3],"1377":[47,18,47,25],"1385":[48,5,48,12],"1393":[48,13,48,17],"1401":[48,21,48,28],"1409":[48,29,48,33],"1417":[48,21,48,34],"1425":[48,5,48,34],"1433":[48,5,48,35],"1441":[47,18,47,25],"1449":[47,1,49,2],"1457":[47,1,49,2],"1465":[50,1,50,7],"1473":[50,18,50,25],"1481":[50,1,50,25],"1489":[50,1,50,26],"1497":[1,1,50,26],"1505":[1,1,50,26],"1513":[1,1,50,26],"1521":[1,1,50,26],"1529":[1,1,50,26],"1537":[25,11,30,2],"1545":[25,11,30,2],"1553":[44,33,46,2],"1561":[44,33,46,2],"1569":[1,1,50,26],"1577":[1,1,50,26],"nBranches":0,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/index_jalangi_.js","code":"try {\n  exports.BSONPure = require('bson').BSONPure;\n  exports.BSONNative = require('bson').BSONNative;\n} catch(err) {\n  // do nothing\n}\n\n// export the driver version\nexports.version = require('../../package').version;\n\n[ 'commands/base_command'\n  , 'admin'\n  , 'collection'\n  , 'connection/read_preference'\n  , 'connection/connection'\n  , 'connection/server'\n  , 'connection/mongos'\n  , 'connection/repl_set/repl_set'\n  , 'mongo_client'\n  , 'cursor'\n  , 'db'\n  , 'mongo_client'\n  , 'gridfs/grid'\n  ,\t'gridfs/chunk'\n  , 'gridfs/gridstore'].forEach(function (path) {\n  \tvar module = require('./' + path);\n  \tfor (var i in module) {\n  \t\texports[i] = module[i];\n    }\n});\n\n// backwards compat\nexports.ReplSetServers = exports.ReplSet;\n// Add BSON Classes\nexports.Binary = require('bson').Binary;\nexports.Code = require('bson').Code;\nexports.DBRef = require('bson').DBRef;\nexports.Double = require('bson').Double;\nexports.Long = require('bson').Long;\nexports.MinKey = require('bson').MinKey;\nexports.MaxKey = require('bson').MaxKey;\nexports.ObjectID = require('bson').ObjectID;\nexports.Symbol = require('bson').Symbol;\nexports.Timestamp = require('bson').Timestamp;  \n// Add BSON Parser\nexports.BSON = require('bson').BSONPure.BSON;\n\n// Set up the connect function\nvar connect = exports.Db.connect;\n\n// Add the pure and native backward compatible functions\nexports.pure = exports.native = function() {\n  return connect;\n}\n\n// Map all values to the exports value\nfor(var name in exports) {\n  connect[name] = exports[name];\n}\n\n// Set our exports to be the connect function\nmodule.exports = connect;\n"};
jalangiLabel1288:
    while (true) {
        try {
            J$.Se(1497, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/index_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/index.js');
            J$.N(1505, '__secret__S$', __secret__S$, 0);
            J$.N(1513, '__secret__traits__', __secret__traits__, 0);
            J$.N(1521, 'connect', connect, 0);
            J$.N(1529, 'name', name, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            try {
                J$.X1(129, J$.P(121, J$.R(81, 'exports', exports, 2), 'BSONPure', J$.G(113, J$.F(105, J$.R(89, 'require', require, 2), 0)(J$.T(97, 'bson', 21, false)), 'BSONPure', 0), 0));
                J$.X1(185, J$.P(177, J$.R(137, 'exports', exports, 2), 'BSONNative', J$.G(169, J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, 'bson', 21, false)), 'BSONNative', 0), 0));
            } catch (err) {
                err = J$.N(193, 'err', err, 1);
            }
            J$.X1(249, J$.P(241, J$.R(201, 'exports', exports, 2), 'version', J$.G(233, J$.F(225, J$.R(209, 'require', require, 2), 0)(J$.T(217, '../../package', 21, false)), 'version', 0), 0));
            J$.X1(577, J$.M(569, J$.T(377, [
                J$.T(257, 'commands/base_command', 21, false),
                J$.T(265, 'admin', 21, false),
                J$.T(273, 'collection', 21, false),
                J$.T(281, 'connection/read_preference', 21, false),
                J$.T(289, 'connection/connection', 21, false),
                J$.T(297, 'connection/server', 21, false),
                J$.T(305, 'connection/mongos', 21, false),
                J$.T(313, 'connection/repl_set/repl_set', 21, false),
                J$.T(321, 'mongo_client', 21, false),
                J$.T(329, 'cursor', 21, false),
                J$.T(337, 'db', 21, false),
                J$.T(345, 'mongo_client', 21, false),
                J$.T(353, 'gridfs/grid', 21, false),
                J$.T(361, 'gridfs/chunk', 21, false),
                J$.T(369, 'gridfs/gridstore', 21, false)
            ], 10, false), 'forEach', 0)(J$.T(561, function (path) {
                jalangiLabel1286:
                    while (true) {
                        try {
                            J$.Fe(521, arguments.callee, this, arguments);
                            arguments = J$.N(529, 'arguments', arguments, 4);
                            path = J$.N(537, 'path', path, 4);
                            J$.N(545, 'module', module, 0);
                            J$.N(553, 'i', i, 0);
                            var module = J$.X1(425, J$.W(417, 'module', J$.F(409, J$.R(385, 'require', require, 2), 0)(J$.B(10, '+', J$.T(393, './', 21, false), J$.R(401, 'path', path, 0), 0)), module, 1));
                            for (J$._tm_p in J$.H(497, J$.R(433, 'module', module, 0))) {
                                var i = J$.X1(513, J$.W(505, 'i', J$._tm_p, i, 1));
                                {
                                    {
                                        J$.X1(489, J$.P(481, J$.R(441, 'exports', exports, 2), J$.R(449, 'i', i, 0), J$.G(473, J$.R(457, 'module', module, 0), J$.R(465, 'i', i, 0), 4), 2));
                                    }
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(1537, J$e);
                        } finally {
                            if (J$.Fr(1545))
                                continue jalangiLabel1286;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 521)));
            J$.X1(617, J$.P(609, J$.R(585, 'exports', exports, 2), 'ReplSetServers', J$.G(601, J$.R(593, 'exports', exports, 2), 'ReplSet', 0), 0));
            J$.X1(673, J$.P(665, J$.R(625, 'exports', exports, 2), 'Binary', J$.G(657, J$.F(649, J$.R(633, 'require', require, 2), 0)(J$.T(641, 'bson', 21, false)), 'Binary', 0), 0));
            J$.X1(729, J$.P(721, J$.R(681, 'exports', exports, 2), 'Code', J$.G(713, J$.F(705, J$.R(689, 'require', require, 2), 0)(J$.T(697, 'bson', 21, false)), 'Code', 0), 0));
            J$.X1(785, J$.P(777, J$.R(737, 'exports', exports, 2), 'DBRef', J$.G(769, J$.F(761, J$.R(745, 'require', require, 2), 0)(J$.T(753, 'bson', 21, false)), 'DBRef', 0), 0));
            J$.X1(841, J$.P(833, J$.R(793, 'exports', exports, 2), 'Double', J$.G(825, J$.F(817, J$.R(801, 'require', require, 2), 0)(J$.T(809, 'bson', 21, false)), 'Double', 0), 0));
            J$.X1(897, J$.P(889, J$.R(849, 'exports', exports, 2), 'Long', J$.G(881, J$.F(873, J$.R(857, 'require', require, 2), 0)(J$.T(865, 'bson', 21, false)), 'Long', 0), 0));
            J$.X1(953, J$.P(945, J$.R(905, 'exports', exports, 2), 'MinKey', J$.G(937, J$.F(929, J$.R(913, 'require', require, 2), 0)(J$.T(921, 'bson', 21, false)), 'MinKey', 0), 0));
            J$.X1(1009, J$.P(1001, J$.R(961, 'exports', exports, 2), 'MaxKey', J$.G(993, J$.F(985, J$.R(969, 'require', require, 2), 0)(J$.T(977, 'bson', 21, false)), 'MaxKey', 0), 0));
            J$.X1(1065, J$.P(1057, J$.R(1017, 'exports', exports, 2), 'ObjectID', J$.G(1049, J$.F(1041, J$.R(1025, 'require', require, 2), 0)(J$.T(1033, 'bson', 21, false)), 'ObjectID', 0), 0));
            J$.X1(1121, J$.P(1113, J$.R(1073, 'exports', exports, 2), 'Symbol', J$.G(1105, J$.F(1097, J$.R(1081, 'require', require, 2), 0)(J$.T(1089, 'bson', 21, false)), 'Symbol', 0), 0));
            J$.X1(1177, J$.P(1169, J$.R(1129, 'exports', exports, 2), 'Timestamp', J$.G(1161, J$.F(1153, J$.R(1137, 'require', require, 2), 0)(J$.T(1145, 'bson', 21, false)), 'Timestamp', 0), 0));
            J$.X1(1241, J$.P(1233, J$.R(1185, 'exports', exports, 2), 'BSON', J$.G(1225, J$.G(1217, J$.F(1209, J$.R(1193, 'require', require, 2), 0)(J$.T(1201, 'bson', 21, false)), 'BSONPure', 0), 'BSON', 0), 0));
            var connect = J$.X1(1281, J$.W(1273, 'connect', J$.G(1265, J$.G(1257, J$.R(1249, 'exports', exports, 2), 'Db', 0), 'connect', 0), connect, 3));
            J$.X1(1369, J$.P(1361, J$.R(1289, 'exports', exports, 2), 'pure', J$.P(1353, J$.R(1297, 'exports', exports, 2), 'native', J$.T(1345, function () {
                jalangiLabel1287:
                    while (true) {
                        try {
                            J$.Fe(1329, arguments.callee, this, arguments);
                            arguments = J$.N(1337, 'arguments', arguments, 4);
                            return J$.X1(1321, J$.Rt(1313, J$.R(1305, 'connect', connect, 1)));
                        } catch (J$e) {
                            J$.Ex(1553, J$e);
                        } finally {
                            if (J$.Fr(1561))
                                continue jalangiLabel1287;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1329), 0), 0));
            for (J$._tm_p in J$.H(1441, J$.R(1377, 'exports', exports, 2))) {
                var name = J$.X1(1457, J$.W(1449, 'name', J$._tm_p, name, 3));
                {
                    {
                        J$.X1(1433, J$.P(1425, J$.R(1385, 'connect', connect, 1), J$.R(1393, 'name', name, 1), J$.G(1417, J$.R(1401, 'exports', exports, 2), J$.R(1409, 'name', name, 1), 4), 2));
                    }
                }
            }
            J$.X1(1489, J$.P(1481, J$.R(1465, 'module', module, 2), 'exports', J$.R(1473, 'connect', connect, 1), 0));
        } catch (J$e) {
            J$.Ex(1569, J$e);
        } finally {
            if (J$.Sr(1577)) {
                J$.L();
                continue jalangiLabel1288;
            } else {
                J$.L();
                break jalangiLabel1288;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
