{"8":[5,9,5,32],"9":[1,20,1,27],"10":[5,11,5,31],"16":[8,19,8,33],"17":[1,28,1,32],"18":[5,9,5,32],"24":[14,15,14,26],"25":[1,20,1,33],"26":[8,19,8,33],"32":[15,23,15,46],"33":[1,20,1,33],"34":[15,23,15,46],"40":[16,9,16,31],"41":[1,20,1,33],"42":[16,9,16,31],"48":[18,20,18,47],"49":[2,26,2,38],"56":[19,14,19,36],"57":[2,26,2,45],"64":[22,13,22,16],"65":[2,26,2,45],"72":[25,17,25,20],"73":[2,26,2,45],"80":[28,21,28,24],"81":[3,17,3,24],"88":[38,13,38,16],"89":[3,25,3,38],"96":[47,13,47,16],"97":[3,17,3,39],"105":[3,17,3,49],"113":[3,62,3,69],"121":[3,70,3,76],"129":[3,62,3,77],"137":[3,62,3,86],"145":[3,17,3,49],"153":[3,17,3,49],"161":[3,62,3,86],"169":[3,62,3,86],"177":[5,11,5,15],"185":[5,27,5,31],"193":[6,20,6,24],"201":[6,25,6,27],"209":[6,29,6,35],"217":[6,16,6,36],"225":[6,16,6,36],"233":[6,9,6,37],"241":[7,5,7,9],"249":[7,15,7,17],"257":[7,5,7,17],"265":[7,5,7,18],"273":[8,5,8,9],"281":[8,19,8,25],"289":[8,29,8,33],"297":[8,36,8,45],"305":[8,36,8,69],"313":[8,72,8,78],"321":[8,5,8,78],"329":[8,5,8,79],"337":[4,1,9,2],"345":[4,1,9,2],"353":[4,1,9,2],"361":[4,1,9,2],"369":[10,1,10,5],"377":[10,1,10,15],"385":[11,16,11,20],"393":[11,16,11,20],"401":[11,16,11,20],"409":[12,16,12,21],"417":[12,16,12,31],"425":[12,16,12,37],"433":[12,43,12,52],"441":[12,54,12,55],"449":[12,16,12,56],"451":[12,16,12,42],"457":[12,16,12,56],"465":[12,16,12,56],"473":[13,16,13,20],"481":[13,16,13,26],"483":[13,16,13,24],"489":[13,16,13,26],"497":[13,5,13,27],"505":[14,15,14,19],"513":[14,15,14,26],"521":[14,29,14,33],"529":[14,29,14,41],"531":[14,29,14,39],"537":[14,44,14,46],"545":[14,15,14,46],"553":[14,5,14,47],"561":[15,5,15,12],"569":[15,13,15,19],"577":[15,23,15,30],"585":[15,31,15,37],"593":[15,23,15,38],"601":[15,42,15,46],"609":[15,49,15,53],"617":[15,49,15,60],"625":[15,63,15,70],"633":[15,71,15,77],"641":[15,63,15,78],"649":[15,5,15,78],"657":[15,5,15,79],"665":[16,10,16,16],"673":[16,26,16,30],"681":[16,10,16,31],"683":[16,10,16,25],"689":[17,16,17,24],"697":[17,29,17,34],"705":[17,35,17,72],"713":[17,25,17,73],"721":[17,75,17,79],"729":[17,16,17,80],"737":[17,16,17,80],"745":[17,9,17,81],"753":[18,20,18,27],"761":[18,28,18,38],"769":[18,20,18,39],"777":[18,43,18,47],"785":[18,20,18,47],"793":[18,20,18,47],"801":[19,14,19,21],"809":[19,22,19,27],"817":[19,14,19,28],"825":[19,32,19,36],"833":[19,14,19,36],"841":[19,14,19,36],"849":[20,25,20,34],"857":[20,35,20,39],"865":[20,35,20,42],"873":[20,44,20,46],"881":[20,48,20,56],"889":[20,58,20,61],"897":[20,63,20,70],"905":[20,21,20,71],"913":[20,21,20,71],"921":[20,21,20,71],"929":[21,5,21,14],"937":[22,13,22,16],"945":[23,20,23,28],"953":[23,29,23,32],"961":[23,34,23,38],"969":[23,20,23,39],"977":[23,20,23,39],"985":[23,13,23,40],"993":[24,9,24,18],"1001":[24,25,24,29],"1009":[25,17,25,20],"1017":[26,24,26,32],"1025":[26,33,26,36],"1033":[26,38,26,42],"1041":[26,24,26,43],"1049":[26,24,26,43],"1057":[26,17,26,44],"1065":[27,13,27,22],"1073":[28,21,28,24],"1081":[29,28,29,36],"1089":[29,37,29,40],"1097":[29,42,29,46],"1105":[29,28,29,47],"1113":[29,28,29,47],"1121":[29,21,29,48],"1129":[30,17,30,25],"1137":[30,26,30,30],"1145":[30,32,30,38],"1153":[30,17,30,39],"1161":[30,17,30,40],"1169":[27,29,31,14],"1177":[27,29,31,14],"1185":[27,29,31,14],"1193":[27,29,31,14],"1201":[27,29,31,14],"1209":[27,13,31,15],"1211":[27,13,27,28],"1217":[27,13,31,16],"1225":[24,31,32,10],"1233":[24,31,32,10],"1241":[24,31,32,10],"1249":[24,31,32,10],"1257":[24,31,32,10],"1265":[24,9,32,11],"1267":[24,9,24,24],"1273":[24,9,32,12],"1281":[21,20,33,6],"1289":[21,20,33,6],"1297":[21,20,33,6],"1305":[21,20,33,6],"1313":[21,20,33,6],"1321":[21,5,33,7],"1323":[21,5,21,19],"1329":[21,5,33,8],"1337":[10,22,34,2],"1345":[10,22,34,2],"1353":[10,22,34,2],"1361":[10,22,34,2],"1369":[10,22,34,2],"1377":[10,22,34,2],"1385":[10,22,34,2],"1393":[10,22,34,2],"1401":[10,22,34,2],"1409":[10,22,34,2],"1417":[10,22,34,2],"1425":[10,1,34,2],"1433":[10,1,34,3],"1441":[35,1,35,5],"1449":[35,1,35,15],"1457":[36,25,36,34],"1465":[36,35,36,39],"1473":[36,35,36,42],"1481":[36,44,36,46],"1489":[36,48,36,52],"1497":[36,54,36,57],"1505":[36,67,36,71],"1513":[36,67,36,78],"1521":[36,59,36,80],"1529":[36,21,36,81],"1537":[36,21,36,81],"1545":[36,21,36,81],"1553":[37,5,37,14],"1561":[38,13,38,16],"1569":[39,20,39,28],"1577":[39,29,39,32],"1585":[39,34,39,38],"1593":[39,20,39,39],"1601":[39,20,39,39],"1609":[39,13,39,40],"1617":[40,9,40,18],"1625":[41,20,41,28],"1633":[41,29,41,32],"1641":[41,34,41,38],"1649":[41,20,41,39],"1657":[41,20,41,39],"1665":[41,13,41,40],"1673":[40,24,42,10],"1681":[40,24,42,10],"1689":[40,24,42,10],"1697":[40,24,42,10],"1705":[40,24,42,10],"1713":[40,9,42,11],"1715":[40,9,40,23],"1721":[40,9,42,12],"1729":[37,20,43,6],"1737":[37,20,43,6],"1745":[37,20,43,6],"1753":[37,20,43,6],"1761":[37,20,43,6],"1769":[37,5,43,7],"1771":[37,5,37,19],"1777":[37,5,43,8],"1785":[35,22,44,2],"1793":[35,22,44,2],"1801":[35,22,44,2],"1809":[35,22,44,2],"1817":[35,22,44,2],"1825":[35,22,44,2],"1833":[35,1,44,2],"1841":[35,1,44,3],"1849":[45,1,45,5],"1857":[45,1,45,15],"1865":[46,5,46,14],"1873":[46,22,46,26],"1881":[46,22,46,29],"1889":[46,31,46,33],"1897":[46,43,46,47],"1905":[46,43,46,54],"1913":[46,35,46,56],"1921":[47,13,47,16],"1929":[48,20,48,28],"1937":[48,29,48,32],"1945":[48,34,48,39],"1953":[48,20,48,40],"1961":[48,20,48,40],"1969":[48,13,48,41],"1977":[49,16,49,24],"1985":[49,25,49,29],"1993":[49,31,49,35],"2001":[49,16,49,36],"2009":[49,16,49,36],"2017":[49,9,49,37],"2025":[46,58,50,6],"2033":[46,58,50,6],"2041":[46,58,50,6],"2049":[46,58,50,6],"2057":[46,58,50,6],"2065":[46,5,50,7],"2067":[46,5,46,21],"2073":[46,5,50,8],"2081":[45,25,51,2],"2089":[45,25,51,2],"2097":[45,25,51,2],"2105":[45,25,51,2],"2113":[45,25,51,2],"2121":[45,1,51,2],"2129":[45,1,51,3],"2137":[52,1,52,8],"2145":[52,16,52,20],"2153":[52,1,52,20],"2161":[52,1,52,21],"2169":[1,1,52,21],"2177":[1,1,52,21],"2185":[1,1,52,21],"2193":[1,1,52,21],"2201":[1,1,52,21],"2209":[4,1,9,2],"2217":[1,1,52,21],"2225":[5,5,6,37],"2233":[8,19,8,78],"2241":[4,1,9,2],"2249":[4,1,9,2],"2257":[14,15,14,46],"2265":[15,23,15,78],"2273":[16,5,17,81],"2281":[22,9,23,40],"2289":[25,13,26,44],"2297":[28,17,29,48],"2305":[27,29,31,14],"2313":[27,29,31,14],"2321":[24,31,32,10],"2329":[24,31,32,10],"2337":[21,20,33,6],"2345":[21,20,33,6],"2353":[10,22,34,2],"2361":[10,22,34,2],"2369":[38,9,39,40],"2377":[40,24,42,10],"2385":[40,24,42,10],"2393":[37,20,43,6],"2401":[37,20,43,6],"2409":[35,22,44,2],"2417":[35,22,44,2],"2425":[47,9,48,41],"2433":[46,58,50,6],"2441":[46,58,50,6],"2449":[45,25,51,2],"2457":[45,25,51,2],"2465":[1,1,52,21],"2473":[1,1,52,21],"nBranches":24,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/gridfs/grid.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/gridfs/grid_jalangi_.js","code":"var GridStore = require('./gridstore').GridStore,\n  ObjectID = require('bson').ObjectID;\n\n/**\n * A class representation of a simple Grid interface.\n *\n * @class Represents the Grid.\n * @param {Db} db A database instance to interact with.\n * @param {String} [fsName] optional different root collection for GridFS.\n * @return {Grid}\n */\nfunction Grid(db, fsName) {\n\n  if(!(this instanceof Grid)) return new Grid(db, fsName);\n\n  this.db = db;\n  this.fsName = fsName == null ? GridStore.DEFAULT_ROOT_COLLECTION : fsName;\n}\n\n/**\n * Puts binary data to the grid\n *\n * Options\n *  - **_id** {Any}, unique id for this file\n *  - **filename** {String}, name for this file.\n *  - **root** {String}, root collection to use. Defaults to **{GridStore.DEFAULT_ROOT_COLLECTION}**.\n *  - **content_type** {String}, mime type of the file. Defaults to **{GridStore.DEFAULT_CONTENT_TYPE}**.\n *  - **chunk_size** {Number}, size for the chunk. Defaults to **{Chunk.DEFAULT_CHUNK_SIZE}**.\n *  - **metadata** {Object}, arbitrary data the user wants to store.\n *\n * @param {Buffer} data buffer with Binary Data.\n * @param {Object} [options] the options for the files.\n * @param {Function} callback this will be called after this method is executed. The first parameter will contain an Error object if an error occured or null otherwise. The second parameter will contain a reference to this object.\n * @return {null}\n * @api public\n */\nGrid.prototype.put = function(data, options, callback) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  options = args.length ? args.shift() : {};\n  // If root is not defined add our default one\n  options['root'] = options['root'] == null ? this.fsName : options['root'];\n\n  // Return if we don't have a buffer object as data\n  if(!(Buffer.isBuffer(data))) return callback(new Error(\"Data object must be a buffer object\"), null);\n  // Get filename if we are using it\n  var filename = options['filename'] || null;\n  // Get id if we are using it\n  var id = options['_id'] || null;\n  // Create gridstore\n  var gridStore = new GridStore(this.db, id, filename, \"w\", options);\n  gridStore.open(function(err, gridStore) {\n    if(err) return callback(err, null);\n\n    gridStore.write(data, function(err, result) {\n      if(err) return callback(err, null);\n\n      gridStore.close(function(err, result) {\n        if(err) return callback(err, null);\n        callback(null, result);\n      })\n    })\n  })\n}\n\n/**\n * Get binary data to the grid\n *\n * @param {Any} id for file.\n * @param {Function} callback this will be called after this method is executed. The first parameter will contain an Error object if an error occured or null otherwise. The second parameter will contain a reference to this object.\n * @return {null}\n * @api public\n */\nGrid.prototype.get = function(id, callback) {\n  // Create gridstore\n  var gridStore = new GridStore(this.db, id, null, \"r\", {root:this.fsName});\n  gridStore.open(function(err, gridStore) {\n    if(err) return callback(err, null);\n\n    // Return the data\n    gridStore.read(function(err, data) {\n      return callback(err, data)\n    });\n  })\n}\n\n/**\n * Delete file from grid\n *\n * @param {Any} id for file.\n * @param {Function} callback this will be called after this method is executed. The first parameter will contain an Error object if an error occured or null otherwise. The second parameter will contain a reference to this object.\n * @return {null}\n * @api public\n */\nGrid.prototype.delete = function(id, callback) {\n  // Create gridstore\n  GridStore.unlink(this.db, id, {root:this.fsName}, function(err, result) {\n    if(err) return callback(err, false);\n    return callback(null, true);\n  });\n}\n\nexports.Grid = Grid;\n"}