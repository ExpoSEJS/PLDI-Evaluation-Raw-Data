J$.iids = {"8":[9,15,9,28],"9":[1,20,1,27],"10":[10,9,10,38],"16":[10,9,10,38],"17":[1,28,1,32],"18":[23,23,23,52],"24":[23,23,23,52],"25":[1,20,1,33],"26":[24,21,24,44],"32":[30,24,30,93],"33":[1,20,1,33],"34":[24,46,24,49],"40":[30,24,30,93],"41":[1,20,1,33],"48":[28,17,28,20],"49":[2,26,2,38],"50":[24,46,24,49],"56":[36,17,36,74],"57":[2,26,2,45],"58":[27,35,27,58],"64":[39,21,39,60],"65":[2,26,2,45],"66":[30,24,30,55],"72":[42,28,42,107],"73":[2,26,2,45],"74":[30,59,30,93],"80":[42,28,42,127],"81":[3,17,3,24],"82":[34,44,34,72],"88":[42,28,42,127],"89":[3,25,3,49],"90":[36,17,36,41],"96":[39,21,39,60],"97":[3,17,3,50],"98":[36,45,36,60],"104":[36,17,36,74],"105":[3,17,3,60],"106":[36,45,36,74],"112":[24,21,24,44],"113":[3,70,3,77],"114":[39,21,39,40],"121":[3,78,3,88],"122":[42,28,42,56],"129":[3,70,3,89],"130":[42,60,42,107],"137":[3,100,3,107],"145":[3,108,3,116],"153":[3,100,3,117],"161":[3,128,3,135],"169":[3,136,3,142],"177":[3,128,3,143],"185":[3,128,3,150],"193":[3,161,3,168],"201":[3,169,3,175],"209":[3,161,3,176],"217":[3,161,3,183],"225":[3,17,3,60],"233":[3,17,3,60],"241":[3,70,3,89],"249":[3,70,3,89],"257":[3,100,3,117],"265":[3,100,3,117],"273":[3,128,3,150],"281":[3,128,3,150],"289":[3,161,3,183],"297":[3,161,3,183],"305":[5,31,5,32],"313":[5,31,5,32],"321":[5,31,5,32],"329":[6,23,6,27],"337":[6,23,6,27],"345":[6,23,6,27],"353":[7,36,7,37],"361":[7,36,7,37],"369":[7,36,7,37],"377":[8,28,8,33],"385":[8,28,8,33],"393":[8,28,8,33],"401":[9,15,9,22],"409":[9,26,9,28],"417":[9,15,9,28],"425":[9,5,9,29],"433":[10,9,10,16],"441":[10,17,10,29],"449":[10,9,10,30],"457":[10,34,10,38],"465":[11,31,11,32],"473":[11,31,11,32],"481":[11,9,11,33],"489":[13,31,13,33],"497":[13,31,13,46],"505":[13,31,13,66],"507":[13,31,13,64],"513":[13,31,13,73],"521":[13,31,13,73],"529":[13,9,13,74],"537":[14,9,14,16],"545":[14,17,14,24],"553":[14,28,14,32],"561":[14,9,14,32],"569":[14,9,14,33],"577":[16,23,16,29],"585":[16,30,16,36],"593":[16,37,16,47],"601":[16,49,16,57],"609":[16,59,16,67],"617":[16,30,16,68],"625":[16,19,16,69],"633":[16,19,16,69],"641":[16,19,16,69],"649":[18,20,18,21],"657":[19,20,19,27],"665":[20,18,20,25],"673":[21,24,21,25],"681":[17,19,22,6],"689":[17,19,22,6],"697":[17,19,22,6],"705":[23,23,23,30],"713":[23,31,23,43],"721":[23,23,23,44],"729":[23,48,23,52],"737":[23,56,23,63],"745":[23,64,23,76],"753":[23,56,23,77],"761":[23,55,23,78],"769":[23,81,23,83],"777":[23,81,23,96],"785":[23,81,23,116],"787":[23,81,23,114],"793":[23,23,23,116],"801":[23,23,23,116],"809":[24,18,24,19],"817":[24,18,24,19],"825":[24,18,24,19],"833":[24,21,24,22],"841":[24,25,24,44],"857":[24,46,24,47],"865":[24,46,24,49],"881":[25,26,25,37],"889":[25,38,25,39],"897":[25,26,25,40],"905":[25,26,25,40],"913":[25,26,25,40],"921":[26,9,26,11],"929":[26,33,26,42],"937":[26,59,26,61],"945":[26,63,26,70],"953":[26,72,26,74],"961":[26,76,26,87],"969":[26,33,26,88],"971":[26,33,26,58],"977":[26,104,26,114],"985":[26,90,26,116],"993":[27,35,27,54],"1001":[27,57,27,58],"1009":[27,35,27,58],"1017":[27,13,27,59],"1025":[28,17,28,20],"1033":[29,31,29,34],"1041":[29,31,29,34],"1049":[29,17,29,35],"1057":[30,24,30,30],"1065":[30,24,30,40],"1073":[30,41,30,42],"1081":[30,24,30,43],"1089":[30,24,30,47],"1097":[30,51,30,55],"1105":[30,59,30,65],"1113":[30,59,30,75],"1121":[30,76,30,77],"1129":[30,59,30,78],"1137":[30,59,30,85],"1145":[30,89,30,93],"1153":[31,31,31,36],"1161":[31,45,31,51],"1169":[31,45,31,61],"1177":[31,62,31,63],"1185":[31,45,31,64],"1193":[31,31,31,65],"1195":[31,31,31,44],"1201":[31,31,31,65],"1209":[31,17,31,66],"1217":[33,36,33,40],"1225":[33,36,33,40],"1233":[33,17,33,41],"1241":[34,44,34,68],"1249":[34,71,34,72],"1257":[34,44,34,72],"1265":[34,17,34,73],"1273":[36,17,36,36],"1281":[36,40,36,41],"1289":[36,52,36,60],"1297":[36,64,36,74],"1305":[37,40,37,48],"1313":[37,40,37,48],"1321":[37,40,37,48],"1329":[38,28,38,32],"1337":[38,28,38,32],"1345":[38,17,38,33],"1353":[39,21,39,32],"1361":[39,36,39,40],"1369":[39,44,39,60],"1377":[40,21,40,23],"1385":[40,21,40,36],"1393":[40,21,40,41],"1401":[40,46,40,53],"1409":[40,55,40,57],"1417":[40,55,40,70],"1425":[40,72,40,80],"1433":[40,82,40,90],"1441":[40,21,40,91],"1443":[40,21,40,45],"1449":[40,21,40,92],"1457":[41,21,41,37],"1465":[41,38,41,49],"1473":[41,51,41,55],"1481":[41,21,41,56],"1489":[41,21,41,57],"1497":[42,28,42,52],"1505":[42,55,42,56],"1513":[42,60,42,84],"1521":[42,88,42,107],"1529":[42,111,42,127],"1537":[43,21,43,23],"1545":[43,21,43,36],"1553":[43,21,43,41],"1561":[43,46,43,53],"1569":[43,55,43,57],"1577":[43,55,43,70],"1585":[43,72,43,80],"1593":[43,82,43,90],"1601":[43,21,43,91],"1603":[43,21,43,45],"1609":[43,21,43,92],"1617":[44,21,44,37],"1625":[44,38,44,49],"1633":[44,51,44,55],"1641":[44,21,44,56],"1649":[44,21,44,57],"1657":[46,21,46,37],"1665":[46,38,46,49],"1673":[46,51,46,56],"1681":[46,21,46,57],"1689":[46,21,46,58],"1697":[26,118,49,10],"1705":[26,118,49,10],"1713":[26,118,49,10],"1721":[26,118,49,10],"1729":[26,118,49,10],"1737":[26,118,49,10],"1745":[26,9,49,11],"1747":[26,9,26,32],"1753":[26,9,49,12],"1761":[4,20,51,2],"1769":[4,20,51,2],"1777":[4,20,51,2],"1785":[4,20,51,2],"1793":[4,20,51,2],"1801":[4,20,51,2],"1809":[4,20,51,2],"1817":[4,20,51,2],"1825":[4,20,51,2],"1833":[4,20,51,2],"1841":[4,20,51,2],"1849":[4,20,51,2],"1857":[4,20,51,2],"1865":[4,20,51,2],"1873":[4,20,51,2],"1881":[4,20,51,2],"1889":[4,20,51,2],"1897":[4,20,51,2],"1905":[4,20,51,2],"1913":[52,1,52,8],"1921":[52,24,52,36],"1929":[52,1,52,36],"1937":[52,1,52,37],"1945":[1,1,52,37],"1953":[1,1,52,37],"1961":[1,1,52,37],"1969":[1,1,52,37],"1977":[1,1,52,37],"1985":[1,1,52,37],"1993":[1,1,52,37],"2001":[1,1,52,37],"2009":[1,1,52,37],"2017":[10,5,15,6],"2025":[23,23,23,116],"2033":[30,20,35,14],"2041":[28,13,35,14],"2049":[42,24,47,18],"2057":[39,17,47,18],"2065":[36,13,48,14],"2073":[26,118,49,10],"2081":[26,118,49,10],"2089":[24,5,50,6],"2097":[24,5,50,6],"2105":[4,20,51,2],"2113":[4,20,51,2],"2121":[1,1,52,37],"2129":[1,1,52,37],"nBranches":28,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/auth/mongodb_plain.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/auth/mongodb_plain_jalangi_.js","code":"var DbCommand = require('../commands/db_command').DbCommand\n  , utils = require('../utils')\n  , crypto = require('crypto')\n  , Binary = require('bson').Binary\n  , format = require('util').format;\n\nvar authenticate = function(db, username, password, options, callback) {\n  var numberOfConnections = 0;\n  var errorObject = null;\n  var numberOfValidConnections = 0;\n  var credentialsValid = false;\n  options = options || {};\n  \n  if(options['connection'] != null) {\n    //if a connection was explicitly passed on options, then we have only one...\n    numberOfConnections = 1;\n  } else {\n    // Get the amount of connections in the pool to ensure we have authenticated all comments\n    numberOfConnections = db.serverConfig.allRawConnections().length;\n    options['onAll'] = true;\n  }\n\n  // Create payload\n  var payload = new Binary(format(\"\\x00%s\\x00%s\", username, password));\n\n  // Let's start the sasl process\n  var command = {\n      saslStart: 1\n    , mechanism: 'PLAIN'\n    , payload: payload\n    , autoAuthorize: 1\n  };\n\n  // Grab all the connections\n  var connections = options['connection'] != null ? [options['connection']] : db.serverConfig.allRawConnections();\n\n  // Authenticate all connections\n  for(var i = 0; i < numberOfConnections; i++) {\n    var connection = connections[i];\n    // Execute first sasl step\n    db._executeQueryCommand(DbCommand.createDbCommand(db, command, {}, '$external'), {connection:connection}, function(err, result) {\n      // Count down\n      numberOfConnections = numberOfConnections - 1;\n\n      // Ensure we save any error\n      if(err) {\n        errorObject = err;\n      } else if(result.documents[0].err != null || result.documents[0].errmsg != null){\n        errorObject = utils.toError(result.documents[0]);\n      } else {\n        credentialsValid = true;\n        numberOfValidConnections = numberOfValidConnections + 1;        \n      }\n\n      // Work around the case where the number of connections are 0\n      if(numberOfConnections <= 0 && typeof callback == 'function') {\n        var internalCallback = callback;\n        callback = null;\n\n        if(errorObject == null && credentialsValid) {\n          // We authenticated correctly save the credentials\n          db.serverConfig.auth.add('PLAIN', db.databaseName, username, password);\n          // Return callback\n          internalCallback(errorObject, true);\n        } else if(numberOfValidConnections > 0 && numberOfValidConnections != numberOfConnections\n          && credentialsValid) {\n            // We authenticated correctly save the credentials\n            db.serverConfig.auth.add('PLAIN', db.databaseName, username, password);\n            // Return callback\n            internalCallback(errorObject, true);\n        } else {\n          internalCallback(errorObject, false);\n        }\n      }\n    });\n  }\n}\n\nexports.authenticate = authenticate;"};
jalangiLabel2109:
    while (true) {
        try {
            J$.Se(1945, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/auth/mongodb_plain_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/auth/mongodb_plain.js');
            J$.N(1953, '__secret__S$', __secret__S$, 0);
            J$.N(1961, '__secret__traits__', __secret__traits__, 0);
            J$.N(1969, 'DbCommand', DbCommand, 0);
            J$.N(1977, 'utils', utils, 0);
            J$.N(1985, 'crypto', crypto, 0);
            J$.N(1993, 'Binary', Binary, 0);
            J$.N(2001, 'format', format, 0);
            J$.N(2009, 'authenticate', authenticate, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var DbCommand = J$.X1(233, J$.W(225, 'DbCommand', J$.G(105, J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, '../commands/db_command', 21, false)), 'DbCommand', 0), DbCommand, 3)), utils = J$.X1(249, J$.W(241, 'utils', J$.F(129, J$.R(113, 'require', require, 2), 0)(J$.T(121, '../utils', 21, false)), utils, 3)), crypto = J$.X1(265, J$.W(257, 'crypto', J$.F(153, J$.R(137, 'require', require, 2), 0)(J$.T(145, 'crypto', 21, false)), crypto, 3)), Binary = J$.X1(281, J$.W(273, 'Binary', J$.G(185, J$.F(177, J$.R(161, 'require', require, 2), 0)(J$.T(169, 'bson', 21, false)), 'Binary', 0), Binary, 3)), format = J$.X1(297, J$.W(289, 'format', J$.G(217, J$.F(209, J$.R(193, 'require', require, 2), 0)(J$.T(201, 'util', 21, false)), 'format', 0), format, 3));
            var authenticate = J$.X1(1905, J$.W(1897, 'authenticate', J$.T(1889, function (db, username, password, options, callback) {
                jalangiLabel2108:
                    while (true) {
                        try {
                            J$.Fe(1761, arguments.callee, this, arguments);
                            arguments = J$.N(1769, 'arguments', arguments, 4);
                            db = J$.N(1777, 'db', db, 4);
                            username = J$.N(1785, 'username', username, 4);
                            password = J$.N(1793, 'password', password, 4);
                            options = J$.N(1801, 'options', options, 4);
                            callback = J$.N(1809, 'callback', callback, 4);
                            J$.N(1817, 'numberOfConnections', numberOfConnections, 0);
                            J$.N(1825, 'errorObject', errorObject, 0);
                            J$.N(1833, 'numberOfValidConnections', numberOfValidConnections, 0);
                            J$.N(1841, 'credentialsValid', credentialsValid, 0);
                            J$.N(1849, 'payload', payload, 0);
                            J$.N(1857, 'command', command, 0);
                            J$.N(1865, 'connections', connections, 0);
                            J$.N(1873, 'i', i, 0);
                            J$.N(1881, 'connection', connection, 0);
                            var numberOfConnections = J$.X1(321, J$.W(313, 'numberOfConnections', J$.T(305, 0, 22, false), numberOfConnections, 1));
                            var errorObject = J$.X1(345, J$.W(337, 'errorObject', J$.T(329, null, 25, false), errorObject, 1));
                            var numberOfValidConnections = J$.X1(369, J$.W(361, 'numberOfValidConnections', J$.T(353, 0, 22, false), numberOfValidConnections, 1));
                            var credentialsValid = J$.X1(393, J$.W(385, 'credentialsValid', J$.T(377, false, 23, false), credentialsValid, 1));
                            J$.X1(425, options = J$.W(417, 'options', J$.C(8, J$.R(401, 'options', options, 0)) ? J$._() : J$.T(409, {}, 11, false), options, 0));
                            if (J$.X1(2017, J$.C(16, J$.B(10, '!=', J$.G(449, J$.R(433, 'options', options, 0), J$.T(441, 'connection', 21, false), 4), J$.T(457, null, 25, false), 0)))) {
                                J$.X1(481, numberOfConnections = J$.W(473, 'numberOfConnections', J$.T(465, 1, 22, false), numberOfConnections, 0));
                            } else {
                                J$.X1(529, numberOfConnections = J$.W(521, 'numberOfConnections', J$.G(513, J$.M(505, J$.G(497, J$.R(489, 'db', db, 0), 'serverConfig', 0), 'allRawConnections', 0)(), 'length', 0), numberOfConnections, 0));
                                J$.X1(569, J$.P(561, J$.R(537, 'options', options, 0), J$.T(545, 'onAll', 21, false), J$.T(553, true, 23, false), 2));
                            }
                            var payload = J$.X1(641, J$.W(633, 'payload', J$.F(625, J$.R(577, 'Binary', Binary, 1), 1)(J$.F(617, J$.R(585, 'format', format, 1), 0)(J$.T(593, '\0%s\0%s', 21, false), J$.R(601, 'username', username, 0), J$.R(609, 'password', password, 0))), payload, 1));
                            var command = J$.X1(697, J$.W(689, 'command', J$.T(681, {
                                saslStart: J$.T(649, 1, 22, false),
                                mechanism: J$.T(657, 'PLAIN', 21, false),
                                payload: J$.R(665, 'payload', payload, 0),
                                autoAuthorize: J$.T(673, 1, 22, false)
                            }, 11, false), command, 1));
                            var connections = J$.X1(801, J$.W(793, 'connections', J$.X1(2025, J$.C(24, J$.B(18, '!=', J$.G(721, J$.R(705, 'options', options, 0), J$.T(713, 'connection', 21, false), 4), J$.T(729, null, 25, false), 0))) ? J$.T(761, [J$.G(753, J$.R(737, 'options', options, 0), J$.T(745, 'connection', 21, false), 4)], 10, false) : J$.M(785, J$.G(777, J$.R(769, 'db', db, 0), 'serverConfig', 0), 'allRawConnections', 0)(), connections, 1));
                            for (var i = J$.X1(825, J$.W(817, 'i', J$.T(809, 0, 22, false), i, 1)); J$.X1(2089, J$.C(112, J$.B(26, '<', J$.R(833, 'i', i, 0), J$.R(841, 'numberOfConnections', numberOfConnections, 0), 0))); J$.X1(2097, J$.B(50, '-', i = J$.W(865, 'i', J$.B(42, '+', J$.U(34, '+', J$.R(857, 'i', i, 0)), J$.T(849, 1, 22, false), 0), i, 0), J$.T(873, 1, 22, false), 0))) {
                                var connection = J$.X1(913, J$.W(905, 'connection', J$.G(897, J$.R(881, 'connections', connections, 0), J$.R(889, 'i', i, 0), 4), connection, 1));
                                J$.X1(1753, J$.M(1745, J$.R(921, 'db', db, 0), '_executeQueryCommand', 0)(J$.M(969, J$.R(929, 'DbCommand', DbCommand, 1), 'createDbCommand', 0)(J$.R(937, 'db', db, 0), J$.R(945, 'command', command, 0), J$.T(953, {}, 11, false), J$.T(961, '$external', 21, false)), J$.T(985, {
                                    connection: J$.R(977, 'connection', connection, 0)
                                }, 11, false), J$.T(1737, function (err, result) {
                                    jalangiLabel2107:
                                        while (true) {
                                            try {
                                                J$.Fe(1697, arguments.callee, this, arguments);
                                                arguments = J$.N(1705, 'arguments', arguments, 4);
                                                err = J$.N(1713, 'err', err, 4);
                                                result = J$.N(1721, 'result', result, 4);
                                                J$.N(1729, 'internalCallback', internalCallback, 0);
                                                J$.X1(1017, numberOfConnections = J$.W(1009, 'numberOfConnections', J$.B(58, '-', J$.R(993, 'numberOfConnections', numberOfConnections, 0), J$.T(1001, 1, 22, false), 0), numberOfConnections, 0));
                                                if (J$.X1(2041, J$.C(48, J$.R(1025, 'err', err, 0)))) {
                                                    J$.X1(1049, errorObject = J$.W(1041, 'errorObject', J$.R(1033, 'err', err, 0), errorObject, 0));
                                                } else if (J$.X1(2033, J$.C(40, J$.C(32, J$.B(66, '!=', J$.G(1089, J$.G(1081, J$.G(1065, J$.R(1057, 'result', result, 0), 'documents', 0), J$.T(1073, 0, 22, false), 4), 'err', 0), J$.T(1097, null, 25, false), 0)) ? J$._() : J$.B(74, '!=', J$.G(1137, J$.G(1129, J$.G(1113, J$.R(1105, 'result', result, 0), 'documents', 0), J$.T(1121, 0, 22, false), 4), 'errmsg', 0), J$.T(1145, null, 25, false), 0)))) {
                                                    J$.X1(1209, errorObject = J$.W(1201, 'errorObject', J$.M(1193, J$.R(1153, 'utils', utils, 1), 'toError', 0)(J$.G(1185, J$.G(1169, J$.R(1161, 'result', result, 0), 'documents', 0), J$.T(1177, 0, 22, false), 4)), errorObject, 0));
                                                } else {
                                                    J$.X1(1233, credentialsValid = J$.W(1225, 'credentialsValid', J$.T(1217, true, 23, false), credentialsValid, 0));
                                                    J$.X1(1265, numberOfValidConnections = J$.W(1257, 'numberOfValidConnections', J$.B(82, '+', J$.R(1241, 'numberOfValidConnections', numberOfValidConnections, 0), J$.T(1249, 1, 22, false), 0), numberOfValidConnections, 0));
                                                }
                                                if (J$.X1(2065, J$.C(104, J$.C(56, J$.B(90, '<=', J$.R(1273, 'numberOfConnections', numberOfConnections, 0), J$.T(1281, 0, 22, false), 0)) ? J$.B(106, '==', J$.U(98, 'typeof', J$.R(1289, 'callback', callback, 0)), J$.T(1297, 'function', 21, false), 0) : J$._()))) {
                                                    var internalCallback = J$.X1(1321, J$.W(1313, 'internalCallback', J$.R(1305, 'callback', callback, 0), internalCallback, 1));
                                                    J$.X1(1345, callback = J$.W(1337, 'callback', J$.T(1329, null, 25, false), callback, 0));
                                                    if (J$.X1(2057, J$.C(96, J$.C(64, J$.B(114, '==', J$.R(1353, 'errorObject', errorObject, 0), J$.T(1361, null, 25, false), 0)) ? J$.R(1369, 'credentialsValid', credentialsValid, 0) : J$._()))) {
                                                        J$.X1(1449, J$.M(1441, J$.G(1393, J$.G(1385, J$.R(1377, 'db', db, 0), 'serverConfig', 0), 'auth', 0), 'add', 0)(J$.T(1401, 'PLAIN', 21, false), J$.G(1417, J$.R(1409, 'db', db, 0), 'databaseName', 0), J$.R(1425, 'username', username, 0), J$.R(1433, 'password', password, 0)));
                                                        J$.X1(1489, J$.F(1481, J$.R(1457, 'internalCallback', internalCallback, 0), 0)(J$.R(1465, 'errorObject', errorObject, 0), J$.T(1473, true, 23, false)));
                                                    } else if (J$.X1(2049, J$.C(88, J$.C(80, J$.C(72, J$.B(122, '>', J$.R(1497, 'numberOfValidConnections', numberOfValidConnections, 0), J$.T(1505, 0, 22, false), 0)) ? J$.B(130, '!=', J$.R(1513, 'numberOfValidConnections', numberOfValidConnections, 0), J$.R(1521, 'numberOfConnections', numberOfConnections, 0), 0) : J$._()) ? J$.R(1529, 'credentialsValid', credentialsValid, 0) : J$._()))) {
                                                        J$.X1(1609, J$.M(1601, J$.G(1553, J$.G(1545, J$.R(1537, 'db', db, 0), 'serverConfig', 0), 'auth', 0), 'add', 0)(J$.T(1561, 'PLAIN', 21, false), J$.G(1577, J$.R(1569, 'db', db, 0), 'databaseName', 0), J$.R(1585, 'username', username, 0), J$.R(1593, 'password', password, 0)));
                                                        J$.X1(1649, J$.F(1641, J$.R(1617, 'internalCallback', internalCallback, 0), 0)(J$.R(1625, 'errorObject', errorObject, 0), J$.T(1633, true, 23, false)));
                                                    } else {
                                                        J$.X1(1689, J$.F(1681, J$.R(1657, 'internalCallback', internalCallback, 0), 0)(J$.R(1665, 'errorObject', errorObject, 0), J$.T(1673, false, 23, false)));
                                                    }
                                                }
                                            } catch (J$e) {
                                                J$.Ex(2073, J$e);
                                            } finally {
                                                if (J$.Fr(2081))
                                                    continue jalangiLabel2107;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 1697)));
                            }
                        } catch (J$e) {
                            J$.Ex(2105, J$e);
                        } finally {
                            if (J$.Fr(2113))
                                continue jalangiLabel2108;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1761), authenticate, 3));
            J$.X1(1937, J$.P(1929, J$.R(1913, 'exports', exports, 2), 'authenticate', J$.R(1921, 'authenticate', authenticate, 1), 0));
        } catch (J$e) {
            J$.Ex(2121, J$e);
        } finally {
            if (J$.Sr(2129)) {
                J$.L();
                continue jalangiLabel2109;
            } else {
                J$.L();
                break jalangiLabel2109;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
