J$.iids = {"8":[5,9,5,33],"9":[1,20,1,27],"10":[5,11,5,32],"16":[9,28,9,47],"17":[1,28,1,32],"18":[5,9,5,33],"24":[10,25,10,49],"25":[1,20,1,33],"26":[9,28,9,47],"32":[11,21,11,49],"33":[1,20,1,33],"34":[11,21,11,49],"40":[12,24,12,50],"41":[1,20,1,33],"42":[12,24,12,50],"48":[23,16,23,103],"49":[2,26,2,38],"50":[14,9,14,38],"56":[23,16,23,181],"57":[2,26,2,45],"58":[15,16,15,44],"64":[25,16,25,54],"65":[2,26,2,45],"66":[15,16,15,56],"72":[23,16,23,181],"73":[2,26,2,45],"74":[23,16,23,55],"80":[19,16,19,52],"81":[3,14,3,21],"82":[23,59,23,103],"88":[15,16,15,56],"89":[3,22,3,28],"90":[23,107,23,181],"96":[14,9,14,38],"97":[3,14,3,29],"98":[34,9,34,25],"104":[34,9,34,25],"105":[3,14,3,36],"106":[39,14,39,28],"112":[39,14,39,43],"113":[3,49,3,56],"114":[39,32,39,43],"120":[39,14,39,43],"121":[3,57,3,63],"122":[40,9,40,46],"128":[40,9,40,60],"129":[3,49,3,64],"130":[40,9,40,50],"136":[51,13,51,37],"137":[3,49,3,73],"138":[40,9,40,60],"144":[49,9,49,56],"145":[3,14,3,36],"146":[42,33,42,63],"152":[64,12,64,50],"153":[3,14,3,36],"154":[49,9,49,46],"160":[75,9,75,37],"161":[3,49,3,73],"162":[49,9,49,56],"168":[80,13,80,16],"169":[3,49,3,73],"170":[51,13,51,37],"176":[88,17,88,20],"177":[4,13,4,20],"178":[52,66,52,96],"184":[90,17,90,39],"185":[5,11,5,15],"186":[57,33,57,63],"192":[112,9,112,30],"193":[5,27,5,32],"194":[64,12,64,50],"201":[6,20,6,25],"202":[75,9,75,23],"209":[6,26,6,30],"210":[75,9,75,37],"217":[6,32,6,43],"218":[90,17,90,39],"225":[6,16,6,44],"226":[112,9,112,30],"233":[6,16,6,44],"234":[128,28,128,38],"241":[6,9,6,45],"249":[7,5,7,9],"257":[7,17,7,21],"265":[7,5,7,21],"273":[7,5,7,22],"281":[8,16,8,20],"289":[8,16,8,20],"297":[8,16,8,20],"305":[9,28,9,39],"313":[9,43,9,47],"321":[9,50,9,52],"329":[9,55,9,66],"337":[9,28,9,66],"345":[9,28,9,66],"353":[10,5,10,9],"361":[10,25,10,37],"369":[10,46,10,47],"377":[10,41,10,49],"385":[10,5,10,49],"393":[10,5,10,50],"401":[11,5,11,9],"409":[11,21,11,37],"417":[11,21,11,41],"425":[11,45,11,49],"433":[11,56,11,64],"441":[11,52,11,66],"449":[11,69,11,85],"457":[11,69,11,89],"465":[11,5,11,89],"473":[11,5,11,90],"481":[12,5,12,9],"489":[12,24,12,40],"497":[12,24,12,42],"505":[12,46,12,50],"513":[12,53,12,54],"521":[12,57,12,73],"529":[12,57,12,75],"537":[12,5,12,75],"545":[12,5,12,76],"553":[13,5,13,9],"561":[13,21,13,27],"569":[13,17,13,29],"577":[13,5,13,29],"585":[13,5,13,30],"593":[14,9,14,25],"601":[14,9,14,30],"609":[14,34,14,38],"617":[15,23,15,39],"625":[15,23,15,44],"633":[15,48,15,56],"641":[16,26,16,32],"649":[16,33,16,49],"657":[16,33,16,54],"665":[16,33,16,61],"673":[16,22,16,62],"681":[16,22,16,62],"689":[16,22,16,62],"697":[17,9,17,15],"705":[17,22,17,38],"713":[17,22,17,43],"721":[17,45,17,53],"729":[17,55,17,56],"737":[17,9,17,57],"739":[17,9,17,21],"745":[17,9,17,58],"753":[18,9,18,13],"761":[18,25,18,31],"769":[18,32,18,38],"777":[18,21,18,39],"785":[18,9,18,39],"793":[18,9,18,40],"801":[19,16,19,21],"809":[19,30,19,46],"817":[19,30,19,51],"825":[19,16,19,52],"827":[19,16,19,29],"833":[20,26,20,32],"841":[20,33,20,49],"849":[20,33,20,54],"857":[20,33,20,61],"865":[20,22,20,62],"873":[20,22,20,62],"881":[20,22,20,62],"889":[21,9,21,15],"897":[21,22,21,38],"905":[21,22,21,43],"913":[21,49,21,51],"921":[21,22,21,52],"923":[21,22,21,48],"929":[21,54,21,62],"937":[21,64,21,65],"945":[21,9,21,66],"947":[21,9,21,21],"953":[21,9,21,67],"961":[22,9,22,13],"969":[22,25,22,31],"977":[22,32,22,38],"985":[22,21,22,39],"993":[22,9,22,39],"1001":[22,9,22,40],"1009":[23,16,23,32],"1017":[23,16,23,37],"1025":[23,49,23,55],"1033":[23,59,23,75],"1041":[23,59,23,80],"1049":[23,59,23,90],"1057":[23,95,23,103],"1065":[23,107,23,113],"1073":[23,107,23,123],"1081":[23,107,23,132],"1089":[23,138,23,154],"1097":[23,138,23,159],"1105":[23,107,23,160],"1107":[23,107,23,137],"1113":[23,164,23,181],"1121":[24,9,24,13],"1129":[24,21,24,37],"1137":[24,21,24,42],"1145":[24,9,24,42],"1153":[24,9,24,43],"1161":[25,16,25,22],"1169":[25,32,25,48],"1177":[25,32,25,53],"1185":[25,16,25,54],"1187":[25,16,25,31],"1193":[27,15,27,20],"1201":[27,21,27,43],"1209":[27,15,27,44],"1217":[27,15,27,44],"1225":[27,9,27,45],"1233":[29,5,29,9],"1241":[29,29,29,30],"1249":[29,5,29,30],"1257":[29,5,29,31],"1265":[4,29,30,2],"1273":[4,29,30,2],"1281":[4,29,30,2],"1289":[4,29,30,2],"1297":[4,29,30,2],"1305":[4,29,30,2],"1313":[4,29,30,2],"1321":[4,29,30,2],"1329":[4,29,30,2],"1337":[4,13,30,2],"1345":[4,13,30,2],"1353":[4,13,30,2],"1361":[31,1,31,6],"1369":[31,1,31,16],"1377":[32,5,32,9],"1385":[32,5,32,14],"1393":[32,21,32,25],"1401":[32,27,32,31],"1409":[32,27,32,48],"1417":[32,5,32,49],"1419":[32,5,32,20],"1425":[32,5,32,50],"1433":[33,5,33,9],"1441":[33,29,33,33],"1449":[33,29,33,38],"1457":[33,29,33,47],"1459":[33,29,33,45],"1465":[33,5,33,47],"1473":[33,5,33,48],"1481":[34,9,34,17],"1489":[34,21,34,25],"1497":[35,16,35,24],"1505":[35,25,35,29],"1513":[35,31,35,35],"1521":[35,16,35,36],"1529":[35,16,35,36],"1537":[35,9,35,37],"1545":[36,12,36,16],"1553":[36,12,36,16],"1561":[36,5,36,17],"1569":[31,25,37,2],"1577":[31,25,37,2],"1585":[31,25,37,2],"1593":[31,25,37,2],"1601":[31,25,37,2],"1609":[31,1,37,2],"1617":[31,1,37,3],"1625":[38,1,38,6],"1633":[38,1,38,16],"1641":[39,14,39,20],"1649":[39,24,39,28],"1657":[39,32,39,38],"1665":[39,42,39,43],"1673":[39,46,39,50],"1681":[39,46,39,59],"1683":[39,46,39,57],"1689":[39,62,39,68],"1697":[39,14,39,68],"1705":[39,5,39,69],"1713":[40,9,40,13],"1721":[40,9,40,22],"1723":[40,9,40,20],"1729":[40,25,40,29],"1737":[40,25,40,46],"1745":[40,49,40,50],"1753":[40,54,40,60],"1761":[41,20,41,24],"1769":[41,20,41,29],"1777":[41,35,41,39],"1785":[41,35,41,56],"1793":[41,58,41,64],"1801":[41,20,41,65],"1803":[41,20,41,34],"1809":[41,20,41,65],"1817":[41,20,41,65],"1825":[42,9,42,13],"1833":[42,33,42,37],"1841":[42,33,42,54],"1849":[42,57,42,63],"1857":[42,9,42,63],"1865":[42,9,42,64],"1873":[43,16,43,20],"1881":[43,16,43,20],"1889":[43,9,43,21],"1897":[45,16,45,18],"1905":[45,16,45,18],"1913":[45,9,45,19],"1921":[38,24,47,2],"1929":[38,24,47,2],"1937":[38,24,47,2],"1945":[38,24,47,2],"1953":[38,24,47,2],"1961":[38,1,47,2],"1969":[38,1,47,3],"1977":[48,1,48,6],"1985":[48,1,48,16],"1993":[49,9,49,13],"2001":[49,9,49,22],"2003":[49,9,49,20],"2009":[49,25,49,29],"2017":[49,25,49,46],"2025":[49,50,49,56],"2033":[50,20,50,24],"2041":[50,20,50,24],"2049":[50,20,50,24],"2057":[51,13,51,17],"2065":[51,13,51,22],"2073":[51,13,51,29],"2081":[51,33,51,37],"2089":[52,20,52,24],"2097":[52,20,52,29],"2105":[52,20,52,36],"2113":[52,43,52,47],"2121":[52,43,52,64],"2129":[52,66,52,70],"2137":[52,66,52,87],"2145":[52,90,52,96],"2153":[52,20,52,97],"2155":[52,20,52,42],"2161":[52,20,52,97],"2169":[52,13,52,98],"2177":[54,24,54,30],"2185":[54,31,54,37],"2193":[54,20,54,38],"2201":[54,20,54,38],"2209":[54,13,54,39],"2217":[55,22,55,26],"2225":[55,22,55,31],"2233":[55,41,55,45],"2241":[55,47,55,51],"2249":[55,47,55,68],"2257":[55,22,55,69],"2259":[55,22,55,40],"2265":[55,22,55,69],"2273":[55,13,55,70],"2281":[57,9,57,13],"2289":[57,33,57,37],"2297":[57,33,57,54],"2305":[57,57,57,63],"2313":[57,9,57,63],"2321":[57,9,57,64],"2329":[58,16,58,20],"2337":[58,16,58,20],"2345":[58,9,58,21],"2353":[60,16,60,20],"2361":[60,16,60,20],"2369":[60,9,60,21],"2377":[48,29,62,2],"2385":[48,29,62,2],"2393":[48,29,62,2],"2401":[48,29,62,2],"2409":[48,29,62,2],"2417":[48,1,62,2],"2425":[48,1,62,3],"2433":[63,1,63,6],"2441":[63,1,63,16],"2449":[64,12,64,16],"2457":[64,12,64,33],"2465":[64,37,64,41],"2473":[64,37,64,50],"2475":[64,37,64,48],"2481":[64,53,64,57],"2489":[64,60,64,65],"2497":[64,12,64,65],"2505":[64,5,64,66],"2513":[63,23,65,2],"2521":[63,23,65,2],"2529":[63,23,65,2],"2537":[63,1,65,2],"2545":[63,1,65,3],"2553":[66,1,66,6],"2561":[66,1,66,16],"2569":[67,12,67,16],"2577":[67,22,67,23],"2585":[67,12,67,24],"2587":[67,12,67,21],"2593":[67,12,67,24],"2601":[67,5,67,25],"2609":[66,24,68,2],"2617":[66,24,68,2],"2625":[66,24,68,2],"2633":[66,1,68,2],"2641":[66,1,68,3],"2649":[69,1,69,6],"2657":[69,1,69,16],"2665":[70,5,70,9],"2673":[70,29,70,30],"2681":[70,5,70,30],"2689":[70,5,70,31],"2697":[71,5,71,9],"2705":[71,21,71,27],"2713":[71,17,71,29],"2721":[71,5,71,29],"2729":[71,5,71,30],"2737":[69,26,72,2],"2745":[69,26,72,2],"2753":[69,26,72,2],"2761":[69,1,72,2],"2769":[69,1,72,3],"2777":[73,1,73,6],"2785":[73,1,73,16],"2793":[74,16,74,20],"2801":[74,16,74,20],"2809":[74,16,74,20],"2817":[75,16,75,23],"2825":[75,27,75,37],"2833":[76,20,76,27],"2841":[76,20,76,27],"2849":[76,9,76,28],"2857":[77,19,77,21],"2865":[77,19,77,21],"2873":[77,9,77,22],"2881":[79,5,79,9],"2889":[79,5,79,14],"2897":[80,13,80,16],"2905":[81,20,81,28],"2913":[81,29,81,32],"2921":[81,20,81,33],"2929":[81,20,81,33],"2937":[81,13,81,34],"2945":[82,28,82,30],"2953":[82,28,82,30],"2961":[82,28,82,30],"2969":[83,26,83,33],"2977":[84,13,84,25],"2985":[84,26,84,30],"2993":[84,34,84,41],"3001":[84,42,84,46],"3009":[84,34,84,47],"3017":[84,13,84,47],"3025":[84,13,84,48],"3033":[83,26,83,33],"3041":[83,9,84,48],"3049":[83,9,84,48],"3057":[85,26,85,30],"3065":[85,26,85,43],"3073":[86,13,86,25],"3081":[86,26,86,30],"3089":[86,34,86,38],"3097":[86,34,86,51],"3105":[86,52,86,56],"3113":[86,34,86,57],"3121":[86,13,86,57],"3129":[86,13,86,58],"3137":[85,26,85,43],"3145":[85,9,86,58],"3153":[85,9,86,58],"3161":[87,9,87,19],"3169":[87,36,87,40],"3177":[87,36,87,49],"3185":[87,27,87,51],"3193":[87,53,87,65],"3201":[88,17,88,20],"3209":[89,24,89,32],"3217":[89,33,89,36],"3225":[89,24,89,37],"3233":[89,24,89,37],"3241":[89,17,89,38],"3249":[90,17,90,21],"3257":[90,17,90,26],"3265":[90,17,90,35],"3267":[90,17,90,33],"3273":[90,38,90,39],"3281":[91,17,91,21],"3289":[92,58,92,62],"3297":[92,35,92,64],"3305":[92,35,92,64],"3313":[92,35,92,64],"3321":[93,38,93,42],"3329":[93,38,93,55],"3337":[94,25,94,32],"3345":[94,33,94,37],"3353":[94,41,94,45],"3361":[94,41,94,58],"3369":[94,59,94,63],"3377":[94,41,94,64],"3385":[94,25,94,64],"3393":[94,25,94,65],"3401":[93,38,93,55],"3409":[93,21,95,22],"3417":[93,21,95,22],"3425":[96,21,96,31],"3433":[96,39,96,50],"3441":[96,52,96,64],"3449":[97,25,97,33],"3457":[97,34,97,37],"3465":[97,39,97,43],"3473":[97,25,97,44],"3481":[97,25,97,45],"3489":[96,66,98,22],"3497":[96,66,98,22],"3505":[96,66,98,22],"3513":[96,66,98,22],"3521":[96,66,98,22],"3529":[96,21,98,23],"3531":[96,21,96,38],"3537":[96,21,98,24],"3545":[91,39,99,18],"3553":[91,39,99,18],"3561":[91,39,99,18],"3569":[91,39,99,18],"3577":[91,39,99,18],"3585":[91,39,99,18],"3593":[91,17,99,19],"3595":[91,17,91,38],"3601":[91,17,99,20],"3609":[101,17,101,25],"3617":[101,26,101,30],"3625":[101,32,101,36],"3633":[101,17,101,37],"3641":[101,17,101,38],"3649":[87,67,103,10],"3657":[87,67,103,10],"3665":[87,67,103,10],"3673":[87,67,103,10],"3681":[87,67,103,10],"3689":[87,9,103,11],"3691":[87,9,87,26],"3697":[87,9,103,12],"3705":[79,31,104,6],"3713":[79,31,104,6],"3721":[79,31,104,6],"3729":[79,31,104,6],"3737":[79,31,104,6],"3745":[79,31,104,6],"3753":[79,31,104,6],"3761":[79,5,104,7],"3763":[79,5,79,30],"3769":[79,5,104,8],"3777":[73,24,105,2],"3785":[73,24,105,2],"3793":[73,24,105,2],"3801":[73,24,105,2],"3809":[73,24,105,2],"3817":[73,24,105,2],"3825":[73,1,105,2],"3833":[73,1,105,3],"3841":[106,1,106,6],"3849":[106,1,106,16],"3857":[108,21,108,25],"3865":[108,21,108,30],"3873":[108,21,108,37],"3881":[109,14,109,18],"3889":[109,14,109,30],"3897":[110,17,110,21],"3905":[110,17,110,26],"3913":[107,23,111,6],"3921":[107,23,111,6],"3929":[107,23,111,6],"3937":[112,9,112,13],"3945":[112,9,112,22],"3953":[112,26,112,30],"3961":[113,9,113,20],"3969":[113,27,113,31],"3977":[113,27,113,40],"3985":[113,9,113,40],"3993":[113,9,113,41],"4001":[114,5,114,13],"4009":[114,14,114,25],"4017":[114,5,114,26],"4025":[114,5,114,27],"4033":[106,36,115,2],"4041":[106,36,115,2],"4049":[106,36,115,2],"4057":[106,36,115,2],"4065":[106,36,115,2],"4073":[106,1,115,2],"4081":[106,1,115,3],"4089":[116,1,116,6],"4097":[116,1,116,16],"4105":[117,12,117,16],"4113":[117,12,117,21],"4121":[117,12,117,30],"4123":[117,12,117,28],"4129":[117,12,117,30],"4137":[117,5,117,31],"4145":[116,26,118,2],"4153":[116,26,118,2],"4161":[116,26,118,2],"4169":[116,1,118,2],"4177":[116,1,118,3],"4185":[119,1,119,7],"4193":[119,23,119,28],"4201":[119,23,119,38],"4209":[119,40,119,50],"4217":[120,17,120,21],"4225":[122,16,122,20],"4233":[122,16,122,37],"4241":[122,16,122,37],"4249":[122,9,122,38],"4257":[121,10,123,6],"4265":[121,10,123,6],"4273":[121,10,123,6],"4281":[125,9,125,13],"4289":[125,33,125,38],"4297":[125,9,125,38],"4305":[125,9,125,39],"4313":[124,10,126,6],"4321":[124,10,126,6],"4329":[124,10,126,6],"4337":[124,10,126,6],"4345":[119,52,127,2],"4353":[119,1,127,3],"4355":[119,1,119,22],"4361":[119,1,127,4],"4369":[128,1,128,6],"4377":[128,28,128,32],"4385":[128,35,128,38],"4393":[128,1,128,38],"4401":[128,1,128,39],"4409":[1,1,128,39],"4417":[1,1,128,39],"4425":[1,1,128,39],"4433":[1,1,128,39],"4441":[1,1,128,39],"4449":[1,1,128,39],"4457":[5,5,6,45],"4465":[9,28,9,66],"4473":[11,21,11,89],"4481":[12,24,12,75],"4489":[25,12,28,6],"4497":[23,12,28,6],"4505":[19,12,28,6],"4513":[15,12,28,6],"4521":[14,5,28,6],"4529":[4,29,30,2],"4537":[4,29,30,2],"4545":[34,5,35,37],"4553":[31,25,37,2],"4561":[31,25,37,2],"4569":[39,14,39,68],"4577":[40,5,46,6],"4585":[38,24,47,2],"4593":[38,24,47,2],"4601":[51,9,56,10],"4609":[49,5,61,6],"4617":[48,29,62,2],"4625":[48,29,62,2],"4633":[64,12,64,65],"4641":[63,23,65,2],"4649":[63,23,65,2],"4657":[66,24,68,2],"4665":[66,24,68,2],"4673":[69,26,72,2],"4681":[69,26,72,2],"4689":[75,5,78,6],"4697":[80,9,81,34],"4705":[88,13,89,38],"4713":[96,66,98,22],"4721":[96,66,98,22],"4729":[91,39,99,18],"4737":[91,39,99,18],"4745":[90,13,102,14],"4753":[87,67,103,10],"4761":[87,67,103,10],"4769":[79,31,104,6],"4777":[79,31,104,6],"4785":[73,24,105,2],"4793":[73,24,105,2],"4801":[112,5,113,41],"4809":[106,36,115,2],"4817":[106,36,115,2],"4825":[116,26,118,2],"4833":[116,26,118,2],"4841":[121,10,123,6],"4849":[121,10,123,6],"4857":[124,10,126,6],"4865":[124,10,126,6],"4873":[1,1,128,39],"4881":[1,1,128,39],"nBranches":48,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/gridfs/chunk.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/gridfs/chunk_jalangi_.js","code":"var Binary = require('bson').Binary,\n  ObjectID = require('bson').ObjectID;\n\n/**\n * Class for representing a single chunk in GridFS.\n *\n * @class\n *\n * @param file {GridStore} The {@link GridStore} object holding this chunk.\n * @param mongoObject {object} The mongo object representation of this chunk.\n *\n * @throws Error when the type of data field for {@link mongoObject} is not\n *     supported. Currently supported types for data field are instances of\n *     {@link String}, {@link Array}, {@link Binary} and {@link Binary}\n *     from the bson module\n *\n * @see Chunk#buildMongoObject\n */\nvar Chunk = exports.Chunk = function(file, mongoObject, writeConcern) {\n  if(!(this instanceof Chunk)) return new Chunk(file, mongoObject);\n\n  this.file = file;\n  var self = this;\n  var mongoObjectFinal = mongoObject == null ? {} : mongoObject;\n  this.writeConcern = writeConcern || {w:1};\n  this.objectId = mongoObjectFinal._id == null ? new ObjectID() : mongoObjectFinal._id;\n  this.chunkNumber = mongoObjectFinal.n == null ? 0 : mongoObjectFinal.n;\n  this.data = new Binary();\n\n  if(mongoObjectFinal.data == null) {\n  } else if(typeof mongoObjectFinal.data == \"string\") {\n    var buffer = new Buffer(mongoObjectFinal.data.length);\n    buffer.write(mongoObjectFinal.data, 'binary', 0);\n    this.data = new Binary(buffer);\n  } else if(Array.isArray(mongoObjectFinal.data)) {\n    var buffer = new Buffer(mongoObjectFinal.data.length);\n    buffer.write(mongoObjectFinal.data.join(''), 'binary', 0);\n    this.data = new Binary(buffer);\n  } else if(mongoObjectFinal.data instanceof Binary || mongoObjectFinal.data._bsontype === 'Binary' || Object.prototype.toString.call(mongoObjectFinal.data) == \"[object Binary]\") {\n    this.data = mongoObjectFinal.data;\n  } else if(Buffer.isBuffer(mongoObjectFinal.data)) {\n  } else {\n    throw Error(\"Illegal chunk format\");\n  }\n  \n  // Update position\n  this.internalPosition = 0;\n};\n\n/**\n * Writes a data to this object and advance the read/write head.\n *\n * @param data {string} the data to write \n * @param callback {function(*, GridStore)} This will be called after executing\n *     this method. The first parameter will contain null and the second one\n *     will contain a reference to this object.\n */\nChunk.prototype.write = function(data, callback) {\n  this.data.write(data, this.internalPosition);\n  this.internalPosition = this.data.length();\n  if(callback != null) return callback(null, this);\n  return this;\n};\n\n/**\n * Reads data and advances the read/write head.\n *\n * @param length {number} The length of data to read.\n *\n * @return {string} The data read if the given length will not exceed the end of\n *     the chunk. Returns an empty String otherwise.\n */\nChunk.prototype.read = function(length) {\n  // Default to full read if no index defined\n  length = length == null || length == 0 ? this.length() : length;\n\n  if(this.length() - this.internalPosition + 1 >= length) {\n    var data = this.data.read(this.internalPosition, length);\n    this.internalPosition = this.internalPosition + length;\n    return data;\n  } else {\n    return '';\n  }\n};\n\nChunk.prototype.readSlice = function(length) {\n  if ((this.length() - this.internalPosition) >= length) {\n    var data = null;\n    if (this.data.buffer != null) { //Pure BSON\n      data = this.data.buffer.slice(this.internalPosition, this.internalPosition + length);\n    } else { //Native BSON\n      data = new Buffer(length);\n      length = this.data.readInto(data, this.internalPosition);\n    }\n    this.internalPosition = this.internalPosition + length;\n    return data;\n  } else {\n    return null;\n  }\n};\n\n/**\n * Checks if the read/write head is at the end.\n *\n * @return {boolean} Whether the read/write head has reached the end of this\n *     chunk.\n */\nChunk.prototype.eof = function() {\n  return this.internalPosition == this.length() ? true : false;\n};\n\n/**\n * Reads one character from the data of this chunk and advances the read/write\n * head.\n *\n * @return {string} a single character data read if the the read/write head is\n *     not at the end of the chunk. Returns an empty String otherwise.\n */\nChunk.prototype.getc = function() {\n  return this.read(1);\n};\n\n/**\n * Clears the contents of the data in this chunk and resets the read/write head\n * to the initial position.\n */\nChunk.prototype.rewind = function() {\n  this.internalPosition = 0;\n  this.data = new Binary();\n};\n\n/**\n * Saves this chunk to the database. Also overwrites existing entries having the\n * same id as this chunk.\n *\n * @param callback {function(*, GridStore)} This will be called after executing\n *     this method. The first parameter will contain null and the second one\n *     will contain a reference to this object.\n */\nChunk.prototype.save = function(options, callback) {\n  var self = this;\n  if(typeof options == 'function') {\n    callback = options;\n    options = {};\n  }\n\n  self.file.chunkCollection(function(err, collection) {\n    if(err) return callback(err);\n\n    // Merge the options\n    var writeOptions = {};\n    for(var name in options) writeOptions[name] = options[name];\n    for(var name in self.writeConcern) writeOptions[name] = self.writeConcern[name];    \n\n    // collection.remove({'_id':self.objectId}, self.writeConcern, function(err, result) {\n    collection.remove({'_id':self.objectId}, writeOptions, function(err, result) {\n      if(err) return callback(err);\n\n      if(self.data.length() > 0) {\n        self.buildMongoObject(function(mongoObject) {\n          var options = {forceServerObjectId:true};\n          for(var name in self.writeConcern) {\n            options[name] = self.writeConcern[name];\n          }\n\n          collection.insert(mongoObject, writeOptions, function(err, collection) {\n            callback(err, self);\n          });\n        });\n      } else {\n        callback(null, self);\n      }\n    });\n  });\n};\n\n/**\n * Creates a mongoDB object representation of this chunk.\n *\n * @param callback {function(Object)} This will be called after executing this \n *     method. The object will be passed to the first parameter and will have\n *     the structure:\n *        \n *        <pre><code>\n *        {\n *          '_id' : , // {number} id for this chunk\n *          'files_id' : , // {number} foreign key to the file collection\n *          'n' : , // {number} chunk number\n *          'data' : , // {bson#Binary} the chunk data itself\n *        }\n *        </code></pre>\n *\n * @see <a href=\"http://www.mongodb.org/display/DOCS/GridFS+Specification#GridFSSpecification-{{chunks}}\">MongoDB GridFS Chunk Object Structure</a>\n */\nChunk.prototype.buildMongoObject = function(callback) {\n  var mongoObject = {\n    'files_id': this.file.fileId,\n    'n': this.chunkNumber,\n    'data': this.data};\n  // If we are saving using a specific ObjectId\n  if(this.objectId != null) mongoObject._id = this.objectId;\n\n  callback(mongoObject);\n};\n\n/**\n * @return {number} the length of the data\n */\nChunk.prototype.length = function() {\n  return this.data.length();\n};\n\n/**\n * The position of the read/write head\n * @name position\n * @lends Chunk#\n * @field\n */\nObject.defineProperty(Chunk.prototype, \"position\", { enumerable: true\n  , get: function () {\n      return this.internalPosition;\n    }\n  , set: function(value) {\n      this.internalPosition = value;\n    }\n});\n\n/**\n * The default chunk size\n * @constant\n */\nChunk.DEFAULT_CHUNK_SIZE = 1024 * 255;\n"};
jalangiLabel2543:
    while (true) {
        try {
            J$.Se(4409, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/gridfs/chunk_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/gridfs/chunk.js');
            J$.N(4417, '__secret__S$', __secret__S$, 0);
            J$.N(4425, '__secret__traits__', __secret__traits__, 0);
            J$.N(4433, 'Binary', Binary, 0);
            J$.N(4441, 'ObjectID', ObjectID, 0);
            J$.N(4449, 'Chunk', Chunk, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var Binary = J$.X1(153, J$.W(145, 'Binary', J$.G(105, J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, 'bson', 21, false)), 'Binary', 0), Binary, 3)), ObjectID = J$.X1(169, J$.W(161, 'ObjectID', J$.G(137, J$.F(129, J$.R(113, 'require', require, 2), 0)(J$.T(121, 'bson', 21, false)), 'ObjectID', 0), ObjectID, 3));
            var Chunk = J$.X1(1353, J$.W(1345, 'Chunk', J$.P(1337, J$.R(177, 'exports', exports, 2), 'Chunk', J$.T(1329, function (file, mongoObject, writeConcern) {
                jalangiLabel2527:
                    while (true) {
                        try {
                            J$.Fe(1265, arguments.callee, this, arguments);
                            arguments = J$.N(1273, 'arguments', arguments, 4);
                            file = J$.N(1281, 'file', file, 4);
                            mongoObject = J$.N(1289, 'mongoObject', mongoObject, 4);
                            writeConcern = J$.N(1297, 'writeConcern', writeConcern, 4);
                            J$.N(1305, 'self', self, 0);
                            J$.N(1313, 'mongoObjectFinal', mongoObjectFinal, 0);
                            J$.N(1321, 'buffer', buffer, 0);
                            if (J$.X1(4457, J$.C(8, J$.U(18, '!', J$.B(10, 'instanceof', J$.R(185, 'this', this, 0), J$.R(193, 'Chunk', Chunk, 1), 0)))))
                                return J$.X1(241, J$.Rt(233, J$.F(225, J$.R(201, 'Chunk', Chunk, 1), 1)(J$.R(209, 'file', file, 0), J$.R(217, 'mongoObject', mongoObject, 0))));
                            J$.X1(273, J$.P(265, J$.R(249, 'this', this, 0), 'file', J$.R(257, 'file', file, 0), 0));
                            var self = J$.X1(297, J$.W(289, 'self', J$.R(281, 'this', this, 0), self, 1));
                            var mongoObjectFinal = J$.X1(345, J$.W(337, 'mongoObjectFinal', J$.X1(4465, J$.C(16, J$.B(26, '==', J$.R(305, 'mongoObject', mongoObject, 0), J$.T(313, null, 25, false), 0))) ? J$.T(321, {}, 11, false) : J$.R(329, 'mongoObject', mongoObject, 0), mongoObjectFinal, 1));
                            J$.X1(393, J$.P(385, J$.R(353, 'this', this, 0), 'writeConcern', J$.C(24, J$.R(361, 'writeConcern', writeConcern, 0)) ? J$._() : J$.T(377, {
                                w: J$.T(369, 1, 22, false)
                            }, 11, false), 0));
                            J$.X1(473, J$.P(465, J$.R(401, 'this', this, 0), 'objectId', J$.X1(4473, J$.C(32, J$.B(34, '==', J$.G(417, J$.R(409, 'mongoObjectFinal', mongoObjectFinal, 0), '_id', 0), J$.T(425, null, 25, false), 0))) ? J$.F(441, J$.R(433, 'ObjectID', ObjectID, 1), 1)() : J$.G(457, J$.R(449, 'mongoObjectFinal', mongoObjectFinal, 0), '_id', 0), 0));
                            J$.X1(545, J$.P(537, J$.R(481, 'this', this, 0), 'chunkNumber', J$.X1(4481, J$.C(40, J$.B(42, '==', J$.G(497, J$.R(489, 'mongoObjectFinal', mongoObjectFinal, 0), 'n', 0), J$.T(505, null, 25, false), 0))) ? J$.T(513, 0, 22, false) : J$.G(529, J$.R(521, 'mongoObjectFinal', mongoObjectFinal, 0), 'n', 0), 0));
                            J$.X1(585, J$.P(577, J$.R(553, 'this', this, 0), 'data', J$.F(569, J$.R(561, 'Binary', Binary, 1), 1)(), 0));
                            if (J$.X1(4521, J$.C(96, J$.B(50, '==', J$.G(601, J$.R(593, 'mongoObjectFinal', mongoObjectFinal, 0), 'data', 0), J$.T(609, null, 25, false), 0)))) {
                            } else if (J$.X1(4513, J$.C(88, J$.B(66, '==', J$.U(58, 'typeof', J$.G(625, J$.R(617, 'mongoObjectFinal', mongoObjectFinal, 0), 'data', 0)), J$.T(633, 'string', 21, false), 0)))) {
                                var buffer = J$.X1(689, J$.W(681, 'buffer', J$.F(673, J$.R(641, 'Buffer', Buffer, 2), 1)(J$.G(665, J$.G(657, J$.R(649, 'mongoObjectFinal', mongoObjectFinal, 0), 'data', 0), 'length', 0)), buffer, 1));
                                J$.X1(745, J$.M(737, J$.R(697, 'buffer', buffer, 0), 'write', 0)(J$.G(713, J$.R(705, 'mongoObjectFinal', mongoObjectFinal, 0), 'data', 0), J$.T(721, 'binary', 21, false), J$.T(729, 0, 22, false)));
                                J$.X1(793, J$.P(785, J$.R(753, 'this', this, 0), 'data', J$.F(777, J$.R(761, 'Binary', Binary, 1), 1)(J$.R(769, 'buffer', buffer, 0)), 0));
                            } else if (J$.X1(4505, J$.C(80, J$.M(825, J$.R(801, 'Array', Array, 2), 'isArray', 0)(J$.G(817, J$.R(809, 'mongoObjectFinal', mongoObjectFinal, 0), 'data', 0))))) {
                                var buffer = J$.X1(881, J$.W(873, 'buffer', J$.F(865, J$.R(833, 'Buffer', Buffer, 2), 1)(J$.G(857, J$.G(849, J$.R(841, 'mongoObjectFinal', mongoObjectFinal, 0), 'data', 0), 'length', 0)), buffer, 1));
                                J$.X1(953, J$.M(945, J$.R(889, 'buffer', buffer, 0), 'write', 0)(J$.M(921, J$.G(905, J$.R(897, 'mongoObjectFinal', mongoObjectFinal, 0), 'data', 0), 'join', 0)(J$.T(913, '', 21, false)), J$.T(929, 'binary', 21, false), J$.T(937, 0, 22, false)));
                                J$.X1(1001, J$.P(993, J$.R(961, 'this', this, 0), 'data', J$.F(985, J$.R(969, 'Binary', Binary, 1), 1)(J$.R(977, 'buffer', buffer, 0)), 0));
                            } else if (J$.X1(4497, J$.C(72, J$.C(56, J$.C(48, J$.B(74, 'instanceof', J$.G(1017, J$.R(1009, 'mongoObjectFinal', mongoObjectFinal, 0), 'data', 0), J$.R(1025, 'Binary', Binary, 1), 0)) ? J$._() : J$.B(82, '===', J$.G(1049, J$.G(1041, J$.R(1033, 'mongoObjectFinal', mongoObjectFinal, 0), 'data', 0), '_bsontype', 0), J$.T(1057, 'Binary', 21, false), 0)) ? J$._() : J$.B(90, '==', J$.M(1105, J$.G(1081, J$.G(1073, J$.R(1065, 'Object', Object, 2), 'prototype', 0), 'toString', 0), 'call', 0)(J$.G(1097, J$.R(1089, 'mongoObjectFinal', mongoObjectFinal, 0), 'data', 0)), J$.T(1113, '[object Binary]', 21, false), 0)))) {
                                J$.X1(1153, J$.P(1145, J$.R(1121, 'this', this, 0), 'data', J$.G(1137, J$.R(1129, 'mongoObjectFinal', mongoObjectFinal, 0), 'data', 0), 0));
                            } else if (J$.X1(4489, J$.C(64, J$.M(1185, J$.R(1161, 'Buffer', Buffer, 2), 'isBuffer', 0)(J$.G(1177, J$.R(1169, 'mongoObjectFinal', mongoObjectFinal, 0), 'data', 0))))) {
                            } else {
                                throw J$.X1(1225, J$.Th(1217, J$.F(1209, J$.R(1193, 'Error', Error, 2), 0)(J$.T(1201, 'Illegal chunk format', 21, false))));
                            }
                            J$.X1(1257, J$.P(1249, J$.R(1233, 'this', this, 0), 'internalPosition', J$.T(1241, 0, 22, false), 0));
                        } catch (J$e) {
                            J$.Ex(4529, J$e);
                        } finally {
                            if (J$.Fr(4537))
                                continue jalangiLabel2527;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1265), 0), Chunk, 3));
            J$.X1(1617, J$.P(1609, J$.G(1369, J$.R(1361, 'Chunk', Chunk, 1), 'prototype', 0), 'write', J$.T(1601, function (data, callback) {
                jalangiLabel2528:
                    while (true) {
                        try {
                            J$.Fe(1569, arguments.callee, this, arguments);
                            arguments = J$.N(1577, 'arguments', arguments, 4);
                            data = J$.N(1585, 'data', data, 4);
                            callback = J$.N(1593, 'callback', callback, 4);
                            J$.X1(1425, J$.M(1417, J$.G(1385, J$.R(1377, 'this', this, 0), 'data', 0), 'write', 0)(J$.R(1393, 'data', data, 0), J$.G(1409, J$.R(1401, 'this', this, 0), 'internalPosition', 0)));
                            J$.X1(1473, J$.P(1465, J$.R(1433, 'this', this, 0), 'internalPosition', J$.M(1457, J$.G(1449, J$.R(1441, 'this', this, 0), 'data', 0), 'length', 0)(), 0));
                            if (J$.X1(4545, J$.C(104, J$.B(98, '!=', J$.R(1481, 'callback', callback, 0), J$.T(1489, null, 25, false), 0))))
                                return J$.X1(1537, J$.Rt(1529, J$.F(1521, J$.R(1497, 'callback', callback, 0), 0)(J$.T(1505, null, 25, false), J$.R(1513, 'this', this, 0))));
                            return J$.X1(1561, J$.Rt(1553, J$.R(1545, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(4553, J$e);
                        } finally {
                            if (J$.Fr(4561))
                                continue jalangiLabel2528;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1569), 0));
            J$.X1(1969, J$.P(1961, J$.G(1633, J$.R(1625, 'Chunk', Chunk, 1), 'prototype', 0), 'read', J$.T(1953, function (length) {
                jalangiLabel2529:
                    while (true) {
                        try {
                            J$.Fe(1921, arguments.callee, this, arguments);
                            arguments = J$.N(1929, 'arguments', arguments, 4);
                            length = J$.N(1937, 'length', length, 4);
                            J$.N(1945, 'data', data, 0);
                            J$.X1(1705, length = J$.W(1697, 'length', J$.X1(4569, J$.C(120, J$.C(112, J$.B(106, '==', J$.R(1641, 'length', length, 0), J$.T(1649, null, 25, false), 0)) ? J$._() : J$.B(114, '==', J$.R(1657, 'length', length, 0), J$.T(1665, 0, 22, false), 0))) ? J$.M(1681, J$.R(1673, 'this', this, 0), 'length', 0)() : J$.R(1689, 'length', length, 0), length, 0));
                            if (J$.X1(4577, J$.C(128, J$.B(138, '>=', J$.B(130, '+', J$.B(122, '-', J$.M(1721, J$.R(1713, 'this', this, 0), 'length', 0)(), J$.G(1737, J$.R(1729, 'this', this, 0), 'internalPosition', 0), 0), J$.T(1745, 1, 22, false), 0), J$.R(1753, 'length', length, 0), 0)))) {
                                var data = J$.X1(1817, J$.W(1809, 'data', J$.M(1801, J$.G(1769, J$.R(1761, 'this', this, 0), 'data', 0), 'read', 0)(J$.G(1785, J$.R(1777, 'this', this, 0), 'internalPosition', 0), J$.R(1793, 'length', length, 0)), data, 1));
                                J$.X1(1865, J$.P(1857, J$.R(1825, 'this', this, 0), 'internalPosition', J$.B(146, '+', J$.G(1841, J$.R(1833, 'this', this, 0), 'internalPosition', 0), J$.R(1849, 'length', length, 0), 0), 0));
                                return J$.X1(1889, J$.Rt(1881, J$.R(1873, 'data', data, 0)));
                            } else {
                                return J$.X1(1913, J$.Rt(1905, J$.T(1897, '', 21, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(4585, J$e);
                        } finally {
                            if (J$.Fr(4593))
                                continue jalangiLabel2529;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1921), 0));
            J$.X1(2425, J$.P(2417, J$.G(1985, J$.R(1977, 'Chunk', Chunk, 1), 'prototype', 0), 'readSlice', J$.T(2409, function (length) {
                jalangiLabel2530:
                    while (true) {
                        try {
                            J$.Fe(2377, arguments.callee, this, arguments);
                            arguments = J$.N(2385, 'arguments', arguments, 4);
                            length = J$.N(2393, 'length', length, 4);
                            J$.N(2401, 'data', data, 0);
                            if (J$.X1(4609, J$.C(144, J$.B(162, '>=', J$.B(154, '-', J$.M(2001, J$.R(1993, 'this', this, 0), 'length', 0)(), J$.G(2017, J$.R(2009, 'this', this, 0), 'internalPosition', 0), 0), J$.R(2025, 'length', length, 0), 0)))) {
                                var data = J$.X1(2049, J$.W(2041, 'data', J$.T(2033, null, 25, false), data, 1));
                                if (J$.X1(4601, J$.C(136, J$.B(170, '!=', J$.G(2073, J$.G(2065, J$.R(2057, 'this', this, 0), 'data', 0), 'buffer', 0), J$.T(2081, null, 25, false), 0)))) {
                                    J$.X1(2169, data = J$.W(2161, 'data', J$.M(2153, J$.G(2105, J$.G(2097, J$.R(2089, 'this', this, 0), 'data', 0), 'buffer', 0), 'slice', 0)(J$.G(2121, J$.R(2113, 'this', this, 0), 'internalPosition', 0), J$.B(178, '+', J$.G(2137, J$.R(2129, 'this', this, 0), 'internalPosition', 0), J$.R(2145, 'length', length, 0), 0)), data, 0));
                                } else {
                                    J$.X1(2209, data = J$.W(2201, 'data', J$.F(2193, J$.R(2177, 'Buffer', Buffer, 2), 1)(J$.R(2185, 'length', length, 0)), data, 0));
                                    J$.X1(2273, length = J$.W(2265, 'length', J$.M(2257, J$.G(2225, J$.R(2217, 'this', this, 0), 'data', 0), 'readInto', 0)(J$.R(2233, 'data', data, 0), J$.G(2249, J$.R(2241, 'this', this, 0), 'internalPosition', 0)), length, 0));
                                }
                                J$.X1(2321, J$.P(2313, J$.R(2281, 'this', this, 0), 'internalPosition', J$.B(186, '+', J$.G(2297, J$.R(2289, 'this', this, 0), 'internalPosition', 0), J$.R(2305, 'length', length, 0), 0), 0));
                                return J$.X1(2345, J$.Rt(2337, J$.R(2329, 'data', data, 0)));
                            } else {
                                return J$.X1(2369, J$.Rt(2361, J$.T(2353, null, 25, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(4617, J$e);
                        } finally {
                            if (J$.Fr(4625))
                                continue jalangiLabel2530;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2377), 0));
            J$.X1(2545, J$.P(2537, J$.G(2441, J$.R(2433, 'Chunk', Chunk, 1), 'prototype', 0), 'eof', J$.T(2529, function () {
                jalangiLabel2531:
                    while (true) {
                        try {
                            J$.Fe(2513, arguments.callee, this, arguments);
                            arguments = J$.N(2521, 'arguments', arguments, 4);
                            return J$.X1(2505, J$.Rt(2497, J$.X1(4633, J$.C(152, J$.B(194, '==', J$.G(2457, J$.R(2449, 'this', this, 0), 'internalPosition', 0), J$.M(2473, J$.R(2465, 'this', this, 0), 'length', 0)(), 0))) ? J$.T(2481, true, 23, false) : J$.T(2489, false, 23, false)));
                        } catch (J$e) {
                            J$.Ex(4641, J$e);
                        } finally {
                            if (J$.Fr(4649))
                                continue jalangiLabel2531;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2513), 0));
            J$.X1(2641, J$.P(2633, J$.G(2561, J$.R(2553, 'Chunk', Chunk, 1), 'prototype', 0), 'getc', J$.T(2625, function () {
                jalangiLabel2532:
                    while (true) {
                        try {
                            J$.Fe(2609, arguments.callee, this, arguments);
                            arguments = J$.N(2617, 'arguments', arguments, 4);
                            return J$.X1(2601, J$.Rt(2593, J$.M(2585, J$.R(2569, 'this', this, 0), 'read', 0)(J$.T(2577, 1, 22, false))));
                        } catch (J$e) {
                            J$.Ex(4657, J$e);
                        } finally {
                            if (J$.Fr(4665))
                                continue jalangiLabel2532;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2609), 0));
            J$.X1(2769, J$.P(2761, J$.G(2657, J$.R(2649, 'Chunk', Chunk, 1), 'prototype', 0), 'rewind', J$.T(2753, function () {
                jalangiLabel2533:
                    while (true) {
                        try {
                            J$.Fe(2737, arguments.callee, this, arguments);
                            arguments = J$.N(2745, 'arguments', arguments, 4);
                            J$.X1(2689, J$.P(2681, J$.R(2665, 'this', this, 0), 'internalPosition', J$.T(2673, 0, 22, false), 0));
                            J$.X1(2729, J$.P(2721, J$.R(2697, 'this', this, 0), 'data', J$.F(2713, J$.R(2705, 'Binary', Binary, 1), 1)(), 0));
                        } catch (J$e) {
                            J$.Ex(4673, J$e);
                        } finally {
                            if (J$.Fr(4681))
                                continue jalangiLabel2533;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2737), 0));
            J$.X1(3833, J$.P(3825, J$.G(2785, J$.R(2777, 'Chunk', Chunk, 1), 'prototype', 0), 'save', J$.T(3817, function (options, callback) {
                jalangiLabel2538:
                    while (true) {
                        try {
                            J$.Fe(3777, arguments.callee, this, arguments);
                            arguments = J$.N(3785, 'arguments', arguments, 4);
                            options = J$.N(3793, 'options', options, 4);
                            callback = J$.N(3801, 'callback', callback, 4);
                            J$.N(3809, 'self', self, 0);
                            var self = J$.X1(2809, J$.W(2801, 'self', J$.R(2793, 'this', this, 0), self, 1));
                            if (J$.X1(4689, J$.C(160, J$.B(210, '==', J$.U(202, 'typeof', J$.R(2817, 'options', options, 0)), J$.T(2825, 'function', 21, false), 0)))) {
                                J$.X1(2849, callback = J$.W(2841, 'callback', J$.R(2833, 'options', options, 0), callback, 0));
                                J$.X1(2873, options = J$.W(2865, 'options', J$.T(2857, {}, 11, false), options, 0));
                            }
                            J$.X1(3769, J$.M(3761, J$.G(2889, J$.R(2881, 'self', self, 0), 'file', 0), 'chunkCollection', 0)(J$.T(3753, function (err, collection) {
                                jalangiLabel2537:
                                    while (true) {
                                        try {
                                            J$.Fe(3705, arguments.callee, this, arguments);
                                            arguments = J$.N(3713, 'arguments', arguments, 4);
                                            err = J$.N(3721, 'err', err, 4);
                                            collection = J$.N(3729, 'collection', collection, 4);
                                            J$.N(3737, 'writeOptions', writeOptions, 0);
                                            J$.N(3745, 'name', name, 0);
                                            if (J$.X1(4697, J$.C(168, J$.R(2897, 'err', err, 0))))
                                                return J$.X1(2937, J$.Rt(2929, J$.F(2921, J$.R(2905, 'callback', callback, 0), 0)(J$.R(2913, 'err', err, 0))));
                                            var writeOptions = J$.X1(2961, J$.W(2953, 'writeOptions', J$.T(2945, {}, 11, false), writeOptions, 1));
                                            for (J$._tm_p in J$.H(3033, J$.R(2969, 'options', options, 0))) {
                                                var name = J$.X1(3049, J$.W(3041, 'name', J$._tm_p, name, 1));
                                                {
                                                    J$.X1(3025, J$.P(3017, J$.R(2977, 'writeOptions', writeOptions, 0), J$.R(2985, 'name', name, 0), J$.G(3009, J$.R(2993, 'options', options, 0), J$.R(3001, 'name', name, 0), 4), 2));
                                                }
                                            }
                                            for (J$._tm_p in J$.H(3137, J$.G(3065, J$.R(3057, 'self', self, 0), 'writeConcern', 0))) {
                                                var name = J$.X1(3153, J$.W(3145, 'name', J$._tm_p, name, 1));
                                                {
                                                    J$.X1(3129, J$.P(3121, J$.R(3073, 'writeOptions', writeOptions, 0), J$.R(3081, 'name', name, 0), J$.G(3113, J$.G(3097, J$.R(3089, 'self', self, 0), 'writeConcern', 0), J$.R(3105, 'name', name, 0), 4), 2));
                                                }
                                            }
                                            J$.X1(3697, J$.M(3689, J$.R(3161, 'collection', collection, 0), 'remove', 0)(J$.T(3185, {
                                                '_id': J$.G(3177, J$.R(3169, 'self', self, 0), 'objectId', 0)
                                            }, 11, false), J$.R(3193, 'writeOptions', writeOptions, 0), J$.T(3681, function (err, result) {
                                                jalangiLabel2536:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(3649, arguments.callee, this, arguments);
                                                            arguments = J$.N(3657, 'arguments', arguments, 4);
                                                            err = J$.N(3665, 'err', err, 4);
                                                            result = J$.N(3673, 'result', result, 4);
                                                            if (J$.X1(4705, J$.C(176, J$.R(3201, 'err', err, 0))))
                                                                return J$.X1(3241, J$.Rt(3233, J$.F(3225, J$.R(3209, 'callback', callback, 0), 0)(J$.R(3217, 'err', err, 0))));
                                                            if (J$.X1(4745, J$.C(184, J$.B(218, '>', J$.M(3265, J$.G(3257, J$.R(3249, 'self', self, 0), 'data', 0), 'length', 0)(), J$.T(3273, 0, 22, false), 0)))) {
                                                                J$.X1(3601, J$.M(3593, J$.R(3281, 'self', self, 0), 'buildMongoObject', 0)(J$.T(3585, function (mongoObject) {
                                                                    jalangiLabel2535:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(3545, arguments.callee, this, arguments);
                                                                                arguments = J$.N(3553, 'arguments', arguments, 4);
                                                                                mongoObject = J$.N(3561, 'mongoObject', mongoObject, 4);
                                                                                J$.N(3569, 'options', options, 0);
                                                                                J$.N(3577, 'name', name, 0);
                                                                                var options = J$.X1(3313, J$.W(3305, 'options', J$.T(3297, {
                                                                                    forceServerObjectId: J$.T(3289, true, 23, false)
                                                                                }, 11, false), options, 1));
                                                                                for (J$._tm_p in J$.H(3401, J$.G(3329, J$.R(3321, 'self', self, 0), 'writeConcern', 0))) {
                                                                                    var name = J$.X1(3417, J$.W(3409, 'name', J$._tm_p, name, 1));
                                                                                    {
                                                                                        {
                                                                                            J$.X1(3393, J$.P(3385, J$.R(3337, 'options', options, 0), J$.R(3345, 'name', name, 0), J$.G(3377, J$.G(3361, J$.R(3353, 'self', self, 0), 'writeConcern', 0), J$.R(3369, 'name', name, 0), 4), 2));
                                                                                        }
                                                                                    }
                                                                                }
                                                                                J$.X1(3537, J$.M(3529, J$.R(3425, 'collection', collection, 0), 'insert', 0)(J$.R(3433, 'mongoObject', mongoObject, 0), J$.R(3441, 'writeOptions', writeOptions, 0), J$.T(3521, function (err, collection) {
                                                                                    jalangiLabel2534:
                                                                                        while (true) {
                                                                                            try {
                                                                                                J$.Fe(3489, arguments.callee, this, arguments);
                                                                                                arguments = J$.N(3497, 'arguments', arguments, 4);
                                                                                                err = J$.N(3505, 'err', err, 4);
                                                                                                collection = J$.N(3513, 'collection', collection, 4);
                                                                                                J$.X1(3481, J$.F(3473, J$.R(3449, 'callback', callback, 0), 0)(J$.R(3457, 'err', err, 0), J$.R(3465, 'self', self, 0)));
                                                                                            } catch (J$e) {
                                                                                                J$.Ex(4713, J$e);
                                                                                            } finally {
                                                                                                if (J$.Fr(4721))
                                                                                                    continue jalangiLabel2534;
                                                                                                else
                                                                                                    return J$.Ra();
                                                                                            }
                                                                                        }
                                                                                }, 12, false, 3489)));
                                                                            } catch (J$e) {
                                                                                J$.Ex(4729, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(4737))
                                                                                    continue jalangiLabel2535;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }, 12, false, 3545)));
                                                            } else {
                                                                J$.X1(3641, J$.F(3633, J$.R(3609, 'callback', callback, 0), 0)(J$.T(3617, null, 25, false), J$.R(3625, 'self', self, 0)));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(4753, J$e);
                                                        } finally {
                                                            if (J$.Fr(4761))
                                                                continue jalangiLabel2536;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 3649)));
                                        } catch (J$e) {
                                            J$.Ex(4769, J$e);
                                        } finally {
                                            if (J$.Fr(4777))
                                                continue jalangiLabel2537;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 3705)));
                        } catch (J$e) {
                            J$.Ex(4785, J$e);
                        } finally {
                            if (J$.Fr(4793))
                                continue jalangiLabel2538;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3777), 0));
            J$.X1(4081, J$.P(4073, J$.G(3849, J$.R(3841, 'Chunk', Chunk, 1), 'prototype', 0), 'buildMongoObject', J$.T(4065, function (callback) {
                jalangiLabel2539:
                    while (true) {
                        try {
                            J$.Fe(4033, arguments.callee, this, arguments);
                            arguments = J$.N(4041, 'arguments', arguments, 4);
                            callback = J$.N(4049, 'callback', callback, 4);
                            J$.N(4057, 'mongoObject', mongoObject, 0);
                            var mongoObject = J$.X1(3929, J$.W(3921, 'mongoObject', J$.T(3913, {
                                'files_id': J$.G(3873, J$.G(3865, J$.R(3857, 'this', this, 0), 'file', 0), 'fileId', 0),
                                'n': J$.G(3889, J$.R(3881, 'this', this, 0), 'chunkNumber', 0),
                                'data': J$.G(3905, J$.R(3897, 'this', this, 0), 'data', 0)
                            }, 11, false), mongoObject, 1));
                            if (J$.X1(4801, J$.C(192, J$.B(226, '!=', J$.G(3945, J$.R(3937, 'this', this, 0), 'objectId', 0), J$.T(3953, null, 25, false), 0))))
                                J$.X1(3993, J$.P(3985, J$.R(3961, 'mongoObject', mongoObject, 0), '_id', J$.G(3977, J$.R(3969, 'this', this, 0), 'objectId', 0), 0));
                            J$.X1(4025, J$.F(4017, J$.R(4001, 'callback', callback, 0), 0)(J$.R(4009, 'mongoObject', mongoObject, 0)));
                        } catch (J$e) {
                            J$.Ex(4809, J$e);
                        } finally {
                            if (J$.Fr(4817))
                                continue jalangiLabel2539;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4033), 0));
            J$.X1(4177, J$.P(4169, J$.G(4097, J$.R(4089, 'Chunk', Chunk, 1), 'prototype', 0), 'length', J$.T(4161, function () {
                jalangiLabel2540:
                    while (true) {
                        try {
                            J$.Fe(4145, arguments.callee, this, arguments);
                            arguments = J$.N(4153, 'arguments', arguments, 4);
                            return J$.X1(4137, J$.Rt(4129, J$.M(4121, J$.G(4113, J$.R(4105, 'this', this, 0), 'data', 0), 'length', 0)()));
                        } catch (J$e) {
                            J$.Ex(4825, J$e);
                        } finally {
                            if (J$.Fr(4833))
                                continue jalangiLabel2540;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4145), 0));
            J$.X1(4361, J$.M(4353, J$.R(4185, 'Object', Object, 2), 'defineProperty', 0)(J$.G(4201, J$.R(4193, 'Chunk', Chunk, 1), 'prototype', 0), J$.T(4209, 'position', 21, false), J$.T(4345, {
                enumerable: J$.T(4217, true, 23, false),
                get: J$.T(4273, function () {
                    jalangiLabel2541:
                        while (true) {
                            try {
                                J$.Fe(4257, arguments.callee, this, arguments);
                                arguments = J$.N(4265, 'arguments', arguments, 4);
                                return J$.X1(4249, J$.Rt(4241, J$.G(4233, J$.R(4225, 'this', this, 0), 'internalPosition', 0)));
                            } catch (J$e) {
                                J$.Ex(4841, J$e);
                            } finally {
                                if (J$.Fr(4849))
                                    continue jalangiLabel2541;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 4257),
                set: J$.T(4337, function (value) {
                    jalangiLabel2542:
                        while (true) {
                            try {
                                J$.Fe(4313, arguments.callee, this, arguments);
                                arguments = J$.N(4321, 'arguments', arguments, 4);
                                value = J$.N(4329, 'value', value, 4);
                                J$.X1(4305, J$.P(4297, J$.R(4281, 'this', this, 0), 'internalPosition', J$.R(4289, 'value', value, 0), 0));
                            } catch (J$e) {
                                J$.Ex(4857, J$e);
                            } finally {
                                if (J$.Fr(4865))
                                    continue jalangiLabel2542;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 4313)
            }, 11, false)));
            J$.X1(4401, J$.P(4393, J$.R(4369, 'Chunk', Chunk, 1), 'DEFAULT_CHUNK_SIZE', J$.B(234, '*', J$.T(4377, 1024, 22, false), J$.T(4385, 255, 22, false), 0), 0));
        } catch (J$e) {
            J$.Ex(4873, J$e);
        } finally {
            if (J$.Sr(4881)) {
                J$.L();
                continue jalangiLabel2543;
            } else {
                J$.L();
                break jalangiLabel2543;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
